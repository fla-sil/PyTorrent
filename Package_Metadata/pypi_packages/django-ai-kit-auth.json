{"info": {"author": "Ambient Innovation", "author_email": "hello@ambient-innovation.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-ai-kit-auth\n==================\n\ndjango-ai-kit-auth bundles everything authentication related and is meant to\nwork seamlessly with the ai-kit-auth react component.\n\nIt provides routes for login, password validation, password reset, registration\nand account verification.\n\nIt also handles email notifications on registration and password reset. Look\nat the template section of the settings to configure the email templates.\n\nIt works with the standard django and with a custom user model as\nlong as its provides an email address.\n\nStandard Django sessions are used for authentification.\n\nIndex\n-----\n\n* `Quick Start`_\n\n* `Api Documentation`_\n    * `Login`_\n    * `Logout`_\n    * `Me`_\n    * `Registration`_\n    * `Initiate Password Reset`_\n    * `Password Reset`_\n    * `Validate Password`_\n    * `Activate User`_\n\n* `Error Codes`_\n\n\nQuick Start\n-----------\n\n1.) Add ``ai_kit_auth`` to your ``INSTALLED_APPS`` like so:\n\n::\n\n    INSTALLED_APPS = (\n        # ...\n        \"rest_framework\",\n        # ...\n        \"ai_kit_auth\",\n        # ...\n        \"corsheaders\",\n    )\n\n``rest_framework`` from the pip package ``djangorestframework`` and ``corsheaders``\nfrom the pip package ``django-cors-headers`` are dependencies and must be\ninstalled.\n\nThe cors headers middleware has to be put into the middleware configuration\nlike so:\n\n::\n\n    MIDDLEWARE = (\n        \"corsheaders.middleware.CorsMiddleware\",\n        # ...\n    )\n\nThis middleware has to be put as high as possible in the middlware list.\n\nFor more details see the\n`django-cors-headers <https://github.com/adamchainz/django-cors-headers>`__\ndocumentation.\n\n2.) Configuration is namespaced unter ``AI_KIT_AUTH`` like so:\n\n::\n\n    AI_KIT_AUTH = {\n        \"FRONTEND\": {\n            \"URL\": \"example.com\",\n        },\n        # ...\n    }\n\nNote that ``FRONTEND.URL`` is a required configuration that does not have a\ndefault. Default configurations are:\n\n::\n\n    DEFAULTS = {\n        # Templates for all the email notifications to the user\n        \"EMAIL_TEMPLATES\": {\n            # is send when the user is created by registration\n            \"USER_CREATED\": {\n                \"TITLE\": \"ai_kit_auth/user_created_title.txt\",\n                \"BODY_PLAINTEXT\": \"ai_kit_auth/user_created_body.txt\",\n                \"BODY_HTML\": \"ai_kit_auth/user_created_body.html\",\n            },\n            # is send to the user after they triggered the forget password\n            # feature. Contains the time limited password reset link\n            \"RESET_PASSWORD\": {\n                \"TITLE\": \"ai_kit_auth/reset_password_title.txt\",\n                \"BODY_PLAINTEXT\": \"ai_kit_auth/reset_password_body.txt\",\n                \"BODY_HTML\": \"ai_kit_auth/reset_password_body.html\",\n            },\n        },\n        # If true, the user has to specify a username in addition to the\n        # mail address\n        \"USERNAME_REQUIRED\": False,\n        # information about the frontend, mostly the used routes. In most cases\n        # the defaults are fine, but can be changed for localisation of the\n        # urls.\n        # Only the actual frontend url is unset and you will get an\n        # configuration error if you don't specify it.\n        \"FRONTEND\": {\n            \"URL\": \"\",\n            \"ACTIVATION_ROUTE\": \"/auth/activation/\",\n            \"RESET_PW_ROUTE\": \"/auth/reset_password/\",\n        },\n    }\n\nIn addition to that some general configuration is required:\n\n::\n\n    CORS_ORIGIN_WHITELIST = [\n        \"http://localhost:8000\",\n        \"http://localhost:3000\",\n        # add other front-end backend urls\n    ]\n\n    CORS_ALLOW_CREDENTIALS = True\n\n    CSRF_USE_SESSIONS = True\n\n    CSRF_TRUSTED_ORIGINS = [\n        \"http://localhost:8000\",\n        \"http://localhost:3000\",\n        # add other front-end backend urls\n    ]\n\nThe ``CSRF_USE_SESSIONS`` configuration doesn't need to be set to enable\nAi-Kit-Auth, but in prevents problems with double logins, for example\nif a user is logged into the Admin interface and also logged in the\nfrontend. Django saves CSRF tokens in cookies by default.\n\n\n3.) Include the routes in your ``urls.py``:\n\n::\n\n    urlpatterns = [\n        # ...\n        path(\"api/v1/auth/\", include(\"ai_kit_auth.urls\"))\n        # ...\n    ]\n\n4.) Run ``python manage.py migrate``. Only required if you add the\ndependencies\nto your project since this package does not define models on its own.\n\n\nApi Documentation\n=================\n\nOf course you don't have to use the front and backend components in tandem.\nBut if you start to mix and match, you have to speak to the Rest-API directly.\n\nTo do that, here are the endpoints:\n\n\nLogin\n------\n\nPOST ``../login/``\n\nvisibility: everyone\n\nexpects\n\n::\n\n    {\n        ident: <username or email>,\n        password: <the password>\n    }\n\n\nboth fields are required. The endpoint answers with the status code 200\nand\n\n::\n\n    {\n        user: {\n            username: <the username>,\n            email: <the email address>,\n            id: <the internal id>,\n        },\n        csrf: <csrf token>\n    }\n\n\nError cases:\n\nField specific errors are given back like so:\n\n::\n\n    {\n        <field name>: <error code>\n    }\n\n\nfields are ``ident`` or ``password`` and the only possible error code is ``blank``.\n\nErrors that are not field specific are mapped to the key ``non_field_errors``.\nCurrently, the only error code that can be returned here is ``invalid_credentials``.\n\n\nLogout\n------\n\nPOST ``../logout/``\n\nvisibility: authenticated users\n\nexpects\n\n::\n\n    {}\n\n\nand answers with status code 200 and\n\n::\n\n    {\n        csrf: <csrf token>\n    }\n\n\nAt least when the csrf token is stored via session storage, it changes\nat logout and you have to update it in the frontend.\n\n\nMe\n-----------\n\nGET ``../me/``\n\nvisibility: everyone\n\nThe answer is very similar to login: status code 200 and\n\n::\n\n    {\n        user: null | {\n            username: <the username>,\n            email: <the email address>,\n            id: <the internal id>,\n        },\n        csrf: <csrf token>\n    }\n\n\nThe only difference is that me is reachable for anonymous users that\nare not (yet) logged in. In that case, the user property is set to\n``null``.\n\n\nRegistration\n============\n\nPOST ``register``\n\n\nvisibility: everyone\n\nexpects\n\n::\n\n    {\n        \"username\": <username, only if the USERNAME_REQUIRED option is set>,\n        \"email\": <email>,\n        \"password\": <password>,\n    }\n\n\nand answers with status code 201 and\n\n::\n\n    {}\n\nor errors out with status code 400 because fields is missing or the password\nvalidation fails.\n\n\nInitiate Password Reset\n=======================\n\nPOST ``send_pw_reset_email``\n\nvisibility: everyone\n\nexpects\n\n::\n\n    {\n        \"email\": <email>,\n    }\n\n\nand answers with status code 200\n\n::\n\n    {}\n\nThis endpoint never gives back errors to not give out unnecessary information.\n\nPassword Reset\n==============\n\nPOST ``reset_password``\n\n\nvisibility: everyone\n\nexpects\n\n::\n\n    {\n        \"ident\": <identifer for the user, from the reset link>,\n        \"token\": <reset token, from the reset link>,\n        \"password\": <password>,\n    }\n\n\nand answers with status code 200 and\n\n::\n\n    {}\n\nOn error, status code 400 is given back and the errors can be missing fields,\n``reset_password_link_invalid`` for invalid identifiers or token or the standard\ninvalid password errors.\n\nValidate Password\n=================\n\nPOST ``validate_password``\n\n\nvisibility: everyone\n\nexpects\n\n::\n\n    {\n        \"ident\": <identifier>,\n        \"username\": <username>,\n        \"email\": <email>,\n        \"password\": <password>,\n    }\n\nyou have to supply either ident or both username and email if\n``USERNAME_REQUIRED`` is configured. Otherwise you have to supply either ident\nor email.\n\n\nand answers with status code 200 and\n\n::\n\n    {}\n\nif the password respects all the configured password validators or it errors out\non status code 400 and gives back the respective error code to indicate what\nrule was violated.\n\nActivate User\n=============\n\nPOST ``activate_email``\n\nexpects\n\n::\n\n    {\n        \"ident\": <identifer for the user, from the reset link>,\n        \"token\": <reset token, from the reset link>,\n    }\n\n\nand answers with status code 200 and\n\n::\n\n    {}\n\nor errors out on status code 400 with the ``activation_link_invalid`` error\ncode.\n\nError Codes\n-----------\n\nThe backend never sends user facing error messages, but general error codes.\nInternationalisation happens in the frontend.\n\n+---------------------------+--------------------------------------------------+\n| error code                | possible user facing message                     |\n+===========================+==================================================+\n| `blank`                   | This field may not be blank.                     |\n+---------------------------+--------------------------------------------------+\n| `username_unique`         | This username has already been taken.            |\n+---------------------------+--------------------------------------------------+\n| `password_too_short`      | Password too short, it should contain at least 8 |\n|                           | characters.                                      |\n+---------------------------+--------------------------------------------------+\n| `password_too_similar`    | Password too similar to your username or email   |\n|                           | address.                                         |\n+---------------------------+--------------------------------------------------+\n| `password_too_common`     | The password you've entered is too common and    |\n|                           | thus unsafe. Please try to think of something    |\n|                           | else.                                            |\n+---------------------------+--------------------------------------------------+\n| `passwords_not_identical` | Both passwords entered are not identical.        |\n+---------------------------+--------------------------------------------------+\n| `invalid_credentials`     | The combination of username (or email, depending |\n|                           | on configuration) and password is invalid. Please|\n|                           | try again.                                       |\n+---------------------------+--------------------------------------------------+\n| `activation_link_invalid` | The activation link you tried to use is invalid. |\n|                           | This may be due to a typo, or because it has     |\n|                           | been used already.                               |\n+---------------------------+--------------------------------------------------+\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.ambient-innovation.com/ai/ai.kit/authentication", "keywords": "", "license": "BSD-3-Clause  # Example license", "maintainer": "", "maintainer_email": "", "name": "django-ai-kit-auth", "package_url": "https://pypi.org/project/django-ai-kit-auth/", "platform": "", "project_url": "https://pypi.org/project/django-ai-kit-auth/", "project_urls": {"Homepage": "https://gitlab.ambient-innovation.com/ai/ai.kit/authentication"}, "release_url": "https://pypi.org/project/django-ai-kit-auth/0.3.1/", "requires_dist": ["Django (>=3.0.0)"], "requires_python": "", "summary": "A Django package for account and authentication managment", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-ai-kit-auth\">\n<h2>django-ai-kit-auth</h2>\n<p>django-ai-kit-auth bundles everything authentication related and is meant to\nwork seamlessly with the ai-kit-auth react component.</p>\n<p>It provides routes for login, password validation, password reset, registration\nand account verification.</p>\n<p>It also handles email notifications on registration and password reset. Look\nat the template section of the settings to configure the email templates.</p>\n<p>It works with the standard django and with a custom user model as\nlong as its provides an email address.</p>\n<p>Standard Django sessions are used for authentification.</p>\n<div id=\"index\">\n<h3>Index</h3>\n<ul>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick Start</a></li>\n<li><dl>\n<dt><a href=\"#api-documentation\" rel=\"nofollow\">Api Documentation</a></dt>\n<dd><ul>\n<li><a href=\"#login\" rel=\"nofollow\">Login</a></li>\n<li><a href=\"#logout\" rel=\"nofollow\">Logout</a></li>\n<li><a href=\"#me\" rel=\"nofollow\">Me</a></li>\n<li><a href=\"#registration\" rel=\"nofollow\">Registration</a></li>\n<li><a href=\"#initiate-password-reset\" rel=\"nofollow\">Initiate Password Reset</a></li>\n<li><a href=\"#password-reset\" rel=\"nofollow\">Password Reset</a></li>\n<li><a href=\"#validate-password\" rel=\"nofollow\">Validate Password</a></li>\n<li><a href=\"#activate-user\" rel=\"nofollow\">Activate User</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><a href=\"#error-codes\" rel=\"nofollow\">Error Codes</a></li>\n</ul>\n</div>\n<div id=\"quick-start\">\n<h3>Quick Start</h3>\n<p>1.) Add <tt>ai_kit_auth</tt> to your <tt>INSTALLED_APPS</tt> like so:</p>\n<pre>INSTALLED_APPS = (\n    # ...\n    \"rest_framework\",\n    # ...\n    \"ai_kit_auth\",\n    # ...\n    \"corsheaders\",\n)\n</pre>\n<p><tt>rest_framework</tt> from the pip package <tt>djangorestframework</tt> and <tt>corsheaders</tt>\nfrom the pip package <tt><span class=\"pre\">django-cors-headers</span></tt> are dependencies and must be\ninstalled.</p>\n<p>The cors headers middleware has to be put into the middleware configuration\nlike so:</p>\n<pre>MIDDLEWARE = (\n    \"corsheaders.middleware.CorsMiddleware\",\n    # ...\n)\n</pre>\n<p>This middleware has to be put as high as possible in the middlware list.</p>\n<p>For more details see the\n<a href=\"https://github.com/adamchainz/django-cors-headers\" rel=\"nofollow\">django-cors-headers</a>\ndocumentation.</p>\n<p>2.) Configuration is namespaced unter <tt>AI_KIT_AUTH</tt> like so:</p>\n<pre>AI_KIT_AUTH = {\n    \"FRONTEND\": {\n        \"URL\": \"example.com\",\n    },\n    # ...\n}\n</pre>\n<p>Note that <tt>FRONTEND.URL</tt> is a required configuration that does not have a\ndefault. Default configurations are:</p>\n<pre>DEFAULTS = {\n    # Templates for all the email notifications to the user\n    \"EMAIL_TEMPLATES\": {\n        # is send when the user is created by registration\n        \"USER_CREATED\": {\n            \"TITLE\": \"ai_kit_auth/user_created_title.txt\",\n            \"BODY_PLAINTEXT\": \"ai_kit_auth/user_created_body.txt\",\n            \"BODY_HTML\": \"ai_kit_auth/user_created_body.html\",\n        },\n        # is send to the user after they triggered the forget password\n        # feature. Contains the time limited password reset link\n        \"RESET_PASSWORD\": {\n            \"TITLE\": \"ai_kit_auth/reset_password_title.txt\",\n            \"BODY_PLAINTEXT\": \"ai_kit_auth/reset_password_body.txt\",\n            \"BODY_HTML\": \"ai_kit_auth/reset_password_body.html\",\n        },\n    },\n    # If true, the user has to specify a username in addition to the\n    # mail address\n    \"USERNAME_REQUIRED\": False,\n    # information about the frontend, mostly the used routes. In most cases\n    # the defaults are fine, but can be changed for localisation of the\n    # urls.\n    # Only the actual frontend url is unset and you will get an\n    # configuration error if you don't specify it.\n    \"FRONTEND\": {\n        \"URL\": \"\",\n        \"ACTIVATION_ROUTE\": \"/auth/activation/\",\n        \"RESET_PW_ROUTE\": \"/auth/reset_password/\",\n    },\n}\n</pre>\n<p>In addition to that some general configuration is required:</p>\n<pre>CORS_ORIGIN_WHITELIST = [\n    \"http://localhost:8000\",\n    \"http://localhost:3000\",\n    # add other front-end backend urls\n]\n\nCORS_ALLOW_CREDENTIALS = True\n\nCSRF_USE_SESSIONS = True\n\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:8000\",\n    \"http://localhost:3000\",\n    # add other front-end backend urls\n]\n</pre>\n<p>The <tt>CSRF_USE_SESSIONS</tt> configuration doesn\u2019t need to be set to enable\nAi-Kit-Auth, but in prevents problems with double logins, for example\nif a user is logged into the Admin interface and also logged in the\nfrontend. Django saves CSRF tokens in cookies by default.</p>\n<p>3.) Include the routes in your <tt>urls.py</tt>:</p>\n<pre>urlpatterns = [\n    # ...\n    path(\"api/v1/auth/\", include(\"ai_kit_auth.urls\"))\n    # ...\n]\n</pre>\n<p>4.) Run <tt>python manage.py migrate</tt>. Only required if you add the\ndependencies\nto your project since this package does not define models on its own.</p>\n</div>\n</div>\n<div id=\"api-documentation\">\n<h2>Api Documentation</h2>\n<p>Of course you don\u2019t have to use the front and backend components in tandem.\nBut if you start to mix and match, you have to speak to the Rest-API directly.</p>\n<p>To do that, here are the endpoints:</p>\n<div id=\"login\">\n<h3>Login</h3>\n<p>POST <tt><span class=\"pre\">../login/</span></tt></p>\n<p>visibility: everyone</p>\n<p>expects</p>\n<pre>{\n    ident: &lt;username or email&gt;,\n    password: &lt;the password&gt;\n}\n</pre>\n<p>both fields are required. The endpoint answers with the status code 200\nand</p>\n<pre>{\n    user: {\n        username: &lt;the username&gt;,\n        email: &lt;the email address&gt;,\n        id: &lt;the internal id&gt;,\n    },\n    csrf: &lt;csrf token&gt;\n}\n</pre>\n<p>Error cases:</p>\n<p>Field specific errors are given back like so:</p>\n<pre>{\n    &lt;field name&gt;: &lt;error code&gt;\n}\n</pre>\n<p>fields are <tt>ident</tt> or <tt>password</tt> and the only possible error code is <tt>blank</tt>.</p>\n<p>Errors that are not field specific are mapped to the key <tt>non_field_errors</tt>.\nCurrently, the only error code that can be returned here is <tt>invalid_credentials</tt>.</p>\n</div>\n<div id=\"logout\">\n<h3>Logout</h3>\n<p>POST <tt><span class=\"pre\">../logout/</span></tt></p>\n<p>visibility: authenticated users</p>\n<p>expects</p>\n<pre>{}\n</pre>\n<p>and answers with status code 200 and</p>\n<pre>{\n    csrf: &lt;csrf token&gt;\n}\n</pre>\n<p>At least when the csrf token is stored via session storage, it changes\nat logout and you have to update it in the frontend.</p>\n</div>\n<div id=\"me\">\n<h3>Me</h3>\n<p>GET <tt><span class=\"pre\">../me/</span></tt></p>\n<p>visibility: everyone</p>\n<p>The answer is very similar to login: status code 200 and</p>\n<pre>{\n    user: null | {\n        username: &lt;the username&gt;,\n        email: &lt;the email address&gt;,\n        id: &lt;the internal id&gt;,\n    },\n    csrf: &lt;csrf token&gt;\n}\n</pre>\n<p>The only difference is that me is reachable for anonymous users that\nare not (yet) logged in. In that case, the user property is set to\n<tt>null</tt>.</p>\n</div>\n</div>\n<div id=\"registration\">\n<h2>Registration</h2>\n<p>POST <tt>register</tt></p>\n<p>visibility: everyone</p>\n<p>expects</p>\n<pre>{\n    \"username\": &lt;username, only if the USERNAME_REQUIRED option is set&gt;,\n    \"email\": &lt;email&gt;,\n    \"password\": &lt;password&gt;,\n}\n</pre>\n<p>and answers with status code 201 and</p>\n<pre>{}\n</pre>\n<p>or errors out with status code 400 because fields is missing or the password\nvalidation fails.</p>\n</div>\n<div id=\"initiate-password-reset\">\n<h2>Initiate Password Reset</h2>\n<p>POST <tt>send_pw_reset_email</tt></p>\n<p>visibility: everyone</p>\n<p>expects</p>\n<pre>{\n    \"email\": &lt;email&gt;,\n}\n</pre>\n<p>and answers with status code 200</p>\n<pre>{}\n</pre>\n<p>This endpoint never gives back errors to not give out unnecessary information.</p>\n</div>\n<div id=\"password-reset\">\n<h2>Password Reset</h2>\n<p>POST <tt>reset_password</tt></p>\n<p>visibility: everyone</p>\n<p>expects</p>\n<pre>{\n    \"ident\": &lt;identifer for the user, from the reset link&gt;,\n    \"token\": &lt;reset token, from the reset link&gt;,\n    \"password\": &lt;password&gt;,\n}\n</pre>\n<p>and answers with status code 200 and</p>\n<pre>{}\n</pre>\n<p>On error, status code 400 is given back and the errors can be missing fields,\n<tt>reset_password_link_invalid</tt> for invalid identifiers or token or the standard\ninvalid password errors.</p>\n</div>\n<div id=\"validate-password\">\n<h2>Validate Password</h2>\n<p>POST <tt>validate_password</tt></p>\n<p>visibility: everyone</p>\n<p>expects</p>\n<pre>{\n    \"ident\": &lt;identifier&gt;,\n    \"username\": &lt;username&gt;,\n    \"email\": &lt;email&gt;,\n    \"password\": &lt;password&gt;,\n}\n</pre>\n<p>you have to supply either ident or both username and email if\n<tt>USERNAME_REQUIRED</tt> is configured. Otherwise you have to supply either ident\nor email.</p>\n<p>and answers with status code 200 and</p>\n<pre>{}\n</pre>\n<p>if the password respects all the configured password validators or it errors out\non status code 400 and gives back the respective error code to indicate what\nrule was violated.</p>\n</div>\n<div id=\"activate-user\">\n<h2>Activate User</h2>\n<p>POST <tt>activate_email</tt></p>\n<p>expects</p>\n<pre>{\n    \"ident\": &lt;identifer for the user, from the reset link&gt;,\n    \"token\": &lt;reset token, from the reset link&gt;,\n}\n</pre>\n<p>and answers with status code 200 and</p>\n<pre>{}\n</pre>\n<p>or errors out on status code 400 with the <tt>activation_link_invalid</tt> error\ncode.</p>\n<div id=\"error-codes\">\n<h3>Error Codes</h3>\n<p>The backend never sends user facing error messages, but general error codes.\nInternationalisation happens in the frontend.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>error code</th>\n<th>possible user facing message</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><cite>blank</cite></td>\n<td>This field may not be blank.</td>\n</tr>\n<tr><td><cite>username_unique</cite></td>\n<td>This username has already been taken.</td>\n</tr>\n<tr><td><cite>password_too_short</cite></td>\n<td>Password too short, it should contain at least 8\ncharacters.</td>\n</tr>\n<tr><td><cite>password_too_similar</cite></td>\n<td>Password too similar to your username or email\naddress.</td>\n</tr>\n<tr><td><cite>password_too_common</cite></td>\n<td>The password you\u2019ve entered is too common and\nthus unsafe. Please try to think of something\nelse.</td>\n</tr>\n<tr><td><cite>passwords_not_identical</cite></td>\n<td>Both passwords entered are not identical.</td>\n</tr>\n<tr><td><cite>invalid_credentials</cite></td>\n<td>The combination of username (or email, depending\non configuration) and password is invalid. Please\ntry again.</td>\n</tr>\n<tr><td><cite>activation_link_invalid</cite></td>\n<td>The activation link you tried to use is invalid.\nThis may be due to a typo, or because it has\nbeen used already.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6895933, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ef523fe4a4e984ab2ea16663dbd74a74", "sha256": "42a9aa855f4fd23834e4dd12c0b151c7e394de0ab7112ef293f00fabfdf28684"}, "downloads": -1, "filename": "django-ai-kit-auth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ef523fe4a4e984ab2ea16663dbd74a74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3180, "upload_time": "2020-02-25T10:01:22", "upload_time_iso_8601": "2020-02-25T10:01:22.322299Z", "url": "https://files.pythonhosted.org/packages/7b/64/6d1a83a047624782c7443ccdf62af6ebf99bff5384782832ec6eeaee6557/django-ai-kit-auth-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "195dab371a59ba861fbb32ab537e02fd", "sha256": "5c33c70248a8f63cec647ba319630eb97938b35a4382a44647460fbcd6f3bb18"}, "downloads": -1, "filename": "django_ai_kit_auth-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "195dab371a59ba861fbb32ab537e02fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5074, "upload_time": "2020-02-26T11:45:26", "upload_time_iso_8601": "2020-02-26T11:45:26.692597Z", "url": "https://files.pythonhosted.org/packages/fa/f0/8d343466aeec77f239d9362414a561edd96ecda0cda98ac2810c73bee7ce/django_ai_kit_auth-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ba5e9d450a57bb8e40e8c2049c1a453", "sha256": "610b5c5d284865016cbcd7182a458d2106348f5961fb2b3843a29703df91dc5a"}, "downloads": -1, "filename": "django-ai-kit-auth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8ba5e9d450a57bb8e40e8c2049c1a453", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3181, "upload_time": "2020-02-26T11:45:27", "upload_time_iso_8601": "2020-02-26T11:45:27.861213Z", "url": "https://files.pythonhosted.org/packages/17/4c/cde8b2cabdd88cac49f40cc2bf174a869d599fa527d717af0788b4893907/django-ai-kit-auth-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6f97d66b66048fd97ccc49e47461928f", "sha256": "47010edf9834bf0c1b283408823f0ae06f45176a3a542ce95f7678e0911738f8"}, "downloads": -1, "filename": "django_ai_kit_auth-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6f97d66b66048fd97ccc49e47461928f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5168, "upload_time": "2020-03-04T15:28:58", "upload_time_iso_8601": "2020-03-04T15:28:58.787975Z", "url": "https://files.pythonhosted.org/packages/81/dd/55fb3c66b51bf145b8d663357cf6b147a49cdcbb2dab6f521d1aab401913/django_ai_kit_auth-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b48d143f526f52dfb3b1cb8fdf9bf6e", "sha256": "dfb4dee17d75479627627237f2381c4774c0984ecb65cb61cf866f4e6932a204"}, "downloads": -1, "filename": "django-ai-kit-auth-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7b48d143f526f52dfb3b1cb8fdf9bf6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4207, "upload_time": "2020-03-04T15:28:59", "upload_time_iso_8601": "2020-03-04T15:28:59.712902Z", "url": "https://files.pythonhosted.org/packages/01/db/7c6652f89bd176bfb85600056da50419ba2f1e654e1969ee5065e79ec4ab/django-ai-kit-auth-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "288f7f1cf89f0c88d37b21f6956a3a92", "sha256": "93a96ebb38f4bcf6450a36ed5083330cbe9ebf91de778b68580739b50bd95025"}, "downloads": -1, "filename": "django_ai_kit_auth-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "288f7f1cf89f0c88d37b21f6956a3a92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5168, "upload_time": "2020-03-05T08:11:48", "upload_time_iso_8601": "2020-03-05T08:11:48.392495Z", "url": "https://files.pythonhosted.org/packages/29/ab/8f97afb7d8fbd35be60d42f37dc5ee78283fdd3b9b06348c98eaf636ab3c/django_ai_kit_auth-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4781d438948493d068968f467a4d096d", "sha256": "df345eb6a942411f4931e88b2c8c7437f6aa4a1abd3560cc74752cd741b23eac"}, "downloads": -1, "filename": "django-ai-kit-auth-0.1.4.tar.gz", "has_sig": false, "md5_digest": "4781d438948493d068968f467a4d096d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4208, "upload_time": "2020-03-05T08:11:49", "upload_time_iso_8601": "2020-03-05T08:11:49.530275Z", "url": "https://files.pythonhosted.org/packages/5a/02/c82df3ce860b63da915fc6a57be35b9bce9f52d857934fb35f240098a138/django-ai-kit-auth-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "292516a026907c1ee7ac5bc563647ebe", "sha256": "cb66bea44585823031cd0c71b16064cd9f445f4175af6923f85ca9b6c7a3c7bd"}, "downloads": -1, "filename": "django_ai_kit_auth-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "292516a026907c1ee7ac5bc563647ebe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8867, "upload_time": "2020-03-05T15:44:29", "upload_time_iso_8601": "2020-03-05T15:44:29.346785Z", "url": "https://files.pythonhosted.org/packages/6d/44/cb519624f2e981295bd644f4a671a7a1f68caa387d7bc34888cbeee03749/django_ai_kit_auth-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b4afd9830cc34cfc8c6445e24879eb6", "sha256": "3aabecc0455cfce619096a6631459771c77ba5fd8b3ea8adf03c2444a6d326f1"}, "downloads": -1, "filename": "django-ai-kit-auth-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2b4afd9830cc34cfc8c6445e24879eb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6243, "upload_time": "2020-03-05T15:44:30", "upload_time_iso_8601": "2020-03-05T15:44:30.891167Z", "url": "https://files.pythonhosted.org/packages/be/a2/261682403d43fc17c3c930aedfac4e72d20f66638a26184a072e306d3471/django-ai-kit-auth-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9ebac1c42a96c49004adf2bd73d3e0e8", "sha256": "4b8230ec1f1536cd5e0186c00e02d2c5a5b227b65a7dad6e47348426d27dc4c8"}, "downloads": -1, "filename": "django_ai_kit_auth-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ebac1c42a96c49004adf2bd73d3e0e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15890, "upload_time": "2020-03-18T16:51:22", "upload_time_iso_8601": "2020-03-18T16:51:22.768823Z", "url": "https://files.pythonhosted.org/packages/79/f9/0272bb55f6cd2f7aea0141b114e859e74a1e4ba7092b55441965b1c72d4a/django_ai_kit_auth-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33ada5a46428799ce0611a588ff3c5ca", "sha256": "cdeb524651af0ca6b8f66b8713e42dbf7382c55fdaf97d9c4e288babc60280a1"}, "downloads": -1, "filename": "django-ai-kit-auth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "33ada5a46428799ce0611a588ff3c5ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13225, "upload_time": "2020-03-18T16:51:24", "upload_time_iso_8601": "2020-03-18T16:51:24.692220Z", "url": "https://files.pythonhosted.org/packages/b3/2d/46ec99ce9f0cc75d753ad87fda31a6c782abbe11a15d7a8acd84c50222a1/django-ai-kit-auth-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c89c2e17836d8d7724ca52d9a459f85a", "sha256": "ee173f142219833a56935efd4a879b438d3b3bcc0b5120c995538fab3aaed203"}, "downloads": -1, "filename": "django_ai_kit_auth-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c89c2e17836d8d7724ca52d9a459f85a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20807, "upload_time": "2020-03-18T18:32:42", "upload_time_iso_8601": "2020-03-18T18:32:42.448336Z", "url": "https://files.pythonhosted.org/packages/60/f4/9958abed384ad5ab1a6d0ee7aebfbffd5dfc1e891a99decfc03a0e23fb1a/django_ai_kit_auth-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bfcc48b31647e350947aef6f2643d3c", "sha256": "d4ce3558451032ffe46d5938c4eee9810d8a1b098bf336b94396a1b4791a3b9c"}, "downloads": -1, "filename": "django-ai-kit-auth-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2bfcc48b31647e350947aef6f2643d3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16516, "upload_time": "2020-03-18T18:32:43", "upload_time_iso_8601": "2020-03-18T18:32:43.763034Z", "url": "https://files.pythonhosted.org/packages/c8/f5/9c6123e0289d14d5e6cc98401bcb5c59824467b6952cd4fda7885875cf31/django-ai-kit-auth-0.2.1.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f78ea7eb7c58686bc832b5b012ba2d70", "sha256": "477d41b33071b9090d65e9bfa4abd861f02e6931bc9130bcb263e712b24b3e80"}, "downloads": -1, "filename": "django_ai_kit_auth-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f78ea7eb7c58686bc832b5b012ba2d70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24321, "upload_time": "2020-03-27T12:56:47", "upload_time_iso_8601": "2020-03-27T12:56:47.707775Z", "url": "https://files.pythonhosted.org/packages/32/00/222c4d73f4b0662f0f0f883c24a33e1fb5ac7c73dbf788805bca9c53f3b4/django_ai_kit_auth-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f45078834f7844bba7029a3ec8f2b27d", "sha256": "bb58f151605d71386315e523d8703b9d13f0101b4d5854b11a4009fc3529ff45"}, "downloads": -1, "filename": "django-ai-kit-auth-0.3.1.tar.gz", "has_sig": false, "md5_digest": "f45078834f7844bba7029a3ec8f2b27d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21539, "upload_time": "2020-03-27T12:56:49", "upload_time_iso_8601": "2020-03-27T12:56:49.089996Z", "url": "https://files.pythonhosted.org/packages/ac/48/9877da5fc85e8308da8169f558919c5d6522d6acdce80a0467a38aec36b2/django-ai-kit-auth-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f78ea7eb7c58686bc832b5b012ba2d70", "sha256": "477d41b33071b9090d65e9bfa4abd861f02e6931bc9130bcb263e712b24b3e80"}, "downloads": -1, "filename": "django_ai_kit_auth-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f78ea7eb7c58686bc832b5b012ba2d70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24321, "upload_time": "2020-03-27T12:56:47", "upload_time_iso_8601": "2020-03-27T12:56:47.707775Z", "url": "https://files.pythonhosted.org/packages/32/00/222c4d73f4b0662f0f0f883c24a33e1fb5ac7c73dbf788805bca9c53f3b4/django_ai_kit_auth-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f45078834f7844bba7029a3ec8f2b27d", "sha256": "bb58f151605d71386315e523d8703b9d13f0101b4d5854b11a4009fc3529ff45"}, "downloads": -1, "filename": "django-ai-kit-auth-0.3.1.tar.gz", "has_sig": false, "md5_digest": "f45078834f7844bba7029a3ec8f2b27d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21539, "upload_time": "2020-03-27T12:56:49", "upload_time_iso_8601": "2020-03-27T12:56:49.089996Z", "url": "https://files.pythonhosted.org/packages/ac/48/9877da5fc85e8308da8169f558919c5d6522d6acdce80a0467a38aec36b2/django-ai-kit-auth-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:45 2020"}