{"info": {"author": "Mike Anderson", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# pymbta3\nPython wrapper for the MBTA v3 API\n\n## Install\n\npip install pymbta3\n\n## Usage\n\nTo get data from the MBTA API, import the library and call the object with your API key. The API Key may also be stored in the environment variable ``MBTA_API_KEY``.\n\n```python\nfrom pymbta3.alerts import Alerts\n\nat = Alerts(key=YOUR_API_KEY_HERE)\n\n# Find all alerts affecting the Red Line at Alewife\nalerts = at.get_alert(route='Red', stop='place-alfcl')\n\n# Find the short header for the alert\nfor alert in alerts['data']:\n    print(alert['attributes']['short_header'])\n```\n\nMultiple values can be passed in for most lists.\n\n```python\n# Alerts affecting Orange and Red lines\nalerts = at.get_alert(route=['Orange', 'Red'])\n```\n\n```python\n# find all alerts affecting parking or Wheelchair use\nalerts = at.get_alert(activity=['PARK_CAR', 'USING_WHEELCHAIR'])\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/altonplace/pymbta3", "keywords": "mbta api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pymbta3", "package_url": "https://pypi.org/project/pymbta3/", "platform": "", "project_url": "https://pypi.org/project/pymbta3/", "project_urls": {"Homepage": "https://github.com/altonplace/pymbta3"}, "release_url": "https://pypi.org/project/pymbta3/0.0.1.dev0/", "requires_dist": ["requests"], "requires_python": "", "summary": "", "version": "0.0.1.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pymbta3</h1>\n<p>Python wrapper for the MBTA v3 API</p>\n<h2>Install</h2>\n<p>pip install pymbta3</p>\n<h2>Usage</h2>\n<p>To get data from the MBTA API, import the library and call the object with your API key. The API Key may also be stored in the environment variable <code>MBTA_API_KEY</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymbta3.alerts</span> <span class=\"kn\">import</span> <span class=\"n\">Alerts</span>\n\n<span class=\"n\">at</span> <span class=\"o\">=</span> <span class=\"n\">Alerts</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">YOUR_API_KEY_HERE</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Find all alerts affecting the Red Line at Alewife</span>\n<span class=\"n\">alerts</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">get_alert</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"o\">=</span><span class=\"s1\">'Red'</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"s1\">'place-alfcl'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Find the short header for the alert</span>\n<span class=\"k\">for</span> <span class=\"n\">alert</span> <span class=\"ow\">in</span> <span class=\"n\">alerts</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">alert</span><span class=\"p\">[</span><span class=\"s1\">'attributes'</span><span class=\"p\">][</span><span class=\"s1\">'short_header'</span><span class=\"p\">])</span>\n</pre>\n<p>Multiple values can be passed in for most lists.</p>\n<pre><span class=\"c1\"># Alerts affecting Orange and Red lines</span>\n<span class=\"n\">alerts</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">get_alert</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Orange'</span><span class=\"p\">,</span> <span class=\"s1\">'Red'</span><span class=\"p\">])</span>\n</pre>\n<pre><span class=\"c1\"># find all alerts affecting parking or Wheelchair use</span>\n<span class=\"n\">alerts</span> <span class=\"o\">=</span> <span class=\"n\">at</span><span class=\"o\">.</span><span class=\"n\">get_alert</span><span class=\"p\">(</span><span class=\"n\">activity</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'PARK_CAR'</span><span class=\"p\">,</span> <span class=\"s1\">'USING_WHEELCHAIR'</span><span class=\"p\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 6152598, "releases": {"0.0.1.dev0": [{"comment_text": "", "digests": {"md5": "67526960c7021400f41f1e4cc38b5ca6", "sha256": "a2c96ff707bb2b8a9b510d5cdb669da7579b86448e185c2e9c167b659dd87802"}, "downloads": -1, "filename": "pymbta3-0.0.1.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67526960c7021400f41f1e4cc38b5ca6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5170, "upload_time": "2019-11-18T01:28:45", "upload_time_iso_8601": "2019-11-18T01:28:45.454775Z", "url": "https://files.pythonhosted.org/packages/96/c8/ecd6e61ba1b2700636f3c00516e8107a4910f38a11adea6b0808a4fb0a10/pymbta3-0.0.1.dev0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67526960c7021400f41f1e4cc38b5ca6", "sha256": "a2c96ff707bb2b8a9b510d5cdb669da7579b86448e185c2e9c167b659dd87802"}, "downloads": -1, "filename": "pymbta3-0.0.1.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67526960c7021400f41f1e4cc38b5ca6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5170, "upload_time": "2019-11-18T01:28:45", "upload_time_iso_8601": "2019-11-18T01:28:45.454775Z", "url": "https://files.pythonhosted.org/packages/96/c8/ecd6e61ba1b2700636f3c00516e8107a4910f38a11adea6b0808a4fb0a10/pymbta3-0.0.1.dev0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:24 2020"}