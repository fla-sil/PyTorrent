{"info": {"author": "C. Forssen and H. T. Johansson", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "WIGXJPF evaluates Wigner 3j, 6j and 9j symbols\naccurately using prime factorisation and multi-word integer arithmetic.\n\nKnown issue\n-----------\n\nPlease install pycparser first.\n\n(See https://github.com/pypa/setuptools/issues/391#issuecomment-202919511 )\n\nInline usage information\n------------------------\n\nAvailable inline::\n\n    import pywigxjpf as wig\n    help(wig)                # For interfaces.\n    help(wig.pywigxjpf)      # For usage information.\n\nLibrary usage\n-------------\n\nThe python interface to wigxjpf uses cffi.\n\nDefines seven functions::\n\n    wig_table_init(max_two_j,wigner_type)\n    wig_table_free()\n    wig_temp_init(max_two_j)\n    wig_temp_free()\n\n    wig3jj(jj1,jj2,jj3, mm1,mm2,mm3)\n    wig6jj(jj1,jj2,jj3, jj4,jj5,jj6)\n    wig9jj(jj1,jj2,jj3, jj4,jj5,jj6, jj7,jj8,jj9)\n\nNote that the arguments are to be given as integers, with\ntwice the numeric value (this is what jj tries to indicate).\nI.e. half-integer arguments will be passed as odd integers.\n\nThe two init functions must be called before evaluating any\nsymbol.\n\nIn addition, interfaces that take an array with the arguments\nare also provided::\n\n    wig3jj_array([jj1,jj2,jj3, mm1,mm2,mm3])\n    wig6jj_array([jj1,jj2,jj3, jj4,jj5,jj6])\n    wig9jj_array([jj1,jj2,jj3, jj4,jj5,jj6, jj7,jj8,jj9])", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://fy.chalmers.se/subatom/wigxjpf", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "pywigxjpf", "package_url": "https://pypi.org/project/pywigxjpf/", "platform": "", "project_url": "https://pypi.org/project/pywigxjpf/", "project_urls": {"Homepage": "http://fy.chalmers.se/subatom/wigxjpf"}, "release_url": "https://pypi.org/project/pywigxjpf/1.11/", "requires_dist": null, "requires_python": "", "summary": "Wigner Symbols", "version": "1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>WIGXJPF evaluates Wigner 3j, 6j and 9j symbols\naccurately using prime factorisation and multi-word integer arithmetic.</p>\n<div id=\"known-issue\">\n<h2>Known issue</h2>\n<p>Please install pycparser first.</p>\n<p>(See <a href=\"https://github.com/pypa/setuptools/issues/391#issuecomment-202919511\" rel=\"nofollow\">https://github.com/pypa/setuptools/issues/391#issuecomment-202919511</a> )</p>\n</div>\n<div id=\"inline-usage-information\">\n<h2>Inline usage information</h2>\n<p>Available inline:</p>\n<pre>import pywigxjpf as wig\nhelp(wig)                # For interfaces.\nhelp(wig.pywigxjpf)      # For usage information.\n</pre>\n</div>\n<div id=\"library-usage\">\n<h2>Library usage</h2>\n<p>The python interface to wigxjpf uses cffi.</p>\n<p>Defines seven functions:</p>\n<pre>wig_table_init(max_two_j,wigner_type)\nwig_table_free()\nwig_temp_init(max_two_j)\nwig_temp_free()\n\nwig3jj(jj1,jj2,jj3, mm1,mm2,mm3)\nwig6jj(jj1,jj2,jj3, jj4,jj5,jj6)\nwig9jj(jj1,jj2,jj3, jj4,jj5,jj6, jj7,jj8,jj9)\n</pre>\n<p>Note that the arguments are to be given as integers, with\ntwice the numeric value (this is what jj tries to indicate).\nI.e. half-integer arguments will be passed as odd integers.</p>\n<p>The two init functions must be called before evaluating any\nsymbol.</p>\n<p>In addition, interfaces that take an array with the arguments\nare also provided:</p>\n<pre>wig3jj_array([jj1,jj2,jj3, mm1,mm2,mm3])\nwig6jj_array([jj1,jj2,jj3, jj4,jj5,jj6])\nwig9jj_array([jj1,jj2,jj3, jj4,jj5,jj6, jj7,jj8,jj9])\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6552298, "releases": {"1.10": [{"comment_text": "", "digests": {"md5": "6cd5059a4a678a757f0dfd5f1cbc2420", "sha256": "7e8a0a226ebcf278e22f94b7c9c32ed1f21f139f0c8013598ae52f5bb86d6041"}, "downloads": -1, "filename": "pywigxjpf-1.10.tar.gz", "has_sig": false, "md5_digest": "6cd5059a4a678a757f0dfd5f1cbc2420", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53189, "upload_time": "2019-05-06T17:02:28", "upload_time_iso_8601": "2019-05-06T17:02:28.390340Z", "url": "https://files.pythonhosted.org/packages/61/27/4362b03f11a6714e07317ac71009c1e301185292f670df20e2906751aa57/pywigxjpf-1.10.tar.gz", "yanked": false}], "1.11": [{"comment_text": "", "digests": {"md5": "43e04fac0e377a674583b9b8527b474a", "sha256": "6306a660a73b33bfe6239f18c262aa7023dc892f2c52b9cddb3b17fec87ef561"}, "downloads": -1, "filename": "pywigxjpf-1.11.tar.gz", "has_sig": false, "md5_digest": "43e04fac0e377a674583b9b8527b474a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54166, "upload_time": "2020-01-31T22:55:40", "upload_time_iso_8601": "2020-01-31T22:55:40.817059Z", "url": "https://files.pythonhosted.org/packages/0b/ab/9ded3ea2a48f57d5aaa5f4d9b4d3380e7c09d34294c7432eb604c0535f73/pywigxjpf-1.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "43e04fac0e377a674583b9b8527b474a", "sha256": "6306a660a73b33bfe6239f18c262aa7023dc892f2c52b9cddb3b17fec87ef561"}, "downloads": -1, "filename": "pywigxjpf-1.11.tar.gz", "has_sig": false, "md5_digest": "43e04fac0e377a674583b9b8527b474a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54166, "upload_time": "2020-01-31T22:55:40", "upload_time_iso_8601": "2020-01-31T22:55:40.817059Z", "url": "https://files.pythonhosted.org/packages/0b/ab/9ded3ea2a48f57d5aaa5f4d9b4d3380e7c09d34294c7432eb604c0535f73/pywigxjpf-1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:21 2020"}