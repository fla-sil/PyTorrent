{"info": {"author": "Simon Gomizelj", "author_email": "simon@vodik.xyz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Testing"], "description": "pytest-exceptional\n==================\n\n\n.. image:: https://img.shields.io/pypi/v/pytest-exceptional.svg\n    :target: https://pypi.python.org/pypi/pytest-exceptional\n.. image:: https://img.shields.io/pypi/pyversions/pytest-exceptional.svg\n    :target: https://pypi.python.org/pypi/pytest-exceptional\n.. image:: https://travis-ci.org/vodik/pytest-exceptional.svg?branch=master\n    :target: https://travis-ci.org/vodik/pytest-exceptional\n    :alt: See Build Status on Travis CI\n.. image:: https://ci.appveyor.com/api/projects/status/github/vodik/pytest-exceptional?branch=master\n    :target: https://ci.appveyor.com/project/vodik/pytest-exceptional/branch/master\n    :alt: See Build Status on AppVeyor\n\nBetter pytest Exceptions\n------------------------\n\nThis plugin attempts to make richer pytest exceptions a snap to write.\nFor example, consider the following exception:\n\n.. code:: python\n\n    class StartFire(pytest.Exception):\n        __teststatus__ = 'fire', '\ud83d\udd25', ('FIRE', {'purple': True, 'bold': True})\n\n        def toterminal(self, longrepr, tw):\n            tw.line(\"FIRE! Please evacuate the building!\")\n            longrepr.toterminal(tw)\n\n        def summary_header(self, header):\n            return \"Fire started during {}\".format(header)\n\nWhen this specific exception class is thrown, the pretty printing and\nresult categorization is now in the hands of the exception, making it\nmore straightforward than writing special purpose plugins.::\n\n    ============================= test session starts ==============================\n    platform linux -- Python 3.6.0, pytest-3.0.7, py-1.4.32, pluggy-0.4.0\n    cachedir: .cache\n    rootdir: /home/simon/src/pytest-exceptional, inifile:\n    plugins: exceptional-0.1.0\n    collected 1 items\n\n    tests/test_fail_test.py::test_fire FIRE\n\n    ________________________ Fire started during test_fire _________________________\n    FIRE! Please evacuate the building!\n\n        def test_fire():\n    >       raise StartFire('There is a fire')\n    E       test_fail_test.StartFire: There is a fire\n\n    tests/test_fail_test.py:47: StartFire\n    ============================ 1 fire in 0.02 seconds ============================\n\nTODO\n----\n\nProvide more control over formatting and presentation without making\nthe API too cumbersome. Still very much an early prototype and\nprobably not close to a stable API.\n\nInstallation\n------------\n\nYou can install \"pytest-exceptional\" via `pip`_ from `PyPI`_::\n\n    $ pip install pytest-exceptional\n\nContributing\n------------\nContributions are very welcome. Tests can be run with `tox`_, please\nensure the coverage at least stays the same before you submit a pull\nrequest.\n\nLicense\n-------\n\nDistributed under the terms of the `MIT`_ license,\n\"pytest-exceptional\" is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a\ndetailed description.\n\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause\n.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`file an issue`: https://github.com/vodik/pytest-exceptional/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`PyPI`: https://pypi.python.org/pypi\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vodik/pytest-exceptional", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytest-exceptional", "package_url": "https://pypi.org/project/pytest-exceptional/", "platform": "", "project_url": "https://pypi.org/project/pytest-exceptional/", "project_urls": {"Homepage": "https://github.com/vodik/pytest-exceptional"}, "release_url": "https://pypi.org/project/pytest-exceptional/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Better exceptions", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pytest-exceptional\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pytest-exceptional.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30fbfe0a4d65b0e83cb88ed9adc0352aa295d1b8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d657863657074696f6e616c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-exceptional\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pytest-exceptional.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1900cc92a382344b839d02792c52eddfb5e0c1ca/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d657863657074696f6e616c2e737667\"></a>\n<a href=\"https://travis-ci.org/vodik/pytest-exceptional\" rel=\"nofollow\"><img alt=\"See Build Status on Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04df425aa7afc8c7a13aeb16761b7ad9632ae37e/68747470733a2f2f7472617669732d63692e6f72672f766f64696b2f7079746573742d657863657074696f6e616c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/vodik/pytest-exceptional/branch/master\" rel=\"nofollow\"><img alt=\"See Build Status on AppVeyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/917868bab9edfbaceb6e7c8a4020b00578f1ce9d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f766f64696b2f7079746573742d657863657074696f6e616c3f6272616e63683d6d6173746572\"></a>\n<div id=\"better-pytest-exceptions\">\n<h2>Better pytest Exceptions</h2>\n<p>This plugin attempts to make richer pytest exceptions a snap to write.\nFor example, consider the following exception:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">StartFire</span><span class=\"p\">(</span><span class=\"n\">pytest</span><span class=\"o\">.</span><span class=\"n\">Exception</span><span class=\"p\">):</span>\n    <span class=\"n\">__teststatus__</span> <span class=\"o\">=</span> <span class=\"s1\">'fire'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud83d\udd25'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">'FIRE'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'purple'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'bold'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">toterminal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">longrepr</span><span class=\"p\">,</span> <span class=\"n\">tw</span><span class=\"p\">):</span>\n        <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"s2\">\"FIRE! Please evacuate the building!\"</span><span class=\"p\">)</span>\n        <span class=\"n\">longrepr</span><span class=\"o\">.</span><span class=\"n\">toterminal</span><span class=\"p\">(</span><span class=\"n\">tw</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">summary_header</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"Fire started during </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">)</span>\n</pre>\n<p>When this specific exception class is thrown, the pretty printing and\nresult categorization is now in the hands of the exception, making it\nmore straightforward than writing special purpose plugins.:</p>\n<pre>============================= test session starts ==============================\nplatform linux -- Python 3.6.0, pytest-3.0.7, py-1.4.32, pluggy-0.4.0\ncachedir: .cache\nrootdir: /home/simon/src/pytest-exceptional, inifile:\nplugins: exceptional-0.1.0\ncollected 1 items\n\ntests/test_fail_test.py::test_fire FIRE\n\n________________________ Fire started during test_fire _________________________\nFIRE! Please evacuate the building!\n\n    def test_fire():\n&gt;       raise StartFire('There is a fire')\nE       test_fail_test.StartFire: There is a fire\n\ntests/test_fail_test.py:47: StartFire\n============================ 1 fire in 0.02 seconds ============================\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>Provide more control over formatting and presentation without making\nthe API too cumbersome. Still very much an early prototype and\nprobably not close to a stable API.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install \u201cpytest-exceptional\u201d via <a href=\"https://pypi.python.org/pypi/pip/\" rel=\"nofollow\">pip</a> from <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install pytest-exceptional\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are very welcome. Tests can be run with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>, please\nensure the coverage at least stays the same before you submit a pull\nrequest.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> license,\n\u201cpytest-exceptional\u201d is free and open source software</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you encounter any problems, please <a href=\"https://github.com/vodik/pytest-exceptional/issues\" rel=\"nofollow\">file an issue</a> along with a\ndetailed description.</p>\n</div>\n\n          </div>"}, "last_serial": 2711113, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3428f186df5dd5c17ab14f25d0dd62f7", "sha256": "5f30750b103100eb2cf1bd75fcae5136b64ace9ecf62aa567a44af28d8f02cc2"}, "downloads": -1, "filename": "pytest-exceptional-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3428f186df5dd5c17ab14f25d0dd62f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4296, "upload_time": "2017-03-15T03:58:25", "upload_time_iso_8601": "2017-03-15T03:58:25.019044Z", "url": "https://files.pythonhosted.org/packages/24/0c/7a002c5a9a502e5b61dbea4135c995793474d3559040934cb5d29598723c/pytest-exceptional-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d2255a0b637865c892946a0c1608d82a", "sha256": "0367f7e700f6e4c460b4a4912c0e849a8afb31105a7bbdf2133a89180dfc579c"}, "downloads": -1, "filename": "pytest-exceptional-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d2255a0b637865c892946a0c1608d82a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4708, "upload_time": "2017-03-16T20:26:50", "upload_time_iso_8601": "2017-03-16T20:26:50.301273Z", "url": "https://files.pythonhosted.org/packages/b0/d7/bbd6c6ad512ff4b7389439055158dae7409ae8f9696bc6f7f7665e8facb2/pytest-exceptional-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2255a0b637865c892946a0c1608d82a", "sha256": "0367f7e700f6e4c460b4a4912c0e849a8afb31105a7bbdf2133a89180dfc579c"}, "downloads": -1, "filename": "pytest-exceptional-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d2255a0b637865c892946a0c1608d82a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4708, "upload_time": "2017-03-16T20:26:50", "upload_time_iso_8601": "2017-03-16T20:26:50.301273Z", "url": "https://files.pythonhosted.org/packages/b0/d7/bbd6c6ad512ff4b7389439055158dae7409ae8f9696bc6f7f7665e8facb2/pytest-exceptional-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:11 2020"}