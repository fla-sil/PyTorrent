{"info": {"author": "Anders Johannsen", "author_email": "ajohannsen@hum.ku.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "[![Build Status](https://travis-ci.org/coastalcph/rungsted.svg?branch=master)](https://travis-ci.org/coastalcph/rungsted)\n\n\n## Rungsted structured perceptron sequential tagger\n\n### Install\n\nThe software is installable via PyPI, e.g. do \n\n```\npip install rungsted\n```\n\n\n\n### Demo\n\nThe repository contains a subset of the part-of-speech tagged Brown corpus. To run the structured perceptron labeler on this dataset, execute:\n\n``python src/labeler.py --train data/brown.train --test data/brown.test.vw``\n\nRungsted's input format is closely modeled on the powerful and flexible format of [Vowpal Wabbit](https://github.com/JohnLangford/vowpal_wabbit/wiki/Input-format),\nwith the exception that Rungsted is perfectly fine with labels that are not integers.\n\n### Datasets\n\nProvided you have a working installation of NLTK, you can recreate the Brown dataset with this command. \n\n``python rungsted/datasets/cr_brown_pos_data.py data/brown.train.vw data/brown.test.vw``\n\nThere is also a script `rungsted/datasets/conll_to_vw.py` to convert from CONLL-formatted input to Rungsted \n\n\n### Building and uploading to PyPI\n\nFirst, run `python setup.py sdist` to generate a source distribution. \nThen upload the distribution files to PyPI with twine: `twine upload dist/*`.\n\nTo develop locally, use `python setup.py develop`.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coastalcph/rungsted", "keywords": "hmm perceptron structured_model", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rungsted", "package_url": "https://pypi.org/project/rungsted/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rungsted/", "project_urls": {"Homepage": "https://github.com/coastalcph/rungsted"}, "release_url": "https://pypi.org/project/rungsted/1.2.4/", "requires_dist": null, "requires_python": "", "summary": "Rungsted. An efficient HMM-based structured prediction model for sequential labeling tasks, with extras.", "version": "1.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>[![Build Status](<a href=\"https://travis-ci.org/coastalcph/rungsted.svg?branch=master)%5D(https://travis-ci.org/coastalcph/rungsted\" rel=\"nofollow\">https://travis-ci.org/coastalcph/rungsted.svg?branch=master)](https://travis-ci.org/coastalcph/rungsted</a>)</p>\n<p>## Rungsted structured perceptron sequential tagger</p>\n<p>### Install</p>\n<p>The software is installable via PyPI, e.g. do</p>\n<p><tt>`\npip install rungsted\n`</tt></p>\n<p>### Demo</p>\n<p>The repository contains a subset of the part-of-speech tagged Brown corpus. To run the structured perceptron labeler on this dataset, execute:</p>\n<p><tt>python src/labeler.py <span class=\"pre\">--train</span> data/brown.train <span class=\"pre\">--test</span> data/brown.test.vw</tt></p>\n<p>Rungsted\u2019s input format is closely modeled on the powerful and flexible format of [Vowpal Wabbit](<a href=\"https://github.com/JohnLangford/vowpal_wabbit/wiki/Input-format\" rel=\"nofollow\">https://github.com/JohnLangford/vowpal_wabbit/wiki/Input-format</a>),\nwith the exception that Rungsted is perfectly fine with labels that are not integers.</p>\n<p>### Datasets</p>\n<p>Provided you have a working installation of NLTK, you can recreate the Brown dataset with this command.</p>\n<p><tt>python rungsted/datasets/cr_brown_pos_data.py data/brown.train.vw data/brown.test.vw</tt></p>\n<p>There is also a script <cite>rungsted/datasets/conll_to_vw.py</cite> to convert from CONLL-formatted input to Rungsted</p>\n<p>### Building and uploading to PyPI</p>\n<p>First, run <cite>python setup.py sdist</cite> to generate a source distribution.\nThen upload the distribution files to PyPI with twine: <cite>twine upload dist/*</cite>.</p>\n<p>To develop locally, use <cite>python setup.py develop</cite>.</p>\n\n          </div>"}, "last_serial": 1755408, "releases": {"1.2.1": [{"comment_text": "", "digests": {"md5": "6f8bcf4ef061caca9ef166469a853ae1", "sha256": "776a69eb24120a566f5f0fdbcefcb677e5ef9fe2521aed8537a6800f285e02fd"}, "downloads": -1, "filename": "rungsted-1.2.1.tar.gz", "has_sig": false, "md5_digest": "6f8bcf4ef061caca9ef166469a853ae1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 568635, "upload_time": "2015-09-29T14:23:08", "upload_time_iso_8601": "2015-09-29T14:23:08.867883Z", "url": "https://files.pythonhosted.org/packages/8c/38/62a3d20cc66cd3fdfd2b6ead5b97882d0b402d99741db5ea7b214c1602f6/rungsted-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "7ceb80111b3e2dfb5aab948731fc457f", "sha256": "59eaa13a2ef72a3e1e125eb45f30ef4fc5d55fa417fb9bae43af2dbc8426fad7"}, "downloads": -1, "filename": "rungsted-1.2.2.tar.gz", "has_sig": false, "md5_digest": "7ceb80111b3e2dfb5aab948731fc457f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 569602, "upload_time": "2015-10-06T16:56:22", "upload_time_iso_8601": "2015-10-06T16:56:22.440547Z", "url": "https://files.pythonhosted.org/packages/4f/3c/72614750255d73a7782ef4dab94a907d620366e7642221055d117e92b228/rungsted-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "47ad34eda974867a60c70d3019a9ff8c", "sha256": "d418bdbc17936b0daf6c580537bf2222a007c7fe98c68f5335d531a97a71c673"}, "downloads": -1, "filename": "rungsted-1.2.3.tar.gz", "has_sig": false, "md5_digest": "47ad34eda974867a60c70d3019a9ff8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 570162, "upload_time": "2015-10-06T17:12:56", "upload_time_iso_8601": "2015-10-06T17:12:56.074116Z", "url": "https://files.pythonhosted.org/packages/64/8c/8192d7f991bb7405fd8e2667eda33e08b91a3517e9afb1df439051fd5f95/rungsted-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "cd19a9e4c80b83ae9c804248c42fdb28", "sha256": "1dd75704417ab3242f8c21cacc2a306857cdc5299d9fa22c705650b95c32e944"}, "downloads": -1, "filename": "rungsted-1.2.4.tar.gz", "has_sig": false, "md5_digest": "cd19a9e4c80b83ae9c804248c42fdb28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 582745, "upload_time": "2015-10-06T20:50:03", "upload_time_iso_8601": "2015-10-06T20:50:03.325588Z", "url": "https://files.pythonhosted.org/packages/a9/89/9fbb8e9946b5ba8dc6ba7315af9238a2dbc8570b137c6bf89512bf592b76/rungsted-1.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd19a9e4c80b83ae9c804248c42fdb28", "sha256": "1dd75704417ab3242f8c21cacc2a306857cdc5299d9fa22c705650b95c32e944"}, "downloads": -1, "filename": "rungsted-1.2.4.tar.gz", "has_sig": false, "md5_digest": "cd19a9e4c80b83ae9c804248c42fdb28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 582745, "upload_time": "2015-10-06T20:50:03", "upload_time_iso_8601": "2015-10-06T20:50:03.325588Z", "url": "https://files.pythonhosted.org/packages/a9/89/9fbb8e9946b5ba8dc6ba7315af9238a2dbc8570b137c6bf89512bf592b76/rungsted-1.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:01 2020"}