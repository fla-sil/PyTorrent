{"info": {"author": "SDASolutions", "author_email": "sdasolutions.co@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet"], "description": "# Py2captcha\n\nClient library to solve captchas with 2captcha.com support.\n\n## Getting Started\n\nInstall as a standard Python package using:\n\n    pip install py2captcha\n\n## Usage\n        \n        from py2captcha import TwoCaptchaClient, GoogleReCaptchaV2Task\n        \n        # 2captcha.com authentication key\n        key = \"Your key goes here\"\n\n        # Website data\n        google_key = \"Google recaptcha key\"  # sitekey\n        url = \"http://site.com/captchaurl\"\n        \n        # Create client\n        client = TwoCaptchaClient(client_key=key)\n\n        # Requesting 2captcha.com queue status for reCAPTCHA V2\n        status = client.get_queue_stats()\n\n        print(\"reCAPTCHA V2 queue status:\")\n        print(\"Total workers: %d\" % status.workers_total)\n        print(\"Free workers: %d\" % status.free_workers)\n        print(\"Load factor: %d%%\" % status.load)\n        print(\"Average solve speed: %d seconds\" % status.speed)\n        print(\"Price per 1000 CAPTCHAS: %f USD\" % status.bid)\n\n        # Create Recaptcha Task\n        task = GoogleReCaptchaV2Task(googlekey=google_key, pageurl=url)\n        job = client.create_task(task)\n\n        # Wait until captcha is solved\n        # For async runs just call job.check_is_ready() until it returns true\n        job.join()\n\n        # Result\n        token = job.get_solution_response()\n\n        # Cost (Always 2.9/1000)\n        cost = job.get_solution_cost()\n\n        # Base 5 solution time\n        time = job.get_solution_time()\n\n        print(\"Token: %s\" % token)\n        print(\"Cost: %f USD\" % cost)\n        print(\"Solve time: %d seconds\" % time)\n\n\n## Supported CAPTCHA types\n\n* reCAPTCHA V2", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sdasolutions/py2captcha", "keywords": "CAPTCHA,reCAPTCHA", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py2captcha", "package_url": "https://pypi.org/project/py2captcha/", "platform": "", "project_url": "https://pypi.org/project/py2captcha/", "project_urls": {"Homepage": "https://github.com/sdasolutions/py2captcha"}, "release_url": "https://pypi.org/project/py2captcha/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Client library for solve captchas with 2captcha.com support.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Py2captcha</h1>\n<p>Client library to solve captchas with 2captcha.com support.</p>\n<h2>Getting Started</h2>\n<p>Install as a standard Python package using:</p>\n<pre><code>pip install py2captcha\n</code></pre>\n<h2>Usage</h2>\n<pre><code>    from py2captcha import TwoCaptchaClient, GoogleReCaptchaV2Task\n    \n    # 2captcha.com authentication key\n    key = \"Your key goes here\"\n\n    # Website data\n    google_key = \"Google recaptcha key\"  # sitekey\n    url = \"http://site.com/captchaurl\"\n    \n    # Create client\n    client = TwoCaptchaClient(client_key=key)\n\n    # Requesting 2captcha.com queue status for reCAPTCHA V2\n    status = client.get_queue_stats()\n\n    print(\"reCAPTCHA V2 queue status:\")\n    print(\"Total workers: %d\" % status.workers_total)\n    print(\"Free workers: %d\" % status.free_workers)\n    print(\"Load factor: %d%%\" % status.load)\n    print(\"Average solve speed: %d seconds\" % status.speed)\n    print(\"Price per 1000 CAPTCHAS: %f USD\" % status.bid)\n\n    # Create Recaptcha Task\n    task = GoogleReCaptchaV2Task(googlekey=google_key, pageurl=url)\n    job = client.create_task(task)\n\n    # Wait until captcha is solved\n    # For async runs just call job.check_is_ready() until it returns true\n    job.join()\n\n    # Result\n    token = job.get_solution_response()\n\n    # Cost (Always 2.9/1000)\n    cost = job.get_solution_cost()\n\n    # Base 5 solution time\n    time = job.get_solution_time()\n\n    print(\"Token: %s\" % token)\n    print(\"Cost: %f USD\" % cost)\n    print(\"Solve time: %d seconds\" % time)\n</code></pre>\n<h2>Supported CAPTCHA types</h2>\n<ul>\n<li>reCAPTCHA V2</li>\n</ul>\n\n          </div>"}, "last_serial": 5998662, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "92413564856b8ed6852a4575558f2f0f", "sha256": "93d80278f142e8d07fe2d561f19c8320d0d48031d0c457b23c5a1f5b66a34906"}, "downloads": -1, "filename": "py2captcha-0.1.1.tar.gz", "has_sig": false, "md5_digest": "92413564856b8ed6852a4575558f2f0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4665, "upload_time": "2019-10-19T04:24:43", "upload_time_iso_8601": "2019-10-19T04:24:43.944528Z", "url": "https://files.pythonhosted.org/packages/83/b1/068b0f4f7d6d0f28fd0947d8a73414e78b1f0b6ea9e868f871bcc7217b18/py2captcha-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92413564856b8ed6852a4575558f2f0f", "sha256": "93d80278f142e8d07fe2d561f19c8320d0d48031d0c457b23c5a1f5b66a34906"}, "downloads": -1, "filename": "py2captcha-0.1.1.tar.gz", "has_sig": false, "md5_digest": "92413564856b8ed6852a4575558f2f0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4665, "upload_time": "2019-10-19T04:24:43", "upload_time_iso_8601": "2019-10-19T04:24:43.944528Z", "url": "https://files.pythonhosted.org/packages/83/b1/068b0f4f7d6d0f28fd0947d8a73414e78b1f0b6ea9e868f871bcc7217b18/py2captcha-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:34 2020"}