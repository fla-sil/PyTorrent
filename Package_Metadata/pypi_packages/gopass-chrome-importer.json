{"info": {"author": "Markus Ressel", "author_email": "mail@markusressel.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# gopass-chrome-importer  [![Build Status](https://travis-ci.org/markusressel/gopass-chrome-importer.svg?branch=master)](https://travis-ci.org/markusressel/gopass-chrome-importer) [![PyPI version](https://badge.fury.io/py/gopass-chrome-importer.svg)](https://badge.fury.io/py/gopass-chrome-importer)\nA simple tool to import Chrome passwords into [gopass](https://github.com/gopasspw/gopass).\n\n# How it works\n\n**gopass-chrome-importer** parses the `.csv` file that can be exported from chrome\nand loops over each entry in the list which provides\n\n* a **name** (of the entry)\n* the **url**\n* the **username**\n* the **password**\n\n## Determining the secret file path\n\n1. Since not only passwords for websites are stored in chrome all entries are divided into categories \nwhich are later used as subfolders when creating the actual secrets in gopass. \n2. Next the url is simplified based on the category to provide a human readable name for the secret.\n3. To improve usability with the gopass chrome and firefox plugin the username is used as the file name of the secret.\n\n* `website`\n  * the url is stripped down to only contain the domain (and all subdomains) f.ex. `import/website/smile.amazon.com/your@mail.com`\n* `ip`\n  * since saved passwords of IPs can be duplicates based on the network you are in\n    these passwords are sorted into their own category and the url is stripped to only contain the IP (v4)\n  * IPv6 is currently not detected and would be handled as a website\n* `android`\n  * the url is stripped down to only contain the package of the app f.ex. `import/android/com.paypal.android.p2pmobile/your@mail.com`\n\n## Secret file content\n\nThe first line of a secret is always supposed to be a password \nwith additional info added below separated by a `---` divider.\nWhen a username is available it will be added to the additional info section\nwhich can then be used by the chrome and firefox plugin:\n\n```text\nmypassword1234\n---\nuser: myuser\n```\n\nIf no user is available just the password is written to the file:\n\n```text\nmypassword1234\n```\n\n## Creating the secret\n\nSince **gopass** does not provide a non-interactive way to create or modify secrets the fact that\nsecrets can not only be edited but also created using the `gopass edit` command is used to work around this\n(security related) limitation. When executing `gopass edit /some/secret` **gopass** creates a temporary decrypted \nfile inside `/dev/shm` for this secret which is then passed to `$EDITOR`. **gopass-chrome-importer** uses this to \nits advantage and writes itself into that env variable to process the temporarily decrypted file. \nFirst of all the existing file is checked to prevent overwriting of existing secret data. \nIf those checks succeed the secret is written to the file in the form described above.\nAfter that **gopass** encrypts the temporary file with the selected recipients and (if a remote is available) \npushes it to the server. \n\n\n# Installing\n\nNow that you hopefully have a good understanding of how this tool works lets actually try it out!\n\nSince this package is not completely without dependencies it is recommended to install it inside a **virtualenv**:\n\n```bash\npython3 -m venv ~/path/to/new/virtual/environment\nsource ~/path/to/new/virtual/environment/bin/activate\npip3 install gopass-chrome-importer\n```\n\n# Usage\n\nFor basic usage the `import` command should be all you ever need.\n**gopass-chrome-importer** has a couple of parameters to customize the import result\nand you should take a look what they offer before actually importing anything.\nFor a quick overview call:\n\n```bash\ngopass-chrome-importer import --help\n```\n\n## Dry Run\n\nTo test things out before actually importing passwords into **gopass** (and possibly \npushing them to origin) you can use the `-d` or `--dry-run` option. This will only output\nsecret paths and contents where passwords are masked as asterisks to give you an idea of what would \nhappen.\n\nAn example output would look similar to this:\n```text\nWould import: /import/ip/127.0.0.1/joe\n******\n---\nuser: joe\n\nWould import: /import/ip/192.168.0.1/admin\n********************\n---\nuser: admin\n```\n\nFor safety **all** examples on this page will include this option. \n\n\n## Set the path to the chrome password export .csv\n\nTo set the path to the `export.csv` file just use the `-p` or `--path` option:\n\n```bash\ngopass-chrome-importer import --path \"~/Downloads/Chrome Passwords.csv\" --dry-run\n```\n\n## Changing the base import path\n\nBy default **gopass-chrome-importer** will import secrets into an `import/` folder. To change this simply\nuse the `-gb` or `--gopass-basepath` option:\n\n```bash\ngopass-chrome-importer import --path \"~/Downloads/Chrome Passwords.csv\" --gopass-basepath /test/ --dry-run\n```\n\n## --yes\n\nBy default **gopass** will ask you some questions when creating a secret like which recipients to use for this secret.\nFor large lists of passwords this can be quite a hassle. **gopass** has a built in `--yes` option to circumvent this \nby always using \"Y\" or the default (if *yes* is not an option). This parameter can also be used (in addition to `-y`)\nin **gopass-chrome-importer** and will just pass it on to **gopass**.\n\n```bash\ngopass-chrome-importer import --path \"~/Downloads/Chrome Passwords.csv\" --gopass-basepath /test/ --yes --dry-run\n```\n\n## Overwrite existing passwords/file contents\n\nWhen **gopass-chrome-importer** tries to save a password in a file that\nalready exists and that file is **not** empty it will (by default) **not change the file contents**\nto prevent accidentally overwriting of existing passwords.\n\nYou can force **gopass-chrome-importer** to ignore this check by using the `-f` or `--force` option.\n\nAlthough your existing passwords are backed up in a git and (hopefully) synced to a \nserver side backend **be careful and think twice before using this option.**\n\n```bash\ngopass-chrome-importer import --path \"~/Downloads/Chrome Passwords.csv\" --gopass-basepath /test/ --yes --force --dry-run\n```\n\n# Contributing\n\nGitHub is for social coding: if you want to write code, I encourage contributions through pull requests from forks\nof this repository. Create GitHub tickets for bugs and new features and comment on the ones that you are interested in.\n\n\n# License\n\n```\nMIT License\n\nCopyright (c) 2018 Markus Ressel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/markusressel/gopass-chrome-importer", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gopass-chrome-importer", "package_url": "https://pypi.org/project/gopass-chrome-importer/", "platform": "", "project_url": "https://pypi.org/project/gopass-chrome-importer/", "project_urls": {"Homepage": "https://github.com/markusressel/gopass-chrome-importer"}, "release_url": "https://pypi.org/project/gopass-chrome-importer/1.1.0/", "requires_dist": ["click"], "requires_python": "", "summary": "A simple tool to import Chrome passwords into gopass.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gopass-chrome-importer  <a href=\"https://travis-ci.org/markusressel/gopass-chrome-importer\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ea32e5bae819458c7cdbcf1c3730adcc61e7290/68747470733a2f2f7472617669732d63692e6f72672f6d61726b757372657373656c2f676f706173732d6368726f6d652d696d706f727465722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/gopass-chrome-importer\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8553747a6ab985f4e79f5a57ad5f1fa72b37cca/68747470733a2f2f62616467652e667572792e696f2f70792f676f706173732d6368726f6d652d696d706f727465722e737667\"></a></h1>\n<p>A simple tool to import Chrome passwords into <a href=\"https://github.com/gopasspw/gopass\" rel=\"nofollow\">gopass</a>.</p>\n<h1>How it works</h1>\n<p><strong>gopass-chrome-importer</strong> parses the <code>.csv</code> file that can be exported from chrome\nand loops over each entry in the list which provides</p>\n<ul>\n<li>a <strong>name</strong> (of the entry)</li>\n<li>the <strong>url</strong></li>\n<li>the <strong>username</strong></li>\n<li>the <strong>password</strong></li>\n</ul>\n<h2>Determining the secret file path</h2>\n<ol>\n<li>Since not only passwords for websites are stored in chrome all entries are divided into categories\nwhich are later used as subfolders when creating the actual secrets in gopass.</li>\n<li>Next the url is simplified based on the category to provide a human readable name for the secret.</li>\n<li>To improve usability with the gopass chrome and firefox plugin the username is used as the file name of the secret.</li>\n</ol>\n<ul>\n<li><code>website</code>\n<ul>\n<li>the url is stripped down to only contain the domain (and all subdomains) f.ex. <code>import/website/smile.amazon.com/your@mail.com</code></li>\n</ul>\n</li>\n<li><code>ip</code>\n<ul>\n<li>since saved passwords of IPs can be duplicates based on the network you are in\nthese passwords are sorted into their own category and the url is stripped to only contain the IP (v4)</li>\n<li>IPv6 is currently not detected and would be handled as a website</li>\n</ul>\n</li>\n<li><code>android</code>\n<ul>\n<li>the url is stripped down to only contain the package of the app f.ex. <code>import/android/com.paypal.android.p2pmobile/your@mail.com</code></li>\n</ul>\n</li>\n</ul>\n<h2>Secret file content</h2>\n<p>The first line of a secret is always supposed to be a password\nwith additional info added below separated by a <code>---</code> divider.\nWhen a username is available it will be added to the additional info section\nwhich can then be used by the chrome and firefox plugin:</p>\n<pre>mypassword1234\n---\nuser: myuser\n</pre>\n<p>If no user is available just the password is written to the file:</p>\n<pre>mypassword1234\n</pre>\n<h2>Creating the secret</h2>\n<p>Since <strong>gopass</strong> does not provide a non-interactive way to create or modify secrets the fact that\nsecrets can not only be edited but also created using the <code>gopass edit</code> command is used to work around this\n(security related) limitation. When executing <code>gopass edit /some/secret</code> <strong>gopass</strong> creates a temporary decrypted\nfile inside <code>/dev/shm</code> for this secret which is then passed to <code>$EDITOR</code>. <strong>gopass-chrome-importer</strong> uses this to\nits advantage and writes itself into that env variable to process the temporarily decrypted file.\nFirst of all the existing file is checked to prevent overwriting of existing secret data.\nIf those checks succeed the secret is written to the file in the form described above.\nAfter that <strong>gopass</strong> encrypts the temporary file with the selected recipients and (if a remote is available)\npushes it to the server.</p>\n<h1>Installing</h1>\n<p>Now that you hopefully have a good understanding of how this tool works lets actually try it out!</p>\n<p>Since this package is not completely without dependencies it is recommended to install it inside a <strong>virtualenv</strong>:</p>\n<pre>python3 -m venv ~/path/to/new/virtual/environment\n<span class=\"nb\">source</span> ~/path/to/new/virtual/environment/bin/activate\npip3 install gopass-chrome-importer\n</pre>\n<h1>Usage</h1>\n<p>For basic usage the <code>import</code> command should be all you ever need.\n<strong>gopass-chrome-importer</strong> has a couple of parameters to customize the import result\nand you should take a look what they offer before actually importing anything.\nFor a quick overview call:</p>\n<pre>gopass-chrome-importer import --help\n</pre>\n<h2>Dry Run</h2>\n<p>To test things out before actually importing passwords into <strong>gopass</strong> (and possibly\npushing them to origin) you can use the <code>-d</code> or <code>--dry-run</code> option. This will only output\nsecret paths and contents where passwords are masked as asterisks to give you an idea of what would\nhappen.</p>\n<p>An example output would look similar to this:</p>\n<pre>Would import: /import/ip/127.0.0.1/joe\n******\n---\nuser: joe\n\nWould import: /import/ip/192.168.0.1/admin\n********************\n---\nuser: admin\n</pre>\n<p>For safety <strong>all</strong> examples on this page will include this option.</p>\n<h2>Set the path to the chrome password export .csv</h2>\n<p>To set the path to the <code>export.csv</code> file just use the <code>-p</code> or <code>--path</code> option:</p>\n<pre>gopass-chrome-importer import --path <span class=\"s2\">\"~/Downloads/Chrome Passwords.csv\"</span> --dry-run\n</pre>\n<h2>Changing the base import path</h2>\n<p>By default <strong>gopass-chrome-importer</strong> will import secrets into an <code>import/</code> folder. To change this simply\nuse the <code>-gb</code> or <code>--gopass-basepath</code> option:</p>\n<pre>gopass-chrome-importer import --path <span class=\"s2\">\"~/Downloads/Chrome Passwords.csv\"</span> --gopass-basepath /test/ --dry-run\n</pre>\n<h2>--yes</h2>\n<p>By default <strong>gopass</strong> will ask you some questions when creating a secret like which recipients to use for this secret.\nFor large lists of passwords this can be quite a hassle. <strong>gopass</strong> has a built in <code>--yes</code> option to circumvent this\nby always using \"Y\" or the default (if <em>yes</em> is not an option). This parameter can also be used (in addition to <code>-y</code>)\nin <strong>gopass-chrome-importer</strong> and will just pass it on to <strong>gopass</strong>.</p>\n<pre>gopass-chrome-importer import --path <span class=\"s2\">\"~/Downloads/Chrome Passwords.csv\"</span> --gopass-basepath /test/ --yes --dry-run\n</pre>\n<h2>Overwrite existing passwords/file contents</h2>\n<p>When <strong>gopass-chrome-importer</strong> tries to save a password in a file that\nalready exists and that file is <strong>not</strong> empty it will (by default) <strong>not change the file contents</strong>\nto prevent accidentally overwriting of existing passwords.</p>\n<p>You can force <strong>gopass-chrome-importer</strong> to ignore this check by using the <code>-f</code> or <code>--force</code> option.</p>\n<p>Although your existing passwords are backed up in a git and (hopefully) synced to a\nserver side backend <strong>be careful and think twice before using this option.</strong></p>\n<pre>gopass-chrome-importer import --path <span class=\"s2\">\"~/Downloads/Chrome Passwords.csv\"</span> --gopass-basepath /test/ --yes --force --dry-run\n</pre>\n<h1>Contributing</h1>\n<p>GitHub is for social coding: if you want to write code, I encourage contributions through pull requests from forks\nof this repository. Create GitHub tickets for bugs and new features and comment on the ones that you are interested in.</p>\n<h1>License</h1>\n<pre><code>MIT License\n\nCopyright (c) 2018 Markus Ressel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>\n\n          </div>"}, "last_serial": 4887202, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e3298bfd4e80d408c85e4599f04a3b96", "sha256": "6ba401554bb09e238c6ffd7b4218c507ea32f072d07fb96b800fc6465d0409bd"}, "downloads": -1, "filename": "gopass_chrome_importer-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e3298bfd4e80d408c85e4599f04a3b96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9818, "upload_time": "2018-11-20T20:09:28", "upload_time_iso_8601": "2018-11-20T20:09:28.921198Z", "url": "https://files.pythonhosted.org/packages/b4/4a/832e2138d4cc66bcc4554570597eb50ef7395ae8fa9a431feb6c8191b305/gopass_chrome_importer-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9b98a95ec8abd92b5f47a96dabce246", "sha256": "401e9f240fdb5d22c182fa711e8f83caaa1ef703712f04c9812a0091034443f0"}, "downloads": -1, "filename": "gopass-chrome-importer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a9b98a95ec8abd92b5f47a96dabce246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8201, "upload_time": "2018-11-20T20:09:31", "upload_time_iso_8601": "2018-11-20T20:09:31.251936Z", "url": "https://files.pythonhosted.org/packages/8b/a6/3245d8f77fe225a355459693f5f98b7165061a1af25e4137fb3b2cfd785a/gopass-chrome-importer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "702e5f42ff43508b22ba9e1ce1da1b30", "sha256": "88c57a9f38adb46be3a75e06cdf125439fd975bdd5d580bfd6cccef31cd60e4a"}, "downloads": -1, "filename": "gopass_chrome_importer-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "702e5f42ff43508b22ba9e1ce1da1b30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10344, "upload_time": "2018-11-22T00:46:51", "upload_time_iso_8601": "2018-11-22T00:46:51.681114Z", "url": "https://files.pythonhosted.org/packages/52/ca/0dfc0d51bf92fb001031b0d3a82dea842ce4469dc48f7f49b78484c93d62/gopass_chrome_importer-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c1eff20e9fc1dc47c9d50739e5118b", "sha256": "7ffd35a9424db31b1a24203587418c5c8ef81f6412118b5ccb471180b90d3417"}, "downloads": -1, "filename": "gopass-chrome-importer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f6c1eff20e9fc1dc47c9d50739e5118b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8683, "upload_time": "2018-11-22T00:46:54", "upload_time_iso_8601": "2018-11-22T00:46:54.888089Z", "url": "https://files.pythonhosted.org/packages/de/48/f25932d252471823a9a17929566ffb9bd400b2550187fbc376fd6b053262/gopass-chrome-importer-1.0.1.tar.gz", "yanked": false}], "1.0.1.dev0": [{"comment_text": "", "digests": {"md5": "f37227c913865f72485f00d6d9802d4a", "sha256": "50922aed6a5f08fb402faf18fa3911f874ac6dfbe91cb88a9ec3a4fba7a0beb2"}, "downloads": -1, "filename": "gopass_chrome_importer-1.0.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "f37227c913865f72485f00d6d9802d4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10404, "upload_time": "2018-11-22T00:44:28", "upload_time_iso_8601": "2018-11-22T00:44:28.136073Z", "url": "https://files.pythonhosted.org/packages/f3/01/78cab01623cf6a60ab49cddcf109c523b3b443137a862497c2dab4bd92ef/gopass_chrome_importer-1.0.1.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd21a0897a2705956c6e568f8f9b64c0", "sha256": "1207f792462e1a999f2e942892a4eadf15ffe4d4ed098b94f8d6639a58e6dc5a"}, "downloads": -1, "filename": "gopass-chrome-importer-1.0.1.dev0.tar.gz", "has_sig": false, "md5_digest": "cd21a0897a2705956c6e568f8f9b64c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8701, "upload_time": "2018-11-22T00:44:30", "upload_time_iso_8601": "2018-11-22T00:44:30.532437Z", "url": "https://files.pythonhosted.org/packages/c6/92/b7b94064051c0f01025e999e51e8268e5b4a409cf7a54497cdc0cd931ac4/gopass-chrome-importer-1.0.1.dev0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9ad2bdce498d1a840dfb8c49e8414cf3", "sha256": "e364a47362f0781b2bfa49c3c6f57674c9b892e1a9fe4c53c7ccec4b56043b3e"}, "downloads": -1, "filename": "gopass_chrome_importer-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ad2bdce498d1a840dfb8c49e8414cf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12891, "upload_time": "2019-03-02T00:17:54", "upload_time_iso_8601": "2019-03-02T00:17:54.137905Z", "url": "https://files.pythonhosted.org/packages/fa/bc/9759f260c4c3c186b67db61eacce5d21759080a395905f3f3efd4de7a851/gopass_chrome_importer-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d31848a97324989b94fd0136226d5ccc", "sha256": "15cef62f691781c3807028719381d5671d47ffb3ae3f7732e8aa7e42d45ba720"}, "downloads": -1, "filename": "gopass-chrome-importer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d31848a97324989b94fd0136226d5ccc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11416, "upload_time": "2019-03-02T00:17:55", "upload_time_iso_8601": "2019-03-02T00:17:55.553059Z", "url": "https://files.pythonhosted.org/packages/cd/8d/35085e7d42dfc65e6ea1704209ce44b6d6e6140fe63063a678fbec8da286/gopass-chrome-importer-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ad2bdce498d1a840dfb8c49e8414cf3", "sha256": "e364a47362f0781b2bfa49c3c6f57674c9b892e1a9fe4c53c7ccec4b56043b3e"}, "downloads": -1, "filename": "gopass_chrome_importer-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ad2bdce498d1a840dfb8c49e8414cf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12891, "upload_time": "2019-03-02T00:17:54", "upload_time_iso_8601": "2019-03-02T00:17:54.137905Z", "url": "https://files.pythonhosted.org/packages/fa/bc/9759f260c4c3c186b67db61eacce5d21759080a395905f3f3efd4de7a851/gopass_chrome_importer-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d31848a97324989b94fd0136226d5ccc", "sha256": "15cef62f691781c3807028719381d5671d47ffb3ae3f7732e8aa7e42d45ba720"}, "downloads": -1, "filename": "gopass-chrome-importer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d31848a97324989b94fd0136226d5ccc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11416, "upload_time": "2019-03-02T00:17:55", "upload_time_iso_8601": "2019-03-02T00:17:55.553059Z", "url": "https://files.pythonhosted.org/packages/cd/8d/35085e7d42dfc65e6ea1704209ce44b6d6e6140fe63063a678fbec8da286/gopass-chrome-importer-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:30 2020"}