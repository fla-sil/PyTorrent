{"info": {"author": "Zhang Yu", "author_email": "zhangyu836@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n# xlstpl\nA python module to generate xls files from a xls template.\n\n\n## How it works\n\nxlstpl uses xlrd to read and use xlwt to write .xls files, uses jinja2 as its template engine.  \nWhen xlstpl reads a .xls file, it creates a tree for each worksheet.  \nThen, it translates the tree to a jinja2 template with custom tags.  \nWhen the template is rendered, jinja2 extensions of cumtom tags call corresponding tree nodes to write the .xls file.  \n\n## Syntax\n\nxlstpl uses jinja2 as its template engine, follows the [syntax of jinja2 template](https://jinja.palletsprojects.com/).  \n\nEach worksheet is translated to a jinja2 template with custom tags.  \n\n```jinja2\n...\n...\n{% row 45 %}\n{% cell 46 %}{% endcell %}\n{% cell 47 %}{% endcell %}\n{% cell 48 %}{{address}}  {%xv v%}{% endcell %}\n{% cell 49 %}{% endcell %}\n{% cell 50 %}{% endcell %}\n{% cell 51 %}{% endcell %}\n{% cell 52 %}{% endcell %}\n{% cell 53 %}{% endcell %}\n{% row 54 %}\n{% cell 55 %}{% endcell %}\n{% cell 56 %}{% sec 0 %}{{name}}{% endsec %}{% sec 1 %}{{address}}{% endsec %}{% endcell %}\n...\n...\n{% for item in items %}\n{% row 64 %}\n{% cell 65 %}{% endcell %}\n{% cell 66 %}{% endcell %}\n{% cell 67 %}{% endcell %}\n{% cell 68 %}{% endcell %}\n{% cell 69 %}{% endcell %}\n{% cell 70 %}{% endcell %}\n{% cell 71 %}{% endcell %}\n{% cell 72 %}{% endcell %}\n{% endfor %}\n...\n...\n\n```\n\nxlstpl added 4 custom tags: row, cell, sec, and xv.  \nrow, cell, sec are used internally, used for row, cell and rich text.  \nxv is used to define a variable.   \nWhen a cell contains only a xv tag, this cell will be set to the type of the object returned from the variable evaluation.  \nFor example, if a cell contains only {%xv amt %}, and amt is a number, then this cell will be set to Number type, displaying with the style set on the cell.  \nIf there is another tag, it is equivalent to {{amt}}, will be converted to a string.  \n\n\n\n## Installtion\n\n```shell\npip install xlstpl\n```\n\n## How to use\n\nSee [examples](https://github.com/zhangyu836/python-xls-template/tree/master/examples).\n\n## Notes\n\n### xlrd\n\nxlrd does not extract print settings. [This repo](https://github.com/zhangyu836/xlrd) does. \n\n### xlwt\n\nxlwt always sets the default font to 'Arial'. (Excel measures column width units based on the default font). [This repo](https://github.com/zhangyu836/xlwt) does not.  \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zhangyu836/python-xls-template", "keywords": "xls,spreadsheet,workbook,template", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xlstpl", "package_url": "https://pypi.org/project/xlstpl/", "platform": "Any platform", "project_url": "https://pypi.org/project/xlstpl/", "project_urls": {"Homepage": "https://github.com/zhangyu836/python-xls-template"}, "release_url": "https://pypi.org/project/xlstpl/0.2.1/", "requires_dist": ["xlrd", "xlwt", "openpyxl", "jinja2", "six"], "requires_python": "", "summary": "A python module to generate xls files from a xls template", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>xlstpl</h1>\n<p>A python module to generate xls files from a xls template.</p>\n<h2>How it works</h2>\n<p>xlstpl uses xlrd to read and use xlwt to write .xls files, uses jinja2 as its template engine.<br>\nWhen xlstpl reads a .xls file, it creates a tree for each worksheet.<br>\nThen, it translates the tree to a jinja2 template with custom tags.<br>\nWhen the template is rendered, jinja2 extensions of cumtom tags call corresponding tree nodes to write the .xls file.</p>\n<h2>Syntax</h2>\n<p>xlstpl uses jinja2 as its template engine, follows the <a href=\"https://jinja.palletsprojects.com/\" rel=\"nofollow\">syntax of jinja2 template</a>.</p>\n<p>Each worksheet is translated to a jinja2 template with custom tags.</p>\n<pre>...\n...\n{% row 45 %}\n{% cell 46 %}{% endcell %}\n{% cell 47 %}{% endcell %}\n{% cell 48 %}{{address}}  {%xv v%}{% endcell %}\n{% cell 49 %}{% endcell %}\n{% cell 50 %}{% endcell %}\n{% cell 51 %}{% endcell %}\n{% cell 52 %}{% endcell %}\n{% cell 53 %}{% endcell %}\n{% row 54 %}\n{% cell 55 %}{% endcell %}\n{% cell 56 %}{% sec 0 %}{{name}}{% endsec %}{% sec 1 %}{{address}}{% endsec %}{% endcell %}\n...\n...\n{% for item in items %}\n{% row 64 %}\n{% cell 65 %}{% endcell %}\n{% cell 66 %}{% endcell %}\n{% cell 67 %}{% endcell %}\n{% cell 68 %}{% endcell %}\n{% cell 69 %}{% endcell %}\n{% cell 70 %}{% endcell %}\n{% cell 71 %}{% endcell %}\n{% cell 72 %}{% endcell %}\n{% endfor %}\n...\n...\n</pre>\n<p>xlstpl added 4 custom tags: row, cell, sec, and xv.<br>\nrow, cell, sec are used internally, used for row, cell and rich text.<br>\nxv is used to define a variable.<br>\nWhen a cell contains only a xv tag, this cell will be set to the type of the object returned from the variable evaluation.<br>\nFor example, if a cell contains only {%xv amt %}, and amt is a number, then this cell will be set to Number type, displaying with the style set on the cell.<br>\nIf there is another tag, it is equivalent to {{amt}}, will be converted to a string.</p>\n<h2>Installtion</h2>\n<pre>pip install xlstpl\n</pre>\n<h2>How to use</h2>\n<p>See <a href=\"https://github.com/zhangyu836/python-xls-template/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n<h2>Notes</h2>\n<h3>xlrd</h3>\n<p>xlrd does not extract print settings. <a href=\"https://github.com/zhangyu836/xlrd\" rel=\"nofollow\">This repo</a> does.</p>\n<h3>xlwt</h3>\n<p>xlwt always sets the default font to 'Arial'. (Excel measures column width units based on the default font). <a href=\"https://github.com/zhangyu836/xlwt\" rel=\"nofollow\">This repo</a> does not.</p>\n\n          </div>"}, "last_serial": 7014686, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "a3b175e61584795c20ff8371febf98e8", "sha256": "de8da17be7e5368c2ad1600315a3fcd50974c02743defbce1d88f805aecb1c9a"}, "downloads": -1, "filename": "xlstpl-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3b175e61584795c20ff8371febf98e8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13333, "upload_time": "2020-04-11T08:03:35", "upload_time_iso_8601": "2020-04-11T08:03:35.590823Z", "url": "https://files.pythonhosted.org/packages/3d/3b/a0ee54ecdbf2c2d26acd86983df3469c2d99913960b11bd514fe4db43711/xlstpl-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52be0aabb30fdb465616ac5af24d52d3", "sha256": "7427819b6146600ebd5266e584ce597cfb90d607b1ea2e20fea1ff9dea66ce4b"}, "downloads": -1, "filename": "xlstpl-0.2.tar.gz", "has_sig": false, "md5_digest": "52be0aabb30fdb465616ac5af24d52d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12784, "upload_time": "2020-04-11T08:03:38", "upload_time_iso_8601": "2020-04-11T08:03:38.286809Z", "url": "https://files.pythonhosted.org/packages/75/6b/9270d6a412167047c7a7142c34d1c9cc2e5052c30d2c81e40a71e14d807f/xlstpl-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a790b3823f207056c1b4dde97f36178b", "sha256": "99aa5447463940ea65dbe46fd78841aadcedc9a019f2e67ca95bce4a953b0316"}, "downloads": -1, "filename": "xlstpl-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a790b3823f207056c1b4dde97f36178b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13353, "upload_time": "2020-04-14T05:02:13", "upload_time_iso_8601": "2020-04-14T05:02:13.718969Z", "url": "https://files.pythonhosted.org/packages/6c/d5/670f7bf24b4b88f32bd677bff74acef4d80bbafb0df1e4bac91f4c34c826/xlstpl-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b425fb7718db92d5fe30b7247dae321", "sha256": "76eb33a2a15807837314b9c6534e891c93da8745873798699d4ca5e803a53c5b"}, "downloads": -1, "filename": "xlstpl-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0b425fb7718db92d5fe30b7247dae321", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12779, "upload_time": "2020-04-14T05:02:15", "upload_time_iso_8601": "2020-04-14T05:02:15.414853Z", "url": "https://files.pythonhosted.org/packages/4a/7d/b0afb2aae19bb025bf361cd22d1b95333a5fcfac56b6fcf5d3dfce3ce998/xlstpl-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a790b3823f207056c1b4dde97f36178b", "sha256": "99aa5447463940ea65dbe46fd78841aadcedc9a019f2e67ca95bce4a953b0316"}, "downloads": -1, "filename": "xlstpl-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a790b3823f207056c1b4dde97f36178b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13353, "upload_time": "2020-04-14T05:02:13", "upload_time_iso_8601": "2020-04-14T05:02:13.718969Z", "url": "https://files.pythonhosted.org/packages/6c/d5/670f7bf24b4b88f32bd677bff74acef4d80bbafb0df1e4bac91f4c34c826/xlstpl-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b425fb7718db92d5fe30b7247dae321", "sha256": "76eb33a2a15807837314b9c6534e891c93da8745873798699d4ca5e803a53c5b"}, "downloads": -1, "filename": "xlstpl-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0b425fb7718db92d5fe30b7247dae321", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12779, "upload_time": "2020-04-14T05:02:15", "upload_time_iso_8601": "2020-04-14T05:02:15.414853Z", "url": "https://files.pythonhosted.org/packages/4a/7d/b0afb2aae19bb025bf361cd22d1b95333a5fcfac56b6fcf5d3dfce3ce998/xlstpl-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:15 2020"}