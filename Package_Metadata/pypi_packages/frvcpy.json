{"info": {"author": "Nicholas Kullman", "author_email": "nicholas.kullman@etu.univ-tours.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# frvcpy: An Open-Source Solver for the FRVCP\n\n### Fast optimal solutions to rich FRVCPs\n\n## What is an FRVCP?\n\nGiven an elctric vehicle (EV) that's been assigned some sequence of locations to visit (a _fixed route_), the __fixed route vehicle charging problem__ (FRVCP) is the problem of finding the optimal insertion of recharging operations into the route that minimize the time required for the EV to traverse that route in an energy-feasible manner.\n\n## Installation\n\nIn a virtual environment with Python 3.6+, frvcpy can be installed via\n\n```bash\npip install frvcpy\n```\n\n### Testing the installation\n\n```python\nimport frvcpy.test\nfrvcpy.test.runAll()\n```\n\nOr from the command line:\n\n```bash\nfrvcpy-test\n```\n\n## Using frvcpy\n\nWith a compatible instance file ([see the schema](https://github.com/e-VRO/frvcpy/blob/master/instances/frvcpy-instance.schema.json)), solve the FRVCP from a Python script:\n\n```python\nfrom frvcpy import solver\n\nroute = [0,40,12,33,38,16,0]        # route to make energy feasible\nq_init = 16000                      # vehicle's initial energy level\n\n# using an existing instance from file\nfrvcp_solver = solver.Solver(\"instances/frvcpy-instance.json\", route, q_init)\n\n# run the algorithm\nduration, feas_route = frvcp_solver.solve()\n\n# write solution to file\nfrvcp_solver.write_solution(\"my-solution.xml\", instance_name=\"frvcpy-instance\")\n\nprint(f\"Duration: {duration:.4}\")\n# Duration: 7.339\n\nprint(f\"Energy-feasible route:\\n{feas_route}\")\n# Energy-feasible route:\n# [(0, None), (40, None), (12, None), (33, None), (48, 6673.379615520617), (38, None), (16, None), (0, None)]\n```\n\nOr from the command line:\n\n```bash\nfrvcpy --instance=instances/frvcpy-instance.json --route=0,40,12,33,38,16,0 --qinit=16000 --output=my-solution.xml\n# Duration: 7.339\n# Energy-feasible route:\n# [(0, None), (40, None), (12, None), (33, None), (48, 6673.379615520617), (38, None), (16, None), (0, None)]\n```\n\nSolutions are written in the [VRP-REP](http://www.vrp-rep.org/) format for easy importing and visualization with the [VRP-REP Mapper](https://vrp-rep.github.io/mapper/) (_formal solution specification available [here](http://www.vrp-rep.org/resources.html)_).\n\n_Note: Example problem instances are available in the `instances` directory on the [project's homepage](https://github.com/e-VRO/frvcpy/). For easy access to the example files, we recommend cloning the repository._\n\n## Instance Translation\n\nInstance translation is available for some E-VRP instances formatted according to the VRP-REP specification (_available [here](http://www.vrp-rep.org/resources.html)_).\n\nTranslation can be done with the Python API via\n\n```python\nfrom frvcpy import translator\n\n# Option 1) write the translated instance to file\ntranslator.translate(\"instances/vrprep-instance.xml\", to_filename=\"instances/my-new-instance.json\")\n\n# Option 2) make instance object to be passed directly to the solver\nfrvcp_instance = translator.translate(\"instances/vrprep-instance.xml\")\n```\n\nOr with the command line:\n\n```bash\n# from CLI, only option is to write translated instance to file\nfrvcpy-translate instances/vrprep-instance.xml instances/my-new-instance.json\n```\n\n_Note: If an instance ending in \".xml\" is passed to the solver, it is assumed to be a VRP-REP instance, and the solver will automatically attempt to translate it._\n\n### Translation requirements for VRP-REP instances\n\nfrvcpy's translator assumes VRP-REP instances are formatted similarly to the [Montoya et al. (2017) instances](http://vrp-rep.org/datasets/item/2016-0020.html):\n\n- CSs are identified as `<node>` elements having attribute `type=\"2\"`\n- Charging stations nodes have a `<custom>` child element which contains a `cs_type` element\n- For each unique CS type `t` appearing in those `cs_type` elements, there exists a charging `function` element with attribute `cs_type=t`\n- These `function` elements are part of a `charging_functions` element in a `vehicle_profile`'s `custom` element\n- The depot has node ID 0, the N customers have IDs {1, ..., N}, and the CSs have IDs {N+1, ..., N+C}\n\nA good example of such an instance is the [example VRP-REP instance in the repository](https://github.com/e-VRO/frvcpy/blob/master/instances/vrprep-instance.xml).\n\nHere is a smaller example meeting these requirements:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<instance>\n  <network>\n    <nodes>\n      <node id=\"0\" type=\"0\">\n        <cx>74.83</cx>\n        <cy>51.85</cy>\n      </node>\n      <node id=\"1\" type=\"1\">\n        <cx>68.77</cx>\n        <cy>75.69</cy>\n      </node>\n      <node id=\"11\" type=\"2\">\n        <cx>57.0</cx>\n        <cy>57.04</cy>\n        <custom>\n          <cs_type>fast</cs_type>\n        </custom>\n      </node>\n    </nodes>\n    <euclidean/>\n    <decimals>14</decimals>\n  </network>\n  <fleet>\n    <vehicle_profile type=\"0\">\n      <departure_node>0</departure_node>\n      <arrival_node>0</arrival_node>\n      <speed_factor>25.0</speed_factor>\n      <custom>\n        <consumption_rate>0.125</consumption_rate>\n        <battery_capacity>16.0</battery_capacity>\n        <charging_functions>\n          <function cs_type=\"fast\">\n            <breakpoint>\n              <battery_level>0.0</battery_level>\n              <charging_time>0.0</charging_time>\n            </breakpoint>\n            <breakpoint>\n              <battery_level>13.6</battery_level>\n              <charging_time>0.317</charging_time>\n            </breakpoint>\n            <breakpoint>\n              <battery_level>15.2</battery_level>\n              <charging_time>0.383</charging_time>\n            </breakpoint>\n            <breakpoint>\n              <battery_level>16.0</battery_level>\n              <charging_time>0.517</charging_time>\n            </breakpoint>\n          </function>\n        </charging_functions>\n      </custom>\n    </vehicle_profile>\n  </fleet>\n  <requests>\n    <request id=\"1\" node=\"1\">\n      <service_time>0.5</service_time>\n    </request>\n  </requests>\n</instance>\n```\n\n## The Solver\n\nTo solve FRVCPs, frvcpy implements the labeling algorithm from Froger et al. (2019), providing optimal solutions in low runtime. The algorithm accommodates realistic problem features such as nonlinear charging functions, heterogeneous charging station technologies, and multiple CS visits between stops.\n\n## Additional information\n\nFor more information about the algorithm used in the solver, see [Froger et al. (2019)](https://www.sciencedirect.com/science/article/abs/pii/S0305054818303253).\n\nFor a write-up of the package: _Manuscript in preparation, coming soon_\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/e-VRO/frvcpy", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "frvcpy", "package_url": "https://pypi.org/project/frvcpy/", "platform": "", "project_url": "https://pypi.org/project/frvcpy/", "project_urls": {"Homepage": "https://github.com/e-VRO/frvcpy"}, "release_url": "https://pypi.org/project/frvcpy/0.1.0/", "requires_dist": ["xmltodict"], "requires_python": ">=3.6", "summary": "A solver for fixed route vehicle charging problems", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>frvcpy: An Open-Source Solver for the FRVCP</h1>\n<h3>Fast optimal solutions to rich FRVCPs</h3>\n<h2>What is an FRVCP?</h2>\n<p>Given an elctric vehicle (EV) that's been assigned some sequence of locations to visit (a <em>fixed route</em>), the <strong>fixed route vehicle charging problem</strong> (FRVCP) is the problem of finding the optimal insertion of recharging operations into the route that minimize the time required for the EV to traverse that route in an energy-feasible manner.</p>\n<h2>Installation</h2>\n<p>In a virtual environment with Python 3.6+, frvcpy can be installed via</p>\n<pre>pip install frvcpy\n</pre>\n<h3>Testing the installation</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">frvcpy.test</span>\n<span class=\"n\">frvcpy</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">runAll</span><span class=\"p\">()</span>\n</pre>\n<p>Or from the command line:</p>\n<pre>frvcpy-test\n</pre>\n<h2>Using frvcpy</h2>\n<p>With a compatible instance file (<a href=\"https://github.com/e-VRO/frvcpy/blob/master/instances/frvcpy-instance.schema.json\" rel=\"nofollow\">see the schema</a>), solve the FRVCP from a Python script:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">frvcpy</span> <span class=\"kn\">import</span> <span class=\"n\">solver</span>\n\n<span class=\"n\">route</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">38</span><span class=\"p\">,</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span>        <span class=\"c1\"># route to make energy feasible</span>\n<span class=\"n\">q_init</span> <span class=\"o\">=</span> <span class=\"mi\">16000</span>                      <span class=\"c1\"># vehicle's initial energy level</span>\n\n<span class=\"c1\"># using an existing instance from file</span>\n<span class=\"n\">frvcp_solver</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">Solver</span><span class=\"p\">(</span><span class=\"s2\">\"instances/frvcpy-instance.json\"</span><span class=\"p\">,</span> <span class=\"n\">route</span><span class=\"p\">,</span> <span class=\"n\">q_init</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># run the algorithm</span>\n<span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">feas_route</span> <span class=\"o\">=</span> <span class=\"n\">frvcp_solver</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># write solution to file</span>\n<span class=\"n\">frvcp_solver</span><span class=\"o\">.</span><span class=\"n\">write_solution</span><span class=\"p\">(</span><span class=\"s2\">\"my-solution.xml\"</span><span class=\"p\">,</span> <span class=\"n\">instance_name</span><span class=\"o\">=</span><span class=\"s2\">\"frvcpy-instance\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Duration: </span><span class=\"si\">{</span><span class=\"n\">duration</span><span class=\"si\">:</span><span class=\"s2\">.4</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Duration: 7.339</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Energy-feasible route:</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"n\">feas_route</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Energy-feasible route:</span>\n<span class=\"c1\"># [(0, None), (40, None), (12, None), (33, None), (48, 6673.379615520617), (38, None), (16, None), (0, None)]</span>\n</pre>\n<p>Or from the command line:</p>\n<pre>frvcpy --instance<span class=\"o\">=</span>instances/frvcpy-instance.json --route<span class=\"o\">=</span><span class=\"m\">0</span>,40,12,33,38,16,0 --qinit<span class=\"o\">=</span><span class=\"m\">16000</span> --output<span class=\"o\">=</span>my-solution.xml\n<span class=\"c1\"># Duration: 7.339</span>\n<span class=\"c1\"># Energy-feasible route:</span>\n<span class=\"c1\"># [(0, None), (40, None), (12, None), (33, None), (48, 6673.379615520617), (38, None), (16, None), (0, None)]</span>\n</pre>\n<p>Solutions are written in the <a href=\"http://www.vrp-rep.org/\" rel=\"nofollow\">VRP-REP</a> format for easy importing and visualization with the <a href=\"https://vrp-rep.github.io/mapper/\" rel=\"nofollow\">VRP-REP Mapper</a> (<em>formal solution specification available <a href=\"http://www.vrp-rep.org/resources.html\" rel=\"nofollow\">here</a></em>).</p>\n<p><em>Note: Example problem instances are available in the <code>instances</code> directory on the <a href=\"https://github.com/e-VRO/frvcpy/\" rel=\"nofollow\">project's homepage</a>. For easy access to the example files, we recommend cloning the repository.</em></p>\n<h2>Instance Translation</h2>\n<p>Instance translation is available for some E-VRP instances formatted according to the VRP-REP specification (<em>available <a href=\"http://www.vrp-rep.org/resources.html\" rel=\"nofollow\">here</a></em>).</p>\n<p>Translation can be done with the Python API via</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">frvcpy</span> <span class=\"kn\">import</span> <span class=\"n\">translator</span>\n\n<span class=\"c1\"># Option 1) write the translated instance to file</span>\n<span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"s2\">\"instances/vrprep-instance.xml\"</span><span class=\"p\">,</span> <span class=\"n\">to_filename</span><span class=\"o\">=</span><span class=\"s2\">\"instances/my-new-instance.json\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Option 2) make instance object to be passed directly to the solver</span>\n<span class=\"n\">frvcp_instance</span> <span class=\"o\">=</span> <span class=\"n\">translator</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"s2\">\"instances/vrprep-instance.xml\"</span><span class=\"p\">)</span>\n</pre>\n<p>Or with the command line:</p>\n<pre><span class=\"c1\"># from CLI, only option is to write translated instance to file</span>\nfrvcpy-translate instances/vrprep-instance.xml instances/my-new-instance.json\n</pre>\n<p><em>Note: If an instance ending in \".xml\" is passed to the solver, it is assumed to be a VRP-REP instance, and the solver will automatically attempt to translate it.</em></p>\n<h3>Translation requirements for VRP-REP instances</h3>\n<p>frvcpy's translator assumes VRP-REP instances are formatted similarly to the <a href=\"http://vrp-rep.org/datasets/item/2016-0020.html\" rel=\"nofollow\">Montoya et al. (2017) instances</a>:</p>\n<ul>\n<li>CSs are identified as <code>&lt;node&gt;</code> elements having attribute <code>type=\"2\"</code></li>\n<li>Charging stations nodes have a <code>&lt;custom&gt;</code> child element which contains a <code>cs_type</code> element</li>\n<li>For each unique CS type <code>t</code> appearing in those <code>cs_type</code> elements, there exists a charging <code>function</code> element with attribute <code>cs_type=t</code></li>\n<li>These <code>function</code> elements are part of a <code>charging_functions</code> element in a <code>vehicle_profile</code>'s <code>custom</code> element</li>\n<li>The depot has node ID 0, the N customers have IDs {1, ..., N}, and the CSs have IDs {N+1, ..., N+C}</li>\n</ul>\n<p>A good example of such an instance is the <a href=\"https://github.com/e-VRO/frvcpy/blob/master/instances/vrprep-instance.xml\" rel=\"nofollow\">example VRP-REP instance in the repository</a>.</p>\n<p>Here is a smaller example meeting these requirements:</p>\n<pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"nt\">&lt;instance&gt;</span>\n  <span class=\"nt\">&lt;network&gt;</span>\n    <span class=\"nt\">&lt;nodes&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">id=</span><span class=\"s\">\"0\"</span> <span class=\"na\">type=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;cx&gt;</span>74.83<span class=\"nt\">&lt;/cx&gt;</span>\n        <span class=\"nt\">&lt;cy&gt;</span>51.85<span class=\"nt\">&lt;/cy&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">id=</span><span class=\"s\">\"1\"</span> <span class=\"na\">type=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;cx&gt;</span>68.77<span class=\"nt\">&lt;/cx&gt;</span>\n        <span class=\"nt\">&lt;cy&gt;</span>75.69<span class=\"nt\">&lt;/cy&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n      <span class=\"nt\">&lt;node</span> <span class=\"na\">id=</span><span class=\"s\">\"11\"</span> <span class=\"na\">type=</span><span class=\"s\">\"2\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;cx&gt;</span>57.0<span class=\"nt\">&lt;/cx&gt;</span>\n        <span class=\"nt\">&lt;cy&gt;</span>57.04<span class=\"nt\">&lt;/cy&gt;</span>\n        <span class=\"nt\">&lt;custom&gt;</span>\n          <span class=\"nt\">&lt;cs_type&gt;</span>fast<span class=\"nt\">&lt;/cs_type&gt;</span>\n        <span class=\"nt\">&lt;/custom&gt;</span>\n      <span class=\"nt\">&lt;/node&gt;</span>\n    <span class=\"nt\">&lt;/nodes&gt;</span>\n    <span class=\"nt\">&lt;euclidean/&gt;</span>\n    <span class=\"nt\">&lt;decimals&gt;</span>14<span class=\"nt\">&lt;/decimals&gt;</span>\n  <span class=\"nt\">&lt;/network&gt;</span>\n  <span class=\"nt\">&lt;fleet&gt;</span>\n    <span class=\"nt\">&lt;vehicle_profile</span> <span class=\"na\">type=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;departure_node&gt;</span>0<span class=\"nt\">&lt;/departure_node&gt;</span>\n      <span class=\"nt\">&lt;arrival_node&gt;</span>0<span class=\"nt\">&lt;/arrival_node&gt;</span>\n      <span class=\"nt\">&lt;speed_factor&gt;</span>25.0<span class=\"nt\">&lt;/speed_factor&gt;</span>\n      <span class=\"nt\">&lt;custom&gt;</span>\n        <span class=\"nt\">&lt;consumption_rate&gt;</span>0.125<span class=\"nt\">&lt;/consumption_rate&gt;</span>\n        <span class=\"nt\">&lt;battery_capacity&gt;</span>16.0<span class=\"nt\">&lt;/battery_capacity&gt;</span>\n        <span class=\"nt\">&lt;charging_functions&gt;</span>\n          <span class=\"nt\">&lt;function</span> <span class=\"na\">cs_type=</span><span class=\"s\">\"fast\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;breakpoint&gt;</span>\n              <span class=\"nt\">&lt;battery_level&gt;</span>0.0<span class=\"nt\">&lt;/battery_level&gt;</span>\n              <span class=\"nt\">&lt;charging_time&gt;</span>0.0<span class=\"nt\">&lt;/charging_time&gt;</span>\n            <span class=\"nt\">&lt;/breakpoint&gt;</span>\n            <span class=\"nt\">&lt;breakpoint&gt;</span>\n              <span class=\"nt\">&lt;battery_level&gt;</span>13.6<span class=\"nt\">&lt;/battery_level&gt;</span>\n              <span class=\"nt\">&lt;charging_time&gt;</span>0.317<span class=\"nt\">&lt;/charging_time&gt;</span>\n            <span class=\"nt\">&lt;/breakpoint&gt;</span>\n            <span class=\"nt\">&lt;breakpoint&gt;</span>\n              <span class=\"nt\">&lt;battery_level&gt;</span>15.2<span class=\"nt\">&lt;/battery_level&gt;</span>\n              <span class=\"nt\">&lt;charging_time&gt;</span>0.383<span class=\"nt\">&lt;/charging_time&gt;</span>\n            <span class=\"nt\">&lt;/breakpoint&gt;</span>\n            <span class=\"nt\">&lt;breakpoint&gt;</span>\n              <span class=\"nt\">&lt;battery_level&gt;</span>16.0<span class=\"nt\">&lt;/battery_level&gt;</span>\n              <span class=\"nt\">&lt;charging_time&gt;</span>0.517<span class=\"nt\">&lt;/charging_time&gt;</span>\n            <span class=\"nt\">&lt;/breakpoint&gt;</span>\n          <span class=\"nt\">&lt;/function&gt;</span>\n        <span class=\"nt\">&lt;/charging_functions&gt;</span>\n      <span class=\"nt\">&lt;/custom&gt;</span>\n    <span class=\"nt\">&lt;/vehicle_profile&gt;</span>\n  <span class=\"nt\">&lt;/fleet&gt;</span>\n  <span class=\"nt\">&lt;requests&gt;</span>\n    <span class=\"nt\">&lt;request</span> <span class=\"na\">id=</span><span class=\"s\">\"1\"</span> <span class=\"na\">node=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;service_time&gt;</span>0.5<span class=\"nt\">&lt;/service_time&gt;</span>\n    <span class=\"nt\">&lt;/request&gt;</span>\n  <span class=\"nt\">&lt;/requests&gt;</span>\n<span class=\"nt\">&lt;/instance&gt;</span>\n</pre>\n<h2>The Solver</h2>\n<p>To solve FRVCPs, frvcpy implements the labeling algorithm from Froger et al. (2019), providing optimal solutions in low runtime. The algorithm accommodates realistic problem features such as nonlinear charging functions, heterogeneous charging station technologies, and multiple CS visits between stops.</p>\n<h2>Additional information</h2>\n<p>For more information about the algorithm used in the solver, see <a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0305054818303253\" rel=\"nofollow\">Froger et al. (2019)</a>.</p>\n<p>For a write-up of the package: <em>Manuscript in preparation, coming soon</em></p>\n\n          </div>"}, "last_serial": 6671890, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "df1244ec0a3bee8fbb6587a7618c6671", "sha256": "7688d9da55360c4cf49e0f807342bcbc11a7f9ed6db5ec2f91dd3a28155757fb"}, "downloads": -1, "filename": "frvcpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "df1244ec0a3bee8fbb6587a7618c6671", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 74207, "upload_time": "2020-02-21T01:09:37", "upload_time_iso_8601": "2020-02-21T01:09:37.386998Z", "url": "https://files.pythonhosted.org/packages/df/d4/6575550b09149e2f4d44e0f6d565b3ba9fed463ceee7bcd812f01781e7e1/frvcpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f691070a5190ccac7ca9ecde6e62886", "sha256": "831d2335d8354caf60155f312158fd45caa4c3858e7b3975e1bb8372aff48e17"}, "downloads": -1, "filename": "frvcpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8f691070a5190ccac7ca9ecde6e62886", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 70213, "upload_time": "2020-02-21T01:09:38", "upload_time_iso_8601": "2020-02-21T01:09:38.742647Z", "url": "https://files.pythonhosted.org/packages/5e/ff/444ef6e81d6b451d66c6eca9011ff0ce53d6cde7e5b2ed800295e42a37fb/frvcpy-0.1.0.tar.gz", "yanked": false}], "0.1.0rc1": [{"comment_text": "", "digests": {"md5": "6ff53075ce2654c6e842e2376b985058", "sha256": "3f7bcf7ff78fe773eac4c80dc9581a2c49040c3b99cbcf2e6174fcb7cef77e1c"}, "downloads": -1, "filename": "frvcpy-0.1.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "6ff53075ce2654c6e842e2376b985058", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27336, "upload_time": "2020-02-08T22:24:50", "upload_time_iso_8601": "2020-02-08T22:24:50.944267Z", "url": "https://files.pythonhosted.org/packages/3e/2c/18b456cec7fe2ed7cb4433a675c1fead51d315369f0993a4f23795cc503d/frvcpy-0.1.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a305b639760298c0185c083f2011d3dd", "sha256": "bdfb0be4f33214c2e5038f05312375c31da9bc49bbea42991738cdb5c8f1e24b"}, "downloads": -1, "filename": "frvcpy-0.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "a305b639760298c0185c083f2011d3dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23455, "upload_time": "2020-02-08T22:24:53", "upload_time_iso_8601": "2020-02-08T22:24:53.629029Z", "url": "https://files.pythonhosted.org/packages/6d/2a/e1ecf427e8f73caa797220524cccf09b567322b2ba57b0f6f82d8f900419/frvcpy-0.1.0rc1.tar.gz", "yanked": false}], "0.1.0rc2": [{"comment_text": "", "digests": {"md5": "efd0fe79c4b797c1dc19babddfa9c53b", "sha256": "3775b39c2d21228fd8200749a0d8e6500d9f08bea609349bcc43401bc837bf56"}, "downloads": -1, "filename": "frvcpy-0.1.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "efd0fe79c4b797c1dc19babddfa9c53b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29359, "upload_time": "2020-02-12T05:04:53", "upload_time_iso_8601": "2020-02-12T05:04:53.874015Z", "url": "https://files.pythonhosted.org/packages/b0/eb/42330bad862540463aba2cbd0692e0150fec56a66c739c56e5863f3d7cdc/frvcpy-0.1.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8b89b139aa24f75962993561c9194eb", "sha256": "5bfb300719412f614ae43d387879f31ab0b58e45724e722b80ef125f5e509b5a"}, "downloads": -1, "filename": "frvcpy-0.1.0rc2.tar.gz", "has_sig": false, "md5_digest": "b8b89b139aa24f75962993561c9194eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24977, "upload_time": "2020-02-12T05:04:55", "upload_time_iso_8601": "2020-02-12T05:04:55.446156Z", "url": "https://files.pythonhosted.org/packages/31/33/aa63d3f3326ae797625b701144b553308f521465c51721ffb105511ebcdb/frvcpy-0.1.0rc2.tar.gz", "yanked": false}], "0.1.0rc3": [{"comment_text": "", "digests": {"md5": "22c677c4e627d41ab5b5235bcaec147e", "sha256": "cae917e9d892d11b3414dc20e57a670131fcbb813991d6333ecfe25061bc61e3"}, "downloads": -1, "filename": "frvcpy-0.1.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "22c677c4e627d41ab5b5235bcaec147e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30417, "upload_time": "2020-02-13T01:45:33", "upload_time_iso_8601": "2020-02-13T01:45:33.647608Z", "url": "https://files.pythonhosted.org/packages/32/d7/91f2495ccbb52c8f80bcac6d65c40ee0b33a2c61d0e6dd53f029f51c2b55/frvcpy-0.1.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7667125cde4438d6885b0ae6965260a4", "sha256": "f2d5ae7f11c9253856e3e548c39c00ca46da3523668146ecd14360a803e1519e"}, "downloads": -1, "filename": "frvcpy-0.1.0rc3.tar.gz", "has_sig": false, "md5_digest": "7667125cde4438d6885b0ae6965260a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26200, "upload_time": "2020-02-13T01:45:34", "upload_time_iso_8601": "2020-02-13T01:45:34.873741Z", "url": "https://files.pythonhosted.org/packages/1e/cf/fdb5f5c9fed285bca2fe32a2d07eb19aea8eb9a80e2861eb6b32c7efe6f5/frvcpy-0.1.0rc3.tar.gz", "yanked": false}], "0.1.0rc5": [{"comment_text": "", "digests": {"md5": "677fa89eea3dfd5c5caa5f3bb1252bad", "sha256": "8ed3c6e4591d666ea9936557000539ba2c183dcbcc7aa1e4e747918d711b53f9"}, "downloads": -1, "filename": "frvcpy-0.1.0rc5-py3-none-any.whl", "has_sig": false, "md5_digest": "677fa89eea3dfd5c5caa5f3bb1252bad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 74247, "upload_time": "2020-02-19T20:23:52", "upload_time_iso_8601": "2020-02-19T20:23:52.784446Z", "url": "https://files.pythonhosted.org/packages/e0/8d/07e6ac9c638c0d7f05480f69472f847b7baf0342e2219f12707c7540a5bf/frvcpy-0.1.0rc5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98936d4e5235041b0768baf5c5e0fa92", "sha256": "f18e5ad8537950e601887ba8e0decb34fc742af716a748ae811f968b35416ae8"}, "downloads": -1, "filename": "frvcpy-0.1.0rc5.tar.gz", "has_sig": false, "md5_digest": "98936d4e5235041b0768baf5c5e0fa92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 70218, "upload_time": "2020-02-19T20:23:54", "upload_time_iso_8601": "2020-02-19T20:23:54.478316Z", "url": "https://files.pythonhosted.org/packages/31/02/35c5e6b2438ea28bb29b45df32cdb1be739b771347a251a720dcb434fda3/frvcpy-0.1.0rc5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df1244ec0a3bee8fbb6587a7618c6671", "sha256": "7688d9da55360c4cf49e0f807342bcbc11a7f9ed6db5ec2f91dd3a28155757fb"}, "downloads": -1, "filename": "frvcpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "df1244ec0a3bee8fbb6587a7618c6671", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 74207, "upload_time": "2020-02-21T01:09:37", "upload_time_iso_8601": "2020-02-21T01:09:37.386998Z", "url": "https://files.pythonhosted.org/packages/df/d4/6575550b09149e2f4d44e0f6d565b3ba9fed463ceee7bcd812f01781e7e1/frvcpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f691070a5190ccac7ca9ecde6e62886", "sha256": "831d2335d8354caf60155f312158fd45caa4c3858e7b3975e1bb8372aff48e17"}, "downloads": -1, "filename": "frvcpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8f691070a5190ccac7ca9ecde6e62886", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 70213, "upload_time": "2020-02-21T01:09:38", "upload_time_iso_8601": "2020-02-21T01:09:38.742647Z", "url": "https://files.pythonhosted.org/packages/5e/ff/444ef6e81d6b451d66c6eca9011ff0ce53d6cde7e5b2ed800295e42a37fb/frvcpy-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:08 2020"}