{"info": {"author": "Codiform", "author_email": "geoffrey.wiseman@codiform.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: Public Domain", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: System :: Networking", "Topic :: System :: Networking :: Firewalls"], "description": "AWS Whitelist\n=============\n\n.. image:: https://travis-ci.org/geoffreywiseman/awswl.svg?branch=master\n    :target: https://travis-ci.org/geoffreywiseman/awswl\n.. image:: http://pepy.tech/badge/awswl\n    :target: http://pepy.tech/count/awswl\n\nA small tool to make it pretty simple to add and remove ip addresses (or CIDR blocks) from an AWS\nsecurity group. This acts like a sort of oversimplified VPN, where you can quickly give yourself\nSSH access to a project as you move about from network to network.\n\nYou can read about recent changes in the CHANGELOG_.\n\n.. _CHANGELOG: CHANGELOG.md\n\nBetter Solutions\n----------------\n\nAnyone who knows enough to use a tool like this likely knows that there are better options \navailable, from hardware VPNs to software VPNs hosted on an EC2 instance, and so forth. If you\nare using this tool and you haven't even considered using something better, this is your chance:\nlook at the better options, and see if they fit your needs.\n\nOf course, most of those other options require you to get additional hardware or software resources \ninvolved and might come with costs. I understand, that's why I made a little tool to make do.\n\nInstalling\n----------\n\nThis is a python tool, packaged as a python module, so you should be able to just run\n\n.. code-block:: bash\n\n    $ pip install awswl\n\nOf course, if you don't know what a python module is, or you don't have python and pip installed,\nyou may have additional work ahead of you.\n\nThe ``awswl`` module should be compatible with both python2 and python3; I have Travis building it\nfor Python 2.7, 3.5, 3.6, and 3.7.\n\nUsage\n-----\n\nIf you want usage help at the command line, try:\n\n.. code-block:: bash\n\n    $ awswl --help\n\nYou can list the IP address blocks that are authorized, including which ip address is current:\n\n.. code-block:: bash\n\n    $ awswl --list\n\nAuthorize your current IP Address:\n\n.. code-block:: bash\n\n    $ awswl --add-current\n\nRemove authorization for your current IP:\n\n.. code-block:: bash\n\n    $ awswl --remove-current\n\nAuthorize a manually-specified CIDR block:\n\n.. code-block:: bash\n\n    $ awswl --add 192.168.0.0/24\n\nRemove authorization for a manually-specified CIDR block:\n\n.. code-block:: bash\n\n    $ awswl --remove 192.168.0.0/24\n\nFor each of these commands, you need to tell awswl which security group to use, which you can do\nwith the ``--sgid`` command-line option or using an environment variable.\n\n\nIntegration\n-----------\nIn order to get your current ip address, ``--list``, ``--add-current`` and ``--remove-current``\nwill make a request to ``api.ipify.org``. I may `add a switch`_ to disable that for the privacy-\ninclined, but feel free to vote for it.\n\n.. _add a switch: https://github.com/geoffreywiseman/awswl/issues/3\n\n\nEnvironment\n-----------\n\nAll of these require you to have AWS credentials set up in advance, stored in\n``~/.aws/credentials``, and if you need to use a profile, you can configure it with\n``AWS_PROFILE``. If you want to identify the security group using a command-line variable so that\nyou don't have to put it into each command invocation, you can put it in ``AWSWL_SGID``.\n\n\nEdge Cases\n----------\nFor simple use cases, ``awswl`` does everything I want it to do, but it's currently a pretty thin\nwrapper over the AWS API for authorizing and revoking access via security groups, and as a result\nit doesn't do much pre-processing or validating of your requests. There are cases that it doesn't\naddress. What it's good at is adding and removing simple rules containing a simple CIDR block\nand a single port from a security group.\n\nFor instance if you remove a block that isn't present, AWS may simply ignore the request, because\nthe result matches the desired state -- the block isn't authorized. AWSWL doesn't check in advance\nthat the block is present, so it doesn't add any messaging to explain that the block wasn't removed\nbecause it wasn't present. This is mostly fine, unless you accidentally mistyped, and you failed to\nremove a block as a result.\n\nSimilarly, if what you've asked for requires a complex modification of a rule, AWSWL won't\ncompare your request against the authorized rules and make a plan of action that achieves the\ndesired result. So if there's already a permission that authorizes a set of CIDR blocks, and you\nask to remove one of those CIDR blocks, AWSWL will pass your request on to AWS, which will check\nto see if there's a single permission matching your request to revoke, not find it, and not\nthrow an error, and AWSWL will respond that your action succeeded when in fact, nothing changed,\nand the CIDR block you specified may still be authorized.\n\nSimilarly, if you ask AWSWL to revoke permissions on a CIDR block that is narrower than the\nauthorization, you aren't likely to get the desired result. For instance, if you authorize\n192.168.0.0/16 and then revoke 192.168.0.0/24 you could argue that the result should be\n192.168.1.0/24 all the way through 192.168.255.0/24 authorized and 192.168.0.0/24 not authorized,\nbut that's definitely not what will happen.\n\nSimilarly it can't modify a permission block that includes a bunch of ports, including SSH.\n\nTo be honest, I am not sure it makes a lot of sense to address those issues so that it can modify\nrules like that, but I would prefer it to notice when situations like that are present and warn\nabout the rules that it didn't modify -- essentially, I'd like it to validate a bit better.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/geoffreywiseman/awswl", "keywords": "aws whitelist ssh vpn firewall utility", "license": "", "maintainer": "", "maintainer_email": "", "name": "awswl", "package_url": "https://pypi.org/project/awswl/", "platform": "", "project_url": "https://pypi.org/project/awswl/", "project_urls": {"Author": "http://geoffreywiseman.ca/", "Codiform": "http://codiform.com", "Homepage": "https://github.com/geoffreywiseman/awswl"}, "release_url": "https://pypi.org/project/awswl/1.0.2/", "requires_dist": ["future", "boto3", "requests", "botocore", "ipaddress; python_version < \"3.0\"", "pytest; extra == 'test'"], "requires_python": "", "summary": "Maintain a whitelist of IP address blocks to access AWS over SSH", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/geoffreywiseman/awswl\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/geoffreywiseman/awswl.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb46e6bcdc25a5b28df2113a847a4c275b4cbb52/68747470733a2f2f7472617669732d63692e6f72672f67656f6666726579776973656d616e2f617773776c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://pepy.tech/count/awswl\" rel=\"nofollow\"><img alt=\"http://pepy.tech/badge/awswl\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5b48ffca137506957b675952a407c83c25574e3/687474703a2f2f706570792e746563682f62616467652f617773776c\"></a>\n<p>A small tool to make it pretty simple to add and remove ip addresses (or CIDR blocks) from an AWS\nsecurity group. This acts like a sort of oversimplified VPN, where you can quickly give yourself\nSSH access to a project as you move about from network to network.</p>\n<p>You can read about recent changes in the <a href=\"CHANGELOG.md\" rel=\"nofollow\">CHANGELOG</a>.</p>\n<div id=\"better-solutions\">\n<h2>Better Solutions</h2>\n<p>Anyone who knows enough to use a tool like this likely knows that there are better options\navailable, from hardware VPNs to software VPNs hosted on an EC2 instance, and so forth. If you\nare using this tool and you haven\u2019t even considered using something better, this is your chance:\nlook at the better options, and see if they fit your needs.</p>\n<p>Of course, most of those other options require you to get additional hardware or software resources\ninvolved and might come with costs. I understand, that\u2019s why I made a little tool to make do.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>This is a python tool, packaged as a python module, so you should be able to just run</p>\n<pre>$ pip install awswl\n</pre>\n<p>Of course, if you don\u2019t know what a python module is, or you don\u2019t have python and pip installed,\nyou may have additional work ahead of you.</p>\n<p>The <tt>awswl</tt> module should be compatible with both python2 and python3; I have Travis building it\nfor Python 2.7, 3.5, 3.6, and 3.7.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>If you want usage help at the command line, try:</p>\n<pre>$ awswl --help\n</pre>\n<p>You can list the IP address blocks that are authorized, including which ip address is current:</p>\n<pre>$ awswl --list\n</pre>\n<p>Authorize your current IP Address:</p>\n<pre>$ awswl --add-current\n</pre>\n<p>Remove authorization for your current IP:</p>\n<pre>$ awswl --remove-current\n</pre>\n<p>Authorize a manually-specified CIDR block:</p>\n<pre>$ awswl --add <span class=\"m\">192</span>.168.0.0/24\n</pre>\n<p>Remove authorization for a manually-specified CIDR block:</p>\n<pre>$ awswl --remove <span class=\"m\">192</span>.168.0.0/24\n</pre>\n<p>For each of these commands, you need to tell awswl which security group to use, which you can do\nwith the <tt><span class=\"pre\">--sgid</span></tt> command-line option or using an environment variable.</p>\n</div>\n<div id=\"integration\">\n<h2>Integration</h2>\n<p>In order to get your current ip address, <tt><span class=\"pre\">--list</span></tt>, <tt><span class=\"pre\">--add-current</span></tt> and <tt><span class=\"pre\">--remove-current</span></tt>\nwill make a request to <tt>api.ipify.org</tt>. I may <a href=\"https://github.com/geoffreywiseman/awswl/issues/3\" rel=\"nofollow\">add a switch</a> to disable that for the privacy-\ninclined, but feel free to vote for it.</p>\n</div>\n<div id=\"environment\">\n<h2>Environment</h2>\n<p>All of these require you to have AWS credentials set up in advance, stored in\n<tt><span class=\"pre\">~/.aws/credentials</span></tt>, and if you need to use a profile, you can configure it with\n<tt>AWS_PROFILE</tt>. If you want to identify the security group using a command-line variable so that\nyou don\u2019t have to put it into each command invocation, you can put it in <tt>AWSWL_SGID</tt>.</p>\n</div>\n<div id=\"edge-cases\">\n<h2>Edge Cases</h2>\n<p>For simple use cases, <tt>awswl</tt> does everything I want it to do, but it\u2019s currently a pretty thin\nwrapper over the AWS API for authorizing and revoking access via security groups, and as a result\nit doesn\u2019t do much pre-processing or validating of your requests. There are cases that it doesn\u2019t\naddress. What it\u2019s good at is adding and removing simple rules containing a simple CIDR block\nand a single port from a security group.</p>\n<p>For instance if you remove a block that isn\u2019t present, AWS may simply ignore the request, because\nthe result matches the desired state \u2013 the block isn\u2019t authorized. AWSWL doesn\u2019t check in advance\nthat the block is present, so it doesn\u2019t add any messaging to explain that the block wasn\u2019t removed\nbecause it wasn\u2019t present. This is mostly fine, unless you accidentally mistyped, and you failed to\nremove a block as a result.</p>\n<p>Similarly, if what you\u2019ve asked for requires a complex modification of a rule, AWSWL won\u2019t\ncompare your request against the authorized rules and make a plan of action that achieves the\ndesired result. So if there\u2019s already a permission that authorizes a set of CIDR blocks, and you\nask to remove one of those CIDR blocks, AWSWL will pass your request on to AWS, which will check\nto see if there\u2019s a single permission matching your request to revoke, not find it, and not\nthrow an error, and AWSWL will respond that your action succeeded when in fact, nothing changed,\nand the CIDR block you specified may still be authorized.</p>\n<p>Similarly, if you ask AWSWL to revoke permissions on a CIDR block that is narrower than the\nauthorization, you aren\u2019t likely to get the desired result. For instance, if you authorize\n192.168.0.0/16 and then revoke 192.168.0.0/24 you could argue that the result should be\n192.168.1.0/24 all the way through 192.168.255.0/24 authorized and 192.168.0.0/24 not authorized,\nbut that\u2019s definitely not what will happen.</p>\n<p>Similarly it can\u2019t modify a permission block that includes a bunch of ports, including SSH.</p>\n<p>To be honest, I am not sure it makes a lot of sense to address those issues so that it can modify\nrules like that, but I would prefer it to notice when situations like that are present and warn\nabout the rules that it didn\u2019t modify \u2013 essentially, I\u2019d like it to validate a bit better.</p>\n</div>\n\n          </div>"}, "last_serial": 4429420, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "67b137c9011465ae64d60e97ea5c3171", "sha256": "db39b22b1df8323906fb0a923cf10b69c8848ba046b17205a371767829cec87f"}, "downloads": -1, "filename": "awswl-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67b137c9011465ae64d60e97ea5c3171", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11295, "upload_time": "2018-04-10T15:33:21", "upload_time_iso_8601": "2018-04-10T15:33:21.884687Z", "url": "https://files.pythonhosted.org/packages/c7/c7/5a6ede01efeb740707e3adf4a1fa30606b6fe8a4304d14ae6d67e69a3d2e/awswl-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0f4b06f67ce34d253ebb919765070d0", "sha256": "0f2fa11dbbc39b0f1996326f6c51a9f3883e4f2a4d97558ba66d1175c574e627"}, "downloads": -1, "filename": "awswl-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e0f4b06f67ce34d253ebb919765070d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9564, "upload_time": "2018-04-10T15:33:22", "upload_time_iso_8601": "2018-04-10T15:33:22.844827Z", "url": "https://files.pythonhosted.org/packages/59/8a/7df29db1e3e8cb4ba3f78c8f959c6abf49148bb28f51ff5a43a2fe81368e/awswl-1.0.0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "11ffbc2a5c3b43da912afa7c972e79aa", "sha256": "7de1e22e303f16583064ecf7ba9b2aebc3dc7b1b7d5b39520072409ff4e9d215"}, "downloads": -1, "filename": "awswl-1.0.0a1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "11ffbc2a5c3b43da912afa7c972e79aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6444, "upload_time": "2018-03-03T16:29:03", "upload_time_iso_8601": "2018-03-03T16:29:03.825839Z", "url": "https://files.pythonhosted.org/packages/bb/57/3c4b4e99a235775ee92e669ed8e2a6499d5a382d77272df892385473d96e/awswl-1.0.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b4f6f03cc0cdcb40562d57b8085293a", "sha256": "912ff6f4a544f71040692eaf329d52811b8ac9ee18952a4e0bf26413a4f63ade"}, "downloads": -1, "filename": "awswl-1.0.0a1.tar.gz", "has_sig": true, "md5_digest": "5b4f6f03cc0cdcb40562d57b8085293a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5720, "upload_time": "2018-03-03T16:28:41", "upload_time_iso_8601": "2018-03-03T16:28:41.602938Z", "url": "https://files.pythonhosted.org/packages/c9/2d/efeea1518cbd3c56bf12a52109207576acf61760d7f2c4bbd6174347c1a6/awswl-1.0.0a1.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "88134b31e155bf5342fad16a20110f80", "sha256": "9b1e623b5573693e2c743c777e8841984e757a085fb41fa44f768bd70370f4d4"}, "downloads": -1, "filename": "awswl-1.0.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "88134b31e155bf5342fad16a20110f80", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9018, "upload_time": "2018-04-04T22:31:34", "upload_time_iso_8601": "2018-04-04T22:31:34.411172Z", "url": "https://files.pythonhosted.org/packages/b2/44/623119d79e4df30a0ef7137fdf46329200e06301a0eac7d58ad90d044440/awswl-1.0.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38f21e48f32ee1262125572b8ea4feff", "sha256": "ba5758c5066a26aedf5457e508d4aef85064931990abaac50add811148f24554"}, "downloads": -1, "filename": "awswl-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "38f21e48f32ee1262125572b8ea4feff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6508, "upload_time": "2018-04-04T22:31:35", "upload_time_iso_8601": "2018-04-04T22:31:35.458878Z", "url": "https://files.pythonhosted.org/packages/8a/32/31864d8ca45c1f6cd09575e390cfc75151e019ece9b9e1d917677c910467/awswl-1.0.0b1.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e5d76fa4b4f4aae5732166361ac827b6", "sha256": "d149bf385c648df1ffd901763a4461b0984e0d571d4c5bdc077482472a627184"}, "downloads": -1, "filename": "awswl-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e5d76fa4b4f4aae5732166361ac827b6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11361, "upload_time": "2018-05-08T19:26:10", "upload_time_iso_8601": "2018-05-08T19:26:10.498239Z", "url": "https://files.pythonhosted.org/packages/66/ed/5b224b888624e73b413d991519f1aa7d62f2f786dac71a99cff2c80f0e9f/awswl-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bd418cce7913bd091da1e550a1b93b0", "sha256": "6029ddf2393c5ac7254e8a978da9146c8f1af4c9b945e984dc0eff9f2b2edc33"}, "downloads": -1, "filename": "awswl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6bd418cce7913bd091da1e550a1b93b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9634, "upload_time": "2018-05-08T19:26:11", "upload_time_iso_8601": "2018-05-08T19:26:11.386059Z", "url": "https://files.pythonhosted.org/packages/12/36/38c73b892f11d142d3f88323eac4e08cf9bfeb5297e7f68e318f69f93f45/awswl-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ca450daf81065331eddc53fd1592e3a8", "sha256": "b53db55894303a69212767c2d717579a43b3028679a37265c41ca41031e9dc42"}, "downloads": -1, "filename": "awswl-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca450daf81065331eddc53fd1592e3a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9070, "upload_time": "2018-10-29T23:03:27", "upload_time_iso_8601": "2018-10-29T23:03:27.060489Z", "url": "https://files.pythonhosted.org/packages/f7/ef/ed83068873564bb02528324b0a60acb9d0d07b50026fd2d69f34577382f1/awswl-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b61bc96486328b2192ee8325f5703fd", "sha256": "5e5da09ad4d81c8887cbfe08721adbb6ee198e5f89a73715cad7c071b59e08a0"}, "downloads": -1, "filename": "awswl-1.0.2.tar.gz", "has_sig": false, "md5_digest": "1b61bc96486328b2192ee8325f5703fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9803, "upload_time": "2018-10-29T23:03:28", "upload_time_iso_8601": "2018-10-29T23:03:28.409344Z", "url": "https://files.pythonhosted.org/packages/6f/56/ade8abcbd4b68b20b87b0697b80e2eae4074e767492db19725aab5e7a2c9/awswl-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ca450daf81065331eddc53fd1592e3a8", "sha256": "b53db55894303a69212767c2d717579a43b3028679a37265c41ca41031e9dc42"}, "downloads": -1, "filename": "awswl-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca450daf81065331eddc53fd1592e3a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9070, "upload_time": "2018-10-29T23:03:27", "upload_time_iso_8601": "2018-10-29T23:03:27.060489Z", "url": "https://files.pythonhosted.org/packages/f7/ef/ed83068873564bb02528324b0a60acb9d0d07b50026fd2d69f34577382f1/awswl-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b61bc96486328b2192ee8325f5703fd", "sha256": "5e5da09ad4d81c8887cbfe08721adbb6ee198e5f89a73715cad7c071b59e08a0"}, "downloads": -1, "filename": "awswl-1.0.2.tar.gz", "has_sig": false, "md5_digest": "1b61bc96486328b2192ee8325f5703fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9803, "upload_time": "2018-10-29T23:03:28", "upload_time_iso_8601": "2018-10-29T23:03:28.409344Z", "url": "https://files.pythonhosted.org/packages/6f/56/ade8abcbd4b68b20b87b0697b80e2eae4074e767492db19725aab5e7a2c9/awswl-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:32 2020"}