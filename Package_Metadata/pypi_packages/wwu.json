{"info": {"author": "Rob Horton", "author_email": "vulgarmessiah@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# WWU\n\nDo you have limited storage space and a bunch of boxes to store? wwu tells you which way up will be best.\n\nBoxes have 6 permutations in terms of storing them and currently wwu provides an indexed value of a permutation so you will only receive values in the range of 0 - 5.\n\n## Example\n\n```py\nfrom wwu import Box\n\nb = Box(10, 10, 20)  # Create a box with 10 x 10 x 20 dimensions.\nb.wwu(10, 10, 20)  # Find the optimal permutation in storage space of 10 x 10 x 20\n\n>>> 0\n```\n\n## Installation\n\n```\npip install wwu\n```\n\n## Tests\n\n```\npytest\n```\n\n```\n========================================= test session starts ==========================================\nplatform linux -- Python 3.7.4, pytest-5.1.2, py-1.8.0, pluggy-0.12.0\nrootdir: /var/home/Um9i/Documents/wwu\ncollected 2 items                                                                                      \n\ntests/test_wwu.py ..                                                                             [100%]\n\n========================================== 2 passed in 0.01s ===========================================\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Um9i/wwu/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Um9i/wwu", "keywords": "boxes containers inventory permutation combinatorics", "license": "", "maintainer": "", "maintainer_email": "", "name": "wwu", "package_url": "https://pypi.org/project/wwu/", "platform": "", "project_url": "https://pypi.org/project/wwu/", "project_urls": {"Download": "https://github.com/Um9i/wwu/archive/master.zip", "Homepage": "https://github.com/Um9i/wwu"}, "release_url": "https://pypi.org/project/wwu/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Find the optimal way up to store your boxes.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WWU</h1>\n<p>Do you have limited storage space and a bunch of boxes to store? wwu tells you which way up will be best.</p>\n<p>Boxes have 6 permutations in terms of storing them and currently wwu provides an indexed value of a permutation so you will only receive values in the range of 0 - 5.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wwu</span> <span class=\"kn\">import</span> <span class=\"n\">Box</span>\n\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">Box</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>  <span class=\"c1\"># Create a box with 10 x 10 x 20 dimensions.</span>\n<span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">wwu</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>  <span class=\"c1\"># Find the optimal permutation in storage space of 10 x 10 x 20</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">0</span>\n</pre>\n<h2>Installation</h2>\n<pre><code>pip install wwu\n</code></pre>\n<h2>Tests</h2>\n<pre><code>pytest\n</code></pre>\n<pre><code>========================================= test session starts ==========================================\nplatform linux -- Python 3.7.4, pytest-5.1.2, py-1.8.0, pluggy-0.12.0\nrootdir: /var/home/Um9i/Documents/wwu\ncollected 2 items                                                                                      \n\ntests/test_wwu.py ..                                                                             [100%]\n\n========================================== 2 passed in 0.01s ===========================================\n</code></pre>\n\n          </div>"}, "last_serial": 5764240, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c11c0cebc878f888cf5e22df7bd80122", "sha256": "634a4667000c51d893f8d72c77732dcf334425835e5ee1d9af0090968ec240b4"}, "downloads": -1, "filename": "wwu-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c11c0cebc878f888cf5e22df7bd80122", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3957, "upload_time": "2019-08-31T12:31:06", "upload_time_iso_8601": "2019-08-31T12:31:06.513135Z", "url": "https://files.pythonhosted.org/packages/ed/48/f0ae7965d6776912f4ef6242246a28bf00f83decd2f0e660c93c55a7706d/wwu-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4475ab71c19054857a6092513bdf29ce", "sha256": "13ccbbb991a03a2e40159337e4b2ce11714a78ec1cb226bc9df2d9d275fc6139"}, "downloads": -1, "filename": "wwu-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4475ab71c19054857a6092513bdf29ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2477, "upload_time": "2019-08-31T12:31:09", "upload_time_iso_8601": "2019-08-31T12:31:09.044084Z", "url": "https://files.pythonhosted.org/packages/70/0c/3dd9566d7b4ca1a388a46e6e6591776552f7b61c60394e5ba1dc432e0a4f/wwu-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "44edca79708801adc1a307c04f9cd674", "sha256": "bf93a76c2113b30209e77951822e712297bc22a2b037db0cb5b6aaf378576eb2"}, "downloads": -1, "filename": "wwu-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "44edca79708801adc1a307c04f9cd674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3951, "upload_time": "2019-08-31T12:34:59", "upload_time_iso_8601": "2019-08-31T12:34:59.230941Z", "url": "https://files.pythonhosted.org/packages/02/c3/ab45142b4f60882ef8394a9f6674f99cd34bce34222cda3f728cdc7c5a7a/wwu-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f0a74a67856cf1ae4f3b1290b3eca50", "sha256": "0287fa1a7d65b2ccb58bedb52d34e5301670222873ccdd59bbc1ce05fd6d1147"}, "downloads": -1, "filename": "wwu-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0f0a74a67856cf1ae4f3b1290b3eca50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2469, "upload_time": "2019-08-31T12:35:00", "upload_time_iso_8601": "2019-08-31T12:35:00.356388Z", "url": "https://files.pythonhosted.org/packages/d9/e3/93216d54b6d17d9e89b88abcf05f33bca944227e21179aed439cf8cec827/wwu-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44edca79708801adc1a307c04f9cd674", "sha256": "bf93a76c2113b30209e77951822e712297bc22a2b037db0cb5b6aaf378576eb2"}, "downloads": -1, "filename": "wwu-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "44edca79708801adc1a307c04f9cd674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3951, "upload_time": "2019-08-31T12:34:59", "upload_time_iso_8601": "2019-08-31T12:34:59.230941Z", "url": "https://files.pythonhosted.org/packages/02/c3/ab45142b4f60882ef8394a9f6674f99cd34bce34222cda3f728cdc7c5a7a/wwu-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f0a74a67856cf1ae4f3b1290b3eca50", "sha256": "0287fa1a7d65b2ccb58bedb52d34e5301670222873ccdd59bbc1ce05fd6d1147"}, "downloads": -1, "filename": "wwu-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0f0a74a67856cf1ae4f3b1290b3eca50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2469, "upload_time": "2019-08-31T12:35:00", "upload_time_iso_8601": "2019-08-31T12:35:00.356388Z", "url": "https://files.pythonhosted.org/packages/d9/e3/93216d54b6d17d9e89b88abcf05f33bca944227e21179aed439cf8cec827/wwu-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:40 2020"}