{"info": {"author": "Horde Chief", "author_email": "hordechief@qq.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# codingsoho-auth\n\n\ncodingsoho-authwrapper project is auth wrapper for authentication\n\nDetailed documentation is in the \"docs\" directory.\n\n## Quick start\n\n1. Install 'authwrapper' and 'django-phone-login', checking django-phone-login readme for configuration\n\n2. Add \"authwrapper\" to your INSTALLED_APPS setting like this::\n``` python\n    INSTALLED_APPS = [\n        ...\n        'authwrapper',\n\t\t'phone_login',\n    ]\n```\n3  Add configurations\n``` python\n\tAUTH_USER_MODEL = 'authwrapper.MyUser'\n\tACCOUNT_ALLOW_MIX_TYPE_LOGIN = True\n\tUUSLUGIFY = True\n\t\n\tAUTHENTICATION_BACKENDS = (        \n    'authwrapper.backends.auth.MyBackend', \n    'authwrapper.backends.auth.WechatBackend', # if support wechat\n    'django.contrib.auth.backends.ModelBackend',     \n    )\n\t\n\t# if support wechat\n\tAPP_SECRET = \n\tAPP_ID = \n\t\n\tACCOUNT_REGISTER_TYPE =  'phone' # or 'email'\n```\n\n2. Include the polls URLconf in your project urls.py like this::\n``` python\n    url(r'^authwrapper/', include('authwrapper.urls')),\n```\n3. Run `python manage.py migrate` to create the authwrapper models.\n\n4. Start the development server and visit http://127.0.0.1:8000/admin/\n   to create a models if needed (you'll need the Admin app enabled).\n\n5. Visit http://127.0.0.1:8000/authwrapper/ to participate in the auth.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.codingsoho.com/", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "codingsoho-auth", "package_url": "https://pypi.org/project/codingsoho-auth/", "platform": "", "project_url": "https://pypi.org/project/codingsoho-auth/", "project_urls": {"Homepage": "http://www.codingsoho.com/"}, "release_url": "https://pypi.org/project/codingsoho-auth/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "this project is wrapper for auth", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>codingsoho-auth</h1>\n<p>codingsoho-authwrapper project is auth wrapper for authentication</p>\n<p>Detailed documentation is in the \"docs\" directory.</p>\n<h2>Quick start</h2>\n<ol>\n<li>\n<p>Install 'authwrapper' and 'django-phone-login', checking django-phone-login readme for configuration</p>\n</li>\n<li>\n<p>Add \"authwrapper\" to your INSTALLED_APPS setting like this::</p>\n</li>\n</ol>\n<pre>    <span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"o\">...</span>\n        <span class=\"s1\">'authwrapper'</span><span class=\"p\">,</span>\n\t\t<span class=\"s1\">'phone_login'</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>3  Add configurations</p>\n<pre>\t<span class=\"n\">AUTH_USER_MODEL</span> <span class=\"o\">=</span> <span class=\"s1\">'authwrapper.MyUser'</span>\n\t<span class=\"n\">ACCOUNT_ALLOW_MIX_TYPE_LOGIN</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\t<span class=\"n\">UUSLUGIFY</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\t\n\t<span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>        \n    <span class=\"s1\">'authwrapper.backends.auth.MyBackend'</span><span class=\"p\">,</span> \n    <span class=\"s1\">'authwrapper.backends.auth.WechatBackend'</span><span class=\"p\">,</span> <span class=\"c1\"># if support wechat</span>\n    <span class=\"s1\">'django.contrib.auth.backends.ModelBackend'</span><span class=\"p\">,</span>     \n    <span class=\"p\">)</span>\n\t\n\t<span class=\"c1\"># if support wechat</span>\n\t<span class=\"n\">APP_SECRET</span> <span class=\"o\">=</span> \n\t<span class=\"n\">APP_ID</span> <span class=\"o\">=</span> \n\t\n\t<span class=\"n\">ACCOUNT_REGISTER_TYPE</span> <span class=\"o\">=</span>  <span class=\"s1\">'phone'</span> <span class=\"c1\"># or 'email'</span>\n</pre>\n<ol>\n<li>Include the polls URLconf in your project urls.py like this::</li>\n</ol>\n<pre>    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^authwrapper/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'authwrapper.urls'</span><span class=\"p\">)),</span>\n</pre>\n<ol>\n<li>\n<p>Run <code>python manage.py migrate</code> to create the authwrapper models.</p>\n</li>\n<li>\n<p>Start the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nto create a models if needed (you'll need the Admin app enabled).</p>\n</li>\n<li>\n<p>Visit <a href=\"http://127.0.0.1:8000/authwrapper/\" rel=\"nofollow\">http://127.0.0.1:8000/authwrapper/</a> to participate in the auth.</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 5546145, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2c53f2b7920e9c9feee138d861d5df39", "sha256": "b628233f05f8a2220389c63656ad5f4ee8a0809079c04445a3bdd193538d01d1"}, "downloads": -1, "filename": "codingsoho-auth-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2c53f2b7920e9c9feee138d861d5df39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39521, "upload_time": "2018-06-24T08:23:22", "upload_time_iso_8601": "2018-06-24T08:23:22.064681Z", "url": "https://files.pythonhosted.org/packages/a2/76/75c4bc5e0bc1fa0f50b86744e0d78bbb58eb4f0bc631cec27c92774e23bb/codingsoho-auth-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "8198b6c118570b40bf65c3aa2334abec", "sha256": "6b863cd240379fc9e6e3d732bd755ed5db14cbb8473bca238f3ae9640a4295b2"}, "downloads": -1, "filename": "codingsoho-auth-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8198b6c118570b40bf65c3aa2334abec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39629, "upload_time": "2018-06-24T08:42:30", "upload_time_iso_8601": "2018-06-24T08:42:30.811393Z", "url": "https://files.pythonhosted.org/packages/55/25/fb425dc1e1e267ee0f1251e8c0e7f07a48cdcd20ac5482a2867da7f7144e/codingsoho-auth-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "569bdee6a697fb8d0cf20b06e052d5e7", "sha256": "4b566889750f34adb96138bab07b66ed2b38c553147bb1ea3a90cdb9f51d05c2"}, "downloads": -1, "filename": "codingsoho-auth-1.0.2.tar.gz", "has_sig": false, "md5_digest": "569bdee6a697fb8d0cf20b06e052d5e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70368, "upload_time": "2019-07-17T14:22:24", "upload_time_iso_8601": "2019-07-17T14:22:24.397377Z", "url": "https://files.pythonhosted.org/packages/00/05/f8f48063cce63699734578b99ec4daba1ae6b4367071924d181d68af691f/codingsoho-auth-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "569bdee6a697fb8d0cf20b06e052d5e7", "sha256": "4b566889750f34adb96138bab07b66ed2b38c553147bb1ea3a90cdb9f51d05c2"}, "downloads": -1, "filename": "codingsoho-auth-1.0.2.tar.gz", "has_sig": false, "md5_digest": "569bdee6a697fb8d0cf20b06e052d5e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70368, "upload_time": "2019-07-17T14:22:24", "upload_time_iso_8601": "2019-07-17T14:22:24.397377Z", "url": "https://files.pythonhosted.org/packages/00/05/f8f48063cce63699734578b99ec4daba1ae6b4367071924d181d68af691f/codingsoho-auth-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:12 2020"}