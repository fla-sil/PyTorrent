{"info": {"author": "Refael Kohen", "author_email": "refael.kohen@weizmann.ac.il", "bugtrack_url": null, "classifiers": [], "description": "## Queries on bam file of single cell per genome position for finding rare mutations\n\n\nsingle-cell-bam-queries.py --help\n\nusage: single-cell-bam-queries.py [-h] --input-file INPUT_FILE --output-file\n                                  OUTPUT_FILE [--coordinates COORDINATES]\n                                  [--filtered-cell-barcodes-file FILTERED_CELL_BARCODES_FILE]\n                                  [--min-mapq MIN_MAPQ]\n                                  [--max-gene-length MAX_GENE_LENGTH]\n                                  [--threads THREADS] [--min-cells MIN_CELLS]\n                                  [--max-cells MAX_CELLS]\n                                  [--min-mutated-umis MIN_MUTATED_UMIS]\n                                  [--max-mutated-umis MAX_MUTATED_UMIS]\n                                  [--min-reads-per-non-mutated-umi MIN_READS_PER_NON_MUTATED_UMI]\n                                  [--max-reads-per-non-mutated-umi MAX_READS_PER_NON_MUTATED_UMI]\n                                  [--min-non-mutated-umis MIN_NON_MUTATED_UMIS]\n                                  [--max-non-mutated-umis MAX_NON_MUTATED_UMIS]\n                                  [--min-reads-per-mutated-umi MIN_READS_PER_MUTATED_UMI]\n                                  [--max-reads-per-mutated-umi MAX_READS_PER_MUTATED_UMI]\n                                  [--enable-cells-with-invalid-umis-num]\n                                  [--enable-umis-with-invalid-reads-num]\n                                  [--tag-of-umi TAG_OF_UMI]\n                                  [--tag-of-cell-barcode TAG_OF_CELL_BARCODE]\n                                  [--umi-start UMI_START]\n                                  [--umi-length UMI_LENGTH]\n                                  [--cell-barcode-start CELL_BARCODE_START]\n                                  [--cell-barcode-length CELL_BARCODE_LENGTH]\n                                  [--log-file LOG_FILE]\n\n    Queries on bam file of single cell per genome position.\n\n    The bam file must be sorted and indexed with the commands:\n\n    samtools sort filename.bam > filename.sorted.bam\n    samtools index filename.sorted.bam\n\n    By default the umi and barcode cells are comptible to bam files from cellranger.\n    For other formats you need to change the parameters of tags and cell barcodes.\n\n    Pre-request: python package: pysam\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input-file INPUT_FILE\n                        Full path to input .bam or .sam file (default: None)\n  --output-file OUTPUT_FILE\n                        Full path to output file name (default: None)\n  --coordinates COORDINATES\n                        Coordinates of the genome. The default is all genome.\n                        For example: chr1:1000000-2000000, or for all\n                        chromosom: chr1 (default: all)\n  --filtered-cell-barcodes-file FILTERED_CELL_BARCODES_FILE\n                        Text file with list of cell barcodes. Counts only\n                        these cells (optional) (default: None)\n  --min-mapq MIN_MAPQ   Minimum quality of the read mapping (default: 10)\n  --max-gene-length MAX_GENE_LENGTH\n                        Maximum length of the gene. Reads that will be mapped\n                        to longer bases will be discarded (default: 100000)\n  --threads THREADS     number of threads. You can run the chromosome itself\n                        in several threads. You can use this prameter only if\n                        you specify the start and end coordinates explicitely\n                        in the format: chr1:0-14000000 or if the bam file\n                        contains header lines with the lengths of the\n                        chromosomes, you can check it with the commands:\n                        samtools view -h filename.bam (default: 1)\n  --min-cells MIN_CELLS\n                        mininum cells in genome position that contains the\n                        number of umis and reads according to the other\n                        parameters (default: 1)\n  --max-cells MAX_CELLS\n                        maximum cells in genome position that contains the\n                        number of umis and reads according to the other\n                        parameters (default: 1000000000)\n  --min-mutated-umis MIN_MUTATED_UMIS\n                        mininum umis per cell that all reads contain mutation\n                        in the position (default: 1)\n  --max-mutated-umis MAX_MUTATED_UMIS\n                        maximum umis per cell that all reads contain mutation\n                        in the position (default: 1000000000)\n  --min-reads-per-non-mutated-umi MIN_READS_PER_NON_MUTATED_UMI\n                        mininum reads in at least one of umis in the cell in\n                        genome position (default: 1)\n  --max-reads-per-non-mutated-umi MAX_READS_PER_NON_MUTATED_UMI\n                        maximum reads in at least one of umis in the cell in\n                        genome position (default: 1000000000)\n  --min-non-mutated-umis MIN_NON_MUTATED_UMIS\n                        mininum umis per cell that all reads not contain\n                        mutation in the genome position (default: 1)\n  --max-non-mutated-umis MAX_NON_MUTATED_UMIS\n                        maximum umis per cell that all reads not contain\n                        mutation in the genome position (default: 1000000000)\n  --min-reads-per-mutated-umi MIN_READS_PER_MUTATED_UMI\n                        mininum reads in at least one of umis in the cell in\n                        genome position (default: 1)\n  --max-reads-per-mutated-umi MAX_READS_PER_MUTATED_UMI\n                        maximum reads in at least one of umis in the cell in\n                        genome position (default: 1000000000)\n  --enable-cells-with-invalid-umis-num\n                        enable positions that contain cell/s with not valid\n                        umis number (according to ther range in the other\n                        parameters) (default: False)\n  --enable-umis-with-invalid-reads-num\n                        enable positions that contain umi/s with not valid\n                        reads number (according to ther range in the other\n                        parameters) (default: False)\n  --tag-of-umi TAG_OF_UMI\n                        the tag of umi in bam file (default: UR)\n  --tag-of-cell-barcode TAG_OF_CELL_BARCODE\n                        the tag of umi in bam file (default: CR)\n  --umi-start UMI_START\n                        location in tag where the umi start (0-based)\n                        (default: 0)\n  --umi-length UMI_LENGTH\n                        length of umi (default: 10)\n  --cell-barcode-start CELL_BARCODE_START\n                        location in tag where the cell barcode start (0-based)\n                        (default: 0)\n  --cell-barcode-length CELL_BARCODE_LENGTH\n                        length of cell barcode (default: 16)\n  --log-file LOG_FILE   Log File (default: None)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bbcu.singleCellBamQueries", "package_url": "https://pypi.org/project/bbcu.singleCellBamQueries/", "platform": "", "project_url": "https://pypi.org/project/bbcu.singleCellBamQueries/", "project_urls": null, "release_url": "https://pypi.org/project/bbcu.singleCellBamQueries/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Queries on bam file of single cell per genome position for finding rare mutations", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>## Queries on bam file of single cell per genome position for finding rare mutations</p>\n<p>single-cell-bam-queries.py \u2013help</p>\n<dl>\n<dt>usage: single-cell-bam-queries.py [-h] \u2013input-file INPUT_FILE \u2013output-file</dt>\n<dd><blockquote>\nOUTPUT_FILE [\u2013coordinates COORDINATES]\n[\u2013filtered-cell-barcodes-file FILTERED_CELL_BARCODES_FILE]\n[\u2013min-mapq MIN_MAPQ]\n[\u2013max-gene-length MAX_GENE_LENGTH]\n[\u2013threads THREADS] [\u2013min-cells MIN_CELLS]\n[\u2013max-cells MAX_CELLS]\n[\u2013min-mutated-umis MIN_MUTATED_UMIS]\n[\u2013max-mutated-umis MAX_MUTATED_UMIS]\n[\u2013min-reads-per-non-mutated-umi MIN_READS_PER_NON_MUTATED_UMI]\n[\u2013max-reads-per-non-mutated-umi MAX_READS_PER_NON_MUTATED_UMI]\n[\u2013min-non-mutated-umis MIN_NON_MUTATED_UMIS]\n[\u2013max-non-mutated-umis MAX_NON_MUTATED_UMIS]\n[\u2013min-reads-per-mutated-umi MIN_READS_PER_MUTATED_UMI]\n[\u2013max-reads-per-mutated-umi MAX_READS_PER_MUTATED_UMI]\n[\u2013enable-cells-with-invalid-umis-num]\n[\u2013enable-umis-with-invalid-reads-num]\n[\u2013tag-of-umi TAG_OF_UMI]\n[\u2013tag-of-cell-barcode TAG_OF_CELL_BARCODE]\n[\u2013umi-start UMI_START]\n[\u2013umi-length UMI_LENGTH]\n[\u2013cell-barcode-start CELL_BARCODE_START]\n[\u2013cell-barcode-length CELL_BARCODE_LENGTH]\n[\u2013log-file LOG_FILE]</blockquote>\n<p>Queries on bam file of single cell per genome position.</p>\n<p>The bam file must be sorted and indexed with the commands:</p>\n<p>samtools sort filename.bam &gt; filename.sorted.bam\nsamtools index filename.sorted.bam</p>\n<p>By default the umi and barcode cells are comptible to bam files from cellranger.\nFor other formats you need to change the parameters of tags and cell barcodes.</p>\n<p>Pre-request: python package: pysam</p>\n</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--input-file <var>INPUT_FILE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Full path to input .bam or .sam file (default: None)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--output-file <var>OUTPUT_FILE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Full path to output file name (default: None)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--coordinates <var>COORDINATES</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Coordinates of the genome. The default is all genome.\nFor example: chr1:1000000-2000000, or for all\nchromosom: chr1 (default: all)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--filtered-cell-barcodes-file <var>FILTERED_CELL_BARCODES_FILE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Text file with list of cell barcodes. Counts only\nthese cells (optional) (default: None)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--min-mapq <var>MIN_MAPQ</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Minimum quality of the read mapping (default: 10)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--max-gene-length <var>MAX_GENE_LENGTH</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Maximum length of the gene. Reads that will be mapped\nto longer bases will be discarded (default: 100000)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--threads <var>THREADS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>number of threads. You can run the chromosome itself\nin several threads. You can use this prameter only if\nyou specify the start and end coordinates explicitely\nin the format: chr1:0-14000000 or if the bam file\ncontains header lines with the lengths of the\nchromosomes, you can check it with the commands:\nsamtools view -h filename.bam (default: 1)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--min-cells <var>MIN_CELLS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>mininum cells in genome position that contains the\nnumber of umis and reads according to the other\nparameters (default: 1)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--max-cells <var>MAX_CELLS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum cells in genome position that contains the\nnumber of umis and reads according to the other\nparameters (default: 1000000000)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--min-mutated-umis <var>MIN_MUTATED_UMIS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>mininum umis per cell that all reads contain mutation\nin the position (default: 1)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--max-mutated-umis <var>MAX_MUTATED_UMIS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum umis per cell that all reads contain mutation\nin the position (default: 1000000000)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--min-reads-per-non-mutated-umi <var>MIN_READS_PER_NON_MUTATED_UMI</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>mininum reads in at least one of umis in the cell in\ngenome position (default: 1)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--max-reads-per-non-mutated-umi <var>MAX_READS_PER_NON_MUTATED_UMI</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum reads in at least one of umis in the cell in\ngenome position (default: 1000000000)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--min-non-mutated-umis <var>MIN_NON_MUTATED_UMIS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>mininum umis per cell that all reads not contain\nmutation in the genome position (default: 1)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--max-non-mutated-umis <var>MAX_NON_MUTATED_UMIS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum umis per cell that all reads not contain\nmutation in the genome position (default: 1000000000)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--min-reads-per-mutated-umi <var>MIN_READS_PER_MUTATED_UMI</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>mininum reads in at least one of umis in the cell in\ngenome position (default: 1)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--max-reads-per-mutated-umi <var>MAX_READS_PER_MUTATED_UMI</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum reads in at least one of umis in the cell in\ngenome position (default: 1000000000)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--enable-cells-with-invalid-umis-num</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>enable positions that contain cell/s with not valid\numis number (according to ther range in the other\nparameters) (default: False)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--enable-umis-with-invalid-reads-num</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>enable positions that contain umi/s with not valid\nreads number (according to ther range in the other\nparameters) (default: False)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--tag-of-umi <var>TAG_OF_UMI</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>the tag of umi in bam file (default: UR)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--tag-of-cell-barcode <var>TAG_OF_CELL_BARCODE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>the tag of umi in bam file (default: CR)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--umi-start <var>UMI_START</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>location in tag where the umi start (0-based)\n(default: 0)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--umi-length <var>UMI_LENGTH</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>length of umi (default: 10)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--cell-barcode-start <var>CELL_BARCODE_START</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>location in tag where the cell barcode start (0-based)\n(default: 0)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--cell-barcode-length <var>CELL_BARCODE_LENGTH</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>length of cell barcode (default: 16)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--log-file <var>LOG_FILE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Log File (default: None)</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n\n          </div>"}, "last_serial": 6018296, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "21f363cecf147049f141fae26ca38004", "sha256": "7ec03a3f3b7e6b98e680adc7bb4fe41be1012159c0851852336b313add2aa485"}, "downloads": -1, "filename": "bbcu.singleCellBamQueries-1.0.0.tar.gz", "has_sig": false, "md5_digest": "21f363cecf147049f141fae26ca38004", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10902, "upload_time": "2019-07-14T08:06:51", "upload_time_iso_8601": "2019-07-14T08:06:51.598504Z", "url": "https://files.pythonhosted.org/packages/19/36/02cbe75986a449c75515e1db1da5f89c76f905ec6cfc9a0ee6ad8b9f352e/bbcu.singleCellBamQueries-1.0.0.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "02e85775e8b2c50478edf8e2f71a5d93", "sha256": "17e651734858fd6148ac27513eec16da9a9406f83d5c2a0e83dd2b90f1c91a62"}, "downloads": -1, "filename": "bbcu.singleCellBamQueries-1.0.2.tar.gz", "has_sig": false, "md5_digest": "02e85775e8b2c50478edf8e2f71a5d93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10645, "upload_time": "2019-07-14T08:26:11", "upload_time_iso_8601": "2019-07-14T08:26:11.896103Z", "url": "https://files.pythonhosted.org/packages/65/93/5722716e60a7eba952f6bb0b24bddaa336de040a8a678652fb4155d8e3a9/bbcu.singleCellBamQueries-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "09370587941cc9a04a46d4578df10579", "sha256": "889ba25f544ee70c673bebc1e38922a138dbfa147955ce43577db318c686817e"}, "downloads": -1, "filename": "bbcu.singleCellBamQueries-1.0.3.tar.gz", "has_sig": false, "md5_digest": "09370587941cc9a04a46d4578df10579", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10741, "upload_time": "2019-07-14T08:29:17", "upload_time_iso_8601": "2019-07-14T08:29:17.359088Z", "url": "https://files.pythonhosted.org/packages/d2/0e/e197e21c33c5eb8a42a4cda39c6865b39cd5d663470148ceefe485221216/bbcu.singleCellBamQueries-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b2fcab5e5d244ca56afc0a5152b1cb18", "sha256": "c930a4cd36a77fd3ba24f583fa342808bf4af06c98c02159ff38a3ab830a86be"}, "downloads": -1, "filename": "bbcu.singleCellBamQueries-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b2fcab5e5d244ca56afc0a5152b1cb18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10738, "upload_time": "2019-07-14T08:31:49", "upload_time_iso_8601": "2019-07-14T08:31:49.743603Z", "url": "https://files.pythonhosted.org/packages/4d/16/78dfcbbb7040ab652f8bbe23884016cfdffe79165fa08a27df011038116a/bbcu.singleCellBamQueries-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b2fcab5e5d244ca56afc0a5152b1cb18", "sha256": "c930a4cd36a77fd3ba24f583fa342808bf4af06c98c02159ff38a3ab830a86be"}, "downloads": -1, "filename": "bbcu.singleCellBamQueries-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b2fcab5e5d244ca56afc0a5152b1cb18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10738, "upload_time": "2019-07-14T08:31:49", "upload_time_iso_8601": "2019-07-14T08:31:49.743603Z", "url": "https://files.pythonhosted.org/packages/4d/16/78dfcbbb7040ab652f8bbe23884016cfdffe79165fa08a27df011038116a/bbcu.singleCellBamQueries-1.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:40 2020"}