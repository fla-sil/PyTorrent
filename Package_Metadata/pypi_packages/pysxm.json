{"info": {"author": "Josue Kouka", "author_email": "josuebrunel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Simple XML Python Marshaller\n============================\n\n.. image:: https://travis-ci.org/josuebrunel/pysxm.svg?branch=master\n    :target: https://travis-ci.org/josuebrunel/pysxm\n.. image:: https://coveralls.io/repos/github/josuebrunel/pysxm/badge.svg?branch=master\n    :target: https://coveralls.io/github/josuebrunel/pysxm?branch=master\n.. image:: http://pepy.tech/badge/pysxm\n    :target: http://pepy.tech/count/pysxm\n\n\n**pysxm** is a simple and extensible xml python marshaller.\nIt comes with two simple and basic types:\n\n- SimpleType\n- ComplexType\n\nIt supports py2 and py3 and uses *lxml.objectify* under the hood.\n\n\nInstallation\n------------\n\n.. code:: python\n\n    pip install pysxm\n\n\nQuickstart\n----------\n\n.. code:: python\n\n    In [1]: from pysxm import ComplexType\n    In [2]: class Person(ComplexType):\n    ...:     attrib = {'description': 'a random person'}\n    ...:     def __init__(self, fname, lname):\n    ...:         self.fname = fname\n    ...:         self.lname = lname\n    ...:\n    In [3]: person = Person('token', 'black')\n    In [4]: print(person)\n    <person xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" description=\"a random person\">\n        <lname>black</lname>\n        <fname>token</fname>\n    </person>\n\nLet's say, we want a different **tag** for our object.\nAn attribute **tagname** or **_tagname** can be set to define the **xml tag name** of the object.\n\n.. code:: python\n\n    In [5]: class Person(ComplexType):\n    ...:     attrib = {'description': 'a random person'}\n    ...:     tagname = 'student'\n    ...:     def __init__(self, fname, lname):\n    ...:         self.fname = fname\n    ...:         self.lname = lname\n    ...:\n    In [6]: person = Person('token', 'black')\n    In [7]: print(person)\n    <student xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" description=\"a random person\">\n        <lname>black</lname>\n        <fname>token</fname>\n    </student>\n\nA **sequence** or **_sequence** (tuple or list) attribute can be set to decide of the **order** or the **presence** of an subelement in the xml.\n\n.. code:: python\n\n    In [8]: class Person(ComplexType):\n    ...:     attrib = {'description': 'a random person'}\n    ...:     tagname = 'student'\n    ...:     _sequence = ('city', 'fname')\n    ...:\n    ...:     def __init__(self, fname, lname, city):\n    ...:         self.fname = fname\n    ...:         self.lname = lname\n    ...:         self.city = city\n    ...:\n    In [9]: person = Person('token', 'black', 'south park')\n    In [10]: print(person)\n    <student xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" description=\"a random person\">\n        <city>south park</city>\n        <fname>token</fname>\n    </student>\n\nLet's add a **namespace** to our object.\n\n.. code:: python\n\n    In [11]: class Person(ComplexType):\n    ...:     attrib = {'description': 'a random south park character'}\n    ...:     nsmap = {'sp': 'http://southpark/xml/'}\n    ...:\n    ...:     def __init__(self, fname, lname, city):\n    ...:         self.fname = fname\n    ...:         self.lname = lname\n    ...:         self.city = city\n    ...:\n    In [12]: person = Person('token', 'black', 'south park')\n    In [13]: print(person)\n    <sp:person xmlns:sp=\"http://southpark/xml/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" description=\"a random south park character\">\n        <sp:lname>black</sp:lname>\n        <sp:city>south park</sp:city>\n        <sp:fname>token</sp:fname>\n    </sp:person>\n\nLet's make sure that a *person*'s group is either *coon* or *goth*.\nTo do so, we can inherit from **SimpleType** object and define a restriction by overriding **check_restriction(self, value)** method.\n\n.. code:: python\n\n    In [7]: from pysxm import ComplexType, SimpleType\n    In [8]: class Group(SimpleType):\n    ...:     allowed_groups = ('coon', 'goth')\n    ...:     def check_restriction(self, value):\n    ...:         if value not in self.allowed_groups:\n    ...:             raise ValueError('<%s> value %s not in %s' % (self.tagname, value, self.allowed_groups))\n    ...:\n    In [9]: class Person(ComplexType):\n    ...:     def __init__(self, fname, lname, group):\n    ...:         self.fname = fname\n    ...:         self.lname = lname\n    ...:         self.group = Group(group)\n    ...:\n    In [10]: Person('token', 'black', 'boys')\n    ...\n    <ipython-input-8-116b49042116> in check_restriction(self, value)\n    3     def check_restriction(self, value):\n    4         if value not in self.allowed_groups:\n    ----> 5             raise ValueError('<%s> value %s not in %s' % (self.tagname, value, self.allowed_groups))\n    6\n    ValueError: <group> value boys not in ('coon', 'goth')\n\n    In [11]: print(Person('token', 'black', 'goth'))\n    <person xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n        <lname>black</lname>\n        <group>goth</group>\n        <fname>token</fname>\n    </person>\n\n**Note**: *ComplexType* can have *ComplexType* and *SimpleType* as attribute\n\n.. code:: python\n\n    from pysxm import ComplexType, SimpleType\n\n\n    class AdultAge(SimpleType):\n\n        tagname = 'age'\n        attrib = {'minvalue': '18', 'maxvalue': '100'}\n\n        def check_restriction(self, value):\n            if int(value) < 18:\n                raise ValueError(\"<%s> '%d' < 18\" % (self.tagname, value))\n\n\n    class Credentials(ComplexType):\n\n        def __init__(self, login, password):\n            self.login = login\n            self.password = password\n\n\n    class Person(ComplexType):\n\n        def __init__(self, fname, lname, credentials, age):\n            self.fname = fname\n            self.lname = lname\n            self.credentials = Credentials(credentials['login'], credentials['password'])\n            self.age = AdultAge(age)\n\n    In [3]: data = {\n    ...:     'fname': 'token', 'lname': 'black',\n    ...:     'credentials': {'login': 't0ken', 'password': 'l33tolite'},\n    ...:     'age': '30'}\n    In [4]: person = Person(**data)\n    In [5]: print(person)\n    <person xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n        <lname>black</lname>\n        <credentials>\n            <login>t0ken</login>\n            <password>l33tolite</password>\n        </credentials>\n        <age maxvalue=\"100\" minvalue=\"18\">30</age>\n        <fname>token</fname>\n    </person>\n    In [6]: person.save('token.xml')\n\nThe **save** method (*object.save(<filename>)*) allows you to save the xml result into a file.\n\n.. code:: python\n\n    In [7]: cat token.xml\n    <person xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n        <lname>black</lname>\n        <credentials>\n            <login>t0ken</login>\n            <password>l33tolite</password>\n        </credentials>\n        <age maxvalue=\"100\" minvalue=\"18\">30</age>\n        <fname>token</fname>\n    </person>\n\n\nThe ext module\n^^^^^^^^^^^^^^\n\nPysxm comes with a couple of extended types. Those types are defined in *pysxm.ext* module.\n\nDataComplexType\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThis is a simple *DataClass* of *ComplexType*. Here is how you can set one up:\n\n.. code:: python\n\n    from pysxm.ext import DataComplexType, XSimpleType\n\n\n    class Game(DataComplexType):\n         platform = XSimpleType('platform', ['xboxone', 'xboxx'], lambda v, av: v in av)\n\n    >>> game = Game(name='state of decay 2', editor='undead labs', platform='xboxone')\n    >>> print(game)\n    <game>\n        <name>state of decay 2</name>\n        <platform>xboxone</platform>\n        <editor>undead labs</editor>\n    </game>\n\nXSimpleType\n\"\"\"\"\"\"\"\"\"\"\"\n\nIt gets tiresome to subclass a *SimpleType* everytime you want to check a value. To overcome that, **pysxm** provides a **descriptor** called **XSimpleType**:\n\n.. code:: python\n\n    class XSimpleType(name=None, restriction=None, checker=None, error_msg=None, **kwargs)\n        '''name: it's the name of the attribute.\n        restriction: self explanatory\n        checker: the fucntion that checks the input value\n        error_msg: message returned when checking fails\n        kwargs: as tagname, attrib or nsmap\n        '''\n\nHere is an example:\n\n\n.. code:: python\n\n    class XboxGamer(ComplexType):\n        platform = XSimpleType('platform', ('xone', 'xbox360', 'xbox'), lambda v, av: v in av)\n        score = XSimpleType('score', (4000, 1000000), lambda v, av: int(av[0]) <= int(v) < int(av[1]))\n        lastlogin = XDateTimeType('lastlogin')\n\n        def __init__(self, gamertag, platform, score, lastlogin):\n            self.gamertag = gamertag\n            self.platform = platform\n            self.score = score\n            self.lastlogin = lastlogin\n\n    In [1]: print(gamer_data)\n    {'gamertag': 'LokingHD', 'platform': 'ps4', 'score': '22526', 'lastlogin': '2018-03-21'}\n    In [2]: XboxGamer(**gamer_data)\n    ---------------------------------------------------------------------------\n    ValueError                                Traceback (most recent call last)\n    <ipython-input-2-61f95466da46> in <module>()\n    ----> 1 XboxGamer(**gamer_data)\n    /home/josue/workspace/dev/pysxdb/pysxm/ext.pyc in check(self, instance, value)\n    77         if not self.checker(value, self.restriction_values):\n    78             raise ValueError('tagname <%s> value %s is invalid: expected (%s)'\n    ---> 79                              % (instance.tagname, value, self.restriction_values))\n        80\n    81     def check_restriction(self, instance, value):\n    ValueError: tagname <xboxgamer> value ps4 is invalid: expected (('xone', 'xbox360', 'xbox'))\n    In [3]: gamer_data['platform'] = 'xone'\n    In [4]: gamer = XboxGamer(**gamer_data)\n    In [5]: print(gamer)\n    <xboxgamer xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n        <gamertag>LokingHD</gamertag>\n        <platform>xone</platform>\n        <score>22526</score>\n        <lastlogin>2018-03-21T00:00:00</lastlogin>\n    </xboxgamer>\n\n\nMost of the types defined in *pysxm.ext* are descriptors and they're subclassable.\n\n\nVoila :wink:", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/josuebrunel/pysxm/archive/1.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/josuebrunel/pysxm", "keywords": "xml,data binding,data,binding,data-binging,marshaller", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pysxm", "package_url": "https://pypi.org/project/pysxm/", "platform": "Any", "project_url": "https://pypi.org/project/pysxm/", "project_urls": {"Download": "https://github.com/josuebrunel/pysxm/archive/1.4.tar.gz", "Homepage": "https://github.com/josuebrunel/pysxm"}, "release_url": "https://pypi.org/project/pysxm/1.4/", "requires_dist": null, "requires_python": "", "summary": "Simple and extensible xml python marshaller", "version": "1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/josuebrunel/pysxm\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/josuebrunel/pysxm.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e880a28ae16472f30d4c1c4f61a4a61ec9402796/68747470733a2f2f7472617669732d63692e6f72672f6a6f7375656272756e656c2f707973786d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/josuebrunel/pysxm?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/josuebrunel/pysxm/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8d4dbd2790dd6b95c64dee3901e27adc16bb37e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6f7375656272756e656c2f707973786d2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://pepy.tech/count/pysxm\" rel=\"nofollow\"><img alt=\"http://pepy.tech/badge/pysxm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89c6ba76ae249d3927dcd66839849162d9000860/687474703a2f2f706570792e746563682f62616467652f707973786d\"></a>\n<p><strong>pysxm</strong> is a simple and extensible xml python marshaller.\nIt comes with two simple and basic types:</p>\n<ul>\n<li>SimpleType</li>\n<li>ComplexType</li>\n</ul>\n<p>It supports py2 and py3 and uses <em>lxml.objectify</em> under the hood.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pysxm</span>\n</pre>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">pysxm</span> <span class=\"kn\">import</span> <span class=\"n\">ComplexType</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">attrib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'a random person'</span><span class=\"p\">}</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">lname</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">lname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'black'</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">person</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"a random person\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span><span class=\"n\">black</span><span class=\"o\">&lt;/</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">person</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Let\u2019s say, we want a different <strong>tag</strong> for our object.\nAn attribute <strong>tagname</strong> or <strong>_tagname</strong> can be set to define the <strong>xml tag name</strong> of the object.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">attrib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'a random person'</span><span class=\"p\">}</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">tagname</span> <span class=\"o\">=</span> <span class=\"s1\">'student'</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">lname</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">lname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'black'</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">student</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"a random person\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span><span class=\"n\">black</span><span class=\"o\">&lt;/</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">student</span><span class=\"o\">&gt;</span>\n</pre>\n<p>A <strong>sequence</strong> or <strong>_sequence</strong> (tuple or list) attribute can be set to decide of the <strong>order</strong> or the <strong>presence</strong> of an subelement in the xml.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">attrib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'a random person'</span><span class=\"p\">}</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">tagname</span> <span class=\"o\">=</span> <span class=\"s1\">'student'</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">_sequence</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'city'</span><span class=\"p\">,</span> <span class=\"s1\">'fname'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">lname</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">lname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">city</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'black'</span><span class=\"p\">,</span> <span class=\"s1\">'south park'</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">student</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"a random person\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">city</span><span class=\"o\">&gt;</span><span class=\"n\">south</span> <span class=\"n\">park</span><span class=\"o\">&lt;/</span><span class=\"n\">city</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">student</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Let\u2019s add a <strong>namespace</strong> to our object.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">attrib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'a random south park character'</span><span class=\"p\">}</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">nsmap</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'sp'</span><span class=\"p\">:</span> <span class=\"s1\">'http://southpark/xml/'</span><span class=\"p\">}</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">lname</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">lname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">city</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">]:</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'black'</span><span class=\"p\">,</span> <span class=\"s1\">'south park'</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">person</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">sp</span><span class=\"o\">=</span><span class=\"s2\">\"http://southpark/xml/\"</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"a random south park character\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span><span class=\"n\">black</span><span class=\"o\">&lt;/</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">city</span><span class=\"o\">&gt;</span><span class=\"n\">south</span> <span class=\"n\">park</span><span class=\"o\">&lt;/</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">city</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">sp</span><span class=\"p\">:</span><span class=\"n\">person</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Let\u2019s make sure that a <em>person</em>\u2019s group is either <em>coon</em> or <em>goth</em>.\nTo do so, we can inherit from <strong>SimpleType</strong> object and define a restriction by overriding <strong>check_restriction(self, value)</strong> method.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">pysxm</span> <span class=\"kn\">import</span> <span class=\"n\">ComplexType</span><span class=\"p\">,</span> <span class=\"n\">SimpleType</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"k\">class</span> <span class=\"nc\">Group</span><span class=\"p\">(</span><span class=\"n\">SimpleType</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">allowed_groups</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'coon'</span><span class=\"p\">,</span> <span class=\"s1\">'goth'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"k\">def</span> <span class=\"nf\">check_restriction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allowed_groups</span><span class=\"p\">:</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>             <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'&lt;</span><span class=\"si\">%s</span><span class=\"s1\">&gt; value </span><span class=\"si\">%s</span><span class=\"s1\"> not in </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tagname</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allowed_groups</span><span class=\"p\">))</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">lname</span><span class=\"p\">,</span> <span class=\"n\">group</span><span class=\"p\">):</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">lname</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">)</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'black'</span><span class=\"p\">,</span> <span class=\"s1\">'boys'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"o\">-</span><span class=\"mi\">116</span><span class=\"n\">b49042116</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"n\">check_restriction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span>     <span class=\"k\">def</span> <span class=\"nf\">check_restriction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n<span class=\"mi\">4</span>         <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allowed_groups</span><span class=\"p\">:</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">5</span>             <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'&lt;</span><span class=\"si\">%s</span><span class=\"s1\">&gt; value </span><span class=\"si\">%s</span><span class=\"s1\"> not in </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tagname</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allowed_groups</span><span class=\"p\">))</span>\n<span class=\"mi\">6</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">group</span><span class=\"o\">&gt;</span> <span class=\"n\">value</span> <span class=\"n\">boys</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'coon'</span><span class=\"p\">,</span> <span class=\"s1\">'goth'</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'black'</span><span class=\"p\">,</span> <span class=\"s1\">'goth'</span><span class=\"p\">))</span>\n<span class=\"o\">&lt;</span><span class=\"n\">person</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span><span class=\"n\">black</span><span class=\"o\">&lt;/</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">group</span><span class=\"o\">&gt;</span><span class=\"n\">goth</span><span class=\"o\">&lt;/</span><span class=\"n\">group</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">person</span><span class=\"o\">&gt;</span>\n</pre>\n<p><strong>Note</strong>: <em>ComplexType</em> can have <em>ComplexType</em> and <em>SimpleType</em> as attribute</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysxm</span> <span class=\"kn\">import</span> <span class=\"n\">ComplexType</span><span class=\"p\">,</span> <span class=\"n\">SimpleType</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AdultAge</span><span class=\"p\">(</span><span class=\"n\">SimpleType</span><span class=\"p\">):</span>\n\n    <span class=\"n\">tagname</span> <span class=\"o\">=</span> <span class=\"s1\">'age'</span>\n    <span class=\"n\">attrib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'minvalue'</span><span class=\"p\">:</span> <span class=\"s1\">'18'</span><span class=\"p\">,</span> <span class=\"s1\">'maxvalue'</span><span class=\"p\">:</span> <span class=\"s1\">'100'</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_restriction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">18</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s2\">&gt; '</span><span class=\"si\">%d</span><span class=\"s2\">' &lt; 18\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tagname</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Credentials</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">login</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">login</span> <span class=\"o\">=</span> <span class=\"n\">login</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">password</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"n\">lname</span><span class=\"p\">,</span> <span class=\"n\">credentials</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lname</span> <span class=\"o\">=</span> <span class=\"n\">lname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">credentials</span> <span class=\"o\">=</span> <span class=\"n\">Credentials</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"p\">[</span><span class=\"s1\">'login'</span><span class=\"p\">],</span> <span class=\"n\">credentials</span><span class=\"p\">[</span><span class=\"s1\">'password'</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">AdultAge</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"s1\">'fname'</span><span class=\"p\">:</span> <span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'lname'</span><span class=\"p\">:</span> <span class=\"s1\">'black'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"s1\">'credentials'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'login'</span><span class=\"p\">:</span> <span class=\"s1\">'t0ken'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'l33tolite'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"s1\">'30'</span><span class=\"p\">}</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">person</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span><span class=\"n\">black</span><span class=\"o\">&lt;/</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">credentials</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">login</span><span class=\"o\">&gt;</span><span class=\"n\">t0ken</span><span class=\"o\">&lt;/</span><span class=\"n\">login</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">password</span><span class=\"o\">&gt;</span><span class=\"n\">l33tolite</span><span class=\"o\">&lt;/</span><span class=\"n\">password</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">credentials</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">age</span> <span class=\"n\">maxvalue</span><span class=\"o\">=</span><span class=\"s2\">\"100\"</span> <span class=\"n\">minvalue</span><span class=\"o\">=</span><span class=\"s2\">\"18\"</span><span class=\"o\">&gt;</span><span class=\"mi\">30</span><span class=\"o\">&lt;/</span><span class=\"n\">age</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">person</span><span class=\"o\">&gt;</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'token.xml'</span><span class=\"p\">)</span>\n</pre>\n<p>The <strong>save</strong> method (<em>object.save(&lt;filename&gt;)</em>) allows you to save the xml result into a file.</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">cat</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">xml</span>\n<span class=\"o\">&lt;</span><span class=\"n\">person</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span><span class=\"n\">black</span><span class=\"o\">&lt;/</span><span class=\"n\">lname</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">credentials</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">login</span><span class=\"o\">&gt;</span><span class=\"n\">t0ken</span><span class=\"o\">&lt;/</span><span class=\"n\">login</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">password</span><span class=\"o\">&gt;</span><span class=\"n\">l33tolite</span><span class=\"o\">&lt;/</span><span class=\"n\">password</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">credentials</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">age</span> <span class=\"n\">maxvalue</span><span class=\"o\">=</span><span class=\"s2\">\"100\"</span> <span class=\"n\">minvalue</span><span class=\"o\">=</span><span class=\"s2\">\"18\"</span><span class=\"o\">&gt;</span><span class=\"mi\">30</span><span class=\"o\">&lt;/</span><span class=\"n\">age</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span><span class=\"n\">token</span><span class=\"o\">&lt;/</span><span class=\"n\">fname</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">person</span><span class=\"o\">&gt;</span>\n</pre>\n<div id=\"the-ext-module\">\n<h3>The ext module</h3>\n<p>Pysxm comes with a couple of extended types. Those types are defined in <em>pysxm.ext</em> module.</p>\n<div id=\"datacomplextype\">\n<h4>DataComplexType</h4>\n<p>This is a simple <em>DataClass</em> of <em>ComplexType</em>. Here is how you can set one up:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysxm.ext</span> <span class=\"kn\">import</span> <span class=\"n\">DataComplexType</span><span class=\"p\">,</span> <span class=\"n\">XSimpleType</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Game</span><span class=\"p\">(</span><span class=\"n\">DataComplexType</span><span class=\"p\">):</span>\n     <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"n\">XSimpleType</span><span class=\"p\">(</span><span class=\"s1\">'platform'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'xboxone'</span><span class=\"p\">,</span> <span class=\"s1\">'xboxx'</span><span class=\"p\">],</span> <span class=\"k\">lambda</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">av</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">av</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">Game</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'state of decay 2'</span><span class=\"p\">,</span> <span class=\"n\">editor</span><span class=\"o\">=</span><span class=\"s1\">'undead labs'</span><span class=\"p\">,</span> <span class=\"n\">platform</span><span class=\"o\">=</span><span class=\"s1\">'xboxone'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">game</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">name</span><span class=\"o\">&gt;</span><span class=\"n\">state</span> <span class=\"n\">of</span> <span class=\"n\">decay</span> <span class=\"mi\">2</span><span class=\"o\">&lt;/</span><span class=\"n\">name</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">platform</span><span class=\"o\">&gt;</span><span class=\"n\">xboxone</span><span class=\"o\">&lt;/</span><span class=\"n\">platform</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">editor</span><span class=\"o\">&gt;</span><span class=\"n\">undead</span> <span class=\"n\">labs</span><span class=\"o\">&lt;/</span><span class=\"n\">editor</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">game</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n<div id=\"xsimpletype\">\n<h4>XSimpleType</h4>\n<p>It gets tiresome to subclass a <em>SimpleType</em> everytime you want to check a value. To overcome that, <strong>pysxm</strong> provides a <strong>descriptor</strong> called <strong>XSimpleType</strong>:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">XSimpleType</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">restriction</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">checker</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">error_msg</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"sd\">'''name: it's the name of the attribute.\n    restriction: self explanatory\n    checker: the fucntion that checks the input value\n    error_msg: message returned when checking fails\n    kwargs: as tagname, attrib or nsmap\n    '''</span>\n</pre>\n<p>Here is an example:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">XboxGamer</span><span class=\"p\">(</span><span class=\"n\">ComplexType</span><span class=\"p\">):</span>\n    <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"n\">XSimpleType</span><span class=\"p\">(</span><span class=\"s1\">'platform'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">'xone'</span><span class=\"p\">,</span> <span class=\"s1\">'xbox360'</span><span class=\"p\">,</span> <span class=\"s1\">'xbox'</span><span class=\"p\">),</span> <span class=\"k\">lambda</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">av</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">av</span><span class=\"p\">)</span>\n    <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">XSimpleType</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">4000</span><span class=\"p\">,</span> <span class=\"mi\">1000000</span><span class=\"p\">),</span> <span class=\"k\">lambda</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">av</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">av</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">&lt;=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">av</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n    <span class=\"n\">lastlogin</span> <span class=\"o\">=</span> <span class=\"n\">XDateTimeType</span><span class=\"p\">(</span><span class=\"s1\">'lastlogin'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">gamertag</span><span class=\"p\">,</span> <span class=\"n\">platform</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">lastlogin</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gamertag</span> <span class=\"o\">=</span> <span class=\"n\">gamertag</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"n\">platform</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">score</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lastlogin</span> <span class=\"o\">=</span> <span class=\"n\">lastlogin</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gamer_data</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'gamertag'</span><span class=\"p\">:</span> <span class=\"s1\">'LokingHD'</span><span class=\"p\">,</span> <span class=\"s1\">'platform'</span><span class=\"p\">:</span> <span class=\"s1\">'ps4'</span><span class=\"p\">,</span> <span class=\"s1\">'score'</span><span class=\"p\">:</span> <span class=\"s1\">'22526'</span><span class=\"p\">,</span> <span class=\"s1\">'lastlogin'</span><span class=\"p\">:</span> <span class=\"s1\">'2018-03-21'</span><span class=\"p\">}</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">XboxGamer</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">gamer_data</span><span class=\"p\">)</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"ne\">ValueError</span>                                <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">61</span><span class=\"n\">f95466da46</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">XboxGamer</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">gamer_data</span><span class=\"p\">)</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">josue</span><span class=\"o\">/</span><span class=\"n\">workspace</span><span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">pysxdb</span><span class=\"o\">/</span><span class=\"n\">pysxm</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">.</span><span class=\"n\">pyc</span> <span class=\"ow\">in</span> <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"mi\">77</span>         <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checker</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restriction_values</span><span class=\"p\">):</span>\n<span class=\"mi\">78</span>             <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'tagname &lt;</span><span class=\"si\">%s</span><span class=\"s1\">&gt; value </span><span class=\"si\">%s</span><span class=\"s1\"> is invalid: expected (</span><span class=\"si\">%s</span><span class=\"s1\">)'</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">79</span>                              <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">tagname</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restriction_values</span><span class=\"p\">))</span>\n    <span class=\"mi\">80</span>\n<span class=\"mi\">81</span>     <span class=\"k\">def</span> <span class=\"nf\">check_restriction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">tagname</span> <span class=\"o\">&lt;</span><span class=\"n\">xboxgamer</span><span class=\"o\">&gt;</span> <span class=\"n\">value</span> <span class=\"n\">ps4</span> <span class=\"ow\">is</span> <span class=\"n\">invalid</span><span class=\"p\">:</span> <span class=\"n\">expected</span> <span class=\"p\">((</span><span class=\"s1\">'xone'</span><span class=\"p\">,</span> <span class=\"s1\">'xbox360'</span><span class=\"p\">,</span> <span class=\"s1\">'xbox'</span><span class=\"p\">))</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">gamer_data</span><span class=\"p\">[</span><span class=\"s1\">'platform'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'xone'</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">gamer</span> <span class=\"o\">=</span> <span class=\"n\">XboxGamer</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">gamer_data</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gamer</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xboxgamer</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">xsi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/2001/XMLSchema-instance\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">gamertag</span><span class=\"o\">&gt;</span><span class=\"n\">LokingHD</span><span class=\"o\">&lt;/</span><span class=\"n\">gamertag</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">platform</span><span class=\"o\">&gt;</span><span class=\"n\">xone</span><span class=\"o\">&lt;/</span><span class=\"n\">platform</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">score</span><span class=\"o\">&gt;</span><span class=\"mi\">22526</span><span class=\"o\">&lt;/</span><span class=\"n\">score</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">lastlogin</span><span class=\"o\">&gt;</span><span class=\"mi\">2018</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">21</span><span class=\"n\">T00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"o\">&lt;/</span><span class=\"n\">lastlogin</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">xboxgamer</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Most of the types defined in <em>pysxm.ext</em> are descriptors and they\u2019re subclassable.</p>\n<p>Voila :wink:</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7123628, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "52470b99d0a9f172c653ca45d6609006", "sha256": "4f2d799a0952e54534778ccc535055c1397552b262345b8919c3f6d7e9acd637"}, "downloads": -1, "filename": "pysxm-0.1.tar.gz", "has_sig": false, "md5_digest": "52470b99d0a9f172c653ca45d6609006", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2765, "upload_time": "2017-12-26T22:55:36", "upload_time_iso_8601": "2017-12-26T22:55:36.360991Z", "url": "https://files.pythonhosted.org/packages/6e/0e/fc70f177e96a2a650893e95fe6a25daa3053f01299a258541d70cff840e7/pysxm-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "bc33fd2fdbc35de146683c30d33f367a", "sha256": "b51138eaebad2b5bdd7d388eedc253edd193fed87f37eab6f2d51d4d2679a41a"}, "downloads": -1, "filename": "pysxm-0.2.tar.gz", "has_sig": false, "md5_digest": "bc33fd2fdbc35de146683c30d33f367a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2739, "upload_time": "2017-12-26T23:04:34", "upload_time_iso_8601": "2017-12-26T23:04:34.206034Z", "url": "https://files.pythonhosted.org/packages/ab/70/8ae959523603255246792adeaf0409a853af3e887e90559f769769cbad42/pysxm-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ff231d963bc89d16ba8f56a1cf144e08", "sha256": "fbae0b8522f5192d620cc22106c422dbc773fac575e42e9e28ea26a6f4720862"}, "downloads": -1, "filename": "pysxm-0.3.tar.gz", "has_sig": false, "md5_digest": "ff231d963bc89d16ba8f56a1cf144e08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4797, "upload_time": "2017-12-28T20:16:29", "upload_time_iso_8601": "2017-12-28T20:16:29.465719Z", "url": "https://files.pythonhosted.org/packages/a3/6f/71706aa3656dbf195b97541ce2c76ff37bae4cfa43e69f61a3a1c16dbeb7/pysxm-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "e2fc213bd0a0322795b55faf89636ac2", "sha256": "77717dfcdbc952f17e47a5ee21bb68c75f9420fa20721721ba19b9641f285195"}, "downloads": -1, "filename": "pysxm-0.4.tar.gz", "has_sig": false, "md5_digest": "e2fc213bd0a0322795b55faf89636ac2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023, "upload_time": "2018-03-16T14:54:08", "upload_time_iso_8601": "2018-03-16T14:54:08.936932Z", "url": "https://files.pythonhosted.org/packages/59/6d/4954bccf48e300c6f0f368ee96568d51f89f1326bbd419514cb354c590f9/pysxm-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "28e7adf7c12f1d7bebc7a92bcf014e3d", "sha256": "f95ca12755e6b6f4158abc4ace76316f3b731eede09146d2b033060483a30a6e"}, "downloads": -1, "filename": "pysxm-0.5.tar.gz", "has_sig": false, "md5_digest": "28e7adf7c12f1d7bebc7a92bcf014e3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5024, "upload_time": "2018-03-16T14:54:15", "upload_time_iso_8601": "2018-03-16T14:54:15.476916Z", "url": "https://files.pythonhosted.org/packages/f3/fa/4b0b77986ca1336e15e8c04ed7ce511ce2907865a97fbdc4051b22d08b00/pysxm-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "f710597f963d63a8ba823cd6da8ee240", "sha256": "6a5b8fe3f5aace52b3a814a954eb98521e99ece88cf81bed89bb2b7a239485b5"}, "downloads": -1, "filename": "pysxm-0.6.tar.gz", "has_sig": false, "md5_digest": "f710597f963d63a8ba823cd6da8ee240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5706, "upload_time": "2018-03-16T17:57:40", "upload_time_iso_8601": "2018-03-16T17:57:40.620994Z", "url": "https://files.pythonhosted.org/packages/45/7b/de97671e3128f62c31a4084573e269d3d9e917ad003021f8099a28399d94/pysxm-0.6.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "b6de23e828cbfa759f7fab41b5e4e91d", "sha256": "8f40684209f8fd8ba74290a516f43e9344cb571af748a97668593b9fed1c10bb"}, "downloads": -1, "filename": "pysxm-0.8.tar.gz", "has_sig": false, "md5_digest": "b6de23e828cbfa759f7fab41b5e4e91d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5959, "upload_time": "2018-03-20T11:03:26", "upload_time_iso_8601": "2018-03-20T11:03:26.949363Z", "url": "https://files.pythonhosted.org/packages/54/4c/edb72082bb20317e996abe135435bb4cf9c173b8f29371a8c3db8dbafc02/pysxm-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "491ce14f9fb565d12f583a80ff33becc", "sha256": "6e059688c73453ee1657afe6baf857e2b5bd4635612fd865348bdbc8fb18bcae"}, "downloads": -1, "filename": "pysxm-0.9.tar.gz", "has_sig": false, "md5_digest": "491ce14f9fb565d12f583a80ff33becc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7100, "upload_time": "2018-03-21T15:26:04", "upload_time_iso_8601": "2018-03-21T15:26:04.612486Z", "url": "https://files.pythonhosted.org/packages/7b/a4/6fe9ef6daccf6ada3bcfafb0c71164e37923aeafe8f4dce237cccff611a6/pysxm-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "6c058d641c4399636a8fc0c83738f897", "sha256": "bfbd0496ea0154e7d26925cfd6d309cca52418a27dd1ccccba501c762588ee0d"}, "downloads": -1, "filename": "pysxm-1.0.tar.gz", "has_sig": false, "md5_digest": "6c058d641c4399636a8fc0c83738f897", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7295, "upload_time": "2018-03-31T17:14:23", "upload_time_iso_8601": "2018-03-31T17:14:23.115867Z", "url": "https://files.pythonhosted.org/packages/c0/bc/0b0bedf80992505d524300b2a736718660b6d891b364b8840ed6d87d3f7b/pysxm-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "ead0226a70982da18e11b6183f6b374d", "sha256": "6e9f733dbada72791dda43b9db89008c262831fa37355c66486f7262b4277f10"}, "downloads": -1, "filename": "pysxm-1.1.tar.gz", "has_sig": false, "md5_digest": "ead0226a70982da18e11b6183f6b374d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7699, "upload_time": "2018-05-19T10:55:23", "upload_time_iso_8601": "2018-05-19T10:55:23.885593Z", "url": "https://files.pythonhosted.org/packages/cc/ca/0c61dfc7d891b34d37fb78bd80fbc52887a3ac20d49fb506e1136c699c6c/pysxm-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "b2c6e07059c5ee827d27b8ece735a14a", "sha256": "d51471953ff2cf8560f4c142ee865fd9c9a7b8203d402f56a2e4014532ee18d9"}, "downloads": -1, "filename": "pysxm-1.2.tar.gz", "has_sig": false, "md5_digest": "b2c6e07059c5ee827d27b8ece735a14a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7791, "upload_time": "2018-08-02T10:37:26", "upload_time_iso_8601": "2018-08-02T10:37:26.495108Z", "url": "https://files.pythonhosted.org/packages/32/9f/2a08bef0a90fad61416f7f318c6f6f4fa92374b0ad64b15d21e3e9c92656/pysxm-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "bdd4740674bf928de58fe5887e0c22ed", "sha256": "361ad7cf2df49bba91cd31db2bc2923e15c7e93895682bcf3e5476fd5f38be44"}, "downloads": -1, "filename": "pysxm-1.3.tar.gz", "has_sig": false, "md5_digest": "bdd4740674bf928de58fe5887e0c22ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7930, "upload_time": "2018-08-17T10:03:50", "upload_time_iso_8601": "2018-08-17T10:03:50.969749Z", "url": "https://files.pythonhosted.org/packages/9f/90/68d01a8b300d2934828fee2a0e9eb1160fdec38572434e69861148321f55/pysxm-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "efcb2b2b9366c621dafea5ea0759978c", "sha256": "24beccf70b0607717992b79f0cb9baa8dd14d20c5122ac58bd8596eb066430a7"}, "downloads": -1, "filename": "pysxm-1.4.tar.gz", "has_sig": false, "md5_digest": "efcb2b2b9366c621dafea5ea0759978c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7791, "upload_time": "2020-04-28T21:33:06", "upload_time_iso_8601": "2020-04-28T21:33:06.464362Z", "url": "https://files.pythonhosted.org/packages/81/0f/d3b323d2e3fd064d1ac12474d52a8804ce3aa7e3d582cd6fdd4b6f89de2e/pysxm-1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "efcb2b2b9366c621dafea5ea0759978c", "sha256": "24beccf70b0607717992b79f0cb9baa8dd14d20c5122ac58bd8596eb066430a7"}, "downloads": -1, "filename": "pysxm-1.4.tar.gz", "has_sig": false, "md5_digest": "efcb2b2b9366c621dafea5ea0759978c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7791, "upload_time": "2020-04-28T21:33:06", "upload_time_iso_8601": "2020-04-28T21:33:06.464362Z", "url": "https://files.pythonhosted.org/packages/81/0f/d3b323d2e3fd064d1ac12474d52a8804ce3aa7e3d582cd6fdd4b6f89de2e/pysxm-1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:45 2020"}