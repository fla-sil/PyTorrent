{"info": {"author": "Kanshi TANAIKE", "author_email": "tanaike@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5"], "description": "# gdoctableapppy\n\n[![Build Status](https://travis-ci.org/tanaikech/gdoctableapppy.svg?branch=master)](https://travis-ci.org/tanaikech/gdoctableapppy)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](LICENCE)\n\n<a name=\"top\"></a>\n\n# Overview\n\nThis is a python library to manage the tables on Google Document using Google Docs API.\n\n# Description\n\nGoogle Docs API has been released. When I used this API, I found that it is very difficult for me to manage the tables on Google Document using Google Docs API. Although I checked [the official document](https://developers.google.com/docs/api/how-tos/tables), unfortunately, I thought that it's very difficult for me. So in order to easily manage the tables on Google Document, I created this library.\n\n## Features\n\n- All values can be retrieved from the table on Google Document.\n- Values can be put to the table.\n- Delete table, rows and columns of the table.\n- New table can be created by including values.\n- Append rows to the table by including values.\n- Replace texts with images.\n\n      \t- The image data can be retrieved from URL.\n      \t- The image data can be uploaded from the local PC.\n\n## Languages\n\nI manages the tables on Google Document using several languages. So I created the libraries for 4 languages which are golang, node.js and python. Google Apps Script has Class DocumentApp. So I has never created the GAS library yet.\n\n- [go-gdoctableapp](https://github.com/tanaikech/go-gdoctableapp)\n- [node-gdoctableapp](https://github.com/tanaikech/node-gdoctableapp)\n- [gdoctableapppy](https://github.com/tanaikech/gdoctableapppy)\n- [google-docs-table-factory](https://github.com/gumatias/google-docs-table-factory) by gumatias\n\n# Install\n\n```bash\n$ pip install gdoctableapppy\n```\n\nYou can also see this library at [https://pypi.org/project/gdoctableapppy/](https://pypi.org/project/gdoctableapppy/).\n\n# Method\n\n| Method                                            | Explanation                                     |\n| :------------------------------------------------ | :---------------------------------------------- |\n| [`GetTables()`](#gettables)                       | Get all tables from Document.                   |\n| [`GetValues()`](#getvalues)                       | Get values from a table from Document.          |\n| [`SetValues()`](#setvalues1)                      | Set values to a table with 2 dimensional array. |\n| [`SetValues(`](#setvalues2)                       | Set values to a table with an object.           |\n| [`DeleteTable()`](#deletetable)                   | Delete a table.                                 |\n| [`DeleteRowsAndColumns()`](#deleterowsandcolumns) | Delete rows and columns of a table.             |\n| [`CreateTable()`](createtable)                    | Create new table including sell values.         |\n| [`AppendRow()`](#appendrow)                       | Append row to a table by including values.      |\n| [`ReplaceTextsToImages()`](#replacetexts)         | Replace texts with images from URL or file.     |\n\nThis library uses [google-api-python-client](https://github.com/googleapis/google-api-python-client).\n\n## Response\n\nThis library returns the following value.\n\n```python\n{\n    'tables': [],\n    'values': [],\n    'responseFromAPIs': [],\n    'libraryVersion': version\n}\n```\n\n- When `GetTables()` is used, you can see the values with `tables`.\n- When `GetValues()` is used, you can see the values with `values`.\n- When other methods are used and the option of `showAPIResponse` is `true`, you can see the responses from APIs which were used for the method. And also, you can know the number of APIs, which were used for the method, by the length of array of `responseFromAPIs`.\n\n# Usage\n\nAbout the authorization, please check the section of [Authorization](#authorization). In order to use this library, it is required to confirm that [the Quickstart](https://developers.google.com/docs/api/quickstart/python) works fine.\n\n## Scope\n\nIn this library, using the scope of `https://www.googleapis.com/auth/documents` is recommended.\n\n<a name=\"gettables\"></a>\n\n## 1. GetTables\n\nGet all tables from Document. All values, table index and table position are retrieved.\n\n### Sample script\n\nThis sample script retrieves all tables from the Google Document of document ID.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": documentId,\n    # \"showAPIResponse\": True\n}\nres = gdoctableapp.GetTables(resource) # You can see the retrieved values like this.\nprint(res)\n```\n\n- `documentId`: Document ID.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `showAPIResponse`: When `showAPIResponse: true` is used to `resource`, the responses from Docs API can be seen. The default value is `false`. **This option can be used for all methods.**\n\n<a name=\"getvalues\"></a>\n\n## 2. GetValues\n\nGet values from the table. All values are retrieved.\n\n### Sample script\n\nThis sample script retrieves the values from 1st table in Google Document. You can see the retrieved values as `[][]string`. Because when the values are retrieved by Docs API, all values are automatically converted to the string data.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0,\n}\nres = gdoctableapp.GetValues(resource)\nprint(res) # You can see the retrieved values like this.\n```\n\n- `documentId`: Document ID.\n- `tableIndex`: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n\n<a name=\"setvalues1\"></a>\n\n## 3. SetValues 1\n\nThere are 2 patterns for putting values to the table. In this section, set values to the table with 2 dimensional array. When the rows and columns of values which are put are over those of the table, this method can automatically expand the rows and columns.\n\n### Sample script\n\nThis sample script puts the values to the first table in Google Document.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0,\n    \"values\": [[\"a1\", \"b1\"], [\"a2\", \"b2\"], [\"a3\", \"b3\", \"c3\"]]\n}\nres = gdoctableapp.SetValues(resource)  # You can see the retrieved responses from Docs API.\nprint(res)\n```\n\n- `documentId`: Document ID.\n- `tableIndex`: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `values`: `[][]string`\n\n### Result\n\nWhen above script is run, the following result is obtained.\n\n#### From:\n\n![](images/fig1.png)\n\n#### To:\n\n![](images/fig2.png)\n\n<a name=\"setvalues2\"></a>\n\n## 4. SetValues 2\n\nThere are 2 patterns for putting values to the table. In this section, set values to a table with an object. In this method, you can set the values using the range. When the rows and columns of values which are put are over those of the table, this method can automatically expand the rows and columns.\n\n### Sample script\n\nThis script puts the values with the range to the first table in Google Document.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0,\n    \"values\": [\n        {\n            \"values\": [[\"A1\"], [\"A2\", \"B2\", \"c2\", \"d2\"], [\"A3\"]],\n            \"range\": {\"startRowIndex\": 0, \"startColumnIndex\": 0}\n        },\n        {\n            \"values\": [[\"B1\", \"C1\"]],\n            \"range\": {\"startRowIndex\": 0, \"startColumnIndex\": 1}\n        }\n    ]\n}\nres = gdoctableapp.SetValues(resource)  # You can see the retrieved responses from Docs API.\nprint(res)\n```\n\n- `documentId`: Document ID.\n- `tableIndex`: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `range.startRowIndex` of `values`: Row index of `values[0][0]`.\n- `range.startColumnIndex` of `values`: Column index of `values[0][0]`.\n- `values` : Values you want to put.\n\nFor example, when the row, column indexes and values are 1, 2 and \"value\", respectively, \"value\" is put to \"C3\".\n\n### Result\n\nWhen above script is run, the following result is obtained.\n\n#### From:\n\n![](images/fig1.png)\n\n#### To:\n\n![](images/fig3.png)\n\n<a name=\"deleteuable\"></a>\n\n## 5. DeleteTable\n\n### Sample script\n\nThis script deletes the first table in Google Document.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0\n}\nres = gdoctableapp.DeleteTable(resource)\nprint(res)  # You can see the retrieved responses from Docs API.\n```\n\n- `documentId`: Document ID.\n- `tableIndex`: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n\n<a name=\"deleterowsandcolumns\"></a>\n\n## 6. DeleteRowsAndColumns\n\n### Sample script\n\nThis script deletes rows of indexes of 3, 1 and 2 of the first table in Google Document. And also this script deletes columns of indexes of 2, 1 and 3.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0,\n    \"deleteRows\": [3, 1, 2],  # Start index is 0.\n    \"deleteColumns\": [2, 1, 3]  # Start index is 0.\n}\nres = gdoctableapp.DeleteRowsAndColumns(resource)\nprint(res)  # You can see the retrieved responses from Docs API.\n```\n\n- `documentId`: Document ID.\n- `tableIndex`: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `deleteRows` : Indexes of rows you want to delete.\n- `deleteColumns` : Indexes of columns you want to delete.\n\n<a name=\"createtable\"></a>\n\n## 7. CreateTable\n\n### Sample script\n\nThis script creates new table to the top of Google Document, and the cells of the table have values.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"rows\": 3,\n    \"columns\": 5,\n    \"createIndex\": 1,\n    # \"append\": True,  # When this is used instead of \"Index\", new table is created to the end of Document.\n    \"values\": [[\"a1\", \"b1\"], [\"a2\", \"b2\"], [\"a3\", \"b3\", \"c3\"]]\n}\nres = gdoctableapp.CreateTable(resource)\nprint(res)  # You can see the retrieved responses from Docs API.\n```\n\n- `documentId`: Document ID.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `rows` : Number of rows of new table.\n- `columns` : Number of columns of new table.\n- `createIndex` : Index of Document for putting new table. For example, `1` is the top of Document.\n- `append` : When `append` is `true` instead of `createIndex`, the new table is created to the end of Google Document.\n- `values` : If you want to put the values when new table is created, please use this.\n\n### Result\n\nWhen above script is run, the following result is obtained. In this case, the new table is created to the top of Google Document.\n\n![](images/fig4.png)\n\n<a name=\"appendrow\"></a>\n\n## 8. AppendRow\n\n### Sample script\n\nThis sample script appends the values to the first table of Google Document.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0,\n    \"values\": [[\"a1\", \"b1\", \"c1\", 1, \"\", 2], [\"a2\", \"b2\", \"c2\", 1, \"\", 2]]\n}\nres = gdoctableapp.AppendRow(resource)\nprint(res)  # You can see the retrieved responses from Docs API.\n```\n\n- `documentId`: Document ID.\n- `tableIndex`: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `values` : Values you want to append to the existing table.\n\n### Result\n\nWhen above script is run, the following result is obtained. In this case, the values are put to the last row. And you can see that 3 columns are automatically added when the script is run.\n\n#### From:\n\n![](images/fig5.png)\n\n#### From:\n\n![](images/fig6.png)\n\n<a name=\"replacetexts\"></a>\n\n## 9. ReplaceTextsToImages\n\n### Sample script\n\nIn this sample, the texts `{{sample}}` in all tables are replaced with the image. In this case, you can use the image from an URL or a file on local PC.\n\n```python\nresource = {\n    \"oauth2\": creds,\n    \"documentId\": \"###\",\n    \"showAPIResponse\": False,  # default is false\n    \"tableOnly\": True,  # default is false\n    \"searchText\": \"{{sample}}\",\n    \"imageWidth\": 50,\n    \"imageHeight\": 50,\n    \"replaceImageURL\": \"https://###/sample.png\"\n    # \"replaceImageFilePath\": \"./sample.png\" # If you want to put the image in local PC, please use this.\n}\nres = gdoctableapp.ReplaceTextsToImages(resource)\nprint(res)\n```\n\n- `documentId`: Document ID.\n- `oauth2`: Credentials for using Docs API. Please check the section of [Authorization](#authorization).\n  - If you want to use Service Account, please use `service_account` instead of `oauth2`. About this, please check [the sample script for Service account](#serviceaccount).\n- `searchText`: Search text. This text is replaced with image.\n- `replaceImageURL`: URL of the image. When this property is used, the image is retrieved from the URL, and the retrieved image is used.\n- `replaceImageFilePath`: File path of the image. When this property is used, the image is retrieved from the file on local PC, and the retrieved image is used.\n\n- `imageWidth`: Width of the put image.\n- `imageHeight`: Height of the put image.\n- `tableOnly`: When this is `True`, only texts in the table are replaced with image. When this is `False`, the texts in the body are replaced.\n- `showAPIResponse`: When `\"showAPIResponse\": True` is used to `resource`, the responses from Docs API can be seen. The default value is `False`.\n\n### Note\n\n- The flow for replacing the text with the image on the local PC.\n\n  1. Upload the image from local PC to Google Drive.\n  2. Publicly share the image file. - The time for sharing is several seconds. The file is delete after the image is put.\n  3. Put the image using the URL of the publicly shared file.\n  4. Delete the image. - Even when the image is delete from Google Drive, the put image on Google Document is not deleted.\n\n- About `imageWidth` and `imageHeight`\n  > [**objectSize**](https://developers.google.com/docs/api/reference/rest/v1/documents/request#insertinlineimagerequest): The size that the image should appear as in the document. This property is optional and the final size of the image in the document is determined by the following rules: _ If neither width nor height is specified, then a default size of the image is calculated based on its resolution. _ If one dimension is specified then the other dimension is calculated to preserve the aspect ratio of the image. \\* If both width and height are specified, the image is scaled to fit within the provided dimensions while maintaining its aspect ratio.\n\n### Result\n\nWhen above script is run, the following result is obtained.\n\n#### From:\n\n![](images/fig7.png)\n\n#### To:\n\n![](images/fig8.png)\n\nThe image of `https://cdn.sstatic.net/Sites/stackoverflow/company/img/logos/so/so-logo.png` was used as the sample image.\n\nWhen `tableOnly` is `False`, the following result is retrieved.\n\n![](images/fig9.png)\n\n<a name=\"authorization\"></a>\n\n# Authorization\n\nThere are 2 patterns for using this library.\n\n## 1. Use OAuth2\n\nDocument of OAuth2 is [here](https://developers.google.com/identity/protocols/OAuth2).\n\n### Sample script\n\nIn this sample script, the authorization process uses [the Quickstart for Node.js](https://developers.google.com/docs/api/quickstart/nodejs). You can see the detail information at there.\n\n```python\nfrom __future__ import print_function\nimport pickle\nimport os.path\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom google.auth.transport.requests import Request\n\nfrom gdoctableapppy import gdoctableapp\n\n# If modifying these scopes, delete the file token.pickle.\nSCOPES = ['https://www.googleapis.com/auth/documents']\n\n\ndef main():\n    \"\"\"Shows basic usage of the Docs API.\n    Prints the title of a sample document.\n    \"\"\"\n    creds = None\n    # The file token.pickle stores the user's access and refresh tokens, and is\n    # created automatically when the authorization flow completes for the first\n    # time.\n    if os.path.exists('token.pickle'):\n        with open('token.pickle', 'rb') as token:\n            creds = pickle.load(token)\n    # If there are no (valid) credentials available, let the user log in.\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file(\n                'credentials.json', SCOPES)\n            creds = flow.run_local_server()\n        # Save the credentials for the next run\n        with open('token.pickle', 'wb') as token:\n            pickle.dump(creds, token)\n\n    resource = {\n        \"oauth2\": creds,\n        \"documentId\": \"###\",\n        \"tableIndex\": 0,\n    }\n    res = gdoctableapp.GetValues(resource)\n    print(res) # You can see the retrieved values like this.\n\n\nif __name__ == '__main__':\n    main()\n```\n\n<a name=\"serviceaccount\"></a>\n\n## 2. Use Service account\n\nDocument of Service account is [here](https://developers.google.com/identity/protocols/OAuth2ServiceAccount). When you use Service account, please share Google Document with the email of Service account.\n\n### Sample script\n\n```python\nfrom google.oauth2 import service_account\nfrom gdoctableapppy import gdoctableapp\n\nSCOPES = ['https://www.googleapis.com/auth/documents']\nSERVICE_ACCOUNT_FILE = 'service-account-credentials.json'\ncreds = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)\n\nresource = {\n    \"service_account\": creds,\n    \"documentId\": \"###\",\n    \"tableIndex\": 0,\n}\nres = gdoctableapp.GetValues(resource)\nprint(res) # You can see the retrieved values like this.\n```\n\n# Limitations\n\n- In the current stage, unfortunately, `tableCellStyle` cannot be modified by Google Docs API. By this, the formats of cells cannot be modified. About this, I have posted as [Feature Request](https://issuetracker.google.com/issues/135136221).\n\n# References:\n\n- Official document: [Inserting or deleting table rows](https://developers.google.com/docs/api/how-tos/tables#inserting_or_deleting_table_rows)\n- If you want to know the relationship between the index and startIndex of each cell, you can see it at [here](https://stackoverflow.com/a/56944149).\n\n---\n\n<a name=\"licence\"></a>\n\n# Licence\n\n[MIT](LICENCE)\n\n<a name=\"author\"></a>\n\n# Author\n\n[Tanaike](https://tanaikech.github.io/about/)\n\nIf you have any questions and commissions for me, feel free to tell me.\n\n<a name=\"updatehistory\"></a>\n\n# Update History\n\n- v1.0.0 (July 18, 2019)\n\n  1. Initial release.\n\n- v1.0.5 (January 21, 2020)\n\n  1. When the inline objects and tables are put in the table. An error occurred. This bug was removed by this update.\n\n- v1.1.0 (January 22, 2020)\n\n  1. [New method was added.](#replacetexts) From this version, the texts can be replaced by images. The direct link and local file can be used as the image.\n\n[TOP](#top)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tanaikech/gdoctableapppy", "keywords": "google document,google docs,docs api,table,manager,developer tools", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "gdoctableapppy", "package_url": "https://pypi.org/project/gdoctableapppy/", "platform": "", "project_url": "https://pypi.org/project/gdoctableapppy/", "project_urls": {"Homepage": "https://github.com/tanaikech/gdoctableapppy"}, "release_url": "https://pypi.org/project/gdoctableapppy/1.1.0/", "requires_dist": ["google-api-python-client"], "requires_python": "", "summary": "This is a python library to manage the tables on Google Document using Google Docs API.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gdoctableapppy</h1>\n<p><a href=\"https://travis-ci.org/tanaikech/gdoctableapppy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b7b05a8a12eb95438f26a0d31cd48a9f952da27/68747470733a2f2f7472617669732d63692e6f72672f74616e61696b6563682f67646f637461626c6561707070792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"LICENCE\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9f8168092fab8a1e348f4b089c1ff9cc0c137bf/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174\"></a></p>\n<p><a></a></p>\n<h1>Overview</h1>\n<p>This is a python library to manage the tables on Google Document using Google Docs API.</p>\n<h1>Description</h1>\n<p>Google Docs API has been released. When I used this API, I found that it is very difficult for me to manage the tables on Google Document using Google Docs API. Although I checked <a href=\"https://developers.google.com/docs/api/how-tos/tables\" rel=\"nofollow\">the official document</a>, unfortunately, I thought that it's very difficult for me. So in order to easily manage the tables on Google Document, I created this library.</p>\n<h2>Features</h2>\n<ul>\n<li>\n<p>All values can be retrieved from the table on Google Document.</p>\n</li>\n<li>\n<p>Values can be put to the table.</p>\n</li>\n<li>\n<p>Delete table, rows and columns of the table.</p>\n</li>\n<li>\n<p>New table can be created by including values.</p>\n</li>\n<li>\n<p>Append rows to the table by including values.</p>\n</li>\n<li>\n<p>Replace texts with images.</p>\n<pre><code>\t- The image data can be retrieved from URL.\n\t- The image data can be uploaded from the local PC.\n</code></pre>\n</li>\n</ul>\n<h2>Languages</h2>\n<p>I manages the tables on Google Document using several languages. So I created the libraries for 4 languages which are golang, node.js and python. Google Apps Script has Class DocumentApp. So I has never created the GAS library yet.</p>\n<ul>\n<li><a href=\"https://github.com/tanaikech/go-gdoctableapp\" rel=\"nofollow\">go-gdoctableapp</a></li>\n<li><a href=\"https://github.com/tanaikech/node-gdoctableapp\" rel=\"nofollow\">node-gdoctableapp</a></li>\n<li><a href=\"https://github.com/tanaikech/gdoctableapppy\" rel=\"nofollow\">gdoctableapppy</a></li>\n<li><a href=\"https://github.com/gumatias/google-docs-table-factory\" rel=\"nofollow\">google-docs-table-factory</a> by gumatias</li>\n</ul>\n<h1>Install</h1>\n<pre>$ pip install gdoctableapppy\n</pre>\n<p>You can also see this library at <a href=\"https://pypi.org/project/gdoctableapppy/\" rel=\"nofollow\">https://pypi.org/project/gdoctableapppy/</a>.</p>\n<h1>Method</h1>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Method</th>\n<th align=\"left\">Explanation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"#gettables\" rel=\"nofollow\"><code>GetTables()</code></a></td>\n<td align=\"left\">Get all tables from Document.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#getvalues\" rel=\"nofollow\"><code>GetValues()</code></a></td>\n<td align=\"left\">Get values from a table from Document.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#setvalues1\" rel=\"nofollow\"><code>SetValues()</code></a></td>\n<td align=\"left\">Set values to a table with 2 dimensional array.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#setvalues2\" rel=\"nofollow\"><code>SetValues(</code></a></td>\n<td align=\"left\">Set values to a table with an object.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#deletetable\" rel=\"nofollow\"><code>DeleteTable()</code></a></td>\n<td align=\"left\">Delete a table.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#deleterowsandcolumns\" rel=\"nofollow\"><code>DeleteRowsAndColumns()</code></a></td>\n<td align=\"left\">Delete rows and columns of a table.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"createtable\" rel=\"nofollow\"><code>CreateTable()</code></a></td>\n<td align=\"left\">Create new table including sell values.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#appendrow\" rel=\"nofollow\"><code>AppendRow()</code></a></td>\n<td align=\"left\">Append row to a table by including values.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"#replacetexts\" rel=\"nofollow\"><code>ReplaceTextsToImages()</code></a></td>\n<td align=\"left\">Replace texts with images from URL or file.</td>\n</tr></tbody></table>\n<p>This library uses <a href=\"https://github.com/googleapis/google-api-python-client\" rel=\"nofollow\">google-api-python-client</a>.</p>\n<h2>Response</h2>\n<p>This library returns the following value.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'tables'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s1\">'values'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s1\">'responseFromAPIs'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s1\">'libraryVersion'</span><span class=\"p\">:</span> <span class=\"n\">version</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>When <code>GetTables()</code> is used, you can see the values with <code>tables</code>.</li>\n<li>When <code>GetValues()</code> is used, you can see the values with <code>values</code>.</li>\n<li>When other methods are used and the option of <code>showAPIResponse</code> is <code>true</code>, you can see the responses from APIs which were used for the method. And also, you can know the number of APIs, which were used for the method, by the length of array of <code>responseFromAPIs</code>.</li>\n</ul>\n<h1>Usage</h1>\n<p>About the authorization, please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>. In order to use this library, it is required to confirm that <a href=\"https://developers.google.com/docs/api/quickstart/python\" rel=\"nofollow\">the Quickstart</a> works fine.</p>\n<h2>Scope</h2>\n<p>In this library, using the scope of <code>https://www.googleapis.com/auth/documents</code> is recommended.</p>\n<p><a></a></p>\n<h2>1. GetTables</h2>\n<p>Get all tables from Document. All values, table index and table position are retrieved.</p>\n<h3>Sample script</h3>\n<p>This sample script retrieves all tables from the Google Document of document ID.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"n\">documentId</span><span class=\"p\">,</span>\n    <span class=\"c1\"># \"showAPIResponse\": True</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">GetTables</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span> <span class=\"c1\"># You can see the retrieved values like this.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li><code>showAPIResponse</code>: When <code>showAPIResponse: true</code> is used to <code>resource</code>, the responses from Docs API can be seen. The default value is <code>false</code>. <strong>This option can be used for all methods.</strong></li>\n</ul>\n<p><a></a></p>\n<h2>2. GetValues</h2>\n<p>Get values from the table. All values are retrieved.</p>\n<h3>Sample script</h3>\n<p>This sample script retrieves the values from 1st table in Google Document. You can see the retrieved values as <code>[][]string</code>. Because when the values are retrieved by Docs API, all values are automatically converted to the string data.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">GetValues</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span> <span class=\"c1\"># You can see the retrieved values like this.</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>tableIndex</code>: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n</ul>\n<p><a></a></p>\n<h2>3. SetValues 1</h2>\n<p>There are 2 patterns for putting values to the table. In this section, set values to the table with 2 dimensional array. When the rows and columns of values which are put are over those of the table, this method can automatically expand the rows and columns.</p>\n<h3>Sample script</h3>\n<p>This sample script puts the values to the first table in Google Document.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"a1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b1\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"a2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b2\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"a3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c3\"</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">SetValues</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>  <span class=\"c1\"># You can see the retrieved responses from Docs API.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>tableIndex</code>: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li><code>values</code>: <code>[][]string</code></li>\n</ul>\n<h3>Result</h3>\n<p>When above script is run, the following result is obtained.</p>\n<h4>From:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6df09f1589c516bb6de5d21f3c159a28557dcc3/696d616765732f666967312e706e67\"></p>\n<h4>To:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acd3b5f1e0936423239440a173e9905d5ee727d5/696d616765732f666967322e706e67\"></p>\n<p><a></a></p>\n<h2>4. SetValues 2</h2>\n<p>There are 2 patterns for putting values to the table. In this section, set values to a table with an object. In this method, you can set the values using the range. When the rows and columns of values which are put are over those of the table, this method can automatically expand the rows and columns.</p>\n<h3>Sample script</h3>\n<p>This script puts the values with the range to the first table in Google Document.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"A1\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"A2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"B2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"d2\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"A3\"</span><span class=\"p\">]],</span>\n            <span class=\"s2\">\"range\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"startRowIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"startColumnIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"B1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"C1\"</span><span class=\"p\">]],</span>\n            <span class=\"s2\">\"range\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"startRowIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"startColumnIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">SetValues</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>  <span class=\"c1\"># You can see the retrieved responses from Docs API.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>tableIndex</code>: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li><code>range.startRowIndex</code> of <code>values</code>: Row index of <code>values[0][0]</code>.</li>\n<li><code>range.startColumnIndex</code> of <code>values</code>: Column index of <code>values[0][0]</code>.</li>\n<li><code>values</code> : Values you want to put.</li>\n</ul>\n<p>For example, when the row, column indexes and values are 1, 2 and \"value\", respectively, \"value\" is put to \"C3\".</p>\n<h3>Result</h3>\n<p>When above script is run, the following result is obtained.</p>\n<h4>From:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6df09f1589c516bb6de5d21f3c159a28557dcc3/696d616765732f666967312e706e67\"></p>\n<h4>To:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45e93f6c9b30ad4a29fb8a2d6bde8c94e19fcd5b/696d616765732f666967332e706e67\"></p>\n<p><a></a></p>\n<h2>5. DeleteTable</h2>\n<h3>Sample script</h3>\n<p>This script deletes the first table in Google Document.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">DeleteTable</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>  <span class=\"c1\"># You can see the retrieved responses from Docs API.</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>tableIndex</code>: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n</ul>\n<p><a></a></p>\n<h2>6. DeleteRowsAndColumns</h2>\n<h3>Sample script</h3>\n<p>This script deletes rows of indexes of 3, 1 and 2 of the first table in Google Document. And also this script deletes columns of indexes of 2, 1 and 3.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"deleteRows\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>  <span class=\"c1\"># Start index is 0.</span>\n    <span class=\"s2\">\"deleteColumns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>  <span class=\"c1\"># Start index is 0.</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">DeleteRowsAndColumns</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>  <span class=\"c1\"># You can see the retrieved responses from Docs API.</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>tableIndex</code>: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li><code>deleteRows</code> : Indexes of rows you want to delete.</li>\n<li><code>deleteColumns</code> : Indexes of columns you want to delete.</li>\n</ul>\n<p><a></a></p>\n<h2>7. CreateTable</h2>\n<h3>Sample script</h3>\n<p>This script creates new table to the top of Google Document, and the cells of the table have values.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"rows\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"columns\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"createIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"c1\"># \"append\": True,  # When this is used instead of \"Index\", new table is created to the end of Document.</span>\n    <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"a1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b1\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"a2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b2\"</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"a3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c3\"</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">CreateTable</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>  <span class=\"c1\"># You can see the retrieved responses from Docs API.</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li><code>rows</code> : Number of rows of new table.</li>\n<li><code>columns</code> : Number of columns of new table.</li>\n<li><code>createIndex</code> : Index of Document for putting new table. For example, <code>1</code> is the top of Document.</li>\n<li><code>append</code> : When <code>append</code> is <code>true</code> instead of <code>createIndex</code>, the new table is created to the end of Google Document.</li>\n<li><code>values</code> : If you want to put the values when new table is created, please use this.</li>\n</ul>\n<h3>Result</h3>\n<p>When above script is run, the following result is obtained. In this case, the new table is created to the top of Google Document.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6b6049ff8fa501ea0e47a87a103add0ac36187a/696d616765732f666967342e706e67\"></p>\n<p><a></a></p>\n<h2>8. AppendRow</h2>\n<h3>Sample script</h3>\n<p>This sample script appends the values to the first table of Google Document.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"a1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c1\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"a2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c2\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">AppendRow</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>  <span class=\"c1\"># You can see the retrieved responses from Docs API.</span>\n</pre>\n<ul>\n<li><code>documentId</code>: Document ID.</li>\n<li><code>tableIndex</code>: Table index. If you want to use the 3rd table in Google Document. It's 2. The start number of index is 0.</li>\n<li><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li><code>values</code> : Values you want to append to the existing table.</li>\n</ul>\n<h3>Result</h3>\n<p>When above script is run, the following result is obtained. In this case, the values are put to the last row. And you can see that 3 columns are automatically added when the script is run.</p>\n<h4>From:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f537e918357d5d05fd5cb116e805bd460a56826f/696d616765732f666967352e706e67\"></p>\n<h4>From:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8acf781d4cae40b7de84578ff788e77cd7b70bf2/696d616765732f666967362e706e67\"></p>\n<p><a></a></p>\n<h2>9. ReplaceTextsToImages</h2>\n<h3>Sample script</h3>\n<p>In this sample, the texts <code>{{sample}}</code> in all tables are replaced with the image. In this case, you can use the image from an URL or a file on local PC.</p>\n<pre><span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"showAPIResponse\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># default is false</span>\n    <span class=\"s2\">\"tableOnly\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># default is false</span>\n    <span class=\"s2\">\"searchText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"{{sample}}\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"imageWidth\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"imageHeight\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"replaceImageURL\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://###/sample.png\"</span>\n    <span class=\"c1\"># \"replaceImageFilePath\": \"./sample.png\" # If you want to put the image in local PC, please use this.</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">ReplaceTextsToImages</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>\n<p><code>documentId</code>: Document ID.</p>\n</li>\n<li>\n<p><code>oauth2</code>: Credentials for using Docs API. Please check the section of <a href=\"#authorization\" rel=\"nofollow\">Authorization</a>.</p>\n<ul>\n<li>If you want to use Service Account, please use <code>service_account</code> instead of <code>oauth2</code>. About this, please check <a href=\"#serviceaccount\" rel=\"nofollow\">the sample script for Service account</a>.</li>\n</ul>\n</li>\n<li>\n<p><code>searchText</code>: Search text. This text is replaced with image.</p>\n</li>\n<li>\n<p><code>replaceImageURL</code>: URL of the image. When this property is used, the image is retrieved from the URL, and the retrieved image is used.</p>\n</li>\n<li>\n<p><code>replaceImageFilePath</code>: File path of the image. When this property is used, the image is retrieved from the file on local PC, and the retrieved image is used.</p>\n</li>\n<li>\n<p><code>imageWidth</code>: Width of the put image.</p>\n</li>\n<li>\n<p><code>imageHeight</code>: Height of the put image.</p>\n</li>\n<li>\n<p><code>tableOnly</code>: When this is <code>True</code>, only texts in the table are replaced with image. When this is <code>False</code>, the texts in the body are replaced.</p>\n</li>\n<li>\n<p><code>showAPIResponse</code>: When <code>\"showAPIResponse\": True</code> is used to <code>resource</code>, the responses from Docs API can be seen. The default value is <code>False</code>.</p>\n</li>\n</ul>\n<h3>Note</h3>\n<ul>\n<li>\n<p>The flow for replacing the text with the image on the local PC.</p>\n<ol>\n<li>Upload the image from local PC to Google Drive.</li>\n<li>Publicly share the image file. - The time for sharing is several seconds. The file is delete after the image is put.</li>\n<li>Put the image using the URL of the publicly shared file.</li>\n<li>Delete the image. - Even when the image is delete from Google Drive, the put image on Google Document is not deleted.</li>\n</ol>\n</li>\n<li>\n<p>About <code>imageWidth</code> and <code>imageHeight</code></p>\n<blockquote>\n<p><a href=\"https://developers.google.com/docs/api/reference/rest/v1/documents/request#insertinlineimagerequest\" rel=\"nofollow\"><strong>objectSize</strong></a>: The size that the image should appear as in the document. This property is optional and the final size of the image in the document is determined by the following rules: _ If neither width nor height is specified, then a default size of the image is calculated based on its resolution. _ If one dimension is specified then the other dimension is calculated to preserve the aspect ratio of the image. * If both width and height are specified, the image is scaled to fit within the provided dimensions while maintaining its aspect ratio.</p>\n</blockquote>\n</li>\n</ul>\n<h3>Result</h3>\n<p>When above script is run, the following result is obtained.</p>\n<h4>From:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ba551ca6968c36ff79ca9ffd86ee4adbc33174a/696d616765732f666967372e706e67\"></p>\n<h4>To:</h4>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d3bb1775f2af403a46a8aaaf62e8f30cc2ee1fa/696d616765732f666967382e706e67\"></p>\n<p>The image of <code>https://cdn.sstatic.net/Sites/stackoverflow/company/img/logos/so/so-logo.png</code> was used as the sample image.</p>\n<p>When <code>tableOnly</code> is <code>False</code>, the following result is retrieved.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2ed89ed0ff8170827ce83a5510afc1f97580ec6/696d616765732f666967392e706e67\"></p>\n<p><a></a></p>\n<h1>Authorization</h1>\n<p>There are 2 patterns for using this library.</p>\n<h2>1. Use OAuth2</h2>\n<p>Document of OAuth2 is <a href=\"https://developers.google.com/identity/protocols/OAuth2\" rel=\"nofollow\">here</a>.</p>\n<h3>Sample script</h3>\n<p>In this sample script, the authorization process uses <a href=\"https://developers.google.com/docs/api/quickstart/nodejs\" rel=\"nofollow\">the Quickstart for Node.js</a>. You can see the detail information at there.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os.path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google_auth_oauthlib.flow</span> <span class=\"kn\">import</span> <span class=\"n\">InstalledAppFlow</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google.auth.transport.requests</span> <span class=\"kn\">import</span> <span class=\"n\">Request</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">gdoctableapppy</span> <span class=\"kn\">import</span> <span class=\"n\">gdoctableapp</span>\n\n<span class=\"c1\"># If modifying these scopes, delete the file token.pickle.</span>\n<span class=\"n\">SCOPES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'https://www.googleapis.com/auth/documents'</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Shows basic usage of the Docs API.</span>\n<span class=\"sd\">    Prints the title of a sample document.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"c1\"># The file token.pickle stores the user's access and refresh tokens, and is</span>\n    <span class=\"c1\"># created automatically when the authorization flow completes for the first</span>\n    <span class=\"c1\"># time.</span>\n    <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s1\">'token.pickle'</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'token.pickle'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n            <span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n    <span class=\"c1\"># If there are no (valid) credentials available, let the user log in.</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">creds</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">creds</span><span class=\"o\">.</span><span class=\"n\">valid</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">creds</span> <span class=\"ow\">and</span> <span class=\"n\">creds</span><span class=\"o\">.</span><span class=\"n\">expired</span> <span class=\"ow\">and</span> <span class=\"n\">creds</span><span class=\"o\">.</span><span class=\"n\">refresh_token</span><span class=\"p\">:</span>\n            <span class=\"n\">creds</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">())</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">flow</span> <span class=\"o\">=</span> <span class=\"n\">InstalledAppFlow</span><span class=\"o\">.</span><span class=\"n\">from_client_secrets_file</span><span class=\"p\">(</span>\n                <span class=\"s1\">'credentials.json'</span><span class=\"p\">,</span> <span class=\"n\">SCOPES</span><span class=\"p\">)</span>\n            <span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"n\">flow</span><span class=\"o\">.</span><span class=\"n\">run_local_server</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Save the credentials for the next run</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'token.pickle'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n            <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n\n    <span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"oauth2\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">GetValues</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span> <span class=\"c1\"># You can see the retrieved values like this.</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p><a></a></p>\n<h2>2. Use Service account</h2>\n<p>Document of Service account is <a href=\"https://developers.google.com/identity/protocols/OAuth2ServiceAccount\" rel=\"nofollow\">here</a>. When you use Service account, please share Google Document with the email of Service account.</p>\n<h3>Sample script</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">google.oauth2</span> <span class=\"kn\">import</span> <span class=\"n\">service_account</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gdoctableapppy</span> <span class=\"kn\">import</span> <span class=\"n\">gdoctableapp</span>\n\n<span class=\"n\">SCOPES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'https://www.googleapis.com/auth/documents'</span><span class=\"p\">]</span>\n<span class=\"n\">SERVICE_ACCOUNT_FILE</span> <span class=\"o\">=</span> <span class=\"s1\">'service-account-credentials.json'</span>\n<span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"n\">service_account</span><span class=\"o\">.</span><span class=\"n\">Credentials</span><span class=\"o\">.</span><span class=\"n\">from_service_account_file</span><span class=\"p\">(</span><span class=\"n\">SERVICE_ACCOUNT_FILE</span><span class=\"p\">,</span> <span class=\"n\">scopes</span><span class=\"o\">=</span><span class=\"n\">SCOPES</span><span class=\"p\">)</span>\n\n<span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"service_account\"</span><span class=\"p\">:</span> <span class=\"n\">creds</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"documentId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tableIndex\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">gdoctableapp</span><span class=\"o\">.</span><span class=\"n\">GetValues</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span> <span class=\"c1\"># You can see the retrieved values like this.</span>\n</pre>\n<h1>Limitations</h1>\n<ul>\n<li>In the current stage, unfortunately, <code>tableCellStyle</code> cannot be modified by Google Docs API. By this, the formats of cells cannot be modified. About this, I have posted as <a href=\"https://issuetracker.google.com/issues/135136221\" rel=\"nofollow\">Feature Request</a>.</li>\n</ul>\n<h1>References:</h1>\n<ul>\n<li>Official document: <a href=\"https://developers.google.com/docs/api/how-tos/tables#inserting_or_deleting_table_rows\" rel=\"nofollow\">Inserting or deleting table rows</a></li>\n<li>If you want to know the relationship between the index and startIndex of each cell, you can see it at <a href=\"https://stackoverflow.com/a/56944149\" rel=\"nofollow\">here</a>.</li>\n</ul>\n<hr>\n<p><a></a></p>\n<h1>Licence</h1>\n<p><a href=\"LICENCE\" rel=\"nofollow\">MIT</a></p>\n<p><a></a></p>\n<h1>Author</h1>\n<p><a href=\"https://tanaikech.github.io/about/\" rel=\"nofollow\">Tanaike</a></p>\n<p>If you have any questions and commissions for me, feel free to tell me.</p>\n<p><a></a></p>\n<h1>Update History</h1>\n<ul>\n<li>\n<p>v1.0.0 (July 18, 2019)</p>\n<ol>\n<li>Initial release.</li>\n</ol>\n</li>\n<li>\n<p>v1.0.5 (January 21, 2020)</p>\n<ol>\n<li>When the inline objects and tables are put in the table. An error occurred. This bug was removed by this update.</li>\n</ol>\n</li>\n<li>\n<p>v1.1.0 (January 22, 2020)</p>\n<ol>\n<li><a href=\"#replacetexts\" rel=\"nofollow\">New method was added.</a> From this version, the texts can be replaced by images. The direct link and local file can be used as the image.</li>\n</ol>\n</li>\n</ul>\n<p><a href=\"#top\" rel=\"nofollow\">TOP</a></p>\n\n          </div>"}, "last_serial": 6498550, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "87ac91eb8747d977e8697e910f2fba39", "sha256": "e50844ae3853ea7272dae6b17da524044ba9c6eb6423baa4c0aa4413d272c767"}, "downloads": -1, "filename": "gdoctableapppy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "87ac91eb8747d977e8697e910f2fba39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11200, "upload_time": "2019-07-18T01:31:01", "upload_time_iso_8601": "2019-07-18T01:31:01.217440Z", "url": "https://files.pythonhosted.org/packages/8f/79/963d2973c6f3326c9cc8dabd9151c44c13b63f67808ed85926ed609e501c/gdoctableapppy-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b7173fff5038598c1dbc7dea485e276", "sha256": "e0ab0aab307375babd1acd16a43e008391ff47a10b518433c72393d612b01819"}, "downloads": -1, "filename": "gdoctableapppy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6b7173fff5038598c1dbc7dea485e276", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10955, "upload_time": "2019-07-18T01:31:03", "upload_time_iso_8601": "2019-07-18T01:31:03.542917Z", "url": "https://files.pythonhosted.org/packages/77/4b/c4f2bd63fdf032fd346b272291dc9605f118352e222d7c289409c961104a/gdoctableapppy-1.0.0.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "c0b75eb3118e4f451cea0714ce2cabd5", "sha256": "4da14e0776da611e7f634c315ae15c9bb11cd2f12bd61ecf094256e7de408bcf"}, "downloads": -1, "filename": "gdoctableapppy-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c0b75eb3118e4f451cea0714ce2cabd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12441, "upload_time": "2020-01-21T05:21:08", "upload_time_iso_8601": "2020-01-21T05:21:08.728268Z", "url": "https://files.pythonhosted.org/packages/a3/0b/e3d1978879de122733baf0eaca6b2ba5bf3a9d24790efd4e37a4bb0f6c59/gdoctableapppy-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01c5e6005da62d9914ea31b5b2f2d7fa", "sha256": "c56ffdd7e751df83ce66dd37f60edbac3d49c17fa5ead9dc9d8bf9485301b285"}, "downloads": -1, "filename": "gdoctableapppy-1.0.5.tar.gz", "has_sig": false, "md5_digest": "01c5e6005da62d9914ea31b5b2f2d7fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11404, "upload_time": "2020-01-21T05:21:10", "upload_time_iso_8601": "2020-01-21T05:21:10.535659Z", "url": "https://files.pythonhosted.org/packages/f9/08/29e394a003c9c9f80cd5e1b7bf95d7cae62503aaa56dbbb2c6ae5c8b157a/gdoctableapppy-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "d74a3cc705b8a96ab10fdea7d8299354", "sha256": "28e175d9322e4a33d74d0a94c045991a5f5dfc4fdc147ae561acfb246d88535a"}, "downloads": -1, "filename": "gdoctableapppy-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d74a3cc705b8a96ab10fdea7d8299354", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12295, "upload_time": "2020-01-21T05:28:24", "upload_time_iso_8601": "2020-01-21T05:28:24.558271Z", "url": "https://files.pythonhosted.org/packages/1f/0b/e208f4d792d593a47217ca2a2f9ce246d749a218874c8c0d7290ea13c15c/gdoctableapppy-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0a8c5821affb0c1e39bc71e37c5dd2c", "sha256": "f1a3549c710cba9a50075e7f67e69043f42c6a143e61b0a97e43f5095f8cbba2"}, "downloads": -1, "filename": "gdoctableapppy-1.0.6.tar.gz", "has_sig": false, "md5_digest": "a0a8c5821affb0c1e39bc71e37c5dd2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11279, "upload_time": "2020-01-21T05:28:26", "upload_time_iso_8601": "2020-01-21T05:28:26.072049Z", "url": "https://files.pythonhosted.org/packages/3e/da/903df536d57d1babfcc3987b737414e23d785d26b7f1c4a5ebde77738a8d/gdoctableapppy-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "fbb0ff57270824b234e49c021d9e5962", "sha256": "7497e03051e5f1daa8ebd5709cb8322abba8135daf20c0101b7f867c5d143d75"}, "downloads": -1, "filename": "gdoctableapppy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fbb0ff57270824b234e49c021d9e5962", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14441, "upload_time": "2020-01-22T06:06:38", "upload_time_iso_8601": "2020-01-22T06:06:38.854757Z", "url": "https://files.pythonhosted.org/packages/3e/8b/fef5b4a0a18a0112fc71d6f94d398650d9f0088cd1feee5800eadad7c2ca/gdoctableapppy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e36569f65af6779807e2f538a5f7de6", "sha256": "46739390b40cb41c1015b182feee4e508ec41da7587fbc3cc7b14462601ad14e"}, "downloads": -1, "filename": "gdoctableapppy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4e36569f65af6779807e2f538a5f7de6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17683, "upload_time": "2020-01-22T06:06:40", "upload_time_iso_8601": "2020-01-22T06:06:40.405503Z", "url": "https://files.pythonhosted.org/packages/c0/f8/564c30c0959f83677261489b4fc06e962bd19f87f5f27bf786a8dbb4afff/gdoctableapppy-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbb0ff57270824b234e49c021d9e5962", "sha256": "7497e03051e5f1daa8ebd5709cb8322abba8135daf20c0101b7f867c5d143d75"}, "downloads": -1, "filename": "gdoctableapppy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fbb0ff57270824b234e49c021d9e5962", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14441, "upload_time": "2020-01-22T06:06:38", "upload_time_iso_8601": "2020-01-22T06:06:38.854757Z", "url": "https://files.pythonhosted.org/packages/3e/8b/fef5b4a0a18a0112fc71d6f94d398650d9f0088cd1feee5800eadad7c2ca/gdoctableapppy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e36569f65af6779807e2f538a5f7de6", "sha256": "46739390b40cb41c1015b182feee4e508ec41da7587fbc3cc7b14462601ad14e"}, "downloads": -1, "filename": "gdoctableapppy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4e36569f65af6779807e2f538a5f7de6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17683, "upload_time": "2020-01-22T06:06:40", "upload_time_iso_8601": "2020-01-22T06:06:40.405503Z", "url": "https://files.pythonhosted.org/packages/c0/f8/564c30c0959f83677261489b4fc06e962bd19f87f5f27bf786a8dbb4afff/gdoctableapppy-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:41 2020"}