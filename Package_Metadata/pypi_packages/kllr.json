{"info": {"author": "Arya Farahi, Dhayaa Anbajagane", "author_email": "aryaf@umich.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Scientific/Engineering :: Physics"], "description": "![GitHub](https://img.shields.io/github/license/afarahi/kllr)\n![GitHub All Releases](https://img.shields.io/github/downloads/afarahi/kllr/total)\n![GitHub issues](https://img.shields.io/github/issues/afarahi/kllr)\n\n<p align=\"center\">\n  <img src=\"logo.png\" width=\"300\" title=\"logo\">\n</p>\n\n# Introduction\n\n\nLinear regression of the simple least-squares variety has been a canonical method used to characterize\n the relation between two variables, but its utility is limited by the fact that it reduces full \n population statistics down to three numbers: a slope, normalization and variance/standard deviation.\n With large empirical or simulated samples we can perform a more sensitive analysis\n using a localized linear regression method (see, Farahi et al. 2018 and Anbajagane et al. 2020).\n The KLLR method generates estimates of conditional statistics in terms of the local the slope, normalization,\n and covariance. Such a method provides a more nuanced description of population statistics appropriate\n for the very large samples with non-linear trends.\n\nThis code is an implementation of the Kernel Localized Linear Regression (KLLR) method \nthat performs a localized Linear regression described in Farahi et al. (2018). It employs \nbootstrap re-sampling technique to estimate the uncertainties. We also provide a set of visualization\ntools so practitioners can seamlessly generate visualization of the model parameters.\n\nIf you use KLLR or derivates based on it, please cite the following papers which introduced the tool:\n\n[Localized massive halo properties in BAHAMAS and MACSIS simulations: scalings, lognormality, and covariance](https://academic.oup.com/mnras/article-abstract/478/2/2618/4993329)\n\n[Stellar Property Statistics of Massive Halos from Cosmological Hydrodynamics Simulations: Common Kernel Shapes](https://arxiv.org/abs/2001.02283)\n\n## Dependencies\n\n`numpy`, `scipy`,  `matplotlib`, `pandas`, `sklearn`, `tqdm`\n\n## References\n\n[1]. A. Farahi, et al. \"Localized massive halo properties in BAHAMAS and MACSIS simulations: scalings, lognormality, and covariance.\" Monthly Notices of the Royal Astronomical Society 478.2 (2018): 2618-2632.\n\n[2]. D. Anbajagane, et al. Stellar Property Statistics of Massive Halos from Cosmological Hydrodynamics Simulations: Common Kernel Shapes. No. arXiv: 2001.02283. 2020.\n\n\n## Acknowledgment\n\n\n## Quickstart\n\nTo start using KLLR, simply use `from KLLR import kllr_model` to\naccess the primary functions and class. The exact requirements for the inputs are\nlisted in the docstring of the kllr_model() class further below.\nAn example for using KLLR looks like this:\n\n\n        from kllr import kllr_model                                       \n\n        lm = kllr_model(kernel_type = 'gaussian', kernel_width = 0.2)     \n        xrange, yrange_mean, intercept, slope, scatter = lm.fit(x, y, nbins=11)                                   \n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/afarahi/kllr", "keywords": "linear,regression,astronomy,astrophysics,parameter estimation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kllr", "package_url": "https://pypi.org/project/kllr/", "platform": "", "project_url": "https://pypi.org/project/kllr/", "project_urls": {"Homepage": "https://github.com/afarahi/kllr"}, "release_url": "https://pypi.org/project/kllr/1.0.0/", "requires_dist": ["numpy", "scipy", "matplotlib", "pandas", "sklearn", "tqdm"], "requires_python": "", "summary": "Kernel Localized Linear Regression.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6869461edf76107f6374a86571416a9a90ba8aaf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f616661726168692f6b6c6c72\">\n<img alt=\"GitHub All Releases\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04c4b9c3640d637259d1d813d5134c9cdfbbb98d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f616661726168692f6b6c6c722f746f74616c\">\n<img alt=\"GitHub issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c47944ded9bc10ffe143d26c5f1f3edde6e56cd3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f616661726168692f6b6c6c72\"></p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/388655114bc901a8aeb49270f41e805988057feb/6c6f676f2e706e67\" width=\"300\">\n</p>\n<h1>Introduction</h1>\n<p>Linear regression of the simple least-squares variety has been a canonical method used to characterize\nthe relation between two variables, but its utility is limited by the fact that it reduces full\npopulation statistics down to three numbers: a slope, normalization and variance/standard deviation.\nWith large empirical or simulated samples we can perform a more sensitive analysis\nusing a localized linear regression method (see, Farahi et al. 2018 and Anbajagane et al. 2020).\nThe KLLR method generates estimates of conditional statistics in terms of the local the slope, normalization,\nand covariance. Such a method provides a more nuanced description of population statistics appropriate\nfor the very large samples with non-linear trends.</p>\n<p>This code is an implementation of the Kernel Localized Linear Regression (KLLR) method\nthat performs a localized Linear regression described in Farahi et al. (2018). It employs\nbootstrap re-sampling technique to estimate the uncertainties. We also provide a set of visualization\ntools so practitioners can seamlessly generate visualization of the model parameters.</p>\n<p>If you use KLLR or derivates based on it, please cite the following papers which introduced the tool:</p>\n<p><a href=\"https://academic.oup.com/mnras/article-abstract/478/2/2618/4993329\" rel=\"nofollow\">Localized massive halo properties in BAHAMAS and MACSIS simulations: scalings, lognormality, and covariance</a></p>\n<p><a href=\"https://arxiv.org/abs/2001.02283\" rel=\"nofollow\">Stellar Property Statistics of Massive Halos from Cosmological Hydrodynamics Simulations: Common Kernel Shapes</a></p>\n<h2>Dependencies</h2>\n<p><code>numpy</code>, <code>scipy</code>,  <code>matplotlib</code>, <code>pandas</code>, <code>sklearn</code>, <code>tqdm</code></p>\n<h2>References</h2>\n<p>[1]. A. Farahi, et al. \"Localized massive halo properties in BAHAMAS and MACSIS simulations: scalings, lognormality, and covariance.\" Monthly Notices of the Royal Astronomical Society 478.2 (2018): 2618-2632.</p>\n<p>[2]. D. Anbajagane, et al. Stellar Property Statistics of Massive Halos from Cosmological Hydrodynamics Simulations: Common Kernel Shapes. No. arXiv: 2001.02283. 2020.</p>\n<h2>Acknowledgment</h2>\n<h2>Quickstart</h2>\n<p>To start using KLLR, simply use <code>from KLLR import kllr_model</code> to\naccess the primary functions and class. The exact requirements for the inputs are\nlisted in the docstring of the kllr_model() class further below.\nAn example for using KLLR looks like this:</p>\n<pre><code>    from kllr import kllr_model                                       \n\n    lm = kllr_model(kernel_type = 'gaussian', kernel_width = 0.2)     \n    xrange, yrange_mean, intercept, slope, scatter = lm.fit(x, y, nbins=11)                                   \n</code></pre>\n\n          </div>"}, "last_serial": 6818428, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "aefce78742da3cdc649ac2647ddec177", "sha256": "0fcdc70c5afd09da62ea23f7e4df8ae1cf4ccb15552d4b53efed231b94bbb7aa"}, "downloads": -1, "filename": "kllr-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aefce78742da3cdc649ac2647ddec177", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17274, "upload_time": "2020-03-16T04:01:11", "upload_time_iso_8601": "2020-03-16T04:01:11.277501Z", "url": "https://files.pythonhosted.org/packages/ed/03/07ae58425cdfceba4f1f8edc114bd82e818dbefe0811b2378012986e8d2e/kllr-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8d50eed4d8affa4adbc2686668cef29", "sha256": "dff15689b52e91014fd23ed442339ad367ff60085c09fa08ffbf2ac9d2f78a30"}, "downloads": -1, "filename": "kllr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d8d50eed4d8affa4adbc2686668cef29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16670, "upload_time": "2020-03-16T04:01:13", "upload_time_iso_8601": "2020-03-16T04:01:13.776335Z", "url": "https://files.pythonhosted.org/packages/11/22/cbe5ef8d96a9c619f7edc2581405bcd00722b618e90ed2533b58f168c514/kllr-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aefce78742da3cdc649ac2647ddec177", "sha256": "0fcdc70c5afd09da62ea23f7e4df8ae1cf4ccb15552d4b53efed231b94bbb7aa"}, "downloads": -1, "filename": "kllr-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aefce78742da3cdc649ac2647ddec177", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17274, "upload_time": "2020-03-16T04:01:11", "upload_time_iso_8601": "2020-03-16T04:01:11.277501Z", "url": "https://files.pythonhosted.org/packages/ed/03/07ae58425cdfceba4f1f8edc114bd82e818dbefe0811b2378012986e8d2e/kllr-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8d50eed4d8affa4adbc2686668cef29", "sha256": "dff15689b52e91014fd23ed442339ad367ff60085c09fa08ffbf2ac9d2f78a30"}, "downloads": -1, "filename": "kllr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d8d50eed4d8affa4adbc2686668cef29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16670, "upload_time": "2020-03-16T04:01:13", "upload_time_iso_8601": "2020-03-16T04:01:13.776335Z", "url": "https://files.pythonhosted.org/packages/11/22/cbe5ef8d96a9c619f7edc2581405bcd00722b618e90ed2533b58f168c514/kllr-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:20 2020"}