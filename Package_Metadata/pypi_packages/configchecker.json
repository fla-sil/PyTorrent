{"info": {"author": "Samun Victor", "author_email": "victor.samun@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only"], "description": "configchecker\n-------------\n|buildci| |coveralls| |pyversions|\n\n|DwnMonth| |DwnWeek| |DwnDay|\n\n|license|\n\nThis module helps to check ``configparser``-loaded configurations.\n\nUsage\n=====\n\n1. Initialize description of valid configuration:\n   ``schema = configchecker.ConfigSchema()``\n2. Add an information of possible sections by calling ``schema.section`` with section name validator and boolean flag \u201esection required\u201c.\n3. In every section describe possible section's values by calling ``sect.value``.\n\nName/value validators\n=====================\n\nThere are basic validators:\n\n* ``ItemDefaultValidator`` \u2014 always returns true\n* ``ItemStringValidator`` \u2014 checks if a string equals to given (probably, case-insensitive)\n* ``ItemRegexValidator`` \u2014 checks matching a string to given regexp\n* ``ItemNumberValidator`` \u2014 checks that a string is a non-negative integer\n\nAnd validator-composers which allow to create more complex checks:\n\n* ``ItemNotValidator``, ``ItemAndValidator``, ``ItemOrValidator`` \u2014 first-order logic on validators\n* ``ItemCountValidator`` \u2014 takes a validator and a function that check number of validator's true positives (i.e. returns ``True``)\n\nExamples\n========\n\n.. code-block:: py\n\n    import configparser\n    import configchecker as v\n    \n    config = configparser.ConfigParser()\n    config.read_file(\"config\")\n    \n    schema = v.ConfigSchema()\n    \n    # Section with name \u201eREQUIRED\u201c will be mandatory\n    with schema.section(\"REQUIRED\") as s:\n        # It must have keys matching regexp r'item_\\d+' and numeric value and nothing more\n        s.value(v.ItemRegexValidator(r'item_\\d+', value_val=v.ItemNumberValidator()).no_other()\n      \n    # Section with name r'OPT_\\w+' (check by regexp) will be optional\n    with schema.section(v.ItemRegexValidator(r'OPT_\\w+'), required=False) as s:\n        # And it may have anything\n        pass\n      \n    # Other sections will be restricted\n    schema.no_other()\n    \n    # Run checks\n    v.ConfigSchemaValidator(schema).validate(config)\n\n\nAlso, you can find lots of examples in tests (``test_configchecker.py``)\n\n\nAuthor\n======\n\nSamun Victor, victor.samun@gmail.com\n\n.. |buildci| image:: https://travis-ci.org/victorsamun/configvalidator.svg?branch=master\n   :target: https://travis-ci.org/victorsamun/configvalidator\n.. |coveralls| image:: https://coveralls.io/repos/github/victorsamun/configvalidator/badge.svg?branch=master\n   :target: https://coveralls.io/github/victorsamun/configvalidator?branch=master\n.. |license| image::  https://img.shields.io/pypi/l/configchecker.svg\n   :target: https://github.com/victorsamun/configvalidator/blob/master/LICENSE\n.. |DwnMonth| image:: https://img.shields.io/pypi/dm/configchecker.svg\n.. |DwnWeek| image:: https://img.shields.io/pypi/dw/configchecker.svg\n.. |DwnDay| image:: https://img.shields.io/pypi/dd/configchecker.svg\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/configchecker.svg", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/victorsamun/configvalidator/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/victorsamun/configvalidator", "keywords": "configparser configchecker checking validate", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "configchecker", "package_url": "https://pypi.org/project/configchecker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/configchecker/", "project_urls": {"Download": "https://github.com/victorsamun/configvalidator/archive/master.zip", "Homepage": "https://github.com/victorsamun/configvalidator"}, "release_url": "https://pypi.org/project/configchecker/0.95/", "requires_dist": null, "requires_python": null, "summary": "INI-config validator", "version": "0.95", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/victorsamun/configvalidator\" rel=\"nofollow\"><img alt=\"buildci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/014baca2ba15d7f75e40f021a8cecb6c16a6cb21/68747470733a2f2f7472617669732d63692e6f72672f766963746f7273616d756e2f636f6e66696776616c696461746f722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/victorsamun/configvalidator?branch=master\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10524f0d46d5bf2a5008d05d2aca8eb23db87cfd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f766963746f7273616d756e2f636f6e66696776616c696461746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a> <img alt=\"pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1ad7569a0caf705d862ca78e22adda762b60c37/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6e666967636865636b65722e737667\"></p>\n<p><img alt=\"DwnMonth\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7e0dede35958069cbf0e7b2b31fe4e245d71a02/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f636f6e666967636865636b65722e737667\"> <img alt=\"DwnWeek\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b17df0830a1c0cc7d96fc54a1645e2d0adb7209e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64772f636f6e666967636865636b65722e737667\"> <img alt=\"DwnDay\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0b2f02e6f6ba2c13e22f663579d65ec289eadd6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64642f636f6e666967636865636b65722e737667\"></p>\n<p><a href=\"https://github.com/victorsamun/configvalidator/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81128c0e73d32ce95a06d8e4344b47f7cfd1812f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6e666967636865636b65722e737667\"></a></p>\n<p>This module helps to check <tt>configparser</tt>-loaded configurations.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li>Initialize description of valid configuration:\n<tt>schema = configchecker.ConfigSchema()</tt></li>\n<li>Add an information of possible sections by calling <tt>schema.section</tt> with section name validator and boolean flag \u201esection required\u201c.</li>\n<li>In every section describe possible section\u2019s values by calling <tt>sect.value</tt>.</li>\n</ol>\n</div>\n<div id=\"name-value-validators\">\n<h2>Name/value validators</h2>\n<p>There are basic validators:</p>\n<ul>\n<li><tt>ItemDefaultValidator</tt> \u2014 always returns true</li>\n<li><tt>ItemStringValidator</tt> \u2014 checks if a string equals to given (probably, case-insensitive)</li>\n<li><tt>ItemRegexValidator</tt> \u2014 checks matching a string to given regexp</li>\n<li><tt>ItemNumberValidator</tt> \u2014 checks that a string is a non-negative integer</li>\n</ul>\n<p>And validator-composers which allow to create more complex checks:</p>\n<ul>\n<li><tt>ItemNotValidator</tt>, <tt>ItemAndValidator</tt>, <tt>ItemOrValidator</tt> \u2014 first-order logic on validators</li>\n<li><tt>ItemCountValidator</tt> \u2014 takes a validator and a function that check number of validator\u2019s true positives (i.e. returns <tt>True</tt>)</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">configparser</span>\n<span class=\"kn\">import</span> <span class=\"nn\">configchecker</span> <span class=\"k\">as</span> <span class=\"nn\">v</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">configparser</span><span class=\"o\">.</span><span class=\"n\">ConfigParser</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">read_file</span><span class=\"p\">(</span><span class=\"s2\">\"config\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">ConfigSchema</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Section with name \u201eREQUIRED\u201c will be mandatory</span>\n<span class=\"k\">with</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"s2\">\"REQUIRED\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">s</span><span class=\"p\">:</span>\n    <span class=\"c1\"># It must have keys matching regexp r'item_\\d+' and numeric value and nothing more</span>\n    <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">ItemRegexValidator</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'item_\\d+'</span><span class=\"p\">,</span> <span class=\"n\">value_val</span><span class=\"o\">=</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">ItemNumberValidator</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">no_other</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Section with name r'OPT_\\w+' (check by regexp) will be optional</span>\n<span class=\"k\">with</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">ItemRegexValidator</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'OPT_\\w+'</span><span class=\"p\">),</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">s</span><span class=\"p\">:</span>\n    <span class=\"c1\"># And it may have anything</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"c1\"># Other sections will be restricted</span>\n<span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">no_other</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Run checks</span>\n<span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">ConfigSchemaValidator</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n</pre>\n<p>Also, you can find lots of examples in tests (<tt>test_configchecker.py</tt>)</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Samun Victor, <a href=\"mailto:victor.samun%40gmail.com\">victor<span>.</span>samun<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 2180896, "releases": {"0.94": [{"comment_text": "", "digests": {"md5": "217fd39fa510e34e48a9dd1f3595743c", "sha256": "66dfb4293f15672aacc1f1c9b6e6eece16348e0aec4a2e2dc11854dc639b8204"}, "downloads": -1, "filename": "configchecker-0.94-py3-none-any.whl", "has_sig": false, "md5_digest": "217fd39fa510e34e48a9dd1f3595743c", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 4618, "upload_time": "2016-06-17T09:50:47", "upload_time_iso_8601": "2016-06-17T09:50:47.483254Z", "url": "https://files.pythonhosted.org/packages/35/60/b7a957219ae2d82393401788a760c0968f89814813ffd933ad8bc04614f0/configchecker-0.94-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "907990fcb8482871699222f94486ba00", "sha256": "cbd7e732c444d7d61633f0e211edd3d072b82c176648860cc5a02ee8e518c0d9"}, "downloads": -1, "filename": "configchecker-0.94.tar.gz", "has_sig": false, "md5_digest": "907990fcb8482871699222f94486ba00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5463, "upload_time": "2016-06-17T09:50:42", "upload_time_iso_8601": "2016-06-17T09:50:42.716906Z", "url": "https://files.pythonhosted.org/packages/36/d9/9569325c67bd55dd284512e05d08ebeaefba8405415fddd96e82f83a8b6e/configchecker-0.94.tar.gz", "yanked": false}], "0.95": [{"comment_text": "", "digests": {"md5": "d3e6f4531417a737c65adfa8bac8ab8b", "sha256": "2bd757b24e8026c84ca732b836c10619dd53cf13b676687c2c1dd4ba82aef98b"}, "downloads": -1, "filename": "configchecker-0.95-py3-none-any.whl", "has_sig": false, "md5_digest": "d3e6f4531417a737c65adfa8bac8ab8b", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 6931, "upload_time": "2016-06-22T09:51:01", "upload_time_iso_8601": "2016-06-22T09:51:01.352435Z", "url": "https://files.pythonhosted.org/packages/d8/f2/98914f7f813baba67c676c07c257b6a1c0347aa52a3b2b69247c894cf0b6/configchecker-0.95-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd721f8ec84fae5e22ed5620b5966ac3", "sha256": "e810b9dd878c93271db0a0635ba06dceceb159241e551349cc3181d3506ba994"}, "downloads": -1, "filename": "configchecker-0.95.tar.gz", "has_sig": false, "md5_digest": "bd721f8ec84fae5e22ed5620b5966ac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6913, "upload_time": "2016-06-22T09:50:56", "upload_time_iso_8601": "2016-06-22T09:50:56.815379Z", "url": "https://files.pythonhosted.org/packages/b8/f6/3626472e029fb870f95fbf51886c09b24b94f33cc677331e30bd80ef1c54/configchecker-0.95.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3e6f4531417a737c65adfa8bac8ab8b", "sha256": "2bd757b24e8026c84ca732b836c10619dd53cf13b676687c2c1dd4ba82aef98b"}, "downloads": -1, "filename": "configchecker-0.95-py3-none-any.whl", "has_sig": false, "md5_digest": "d3e6f4531417a737c65adfa8bac8ab8b", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 6931, "upload_time": "2016-06-22T09:51:01", "upload_time_iso_8601": "2016-06-22T09:51:01.352435Z", "url": "https://files.pythonhosted.org/packages/d8/f2/98914f7f813baba67c676c07c257b6a1c0347aa52a3b2b69247c894cf0b6/configchecker-0.95-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd721f8ec84fae5e22ed5620b5966ac3", "sha256": "e810b9dd878c93271db0a0635ba06dceceb159241e551349cc3181d3506ba994"}, "downloads": -1, "filename": "configchecker-0.95.tar.gz", "has_sig": false, "md5_digest": "bd721f8ec84fae5e22ed5620b5966ac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6913, "upload_time": "2016-06-22T09:50:56", "upload_time_iso_8601": "2016-06-22T09:50:56.815379Z", "url": "https://files.pythonhosted.org/packages/b8/f6/3626472e029fb870f95fbf51886c09b24b94f33cc677331e30bd80ef1c54/configchecker-0.95.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:58 2020"}