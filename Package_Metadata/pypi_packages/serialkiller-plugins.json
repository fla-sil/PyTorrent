{"info": {"author": "Bruno Adel\u00e9", "author_email": "Bruno Adel\u00e9 <bruno@adele.im>", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "About\n=====\n\n``serialkiller-plugins`` Plugins for serialkiller project\n\n\nInstalling\n==========\n\nTo install the latest release from `PyPI <http://pypi.python.org/pypi/serialkiller-plugins>`_\n\n::\n\n    $ pip install serialkiller-plugins\n\nTo install the latest development version from `GitHub <https://github.com/badele/serialkiller-plugins>`_\n\n::\n\n    $ pip install git+git://github.com/badele/serialkiller-plugins.git\n\nPlugins\n=======\n- Is online (ping)\n- Teleinformation (French electric provider)\n- Sunshine (calc sunrise & sunset)\n\n\nScript example\n==============\n\nFor checking the sensors periodically, i use the supervisor application, it can restart the application if it crashes.\n\nSupervisor install.\n\n::\n\n    # Debian\n    $ apt-get install supervisor\n\n    # Archlinux\n    $ pacman -S supervisor\n\nThe check sensors supervisor configuration.\n\n::\n\n    [program:check_sensors]\n    command=~/.virtualenvs/serialkiller/bin/python /usr/local/bin/check_sensors.py\n    user=badele\n    autostart=true\n    autorestart=true\n\n\nActive and start supervisor.\n\n::\n\n    # Debian\n    $ /etc/init.d/supervisor start\n\n    # Archlinux\n    $ systemctl enable supvervisord\n    $ systemctl start supvervisord\n\n    # Show status\n    $ supervisorctl status\n    check_sensors                    RUNNING    pid 1306, uptime 23:48:04\n\n``/usr/local/bin/check_sensors.py`` script example.\n\n::\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n    import os\n    import time\n\n    from skplugins import addValuePlugin, addEventPlugin, addValue, addEvent\n    from skplugins.network.ping import ping\n    from skplugins.weather.sunshine import sunshine\n\n    server = '192.168.1.1'\n    while True:\n\n        # Check sunshine\n        result = sunshine(latitude=\"43:36:43\", longitude=\"3:53:38\", elevation=8)\n        addValuePlugin(server, 'city:weather:sunshine', result)\n\n        # Check internet connexion\n        result = ping(destination=\"8.8.8.8\", count=1)\n        addValuePlugin(server, 'livingroom:internet:available', result)\n\n        # Check webcam\n        result = ping(destination=\"192.168.1.2\", count=1)\n        addValuePlugin(server, 'livingroom:axis:online', result)\n\n        # Check my computer\n        result = ping(destination=\"192.168.1.3\", count=1)\n        addValuePlugin(server, 'bedroom:hp2012:online', result)\n\n        # Check teleinfo informations\n        result = teleinfo(dev='/dev/teleinfo')\n\n        if 'HCHC' in result.results:\n            addValue(server, 'washroom:teleinfo:hchc', result.types['HCHC'], result.results['HCHC'])\n\n        if 'HCHP' in result.results:\n            addValue(server, 'washroom:teleinfo:hchp', result.types['HCHP'], result.results['HCHP'])\n\n        if 'IINST' in result.results:\n            addValue(server, 'washroom:teleinfo:iinst', result.types['IINST'], result.results['IINST'])\n\n        if 'ISOUSC' in result.results:\n            addValue(server, 'washroom:teleinfo:isousc', result.types['ISOUSC'], result.results['ISOUSC'])\n\n        if 'PAPP' in result.results:\n            addValue(server, 'washroom:teleinfo:papp', result.types['PAPP'], result.results['PAPP'])\n\n        #Sleep\n        time.sleep(5)\nChangelog\n=========\n\nVersion 0.0.2 (2014-02-08)\n--------------------------\n\n * Add metar plugin\n * Add vigilance plugin (Meteo France)\n * Add cache system\n * Add process plugin\n * Add sunshine plugin\n * Add ping plugin\n * Add teleinfo plugin\n\nVersion 0.0.1 (2013-01-11)\n--------------------------\n\n* First version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/badele/serialkiller-plugins", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "serialkiller-plugins", "package_url": "https://pypi.org/project/serialkiller-plugins/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/serialkiller-plugins/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/badele/serialkiller-plugins"}, "release_url": "https://pypi.org/project/serialkiller-plugins/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Plugins for serialkiller project", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            About<br>=====<br><br>``serialkiller-plugins`` Plugins for serialkiller project<br><br><br>Installing<br>==========<br><br>To install the latest release from `PyPI &lt;http://pypi.python.org/pypi/serialkiller-plugins&gt;`_<br><br>::<br><br>    $ pip install serialkiller-plugins<br><br>To install the latest development version from `GitHub &lt;https://github.com/badele/serialkiller-plugins&gt;`_<br><br>::<br><br>    $ pip install git+git://github.com/badele/serialkiller-plugins.git<br><br>Plugins<br>=======<br>- Is online (ping)<br>- Teleinformation (French electric provider)<br>- Sunshine (calc sunrise &amp; sunset)<br><br><br>Script example<br>==============<br><br>For checking the sensors periodically, i use the supervisor application, it can restart the application if it crashes.<br><br>Supervisor install.<br><br>::<br><br>    # Debian<br>    $ apt-get install supervisor<br><br>    # Archlinux<br>    $ pacman -S supervisor<br><br>The check sensors supervisor configuration.<br><br>::<br><br>    [program:check_sensors]<br>    command=~/.virtualenvs/serialkiller/bin/python /usr/local/bin/check_sensors.py<br>    user=badele<br>    autostart=true<br>    autorestart=true<br><br><br>Active and start supervisor.<br><br>::<br><br>    # Debian<br>    $ /etc/init.d/supervisor start<br><br>    # Archlinux<br>    $ systemctl enable supvervisord<br>    $ systemctl start supvervisord<br><br>    # Show status<br>    $ supervisorctl status<br>    check_sensors                    RUNNING    pid 1306, uptime 23:48:04<br><br>``/usr/local/bin/check_sensors.py`` script example.<br><br>::<br><br>    #!/usr/bin/env python<br>    # -*- coding: utf-8 -*-<br><br>    import os<br>    import time<br><br>    from skplugins import addValuePlugin, addEventPlugin, addValue, addEvent<br>    from skplugins.network.ping import ping<br>    from skplugins.weather.sunshine import sunshine<br><br>    server = '192.168.1.1'<br>    while True:<br><br>        # Check sunshine<br>        result = sunshine(latitude=\"43:36:43\", longitude=\"3:53:38\", elevation=8)<br>        addValuePlugin(server, 'city:weather:sunshine', result)<br><br>        # Check internet connexion<br>        result = ping(destination=\"8.8.8.8\", count=1)<br>        addValuePlugin(server, 'livingroom:internet:available', result)<br><br>        # Check webcam<br>        result = ping(destination=\"192.168.1.2\", count=1)<br>        addValuePlugin(server, 'livingroom:axis:online', result)<br><br>        # Check my computer<br>        result = ping(destination=\"192.168.1.3\", count=1)<br>        addValuePlugin(server, 'bedroom:hp2012:online', result)<br><br>        # Check teleinfo informations<br>        result = teleinfo(dev='/dev/teleinfo')<br><br>        if 'HCHC' in result.results:<br>            addValue(server, 'washroom:teleinfo:hchc', result.types['HCHC'], result.results['HCHC'])<br><br>        if 'HCHP' in result.results:<br>            addValue(server, 'washroom:teleinfo:hchp', result.types['HCHP'], result.results['HCHP'])<br><br>        if 'IINST' in result.results:<br>            addValue(server, 'washroom:teleinfo:iinst', result.types['IINST'], result.results['IINST'])<br><br>        if 'ISOUSC' in result.results:<br>            addValue(server, 'washroom:teleinfo:isousc', result.types['ISOUSC'], result.results['ISOUSC'])<br><br>        if 'PAPP' in result.results:<br>            addValue(server, 'washroom:teleinfo:papp', result.types['PAPP'], result.results['PAPP'])<br><br>        #Sleep<br>        time.sleep(5)<br>Changelog<br>=========<br><br>Version 0.0.2 (2014-02-08)<br>--------------------------<br><br> * Add metar plugin<br> * Add vigilance plugin (Meteo France)<br> * Add cache system<br> * Add process plugin<br> * Add sunshine plugin<br> * Add ping plugin<br> * Add teleinfo plugin<br><br>Version 0.0.1 (2013-01-11)<br>--------------------------<br><br>* First version\n          </div>"}, "last_serial": 994719, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "31e9be26e3f9d7929b7d6d744f712d13", "sha256": "fc4f39ff4bbe1a78b15d9790be759da262312034b53c625830d3e5ae8a26bc62"}, "downloads": -1, "filename": "serialkiller-plugins-0.0.2.tar.gz", "has_sig": false, "md5_digest": "31e9be26e3f9d7929b7d6d744f712d13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21155, "upload_time": "2014-02-08T22:24:37", "upload_time_iso_8601": "2014-02-08T22:24:37.377574Z", "url": "https://files.pythonhosted.org/packages/66/3c/804d1342252544c64868d93044dace24dcbcfc8a3d8a4548ab82afc5eb23/serialkiller-plugins-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31e9be26e3f9d7929b7d6d744f712d13", "sha256": "fc4f39ff4bbe1a78b15d9790be759da262312034b53c625830d3e5ae8a26bc62"}, "downloads": -1, "filename": "serialkiller-plugins-0.0.2.tar.gz", "has_sig": false, "md5_digest": "31e9be26e3f9d7929b7d6d744f712d13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21155, "upload_time": "2014-02-08T22:24:37", "upload_time_iso_8601": "2014-02-08T22:24:37.377574Z", "url": "https://files.pythonhosted.org/packages/66/3c/804d1342252544c64868d93044dace24dcbcfc8a3d8a4548ab82afc5eb23/serialkiller-plugins-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:16 2020"}