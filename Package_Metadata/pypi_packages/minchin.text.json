{"info": {"author": "William Minchin", "author_email": "w_minchin@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "minchin.text\n============\n\nPython library for text formatting on the command line.\n\nAvailable Data\n---------------\n\n\\_\\_version\\_\\_\n```````````````\nlibrary version.\n\nre_ansi_control_codes\n`````````````````````\nCompiled regex pattern for ANSI control codes, including colors.\n\nre_weburl\n`````````\nCompiled regex pattern for web URL's -- http, https, and naked domains like \"example.com\"\n\nre_allurl\n`````````\nCompiled regex pattern to match all URL's, including \"mailto:foo@example.com\",\n\"x-whatever://foo\", etc.\n\nAnswers\n```````\nAn Enum containing the possible query answers. Current contains ``YES``,\n``NO``, ``QUIT``, ``ALL``, and ``NONE``. ``YES`` and ``ALL`` are \"truth-y\"\nwhile ``NO``, ``QUIT``, and ``NONE`` are \"false-y\".\n\n\nAvailable Commands\n------------------\n\nlength_no_ansi(mystring)\n````````````````````````\nTakes a string, strips out the ANSI escape codes\n(used for colouring terminal output, etc.), and returns\nthe length of the resulting string\n\ncentered (mystring, linewidth=None, fill=\" \")\n`````````````````````````````````````````````\nTakes a string, centres it, and pads it on both sides. Default ``linewidth`` is\none less than the console width.\n\nclock_on_right(mystring)\n````````````````````````\nTakes a string, and prints it with the time right aligned\n\nquery_yes_no(question, default=\"yes\")\n`````````````````````````````````````\nAsk a yes/no question via raw_input() and return their answer.\n\n- \"question\" is a string that is presented to the user.\n- \"default\" is the presumed answer if the user just hits <Enter>. It must be\n  \"yes\" (the default), \"no\" or None (meaning an answer is required of the\n  user).\n- Returns one of Answer.YES or Answer.NO\n\nquery_yes_no_all(question, default=\"yes\")\n`````````````````````````````````````````\nAsk a yes/no/all question via raw_input() and return their answer.\n\n- \"question\" is a string that is presented to the user.\n- \"default\" is the presumed answer if the user just hits <Enter>. It must be\n  \"yes\" (the default), \"no\", \"all\" or None (meaning an answer is required of\n  the user).\n- Returns one of Answer.YES, Answer.NO, or Answer.ALL\n\ndef query_yes_quit(question, default=\"quit\")\n````````````````````````````````````````````\nAsk a yes/quit question via raw_input() and return their answer.\n\n- \"question\" is a string that is presented to the user.\n- \"default\" is the presumed answer if the user just hits <Enter>. It must be\n  \"yes\" (the default), \"quit\" or None (meaning an answer is required of the\n  user).\n- Returns one of Answer.YES or Answer.QUIT\n\nquery_yes_no_all_none(question, default=\"yes\")\n``````````````````````````````````````````````\nAsk a yes/no/all/none question via raw_input() and return their answer.\n\n- \"question\" is a string that is presented to the user.\n- \"default\" is the presumed answer if the user just hits <Enter>. It must be\n  \"yes\" (the default), \"no\", \"all\", \"none\" (i.e. the string) or None (meaning\n  an answer is required of the user).\n- Returns one of Answer.YES, Answer.NO, Answer.ALL, or Answer.NONE\n\nwait(sec)\n`````````\nPrints a timer with the format 0:00 to the console,\nand then clears the line when the timer is done.\n\ntitle(mytitle)\n``````````````\nTakes ``mytitle``, centers it, and prints it in yellow letters on a blue\nbackground.\n\nsubtitle(mysubtitle)\n````````````````````\nTakes ``mysubtitle``, centers it, and prints it in bright (white) letters on a\nnormal (black) background.\n\nrainbow_print(text, offset=0)\n`````````````````````````````\nPrints out ``text`` in a cycle of rainbow-esque colors!\n\n\nprogressbar (class)\n-------------------\n\nThis class is used to create and then update a 'progress bar', like:\n\n.. code-block:: shell\n\n    [================>                                                    ] 17 / 70\n\n\nprogressbar(current=0, maximum=100, bar_color=colorama.Fore.GREEN)\n``````````````````````````````````````````````````````````````````\nCreates a progress bar class. Prints the progress bar.\n\nprogressbar.update(currently=None)\n``````````````````````````````````\nUpdates the value of the progress bar and prints it.\n\nprogressbar.reset()\n```````````````````\nSets the value of the progress bar to 0 (zero) and prints it.\n\nCode\n----\n\nThe code is available at `https://github.com/MinchinWeb/minchin.text <https://github.com/MinchinWeb/minchin.text>`_\n\nContributions are welcome!\n\nTests\n-----\nLocated in the `test` folder. Each is a \"visual test\", so they need to be run and the output manually examined.\n\nLicense\n-------\nThe code is licensed under the MIT license. See that attached `LICENSE` file.\n\n\nMinchin.Text Changelog\n======================\n\nv 6.0.2 [2020-04-17]\n--------------------\n\n- fixed bug where ``progressbar`` would sometimes not calculated the needed bar\n  length\n- fixed display issue where is wasn't clear what the possible answers to\n  queries were. This does make the output quite a bit longer.\n\nv 6.0.1 [2020-04-10]\n--------------------\n\n- fixed alignment issues if you change the maximum value for ``progressbar``\n- fixed ``progressbar`` numbers to be displayed with thousands commas, if large\n  enough\n\nv 6.0.0 [2019-02-08]\n--------------------\n\n- [BREAKING CHANGE] queries now return one of ``Answer.YES``, ``Answer.NO``,\n  ``Answer.QUIT``, ``Answer.ALL``, or ``Answer.NONE``, as appropriate. ``YES``\n  and ``ALL`` are \"Truth-y\", while ``NO``, ``QUIT``, and ``NONE`` are \"False-y\"\n- added ``query_yes_no_all_none()``\n- added ``rainbow_print()`` to print strings in all the colours!\n\nv 5.1.1 [2017-10-03]\n--------------------\n\n- allow ``setup.py`` to work with versions of Python before 3.6\n- remove hardcoded terminal width of 79 characters\n\nv 5.1.0 [2017-01-29]\n--------------------\n\n- ``minchin.text.progressbar()`` will only print (by default) every 0.1 seconds\n- fixed progressbar bug where \"overfull\" bars would go on to multiple lines\n- added ``get_terminal_size()``\n- upgraded release machinery\n\nv 5.0 [2015-06-10]\n------------------\n\n- [BREAKING CHANGE] moved package to ``minchin.text``\n- added tests for ``minchin.text.centered()``\n- added end character to progress bar\n- added documentation to README.rst\n\nv 4.4 [2014-10-26]\n------------------\n\n- typographic changes to allow wmtext to work in Python 3\n\nv 4.1 [2014-03-10]\n------------------\n\n- allow access as a direct object. i.e. use ``import wmtext`` rather than\n  ``from wmtext import wmtext``\n\nv 4.0 [2014-02-06]\n------------------\n\n- packaged as a separate module\n- added progress bar\n- first public release\n\nv 3.2 [2014-02-02]\n------------------\n\n- add ``length_no_ansi()`` allowing you to determine the length of a string\n  after stripping out ANSI codes.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MinchinWeb/minchin.text", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "minchin.text", "package_url": "https://pypi.org/project/minchin.text/", "platform": "any", "project_url": "https://pypi.org/project/minchin.text/", "project_urls": {"Homepage": "https://github.com/MinchinWeb/minchin.text"}, "release_url": "https://pypi.org/project/minchin.text/6.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python library for text formatting on the command line.", "version": "6.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"minchin-text\">\n<h2>minchin.text</h2>\n<p>Python library for text formatting on the command line.</p>\n<div id=\"available-data\">\n<h3>Available Data</h3>\n<div id=\"version\">\n<h4>__version__</h4>\n<p>library version.</p>\n</div>\n<div id=\"re-ansi-control-codes\">\n<h4>re_ansi_control_codes</h4>\n<p>Compiled regex pattern for ANSI control codes, including colors.</p>\n</div>\n<div id=\"re-weburl\">\n<h4>re_weburl</h4>\n<p>Compiled regex pattern for web URL\u2019s \u2013 http, https, and naked domains like \u201cexample.com\u201d</p>\n</div>\n<div id=\"re-allurl\">\n<h4>re_allurl</h4>\n<p>Compiled regex pattern to match all URL\u2019s, including \u201c<a href=\"mailto:foo%40example.com\">mailto:foo<span>@</span>example<span>.</span>com</a>\u201d,\n\u201cx-whatever://foo\u201d, etc.</p>\n</div>\n<div id=\"answers\">\n<h4>Answers</h4>\n<p>An Enum containing the possible query answers. Current contains <tt>YES</tt>,\n<tt>NO</tt>, <tt>QUIT</tt>, <tt>ALL</tt>, and <tt>NONE</tt>. <tt>YES</tt> and <tt>ALL</tt> are \u201ctruth-y\u201d\nwhile <tt>NO</tt>, <tt>QUIT</tt>, and <tt>NONE</tt> are \u201cfalse-y\u201d.</p>\n</div>\n</div>\n<div id=\"available-commands\">\n<h3>Available Commands</h3>\n<div id=\"length-no-ansi-mystring\">\n<h4>length_no_ansi(mystring)</h4>\n<p>Takes a string, strips out the ANSI escape codes\n(used for colouring terminal output, etc.), and returns\nthe length of the resulting string</p>\n</div>\n<div id=\"centered-mystring-linewidth-none-fill\">\n<h4>centered (mystring, linewidth=None, fill=\u201d \u201c)</h4>\n<p>Takes a string, centres it, and pads it on both sides. Default <tt>linewidth</tt> is\none less than the console width.</p>\n</div>\n<div id=\"clock-on-right-mystring\">\n<h4>clock_on_right(mystring)</h4>\n<p>Takes a string, and prints it with the time right aligned</p>\n</div>\n<div id=\"query-yes-no-question-default-yes\">\n<h4>query_yes_no(question, default=\u201dyes\u201d)</h4>\n<p>Ask a yes/no question via raw_input() and return their answer.</p>\n<ul>\n<li>\u201cquestion\u201d is a string that is presented to the user.</li>\n<li>\u201cdefault\u201d is the presumed answer if the user just hits &lt;Enter&gt;. It must be\n\u201cyes\u201d (the default), \u201cno\u201d or None (meaning an answer is required of the\nuser).</li>\n<li>Returns one of Answer.YES or Answer.NO</li>\n</ul>\n</div>\n<div id=\"query-yes-no-all-question-default-yes\">\n<h4>query_yes_no_all(question, default=\u201dyes\u201d)</h4>\n<p>Ask a yes/no/all question via raw_input() and return their answer.</p>\n<ul>\n<li>\u201cquestion\u201d is a string that is presented to the user.</li>\n<li>\u201cdefault\u201d is the presumed answer if the user just hits &lt;Enter&gt;. It must be\n\u201cyes\u201d (the default), \u201cno\u201d, \u201call\u201d or None (meaning an answer is required of\nthe user).</li>\n<li>Returns one of Answer.YES, Answer.NO, or Answer.ALL</li>\n</ul>\n</div>\n<div id=\"def-query-yes-quit-question-default-quit\">\n<h4>def query_yes_quit(question, default=\u201dquit\u201d)</h4>\n<p>Ask a yes/quit question via raw_input() and return their answer.</p>\n<ul>\n<li>\u201cquestion\u201d is a string that is presented to the user.</li>\n<li>\u201cdefault\u201d is the presumed answer if the user just hits &lt;Enter&gt;. It must be\n\u201cyes\u201d (the default), \u201cquit\u201d or None (meaning an answer is required of the\nuser).</li>\n<li>Returns one of Answer.YES or Answer.QUIT</li>\n</ul>\n</div>\n<div id=\"query-yes-no-all-none-question-default-yes\">\n<h4>query_yes_no_all_none(question, default=\u201dyes\u201d)</h4>\n<p>Ask a yes/no/all/none question via raw_input() and return their answer.</p>\n<ul>\n<li>\u201cquestion\u201d is a string that is presented to the user.</li>\n<li>\u201cdefault\u201d is the presumed answer if the user just hits &lt;Enter&gt;. It must be\n\u201cyes\u201d (the default), \u201cno\u201d, \u201call\u201d, \u201cnone\u201d (i.e. the string) or None (meaning\nan answer is required of the user).</li>\n<li>Returns one of Answer.YES, Answer.NO, Answer.ALL, or Answer.NONE</li>\n</ul>\n</div>\n<div id=\"wait-sec\">\n<h4>wait(sec)</h4>\n<p>Prints a timer with the format 0:00 to the console,\nand then clears the line when the timer is done.</p>\n</div>\n<div id=\"title-mytitle\">\n<h4>title(mytitle)</h4>\n<p>Takes <tt>mytitle</tt>, centers it, and prints it in yellow letters on a blue\nbackground.</p>\n</div>\n<div id=\"subtitle-mysubtitle\">\n<h4>subtitle(mysubtitle)</h4>\n<p>Takes <tt>mysubtitle</tt>, centers it, and prints it in bright (white) letters on a\nnormal (black) background.</p>\n</div>\n<div id=\"rainbow-print-text-offset-0\">\n<h4>rainbow_print(text, offset=0)</h4>\n<p>Prints out <tt>text</tt> in a cycle of rainbow-esque colors!</p>\n</div>\n</div>\n<div id=\"progressbar-class\">\n<h3>progressbar (class)</h3>\n<p>This class is used to create and then update a \u2018progress bar\u2019, like:</p>\n<pre><span class=\"o\">[================</span>&gt;                                                    <span class=\"o\">]</span> <span class=\"m\">17</span> / <span class=\"m\">70</span>\n</pre>\n<div id=\"progressbar-current-0-maximum-100-bar-color-colorama-fore-green\">\n<h4>progressbar(current=0, maximum=100, bar_color=colorama.Fore.GREEN)</h4>\n<p>Creates a progress bar class. Prints the progress bar.</p>\n</div>\n<div id=\"progressbar-update-currently-none\">\n<h4>progressbar.update(currently=None)</h4>\n<p>Updates the value of the progress bar and prints it.</p>\n</div>\n<div id=\"progressbar-reset\">\n<h4>progressbar.reset()</h4>\n<p>Sets the value of the progress bar to 0 (zero) and prints it.</p>\n</div>\n</div>\n<div id=\"code\">\n<h3>Code</h3>\n<p>The code is available at <a href=\"https://github.com/MinchinWeb/minchin.text\" rel=\"nofollow\">https://github.com/MinchinWeb/minchin.text</a></p>\n<p>Contributions are welcome!</p>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>Located in the <cite>test</cite> folder. Each is a \u201cvisual test\u201d, so they need to be run and the output manually examined.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The code is licensed under the MIT license. See that attached <cite>LICENSE</cite> file.</p>\n</div>\n</div>\n<div id=\"minchin-text-changelog\">\n<h2>Minchin.Text Changelog</h2>\n<div id=\"v-6-0-2-2020-04-17\">\n<h3>v 6.0.2 [2020-04-17]</h3>\n<ul>\n<li>fixed bug where <tt>progressbar</tt> would sometimes not calculated the needed bar\nlength</li>\n<li>fixed display issue where is wasn\u2019t clear what the possible answers to\nqueries were. This does make the output quite a bit longer.</li>\n</ul>\n</div>\n<div id=\"v-6-0-1-2020-04-10\">\n<h3>v 6.0.1 [2020-04-10]</h3>\n<ul>\n<li>fixed alignment issues if you change the maximum value for <tt>progressbar</tt></li>\n<li>fixed <tt>progressbar</tt> numbers to be displayed with thousands commas, if large\nenough</li>\n</ul>\n</div>\n<div id=\"v-6-0-0-2019-02-08\">\n<h3>v 6.0.0 [2019-02-08]</h3>\n<ul>\n<li>[BREAKING CHANGE] queries now return one of <tt>Answer.YES</tt>, <tt>Answer.NO</tt>,\n<tt>Answer.QUIT</tt>, <tt>Answer.ALL</tt>, or <tt>Answer.NONE</tt>, as appropriate. <tt>YES</tt>\nand <tt>ALL</tt> are \u201cTruth-y\u201d, while <tt>NO</tt>, <tt>QUIT</tt>, and <tt>NONE</tt> are \u201cFalse-y\u201d</li>\n<li>added <tt>query_yes_no_all_none()</tt></li>\n<li>added <tt>rainbow_print()</tt> to print strings in all the colours!</li>\n</ul>\n</div>\n<div id=\"v-5-1-1-2017-10-03\">\n<h3>v 5.1.1 [2017-10-03]</h3>\n<ul>\n<li>allow <tt>setup.py</tt> to work with versions of Python before 3.6</li>\n<li>remove hardcoded terminal width of 79 characters</li>\n</ul>\n</div>\n<div id=\"v-5-1-0-2017-01-29\">\n<h3>v 5.1.0 [2017-01-29]</h3>\n<ul>\n<li><tt>minchin.text.progressbar()</tt> will only print (by default) every 0.1 seconds</li>\n<li>fixed progressbar bug where \u201coverfull\u201d bars would go on to multiple lines</li>\n<li>added <tt>get_terminal_size()</tt></li>\n<li>upgraded release machinery</li>\n</ul>\n</div>\n<div id=\"v-5-0-2015-06-10\">\n<h3>v 5.0 [2015-06-10]</h3>\n<ul>\n<li>[BREAKING CHANGE] moved package to <tt>minchin.text</tt></li>\n<li>added tests for <tt>minchin.text.centered()</tt></li>\n<li>added end character to progress bar</li>\n<li>added documentation to README.rst</li>\n</ul>\n</div>\n<div id=\"v-4-4-2014-10-26\">\n<h3>v 4.4 [2014-10-26]</h3>\n<ul>\n<li>typographic changes to allow wmtext to work in Python 3</li>\n</ul>\n</div>\n<div id=\"v-4-1-2014-03-10\">\n<h3>v 4.1 [2014-03-10]</h3>\n<ul>\n<li>allow access as a direct object. i.e. use <tt>import wmtext</tt> rather than\n<tt>from wmtext import wmtext</tt></li>\n</ul>\n</div>\n<div id=\"v-4-0-2014-02-06\">\n<h3>v 4.0 [2014-02-06]</h3>\n<ul>\n<li>packaged as a separate module</li>\n<li>added progress bar</li>\n<li>first public release</li>\n</ul>\n</div>\n<div id=\"v-3-2-2014-02-02\">\n<h3>v 3.2 [2014-02-02]</h3>\n<ul>\n<li>add <tt>length_no_ansi()</tt> allowing you to determine the length of a string\nafter stripping out ANSI codes.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7044588, "releases": {"5.0.0": [], "5.0.1": [{"comment_text": "", "digests": {"md5": "956c8ac6d63a0010a3bcdfc7f2170aa8", "sha256": "18f867f6558da4b25790c012e8133377212b70bae82cf19cc30216b23ed98b2e"}, "downloads": -1, "filename": "minchin.text-5.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "956c8ac6d63a0010a3bcdfc7f2170aa8", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 8997, "upload_time": "2015-06-10T21:59:46", "upload_time_iso_8601": "2015-06-10T21:59:46.037889Z", "url": "https://files.pythonhosted.org/packages/52/6c/7e5e701909b7cb519dacb5f90fa22755c98bb6eaf46198206ac9ce443439/minchin.text-5.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f644bfdbc612a1638675fe091d87a23", "sha256": "b2079bbcec5c9dbe259827f251ad471fcaa1d3eb816a6f98f7dbcf11c47a136d"}, "downloads": -1, "filename": "minchin.text-5.0.1-py3.4.egg", "has_sig": false, "md5_digest": "0f644bfdbc612a1638675fe091d87a23", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 10759, "upload_time": "2015-06-10T21:59:57", "upload_time_iso_8601": "2015-06-10T21:59:57.429525Z", "url": "https://files.pythonhosted.org/packages/e7/07/863e22c9887868ffe818ae48eb0b5fbbad9a6b09b82e7fc904feff3a8f8a/minchin.text-5.0.1-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b08503af18f62cbfd8ca53f71dd1791", "sha256": "57011b18ee528d2b0d2b6eca19ba391db045130b32cb2dd28c3edfb6ebd52ded"}, "downloads": -1, "filename": "minchin.text-5.0.1.zip", "has_sig": false, "md5_digest": "5b08503af18f62cbfd8ca53f71dd1791", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13394, "upload_time": "2015-06-10T21:59:27", "upload_time_iso_8601": "2015-06-10T21:59:27.594302Z", "url": "https://files.pythonhosted.org/packages/94/e8/e91d429dcfa9706b6361f0daef036e396adc484d5dc3f1295a98080d73ed/minchin.text-5.0.1.zip", "yanked": false}], "5.1.0": [{"comment_text": "", "digests": {"md5": "9b88d08b2aa0214b5e9dec9947d0cd48", "sha256": "61d85494f0994cb8ebfdaa0995d6c5281e8447d2881b07f936dfc8db71e04c7e"}, "downloads": -1, "filename": "minchin.text-5.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b88d08b2aa0214b5e9dec9947d0cd48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10517, "upload_time": "2017-01-30T03:04:20", "upload_time_iso_8601": "2017-01-30T03:04:20.229536Z", "url": "https://files.pythonhosted.org/packages/08/34/66ee952d97c2ad8d4048517c8254dee15150c5b96502f15793ccd781811b/minchin.text-5.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb1964e78be09b9d78b6db2c00ff8aaf", "sha256": "37bc1b6184453db8e180a0192a25b8e558486cd2267d6dc2cae8470df341347e"}, "downloads": -1, "filename": "minchin.text-5.1.0.tar.gz", "has_sig": false, "md5_digest": "eb1964e78be09b9d78b6db2c00ff8aaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9158, "upload_time": "2017-01-30T03:04:03", "upload_time_iso_8601": "2017-01-30T03:04:03.645895Z", "url": "https://files.pythonhosted.org/packages/41/6d/03d814d0783e2630d3b4ff7b2f591cbc42b4ec26c22183a6b7e969eaa79b/minchin.text-5.1.0.tar.gz", "yanked": false}], "5.1.1": [{"comment_text": "", "digests": {"md5": "565c6e806aa6774211e6b9ee6178fb52", "sha256": "edf63d5e9653d40c77ecd186cbbfdc2c48fac4f57a03f6656dc92e4a325f8dfe"}, "downloads": -1, "filename": "minchin.text-5.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "565c6e806aa6774211e6b9ee6178fb52", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10758, "upload_time": "2017-10-03T23:33:11", "upload_time_iso_8601": "2017-10-03T23:33:11.857234Z", "url": "https://files.pythonhosted.org/packages/e3/c8/7febe32bba2a98adf4b2b585658ff9722eba1de59895f31ba835919ca7e7/minchin.text-5.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77c6b14f47e28bd5fe9d4175961db248", "sha256": "88a900b65804e78842f82b2da4ef60b7cbb2fc4e5807fbec535b1bb4fcc5592a"}, "downloads": -1, "filename": "minchin.text-5.1.1.tar.gz", "has_sig": false, "md5_digest": "77c6b14f47e28bd5fe9d4175961db248", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9363, "upload_time": "2017-10-03T23:32:53", "upload_time_iso_8601": "2017-10-03T23:32:53.714246Z", "url": "https://files.pythonhosted.org/packages/ff/77/e5a718fa7d5d805fe773a4c9e766c832160571bd4e5238c3548624f910d0/minchin.text-5.1.1.tar.gz", "yanked": false}], "6.0.0": [{"comment_text": "", "digests": {"md5": "3930b2b917327115879af14d8ba0d5b8", "sha256": "d55db3584504e9787eca849ccb008f9041156aa41e3139319ec57645ce625d7c"}, "downloads": -1, "filename": "minchin.text-6.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3930b2b917327115879af14d8ba0d5b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9560, "upload_time": "2019-02-09T16:23:08", "upload_time_iso_8601": "2019-02-09T16:23:08.591873Z", "url": "https://files.pythonhosted.org/packages/b6/f8/9f774305a941bf2fe4522a7d9b061508240f20ac3ad9d541f9d69a054a84/minchin.text-6.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06af9651ebd659817fb4922a09ce0960", "sha256": "6ec484ec4982d9dc1d369f8f6596cf33f5f836c514e57ad67dd06e4b75d8d931"}, "downloads": -1, "filename": "minchin.text-6.0.0.tar.gz", "has_sig": false, "md5_digest": "06af9651ebd659817fb4922a09ce0960", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11651, "upload_time": "2019-02-09T16:22:37", "upload_time_iso_8601": "2019-02-09T16:22:37.316680Z", "url": "https://files.pythonhosted.org/packages/30/94/5a519a5c7ada6873c540697fecd1d45f1f368248f7504f6bb817a36bd601/minchin.text-6.0.0.tar.gz", "yanked": false}], "6.0.1": [{"comment_text": "", "digests": {"md5": "d56882c7b718b63125279bd07fc12e09", "sha256": "879950d215ebfb023ec81f344847fad4950bc8481ea403cf1bb1fa55758b43c4"}, "downloads": -1, "filename": "minchin.text-6.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d56882c7b718b63125279bd07fc12e09", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9843, "upload_time": "2020-04-10T20:49:25", "upload_time_iso_8601": "2020-04-10T20:49:25.042206Z", "url": "https://files.pythonhosted.org/packages/97/43/788ae8e413f036642211b76016ec70558bb7dcccaee5f89bdb170fac0a84/minchin.text-6.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ed50550b36ae85134e738231b679224", "sha256": "987336af095faff68ce6c686a392d9d61d08b1409cad4c37abc4e88d20678972"}, "downloads": -1, "filename": "minchin.text-6.0.1.tar.gz", "has_sig": false, "md5_digest": "1ed50550b36ae85134e738231b679224", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12594, "upload_time": "2020-04-10T20:49:13", "upload_time_iso_8601": "2020-04-10T20:49:13.487322Z", "url": "https://files.pythonhosted.org/packages/cd/eb/96fe808945ae5037b2b37bd0870d04b484a1332863e180ac9362adb8d996/minchin.text-6.0.1.tar.gz", "yanked": false}], "6.0.2": [{"comment_text": "", "digests": {"md5": "a0e9c7ad456095cdd779ef235972e1cd", "sha256": "d1ed4b4ddaef7edd0437c06fe619d7715e24c936d978312e5650829d193ec389"}, "downloads": -1, "filename": "minchin.text-6.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0e9c7ad456095cdd779ef235972e1cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9951, "upload_time": "2020-04-17T22:26:52", "upload_time_iso_8601": "2020-04-17T22:26:52.023996Z", "url": "https://files.pythonhosted.org/packages/07/e8/23de7af863583b208a4409ef5934c5fc0e8e74e359a925a0b4b3787b22b4/minchin.text-6.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "211dc7d53704358391806cba3c93beca", "sha256": "06979edc5e64af5b3768fdd3595a2e06d6f325bc5f4b7cb2b1adfc183869095f"}, "downloads": -1, "filename": "minchin.text-6.0.2.tar.gz", "has_sig": false, "md5_digest": "211dc7d53704358391806cba3c93beca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12824, "upload_time": "2020-04-17T22:26:38", "upload_time_iso_8601": "2020-04-17T22:26:38.468409Z", "url": "https://files.pythonhosted.org/packages/85/22/28f07437a6c749169c16e987d9a0bd2412755e884d6a330b509f51576b9f/minchin.text-6.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0e9c7ad456095cdd779ef235972e1cd", "sha256": "d1ed4b4ddaef7edd0437c06fe619d7715e24c936d978312e5650829d193ec389"}, "downloads": -1, "filename": "minchin.text-6.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0e9c7ad456095cdd779ef235972e1cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9951, "upload_time": "2020-04-17T22:26:52", "upload_time_iso_8601": "2020-04-17T22:26:52.023996Z", "url": "https://files.pythonhosted.org/packages/07/e8/23de7af863583b208a4409ef5934c5fc0e8e74e359a925a0b4b3787b22b4/minchin.text-6.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "211dc7d53704358391806cba3c93beca", "sha256": "06979edc5e64af5b3768fdd3595a2e06d6f325bc5f4b7cb2b1adfc183869095f"}, "downloads": -1, "filename": "minchin.text-6.0.2.tar.gz", "has_sig": false, "md5_digest": "211dc7d53704358391806cba3c93beca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12824, "upload_time": "2020-04-17T22:26:38", "upload_time_iso_8601": "2020-04-17T22:26:38.468409Z", "url": "https://files.pythonhosted.org/packages/85/22/28f07437a6c749169c16e987d9a0bd2412755e884d6a330b509f51576b9f/minchin.text-6.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:34 2020"}