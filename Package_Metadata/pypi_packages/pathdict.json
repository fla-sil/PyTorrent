{"info": {"author": "Diogo Magalhaes Martins", "author_email": "magalhaesmartins@icloud.com", "bugtrack_url": null, "classifiers": [], "description": "PathDict\n========\n\n|Build Status| |codecov|\n\nExtended dict with the capability of accessing and manipulating nested\nitens using a path notation.\n\nInstallation\n------------\n\n::\n\n    pip install pathdict\n\nExamples\n--------\n\nYou can change your chained multiple access operator with a dotted path\nnotation:\n\n.. code:: python\n\n    from pathdict import PathDict\n\n\n    path_dict = PathDict({\n        'dogs': {\n            'male': 'Xablau',\n            'female': 'Xena'\n        },\n        'enterprises': ['B2W', 'Sieve'],\n        'author': '@diogommartins'\n    })\n\n    # Same as path_dict['dogs']['female']\n    print(path_dict['dogs.female'])\n    >>> 'Xena'\n\nLists are also accessible by the path notation:\n\n.. code:: python\n\n    from pathdict import PathDict\n\n\n    path_dict = PathDict({\n        'mammalia': {\n            'ferae': {\n                'carnivora': [\n                    'carnidae',\n                    'felidae',\n                    'mustelidae',\n                    'ursidae',\n                    'viverridae'\n                ]       \n            },\n            'something': {\n                'wiki': 'pedia'\n            }\n        }\n    })\n\n    # Same as path_dict['mammalia']['ferae']['carnivora'][3]\n    print(path_dict['mammalia.ferae.carnivora.3'])\n    >>> 'ursidae'\n\nEverything you do with a normal python ``dict`` will work.\n\nCustomization\n-------------\n\nThe default ``separator`` is ``.`` but you can change it using the\n``separator`` kwarg.\n\n.. code:: python\n\n    from pathdict import PathDict\n\n\n    path_dict = PathDict({\n        'mammalia': {\n            'ferae': {\n                'carnivora': [\n                    'carnidae',\n                    'felidae',\n                    'mustelidae',\n                    'ursidae',\n                    'viverridae'\n                ]\n            },\n            'something': {\n                'wiki': 'pedia'\n            }\n        }\n    }, separator='/')\n\n\n    print(path_dict['mammalia/ferae/carnivora/3'])\n    >>> 'ursidae'\n\nIt is possible to let ``PathDict`` generate the steps to a given path:\n\n.. code:: python\n\n    from pathdict import PathDict\n\n\n    path_dict = PathDict(create_if_not_exists=True)\n    path_dict['the.answer.to.all.problems'] = 42\n\n    print(path_dict)\n    >>> {'the': {'answer': {'to': {'all': {'problems': 42}}}}}\n\nWhich also works for nested list fields:\n\n.. code:: python\n\n\n    from pathdict import PathDict\n\n\n    path_dict = PathDict(create_if_not_exists=True)\n    path_dict['some.letters'] = ['a', 'b']\n\n    path_dict['some.letters.2'] = 'c'\n\n    print(path_dict)\n    >>> {'some': {'letters': ['a', 'b', 'c']}}\n\nBy default, list values inside a ``PathDict`` are type casted to a\n``pathdict.collection.StringIndexableList``. You can change that\nbehavior with the ``list_class`` keyword argument. Beware that if the\n``list_class`` class doesn't implement the StringIndexableList Protocol,\npathdict's lists path will fail.\n\n.. code:: python\n\n    from pathdict import PathDict\n\n\n    path_dict = PathDict()\n\n    path_dict[\"list\"] = [1, 2, 3]\n    type(path_dict[\"list\"])\n    >>> pathdict.collection.StringIndexableList\n\n    path_dict[\"list.1\"]\n    >>> 2\n\n    custom_path_dict = PathDict(list_class=list)\n    type(custom_path_dict[\"list\"])\n    >>> list\n\n    custom_path_dict[\"list.1\"]\n    >>> TypeError: list indices must be integers or slices, not str\n\n.. |Build Status| image:: https://travis-ci.org/diogommartins/simple_json_logger.svg?branch=master\n   :target: https://travis-ci.org/diogommartins/pathdict\n.. |codecov| image:: https://codecov.io/gh/diogommartins/simple_json_logger/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/diogommartins/pathdict\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/diogommartins/pathdict", "keywords": "collection dictionary dict path dotted mongodb", "license": "", "maintainer": "", "maintainer_email": "", "name": "pathdict", "package_url": "https://pypi.org/project/pathdict/", "platform": "", "project_url": "https://pypi.org/project/pathdict/", "project_urls": {"Homepage": "https://github.com/diogommartins/pathdict"}, "release_url": "https://pypi.org/project/pathdict/0.0.9/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/diogommartins/pathdict\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99fcb5a0d44d4eec09c95202823e322ce6d21fac/68747470733a2f2f7472617669732d63692e6f72672f64696f676f6d6d617274696e732f73696d706c655f6a736f6e5f6c6f676765722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/diogommartins/pathdict\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5a5a5df8da55d5c413c2a16748ce71a22a7a8df/68747470733a2f2f636f6465636f762e696f2f67682f64696f676f6d6d617274696e732f73696d706c655f6a736f6e5f6c6f676765722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Extended dict with the capability of accessing and manipulating nested\nitens using a path notation.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pathdict\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>You can change your chained multiple access operator with a dotted path\nnotation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathdict</span> <span class=\"kn\">import</span> <span class=\"n\">PathDict</span>\n\n\n<span class=\"n\">path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">({</span>\n    <span class=\"s1\">'dogs'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'male'</span><span class=\"p\">:</span> <span class=\"s1\">'Xablau'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'female'</span><span class=\"p\">:</span> <span class=\"s1\">'Xena'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'enterprises'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'B2W'</span><span class=\"p\">,</span> <span class=\"s1\">'Sieve'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'author'</span><span class=\"p\">:</span> <span class=\"s1\">'@diogommartins'</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># Same as path_dict['dogs']['female']</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s1\">'dogs.female'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'Xena'</span>\n</pre>\n<p>Lists are also accessible by the path notation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathdict</span> <span class=\"kn\">import</span> <span class=\"n\">PathDict</span>\n\n\n<span class=\"n\">path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">({</span>\n    <span class=\"s1\">'mammalia'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ferae'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'carnivora'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'carnidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'felidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'mustelidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'ursidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'viverridae'</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'something'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'wiki'</span><span class=\"p\">:</span> <span class=\"s1\">'pedia'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># Same as path_dict['mammalia']['ferae']['carnivora'][3]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s1\">'mammalia.ferae.carnivora.3'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'ursidae'</span>\n</pre>\n<p>Everything you do with a normal python <tt>dict</tt> will work.</p>\n</div>\n<div id=\"customization\">\n<h2>Customization</h2>\n<p>The default <tt>separator</tt> is <tt>.</tt> but you can change it using the\n<tt>separator</tt> kwarg.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathdict</span> <span class=\"kn\">import</span> <span class=\"n\">PathDict</span>\n\n\n<span class=\"n\">path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">({</span>\n    <span class=\"s1\">'mammalia'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ferae'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'carnivora'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'carnidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'felidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'mustelidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'ursidae'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'viverridae'</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'something'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'wiki'</span><span class=\"p\">:</span> <span class=\"s1\">'pedia'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">},</span> <span class=\"n\">separator</span><span class=\"o\">=</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s1\">'mammalia/ferae/carnivora/3'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'ursidae'</span>\n</pre>\n<p>It is possible to let <tt>PathDict</tt> generate the steps to a given path:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathdict</span> <span class=\"kn\">import</span> <span class=\"n\">PathDict</span>\n\n\n<span class=\"n\">path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">(</span><span class=\"n\">create_if_not_exists</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s1\">'the.answer.to.all.problems'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path_dict</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'the'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'answer'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'all'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'problems'</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">}}}}}</span>\n</pre>\n<p>Which also works for nested list fields:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathdict</span> <span class=\"kn\">import</span> <span class=\"n\">PathDict</span>\n\n\n<span class=\"n\">path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">(</span><span class=\"n\">create_if_not_exists</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s1\">'some.letters'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">]</span>\n\n<span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s1\">'some.letters.2'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'c'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path_dict</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'some'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'letters'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">]}}</span>\n</pre>\n<p>By default, list values inside a <tt>PathDict</tt> are type casted to a\n<tt>pathdict.collection.StringIndexableList</tt>. You can change that\nbehavior with the <tt>list_class</tt> keyword argument. Beware that if the\n<tt>list_class</tt> class doesn\u2019t implement the StringIndexableList Protocol,\npathdict\u2019s lists path will fail.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathdict</span> <span class=\"kn\">import</span> <span class=\"n\">PathDict</span>\n\n\n<span class=\"n\">path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">()</span>\n\n<span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s2\">\"list\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s2\">\"list\"</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pathdict</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"o\">.</span><span class=\"n\">StringIndexableList</span>\n\n<span class=\"n\">path_dict</span><span class=\"p\">[</span><span class=\"s2\">\"list.1\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">custom_path_dict</span> <span class=\"o\">=</span> <span class=\"n\">PathDict</span><span class=\"p\">(</span><span class=\"n\">list_class</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n<span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">custom_path_dict</span><span class=\"p\">[</span><span class=\"s2\">\"list\"</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span>\n\n<span class=\"n\">custom_path_dict</span><span class=\"p\">[</span><span class=\"s2\">\"list.1\"</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"n\">indices</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">integers</span> <span class=\"ow\">or</span> <span class=\"n\">slices</span><span class=\"p\">,</span> <span class=\"ow\">not</span> <span class=\"nb\">str</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3956252, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b9a7192a8b827977bb6003a27a78437c", "sha256": "eab5533f47030be09cc76dd8b1228ca7ec24be8c9e51c4ff371233324a65bc36"}, "downloads": -1, "filename": "pathdict-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b9a7192a8b827977bb6003a27a78437c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1303, "upload_time": "2017-09-17T02:03:40", "upload_time_iso_8601": "2017-09-17T02:03:40.018000Z", "url": "https://files.pythonhosted.org/packages/85/4a/0dd113a5b5c5fffcb1db14e2f2704b9107034892b476ed3fd294c5f70b6b/pathdict-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e13def08769350382ac53a4226e1a804", "sha256": "c7f29e6892515fa2cd5a07f6088484c1bcee99703b33f37655bc94b525fd03e9"}, "downloads": -1, "filename": "pathdict-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e13def08769350382ac53a4226e1a804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2000, "upload_time": "2017-09-17T02:06:01", "upload_time_iso_8601": "2017-09-17T02:06:01.205702Z", "url": "https://files.pythonhosted.org/packages/ba/57/d9750a151a56fad1688ef35644af7dbfcb0ac7660c81497384023632c85a/pathdict-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4147fec10e092e9bbaf26df06fb40590", "sha256": "a9dd09e41d64ff04cde03c30a9259f00ba0d3f28bad1919492e7b1e2dc2570dd"}, "downloads": -1, "filename": "pathdict-0.0.3.tar.gz", "has_sig": false, "md5_digest": "4147fec10e092e9bbaf26df06fb40590", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2012, "upload_time": "2017-09-17T04:06:42", "upload_time_iso_8601": "2017-09-17T04:06:42.516833Z", "url": "https://files.pythonhosted.org/packages/c1/ef/598cb922c36661789080cbf1fbcb2ea91137ba967888fc5c92d140cb13ec/pathdict-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fb14e32ccf7df8e7313812e35e39069e", "sha256": "578f30f308fd8af8cfbf2829c87f7ac0e44594a1c8f53d43eef9f9aee0e1a802"}, "downloads": -1, "filename": "pathdict-0.0.4.tar.gz", "has_sig": false, "md5_digest": "fb14e32ccf7df8e7313812e35e39069e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2210, "upload_time": "2017-09-17T06:49:37", "upload_time_iso_8601": "2017-09-17T06:49:37.881682Z", "url": "https://files.pythonhosted.org/packages/90/45/010e3d3c4bfb25bed181ec540a2e42d886b18d59cf6117371854a4b4dced/pathdict-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3eaaf30fb830fcba71e64762bd33528d", "sha256": "9d97d8dac2eaef4f0082f8415e5125861f34835944e637225deee19cdde29482"}, "downloads": -1, "filename": "pathdict-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3eaaf30fb830fcba71e64762bd33528d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1447, "upload_time": "2017-10-15T19:49:32", "upload_time_iso_8601": "2017-10-15T19:49:32.864331Z", "url": "https://files.pythonhosted.org/packages/68/05/57a931a64368091066659dadcc1367dc9dbd59edfaf8c39cdb1c62fd5d88/pathdict-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "eb6f10d6b3a954a8a9804e2578494274", "sha256": "0248efe2b8fdbe4ffc8eca24b783301105fe9a7bc60e78459efa6eaab4f602fe"}, "downloads": -1, "filename": "pathdict-0.0.6.tar.gz", "has_sig": false, "md5_digest": "eb6f10d6b3a954a8a9804e2578494274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2271, "upload_time": "2017-10-15T20:00:05", "upload_time_iso_8601": "2017-10-15T20:00:05.787019Z", "url": "https://files.pythonhosted.org/packages/8c/bb/50e8c4477419da1f2c41011ba7a568f9fad6154a9a4e2287db1fcd3a99d5/pathdict-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "2a84fba0adfee899f447f7f0aa31d45a", "sha256": "46b2d455da393c41da19732a6e3358e080d330f56e403a55d9cfc5a519a4da8d"}, "downloads": -1, "filename": "pathdict-0.0.7.tar.gz", "has_sig": false, "md5_digest": "2a84fba0adfee899f447f7f0aa31d45a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2645, "upload_time": "2017-10-15T20:03:57", "upload_time_iso_8601": "2017-10-15T20:03:57.191197Z", "url": "https://files.pythonhosted.org/packages/a8/9d/12a0b41116c3cfba2dc3f05276a74cac9c34b2f57701bb40516017c7251b/pathdict-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "549fb469d4f4fa95f46c517729d6d3d6", "sha256": "690b4cce249293f39d0a48b8dececb37e3bae9c4d0edc80c6676b2a4e1590aab"}, "downloads": -1, "filename": "pathdict-0.0.8.tar.gz", "has_sig": false, "md5_digest": "549fb469d4f4fa95f46c517729d6d3d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2961, "upload_time": "2017-10-15T20:54:21", "upload_time_iso_8601": "2017-10-15T20:54:21.138443Z", "url": "https://files.pythonhosted.org/packages/77/93/e5e07a4827d5e6f5659e01dff65e7f29d9083e20d1d55c719988a27c4b26/pathdict-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "76db6238ec009fc9ee032f99027cb32c", "sha256": "7fa8c111b5d0b47396841d4515a1a3c98823fb84fffc8172e08d157348621e8c"}, "downloads": -1, "filename": "pathdict-0.0.9.tar.gz", "has_sig": false, "md5_digest": "76db6238ec009fc9ee032f99027cb32c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3085, "upload_time": "2017-10-16T05:13:31", "upload_time_iso_8601": "2017-10-16T05:13:31.223773Z", "url": "https://files.pythonhosted.org/packages/97/70/bcf4f65183c6f863d7e21332f93adf02c9935db41302c6fc7a960787ac50/pathdict-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76db6238ec009fc9ee032f99027cb32c", "sha256": "7fa8c111b5d0b47396841d4515a1a3c98823fb84fffc8172e08d157348621e8c"}, "downloads": -1, "filename": "pathdict-0.0.9.tar.gz", "has_sig": false, "md5_digest": "76db6238ec009fc9ee032f99027cb32c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3085, "upload_time": "2017-10-16T05:13:31", "upload_time_iso_8601": "2017-10-16T05:13:31.223773Z", "url": "https://files.pythonhosted.org/packages/97/70/bcf4f65183c6f863d7e21332f93adf02c9935db41302c6fc7a960787ac50/pathdict-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:55 2020"}