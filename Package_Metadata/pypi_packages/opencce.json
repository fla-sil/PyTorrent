{"info": {"author": "Stephan Klein", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "This is `opencce`, a small application that replicates part of the functionality\r\nprovided by the [CCE (Citizen Card Encrypted)](https://joinup.ec.europa.eu/software/cce/description) software by [A-SIT](https://www.a-sit.at/).\r\n\r\n## How `opencce`  differs\u2026\r\n* `opencce` is written in Python and uses only widely available libraries including `openssl`.\r\n* `opencce` is Open Source. Please feel free to look at the code.\r\n* `opencce` **cannot** currently use your Citizen Card (_ecard_) to perform cryptographic operations.\r\n* `opencce` **can** be used as a library or through its command-line interface.\r\n\r\nHowever, as far as I can tell, `opencce` is able to decrypt containers produced by the original software. It also produces files that are fully compatible with the original. **If you encounter a case where this is not true, please file an issue!**\r\n\r\n### Dependencies\r\n* [python](http://python.org) (>= 2.7)\r\n* [python-m2crypto](https://github.com/martinpaljak/M2Crypto)\r\n* [lxml](http://lxml.de)\r\n* [python-magic](https://github.com/ahupp/python-magic) (optional)\r\n\r\n### About python3\r\nThe main blocker for getting python3 compatibility is `m2crypto`.\r\n\r\n### Installation\r\nGet the latest version with `pip install opencce`.\r\n\r\n### Future Plans\r\n* Smart Card support.\r\n* Compressed archive variant (SMIME is horrible for space efficiency).\r\n* Install scripts, package for distributions.\r\n\r\n### Usage\r\n#### Encryption using `opencce`\r\n    $ opencce encrypt -c certificate.pem another_certificate.cer -- file1.txt file.pdf\r\n    Adding certificate: certificate.pem ... [OK]\r\n    Adding certificate: another_certificate.cer ... [OK]\r\n    Adding file: file1.txt ... [OK]\r\n    Adding file: file.pdf ... [OK]\r\n    Encrypting to Container.cce ... [OK]\r\n\r\n#### Encryption using the Library\r\n    >>> from opencce.containers.CCEContainer import CCEContainer\r\n    >>> c = CCEContainer()\r\n    >>> c.add(\"file1.txt\")\r\n    >>> c.add(\"file.pdf\")\r\n    >>> c.add_recipient_certificate(\"certificate.pem\")\r\n    >>> c.add_recipient_certificate(\"another_certificate.cer\")\r\n    >>> with open(\"Container.cce\", \"wb\") as fh: fh.write(c.encrypt())\r\n\r\n#### Decryption using `opencce`\r\n    $ opencce decrypt -k key.pem -d Container Container.cce\r\n    Decrypting container: Container.cce ... [OK]\r\n    Making sure that the extraction directory is clean: . ... [OK]\r\n    Extracting file: Container/file1.txt ... [OK]\r\n    Extracting file: Container/file.pdf ... [OK]\r\n\r\n#### Decryption using the Library\r\n    >>> from opencce.containers.CCEContainer import CCEContainer\r\n    >>> with open(\"Container.cce\", \"rb\") as fh: c = CCEContainer.load(fh, \"key.pem\")\r\n    >>> for path, filename, handle in c.export(): # do something with those files", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/privatwolke/opencce", "keywords": "encryption citizencard CCE", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "opencce", "package_url": "https://pypi.org/project/opencce/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/opencce/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/privatwolke/opencce"}, "release_url": "https://pypi.org/project/opencce/0.2/", "requires_dist": null, "requires_python": null, "summary": "This is a free software implementation of the CCE (Citizen Card Encrypted) functionality.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            This is `opencce`, a small application that replicates part of the functionality\n<br>provided by the [CCE (Citizen Card Encrypted)](https://joinup.ec.europa.eu/software/cce/description) software by [A-SIT](https://www.a-sit.at/).\n<br>\n<br>## How `opencce`  differs\u2026\n<br>* `opencce` is written in Python and uses only widely available libraries including `openssl`.\n<br>* `opencce` is Open Source. Please feel free to look at the code.\n<br>* `opencce` **cannot** currently use your Citizen Card (_ecard_) to perform cryptographic operations.\n<br>* `opencce` **can** be used as a library or through its command-line interface.\n<br>\n<br>However, as far as I can tell, `opencce` is able to decrypt containers produced by the original software. It also produces files that are fully compatible with the original. **If you encounter a case where this is not true, please file an issue!**\n<br>\n<br>### Dependencies\n<br>* [python](http://python.org) (&gt;= 2.7)\n<br>* [python-m2crypto](https://github.com/martinpaljak/M2Crypto)\n<br>* [lxml](http://lxml.de)\n<br>* [python-magic](https://github.com/ahupp/python-magic) (optional)\n<br>\n<br>### About python3\n<br>The main blocker for getting python3 compatibility is `m2crypto`.\n<br>\n<br>### Installation\n<br>Get the latest version with `pip install opencce`.\n<br>\n<br>### Future Plans\n<br>* Smart Card support.\n<br>* Compressed archive variant (SMIME is horrible for space efficiency).\n<br>* Install scripts, package for distributions.\n<br>\n<br>### Usage\n<br>#### Encryption using `opencce`\n<br>    $ opencce encrypt -c certificate.pem another_certificate.cer -- file1.txt file.pdf\n<br>    Adding certificate: certificate.pem ... [OK]\n<br>    Adding certificate: another_certificate.cer ... [OK]\n<br>    Adding file: file1.txt ... [OK]\n<br>    Adding file: file.pdf ... [OK]\n<br>    Encrypting to Container.cce ... [OK]\n<br>\n<br>#### Encryption using the Library\n<br>    &gt;&gt;&gt; from opencce.containers.CCEContainer import CCEContainer\n<br>    &gt;&gt;&gt; c = CCEContainer()\n<br>    &gt;&gt;&gt; c.add(\"file1.txt\")\n<br>    &gt;&gt;&gt; c.add(\"file.pdf\")\n<br>    &gt;&gt;&gt; c.add_recipient_certificate(\"certificate.pem\")\n<br>    &gt;&gt;&gt; c.add_recipient_certificate(\"another_certificate.cer\")\n<br>    &gt;&gt;&gt; with open(\"Container.cce\", \"wb\") as fh: fh.write(c.encrypt())\n<br>\n<br>#### Decryption using `opencce`\n<br>    $ opencce decrypt -k key.pem -d Container Container.cce\n<br>    Decrypting container: Container.cce ... [OK]\n<br>    Making sure that the extraction directory is clean: . ... [OK]\n<br>    Extracting file: Container/file1.txt ... [OK]\n<br>    Extracting file: Container/file.pdf ... [OK]\n<br>\n<br>#### Decryption using the Library\n<br>    &gt;&gt;&gt; from opencce.containers.CCEContainer import CCEContainer\n<br>    &gt;&gt;&gt; with open(\"Container.cce\", \"rb\") as fh: c = CCEContainer.load(fh, \"key.pem\")\n<br>    &gt;&gt;&gt; for path, filename, handle in c.export(): # do something with those files\n          </div>"}, "last_serial": 1765266, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "c82c37df1c098c0a5b797195d2ba0631", "sha256": "6c34fe29c5a41167889fd14b87ca7713f9d2462985fe795ac5c76556af6c70f7"}, "downloads": -1, "filename": "opencce-0.2-py2-none-any.whl", "has_sig": true, "md5_digest": "c82c37df1c098c0a5b797195d2ba0631", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16874, "upload_time": "2015-10-13T00:07:31", "upload_time_iso_8601": "2015-10-13T00:07:31.280539Z", "url": "https://files.pythonhosted.org/packages/ba/00/14abfeb729e8510521ef40a74fcd313042e326e56283cd67b63c6debf70d/opencce-0.2-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c82c37df1c098c0a5b797195d2ba0631", "sha256": "6c34fe29c5a41167889fd14b87ca7713f9d2462985fe795ac5c76556af6c70f7"}, "downloads": -1, "filename": "opencce-0.2-py2-none-any.whl", "has_sig": true, "md5_digest": "c82c37df1c098c0a5b797195d2ba0631", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16874, "upload_time": "2015-10-13T00:07:31", "upload_time_iso_8601": "2015-10-13T00:07:31.280539Z", "url": "https://files.pythonhosted.org/packages/ba/00/14abfeb729e8510521ef40a74fcd313042e326e56283cd67b63c6debf70d/opencce-0.2-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:24 2020"}