{"info": {"author": "Iena Petronella Derks", "author_email": "<inekederks1@gmail.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Project Title: Contagious Naive Bayes(CNB)\n\nWith the increase in online social media interactions, the true identity of user profiles becomes increasingly doubtful. \nFake profiles are used to engineer perceptions or opinions as well as to create online relationships under false pretence. \nNatural language text \u00e2\u20ac\u201c how the user structures a sentence and uses words \u00e2\u20ac\u201c provides useful information to discover expected patterns, \ngiven the assumed social profile of the user. We expect, for example, different word use and sentence structures from teenagers to those of adults. \n\nSociolinguistics is the study of language in the context of social factors such as age, culture and common interest. Natural language processing (NLP),\nprovides quantitative methods to discover sociolinguistic patterns in text data. Current NLP methods make use of a multinomial naive Bayes classifier to \nclassify unseen documents into predefined sociolinguistic classes. One property of language that is not captured in binomial or multinomialmodels, \nis that of burstiness. Burstiness defines the phenomenon that if a person uses a word, they are more likely to use that word again. \nThus, the independence assumption between respective counts of the same word is relaxed. The Poisson distribution family captures this phenomenon and \nin the field of biostatistics, it is often referred to as contagious distributions (because the counts between contagious diseases are not independent). \nIn this pacakge, the count independence assumption of the naive Bayes classifier is relaxed by replacing the baseline multinomial likelihood function with \na Poisson likelihood function. \n\nThis packages thus allows the user to make use of contagious naive Bayes as an alternative to the readily available techniques to perform binary text classification.  \n\n\nGetting Started:\nThe package is available online for use within Python 3 enviroments.\n\nThe installation can be performed through the use of a standard 'pip' install command, as provided below: \n\npip install Contagious-Naive-Bayes==1.0.0\n\nPrerequisites\n\nThe package has several dependencies, namely: \n\n-pandas\n\n-numpy\n\n-re\n\n-nltk\n\n-warnings\n\n-sklearn\n\n-BeautifulSoup\n\n\nFunction description:\n\nThe function is named \"CNB\".\n\nThe function can take 5 possible arguments, two of which are required, and the remaining 3 being optional. \n\nThe required arguments are: \n\n-Train_Matrix(A matrix containing the observations on which the classification model will be trained.)\n\n-Test_Matrix(A matrix containing observation which will be used to test the performance of the model.)\n\nThe optional requirements are: \n\n-norm(A True/False flag which specifies whether document length normalization must be applied. The method of document length normalization utilized for this package this that of\nPseduo-Length normalization. The default is set to False.)\n\n-pseudo_len(Should document length normalization be required, this specifies the length to which the documents should be normalized to. The default is 100, while any user input is \nrequired to be postive.)\n\n-c1(This is the first smoothing parameter required to perform document length normalization. The default is set to 0.001.)\n\n-c2(This is the second smoothing parameter required to perform document length normalization. The default is set to 1.)\n\n\nOutput:\n\nThe function provides the output in two components, firstly it provides a table containing the index of the observations, the posteriors calculated per possible class for each observations\nas well as the predicted class and the actual class of each observation. \n\nSecondly, the function provides several performance metrics, the metrics utilized are accuracy, precision, recall and the F1 score. \n\n\nExample Usage:\n\nInstallation;\n\nRun the following command within a Python command window:\n\n> pip install Contagious-Naive-Bayes==1.0.0\n\n\nImplementation;\n\nImport the package into the relevant python script, with the following: \n\n> from Contagious_NB import Classification as func\n\n> Call the function:\n\nPossible examples of calling the function are as follows:\n\n> x_cnb = func.CNB(train_matrix,test_matrix)\n\n> x_cnb = func.CNB(train_matrix,test_matrix, norm = True,  pseduo_len = 100, c1 = 0.001, c2 = 1)\n\n\nResults;\n\nThe output obtained appears as follows: \n\nThe Contagious Naive Bayes has executed.\n\nThe total runtime was:  174.4942226409912 seconds\n\nThe Posterior Probabilities obtained are as follows: \n\n               0          1  Predicted  Actual\n\nIndex                                         \n\n19518 -29.730902 -21.774997          1       0\n\n3482   -4.785887  -4.445511          1       1\n\n17305 -16.137118 -17.162267          0       1\n\n9134  -28.772151 -27.929778          1       0\n\n19435 -18.030701 -17.489797          1       1\n\n5379   -0.477393  -0.175956          1       0\n\n11752 -13.191803 -10.240028          1       1\n\n19813 -14.608706 -11.396712          1       0\n\n18037 -25.245713 -26.544791          0       1\n\n16755 -20.097580 -21.674529          0       0\n\n8937   -7.544991  -7.938454          0       0\n\n20023 -10.300211 -11.100099          0       0\n\n...          ...        ...        ...     ...\n\nThe performance metrics obtained are as follows:   \n\nAccuracy   0.622500\n\nPrecision  0.739777\n\nRecall     0.710714\n\nF1         0.724954\n\n\nBuilt With:\n\nGoogle Collab - Web framework\n\nPython - Programming language of choice\n\nPypi - Distribution\n\n\nAuthors:\nIena Petronella Derks\n\nhttps://github.com/iEna101/Contagious-Naive-Bayes\n\n\nCo-Authors:\n\nAlta de Waal\n\nLuandrie Potgieter\n\nRicardo Marques\n\n\nLicense:\nThis project is licensed under the MIT License - see the LICENSE.md file for details.\n\n\nAcknowledgments:\n\nUniversity of Pretoria\n\nCenter for Artifcial Intelligence Research (CAIR)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iEna101/Contagious-NB", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Contagious-Naive-Bayes", "package_url": "https://pypi.org/project/Contagious-Naive-Bayes/", "platform": "", "project_url": "https://pypi.org/project/Contagious-Naive-Bayes/", "project_urls": {"Homepage": "https://github.com/iEna101/Contagious-NB"}, "release_url": "https://pypi.org/project/Contagious-Naive-Bayes/1.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "The package enables the use of Contagious Naive Bayes to perform classification", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Project Title: Contagious Naive Bayes(CNB)</p>\n<p>With the increase in online social media interactions, the true identity of user profiles becomes increasingly doubtful.\nFake profiles are used to engineer perceptions or opinions as well as to create online relationships under false pretence.\nNatural language text \u00e2\u20ac\u201c how the user structures a sentence and uses words \u00e2\u20ac\u201c provides useful information to discover expected patterns,\ngiven the assumed social profile of the user. We expect, for example, different word use and sentence structures from teenagers to those of adults.</p>\n<p>Sociolinguistics is the study of language in the context of social factors such as age, culture and common interest. Natural language processing (NLP),\nprovides quantitative methods to discover sociolinguistic patterns in text data. Current NLP methods make use of a multinomial naive Bayes classifier to\nclassify unseen documents into predefined sociolinguistic classes. One property of language that is not captured in binomial or multinomialmodels,\nis that of burstiness. Burstiness defines the phenomenon that if a person uses a word, they are more likely to use that word again.\nThus, the independence assumption between respective counts of the same word is relaxed. The Poisson distribution family captures this phenomenon and\nin the field of biostatistics, it is often referred to as contagious distributions (because the counts between contagious diseases are not independent).\nIn this pacakge, the count independence assumption of the naive Bayes classifier is relaxed by replacing the baseline multinomial likelihood function with\na Poisson likelihood function.</p>\n<p>This packages thus allows the user to make use of contagious naive Bayes as an alternative to the readily available techniques to perform binary text classification.</p>\n<p>Getting Started:\nThe package is available online for use within Python 3 enviroments.</p>\n<p>The installation can be performed through the use of a standard 'pip' install command, as provided below:</p>\n<p>pip install Contagious-Naive-Bayes==1.0.0</p>\n<p>Prerequisites</p>\n<p>The package has several dependencies, namely:</p>\n<p>-pandas</p>\n<p>-numpy</p>\n<p>-re</p>\n<p>-nltk</p>\n<p>-warnings</p>\n<p>-sklearn</p>\n<p>-BeautifulSoup</p>\n<p>Function description:</p>\n<p>The function is named \"CNB\".</p>\n<p>The function can take 5 possible arguments, two of which are required, and the remaining 3 being optional.</p>\n<p>The required arguments are:</p>\n<p>-Train_Matrix(A matrix containing the observations on which the classification model will be trained.)</p>\n<p>-Test_Matrix(A matrix containing observation which will be used to test the performance of the model.)</p>\n<p>The optional requirements are:</p>\n<p>-norm(A True/False flag which specifies whether document length normalization must be applied. The method of document length normalization utilized for this package this that of\nPseduo-Length normalization. The default is set to False.)</p>\n<p>-pseudo_len(Should document length normalization be required, this specifies the length to which the documents should be normalized to. The default is 100, while any user input is\nrequired to be postive.)</p>\n<p>-c1(This is the first smoothing parameter required to perform document length normalization. The default is set to 0.001.)</p>\n<p>-c2(This is the second smoothing parameter required to perform document length normalization. The default is set to 1.)</p>\n<p>Output:</p>\n<p>The function provides the output in two components, firstly it provides a table containing the index of the observations, the posteriors calculated per possible class for each observations\nas well as the predicted class and the actual class of each observation.</p>\n<p>Secondly, the function provides several performance metrics, the metrics utilized are accuracy, precision, recall and the F1 score.</p>\n<p>Example Usage:</p>\n<p>Installation;</p>\n<p>Run the following command within a Python command window:</p>\n<blockquote>\n<p>pip install Contagious-Naive-Bayes==1.0.0</p>\n</blockquote>\n<p>Implementation;</p>\n<p>Import the package into the relevant python script, with the following:</p>\n<blockquote>\n<p>from Contagious_NB import Classification as func</p>\n</blockquote>\n<blockquote>\n<p>Call the function:</p>\n</blockquote>\n<p>Possible examples of calling the function are as follows:</p>\n<blockquote>\n<p>x_cnb = func.CNB(train_matrix,test_matrix)</p>\n</blockquote>\n<blockquote>\n<p>x_cnb = func.CNB(train_matrix,test_matrix, norm = True,  pseduo_len = 100, c1 = 0.001, c2 = 1)</p>\n</blockquote>\n<p>Results;</p>\n<p>The output obtained appears as follows:</p>\n<p>The Contagious Naive Bayes has executed.</p>\n<p>The total runtime was:  174.4942226409912 seconds</p>\n<p>The Posterior Probabilities obtained are as follows:</p>\n<pre><code>           0          1  Predicted  Actual\n</code></pre>\n<p>Index</p>\n<p>19518 -29.730902 -21.774997          1       0</p>\n<p>3482   -4.785887  -4.445511          1       1</p>\n<p>17305 -16.137118 -17.162267          0       1</p>\n<p>9134  -28.772151 -27.929778          1       0</p>\n<p>19435 -18.030701 -17.489797          1       1</p>\n<p>5379   -0.477393  -0.175956          1       0</p>\n<p>11752 -13.191803 -10.240028          1       1</p>\n<p>19813 -14.608706 -11.396712          1       0</p>\n<p>18037 -25.245713 -26.544791          0       1</p>\n<p>16755 -20.097580 -21.674529          0       0</p>\n<p>8937   -7.544991  -7.938454          0       0</p>\n<p>20023 -10.300211 -11.100099          0       0</p>\n<p>...          ...        ...        ...     ...</p>\n<p>The performance metrics obtained are as follows:</p>\n<p>Accuracy   0.622500</p>\n<p>Precision  0.739777</p>\n<p>Recall     0.710714</p>\n<p>F1         0.724954</p>\n<p>Built With:</p>\n<p>Google Collab - Web framework</p>\n<p>Python - Programming language of choice</p>\n<p>Pypi - Distribution</p>\n<p>Authors:\nIena Petronella Derks</p>\n<p><a href=\"https://github.com/iEna101/Contagious-Naive-Bayes\" rel=\"nofollow\">https://github.com/iEna101/Contagious-Naive-Bayes</a></p>\n<p>Co-Authors:</p>\n<p>Alta de Waal</p>\n<p>Luandrie Potgieter</p>\n<p>Ricardo Marques</p>\n<p>License:\nThis project is licensed under the MIT License - see the LICENSE.md file for details.</p>\n<p>Acknowledgments:</p>\n<p>University of Pretoria</p>\n<p>Center for Artifcial Intelligence Research (CAIR)</p>\n\n          </div>"}, "last_serial": 6547690, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4dd6c91a4e4ebe6cda2d4ad66d6ba51f", "sha256": "a950f887c085a418afae95a70213f9a042d84055bb1558a0523f8e99e985f56f"}, "downloads": -1, "filename": "Contagious_Naive_Bayes-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4dd6c91a4e4ebe6cda2d4ad66d6ba51f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7181, "upload_time": "2020-01-31T06:57:42", "upload_time_iso_8601": "2020-01-31T06:57:42.943761Z", "url": "https://files.pythonhosted.org/packages/55/f1/569cdd75b2cc1feb7ec0807b303dfd38c9b7618a966c8e9199bb10c2f4c6/Contagious_Naive_Bayes-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac366d296cc72cffcf424aee50cf5eac", "sha256": "1acd138bf12f68bbfbcbc6a83899ca53b11949f51449c8767c2d12c331ac160a"}, "downloads": -1, "filename": "Contagious Naive Bayes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ac366d296cc72cffcf424aee50cf5eac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5715, "upload_time": "2020-01-31T06:57:45", "upload_time_iso_8601": "2020-01-31T06:57:45.438778Z", "url": "https://files.pythonhosted.org/packages/74/b8/df6c85a78793c39efc4fa4164412f892382a928cdae30284fb26e0761eb1/Contagious%20Naive%20Bayes-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b55f7b7cb5f2bceaf6f5e54cef65d9c9", "sha256": "e8a54a4694d02b3d51d0d9ce6f3d92e5631196c3c51223a760b620a98c2bf77f"}, "downloads": -1, "filename": "Contagious_Naive_Bayes-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b55f7b7cb5f2bceaf6f5e54cef65d9c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8702, "upload_time": "2020-01-31T07:26:44", "upload_time_iso_8601": "2020-01-31T07:26:44.394778Z", "url": "https://files.pythonhosted.org/packages/c4/56/853058e0b721d416ad9fa86bc18713c496fe371a9387501869393dbadd6d/Contagious_Naive_Bayes-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b9c9f8daa49d27021a11b523a73fd82", "sha256": "b869f90c332d517ebba494f89142e6e8a4365a3c58190b9296995dfb37e506b1"}, "downloads": -1, "filename": "Contagious Naive Bayes-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1b9c9f8daa49d27021a11b523a73fd82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7476, "upload_time": "2020-01-31T07:26:45", "upload_time_iso_8601": "2020-01-31T07:26:45.714400Z", "url": "https://files.pythonhosted.org/packages/44/96/2ec164703574fa1dd67881b0d04a66ff22ac8f68f571d6f5779826661a33/Contagious%20Naive%20Bayes-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ad3776092d0c3fc3f76198ec8f259f85", "sha256": "8ad0c9bdaab96573c80c3f6e813d6902cd2f1b070198e852773e3785668613ba"}, "downloads": -1, "filename": "Contagious_Naive_Bayes-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad3776092d0c3fc3f76198ec8f259f85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8370, "upload_time": "2020-01-31T07:30:49", "upload_time_iso_8601": "2020-01-31T07:30:49.575461Z", "url": "https://files.pythonhosted.org/packages/09/78/9f7c7d784a74f70f1d9bb528dcb4f69a008fcc2064d2ee072db0f43db06d/Contagious_Naive_Bayes-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce06f4b68f923e1b8160dc6216dd668a", "sha256": "7cfa59cc7b09127db01e85ce0ff9d248613cb0df6481b730ee61d6288d1bad4d"}, "downloads": -1, "filename": "Contagious Naive Bayes-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ce06f4b68f923e1b8160dc6216dd668a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7131, "upload_time": "2020-01-31T07:30:51", "upload_time_iso_8601": "2020-01-31T07:30:51.302492Z", "url": "https://files.pythonhosted.org/packages/2c/0a/38acb6ebfe960c6895705cf040633ec42c3b1212087101ecc496be8ddd82/Contagious%20Naive%20Bayes-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c2c000e8efdffc546051aa75167668c8", "sha256": "aa17fdf7fd624860c61e6a83ba6c0484aeb727e87ea22df1e74c02ca3dab028e"}, "downloads": -1, "filename": "Contagious_Naive_Bayes-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2c000e8efdffc546051aa75167668c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8369, "upload_time": "2020-01-31T08:19:23", "upload_time_iso_8601": "2020-01-31T08:19:23.986784Z", "url": "https://files.pythonhosted.org/packages/e5/16/58af967d3c8095a3026275c43f077ff7b2ae6d96fcf66f0261604d7cc522/Contagious_Naive_Bayes-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1232f66d3e5cf8b136531cddd1f8885", "sha256": "c3b53a2e788c8842e7c3ebc3b3bb03446b765ac64eb91334f4c76f93194e3361"}, "downloads": -1, "filename": "Contagious Naive Bayes-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b1232f66d3e5cf8b136531cddd1f8885", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7139, "upload_time": "2020-01-31T08:19:25", "upload_time_iso_8601": "2020-01-31T08:19:25.450784Z", "url": "https://files.pythonhosted.org/packages/45/5c/72c31724e25a5d8c0eb7f20780176b2aed57183d391ecbbe8f47ad950cb9/Contagious%20Naive%20Bayes-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2c000e8efdffc546051aa75167668c8", "sha256": "aa17fdf7fd624860c61e6a83ba6c0484aeb727e87ea22df1e74c02ca3dab028e"}, "downloads": -1, "filename": "Contagious_Naive_Bayes-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2c000e8efdffc546051aa75167668c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8369, "upload_time": "2020-01-31T08:19:23", "upload_time_iso_8601": "2020-01-31T08:19:23.986784Z", "url": "https://files.pythonhosted.org/packages/e5/16/58af967d3c8095a3026275c43f077ff7b2ae6d96fcf66f0261604d7cc522/Contagious_Naive_Bayes-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1232f66d3e5cf8b136531cddd1f8885", "sha256": "c3b53a2e788c8842e7c3ebc3b3bb03446b765ac64eb91334f4c76f93194e3361"}, "downloads": -1, "filename": "Contagious Naive Bayes-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b1232f66d3e5cf8b136531cddd1f8885", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7139, "upload_time": "2020-01-31T08:19:25", "upload_time_iso_8601": "2020-01-31T08:19:25.450784Z", "url": "https://files.pythonhosted.org/packages/45/5c/72c31724e25a5d8c0eb7f20780176b2aed57183d391ecbbe8f47ad950cb9/Contagious%20Naive%20Bayes-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:36 2020"}