{"info": {"author": "Igor `idle sign` Starikov", "author_email": "idlesign@yandex.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "srptools\n========\nhttps://github.com/idlesign/srptools\n\n.. image:: https://idlesign.github.io/lbc/py2-lbc.svg\n   :target: https://idlesign.github.io/lbc/\n   :alt: LBC Python 2\n\n----\n\n|release| |stats|  |lic| |ci| |coverage| |health|\n\n.. |release| image:: https://img.shields.io/pypi/v/srptools.svg\n    :target: https://pypi.python.org/pypi/srptools\n\n.. |stats| image:: https://img.shields.io/pypi/dm/srptools.svg\n    :target: https://pypi.python.org/pypi/srptools\n\n.. |lic| image:: https://img.shields.io/pypi/l/srptools.svg\n    :target: https://pypi.python.org/pypi/srptools\n\n.. |ci| image:: https://img.shields.io/travis/idlesign/srptools/master.svg\n    :target: https://travis-ci.org/idlesign/srptools\n\n.. |coverage| image:: https://img.shields.io/coveralls/idlesign/srptools/master.svg\n    :target: https://coveralls.io/r/idlesign/srptools\n\n.. |health| image:: https://landscape.io/github/idlesign/srptools/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/idlesign/srptools/master\n\n\nDescription\n-----------\n\n*Tools to implement Secure Remote Password (SRP) authentication*\n\nSRP is a secure password-based authentication and key-exchange protocol -\na password-authenticated key agreement protocol (PAKE).\n\nThis package contains protocol implementation for Python 2 and 3.\n\nYou may import it into you applications and use its API or you may use\n``srptools`` command-line utility (CLI):\n\n\nCLI usage\n---------\n\nCommand-line utility requires ``click`` package to be installed.\n\nBasic scenario:\n\n.. code-block::\n\n    > srptools get_user_data_triplet\n    > srptools server get_private_and_public\n    > srptools client get_private_and_public\n    > srptools client get_session_data\n    > srptools server get_session_data\n\nHelp is available:\n\n.. code-block::\n\n    > srptools --help\n\n\n\nAPI usage\n---------\n\nPreliminary step. Agree on communication details:\n\n.. code-block:: python\n\n    from srptools import SRPContext\n\n    context = SRPContext('alice', 'password123')\n    username, password_verifier, salt = context.get_user_data_triplet()\n    prime = context.prime\n    gen = context.generator\n\n\nSimplified workflow:\n\n.. code-block:: python\n\n    from srptools import SRPContext, SRPServerSession, SRPClientSession\n\n    # Receive username from client and generate server public.\n    server_session = SRPServerSession(SRPContext(username, prime=prime, generator=gen), password_verifier)\n    server_public = server_session.public\n\n    # Receive server public and salt and process them.\n    client_session = SRPClientSession(SRPContext('alice', 'password123', prime=prime, generator=gen))\n    client_session.process(server_public, salt)\n    # Generate client public and session key.\n    client_public = client_session.public\n\n    # Process client public and compare session keys.\n    server_session.process(client_public, salt)\n\n    assert server_session.key == client_session.key\n\n\nExtended workflow\n\n.. code-block:: python\n\n    from srptools import SRPContext, SRPServerSession, SRPClientSession\n\n    # Receive username from client and generate server public.\n    server_session = SRPServerSession(SRPContext(username, prime=prime, generator=gen), password_verifier)\n    server_public = server_session.public\n\n    # Receive server public and salt and process them.\n    client_session = SRPClientSession(SRPContext('alice', 'password123', prime=prime, generator=gen))\n    client_session.process(server_public, salt)\n    # Generate client public and session key proof.\n    client_public = client_session.public\n    client_session_key_proof = client_session.key_proof\n\n    # Process client public and verify session key proof.\n    server_session.process(client_public, salt)\n    assert server_session.verify_proof(client_session_key_proof)\n    # Generate session key proof hash.\n    server_session_key_proof_hash = client_session.key_proof_hash\n\n    # Verify session key proof hash received from server.\n    assert client_session.verify_proof(server_session_key_proof_hash)\n\n\n\nUsage hints\n-----------\n\n* ``srptools.constants`` contains basic constants which can be used with ``SRPContext`` for server and client to agree\n  upon communication details.\n* ``.process()`` methods of session classes may raise ``SRPException`` in certain circumstances. Auth process on\n  such occasions must be stopped.\n* ``.private`` attribute of session classes may be used to restore sessions:\n    .. code-block:: python\n\n        server_private = server_session.private\n\n        # Restore session on new request.\n        server_session = SRPServerSession(context, password_verifier, private=server_private)\n\n* ``SRPContext`` is rather flexible, so you can implement some custom server/client session logic with its help.\n* Basic values are represented as hex strings but base64 encoded values are also supported:\n\n    .. code-block:: python\n\n        server_public = server_session.public_b64\n\n        # Receive server public and salt and process them.\n        client_session = SRPClientSession(SRPContext('alice', 'password123', prime=prime, generator=gen))\n        client_session.process(server_public, salt, base64=True)\n\n        # Use srptools.hex_from_b64() to represent base64 value as hex.\n        server_public_hex = hex_from_b64(server_public)\n\n\nLinks\n-----\n* RFC 2945 - The SRP Authentication and Key Exchange System\n    https://tools.ietf.org/html/rfc2945\n\n* RFC 5054 - Using the Secure Remote Password (SRP) Protocol for TLS Authentication\n    https://tools.ietf.org/html/rfc5054\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idlesign/srptools", "keywords": "", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "srptools", "package_url": "https://pypi.org/project/srptools/", "platform": "", "project_url": "https://pypi.org/project/srptools/", "project_urls": {"Homepage": "https://github.com/idlesign/srptools"}, "release_url": "https://pypi.org/project/srptools/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Tools to implement Secure Remote Password (SRP) authentication", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/idlesign/srptools\" rel=\"nofollow\">https://github.com/idlesign/srptools</a></p>\n<a href=\"https://idlesign.github.io/lbc/\" rel=\"nofollow\"><img alt=\"LBC Python 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6c3082e078178b427ff4a8b8ca77944cc540ada/68747470733a2f2f69646c657369676e2e6769746875622e696f2f6c62632f7079322d6c62632e737667\"></a>\n<hr class=\"docutils\">\n<p><a href=\"https://pypi.python.org/pypi/srptools\" rel=\"nofollow\"><img alt=\"release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65af0cf0f0e663146ce26eec95f2420e23693227/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737270746f6f6c732e737667\"></a> <a href=\"https://pypi.python.org/pypi/srptools\" rel=\"nofollow\"><img alt=\"stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/523217eb09f554a9ebc7b1e19f8495402bd51ed9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f737270746f6f6c732e737667\"></a>  <a href=\"https://pypi.python.org/pypi/srptools\" rel=\"nofollow\"><img alt=\"lic\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/504eb026e38abad8f3453689aeba2690c0383c71/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f737270746f6f6c732e737667\"></a> <a href=\"https://travis-ci.org/idlesign/srptools\" rel=\"nofollow\"><img alt=\"ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b99177bc9ba5a587206a5d8bca187425fe32389d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f69646c657369676e2f737270746f6f6c732f6d61737465722e737667\"></a> <a href=\"https://coveralls.io/r/idlesign/srptools\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a331a3396dec83e750900380281ba3cd4a448ec/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f69646c657369676e2f737270746f6f6c732f6d61737465722e737667\"></a> <a href=\"https://landscape.io/github/idlesign/srptools/master\" rel=\"nofollow\"><img alt=\"health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36fa99cda204dab87275e711e04b14e1d3fe68c6/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f69646c657369676e2f737270746f6f6c732f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p><em>Tools to implement Secure Remote Password (SRP) authentication</em></p>\n<p>SRP is a secure password-based authentication and key-exchange protocol -\na password-authenticated key agreement protocol (PAKE).</p>\n<p>This package contains protocol implementation for Python 2 and 3.</p>\n<p>You may import it into you applications and use its API or you may use\n<tt>srptools</tt> command-line utility (CLI):</p>\n</div>\n<div id=\"cli-usage\">\n<h2>CLI usage</h2>\n<p>Command-line utility requires <tt>click</tt> package to be installed.</p>\n<p>Basic scenario:</p>\n<pre>&gt; srptools get_user_data_triplet\n&gt; srptools server get_private_and_public\n&gt; srptools client get_private_and_public\n&gt; srptools client get_session_data\n&gt; srptools server get_session_data\n</pre>\n<p>Help is available:</p>\n<pre>&gt; srptools --help\n</pre>\n</div>\n<div id=\"api-usage\">\n<h2>API usage</h2>\n<p>Preliminary step. Agree on communication details:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srptools</span> <span class=\"kn\">import</span> <span class=\"n\">SRPContext</span>\n\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">SRPContext</span><span class=\"p\">(</span><span class=\"s1\">'alice'</span><span class=\"p\">,</span> <span class=\"s1\">'password123'</span><span class=\"p\">)</span>\n<span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password_verifier</span><span class=\"p\">,</span> <span class=\"n\">salt</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">get_user_data_triplet</span><span class=\"p\">()</span>\n<span class=\"n\">prime</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">prime</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">generator</span>\n</pre>\n<p>Simplified workflow:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srptools</span> <span class=\"kn\">import</span> <span class=\"n\">SRPContext</span><span class=\"p\">,</span> <span class=\"n\">SRPServerSession</span><span class=\"p\">,</span> <span class=\"n\">SRPClientSession</span>\n\n<span class=\"c1\"># Receive username from client and generate server public.</span>\n<span class=\"n\">server_session</span> <span class=\"o\">=</span> <span class=\"n\">SRPServerSession</span><span class=\"p\">(</span><span class=\"n\">SRPContext</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">prime</span><span class=\"o\">=</span><span class=\"n\">prime</span><span class=\"p\">,</span> <span class=\"n\">generator</span><span class=\"o\">=</span><span class=\"n\">gen</span><span class=\"p\">),</span> <span class=\"n\">password_verifier</span><span class=\"p\">)</span>\n<span class=\"n\">server_public</span> <span class=\"o\">=</span> <span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">public</span>\n\n<span class=\"c1\"># Receive server public and salt and process them.</span>\n<span class=\"n\">client_session</span> <span class=\"o\">=</span> <span class=\"n\">SRPClientSession</span><span class=\"p\">(</span><span class=\"n\">SRPContext</span><span class=\"p\">(</span><span class=\"s1\">'alice'</span><span class=\"p\">,</span> <span class=\"s1\">'password123'</span><span class=\"p\">,</span> <span class=\"n\">prime</span><span class=\"o\">=</span><span class=\"n\">prime</span><span class=\"p\">,</span> <span class=\"n\">generator</span><span class=\"o\">=</span><span class=\"n\">gen</span><span class=\"p\">))</span>\n<span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">server_public</span><span class=\"p\">,</span> <span class=\"n\">salt</span><span class=\"p\">)</span>\n<span class=\"c1\"># Generate client public and session key.</span>\n<span class=\"n\">client_public</span> <span class=\"o\">=</span> <span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">public</span>\n\n<span class=\"c1\"># Process client public and compare session keys.</span>\n<span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">client_public</span><span class=\"p\">,</span> <span class=\"n\">salt</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">key</span>\n</pre>\n<p>Extended workflow</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srptools</span> <span class=\"kn\">import</span> <span class=\"n\">SRPContext</span><span class=\"p\">,</span> <span class=\"n\">SRPServerSession</span><span class=\"p\">,</span> <span class=\"n\">SRPClientSession</span>\n\n<span class=\"c1\"># Receive username from client and generate server public.</span>\n<span class=\"n\">server_session</span> <span class=\"o\">=</span> <span class=\"n\">SRPServerSession</span><span class=\"p\">(</span><span class=\"n\">SRPContext</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">prime</span><span class=\"o\">=</span><span class=\"n\">prime</span><span class=\"p\">,</span> <span class=\"n\">generator</span><span class=\"o\">=</span><span class=\"n\">gen</span><span class=\"p\">),</span> <span class=\"n\">password_verifier</span><span class=\"p\">)</span>\n<span class=\"n\">server_public</span> <span class=\"o\">=</span> <span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">public</span>\n\n<span class=\"c1\"># Receive server public and salt and process them.</span>\n<span class=\"n\">client_session</span> <span class=\"o\">=</span> <span class=\"n\">SRPClientSession</span><span class=\"p\">(</span><span class=\"n\">SRPContext</span><span class=\"p\">(</span><span class=\"s1\">'alice'</span><span class=\"p\">,</span> <span class=\"s1\">'password123'</span><span class=\"p\">,</span> <span class=\"n\">prime</span><span class=\"o\">=</span><span class=\"n\">prime</span><span class=\"p\">,</span> <span class=\"n\">generator</span><span class=\"o\">=</span><span class=\"n\">gen</span><span class=\"p\">))</span>\n<span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">server_public</span><span class=\"p\">,</span> <span class=\"n\">salt</span><span class=\"p\">)</span>\n<span class=\"c1\"># Generate client public and session key proof.</span>\n<span class=\"n\">client_public</span> <span class=\"o\">=</span> <span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">public</span>\n<span class=\"n\">client_session_key_proof</span> <span class=\"o\">=</span> <span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">key_proof</span>\n\n<span class=\"c1\"># Process client public and verify session key proof.</span>\n<span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">client_public</span><span class=\"p\">,</span> <span class=\"n\">salt</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">verify_proof</span><span class=\"p\">(</span><span class=\"n\">client_session_key_proof</span><span class=\"p\">)</span>\n<span class=\"c1\"># Generate session key proof hash.</span>\n<span class=\"n\">server_session_key_proof_hash</span> <span class=\"o\">=</span> <span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">key_proof_hash</span>\n\n<span class=\"c1\"># Verify session key proof hash received from server.</span>\n<span class=\"k\">assert</span> <span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">verify_proof</span><span class=\"p\">(</span><span class=\"n\">server_session_key_proof_hash</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage-hints\">\n<h2>Usage hints</h2>\n<ul>\n<li><p><tt>srptools.constants</tt> contains basic constants which can be used with <tt>SRPContext</tt> for server and client to agree\nupon communication details.</p>\n</li>\n<li><p><tt>.process()</tt> methods of session classes may raise <tt>SRPException</tt> in certain circumstances. Auth process on\nsuch occasions must be stopped.</p>\n</li>\n<li><dl>\n<dt><tt>.private</tt> attribute of session classes may be used to restore sessions:</dt>\n<dd><pre><span class=\"n\">server_private</span> <span class=\"o\">=</span> <span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">private</span>\n\n<span class=\"c1\"># Restore session on new request.</span>\n<span class=\"n\">server_session</span> <span class=\"o\">=</span> <span class=\"n\">SRPServerSession</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">password_verifier</span><span class=\"p\">,</span> <span class=\"n\">private</span><span class=\"o\">=</span><span class=\"n\">server_private</span><span class=\"p\">)</span>\n</pre>\n</dd>\n</dl>\n</li>\n<li><p><tt>SRPContext</tt> is rather flexible, so you can implement some custom server/client session logic with its help.</p>\n</li>\n<li><p>Basic values are represented as hex strings but base64 encoded values are also supported:</p>\n<blockquote>\n<pre><span class=\"n\">server_public</span> <span class=\"o\">=</span> <span class=\"n\">server_session</span><span class=\"o\">.</span><span class=\"n\">public_b64</span>\n\n<span class=\"c1\"># Receive server public and salt and process them.</span>\n<span class=\"n\">client_session</span> <span class=\"o\">=</span> <span class=\"n\">SRPClientSession</span><span class=\"p\">(</span><span class=\"n\">SRPContext</span><span class=\"p\">(</span><span class=\"s1\">'alice'</span><span class=\"p\">,</span> <span class=\"s1\">'password123'</span><span class=\"p\">,</span> <span class=\"n\">prime</span><span class=\"o\">=</span><span class=\"n\">prime</span><span class=\"p\">,</span> <span class=\"n\">generator</span><span class=\"o\">=</span><span class=\"n\">gen</span><span class=\"p\">))</span>\n<span class=\"n\">client_session</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">server_public</span><span class=\"p\">,</span> <span class=\"n\">salt</span><span class=\"p\">,</span> <span class=\"n\">base64</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use srptools.hex_from_b64() to represent base64 value as hex.</span>\n<span class=\"n\">server_public_hex</span> <span class=\"o\">=</span> <span class=\"n\">hex_from_b64</span><span class=\"p\">(</span><span class=\"n\">server_public</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li><dl>\n<dt>RFC 2945 - The SRP Authentication and Key Exchange System</dt>\n<dd><a href=\"https://tools.ietf.org/html/rfc2945\" rel=\"nofollow\">https://tools.ietf.org/html/rfc2945</a></dd>\n</dl>\n</li>\n<li><dl>\n<dt>RFC 5054 - Using the Secure Remote Password (SRP) Protocol for TLS Authentication</dt>\n<dd><a href=\"https://tools.ietf.org/html/rfc5054\" rel=\"nofollow\">https://tools.ietf.org/html/rfc5054</a></dd>\n</dl>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4717078, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5fc283372a3ef7b9435ed13936e906cd", "sha256": "c7c38c39d070339c3a0cdec4e68c6aeed9e6e4cef7b2a59f09c31242f9092a6a"}, "downloads": -1, "filename": "srptools-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5fc283372a3ef7b9435ed13936e906cd", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13802, "upload_time": "2017-02-11T17:37:26", "upload_time_iso_8601": "2017-02-11T17:37:26.967334Z", "url": "https://files.pythonhosted.org/packages/aa/6f/d2269d50703b76ca88f89256b2a02b4fedc2687fe483c4b82b6f15bd39fb/srptools-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9676aeb1f3eb0d5295beae6ec17bc260", "sha256": "5e059cac3a007ff4833b3aaa7201957c4b3bce93aaaf6051d81281178dbefe17"}, "downloads": -1, "filename": "srptools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9676aeb1f3eb0d5295beae6ec17bc260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18501, "upload_time": "2017-02-11T17:37:24", "upload_time_iso_8601": "2017-02-11T17:37:24.915923Z", "url": "https://files.pythonhosted.org/packages/af/8f/de15a5558c96dca6d390cc7d5efa0eb572b3a694e7827960eb130bb55ae6/srptools-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "46da018ac55487f5990875ee2ce6ba6f", "sha256": "0e4550e4098d101d274e952820864a95991c83abdf9caf59765f084e342407d5"}, "downloads": -1, "filename": "srptools-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46da018ac55487f5990875ee2ce6ba6f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13966, "upload_time": "2017-03-12T03:02:35", "upload_time_iso_8601": "2017-03-12T03:02:35.850590Z", "url": "https://files.pythonhosted.org/packages/47/73/b0fac93e0650139888e85dc26d35f140b982c74a99d0895423fa10845641/srptools-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "811c38f3e45039a8973cc6820d3ce94f", "sha256": "80c76b5f422bdce1c87eaf2fbcb2c2e43974085a1d758cb9195438ee6b8ca0cb"}, "downloads": -1, "filename": "srptools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "811c38f3e45039a8973cc6820d3ce94f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19998, "upload_time": "2017-03-12T03:02:33", "upload_time_iso_8601": "2017-03-12T03:02:33.283851Z", "url": "https://files.pythonhosted.org/packages/d2/19/4d9beec46e82d17249517291d0564c9eb6773c51015c278fef97312e63e3/srptools-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "417affab7472b6115926c0813ac53724", "sha256": "4f8014ff8cd71a18d9f52feaa730ac27fae5b5bb161c2b57d103026f91d36828"}, "downloads": -1, "filename": "srptools-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "417affab7472b6115926c0813ac53724", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14342, "upload_time": "2017-06-18T12:10:21", "upload_time_iso_8601": "2017-06-18T12:10:21.583607Z", "url": "https://files.pythonhosted.org/packages/d0/fe/f5cf417857404c3b797cb3a8fc43967145686a921e491980cdd4ff505408/srptools-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b82b15d453d4846b117c512caca50b66", "sha256": "675c041b575b60a85fb91fbfa190660d5afc9c366f8cf57ad97c344bd76c123c"}, "downloads": -1, "filename": "srptools-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b82b15d453d4846b117c512caca50b66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15255, "upload_time": "2017-06-18T12:10:18", "upload_time_iso_8601": "2017-06-18T12:10:18.627382Z", "url": "https://files.pythonhosted.org/packages/9b/44/24fb65f5cc26ebefd472e0d344578e5d125fc4ff4d96831a0e25072ff9b1/srptools-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "1c27e5aa339454752c0392e6334a46e5", "sha256": "3155194063f496f1950a55a1a757d2578771ace78dea35b1b1cc7f3e9e6bb9fc"}, "downloads": -1, "filename": "srptools-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c27e5aa339454752c0392e6334a46e5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14402, "upload_time": "2019-01-20T02:35:46", "upload_time_iso_8601": "2019-01-20T02:35:46.393326Z", "url": "https://files.pythonhosted.org/packages/54/6d/b1d42918fc721545d6ba92e6a77e414bc5eda9f4c1c352d8836632499024/srptools-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f5f24ed51d43d96888de25fa074c8c0", "sha256": "5754f639ed1888f47c1185d74e8907ff9af4c0ccc1c8be2ef19339d0a1327f4d"}, "downloads": -1, "filename": "srptools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6f5f24ed51d43d96888de25fa074c8c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15350, "upload_time": "2019-01-20T02:35:43", "upload_time_iso_8601": "2019-01-20T02:35:43.917243Z", "url": "https://files.pythonhosted.org/packages/d7/5a/7baeeafb8209ed4f243c0a7dda2f6d5843efba479b0c2ad6b793803e6c1b/srptools-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c27e5aa339454752c0392e6334a46e5", "sha256": "3155194063f496f1950a55a1a757d2578771ace78dea35b1b1cc7f3e9e6bb9fc"}, "downloads": -1, "filename": "srptools-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c27e5aa339454752c0392e6334a46e5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14402, "upload_time": "2019-01-20T02:35:46", "upload_time_iso_8601": "2019-01-20T02:35:46.393326Z", "url": "https://files.pythonhosted.org/packages/54/6d/b1d42918fc721545d6ba92e6a77e414bc5eda9f4c1c352d8836632499024/srptools-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f5f24ed51d43d96888de25fa074c8c0", "sha256": "5754f639ed1888f47c1185d74e8907ff9af4c0ccc1c8be2ef19339d0a1327f4d"}, "downloads": -1, "filename": "srptools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6f5f24ed51d43d96888de25fa074c8c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15350, "upload_time": "2019-01-20T02:35:43", "upload_time_iso_8601": "2019-01-20T02:35:43.917243Z", "url": "https://files.pythonhosted.org/packages/d7/5a/7baeeafb8209ed4f243c0a7dda2f6d5843efba479b0c2ad6b793803e6c1b/srptools-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:18 2020"}