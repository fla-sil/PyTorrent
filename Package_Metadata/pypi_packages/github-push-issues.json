{"info": {"author": "W. Trevor King", "author_email": "wking@tremily.us", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Bug Tracking"], "description": "Create GitHub issues based on local templates.\n\nThis is useful for pushing, for example, a set of checklists with\nper-item issues grouped by milestone.  The template directory\nstructure is::\n\n  .\n  |-- milestone-1\n  |   |-- README.md\n  |   |-- issue-1.1.md\n  |   |-- issue-1.2.md\n  |   ...\n  |-- milestone-2\n  |   |-- README.md\n  |   |-- issue-2.1.md\n  |   |-- issue-2.2.md\n  |   ...\n  ...\n\nBoth the ``README.md`` and per-issue files have a summary line (which\nmay optionally include `Atx-style headers`__) followed by a blank line\nand an optional body.  Milestone bodies are plain text, while issue\nbodies are GitHub flavored Markdown, For example, if you want each of\nyour product to have a ``joel`` milestone tracking the `Joel Test`__,\nyou might have a ``joel/README.md`` with::\n\n  # joel\n\n  Keep track of how well the project handles the Joel Test [1].\n\n  [1]: http://www.joelonsoftware.com/articles/fog0000000043.html\n\nAnd per-feature issue milestones like ``joel/source-control.md``::\n\n  # Do you use source control?\n\n  I've used commercial source control packages, and I've used CVS,\n  which is free, and let me tell you, CVS is fine...\n\nOf course, you probably can't copy Joel's text wholesale into your\nissue files, so you'd want to make your own summaries.  Then run::\n\n  # github-push-issues.py [options] /path/to/your/template/directory\n\nOr::\n\n  # github-push-issues.py [options] https://example.com/url/for/template.zip\n\nThe latter is useful if you have your template directory structure\nhosted online in a version control system that supports tar or zip\narchive snaphots.\n\n__ http://daringfireball.net/projects/markdown/syntax#header\n__ http://www.joelonsoftware.com/articles/fog0000000043.html", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/wking/github-push-issues/archive/v0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wking/github-push-issues", "keywords": null, "license": "BSD-2", "maintainer": null, "maintainer_email": null, "name": "github-push-issues", "package_url": "https://pypi.org/project/github-push-issues/", "platform": "all", "project_url": "https://pypi.org/project/github-push-issues/", "project_urls": {"Download": "https://github.com/wking/github-push-issues/archive/v0.3.tar.gz", "Homepage": "https://github.com/wking/github-push-issues"}, "release_url": "https://pypi.org/project/github-push-issues/0.3/", "requires_dist": null, "requires_python": null, "summary": "Create GitHub issues based on local templates.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Create GitHub issues based on local templates.</p>\n<p>This is useful for pushing, for example, a set of checklists with\nper-item issues grouped by milestone.  The template directory\nstructure is:</p>\n<pre>.\n|-- milestone-1\n|   |-- README.md\n|   |-- issue-1.1.md\n|   |-- issue-1.2.md\n|   ...\n|-- milestone-2\n|   |-- README.md\n|   |-- issue-2.1.md\n|   |-- issue-2.2.md\n|   ...\n...\n</pre>\n<p>Both the <tt>README.md</tt> and per-issue files have a summary line (which\nmay optionally include <a href=\"http://daringfireball.net/projects/markdown/syntax#header\" rel=\"nofollow\">Atx-style headers</a>) followed by a blank line\nand an optional body.  Milestone bodies are plain text, while issue\nbodies are GitHub flavored Markdown, For example, if you want each of\nyour product to have a <tt>joel</tt> milestone tracking the <a href=\"http://www.joelonsoftware.com/articles/fog0000000043.html\" rel=\"nofollow\">Joel Test</a>,\nyou might have a <tt>joel/README.md</tt> with:</p>\n<pre># joel\n\nKeep track of how well the project handles the Joel Test [1].\n\n[1]: http://www.joelonsoftware.com/articles/fog0000000043.html\n</pre>\n<p>And per-feature issue milestones like <tt><span class=\"pre\">joel/source-control.md</span></tt>:</p>\n<pre># Do you use source control?\n\nI've used commercial source control packages, and I've used CVS,\nwhich is free, and let me tell you, CVS is fine...\n</pre>\n<p>Of course, you probably can\u2019t copy Joel\u2019s text wholesale into your\nissue files, so you\u2019d want to make your own summaries.  Then run:</p>\n<pre># github-push-issues.py [options] /path/to/your/template/directory\n</pre>\n<p>Or:</p>\n<pre># github-push-issues.py [options] https://example.com/url/for/template.zip\n</pre>\n<p>The latter is useful if you have your template directory structure\nhosted online in a version control system that supports tar or zip\narchive snaphots.</p>\n\n          </div>"}, "last_serial": 1508564, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "631f4e752a1054a8004c8ea10246503f", "sha256": "82ca015e916e383f6593db23f79a9bb37f856cf21159ead743e21d90bb252c35"}, "downloads": -1, "filename": "github-push-issues-0.1.tar.gz", "has_sig": false, "md5_digest": "631f4e752a1054a8004c8ea10246503f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4770, "upload_time": "2015-04-12T20:23:48", "upload_time_iso_8601": "2015-04-12T20:23:48.637329Z", "url": "https://files.pythonhosted.org/packages/ff/51/66001e76c1d058f29f71793a50dea5f1e08a99caca53c5deb66729209821/github-push-issues-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "71656cbc4640ab1e0b0897fc16539de7", "sha256": "1f4e3dca2d940a5ee06662e4e57d51e9e83e214f0e72049db96a55d9b1aa44e0"}, "downloads": -1, "filename": "github-push-issues-0.2.tar.gz", "has_sig": false, "md5_digest": "71656cbc4640ab1e0b0897fc16539de7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5310, "upload_time": "2015-04-12T22:10:27", "upload_time_iso_8601": "2015-04-12T22:10:27.990291Z", "url": "https://files.pythonhosted.org/packages/06/f3/1efd93f98329ecde94e76064916b1dc854de6ee085e5282890ef18f860d6/github-push-issues-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4fe767c641cbd340f0f35908a3661eb6", "sha256": "3dd5c655d7e0d417445ca69db7046f7371bc118e3aa916d56c83a18a7e4ef850"}, "downloads": -1, "filename": "github-push-issues-0.3.tar.gz", "has_sig": false, "md5_digest": "4fe767c641cbd340f0f35908a3661eb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5758, "upload_time": "2015-04-16T22:57:44", "upload_time_iso_8601": "2015-04-16T22:57:44.466023Z", "url": "https://files.pythonhosted.org/packages/61/b4/ab7fa66db0fc8a9bef6ae022cfc48e6f384c0fefdcce18919615b6bec13e/github-push-issues-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4fe767c641cbd340f0f35908a3661eb6", "sha256": "3dd5c655d7e0d417445ca69db7046f7371bc118e3aa916d56c83a18a7e4ef850"}, "downloads": -1, "filename": "github-push-issues-0.3.tar.gz", "has_sig": false, "md5_digest": "4fe767c641cbd340f0f35908a3661eb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5758, "upload_time": "2015-04-16T22:57:44", "upload_time_iso_8601": "2015-04-16T22:57:44.466023Z", "url": "https://files.pythonhosted.org/packages/61/b4/ab7fa66db0fc8a9bef6ae022cfc48e6f384c0fefdcce18919615b6bec13e/github-push-issues-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:59 2020"}