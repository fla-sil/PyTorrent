{"info": {"author": "J. Demsar, A. Benavoli, G. Corani", "author_email": "janez.demsar@fri.uni-lj.si", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "baycomp\n=======\n\nBaycomp is a library for Bayesian comparison of classifiers.\n\nFunctions compare two classifiers on one or on multiple data sets. They\ncompute three probabilities: the probability that the first classifier has\nhigher scores than the second, the probability that differences are within\nthe region of practical equivalence (rope), or that the second classifier\nhas higher scores. We will refer to this probabilities as `p_left`, `p_rope`\nand `p_right`. If the argument `rope` is omitted (or set to zero), functions\nreturn only `p_left` and `p_right`.\n\nThe region of practical equivalence (rope) is specified by the caller and\nshould correspond to what is \"equivalent\" in practice; for instance,\nclassification accuracies that differ by less than 0.5 may be called\nequivalent.\n\nSimilarly, whether higher scores are better or worse depends upon the type\nof the score.\n\nThe library can also plot the posterior distributions.\n\nThe library can be used in three ways.\n\n1. Two shortcut functions can be used for comparison on single\n   and on multiple data sets. If `nbc` and `j48` contain a list of average\n   classification accuracies of naive Bayesian classifier and J48 on a\n   collection of data sets, we can call\n\n        >>> two_on_multiple(nbc, j48, rope=1)\n        (0.23124, 0.00666, 0.7621)\n\n   (Actual results may differ due to Monte Carlo sampling.)\n\n   With some additional arguments, the function can also plot the posterior\n   distribution from which these probabilities came.\n\n2. Tests are packed into test classes. The above call is equivalent to\n\n        >>> SignedRankTest.probs(nbc, j48, rope=1)\n        (0.23124, 0.00666, 0.7621)\n\n   and to get a plot, we call\n\n        >>> SignedRankTest.plot(nbc, j48, rope=1, names=(\"nbc\", \"j48\"))\n\n   To switch to another test, use another class::\n\n        >>> SignTest.probs(nbc, j48, rope=1)\n        (0.26508, 0.13274, 0.60218)\n\n3. Finally, we can construct and query sampled posterior distributions.\n\n        >>> posterior = SignedRankTest(nbc, j48, rope=0.5)\n        >>> posterior.probs()\n        (0.23124, 0.00666, 0.7621)\n        >>> posterior.plot(names=(\"nbc\", \"j48\"))\n\nInstallation\n------------\n\nInstall from [PyPI](https://pypi.python.org/pypi/baycomp):\n\n    pip install baycomp\n\nDocumentation\n-------------\n\nUser documentation is available on [https://baycomp.readthedocs.io/](https://baycomp.readthedocs.io/).\n\n\nA detailed description of the implemented methods is available in [Time for a Change: a Tutorial for Comparing Multiple Classifiers Through Bayesian Analysis](http://jmlr.org/papers/volume18/16-305/16-305.pdf), Alessio Benavoli, Giorgio Corani, Janez Dem\u0161ar, Marco Zaffalon. Journal of Machine Learning Research, 18 (2017) 1-36.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/janezd/baycomp.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "baycomp", "package_url": "https://pypi.org/project/baycomp/", "platform": "", "project_url": "https://pypi.org/project/baycomp/", "project_urls": {"Homepage": "https://github.com/janezd/baycomp.git"}, "release_url": "https://pypi.org/project/baycomp/1.0.2/", "requires_dist": ["matplotlib (>=2.1.2)", "numpy (>=1.13.1)", "scipy (>=0.19.1)"], "requires_python": ">=3", "summary": "Bayesian tests for comparison of classifiers", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>baycomp</h1>\n<p>Baycomp is a library for Bayesian comparison of classifiers.</p>\n<p>Functions compare two classifiers on one or on multiple data sets. They\ncompute three probabilities: the probability that the first classifier has\nhigher scores than the second, the probability that differences are within\nthe region of practical equivalence (rope), or that the second classifier\nhas higher scores. We will refer to this probabilities as <code>p_left</code>, <code>p_rope</code>\nand <code>p_right</code>. If the argument <code>rope</code> is omitted (or set to zero), functions\nreturn only <code>p_left</code> and <code>p_right</code>.</p>\n<p>The region of practical equivalence (rope) is specified by the caller and\nshould correspond to what is \"equivalent\" in practice; for instance,\nclassification accuracies that differ by less than 0.5 may be called\nequivalent.</p>\n<p>Similarly, whether higher scores are better or worse depends upon the type\nof the score.</p>\n<p>The library can also plot the posterior distributions.</p>\n<p>The library can be used in three ways.</p>\n<ol>\n<li>\n<p>Two shortcut functions can be used for comparison on single\nand on multiple data sets. If <code>nbc</code> and <code>j48</code> contain a list of average\nclassification accuracies of naive Bayesian classifier and J48 on a\ncollection of data sets, we can call</p>\n<pre><code> &gt;&gt;&gt; two_on_multiple(nbc, j48, rope=1)\n (0.23124, 0.00666, 0.7621)\n</code></pre>\n<p>(Actual results may differ due to Monte Carlo sampling.)</p>\n<p>With some additional arguments, the function can also plot the posterior\ndistribution from which these probabilities came.</p>\n</li>\n<li>\n<p>Tests are packed into test classes. The above call is equivalent to</p>\n<pre><code> &gt;&gt;&gt; SignedRankTest.probs(nbc, j48, rope=1)\n (0.23124, 0.00666, 0.7621)\n</code></pre>\n<p>and to get a plot, we call</p>\n<pre><code> &gt;&gt;&gt; SignedRankTest.plot(nbc, j48, rope=1, names=(\"nbc\", \"j48\"))\n</code></pre>\n<p>To switch to another test, use another class::</p>\n<pre><code> &gt;&gt;&gt; SignTest.probs(nbc, j48, rope=1)\n (0.26508, 0.13274, 0.60218)\n</code></pre>\n</li>\n<li>\n<p>Finally, we can construct and query sampled posterior distributions.</p>\n<pre><code> &gt;&gt;&gt; posterior = SignedRankTest(nbc, j48, rope=0.5)\n &gt;&gt;&gt; posterior.probs()\n (0.23124, 0.00666, 0.7621)\n &gt;&gt;&gt; posterior.plot(names=(\"nbc\", \"j48\"))\n</code></pre>\n</li>\n</ol>\n<h2>Installation</h2>\n<p>Install from <a href=\"https://pypi.python.org/pypi/baycomp\" rel=\"nofollow\">PyPI</a>:</p>\n<pre><code>pip install baycomp\n</code></pre>\n<h2>Documentation</h2>\n<p>User documentation is available on <a href=\"https://baycomp.readthedocs.io/\" rel=\"nofollow\">https://baycomp.readthedocs.io/</a>.</p>\n<p>A detailed description of the implemented methods is available in <a href=\"http://jmlr.org/papers/volume18/16-305/16-305.pdf\" rel=\"nofollow\">Time for a Change: a Tutorial for Comparing Multiple Classifiers Through Bayesian Analysis</a>, Alessio Benavoli, Giorgio Corani, Janez Dem\u0161ar, Marco Zaffalon. Journal of Machine Learning Research, 18 (2017) 1-36.</p>\n\n          </div>"}, "last_serial": 6266311, "releases": {"0.7.1": [{"comment_text": "", "digests": {"md5": "5aaa20b75d3b2ae9444fb97675ead323", "sha256": "d4df04cc507c7598d7dab61a188c0f4a3684161955147913b26640f9f0bf7366"}, "downloads": -1, "filename": "baycomp-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5aaa20b75d3b2ae9444fb97675ead323", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 14763, "upload_time": "2018-02-04T14:20:46", "upload_time_iso_8601": "2018-02-04T14:20:46.901507Z", "url": "https://files.pythonhosted.org/packages/3a/94/f362a58b8b299afa46f0320c01d2638efeb4bc6efd5bffcd91b020de0a31/baycomp-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ca3e93fd96396e9a171fd226e8dadd1", "sha256": "d70cd2d1903b77cae25a7522309502293624d77986737574d4cf94f89b737095"}, "downloads": -1, "filename": "baycomp-0.7.1.tar.gz", "has_sig": false, "md5_digest": "1ca3e93fd96396e9a171fd226e8dadd1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11870, "upload_time": "2018-02-04T14:20:48", "upload_time_iso_8601": "2018-02-04T14:20:48.155444Z", "url": "https://files.pythonhosted.org/packages/2b/c9/93ba0bff32ee1d065c03a100892d63733d4154777e563813a7cd1b00d402/baycomp-0.7.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "67f83ec5d82020d662dcee12a643debf", "sha256": "94a7bb0c8d832ca2ea4daed54eb4fc8af643ae1ef25dd0a080d6068720346be1"}, "downloads": -1, "filename": "baycomp-1.0-py3.6.egg", "has_sig": false, "md5_digest": "67f83ec5d82020d662dcee12a643debf", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3", "size": 34121, "upload_time": "2018-03-07T01:12:40", "upload_time_iso_8601": "2018-03-07T01:12:40.262744Z", "url": "https://files.pythonhosted.org/packages/46/07/b2170c5b8e8fe3cd686f1175442251ca5b1af9a1f584694fcb941e8d724e/baycomp-1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b60284c49387ecc88f98dfc9a216fa71", "sha256": "b81ef80a5c0f6601fa566109a15c5a0a1157524a2651b5cbd50862a802cfa4e1"}, "downloads": -1, "filename": "baycomp-1.0.tar.gz", "has_sig": false, "md5_digest": "b60284c49387ecc88f98dfc9a216fa71", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 159969, "upload_time": "2018-03-07T01:12:41", "upload_time_iso_8601": "2018-03-07T01:12:41.570680Z", "url": "https://files.pythonhosted.org/packages/3b/19/7b943ae3005189618f273e9bccb0b03c3b6d066dab57b7f8fbb8b1e6f766/baycomp-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1d2d3af76a44d11c9b4d92f50c320371", "sha256": "a2bb1960a38525b530968be6682f62d10ec2c0231be22de9a8bd8961d9f5dcdc"}, "downloads": -1, "filename": "baycomp-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1d2d3af76a44d11c9b4d92f50c320371", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 16609, "upload_time": "2018-03-23T23:08:24", "upload_time_iso_8601": "2018-03-23T23:08:24.745936Z", "url": "https://files.pythonhosted.org/packages/8d/d3/76a20f00df21bbb526391a2d55927f71d5fbcc4e9153a6092b6086a100e3/baycomp-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d209fc1f0da7d2525e4019c13845d60b", "sha256": "48c7019c33c46a5169021c233eca39de22b3dd79ca55101ba7e8e3b659d624a6"}, "downloads": -1, "filename": "baycomp-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d209fc1f0da7d2525e4019c13845d60b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 160100, "upload_time": "2018-03-23T23:08:27", "upload_time_iso_8601": "2018-03-23T23:08:27.711543Z", "url": "https://files.pythonhosted.org/packages/9e/e8/7caf68829392eee5dc7da15687044d53c07e901675b46a74d16620d39533/baycomp-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "88180d6bf087589a2a827adf83491f86", "sha256": "68eae1611a98be002b60246961ec20e3b798e02c757e0e0121755f1b62f444fb"}, "downloads": -1, "filename": "baycomp-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "88180d6bf087589a2a827adf83491f86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 17984, "upload_time": "2019-12-09T13:05:30", "upload_time_iso_8601": "2019-12-09T13:05:30.726008Z", "url": "https://files.pythonhosted.org/packages/05/69/3029fe9fe13e4ec14d9d6be695ee197e4cd75221c7f77eb95ac5604035b4/baycomp-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7a16e379b748427ef321be7e19032a4", "sha256": "c43472c16bd7cdf4884dd4c73dd307e4a3da7097fe49c83cd5e88d75142923b0"}, "downloads": -1, "filename": "baycomp-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b7a16e379b748427ef321be7e19032a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 154316, "upload_time": "2019-12-09T13:05:38", "upload_time_iso_8601": "2019-12-09T13:05:38.745520Z", "url": "https://files.pythonhosted.org/packages/6e/f7/49f0cb5f1d1b2421036360d59da131c69224cfcfb483def506831b6515d4/baycomp-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88180d6bf087589a2a827adf83491f86", "sha256": "68eae1611a98be002b60246961ec20e3b798e02c757e0e0121755f1b62f444fb"}, "downloads": -1, "filename": "baycomp-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "88180d6bf087589a2a827adf83491f86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 17984, "upload_time": "2019-12-09T13:05:30", "upload_time_iso_8601": "2019-12-09T13:05:30.726008Z", "url": "https://files.pythonhosted.org/packages/05/69/3029fe9fe13e4ec14d9d6be695ee197e4cd75221c7f77eb95ac5604035b4/baycomp-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7a16e379b748427ef321be7e19032a4", "sha256": "c43472c16bd7cdf4884dd4c73dd307e4a3da7097fe49c83cd5e88d75142923b0"}, "downloads": -1, "filename": "baycomp-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b7a16e379b748427ef321be7e19032a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 154316, "upload_time": "2019-12-09T13:05:38", "upload_time_iso_8601": "2019-12-09T13:05:38.745520Z", "url": "https://files.pythonhosted.org/packages/6e/f7/49f0cb5f1d1b2421036360d59da131c69224cfcfb483def506831b6515d4/baycomp-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:42 2020"}