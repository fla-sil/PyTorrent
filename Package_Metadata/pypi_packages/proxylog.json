{"info": {"author": "metagriffin", "author_email": "mg.pypi@uberdev.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "========\nProxyLog\n========\n\nA simple HTTP proxy server that logs all client/server communications,\nwith some added features to parse the content such as automatic\ngunzipping, output colorization and known data \"pretty\" formatting,\nincluding XML, JSON, and YAML.\n\n\nProject\n=======\n\n* Homepage: https://github.com/metagriffin/proxylog\n* Bugs: https://github.com/metagriffin/proxylog/issues\n\n\nTL;DR\n=====\n\nInstall:\n\n.. code-block:: bash\n\n  $ pip install proxylog\n\nProxy http://www.example.com/ locally to http://localhost:8080/, log\nall transactions to a file and display them colorized and formatted\non the console:\n\n.. code-block:: bash\n\n  $ proxylog -r www.example.com:80 -p 8080 -o transactions.log -dcf\n\nDisplay a previous log file colorized and formatted:\n\n.. code-block:: bash\n\n  $ proxylog -i transactions.log -dcf\n\n\nColorizing\n==========\n\nThe colorizing is done via the `Pygments\n<https://pypi.python.org/pypi/Pygments>`_ package; proxylog's\n``--theme`` option is passed through to pygments, so any of the color\nthemes that pygments supports can be used. Use the following command\nto list the available themes:\n\n.. code-block:: bash\n\n  $ pygmentize -L styles\n\n\nFormatting\n==========\n\n\"Formatting\" refers to proxylog's ability to re-format known data\nformats to a more human-friendly display, which when combined with\ncolorization, can yield very readable data. *HOWEVER*, this does\nalter the actual data, so if you are using the data in any way,\nyou should not use the \"--format\" flag.\n\nCurrently, the following formats are supported, with examples of how\nthey are \"prettified\":\n\n* XML:\n\n  Input:\n\n  .. code-block:: text\n\n    <root  ><node   attr= \"value\">data</node>\n      </root>\n\n  Formatted output:\n\n  .. code-block:: text\n\n    <root>\n      <node attr=\"value\">data</node>\n    </root>\n\n* JSON:\n\n  Input:\n\n  .. code-block:: text\n\n    {\"key\": \"value\", \"list\": [3, \"bar\", null, \"foo\"]}\n\n  Formatted output:\n\n  .. code-block:: text\n\n    {\n      \"key\": \"value\",\n      \"list\": [\n        3,\n        \"bar\",\n        null,\n        \"foo\"\n      ]\n    }\n\n* YAML:\n\n  Input:\n\n  .. code-block:: text\n\n    {key: value, list: [3, bar, null, foo]}\n\n  Formatted output:\n\n  .. code-block:: text\n\n    {\n      \"key\": \"value\",\n      \"list\": [\n        3,\n        \"bar\",\n        null,\n        \"foo\"\n      ]\n    }", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/metagriffin/proxylog", "keywords": "http proxy logging xml colorize prettify", "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "proxylog", "package_url": "https://pypi.org/project/proxylog/", "platform": "any", "project_url": "https://pypi.org/project/proxylog/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/metagriffin/proxylog"}, "release_url": "https://pypi.org/project/proxylog/0.6/", "requires_dist": null, "requires_python": null, "summary": "A simple, logging, colorizing, pretty-formatting, HTTP proxy.", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple HTTP proxy server that logs all client/server communications,\nwith some added features to parse the content such as automatic\ngunzipping, output colorization and known data \u201cpretty\u201d formatting,\nincluding XML, JSON, and YAML.</p>\n<div id=\"project\">\n<h2>Project</h2>\n<ul>\n<li>Homepage: <a href=\"https://github.com/metagriffin/proxylog\" rel=\"nofollow\">https://github.com/metagriffin/proxylog</a></li>\n<li>Bugs: <a href=\"https://github.com/metagriffin/proxylog/issues\" rel=\"nofollow\">https://github.com/metagriffin/proxylog/issues</a></li>\n</ul>\n</div>\n<div id=\"tl-dr\">\n<h2>TL;DR</h2>\n<p>Install:</p>\n<pre>$ pip install proxylog\n</pre>\n<p>Proxy <a href=\"http://www.example.com/\" rel=\"nofollow\">http://www.example.com/</a> locally to <a href=\"http://localhost:8080/\" rel=\"nofollow\">http://localhost:8080/</a>, log\nall transactions to a file and display them colorized and formatted\non the console:</p>\n<pre>$ proxylog -r www.example.com:80 -p <span class=\"m\">8080</span> -o transactions.log -dcf\n</pre>\n<p>Display a previous log file colorized and formatted:</p>\n<pre>$ proxylog -i transactions.log -dcf\n</pre>\n</div>\n<div id=\"colorizing\">\n<h2>Colorizing</h2>\n<p>The colorizing is done via the <a href=\"https://pypi.python.org/pypi/Pygments\" rel=\"nofollow\">Pygments</a> package; proxylog\u2019s\n<tt><span class=\"pre\">--theme</span></tt> option is passed through to pygments, so any of the color\nthemes that pygments supports can be used. Use the following command\nto list the available themes:</p>\n<pre>$ pygmentize -L styles\n</pre>\n</div>\n<div id=\"formatting\">\n<h2>Formatting</h2>\n<p>\u201cFormatting\u201d refers to proxylog\u2019s ability to re-format known data\nformats to a more human-friendly display, which when combined with\ncolorization, can yield very readable data. <em>HOWEVER</em>, this does\nalter the actual data, so if you are using the data in any way,\nyou should not use the \u201c\u2013format\u201d flag.</p>\n<p>Currently, the following formats are supported, with examples of how\nthey are \u201cprettified\u201d:</p>\n<ul>\n<li><p>XML:</p>\n<p>Input:</p>\n<pre>&lt;root  &gt;&lt;node   attr= \"value\"&gt;data&lt;/node&gt;\n  &lt;/root&gt;\n</pre>\n<p>Formatted output:</p>\n<pre>&lt;root&gt;\n  &lt;node attr=\"value\"&gt;data&lt;/node&gt;\n&lt;/root&gt;\n</pre>\n</li>\n<li><p>JSON:</p>\n<p>Input:</p>\n<pre>{\"key\": \"value\", \"list\": [3, \"bar\", null, \"foo\"]}\n</pre>\n<p>Formatted output:</p>\n<pre>{\n  \"key\": \"value\",\n  \"list\": [\n    3,\n    \"bar\",\n    null,\n    \"foo\"\n  ]\n}\n</pre>\n</li>\n<li><p>YAML:</p>\n<p>Input:</p>\n<pre>{key: value, list: [3, bar, null, foo]}\n</pre>\n<p>Formatted output:</p>\n<pre>{\n  \"key\": \"value\",\n  \"list\": [\n    3,\n    \"bar\",\n    null,\n    \"foo\"\n  ]\n}\n</pre>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1016039, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "80bf8026d746372332f366388d922eb1", "sha256": "0118e82dfa4487da06bb1be398896d1d9774cf3a91d0aa4b705d626ba17ee574"}, "downloads": -1, "filename": "proxylog-0.3.0.tar.gz", "has_sig": false, "md5_digest": "80bf8026d746372332f366388d922eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21211, "upload_time": "2013-12-14T19:16:33", "upload_time_iso_8601": "2013-12-14T19:16:33.240892Z", "url": "https://files.pythonhosted.org/packages/f4/98/7fb698ee90fb2f222a94331e906f2b55d09e3087917fd8483198b3ea9808/proxylog-0.3.0.tar.gz", "yanked": false}], "0.3.0b1": [], "0.4": [{"comment_text": "", "digests": {"md5": "793f1e39003e2eb02fe5c4f3ee2e0a0d", "sha256": "b47067314e2e42b99cff31b3615f96e55b05a2ef731cb63a5b32a0c16c298f0e"}, "downloads": -1, "filename": "proxylog-0.4.tar.gz", "has_sig": false, "md5_digest": "793f1e39003e2eb02fe5c4f3ee2e0a0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21241, "upload_time": "2014-02-27T19:43:06", "upload_time_iso_8601": "2014-02-27T19:43:06.493575Z", "url": "https://files.pythonhosted.org/packages/d0/1b/9453e1de0b2a918eb4d0305de104f9215b00138dc3f71a981b50fbad458b/proxylog-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "ec0e88651eadd2a2cfbc9f7444a35932", "sha256": "39ec3d89b3bce9ce34e713c7c35e0dbdfa3a62b9e9f3fcc341848a9537f67782"}, "downloads": -1, "filename": "proxylog-0.5.tar.gz", "has_sig": false, "md5_digest": "ec0e88651eadd2a2cfbc9f7444a35932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21716, "upload_time": "2014-02-28T18:04:35", "upload_time_iso_8601": "2014-02-28T18:04:35.554582Z", "url": "https://files.pythonhosted.org/packages/31/a4/4f26b16dfb645fd7d2b5983c6bbce3ccd2d57c3a4650e1a14d9bd2e4caae/proxylog-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "885aecc23feb5e5a166d20690b3b9aad", "sha256": "42018f4582dae0d70aeef1674035df807557670d056c61da07c0c57e8ac539e0"}, "downloads": -1, "filename": "proxylog-0.6.tar.gz", "has_sig": false, "md5_digest": "885aecc23feb5e5a166d20690b3b9aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22974, "upload_time": "2014-03-02T00:08:52", "upload_time_iso_8601": "2014-03-02T00:08:52.764536Z", "url": "https://files.pythonhosted.org/packages/5f/f9/28b24027e268b3962a4f559533bb1c595077875c64ada541122caa2e970a/proxylog-0.6.tar.gz", "yanked": false}], "0.6b": [{"comment_text": "", "digests": {"md5": "960df7a7d188d39406f4d50fb065d7ef", "sha256": "fa24cecf8f2730b266c4c17c6b4c443290e13b3a2ef64a4a76a620c841158f63"}, "downloads": -1, "filename": "proxylog-0.6b.tar.gz", "has_sig": false, "md5_digest": "960df7a7d188d39406f4d50fb065d7ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22975, "upload_time": "2014-03-02T00:05:29", "upload_time_iso_8601": "2014-03-02T00:05:29.024117Z", "url": "https://files.pythonhosted.org/packages/aa/95/1e7b88b250ecb3cc38f9d06a85156b641a8d207793ff567200feec688198/proxylog-0.6b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "885aecc23feb5e5a166d20690b3b9aad", "sha256": "42018f4582dae0d70aeef1674035df807557670d056c61da07c0c57e8ac539e0"}, "downloads": -1, "filename": "proxylog-0.6.tar.gz", "has_sig": false, "md5_digest": "885aecc23feb5e5a166d20690b3b9aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22974, "upload_time": "2014-03-02T00:08:52", "upload_time_iso_8601": "2014-03-02T00:08:52.764536Z", "url": "https://files.pythonhosted.org/packages/5f/f9/28b24027e268b3962a4f559533bb1c595077875c64ada541122caa2e970a/proxylog-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:19 2020"}