{"info": {"author": "Davide Perozzi", "author_email": "myself@davideperozzi.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# getserv\n![Build status](https://img.shields.io/github/workflow/status/davideperozzi/getserv/%5BDeploy%5D%20Build%20and%20deploy?style=flat-square)\n[![License](https://flat.badgen.net/badge/license/MIT/blue)](./LICENSE)\n\nThis tool is used to retrieve stable servers from various services.\n\n## Usage\nThe package is uploaded to [pypi.org](https://pypi.org/project/getserv/). In order to install the package you should use pip:\n```\npip install getserv\n```\n> python >= 3.6 is required\n\n## Basic usage\nBasically the driver is responsible for delivering the ips to the main program. The main program will just scan all the ips received from the driver and checks whether a service on a given port is available:\n```sh\ngetserv [...args] {driver_name} [...args]\n```\n\n### Changing the port to scan\nThe default port is `22`. You may change it with the `--test-port` (`-p`) option.\n\n### Listing all IPs\nThe default beheavior is to only return one address. You can list all available server IPs by adding the `--list-all` (`-a`) option.\n\n## The DigitalOcean driver\nThe digitalocean driver is used to filter droplets by multiple tags. Since the `doctl` can only filter by single tags, the driver will fallback to the REST API. It'll get information for the requested droplets and filters by the given tags. In order to get a running droplet from your droplet stack you execute this:\n\n```sh\ngetserv digitalocean tag1,tag2\n```\n\nTo authenticate yourself you can use either a cli argument or a environemt variable:\n\n```sh\ngetserv digitalocean \\\n  --digitalocean-access-token XXXXXXXXXXX \\\n  tag1,tag2\n```\n\nOr to use the environment varible:\n```sh\nexport DIGITALOCEAN_ACCESS_TOKEN=XXXXXXXX\ngetserv digitalocean tag1,tag2\n```\n\n> If everything is configured properly you should receive a single IP based on the availability of your droplets\n\n## License\nSee the [LICENSE](./LICENSE) file for license rights and limitations (MIT).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davideperozzi/getserv", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "getserv", "package_url": "https://pypi.org/project/getserv/", "platform": "", "project_url": "https://pypi.org/project/getserv/", "project_urls": {"Homepage": "https://github.com/davideperozzi/getserv"}, "release_url": "https://pypi.org/project/getserv/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Retrieve a stable server to deploy", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>getserv</h1>\n<p><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa1125373129f53e19daa89b620f0ee423e38818/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6461766964657065726f7a7a692f676574736572762f2535424465706c6f792535442532304275696c64253230616e642532306465706c6f793f7374796c653d666c61742d737175617265\">\n<a href=\"./LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ad9a1b6e8c7bb333194505678b1295249f6c296/68747470733a2f2f666c61742e62616467656e2e6e65742f62616467652f6c6963656e73652f4d49542f626c7565\"></a></p>\n<p>This tool is used to retrieve stable servers from various services.</p>\n<h2>Usage</h2>\n<p>The package is uploaded to <a href=\"https://pypi.org/project/getserv/\" rel=\"nofollow\">pypi.org</a>. In order to install the package you should use pip:</p>\n<pre><code>pip install getserv\n</code></pre>\n<blockquote>\n<p>python &gt;= 3.6 is required</p>\n</blockquote>\n<h2>Basic usage</h2>\n<p>Basically the driver is responsible for delivering the ips to the main program. The main program will just scan all the ips received from the driver and checks whether a service on a given port is available:</p>\n<pre>getserv <span class=\"o\">[</span>...args<span class=\"o\">]</span> <span class=\"o\">{</span>driver_name<span class=\"o\">}</span> <span class=\"o\">[</span>...args<span class=\"o\">]</span>\n</pre>\n<h3>Changing the port to scan</h3>\n<p>The default port is <code>22</code>. You may change it with the <code>--test-port</code> (<code>-p</code>) option.</p>\n<h3>Listing all IPs</h3>\n<p>The default beheavior is to only return one address. You can list all available server IPs by adding the <code>--list-all</code> (<code>-a</code>) option.</p>\n<h2>The DigitalOcean driver</h2>\n<p>The digitalocean driver is used to filter droplets by multiple tags. Since the <code>doctl</code> can only filter by single tags, the driver will fallback to the REST API. It'll get information for the requested droplets and filters by the given tags. In order to get a running droplet from your droplet stack you execute this:</p>\n<pre>getserv digitalocean tag1,tag2\n</pre>\n<p>To authenticate yourself you can use either a cli argument or a environemt variable:</p>\n<pre>getserv digitalocean <span class=\"se\">\\</span>\n  --digitalocean-access-token XXXXXXXXXXX <span class=\"se\">\\</span>\n  tag1,tag2\n</pre>\n<p>Or to use the environment varible:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">DIGITALOCEAN_ACCESS_TOKEN</span><span class=\"o\">=</span>XXXXXXXX\ngetserv digitalocean tag1,tag2\n</pre>\n<blockquote>\n<p>If everything is configured properly you should receive a single IP based on the availability of your droplets</p>\n</blockquote>\n<h2>License</h2>\n<p>See the <a href=\"./LICENSE\" rel=\"nofollow\">LICENSE</a> file for license rights and limitations (MIT).</p>\n\n          </div>"}, "last_serial": 6351756, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "6fa87334e7df618b2cc0cab0d0f54c2e", "sha256": "7f7d37152035198b5b5ddf028f18b1eb9d96cf22b0f6954715055afca5ac11a6"}, "downloads": -1, "filename": "getserv-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6fa87334e7df618b2cc0cab0d0f54c2e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4920, "upload_time": "2019-12-23T16:58:58", "upload_time_iso_8601": "2019-12-23T16:58:58.127147Z", "url": "https://files.pythonhosted.org/packages/ea/33/def0603438a61ded79cde48bd72a098276da18548ea99e84ff7dd625e778/getserv-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02494bc548f061641cf61aec09d6b5aa", "sha256": "40a4d129f0b1a7a18d0c06656ef0bae681fb7e7939b680c3678f34a1b331f007"}, "downloads": -1, "filename": "getserv-0.0.2.tar.gz", "has_sig": false, "md5_digest": "02494bc548f061641cf61aec09d6b5aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2745, "upload_time": "2019-12-23T16:58:59", "upload_time_iso_8601": "2019-12-23T16:58:59.322453Z", "url": "https://files.pythonhosted.org/packages/e4/78/bb9e3443c60e3e2cbaf1afbdfe77d2003eab46e965dbfc6841934cdc0a1c/getserv-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "76fbf34280c813a93c0a4b02e3957efd", "sha256": "482914cdbaa8100538cc962a81d69340a51fdf89151cabdd4caa82a750903504"}, "downloads": -1, "filename": "getserv-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "76fbf34280c813a93c0a4b02e3957efd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4976, "upload_time": "2019-12-23T17:18:25", "upload_time_iso_8601": "2019-12-23T17:18:25.246260Z", "url": "https://files.pythonhosted.org/packages/7b/1e/24b2983eb8ac98ffa6e19634cf404e5b31b27d32266a2193b289c55d25a0/getserv-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6073d0ed0ece88e8ca98ad6a9711542", "sha256": "d250de7d4f9d7479754538593e7f012afb06bd21272ad7c097eb9f66d0160302"}, "downloads": -1, "filename": "getserv-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d6073d0ed0ece88e8ca98ad6a9711542", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2853, "upload_time": "2019-12-23T17:18:26", "upload_time_iso_8601": "2019-12-23T17:18:26.218324Z", "url": "https://files.pythonhosted.org/packages/4f/89/d4cdcd6478aaa43cd1bfe421f468107c07a4ba62bf4daef2ca13d96876f8/getserv-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "bd4380c4366c4f570d1fef1479f84cb5", "sha256": "579e781931e0426212544240d34378639c66ebdee1ecfc93fe7d511f411c944e"}, "downloads": -1, "filename": "getserv-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bd4380c4366c4f570d1fef1479f84cb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5976, "upload_time": "2019-12-23T17:57:53", "upload_time_iso_8601": "2019-12-23T17:57:53.909859Z", "url": "https://files.pythonhosted.org/packages/20/ae/b24d1937cdbbcc9b257f5cbeac90afb4f4cececf870a8a64b6579fe58b77/getserv-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ab92cd2f855e8db6d0084c6fdaf1090", "sha256": "cd5d4086dccb798caba8052f60e8a4ed2caf7ef3b402b05427125fea2479f4a9"}, "downloads": -1, "filename": "getserv-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0ab92cd2f855e8db6d0084c6fdaf1090", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3936, "upload_time": "2019-12-23T17:57:55", "upload_time_iso_8601": "2019-12-23T17:57:55.534617Z", "url": "https://files.pythonhosted.org/packages/d5/80/c79968deaa6850af0f67ce310983a767d2b0ebe140a7725842ec00b3c196/getserv-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd4380c4366c4f570d1fef1479f84cb5", "sha256": "579e781931e0426212544240d34378639c66ebdee1ecfc93fe7d511f411c944e"}, "downloads": -1, "filename": "getserv-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bd4380c4366c4f570d1fef1479f84cb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5976, "upload_time": "2019-12-23T17:57:53", "upload_time_iso_8601": "2019-12-23T17:57:53.909859Z", "url": "https://files.pythonhosted.org/packages/20/ae/b24d1937cdbbcc9b257f5cbeac90afb4f4cececf870a8a64b6579fe58b77/getserv-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ab92cd2f855e8db6d0084c6fdaf1090", "sha256": "cd5d4086dccb798caba8052f60e8a4ed2caf7ef3b402b05427125fea2479f4a9"}, "downloads": -1, "filename": "getserv-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0ab92cd2f855e8db6d0084c6fdaf1090", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3936, "upload_time": "2019-12-23T17:57:55", "upload_time_iso_8601": "2019-12-23T17:57:55.534617Z", "url": "https://files.pythonhosted.org/packages/d5/80/c79968deaa6850af0f67ce310983a767d2b0ebe140a7725842ec00b3c196/getserv-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:43 2020"}