{"info": {"author": "Martin Kaberg", "author_email": "martin.kaberg@nordcloud.com", "bugtrack_url": null, "classifiers": [], "description": "# README #\n\n\n\n### What is this repository for? ###\n\n* To setup datadog monitoring via cloudformation\n\n### What does it do? ###\n\nIt setups a lambda function that communicate with the monitors resource\non the datadog api\n\nhttps://docs.datadoghq.com/api/#monitors\n\nThe lambda is invoked via cloudformation custom resource. This repo\nsupplies custom resource classes for all the 4 Monitor types.\nCustom resources have the same exact data structure as the DD api\n\nIt uses https://bitbucket.org/nordcloud/cfn_encrypt to securely store\ndatadog api credentials\n\n### How do I get set up? ###\n\n* clone this repo\n~~~~\ngit clone git@github.com.org:nordcloud/cfn-datadog.git\n~~~~\n\n* Build the lambda package\n~~~~\nchmod +x create_zip.sh && ./create_zip.sh\n~~~~\n\n* upload `datadog_lambda.zip` to an s3 bucket\n* get your api and application keys from Datadog\n* generate the lambda template\n~~~~\npython lambda-template.py > /tmp/lambda.template\n~~~~\n* If you have not already set up your encrypt stack do that now ( https://bitbucket.org/nordcloud/cfn_encrypt )\n* create a stack from your `lambda.template` file\n* The lambda is now set up and ready to use.\n\n\n### How do i use it to monitor resources created in other stacks? ###\n\nInstall the cfn_datadog library\n~~~~\npip install cfn-encrypt\n~~~~\n\nImport the custom resource classes you want to use\n~~~~\nfrom cfn_datadog import (\n    MetricAlert, MetricAlertOptions, Composite, CompositeOptions,\n    EventAlert, EvenAlertOptions, ServiceCheck, ServiceCheckOptions\n)\n~~~~\n\nAdd a parameter so that you can reference your lambda stack\n~~~~\ndatadog_lambda_stackname = t.add_parameter(Parameter(\n    \"DatadogLambdaStackname\",\n    Type=\"String\",\n    Description=\"Datadog lambda stackname\",\n))\n~~~~\n\nAdd the custom resource to the template: For documentation see datadog api\n~~~~\nt.add_resource(MetricAlert(\n    'Alert2',\n    query=Join(\"\",[\"avg(last_1h):avg:system.net.bytes_rcvd{host:\",Ref(my_instance),\"} < 40\"]),\n    ServiceToken=ImportValue(\n    Sub(\"${DatadogLambdaStackname}-LambdaArn\")),\n    name=\"Bytes received on mytesthost\",\n    message=\"Some Message @MyDDHandle\",\n    tags=[\"tag1\", \"tag2\"],\n    options=MetricAlertOptions(\n        notify_no_data= True,\n        no_data_timeframe=50\n    )\n))\n~~~~\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nordcloud/cfn-datadog", "keywords": "", "license": "Apache Common 2.0", "maintainer": "", "maintainer_email": "", "name": "cfn-datadog", "package_url": "https://pypi.org/project/cfn-datadog/", "platform": "", "project_url": "https://pypi.org/project/cfn-datadog/", "project_urls": {"Homepage": "https://github.com/nordcloud/cfn-datadog"}, "release_url": "https://pypi.org/project/cfn-datadog/0.0.12/", "requires_dist": ["awacs (>=0.7.0)", "boto3 (>=1.4.6)", "cfn-encrypt (>=0.0.10)", "cfn-response (>=0.0.4)", "datadog (>=0.16.0)", "troposphere (>=1.9.5)"], "requires_python": "", "summary": "Lambda cloudformation custom resource that sets up datadog alerts", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            # README #<br><br><br><br>### What is this repository for? ###<br><br>* To setup datadog monitoring via cloudformation<br><br>### What does it do? ###<br><br>It setups a lambda function that communicate with the monitors resource<br>on the datadog api<br><br>https://docs.datadoghq.com/api/#monitors<br><br>The lambda is invoked via cloudformation custom resource. This repo<br>supplies custom resource classes for all the 4 Monitor types.<br>Custom resources have the same exact data structure as the DD api<br><br>It uses https://bitbucket.org/nordcloud/cfn_encrypt to securely store<br>datadog api credentials<br><br>### How do I get set up? ###<br><br>* clone this repo<br>~~~~<br>git clone git@github.com.org:nordcloud/cfn-datadog.git<br>~~~~<br><br>* Build the lambda package<br>~~~~<br>chmod +x create_zip.sh &amp;&amp; ./create_zip.sh<br>~~~~<br><br>* upload `datadog_lambda.zip` to an s3 bucket<br>* get your api and application keys from Datadog<br>* generate the lambda template<br>~~~~<br>python lambda-template.py &gt; /tmp/lambda.template<br>~~~~<br>* If you have not already set up your encrypt stack do that now ( https://bitbucket.org/nordcloud/cfn_encrypt )<br>* create a stack from your `lambda.template` file<br>* The lambda is now set up and ready to use.<br><br><br>### How do i use it to monitor resources created in other stacks? ###<br><br>Install the cfn_datadog library<br>~~~~<br>pip install cfn-encrypt<br>~~~~<br><br>Import the custom resource classes you want to use<br>~~~~<br>from cfn_datadog import (<br>    MetricAlert, MetricAlertOptions, Composite, CompositeOptions,<br>    EventAlert, EvenAlertOptions, ServiceCheck, ServiceCheckOptions<br>)<br>~~~~<br><br>Add a parameter so that you can reference your lambda stack<br>~~~~<br>datadog_lambda_stackname = t.add_parameter(Parameter(<br>    \"DatadogLambdaStackname\",<br>    Type=\"String\",<br>    Description=\"Datadog lambda stackname\",<br>))<br>~~~~<br><br>Add the custom resource to the template: For documentation see datadog api<br>~~~~<br>t.add_resource(MetricAlert(<br>    'Alert2',<br>    query=Join(\"\",[\"avg(last_1h):avg:system.net.bytes_rcvd{host:\",Ref(my_instance),\"} &lt; 40\"]),<br>    ServiceToken=ImportValue(<br>    Sub(\"${DatadogLambdaStackname}-LambdaArn\")),<br>    name=\"Bytes received on mytesthost\",<br>    message=\"Some Message @MyDDHandle\",<br>    tags=[\"tag1\", \"tag2\"],<br>    options=MetricAlertOptions(<br>        notify_no_data= True,<br>        no_data_timeframe=50<br>    )<br>))<br>~~~~<br><br><br><br>\n          </div>"}, "last_serial": 3537918, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "aa2fe53bfb0e0a717814d67f7c2b6551", "sha256": "b16b96f8f8f7cd2d7729209514ccc10ce31272ca773f016ed082a65250005e53"}, "downloads": -1, "filename": "cfn_datadog-0.0.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa2fe53bfb0e0a717814d67f7c2b6551", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4535, "upload_time": "2018-01-15T14:50:48", "upload_time_iso_8601": "2018-01-15T14:50:48.559286Z", "url": "https://files.pythonhosted.org/packages/0a/23/bd64924487415502a9ea5c635a669989c2543f0c15714de21802bfe70dc2/cfn_datadog-0.0.10-py2.py3-none-any.whl", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "fb3aa9c0815da6cce68dd02bd8310236", "sha256": "bdcf0f710405c2302ccbad8a671d59b28480b84e2c29ee9a93362e9d08ed624a"}, "downloads": -1, "filename": "cfn_datadog-0.0.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb3aa9c0815da6cce68dd02bd8310236", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8071, "upload_time": "2018-01-16T13:40:48", "upload_time_iso_8601": "2018-01-16T13:40:48.136838Z", "url": "https://files.pythonhosted.org/packages/ea/38/6f6e05d00d27e596ae4b1669b0e2129785b5c9832dc96e41f60343023a4d/cfn_datadog-0.0.11-py2.py3-none-any.whl", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "11a794bdebe3260dc9a93a373f59db71", "sha256": "eccb26f028f3b3179146d947c792dc286f6ac841b2c6fc27f74d3ec7492f6c98"}, "downloads": -1, "filename": "cfn_datadog-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11a794bdebe3260dc9a93a373f59db71", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8070, "upload_time": "2018-01-31T10:14:30", "upload_time_iso_8601": "2018-01-31T10:14:30.924164Z", "url": "https://files.pythonhosted.org/packages/81/6b/7ea054a635617034530f22bcce11ba3e61914807d37ba8242ca9379403a2/cfn_datadog-0.0.12-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11a794bdebe3260dc9a93a373f59db71", "sha256": "eccb26f028f3b3179146d947c792dc286f6ac841b2c6fc27f74d3ec7492f6c98"}, "downloads": -1, "filename": "cfn_datadog-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11a794bdebe3260dc9a93a373f59db71", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8070, "upload_time": "2018-01-31T10:14:30", "upload_time_iso_8601": "2018-01-31T10:14:30.924164Z", "url": "https://files.pythonhosted.org/packages/81/6b/7ea054a635617034530f22bcce11ba3e61914807d37ba8242ca9379403a2/cfn_datadog-0.0.12-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:34:38 2020"}