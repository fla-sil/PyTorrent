{"info": {"author": "Luiz Tauffer and Ben Dichter", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# axel-lab-to-nwb\nNWB conversion scripts and tutorials.\nA collaboration with [Axel Lab](https://www.axellab.columbia.edu/).\n\n# Install\nTo clone the repository and set up a conda environment, do:\n```\n$ git clone https://github.com/ben-dichter-consulting/axel-lab-to-nwb.git\n$ conda env create -f axel-lab-to-nwb/make_env.yml\n$ source activate convert_to_nwb\n```\n\nAlternatively, to install directly in an existing environment:\n```\n$ pip install axel-lab-to-nwb\n```\n\n# Use\nAfter activating the correct environment, the conversion function can be used in different forms:\n\n**1. Imported and run from a python script:** <br/>\nHere's an example: we'll grab the data from the same experiment but stored in different `.npz` files and save it to a single `.nwb` file.\n```python\nfrom axel_lab_to_nwb import conversion_function\n\nsource_paths = {}\nsource_paths['processed data'] = {'type': 'file', 'path': PATH_TO_FILE}\nsource_paths['sparse matrix'] = {'type': 'file', 'path': PATH_TO_FILE}\nsource_paths['ref image'] = {'type': 'file', 'path': PATH_TO_FILE}\n\nf_nwb = 'fly2.nwb'\n\nmetafile = 'metafile.yml'\n\nconversion_function(source_paths=source_paths,\n                    f_nwb=f_nwb,\n                    metafile=metafile,\n                    plot_rois=False)\n```\n<br/>\n\n**2. Command line:** <br/>\nSimilarly, the conversion function can be called from the command line in terminal:\n```\n$ python conversion_module.py [processed_data_file] [sparse_matrix_file] [ref_image_file] \n  [output_file] [metadata_file]\n```\n<br/>\n\n**3. Graphical User Interface:** <br/>\nTo use the GUI, just run the auxiliary function `nwb_gui.py` from terminal:\n```\n$ python nwb_gui.py\n```\n![](/media/gui.PNG)\n<br/>\n\n**4. Tutorial:** <br/>\nAt [tutorials](https://github.com/ben-dichter-consulting/axel-lab-to-nwb/tree/master/tutorials) you can also find Jupyter notebooks with the step-by-step process of conversion.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "axel-lab-to-nwb", "package_url": "https://pypi.org/project/axel-lab-to-nwb/", "platform": "", "project_url": "https://pypi.org/project/axel-lab-to-nwb/", "project_urls": null, "release_url": "https://pypi.org/project/axel-lab-to-nwb/0.1.0/", "requires_dist": ["matplotlib", "cycler", "scipy", "numpy", "jupyter", "h5py", "pynwb", "ndx-grayscalevolume", "pyyaml", "skimage", "seaborn"], "requires_python": "", "summary": "NWB conversion scripts and tutorials.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>axel-lab-to-nwb</h1>\n<p>NWB conversion scripts and tutorials.\nA collaboration with <a href=\"https://www.axellab.columbia.edu/\" rel=\"nofollow\">Axel Lab</a>.</p>\n<h1>Install</h1>\n<p>To clone the repository and set up a conda environment, do:</p>\n<pre><code>$ git clone https://github.com/ben-dichter-consulting/axel-lab-to-nwb.git\n$ conda env create -f axel-lab-to-nwb/make_env.yml\n$ source activate convert_to_nwb\n</code></pre>\n<p>Alternatively, to install directly in an existing environment:</p>\n<pre><code>$ pip install axel-lab-to-nwb\n</code></pre>\n<h1>Use</h1>\n<p>After activating the correct environment, the conversion function can be used in different forms:</p>\n<p><strong>1. Imported and run from a python script:</strong> <br>\nHere's an example: we'll grab the data from the same experiment but stored in different <code>.npz</code> files and save it to a single <code>.nwb</code> file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">axel_lab_to_nwb</span> <span class=\"kn\">import</span> <span class=\"n\">conversion_function</span>\n\n<span class=\"n\">source_paths</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'processed data'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'file'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"n\">PATH_TO_FILE</span><span class=\"p\">}</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'sparse matrix'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'file'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"n\">PATH_TO_FILE</span><span class=\"p\">}</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'ref image'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'file'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"n\">PATH_TO_FILE</span><span class=\"p\">}</span>\n\n<span class=\"n\">f_nwb</span> <span class=\"o\">=</span> <span class=\"s1\">'fly2.nwb'</span>\n\n<span class=\"n\">metafile</span> <span class=\"o\">=</span> <span class=\"s1\">'metafile.yml'</span>\n\n<span class=\"n\">conversion_function</span><span class=\"p\">(</span><span class=\"n\">source_paths</span><span class=\"o\">=</span><span class=\"n\">source_paths</span><span class=\"p\">,</span>\n                    <span class=\"n\">f_nwb</span><span class=\"o\">=</span><span class=\"n\">f_nwb</span><span class=\"p\">,</span>\n                    <span class=\"n\">metafile</span><span class=\"o\">=</span><span class=\"n\">metafile</span><span class=\"p\">,</span>\n                    <span class=\"n\">plot_rois</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<br>\n<p><strong>2. Command line:</strong> <br>\nSimilarly, the conversion function can be called from the command line in terminal:</p>\n<pre><code>$ python conversion_module.py [processed_data_file] [sparse_matrix_file] [ref_image_file] \n  [output_file] [metadata_file]\n</code></pre>\n<br>\n<p><strong>3. Graphical User Interface:</strong> <br>\nTo use the GUI, just run the auxiliary function <code>nwb_gui.py</code> from terminal:</p>\n<pre><code>$ python nwb_gui.py\n</code></pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/599394aa35885fdb39e8d48bb40178d4c8aaf11f/2f6d656469612f6775692e504e47\">\n<br></p>\n<p><strong>4. Tutorial:</strong> <br>\nAt <a href=\"https://github.com/ben-dichter-consulting/axel-lab-to-nwb/tree/master/tutorials\" rel=\"nofollow\">tutorials</a> you can also find Jupyter notebooks with the step-by-step process of conversion.</p>\n\n          </div>"}, "last_serial": 6282685, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "31fa6c505276d3effa82a08274a0eb8b", "sha256": "63e0833ad8899dc9a600d00a547a686fadd376a3ad0a20c202e1cfc5c67c89ff"}, "downloads": -1, "filename": "axel_lab_to_nwb-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "31fa6c505276d3effa82a08274a0eb8b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5847, "upload_time": "2019-08-27T19:49:19", "upload_time_iso_8601": "2019-08-27T19:49:19.805256Z", "url": "https://files.pythonhosted.org/packages/31/ab/4f46005c73ba1ba045b5aaf3d634dfd1b1a7cb9edfd9bc2ab2873d0f98a8/axel_lab_to_nwb-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ce679655f674284c7a1698e04771207", "sha256": "e07fda384ef1ce22bbaa44bf1aaba1f29122e45b132968a085d7b4a540b84e25"}, "downloads": -1, "filename": "axel_lab_to_nwb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7ce679655f674284c7a1698e04771207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10730, "upload_time": "2019-08-27T19:49:22", "upload_time_iso_8601": "2019-08-27T19:49:22.112668Z", "url": "https://files.pythonhosted.org/packages/2f/16/36593ae9b259b875963bf4e441f0d3ae51129e5339f6fc6130f746b9e15e/axel_lab_to_nwb-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "742e7514bbc6e588f8ca7d51a385196f", "sha256": "f1181d3baebfc877d2b8204a95d94b9dfbcdd5b1543fd113d9a43e5d693ee70b"}, "downloads": -1, "filename": "axel_lab_to_nwb-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "742e7514bbc6e588f8ca7d51a385196f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9418, "upload_time": "2019-12-12T06:00:24", "upload_time_iso_8601": "2019-12-12T06:00:24.344850Z", "url": "https://files.pythonhosted.org/packages/12/a8/495dfc58b9a6d2bed9b1b28c48026ee1abf93ef711184f29c10b59ce59e5/axel_lab_to_nwb-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e7e926555a57c3e294046587518f73e", "sha256": "b99ba40049b4b88cfc8f66c8465e9a638c18c2768f2e13bd500d5e8a4839080a"}, "downloads": -1, "filename": "axel_lab_to_nwb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1e7e926555a57c3e294046587518f73e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10310, "upload_time": "2019-12-12T06:00:27", "upload_time_iso_8601": "2019-12-12T06:00:27.119397Z", "url": "https://files.pythonhosted.org/packages/a0/39/47805e3d8f41f77661fb7dfe806516c6a4f213e1bcd034a1974bab5255b3/axel_lab_to_nwb-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "742e7514bbc6e588f8ca7d51a385196f", "sha256": "f1181d3baebfc877d2b8204a95d94b9dfbcdd5b1543fd113d9a43e5d693ee70b"}, "downloads": -1, "filename": "axel_lab_to_nwb-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "742e7514bbc6e588f8ca7d51a385196f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9418, "upload_time": "2019-12-12T06:00:24", "upload_time_iso_8601": "2019-12-12T06:00:24.344850Z", "url": "https://files.pythonhosted.org/packages/12/a8/495dfc58b9a6d2bed9b1b28c48026ee1abf93ef711184f29c10b59ce59e5/axel_lab_to_nwb-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e7e926555a57c3e294046587518f73e", "sha256": "b99ba40049b4b88cfc8f66c8465e9a638c18c2768f2e13bd500d5e8a4839080a"}, "downloads": -1, "filename": "axel_lab_to_nwb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1e7e926555a57c3e294046587518f73e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10310, "upload_time": "2019-12-12T06:00:27", "upload_time_iso_8601": "2019-12-12T06:00:27.119397Z", "url": "https://files.pythonhosted.org/packages/a0/39/47805e3d8f41f77661fb7dfe806516c6a4f213e1bcd034a1974bab5255b3/axel_lab_to_nwb-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:31 2020"}