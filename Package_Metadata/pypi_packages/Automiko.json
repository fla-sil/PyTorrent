{"info": {"author": "gregorydisney", "author_email": "gregory.disney@owasp.org", "bugtrack_url": null, "classifiers": [], "description": "automiko\r\nAutomation Engine written in python with remote execution and redis backend\r\n\r\nsetup\r\npip install redis paramiko scp\r\n\r\ncd automiko\r\n\r\npython setup.py build\r\n\r\npython setup.py install\r\n\r\nRunning\r\nSample Key Execution\r\nimport Automiko.Execute as Execute\r\n\r\ndb_host = \"localhost\"\r\n\r\ndb_port = 6379\r\n\r\ndb = 0\r\n\r\nlogger = \"logger.log\"\r\n\r\nresults = \"results.log\"\r\n\r\nExecute.key_cmd(key=\"py_search\", cmd=\"ls\", host=db_host, port=db_port, db=db)\r\n\r\nExecute.exec_key(key=\"py_search\", test_name=\"Test Key Exec\", result_query=\".py\", test_detail=\"DB Execute Key and locate verify .py files exist\", log_file=logger, host=db_host, port=db_port, db=db)\r\n\r\nExecuting a file\r\nExecute.exec_file(script=\"script.sh\", test_name=\"Test File Exec\", result_query=\"open port 8099\", test_detail=\"verify port 8099 is open\", log_file=logger)\r\n\r\nExecuting a script or key remotely\r\nExecute.remote_exec_file(script=\"script.sh\", host=\"host ip\", port=22, user=\"username\", password=\"password\", test_name=\"Remote port 22 verification\", result_query=\"open port 22\", test_detail=\"Remote execute script and verify port 22 is open\", log_file=logger)\r\n\r\nExecute.remote_exec_key(key=\"py_search\", host=\"host ip\", port=22, user=\"username\", password=\"password\", test_name=\"Remote key execution verifying python script exist\", result_query=\".py\", test_detail=\"Verify py script exist\", log_file=logger, db_host=db_host, db_port=db_port, db=db)\r\n\r\nScheduling Functions\r\nExecute.schedule_exec_key(key=\"py_search\", test_name=\"Remote key execution verifying python script exist\", result_query=\".py\", test_detail=\"Verify py script exist\", exec_time=\"15:00\", log_file=logger, host=db_host, port=db_port, db=db)\r\n\r\nExecute.schedule_exec_file(script=\"script.sh\", test_name=\"Port verification via nmap\", result_query=\"open port 8099\", test_detail=\"Verify port 8099 is open\", exec_time=\"Tue\", log_file=logger)\r\n\r\nExecute.schedule_remote_exec_file(script=\"script.sh\", host=\"host ip\", port=22, user=\"username\", password=\"password\", test_name=\"Port verification via nmap\", result_query=\"open port 22\", test_detail=\"Verify port 22 is open\", exec_time=\"Tue\", log_file=logger)\r\n\r\nExecute.schedule_remote_exec_key(key=\"py_search\", host=\"host ip\", port=22, user=\"username\", password=\"password\", test_name=\"Remote key execution on schedule\", result_query=\".py\", test_detail=\"Searching for python script on remote host\", exec_time=\"19:00\", db_host=db_host, db_port=db_port, db=db, log_file=logger)\r\n\r\nCaculate Results\r\nExecute.tally_counter(logfile=logger, resultfile=results, test_pass=True, test_fail=True)", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/gdisneyleugers/automiko", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "Automation", "license": "gpl", "maintainer": "", "maintainer_email": "", "name": "Automiko", "package_url": "https://pypi.org/project/Automiko/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Automiko/", "project_urls": {"Download": "https://github.com/gdisneyleugers/automiko", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/Automiko/1.0/", "requires_dist": null, "requires_python": null, "summary": "Automation Engine with Remote Execution", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>automiko\nAutomation Engine written in python with remote execution and redis backend</p>\n<p>setup\npip install redis paramiko scp</p>\n<p>cd automiko</p>\n<p>python setup.py build</p>\n<p>python setup.py install</p>\n<p>Running\nSample Key Execution\nimport Automiko.Execute as Execute</p>\n<p>db_host = \u201clocalhost\u201d</p>\n<p>db_port = 6379</p>\n<p>db = 0</p>\n<p>logger = \u201clogger.log\u201d</p>\n<p>results = \u201cresults.log\u201d</p>\n<p>Execute.key_cmd(key=\u201dpy_search\u201d, cmd=\u201dls\u201d, host=db_host, port=db_port, db=db)</p>\n<p>Execute.exec_key(key=\u201dpy_search\u201d, test_name=\u201dTest Key Exec\u201d, result_query=\u201d.py\u201d, test_detail=\u201dDB Execute Key and locate verify .py files exist\u201d, log_file=logger, host=db_host, port=db_port, db=db)</p>\n<p>Executing a file\nExecute.exec_file(script=\u201dscript.sh\u201d, test_name=\u201dTest File Exec\u201d, result_query=\u201dopen port 8099\u201d, test_detail=\u201dverify port 8099 is open\u201d, log_file=logger)</p>\n<p>Executing a script or key remotely\nExecute.remote_exec_file(script=\u201dscript.sh\u201d, host=\u201dhost ip\u201d, port=22, user=\u201dusername\u201d, password=\u201dpassword\u201d, test_name=\u201dRemote port 22 verification\u201d, result_query=\u201dopen port 22\u201d, test_detail=\u201dRemote execute script and verify port 22 is open\u201d, log_file=logger)</p>\n<p>Execute.remote_exec_key(key=\u201dpy_search\u201d, host=\u201dhost ip\u201d, port=22, user=\u201dusername\u201d, password=\u201dpassword\u201d, test_name=\u201dRemote key execution verifying python script exist\u201d, result_query=\u201d.py\u201d, test_detail=\u201dVerify py script exist\u201d, log_file=logger, db_host=db_host, db_port=db_port, db=db)</p>\n<p>Scheduling Functions\nExecute.schedule_exec_key(key=\u201dpy_search\u201d, test_name=\u201dRemote key execution verifying python script exist\u201d, result_query=\u201d.py\u201d, test_detail=\u201dVerify py script exist\u201d, exec_time=\u201d15:00\u201d, log_file=logger, host=db_host, port=db_port, db=db)</p>\n<p>Execute.schedule_exec_file(script=\u201dscript.sh\u201d, test_name=\u201dPort verification via nmap\u201d, result_query=\u201dopen port 8099\u201d, test_detail=\u201dVerify port 8099 is open\u201d, exec_time=\u201dTue\u201d, log_file=logger)</p>\n<p>Execute.schedule_remote_exec_file(script=\u201dscript.sh\u201d, host=\u201dhost ip\u201d, port=22, user=\u201dusername\u201d, password=\u201dpassword\u201d, test_name=\u201dPort verification via nmap\u201d, result_query=\u201dopen port 22\u201d, test_detail=\u201dVerify port 22 is open\u201d, exec_time=\u201dTue\u201d, log_file=logger)</p>\n<p>Execute.schedule_remote_exec_key(key=\u201dpy_search\u201d, host=\u201dhost ip\u201d, port=22, user=\u201dusername\u201d, password=\u201dpassword\u201d, test_name=\u201dRemote key execution on schedule\u201d, result_query=\u201d.py\u201d, test_detail=\u201dSearching for python script on remote host\u201d, exec_time=\u201d19:00\u201d, db_host=db_host, db_port=db_port, db=db, log_file=logger)</p>\n<p>Caculate Results\nExecute.tally_counter(logfile=logger, resultfile=results, test_pass=True, test_fail=True)</p>\n\n          </div>"}, "last_serial": 1203677, "releases": {"1.0": []}, "urls": [], "timestamp": "Thu May  7 18:16:13 2020"}