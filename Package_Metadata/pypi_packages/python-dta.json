{"info": {"author": "Leuchter Open Source Solutions AG", "author_email": "tryton@leuchterag.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "DTA Generator\n=============\n\nGenerator library for Swiss DTA (\"Datentr\u00e4geraustauschverfahren\") electronic\npayment records.\n\nFeatures\n--------\n\n* Support for transaction types 826, 827, 836 and 890\n* Implements various integrity checks according to record description manual\n* Supports decimal and date input values\n\nGetting started\n---------------\n\nGenerate a DTA file containing one transaction of type 826::\n\n  from datetime import date\n  from decimal import Decimal\n\n  from dta import DTA\n  from dta.records import DTAHeader, DTARecord826, DTARecord890\n\n  dta = DTA()\n\n  header = DTAHeader()\n  header.sequence_nr = 1\n  header.sender_id = 'ABCDE'\n  header.client_clearing_nr = '248'\n  header.creation_date = date(2013, 4, 23)\n  header.processing_date = date(2013, 5, 10)\n\n  record = DTARecord826(header)\n  record.reference = '002013-0058'\n  record.liability_account = '248 110079.01Z'\n  record.currency = 'CHF'\n  record.amount = Decimal('114.35')\n  record.client_address1 = 'LEUCHTER OPEN SOURCE SOLUTIONS'\n  record.client_address3 = 'WINKELRIEDSTRASSE 45'\n  record.client_address4 = '6003 LUZERN'\n  record.recipient_account = '010723327'\n  record.recipient_address1 = 'TESTLIEFERANT'\n  record.recipient_address3 = 'TESTSTRASSE 10'\n  record.recipient_address4 = '6005 LUZERN'\n  record.esr_reference = '182171015574297'\n  dta.records.append(record)\n\n  header = DTAHeader()\n  header.sequence_nr = 2\n  header.sender_id = 'ABCDE'\n  header.client_clearing_nr = '248'\n  header.creation_date = date(2013, 4, 23)\n\n  record = DTARecord890(header)\n  record.amount = Decimal('114.35')\n  dta.records.append(record)\n\n  with open('demo.leu', 'w') as f:\n      f.write(dta.generate())", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/loss/python-dta", "keywords": null, "license": "GPL-3", "maintainer": null, "maintainer_email": null, "name": "python-dta", "package_url": "https://pypi.org/project/python-dta/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-dta/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/loss/python-dta"}, "release_url": "https://pypi.org/project/python-dta/0.2/", "requires_dist": null, "requires_python": null, "summary": "Swiss DTA payment record generator library", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generator library for Swiss DTA (\u201cDatentr\u00e4geraustauschverfahren\u201d) electronic\npayment records.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Support for transaction types 826, 827, 836 and 890</li>\n<li>Implements various integrity checks according to record description manual</li>\n<li>Supports decimal and date input values</li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Generate a DTA file containing one transaction of type 826:</p>\n<pre>from datetime import date\nfrom decimal import Decimal\n\nfrom dta import DTA\nfrom dta.records import DTAHeader, DTARecord826, DTARecord890\n\ndta = DTA()\n\nheader = DTAHeader()\nheader.sequence_nr = 1\nheader.sender_id = 'ABCDE'\nheader.client_clearing_nr = '248'\nheader.creation_date = date(2013, 4, 23)\nheader.processing_date = date(2013, 5, 10)\n\nrecord = DTARecord826(header)\nrecord.reference = '002013-0058'\nrecord.liability_account = '248 110079.01Z'\nrecord.currency = 'CHF'\nrecord.amount = Decimal('114.35')\nrecord.client_address1 = 'LEUCHTER OPEN SOURCE SOLUTIONS'\nrecord.client_address3 = 'WINKELRIEDSTRASSE 45'\nrecord.client_address4 = '6003 LUZERN'\nrecord.recipient_account = '010723327'\nrecord.recipient_address1 = 'TESTLIEFERANT'\nrecord.recipient_address3 = 'TESTSTRASSE 10'\nrecord.recipient_address4 = '6005 LUZERN'\nrecord.esr_reference = '182171015574297'\ndta.records.append(record)\n\nheader = DTAHeader()\nheader.sequence_nr = 2\nheader.sender_id = 'ABCDE'\nheader.client_clearing_nr = '248'\nheader.creation_date = date(2013, 4, 23)\n\nrecord = DTARecord890(header)\nrecord.amount = Decimal('114.35')\ndta.records.append(record)\n\nwith open('demo.leu', 'w') as f:\n    f.write(dta.generate())\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1190509, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5be82a651c5354fcb724e2580e1493b7", "sha256": "5a59012213dcc2251c1f9a9f3a6667f14c12a084fd7ddb92c4d70ae7e23c79de"}, "downloads": -1, "filename": "python-dta-0.1.tar.gz", "has_sig": false, "md5_digest": "5be82a651c5354fcb724e2580e1493b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18733, "upload_time": "2014-06-23T09:03:58", "upload_time_iso_8601": "2014-06-23T09:03:58.418157Z", "url": "https://files.pythonhosted.org/packages/a5/a9/7bc594e46fca6fbcd504f492994ab2539ca3f90fcef13411c4605d5c9165/python-dta-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ec31cc5ebb3588fa49cbf8ca04b3d161", "sha256": "ba0b7364778d214d4a9a3afffe8b2b5113f7594772a44923010b9980a3b99fbc"}, "downloads": -1, "filename": "python-dta-0.2.tar.gz", "has_sig": false, "md5_digest": "ec31cc5ebb3588fa49cbf8ca04b3d161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18773, "upload_time": "2014-08-14T14:41:57", "upload_time_iso_8601": "2014-08-14T14:41:57.483131Z", "url": "https://files.pythonhosted.org/packages/3c/65/8fe26cb2d21bcdd04e427f42aa29d5c1667a252a357658707df32ed4bb57/python-dta-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec31cc5ebb3588fa49cbf8ca04b3d161", "sha256": "ba0b7364778d214d4a9a3afffe8b2b5113f7594772a44923010b9980a3b99fbc"}, "downloads": -1, "filename": "python-dta-0.2.tar.gz", "has_sig": false, "md5_digest": "ec31cc5ebb3588fa49cbf8ca04b3d161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18773, "upload_time": "2014-08-14T14:41:57", "upload_time_iso_8601": "2014-08-14T14:41:57.483131Z", "url": "https://files.pythonhosted.org/packages/3c/65/8fe26cb2d21bcdd04e427f42aa29d5c1667a252a357658707df32ed4bb57/python-dta-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:55 2020"}