{"info": {"author": "Santiago Balestrini-Robinson", "author_email": "sanbales@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Testing"], "description": "[![Build Status](https://travis-ci.org/sanbales/ipython-coverage.svg?branch=master)](https://travis-ci.org/sanbales/ipython-coverage)\n\n# IPython Coverage\nIntroduces `%coverage` and `%%coverage` magics to allow running\nof [coverage](https://github.com/nedbat/coveragepy)\nfrom a [Jupyter Notebook](https://github.com/jupyter/notebook).\n\nIt currently presents the coverage HTML report as an IFrame.\n\n# Installation\n```bash\npip install ipycoverage\n```\n\n# Usage\n\n## Load the extension\n```ipython\n%load_ext ipycov\n```\n\n## Use the magic\nIn a cell, you can run the cell magic like such:\n```ipython\n%%coverage\nfrom your_module import your_function  # or anything else you want to import\n\nyour_function()\n```\n\ntwine register dist/pad-on-left-1.0.0.tar.gz -r testpypi\n\nOr simply run the line magic:\n```ipython\n%coverage function_to_call()\n``` \n\n# Important Note\n> This is not a fully developed magic, and it is not stable yet.\n>\n> It has only been tested against:\n> * `coverage==4.5.2`\n> * `IPython==7.0.1`.\n> * `JupyterLab==0.35.1`\n\n## Missing Features / Future Work\n* Improve naming and instructions\n* Add more options; potentially dynamically load them from `coverage`\n* Add tests\n* Add examples\n* Add CI/CD\n* Submit to PyPI and Conda", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/ipython-coverage", "keywords": "testing coverage ipython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ipycov", "package_url": "https://pypi.org/project/ipycov/", "platform": "", "project_url": "https://pypi.org/project/ipycov/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/ipython-coverage"}, "release_url": "https://pypi.org/project/ipycov/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Coverage access via IPython", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/sanbales/ipython-coverage.svg?branch=master)](https://travis-ci.org/sanbales/ipython-coverage)<br><br># IPython Coverage<br>Introduces `%coverage` and `%%coverage` magics to allow running<br>of [coverage](https://github.com/nedbat/coveragepy)<br>from a [Jupyter Notebook](https://github.com/jupyter/notebook).<br><br>It currently presents the coverage HTML report as an IFrame.<br><br># Installation<br>```bash<br>pip install ipycoverage<br>```<br><br># Usage<br><br>## Load the extension<br>```ipython<br>%load_ext ipycov<br>```<br><br>## Use the magic<br>In a cell, you can run the cell magic like such:<br>```ipython<br>%%coverage<br>from your_module import your_function  # or anything else you want to import<br><br>your_function()<br>```<br><br>twine register dist/pad-on-left-1.0.0.tar.gz -r testpypi<br><br>Or simply run the line magic:<br>```ipython<br>%coverage function_to_call()<br>``` <br><br># Important Note<br>&gt; This is not a fully developed magic, and it is not stable yet.<br>&gt;<br>&gt; It has only been tested against:<br>&gt; * `coverage==4.5.2`<br>&gt; * `IPython==7.0.1`.<br>&gt; * `JupyterLab==0.35.1`<br><br>## Missing Features / Future Work<br>* Improve naming and instructions<br>* Add more options; potentially dynamically load them from `coverage`<br>* Add tests<br>* Add examples<br>* Add CI/CD<br>* Submit to PyPI and Conda\n          </div>"}, "last_serial": 4525565, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bc40ab1f1e0d6c9da89b8387cb3b8434", "sha256": "fb2ee3c40e69dfcb4a440f7bbb4f529bd3fbdf3e34fdbc5f84d3aa737211856e"}, "downloads": -1, "filename": "ipycov-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bc40ab1f1e0d6c9da89b8387cb3b8434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3623, "upload_time": "2018-11-25T08:39:23", "upload_time_iso_8601": "2018-11-25T08:39:23.445970Z", "url": "https://files.pythonhosted.org/packages/50/7a/2d4358579fd1b4997012f6c742d97cd358c7760b0aa36698a57adc5737df/ipycov-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc40ab1f1e0d6c9da89b8387cb3b8434", "sha256": "fb2ee3c40e69dfcb4a440f7bbb4f529bd3fbdf3e34fdbc5f84d3aa737211856e"}, "downloads": -1, "filename": "ipycov-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bc40ab1f1e0d6c9da89b8387cb3b8434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3623, "upload_time": "2018-11-25T08:39:23", "upload_time_iso_8601": "2018-11-25T08:39:23.445970Z", "url": "https://files.pythonhosted.org/packages/50/7a/2d4358579fd1b4997012f6c742d97cd358c7760b0aa36698a57adc5737df/ipycov-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:30 2020"}