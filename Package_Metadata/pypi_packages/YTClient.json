{"info": {"author": "Josh Lee", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# YTClient - A light weight YouTrack REST API Client for Python\nYTClient is a light weight HTTP client for interfacing with Jetbrain's YouTrack issue tracker via its REST API. This was based\nlightly off of the original [youtrack-rest-python-library](https://github.com/JetBrains/youtrack-rest-python-library), but \nunlike the original project YTClient was built to be Python 3 compatible and use [YouTrack's new REST API](https://www.jetbrains.com/help/youtrack/standalone/youtrack-rest-api-reference.html#youtrack-api-based-tools) \ninstead of the [old REST API](https://www.jetbrains.com/help/youtrack/standalone/deprecated-rest-api-reference.html) that the original project currently uses.\n\nIt should be noted that this fork was created for the [Tattler-Discord Issue Reporter](https://github.com/JoshLee0915/Tattler-DiscordIssueReporter)\nand the current release only contains the minimum functionality that was needed for that project. Additional functionality outside\nof this basic functionality is planned to be implemented in future versions of YTClient.\n\n## Compatibility\nThis client library and the import scripts that use the library are compatible with Python 3.6+. Python 2.7 is not supported.\n\nThis library supports any YouTrack Standalone versions that supports the new [REST API](https://www.jetbrains.com/help/youtrack/standalone/youtrack-rest-api-reference.html#youtrack-api-based-tools)\nas well as the current version of YouTrack InCloud. The REST API is enabled by default in all YouTrack installations.\n\n## Getting Started\nThis package has been published to PyPI and can be installed with pip. \n\n`pip install YTClient`\n\nAlternatively you can clone this repo and run setup.py.\n\n`setup.py install`\n\n## Authentication\nYTClient currently only supports using a permanent token for authentication requests. You can generate your own permanent \ntokens in your user profile. For instructions, refer to the [YouTrack documentation](https://www.jetbrains.com/help/youtrack/standalone/Manage-Permanent-Token.html#obtain-permanent-token).\n```python\nfrom YTClient.YTClient import YTClient\n\n# authentication request with permanent token\nclient = YTClient('https://instance_name.myjetbrains.com/youtrack/', token='perm:abcdefghijklmn')\n```\nThis request requires that you specify the base URL of the target YouTrack server. For YouTrack InCloud instances, your \nbase URL includes the trailing `/youtrack`, as shown in the previous example.\n\nOnce you have established a connection, your credentials are cached for subsequent requests.\n\nYou can reset the auth token at any time by using:\n\n```python\nclient.set_auth_token()\n```\n\n## Supported Operations\nCurrently YTClient only supports the following operations:\n- **create_issue** - Create a new issue\n   - Args\n      - **[REQ] project** - The project the issue belongs to\n      - **[REQ] summary** - The summary line of the issue\n      - **[OPT] description** - The description of the issue\n      - **[OPT] additional_fields** - A dictionary of additional fields to set **(NOTE: I have had issues getting this to work. I suggest\n        for now to use run_command to set additional fields).**\n      - **[OPT] return_fields** - A list of fields that should be returned with the request. The issue ID is returned by default.\n- **run_command** - Run a YouTrack command\n   - Args\n      - **[REQ] command** - The command to run. Uses a named tuple that contains the command to run (specified as query in the command tuple) \n        and a list of issues that the command is to run against.\n      - **[OPT] return_fields** - A list of fields that should be returned with the request. The command ID is returned by default.\n- **get_issues** - Get a list of issues that match the specified query\n   - Args\n      - **[REQ] query** - The query string to use\n      - **[OPT] fields** - A list of fields that should be returned with the request. The issue ID is returned by default.\n      - **[OPT] skip** - The number of records to skip\n      - **[OPT] top** - The number of records to return\n- **get_projects** - Get a list of all projects\n   - Args\n      - **[OPT] fields** - A list of fields that should be returned with the request. The project ID is returned by default.\n      - **[OPT] skip** - The number of records to skip\n      - **[OPT] top** - The number of records to return", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JoshLee0915/youtrack-rest-python-library", "keywords": "", "license": "https://github.com/JoshLee0915/youtrack-rest-python-library/blob/master/LICENSE", "maintainer": "", "maintainer_email": "", "name": "YTClient", "package_url": "https://pypi.org/project/YTClient/", "platform": "", "project_url": "https://pypi.org/project/YTClient/", "project_urls": {"Homepage": "https://github.com/JoshLee0915/youtrack-rest-python-library"}, "release_url": "https://pypi.org/project/YTClient/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A rewrite of the YouTrack python API", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>YTClient - A light weight YouTrack REST API Client for Python</h1>\n<p>YTClient is a light weight HTTP client for interfacing with Jetbrain's YouTrack issue tracker via its REST API. This was based\nlightly off of the original <a href=\"https://github.com/JetBrains/youtrack-rest-python-library\" rel=\"nofollow\">youtrack-rest-python-library</a>, but\nunlike the original project YTClient was built to be Python 3 compatible and use <a href=\"https://www.jetbrains.com/help/youtrack/standalone/youtrack-rest-api-reference.html#youtrack-api-based-tools\" rel=\"nofollow\">YouTrack's new REST API</a>\ninstead of the <a href=\"https://www.jetbrains.com/help/youtrack/standalone/deprecated-rest-api-reference.html\" rel=\"nofollow\">old REST API</a> that the original project currently uses.</p>\n<p>It should be noted that this fork was created for the <a href=\"https://github.com/JoshLee0915/Tattler-DiscordIssueReporter\" rel=\"nofollow\">Tattler-Discord Issue Reporter</a>\nand the current release only contains the minimum functionality that was needed for that project. Additional functionality outside\nof this basic functionality is planned to be implemented in future versions of YTClient.</p>\n<h2>Compatibility</h2>\n<p>This client library and the import scripts that use the library are compatible with Python 3.6+. Python 2.7 is not supported.</p>\n<p>This library supports any YouTrack Standalone versions that supports the new <a href=\"https://www.jetbrains.com/help/youtrack/standalone/youtrack-rest-api-reference.html#youtrack-api-based-tools\" rel=\"nofollow\">REST API</a>\nas well as the current version of YouTrack InCloud. The REST API is enabled by default in all YouTrack installations.</p>\n<h2>Getting Started</h2>\n<p>This package has been published to PyPI and can be installed with pip.</p>\n<p><code>pip install YTClient</code></p>\n<p>Alternatively you can clone this repo and run setup.py.</p>\n<p><code>setup.py install</code></p>\n<h2>Authentication</h2>\n<p>YTClient currently only supports using a permanent token for authentication requests. You can generate your own permanent\ntokens in your user profile. For instructions, refer to the <a href=\"https://www.jetbrains.com/help/youtrack/standalone/Manage-Permanent-Token.html#obtain-permanent-token\" rel=\"nofollow\">YouTrack documentation</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">YTClient.YTClient</span> <span class=\"kn\">import</span> <span class=\"n\">YTClient</span>\n\n<span class=\"c1\"># authentication request with permanent token</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">YTClient</span><span class=\"p\">(</span><span class=\"s1\">'https://instance_name.myjetbrains.com/youtrack/'</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'perm:abcdefghijklmn'</span><span class=\"p\">)</span>\n</pre>\n<p>This request requires that you specify the base URL of the target YouTrack server. For YouTrack InCloud instances, your\nbase URL includes the trailing <code>/youtrack</code>, as shown in the previous example.</p>\n<p>Once you have established a connection, your credentials are cached for subsequent requests.</p>\n<p>You can reset the auth token at any time by using:</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">set_auth_token</span><span class=\"p\">()</span>\n</pre>\n<h2>Supported Operations</h2>\n<p>Currently YTClient only supports the following operations:</p>\n<ul>\n<li><strong>create_issue</strong> - Create a new issue\n<ul>\n<li>Args\n<ul>\n<li><strong>[REQ] project</strong> - The project the issue belongs to</li>\n<li><strong>[REQ] summary</strong> - The summary line of the issue</li>\n<li><strong>[OPT] description</strong> - The description of the issue</li>\n<li><strong>[OPT] additional_fields</strong> - A dictionary of additional fields to set <strong>(NOTE: I have had issues getting this to work. I suggest\nfor now to use run_command to set additional fields).</strong></li>\n<li><strong>[OPT] return_fields</strong> - A list of fields that should be returned with the request. The issue ID is returned by default.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>run_command</strong> - Run a YouTrack command\n<ul>\n<li>Args\n<ul>\n<li><strong>[REQ] command</strong> - The command to run. Uses a named tuple that contains the command to run (specified as query in the command tuple)\nand a list of issues that the command is to run against.</li>\n<li><strong>[OPT] return_fields</strong> - A list of fields that should be returned with the request. The command ID is returned by default.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>get_issues</strong> - Get a list of issues that match the specified query\n<ul>\n<li>Args\n<ul>\n<li><strong>[REQ] query</strong> - The query string to use</li>\n<li><strong>[OPT] fields</strong> - A list of fields that should be returned with the request. The issue ID is returned by default.</li>\n<li><strong>[OPT] skip</strong> - The number of records to skip</li>\n<li><strong>[OPT] top</strong> - The number of records to return</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>get_projects</strong> - Get a list of all projects\n<ul>\n<li>Args\n<ul>\n<li><strong>[OPT] fields</strong> - A list of fields that should be returned with the request. The project ID is returned by default.</li>\n<li><strong>[OPT] skip</strong> - The number of records to skip</li>\n<li><strong>[OPT] top</strong> - The number of records to return</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5175313, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c1cd8588632b200c2953538c09542df6", "sha256": "8353badac4a193506976e1064268a7a9794a119c353ebdd62b04314e51b11b86"}, "downloads": -1, "filename": "YTClient-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c1cd8588632b200c2953538c09542df6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4302, "upload_time": "2019-04-23T02:59:45", "upload_time_iso_8601": "2019-04-23T02:59:45.041972Z", "url": "https://files.pythonhosted.org/packages/df/e0/1259051b79c37ba47ecdcc8b9960aa4fef8e12e0000032464785161f84c2/YTClient-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1cd8588632b200c2953538c09542df6", "sha256": "8353badac4a193506976e1064268a7a9794a119c353ebdd62b04314e51b11b86"}, "downloads": -1, "filename": "YTClient-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c1cd8588632b200c2953538c09542df6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4302, "upload_time": "2019-04-23T02:59:45", "upload_time_iso_8601": "2019-04-23T02:59:45.041972Z", "url": "https://files.pythonhosted.org/packages/df/e0/1259051b79c37ba47ecdcc8b9960aa4fef8e12e0000032464785161f84c2/YTClient-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:32 2020"}