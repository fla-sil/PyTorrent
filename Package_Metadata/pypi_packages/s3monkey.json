{"info": {"author": "Kenneth Reitz", "author_email": "me@kennethreitz.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\ns3monkey: Access your S3 buckets like they're native files\n========-=================================================\n\nPlatforms like `Heroku <https://heroku.com/>`_ don't allow for FUSE filesystem\nusage, so I had to get a bit creative.\n\nIntroducing, **s3monkey**, a library that mocks out all standard Python library\nsystem file operations, allowing you to use already\u2013written code to interface\nwith Amazon S3.\n\nAll standard library file operation modules are patched when using the provided\ncontext manager, including ``os``, ``io``, & ``pathlib``.\n\nUsage\n-----\n\n``AWS_ACCESS_KEY_ID`` and ``AWS_SECRET_ACCESS_KEY`` are expected to be set:\n\n.. code-block:: shell\n\n    $ AWS_ACCESS_KEY_ID=xxxxxxxxxxx\n    $ AWS_SECRET_ACCESS_KEY=xxxxxxxxxxx\n\nBasic usage:\n\n.. code-block:: python\n\n    from s3monkey import S3FS\n\n    with S3FS(bucket='media.kennethreitz.com', mount_point='/app/data') as fs:\n\n        # Create a 'test' key on S3, with the contents of 'hello'.\n        with open('/app/data/test', 'w') as f:\n            f.write('hello')\n\n        # List the keys in the S3 bucket.\n        print(os.listdir('/app/data'))\n        # ['file1.txt', 'file2.txt', 'file2.txt', 'test', \u2026]\n\n\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kennethreitz/pyS3fs", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "s3monkey", "package_url": "https://pypi.org/project/s3monkey/", "platform": "", "project_url": "https://pypi.org/project/s3monkey/", "project_urls": {"Homepage": "https://github.com/kennethreitz/pyS3fs"}, "release_url": "https://pypi.org/project/s3monkey/0.1.0/", "requires_dist": ["chardet", "bucketstore"], "requires_python": "", "summary": "A Python library that allows you to interact with Amazon S3 Buckets as if they are your local filesystem.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>s3monkey: Access your S3 buckets like they\u2019re native files\n========-=================================================</p>\n<p>Platforms like <a href=\"https://heroku.com/\" rel=\"nofollow\">Heroku</a> don\u2019t allow for FUSE filesystem\nusage, so I had to get a bit creative.</p>\n<p>Introducing, <strong>s3monkey</strong>, a library that mocks out all standard Python library\nsystem file operations, allowing you to use already\u2013written code to interface\nwith Amazon S3.</p>\n<p>All standard library file operation modules are patched when using the provided\ncontext manager, including <tt>os</tt>, <tt>io</tt>, &amp; <tt>pathlib</tt>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>AWS_ACCESS_KEY_ID</tt> and <tt>AWS_SECRET_ACCESS_KEY</tt> are expected to be set:</p>\n<pre>$ <span class=\"nv\">AWS_ACCESS_KEY_ID</span><span class=\"o\">=</span>xxxxxxxxxxx\n$ <span class=\"nv\">AWS_SECRET_ACCESS_KEY</span><span class=\"o\">=</span>xxxxxxxxxxx\n</pre>\n<p>Basic usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">s3monkey</span> <span class=\"kn\">import</span> <span class=\"n\">S3FS</span>\n\n<span class=\"k\">with</span> <span class=\"n\">S3FS</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'media.kennethreitz.com'</span><span class=\"p\">,</span> <span class=\"n\">mount_point</span><span class=\"o\">=</span><span class=\"s1\">'/app/data'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fs</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Create a 'test' key on S3, with the contents of 'hello'.</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/app/data/test'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># List the keys in the S3 bucket.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"s1\">'/app/data'</span><span class=\"p\">))</span>\n    <span class=\"c1\"># ['file1.txt', 'file2.txt', 'file2.txt', 'test', \u2026]</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4831194, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "53059de8d7c630fd7ddad96940a95044", "sha256": "f9a5fcd58de0eae436ac31a51e8c687258f37fcf9fae56e53cae5df223a4e924"}, "downloads": -1, "filename": "s3monkey-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53059de8d7c630fd7ddad96940a95044", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 129307, "upload_time": "2018-02-21T17:23:04", "upload_time_iso_8601": "2018-02-21T17:23:04.337362Z", "url": "https://files.pythonhosted.org/packages/d7/b0/aa475c8173adb2411f2300a98bda8a9a96551469c54880f0db4e8dd78752/s3monkey-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "673edbcf53c7e30c85bbfe0de3b2e04d", "sha256": "1cce9afafa09566b835190ca37d3249b542573232a3ac519cbef62ce90595c35"}, "downloads": -1, "filename": "s3monkey-0.1.0.tar.gz", "has_sig": false, "md5_digest": "673edbcf53c7e30c85bbfe0de3b2e04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59729, "upload_time": "2018-02-21T17:23:05", "upload_time_iso_8601": "2018-02-21T17:23:05.655577Z", "url": "https://files.pythonhosted.org/packages/9a/25/70336a0a01179f03e6e0ba8dfe8b670c0fba28f0909fa4f96c7f2d5e18fb/s3monkey-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53059de8d7c630fd7ddad96940a95044", "sha256": "f9a5fcd58de0eae436ac31a51e8c687258f37fcf9fae56e53cae5df223a4e924"}, "downloads": -1, "filename": "s3monkey-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53059de8d7c630fd7ddad96940a95044", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 129307, "upload_time": "2018-02-21T17:23:04", "upload_time_iso_8601": "2018-02-21T17:23:04.337362Z", "url": "https://files.pythonhosted.org/packages/d7/b0/aa475c8173adb2411f2300a98bda8a9a96551469c54880f0db4e8dd78752/s3monkey-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "673edbcf53c7e30c85bbfe0de3b2e04d", "sha256": "1cce9afafa09566b835190ca37d3249b542573232a3ac519cbef62ce90595c35"}, "downloads": -1, "filename": "s3monkey-0.1.0.tar.gz", "has_sig": false, "md5_digest": "673edbcf53c7e30c85bbfe0de3b2e04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59729, "upload_time": "2018-02-21T17:23:05", "upload_time_iso_8601": "2018-02-21T17:23:05.655577Z", "url": "https://files.pythonhosted.org/packages/9a/25/70336a0a01179f03e6e0ba8dfe8b670c0fba28f0909fa4f96c7f2d5e18fb/s3monkey-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:37 2020"}