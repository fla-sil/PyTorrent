{"info": {"author": "Chris Sewell", "author_email": "chrisj_sewell@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "[![Anaconda-Server Badge](https://anaconda.org/cjs14/activate-aiida/badges/version.svg)](https://anaconda.org/cjs14/activate-aiida)\n\n# activate-aiida\n\nThis is a small package to build around the internal [aiida-core](https://github.com/aiidateam/aiida-core) tools (v1.2), to quickly create and launch **isolated**\nAiiDA environments from scratch. Its focussed on development, but can also be used more generally.\n\nThe basic steps are:\n\n1. Buy a new computer\n2. Install Conda\n   - On linux:\n     - `wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh`\n     - `bash miniconda.sh`\n     - `conda update conda`\n3. Create the development environment:\n   - `conda env create -n aiida-dev -f aiida-dev-env.yml`\n   - `conda activate aiida-dev`\n   - This is a copy of `environment.yaml` in aiida-core,\n     but with all the extra development packages, and other goodies like jupyter lab\n4. Install aiida-core in development mode\n   - `pip install --no-deps -e .`\n5. Run `source aiida-activate --help` to see the options\n   - This needs to be called with `source`, so that it can set-up some environmental variables\n   - Running `source aiida-activate setup.yaml -c -w 4` will:\n     - Initialise a database at `store_path`/pgsql, if it doesn't already exist\n     - Kill any currently running postgres server\n     - Start up a postgres server with the desired settings\n     - Ensure RabbitMQ is running\n     - Set the aiida repository path to `store_path`/.aiida\n     - Run `verdi quicksetup --config=setup.yaml`, if the profile does not already exist\n     - Set the profile as the default profile\n     - Stop any current daemon and start one with 4 workers\n     - Activate verdi tab completion\n6. When your done, `aiida-deactivate` will stop the daemon and the postgres server\n\n## Example Config File\n\n```yaml\nstore_path: /home/csewell/Documents/aiida-core/test_repo\n\nsu_db_username: chrisjsewell\n# su_db_password:  # not yet supported\n\ndb_engine: postgresql_psycopg2\ndb_backend: django\n\ndb_host: localhost\ndb_port: 5432\ndb_name: basic_db\ndb_username: chrisjsewell\ndb_password: niceday\n\nprofile: basic\nemail: christopher.sewell@epfl.ch\nfirst_name: Chris\nlast_name: Sewell\ninstitution: EPFL\n\nnon_interactive: true\n```\n\n## Example CLI\n\n```console\n$ source aiida-activate setup.yaml -c -w 4\n  parsed args: -c true -w 4 setup.yaml\n- Reading variables from setup.yaml\n- Setting Up SQL Database\n  PGDATA='/home/csewell/Documents/aiida-core/test_repo/pgsql'\n- Activating Postgres server: /home/csewell/Documents/aiida-core/test_repo/pgsql on port 5432\nwaiting for server to start.... done\nserver started\n  Logging Postgres server to: /home/csewell/Documents/aiida-core/test_repo/pgsql/postgres_env_.log\n- Ensure RabbitMQ Running\n- Setting Up AiiDa Database\n  AIIDA_PATH='/home/csewell/Documents/aiida-core/test_repo'\nInfo: Database user \"chrisjsewell\" already exists!\nUse it?  [y/N]: y\nSuccess: created new profile `basic`.\nInfo: migrating the database.\nOperations to perform:\n  Apply all migrations: auth, contenttypes, db\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0001_initial... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying db.0001_initial... OK\n  Applying db.0002_db_state_change... OK\n  Applying db.0003_add_link_type... OK\n  Applying db.0004_add_daemon_and_uuid_indices... OK\n  Applying db.0005_add_cmtime_indices... OK\n  Applying db.0006_delete_dbpath... OK\n  Applying db.0007_update_linktypes... OK\n  Applying db.0008_code_hidden_to_extra... OK\n  Applying db.0009_base_data_plugin_type_string... OK\n  Applying db.0010_process_type... OK\n  Applying db.0011_delete_kombu_tables... OK\n  Applying db.0012_drop_dblock... OK\n  Applying db.0013_django_1_8... OK\n  Applying db.0014_add_node_uuid_unique_constraint... OK\n  Applying db.0015_invalidating_node_hash... OK\n  Applying db.0016_code_sub_class_of_data... OK\n  Applying db.0017_drop_dbcalcstate... OK\n  Applying db.0018_django_1_11... OK\n  Applying db.0019_migrate_builtin_calculations... OK\n  Applying db.0020_provenance_redesign... OK\n  Applying db.0021_dbgroup_name_to_label_type_to_type_string... OK\n  Applying db.0022_dbgroup_type_string_change_content... OK\n  Applying db.0023_calc_job_option_attribute_keys... OK\n  Applying db.0024_dblog_update... OK\n  Applying db.0025_move_data_within_node_module... OK\n  Applying db.0026_trajectory_symbols_to_attribute... OK\n  Applying db.0027_delete_trajectory_symbols_array... OK\n  Applying db.0028_remove_node_prefix... OK\n  Applying db.0029_rename_parameter_data_to_dict... OK\n  Applying db.0030_dbnode_type_to_dbnode_node_type... OK\n  Applying db.0031_remove_dbcomputer_enabled... OK\n  Applying db.0032_remove_legacy_workflows... OK\n  Applying db.0033_replace_text_field_with_json_field... OK\n  Applying db.0034_drop_node_columns_nodeversion_public... OK\n  Applying db.0035_simplify_user_model... OK\n  Applying db.0036_drop_computer_transport_params... OK\n  Applying db.0037_attributes_extras_settings_json... OK\n  Applying db.0038_data_migration_legacy_job_calculations... OK\n  Applying db.0039_reset_hash... OK\n  Applying db.0040_data_migration_legacy_process_attributes... OK\n  Applying db.0041_seal_unsealed_processes... OK\n  Applying db.0042_prepare_schema_reset... OK\n  Applying db.0043_default_link_label... OK\n  Applying db.0044_dbgroup_type_string... OK\nSuccess: database migration completed.\n- Starting AiiDA\n  Rescanning aiida plugins\n  Setting default profile: basic\nSuccess: basic set as default profile\n  Stopping any current daemon\nProfile: basic\nDaemon was not running\n  Activating daemon for profile: basic with 4 workers\n  Activating verdi tab completion\n- Finishing Status:\n \u2713 config dir:  /home/csewell/Documents/aiida-core/test_repo/.aiida\n \u2713 profile:     On profile basic\n \u2713 repository:  /home/csewell/Documents/aiida-core/test_repo/.aiida/repository/basic\n \u2713 postgres:    Connected as chrisjsewell@localhost:5432\n \u2713 rabbitmq:    Connected to amqp://127.0.0.1?heartbeat=600\n \u2713 daemon:      Daemon is running as PID 22227 since 2020-04-10 00:55:10\n```\n\n```console\n$ deactivate-aiida \nStopping Daemon:\nProfile: basic\nWaiting for the daemon to shut down... OK\nStopping Postgres:\nwaiting for server to shut down.... done\nserver stopped\nDone!\n```\n\n## Troubleshooting\n\nIf postgres is not stopped correctly you may get this error:\n\n    psql: could not connect to server: No such file or directory\n\nIn this case you may have to manually delete the\n`path/to/database/postmaster.pid` file (see [here](https://stackoverflow.com/a/13573207/5033292))\n\nIf a port has been left open (from [here](https://stackoverflow.com/a/17703016/5033292)):\n\n    >> sudo lsof -i :PORTNUM\n    >> sudo kill -9 PID\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chrisjsewell/activate_aiida", "keywords": "aiida,yaml,configuration", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "activate-aiida", "package_url": "https://pypi.org/project/activate-aiida/", "platform": "", "project_url": "https://pypi.org/project/activate-aiida/", "project_urls": {"Homepage": "https://github.com/chrisjsewell/activate_aiida"}, "release_url": "https://pypi.org/project/activate-aiida/0.3.0/", "requires_dist": ["pyyaml"], "requires_python": "", "summary": "a package to activate an aiida environment, from a yaml config file", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://anaconda.org/cjs14/activate-aiida\" rel=\"nofollow\"><img alt=\"Anaconda-Server Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c55f9a9b52562a2a676dabb23d3c4ad9f5510df/68747470733a2f2f616e61636f6e64612e6f72672f636a7331342f61637469766174652d61696964612f6261646765732f76657273696f6e2e737667\"></a></p>\n<h1>activate-aiida</h1>\n<p>This is a small package to build around the internal <a href=\"https://github.com/aiidateam/aiida-core\" rel=\"nofollow\">aiida-core</a> tools (v1.2), to quickly create and launch <strong>isolated</strong>\nAiiDA environments from scratch. Its focussed on development, but can also be used more generally.</p>\n<p>The basic steps are:</p>\n<ol>\n<li>Buy a new computer</li>\n<li>Install Conda\n<ul>\n<li>On linux:\n<ul>\n<li><code>wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh</code></li>\n<li><code>bash miniconda.sh</code></li>\n<li><code>conda update conda</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Create the development environment:\n<ul>\n<li><code>conda env create -n aiida-dev -f aiida-dev-env.yml</code></li>\n<li><code>conda activate aiida-dev</code></li>\n<li>This is a copy of <code>environment.yaml</code> in aiida-core,\nbut with all the extra development packages, and other goodies like jupyter lab</li>\n</ul>\n</li>\n<li>Install aiida-core in development mode\n<ul>\n<li><code>pip install --no-deps -e .</code></li>\n</ul>\n</li>\n<li>Run <code>source aiida-activate --help</code> to see the options\n<ul>\n<li>This needs to be called with <code>source</code>, so that it can set-up some environmental variables</li>\n<li>Running <code>source aiida-activate setup.yaml -c -w 4</code> will:\n<ul>\n<li>Initialise a database at <code>store_path</code>/pgsql, if it doesn't already exist</li>\n<li>Kill any currently running postgres server</li>\n<li>Start up a postgres server with the desired settings</li>\n<li>Ensure RabbitMQ is running</li>\n<li>Set the aiida repository path to <code>store_path</code>/.aiida</li>\n<li>Run <code>verdi quicksetup --config=setup.yaml</code>, if the profile does not already exist</li>\n<li>Set the profile as the default profile</li>\n<li>Stop any current daemon and start one with 4 workers</li>\n<li>Activate verdi tab completion</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>When your done, <code>aiida-deactivate</code> will stop the daemon and the postgres server</li>\n</ol>\n<h2>Example Config File</h2>\n<pre><span class=\"nt\">store_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/home/csewell/Documents/aiida-core/test_repo</span>\n\n<span class=\"nt\">su_db_username</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">chrisjsewell</span>\n<span class=\"c1\"># su_db_password:  # not yet supported</span>\n\n<span class=\"nt\">db_engine</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">postgresql_psycopg2</span>\n<span class=\"nt\">db_backend</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">django</span>\n\n<span class=\"nt\">db_host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">localhost</span>\n<span class=\"nt\">db_port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">5432</span>\n<span class=\"nt\">db_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">basic_db</span>\n<span class=\"nt\">db_username</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">chrisjsewell</span>\n<span class=\"nt\">db_password</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">niceday</span>\n\n<span class=\"nt\">profile</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">basic</span>\n<span class=\"nt\">email</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">christopher.sewell@epfl.ch</span>\n<span class=\"nt\">first_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Chris</span>\n<span class=\"nt\">last_name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Sewell</span>\n<span class=\"nt\">institution</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">EPFL</span>\n\n<span class=\"nt\">non_interactive</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n</pre>\n<h2>Example CLI</h2>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">source</span> aiida-activate setup.yaml -c -w <span class=\"m\">4</span>\n<span class=\"go\">  parsed args: -c true -w 4 setup.yaml</span>\n<span class=\"go\">- Reading variables from setup.yaml</span>\n<span class=\"go\">- Setting Up SQL Database</span>\n<span class=\"go\">  PGDATA='/home/csewell/Documents/aiida-core/test_repo/pgsql'</span>\n<span class=\"go\">- Activating Postgres server: /home/csewell/Documents/aiida-core/test_repo/pgsql on port 5432</span>\n<span class=\"go\">waiting for server to start.... done</span>\n<span class=\"go\">server started</span>\n<span class=\"go\">  Logging Postgres server to: /home/csewell/Documents/aiida-core/test_repo/pgsql/postgres_env_.log</span>\n<span class=\"go\">- Ensure RabbitMQ Running</span>\n<span class=\"go\">- Setting Up AiiDa Database</span>\n<span class=\"go\">  AIIDA_PATH='/home/csewell/Documents/aiida-core/test_repo'</span>\n<span class=\"go\">Info: Database user \"chrisjsewell\" already exists!</span>\n<span class=\"go\">Use it?  [y/N]: y</span>\n<span class=\"go\">Success: created new profile `basic`.</span>\n<span class=\"go\">Info: migrating the database.</span>\n<span class=\"go\">Operations to perform:</span>\n<span class=\"go\">  Apply all migrations: auth, contenttypes, db</span>\n<span class=\"go\">Running migrations:</span>\n<span class=\"go\">  Applying contenttypes.0001_initial... OK</span>\n<span class=\"go\">  Applying contenttypes.0002_remove_content_type_name... OK</span>\n<span class=\"go\">  Applying auth.0001_initial... OK</span>\n<span class=\"go\">  Applying auth.0002_alter_permission_name_max_length... OK</span>\n<span class=\"go\">  Applying auth.0003_alter_user_email_max_length... OK</span>\n<span class=\"go\">  Applying auth.0004_alter_user_username_opts... OK</span>\n<span class=\"go\">  Applying auth.0005_alter_user_last_login_null... OK</span>\n<span class=\"go\">  Applying auth.0006_require_contenttypes_0002... OK</span>\n<span class=\"go\">  Applying auth.0007_alter_validators_add_error_messages... OK</span>\n<span class=\"go\">  Applying auth.0008_alter_user_username_max_length... OK</span>\n<span class=\"go\">  Applying auth.0009_alter_user_last_name_max_length... OK</span>\n<span class=\"go\">  Applying auth.0010_alter_group_name_max_length... OK</span>\n<span class=\"go\">  Applying auth.0011_update_proxy_permissions... OK</span>\n<span class=\"go\">  Applying db.0001_initial... OK</span>\n<span class=\"go\">  Applying db.0002_db_state_change... OK</span>\n<span class=\"go\">  Applying db.0003_add_link_type... OK</span>\n<span class=\"go\">  Applying db.0004_add_daemon_and_uuid_indices... OK</span>\n<span class=\"go\">  Applying db.0005_add_cmtime_indices... OK</span>\n<span class=\"go\">  Applying db.0006_delete_dbpath... OK</span>\n<span class=\"go\">  Applying db.0007_update_linktypes... OK</span>\n<span class=\"go\">  Applying db.0008_code_hidden_to_extra... OK</span>\n<span class=\"go\">  Applying db.0009_base_data_plugin_type_string... OK</span>\n<span class=\"go\">  Applying db.0010_process_type... OK</span>\n<span class=\"go\">  Applying db.0011_delete_kombu_tables... OK</span>\n<span class=\"go\">  Applying db.0012_drop_dblock... OK</span>\n<span class=\"go\">  Applying db.0013_django_1_8... OK</span>\n<span class=\"go\">  Applying db.0014_add_node_uuid_unique_constraint... OK</span>\n<span class=\"go\">  Applying db.0015_invalidating_node_hash... OK</span>\n<span class=\"go\">  Applying db.0016_code_sub_class_of_data... OK</span>\n<span class=\"go\">  Applying db.0017_drop_dbcalcstate... OK</span>\n<span class=\"go\">  Applying db.0018_django_1_11... OK</span>\n<span class=\"go\">  Applying db.0019_migrate_builtin_calculations... OK</span>\n<span class=\"go\">  Applying db.0020_provenance_redesign... OK</span>\n<span class=\"go\">  Applying db.0021_dbgroup_name_to_label_type_to_type_string... OK</span>\n<span class=\"go\">  Applying db.0022_dbgroup_type_string_change_content... OK</span>\n<span class=\"go\">  Applying db.0023_calc_job_option_attribute_keys... OK</span>\n<span class=\"go\">  Applying db.0024_dblog_update... OK</span>\n<span class=\"go\">  Applying db.0025_move_data_within_node_module... OK</span>\n<span class=\"go\">  Applying db.0026_trajectory_symbols_to_attribute... OK</span>\n<span class=\"go\">  Applying db.0027_delete_trajectory_symbols_array... OK</span>\n<span class=\"go\">  Applying db.0028_remove_node_prefix... OK</span>\n<span class=\"go\">  Applying db.0029_rename_parameter_data_to_dict... OK</span>\n<span class=\"go\">  Applying db.0030_dbnode_type_to_dbnode_node_type... OK</span>\n<span class=\"go\">  Applying db.0031_remove_dbcomputer_enabled... OK</span>\n<span class=\"go\">  Applying db.0032_remove_legacy_workflows... OK</span>\n<span class=\"go\">  Applying db.0033_replace_text_field_with_json_field... OK</span>\n<span class=\"go\">  Applying db.0034_drop_node_columns_nodeversion_public... OK</span>\n<span class=\"go\">  Applying db.0035_simplify_user_model... OK</span>\n<span class=\"go\">  Applying db.0036_drop_computer_transport_params... OK</span>\n<span class=\"go\">  Applying db.0037_attributes_extras_settings_json... OK</span>\n<span class=\"go\">  Applying db.0038_data_migration_legacy_job_calculations... OK</span>\n<span class=\"go\">  Applying db.0039_reset_hash... OK</span>\n<span class=\"go\">  Applying db.0040_data_migration_legacy_process_attributes... OK</span>\n<span class=\"go\">  Applying db.0041_seal_unsealed_processes... OK</span>\n<span class=\"go\">  Applying db.0042_prepare_schema_reset... OK</span>\n<span class=\"go\">  Applying db.0043_default_link_label... OK</span>\n<span class=\"go\">  Applying db.0044_dbgroup_type_string... OK</span>\n<span class=\"go\">Success: database migration completed.</span>\n<span class=\"go\">- Starting AiiDA</span>\n<span class=\"go\">  Rescanning aiida plugins</span>\n<span class=\"go\">  Setting default profile: basic</span>\n<span class=\"go\">Success: basic set as default profile</span>\n<span class=\"go\">  Stopping any current daemon</span>\n<span class=\"go\">Profile: basic</span>\n<span class=\"go\">Daemon was not running</span>\n<span class=\"go\">  Activating daemon for profile: basic with 4 workers</span>\n<span class=\"go\">  Activating verdi tab completion</span>\n<span class=\"go\">- Finishing Status:</span>\n<span class=\"go\"> \u2713 config dir:  /home/csewell/Documents/aiida-core/test_repo/.aiida</span>\n<span class=\"go\"> \u2713 profile:     On profile basic</span>\n<span class=\"go\"> \u2713 repository:  /home/csewell/Documents/aiida-core/test_repo/.aiida/repository/basic</span>\n<span class=\"go\"> \u2713 postgres:    Connected as chrisjsewell@localhost:5432</span>\n<span class=\"go\"> \u2713 rabbitmq:    Connected to amqp://127.0.0.1?heartbeat=600</span>\n<span class=\"go\"> \u2713 daemon:      Daemon is running as PID 22227 since 2020-04-10 00:55:10</span>\n</pre>\n<pre><span class=\"gp\">$</span> deactivate-aiida \n<span class=\"go\">Stopping Daemon:</span>\n<span class=\"go\">Profile: basic</span>\n<span class=\"go\">Waiting for the daemon to shut down... OK</span>\n<span class=\"go\">Stopping Postgres:</span>\n<span class=\"go\">waiting for server to shut down.... done</span>\n<span class=\"go\">server stopped</span>\n<span class=\"go\">Done!</span>\n</pre>\n<h2>Troubleshooting</h2>\n<p>If postgres is not stopped correctly you may get this error:</p>\n<pre><code>psql: could not connect to server: No such file or directory\n</code></pre>\n<p>In this case you may have to manually delete the\n<code>path/to/database/postmaster.pid</code> file (see <a href=\"https://stackoverflow.com/a/13573207/5033292\" rel=\"nofollow\">here</a>)</p>\n<p>If a port has been left open (from <a href=\"https://stackoverflow.com/a/17703016/5033292\" rel=\"nofollow\">here</a>):</p>\n<pre><code>&gt;&gt; sudo lsof -i :PORTNUM\n&gt;&gt; sudo kill -9 PID\n</code></pre>\n\n          </div>"}, "last_serial": 6989788, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "e642f411e0fb4bb469fdd507c341cb2f", "sha256": "899723ea0d7e4794a686a21c5d7daa20795850af54aaa18f0c422f56385ec6bc"}, "downloads": -1, "filename": "activate_aiida-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e642f411e0fb4bb469fdd507c341cb2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9598, "upload_time": "2020-04-09T23:24:10", "upload_time_iso_8601": "2020-04-09T23:24:10.846589Z", "url": "https://files.pythonhosted.org/packages/f9/7d/e8b45e6538fe0e0f14cd63ced44595bae14c7ca68b5e3d1c72c0f5843546/activate_aiida-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcbe7acedb066fc16d670f254f01645b", "sha256": "ee79c682306188e5e8cd7cc01aada7f89de2191c92e3e089424a90510c1eebec"}, "downloads": -1, "filename": "activate-aiida-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fcbe7acedb066fc16d670f254f01645b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8509, "upload_time": "2020-04-09T23:24:13", "upload_time_iso_8601": "2020-04-09T23:24:13.341123Z", "url": "https://files.pythonhosted.org/packages/9e/5f/54ed0ae871fbab2285c3fc50aee02d199181468ddadbd2fb5b924c8a6499/activate-aiida-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e642f411e0fb4bb469fdd507c341cb2f", "sha256": "899723ea0d7e4794a686a21c5d7daa20795850af54aaa18f0c422f56385ec6bc"}, "downloads": -1, "filename": "activate_aiida-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e642f411e0fb4bb469fdd507c341cb2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9598, "upload_time": "2020-04-09T23:24:10", "upload_time_iso_8601": "2020-04-09T23:24:10.846589Z", "url": "https://files.pythonhosted.org/packages/f9/7d/e8b45e6538fe0e0f14cd63ced44595bae14c7ca68b5e3d1c72c0f5843546/activate_aiida-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcbe7acedb066fc16d670f254f01645b", "sha256": "ee79c682306188e5e8cd7cc01aada7f89de2191c92e3e089424a90510c1eebec"}, "downloads": -1, "filename": "activate-aiida-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fcbe7acedb066fc16d670f254f01645b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8509, "upload_time": "2020-04-09T23:24:13", "upload_time_iso_8601": "2020-04-09T23:24:13.341123Z", "url": "https://files.pythonhosted.org/packages/9e/5f/54ed0ae871fbab2285c3fc50aee02d199181468ddadbd2fb5b924c8a6499/activate-aiida-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:19 2020"}