{"info": {"author": "Austin Crinklaw", "author_email": "acrinklaw@lji.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "# HLAQuant\n### Author: Austin Crinklaw\n\n## What is it?\nHLAQuant is a pipeline that produces fast and accurate allele specific expression for HLA genes. This is done by quantifying on the peptide binding groove domain using Salmon with personalized sequences.\n\n## Requirements:\n- Linux OS\n- NCBI Blast+\n- Salmon -- please ensure Salmon is on your PATH!\n- Python 3+\n  - Python packages: Pandas, BioPython\n\n## How to use:\n\n### Installation:\nHLAQuant can be downloaded through PyPI using the following pip command.\n```shell\npip install hlaquant\n```\n\n### Input  \nHLAQuant takes two input files currently. \n- File one (-hla) consists of a sample_id and then a list of alleles corresponding to that sample's typing (tab separated)\n- File two (-fastq) consists of a sample_id and then a list of FASTQ files corresponding to that sample (paired-end or single-end)\nExamples of these inputs can be found under the 'test_data/' directory\n\n### Usage\n- A list of parameters and their descriptions can be found with the -h flag\n```shell\npython -m HLAQuant -h\n```\n\n### Output  \nThe output will match that of Salmons. It consists of a tab separated file containing the transcript ID (in this case, a specific HLA allele), as well as the number of reads. TPMs can be ignored as they will be inaccurate since we are only quantifying over a few sequences.\n\n## How does it work?\n- We first take the list of alleles and fetch the corresponding sequences from IMGT\n- Next we extract the sequences corresponding to their groove domains from these sequences\n- We build an index for quantification using these G-domain sequences\n- We then perform quantification using this index\n\nThe paper outlining this method in detail can be found [....somewhere when it is published]\n\n## References:\nThis pipeline would be unable to work without Salmon\n\nPatro, R., Duggal, G., Love, M. I., Irizarry, R. A., & Kingsford, C. (2017). Salmon provides fast and bias-aware quantification of transcript expression. Nature Methods.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/acrinklaw/hlaquant", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hlaquant", "package_url": "https://pypi.org/project/hlaquant/", "platform": "", "project_url": "https://pypi.org/project/hlaquant/", "project_urls": {"Homepage": "https://github.com/acrinklaw/hlaquant"}, "release_url": "https://pypi.org/project/hlaquant/0.0.2/", "requires_dist": ["pandas", "biopython"], "requires_python": "", "summary": "HLAQuant - Get HLA allele specific expression", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HLAQuant</h1>\n<h3>Author: Austin Crinklaw</h3>\n<h2>What is it?</h2>\n<p>HLAQuant is a pipeline that produces fast and accurate allele specific expression for HLA genes. This is done by quantifying on the peptide binding groove domain using Salmon with personalized sequences.</p>\n<h2>Requirements:</h2>\n<ul>\n<li>Linux OS</li>\n<li>NCBI Blast+</li>\n<li>Salmon -- please ensure Salmon is on your PATH!</li>\n<li>Python 3+\n<ul>\n<li>Python packages: Pandas, BioPython</li>\n</ul>\n</li>\n</ul>\n<h2>How to use:</h2>\n<h3>Installation:</h3>\n<p>HLAQuant can be downloaded through PyPI using the following pip command.</p>\n<pre>pip install hlaquant\n</pre>\n<h3>Input</h3>\n<p>HLAQuant takes two input files currently.</p>\n<ul>\n<li>File one (-hla) consists of a sample_id and then a list of alleles corresponding to that sample's typing (tab separated)</li>\n<li>File two (-fastq) consists of a sample_id and then a list of FASTQ files corresponding to that sample (paired-end or single-end)\nExamples of these inputs can be found under the 'test_data/' directory</li>\n</ul>\n<h3>Usage</h3>\n<ul>\n<li>A list of parameters and their descriptions can be found with the -h flag</li>\n</ul>\n<pre>python -m HLAQuant -h\n</pre>\n<h3>Output</h3>\n<p>The output will match that of Salmons. It consists of a tab separated file containing the transcript ID (in this case, a specific HLA allele), as well as the number of reads. TPMs can be ignored as they will be inaccurate since we are only quantifying over a few sequences.</p>\n<h2>How does it work?</h2>\n<ul>\n<li>We first take the list of alleles and fetch the corresponding sequences from IMGT</li>\n<li>Next we extract the sequences corresponding to their groove domains from these sequences</li>\n<li>We build an index for quantification using these G-domain sequences</li>\n<li>We then perform quantification using this index</li>\n</ul>\n<p>The paper outlining this method in detail can be found [....somewhere when it is published]</p>\n<h2>References:</h2>\n<p>This pipeline would be unable to work without Salmon</p>\n<p>Patro, R., Duggal, G., Love, M. I., Irizarry, R. A., &amp; Kingsford, C. (2017). Salmon provides fast and bias-aware quantification of transcript expression. Nature Methods.</p>\n\n          </div>"}, "last_serial": 5626653, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "61682c85030c57efe8db8562827544ad", "sha256": "957c1ed985e6a912bfd159b209c512dcc9ef0d53375de9cc0320d3aafbc5b2f1"}, "downloads": -1, "filename": "hlaquant-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61682c85030c57efe8db8562827544ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1242181, "upload_time": "2019-08-02T22:00:58", "upload_time_iso_8601": "2019-08-02T22:00:58.952506Z", "url": "https://files.pythonhosted.org/packages/23/60/8dc237a6a8916055953f8d5c9ab6719d83870e0e914506aa5a6661f10e50/hlaquant-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d6427f4b17d532d48e3c59894842da8c", "sha256": "ee4094cc4bda75b5248a1692b77c87903e66a859f5b83e2a17d69a0959b833e2"}, "downloads": -1, "filename": "hlaquant-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d6427f4b17d532d48e3c59894842da8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1242154, "upload_time": "2019-08-02T22:24:58", "upload_time_iso_8601": "2019-08-02T22:24:58.545325Z", "url": "https://files.pythonhosted.org/packages/e3/b4/bc03eec2e66bcb98ec1520319eb41d654e5d2afff70f7d7b8bafa52615ab/hlaquant-0.0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6427f4b17d532d48e3c59894842da8c", "sha256": "ee4094cc4bda75b5248a1692b77c87903e66a859f5b83e2a17d69a0959b833e2"}, "downloads": -1, "filename": "hlaquant-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d6427f4b17d532d48e3c59894842da8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1242154, "upload_time": "2019-08-02T22:24:58", "upload_time_iso_8601": "2019-08-02T22:24:58.545325Z", "url": "https://files.pythonhosted.org/packages/e3/b4/bc03eec2e66bcb98ec1520319eb41d654e5d2afff70f7d7b8bafa52615ab/hlaquant-0.0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:58 2020"}