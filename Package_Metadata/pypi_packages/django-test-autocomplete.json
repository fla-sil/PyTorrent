{"info": {"author": "Javier Mansilla", "author_email": "jmansilla@machinalis.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django test autocompletion\n==========================\n\nThis package provides a helpful way to run specific tests within your project.\n\nExpedites the invocation of tests to run by providing autocompletion inside\ntest modules, listing its TestCases and also tests inside each TestCase.\n\nThis first release is a proof-of-concept, and in the \"Future features\" section\nthere is a list of possible improvements considered for next releases.\n\n\nHow does it work\n----------------\n\nIn order to make a non-intrusive installation, instead of coupling this\nautocompletion with the one provided by Django, we created a proxy command\nnamed \"djntest\" which work is to redirect every call to itself to\n\"python manage.py test\".\n\nLater we defined our customized autocompletion for this new command.\nAutocompletion is defined with a lightweight layer of bash code that it's\ninvoked each time the user triggers autocompletion (typically by hitting the\n<TAB> key). Based on the provided arguments, the bash layer decides to call the\nhelper python script get_testcases.py which in turn reads the provided .py\nfile, and parse it using the *ast* module.\n\n\nHow to use\n----------\n\nLocated at the root of your django project, typing:\n\n    $ djntest books_application/tests/test_book_creation.py:<TAB>\n\nwill list all classes defined in that file, in the standard bash way, ie:\n * if there is only 1 option, it will be automatically completed\n * if all the options at a given time have the same prefix, it's autocompleted\n * if you start typing the name of some TestCase after the colon, hitting <TAB>\n   again will filter the offer to only those matching with what you are writing\n\nAfter a TestCase name, if you a point and trigger autocompletion like this\n\n    $ djntest books_application/tests/test_book_creation.py:TestStore.<TAB>\n\nyou will see listed all functions defined inside that class which name starts\nwith \"test\\_\", and again, with all the usual bash autocompletion features.\n\n\nDisclaimer Notes:\n-----------------\n\n * This autocompleter only facilitates the way of invoking the command for\n   your running tests. Nothing related with PYTHONPATH is done here.\n * If your test runner does not support be called with individual tests\n   modules (like django-nose does), then you will have to wait for 0.2 release\n   in order to enjoy this package.\n\n\nInstallation Notes:\n-------------------\n\nIn order to install this package you need to follow 2 steps:\n\n1. First install the script\n\n    $ sudo pip install django-test-autocomplete\n\nAlternatively, you can install it from the source distribution:\nExtract the tarball and run\n\n    $ python setup.py install\n\n2. For enabling the bash autocompletion you need to look for the\nscript djntest.sh located in the source distribution, and later\ndo one of the following:\n\n * inside your $HOME/.bashrc adding a line like this:\n\n    source path/to/djntest.sh\n\n * copy the file into your bash configuration folder like this:\n\n    $ copy path/to/djntest.sh /etc/bash_completion.d/\n\nAnd later restart your bash session.\n\nThe djntest.sh file can be found:\n\n * on the source distribution\n\n * on /etc/django-test-autocomplete/djntest.sh or if working with virtualenv, on\n   $VIRTUAL_ENV/etc/django-test-autocomplete/djntest.sh\n\n * https://raw.github.com/machinalis/django-test-autocomplete/master/djntest.sh\n\nExtra:\nFor running the internal package tests (if you want to experiment customizing\nor extending this package) you will have to install mock package first.\n\n\nFuture features:\n----------------\n\n * Improve the python file parsing (done now with ast) for:\n    - Detecting if defined classes are TestCases or not\n    - Detect tests defined on parent TestCases\n * Clear integration with the usual way of running django tests (ie, avoid the need of\n   \"proxy\" command djntest)\n * Try it out with not-only django projects\n * Support for some other shells (zsh will probably be the next one)\n\n\nTested with:\n------------\n * GNU bash, version 4.1.5+\n * bash completion 1.1+\n * Django 1.3+\n * I'm using it together with django-nose without problems. I see no reason for\n   have it not working without nose.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/machinalis/django-test-autocomplete", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-test-autocomplete", "package_url": "https://pypi.org/project/django-test-autocomplete/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-test-autocomplete/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/machinalis/django-test-autocomplete"}, "release_url": "https://pypi.org/project/django-test-autocomplete/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "A shell-autocomplete helper that list TestCases and tests", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a helpful way to run specific tests within your project.</p>\n<p>Expedites the invocation of tests to run by providing autocompletion inside\ntest modules, listing its TestCases and also tests inside each TestCase.</p>\n<p>This first release is a proof-of-concept, and in the \u201cFuture features\u201d section\nthere is a list of possible improvements considered for next releases.</p>\n<div id=\"how-does-it-work\">\n<h2>How does it work</h2>\n<p>In order to make a non-intrusive installation, instead of coupling this\nautocompletion with the one provided by Django, we created a proxy command\nnamed \u201cdjntest\u201d which work is to redirect every call to itself to\n\u201cpython manage.py test\u201d.</p>\n<p>Later we defined our customized autocompletion for this new command.\nAutocompletion is defined with a lightweight layer of bash code that it\u2019s\ninvoked each time the user triggers autocompletion (typically by hitting the\n&lt;TAB&gt; key). Based on the provided arguments, the bash layer decides to call the\nhelper python script get_testcases.py which in turn reads the provided .py\nfile, and parse it using the <em>ast</em> module.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Located at the root of your django project, typing:</p>\n<blockquote>\n$ djntest books_application/tests/test_book_creation.py:&lt;TAB&gt;</blockquote>\n<dl>\n<dt>will list all classes defined in that file, in the standard bash way, ie:</dt>\n<dd><ul>\n<li>if there is only 1 option, it will be automatically completed</li>\n<li>if all the options at a given time have the same prefix, it\u2019s autocompleted</li>\n<li>if you start typing the name of some TestCase after the colon, hitting &lt;TAB&gt;\nagain will filter the offer to only those matching with what you are writing</li>\n</ul>\n</dd>\n</dl>\n<p>After a TestCase name, if you a point and trigger autocompletion like this</p>\n<blockquote>\n$ djntest books_application/tests/test_book_creation.py:TestStore.&lt;TAB&gt;</blockquote>\n<p>you will see listed all functions defined inside that class which name starts\nwith \u201ctest_\u201d, and again, with all the usual bash autocompletion features.</p>\n</div>\n<div id=\"disclaimer-notes\">\n<h2>Disclaimer Notes:</h2>\n<blockquote>\n<ul>\n<li>This autocompleter only facilitates the way of invoking the command for\nyour running tests. Nothing related with PYTHONPATH is done here.</li>\n<li>If your test runner does not support be called with individual tests\nmodules (like django-nose does), then you will have to wait for 0.2 release\nin order to enjoy this package.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation-notes\">\n<h2>Installation Notes:</h2>\n<p>In order to install this package you need to follow 2 steps:</p>\n<ol>\n<li><p>First install the script</p>\n<blockquote>\n<p>$ sudo pip install django-test-autocomplete</p>\n</blockquote>\n</li>\n</ol>\n<p>Alternatively, you can install it from the source distribution:\nExtract the tarball and run</p>\n<blockquote>\n$ python setup.py install</blockquote>\n<p>2. For enabling the bash autocompletion you need to look for the\nscript djntest.sh located in the source distribution, and later\ndo one of the following:</p>\n<blockquote>\n<ul>\n<li><p>inside your $HOME/.bashrc adding a line like this:</p>\n<blockquote>\n<p>source path/to/djntest.sh</p>\n</blockquote>\n</li>\n<li><p>copy the file into your bash configuration folder like this:</p>\n<blockquote>\n<p>$ copy path/to/djntest.sh /etc/bash_completion.d/</p>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n<p>And later restart your bash session.</p>\n<p>The djntest.sh file can be found:</p>\n<blockquote>\n<ul>\n<li>on the source distribution</li>\n<li>on /etc/django-test-autocomplete/djntest.sh or if working with virtualenv, on\n$VIRTUAL_ENV/etc/django-test-autocomplete/djntest.sh</li>\n<li><a href=\"https://raw.github.com/machinalis/django-test-autocomplete/master/djntest.sh\" rel=\"nofollow\">https://raw.github.com/machinalis/django-test-autocomplete/master/djntest.sh</a></li>\n</ul>\n</blockquote>\n<p>Extra:\nFor running the internal package tests (if you want to experiment customizing\nor extending this package) you will have to install mock package first.</p>\n</div>\n<div id=\"future-features\">\n<h2>Future features:</h2>\n<blockquote>\n<ul>\n<li><dl>\n<dt>Improve the python file parsing (done now with ast) for:</dt>\n<dd><ul>\n<li>Detecting if defined classes are TestCases or not</li>\n<li>Detect tests defined on parent TestCases</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Clear integration with the usual way of running django tests (ie, avoid the need of\n\u201cproxy\u201d command djntest)</li>\n<li>Try it out with not-only django projects</li>\n<li>Support for some other shells (zsh will probably be the next one)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"tested-with\">\n<h2>Tested with:</h2>\n<blockquote>\n<ul>\n<li>GNU bash, version 4.1.5+</li>\n<li>bash completion 1.1+</li>\n<li>Django 1.3+</li>\n<li>I\u2019m using it together with django-nose without problems. I see no reason for\nhave it not working without nose.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 790853, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c9a1ef61b30dcc3e6a85c97b15651456", "sha256": "541d8ed2b1dcd05751a5723ff2050c81e4ca3000fc1e17dd5735f96bfd7b0b8f"}, "downloads": -1, "filename": "django-test-autocomplete-0.1.tar.gz", "has_sig": false, "md5_digest": "c9a1ef61b30dcc3e6a85c97b15651456", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4849, "upload_time": "2012-05-30T16:28:16", "upload_time_iso_8601": "2012-05-30T16:28:16.427992Z", "url": "https://files.pythonhosted.org/packages/41/ba/e5e1ee14dfb15746da55c84bbbf33a630ac12750036370ff12c84de0b47b/django-test-autocomplete-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b5ab6c0d0bef8831f91173e823f79806", "sha256": "ab779cc98cc4e5c17140a1164275509862ab03390116fb775852dbd74af2df31"}, "downloads": -1, "filename": "django-test-autocomplete-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b5ab6c0d0bef8831f91173e823f79806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4891, "upload_time": "2012-05-30T16:31:51", "upload_time_iso_8601": "2012-05-30T16:31:51.987492Z", "url": "https://files.pythonhosted.org/packages/db/b1/9a61884fcade35c3c0cfe58cce8d50e4d0da39784bbfbda26e36b8f12e3b/django-test-autocomplete-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5d20ab0d49a28877d78b01b9b149a838", "sha256": "18c0ccdbf52e51dc1b134bab32258879cb2fe63e4b7e4bf0ef559c8a1fb3cb4c"}, "downloads": -1, "filename": "django-test-autocomplete-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5d20ab0d49a28877d78b01b9b149a838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4987, "upload_time": "2012-05-30T20:01:36", "upload_time_iso_8601": "2012-05-30T20:01:36.055401Z", "url": "https://files.pythonhosted.org/packages/1f/f9/cecb48cd55fdc6d184643d2c668bb94f5576f7ca998bec12f189d5e96ecd/django-test-autocomplete-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cd35614ca58983a293d0d4437b345060", "sha256": "c6cb55921247aa4fec741ba78d86aa8bbe16153175ade1e28158e8a55704d9ee"}, "downloads": -1, "filename": "django-test-autocomplete-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cd35614ca58983a293d0d4437b345060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5275, "upload_time": "2012-06-03T22:07:20", "upload_time_iso_8601": "2012-06-03T22:07:20.374930Z", "url": "https://files.pythonhosted.org/packages/14/0e/87a0b6f382f89943da71e74a09901eae12ea80105867ffb64f2959e5ed15/django-test-autocomplete-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3aa3a05060ab2fe3a06c03b729d0ce47", "sha256": "fe916bfba45d87d7deb1eb28f16dbe0fb97cb63da91f5e475b71aa3bc84b1793"}, "downloads": -1, "filename": "django-test-autocomplete-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3aa3a05060ab2fe3a06c03b729d0ce47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5346, "upload_time": "2012-06-05T17:29:14", "upload_time_iso_8601": "2012-06-05T17:29:14.373591Z", "url": "https://files.pythonhosted.org/packages/08/6e/3e5083f2a7de037d3250d0df4382c2d075e91047363cb1b913b4db1864ac/django-test-autocomplete-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3aa3a05060ab2fe3a06c03b729d0ce47", "sha256": "fe916bfba45d87d7deb1eb28f16dbe0fb97cb63da91f5e475b71aa3bc84b1793"}, "downloads": -1, "filename": "django-test-autocomplete-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3aa3a05060ab2fe3a06c03b729d0ce47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5346, "upload_time": "2012-06-05T17:29:14", "upload_time_iso_8601": "2012-06-05T17:29:14.373591Z", "url": "https://files.pythonhosted.org/packages/08/6e/3e5083f2a7de037d3250d0df4382c2d075e91047363cb1b913b4db1864ac/django-test-autocomplete-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:34 2020"}