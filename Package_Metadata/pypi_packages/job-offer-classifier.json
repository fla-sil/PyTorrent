{"info": {"author": "E Jimenez", "author_email": "ejimenez@intekglobal.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Sentiment Classifier\n> Classification of email job offer response emails \n\n\nThis project classifies job offer response emails as 'positive' or 'negative' according to whether an email response expresses an interest in a job offer. The dataset contains job offer response emails annotated with 'positive' and 'negative' labels. The positive labels represent an interest in a job offer.\n\n## Install\n\nThe sentiment classifier can be found on PyPI so you can just run:\n\n```shell\npip install job-offer-classifier\n```\n\nFor an editable install, clone the [GitHub](https://github.com/kikejimenez/job_offer_classifier) repository and `cd` to the cloned repo directory, then run:\n\n```shell\npip install -e job_offer_classifier\n```\n\n## How to use\n\n### Run the Pipeline\n\nFirst load and run the data science pipeline by importing the module:\n\n```\nfrom job_offer_classifier.pipeline_classifier import Pipeline\n```\n\nInstantiate the class `Pipeline` and call the `pipeline` method. This method loads the dataset, and trains and evaluates the model. The source file is the annotated dataset of payloads.\n\n```\npl = Pipeline(src_file = '../data/interim/payloads.csv',random_state=931696214)\npl.pipeline()\n```\n\nThe parameter `random_state` is the pandas seed used in the dataframe split. This parameter is necessary to present deterministic results and has been chosen from the results of the [k fold validation](#K-fold-validation).\n\n### Predict Job Offer Sentiments\n\nTo make a prediction, use the `sentiment` method\n\n```\npl.sentiment(''' Thank you for offering me the position of Merchandiser with Thomas Ltd.\nI am thankful to accept this job offer and look ahead to starting my career with your company\non June 27, 2000.''')\n```\n\n\n\n\n    'positive'\n\n\n\nOne can take an example from the test set, contained in the `dfs` attribute. This attribute is a dictionary of  pandas dataframes.\n\n```\nexample = pl.dfs['test'].sample(random_state=1213702178).payload.iloc[0]\nprint(example.strip())\n```\n\n    thank you for offering me the position of financial analyst at Lozano-Carlson.\n    i was delighted to meet\n    you and learn more about the company.\n    although i verbally agreed to accept the position, i have given it a lot of thought and decided to turn\n    down the post.\n    i believe it is in my, and your company\u2019s, best interests.\n    ultimately, i elected to take on a\n    position at a firm where i believe my skills and experience are a better fit. i truly apologise for any\n    inconvenience i have caused.\n    i was impressed with Lozano-Carlson during the interview, and continue to be at this time.\n    wishing you\n    all the best in the future and hope to still see you in attendance at the snow terrace financial conference\n    in june.\n\n\n```\npl.sentiment(example)\n```\n\n\n\n\n    'negative'\n\n\n\n## Performance\n\nWe use two tools to assesss the performance of the model:\n  - Confusion Matrix \n  - K fold Validation\n\n### Confusion matrix\n\nTo plot the confusion matrix, the `Pipeline` has the method `plot_confusion_matrix`.\n\n```\npl.plot_confusion_matrix('train')\n```\n\n\n![png](docs/images/output_23_0.png)\n\n\n```\npl.plot_confusion_matrix('test')\n```\n\n\n![png](docs/images/output_24_0.png)\n\n\nThe percentage of the cases that are negative and predicted positive (*False Negative rate*) tend to be greater than the percent of the cases that are positive and predicted negative (*True Negative rate*).  This is consistent with that fact that the dataset has more positive than negative cases and the model tends to see more positives.\n\n\n### K fold validation\n\nTo assess the performance of the model via the k fold validation method, import the class [`KFoldPipe`](/job_offer_classifier/validations#KFoldPipe)\n\n```\nfrom job_offer_classifier.validations import KFoldPipe\n```\n\nRun the `k_fold_validation` method\n\n```\nkfp = KFoldPipe(src_file='../data/interim/payloads.csv',n_splits=4)\nkfp.k_fold_validation()\n```\n\nThe averaged scores are stored in `averages`\n\n```\nkfp.averages['train']\n```\n\n\n\n\n    {'accuracy': 0.9880952388048172,\n     'accuracy_baseline': 0.7985348105430603,\n     'auc': 0.9955066740512848,\n     'auc_precision_recall': 0.9986858516931534,\n     'average_loss': 0.05668126232922077,\n     'label/mean': 0.7985348105430603,\n     'loss': 0.08459942694753408,\n     'precision': 0.9875305742025375,\n     'prediction/mean': 0.7992496639490128,\n     'recall': 0.997706413269043,\n     'global_step': 5000.0,\n     'f1_score': 0.9925863572491515}\n\n\n\n```\nkfp.averages['test']\n```\n\n\n\n\n    {'accuracy': 0.9555555433034897,\n     'accuracy_baseline': 0.800000011920929,\n     'auc': 0.9736689478158951,\n     'auc_precision_recall': 0.9902697503566742,\n     'average_loss': 0.14979842118918896,\n     'label/mean': 0.800000011920929,\n     'loss': 0.14979842118918896,\n     'precision': 0.9690233767032623,\n     'prediction/mean': 0.7958925664424896,\n     'recall': 0.9756944328546524,\n     'global_step': 5000.0,\n     'f1_score': 0.9722424484561404}\n\n\n\nThe seed of the best F1 score is stored in `best_seed`\n\n```\nkfp.best_seed\n```\n\n\n\n\n    2425132390\n\n\n\n## Documentation\n\nTo further inquire on the training parameters, how to store and load trained models, please refer to the [pipeline docs](/job_offer_classifier/pipeline_classifier). The validation method can be found in the [validations docs](/job_offer_classifier/validations) \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kikejimenez/job_offer_classifier/tree/master/", "keywords": "Machine Learning,Sentiment Analysis", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "job-offer-classifier", "package_url": "https://pypi.org/project/job-offer-classifier/", "platform": "", "project_url": "https://pypi.org/project/job-offer-classifier/", "project_urls": {"Homepage": "https://github.com/kikejimenez/job_offer_classifier/tree/master/"}, "release_url": "https://pypi.org/project/job-offer-classifier/0.0.5/", "requires_dist": ["tensorflow", "tensorflow-hub", "numpy", "pandas", "matplotlib", "seaborn"], "requires_python": ">=3.6", "summary": "Classification of Job Offer Responses", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sentiment Classifier</h1>\n<blockquote>\n<p>Classification of email job offer response emails</p>\n</blockquote>\n<p>This project classifies job offer response emails as 'positive' or 'negative' according to whether an email response expresses an interest in a job offer. The dataset contains job offer response emails annotated with 'positive' and 'negative' labels. The positive labels represent an interest in a job offer.</p>\n<h2>Install</h2>\n<p>The sentiment classifier can be found on PyPI so you can just run:</p>\n<pre>pip install job-offer-classifier\n</pre>\n<p>For an editable install, clone the <a href=\"https://github.com/kikejimenez/job_offer_classifier\" rel=\"nofollow\">GitHub</a> repository and <code>cd</code> to the cloned repo directory, then run:</p>\n<pre>pip install -e job_offer_classifier\n</pre>\n<h2>How to use</h2>\n<h3>Run the Pipeline</h3>\n<p>First load and run the data science pipeline by importing the module:</p>\n<pre><code>from job_offer_classifier.pipeline_classifier import Pipeline\n</code></pre>\n<p>Instantiate the class <code>Pipeline</code> and call the <code>pipeline</code> method. This method loads the dataset, and trains and evaluates the model. The source file is the annotated dataset of payloads.</p>\n<pre><code>pl = Pipeline(src_file = '../data/interim/payloads.csv',random_state=931696214)\npl.pipeline()\n</code></pre>\n<p>The parameter <code>random_state</code> is the pandas seed used in the dataframe split. This parameter is necessary to present deterministic results and has been chosen from the results of the <a href=\"#K-fold-validation\" rel=\"nofollow\">k fold validation</a>.</p>\n<h3>Predict Job Offer Sentiments</h3>\n<p>To make a prediction, use the <code>sentiment</code> method</p>\n<pre><code>pl.sentiment(''' Thank you for offering me the position of Merchandiser with Thomas Ltd.\nI am thankful to accept this job offer and look ahead to starting my career with your company\non June 27, 2000.''')\n</code></pre>\n<pre><code>'positive'\n</code></pre>\n<p>One can take an example from the test set, contained in the <code>dfs</code> attribute. This attribute is a dictionary of  pandas dataframes.</p>\n<pre><code>example = pl.dfs['test'].sample(random_state=1213702178).payload.iloc[0]\nprint(example.strip())\n</code></pre>\n<pre><code>thank you for offering me the position of financial analyst at Lozano-Carlson.\ni was delighted to meet\nyou and learn more about the company.\nalthough i verbally agreed to accept the position, i have given it a lot of thought and decided to turn\ndown the post.\ni believe it is in my, and your company\u2019s, best interests.\nultimately, i elected to take on a\nposition at a firm where i believe my skills and experience are a better fit. i truly apologise for any\ninconvenience i have caused.\ni was impressed with Lozano-Carlson during the interview, and continue to be at this time.\nwishing you\nall the best in the future and hope to still see you in attendance at the snow terrace financial conference\nin june.\n</code></pre>\n<pre><code>pl.sentiment(example)\n</code></pre>\n<pre><code>'negative'\n</code></pre>\n<h2>Performance</h2>\n<p>We use two tools to assesss the performance of the model:</p>\n<ul>\n<li>Confusion Matrix</li>\n<li>K fold Validation</li>\n</ul>\n<h3>Confusion matrix</h3>\n<p>To plot the confusion matrix, the <code>Pipeline</code> has the method <code>plot_confusion_matrix</code>.</p>\n<pre><code>pl.plot_confusion_matrix('train')\n</code></pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7550157d4d66288cf17aea313d609fa1e88c572e/646f63732f696d616765732f6f75747075745f32335f302e706e67\"></p>\n<pre><code>pl.plot_confusion_matrix('test')\n</code></pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/adc347ec2ea00eb523007866ee4163b1aa27b79b/646f63732f696d616765732f6f75747075745f32345f302e706e67\"></p>\n<p>The percentage of the cases that are negative and predicted positive (<em>False Negative rate</em>) tend to be greater than the percent of the cases that are positive and predicted negative (<em>True Negative rate</em>).  This is consistent with that fact that the dataset has more positive than negative cases and the model tends to see more positives.</p>\n<h3>K fold validation</h3>\n<p>To assess the performance of the model via the k fold validation method, import the class <a href=\"/job_offer_classifier/validations#KFoldPipe\" rel=\"nofollow\"><code>KFoldPipe</code></a></p>\n<pre><code>from job_offer_classifier.validations import KFoldPipe\n</code></pre>\n<p>Run the <code>k_fold_validation</code> method</p>\n<pre><code>kfp = KFoldPipe(src_file='../data/interim/payloads.csv',n_splits=4)\nkfp.k_fold_validation()\n</code></pre>\n<p>The averaged scores are stored in <code>averages</code></p>\n<pre><code>kfp.averages['train']\n</code></pre>\n<pre><code>{'accuracy': 0.9880952388048172,\n 'accuracy_baseline': 0.7985348105430603,\n 'auc': 0.9955066740512848,\n 'auc_precision_recall': 0.9986858516931534,\n 'average_loss': 0.05668126232922077,\n 'label/mean': 0.7985348105430603,\n 'loss': 0.08459942694753408,\n 'precision': 0.9875305742025375,\n 'prediction/mean': 0.7992496639490128,\n 'recall': 0.997706413269043,\n 'global_step': 5000.0,\n 'f1_score': 0.9925863572491515}\n</code></pre>\n<pre><code>kfp.averages['test']\n</code></pre>\n<pre><code>{'accuracy': 0.9555555433034897,\n 'accuracy_baseline': 0.800000011920929,\n 'auc': 0.9736689478158951,\n 'auc_precision_recall': 0.9902697503566742,\n 'average_loss': 0.14979842118918896,\n 'label/mean': 0.800000011920929,\n 'loss': 0.14979842118918896,\n 'precision': 0.9690233767032623,\n 'prediction/mean': 0.7958925664424896,\n 'recall': 0.9756944328546524,\n 'global_step': 5000.0,\n 'f1_score': 0.9722424484561404}\n</code></pre>\n<p>The seed of the best F1 score is stored in <code>best_seed</code></p>\n<pre><code>kfp.best_seed\n</code></pre>\n<pre><code>2425132390\n</code></pre>\n<h2>Documentation</h2>\n<p>To further inquire on the training parameters, how to store and load trained models, please refer to the <a href=\"/job_offer_classifier/pipeline_classifier\" rel=\"nofollow\">pipeline docs</a>. The validation method can be found in the <a href=\"/job_offer_classifier/validations\" rel=\"nofollow\">validations docs</a></p>\n\n          </div>"}, "last_serial": 7122449, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8645e2567a71297b0655c06be48a106e", "sha256": "8331a6effa3d9f4b37a000819dd3f884ce5dd37289600f73bddc229e1b923de9"}, "downloads": -1, "filename": "job_offer_classifier-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8645e2567a71297b0655c06be48a106e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14766, "upload_time": "2020-04-24T01:01:29", "upload_time_iso_8601": "2020-04-24T01:01:29.358192Z", "url": "https://files.pythonhosted.org/packages/75/ea/2d47735cd59e212a558c13171d8fa4bdb660f6eac3821af09bb597df49fb/job_offer_classifier-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b6da955718bcb5a7aaa2830464add0f", "sha256": "6e98c373f885d4d045adc6f51d53d72cfc32dd3969f44f9c781bab7bc5c0daad"}, "downloads": -1, "filename": "job_offer_classifier-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6b6da955718bcb5a7aaa2830464add0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15724, "upload_time": "2020-04-24T01:01:31", "upload_time_iso_8601": "2020-04-24T01:01:31.436694Z", "url": "https://files.pythonhosted.org/packages/3a/fd/75bae9538ae1709e0a61459a05db7fa3f9762f38ffada4c3feb7cf9b65d8/job_offer_classifier-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d805c1b560c79983b89d527271d08a74", "sha256": "cdec30cc318a56e083fb8441d36b165f3d7c452dd518ae78c7ddc85889ebc492"}, "downloads": -1, "filename": "job_offer_classifier-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d805c1b560c79983b89d527271d08a74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14784, "upload_time": "2020-04-24T19:55:53", "upload_time_iso_8601": "2020-04-24T19:55:53.390507Z", "url": "https://files.pythonhosted.org/packages/0f/34/c4e2a84704d3dfa1758ebdc1d1a49c22f6138c6553f9f1375608923ea75f/job_offer_classifier-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c74d944797a27ebad877b1cd4f16d77", "sha256": "017dc61871b8d2b6687a6362cf47186a4eff8d35c44132a19d9fd7a4ba48962e"}, "downloads": -1, "filename": "job_offer_classifier-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3c74d944797a27ebad877b1cd4f16d77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15231, "upload_time": "2020-04-24T19:55:54", "upload_time_iso_8601": "2020-04-24T19:55:54.670358Z", "url": "https://files.pythonhosted.org/packages/39/4c/e8e26dba7e25742328b16f364abf18ff0656a2beb9877dcb20283c07e229/job_offer_classifier-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7ac610e6fa820f0e70402039e8f9eca5", "sha256": "ad9a209ad3d85bfcb0581aae4679d2cffaa84ca3b0544e5a2d2ba4b167114578"}, "downloads": -1, "filename": "job_offer_classifier-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7ac610e6fa820f0e70402039e8f9eca5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14875, "upload_time": "2020-04-27T23:32:44", "upload_time_iso_8601": "2020-04-27T23:32:44.653588Z", "url": "https://files.pythonhosted.org/packages/86/ec/233ba460aabdef895ed4d75e5a44535136f7f7312b1bfe81d6990de6d305/job_offer_classifier-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e39d185bf3beddaffcd5061dec7b725", "sha256": "3b6f34ce540e806f0f17cb2ce0b14904b9d4956e3d8347453ac017a74a6ad7e6"}, "downloads": -1, "filename": "job_offer_classifier-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5e39d185bf3beddaffcd5061dec7b725", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14561, "upload_time": "2020-04-27T23:32:47", "upload_time_iso_8601": "2020-04-27T23:32:47.537331Z", "url": "https://files.pythonhosted.org/packages/b0/2e/9f97dc7a4b293c5c1fd8f9585de565f37c9ee03330a2e469aa5732b8a5a4/job_offer_classifier-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e8e6cc7b799caa4c234491ef73cfb2dc", "sha256": "94b6158feb09ed1fd1f30a29e5e514e25782519ca598172838c6e0cb23e0f789"}, "downloads": -1, "filename": "job_offer_classifier-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e8e6cc7b799caa4c234491ef73cfb2dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14877, "upload_time": "2020-04-28T18:28:39", "upload_time_iso_8601": "2020-04-28T18:28:39.274576Z", "url": "https://files.pythonhosted.org/packages/ec/5e/1ccda4fec5989d4f7af102f010762447dccf4d8b9c9b11c822f81d324a4d/job_offer_classifier-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ac315e9221d6e77fdaab1ccddc56ada", "sha256": "edfbcab2b145e099491d29161fa913a81ac7d52494f965bf9424d62eb5b4d3cd"}, "downloads": -1, "filename": "job_offer_classifier-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7ac315e9221d6e77fdaab1ccddc56ada", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15334, "upload_time": "2020-04-28T18:28:40", "upload_time_iso_8601": "2020-04-28T18:28:40.520677Z", "url": "https://files.pythonhosted.org/packages/51/65/453768ffcefb64a5a2aa2abb1fb043a98fbeea6f9ff976139097ce2876c1/job_offer_classifier-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "62205eaa321c9a7952c2ab9686d683bc", "sha256": "d4d42283d2ba06619ae2cea733e7fa40f29d50f74e83373175008edb43df13d6"}, "downloads": -1, "filename": "job_offer_classifier-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "62205eaa321c9a7952c2ab9686d683bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14887, "upload_time": "2020-04-28T19:08:35", "upload_time_iso_8601": "2020-04-28T19:08:35.231505Z", "url": "https://files.pythonhosted.org/packages/a8/32/ca831af5a7b8f5d31fe95862ebe3f057f27ee915545f1f65f97ced372e3c/job_offer_classifier-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34176dab9e02f9e81311edb81d0b7f28", "sha256": "cb4562aabab937a4d75e48c111400407b60fd9b487abd6276abca9a9beb4a48d"}, "downloads": -1, "filename": "job_offer_classifier-0.0.5.tar.gz", "has_sig": false, "md5_digest": "34176dab9e02f9e81311edb81d0b7f28", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14549, "upload_time": "2020-04-28T19:08:36", "upload_time_iso_8601": "2020-04-28T19:08:36.387048Z", "url": "https://files.pythonhosted.org/packages/4d/7e/c2f817a7b0826e089d92b59f2c90acee5c46d94af0cba5c6e7500c27109c/job_offer_classifier-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62205eaa321c9a7952c2ab9686d683bc", "sha256": "d4d42283d2ba06619ae2cea733e7fa40f29d50f74e83373175008edb43df13d6"}, "downloads": -1, "filename": "job_offer_classifier-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "62205eaa321c9a7952c2ab9686d683bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14887, "upload_time": "2020-04-28T19:08:35", "upload_time_iso_8601": "2020-04-28T19:08:35.231505Z", "url": "https://files.pythonhosted.org/packages/a8/32/ca831af5a7b8f5d31fe95862ebe3f057f27ee915545f1f65f97ced372e3c/job_offer_classifier-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34176dab9e02f9e81311edb81d0b7f28", "sha256": "cb4562aabab937a4d75e48c111400407b60fd9b487abd6276abca9a9beb4a48d"}, "downloads": -1, "filename": "job_offer_classifier-0.0.5.tar.gz", "has_sig": false, "md5_digest": "34176dab9e02f9e81311edb81d0b7f28", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14549, "upload_time": "2020-04-28T19:08:36", "upload_time_iso_8601": "2020-04-28T19:08:36.387048Z", "url": "https://files.pythonhosted.org/packages/4d/7e/c2f817a7b0826e089d92b59f2c90acee5c46d94af0cba5c6e7500c27109c/job_offer_classifier-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:19 2020"}