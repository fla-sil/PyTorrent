{"info": {"author": "Alan Hoey", "author_email": "alan.hoey@teamrubber.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "collective.recipe.funkload is a nice and simple recipe that allows easy running of funkload tests and generation of reports on them,\nrunning ./bin/funkload bench will run all the funkload tests within the buildout and then autogenerate the html reports for them.\nReport generation requires gnuplot, currently there is no way to cleanly disable this.  The reports and supporting xml is stored in\nthe path pointed to by location in your part (defaults to ./var/funkload).  You may also have the reports generated in a different directory\nusing report_destination.\n\n\nExample usage\n=============\n\nIn order for this to work its magic you need to set a base URL for the tests\nto be run on, your buildout part will look something like this:\n\n  >>> write('buildout.cfg',\n  ... \"\"\"\n  ... [buildout]\n  ... parts = test1\n  ... index = http://pypi.python.org/simple\n  ... [test1]\n  ... recipe = collective.recipe.funkload\n  ... url = 127.0.0.1:8080 \n  ... \"\"\")\n\nRunning that buildout gives us the ``funkload`` script:\n\n  >>> print 'start\\n', system(buildout) \n  start\n  ...\n  Generated script '/sample-buildout/bin/funkload'.\n\nWhich passes the host through to the subcommand handler in the recipe:\n\n  >>> import os\n  >>> script = os.path.join(sample_buildout,'bin','funkload')\n  >>> print open(script,'r').read()\n  #!...url=\"127.0.0.1:8080\"...\n\nIf you don't specify a URL buildout will fail:\n\n  >>> write('buildout.cfg',\n  ... \"\"\"\n  ... [buildout]\n  ... parts = test1\n  ... index = http://pypi.python.org/simple\n  ... [test1]\n  ... recipe = collective.recipe.funkload\n  ... \"\"\")\n\n  >>> print 'start\\n', system(buildout) \n  start\n  ...\n  KeyError: 'You must specify an address to test'\n\n\nRecord\n------\n\nSince version 0.3 you can now use record to create funkload tests even faster::\n\n    >>> print system('bin/funkload')\n    Usage:\n    bench:  Launch a FunkLoad unit test as load test. \n    record: Launch a TCPWatch proxy and record activities, then output a \n            FunkLoad script or generates a FunkLoad unit test if test_name is specified.\n    report:  Generate a report from the most recent bench result \n    test:  Launch a FunkLoad unit test. \n    <BLANKLINE> \n\nChange history\n**************\n\nHISTORY\n=======\n\n0.3.1 - 2010-04-19\n------------------\n\n- add example usage for PloneFLTestCase\n  [amleczko]\n\n- pin collective.funkload to version>0.2 \n  [amleczko]\n\n\n0.3 - 2009-11-23\n----------------\n\n- enable test recorder from funkload\n  [amleczko]\n\n- update doctests\n  [amleczko]\n\n0.2 - 2009-11-01\n----------------\n\n- enable funkload bench to run tests in released eggs [toutpt]\n\n0.1 - 2009-08-09\n----------------\n\n- Initial release\n- Added funkload script [evilbungle]\n- Added automatic report generation [evilbungle]\n\n\nContributors\n**************\n\nAlan Hoey, [evilbungle]\nTom Lazar, [tomster]\nSasha Vincic, [sashav]\nJeanMichel FRANCOIS [toutpt]\nAndrew Mleczko, [amleczko]\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.recipe.funkload", "keywords": "funkload recipe", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "collective.recipe.funkload", "package_url": "https://pypi.org/project/collective.recipe.funkload/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.recipe.funkload/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.recipe.funkload"}, "release_url": "https://pypi.org/project/collective.recipe.funkload/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Makes installing funkload, running tests and generating reports a 'no-brainer'", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>collective.recipe.funkload is a nice and simple recipe that allows easy running of funkload tests and generation of reports on them,\nrunning ./bin/funkload bench will run all the funkload tests within the buildout and then autogenerate the html reports for them.\nReport generation requires gnuplot, currently there is no way to cleanly disable this.  The reports and supporting xml is stored in\nthe path pointed to by location in your part (defaults to ./var/funkload).  You may also have the reports generated in a different directory\nusing report_destination.</p>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>In order for this to work its magic you need to set a base URL for the tests\nto be run on, your buildout part will look something like this:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = test1\n... index = http://pypi.python.org/simple\n... [test1]\n... recipe = collective.recipe.funkload\n... url = 127.0.0.1:8080\n... \"\"\")\n</pre>\n</blockquote>\n<p>Running that buildout gives us the <tt>funkload</tt> script:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print 'start\\n', system(buildout)\nstart\n...\nGenerated script '/sample-buildout/bin/funkload'.\n</pre>\n</blockquote>\n<p>Which passes the host through to the subcommand handler in the recipe:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import os\n&gt;&gt;&gt; script = os.path.join(sample_buildout,'bin','funkload')\n&gt;&gt;&gt; print open(script,'r').read()\n#!...url=\"127.0.0.1:8080\"...\n</pre>\n</blockquote>\n<p>If you don\u2019t specify a URL buildout will fail:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = test1\n... index = http://pypi.python.org/simple\n... [test1]\n... recipe = collective.recipe.funkload\n... \"\"\")\n</pre>\n<pre>&gt;&gt;&gt; print 'start\\n', system(buildout)\nstart\n...\nKeyError: 'You must specify an address to test'\n</pre>\n</blockquote>\n<div id=\"record\">\n<h3>Record</h3>\n<p>Since version 0.3 you can now use record to create funkload tests even faster:</p>\n<pre>&gt;&gt;&gt; print system('bin/funkload')\nUsage:\nbench:  Launch a FunkLoad unit test as load test.\nrecord: Launch a TCPWatch proxy and record activities, then output a\n        FunkLoad script or generates a FunkLoad unit test if test_name is specified.\nreport:  Generate a report from the most recent bench result\ntest:  Launch a FunkLoad unit test.\n&lt;BLANKLINE&gt;\n</pre>\n<div id=\"change-history\">\n<h4>Change history</h4>\n</div>\n</div>\n</div>\n<div id=\"history\">\n<h2>HISTORY</h2>\n<div id=\"id1\">\n<h3>0.3.1 - 2010-04-19</h3>\n<ul>\n<li>add example usage for PloneFLTestCase\n[amleczko]</li>\n<li>pin collective.funkload to version&gt;0.2\n[amleczko]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3 - 2009-11-23</h3>\n<ul>\n<li>enable test recorder from funkload\n[amleczko]</li>\n<li>update doctests\n[amleczko]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2 - 2009-11-01</h3>\n<ul>\n<li>enable funkload bench to run tests in released eggs [toutpt]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 - 2009-08-09</h3>\n<ul>\n<li>Initial release</li>\n<li>Added funkload script [evilbungle]</li>\n<li>Added automatic report generation [evilbungle]</li>\n</ul>\n<div id=\"contributors\">\n<h4>Contributors</h4>\n<p>Alan Hoey, [evilbungle]\nTom Lazar, [tomster]\nSasha Vincic, [sashav]\nJeanMichel FRANCOIS [toutpt]\nAndrew Mleczko, [amleczko]</p>\n</div>\n<div id=\"download\">\n<h4>Download</h4>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 845324, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5c50956c4f43961da87651a507ddb6a2", "sha256": "e982167cb44e74e15e8fd5e0f8c32e9490cde55614ea9274c9a5359a1cebe13a"}, "downloads": -1, "filename": "collective.recipe.funkload-0.1.zip", "has_sig": false, "md5_digest": "5c50956c4f43961da87651a507ddb6a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15067, "upload_time": "2009-08-09T16:11:46", "upload_time_iso_8601": "2009-08-09T16:11:46.612147Z", "url": "https://files.pythonhosted.org/packages/2d/ba/4d60aa65806566021841a965e1451b765d943f682ba7bb58d1009ae379e2/collective.recipe.funkload-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "239bcc589e6b4bb4f1ffebcf8c77ae11", "sha256": "55f543bd357926e73de8294b9257061bd0e5efa62dee89aa519209eef7804c7f"}, "downloads": -1, "filename": "collective.recipe.funkload-0.2.zip", "has_sig": false, "md5_digest": "239bcc589e6b4bb4f1ffebcf8c77ae11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15441, "upload_time": "2009-11-01T11:10:14", "upload_time_iso_8601": "2009-11-01T11:10:14.026570Z", "url": "https://files.pythonhosted.org/packages/21/d0/4d96aa91b1f4eb8d9e861d66c06d85c5749d3041263b23299d55e4cd33ac/collective.recipe.funkload-0.2.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "75155a6ffeb758e2fbbdcb90e7c666ce", "sha256": "c187c6bce9d28cb14d240a4700bd981bb94bdd4fcc9355316d6739dfe466c2d7"}, "downloads": -1, "filename": "collective.recipe.funkload-0.3.1.tar.gz", "has_sig": false, "md5_digest": "75155a6ffeb758e2fbbdcb90e7c666ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9289, "upload_time": "2010-05-04T15:05:45", "upload_time_iso_8601": "2010-05-04T15:05:45.344192Z", "url": "https://files.pythonhosted.org/packages/7c/49/db48d585a9d858a2efb980ec0377189877a510ac94f0ec67039bc30a722a/collective.recipe.funkload-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75155a6ffeb758e2fbbdcb90e7c666ce", "sha256": "c187c6bce9d28cb14d240a4700bd981bb94bdd4fcc9355316d6739dfe466c2d7"}, "downloads": -1, "filename": "collective.recipe.funkload-0.3.1.tar.gz", "has_sig": false, "md5_digest": "75155a6ffeb758e2fbbdcb90e7c666ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9289, "upload_time": "2010-05-04T15:05:45", "upload_time_iso_8601": "2010-05-04T15:05:45.344192Z", "url": "https://files.pythonhosted.org/packages/7c/49/db48d585a9d858a2efb980ec0377189877a510ac94f0ec67039bc30a722a/collective.recipe.funkload-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}