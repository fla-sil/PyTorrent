{"info": {"author": "TheDiveO", "author_email": "thediveo@gmx.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries", "Topic :: System :: Operating System Kernels :: Linux"], "description": "# Linux Kernel Namespace Relations\n\n> **NOTE:** Linux Kernel 4.9+ and Python 3.5+ supported only\n\nThis Python 3 package allows discovering the following Linux Kernel\nnamespace relationships and properties, without having to delve into\n`ioctl()` hell:\n\n- the _owning_ user namespace of another Linux kernel namespace.\n- the _parent_ namespace of either a user or a PID namespace.\n- type of a Linux kernel namespace: user, PID, network, ...\n- owner user ID of a user namespace.\n\nSee also [ioctl() operations for Linux namespaces](http://man7.org/linux/man-pages/man2/ioctl_ns.2.html)\nfor more background information of the namespace operations exposed by\nthis Python library.\n\n## Installation\n\n```bash\n$ pip3 install linuxns-rel\n```\n\n> **NOTE:** the installation automatically detects Debian 9 Stretch and\n> correctly handles installing the PyQt5 package, if it is missing, in\n> at most version 5.10.1 -- as this is the last known working PyQt5\n> release on Debian 9 Stretch.\n\n## API Documentation\n\nPlease head over to our\n[linuxns_rel API documentation](https://thediveo.github.io/linuxns_rel/)\non GitHub Pages.\n\n## CLI Examples\n\n> **NOTE:** Debian 9 Stretch users will lack the ability discover the\n> owner user ID of hierarchical namespaces. The reason is that Debian\n> 9 Stretch ships with outdated Linux kernels that lack the required\n> Kernel functionality. Please enjoy this kind of _stability_. (Or is\n> this \"austerity\"?)\n\n### List User Namespaces\n\nYou can either use a simple `lsuserns` or `sudo lsuserns` -- the latter\nensures that you'll see _all_ user namespaces instead of only those you have\nuser access to. Optionally, you can also see which other namespaces are owned\nby specific user namespaces.\n\n> **NOTE:** `lsuserns` (and `lspidns`) discover user and pid namespaces from\n> more locations than `lsns` does:\n>\n> - `/proc/$PID/ns/` (*the only location supported by `lsns`*)\n> - `/proc/$PID/fd/` (open file descriptors referencing namespaces; only\n>   `lsuserns` atm)\n> - namespace `ioctl()` (see \"man 2 ioctl_ns\")\n\n```bash\n$ sudo lsuserns\n```\n\nmay yield something like this, a pretty hierarchy of Linux kernel user\nnamespaces:\n\n```text\nuser:[4026531837] process \"init (1)\" namespace-owning user \"root\" (0)\n \u251c\u2500\u2500 user:[4026532217] process \"sleep (9403)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532401] process \"firefox (1374)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532582] process namespace-owning user \"harald\" (1000)\n \u2502   \u2514\u2500\u2500 user:[4026532583] process namespace-owning user \"harald\" (1000)\n \u2502       \u2514\u2500\u2500 user:[4026532584] process namespace-owning user \"harald\" (1000)\n \u2502           \u2514\u2500\u2500 user:[4026532585] process \"bash (1468)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532639] process \"firefox (2723)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532696] process \"firefox (2768)\" namespace-owning user \"harald\" (1000)\n \u2514\u2500\u2500 user:[4026532936] process \"firefox (17192)\" namespace-owning user \"harald\" (1000)\n```\n\nIf you want to additionally see which non-user namespaces are owned by the user namespaces, then add the CLI arg `-d` (as in \"details\"):\n\n```bash\n$ sudo lsuserns -d\n```\n\n> **NOTE:** `-c` colorizes the output, differentiating namespaces in color\n> based on their types.\n\nIn the output, \"\u27dc\" denotes a non-user namespace (ipc, mnt, net, ...) which is\nowned by a particular user namespace.\n\n```text\nuser:[4026531837] process \"init (1)\" namespace-owning user \"root\" (0)\n \u251c\u2500\u2500 \u27dc cgroup:[4026531835] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc ipc:[4026531839] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026531840] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026531860] process \"[kdevtmpfs] (57)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532216] process \"systemd-udevd (470)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532263] process \"systemd-resolved (1217)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532264] process \"systemd-timesyncd (1218)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532452] process \"haveged (1223)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532453] process \"ModemManager (1264)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532454] process \"NetworkManager (1268)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532455] process \"irqbalance (1312)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532456] process \"mpd (1402)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532524] process \"upowerd (1618)\"\n \u251c\u2500\u2500 \u27dc net:[4026532000] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc net:[4026532266] process \"haveged (1223)\"\n \u251c\u2500\u2500 \u27dc net:[4026532458] process \"rtkit-daemon (2148)\"\n \u251c\u2500\u2500 \u27dc pid:[4026531836] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc uts:[4026531838] process \"init (1)\"\n \u251c\u2500\u2500 user:[4026532217] process \"sleep (9403)\" namespace-owning user \"harald\" (1000)\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532219] process \"sleep (9403)\"\n \u251c\u2500\u2500 user:[4026532401] process \"firefox (1374)\" namespace-owning user \"harald\" (1000)\n \u2502   \u251c\u2500\u2500 \u27dc ipc:[4026532512] process \"firefox (1374)\"\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532529] process \"firefox (1374)\"\n \u251c\u2500\u2500 user:[4026532582] process namespace-owning user \"harald\" (1000)\n \u2502   \u2514\u2500\u2500 user:[4026532583] process namespace-owning user \"harald\" (1000)\n \u2502       \u2514\u2500\u2500 user:[4026532584] process namespace-owning user \"harald\" (1000)\n \u2502           \u2514\u2500\u2500 user:[4026532585] process \"bash (1468)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532639] process \"firefox (2723)\" namespace-owning user \"harald\" (1000)\n \u2502   \u251c\u2500\u2500 \u27dc ipc:[4026532640] process \"firefox (2723)\"\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532642] process \"firefox (2723)\"\n \u251c\u2500\u2500 user:[4026532696] process \"firefox (2768)\" namespace-owning user \"harald\" (1000)\n \u2502   \u251c\u2500\u2500 \u27dc ipc:[4026532697] process \"firefox (2768)\"\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532699] process \"firefox (2768)\"\n \u2514\u2500\u2500 user:[4026532936] process \"firefox (17192)\" namespace-owning user \"harald\" (1000)\n     \u251c\u2500\u2500 \u27dc ipc:[4026532937] process \"firefox (17192)\"\n     \u2514\u2500\u2500 \u27dc net:[4026532939] process \"firefox (17192)\"\n```\n\nIf you have either Chromium or/and Firefox running, then these will\nadd some user namespaces in order to sandbox their inner workings. And\nto add in some more hierarchical user namespaces, in another terminal\nsession simply issue the following command:\n\n```bash\n$ unshare -Ur unshare -Ur unshare -Ur unshare -Ur\n```\n\nDebian users may need to `sudo` because their distro's default\nconfiguration prohibits ordinary users to create new user namespaces.\n\n### List PID Namespaces\n\n```bash\n$ sudo lspidns \n```\n\nshows the PID namespace hierarchy, such as:\n\n```\npid:[4026531836] process \"init\" owner user:[4026531837] root (0)\n \u251c\u2500\u2500 pid:[4026532532] process \"sh\" owner user:[4026531837] root (0)\n \u2514\u2500\u2500 pid:[4026532468] process \"chromium-browser --type=zygote\" owner user:[4026532467] foobar (1000)\n     \u251c\u2500\u2500 pid:[4026532464] process \"chromium-browser\" owner user:[4026532589] foobar (1000)\n     \u251c\u2500\u2500 pid:[4026532466] process \"chromium-browser\" owner user:[4026532589] foobar (1000)\n     \u2514\u2500\u2500 pid:[4026532590] process \"chromium-browser\" owner user:[4026532589] foobar (1000)\n```\n\nDon't worry that the PID namespace hierarchy doesn't match the user\nnamespace hierarchy. That's perfectly fine, depending on which programs\nrun. In our example, we didn't create new PID namespaces when using\n`unshare`, so we see only additional PID namespaces created by\nChromium (Firefox doesn't create them though).\n\n### Namespace Graph\n\nOkay, with the famous `graphviz` installed (`apt-get install graphviz`)\nnow simply do:\n\n```bash\n$ sudo -E graphns\n```\n\n> Note: `-E` ensures that the graph viewer will correctly use the your\n> desktop environment theme.\n\n...and you get something fancy with arrows, et cetera, in a cute (_erm_,\n\"qute\") little viewer window:\n\n![hierarchical namespace graph](doc/source/_static/hns-graph.svg)\n\nThe view window supports these actions:\n\n- mouse drag: move the visible area around inside the view window\n  (usefull when either the graph is really large or when zoomed in).\n- mouse wheel: zoom in/out.\n- `+`/`-` keys: zoom in/out.\n- `1` key: reset zoom to 1x.\n- `s` key: save image to an SVG file.\n- `q` key: close and exit the viewer.\n- `h` key: show help on mouse and keys.\n\n## Potentially FAQs\n\n1. Q: Why do `get_userns()` and `get_parentns()` return file objects\n   (`TextIO`) instead of filesystem paths?\n\n   A: Because that's what the Linux namespace-related `ioctl()`\n   functions are giving us: open file descriptors referencing namespaces\n   in the special `nsfs` namespace filesystem. There are no paths\n   associated with them.\n\n2. Q: What argument types do `get_nstype()`, `get_userns()`,\n   `get_parentns()`, and `get_owner_uid()` expect?\n\n   A: Choose your weapon:\n   - a filesystem path (name), such as `/proc/self/ns/user`,\n   - an open file object (`TextIO`), such as returned by `open()`,\n   - an open file descriptor, such as returned by `fileno()` methods.\n\n3. Q: Why does `get_parentns()` throw an PermissionError?\n\n   A: There are multiple causes:\n   - you didn't specify a PID or user namespace,\n   - the parent namespace either doesn't exist,\n   - or the parent namespace is inaccessible to you,\n   - oh, you really have no access to the namespace reference.\n\n4. Q: Why does `get_userns()` throw an PermissionError?\n\n   A: You don't have access to the owning user namespace.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheDiveO/linuxns_rel", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "linuxns-rel", "package_url": "https://pypi.org/project/linuxns-rel/", "platform": "", "project_url": "https://pypi.org/project/linuxns-rel/", "project_urls": {"Homepage": "https://github.com/TheDiveO/linuxns_rel"}, "release_url": "https://pypi.org/project/linuxns-rel/1.0.6/", "requires_dist": ["psutil", "asciitree", "sty", "coverage ; extra == 'dev'", "sphinx ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'", "graphviz ; extra == 'graph'", "PyQt5 ; extra == 'graph'"], "requires_python": "", "summary": "Linux namespace relationships library", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Linux Kernel Namespace Relations</h1>\n<blockquote>\n<p><strong>NOTE:</strong> Linux Kernel 4.9+ and Python 3.5+ supported only</p>\n</blockquote>\n<p>This Python 3 package allows discovering the following Linux Kernel\nnamespace relationships and properties, without having to delve into\n<code>ioctl()</code> hell:</p>\n<ul>\n<li>the <em>owning</em> user namespace of another Linux kernel namespace.</li>\n<li>the <em>parent</em> namespace of either a user or a PID namespace.</li>\n<li>type of a Linux kernel namespace: user, PID, network, ...</li>\n<li>owner user ID of a user namespace.</li>\n</ul>\n<p>See also <a href=\"http://man7.org/linux/man-pages/man2/ioctl_ns.2.html\" rel=\"nofollow\">ioctl() operations for Linux namespaces</a>\nfor more background information of the namespace operations exposed by\nthis Python library.</p>\n<h2>Installation</h2>\n<pre>$ pip3 install linuxns-rel\n</pre>\n<blockquote>\n<p><strong>NOTE:</strong> the installation automatically detects Debian 9 Stretch and\ncorrectly handles installing the PyQt5 package, if it is missing, in\nat most version 5.10.1 -- as this is the last known working PyQt5\nrelease on Debian 9 Stretch.</p>\n</blockquote>\n<h2>API Documentation</h2>\n<p>Please head over to our\n<a href=\"https://thediveo.github.io/linuxns_rel/\" rel=\"nofollow\">linuxns_rel API documentation</a>\non GitHub Pages.</p>\n<h2>CLI Examples</h2>\n<blockquote>\n<p><strong>NOTE:</strong> Debian 9 Stretch users will lack the ability discover the\nowner user ID of hierarchical namespaces. The reason is that Debian\n9 Stretch ships with outdated Linux kernels that lack the required\nKernel functionality. Please enjoy this kind of <em>stability</em>. (Or is\nthis \"austerity\"?)</p>\n</blockquote>\n<h3>List User Namespaces</h3>\n<p>You can either use a simple <code>lsuserns</code> or <code>sudo lsuserns</code> -- the latter\nensures that you'll see <em>all</em> user namespaces instead of only those you have\nuser access to. Optionally, you can also see which other namespaces are owned\nby specific user namespaces.</p>\n<blockquote>\n<p><strong>NOTE:</strong> <code>lsuserns</code> (and <code>lspidns</code>) discover user and pid namespaces from\nmore locations than <code>lsns</code> does:</p>\n<ul>\n<li><code>/proc/$PID/ns/</code> (<em>the only location supported by <code>lsns</code></em>)</li>\n<li><code>/proc/$PID/fd/</code> (open file descriptors referencing namespaces; only\n<code>lsuserns</code> atm)</li>\n<li>namespace <code>ioctl()</code> (see \"man 2 ioctl_ns\")</li>\n</ul>\n</blockquote>\n<pre>$ sudo lsuserns\n</pre>\n<p>may yield something like this, a pretty hierarchy of Linux kernel user\nnamespaces:</p>\n<pre>user:[4026531837] process \"init (1)\" namespace-owning user \"root\" (0)\n \u251c\u2500\u2500 user:[4026532217] process \"sleep (9403)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532401] process \"firefox (1374)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532582] process namespace-owning user \"harald\" (1000)\n \u2502   \u2514\u2500\u2500 user:[4026532583] process namespace-owning user \"harald\" (1000)\n \u2502       \u2514\u2500\u2500 user:[4026532584] process namespace-owning user \"harald\" (1000)\n \u2502           \u2514\u2500\u2500 user:[4026532585] process \"bash (1468)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532639] process \"firefox (2723)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532696] process \"firefox (2768)\" namespace-owning user \"harald\" (1000)\n \u2514\u2500\u2500 user:[4026532936] process \"firefox (17192)\" namespace-owning user \"harald\" (1000)\n</pre>\n<p>If you want to additionally see which non-user namespaces are owned by the user namespaces, then add the CLI arg <code>-d</code> (as in \"details\"):</p>\n<pre>$ sudo lsuserns -d\n</pre>\n<blockquote>\n<p><strong>NOTE:</strong> <code>-c</code> colorizes the output, differentiating namespaces in color\nbased on their types.</p>\n</blockquote>\n<p>In the output, \"\u27dc\" denotes a non-user namespace (ipc, mnt, net, ...) which is\nowned by a particular user namespace.</p>\n<pre>user:[4026531837] process \"init (1)\" namespace-owning user \"root\" (0)\n \u251c\u2500\u2500 \u27dc cgroup:[4026531835] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc ipc:[4026531839] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026531840] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026531860] process \"[kdevtmpfs] (57)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532216] process \"systemd-udevd (470)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532263] process \"systemd-resolved (1217)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532264] process \"systemd-timesyncd (1218)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532452] process \"haveged (1223)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532453] process \"ModemManager (1264)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532454] process \"NetworkManager (1268)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532455] process \"irqbalance (1312)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532456] process \"mpd (1402)\"\n \u251c\u2500\u2500 \u27dc mnt:[4026532524] process \"upowerd (1618)\"\n \u251c\u2500\u2500 \u27dc net:[4026532000] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc net:[4026532266] process \"haveged (1223)\"\n \u251c\u2500\u2500 \u27dc net:[4026532458] process \"rtkit-daemon (2148)\"\n \u251c\u2500\u2500 \u27dc pid:[4026531836] process \"init (1)\"\n \u251c\u2500\u2500 \u27dc uts:[4026531838] process \"init (1)\"\n \u251c\u2500\u2500 user:[4026532217] process \"sleep (9403)\" namespace-owning user \"harald\" (1000)\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532219] process \"sleep (9403)\"\n \u251c\u2500\u2500 user:[4026532401] process \"firefox (1374)\" namespace-owning user \"harald\" (1000)\n \u2502   \u251c\u2500\u2500 \u27dc ipc:[4026532512] process \"firefox (1374)\"\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532529] process \"firefox (1374)\"\n \u251c\u2500\u2500 user:[4026532582] process namespace-owning user \"harald\" (1000)\n \u2502   \u2514\u2500\u2500 user:[4026532583] process namespace-owning user \"harald\" (1000)\n \u2502       \u2514\u2500\u2500 user:[4026532584] process namespace-owning user \"harald\" (1000)\n \u2502           \u2514\u2500\u2500 user:[4026532585] process \"bash (1468)\" namespace-owning user \"harald\" (1000)\n \u251c\u2500\u2500 user:[4026532639] process \"firefox (2723)\" namespace-owning user \"harald\" (1000)\n \u2502   \u251c\u2500\u2500 \u27dc ipc:[4026532640] process \"firefox (2723)\"\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532642] process \"firefox (2723)\"\n \u251c\u2500\u2500 user:[4026532696] process \"firefox (2768)\" namespace-owning user \"harald\" (1000)\n \u2502   \u251c\u2500\u2500 \u27dc ipc:[4026532697] process \"firefox (2768)\"\n \u2502   \u2514\u2500\u2500 \u27dc net:[4026532699] process \"firefox (2768)\"\n \u2514\u2500\u2500 user:[4026532936] process \"firefox (17192)\" namespace-owning user \"harald\" (1000)\n     \u251c\u2500\u2500 \u27dc ipc:[4026532937] process \"firefox (17192)\"\n     \u2514\u2500\u2500 \u27dc net:[4026532939] process \"firefox (17192)\"\n</pre>\n<p>If you have either Chromium or/and Firefox running, then these will\nadd some user namespaces in order to sandbox their inner workings. And\nto add in some more hierarchical user namespaces, in another terminal\nsession simply issue the following command:</p>\n<pre>$ unshare -Ur unshare -Ur unshare -Ur unshare -Ur\n</pre>\n<p>Debian users may need to <code>sudo</code> because their distro's default\nconfiguration prohibits ordinary users to create new user namespaces.</p>\n<h3>List PID Namespaces</h3>\n<pre>$ sudo lspidns \n</pre>\n<p>shows the PID namespace hierarchy, such as:</p>\n<pre><code>pid:[4026531836] process \"init\" owner user:[4026531837] root (0)\n \u251c\u2500\u2500 pid:[4026532532] process \"sh\" owner user:[4026531837] root (0)\n \u2514\u2500\u2500 pid:[4026532468] process \"chromium-browser --type=zygote\" owner user:[4026532467] foobar (1000)\n     \u251c\u2500\u2500 pid:[4026532464] process \"chromium-browser\" owner user:[4026532589] foobar (1000)\n     \u251c\u2500\u2500 pid:[4026532466] process \"chromium-browser\" owner user:[4026532589] foobar (1000)\n     \u2514\u2500\u2500 pid:[4026532590] process \"chromium-browser\" owner user:[4026532589] foobar (1000)\n</code></pre>\n<p>Don't worry that the PID namespace hierarchy doesn't match the user\nnamespace hierarchy. That's perfectly fine, depending on which programs\nrun. In our example, we didn't create new PID namespaces when using\n<code>unshare</code>, so we see only additional PID namespaces created by\nChromium (Firefox doesn't create them though).</p>\n<h3>Namespace Graph</h3>\n<p>Okay, with the famous <code>graphviz</code> installed (<code>apt-get install graphviz</code>)\nnow simply do:</p>\n<pre>$ sudo -E graphns\n</pre>\n<blockquote>\n<p>Note: <code>-E</code> ensures that the graph viewer will correctly use the your\ndesktop environment theme.</p>\n</blockquote>\n<p>...and you get something fancy with arrows, et cetera, in a cute (<em>erm</em>,\n\"qute\") little viewer window:</p>\n<p><img alt=\"hierarchical namespace graph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70579b1a4c82058df1e89285e72c4a71e7e65c63/646f632f736f757263652f5f7374617469632f686e732d67726170682e737667\"></p>\n<p>The view window supports these actions:</p>\n<ul>\n<li>mouse drag: move the visible area around inside the view window\n(usefull when either the graph is really large or when zoomed in).</li>\n<li>mouse wheel: zoom in/out.</li>\n<li><code>+</code>/<code>-</code> keys: zoom in/out.</li>\n<li><code>1</code> key: reset zoom to 1x.</li>\n<li><code>s</code> key: save image to an SVG file.</li>\n<li><code>q</code> key: close and exit the viewer.</li>\n<li><code>h</code> key: show help on mouse and keys.</li>\n</ul>\n<h2>Potentially FAQs</h2>\n<ol>\n<li>\n<p>Q: Why do <code>get_userns()</code> and <code>get_parentns()</code> return file objects\n(<code>TextIO</code>) instead of filesystem paths?</p>\n<p>A: Because that's what the Linux namespace-related <code>ioctl()</code>\nfunctions are giving us: open file descriptors referencing namespaces\nin the special <code>nsfs</code> namespace filesystem. There are no paths\nassociated with them.</p>\n</li>\n<li>\n<p>Q: What argument types do <code>get_nstype()</code>, <code>get_userns()</code>,\n<code>get_parentns()</code>, and <code>get_owner_uid()</code> expect?</p>\n<p>A: Choose your weapon:</p>\n<ul>\n<li>a filesystem path (name), such as <code>/proc/self/ns/user</code>,</li>\n<li>an open file object (<code>TextIO</code>), such as returned by <code>open()</code>,</li>\n<li>an open file descriptor, such as returned by <code>fileno()</code> methods.</li>\n</ul>\n</li>\n<li>\n<p>Q: Why does <code>get_parentns()</code> throw an PermissionError?</p>\n<p>A: There are multiple causes:</p>\n<ul>\n<li>you didn't specify a PID or user namespace,</li>\n<li>the parent namespace either doesn't exist,</li>\n<li>or the parent namespace is inaccessible to you,</li>\n<li>oh, you really have no access to the namespace reference.</li>\n</ul>\n</li>\n<li>\n<p>Q: Why does <code>get_userns()</code> throw an PermissionError?</p>\n<p>A: You don't have access to the owning user namespace.</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6415996, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "d4d88682104392021823b0637bdc3b20", "sha256": "629b1e485a27d37d5a49119d5883808a9e5d454427309f53a86e8f8efe7c5fa1"}, "downloads": -1, "filename": "linuxns_rel-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4d88682104392021823b0637bdc3b20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9542, "upload_time": "2018-07-15T17:57:06", "upload_time_iso_8601": "2018-07-15T17:57:06.124284Z", "url": "https://files.pythonhosted.org/packages/a5/6e/42d60e5dae57c35bceccdbb85ddd8836c0661eb463b4b6f53805cddefe39/linuxns_rel-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb2624b85da3673538c690abacdf796d", "sha256": "73e5cb09cc98a00303d2ae593d37a7d7d736360fc75d8b48cf5dc5672ce8b792"}, "downloads": -1, "filename": "linuxns-rel-0.9.0.tar.gz", "has_sig": false, "md5_digest": "fb2624b85da3673538c690abacdf796d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8467, "upload_time": "2018-07-15T17:57:07", "upload_time_iso_8601": "2018-07-15T17:57:07.295379Z", "url": "https://files.pythonhosted.org/packages/6f/eb/a0d29f9386a410e94c96b3b8ead5efdb8b7779a6b752916968c32ff77cd4/linuxns-rel-0.9.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "991f7f14c264bae2860cc996c19673f2", "sha256": "4d5cf242a0d5945300728322a6fd9cde7287ce57ae6fe6e20051a0cb167937b2"}, "downloads": -1, "filename": "linuxns_rel-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "991f7f14c264bae2860cc996c19673f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11666, "upload_time": "2018-07-16T17:15:04", "upload_time_iso_8601": "2018-07-16T17:15:04.413150Z", "url": "https://files.pythonhosted.org/packages/b3/bb/49ca3884a8a8a1b39b501ae271748c46ebead2c518884f4147f559f7519b/linuxns_rel-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9155b3d66d4d8bceeb9502d1e2286c56", "sha256": "0db0f8ca08d74597066062556d63a55a761827452fa3a9f1ffc05023347b0550"}, "downloads": -1, "filename": "linuxns-rel-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9155b3d66d4d8bceeb9502d1e2286c56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10360, "upload_time": "2018-07-16T17:15:05", "upload_time_iso_8601": "2018-07-16T17:15:05.489148Z", "url": "https://files.pythonhosted.org/packages/09/77/07d400244ade8d1cb98a20f6ee90078ae191aa6c1df459c163a6263a5273/linuxns-rel-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c6c1c7debff255777bae9199eb6db40a", "sha256": "c537492610799ade1b94d7acbee5cb59226abff46c8d03645a537380de6b8ff1"}, "downloads": -1, "filename": "linuxns_rel-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c6c1c7debff255777bae9199eb6db40a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13866, "upload_time": "2018-07-21T18:34:49", "upload_time_iso_8601": "2018-07-21T18:34:49.588920Z", "url": "https://files.pythonhosted.org/packages/56/d3/0c20c0b97b210f5267c1aae178a4a9fcf3dd5d48635fd4476345ba183cdc/linuxns_rel-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8964785fffb503adf8082d8093305c41", "sha256": "5106e5e81d3edabd752aea33b9252b3cc5ec4b8fe58d0b1e52454a6a56add59d"}, "downloads": -1, "filename": "linuxns-rel-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8964785fffb503adf8082d8093305c41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12330, "upload_time": "2018-07-21T18:34:50", "upload_time_iso_8601": "2018-07-21T18:34:50.613276Z", "url": "https://files.pythonhosted.org/packages/6e/c8/8268d50d4e65803f90d6bd9b093e185aafb0f54b4c057405e66bd4d8ee72/linuxns-rel-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "68fc9a08e2ec45a642b0d3b12b7ad2f2", "sha256": "af5c43e862e94dddb709cbe2d0801662c7533d65468e31787b53087fb17917da"}, "downloads": -1, "filename": "linuxns_rel-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "68fc9a08e2ec45a642b0d3b12b7ad2f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17264, "upload_time": "2018-08-04T17:14:46", "upload_time_iso_8601": "2018-08-04T17:14:46.360149Z", "url": "https://files.pythonhosted.org/packages/3b/be/c8cfb428d5fc57d928d9cf64d07e3371e0e0734a2155b9296420c8fd1c14/linuxns_rel-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05809c5950218e1a48deb35e7d2d68e3", "sha256": "c46dd10081402af33f1325491af903ee07b6ff3bf5bde542cd1b15015ffa3bf6"}, "downloads": -1, "filename": "linuxns-rel-1.0.2.tar.gz", "has_sig": false, "md5_digest": "05809c5950218e1a48deb35e7d2d68e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14593, "upload_time": "2018-08-04T17:14:47", "upload_time_iso_8601": "2018-08-04T17:14:47.463957Z", "url": "https://files.pythonhosted.org/packages/1f/aa/1b100473ae92732c06391737ad29613986fa46badfdee9c17e64934c4e54/linuxns-rel-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "1b1de9fc7a27b80f2046ea696c97d35e", "sha256": "3ba02f0abdc4884eff7de4fd2512623dd97f846df953859de9a54ddc43ba97d6"}, "downloads": -1, "filename": "linuxns_rel-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1b1de9fc7a27b80f2046ea696c97d35e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17835, "upload_time": "2018-08-06T15:57:31", "upload_time_iso_8601": "2018-08-06T15:57:31.345294Z", "url": "https://files.pythonhosted.org/packages/a1/e4/fc98bae0042b826320ed3f6c16506c53181daea137d9860f7c8aeb6e828d/linuxns_rel-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6166c678c2656ee085434217a1e3133", "sha256": "479f9aa8dc96c68d60788fac27e6f971a1076399fc1d98ffee8399011aba4080"}, "downloads": -1, "filename": "linuxns-rel-1.0.3.tar.gz", "has_sig": false, "md5_digest": "f6166c678c2656ee085434217a1e3133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15065, "upload_time": "2018-08-06T15:57:32", "upload_time_iso_8601": "2018-08-06T15:57:32.204917Z", "url": "https://files.pythonhosted.org/packages/d8/80/f8355f6d0c9f7619e9c13999c98cbd4de968075f4e17c9afba39a127066c/linuxns-rel-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8020dca83968d5d2a8875468041b1876", "sha256": "c5d4beb815ed31ef5624c2acebea98b779d845ffedf63ca970236875096a8b3a"}, "downloads": -1, "filename": "linuxns_rel-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8020dca83968d5d2a8875468041b1876", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18087, "upload_time": "2018-08-14T14:41:31", "upload_time_iso_8601": "2018-08-14T14:41:31.957136Z", "url": "https://files.pythonhosted.org/packages/4f/f4/ed0fa4faaac500cd19daa3708d7c1dd8b8ac3e830ca05a3291679fd64183/linuxns_rel-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b13adc86a747fbdeb6ab8435836267b5", "sha256": "ef1265448d0a0cd76fb8d40e4165ae397448c7c5c58175101d07a6050c95b2f0"}, "downloads": -1, "filename": "linuxns-rel-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b13adc86a747fbdeb6ab8435836267b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15550, "upload_time": "2018-08-14T14:41:33", "upload_time_iso_8601": "2018-08-14T14:41:33.581587Z", "url": "https://files.pythonhosted.org/packages/5e/a5/a04014676cc9a242bb57f0cc8f97efe815ddf6ed9fdef18c886754fdd497/linuxns-rel-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "55bc8c3bb5d94de75e00135b8f0371a4", "sha256": "aaae7209fabbed05a8107b018debf54cec645261fc5c658c7341da9b8b85423e"}, "downloads": -1, "filename": "linuxns_rel-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "55bc8c3bb5d94de75e00135b8f0371a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23700, "upload_time": "2019-12-20T16:06:21", "upload_time_iso_8601": "2019-12-20T16:06:21.953138Z", "url": "https://files.pythonhosted.org/packages/ce/70/67496692f89fbb99c948b66f9d5f5ca6bd7e078e5d16f4f3fa55a4eb4578/linuxns_rel-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4fb374dbda2434881e803b7734c5131", "sha256": "8510608acd7bfd4bc7a4dff94b6ea01be210aca922c6ca5786cb660c90264852"}, "downloads": -1, "filename": "linuxns-rel-1.0.5.tar.gz", "has_sig": false, "md5_digest": "c4fb374dbda2434881e803b7734c5131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17713, "upload_time": "2019-12-20T16:06:23", "upload_time_iso_8601": "2019-12-20T16:06:23.152631Z", "url": "https://files.pythonhosted.org/packages/23/db/b6d72a2da4a8d5ea4120637dea9164c6ed9e3ea3e70928240e212237296a/linuxns-rel-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "f695819c68799004e997287eaf671ba6", "sha256": "948c2859e5e838acb856b14c841978b2b2320006335855a9a652e43145935aa6"}, "downloads": -1, "filename": "linuxns_rel-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f695819c68799004e997287eaf671ba6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25420, "upload_time": "2020-01-08T15:55:34", "upload_time_iso_8601": "2020-01-08T15:55:34.603958Z", "url": "https://files.pythonhosted.org/packages/a5/8f/89a4db065d63395de1412cd3f7686bf60a9d08d50ef1bd21e72cb3d946d9/linuxns_rel-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e463b175742ffa6412b8d61d97a57240", "sha256": "24de12956e2cc79686c65b518a5ace73af3631a5dff4cc246ccc72c10d6738b4"}, "downloads": -1, "filename": "linuxns-rel-1.0.6.tar.gz", "has_sig": false, "md5_digest": "e463b175742ffa6412b8d61d97a57240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19505, "upload_time": "2020-01-08T15:55:36", "upload_time_iso_8601": "2020-01-08T15:55:36.232996Z", "url": "https://files.pythonhosted.org/packages/59/e4/d7f710305bd813d6f42f5abb324e531be6651080c25e13c2afadf379b059/linuxns-rel-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f695819c68799004e997287eaf671ba6", "sha256": "948c2859e5e838acb856b14c841978b2b2320006335855a9a652e43145935aa6"}, "downloads": -1, "filename": "linuxns_rel-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f695819c68799004e997287eaf671ba6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25420, "upload_time": "2020-01-08T15:55:34", "upload_time_iso_8601": "2020-01-08T15:55:34.603958Z", "url": "https://files.pythonhosted.org/packages/a5/8f/89a4db065d63395de1412cd3f7686bf60a9d08d50ef1bd21e72cb3d946d9/linuxns_rel-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e463b175742ffa6412b8d61d97a57240", "sha256": "24de12956e2cc79686c65b518a5ace73af3631a5dff4cc246ccc72c10d6738b4"}, "downloads": -1, "filename": "linuxns-rel-1.0.6.tar.gz", "has_sig": false, "md5_digest": "e463b175742ffa6412b8d61d97a57240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19505, "upload_time": "2020-01-08T15:55:36", "upload_time_iso_8601": "2020-01-08T15:55:36.232996Z", "url": "https://files.pythonhosted.org/packages/59/e4/d7f710305bd813d6f42f5abb324e531be6651080c25e13c2afadf379b059/linuxns-rel-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:27 2020"}