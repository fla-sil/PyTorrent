{"info": {"author": "Department for International Trade", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# directory-signature-auth\n\n[![code-climate-image]][code-climate]\n[![circle-ci-image]][circle-ci]\n[![codecov-image]][codecov]\n[![pypi-image]][pypi]\n\n**Library implementing Hawk authentication scheme using a message authentication code (MAC) algorithm to provide partial HTTP request cryptographic verification.**\n\n---\n\nThe client implements `RequestSigner` to generate a secret-salted hash of the request URL and body. The secret-salt is shared with the target server.\n\nThe target server implements `RequestSignatureChecker` to check the signature provided in the request header accurately describes the request's URL and request body.\n\nIf `RequestSignatureChecker` accepts the header as genuine then the request is accepted, otherwise the request is rejected.\n\n## RequestSigner usage\n\n### Python requests\n\nOn the client, a signature can be generated for a [requests](http://docs.python-requests.org/en/master/)'s `requests.Request`:\n\n```\nimport requests\n\nfrom sigauth.utils import RequestSigner\n\nfrom django.conf import settings\n\n\nrequest_signer = RequestSigner(settings.API_SIGNATURE_SECRET)\n\n\ndef send_request(method, url, body):\n    request = requests.Request(method=method, url=url, body=body).prepare()\n    sign_request(request)\n    return requests.Session().send(request)\n\n\ndef sign_request(request):\n    headers = request_signer.get_signature_headers(\n        url=request.path_url,\n        body=request.body,\n        method=request.method,\n        content_type=request.headers.get('Content-Type'),\n    )\n    request.headers.update(headers)\n```\n\n\n## RequestSignatureChecker usage\n\n### Django Rest Framework\n\nThis library implements a wrapper around `RequestSignatureChecker` for Django Rest Framework: `SignatureCheckPermissionBase`. It must be sub-classed to set the secret:\n\n```\nfrom sigauth import permissions\n\nfrom django.conf import settings\n\n\nclass SignatureCheckPermission(permissions.SignatureCheckPermissionBase):\n    secret = settings.SIGNATURE_SECRET\n```\n\nOn the target server, `SignatureCheckPermission` can then be set in the `DEFAULT_PERMISSION_CLASSES` setting, or on a specific DRF view's `permission_classes` attribute.\n\n### Django View\n\nOn the target server, the signature checker can be implemented on views too:\n\n```\nfrom django.http import HttpResponseForbidden\n\nfrom sigauth.utils import RequestSignatureChecker\n\n\napi_checker = RequestSignatureChecker(settings.SIGNATURE_SECRET)\n\n\nclass SignatureCheckMixin:\n    def dispatch(self, request, *args, **kwargs):\n        if api_checker.test_signature(request) is False:\n            return HttpResponseForbidden()\n        return super().dispatch(request, path='', *args, **kwargs)\n```\n\n`SignatureCheckMixin` can then be used on a view to reject incoming requests that have been tampered with.\n\nNote that in the above examples, the client's `settings.API_SIGNATURE_SECRET` must be the same value as api's `settings.SIGNATURE_SECRET`\n\n### Middleware\n\nSome services may expect every request to require signature checks. This library implements a wrapper around `RequestSignatureChecker` for Django middleware to facilitate this: `SignatureCheckMiddlewareBase`. It must be sub-classed to set the secret:\n\n```\nfrom sigauth.middleware import SignatureCheckMiddlewareBase\n\nfrom django.conf import settings\n\nclass SignatureCheckMiddleware(SignatureCheckMiddlewareBase):\n    secret = settings.SIGNATURE_SECRET\n\n```\n\n`SignatureCheckMiddleware` can then be added to the `MIDDLEWARE` setting (or `MIDDLEWARE_CLASSES` if using Django < 2). Set `SIGAUTH_URL_NAMES_WHITELIST` settings to a list of url names that should be excluded from checks.\n\n## Installation\n\n```shell\npip install -e git+https://git@github.com/uktrade/directory-signature-auth.git@v1.0.0#egg=directory-signature-auth\n```\n\n## Development\n\n    $ git clone https://github.com/uktrade/directory-signature-auth\n    $ cd directory-signature-auth\n    $ make\n\n## Publish to PyPI\n\nThe package should be published to PyPI on merge to master. If you need to do it locally then get the credentials from rattic and add the environment variables to your host machine:\n\n| Setting                     |\n| --------------------------- |\n| DIRECTORY_PYPI_USERNAME     |\n| DIRECTORY_PYPI_PASSWORD     |\n\n\nThen run the following command:\n\n    make publish\n\n[code-climate-image]: https://codeclimate.com/github/uktrade/directory-signature-auth/badges/issue_count.svg\n[code-climate]: https://codeclimate.com/github/uktrade/directory-signature-auth\n\n[circle-ci-image]: https://circleci.com/gh/uktrade/directory-signature-auth/tree/master.svg?style=svg\n[circle-ci]: https://circleci.com/gh/uktrade/directory-signature-auth/tree/master\n\n[codecov-image]: https://codecov.io/gh/uktrade/directory-signature-auth/branch/master/graph/badge.svg\n[codecov]: https://codecov.io/gh/uktrade/directory-signature-auth\n\n[pypi-image]: https://badge.fury.io/py/sigauth.svg\n[pypi]: https://badge.fury.io/py/sigauth\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uktrade/directory-signature-auth", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sigauth", "package_url": "https://pypi.org/project/sigauth/", "platform": "", "project_url": "https://pypi.org/project/sigauth/", "project_urls": {"Homepage": "https://github.com/uktrade/directory-signature-auth"}, "release_url": "https://pypi.org/project/sigauth/4.1.1/", "requires_dist": ["django (<3.0a1,>=1.11.22)", "djangorestframework (<4.0.0,>=3.4.7)", "mohawk (<1.0.0,>=0.3.4)", "pytest (==3.10.0) ; extra == 'test'", "pytest-cov (==2.7.1) ; extra == 'test'", "pytest-django (==3.5.0) ; extra == 'test'", "flake8 (==3.0.4) ; extra == 'test'", "wheel (<1.0.0,>=0.31.0) ; extra == 'test'", "setuptools (<39.0.0,>=38.6.0) ; extra == 'test'", "codecov ; extra == 'test'", "twine ; extra == 'test'"], "requires_python": "", "summary": "Signature authentication library for Export Directory.", "version": "4.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>directory-signature-auth</h1>\n<p><a href=\"https://codeclimate.com/github/uktrade/directory-signature-auth\" rel=\"nofollow\"><img alt=\"code-climate-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06d322e215555b8e44936ef766d386d7f966a9d8/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f756b74726164652f6469726563746f72792d7369676e61747572652d617574682f6261646765732f69737375655f636f756e742e737667\"></a>\n<a href=\"https://circleci.com/gh/uktrade/directory-signature-auth/tree/master\" rel=\"nofollow\"><img alt=\"circle-ci-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/977a1259e3b9c8606fbabff0ae863aa9a6a4d0b0/68747470733a2f2f636972636c6563692e636f6d2f67682f756b74726164652f6469726563746f72792d7369676e61747572652d617574682f747265652f6d61737465722e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/uktrade/directory-signature-auth\" rel=\"nofollow\"><img alt=\"codecov-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d325b81dd5e87f8cb3edcd5223137c06e2967ba/68747470733a2f2f636f6465636f762e696f2f67682f756b74726164652f6469726563746f72792d7369676e61747572652d617574682f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/sigauth\" rel=\"nofollow\"><img alt=\"pypi-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/305cd99164c29657f779267df2a7e6aa78ad0172/68747470733a2f2f62616467652e667572792e696f2f70792f736967617574682e737667\"></a></p>\n<p><strong>Library implementing Hawk authentication scheme using a message authentication code (MAC) algorithm to provide partial HTTP request cryptographic verification.</strong></p>\n<hr>\n<p>The client implements <code>RequestSigner</code> to generate a secret-salted hash of the request URL and body. The secret-salt is shared with the target server.</p>\n<p>The target server implements <code>RequestSignatureChecker</code> to check the signature provided in the request header accurately describes the request's URL and request body.</p>\n<p>If <code>RequestSignatureChecker</code> accepts the header as genuine then the request is accepted, otherwise the request is rejected.</p>\n<h2>RequestSigner usage</h2>\n<h3>Python requests</h3>\n<p>On the client, a signature can be generated for a <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests</a>'s <code>requests.Request</code>:</p>\n<pre><code>import requests\n\nfrom sigauth.utils import RequestSigner\n\nfrom django.conf import settings\n\n\nrequest_signer = RequestSigner(settings.API_SIGNATURE_SECRET)\n\n\ndef send_request(method, url, body):\n    request = requests.Request(method=method, url=url, body=body).prepare()\n    sign_request(request)\n    return requests.Session().send(request)\n\n\ndef sign_request(request):\n    headers = request_signer.get_signature_headers(\n        url=request.path_url,\n        body=request.body,\n        method=request.method,\n        content_type=request.headers.get('Content-Type'),\n    )\n    request.headers.update(headers)\n</code></pre>\n<h2>RequestSignatureChecker usage</h2>\n<h3>Django Rest Framework</h3>\n<p>This library implements a wrapper around <code>RequestSignatureChecker</code> for Django Rest Framework: <code>SignatureCheckPermissionBase</code>. It must be sub-classed to set the secret:</p>\n<pre><code>from sigauth import permissions\n\nfrom django.conf import settings\n\n\nclass SignatureCheckPermission(permissions.SignatureCheckPermissionBase):\n    secret = settings.SIGNATURE_SECRET\n</code></pre>\n<p>On the target server, <code>SignatureCheckPermission</code> can then be set in the <code>DEFAULT_PERMISSION_CLASSES</code> setting, or on a specific DRF view's <code>permission_classes</code> attribute.</p>\n<h3>Django View</h3>\n<p>On the target server, the signature checker can be implemented on views too:</p>\n<pre><code>from django.http import HttpResponseForbidden\n\nfrom sigauth.utils import RequestSignatureChecker\n\n\napi_checker = RequestSignatureChecker(settings.SIGNATURE_SECRET)\n\n\nclass SignatureCheckMixin:\n    def dispatch(self, request, *args, **kwargs):\n        if api_checker.test_signature(request) is False:\n            return HttpResponseForbidden()\n        return super().dispatch(request, path='', *args, **kwargs)\n</code></pre>\n<p><code>SignatureCheckMixin</code> can then be used on a view to reject incoming requests that have been tampered with.</p>\n<p>Note that in the above examples, the client's <code>settings.API_SIGNATURE_SECRET</code> must be the same value as api's <code>settings.SIGNATURE_SECRET</code></p>\n<h3>Middleware</h3>\n<p>Some services may expect every request to require signature checks. This library implements a wrapper around <code>RequestSignatureChecker</code> for Django middleware to facilitate this: <code>SignatureCheckMiddlewareBase</code>. It must be sub-classed to set the secret:</p>\n<pre><code>from sigauth.middleware import SignatureCheckMiddlewareBase\n\nfrom django.conf import settings\n\nclass SignatureCheckMiddleware(SignatureCheckMiddlewareBase):\n    secret = settings.SIGNATURE_SECRET\n\n</code></pre>\n<p><code>SignatureCheckMiddleware</code> can then be added to the <code>MIDDLEWARE</code> setting (or <code>MIDDLEWARE_CLASSES</code> if using Django &lt; 2). Set <code>SIGAUTH_URL_NAMES_WHITELIST</code> settings to a list of url names that should be excluded from checks.</p>\n<h2>Installation</h2>\n<pre>pip install -e git+https://git@github.com/uktrade/directory-signature-auth.git@v1.0.0#egg<span class=\"o\">=</span>directory-signature-auth\n</pre>\n<h2>Development</h2>\n<pre><code>$ git clone https://github.com/uktrade/directory-signature-auth\n$ cd directory-signature-auth\n$ make\n</code></pre>\n<h2>Publish to PyPI</h2>\n<p>The package should be published to PyPI on merge to master. If you need to do it locally then get the credentials from rattic and add the environment variables to your host machine:</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DIRECTORY_PYPI_USERNAME</td>\n</tr>\n<tr>\n<td>DIRECTORY_PYPI_PASSWORD</td>\n</tr></tbody></table>\n<p>Then run the following command:</p>\n<pre><code>make publish\n</code></pre>\n\n          </div>"}, "last_serial": 5487021, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "38abf8c30326016c3c60916ae5488114", "sha256": "e556402539115498471606ed743768ee8562a33fa638a77aff79c6096b07ece7"}, "downloads": -1, "filename": "sigauth-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38abf8c30326016c3c60916ae5488114", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9588, "upload_time": "2018-03-05T10:16:51", "upload_time_iso_8601": "2018-03-05T10:16:51.458744Z", "url": "https://files.pythonhosted.org/packages/ed/06/a821c43e2c906bd52f57657e545b89be72a5db4c3eb1725305c69c8818ab/sigauth-2.0.1-py3-none-any.whl", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "af9c96e5d0aee8e52f28f21e6a50d605", "sha256": "32f29c664657b0987a40a0ef0a77114d75ac0f684acab8d698c6755e7ad6fa49"}, "downloads": -1, "filename": "sigauth-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af9c96e5d0aee8e52f28f21e6a50d605", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8265, "upload_time": "2018-03-05T10:21:54", "upload_time_iso_8601": "2018-03-05T10:21:54.069669Z", "url": "https://files.pythonhosted.org/packages/8d/6f/8858639823c99eabecd299a1f28df21de50da87dfb41d8d4bb8d9c8c1ed2/sigauth-2.0.2-py3-none-any.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "738a3c385e5530f5360501ea5b33a010", "sha256": "1fe620fa5ce0ea9748cba3a518af6e62ea8c519e4aaee9c2ccf4080c97fa7967"}, "downloads": -1, "filename": "sigauth-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "738a3c385e5530f5360501ea5b33a010", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7868, "upload_time": "2018-03-05T10:33:09", "upload_time_iso_8601": "2018-03-05T10:33:09.746047Z", "url": "https://files.pythonhosted.org/packages/05/1d/9273916a0d3d192c8ec5ec20d2863ca2486ed9b2e3d7001ba2b33bf4a5a9/sigauth-2.1.0-py3-none-any.whl", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "587bf5c479dbf00b05f7ca8fb3dad344", "sha256": "6fa5f03150938614d79ed6a81be5dc950faf1ca9695efe383b8416cf3c04b30c"}, "downloads": -1, "filename": "sigauth-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "587bf5c479dbf00b05f7ca8fb3dad344", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7885, "upload_time": "2018-03-06T18:38:09", "upload_time_iso_8601": "2018-03-06T18:38:09.651112Z", "url": "https://files.pythonhosted.org/packages/f2/43/66926430affbdeed86045b91feaf369a2bf1df2fcedc9b94377846ea5f44/sigauth-2.1.1-py3-none-any.whl", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "c63e6a8d85fd4d2e761ccaafb632670f", "sha256": "f32160347a1a537047568d8f5b6a0d22f75d34f35e273e8d55308e4897a886bd"}, "downloads": -1, "filename": "sigauth-2.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c63e6a8d85fd4d2e761ccaafb632670f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7671, "upload_time": "2018-03-06T18:58:10", "upload_time_iso_8601": "2018-03-06T18:58:10.691989Z", "url": "https://files.pythonhosted.org/packages/4a/65/c1203ad8c237085ffbc6f2a29303a420173747027578e2479dcc4abb5f1a/sigauth-2.1.2-py3-none-any.whl", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "167fcf9bb419ef435c6db3bbf4a00770", "sha256": "aa3bd303a212ca182ca1197e9e27b1f6e136e000b29dabc79cf4663d7bf3ac84"}, "downloads": -1, "filename": "sigauth-2.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "167fcf9bb419ef435c6db3bbf4a00770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7672, "upload_time": "2018-06-08T14:10:18", "upload_time_iso_8601": "2018-06-08T14:10:18.177103Z", "url": "https://files.pythonhosted.org/packages/2f/29/7bd766a3819b4837a94f601f6e0bbf71e19bca198732d8f8195baf2555cc/sigauth-2.1.3-py3-none-any.whl", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "7763053efcf1e248ae7567a1dfb59d73", "sha256": "5a927d84f78b666546b38c293c3f6b9121193fb757319a046258e1ec8dcb5ab4"}, "downloads": -1, "filename": "sigauth-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7763053efcf1e248ae7567a1dfb59d73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8029, "upload_time": "2018-07-20T13:25:10", "upload_time_iso_8601": "2018-07-20T13:25:10.521497Z", "url": "https://files.pythonhosted.org/packages/c5/ec/e4830e04eb62c886c0e7d6a9edc6edc9339fc5e166b65bdf62c6f9dde85c/sigauth-3.0.0-py3-none-any.whl", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "3cc38d530a00f12f48b2f80cd094826d", "sha256": "f276047fae49b54caac9246803c7a5dadecddd1988890d914ee692391ad8d75b"}, "downloads": -1, "filename": "sigauth-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3cc38d530a00f12f48b2f80cd094826d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7785, "upload_time": "2018-07-31T13:32:18", "upload_time_iso_8601": "2018-07-31T13:32:18.096911Z", "url": "https://files.pythonhosted.org/packages/e2/16/40b2360277b581f481954e84e91ea87ad54219cf49db2adead2fd6149907/sigauth-4.0.1-py3-none-any.whl", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "f38261cb234f710262668afd1bb3fe95", "sha256": "6f704fbd348813cd43bed2d8dbb6c6dca3de594c6518b2bbd01ca387c98dea12"}, "downloads": -1, "filename": "sigauth-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f38261cb234f710262668afd1bb3fe95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6100, "upload_time": "2019-06-14T12:06:11", "upload_time_iso_8601": "2019-06-14T12:06:11.236830Z", "url": "https://files.pythonhosted.org/packages/32/da/5de0df065edc3720a2c0ec24223ab015a6b9d5f26471cdb13b1d368f895f/sigauth-4.1.0-py3-none-any.whl", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "5a13dabf90c0b722f11bdc00dbef959b", "sha256": "8b005c6b7d6a97e73259ad45b0bd7661efc2ccc62b75d7aaca008c4411a63c03"}, "downloads": -1, "filename": "sigauth-4.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a13dabf90c0b722f11bdc00dbef959b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6102, "upload_time": "2019-07-04T14:39:39", "upload_time_iso_8601": "2019-07-04T14:39:39.560756Z", "url": "https://files.pythonhosted.org/packages/99/a3/3609b86f6fe59ad0875e3a88a87353a7c4893d37eed2af48fd53e2e1599d/sigauth-4.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a13dabf90c0b722f11bdc00dbef959b", "sha256": "8b005c6b7d6a97e73259ad45b0bd7661efc2ccc62b75d7aaca008c4411a63c03"}, "downloads": -1, "filename": "sigauth-4.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a13dabf90c0b722f11bdc00dbef959b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6102, "upload_time": "2019-07-04T14:39:39", "upload_time_iso_8601": "2019-07-04T14:39:39.560756Z", "url": "https://files.pythonhosted.org/packages/99/a3/3609b86f6fe59ad0875e3a88a87353a7c4893d37eed2af48fd53e2e1599d/sigauth-4.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:11:54 2020"}