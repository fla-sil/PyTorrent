{"info": {"author": "RedTurtle Technology", "author_email": "sviluppoplone@redturtle.it", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Change default Plone behavior in **locking documents** management: add a new (specific) permission\r\ninstead of relying onto the modify permission.\r\n\r\nIntroduction\r\n============\r\n\r\nPlone has a native locking protection given bt the `plone.locking`__ module but, as said in the\r\ndocumentation, users able to modify a document can always steal the lock.\r\n\r\n__ https://github.com/plone/plone.locking\r\n\r\nHow this works\r\n==============\r\n\r\nThis add-on adds a new different permission for locking: ``collective.filteredlocking: Can unlock objects``.\r\n\r\nUsers without this permission will be not able to unlock the document until it's released by the owner or\r\nlock expires.\r\n\r\nCredits\r\n=======\r\n\r\nDeveloped with the support of `Regione Emilia Romagna`__;\r\nRegione Emilia Romagna supports the `PloneGov initiative`__.\r\n\r\n__ http://www.regione.emilia-romagna.it/\r\n__ http://www.plonegov.it/\r\n\r\nAuthors\r\n=======\r\n\r\nThis product was developed by RedTurtle Technology team.\r\n\r\n.. image:: http://www.redturtle.it/redturtle_banner.png\r\n   :alt: RedTurtle Technology Site\r\n   :target: http://www.redturtle.it/\r\n\r\nChangelog\r\n=========\r\n\r\n1.2.0 (2014-05-15)\r\n------------------\r\n\r\n- Fix to egg format [keul]\r\n- Proper package dependencies [keul]\r\n- Removed useless GS profiles [keul]\r\n- Do not rewrite the whole ``TTWLockable`` code, but inherit from Plone default ones [keul]\r\n- Pyflakes cleanup [keul]\r\n- Default permission will now replicate default Plone behavior (edit can release locks) [keul]\r\n- A user can always remove his own lock. This prevent strange behavior where users lockout\r\n  others because they don't have the proper permission [keul]\r\n- Added support for Site Administrator role [keul]\r\n- Added tests suite\r\n\r\n1.1.0 (2013-06-24)\r\n------------------\r\n\r\n* z3c.autoinclude\r\n\r\n1.0.0 - Unreleased\r\n------------------\r\n\r\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PloneGov-IT/collective.filteredlocking", "keywords": "plone plonegov lock webdav", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.filteredlocking", "package_url": "https://pypi.org/project/collective.filteredlocking/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.filteredlocking/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/PloneGov-IT/collective.filteredlocking"}, "release_url": "https://pypi.org/project/collective.filteredlocking/1.2.0/", "requires_dist": null, "requires_python": null, "summary": "A new specific permission that allows unlock of Plone contents", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Change default Plone behavior in <strong>locking documents</strong> management: add a new (specific) permission\ninstead of relying onto the modify permission.</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Plone has a native locking protection given bt the <a href=\"https://github.com/plone/plone.locking\" rel=\"nofollow\">plone.locking</a> module but, as said in the\ndocumentation, users able to modify a document can always steal the lock.</p>\n</div>\n<div id=\"how-this-works\">\n<h2>How this works</h2>\n<p>This add-on adds a new different permission for locking: <tt>collective.filteredlocking: Can unlock objects</tt>.</p>\n<p>Users without this permission will be not able to unlock the document until it\u2019s released by the owner or\nlock expires.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Developed with the support of <a href=\"http://www.regione.emilia-romagna.it/\" rel=\"nofollow\">Regione Emilia Romagna</a>;\nRegione Emilia Romagna supports the <a href=\"http://www.plonegov.it/\" rel=\"nofollow\">PloneGov initiative</a>.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>This product was developed by RedTurtle Technology team.</p>\n<a href=\"http://www.redturtle.it/\" rel=\"nofollow\"><img alt=\"RedTurtle Technology Site\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ea6aa086619f59e61ad184ae3739fda4ec31e20/687474703a2f2f7777772e726564747572746c652e69742f726564747572746c655f62616e6e65722e706e67\"></a>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id4\">\n<h3>1.2.0 (2014-05-15)</h3>\n<ul>\n<li>Fix to egg format [keul]</li>\n<li>Proper package dependencies [keul]</li>\n<li>Removed useless GS profiles [keul]</li>\n<li>Do not rewrite the whole <tt>TTWLockable</tt> code, but inherit from Plone default ones [keul]</li>\n<li>Pyflakes cleanup [keul]</li>\n<li>Default permission will now replicate default Plone behavior (edit can release locks) [keul]</li>\n<li>A user can always remove his own lock. This prevent strange behavior where users lockout\nothers because they don\u2019t have the proper permission [keul]</li>\n<li>Added support for Site Administrator role [keul]</li>\n<li>Added tests suite</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.0 (2013-06-24)</h3>\n<ul>\n<li>z3c.autoinclude</li>\n</ul>\n</div>\n<div id=\"unreleased\">\n<h3>1.0.0 - Unreleased</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1093586, "releases": {"1.2.0": [{"comment_text": "", "digests": {"md5": "f23a8127f43fd9b008a00a7ce58485e6", "sha256": "994b0f4059a9e1321daa231f6a9e732774e2504badd2e851af17f9b38a66dc3a"}, "downloads": -1, "filename": "collective.filteredlocking-1.2.0.zip", "has_sig": false, "md5_digest": "f23a8127f43fd9b008a00a7ce58485e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11691, "upload_time": "2014-05-15T14:49:19", "upload_time_iso_8601": "2014-05-15T14:49:19.788234Z", "url": "https://files.pythonhosted.org/packages/c3/0f/0093b3c1b4093831116d1d00c457a238b61881acc353208668b026ecb0ca/collective.filteredlocking-1.2.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f23a8127f43fd9b008a00a7ce58485e6", "sha256": "994b0f4059a9e1321daa231f6a9e732774e2504badd2e851af17f9b38a66dc3a"}, "downloads": -1, "filename": "collective.filteredlocking-1.2.0.zip", "has_sig": false, "md5_digest": "f23a8127f43fd9b008a00a7ce58485e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11691, "upload_time": "2014-05-15T14:49:19", "upload_time_iso_8601": "2014-05-15T14:49:19.788234Z", "url": "https://files.pythonhosted.org/packages/c3/0f/0093b3c1b4093831116d1d00c457a238b61881acc353208668b026ecb0ca/collective.filteredlocking-1.2.0.zip", "yanked": false}], "timestamp": "Thu May  7 22:17:54 2020"}