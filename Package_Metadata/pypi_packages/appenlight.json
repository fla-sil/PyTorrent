{"info": {"author": "RhodeCode GmbH", "author_email": "", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: Log Analysis", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application", "Topic :: Software Development", "Topic :: Software Development :: Bug Tracking", "Topic :: System :: Monitoring"], "description": "AppEnlight\n-----------\n\nPerformance, exception, and uptime monitoring for the Web\n\n![AppEnlight image](https://raw.githubusercontent.com/AppEnlight/appenlight/gh-pages/static/appenlight.png)\n\nAutomatic Installation\n======================\n\nUse the ansible scripts in the `automation` repository to build complete instance of application\nYou can also use `packer` files in `automation/packer` to create whole VM's for KVM and VMWare.\n\nManual Installation\n===================\n\nTo run the app you need to have meet prerequsites:\n\n- python 3.5+ (currently 3.6 tested)\n- running elasticsearch (6.6.2 tested)\n- running postgresql (9.5+ required, tested 9.6 and 10.6)\n- running redis\n\nInstall the app by performing\n\n    pip install -r requirements.txt\n\n    python setup.py develop\n\nInstall the appenlight uptime plugin (`ae_uptime_ce` package from `appenlight-uptime-ce` repository).\n\nFor production usage you can do:\n\n    pip install appenlight\n    pip install ae_uptime_ce\n\n\nAfter installing the application you need to perform following steps:\n\n1. (optional) generate production.ini (or use a copy of development.ini)\n\n        appenlight-make-config production.ini\n\n2. Setup database structure:\n\n       appenlight-migratedb -c FILENAME.ini\n\n3. To configure elasticsearch:\n\n       appenlight-reindex-elasticsearch -t all -c FILENAME.ini\n\n4. Create base database objects \n\n   (run this command with help flag to see how to create administrator user)\n\n       appenlight-initializedb -c FILENAME.ini\n\n5. Generate static assets\n\n       appenlight-static -c FILENAME.ini\n\nRunning application\n===================\n\nTo run the main app:\n\n    pserve development.ini\n\nTo run celery workers:\n\n    celery worker -A appenlight.celery -Q \"reports,logs,metrics,default\" --ini FILENAME.ini\n\nTo run celery beat:\n\n    celery beat -A appenlight.celery --ini FILENAME.ini\n\nTo run appenlight's uptime plugin:\n\n    appenlight-uptime-monitor -c FILENAME.ini\n\nReal-time Notifications\n=======================\n\nYou should also run the `channelstream websocket server for real-time notifications\n\n    channelstream -i filename.ini\n\nAdditional documentation\n========================\n\nVisit  https://getappenlight.com for additional server and client documentation.\n\nTesting\n=======\n\nTo run test suite:\n\n    py.test appenlight/tests/tests.py --cov appenlight (this looks for testing.ini in repo root)\n\n\nDevelopment\n===========\n\nTo develop appenlight frontend:\n\n    cd frontend\n    npm install\n    grunt watch\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://rhodecode.com", "keywords": "web wsgi bfg pylons pyramid flask django monitoring apm instrumentation appenlight", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "appenlight", "package_url": "https://pypi.org/project/appenlight/", "platform": "", "project_url": "https://pypi.org/project/appenlight/", "project_urls": {"Homepage": "http://rhodecode.com"}, "release_url": "https://pypi.org/project/appenlight/2.0.0rc1/", "requires_dist": ["repoze.sendmail (==4.4.1)", "pyramid (==1.10.2)", "pyramid-tm (==2.2.1)", "pyramid-debugtoolbar", "pyramid-authstack (==1.0.1)", "SQLAlchemy (==1.2.18)", "alembic (==1.0.8)", "webhelpers2 (==2.0)", "transaction (==2.4.0)", "zope.sqlalchemy (==1.1)", "pyramid-mailer (==0.15.1)", "redis (==3.2.1)", "redlock-py (==1.0.8)", "pyramid-jinja2 (==2.8)", "psycopg2-binary (==2.7.7)", "wtforms (==2.2.1)", "celery (==4.2.1)", "formencode (==1.3.1)", "psutil (==5.6.1)", "ziggurat-foundations (==0.8.3)", "bcrypt (==3.1.6)", "appenlight-client", "markdown (==3.0.1)", "colander (==1.7)", "defusedxml (==0.5.0)", "dogpile.cache (==0.7.1)", "pyramid-redis-sessions (==1.0.1)", "simplejson (==3.16.0)", "waitress (==1.2.1)", "gunicorn (==19.9.0)", "uwsgi (==2.0.18)", "requests (==2.21.0)", "requests-oauthlib (==1.2.0)", "gevent (==1.4.0)", "pygments (==2.3.1)", "lxml (==4.3.2)", "paginate (==0.5.6)", "paginate-sqlalchemy (==0.3.0)", "elasticsearch (<7.0.0,>=6.0.0)", "mock (==1.0.1)", "itsdangerous (==1.1.0)", "camplight (==0.9.6)", "jira (==1.0.7)", "python-dateutil (==2.5.3)", "authomatic (==0.1.0.post1)", "cryptography (==2.6.1)", "coverage ; extra == 'dev'", "pytest ; extra == 'dev'", "pyramid ; extra == 'dev'", "tox ; extra == 'dev'", "mock ; extra == 'dev'", "pytest-mock ; extra == 'dev'", "webtest ; extra == 'dev'", "black ; extra == 'lint'"], "requires_python": ">=3.5", "summary": "appenlight", "version": "2.0.0rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>AppEnlight</h2>\n<p>Performance, exception, and uptime monitoring for the Web</p>\n<p><img alt=\"AppEnlight image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3113da716740cdcf9b32331b2efe7531dfe9305b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f417070456e6c696768742f617070656e6c696768742f67682d70616765732f7374617469632f617070656e6c696768742e706e67\"></p>\n<h1>Automatic Installation</h1>\n<p>Use the ansible scripts in the <code>automation</code> repository to build complete instance of application\nYou can also use <code>packer</code> files in <code>automation/packer</code> to create whole VM's for KVM and VMWare.</p>\n<h1>Manual Installation</h1>\n<p>To run the app you need to have meet prerequsites:</p>\n<ul>\n<li>python 3.5+ (currently 3.6 tested)</li>\n<li>running elasticsearch (6.6.2 tested)</li>\n<li>running postgresql (9.5+ required, tested 9.6 and 10.6)</li>\n<li>running redis</li>\n</ul>\n<p>Install the app by performing</p>\n<pre><code>pip install -r requirements.txt\n\npython setup.py develop\n</code></pre>\n<p>Install the appenlight uptime plugin (<code>ae_uptime_ce</code> package from <code>appenlight-uptime-ce</code> repository).</p>\n<p>For production usage you can do:</p>\n<pre><code>pip install appenlight\npip install ae_uptime_ce\n</code></pre>\n<p>After installing the application you need to perform following steps:</p>\n<ol>\n<li>\n<p>(optional) generate production.ini (or use a copy of development.ini)</p>\n<pre><code> appenlight-make-config production.ini\n</code></pre>\n</li>\n<li>\n<p>Setup database structure:</p>\n<pre><code>appenlight-migratedb -c FILENAME.ini\n</code></pre>\n</li>\n<li>\n<p>To configure elasticsearch:</p>\n<pre><code>appenlight-reindex-elasticsearch -t all -c FILENAME.ini\n</code></pre>\n</li>\n<li>\n<p>Create base database objects</p>\n<p>(run this command with help flag to see how to create administrator user)</p>\n<pre><code>appenlight-initializedb -c FILENAME.ini\n</code></pre>\n</li>\n<li>\n<p>Generate static assets</p>\n<pre><code>appenlight-static -c FILENAME.ini\n</code></pre>\n</li>\n</ol>\n<h1>Running application</h1>\n<p>To run the main app:</p>\n<pre><code>pserve development.ini\n</code></pre>\n<p>To run celery workers:</p>\n<pre><code>celery worker -A appenlight.celery -Q \"reports,logs,metrics,default\" --ini FILENAME.ini\n</code></pre>\n<p>To run celery beat:</p>\n<pre><code>celery beat -A appenlight.celery --ini FILENAME.ini\n</code></pre>\n<p>To run appenlight's uptime plugin:</p>\n<pre><code>appenlight-uptime-monitor -c FILENAME.ini\n</code></pre>\n<h1>Real-time Notifications</h1>\n<p>You should also run the `channelstream websocket server for real-time notifications</p>\n<pre><code>channelstream -i filename.ini\n</code></pre>\n<h1>Additional documentation</h1>\n<p>Visit  <a href=\"https://getappenlight.com\" rel=\"nofollow\">https://getappenlight.com</a> for additional server and client documentation.</p>\n<h1>Testing</h1>\n<p>To run test suite:</p>\n<pre><code>py.test appenlight/tests/tests.py --cov appenlight (this looks for testing.ini in repo root)\n</code></pre>\n<h1>Development</h1>\n<p>To develop appenlight frontend:</p>\n<pre><code>cd frontend\nnpm install\ngrunt watch\n</code></pre>\n\n          </div>"}, "last_serial": 5139233, "releases": {"2.0.0rc1": [{"comment_text": "", "digests": {"md5": "ec3f8fef1929bda80015686c89bc9539", "sha256": "685d025ada09ec0cb5269deba6a08686f1799bd6e94f66fdd528bb1eb62a56be"}, "downloads": -1, "filename": "appenlight-2.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "ec3f8fef1929bda80015686c89bc9539", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3995899, "upload_time": "2019-04-13T21:37:55", "upload_time_iso_8601": "2019-04-13T21:37:55.605743Z", "url": "https://files.pythonhosted.org/packages/cb/30/cf878246f823063189767e3d139045fd8069a03e92d70b9267c23c7b8c8e/appenlight-2.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcbc5aeb5f3d35b4d050a4f8113e2d35", "sha256": "4cdda121dacbd5a528a94d99ed73db72e8781ad17123fd1b1b6405366a7d782f"}, "downloads": -1, "filename": "appenlight-2.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "fcbc5aeb5f3d35b4d050a4f8113e2d35", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3750037, "upload_time": "2019-04-13T21:38:00", "upload_time_iso_8601": "2019-04-13T21:38:00.394841Z", "url": "https://files.pythonhosted.org/packages/fd/82/cdd7eb82af455b0416bb8eefed6e10d4040c4054617d928135f476080931/appenlight-2.0.0rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec3f8fef1929bda80015686c89bc9539", "sha256": "685d025ada09ec0cb5269deba6a08686f1799bd6e94f66fdd528bb1eb62a56be"}, "downloads": -1, "filename": "appenlight-2.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "ec3f8fef1929bda80015686c89bc9539", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3995899, "upload_time": "2019-04-13T21:37:55", "upload_time_iso_8601": "2019-04-13T21:37:55.605743Z", "url": "https://files.pythonhosted.org/packages/cb/30/cf878246f823063189767e3d139045fd8069a03e92d70b9267c23c7b8c8e/appenlight-2.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcbc5aeb5f3d35b4d050a4f8113e2d35", "sha256": "4cdda121dacbd5a528a94d99ed73db72e8781ad17123fd1b1b6405366a7d782f"}, "downloads": -1, "filename": "appenlight-2.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "fcbc5aeb5f3d35b4d050a4f8113e2d35", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3750037, "upload_time": "2019-04-13T21:38:00", "upload_time_iso_8601": "2019-04-13T21:38:00.394841Z", "url": "https://files.pythonhosted.org/packages/fd/82/cdd7eb82af455b0416bb8eefed6e10d4040c4054617d928135f476080931/appenlight-2.0.0rc1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:40 2020"}