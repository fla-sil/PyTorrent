{"info": {"author": "Lasse Karstensen", "author_email": "lasse.karstensen+pypi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator"], "description": "FDX reader for Garmin GND10\n===========================\n\nThis is software to read the FDX protocol data seen on the USB port of Garmin\nGND10 gateways.\n\nThe GND10 unit is used on boats and translates between Nexus FDX and NMEA2000.\n\nInstallation\n------------\n\nfdxread requirements are listed in `requirements.txt` and should be installed\nusing pip.\n\n```\n    git clone https://github.com/lkarsten/fdxread.git\n    cd fdxread\n    virtualenv --system-site-packages venv\n    . venv/bin/activate\n    pip install -r requirements.txt\n```\n\nTested on Linux and OS X.\n\nRunning it\n----------\n\n```\n    $ ./fdxread -h\n    usage: fdxread [-h] [--format fmt] [--seek n] [--pace n] [-v] inputfile\n\n    fdxread - Nexus FDX parser (incl. Garmin GND10)\n\n    positional arguments:\n      inputfile      Serial port or file to read from. Examples: /dev/ttyACM0,\n                     COM3, ./file.dump\n\n    optional arguments:\n      -h, --help     show this help message and exit\n      --format fmt   Output mode, default nmea0183. (json, signalk, nmea0183, raw)\n      --seek n       Seek this many bytes into file before starting (for files)\n      --pace n       Pace reading to n messages per second (for files)\n      -v, --verbose  Verbose output\n\n    fdxread is used to read FDX protocol data from Garmin GND10 units.\n```\n\n\n```\n        (inside a populated virtualenv, as described above)\n        ./fdxread /dev/ttyACM0\n```\n\nThis will read FDX from `/dev/ttyACM0`, and output NMEA0183 to stdout.\n\nTo avoid having to muck around with serial ports and locking, I usually run a\n[kplex](http://www.stripydog.com/kplex/) TCP server on port 10110, and pipe the\noutput to it using netcat. That way OpenCPN can read it easily, and I get to\nknow where I am on the map.\n\n\nBackground information\n----------------------\n\nEverything here is deduced from staring at the arriving bytes while\ndisconnecting some units and motoring in circles. Something was pretty simple to\nfigure out, some other metrics I'm still not sure is right.\n\nUse at your own risk.\n\nOn a side note, I believe this is the only open/freely available document on the\nframe format of the `Fast Data eXchange (FDX)` protocol used in Nexus Marine\nAB's Nexus products, now owned by Garmin. See `fdxprotocol.rst` and\n`libfdx/decode.py` for notes taken while working this out.\n\nLicense\n-------\n\nThe contents of this repository is licensed under GNU GPLv2. See the `LICENSE`\nfile for more information.\n\nCopyright (C) 2016-2017 Lasse Karstensen", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lkarsten/fdxread/", "keywords": "USB sailing boating nexus garmin GND10", "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "fdxread", "package_url": "https://pypi.org/project/fdxread/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fdxread/", "project_urls": {"Homepage": "https://github.com/lkarsten/fdxread/"}, "release_url": "https://pypi.org/project/fdxread/0.9.1/", "requires_dist": null, "requires_python": null, "summary": "An FDX protocol reader for Garmin GND10", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            FDX reader for Garmin GND10<br>===========================<br><br>This is software to read the FDX protocol data seen on the USB port of Garmin<br>GND10 gateways.<br><br>The GND10 unit is used on boats and translates between Nexus FDX and NMEA2000.<br><br>Installation<br>------------<br><br>fdxread requirements are listed in `requirements.txt` and should be installed<br>using pip.<br><br>```<br>    git clone https://github.com/lkarsten/fdxread.git<br>    cd fdxread<br>    virtualenv --system-site-packages venv<br>    . venv/bin/activate<br>    pip install -r requirements.txt<br>```<br><br>Tested on Linux and OS X.<br><br>Running it<br>----------<br><br>```<br>    $ ./fdxread -h<br>    usage: fdxread [-h] [--format fmt] [--seek n] [--pace n] [-v] inputfile<br><br>    fdxread - Nexus FDX parser (incl. Garmin GND10)<br><br>    positional arguments:<br>      inputfile      Serial port or file to read from. Examples: /dev/ttyACM0,<br>                     COM3, ./file.dump<br><br>    optional arguments:<br>      -h, --help     show this help message and exit<br>      --format fmt   Output mode, default nmea0183. (json, signalk, nmea0183, raw)<br>      --seek n       Seek this many bytes into file before starting (for files)<br>      --pace n       Pace reading to n messages per second (for files)<br>      -v, --verbose  Verbose output<br><br>    fdxread is used to read FDX protocol data from Garmin GND10 units.<br>```<br><br><br>```<br>        (inside a populated virtualenv, as described above)<br>        ./fdxread /dev/ttyACM0<br>```<br><br>This will read FDX from `/dev/ttyACM0`, and output NMEA0183 to stdout.<br><br>To avoid having to muck around with serial ports and locking, I usually run a<br>[kplex](http://www.stripydog.com/kplex/) TCP server on port 10110, and pipe the<br>output to it using netcat. That way OpenCPN can read it easily, and I get to<br>know where I am on the map.<br><br><br>Background information<br>----------------------<br><br>Everything here is deduced from staring at the arriving bytes while<br>disconnecting some units and motoring in circles. Something was pretty simple to<br>figure out, some other metrics I'm still not sure is right.<br><br>Use at your own risk.<br><br>On a side note, I believe this is the only open/freely available document on the<br>frame format of the `Fast Data eXchange (FDX)` protocol used in Nexus Marine<br>AB's Nexus products, now owned by Garmin. See `fdxprotocol.rst` and<br>`libfdx/decode.py` for notes taken while working this out.<br><br>License<br>-------<br><br>The contents of this repository is licensed under GNU GPLv2. See the `LICENSE`<br>file for more information.<br><br>Copyright (C) 2016-2017 Lasse Karstensen\n          </div>"}, "last_serial": 2702182, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "624e9d8d28705d26e14636aedc68860d", "sha256": "4246230eb4441ed702499dd1a52986c196d78a81737bea98a293aaa81ce3711a"}, "downloads": -1, "filename": "fdxread-0.9.1.tar.gz", "has_sig": false, "md5_digest": "624e9d8d28705d26e14636aedc68860d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107605, "upload_time": "2017-03-13T11:43:25", "upload_time_iso_8601": "2017-03-13T11:43:25.582356Z", "url": "https://files.pythonhosted.org/packages/96/f0/dda2159b2e028cf0d2209371f50b635491a74bae9615d51c8149c7e6ae6b/fdxread-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "624e9d8d28705d26e14636aedc68860d", "sha256": "4246230eb4441ed702499dd1a52986c196d78a81737bea98a293aaa81ce3711a"}, "downloads": -1, "filename": "fdxread-0.9.1.tar.gz", "has_sig": false, "md5_digest": "624e9d8d28705d26e14636aedc68860d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107605, "upload_time": "2017-03-13T11:43:25", "upload_time_iso_8601": "2017-03-13T11:43:25.582356Z", "url": "https://files.pythonhosted.org/packages/96/f0/dda2159b2e028cf0d2209371f50b635491a74bae9615d51c8149c7e6ae6b/fdxread-0.9.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:07 2020"}