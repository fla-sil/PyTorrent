{"info": {"author": "F\u00e1bio Mac\u00eado Mendes", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "=====\nMundi\n=====\n\nMundi is a simple package that provides information about all countries in the world as\nas a convenient set of classes and Pandas dataframes. It uses information provided by the\npopular pycountry package and supplement it with several other data sources using\nplugins.\n\nThe basic data in the mundi package is centered around a dataframe describing many world\nregions with the following structure:\n\n+==============+===========================================================================================+\n| Column       | Description                                                                               |\n+--------------+-------------------------------------------------------------------------------------------+\n| id (index)   | Dataframe indexes are strings and correspond to the ISO code of a region, when available. |\n+--------------+-------------------------------------------------------------------------------------------+\n| name         | Region name in English                                                                    |\n+--------------+-------------------------------------------------------------------------------------------+\n| type         | Type of region. There are too many types to list here, but it will be something like      |\n|              | \"country\", \"state\", \"municipality\", etc.                                                  |\n+--------------+-------------------------------------------------------------------------------------------+\n| code         | Short code for region. Those are unique in the same country, but may repeat elsewhere.    |\n|              | For Countries, this is the ISO alpha-2 code.                                              |\n+--------------+-------------------------------------------------------------------------------------------+\n| numeric_code | Numeric code for region, when it exists. ISO assign a numeric code to each country and    |\n|              | the official geographical bureau of each country frequently works with numerical codes    |\n|              | too. Mundi will try to use those codes whenever possible, or will leave this column empty |\n|              | when no numerical convention is available.                                                |\n+--------------+-------------------------------------------------------------------------------------------+\n| long_code    | Alternative long version of the code. For countries, this is the ISO alpha-3 code.        |\n|              | Other sub-regions may optionally leave this column empty.                                 |\n+--------------+-------------------------------------------------------------------------------------------+\n| country_code | Country code for the selected region. If region is a country, this column is empty.       |\n+--------------+-------------------------------------------------------------------------------------------+\n| parent_id    | The id string for the parent element. Countries are considered to be root elements and    |\n|              | therefore do not fill this column. The parent might be an intermediate region between     |\n|              | the current row and the corresponding country. A city, for instance, may have a parent    |\n|              | state, which have a parent country.                                                       |\n+--------------+-------------------------------------------------------------------------------------------+\n\nUsage\n=====\n\nInstall Mundi using ``pip install mundi`` or your method of choice. Now, you can just import\nit and load the desired information. Mundi exposes collections of entries as dataframes,\nand single entries (rows in those dataframes) as Series objects.\n\n>>> import mundi\n>>> df = mundi.countries(); df\n                    name     type code numeric_code long_code country_code parent_id\nid\nAD               Andorra  country   AD          020       AND         <NA>      <NA>\nAE  United Arab Emirates  country   AE          784       ARE         <NA>      <NA>\nAF           Afghanistan  country   AF          004       AFG         <NA>      <NA>\nAG   Antigua and Barbuda  country   AG          028       ATG         <NA>      <NA>\nAI              Anguilla  country   AI          660       AIA         <NA>      <NA>\n..                   ...      ...  ...          ...       ...          ...       ...\nYE                 Yemen  country   YE          887       YEM         <NA>      <NA>\nYT               Mayotte  country   YT          175       MYT         <NA>      <NA>\nZA          South Africa  country   ZA          710       ZAF         <NA>      <NA>\nZM                Zambia  country   ZM          894       ZMB         <NA>      <NA>\nZW              Zimbabwe  country   ZW          716       ZWE         <NA>      <NA>\n<BLANKLINE>\n[255 rows x 7 columns]\n\nThe ``mundi.countries()`` function is just an alias to ``mundi.regions(type=\"country\")``.\nThe more generic ``mundi.region()`` function may be used to query countries and\nsubdivisions inside a country.\n\n>>> br_states = mundi.regions(country=\"BR\", type=\"state\"); br_states\n                      name   type code numeric_code long_code country_code parent_id\nid\nBR-AC                 Acre  state   AC           12      <NA>           BR      BR-1\nBR-AL              Alagoas  state   AL           27      <NA>           BR      BR-2\nBR-AM             Amazonas  state   AM           13      <NA>           BR      BR-1\nBR-AP                Amap\u00e1  state   AP           16      <NA>           BR      BR-1\nBR-BA                Bahia  state   BA           29      <NA>           BR      BR-2\nBR-CE                Cear\u00e1  state   CE           23      <NA>           BR      BR-2\nBR-DF     Distrito Federal  state   DF           53      <NA>           BR      BR-5\nBR-ES       Esp\u00edrito Santo  state   ES           32      <NA>           BR      BR-3\nBR-GO                Goi\u00e1s  state   GO           52      <NA>           BR      BR-5\nBR-MA             Maranh\u00e3o  state   MA           21      <NA>           BR      BR-2\nBR-MG         Minas Gerais  state   MG           31      <NA>           BR      BR-3\nBR-MS   Mato Grosso do Sul  state   MS           50      <NA>           BR      BR-5\nBR-MT          Mato Grosso  state   MT           51      <NA>           BR      BR-5\nBR-PA                 Par\u00e1  state   PA           15      <NA>           BR      BR-1\nBR-PB              Para\u00edba  state   PB           25      <NA>           BR      BR-2\nBR-PE           Pernambuco  state   PE           26      <NA>           BR      BR-2\nBR-PI                Piau\u00ed  state   PI           22      <NA>           BR      BR-2\nBR-PR               Paran\u00e1  state   PR           41      <NA>           BR      BR-4\nBR-RJ       Rio de Janeiro  state   RJ           33      <NA>           BR      BR-3\nBR-RN  Rio Grande do Norte  state   RN           24      <NA>           BR      BR-2\nBR-RO             Rond\u00f4nia  state   RO           11      <NA>           BR      BR-1\nBR-RR              Roraima  state   RR           14      <NA>           BR      BR-1\nBR-RS    Rio Grande do Sul  state   RS           43      <NA>           BR      BR-4\nBR-SC       Santa Catarina  state   SC           42      <NA>           BR      BR-4\nBR-SE              Sergipe  state   SE           28      <NA>           BR      BR-2\nBR-SP            S\u00e3o Paulo  state   SP           35      <NA>           BR      BR-3\nBR-TO            Tocantins  state   TO           17      <NA>           BR      BR-1\n\n\nIf you want a single country or single region, use the function\n\n>>> br = mundi.region(\"BR\")\nname             Brazil\ntype            country\ncode                 BR\nnumeric_code        076\nlong_code           BRA\ncountry_code       <NA>\nparent_id          <NA>\nName: BR, dtype: object\n\n\nThe library creates a custom ``.mundi`` accessor that exposes additional\nmethods not present in regular data frames. The most important of those is\nthe ability to extend the data frame with additional columns available from Mundi\nitself or from plugins.\n\n>>> extra = df.mundi[\"region\", \"income_group\"]; extra\n                region  income_group\nid\nAD              europe          high\nAE         middle-east          high\nAF          south-asia           low\nAG       latin-america          high\nAI                 NaN           NaN\n..                 ...           ...\nYE         middle-east           low\nYT                 NaN           NaN\nZA  sub-saharan-africa  upper-middle\nZM  sub-saharan-africa  lower-middle\nZW  sub-saharan-africa  lower-middle\n<BLANKLINE>\n[255 rows x 2 columns]\n\nIt is also possible to keep the columns of the original dataframe using\nthe ellipisis syntax\n\n>>> df = df.mundi[..., \"region\", \"income_group\"]; df\n                    name     type code numeric_code long_code country_code parent_id              region  income_group\nid\nAD               Andorra  country   AD          020       AND         <NA>      <NA>              europe          high\nAE  United Arab Emirates  country   AE          784       ARE         <NA>      <NA>         middle-east          high\nAF           Afghanistan  country   AF          004       AFG         <NA>      <NA>          south-asia           low\nAG   Antigua and Barbuda  country   AG          028       ATG         <NA>      <NA>       latin-america          high\nAI              Anguilla  country   AI          660       AIA         <NA>      <NA>                 NaN           NaN\n..                   ...      ...  ...          ...       ...          ...       ...                 ...           ...\nYE                 Yemen  country   YE          887       YEM         <NA>      <NA>         middle-east           low\nYT               Mayotte  country   YT          175       MYT         <NA>      <NA>                 NaN           NaN\nZA          South Africa  country   ZA          710       ZAF         <NA>      <NA>  sub-saharan-africa  upper-middle\nZM                Zambia  country   ZM          894       ZMB         <NA>      <NA>  sub-saharan-africa  lower-middle\nZW              Zimbabwe  country   ZW          716       ZWE         <NA>      <NA>  sub-saharan-africa  lower-middle\n<BLANKLINE>\n[255 rows x 9 columns]\n\n\nThe ``.mundi`` accessor is also able to select countries over mundi columns,\neven if those columns are not in the original dataframe.\n\n>>> countries = mundi.countries()\n>>> countries.mundi.select(income_group=\"upper-middle\")\n                       name     type code numeric_code long_code country_code parent_id\nid\nAD                  Andorra  country   AD          020       AND         <NA>      <NA>\nAE     United Arab Emirates  country   AE          784       ARE         <NA>      <NA>\nAG      Antigua and Barbuda  country   AG          028       ATG         <NA>      <NA>\nAT                  Austria  country   AT          040       AUT         <NA>      <NA>\nAU                Australia  country   AU          036       AUS         <NA>      <NA>\n..                      ...      ...  ...          ...       ...          ...       ...\nTT      Trinidad and Tobago  country   TT          780       TTO         <NA>      <NA>\nUS            United States  country   US          840       USA         <NA>      <NA>\nUY                  Uruguay  country   UY          858       URY         <NA>      <NA>\nVG  Virgin Islands, British  country   VG          092       VGB         <NA>      <NA>\nVI     Virgin Islands, U.S.  country   VI          850       VIR         <NA>      <NA>\n<BLANKLINE>\n[76 rows x 7 columns]\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pydemic/mundi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mundi", "package_url": "https://pypi.org/project/mundi/", "platform": "", "project_url": "https://pypi.org/project/mundi/", "project_urls": {"Homepage": "https://github.com/pydemic/mundi"}, "release_url": "https://pypi.org/project/mundi/0.1.0/", "requires_dist": ["pandas", "sidekick", "black ; extra == \"dev\"", "twine ; extra == \"dev\"", "pycountry ; extra == \"dev\"", "coverage~=5.0 ; extra == \"dev\"", "pytest~=5.0 ; extra == \"dev\""], "requires_python": "", "summary": "Centralize data from countries and regions around the World and expose it", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mundi is a simple package that provides information about all countries in the world as\nas a convenient set of classes and Pandas dataframes. It uses information provided by the\npopular pycountry package and supplement it with several other data sources using\nplugins.</p>\n<p>The basic data in the mundi package is centered around a dataframe describing many world\nregions with the following structure:</p>\n<p>+==============+===========================================================================================+\n| Column       | Description                                                                               |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| id (index)   | Dataframe indexes are strings and correspond to the ISO code of a region, when available. |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| name         | Region name in English                                                                    |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| type         | Type of region. There are too many types to list here, but it will be something like      |\n|              | \u201ccountry\u201d, \u201cstate\u201d, \u201cmunicipality\u201d, etc.                                                  |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| code         | Short code for region. Those are unique in the same country, but may repeat elsewhere.    |\n|              | For Countries, this is the ISO alpha-2 code.                                              |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| numeric_code | Numeric code for region, when it exists. ISO assign a numeric code to each country and    |\n|              | the official geographical bureau of each country frequently works with numerical codes    |\n|              | too. Mundi will try to use those codes whenever possible, or will leave this column empty |\n|              | when no numerical convention is available.                                                |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| long_code    | Alternative long version of the code. For countries, this is the ISO alpha-3 code.        |\n|              | Other sub-regions may optionally leave this column empty.                                 |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| country_code | Country code for the selected region. If region is a country, this column is empty.       |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+\n| parent_id    | The id string for the parent element. Countries are considered to be root elements and    |\n|              | therefore do not fill this column. The parent might be an intermediate region between     |\n|              | the current row and the corresponding country. A city, for instance, may have a parent    |\n|              | state, which have a parent country.                                                       |\n+\u2014\u2014\u2014\u2014\u2013+\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-+</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Install Mundi using <tt>pip install mundi</tt> or your method of choice. Now, you can just import\nit and load the desired information. Mundi exposes collections of entries as dataframes,\nand single entries (rows in those dataframes) as Series objects.</p>\n<pre>&gt;&gt;&gt; import mundi\n&gt;&gt;&gt; df = mundi.countries(); df\n                    name     type code numeric_code long_code country_code parent_id\nid\nAD               Andorra  country   AD          020       AND         &lt;NA&gt;      &lt;NA&gt;\nAE  United Arab Emirates  country   AE          784       ARE         &lt;NA&gt;      &lt;NA&gt;\nAF           Afghanistan  country   AF          004       AFG         &lt;NA&gt;      &lt;NA&gt;\nAG   Antigua and Barbuda  country   AG          028       ATG         &lt;NA&gt;      &lt;NA&gt;\nAI              Anguilla  country   AI          660       AIA         &lt;NA&gt;      &lt;NA&gt;\n..                   ...      ...  ...          ...       ...          ...       ...\nYE                 Yemen  country   YE          887       YEM         &lt;NA&gt;      &lt;NA&gt;\nYT               Mayotte  country   YT          175       MYT         &lt;NA&gt;      &lt;NA&gt;\nZA          South Africa  country   ZA          710       ZAF         &lt;NA&gt;      &lt;NA&gt;\nZM                Zambia  country   ZM          894       ZMB         &lt;NA&gt;      &lt;NA&gt;\nZW              Zimbabwe  country   ZW          716       ZWE         &lt;NA&gt;      &lt;NA&gt;\n&lt;BLANKLINE&gt;\n[255 rows x 7 columns]\n</pre>\n<p>The <tt>mundi.countries()</tt> function is just an alias to <tt><span class=\"pre\">mundi.regions(type=\"country\")</span></tt>.\nThe more generic <tt>mundi.region()</tt> function may be used to query countries and\nsubdivisions inside a country.</p>\n<pre>&gt;&gt;&gt; br_states = mundi.regions(country=\"BR\", type=\"state\"); br_states\n                      name   type code numeric_code long_code country_code parent_id\nid\nBR-AC                 Acre  state   AC           12      &lt;NA&gt;           BR      BR-1\nBR-AL              Alagoas  state   AL           27      &lt;NA&gt;           BR      BR-2\nBR-AM             Amazonas  state   AM           13      &lt;NA&gt;           BR      BR-1\nBR-AP                Amap\u00e1  state   AP           16      &lt;NA&gt;           BR      BR-1\nBR-BA                Bahia  state   BA           29      &lt;NA&gt;           BR      BR-2\nBR-CE                Cear\u00e1  state   CE           23      &lt;NA&gt;           BR      BR-2\nBR-DF     Distrito Federal  state   DF           53      &lt;NA&gt;           BR      BR-5\nBR-ES       Esp\u00edrito Santo  state   ES           32      &lt;NA&gt;           BR      BR-3\nBR-GO                Goi\u00e1s  state   GO           52      &lt;NA&gt;           BR      BR-5\nBR-MA             Maranh\u00e3o  state   MA           21      &lt;NA&gt;           BR      BR-2\nBR-MG         Minas Gerais  state   MG           31      &lt;NA&gt;           BR      BR-3\nBR-MS   Mato Grosso do Sul  state   MS           50      &lt;NA&gt;           BR      BR-5\nBR-MT          Mato Grosso  state   MT           51      &lt;NA&gt;           BR      BR-5\nBR-PA                 Par\u00e1  state   PA           15      &lt;NA&gt;           BR      BR-1\nBR-PB              Para\u00edba  state   PB           25      &lt;NA&gt;           BR      BR-2\nBR-PE           Pernambuco  state   PE           26      &lt;NA&gt;           BR      BR-2\nBR-PI                Piau\u00ed  state   PI           22      &lt;NA&gt;           BR      BR-2\nBR-PR               Paran\u00e1  state   PR           41      &lt;NA&gt;           BR      BR-4\nBR-RJ       Rio de Janeiro  state   RJ           33      &lt;NA&gt;           BR      BR-3\nBR-RN  Rio Grande do Norte  state   RN           24      &lt;NA&gt;           BR      BR-2\nBR-RO             Rond\u00f4nia  state   RO           11      &lt;NA&gt;           BR      BR-1\nBR-RR              Roraima  state   RR           14      &lt;NA&gt;           BR      BR-1\nBR-RS    Rio Grande do Sul  state   RS           43      &lt;NA&gt;           BR      BR-4\nBR-SC       Santa Catarina  state   SC           42      &lt;NA&gt;           BR      BR-4\nBR-SE              Sergipe  state   SE           28      &lt;NA&gt;           BR      BR-2\nBR-SP            S\u00e3o Paulo  state   SP           35      &lt;NA&gt;           BR      BR-3\nBR-TO            Tocantins  state   TO           17      &lt;NA&gt;           BR      BR-1\n</pre>\n<p>If you want a single country or single region, use the function</p>\n<pre>&gt;&gt;&gt; br = mundi.region(\"BR\")\nname             Brazil\ntype            country\ncode                 BR\nnumeric_code        076\nlong_code           BRA\ncountry_code       &lt;NA&gt;\nparent_id          &lt;NA&gt;\nName: BR, dtype: object\n</pre>\n<p>The library creates a custom <tt>.mundi</tt> accessor that exposes additional\nmethods not present in regular data frames. The most important of those is\nthe ability to extend the data frame with additional columns available from Mundi\nitself or from plugins.</p>\n<pre>&gt;&gt;&gt; extra = df.mundi[\"region\", \"income_group\"]; extra\n                region  income_group\nid\nAD              europe          high\nAE         middle-east          high\nAF          south-asia           low\nAG       latin-america          high\nAI                 NaN           NaN\n..                 ...           ...\nYE         middle-east           low\nYT                 NaN           NaN\nZA  sub-saharan-africa  upper-middle\nZM  sub-saharan-africa  lower-middle\nZW  sub-saharan-africa  lower-middle\n&lt;BLANKLINE&gt;\n[255 rows x 2 columns]\n</pre>\n<p>It is also possible to keep the columns of the original dataframe using\nthe ellipisis syntax</p>\n<pre>&gt;&gt;&gt; df = df.mundi[..., \"region\", \"income_group\"]; df\n                    name     type code numeric_code long_code country_code parent_id              region  income_group\nid\nAD               Andorra  country   AD          020       AND         &lt;NA&gt;      &lt;NA&gt;              europe          high\nAE  United Arab Emirates  country   AE          784       ARE         &lt;NA&gt;      &lt;NA&gt;         middle-east          high\nAF           Afghanistan  country   AF          004       AFG         &lt;NA&gt;      &lt;NA&gt;          south-asia           low\nAG   Antigua and Barbuda  country   AG          028       ATG         &lt;NA&gt;      &lt;NA&gt;       latin-america          high\nAI              Anguilla  country   AI          660       AIA         &lt;NA&gt;      &lt;NA&gt;                 NaN           NaN\n..                   ...      ...  ...          ...       ...          ...       ...                 ...           ...\nYE                 Yemen  country   YE          887       YEM         &lt;NA&gt;      &lt;NA&gt;         middle-east           low\nYT               Mayotte  country   YT          175       MYT         &lt;NA&gt;      &lt;NA&gt;                 NaN           NaN\nZA          South Africa  country   ZA          710       ZAF         &lt;NA&gt;      &lt;NA&gt;  sub-saharan-africa  upper-middle\nZM                Zambia  country   ZM          894       ZMB         &lt;NA&gt;      &lt;NA&gt;  sub-saharan-africa  lower-middle\nZW              Zimbabwe  country   ZW          716       ZWE         &lt;NA&gt;      &lt;NA&gt;  sub-saharan-africa  lower-middle\n&lt;BLANKLINE&gt;\n[255 rows x 9 columns]\n</pre>\n<p>The <tt>.mundi</tt> accessor is also able to select countries over mundi columns,\neven if those columns are not in the original dataframe.</p>\n<pre>&gt;&gt;&gt; countries = mundi.countries()\n&gt;&gt;&gt; countries.mundi.select(income_group=\"upper-middle\")\n                       name     type code numeric_code long_code country_code parent_id\nid\nAD                  Andorra  country   AD          020       AND         &lt;NA&gt;      &lt;NA&gt;\nAE     United Arab Emirates  country   AE          784       ARE         &lt;NA&gt;      &lt;NA&gt;\nAG      Antigua and Barbuda  country   AG          028       ATG         &lt;NA&gt;      &lt;NA&gt;\nAT                  Austria  country   AT          040       AUT         &lt;NA&gt;      &lt;NA&gt;\nAU                Australia  country   AU          036       AUS         &lt;NA&gt;      &lt;NA&gt;\n..                      ...      ...  ...          ...       ...          ...       ...\nTT      Trinidad and Tobago  country   TT          780       TTO         &lt;NA&gt;      &lt;NA&gt;\nUS            United States  country   US          840       USA         &lt;NA&gt;      &lt;NA&gt;\nUY                  Uruguay  country   UY          858       URY         &lt;NA&gt;      &lt;NA&gt;\nVG  Virgin Islands, British  country   VG          092       VGB         &lt;NA&gt;      &lt;NA&gt;\nVI     Virgin Islands, U.S.  country   VI          850       VIR         &lt;NA&gt;      &lt;NA&gt;\n&lt;BLANKLINE&gt;\n[76 rows x 7 columns]\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7131745, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "69d71eeb9a1d3404f7b6d509ae7b5584", "sha256": "f432acefcb87569ea612097cb29809dd094e00d2c80609736213e028a1fb05e8"}, "downloads": -1, "filename": "mundi-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69d71eeb9a1d3404f7b6d509ae7b5584", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 687979, "upload_time": "2020-04-29T20:08:01", "upload_time_iso_8601": "2020-04-29T20:08:01.446979Z", "url": "https://files.pythonhosted.org/packages/81/99/209039f52e084d6917afc2e2a3c6bf031dc2192176429ed82d1919915ae1/mundi-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "323c7a944c9109d0a278b2e09559106c", "sha256": "0b554111b3f21c044531eb7e9f6d7241f1f6d8cabc77d84432ec70b6c9213a79"}, "downloads": -1, "filename": "mundi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "323c7a944c9109d0a278b2e09559106c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 884640, "upload_time": "2020-04-29T20:08:15", "upload_time_iso_8601": "2020-04-29T20:08:15.959873Z", "url": "https://files.pythonhosted.org/packages/d8/ef/7368363d23ed5346ce8844ce6f9725af8761c03e091dbd80e6b81f4d9671/mundi-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69d71eeb9a1d3404f7b6d509ae7b5584", "sha256": "f432acefcb87569ea612097cb29809dd094e00d2c80609736213e028a1fb05e8"}, "downloads": -1, "filename": "mundi-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69d71eeb9a1d3404f7b6d509ae7b5584", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 687979, "upload_time": "2020-04-29T20:08:01", "upload_time_iso_8601": "2020-04-29T20:08:01.446979Z", "url": "https://files.pythonhosted.org/packages/81/99/209039f52e084d6917afc2e2a3c6bf031dc2192176429ed82d1919915ae1/mundi-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "323c7a944c9109d0a278b2e09559106c", "sha256": "0b554111b3f21c044531eb7e9f6d7241f1f6d8cabc77d84432ec70b6c9213a79"}, "downloads": -1, "filename": "mundi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "323c7a944c9109d0a278b2e09559106c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 884640, "upload_time": "2020-04-29T20:08:15", "upload_time_iso_8601": "2020-04-29T20:08:15.959873Z", "url": "https://files.pythonhosted.org/packages/d8/ef/7368363d23ed5346ce8844ce6f9725af8761c03e091dbd80e6b81f4d9671/mundi-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:16 2020"}