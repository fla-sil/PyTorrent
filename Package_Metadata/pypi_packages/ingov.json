{"info": {"author": "Anto P", "author_email": "ingovanpe@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyDesktopBrowserRecorder\n This project allows you to record your desktop or the browser during an automated test using selenium's webdriver\n\n You just have to make the following import:\n from videoRecorder import desktopBrowserRecorder\n\n Then you create a DesktopBrowserRecorder object, you have two modes. You have to provide the following parameters:\n obj = desktopBrowserRecorder.DesktopBrowserRecorder(folder,encoding)\n - folder: Folder where we want to create the folder that will contain the videos for our recording session\n - encoding: Encoding of the video. We only assure that using \".mp4\" will work\n This way, when you start the recording session, the desktop will be recorded until we stop the recording session\n\n But you can also provide a third parameter:\n  obj = desktopBrowserRecorder.DesktopBrowserRecorder(folder,encoding,driver)\n  - driver: A webdriver object\n  In this case, we will record only the browser window(s) that are being controlled by that webdriver object\n\n  To start the recording session once we build the object we only have to use this method:\n  obj.startRecordingSession()\n  And our object will start recording in a parallel thread\n\n  To stop the recording session we only have to:\n  obj.stopRecordingSession()\n  The video will be saved and the threads finished\n\n  NOTE: If we are recording a browser and the size of it changes, we will stop the current video and start a new one with the new\n  size of the window\n\n  Also, in the package config we include the module checkConfiguration.py:\n  This module contains the method checkConfiguration() that reads the file importedModules.txt in the same folder and checks the modules listed in every line of this file have been installed in our environment. These modules are needed to run this project successfully. In case one is not installed, the function will tell you how to install it. Also, the module calls this function so you would only have to run this module, but you could also call this function from your program if needed\n\n  Also we have a folder test that includes a module called demo.py that you can run to see how this works and how this was tested.\n\nNOTE: This was developed using the following versions of the following external libraries:\n- imageio_ffmpeg = 0.4.1\n- imageio = 2.5.0\n- selenium = 3.141.0\n- pyautogui = 0.9.48\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://https://github.com/AntoData/PyDesktopBrowserRecorder", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ingov", "package_url": "https://pypi.org/project/ingov/", "platform": "", "project_url": "https://pypi.org/project/ingov/", "project_urls": {"Homepage": "https://https://github.com/AntoData/PyDesktopBrowserRecorder"}, "release_url": "https://pypi.org/project/ingov/0.0.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "This project allows you to record your desktop or a browser controlled by Selenium", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyDesktopBrowserRecorder</h1>\n<p>This project allows you to record your desktop or the browser during an automated test using selenium's webdriver</p>\n<p>You just have to make the following import:\nfrom videoRecorder import desktopBrowserRecorder</p>\n<p>Then you create a DesktopBrowserRecorder object, you have two modes. You have to provide the following parameters:\nobj = desktopBrowserRecorder.DesktopBrowserRecorder(folder,encoding)</p>\n<ul>\n<li>folder: Folder where we want to create the folder that will contain the videos for our recording session</li>\n<li>encoding: Encoding of the video. We only assure that using \".mp4\" will work\nThis way, when you start the recording session, the desktop will be recorded until we stop the recording session</li>\n</ul>\n<p>But you can also provide a third parameter:\nobj = desktopBrowserRecorder.DesktopBrowserRecorder(folder,encoding,driver)</p>\n<ul>\n<li>driver: A webdriver object\nIn this case, we will record only the browser window(s) that are being controlled by that webdriver object</li>\n</ul>\n<p>To start the recording session once we build the object we only have to use this method:\nobj.startRecordingSession()\nAnd our object will start recording in a parallel thread</p>\n<p>To stop the recording session we only have to:\nobj.stopRecordingSession()\nThe video will be saved and the threads finished</p>\n<p>NOTE: If we are recording a browser and the size of it changes, we will stop the current video and start a new one with the new\nsize of the window</p>\n<p>Also, in the package config we include the module checkConfiguration.py:\nThis module contains the method checkConfiguration() that reads the file importedModules.txt in the same folder and checks the modules listed in every line of this file have been installed in our environment. These modules are needed to run this project successfully. In case one is not installed, the function will tell you how to install it. Also, the module calls this function so you would only have to run this module, but you could also call this function from your program if needed</p>\n<p>Also we have a folder test that includes a module called demo.py that you can run to see how this works and how this was tested.</p>\n<p>NOTE: This was developed using the following versions of the following external libraries:</p>\n<ul>\n<li>imageio_ffmpeg = 0.4.1</li>\n<li>imageio = 2.5.0</li>\n<li>selenium = 3.141.0</li>\n<li>pyautogui = 0.9.48</li>\n</ul>\n\n          </div>"}, "last_serial": 6729686, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bfd2cb4013dbc77021136d7c533887fa", "sha256": "db59a0df6f1c28e30ba84124de754bb2c5c01f09472000dfa973364c5c3682be"}, "downloads": -1, "filename": "ingov-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bfd2cb4013dbc77021136d7c533887fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3096, "upload_time": "2020-03-01T19:36:11", "upload_time_iso_8601": "2020-03-01T19:36:11.905540Z", "url": "https://files.pythonhosted.org/packages/59/14/16507ccd3dc7af4b7e0b7f7c5c8397e130272b2bc86b6434e1ca791abf6d/ingov-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba23e8994b12ad7ae1410dbe96a25c9f", "sha256": "4fcd95b062de750df13e478c63fffda274dded0511466f16824dca376e581527"}, "downloads": -1, "filename": "ingov-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ba23e8994b12ad7ae1410dbe96a25c9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2125, "upload_time": "2020-03-01T19:36:14", "upload_time_iso_8601": "2020-03-01T19:36:14.218282Z", "url": "https://files.pythonhosted.org/packages/1d/81/94aca1c2ad62506cd51da3739e1ac1aaacf91f8cbfae3688d2dcaa208ff2/ingov-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bfd2cb4013dbc77021136d7c533887fa", "sha256": "db59a0df6f1c28e30ba84124de754bb2c5c01f09472000dfa973364c5c3682be"}, "downloads": -1, "filename": "ingov-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bfd2cb4013dbc77021136d7c533887fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 3096, "upload_time": "2020-03-01T19:36:11", "upload_time_iso_8601": "2020-03-01T19:36:11.905540Z", "url": "https://files.pythonhosted.org/packages/59/14/16507ccd3dc7af4b7e0b7f7c5c8397e130272b2bc86b6434e1ca791abf6d/ingov-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba23e8994b12ad7ae1410dbe96a25c9f", "sha256": "4fcd95b062de750df13e478c63fffda274dded0511466f16824dca376e581527"}, "downloads": -1, "filename": "ingov-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ba23e8994b12ad7ae1410dbe96a25c9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2125, "upload_time": "2020-03-01T19:36:14", "upload_time_iso_8601": "2020-03-01T19:36:14.218282Z", "url": "https://files.pythonhosted.org/packages/1d/81/94aca1c2ad62506cd51da3739e1ac1aaacf91f8cbfae3688d2dcaa208ff2/ingov-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:58 2020"}