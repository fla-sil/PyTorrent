{"info": {"author": "pts", "author_email": "pts@fazekas.hu", "bugtrack_url": null, "classifiers": [], "description": "========\ntinygpgs\n========\ntinygpgs is a fast module and standalone Python 2 script for doing\nsymmetric key (passphrase-based) encryption and decryption using the OpenPGP\nfile format compatible with GPG (GnuPG).\n\n-----\nUsage\n-----\nFile class API usage for encryption::\n\n    import getpass\n    from tinygpgs.file import GpgSymmetricFile\n    f = GpgSymmetricFile('FILE.bin.gpg', 'wb', getpass.getpass())\n    try:\n      f.write('Hello, World!\\n')\n      f.write('This is the end.\\n')\n    finally:\n      f.close()\n\nFile class API usage for decryption::\n\n    import getpass \n    from tinygpgs.file import GpgSymmetricFile\n    f = GpgSymmetricFile('FILE.bin', 'rb', getpass.getpass())\n    try:\n      # Use f.read(8192) in a loop instead to limit memory usage.\n      print(f.read())\n    finally:\n      f.close()\n\nFor encryption, it also provides the `encryptedfile\n<https://pypi.org/project/encryptedfile/>`_ 1.1.1 interface for easy\nmigration::\n\n    import getpass\n    from tinygpgs.file import EncryptedFile  # Just for compatibility.\n    f = EncryptedFile('FILE.bin.gpg', mode='wb', passphrase=getpass.getpass())\n    try:\n      f.write('Hello, World!\\n')\n      f.write('This is the end.\\n')\n    finally:\n      f.close()\n\nCommand-line tool usage::\n\n    $ python -m tinygpgs -c FILE.bin                  # Encrypt.\n    Enter passphrase:\n    $ python -m tinygpgs -d <FILE.bin.gpg >FILE2.bin  # Decrypt.\n    Enter passphrase:\n    $ cmp FILE.bin FILE2.bin\n\nThe command-line tool has many flags identical to gpg(1), so you can use\n``python -m tinygpgs`` as a drop-in replacement for ``gpg`` for symmetric\nkey encryption and decryption.\n\n--------\nFeatures\n--------\ntinygpgs supports all ciphers, hashes, string-to-key modes, output formats\n(binary and ASCII armor) and compression methods in the `OpenPGP RFC\n<https://tools.ietf.org/html/rfc4880>`_ for both encryption and decryption.\nAll these settings are configurable in keyword arguments to the class\nconstructors and in command-line flags.\n\ntinygpgs doesn't support public-key cryptography (e.g. encryption, signing\nand key generation).\n\n------------\nInstallation\n------------\nTo get the module, run this::\n\n    $ python -m pip install tinygpgs pycrypto\n\nPlease note that tinygpgs works without *pycrypto* as well, but with\n*pycrypto* it works much faster, even comparable with gpg(1): less than 1.37\nslower.\n\nTo get the standalone version of the command-line tool (single executable\nfile for Unix, contains the module embedded), see\nhttps://github.com/pts/tinygpgs.\n\nYou need Python >=2.4 to use tinygpgs as a script or a module. It was tested\nwith 2.4 and 3.8, and all the major versions in-between.\n\n---------\nMore info\n---------\nSee see https://github.com/pts/tinygpgs.\n\n-------\nLicense\n-------\ntinygpgs is free software released under the MIT license. There is NO\nWARRANTY. Use at your risk.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pts/tinygpgs", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "tinygpgs", "package_url": "https://pypi.org/project/tinygpgs/", "platform": "", "project_url": "https://pypi.org/project/tinygpgs/", "project_urls": {"Homepage": "https://github.com/pts/tinygpgs"}, "release_url": "https://pypi.org/project/tinygpgs/0.18/", "requires_dist": null, "requires_python": "", "summary": "symmetric key encryption and decryption compatible with GPG", "version": "0.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>tinygpgs is a fast module and standalone Python 2 script for doing\nsymmetric key (passphrase-based) encryption and decryption using the OpenPGP\nfile format compatible with GPG (GnuPG).</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>File class API usage for encryption:</p>\n<pre>import getpass\nfrom tinygpgs.file import GpgSymmetricFile\nf = GpgSymmetricFile('FILE.bin.gpg', 'wb', getpass.getpass())\ntry:\n  f.write('Hello, World!\\n')\n  f.write('This is the end.\\n')\nfinally:\n  f.close()\n</pre>\n<p>File class API usage for decryption:</p>\n<pre>import getpass\nfrom tinygpgs.file import GpgSymmetricFile\nf = GpgSymmetricFile('FILE.bin', 'rb', getpass.getpass())\ntry:\n  # Use f.read(8192) in a loop instead to limit memory usage.\n  print(f.read())\nfinally:\n  f.close()\n</pre>\n<p>For encryption, it also provides the <a href=\"https://pypi.org/project/encryptedfile/\" rel=\"nofollow\">encryptedfile</a> 1.1.1 interface for easy\nmigration:</p>\n<pre>import getpass\nfrom tinygpgs.file import EncryptedFile  # Just for compatibility.\nf = EncryptedFile('FILE.bin.gpg', mode='wb', passphrase=getpass.getpass())\ntry:\n  f.write('Hello, World!\\n')\n  f.write('This is the end.\\n')\nfinally:\n  f.close()\n</pre>\n<p>Command-line tool usage:</p>\n<pre>$ python -m tinygpgs -c FILE.bin                  # Encrypt.\nEnter passphrase:\n$ python -m tinygpgs -d &lt;FILE.bin.gpg &gt;FILE2.bin  # Decrypt.\nEnter passphrase:\n$ cmp FILE.bin FILE2.bin\n</pre>\n<p>The command-line tool has many flags identical to gpg(1), so you can use\n<tt>python <span class=\"pre\">-m</span> tinygpgs</tt> as a drop-in replacement for <tt>gpg</tt> for symmetric\nkey encryption and decryption.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>tinygpgs supports all ciphers, hashes, string-to-key modes, output formats\n(binary and ASCII armor) and compression methods in the <a href=\"https://tools.ietf.org/html/rfc4880\" rel=\"nofollow\">OpenPGP RFC</a> for both encryption and decryption.\nAll these settings are configurable in keyword arguments to the class\nconstructors and in command-line flags.</p>\n<p>tinygpgs doesn\u2019t support public-key cryptography (e.g. encryption, signing\nand key generation).</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To get the module, run this:</p>\n<pre>$ python -m pip install tinygpgs pycrypto\n</pre>\n<p>Please note that tinygpgs works without <em>pycrypto</em> as well, but with\n<em>pycrypto</em> it works much faster, even comparable with gpg(1): less than 1.37\nslower.</p>\n<p>To get the standalone version of the command-line tool (single executable\nfile for Unix, contains the module embedded), see\n<a href=\"https://github.com/pts/tinygpgs\" rel=\"nofollow\">https://github.com/pts/tinygpgs</a>.</p>\n<p>You need Python &gt;=2.4 to use tinygpgs as a script or a module. It was tested\nwith 2.4 and 3.8, and all the major versions in-between.</p>\n</div>\n<div id=\"more-info\">\n<h2>More info</h2>\n<p>See see <a href=\"https://github.com/pts/tinygpgs\" rel=\"nofollow\">https://github.com/pts/tinygpgs</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>tinygpgs is free software released under the MIT license. There is NO\nWARRANTY. Use at your risk.</p>\n</div>\n\n          </div>"}, "last_serial": 6307075, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cd0e42ce22a683b0ba5ddffe2a9a7d90", "sha256": "9ba0811cf4d526d949fdec928ebbceb9723ba346d82cb8e0bdff8d15983bea1e"}, "downloads": -1, "filename": "tinygpgs-0.1.tar.gz", "has_sig": false, "md5_digest": "cd0e42ce22a683b0ba5ddffe2a9a7d90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61732, "upload_time": "2019-12-04T23:18:24", "upload_time_iso_8601": "2019-12-04T23:18:24.176484Z", "url": "https://files.pythonhosted.org/packages/59/1a/c717078374fdfbb65eac8cf5617546fcb1d9959151f119619b88a34a5805/tinygpgs-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "d3fcafa63bfb8e862d18198360cbeade", "sha256": "fd65f6c80cf6be96326e3793cf71c5ecd0f5e618944cd43e40f616bcd4f6d6b8"}, "downloads": -1, "filename": "tinygpgs-0.11.tar.gz", "has_sig": false, "md5_digest": "d3fcafa63bfb8e862d18198360cbeade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62290, "upload_time": "2019-12-05T00:02:51", "upload_time_iso_8601": "2019-12-05T00:02:51.634268Z", "url": "https://files.pythonhosted.org/packages/a1/fc/860430de3acb7d7cf5f506aa7cb92af70b153b3dd963cba3efa54e9c6334/tinygpgs-0.11.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "827ab66c675c5baf148fcb637b34ea66", "sha256": "9ac3a43991267b4f640568e3cc56b8d9e050928271ee522c22a243eed2bd7d91"}, "downloads": -1, "filename": "tinygpgs-0.13.tar.gz", "has_sig": false, "md5_digest": "827ab66c675c5baf148fcb637b34ea66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67984, "upload_time": "2019-12-08T22:23:17", "upload_time_iso_8601": "2019-12-08T22:23:17.749417Z", "url": "https://files.pythonhosted.org/packages/f4/f9/8dc51afd9f97896e796f0b5e0bc0b2fd1b882cc103ee0df3b121b871b710/tinygpgs-0.13.tar.gz", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "f5abe1731b569bcf1a0abc73adba195d", "sha256": "f4708ead2a85fee511c2438992473458376a3d4d7c9cc9d5dd6d6a68568c3cb9"}, "downloads": -1, "filename": "tinygpgs-0.14.tar.gz", "has_sig": false, "md5_digest": "f5abe1731b569bcf1a0abc73adba195d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68250, "upload_time": "2019-12-08T22:29:00", "upload_time_iso_8601": "2019-12-08T22:29:00.817213Z", "url": "https://files.pythonhosted.org/packages/d5/bf/7f3f803d0d4687b32d0bc6e9199ea32551e50b220a9dc60d80f6f3a04260/tinygpgs-0.14.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "2d8d1b59bf4a9e15ff5594cf32052ab4", "sha256": "fca3384be025baa55fd05a3a5c08bd51af4e4cf51d67d653a6282cdcf6b45aa0"}, "downloads": -1, "filename": "tinygpgs-0.15.tar.gz", "has_sig": false, "md5_digest": "2d8d1b59bf4a9e15ff5594cf32052ab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68286, "upload_time": "2019-12-08T23:09:11", "upload_time_iso_8601": "2019-12-08T23:09:11.523578Z", "url": "https://files.pythonhosted.org/packages/1b/0e/397d730738f55f50c1c570d552ee70835dd07c6082f1ef9f8917121ac64f/tinygpgs-0.15.tar.gz", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "c0d7eb85598eb46c0192d8135e18b1b4", "sha256": "e6dda3ae41d2c5a053caac02dbb531893229260d3167b9f1a28772ccb65ccf1d"}, "downloads": -1, "filename": "tinygpgs-0.16.tar.gz", "has_sig": false, "md5_digest": "c0d7eb85598eb46c0192d8135e18b1b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69262, "upload_time": "2019-12-10T00:24:18", "upload_time_iso_8601": "2019-12-10T00:24:18.891101Z", "url": "https://files.pythonhosted.org/packages/f6/a5/b85876f95d68c69486f20d8f2a0b11c7b9e0a9b5fa7220c4ea61a7a18cdc/tinygpgs-0.16.tar.gz", "yanked": false}], "0.18": [{"comment_text": "", "digests": {"md5": "0405877ade8fc272208c5efeab99ce8c", "sha256": "326b94af47e9c2092434d1d1a6826a66501ba288289809a02199aea6760d6b51"}, "downloads": -1, "filename": "tinygpgs-0.18.tar.gz", "has_sig": false, "md5_digest": "0405877ade8fc272208c5efeab99ce8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76799, "upload_time": "2019-12-15T16:41:00", "upload_time_iso_8601": "2019-12-15T16:41:00.708150Z", "url": "https://files.pythonhosted.org/packages/9c/b6/f76f5f241817fd2ee439f4a7268da27ba27326f17738ad578bc016ad578c/tinygpgs-0.18.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0405877ade8fc272208c5efeab99ce8c", "sha256": "326b94af47e9c2092434d1d1a6826a66501ba288289809a02199aea6760d6b51"}, "downloads": -1, "filename": "tinygpgs-0.18.tar.gz", "has_sig": false, "md5_digest": "0405877ade8fc272208c5efeab99ce8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76799, "upload_time": "2019-12-15T16:41:00", "upload_time_iso_8601": "2019-12-15T16:41:00.708150Z", "url": "https://files.pythonhosted.org/packages/9c/b6/f76f5f241817fd2ee439f4a7268da27ba27326f17738ad578bc016ad578c/tinygpgs-0.18.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:01 2020"}