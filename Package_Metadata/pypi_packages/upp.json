{"info": {"author": "Samir Ibrad\u017ei\u0107", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "## UPP\n\nUPP: Uplift Power Play\n\nA tool for parsing, dumping and modifying data in Radeon PowerPlay tables\n\n### Introduction\n\nUPP is able to parse and modify binary data structures of PowerPlay tables\ncommonly found on certain AMD Radeon GPUs. Drivers on recent AMD GPUs\nallow PowerPlay tables to be dynamically modified on runtime, which may be\nknown as \"soft\" PowerPlay table. On Linux, the PowerPlay table is by default\nfound at: `/sys/class/drm/card0/device/pp_table`.\n\n### Requirements\n\nPython 2.7 or 3.6+, click library. Optionally, for reading \"soft\" PowerPlay\ntable from Windows registry: python-registry. Should work on Windows as well\n(testers wanted).\n\n### Usage\n\nAt its current form this is a CLI only tool. Getting help:\n\n    Usage: upp [OPTIONS] COMMAND [ARGS]...\n\n      UPP: Uplift Power Play\n\n      A tool for parsing, dumping and modifying data in Radeon PowerPlay tables.\n\n      UPP is able to parse and modify binary data structures of PowerPlay tables\n      commonly found on certain AMD Radeon GPUs. Drivers on recent AMD GPUs\n      allow PowerPlay tables to be dynamically modified on runtime, which may be\n      known as \"soft PowerPlay tables\". On Linux, the PowerPlay table is by\n      default found at:\n\n         /sys/class/drm/card0/device/pp_table\n\n      There are also two alternative ways of getting PowerPlay data that this\n      tool supports:\n\n       - By extracting PowerPlay table from Video ROM image (see extract command)\n       - Import \"Soft PowerPlay\" table from Windows registry, directly from\n         offline Windows/System32/config/SYSTEM file on disk, so it would work\n         from Linux distro that has acces to mounted Windows partition\n         (path to SYSTEM registry file is specified with --from-registry option)\n\n      This tool currently supports parsing and modifying PowerPlay tables found\n      on the following AMD GPU families:\n\n        - Polaris\n        - Vega\n        - Radeon VII\n        - Navi 10\n        - Navi 14\n\n      Note: iGPUs found in many recent AMD APUs are using completely different\n      PowerPlay control methods, this tool does not support them.\n\n      If you have bugs to report or features to request please check:\n\n        github.com/sibradzic/upp\n\n    Options:\n      -p, --pp-file <filename>        Input/output PP table binary file.\n      -f, --from-registry <filename>  Import PP_PhmSoftPowerPlayTable from Windows\n                                      registry (overrides -p / --pp-file option).\n      -d, --debug / --no-debug        Debug mode.\n      -h, --help                      Show this message and exit.\n\n    Commands:\n      dump     Dumps all PowerPlay parameters to console.\n      extract  Extract PowerPlay table from Video BIOS ROM image.\n      get      Get current value of a PowerPlay parameter(s).\n      set      Set value to PowerPlay parameter(s).\n\nDumping all data:\n\n    Usage: upp dump [OPTIONS]\n\n      Dump all PowerPlay data to console\n\n      De-serializes PowerPlay binary data into a human-readable text output. For\n      example:\n\n          upp --pp-file=radeon.pp_table dump\n\n      In standard mode all data will be dumped to console, where data tree\n      hierarchy is indicated by indentation.\n\n      In raw mode a table showing all hex and binary data, as well as variable\n      names and values, will be dumped.\n\n    Options:\n      -r, --raw / --no-raw  Show raw binary data.\n      -h, --help            Show this message and exit.\n\nExtracting PowerPlay table from Video ROM image:\n\n    Usage: upp extract [OPTIONS]\n\n      Extracts PowerPlay data from full VBIOS ROM image\n\n      The source video ROM binary must be specified with -r/--video-rom\n      parameter, and extracted PowerPlay table will be saved into file specified\n      with -p/--pp-file. For example:\n\n          upp --pp-file=extracted.pp_table extract -r VIDEO.rom\n\n      Default output file name will be an original ROM file name with an\n      additional .pp_table extension.\n\n    Options:\n      -r, --video-rom <filename>  Input Video ROM binary image file  [required].\n      -h, --help                  Show this message and exit.\n\nGetting parameter:\n\n    Usage: upp get [OPTIONS] VARIABLE_PATH_SET...\n\n      Retrieves current value of one or multiple PP parameters\n\n      The parameter variable path must be specified in \"/<param> notation\", for\n      example:\n\n          upp get /FanTable/TargetTemperature /VddgfxLookupTable/7/Vdd\n\n      The raw value of the parameter will be retrieved, decoded and displayed on\n      console. Multiple PP parameters can be specified at the same time.\n\n    Options:\n      -h, --help  Show this message and exit.\n\nSetting parameters:\n\n    Usage: upp set [OPTIONS] VARIABLE_PATH_SET...\n\n      Sets value to one or multiple PP parameters\n\n      The parameter path and value must be specified in \"/<param>=<value>\n      notation\", for example:\n\n          upp set /PowerTuneTable/TDP=75 /SclkDependencyTable/7/Sclk=107000\n\n      Multiple PP parameters can be set at the same time. The PP tables will not\n      be changed unless additional --write option is set.\n\n      Optionally, if --to-reg output is used an additional Windows registry\n      format file will be generated, named same as PowerPlay output target\n      filename with an additional '.reg' extension.\n\n    Options:\n      -t, --to-reg  Save output to Windows registry .reg file as well.\n      -w, --write   Write changes to PP binary.\n      -h, --help    Show this message and exit.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sibradzic/upp", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "upp", "package_url": "https://pypi.org/project/upp/", "platform": "", "project_url": "https://pypi.org/project/upp/", "project_urls": {"Homepage": "https://github.com/sibradzic/upp"}, "release_url": "https://pypi.org/project/upp/0.0.7/", "requires_dist": ["click", "python-registry"], "requires_python": ">=3.6, <4", "summary": "Uplift Power Play", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>UPP</h2>\n<p>UPP: Uplift Power Play</p>\n<p>A tool for parsing, dumping and modifying data in Radeon PowerPlay tables</p>\n<h3>Introduction</h3>\n<p>UPP is able to parse and modify binary data structures of PowerPlay tables\ncommonly found on certain AMD Radeon GPUs. Drivers on recent AMD GPUs\nallow PowerPlay tables to be dynamically modified on runtime, which may be\nknown as \"soft\" PowerPlay table. On Linux, the PowerPlay table is by default\nfound at: <code>/sys/class/drm/card0/device/pp_table</code>.</p>\n<h3>Requirements</h3>\n<p>Python 2.7 or 3.6+, click library. Optionally, for reading \"soft\" PowerPlay\ntable from Windows registry: python-registry. Should work on Windows as well\n(testers wanted).</p>\n<h3>Usage</h3>\n<p>At its current form this is a CLI only tool. Getting help:</p>\n<pre><code>Usage: upp [OPTIONS] COMMAND [ARGS]...\n\n  UPP: Uplift Power Play\n\n  A tool for parsing, dumping and modifying data in Radeon PowerPlay tables.\n\n  UPP is able to parse and modify binary data structures of PowerPlay tables\n  commonly found on certain AMD Radeon GPUs. Drivers on recent AMD GPUs\n  allow PowerPlay tables to be dynamically modified on runtime, which may be\n  known as \"soft PowerPlay tables\". On Linux, the PowerPlay table is by\n  default found at:\n\n     /sys/class/drm/card0/device/pp_table\n\n  There are also two alternative ways of getting PowerPlay data that this\n  tool supports:\n\n   - By extracting PowerPlay table from Video ROM image (see extract command)\n   - Import \"Soft PowerPlay\" table from Windows registry, directly from\n     offline Windows/System32/config/SYSTEM file on disk, so it would work\n     from Linux distro that has acces to mounted Windows partition\n     (path to SYSTEM registry file is specified with --from-registry option)\n\n  This tool currently supports parsing and modifying PowerPlay tables found\n  on the following AMD GPU families:\n\n    - Polaris\n    - Vega\n    - Radeon VII\n    - Navi 10\n    - Navi 14\n\n  Note: iGPUs found in many recent AMD APUs are using completely different\n  PowerPlay control methods, this tool does not support them.\n\n  If you have bugs to report or features to request please check:\n\n    github.com/sibradzic/upp\n\nOptions:\n  -p, --pp-file &lt;filename&gt;        Input/output PP table binary file.\n  -f, --from-registry &lt;filename&gt;  Import PP_PhmSoftPowerPlayTable from Windows\n                                  registry (overrides -p / --pp-file option).\n  -d, --debug / --no-debug        Debug mode.\n  -h, --help                      Show this message and exit.\n\nCommands:\n  dump     Dumps all PowerPlay parameters to console.\n  extract  Extract PowerPlay table from Video BIOS ROM image.\n  get      Get current value of a PowerPlay parameter(s).\n  set      Set value to PowerPlay parameter(s).\n</code></pre>\n<p>Dumping all data:</p>\n<pre><code>Usage: upp dump [OPTIONS]\n\n  Dump all PowerPlay data to console\n\n  De-serializes PowerPlay binary data into a human-readable text output. For\n  example:\n\n      upp --pp-file=radeon.pp_table dump\n\n  In standard mode all data will be dumped to console, where data tree\n  hierarchy is indicated by indentation.\n\n  In raw mode a table showing all hex and binary data, as well as variable\n  names and values, will be dumped.\n\nOptions:\n  -r, --raw / --no-raw  Show raw binary data.\n  -h, --help            Show this message and exit.\n</code></pre>\n<p>Extracting PowerPlay table from Video ROM image:</p>\n<pre><code>Usage: upp extract [OPTIONS]\n\n  Extracts PowerPlay data from full VBIOS ROM image\n\n  The source video ROM binary must be specified with -r/--video-rom\n  parameter, and extracted PowerPlay table will be saved into file specified\n  with -p/--pp-file. For example:\n\n      upp --pp-file=extracted.pp_table extract -r VIDEO.rom\n\n  Default output file name will be an original ROM file name with an\n  additional .pp_table extension.\n\nOptions:\n  -r, --video-rom &lt;filename&gt;  Input Video ROM binary image file  [required].\n  -h, --help                  Show this message and exit.\n</code></pre>\n<p>Getting parameter:</p>\n<pre><code>Usage: upp get [OPTIONS] VARIABLE_PATH_SET...\n\n  Retrieves current value of one or multiple PP parameters\n\n  The parameter variable path must be specified in \"/&lt;param&gt; notation\", for\n  example:\n\n      upp get /FanTable/TargetTemperature /VddgfxLookupTable/7/Vdd\n\n  The raw value of the parameter will be retrieved, decoded and displayed on\n  console. Multiple PP parameters can be specified at the same time.\n\nOptions:\n  -h, --help  Show this message and exit.\n</code></pre>\n<p>Setting parameters:</p>\n<pre><code>Usage: upp set [OPTIONS] VARIABLE_PATH_SET...\n\n  Sets value to one or multiple PP parameters\n\n  The parameter path and value must be specified in \"/&lt;param&gt;=&lt;value&gt;\n  notation\", for example:\n\n      upp set /PowerTuneTable/TDP=75 /SclkDependencyTable/7/Sclk=107000\n\n  Multiple PP parameters can be set at the same time. The PP tables will not\n  be changed unless additional --write option is set.\n\n  Optionally, if --to-reg output is used an additional Windows registry\n  format file will be generated, named same as PowerPlay output target\n  filename with an additional '.reg' extension.\n\nOptions:\n  -t, --to-reg  Save output to Windows registry .reg file as well.\n  -w, --write   Write changes to PP binary.\n  -h, --help    Show this message and exit.\n</code></pre>\n\n          </div>"}, "last_serial": 6902406, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "41e946c0d2d4794c63ac2f0b94e1a0ce", "sha256": "449cce27b1edfeea2f8a61f8b8230b0962f7b3ba5dc12bdf24a1020145efcec1"}, "downloads": -1, "filename": "upp-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "41e946c0d2d4794c63ac2f0b94e1a0ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 63268, "upload_time": "2020-03-15T17:24:33", "upload_time_iso_8601": "2020-03-15T17:24:33.919083Z", "url": "https://files.pythonhosted.org/packages/06/55/23543d2767cbcfb08efb9fad658a904631667dbc0d468f51a6519d92df6f/upp-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab7305dc5eb5acea5c293806bd36f55e", "sha256": "947f1053ddbfb2c411e8c67238ba81bef55099fdb357e54602e1655bf22f0177"}, "downloads": -1, "filename": "upp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ab7305dc5eb5acea5c293806bd36f55e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 48034, "upload_time": "2020-03-15T17:24:35", "upload_time_iso_8601": "2020-03-15T17:24:35.161838Z", "url": "https://files.pythonhosted.org/packages/0e/85/dc86cc4716451341bc2cb49a1e2db2ed3a1db1f00bfa5ea46188c7be4cc7/upp-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "059809c2fffd6e4f205a481040dfead3", "sha256": "8da293e4a5ba73c4650ae6ed55dde5f7880922a155eafdb98285c2705991ffb3"}, "downloads": -1, "filename": "upp-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "059809c2fffd6e4f205a481040dfead3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 63556, "upload_time": "2020-03-16T17:37:59", "upload_time_iso_8601": "2020-03-16T17:37:59.548795Z", "url": "https://files.pythonhosted.org/packages/f8/4c/04f5228c31bcad2e8a3e246013c31bed32050f5bb6097bd8033d20e08323/upp-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbc66b8047f0916b8499cb0beeba8d3c", "sha256": "d177fd8611fcb53a67c2123f38d1b25a18e4d35e59f655b1c871c43a9890ff25"}, "downloads": -1, "filename": "upp-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bbc66b8047f0916b8499cb0beeba8d3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 48356, "upload_time": "2020-03-16T17:38:01", "upload_time_iso_8601": "2020-03-16T17:38:01.615302Z", "url": "https://files.pythonhosted.org/packages/67/fa/5504b301a26552597991f312cb81fd044af945eb6edf4fb38cad633fff4a/upp-0.0.3.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "0b76e1be35302564ffd0bdd0a148481f", "sha256": "8860fe86b6fd911fa3ffc6464b4c95b693565dead6a89a12af23722071f08955"}, "downloads": -1, "filename": "upp-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0b76e1be35302564ffd0bdd0a148481f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 65243, "upload_time": "2020-03-28T16:11:55", "upload_time_iso_8601": "2020-03-28T16:11:55.325300Z", "url": "https://files.pythonhosted.org/packages/7c/bd/89578c60f6ef7e97d5b200aca9d4197c26522babe66a24a2dac2565817ce/upp-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8be1f2ef8ae727082718f9ac3a0f5fb8", "sha256": "ef5025c8deaba8b5fc75676ee11d76d7e5c3a8d5c846c7ed692203ff26c570d7"}, "downloads": -1, "filename": "upp-0.0.7.tar.gz", "has_sig": false, "md5_digest": "8be1f2ef8ae727082718f9ac3a0f5fb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 50545, "upload_time": "2020-03-28T16:11:57", "upload_time_iso_8601": "2020-03-28T16:11:57.680237Z", "url": "https://files.pythonhosted.org/packages/65/1c/e5c259a8da7595fd8d1aaa945c3902eaa17440645d54c89082b4198a1e58/upp-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b76e1be35302564ffd0bdd0a148481f", "sha256": "8860fe86b6fd911fa3ffc6464b4c95b693565dead6a89a12af23722071f08955"}, "downloads": -1, "filename": "upp-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0b76e1be35302564ffd0bdd0a148481f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 65243, "upload_time": "2020-03-28T16:11:55", "upload_time_iso_8601": "2020-03-28T16:11:55.325300Z", "url": "https://files.pythonhosted.org/packages/7c/bd/89578c60f6ef7e97d5b200aca9d4197c26522babe66a24a2dac2565817ce/upp-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8be1f2ef8ae727082718f9ac3a0f5fb8", "sha256": "ef5025c8deaba8b5fc75676ee11d76d7e5c3a8d5c846c7ed692203ff26c570d7"}, "downloads": -1, "filename": "upp-0.0.7.tar.gz", "has_sig": false, "md5_digest": "8be1f2ef8ae727082718f9ac3a0f5fb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 50545, "upload_time": "2020-03-28T16:11:57", "upload_time_iso_8601": "2020-03-28T16:11:57.680237Z", "url": "https://files.pythonhosted.org/packages/65/1c/e5c259a8da7595fd8d1aaa945c3902eaa17440645d54c89082b4198a1e58/upp-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:48 2020"}