{"info": {"author": "Petri Savolainen", "author_email": "petri@koodaamo.fi", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "========================\nopsdroid Skype extension\n========================\n\n\nThis extension provides Skype support for `opsdroid`_. To use, just add 'skype' to\nthe connectors section of your opsdroid config. Here's an example opsdroid configuration for the connector::\n\n web:\n     host: 0.0.0.0\n     port: 9000\n     \n connectors:\n   - name: skype\n     app_id:\n     app_pass:\n     endpoint: /connectors/skype\n\nThe connector will then be running at `http://0.0.0.0:9000/connectors/skype`. This is your skype bot endpoint.\n\nTo test the connector, you can use the `Bot Framework Emulator`_. This package includes a ready-made configuration file in `tests/bot.bot`.\n\nTo deploy a Skype bot, a Azure service account is needed. At the time of writing this (end of 2018), Azure offers a free tier that is sufficient to test the bot. To test and deploy the bot, create and configure a 'Bot Channels Registration' resource.\n\nWhen configuring the bot in Azure, make sure to:\n\n- enter the correct full 'Messaging endpoint' URL in settings\n- test the bot (see 'Test in Web Chat')\n- enter the bot Microsoft Application Id & Password into your opsdroid config; you may need to click the 'Manage' link in the bot registration settings to access the password\n- add a Skype 'channel' to the registration resource (there is NO NEED to configure it in any way or publish it!)\n\nAfter completing the above steps, visit your bot endpoint using a web browser; you will be redirected to a Microsoft-hosted\npage for adding the bot as a Skype contact.\n\n------------\n\nFree software: Apache Software License 2.0\n\nPackage created with Cookiecutter_ using the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _opsdroid: https://opsdroid.github.io\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _`Bot Framework Emulator`: https://docs.microsoft.com/en-us/azure/bot-service/bot-service-debug-emulator\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-12-03)\n-------------------\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/koodaamo/opsdroid-skype", "keywords": "opsdroid skype bot", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "opsdroid-skype", "package_url": "https://pypi.org/project/opsdroid-skype/", "platform": "", "project_url": "https://pypi.org/project/opsdroid-skype/", "project_urls": {"Homepage": "https://github.com/koodaamo/opsdroid-skype"}, "release_url": "https://pypi.org/project/opsdroid-skype/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Skype support for opsdroid", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"opsdroid-skype-extension\">\n<h2>opsdroid Skype extension</h2>\n<p>This extension provides Skype support for <a href=\"https://opsdroid.github.io\" rel=\"nofollow\">opsdroid</a>. To use, just add \u2018skype\u2019 to\nthe connectors section of your opsdroid config. Here\u2019s an example opsdroid configuration for the connector:</p>\n<pre>web:\n    host: 0.0.0.0\n    port: 9000\n\nconnectors:\n  - name: skype\n    app_id:\n    app_pass:\n    endpoint: /connectors/skype\n</pre>\n<p>The connector will then be running at <cite>http://0.0.0.0:9000/connectors/skype</cite>. This is your skype bot endpoint.</p>\n<p>To test the connector, you can use the <a href=\"https://docs.microsoft.com/en-us/azure/bot-service/bot-service-debug-emulator\" rel=\"nofollow\">Bot Framework Emulator</a>. This package includes a ready-made configuration file in <cite>tests/bot.bot</cite>.</p>\n<p>To deploy a Skype bot, a Azure service account is needed. At the time of writing this (end of 2018), Azure offers a free tier that is sufficient to test the bot. To test and deploy the bot, create and configure a \u2018Bot Channels Registration\u2019 resource.</p>\n<p>When configuring the bot in Azure, make sure to:</p>\n<ul>\n<li>enter the correct full \u2018Messaging endpoint\u2019 URL in settings</li>\n<li>test the bot (see \u2018Test in Web Chat\u2019)</li>\n<li>enter the bot Microsoft Application Id &amp; Password into your opsdroid config; you may need to click the \u2018Manage\u2019 link in the bot registration settings to access the password</li>\n<li>add a Skype \u2018channel\u2019 to the registration resource (there is NO NEED to configure it in any way or publish it!)</li>\n</ul>\n<p>After completing the above steps, visit your bot endpoint using a web browser; you will be redirected to a Microsoft-hosted\npage for adding the bot as a Skype contact.</p>\n<hr class=\"docutils\">\n<p>Free software: Apache Software License 2.0</p>\n<p>Package created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> using the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2018-12-03)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4556824, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e909021a442e63305e0f6bf00a633888", "sha256": "81df6d86f32bb2e436ce1010ec7c78de8f8d0d56e1f632f5aee424a416dc9ee4"}, "downloads": -1, "filename": "opsdroid-skype-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e909021a442e63305e0f6bf00a633888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7093, "upload_time": "2018-12-03T19:02:51", "upload_time_iso_8601": "2018-12-03T19:02:51.271957Z", "url": "https://files.pythonhosted.org/packages/fe/cb/544d853971bc705cc539f367c99103c59d0ec600b4a8ee9537da66648a75/opsdroid-skype-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e909021a442e63305e0f6bf00a633888", "sha256": "81df6d86f32bb2e436ce1010ec7c78de8f8d0d56e1f632f5aee424a416dc9ee4"}, "downloads": -1, "filename": "opsdroid-skype-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e909021a442e63305e0f6bf00a633888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7093, "upload_time": "2018-12-03T19:02:51", "upload_time_iso_8601": "2018-12-03T19:02:51.271957Z", "url": "https://files.pythonhosted.org/packages/fe/cb/544d853971bc705cc539f367c99103c59d0ec600b4a8ee9537da66648a75/opsdroid-skype-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:08 2020"}