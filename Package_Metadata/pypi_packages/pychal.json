{"info": {"author": "ZEDGR", "author_email": "georlema@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "pychal\n===========\n\n.. image:: https://img.shields.io/travis/ZEDGR/pychal.svg\n   :target: https://travis-ci.org/ZEDGR/pychal\n\nPychal is a drop-in replacement of pychallonge\nwith some extra features and support for new Python versions.\nPychal provides python bindings for the\n`CHALLONGE! <http://challonge.com>`__\n`API <http://api.challonge.com/v1>`__.\n\n\n\nDifferences\n===========\nThe only diffence with the pychallonge is the\ndictionary keys with dashes are now with undescores\nfor example the key 'created-at' is now 'created_at'.\n\nRequirements\n============\n\n-  ``iso8601``\n-  ``tzlocal``\n-  ``pytz``\n-  ``requests``\n\nPython version support\n======================\n\n-  ``2.7``\n-  ``3.4+``\n\nInstallation\n============\n\nFor the stable version\n\n::\n\n    pip install pychal\n\nFor latest development\n\n::\n\n    pip install -e git+http://github.com/ZEDGR/pychal#egg=pychal\n\nUsage\n=====\n\n.. code:: python\n\n    import challonge\n\n    # Tell pychal about your [CHALLONGE! API credentials](http://api.challonge.com/v1).\n    challonge.set_credentials(\"your_challonge_username\", \"your_api_key\")\n\n    # Retrieve a tournament by its id (or its url).\n    tournament = challonge.tournaments.show(3272)\n\n    # Tournaments, matches, and participants are all represented as normal Python dicts.\n    print(tournament[\"id\"]) # 3272\n    print(tournament[\"name\"]) # My Awesome Tournament\n    print(tournament[\"started_at\"]) # None\n\n    # Retrieve the participants for a given tournament.\n    participants = challonge.participants.index(tournament[\"id\"])\n    print(len(participants)) # 13\n\n    # Start the tournament and retrieve the updated information to see the effects\n    # of the change.\n    challonge.tournaments.start(tournament[\"id\"])\n    tournament = challonge.tournaments.show(tournament[\"id\"])\n    print(tournament[\"started_at\"]) # 2011-07-31 16:16:02-04:00\n\nSee `challonge.com <http://api.challonge.com/v1>`__ for full API\ndocumentation.\n\nAPI Issues\n==========\n\nThe Challonge API has some issues with the attachments endpoints. The\n``create`` and ``update`` endpoints are not working correctly. When you\ntry to upload an attachment with asset(file) the API returns 500\ninternal server error. The same happens with asset + description.\nThis problem has been reported to Challonge.\n\nOther problems that I have noticed is that the check in process through\nthe API seems weird. When you undo check in a participant the field\n'checked_in' remains True but in the website the participant is correctly\nnot checked in. That's why I haven't write any tests on this.\n\nFixed by pychal: In the datetime fields the api returns\nrandom timezone offsets, pychal convert those\nto your machine's local time. Also you can set any timezone\nyou want with ``set_timezone`` function.\n\nRunning the unit tests\n======================\n\nPychal comes with a set of unit tests. The tests are not\ncomprehensive, but do utilize each method and verify basic\nfunctionality.\n\nIn order to test behavior of the python bindings, API calls must be made\nto CHALLONGE!, which requires a username and api key. To run the tests\nwith your credentials, set ``CHALLONGE_USER`` and ``CHALLONGE_KEY``\nappropriately in your environment.\n\n::\n\n    $ git clone http://github.com/ZEDGR/pychal pychal\n    $ CHALLONGE_USER=my_user CHALLONGE_KEY=my_api_key python pychal/tests.py\n    ...............................\n    ----------------------------------------------------------------------\n    Ran 31 tests in 98.176s\n\n    OK\n\nNote that several tournaments are created, published, started, and\ncompleted over the course of the unit tests. These should be cleaned up\nby the end, but if any of the tests fail they may not be cleaned up. As\nlong as the basic functions work, you can clean up errant tournaments as\nfollows.\n\n.. code:: python\n\n       import challonge\n       challonge.set_credentials(\"my_user\", \"my_api_key\")\n       for t in challonge.tournaments.index():\n           if t[\"name\"].startswith(\"pychal\"):\n               challonge.tournaments.destroy(t[\"id\"])", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ZEDGR/pychal", "keywords": "tournaments,challonge", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "pychal", "package_url": "https://pypi.org/project/pychal/", "platform": "any", "project_url": "https://pypi.org/project/pychal/", "project_urls": {"Homepage": "https://github.com/ZEDGR/pychal"}, "release_url": "https://pypi.org/project/pychal/1.9.0/", "requires_dist": null, "requires_python": "", "summary": "Drop-in replacement of pychallonge", "version": "1.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pychal\">\n<h2>pychal</h2>\n<a href=\"https://travis-ci.org/ZEDGR/pychal\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/ZEDGR/pychal.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97bbe3989b048bbe10c85d6097d1140592a8cc98/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f5a454447522f70796368616c2e737667\"></a>\n<p>Pychal is a drop-in replacement of pychallonge\nwith some extra features and support for new Python versions.\nPychal provides python bindings for the\n<a href=\"http://challonge.com\" rel=\"nofollow\">CHALLONGE!</a>\n<a href=\"http://api.challonge.com/v1\" rel=\"nofollow\">API</a>.</p>\n</div>\n<div id=\"differences\">\n<h2>Differences</h2>\n<p>The only diffence with the pychallonge is the\ndictionary keys with dashes are now with undescores\nfor example the key \u2018created-at\u2019 is now \u2018created_at\u2019.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><tt>iso8601</tt></li>\n<li><tt>tzlocal</tt></li>\n<li><tt>pytz</tt></li>\n<li><tt>requests</tt></li>\n</ul>\n</div>\n<div id=\"python-version-support\">\n<h2>Python version support</h2>\n<ul>\n<li><tt>2.7</tt></li>\n<li><tt>3.4+</tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For the stable version</p>\n<pre>pip install pychal\n</pre>\n<p>For latest development</p>\n<pre>pip install -e git+http://github.com/ZEDGR/pychal#egg=pychal\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">challonge</span>\n\n<span class=\"c1\"># Tell pychal about your [CHALLONGE! API credentials](http://api.challonge.com/v1).</span>\n<span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">set_credentials</span><span class=\"p\">(</span><span class=\"s2\">\"your_challonge_username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"your_api_key\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Retrieve a tournament by its id (or its url).</span>\n<span class=\"n\">tournament</span> <span class=\"o\">=</span> <span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">tournaments</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"mi\">3272</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Tournaments, matches, and participants are all represented as normal Python dicts.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">])</span> <span class=\"c1\"># 3272</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span> <span class=\"c1\"># My Awesome Tournament</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"started_at\"</span><span class=\"p\">])</span> <span class=\"c1\"># None</span>\n\n<span class=\"c1\"># Retrieve the participants for a given tournament.</span>\n<span class=\"n\">participants</span> <span class=\"o\">=</span> <span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">participants</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">participants</span><span class=\"p\">))</span> <span class=\"c1\"># 13</span>\n\n<span class=\"c1\"># Start the tournament and retrieve the updated information to see the effects</span>\n<span class=\"c1\"># of the change.</span>\n<span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">tournaments</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">])</span>\n<span class=\"n\">tournament</span> <span class=\"o\">=</span> <span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">tournaments</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tournament</span><span class=\"p\">[</span><span class=\"s2\">\"started_at\"</span><span class=\"p\">])</span> <span class=\"c1\"># 2011-07-31 16:16:02-04:00</span>\n</pre>\n<p>See <a href=\"http://api.challonge.com/v1\" rel=\"nofollow\">challonge.com</a> for full API\ndocumentation.</p>\n</div>\n<div id=\"api-issues\">\n<h2>API Issues</h2>\n<p>The Challonge API has some issues with the attachments endpoints. The\n<tt>create</tt> and <tt>update</tt> endpoints are not working correctly. When you\ntry to upload an attachment with asset(file) the API returns 500\ninternal server error. The same happens with asset + description.\nThis problem has been reported to Challonge.</p>\n<p>Other problems that I have noticed is that the check in process through\nthe API seems weird. When you undo check in a participant the field\n\u2018checked_in\u2019 remains True but in the website the participant is correctly\nnot checked in. That\u2019s why I haven\u2019t write any tests on this.</p>\n<p>Fixed by pychal: In the datetime fields the api returns\nrandom timezone offsets, pychal convert those\nto your machine\u2019s local time. Also you can set any timezone\nyou want with <tt>set_timezone</tt> function.</p>\n</div>\n<div id=\"running-the-unit-tests\">\n<h2>Running the unit tests</h2>\n<p>Pychal comes with a set of unit tests. The tests are not\ncomprehensive, but do utilize each method and verify basic\nfunctionality.</p>\n<p>In order to test behavior of the python bindings, API calls must be made\nto CHALLONGE!, which requires a username and api key. To run the tests\nwith your credentials, set <tt>CHALLONGE_USER</tt> and <tt>CHALLONGE_KEY</tt>\nappropriately in your environment.</p>\n<pre>$ git clone http://github.com/ZEDGR/pychal pychal\n$ CHALLONGE_USER=my_user CHALLONGE_KEY=my_api_key python pychal/tests.py\n...............................\n----------------------------------------------------------------------\nRan 31 tests in 98.176s\n\nOK\n</pre>\n<p>Note that several tournaments are created, published, started, and\ncompleted over the course of the unit tests. These should be cleaned up\nby the end, but if any of the tests fail they may not be cleaned up. As\nlong as the basic functions work, you can clean up errant tournaments as\nfollows.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">challonge</span>\n<span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">set_credentials</span><span class=\"p\">(</span><span class=\"s2\">\"my_user\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my_api_key\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">tournaments</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">\"pychal\"</span><span class=\"p\">):</span>\n        <span class=\"n\">challonge</span><span class=\"o\">.</span><span class=\"n\">tournaments</span><span class=\"o\">.</span><span class=\"n\">destroy</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s2\">\"id\"</span><span class=\"p\">])</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6823255, "releases": {"1.8.0": [{"comment_text": "", "digests": {"md5": "41c1866d7f0ceb2625977e8eaf6703f6", "sha256": "93d761719b26cd4e8f066ce81ca7ee0f137385ce48e03990f41780ea837b3da9"}, "downloads": -1, "filename": "pychal-1.8.0.tar.gz", "has_sig": false, "md5_digest": "41c1866d7f0ceb2625977e8eaf6703f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6838, "upload_time": "2017-04-22T11:32:39", "upload_time_iso_8601": "2017-04-22T11:32:39.550231Z", "url": "https://files.pythonhosted.org/packages/84/e5/1aad0b7c8268e766a6983cc352d8d854b1f29957005a16453ae04be2ebbd/pychal-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "e1a7b077437df70176224a801b5cde05", "sha256": "de18700542a0a25f96e6172b72ec0c653fcbe16771721a58e6659f10adbe4b2c"}, "downloads": -1, "filename": "pychal-1.8.1.zip", "has_sig": false, "md5_digest": "e1a7b077437df70176224a801b5cde05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12921, "upload_time": "2017-11-12T16:12:18", "upload_time_iso_8601": "2017-11-12T16:12:18.766862Z", "url": "https://files.pythonhosted.org/packages/de/7a/dd482eba4a1f5eb75c88143bc4940a0427e16619d31d4431873603a2a0a7/pychal-1.8.1.zip", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "06247e7a64890672bc19629ec5d8e60b", "sha256": "a6be75caac03744bf8a15400a7127091db2ad53242054bad602e6ade8b7ad80e"}, "downloads": -1, "filename": "pychal-1.9.0.tar.gz", "has_sig": false, "md5_digest": "06247e7a64890672bc19629ec5d8e60b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8893, "upload_time": "2020-03-16T19:25:30", "upload_time_iso_8601": "2020-03-16T19:25:30.717948Z", "url": "https://files.pythonhosted.org/packages/19/a5/a0e821d1989d7603467f573e691ef983bb963d9d4b7a71080caf9cbe0148/pychal-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06247e7a64890672bc19629ec5d8e60b", "sha256": "a6be75caac03744bf8a15400a7127091db2ad53242054bad602e6ade8b7ad80e"}, "downloads": -1, "filename": "pychal-1.9.0.tar.gz", "has_sig": false, "md5_digest": "06247e7a64890672bc19629ec5d8e60b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8893, "upload_time": "2020-03-16T19:25:30", "upload_time_iso_8601": "2020-03-16T19:25:30.717948Z", "url": "https://files.pythonhosted.org/packages/19/a5/a0e821d1989d7603467f573e691ef983bb963d9d4b7a71080caf9cbe0148/pychal-1.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:35 2020"}