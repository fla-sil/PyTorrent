{"info": {"author": "Aleksey Vitebskiy", "author_email": "aleksey.vitebskiy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "resolve\\_target\n===============\n\nContacts URL(s) and resolves the redirection target(s).\n\nSummary\n-------\n\nThis utility takes a list of URLs from either command line arguments or\na file. It sends an HTTP GET request to each URL, follows any redirect\nresponses, and outputs the actual target URL. The output includes the\nresponse code, the status message, and the target URL.\n\nIf a URL is invalid, the response code and response status is replaced\nwith an error code (if applicable) and the error message. The input URL\nwill be echoed in the output in this case.\n\nCommand Line Usage\n------------------\n\n``resolve_target [-h] [-e] [-f {lines,csv,json,pretty-json}] [url [url ...]]``\n\nPositional Arguments\n~~~~~~~~~~~~~~~~~~~~\n\n-  ``url`` - The URL(s) to resolve. Multiple URLs can be listed.\n\nOptional Arguments\n~~~~~~~~~~~~~~~~~~\n\n-  ``-h``, ``--help`` - Shows the help message and exits.\n-  ``-e``, ``--examples`` - Prints additional usage examples.\n-  ``-f``, ``--format`` - Sets the output format. The valid values are\n   ``lines``, ``csv``, ``json``, ``pretty-json``. The default value is\n   ``lines``.\n\nFormat Options\n~~~~~~~~~~~~~~\n\nThe utility can format its output in several formats. The formats\ninclude CSV, JSON, and simply printing each item on its own line, with\nrecords separated by an extra blank line.\n\nlines\n^^^^^\n\nThe ``lines`` option prints the code, message, and URL each on its own\nline. A blank line separates each group of inputs.\n\nExample\n'''''''\n\n::\n\n    > resolve_target --format=lines http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n    200\n    OK\n    http://httpbin.org/\n\n    403\n    Forbidden\n    https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\n\ncsv\n^^^\n\nThe ``csv`` option prints the code, message, and url in CSV format, one\nline per URL.\n\nExample\n'''''''\n\n::\n\n    > resolve_target --format=csv http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n    200,\"OK\",\"http://httpbin.org/\"\n    403,\"Forbidden\",\"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\"\n\njson\n^^^^\n\nThe ``json`` option prints the code, message, and URL in JSON format\nwithout formatting.\n\nExample\n'''''''\n\n::\n\n    > resolve_target --format=json http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n    [{\"url\": \"http://httpbin.org/\", \"message\": \"OK\", \"code\": 200}, {\"url\": \"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\", \"message\": \"Forbidden\", \"code\": 403}]\n\npretty-json\n^^^^^^^^^^^\n\n::\n\n    > resolve_target --format=pretty-json http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n    [\n        {\n            \"code\": 200, \n            \"message\": \"OK\", \n            \"url\": \"http://httpbin.org/\"\n        }, \n        {\n            \"code\": 403, \n            \"message\": \"Forbidden\", \n            \"url\": \"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\"\n        }\n    ]\n\nReading URLs From a File\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf a text file is redirected into the ``resolve_target`` utility,\n``resolve_target`` will read the URLs from that file. The file should\nhave the URLs listed one per line.\n\nExample\n^^^^^^^\n\nContents of **urls.txt**:\n\n::\n\n    http://bit.ly/1IvcuW5\n    https://bit.ly/2x5rRbk\n\nUsage:\n\n::\n\n    > resolve_target --format=pretty-json < urls.txt                                  \n    [\n        {\n            \"code\": 200, \n            \"message\": \"OK\", \n            \"url\": \"http://httpbin.org/\"\n        }, \n        {\n            \"code\": 403, \n            \"message\": \"Forbidden\", \n            \"url\": \"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\"\n        }\n    ]\n\nNon-HTTP Errors\n~~~~~~~~~~~~~~~\n\nIf a URL could not be reached, ``resolve_target`` will output the error\ncode (if applicable), the error message, and the requested URL. If\nthere's no relevant error code, the error code will be set to -1.\n\nExamples\n^^^^^^^^\n\n::\n\n    > resolve_target invalid_url\n    -1\n    unknown url type: invalid_url\n    invalid_url\n\n``> resolve_target http://www.nonexistentlocation.com -2 Name or service not known http://www.nonexistentlocation.com``", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/avitebskiy/resolve_target/archive/1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/avitebskiy/resolve_target", "keywords": "http,www,developer,redirect,web,hostname", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "resolve-target", "package_url": "https://pypi.org/project/resolve-target/", "platform": "", "project_url": "https://pypi.org/project/resolve-target/", "project_urls": {"Download": "https://github.com/avitebskiy/resolve_target/archive/1.0.0.tar.gz", "Homepage": "https://github.com/avitebskiy/resolve_target"}, "release_url": "https://pypi.org/project/resolve-target/1.0.0.post1/", "requires_dist": null, "requires_python": "", "summary": "Contacts URL(s) and resolves the redirection target(s).", "version": "1.0.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Contacts URL(s) and resolves the redirection target(s).</p>\n<div id=\"summary\">\n<h2>Summary</h2>\n<p>This utility takes a list of URLs from either command line arguments or\na file. It sends an HTTP GET request to each URL, follows any redirect\nresponses, and outputs the actual target URL. The output includes the\nresponse code, the status message, and the target URL.</p>\n<p>If a URL is invalid, the response code and response status is replaced\nwith an error code (if applicable) and the error message. The input URL\nwill be echoed in the output in this case.</p>\n</div>\n<div id=\"command-line-usage\">\n<h2>Command Line Usage</h2>\n<p><tt>resolve_target <span class=\"pre\">[-h]</span> <span class=\"pre\">[-e]</span> <span class=\"pre\">[-f</span> <span class=\"pre\">{lines,csv,json,pretty-json}]</span> [url [url <span class=\"pre\">...]]</span></tt></p>\n<div id=\"positional-arguments\">\n<h3>Positional Arguments</h3>\n<ul>\n<li><tt>url</tt> - The URL(s) to resolve. Multiple URLs can be listed.</li>\n</ul>\n</div>\n<div id=\"optional-arguments\">\n<h3>Optional Arguments</h3>\n<ul>\n<li><tt><span class=\"pre\">-h</span></tt>, <tt><span class=\"pre\">--help</span></tt> - Shows the help message and exits.</li>\n<li><tt><span class=\"pre\">-e</span></tt>, <tt><span class=\"pre\">--examples</span></tt> - Prints additional usage examples.</li>\n<li><tt><span class=\"pre\">-f</span></tt>, <tt><span class=\"pre\">--format</span></tt> - Sets the output format. The valid values are\n<tt>lines</tt>, <tt>csv</tt>, <tt>json</tt>, <tt><span class=\"pre\">pretty-json</span></tt>. The default value is\n<tt>lines</tt>.</li>\n</ul>\n</div>\n<div id=\"format-options\">\n<h3>Format Options</h3>\n<p>The utility can format its output in several formats. The formats\ninclude CSV, JSON, and simply printing each item on its own line, with\nrecords separated by an extra blank line.</p>\n<div id=\"lines\">\n<h4>lines</h4>\n<p>The <tt>lines</tt> option prints the code, message, and URL each on its own\nline. A blank line separates each group of inputs.</p>\n<div id=\"example\">\n<h5>Example</h5>\n<pre>&gt; resolve_target --format=lines http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n200\nOK\nhttp://httpbin.org/\n\n403\nForbidden\nhttps://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\n</pre>\n</div>\n</div>\n<div id=\"csv\">\n<h4>csv</h4>\n<p>The <tt>csv</tt> option prints the code, message, and url in CSV format, one\nline per URL.</p>\n<div id=\"id1\">\n<h5>Example</h5>\n<pre>&gt; resolve_target --format=csv http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n200,\"OK\",\"http://httpbin.org/\"\n403,\"Forbidden\",\"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\"\n</pre>\n</div>\n</div>\n<div id=\"json\">\n<h4>json</h4>\n<p>The <tt>json</tt> option prints the code, message, and URL in JSON format\nwithout formatting.</p>\n<div id=\"id2\">\n<h5>Example</h5>\n<pre>&gt; resolve_target --format=json http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n[{\"url\": \"http://httpbin.org/\", \"message\": \"OK\", \"code\": 200}, {\"url\": \"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\", \"message\": \"Forbidden\", \"code\": 403}]\n</pre>\n</div>\n</div>\n<div id=\"pretty-json\">\n<h4>pretty-json</h4>\n<pre>&gt; resolve_target --format=pretty-json http://bit.ly/1IvcuW5 https://bit.ly/2x5rRbk\n[\n    {\n        \"code\": 200,\n        \"message\": \"OK\",\n        \"url\": \"http://httpbin.org/\"\n    },\n    {\n        \"code\": 403,\n        \"message\": \"Forbidden\",\n        \"url\": \"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\"\n    }\n]\n</pre>\n</div>\n</div>\n<div id=\"reading-urls-from-a-file\">\n<h3>Reading URLs From a File</h3>\n<p>If a text file is redirected into the <tt>resolve_target</tt> utility,\n<tt>resolve_target</tt> will read the URLs from that file. The file should\nhave the URLs listed one per line.</p>\n<div id=\"id3\">\n<h4>Example</h4>\n<p>Contents of <strong>urls.txt</strong>:</p>\n<pre>http://bit.ly/1IvcuW5\nhttps://bit.ly/2x5rRbk\n</pre>\n<p>Usage:</p>\n<pre>&gt; resolve_target --format=pretty-json &lt; urls.txt\n[\n    {\n        \"code\": 200,\n        \"message\": \"OK\",\n        \"url\": \"http://httpbin.org/\"\n    },\n    {\n        \"code\": 403,\n        \"message\": \"Forbidden\",\n        \"url\": \"https://www.google.com/search?q=what+is+the+answer+to+life+the+universe+and+everything\"\n    }\n]\n</pre>\n</div>\n</div>\n<div id=\"non-http-errors\">\n<h3>Non-HTTP Errors</h3>\n<p>If a URL could not be reached, <tt>resolve_target</tt> will output the error\ncode (if applicable), the error message, and the requested URL. If\nthere\u2019s no relevant error code, the error code will be set to -1.</p>\n<div id=\"examples\">\n<h4>Examples</h4>\n<pre>&gt; resolve_target invalid_url\n-1\nunknown url type: invalid_url\ninvalid_url\n</pre>\n<p><tt>&gt; resolve_target <span class=\"pre\">http://www.nonexistentlocation.com</span> <span class=\"pre\">-2</span> Name or service not known <span class=\"pre\">http://www.nonexistentlocation.com</span></tt></p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6594384, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "accb42ae9ca5cdfb6fef53f0151f56b4", "sha256": "2f93d925e847ef471580c55957c2e21be11088a7421fb35de8a49fe264695702"}, "downloads": -1, "filename": "resolve_target-1.0.tar.gz", "has_sig": false, "md5_digest": "accb42ae9ca5cdfb6fef53f0151f56b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5507, "upload_time": "2020-02-08T16:12:28", "upload_time_iso_8601": "2020-02-08T16:12:28.163900Z", "url": "https://files.pythonhosted.org/packages/a8/bc/e3f1862fafc3bdc708f1220eb50f22a3435b823da9e6220f6369ea6409f7/resolve_target-1.0.tar.gz", "yanked": false}], "1.0.0.post1": [{"comment_text": "", "digests": {"md5": "7afe86d804cc74498f99c69a41e83c8f", "sha256": "319b9cf0e8bae2ad182860ad1c5ec7e4b017728c84abc75182d6d671caa76fea"}, "downloads": -1, "filename": "resolve_target-1.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "7afe86d804cc74498f99c69a41e83c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5412, "upload_time": "2020-02-08T16:26:10", "upload_time_iso_8601": "2020-02-08T16:26:10.933559Z", "url": "https://files.pythonhosted.org/packages/2f/5c/d7f19bd7f00a63d2a9bab520d326f52ea12e3b8b387110e4e51f5be829aa/resolve_target-1.0.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7afe86d804cc74498f99c69a41e83c8f", "sha256": "319b9cf0e8bae2ad182860ad1c5ec7e4b017728c84abc75182d6d671caa76fea"}, "downloads": -1, "filename": "resolve_target-1.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "7afe86d804cc74498f99c69a41e83c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5412, "upload_time": "2020-02-08T16:26:10", "upload_time_iso_8601": "2020-02-08T16:26:10.933559Z", "url": "https://files.pythonhosted.org/packages/2f/5c/d7f19bd7f00a63d2a9bab520d326f52ea12e3b8b387110e4e51f5be829aa/resolve_target-1.0.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:49 2020"}