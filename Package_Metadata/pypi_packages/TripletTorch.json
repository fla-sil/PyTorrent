{"info": {"author": "yliess", "author_email": "hatiyliess86@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\nTriplet Loss Utility for Pytorch Library.\n\n# TripletTorch\n\nTripletTorch is a small pytorch utility for triplet loss projects. It provides\nsimple way to create custom triplet datasets and common triplet mining loss\ntechniques.\n\n## Install\n\nInstall the module using the pip utility ( may require to run as sudo ).\n\n```bash\npip3 install triplettorch\n```\n\n## Usage\n\n### Triplet Dataset\n\n```python\nfrom triplettorch import TripletDataset\n\n# Create a triplet dataset given:\n#   * labels  : array of label ( class ) for each sample of the dataset\n#   * data_fn : method to access data for a given index in the dataset\n#   * size    : number of samples in the dataset\n#   * n_sample: number of sample per draw ( to increase probability to\n#               contain valid triplets in a batch )\n# Do not forget to concatenate batch dimension and sample dimension\n# when used with a DataLoader as TripletDataset[ idx ] returns a\n# ( batch_size, n_sample, ... ) dimension tensor for labels and data\ndataset = TripletDataset( labels, data_fn, size, n_sample )\n```\n\n### Triplet Mining\n\n```python\nfrom triplettorch import AllTripletMiner, HardNegativeTripletMiner\n\n# Define the triplet mining loss given:\n#   * margin: the margin float value from the triplet loss definition\nminer          = AllTripletMiner( .5 ).cuda( )\nminer          = HardNegativeTripletMiner( .5 ).cuda( )\n\n# Use the loss in training given:\n#   * labels    : array of label ( class ) for each sample of the batch\n#   * embeddings: output of the neural network for each sample of the batch\n# Returns two values:\n#   * loss    : triplet loss value\n#   * frac_pos: fraction of positive triplets\n#               None ( None HardNegativeTripletMiner )\nloss, frac_pos = miner( labels, embeddings )\n```\n\n## Example\n\nThe repository provides an example application with the MNIST dataset.\n\n![ MNIST ]( examples/MNIST_AllTripletMiner.png )\n\n\n## References\n* [FaceNet: A Unified Embedding for Face Recognition and Clustering]\n* [Triplet Loss and Online Triplet Mining in TensorFlow]\n\n[FaceNet: A Unified Embedding for Face Recognition and Clustering]: https://arxiv.org/pdf/1503.03832.pdf\n[Triplet Loss and Online Triplet Mining in TensorFlow]:https://omoindrot.github.io/triplet-loss\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TowardHumanizedInteraction/TripletTorch", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "TripletTorch", "package_url": "https://pypi.org/project/TripletTorch/", "platform": "", "project_url": "https://pypi.org/project/TripletTorch/", "project_urls": {"Homepage": "https://github.com/TowardHumanizedInteraction/TripletTorch"}, "release_url": "https://pypi.org/project/TripletTorch/0.1.3/", "requires_dist": ["numpy (==1.17.2)", "torch (==1.2.0)", "torchvision (==0.4.0)", "tqdm (==4.36.1)", "matplotlib (==3.1.1)"], "requires_python": ">=3.4, <4", "summary": "Triplet Loss Utils for Pytorch Library.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Triplet Loss Utility for Pytorch Library.</p>\n<h1>TripletTorch</h1>\n<p>TripletTorch is a small pytorch utility for triplet loss projects. It provides\nsimple way to create custom triplet datasets and common triplet mining loss\ntechniques.</p>\n<h2>Install</h2>\n<p>Install the module using the pip utility ( may require to run as sudo ).</p>\n<pre>pip3 install triplettorch\n</pre>\n<h2>Usage</h2>\n<h3>Triplet Dataset</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">triplettorch</span> <span class=\"kn\">import</span> <span class=\"n\">TripletDataset</span>\n\n<span class=\"c1\"># Create a triplet dataset given:</span>\n<span class=\"c1\">#   * labels  : array of label ( class ) for each sample of the dataset</span>\n<span class=\"c1\">#   * data_fn : method to access data for a given index in the dataset</span>\n<span class=\"c1\">#   * size    : number of samples in the dataset</span>\n<span class=\"c1\">#   * n_sample: number of sample per draw ( to increase probability to</span>\n<span class=\"c1\">#               contain valid triplets in a batch )</span>\n<span class=\"c1\"># Do not forget to concatenate batch dimension and sample dimension</span>\n<span class=\"c1\"># when used with a DataLoader as TripletDataset[ idx ] returns a</span>\n<span class=\"c1\"># ( batch_size, n_sample, ... ) dimension tensor for labels and data</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">TripletDataset</span><span class=\"p\">(</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">data_fn</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">n_sample</span> <span class=\"p\">)</span>\n</pre>\n<h3>Triplet Mining</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">triplettorch</span> <span class=\"kn\">import</span> <span class=\"n\">AllTripletMiner</span><span class=\"p\">,</span> <span class=\"n\">HardNegativeTripletMiner</span>\n\n<span class=\"c1\"># Define the triplet mining loss given:</span>\n<span class=\"c1\">#   * margin: the margin float value from the triplet loss definition</span>\n<span class=\"n\">miner</span>          <span class=\"o\">=</span> <span class=\"n\">AllTripletMiner</span><span class=\"p\">(</span> <span class=\"o\">.</span><span class=\"mi\">5</span> <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">(</span> <span class=\"p\">)</span>\n<span class=\"n\">miner</span>          <span class=\"o\">=</span> <span class=\"n\">HardNegativeTripletMiner</span><span class=\"p\">(</span> <span class=\"o\">.</span><span class=\"mi\">5</span> <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">(</span> <span class=\"p\">)</span>\n\n<span class=\"c1\"># Use the loss in training given:</span>\n<span class=\"c1\">#   * labels    : array of label ( class ) for each sample of the batch</span>\n<span class=\"c1\">#   * embeddings: output of the neural network for each sample of the batch</span>\n<span class=\"c1\"># Returns two values:</span>\n<span class=\"c1\">#   * loss    : triplet loss value</span>\n<span class=\"c1\">#   * frac_pos: fraction of positive triplets</span>\n<span class=\"c1\">#               None ( None HardNegativeTripletMiner )</span>\n<span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"n\">frac_pos</span> <span class=\"o\">=</span> <span class=\"n\">miner</span><span class=\"p\">(</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">embeddings</span> <span class=\"p\">)</span>\n</pre>\n<h2>Example</h2>\n<p>The repository provides an example application with the MNIST dataset.</p>\n<p><img alt=\" MNIST \" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffa809d0e01157dcbc834620c98fb21203c1d980/6578616d706c65732f4d4e4953545f416c6c547269706c65744d696e65722e706e67\"></p>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://arxiv.org/pdf/1503.03832.pdf\" rel=\"nofollow\">FaceNet: A Unified Embedding for Face Recognition and Clustering</a></li>\n<li><a href=\"https://omoindrot.github.io/triplet-loss\" rel=\"nofollow\">Triplet Loss and Online Triplet Mining in TensorFlow</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6287513, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0cbb69efa3bc9631f1b532b25f149a61", "sha256": "1e917cc54e6d097c72e523dd6fd6a88fa6f92c6bd8e724895ca49063346a11c0"}, "downloads": -1, "filename": "TripletTorch-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0cbb69efa3bc9631f1b532b25f149a61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 5228, "upload_time": "2019-10-06T21:49:31", "upload_time_iso_8601": "2019-10-06T21:49:31.460547Z", "url": "https://files.pythonhosted.org/packages/de/c6/742aeb3951abdaf6e192341e3eb8dce168369befa196106f8ba3b093a434/TripletTorch-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe73745d2b3ab95d455f29efb922f194", "sha256": "e2334d8428f7f06d133efd5cb01756033e77aad8774d4570c4f3d95de2564247"}, "downloads": -1, "filename": "TripletTorch-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe73745d2b3ab95d455f29efb922f194", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 4484, "upload_time": "2019-10-06T21:49:34", "upload_time_iso_8601": "2019-10-06T21:49:34.038533Z", "url": "https://files.pythonhosted.org/packages/06/72/665194e3fd42331f040d9e26a70562dcd48ff232bdb507626e4eadea5f94/TripletTorch-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7651e31a897763b3632238ca47a73188", "sha256": "4dab7890c209d327b2ca84ea61ffeb0c919c796e9248db0ec6041bd04aa4b529"}, "downloads": -1, "filename": "TripletTorch-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7651e31a897763b3632238ca47a73188", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 5259, "upload_time": "2019-10-06T21:52:25", "upload_time_iso_8601": "2019-10-06T21:52:25.872779Z", "url": "https://files.pythonhosted.org/packages/c2/31/673bc2686b6a61dd16642c7eedc59e493d899130e0e5d9ce6875754175dd/TripletTorch-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e4f6f5ef3eae74b355faef940b09641", "sha256": "530a0d6303afab8c42442761bf60e03b1f3ccb1d896087b93902ce2509a5c19a"}, "downloads": -1, "filename": "TripletTorch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3e4f6f5ef3eae74b355faef940b09641", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 4486, "upload_time": "2019-10-06T21:52:27", "upload_time_iso_8601": "2019-10-06T21:52:27.477745Z", "url": "https://files.pythonhosted.org/packages/d6/5c/5987b4989fda6759ad00e825206a0e50dbc01e3840064fe313de6e4d915f/TripletTorch-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5424f3076bc867253b923c65e1bb110b", "sha256": "1825094af01e067d7afc2eed46fa58e3ceb51ff9f32febe31486152be9d8e991"}, "downloads": -1, "filename": "TripletTorch-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5424f3076bc867253b923c65e1bb110b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 6130, "upload_time": "2019-10-06T22:53:41", "upload_time_iso_8601": "2019-10-06T22:53:41.151004Z", "url": "https://files.pythonhosted.org/packages/07/d3/1c9f8221e173ed491c604472876e533beccb62ca2e20fd841e8c7d78b203/TripletTorch-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61357944c38f8321cc52a92fce184941", "sha256": "f8a73c3eae348e3a56c2fafe3d7b20d962392b77604ee6ba3a9691eff87d7fd6"}, "downloads": -1, "filename": "TripletTorch-0.1.2.tar.gz", "has_sig": false, "md5_digest": "61357944c38f8321cc52a92fce184941", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 5502, "upload_time": "2019-10-06T22:53:42", "upload_time_iso_8601": "2019-10-06T22:53:42.841321Z", "url": "https://files.pythonhosted.org/packages/09/42/53d62e2c287baf452e8d3f05814dfaaf745e76e20e13582cde77ccc08bd5/TripletTorch-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ad8975146d20ab56674f7cc04ee754a9", "sha256": "d919ac977dfaa58a63fd108adacaa7e34b3e895be2a855fbc2447a8fb983f0a7"}, "downloads": -1, "filename": "TripletTorch-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8975146d20ab56674f7cc04ee754a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 6131, "upload_time": "2019-12-12T16:31:28", "upload_time_iso_8601": "2019-12-12T16:31:28.106370Z", "url": "https://files.pythonhosted.org/packages/94/bf/ff93cde75e4a6d07c52a7ffb49d8cb8d65926ff65ec149a63135be5a1fdf/TripletTorch-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77c20c423dec7c1a2bebcb5f61c4be45", "sha256": "4330ff2348f25ab185175d5b2b1bf27fe86b4ee0868e6ae416f0965b32ac248d"}, "downloads": -1, "filename": "TripletTorch-0.1.3.tar.gz", "has_sig": false, "md5_digest": "77c20c423dec7c1a2bebcb5f61c4be45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 5496, "upload_time": "2019-12-12T16:31:29", "upload_time_iso_8601": "2019-12-12T16:31:29.619112Z", "url": "https://files.pythonhosted.org/packages/e0/a1/69d4667e0d5d2b5939447bbf4944d3e586add97ee67042f357b55d01edff/TripletTorch-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad8975146d20ab56674f7cc04ee754a9", "sha256": "d919ac977dfaa58a63fd108adacaa7e34b3e895be2a855fbc2447a8fb983f0a7"}, "downloads": -1, "filename": "TripletTorch-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8975146d20ab56674f7cc04ee754a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4, <4", "size": 6131, "upload_time": "2019-12-12T16:31:28", "upload_time_iso_8601": "2019-12-12T16:31:28.106370Z", "url": "https://files.pythonhosted.org/packages/94/bf/ff93cde75e4a6d07c52a7ffb49d8cb8d65926ff65ec149a63135be5a1fdf/TripletTorch-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77c20c423dec7c1a2bebcb5f61c4be45", "sha256": "4330ff2348f25ab185175d5b2b1bf27fe86b4ee0868e6ae416f0965b32ac248d"}, "downloads": -1, "filename": "TripletTorch-0.1.3.tar.gz", "has_sig": false, "md5_digest": "77c20c423dec7c1a2bebcb5f61c4be45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4, <4", "size": 5496, "upload_time": "2019-12-12T16:31:29", "upload_time_iso_8601": "2019-12-12T16:31:29.619112Z", "url": "https://files.pythonhosted.org/packages/e0/a1/69d4667e0d5d2b5939447bbf4944d3e586add97ee67042f357b55d01edff/TripletTorch-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:56 2020"}