{"info": {"author": "Matthew Phillips", "author_email": "matt@mattphillips.info", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Site Management :: Link Checking"], "description": "pyfav\n-----\n\npyfav is a simple Python library that helps you get a `favicon`_ for a\nsupplied URL.\n\nFavicons can be annoying to track down because they\u2019re commonly located\nin a handful of different places. pyfav removes the annoyance by\nhandling the details for you \u2013 you supply a URL and pyfav will give you\nthe favicon.\n\nExchange a URL for a favicon on disk\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe simplest way to get started is to use the download\\_favicon\nfunction,\n\n::\n\n    from pyfav import download_favicon\n\n    favicon_saved_at = download_favicon('https://www.python.org/')\n\nYou should now see the favicon in your /tmp directory. If you want to\ncontrol where the favicon gets written to disk,\n\n::\n\n    from pyfav import download_favicon\n\n    mkdir /tmp/favicon-downloads\n\n    favicon_saved_at = download_favicon('https://www.python.org/', \\\n        file_prefix='python.org-', target_dir='/tmp/favicon-downloads')\n\nGet the location\n~~~~~~~~~~~~~~~~\n\nIf you\u2019d prefer to handle the writing piece, use the get\\_favicon\\_url\nfunction,\n\n::\n\n    from pyfav import download_favicon\n\n    favicon_url = get_favicon_url('https://www.python.org/')\n\nInstall\n~~~~~~~\n\nThe easiest to get pyfav is through PIP\n\n::\n\n    pip install pyfav\n\nLicense\n~~~~~~~\n\npyfav is open source and freely avaiable under the `MIT License`_\n\n.. _favicon: http://en.wikipedia.org/wiki/Favicon\n.. _MIT License: http://opensource.org/licenses/MIT", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/phillipsm/pyfav", "keywords": "favicon,favicons", "license": "http://opensource.org/licenses/MIT", "maintainer": null, "maintainer_email": null, "name": "pyfav", "package_url": "https://pypi.org/project/pyfav/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyfav/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/phillipsm/pyfav"}, "release_url": "https://pypi.org/project/pyfav/0.1/", "requires_dist": null, "requires_python": null, "summary": "You supply the URL, pyfav will supply the favicon", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>pyfav is a simple Python library that helps you get a <a href=\"http://en.wikipedia.org/wiki/Favicon\" rel=\"nofollow\">favicon</a> for a\nsupplied URL.</p>\n<p>Favicons can be annoying to track down because they\u2019re commonly located\nin a handful of different places. pyfav removes the annoyance by\nhandling the details for you \u2013 you supply a URL and pyfav will give you\nthe favicon.</p>\n<div id=\"exchange-a-url-for-a-favicon-on-disk\">\n<h2>Exchange a URL for a favicon on disk</h2>\n<p>The simplest way to get started is to use the download_favicon\nfunction,</p>\n<pre>from pyfav import download_favicon\n\nfavicon_saved_at = download_favicon('https://www.python.org/')\n</pre>\n<p>You should now see the favicon in your /tmp directory. If you want to\ncontrol where the favicon gets written to disk,</p>\n<pre>from pyfav import download_favicon\n\nmkdir /tmp/favicon-downloads\n\nfavicon_saved_at = download_favicon('https://www.python.org/', \\\n    file_prefix='python.org-', target_dir='/tmp/favicon-downloads')\n</pre>\n</div>\n<div id=\"get-the-location\">\n<h2>Get the location</h2>\n<p>If you\u2019d prefer to handle the writing piece, use the get_favicon_url\nfunction,</p>\n<pre>from pyfav import download_favicon\n\nfavicon_url = get_favicon_url('https://www.python.org/')\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>The easiest to get pyfav is through PIP</p>\n<pre>pip install pyfav\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>pyfav is open source and freely avaiable under the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a></p>\n</div>\n\n          </div>"}, "last_serial": 1052899, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e330b111d64e820c019d406128ab7695", "sha256": "223ffbff4d147e7dd8241e8201d73bce41be5a5d5d5de0f7967500528814c17b"}, "downloads": -1, "filename": "pyfav-0.1.tar.gz", "has_sig": false, "md5_digest": "e330b111d64e820c019d406128ab7695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4432, "upload_time": "2014-04-06T18:02:01", "upload_time_iso_8601": "2014-04-06T18:02:01.739157Z", "url": "https://files.pythonhosted.org/packages/fe/a2/a0281199dedf1912de75a9a631b5855ae6e86ad6f67030fad3c9e4e29804/pyfav-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e330b111d64e820c019d406128ab7695", "sha256": "223ffbff4d147e7dd8241e8201d73bce41be5a5d5d5de0f7967500528814c17b"}, "downloads": -1, "filename": "pyfav-0.1.tar.gz", "has_sig": false, "md5_digest": "e330b111d64e820c019d406128ab7695", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4432, "upload_time": "2014-04-06T18:02:01", "upload_time_iso_8601": "2014-04-06T18:02:01.739157Z", "url": "https://files.pythonhosted.org/packages/fe/a2/a0281199dedf1912de75a9a631b5855ae6e86ad6f67030fad3c9e4e29804/pyfav-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:57 2020"}