{"info": {"author": "Tao Dong", "author_email": "taojdcn@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# paramsuits\nA Python tool to manage parameters in AWS SSM parameter store\n\n## Dependencies\n1. AWS client configured\n2. boto3 version 1.4.6 or later installed\n\n## Installation\n```\npip install paramsuits\n```\n\n## Usage\n```\nusage: paramsuits [-h] [-r REGION] [-p PATH] [-P PROFILE | -A ARN] {keys,get,getAll,put} ...\n\nTool to manage parameters in AWS SSM parameter store\n\nget\n    usage: paramsuits.py get [-h] param\n\n    Get parameter value of a given name.If more than one paramters found, only the first matched value will be retured\n\n    positional arguments:\n        param       The name of the paramter to get\n\ngetAll\n    usage: paramsuits.py getAll [-h] [-decrypt] [-recursive] [-showPath]\n\n    List name and value for all parameters of a given pathEach paramter will display one line as {{name}} = {{value}}\n\n    optional arguments:\n        -decrypt, --decrypt         Decrypt value for SecureString type of parameter\n        -recursive, --recursive     Traverse through all child paths recursively\n        -showPath, --show-path      Display parameter name with path\n\nkeys\n    usage: paramsuits.py keys [-h] [-recursive] [-showPath] [-prefix PREFIX]\n\n    List all keys in the store which match given condtions\n\n    optional arguments:\n        -recursive, --recursive     Traverse through all child paths recursively\n        -showPath, --show-path      Display parameter name with path\n        -prefix PREFIX, --prefix PREFIX     Filter parameter name with given prefix, parameter path is not considered as prefix\n\nput\n    usage: paramsuits.py put [-h] [-encrypt] [-advancedTier] [-isList] [-keyId KEY_ID] [-skipTagging | -tags TAGS param_name param_value [param_value ...]\n\n    Put a parameter into parameter store. Policy is not supported in current version\n\n    positional arguments:\n        param_name            Parameter name to put\n        param_value           Parameter value to put. If the value is a list, devide each value by space\n\n    optional arguments:\n        -encrypt, --encrypt   If the parameter type is SecureString. Ignored for list type of values\n        -advancedTier, --advanced-tier      Mark this parameter is Advanced tier parameter\n        -isList, --is-list                  Parameter type is StringList. Only needed for single value list\n        -keyId KEY_ID, --key-id KEY_ID      Key Id to encrypt parameter. Used when -encrypt option is used\n        -skipTagging, --skip-tagging        Not add any tags to this parameter\n        -tags TAGS, --tags TAGS             Tags for the parameter. Applies default tags of name and user if the neither values are given through this option nor --skip-tagging is set\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REGION, --region REGION\n                        the AWS region in which the parameter store resides.\n                        If a region is not specified, the tool will use env\n                        variable AWS_DEFAULT_REGION if it's available.\n                        Otherwise it will try to use the value in\n                        `~/.aws/config`.As a last resort, it will use us-\n                        east-1\n  -p PATH, --path PATH  Parameter path in parameter store. Use root path if no\n                        value assigned\n  -P PROFILE, --profile PROFILE\n                        Boto config profile to use when connection to AWS\n  -A ARN, --arn ARN     AWS IAM ARN for AssumeRole\n```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/taodong/paramsuits", "keywords": "", "license": "Apache2", "maintainer": "", "maintainer_email": "", "name": "paramsuits", "package_url": "https://pypi.org/project/paramsuits/", "platform": "", "project_url": "https://pypi.org/project/paramsuits/", "project_urls": {"Homepage": "https://github.com/taodong/paramsuits"}, "release_url": "https://pypi.org/project/paramsuits/0.0.1/", "requires_dist": ["boto3 (>=1.4.6)"], "requires_python": "", "summary": "A tool to manage parameters in AWS SSM parameter store", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>paramsuits</h1>\n<p>A Python tool to manage parameters in AWS SSM parameter store</p>\n<h2>Dependencies</h2>\n<ol>\n<li>AWS client configured</li>\n<li>boto3 version 1.4.6 or later installed</li>\n</ol>\n<h2>Installation</h2>\n<pre><code>pip install paramsuits\n</code></pre>\n<h2>Usage</h2>\n<pre><code>usage: paramsuits [-h] [-r REGION] [-p PATH] [-P PROFILE | -A ARN] {keys,get,getAll,put} ...\n\nTool to manage parameters in AWS SSM parameter store\n\nget\n    usage: paramsuits.py get [-h] param\n\n    Get parameter value of a given name.If more than one paramters found, only the first matched value will be retured\n\n    positional arguments:\n        param       The name of the paramter to get\n\ngetAll\n    usage: paramsuits.py getAll [-h] [-decrypt] [-recursive] [-showPath]\n\n    List name and value for all parameters of a given pathEach paramter will display one line as {{name}} = {{value}}\n\n    optional arguments:\n        -decrypt, --decrypt         Decrypt value for SecureString type of parameter\n        -recursive, --recursive     Traverse through all child paths recursively\n        -showPath, --show-path      Display parameter name with path\n\nkeys\n    usage: paramsuits.py keys [-h] [-recursive] [-showPath] [-prefix PREFIX]\n\n    List all keys in the store which match given condtions\n\n    optional arguments:\n        -recursive, --recursive     Traverse through all child paths recursively\n        -showPath, --show-path      Display parameter name with path\n        -prefix PREFIX, --prefix PREFIX     Filter parameter name with given prefix, parameter path is not considered as prefix\n\nput\n    usage: paramsuits.py put [-h] [-encrypt] [-advancedTier] [-isList] [-keyId KEY_ID] [-skipTagging | -tags TAGS param_name param_value [param_value ...]\n\n    Put a parameter into parameter store. Policy is not supported in current version\n\n    positional arguments:\n        param_name            Parameter name to put\n        param_value           Parameter value to put. If the value is a list, devide each value by space\n\n    optional arguments:\n        -encrypt, --encrypt   If the parameter type is SecureString. Ignored for list type of values\n        -advancedTier, --advanced-tier      Mark this parameter is Advanced tier parameter\n        -isList, --is-list                  Parameter type is StringList. Only needed for single value list\n        -keyId KEY_ID, --key-id KEY_ID      Key Id to encrypt parameter. Used when -encrypt option is used\n        -skipTagging, --skip-tagging        Not add any tags to this parameter\n        -tags TAGS, --tags TAGS             Tags for the parameter. Applies default tags of name and user if the neither values are given through this option nor --skip-tagging is set\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REGION, --region REGION\n                        the AWS region in which the parameter store resides.\n                        If a region is not specified, the tool will use env\n                        variable AWS_DEFAULT_REGION if it's available.\n                        Otherwise it will try to use the value in\n                        `~/.aws/config`.As a last resort, it will use us-\n                        east-1\n  -p PATH, --path PATH  Parameter path in parameter store. Use root path if no\n                        value assigned\n  -P PROFILE, --profile PROFILE\n                        Boto config profile to use when connection to AWS\n  -A ARN, --arn ARN     AWS IAM ARN for AssumeRole\n</code></pre>\n\n          </div>"}, "last_serial": 5562091, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "61c648464c4043791853ba059ad294dd", "sha256": "a296d490e2453f5c64444e938026e226a405e57d17ee180bc17f13d3bf0c95c9"}, "downloads": -1, "filename": "paramsuits-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61c648464c4043791853ba059ad294dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11566, "upload_time": "2019-07-21T02:52:55", "upload_time_iso_8601": "2019-07-21T02:52:55.009839Z", "url": "https://files.pythonhosted.org/packages/01/71/dcc2c18932f8ddcd0dd484237d9211750aa88aec54c2b3cf905e84c2a79a/paramsuits-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8166015d92433a4b82578ff6008631ec", "sha256": "dfe86e25101ee31165f553c5285e2893fcf0cd96426f21b3a6770b86a292a523"}, "downloads": -1, "filename": "paramsuits-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8166015d92433a4b82578ff6008631ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6643, "upload_time": "2019-07-21T02:52:57", "upload_time_iso_8601": "2019-07-21T02:52:57.218780Z", "url": "https://files.pythonhosted.org/packages/88/76/1f3b99bbbcd841728e55ffe8ecfa125e652ab1aaa34a0f1677473d6fd8f0/paramsuits-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61c648464c4043791853ba059ad294dd", "sha256": "a296d490e2453f5c64444e938026e226a405e57d17ee180bc17f13d3bf0c95c9"}, "downloads": -1, "filename": "paramsuits-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61c648464c4043791853ba059ad294dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11566, "upload_time": "2019-07-21T02:52:55", "upload_time_iso_8601": "2019-07-21T02:52:55.009839Z", "url": "https://files.pythonhosted.org/packages/01/71/dcc2c18932f8ddcd0dd484237d9211750aa88aec54c2b3cf905e84c2a79a/paramsuits-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8166015d92433a4b82578ff6008631ec", "sha256": "dfe86e25101ee31165f553c5285e2893fcf0cd96426f21b3a6770b86a292a523"}, "downloads": -1, "filename": "paramsuits-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8166015d92433a4b82578ff6008631ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6643, "upload_time": "2019-07-21T02:52:57", "upload_time_iso_8601": "2019-07-21T02:52:57.218780Z", "url": "https://files.pythonhosted.org/packages/88/76/1f3b99bbbcd841728e55ffe8ecfa125e652ab1aaa34a0f1677473d6fd8f0/paramsuits-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:31 2020"}