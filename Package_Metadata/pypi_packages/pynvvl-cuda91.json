{"info": {"author": "Shunta Saito", "author_email": "shunta.saito@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "PyNVVL\n======\n[![pypi-pynvvl-cuda80](https://img.shields.io/pypi/v/pynvvl-cuda80.svg)](https://pypi.org/project/pynvvl-cuda80)\n[![pypi-pynvvl-cuda90](https://img.shields.io/pypi/v/pynvvl-cuda90.svg)](https://pypi.org/project/pynvvl-cuda90)\n[![pypi-pynvvl-cuda91](https://img.shields.io/pypi/v/pynvvl-cuda91.svg)](https://pypi.org/project/pynvvl-cuda91)\n[![pypi-pynvvl-cuda92](https://img.shields.io/pypi/v/pynvvl-cuda92.svg)](https://pypi.org/project/pynvvl-cuda92)\n[![GitHub license](https://img.shields.io/github/license/mitmul/pynvvl.svg)](https://github.com/mitmul/pynvvl)\n\nPyNVVL is a thin wrapper of [NVIDIA Video Loader (NVVL)](https://github.com/NVIDIA/nvvl). This package enables you to load videos directoly to GPU memory and access them as [CuPy](https://github.com/cupy/cupy) ndarrays with zero copy. The pre-built binaries of PyNVVL include NVVL itself, so you do not need to install NVVL.\n\n## Requirements\n\n- CUDA 8.0, 9.0, 9.1, or 9.2\n- Python 2.7.6+, 3.4.7+, 3.5.1+, or 3.6.0+\n- [CuPy](https://github.com/cupy/cupy) v4.5.0\n\n## Tested Environment\n\n- Ubuntu 16.04\n- Python 2.7.6+, 3.4.7+, 3.5.1+, and 3.6.0+\n- CUDA 8.0, 9.0, 9.1, and 9.2\n\n## Install the pre-built binary\n\nPlease choose a right package depending on your CUDA version.\n\n```bash\n# [For CUDA 8.0]\npip install pynvvl-cuda80\n\n# [For CUDA 9.0]\npip install pynvvl-cuda90\n\n# [For CUDA 9.1]\npip install pynvvl-cuda91\n\n# [For CUDA 9.2]\npip install pynvvl-cuda92\n```\n\n## Usage\n\n```python\nimport pynvvl\nimport matplotlib.pyplot as plt\n\n# Create NVVLVideoLoader object\nloader = pynvvl.NVVLVideoLoader(device_id=0, log_level='error')\n\n# Show the number of frames in the video\nn_frames = loader.frame_count('examples/sample.mp4')\nprint('Number of frames:', n_frames)\n\n# Load a video and return it as a CuPy array\nvideo = loader.read_sequence(\n    'examples/sample.mp4',\n    horiz_flip=True,\n    scale_height=512,\n    scale_width=512,\n    crop_y=60,\n    crop_height=385,\n    crop_width=512,\n    scale_method='Linear',\n    normalized=True\n)\n\nprint(video.shape)  # => (91, 3, 385, 512): (n_frames, channels, height, width)\nprint(video.dtype)  # => float32\n\n# Get the first frame as numpy array\nframe = video[0].get()\nframe = frame.transpose(1, 2, 0)\n\nplt.imshow(frame)\nplt.savefig('examples/sample.png')\n```\n\n![](https://github.com/mitmul/pynvvl/raw/master/examples/sample.png)\n\nThis video is `flickr-2-6-3-3-5-2-7-6-5626335276_4.mp4` from the Moments-In-Time dataset.\n\nNote that cropping is performed after scaling. In the above example, NVVL performs scaling up from 256 x 256 to 512 x 512 first, then cropping the region [60:60 + 385, 0:512]. See the following section to know more about the transformation options.\n\n## VideoLoader options\n\nPlease specify the GPU device id when you create a `NVVLVideoLoader` object.\nYou can also specify the logging level with a argument `log_level` for the constructor of `NVVLVideoLoader`.\n\n```\nWrapper of NVVL VideoLoader\n\n    Args:\n        device_id (int): Specify the device id used to load a video.\n        log_level (str): Logging level which should be either 'debug',\n            'info', 'warn', 'error', or 'none'.\n            Logs with levels >= log_level is shown. The default is 'warn'.\n```\n\n## Transformation Options\n\n`pynvvl.NVVLVideoLoader.read_sequence` can take some options to specify the color space, the value range, and what transformations you want to perform to the video.\n\n```\nLoads the video from disk and returns it as a CuPy ndarray.\n\n    Args:\n        filename (str): The path to the video.\n        frame (int): The initial frame number of the returned sequence.\n            Default is 0.\n        count (int): The number of frames of the returned sequence.\n            If it is None, whole frames of the video are loaded.\n        channels (int): The number of color channels of the video.\n            Default is 3.\n        scale_height (int): The height of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0 no scaling is performed. Default is 0.\n        scale_width (int): The width of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0, no scaling is performed. Default is 0.\n        crop_x (int): Location of the crop within the scaled frame.\n            Must be set such that crop_y + height <= original height.\n            Default is 0.\n        crop_y (int): Location of the crop within the scaled frame.\n            Must be set such that crop_x + width <= original height.\n            Default is 0.\n        crop_height (int): The height of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        crop_width (int): The width of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        scale_method (str): Scaling method. It should be either of\n            'Nearest' or 'Lienar'. Default is 'Linear'.\n        horiz_flip (bool): Whether horizontal flipping is performed or not.\n            Default is False.\n        normalized (bool): If it is True, the values of returned video is\n            normalized into [0, 1], otherwise the value range is [0, 255].\n            Default is False.\n        color_space (str): The color space of the values of returned video.\n            It should be either 'RGB' or 'YCbCr'. Default is 'RGB'.\n        chroma_up_method (str): How the chroma channels are upscaled from\n            yuv 4:2:0 to 4:4:4. It should be 'Linear' currently.\n        out (cupy.ndarray): Alternate output array where place the result.\n            It must have the same shape and the dtype as the expected\n            output, and its order must be C-contiguous.\n```\n\n## How to build\n\n### Build wheels using Docker: \n\nRequirements:\n\n- Docker\n- nvidia-docker (v1/v2)\n\n```\nbash docker/build_wheels.sh\n```\n\n### Setup development environment without Docker:\n\nThe `setup.py` script searches for necessary libraries.\n\nRequirements: the following libraries are available in `LIBRARY_PATH`.\n\n- libnvvl.so\n- libavformat.so.57\n- libavfilter.so.6\n- libavcodec.so.57\n- libavutil.so.55\n\nYou can build `libnvvl.so` in the `nvvl` repository. Follow the instructions\nof `nvvl` library. The `build` directory must be in `LIBRARY_PATH`.\n\nOther three libraries are available as packages in Ubuntu 16.04.\nThey are installed under `/usr/lib/x86_64-linux-gnu`, so they must be in `LIBRARY_PATH` as well.\n\n```\npython setup.py develop\npython setup.py bdist_wheel\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mitmul/pynvvl", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pynvvl-cuda91", "package_url": "https://pypi.org/project/pynvvl-cuda91/", "platform": "", "project_url": "https://pypi.org/project/pynvvl-cuda91/", "project_urls": {"Homepage": "https://github.com/mitmul/pynvvl"}, "release_url": "https://pypi.org/project/pynvvl-cuda91/0.0.3a2/", "requires_dist": ["cupy-cuda91 (>=4.5.0)"], "requires_python": "", "summary": "PyNVVL: A Python wrapper for NVIDIA Video Loader (NVVL) with CuPy", "version": "0.0.3a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyNVVL</h1>\n<p><a href=\"https://pypi.org/project/pynvvl-cuda80\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda80\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/417e6a942ee22ce2455e69edb2794e375c2a4552/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646138302e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda90\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda90\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5299cec07bd6e73c990b113554c93f5213c340be/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139302e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda91\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda91\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f57166277aa7eea1dff4f9b635589db27b36c90/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139312e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda92\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda92\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d0b9c57cc13a19c13e39cddba52a436a136e5bf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139322e737667\"></a>\n<a href=\"https://github.com/mitmul/pynvvl\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa4de23b1dd68d34e1bbd771562ad70603b87045/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d69746d756c2f70796e76766c2e737667\"></a></p>\n<p>PyNVVL is a thin wrapper of <a href=\"https://github.com/NVIDIA/nvvl\" rel=\"nofollow\">NVIDIA Video Loader (NVVL)</a>. This package enables you to load videos directoly to GPU memory and access them as <a href=\"https://github.com/cupy/cupy\" rel=\"nofollow\">CuPy</a> ndarrays with zero copy. The pre-built binaries of PyNVVL include NVVL itself, so you do not need to install NVVL.</p>\n<h2>Requirements</h2>\n<ul>\n<li>CUDA 8.0, 9.0, 9.1, or 9.2</li>\n<li>Python 2.7.6+, 3.4.7+, 3.5.1+, or 3.6.0+</li>\n<li><a href=\"https://github.com/cupy/cupy\" rel=\"nofollow\">CuPy</a> v4.5.0</li>\n</ul>\n<h2>Tested Environment</h2>\n<ul>\n<li>Ubuntu 16.04</li>\n<li>Python 2.7.6+, 3.4.7+, 3.5.1+, and 3.6.0+</li>\n<li>CUDA 8.0, 9.0, 9.1, and 9.2</li>\n</ul>\n<h2>Install the pre-built binary</h2>\n<p>Please choose a right package depending on your CUDA version.</p>\n<pre><span class=\"c1\"># [For CUDA 8.0]</span>\npip install pynvvl-cuda80\n\n<span class=\"c1\"># [For CUDA 9.0]</span>\npip install pynvvl-cuda90\n\n<span class=\"c1\"># [For CUDA 9.1]</span>\npip install pynvvl-cuda91\n\n<span class=\"c1\"># [For CUDA 9.2]</span>\npip install pynvvl-cuda92\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pynvvl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Create NVVLVideoLoader object</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">pynvvl</span><span class=\"o\">.</span><span class=\"n\">NVVLVideoLoader</span><span class=\"p\">(</span><span class=\"n\">device_id</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s1\">'error'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the number of frames in the video</span>\n<span class=\"n\">n_frames</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">frame_count</span><span class=\"p\">(</span><span class=\"s1\">'examples/sample.mp4'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Number of frames:'</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load a video and return it as a CuPy array</span>\n<span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">read_sequence</span><span class=\"p\">(</span>\n    <span class=\"s1\">'examples/sample.mp4'</span><span class=\"p\">,</span>\n    <span class=\"n\">horiz_flip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_height</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_width</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_y</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_height</span><span class=\"o\">=</span><span class=\"mi\">385</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_width</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_method</span><span class=\"o\">=</span><span class=\"s1\">'Linear'</span><span class=\"p\">,</span>\n    <span class=\"n\">normalized</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; (91, 3, 385, 512): (n_frames, channels, height, width)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; float32</span>\n\n<span class=\"c1\"># Get the first frame as numpy array</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">video</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'examples/sample.png'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16bd58960e288621e0b33a28f5219f20fb5b534e/68747470733a2f2f6769746875622e636f6d2f6d69746d756c2f70796e76766c2f7261772f6d61737465722f6578616d706c65732f73616d706c652e706e67\"></p>\n<p>This video is <code>flickr-2-6-3-3-5-2-7-6-5626335276_4.mp4</code> from the Moments-In-Time dataset.</p>\n<p>Note that cropping is performed after scaling. In the above example, NVVL performs scaling up from 256 x 256 to 512 x 512 first, then cropping the region [60:60 + 385, 0:512]. See the following section to know more about the transformation options.</p>\n<h2>VideoLoader options</h2>\n<p>Please specify the GPU device id when you create a <code>NVVLVideoLoader</code> object.\nYou can also specify the logging level with a argument <code>log_level</code> for the constructor of <code>NVVLVideoLoader</code>.</p>\n<pre><code>Wrapper of NVVL VideoLoader\n\n    Args:\n        device_id (int): Specify the device id used to load a video.\n        log_level (str): Logging level which should be either 'debug',\n            'info', 'warn', 'error', or 'none'.\n            Logs with levels &gt;= log_level is shown. The default is 'warn'.\n</code></pre>\n<h2>Transformation Options</h2>\n<p><code>pynvvl.NVVLVideoLoader.read_sequence</code> can take some options to specify the color space, the value range, and what transformations you want to perform to the video.</p>\n<pre><code>Loads the video from disk and returns it as a CuPy ndarray.\n\n    Args:\n        filename (str): The path to the video.\n        frame (int): The initial frame number of the returned sequence.\n            Default is 0.\n        count (int): The number of frames of the returned sequence.\n            If it is None, whole frames of the video are loaded.\n        channels (int): The number of color channels of the video.\n            Default is 3.\n        scale_height (int): The height of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0 no scaling is performed. Default is 0.\n        scale_width (int): The width of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0, no scaling is performed. Default is 0.\n        crop_x (int): Location of the crop within the scaled frame.\n            Must be set such that crop_y + height &lt;= original height.\n            Default is 0.\n        crop_y (int): Location of the crop within the scaled frame.\n            Must be set such that crop_x + width &lt;= original height.\n            Default is 0.\n        crop_height (int): The height of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        crop_width (int): The width of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        scale_method (str): Scaling method. It should be either of\n            'Nearest' or 'Lienar'. Default is 'Linear'.\n        horiz_flip (bool): Whether horizontal flipping is performed or not.\n            Default is False.\n        normalized (bool): If it is True, the values of returned video is\n            normalized into [0, 1], otherwise the value range is [0, 255].\n            Default is False.\n        color_space (str): The color space of the values of returned video.\n            It should be either 'RGB' or 'YCbCr'. Default is 'RGB'.\n        chroma_up_method (str): How the chroma channels are upscaled from\n            yuv 4:2:0 to 4:4:4. It should be 'Linear' currently.\n        out (cupy.ndarray): Alternate output array where place the result.\n            It must have the same shape and the dtype as the expected\n            output, and its order must be C-contiguous.\n</code></pre>\n<h2>How to build</h2>\n<h3>Build wheels using Docker:</h3>\n<p>Requirements:</p>\n<ul>\n<li>Docker</li>\n<li>nvidia-docker (v1/v2)</li>\n</ul>\n<pre><code>bash docker/build_wheels.sh\n</code></pre>\n<h3>Setup development environment without Docker:</h3>\n<p>The <code>setup.py</code> script searches for necessary libraries.</p>\n<p>Requirements: the following libraries are available in <code>LIBRARY_PATH</code>.</p>\n<ul>\n<li>libnvvl.so</li>\n<li>libavformat.so.57</li>\n<li>libavfilter.so.6</li>\n<li>libavcodec.so.57</li>\n<li>libavutil.so.55</li>\n</ul>\n<p>You can build <code>libnvvl.so</code> in the <code>nvvl</code> repository. Follow the instructions\nof <code>nvvl</code> library. The <code>build</code> directory must be in <code>LIBRARY_PATH</code>.</p>\n<p>Other three libraries are available as packages in Ubuntu 16.04.\nThey are installed under <code>/usr/lib/x86_64-linux-gnu</code>, so they must be in <code>LIBRARY_PATH</code> as well.</p>\n<pre><code>python setup.py develop\npython setup.py bdist_wheel\n</code></pre>\n\n          </div>"}, "last_serial": 4785188, "releases": {"0.0.2a1": [{"comment_text": "", "digests": {"md5": "f61d377c83dc679853b4fef46489a869", "sha256": "f24926548b7fd74ea44b944a475fb28127565b2c4829d03653b07b74e12180d3"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f61d377c83dc679853b4fef46489a869", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1515809, "upload_time": "2018-05-05T00:12:29", "upload_time_iso_8601": "2018-05-05T00:12:29.600473Z", "url": "https://files.pythonhosted.org/packages/ab/13/334d563e994ba9a71031925e6eb74f494fc8be36a9724fe50b55ecc7f247/pynvvl_cuda91-0.0.2a1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44f286068ec1ce7858776fcff4f5c53e", "sha256": "e8d9354ab9a524ce2090ff8c0b1eedc91929868ba722e4c085c7b29138130ee3"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "44f286068ec1ce7858776fcff4f5c53e", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1524783, "upload_time": "2018-05-05T00:12:33", "upload_time_iso_8601": "2018-05-05T00:12:33.546831Z", "url": "https://files.pythonhosted.org/packages/74/cd/31efe9178b6ad8933698f7f2a251b7395926f7f871dc02b68bcdce92a305/pynvvl_cuda91-0.0.2a1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bec16f0967e0ecbaf4019fcbdae32ddb", "sha256": "6e24800d980400693b7e0622adc3df7bae67e9f9e5c767580f147970f49c6214"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "bec16f0967e0ecbaf4019fcbdae32ddb", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1522445, "upload_time": "2018-05-05T00:12:37", "upload_time_iso_8601": "2018-05-05T00:12:37.385421Z", "url": "https://files.pythonhosted.org/packages/70/fd/b75194cc51af1b1bb805d61cf05b1ac70d1bcf8fca816b7296498717e5ca/pynvvl_cuda91-0.0.2a1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43fadd350ab0b301237fdff586189109", "sha256": "68e08be45cebebd2b198db7a0f71f85cd848763b7397c6a814009871227498b8"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "43fadd350ab0b301237fdff586189109", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1525179, "upload_time": "2018-05-05T00:12:40", "upload_time_iso_8601": "2018-05-05T00:12:40.802199Z", "url": "https://files.pythonhosted.org/packages/5a/a0/c2cd810edf01f48215664a5076280268a7bd5931580feb1efdc081bc9768/pynvvl_cuda91-0.0.2a1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a2": [{"comment_text": "", "digests": {"md5": "3c4e3294048222d041454a74329df26a", "sha256": "47bb90bba90031ea60e6bff3161d4072a1a431d57be37c7cb2d28c40d4e3157c"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3c4e3294048222d041454a74329df26a", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1519202, "upload_time": "2018-05-05T03:13:40", "upload_time_iso_8601": "2018-05-05T03:13:40.701864Z", "url": "https://files.pythonhosted.org/packages/20/ad/6ff4de9e352026f768ddcbd615ac41fa3498af75d8afb18b2f2993060c4f/pynvvl_cuda91-0.0.2a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4833d0bb63198bbae7092aa1c5e58b6f", "sha256": "bbfbec25ba312c5101c1f7f48218e17f5a94321ca283fca5e513ce3961af3521"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4833d0bb63198bbae7092aa1c5e58b6f", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1529483, "upload_time": "2018-05-05T03:13:44", "upload_time_iso_8601": "2018-05-05T03:13:44.183834Z", "url": "https://files.pythonhosted.org/packages/e1/a9/084b112f078abee7d94df57dece0d0310610e8481becf0b0635709ccfa12/pynvvl_cuda91-0.0.2a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f025db9c719b710d9f01ce9be6177f3", "sha256": "93eeb582c4ec76efe93f4186fc3250c63257fcb42339d47914a10c96021337d2"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5f025db9c719b710d9f01ce9be6177f3", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1527354, "upload_time": "2018-05-05T03:13:47", "upload_time_iso_8601": "2018-05-05T03:13:47.439465Z", "url": "https://files.pythonhosted.org/packages/1c/9d/beefe78fcda980a1aae244f62c8be1fda8b34e8db1aae3dcf72bbeb5f83b/pynvvl_cuda91-0.0.2a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "823bcda6d8c6e13981db6eba24d9556e", "sha256": "31c059eada69457aea070c6a48ef9cb9dd030450165fc2a2aed4dd443ac3a0a8"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "823bcda6d8c6e13981db6eba24d9556e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1529344, "upload_time": "2018-05-05T03:13:51", "upload_time_iso_8601": "2018-05-05T03:13:51.450500Z", "url": "https://files.pythonhosted.org/packages/c7/05/36b7e7f303c5a86ec87ee09177fe7891131fc466f921df6397b65419a633/pynvvl_cuda91-0.0.2a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a3": [{"comment_text": "", "digests": {"md5": "10abd30d245e8a5325f92690563cbe03", "sha256": "a9695507d3ae8afac438aea8a4456e54cec77cbeee2467c2479b21d2cab552b9"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a3-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "10abd30d245e8a5325f92690563cbe03", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1521715, "upload_time": "2018-05-07T10:13:59", "upload_time_iso_8601": "2018-05-07T10:13:59.137713Z", "url": "https://files.pythonhosted.org/packages/ef/4c/9fea46ef5fccc2fb9a4ea4a745a07aa6222fd1c116177d21858807fb74c1/pynvvl_cuda91-0.0.2a3-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8cbb8d7ff500ab38790d6aa2179ebc1", "sha256": "3112f874caa07c30f63b12f10eb3e68ad381a689a00b0ed419d4a061f28c265a"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a3-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e8cbb8d7ff500ab38790d6aa2179ebc1", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1534760, "upload_time": "2018-05-07T10:14:04", "upload_time_iso_8601": "2018-05-07T10:14:04.099202Z", "url": "https://files.pythonhosted.org/packages/42/f9/3074011b511e4e303b70aea891511f6cbfb4d5647ed83532fbc4d6fb0507/pynvvl_cuda91-0.0.2a3-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09db1ec405b07c6166d8a2ab8cea0875", "sha256": "4e23bb1a5ac176aac89f995a1d25b1377592e9610591c3b0ca55d1ab94d8bcd5"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a3-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "09db1ec405b07c6166d8a2ab8cea0875", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1532432, "upload_time": "2018-05-07T10:14:08", "upload_time_iso_8601": "2018-05-07T10:14:08.050763Z", "url": "https://files.pythonhosted.org/packages/cb/33/fd5941578498a253182ad0c533ac7e08327c36c39276edc454b10aa1c61b/pynvvl_cuda91-0.0.2a3-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1dc2ad5fe1a8fc121259138efbfa3c13", "sha256": "0933c6083aae638e2920b83db03fd43d2bcb2d8a96db8eebc6ed1abe4fd90cc1"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a3-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1dc2ad5fe1a8fc121259138efbfa3c13", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1535375, "upload_time": "2018-05-07T10:14:11", "upload_time_iso_8601": "2018-05-07T10:14:11.923889Z", "url": "https://files.pythonhosted.org/packages/d3/ee/65ae781730604119b7c777f4d3f3d2785eafc143f9c16e2bec33436648ec/pynvvl_cuda91-0.0.2a3-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a4": [{"comment_text": "", "digests": {"md5": "3b85e43341498a0ae39de771a613fa4f", "sha256": "0f1b3813de3c233ff29856f63ff8c286110f264ba67c46353a329a9eaa45153d"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a4-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3b85e43341498a0ae39de771a613fa4f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1521832, "upload_time": "2018-05-15T07:58:41", "upload_time_iso_8601": "2018-05-15T07:58:41.595520Z", "url": "https://files.pythonhosted.org/packages/81/8c/fea48ea9a1364a2c3cff123a11c75f2c9dbbadd8f1138add22a2a39f17eb/pynvvl_cuda91-0.0.2a4-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42969f327cba9ada0b4a7c3d85f1f0cc", "sha256": "78bbfc023f7c408c17f2256a319b003cd378114a45def319124b7c10653cb713"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a4-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "42969f327cba9ada0b4a7c3d85f1f0cc", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1534818, "upload_time": "2018-05-15T07:58:45", "upload_time_iso_8601": "2018-05-15T07:58:45.485094Z", "url": "https://files.pythonhosted.org/packages/96/69/427d643aa3f46fade1fca92b593b9ae96a8d228aa6e9e3f39589185f282a/pynvvl_cuda91-0.0.2a4-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dce4be6ab7c84592d6c39cf2baeccbe5", "sha256": "f3ef46e2deb1b8c123c6e9236687b13e0d2c9c938a4c5ac6a44b27140ecc7e20"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "dce4be6ab7c84592d6c39cf2baeccbe5", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1532407, "upload_time": "2018-05-15T07:58:49", "upload_time_iso_8601": "2018-05-15T07:58:49.722754Z", "url": "https://files.pythonhosted.org/packages/75/a3/8362559876180f02b7b7b277dc89f15be16b91ec2ca11c26494c2da0f9ec/pynvvl_cuda91-0.0.2a4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c32869f2149af7e6eb2c530a20ff8a13", "sha256": "8ef7cfd05ab3e07d39d83f9cd8792b9f3d767b897de4155a10ba470bd19aed38"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c32869f2149af7e6eb2c530a20ff8a13", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1535397, "upload_time": "2018-05-15T07:58:53", "upload_time_iso_8601": "2018-05-15T07:58:53.676948Z", "url": "https://files.pythonhosted.org/packages/de/66/8323fd1fb04d73648b510ec4a15298419b5bb16fd2046e73afc8181d0869/pynvvl_cuda91-0.0.2a4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a5": [{"comment_text": "", "digests": {"md5": "81861ecaca082ff829faa372b7e13ec8", "sha256": "50264eb35c96eaa0ce399a790af1ac6294870f2acbadb27a12534bc4905dfba8"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a5-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "81861ecaca082ff829faa372b7e13ec8", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1531488, "upload_time": "2018-05-18T08:53:25", "upload_time_iso_8601": "2018-05-18T08:53:25.648934Z", "url": "https://files.pythonhosted.org/packages/6a/d1/2757bf876816f4a32d28cd1f233990efad502c08afd9bbf7024bf2a6fdb9/pynvvl_cuda91-0.0.2a5-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6ff74bcc49d2094d12adf46c726404f", "sha256": "192d6343976a3707a7f4531f99975176cc052d492433a8f470b65298f703c662"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a5-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d6ff74bcc49d2094d12adf46c726404f", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1546178, "upload_time": "2018-05-18T08:53:29", "upload_time_iso_8601": "2018-05-18T08:53:29.886674Z", "url": "https://files.pythonhosted.org/packages/30/b1/62ae9d699e0b6d56af0e86263937cd9790b508968cd6c775904271a98800/pynvvl_cuda91-0.0.2a5-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72f30d9ed6770eb180267a6a29a81477", "sha256": "3263e830921207d4fb4730308e3c65d13be548e797d6a790f9543e2376ee5b40"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a5-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "72f30d9ed6770eb180267a6a29a81477", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1543352, "upload_time": "2018-05-18T08:53:33", "upload_time_iso_8601": "2018-05-18T08:53:33.594727Z", "url": "https://files.pythonhosted.org/packages/8a/83/e669e216fa93f86bfc10f170a71ea7afe0c6a32c492f5478c49331e87802/pynvvl_cuda91-0.0.2a5-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58bbfb58bd303d0f27dd842c642400e7", "sha256": "b2cb5001181fc4bc8e16549d4a07d30f87a980750cd4cb8f5c0026deb6bda7ef"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.2a5-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "58bbfb58bd303d0f27dd842c642400e7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1547770, "upload_time": "2018-05-18T08:53:36", "upload_time_iso_8601": "2018-05-18T08:53:36.956227Z", "url": "https://files.pythonhosted.org/packages/cf/7f/2f9fe40f950c8f3f0133847a4d09268c560e98f995ab7e94131721e143d9/pynvvl_cuda91-0.0.2a5-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3a1": [{"comment_text": "", "digests": {"md5": "4e204b6a43b348f6d1a1a4906e7715e9", "sha256": "23a2138070c9c46a713289a884b70ef8a575edc98e4ad5105c725d86a3f32336"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4e204b6a43b348f6d1a1a4906e7715e9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 788283, "upload_time": "2018-09-30T16:24:59", "upload_time_iso_8601": "2018-09-30T16:24:59.322074Z", "url": "https://files.pythonhosted.org/packages/91/f0/726dc53b1993dae1ea497a4255c2b2c44bc5b4344281119a88d40e85e7df/pynvvl_cuda91-0.0.3a1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f15a025fbc0e334071ef637c62be19c", "sha256": "429b9b0d5916dbc4095ffb47590c82feb9d11bf9a412299585f870cc6fd49691"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6f15a025fbc0e334071ef637c62be19c", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 802978, "upload_time": "2018-09-30T16:25:01", "upload_time_iso_8601": "2018-09-30T16:25:01.368545Z", "url": "https://files.pythonhosted.org/packages/d1/b1/de91f09fe2978873c51dafe606aa29110e7685cfe330ec51efd9d52616f5/pynvvl_cuda91-0.0.3a1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b108dacb2a647302cea8c439f2ae8c93", "sha256": "37e60b911e1ad4527213b3cd62c57ed7625f879dcc72da12a94493b47eaba080"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b108dacb2a647302cea8c439f2ae8c93", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 800146, "upload_time": "2018-09-30T16:25:03", "upload_time_iso_8601": "2018-09-30T16:25:03.664649Z", "url": "https://files.pythonhosted.org/packages/14/36/a85c07f095a674bcc5c74bc31d078ad85e23859dc35a291af89ff06a4084/pynvvl_cuda91-0.0.3a1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f69479f66353b12030a27d7a2cac204", "sha256": "6ea09b2ea53f62142381a1a58d71510b2179712157150eea78f9e171d2a798bf"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2f69479f66353b12030a27d7a2cac204", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 804570, "upload_time": "2018-09-30T16:25:05", "upload_time_iso_8601": "2018-09-30T16:25:05.934991Z", "url": "https://files.pythonhosted.org/packages/45/43/165726aae4ff395ad4ffa8a7b6ed99defce4752746b171f531eb635e1719/pynvvl_cuda91-0.0.3a1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3a2": [{"comment_text": "", "digests": {"md5": "87f8cca77d766809792f7ba733c43383", "sha256": "3eb54a5180768965121945064501cf8b0f29ceda44cba73405c277ad3acf13f5"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "87f8cca77d766809792f7ba733c43383", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 788319, "upload_time": "2018-09-30T17:10:57", "upload_time_iso_8601": "2018-09-30T17:10:57.964404Z", "url": "https://files.pythonhosted.org/packages/e2/e2/b56e41b6bc2991ee873a9435e7e0e34b76c0763338f127d9ffe5ff673710/pynvvl_cuda91-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97b7ef04cd2216f3a44162bdff44cd6e", "sha256": "824a43cb3338415e622c1d0e711d79b958e0f31920dcaabc5bcb9afdd92ed1a4"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "97b7ef04cd2216f3a44162bdff44cd6e", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 803014, "upload_time": "2018-09-30T17:11:00", "upload_time_iso_8601": "2018-09-30T17:11:00.366797Z", "url": "https://files.pythonhosted.org/packages/2c/51/46540cc57d52a732962ac27a8df1623232c8f6bf51007f0dca81433b2fa0/pynvvl_cuda91-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3576aa11aab7c2d6c4e8fb1986fcecb4", "sha256": "017ec9364c3161849990215e95bcc557c17ea81d9cd02f6efe099a37b28a9e19"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3576aa11aab7c2d6c4e8fb1986fcecb4", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 800182, "upload_time": "2018-09-30T17:11:02", "upload_time_iso_8601": "2018-09-30T17:11:02.708773Z", "url": "https://files.pythonhosted.org/packages/76/d2/838b5db61d5cf7322bd5c6eb4c8caaf02170a5f5a029be850ec1ee5d76c3/pynvvl_cuda91-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ada585dd24fce3917c3801f025447f40", "sha256": "d46a564862bc9126ec5e6c4d4d07ada1a5c0758988c616e1dc5239d3e5266ef4"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ada585dd24fce3917c3801f025447f40", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 804606, "upload_time": "2018-09-30T17:11:05", "upload_time_iso_8601": "2018-09-30T17:11:05.643408Z", "url": "https://files.pythonhosted.org/packages/e7/b9/fb1675f3a87675d9ef02446435813825a0b0dd84f39b79eeec6d75e73c85/pynvvl_cuda91-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87f8cca77d766809792f7ba733c43383", "sha256": "3eb54a5180768965121945064501cf8b0f29ceda44cba73405c277ad3acf13f5"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "87f8cca77d766809792f7ba733c43383", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 788319, "upload_time": "2018-09-30T17:10:57", "upload_time_iso_8601": "2018-09-30T17:10:57.964404Z", "url": "https://files.pythonhosted.org/packages/e2/e2/b56e41b6bc2991ee873a9435e7e0e34b76c0763338f127d9ffe5ff673710/pynvvl_cuda91-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97b7ef04cd2216f3a44162bdff44cd6e", "sha256": "824a43cb3338415e622c1d0e711d79b958e0f31920dcaabc5bcb9afdd92ed1a4"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "97b7ef04cd2216f3a44162bdff44cd6e", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 803014, "upload_time": "2018-09-30T17:11:00", "upload_time_iso_8601": "2018-09-30T17:11:00.366797Z", "url": "https://files.pythonhosted.org/packages/2c/51/46540cc57d52a732962ac27a8df1623232c8f6bf51007f0dca81433b2fa0/pynvvl_cuda91-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3576aa11aab7c2d6c4e8fb1986fcecb4", "sha256": "017ec9364c3161849990215e95bcc557c17ea81d9cd02f6efe099a37b28a9e19"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3576aa11aab7c2d6c4e8fb1986fcecb4", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 800182, "upload_time": "2018-09-30T17:11:02", "upload_time_iso_8601": "2018-09-30T17:11:02.708773Z", "url": "https://files.pythonhosted.org/packages/76/d2/838b5db61d5cf7322bd5c6eb4c8caaf02170a5f5a029be850ec1ee5d76c3/pynvvl_cuda91-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ada585dd24fce3917c3801f025447f40", "sha256": "d46a564862bc9126ec5e6c4d4d07ada1a5c0758988c616e1dc5239d3e5266ef4"}, "downloads": -1, "filename": "pynvvl_cuda91-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ada585dd24fce3917c3801f025447f40", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 804606, "upload_time": "2018-09-30T17:11:05", "upload_time_iso_8601": "2018-09-30T17:11:05.643408Z", "url": "https://files.pythonhosted.org/packages/e7/b9/fb1675f3a87675d9ef02446435813825a0b0dd84f39b79eeec6d75e73c85/pynvvl_cuda91-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:56 2020"}