{"info": {"author": "BrewPi", "author_email": "Development@brewpi.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 3.7", "Topic :: System :: Hardware"], "description": "# Boilerplate code for BrewBlox Service implementations\n\nThere is some boilerplate code involved when creating a Brewblox service. This repository can be forked to avoid having to do the boring configuration.\n\nEverything listed under **Required Changes** must be done before the package works as intended.\n\n## How to use\n\n* Fork this repository to your own Github account or project.\n* Follow all steps outlined under the various **Required Changes**.\n* Start coding your service =)\n    * To test, run `pipenv run pytest`\n\n\n## Files\n\n---\n### [setup.py](./setup.py)\nUsed to create a distributable and installable Python package. See https://docs.python.org/3.6/distutils/setupscript.html for more information.\n\n**Required Changes:**\n* Change the `name` variable to your project name. This is generally the same as the repository name. This name is used when installing the package through Pip. </br> It is common for this name to equal the package name, but using \"`-`\" as separator instead of \"`_`\".\n* Change the `url` parameter to the url of your repository.\n* Change the `author` parameter to your name.\n* Change the `author_email` parameter to your email.\n\n\n---\n### [tox.ini](./tox.ini)\nDeveloper tools such as [Tox](http://tox.readthedocs.io/en/latest/index.html), [Pytest](https://docs.pytest.org/en/latest/), [Flake8](http://flake8.pycqa.org/en/latest/), and [Autopep8](https://github.com/hhatto/autopep8) use this file to find configuration options.\n\n**Required Changes:**\n* Change `--cov=YOUR_PACKAGE` to refer to your module name.\n* The `--cov-fail-under=100` makes the build fail if code coverage is less than 100%. It is optional, but recommended. Remove the `#` comment character to enable it.\n\n\n---\n### [.env](./.env)\nProject-specific environment variables can be stored here. `Pipenv` will automatically load it when executing a command in `pipenv run`.\n\nFor a basic service (not deployed to PyPi or Docker Hub), you do not need to add or edit anything here.\n\n\n---\n### [Pipfile](./Pipfile)\n[Pipenv](https://docs.pipenv.org/) is used to streamline development. It manages dependencies and virtual environments. It also automatically loads environment variables declared in `.env`.\n\n`Pipfile` lists all dependencies. Everything under [packages] is needed for the package to run, while everything under [dev-packages] is needed to run the tests.\n\nYou can use `pipenv install <package name>` or `pipenv install --dev <package name>` to add dependencies.\n\n**Note:** There is overlap between the [packages] section in `Pipfile`, and the `install_requires=[]` list in `setup.py`. The rule of thumb is that if you need an external package to run, you should add it to both.\n\n**Required Changes:**\n* Install pipenv (run `sudo pip3 install pipenv`)\n* Update the `Pipfile.lock` file (run `pipenv lock`)\n* Install all packages (run `pipenv sync -d`)\n\n\n---\n### [MANIFEST.in](./MANIFEST.in)\nThis file lists all non-code files that should be part of the package.\nSee https://docs.python.org/3.6/distutils/sourcedist.html#specifying-the-files-to-distribute for more info.\n\nFor a basic service, you do not need to change anything in this file.\n\n\n---\n### [.editorconfig](./.editorconfig)\nThis file contains [EditorConfig](https://editorconfig.org/) configuration for this project. </br>\nAmong other things, it describes per file type whether it uses tabs or spaces.\n\nFor a basic service, you do not need to change anything in this file.\nHowever, it is recommended to use an editor that recognizes and uses `.editorconfig` files.\n\n\n---\n### [README.md](./README.md)\nYour module readme (this file). It will be the package description on Pypi.org, and automatically be displayed in Github.\n\n**Required Changes:**\n* Add all important info about your package here. What does your package do? How do you use it? What is your favorite color?\n\n\n---\n### [YOUR_PACKAGE/](./YOUR_PACKAGE/)\nYour module. This name is used when importing your code in Python.\n\n**Required Changes:**\n* Rename to the desired module name. This name can't include \"`-`\" characters. </br>\nIt is common for single-module projects to use \"`-`\" as a separator for the project name, and \"`_`\" for the module. </br>\nFor example: `your-package` and `your_package`.\n\n\n---\n### [test/conftest.py](./test/conftest.py)\nProject-level pytest fixtures. Some useful fixtures for testing any brewblox_service implementation are defined here. See tests in https://github.com/BrewBlox/brewblox-service/tree/develop/test for examples on how to use.\n\nFor a basic implementation, you do not need to change anything in this file.\n\n\n---\n### [test/test_hello.py](./test/test_hello.py)\nAn example on how to test aiohttp endpoints you added. Feel free to remove this once you no longer need it.\n\n\n---\n### [docker/amd/Dockerfile](./docker/amd/Dockerfile)\nA docker file for running your package. To build, you need to copy the local version of your python package to `docker/dist/` first.\n\nThe Dockerfiles are set up so both the AMD (desktop) and ARM variants can use the same input files.\n\nExample:\n```bash\npython3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements > docker/requirements.txt\n\ndocker build \\\n    --tag your-package:your-version \\\n    --file docker/amd/Dockerfile \\\n    docker/\n\n# run it\ndocker run your-package:your-version\n```\n\nTo cover the most common use cases, the `brewblox-tools` dependency defines the `bbt-localbuild` script.\n\nIt will read your .env file, run sdist, copy configuration to the docker directory, and build an image. Example:\n\n```bash\nbbt-localbuild\ndocker run your-package:local\n```\n\nExplore its other arguments with `bbt-localbuild --help`\n\n**Required Changes:**\n* Rename instances of `YOUR-PACKAGE` and `YOUR_PACKAGE` in the docker file to desired project and package names.\n\n\n---\n### [docker/arm/Dockerfile](./docker/arm/Dockerfile)\nThe same as for `docker/amd/Dockerfile`, but for Raspberry Pi targets.\n\nIn order to build for Raspberry, you must also first enable the ARM compiler.\n\nExample:\n```bash\npython3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements > docker/requirements.txt\n\n# Enable ARM compiler\ndocker run --rm --privileged multiarch/qemu-user-static:register --reset\n\n# Build the Raspberry Pi version\ndocker build \\\n    --tag your-package:rpi-your-version \\\n    --file docker/arm/Dockerfile \\\n    docker/\n\n# Try to run Raspberry version\n# On the desktop, this will fail with \"standard_init_linux.go:190: exec user process caused \"exec format error\"\"\ndocker run --detach your-package:rpi-your-version\n```\n\n`bbt-localbuild` can also generate ARM images. It will automatically enable the QEMU compiler, and prefix the tag with `rpi-`. To use:\n\n```\nbbt-localbuild --arch arm\ndocker run your-package:rpi-local\n```\n\n**Required Changes:**\n* Rename instances of `YOUR-PACKAGE` and `YOUR_PACKAGE` in the docker file to desired project and package names.\n\n\n---\n### [azure-pipelines.yml](./azure-pipelines.yml)\n[Azure](https://dev.azure.com) can automatically test and deploy all commits you push to GitHub. If you haven't enabled travis for your repository: don't worry, it won't do anything.\n\nTo deploy your software, you will also need [PyPi](https://pypi.org/) and [Docker Hub](https://hub.docker.com/) accounts.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BrewBlox/brewblox-stepper/", "keywords": "brewing brewpi brewblox embedded plugin service", "license": "", "maintainer": "", "maintainer_email": "", "name": "brewblox-stepper", "package_url": "https://pypi.org/project/brewblox-stepper/", "platform": "", "project_url": "https://pypi.org/project/brewblox-stepper/", "project_urls": {"Homepage": "https://github.com/BrewBlox/brewblox-stepper/"}, "release_url": "https://pypi.org/project/brewblox-stepper/0.1.1.dev29/", "requires_dist": null, "requires_python": ">=3.7", "summary": "", "version": "0.1.1.dev29", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Boilerplate code for BrewBlox Service implementations</h1>\n<p>There is some boilerplate code involved when creating a Brewblox service. This repository can be forked to avoid having to do the boring configuration.</p>\n<p>Everything listed under <strong>Required Changes</strong> must be done before the package works as intended.</p>\n<h2>How to use</h2>\n<ul>\n<li>Fork this repository to your own Github account or project.</li>\n<li>Follow all steps outlined under the various <strong>Required Changes</strong>.</li>\n<li>Start coding your service =)\n<ul>\n<li>To test, run <code>pipenv run pytest</code></li>\n</ul>\n</li>\n</ul>\n<h2>Files</h2>\n<hr>\n<h3><a href=\"./setup.py\" rel=\"nofollow\">setup.py</a></h3>\n<p>Used to create a distributable and installable Python package. See <a href=\"https://docs.python.org/3.6/distutils/setupscript.html\" rel=\"nofollow\">https://docs.python.org/3.6/distutils/setupscript.html</a> for more information.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Change the <code>name</code> variable to your project name. This is generally the same as the repository name. This name is used when installing the package through Pip. <br> It is common for this name to equal the package name, but using \"<code>-</code>\" as separator instead of \"<code>_</code>\".</li>\n<li>Change the <code>url</code> parameter to the url of your repository.</li>\n<li>Change the <code>author</code> parameter to your name.</li>\n<li>Change the <code>author_email</code> parameter to your email.</li>\n</ul>\n<hr>\n<h3><a href=\"./tox.ini\" rel=\"nofollow\">tox.ini</a></h3>\n<p>Developer tools such as <a href=\"http://tox.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">Tox</a>, <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">Pytest</a>, <a href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\">Flake8</a>, and <a href=\"https://github.com/hhatto/autopep8\" rel=\"nofollow\">Autopep8</a> use this file to find configuration options.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Change <code>--cov=YOUR_PACKAGE</code> to refer to your module name.</li>\n<li>The <code>--cov-fail-under=100</code> makes the build fail if code coverage is less than 100%. It is optional, but recommended. Remove the <code>#</code> comment character to enable it.</li>\n</ul>\n<hr>\n<h3><a href=\"./.env\" rel=\"nofollow\">.env</a></h3>\n<p>Project-specific environment variables can be stored here. <code>Pipenv</code> will automatically load it when executing a command in <code>pipenv run</code>.</p>\n<p>For a basic service (not deployed to PyPi or Docker Hub), you do not need to add or edit anything here.</p>\n<hr>\n<h3><a href=\"./Pipfile\" rel=\"nofollow\">Pipfile</a></h3>\n<p><a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">Pipenv</a> is used to streamline development. It manages dependencies and virtual environments. It also automatically loads environment variables declared in <code>.env</code>.</p>\n<p><code>Pipfile</code> lists all dependencies. Everything under [packages] is needed for the package to run, while everything under [dev-packages] is needed to run the tests.</p>\n<p>You can use <code>pipenv install &lt;package name&gt;</code> or <code>pipenv install --dev &lt;package name&gt;</code> to add dependencies.</p>\n<p><strong>Note:</strong> There is overlap between the [packages] section in <code>Pipfile</code>, and the <code>install_requires=[]</code> list in <code>setup.py</code>. The rule of thumb is that if you need an external package to run, you should add it to both.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Install pipenv (run <code>sudo pip3 install pipenv</code>)</li>\n<li>Update the <code>Pipfile.lock</code> file (run <code>pipenv lock</code>)</li>\n<li>Install all packages (run <code>pipenv sync -d</code>)</li>\n</ul>\n<hr>\n<h3><a href=\"./MANIFEST.in\" rel=\"nofollow\">MANIFEST.in</a></h3>\n<p>This file lists all non-code files that should be part of the package.\nSee <a href=\"https://docs.python.org/3.6/distutils/sourcedist.html#specifying-the-files-to-distribute\" rel=\"nofollow\">https://docs.python.org/3.6/distutils/sourcedist.html#specifying-the-files-to-distribute</a> for more info.</p>\n<p>For a basic service, you do not need to change anything in this file.</p>\n<hr>\n<h3><a href=\"./.editorconfig\" rel=\"nofollow\">.editorconfig</a></h3>\n<p>This file contains <a href=\"https://editorconfig.org/\" rel=\"nofollow\">EditorConfig</a> configuration for this project. <br>\nAmong other things, it describes per file type whether it uses tabs or spaces.</p>\n<p>For a basic service, you do not need to change anything in this file.\nHowever, it is recommended to use an editor that recognizes and uses <code>.editorconfig</code> files.</p>\n<hr>\n<h3><a href=\"./README.md\" rel=\"nofollow\">README.md</a></h3>\n<p>Your module readme (this file). It will be the package description on Pypi.org, and automatically be displayed in Github.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Add all important info about your package here. What does your package do? How do you use it? What is your favorite color?</li>\n</ul>\n<hr>\n<h3><a href=\"./YOUR_PACKAGE/\" rel=\"nofollow\">YOUR_PACKAGE/</a></h3>\n<p>Your module. This name is used when importing your code in Python.</p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Rename to the desired module name. This name can't include \"<code>-</code>\" characters. <br>\nIt is common for single-module projects to use \"<code>-</code>\" as a separator for the project name, and \"<code>_</code>\" for the module. <br>\nFor example: <code>your-package</code> and <code>your_package</code>.</li>\n</ul>\n<hr>\n<h3><a href=\"./test/conftest.py\" rel=\"nofollow\">test/conftest.py</a></h3>\n<p>Project-level pytest fixtures. Some useful fixtures for testing any brewblox_service implementation are defined here. See tests in <a href=\"https://github.com/BrewBlox/brewblox-service/tree/develop/test\" rel=\"nofollow\">https://github.com/BrewBlox/brewblox-service/tree/develop/test</a> for examples on how to use.</p>\n<p>For a basic implementation, you do not need to change anything in this file.</p>\n<hr>\n<h3><a href=\"./test/test_hello.py\" rel=\"nofollow\">test/test_hello.py</a></h3>\n<p>An example on how to test aiohttp endpoints you added. Feel free to remove this once you no longer need it.</p>\n<hr>\n<h3><a href=\"./docker/amd/Dockerfile\" rel=\"nofollow\">docker/amd/Dockerfile</a></h3>\n<p>A docker file for running your package. To build, you need to copy the local version of your python package to <code>docker/dist/</code> first.</p>\n<p>The Dockerfiles are set up so both the AMD (desktop) and ARM variants can use the same input files.</p>\n<p>Example:</p>\n<pre>python3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements &gt; docker/requirements.txt\n\ndocker build <span class=\"se\">\\</span>\n    --tag your-package:your-version <span class=\"se\">\\</span>\n    --file docker/amd/Dockerfile <span class=\"se\">\\</span>\n    docker/\n\n<span class=\"c1\"># run it</span>\ndocker run your-package:your-version\n</pre>\n<p>To cover the most common use cases, the <code>brewblox-tools</code> dependency defines the <code>bbt-localbuild</code> script.</p>\n<p>It will read your .env file, run sdist, copy configuration to the docker directory, and build an image. Example:</p>\n<pre>bbt-localbuild\ndocker run your-package:local\n</pre>\n<p>Explore its other arguments with <code>bbt-localbuild --help</code></p>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Rename instances of <code>YOUR-PACKAGE</code> and <code>YOUR_PACKAGE</code> in the docker file to desired project and package names.</li>\n</ul>\n<hr>\n<h3><a href=\"./docker/arm/Dockerfile\" rel=\"nofollow\">docker/arm/Dockerfile</a></h3>\n<p>The same as for <code>docker/amd/Dockerfile</code>, but for Raspberry Pi targets.</p>\n<p>In order to build for Raspberry, you must also first enable the ARM compiler.</p>\n<p>Example:</p>\n<pre>python3 setup.py sdist\n\nrm docker/dist/*\ncp dist/* docker/dist/\npipenv lock --requirements &gt; docker/requirements.txt\n\n<span class=\"c1\"># Enable ARM compiler</span>\ndocker run --rm --privileged multiarch/qemu-user-static:register --reset\n\n<span class=\"c1\"># Build the Raspberry Pi version</span>\ndocker build <span class=\"se\">\\</span>\n    --tag your-package:rpi-your-version <span class=\"se\">\\</span>\n    --file docker/arm/Dockerfile <span class=\"se\">\\</span>\n    docker/\n\n<span class=\"c1\"># Try to run Raspberry version</span>\n<span class=\"c1\"># On the desktop, this will fail with \"standard_init_linux.go:190: exec user process caused \"exec format error\"\"</span>\ndocker run --detach your-package:rpi-your-version\n</pre>\n<p><code>bbt-localbuild</code> can also generate ARM images. It will automatically enable the QEMU compiler, and prefix the tag with <code>rpi-</code>. To use:</p>\n<pre><code>bbt-localbuild --arch arm\ndocker run your-package:rpi-local\n</code></pre>\n<p><strong>Required Changes:</strong></p>\n<ul>\n<li>Rename instances of <code>YOUR-PACKAGE</code> and <code>YOUR_PACKAGE</code> in the docker file to desired project and package names.</li>\n</ul>\n<hr>\n<h3><a href=\"./azure-pipelines.yml\" rel=\"nofollow\">azure-pipelines.yml</a></h3>\n<p><a href=\"https://dev.azure.com\" rel=\"nofollow\">Azure</a> can automatically test and deploy all commits you push to GitHub. If you haven't enabled travis for your repository: don't worry, it won't do anything.</p>\n<p>To deploy your software, you will also need <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a> and <a href=\"https://hub.docker.com/\" rel=\"nofollow\">Docker Hub</a> accounts.</p>\n\n          </div>"}, "last_serial": 6058245, "releases": {"0.1.1.dev1": [{"comment_text": "", "digests": {"md5": "d76acea33f104af283d2fbe4fab8eb03", "sha256": "7ce85d99a192d4c5b2fa9d6235dad12b5171ef568f53d389ce3e6ee3efef657e"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev1.tar.gz", "has_sig": false, "md5_digest": "d76acea33f104af283d2fbe4fab8eb03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 39535, "upload_time": "2019-09-05T12:50:21", "upload_time_iso_8601": "2019-09-05T12:50:21.463540Z", "url": "https://files.pythonhosted.org/packages/03/1c/3e5d2dd55f525a2e6981cb4f66fa19fb43e0a27a17d22c1ec2b4cb6d44a1/brewblox-stepper-0.1.1.dev1.tar.gz", "yanked": false}], "0.1.1.dev14": [{"comment_text": "", "digests": {"md5": "e59d34a73d822a09aac3be81cca53026", "sha256": "618165475cab3c48266a9f7dffc2197ef3dc5f42dcd7712dfb124440bc734ed3"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev14.tar.gz", "has_sig": false, "md5_digest": "e59d34a73d822a09aac3be81cca53026", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46760, "upload_time": "2019-09-13T12:39:54", "upload_time_iso_8601": "2019-09-13T12:39:54.385823Z", "url": "https://files.pythonhosted.org/packages/11/6e/113090f32f601526404246357906f076ea388742273ed468bf85ff24ccca/brewblox-stepper-0.1.1.dev14.tar.gz", "yanked": false}], "0.1.1.dev16": [{"comment_text": "", "digests": {"md5": "d5350a2df3c0f3722c6f35fe98058271", "sha256": "51393ad04ec7ab0be9b7cb2fe15f2ea2094cf4f231869e3491eb62c70f3dd9ae"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev16.tar.gz", "has_sig": false, "md5_digest": "d5350a2df3c0f3722c6f35fe98058271", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46712, "upload_time": "2019-09-13T14:44:53", "upload_time_iso_8601": "2019-09-13T14:44:53.687066Z", "url": "https://files.pythonhosted.org/packages/65/9b/c07a5e7e8e486827d017da20769da7ac85f8a520fbd825873e0ea567d575/brewblox-stepper-0.1.1.dev16.tar.gz", "yanked": false}], "0.1.1.dev18": [{"comment_text": "", "digests": {"md5": "84c8a9dc272831768c9d093eb2b10b7b", "sha256": "e3ca240eb37fe572d72ab94005522258cdd76c42bb209f428ec541f6d1e76ad5"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev18.tar.gz", "has_sig": false, "md5_digest": "84c8a9dc272831768c9d093eb2b10b7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46722, "upload_time": "2019-09-20T11:29:14", "upload_time_iso_8601": "2019-09-20T11:29:14.667236Z", "url": "https://files.pythonhosted.org/packages/2d/ec/a6d8ed213fbabd4a3f38a0559a356250baa09d23bd7b9a21c1b537028189/brewblox-stepper-0.1.1.dev18.tar.gz", "yanked": false}], "0.1.1.dev20": [{"comment_text": "", "digests": {"md5": "9dd94f202500b1e760c320ec0ff1fecc", "sha256": "52432ae5dd862c9cd6f05a271c83d2d8119af1c7c3e0e4ad155cdc252a54f6b1"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev20.tar.gz", "has_sig": false, "md5_digest": "9dd94f202500b1e760c320ec0ff1fecc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46652, "upload_time": "2019-10-16T22:16:41", "upload_time_iso_8601": "2019-10-16T22:16:41.139628Z", "url": "https://files.pythonhosted.org/packages/10/22/330ded986821d1edec898957ea617e571e9492512c2ca7308b1d3e62eaa2/brewblox-stepper-0.1.1.dev20.tar.gz", "yanked": false}], "0.1.1.dev22": [{"comment_text": "", "digests": {"md5": "b5069845c973dcb8403aa2975a846227", "sha256": "3046c0be3dd04f02041901654284e52e2cfb0dfcca5b0bc060fe4d0ab1a93a7b"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev22.tar.gz", "has_sig": false, "md5_digest": "b5069845c973dcb8403aa2975a846227", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46573, "upload_time": "2019-10-16T22:18:02", "upload_time_iso_8601": "2019-10-16T22:18:02.289269Z", "url": "https://files.pythonhosted.org/packages/e2/78/b1d62fccf7d02bf31466d614302955421efb8694dd5c2d423e227c21f631/brewblox-stepper-0.1.1.dev22.tar.gz", "yanked": false}], "0.1.1.dev24": [{"comment_text": "", "digests": {"md5": "f44fea78ee404108a1cd3c3855329dbe", "sha256": "fc2f26ddedab06692a21eb1abb8d45abdf581464829d6e32a142dfd6a855f51f"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev24.tar.gz", "has_sig": false, "md5_digest": "f44fea78ee404108a1cd3c3855329dbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46395, "upload_time": "2019-10-24T09:29:56", "upload_time_iso_8601": "2019-10-24T09:29:56.973550Z", "url": "https://files.pythonhosted.org/packages/f3/1f/4efd131d4ac6c72c31d3367fdb0ace6f4bb4bad312882dbe60c69c2b69bc/brewblox-stepper-0.1.1.dev24.tar.gz", "yanked": false}], "0.1.1.dev29": [{"comment_text": "", "digests": {"md5": "d09f406ce228f7e208e0671c0177359e", "sha256": "f66ee6c30fedf68ca7edd2f94b4e35c4c396d79a65b1ac185737c413b4df7c0f"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev29.tar.gz", "has_sig": false, "md5_digest": "d09f406ce228f7e208e0671c0177359e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46090, "upload_time": "2019-10-31T13:00:43", "upload_time_iso_8601": "2019-10-31T13:00:43.044342Z", "url": "https://files.pythonhosted.org/packages/69/44/901039eb0104ec975935bafc95c3bd5a702d13d73bd45c547ef840ded3ee/brewblox-stepper-0.1.1.dev29.tar.gz", "yanked": false}], "0.1.1.dev3": [{"comment_text": "", "digests": {"md5": "33da88ff67aa68a6ce08b9cca723b977", "sha256": "dee5469225f8d6a17e3056b97ba449339e3c31154dbaad7770e7e70f29a3e2b3"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev3.tar.gz", "has_sig": false, "md5_digest": "33da88ff67aa68a6ce08b9cca723b977", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 42817, "upload_time": "2019-09-06T09:41:57", "upload_time_iso_8601": "2019-09-06T09:41:57.298494Z", "url": "https://files.pythonhosted.org/packages/8e/22/4924a1fa8329135a50b9f5362e478c6b2a62eb207cd9ebd833cc05164600/brewblox-stepper-0.1.1.dev3.tar.gz", "yanked": false}], "0.1.1.dev6": [{"comment_text": "", "digests": {"md5": "fc408708a8dc93611c48d9124b82e203", "sha256": "3ed89f4d5b1d239fac7adfd94a73cc413c8c79b7bd6532bba8eec2c0ee7dcec5"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev6.tar.gz", "has_sig": false, "md5_digest": "fc408708a8dc93611c48d9124b82e203", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 44305, "upload_time": "2019-09-06T12:31:18", "upload_time_iso_8601": "2019-09-06T12:31:18.294568Z", "url": "https://files.pythonhosted.org/packages/ad/8b/0e4cce08963414344219ba8d7cdf4f9f859edf5a51a54606713015d4804b/brewblox-stepper-0.1.1.dev6.tar.gz", "yanked": false}], "0.1.1.dev7": [{"comment_text": "", "digests": {"md5": "65ed3c3a3583eee380d5dd8bf7860c5a", "sha256": "95ed2e0e43462b920605b25fefc6a89ac55f075b511e2c9a2b355d24b8e2726c"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev7.tar.gz", "has_sig": false, "md5_digest": "65ed3c3a3583eee380d5dd8bf7860c5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 44312, "upload_time": "2019-09-06T12:42:45", "upload_time_iso_8601": "2019-09-06T12:42:45.835224Z", "url": "https://files.pythonhosted.org/packages/77/9f/1b0e2687f987a8379faa53879e88d9a87ddf73e4b3e79b83d4dbabb88415/brewblox-stepper-0.1.1.dev7.tar.gz", "yanked": false}], "0.1.1.dev9": [{"comment_text": "", "digests": {"md5": "0036aff7382480c7270217a48d469774", "sha256": "fe5ba1d4b190b3c8693fee83fc3cc706e8107801f8d77052cd1d71b6f29721e3"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev9.tar.gz", "has_sig": false, "md5_digest": "0036aff7382480c7270217a48d469774", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 44591, "upload_time": "2019-09-06T15:48:02", "upload_time_iso_8601": "2019-09-06T15:48:02.747541Z", "url": "https://files.pythonhosted.org/packages/25/f6/ea118f94bdeb8e07fe2f1dfa8e1bc90e3a38257e865e5f8e21baa0694b2a/brewblox-stepper-0.1.1.dev9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d09f406ce228f7e208e0671c0177359e", "sha256": "f66ee6c30fedf68ca7edd2f94b4e35c4c396d79a65b1ac185737c413b4df7c0f"}, "downloads": -1, "filename": "brewblox-stepper-0.1.1.dev29.tar.gz", "has_sig": false, "md5_digest": "d09f406ce228f7e208e0671c0177359e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 46090, "upload_time": "2019-10-31T13:00:43", "upload_time_iso_8601": "2019-10-31T13:00:43.044342Z", "url": "https://files.pythonhosted.org/packages/69/44/901039eb0104ec975935bafc95c3bd5a702d13d73bd45c547ef840ded3ee/brewblox-stepper-0.1.1.dev29.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:20 2020"}