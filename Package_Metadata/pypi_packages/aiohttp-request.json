{"info": {"author": "Victor Kovtun", "author_email": "hellysmile@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "aiohttp_request\n===============\n\n:info: Global request for aiohttp server\n\n.. image:: https://travis-ci.org/hellysmile/aiohttp_request.svg?branch=master\n    :target: https://travis-ci.org/hellysmile/aiohttp_request\n\n.. image:: https://img.shields.io/pypi/v/aiohttp_request.svg\n    :target: https://pypi.python.org/pypi/aiohttp_request\n\n.. image:: https://codecov.io/gh/hellysmile/aiohttp_request/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/hellysmile/aiohttp_request\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip install aiohttp_request\n\nUsage\n-----\n\n.. code-block:: python\n\n    import asyncio\n\n    from aiohttp import web\n    from aiohttp_request import ThreadContext, middleware_factory, grequest, get_request\n\n\n    def thread():\n        assert grequest['sense'] == 42\n\n\n    async def task():\n        # grequest is `lazy` version of request\n        assert grequest['sense'] == 42\n\n        loop = asyncio.get_event_loop()\n        # works for threads as well with ThreadContext\n        await loop.run_in_executor(None, ThreadContext(thread))\n\n\n    async def hello(request):\n        # get_request is on-demand function to get current request\n        assert get_request() is request\n\n        request['sense'] = 42\n\n        # asyncio.Task is supported\n        await asyncio.ensure_future(task())\n\n        return web.Response(text=\"Hello, world\")\n\n\n    app = web.Application(middlewares=[middleware_factory()])\n    app.add_routes([web.get('/', hello)])\n    web.run_app(app)\n\nPython 3.7+ is required, there is no way to support older python versions!!!\n\nNotes\n-----\n\nThe library relies on `PEP 567 <https://www.python.org/dev/peps/pep-0567/>`_ and its `asyncio support <https://docs.python.org/3.7/library/contextvars.html#asyncio-support>`_\n\naiohttp-request works nicely with threads via `contextvars_executor <https://github.com/hellysmile/contextvars_executor>`_ , no `ThreadContext` is needed\n\n.. code-block:: python\n\n    import asyncio\n\n    from aiohttp import web\n    from aiohttp_request import middleware_factory, grequest\n    from contextvars_executor import ContextVarExecutor\n\n\n    def thread():\n        assert grequest['sense'] == 42\n\n\n    async def hello(request):\n        request['sense'] = 42\n\n        loop = asyncio.get_event_loop()\n        await loop.run_in_executor(None, thread)\n\n        return web.Response(text=\"Hello, world\")\n\n\n    loop = asyncio.get_event_loop()\n    loop.set_default_executor(ContextVarExecutor())\n    app = web.Application(middlewares=[middleware_factory()])\n    app.add_routes([web.get('/', hello)])\n    web.run_app(app)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hellysmile/aiohttp_request", "keywords": "aiohttp", "license": "", "maintainer": "", "maintainer_email": "", "name": "aiohttp-request", "package_url": "https://pypi.org/project/aiohttp-request/", "platform": "", "project_url": "https://pypi.org/project/aiohttp-request/", "project_urls": {"Homepage": "https://github.com/hellysmile/aiohttp_request"}, "release_url": "https://pypi.org/project/aiohttp-request/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Global request for aiohttp server", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>info:</th><td>Global request for aiohttp server</td>\n</tr>\n</tbody>\n</table>\n<a href=\"https://travis-ci.org/hellysmile/aiohttp_request\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/hellysmile/aiohttp_request.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5830b9450debe70851ce90634e1b8e7245718312/68747470733a2f2f7472617669732d63692e6f72672f68656c6c79736d696c652f61696f687474705f726571756573742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/aiohttp_request\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aiohttp_request.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3354f60b12c5c28c52595ba3fa96cdf7f1e2545/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f687474705f726571756573742e737667\"></a>\n<a href=\"https://codecov.io/gh/hellysmile/aiohttp_request\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/hellysmile/aiohttp_request/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/174098507eb0871fe50ca2acb8b5531726302a4e/68747470733a2f2f636f6465636f762e696f2f67682f68656c6c79736d696c652f61696f687474705f726571756573742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install aiohttp_request\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_request</span> <span class=\"kn\">import</span> <span class=\"n\">ThreadContext</span><span class=\"p\">,</span> <span class=\"n\">middleware_factory</span><span class=\"p\">,</span> <span class=\"n\">grequest</span><span class=\"p\">,</span> <span class=\"n\">get_request</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">thread</span><span class=\"p\">():</span>\n    <span class=\"k\">assert</span> <span class=\"n\">grequest</span><span class=\"p\">[</span><span class=\"s1\">'sense'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">task</span><span class=\"p\">():</span>\n    <span class=\"c1\"># grequest is `lazy` version of request</span>\n    <span class=\"k\">assert</span> <span class=\"n\">grequest</span><span class=\"p\">[</span><span class=\"s1\">'sense'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"c1\"># works for threads as well with ThreadContext</span>\n    <span class=\"k\">await</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_in_executor</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ThreadContext</span><span class=\"p\">(</span><span class=\"n\">thread</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"c1\"># get_request is on-demand function to get current request</span>\n    <span class=\"k\">assert</span> <span class=\"n\">get_request</span><span class=\"p\">()</span> <span class=\"ow\">is</span> <span class=\"n\">request</span>\n\n    <span class=\"n\">request</span><span class=\"p\">[</span><span class=\"s1\">'sense'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n    <span class=\"c1\"># asyncio.Task is supported</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">())</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Hello, world\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">middlewares</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">middleware_factory</span><span class=\"p\">()])</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_routes</span><span class=\"p\">([</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">hello</span><span class=\"p\">)])</span>\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<p>Python 3.7+ is required, there is no way to support older python versions!!!</p>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>The library relies on <a href=\"https://www.python.org/dev/peps/pep-0567/\" rel=\"nofollow\">PEP 567</a> and its <a href=\"https://docs.python.org/3.7/library/contextvars.html#asyncio-support\" rel=\"nofollow\">asyncio support</a></p>\n<p>aiohttp-request works nicely with threads via <a href=\"https://github.com/hellysmile/contextvars_executor\" rel=\"nofollow\">contextvars_executor</a> , no <cite>ThreadContext</cite> is needed</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_request</span> <span class=\"kn\">import</span> <span class=\"n\">middleware_factory</span><span class=\"p\">,</span> <span class=\"n\">grequest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contextvars_executor</span> <span class=\"kn\">import</span> <span class=\"n\">ContextVarExecutor</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">thread</span><span class=\"p\">():</span>\n    <span class=\"k\">assert</span> <span class=\"n\">grequest</span><span class=\"p\">[</span><span class=\"s1\">'sense'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">request</span><span class=\"p\">[</span><span class=\"s1\">'sense'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_in_executor</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">thread</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Hello, world\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">set_default_executor</span><span class=\"p\">(</span><span class=\"n\">ContextVarExecutor</span><span class=\"p\">())</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">middlewares</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">middleware_factory</span><span class=\"p\">()])</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_routes</span><span class=\"p\">([</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">hello</span><span class=\"p\">)])</span>\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4299165, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2d8e3975882d7b2474f638c8d52c9669", "sha256": "0499529a839d6f6c71ef5fcc60fa5fad87743d7d1abcd2c3b883df14e876aeff"}, "downloads": -1, "filename": "aiohttp_request-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2d8e3975882d7b2474f638c8d52c9669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2728, "upload_time": "2018-06-30T00:50:44", "upload_time_iso_8601": "2018-06-30T00:50:44.162780Z", "url": "https://files.pythonhosted.org/packages/8e/6f/132d3d77feb1234d867fa1e3328d1071b5fc535703bc3be969b554750987/aiohttp_request-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5c9799878916c88510fc8caf10bcb62e", "sha256": "e17701b995fccb036971bd82e7616e809ccb776bf61084c24f4f3bfbf54fdfbf"}, "downloads": -1, "filename": "aiohttp_request-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5c9799878916c88510fc8caf10bcb62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2903, "upload_time": "2018-09-22T09:16:35", "upload_time_iso_8601": "2018-09-22T09:16:35.245796Z", "url": "https://files.pythonhosted.org/packages/ee/a4/754f0aed1dccf724de3c593c441e9497ec2590ab8f523eba5ad188a307c7/aiohttp_request-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c9799878916c88510fc8caf10bcb62e", "sha256": "e17701b995fccb036971bd82e7616e809ccb776bf61084c24f4f3bfbf54fdfbf"}, "downloads": -1, "filename": "aiohttp_request-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5c9799878916c88510fc8caf10bcb62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2903, "upload_time": "2018-09-22T09:16:35", "upload_time_iso_8601": "2018-09-22T09:16:35.245796Z", "url": "https://files.pythonhosted.org/packages/ee/a4/754f0aed1dccf724de3c593c441e9497ec2590ab8f523eba5ad188a307c7/aiohttp_request-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:16 2020"}