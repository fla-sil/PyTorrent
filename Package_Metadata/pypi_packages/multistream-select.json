{"info": {"author": "Tiong Tay", "author_email": "tgtay@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "\n# py-multistream-select\n\n[![Travis CI](https://api.travis-ci.org/dheatovwil/py-multistream-select.svg?branch=master)](https://travis-ci.org/dheatovwil/py-multistream-select) \n[![codecov.io](https://codecov.io/gh/dheatovwil/py-multistream-select/branch/master/graph/badge.svg)](https://codecov.io/gh/dheatovwil/py-multistream-select)\n\n> an implementation of the multistream protocol in python\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Install\n\n\n`py-multistream-select` is a standard PyPI module which can be installed with:\n\n```sh\npip install multistream-select\n```\n\n## Usage\n\n### Example\n```python\nfrom multistream_select.multiselect import Multiselect\nfrom multistream_select.multiselect_client import MultiselectClient\n\nasync def client_get_protocol(host_info):\n  protocols = [ '/cats', '/dogs' ]\n  stream = func_to_create_stream(host_info)\n  client = MultiselectClient()\n  return await client.select_one_of(protocols, stream)\n\nasync def host_get_protocol(handlers):\n  stream = func_to_create_stream()\n  host = Multiselect()\n  for protocol in handlers:\n    host.add_handler(protocol, handlers[protocol])\n  return host.negotiate(stream)\n```\n\n## Contribute\n\nContributions welcome. Please check out [the issues](https://github.com/dheatovwil/py-multistream-select/issues).\n\nCheck out our [contributing document](https://github.com/multiformats/multiformats/blob/master/contributing.md) for more information on how we work, and about contributing in general. Please be aware that all interactions related to multiformats are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nSmall note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n\n## License\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dheatovwil/py-multistream-select", "keywords": "ipfs multistream-select", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "multistream-select", "package_url": "https://pypi.org/project/multistream-select/", "platform": "", "project_url": "https://pypi.org/project/multistream-select/", "project_urls": {"Homepage": "https://github.com/dheatovwil/py-multistream-select"}, "release_url": "https://pypi.org/project/multistream-select/0.1.3/", "requires_dist": ["check-manifest ; extra == 'dev'", "coverage ; extra == 'test'"], "requires_python": "", "summary": "an implementation of the multistream protocol in python", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-multistream-select</h1>\n<p><a href=\"https://travis-ci.org/dheatovwil/py-multistream-select\" rel=\"nofollow\"><img alt=\"Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ef932addc6343717fb1adfbc13f60b23fa5d68d/68747470733a2f2f6170692e7472617669732d63692e6f72672f64686561746f7677696c2f70792d6d756c746973747265616d2d73656c6563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/dheatovwil/py-multistream-select\" rel=\"nofollow\"><img alt=\"codecov.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e4735021083ea4853bb58f6a96be17833404603/68747470733a2f2f636f6465636f762e696f2f67682f64686561746f7677696c2f70792d6d756c746973747265616d2d73656c6563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<blockquote>\n<p>an implementation of the multistream protocol in python</p>\n</blockquote>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#contribute\" rel=\"nofollow\">Contribute</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Install</h2>\n<p><code>py-multistream-select</code> is a standard PyPI module which can be installed with:</p>\n<pre>pip install multistream-select\n</pre>\n<h2>Usage</h2>\n<h3>Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">multistream_select.multiselect</span> <span class=\"kn\">import</span> <span class=\"n\">Multiselect</span>\n<span class=\"kn\">from</span> <span class=\"nn\">multistream_select.multiselect_client</span> <span class=\"kn\">import</span> <span class=\"n\">MultiselectClient</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">client_get_protocol</span><span class=\"p\">(</span><span class=\"n\">host_info</span><span class=\"p\">):</span>\n  <span class=\"n\">protocols</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s1\">'/cats'</span><span class=\"p\">,</span> <span class=\"s1\">'/dogs'</span> <span class=\"p\">]</span>\n  <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">func_to_create_stream</span><span class=\"p\">(</span><span class=\"n\">host_info</span><span class=\"p\">)</span>\n  <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">MultiselectClient</span><span class=\"p\">()</span>\n  <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">select_one_of</span><span class=\"p\">(</span><span class=\"n\">protocols</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">host_get_protocol</span><span class=\"p\">(</span><span class=\"n\">handlers</span><span class=\"p\">):</span>\n  <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">func_to_create_stream</span><span class=\"p\">()</span>\n  <span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">Multiselect</span><span class=\"p\">()</span>\n  <span class=\"k\">for</span> <span class=\"n\">protocol</span> <span class=\"ow\">in</span> <span class=\"n\">handlers</span><span class=\"p\">:</span>\n    <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">add_handler</span><span class=\"p\">(</span><span class=\"n\">protocol</span><span class=\"p\">,</span> <span class=\"n\">handlers</span><span class=\"p\">[</span><span class=\"n\">protocol</span><span class=\"p\">])</span>\n  <span class=\"k\">return</span> <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">negotiate</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">)</span>\n</pre>\n<h2>Contribute</h2>\n<p>Contributions welcome. Please check out <a href=\"https://github.com/dheatovwil/py-multistream-select/issues\" rel=\"nofollow\">the issues</a>.</p>\n<p>Check out our <a href=\"https://github.com/multiformats/multiformats/blob/master/contributing.md\" rel=\"nofollow\">contributing document</a> for more information on how we work, and about contributing in general. Please be aware that all interactions related to multiformats are subject to the IPFS <a href=\"https://github.com/ipfs/community/blob/master/code-of-conduct.md\" rel=\"nofollow\">Code of Conduct</a>.</p>\n<p>Small note: If editing the README, please conform to the <a href=\"https://github.com/RichardLitt/standard-readme\" rel=\"nofollow\">standard-readme</a> specification.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n\n          </div>"}, "last_serial": 4931040, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "e7cced21086fe9df3bcc60d4925b3192", "sha256": "a131e8babefdd5fbae6988761e9d7bc365ad218286989a7f486e55f42b72da21"}, "downloads": -1, "filename": "multistream_select-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e7cced21086fe9df3bcc60d4925b3192", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11298, "upload_time": "2019-01-08T07:03:56", "upload_time_iso_8601": "2019-01-08T07:03:56.814986Z", "url": "https://files.pythonhosted.org/packages/0e/1b/682680217de3350924a11b2d647813636de69790440461aae9078e0f32eb/multistream_select-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f51488b1dba1a3dc5140a633d342d1f9", "sha256": "c306e5d9c975000d699f44102429b99fe990423628e410a78d87d2c57fd5ac18"}, "downloads": -1, "filename": "multistream_select-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f51488b1dba1a3dc5140a633d342d1f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11303, "upload_time": "2019-03-12T16:52:14", "upload_time_iso_8601": "2019-03-12T16:52:14.469144Z", "url": "https://files.pythonhosted.org/packages/56/95/d64936cb6470c90b74dfad6995d96e0725eae2c1cafe57532d5f0f547a0a/multistream_select-0.1.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f51488b1dba1a3dc5140a633d342d1f9", "sha256": "c306e5d9c975000d699f44102429b99fe990423628e410a78d87d2c57fd5ac18"}, "downloads": -1, "filename": "multistream_select-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f51488b1dba1a3dc5140a633d342d1f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11303, "upload_time": "2019-03-12T16:52:14", "upload_time_iso_8601": "2019-03-12T16:52:14.469144Z", "url": "https://files.pythonhosted.org/packages/56/95/d64936cb6470c90b74dfad6995d96e0725eae2c1cafe57532d5f0f547a0a/multistream_select-0.1.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:20 2020"}