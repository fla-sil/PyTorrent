{"info": {"author": "Mike Taylor", "author_email": "mike@taylortree.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "statio\n======\n**statio** is a statistical Python libary geared towards running computations across\na sliding window of values.\n\n:Download: http://pypi.python.org/pypi/statio/0.0.2\n:Source: https://github.com/TaylorTree/statio\n\n\nUsage Model\n-----------\nMost statistical libraries are based on a single point in time.  The -1 index of a list of values is the point in time in which the calculation is made.\n\n**statio** is based on multiple points in time.  Each index is considered a point in time in which the calculation is made.\n\n* Useful for simulation application types.\n* Useful for plotting or graphing applications types.\n\n\nOverview\n--------\nThe major functions of **statio**:\n\n* **sum_values():**\n    Builds a list of Running Sums over a sliding list of values.\n\n* **sma_values():**\n    Builds a list of Simple Moving Averages over a sliding list of values.\n\n* **ema_values():**\n    Builds a list of Exponential Moving Averages over a sliding list of values.\n\n* **wwma_values():**\n    Builds a list of Welles Wilder Moving Averages over a sliding list of values.\n\n* **psa_values():**\n    Builds a list of Power Sum Averages over a sliding list of values.\n\n* **varp_values():**\n    Builds a list of Population Variances over a sliding list of values.\n\n* **var_values():**\n    Builds a list of Sample Variances over a sliding list of values.\n\n* **stdp_values():**\n    Builds a list of Population Standard Deviations over a sliding list of values.\n\n* **std_values():**\n    Builds a list of Sample Standard Deviations over a sliding list of values.\n\n* **max_values():**\n    Builds a list of the Maximum Values over a sliding list of values.\n\n* **min_values():**\n    Builds a list of the Minimum Values over a sliding list of values.\n    \n* **top_values():**\n    Builds a list of the Top X Values over a sliding list of values.\n\n* **bottom_values():**\n    Builds a list of the Bottom X Values over a sliding list of values.\n\n\nLicense\n-------\nMade available under the MIT License.\n\n\nUsage\n-----\nImport the library:\n\n>>> import statio\n\n1. Build list of running **sums** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> statio.sum_values(values, 3)\n[34, 64, 93, 93, 101, 97, 98]\n\n2. Build list of **Simple Moving Averages** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.sma_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['34.00', '32.00', '31.00', '31.00', '33.67', '32.33', '32.67']\n\n3. Build list of **Exponential Moving Averages** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.ema_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['34.00', '32.00', '31.00', '32.50', '35.25', '30.13', '32.56']\n\n4. Build list of **Welles Wilder Averages** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.wwma_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['34.00', '32.00', '31.00', '32.00', '34.00', '31.00', '32.33']\n\n5. Build list of **Population Variances** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.varp_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['0.00', '4.00', '4.67', '4.67', '13.56', '29.56', '30.89']\n\n6. Build list of **Sample Variances** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.var_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['0.00', '8.00', '7.00', '7.00', '20.33', '44.33', '46.33']\n\n7. Build list of **Population Standard Deviations** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.stdp_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['0.00', '2.00', '2.16', '2.16', '3.68', '5.44', '5.56']\n\n8. Build list of **Sample Standard Deviations** using a 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.std_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['0.00', '2.83', '2.65', '2.65', '4.51', '6.66', '6.81']\n\n9. Build list of the **Maximum Value** of 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> results = statio.max_values(values, 3)\n>>> [\"%.2f\" % x for x in results]\n['34.00', '34.00', '34.00', '34.00', '38.00', '38.00', '38.00']\n\n10. Build list of the **Minimum Value** of 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> statio.min_values(values, 3)\n[34, 30, 29, 29, 29, 25, 25]\n\n11. Build list of the **Top X Values** of 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> statio.top_values(values, 3, 2)\n[[34], [30, 34], [30, 34], [30, 34], [34, 38], [34, 38], [35, 38]]\n\n12. Build list of the **Bottom X Values** of 3 period window:\n\n>>> values = [34, 30, 29, 34, 38, 25, 35]\n>>> statio.bottom_values(values, 3, 2)\n[[34], [30, 34], [29, 30], [29, 30], [29, 34], [25, 34], [25, 35]]\n\n\nRoadmap\n-------\n* Add median_values.\n* Add recentmax_values: the index of the most recent max value.\n* Add sincemax_values: the number of bars since recent max value.\n* Add recentmin_values: the index of the most recent min value.\n* Add sincemin_values: the number of bars since recent min value.\n* Add covariance, correlation, alpha, beta computations.\n\n\nFor additional information, please email:\n    mike@taylortree.com", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/taylortree/statio", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "statio", "package_url": "https://pypi.org/project/statio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/statio/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/taylortree/statio"}, "release_url": "https://pypi.org/project/statio/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "The statio statistical library in Python.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>statio</strong> is a statistical Python libary geared towards running computations across\na sliding window of values.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Download:</th><td><a href=\"http://pypi.python.org/pypi/statio/0.0.2\" rel=\"nofollow\">http://pypi.python.org/pypi/statio/0.0.2</a></td>\n</tr>\n<tr><th>Source:</th><td><a href=\"https://github.com/TaylorTree/statio\" rel=\"nofollow\">https://github.com/TaylorTree/statio</a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"usage-model\">\n<h2>Usage Model</h2>\n<p>Most statistical libraries are based on a single point in time.  The -1 index of a list of values is the point in time in which the calculation is made.</p>\n<p><strong>statio</strong> is based on multiple points in time.  Each index is considered a point in time in which the calculation is made.</p>\n<ul>\n<li>Useful for simulation application types.</li>\n<li>Useful for plotting or graphing applications types.</li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>The major functions of <strong>statio</strong>:</p>\n<ul>\n<li><dl>\n<dt><strong>sum_values():</strong></dt>\n<dd>Builds a list of Running Sums over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>sma_values():</strong></dt>\n<dd>Builds a list of Simple Moving Averages over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>ema_values():</strong></dt>\n<dd>Builds a list of Exponential Moving Averages over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>wwma_values():</strong></dt>\n<dd>Builds a list of Welles Wilder Moving Averages over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>psa_values():</strong></dt>\n<dd>Builds a list of Power Sum Averages over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>varp_values():</strong></dt>\n<dd>Builds a list of Population Variances over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>var_values():</strong></dt>\n<dd>Builds a list of Sample Variances over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>stdp_values():</strong></dt>\n<dd>Builds a list of Population Standard Deviations over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>std_values():</strong></dt>\n<dd>Builds a list of Sample Standard Deviations over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>max_values():</strong></dt>\n<dd>Builds a list of the Maximum Values over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>min_values():</strong></dt>\n<dd>Builds a list of the Minimum Values over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>top_values():</strong></dt>\n<dd>Builds a list of the Top X Values over a sliding list of values.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>bottom_values():</strong></dt>\n<dd>Builds a list of the Bottom X Values over a sliding list of values.</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Made available under the MIT License.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Import the library:</p>\n<pre>&gt;&gt;&gt; import statio\n</pre>\n<ol>\n<li>Build list of running <strong>sums</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; statio.sum_values(values, 3)\n[34, 64, 93, 93, 101, 97, 98]\n</pre>\n<ol>\n<li>Build list of <strong>Simple Moving Averages</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.sma_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['34.00', '32.00', '31.00', '31.00', '33.67', '32.33', '32.67']\n</pre>\n<ol>\n<li>Build list of <strong>Exponential Moving Averages</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.ema_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['34.00', '32.00', '31.00', '32.50', '35.25', '30.13', '32.56']\n</pre>\n<ol>\n<li>Build list of <strong>Welles Wilder Averages</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.wwma_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['34.00', '32.00', '31.00', '32.00', '34.00', '31.00', '32.33']\n</pre>\n<ol>\n<li>Build list of <strong>Population Variances</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.varp_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['0.00', '4.00', '4.67', '4.67', '13.56', '29.56', '30.89']\n</pre>\n<ol>\n<li>Build list of <strong>Sample Variances</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.var_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['0.00', '8.00', '7.00', '7.00', '20.33', '44.33', '46.33']\n</pre>\n<ol>\n<li>Build list of <strong>Population Standard Deviations</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.stdp_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['0.00', '2.00', '2.16', '2.16', '3.68', '5.44', '5.56']\n</pre>\n<ol>\n<li>Build list of <strong>Sample Standard Deviations</strong> using a 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.std_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['0.00', '2.83', '2.65', '2.65', '4.51', '6.66', '6.81']\n</pre>\n<ol>\n<li>Build list of the <strong>Maximum Value</strong> of 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; results = statio.max_values(values, 3)\n&gt;&gt;&gt; [\"%.2f\" % x for x in results]\n['34.00', '34.00', '34.00', '34.00', '38.00', '38.00', '38.00']\n</pre>\n<ol>\n<li>Build list of the <strong>Minimum Value</strong> of 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; statio.min_values(values, 3)\n[34, 30, 29, 29, 29, 25, 25]\n</pre>\n<ol>\n<li>Build list of the <strong>Top X Values</strong> of 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; statio.top_values(values, 3, 2)\n[[34], [30, 34], [30, 34], [30, 34], [34, 38], [34, 38], [35, 38]]\n</pre>\n<ol>\n<li>Build list of the <strong>Bottom X Values</strong> of 3 period window:</li>\n</ol>\n<pre>&gt;&gt;&gt; values = [34, 30, 29, 34, 38, 25, 35]\n&gt;&gt;&gt; statio.bottom_values(values, 3, 2)\n[[34], [30, 34], [29, 30], [29, 30], [29, 34], [25, 34], [25, 35]]\n</pre>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<ul>\n<li>Add median_values.</li>\n<li>Add recentmax_values: the index of the most recent max value.</li>\n<li>Add sincemax_values: the number of bars since recent max value.</li>\n<li>Add recentmin_values: the index of the most recent min value.</li>\n<li>Add sincemin_values: the number of bars since recent min value.</li>\n<li>Add covariance, correlation, alpha, beta computations.</li>\n</ul>\n<dl>\n<dt>For additional information, please email:</dt>\n<dd><a href=\"mailto:mike%40taylortree.com\">mike<span>@</span>taylortree<span>.</span>com</a></dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 800095, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a7e853d07c2227e9aecf45c292ce73dd", "sha256": "682640c80ccddc29c856e1b10473565150c13567d1c8b363564a92469ade516f"}, "downloads": -1, "filename": "statio-0.0.1.win32.exe", "has_sig": false, "md5_digest": "a7e853d07c2227e9aecf45c292ce73dd", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 207313, "upload_time": "2011-11-22T05:36:19", "upload_time_iso_8601": "2011-11-22T05:36:19.339493Z", "url": "https://files.pythonhosted.org/packages/fb/14/6869ecd913161c4e0e03f85b7bd03dabb74cc290da913ac97a349f490fb9/statio-0.0.1.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2122ed6cb69eb1a36d135832bf490ca", "sha256": "3bae239df505ad52ae5f3f4c6e439b0d458be6426b9f2978d994a9e510a1153e"}, "downloads": -1, "filename": "statio-0.0.1.zip", "has_sig": false, "md5_digest": "a2122ed6cb69eb1a36d135832bf490ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10828, "upload_time": "2011-11-22T05:36:16", "upload_time_iso_8601": "2011-11-22T05:36:16.713074Z", "url": "https://files.pythonhosted.org/packages/d0/9f/54801efbcafc342c7215e53834f59027b17d28701a3360aee9f4ae280382/statio-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1f93c0c3a8ad54da57077f9bb2df2e56", "sha256": "627ad75f62cebfc0a17cc3c0473c3dd3d1d75adf4e19e175f3f26523cc698e26"}, "downloads": -1, "filename": "statio-0.0.2-py2.6.egg", "has_sig": false, "md5_digest": "1f93c0c3a8ad54da57077f9bb2df2e56", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10435, "upload_time": "2012-08-22T04:06:07", "upload_time_iso_8601": "2012-08-22T04:06:07.875091Z", "url": "https://files.pythonhosted.org/packages/04/26/c13bd47dddf22c64c7fb3d3ed87fc9ca450d82f0a56bb360a71a2abc7260/statio-0.0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbf13b8707a0fa43c9a3f4e81696b6a6", "sha256": "4cfc82399a24afd4aa312aaea8c63900516202d6e8bf0b8b358513e017515c09"}, "downloads": -1, "filename": "statio-0.0.2.win32.exe", "has_sig": false, "md5_digest": "fbf13b8707a0fa43c9a3f4e81696b6a6", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 207660, "upload_time": "2012-08-22T04:06:10", "upload_time_iso_8601": "2012-08-22T04:06:10.914011Z", "url": "https://files.pythonhosted.org/packages/0d/5e/22d98776f63d923ef1bf8956f1e615ff17c11b537ef4387609fa402c5758/statio-0.0.2.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d48ae514f2aba887e542f9061a3735a", "sha256": "41330e2e9b54cca72657f4ecb2d293d3241d7a64eef6df3c3876d06dd42dcf99"}, "downloads": -1, "filename": "statio-0.0.2.zip", "has_sig": false, "md5_digest": "0d48ae514f2aba887e542f9061a3735a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11479, "upload_time": "2012-08-22T04:06:05", "upload_time_iso_8601": "2012-08-22T04:06:05.179049Z", "url": "https://files.pythonhosted.org/packages/b2/b7/03b9095ae7bfb2819e1ea9e8faeca64e301f2f91ca57c2ae717afe2a3001/statio-0.0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f93c0c3a8ad54da57077f9bb2df2e56", "sha256": "627ad75f62cebfc0a17cc3c0473c3dd3d1d75adf4e19e175f3f26523cc698e26"}, "downloads": -1, "filename": "statio-0.0.2-py2.6.egg", "has_sig": false, "md5_digest": "1f93c0c3a8ad54da57077f9bb2df2e56", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10435, "upload_time": "2012-08-22T04:06:07", "upload_time_iso_8601": "2012-08-22T04:06:07.875091Z", "url": "https://files.pythonhosted.org/packages/04/26/c13bd47dddf22c64c7fb3d3ed87fc9ca450d82f0a56bb360a71a2abc7260/statio-0.0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbf13b8707a0fa43c9a3f4e81696b6a6", "sha256": "4cfc82399a24afd4aa312aaea8c63900516202d6e8bf0b8b358513e017515c09"}, "downloads": -1, "filename": "statio-0.0.2.win32.exe", "has_sig": false, "md5_digest": "fbf13b8707a0fa43c9a3f4e81696b6a6", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 207660, "upload_time": "2012-08-22T04:06:10", "upload_time_iso_8601": "2012-08-22T04:06:10.914011Z", "url": "https://files.pythonhosted.org/packages/0d/5e/22d98776f63d923ef1bf8956f1e615ff17c11b537ef4387609fa402c5758/statio-0.0.2.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d48ae514f2aba887e542f9061a3735a", "sha256": "41330e2e9b54cca72657f4ecb2d293d3241d7a64eef6df3c3876d06dd42dcf99"}, "downloads": -1, "filename": "statio-0.0.2.zip", "has_sig": false, "md5_digest": "0d48ae514f2aba887e542f9061a3735a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11479, "upload_time": "2012-08-22T04:06:05", "upload_time_iso_8601": "2012-08-22T04:06:05.179049Z", "url": "https://files.pythonhosted.org/packages/b2/b7/03b9095ae7bfb2819e1ea9e8faeca64e301f2f91ca57c2ae717afe2a3001/statio-0.0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:02:24 2020"}