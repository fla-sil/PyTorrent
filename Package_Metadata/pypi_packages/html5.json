{"info": {"author": "James Graham", "author_email": "james@hoppipolla.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: HTML"], "description": "html5lib\n========\n\n.. image:: https://travis-ci.org/html5lib/html5lib-python.png?branch=master\n  :target: https://travis-ci.org/html5lib/html5lib-python\n\nhtml5lib is a pure-python library for parsing HTML. It is designed to\nconform to the WHATWG HTML specification, as is implemented by all major\nweb browsers.\n\n\nUsage\n-----\n\nSimple usage follows this pattern:\n\n.. code-block:: python\n\n  import html5lib\n  with open(\"mydocument.html\", \"rb\") as f:\n      document = html5lib.parse(f)\n\nor:\n\n.. code-block:: python\n\n  import html5lib\n  document = html5lib.parse(\"<p>Hello World!\")\n\nBy default, the ``document`` will be an ``xml.etree`` element instance.\nWhenever possible, html5lib chooses the accelerated ``ElementTree``\nimplementation (i.e. ``xml.etree.cElementTree`` on Python 2.x).\n\nTwo other tree types are supported: ``xml.dom.minidom`` and\n``lxml.etree``. To use an alternative format, specify the name of\na treebuilder:\n\n.. code-block:: python\n\n  import html5lib\n  with open(\"mydocument.html\", \"rb\") as f:\n      lxml_etree_document = html5lib.parse(f, treebuilder=\"lxml\")\n\nWhen using with ``urllib2`` (Python 2), the charset from HTTP should be\npass into html5lib as follows:\n\n.. code-block:: python\n\n  from contextlib import closing\n  from urllib2 import urlopen\n  import html5lib\n\n  with closing(urlopen(\"http://example.com/\")) as f:\n      document = html5lib.parse(f, transport_encoding=f.info().getparam(\"charset\"))\n\nWhen using with ``urllib.request`` (Python 3), the charset from HTTP\nshould be pass into html5lib as follows:\n\n.. code-block:: python\n\n  from urllib.request import urlopen\n  import html5lib\n\n  with urlopen(\"http://example.com/\") as f:\n      document = html5lib.parse(f, transport_encoding=f.info().get_content_charset())\n\nTo have more control over the parser, create a parser object explicitly.\nFor instance, to make the parser raise exceptions on parse errors, use:\n\n.. code-block:: python\n\n  import html5lib\n  with open(\"mydocument.html\", \"rb\") as f:\n      parser = html5lib.HTMLParser(strict=True)\n      document = parser.parse(f)\n\nWhen you're instantiating parser objects explicitly, pass a treebuilder\nclass as the ``tree`` keyword argument to use an alternative document\nformat:\n\n.. code-block:: python\n\n  import html5lib\n  parser = html5lib.HTMLParser(tree=html5lib.getTreeBuilder(\"dom\"))\n  minidom_document = parser.parse(\"<p>Hello World!\")\n\nMore documentation is available at https://html5lib.readthedocs.io/.\n\n\nInstallation\n------------\n\nhtml5lib works on CPython 2.6+, CPython 3.3+ and PyPy.  To install it,\nuse:\n\n.. code-block:: bash\n\n    $ pip install html5lib\n\n\nOptional Dependencies\n---------------------\n\nThe following third-party libraries may be used for additional\nfunctionality:\n\n- ``datrie`` can be used under CPython to improve parsing performance\n  (though in almost all cases the improvement is marginal);\n\n- ``lxml`` is supported as a tree format (for both building and\n  walking) under CPython (but *not* PyPy where it is known to cause\n  segfaults);\n\n- ``genshi`` has a treewalker (but not builder); and\n\n- ``chardet`` can be used as a fallback when character encoding cannot\n  be determined.\n\n\nBugs\n----\n\nPlease report any bugs on the `issue tracker\n<https://github.com/html5lib/html5lib-python/issues>`_.\n\n\nTests\n-----\n\nUnit tests require the ``pytest`` and ``mock`` libraries and can be\nrun using the ``py.test`` command in the root directory;\n``ordereddict`` is required under Python 2.6. All should pass.\n\nTest data are contained in a separate `html5lib-tests\n<https://github.com/html5lib/html5lib-tests>`_ repository and included\nas a submodule, thus for git checkouts they must be initialized::\n\n  $ git submodule init\n  $ git submodule update\n\nIf you have all compatible Python implementations available on your\nsystem, you can run tests on all of them using the ``tox`` utility,\nwhich can be found on PyPI.\n\n\nQuestions?\n----------\n\nThere's a mailing list available for support on Google Groups,\n`html5lib-discuss <http://groups.google.com/group/html5lib-discuss>`_,\nthough you may get a quicker response asking on IRC in `#whatwg on\nirc.freenode.net <http://wiki.whatwg.org/wiki/IRC>`_.\n\nChange Log\n----------\n\n0.99999999/1.0b9\n~~~~~~~~~~~~~~~~\n\nReleased on July 14, 2016\n\n* **Added ordereddict as a mandatory dependency on Python 2.6.**\n\n* Added ``lxml``, ``genshi``, ``datrie``, ``charade``, and ``all``\n  extras that will do the right thing based on the specific\n  interpreter implementation.\n\n* Now requires the ``mock`` package for the testsuite.\n\n* Cease supporting DATrie under PyPy.\n\n* **Remove ``PullDOM`` support, as this hasn't ever been properly\n  tested, doesn't entirely work, and as far as I can tell is\n  completely unused by anyone.**\n\n* Move testsuite to ``py.test``.\n\n* **Fix #124: move to webencodings for decoding the input byte stream;\n  this makes html5lib compliant with the Encoding Standard, and\n  introduces a required dependency on webencodings.**\n\n* **Cease supporting Python 3.2 (in both CPython and PyPy forms).**\n\n* **Fix comments containing double-dash with lxml 3.5 and above.**\n\n* **Use scripting disabled by default (as we don't implement\n  scripting).**\n\n* **Fix #11, avoiding the XSS bug potentially caused by serializer\n  allowing attribute values to be escaped out of in old browser versions,\n  changing the quote_attr_values option on serializer to take one of\n  three values, \"always\" (the old True value), \"legacy\" (the new option,\n  and the new default), and \"spec\" (the old False value, and the old\n  default).**\n\n* **Fix #72 by rewriting the sanitizer to apply only to treewalkers\n  (instead of the tokenizer); as such, this will require amending all\n  callers of it to use it via the treewalker API.**\n\n* **Drop support of charade, now that chardet is supported once more.**\n\n* **Replace the charset keyword argument on parse and related methods\n  with a set of keyword arguments: override_encoding, transport_encoding,\n  same_origin_parent_encoding, likely_encoding, and default_encoding.**\n\n* **Move filters._base, treebuilder._base, and treewalkers._base to .base\n  to clarify their status as public.**\n\n* **Get rid of the sanitizer package. Merge sanitizer.sanitize into the\n  sanitizer.htmlsanitizer module and move that to saniziter. This means\n  anyone who used sanitizer.sanitize or sanitizer.HTMLSanitizer needs no\n  code changes.**\n\n* **Rename treewalkers.lxmletree to .etree_lxml and\n  treewalkers.genshistream to .genshi to have a consistent API.**\n\n* Move a whole load of stuff (inputstream, ihatexml, trie, tokenizer,\n  utils) to be underscore prefixed to clarify their status as private.\n\n\n0.9999999/1.0b8\n~~~~~~~~~~~~~~~\n\nReleased on September 10, 2015\n\n* Fix #195: fix the sanitizer to drop broken URLs (it threw an\n  exception between 0.9999 and 0.999999).\n\n\n0.999999/1.0b7\n~~~~~~~~~~~~~~\n\nReleased on July 7, 2015\n\n* Fix #189: fix the sanitizer to allow relative URLs again (as it did\n  prior to 0.9999/1.0b5).\n\n\n0.99999/1.0b6\n~~~~~~~~~~~~~\n\nReleased on April 30, 2015\n\n* Fix #188: fix the sanitizer to not throw an exception when sanitizing\n  bogus data URLs.\n\n\n0.9999/1.0b5\n~~~~~~~~~~~~\n\nReleased on April 29, 2015\n\n* Fix #153: Sanitizer fails to treat some attributes as URLs. Despite how\n  this sounds, this has no known security implications.  No known version\n  of IE (5.5 to current), Firefox (3 to current), Safari (6 to current),\n  Chrome (1 to current), or Opera (12 to current) will run any script\n  provided in these attributes.\n\n* Pass error message to the ParseError exception in strict parsing mode.\n\n* Allow data URIs in the sanitizer, with a whitelist of content-types.\n\n* Add support for Python implementations that don't support lone\n  surrogates (read: Jython). Fixes #2.\n\n* Remove localization of error messages. This functionality was totally\n  unused (and untested that everything was localizable), so we may as\n  well follow numerous browsers in not supporting translating technical\n  strings.\n\n* Expose treewalkers.pprint as a public API.\n\n* Add a documentEncoding property to HTML5Parser, fix #121.\n\n\n0.999\n~~~~~\n\nReleased on December 23, 2013\n\n* Fix #127: add work-around for CPython issue #20007: .read(0) on\n  http.client.HTTPResponse drops the rest of the content.\n\n* Fix #115: lxml treewalker can now deal with fragments containing, at\n  their root level, text nodes with non-ASCII characters on Python 2.\n\n\n0.99\n~~~~\n\nReleased on September 10, 2013\n\n* No library changes from 1.0b3; released as 0.99 as pip has changed\n  behaviour from 1.4 to avoid installing pre-release versions per\n  PEP 440.\n\n\n1.0b3\n~~~~~\n\nReleased on July 24, 2013\n\n* Removed ``RecursiveTreeWalker`` from ``treewalkers._base``. Any\n  implementation using it should be moved to\n  ``NonRecursiveTreeWalker``, as everything bundled with html5lib has\n  for years.\n\n* Fix #67 so that ``BufferedStream`` to correctly returns a bytes\n  object, thereby fixing any case where html5lib is passed a\n  non-seekable RawIOBase-like object.\n\n\n1.0b2\n~~~~~\n\nReleased on June 27, 2013\n\n* Removed reordering of attributes within the serializer. There is now\n  an ``alphabetical_attributes`` option which preserves the previous\n  behaviour through a new filter. This allows attribute order to be\n  preserved through html5lib if the tree builder preserves order.\n\n* Removed ``dom2sax`` from DOM treebuilders. It has been replaced by\n  ``treeadapters.sax.to_sax`` which is generic and supports any\n  treewalker; it also resolves all known bugs with ``dom2sax``.\n\n* Fix treewalker assertions on hitting bytes strings on\n  Python 2. Previous to 1.0b1, treewalkers coped with mixed\n  bytes/unicode data on Python 2; this reintroduces this prior\n  behaviour on Python 2. Behaviour is unchanged on Python 3.\n\n\n1.0b1\n~~~~~\n\nReleased on May 17, 2013\n\n* Implementation updated to implement the `HTML specification\n  <http://www.whatwg.org/specs/web-apps/current-work/>`_ as of 5th May\n  2013 (`SVN <http://svn.whatwg.org/webapps/>`_ revision r7867).\n\n* Python 3.2+ supported in a single codebase using the ``six`` library.\n\n* Removed support for Python 2.5 and older.\n\n* Removed the deprecated Beautiful Soup 3 treebuilder.\n  ``beautifulsoup4`` can use ``html5lib`` as a parser instead. Note that\n  since it doesn't support namespaces, foreign content like SVG and\n  MathML is parsed incorrectly.\n\n* Removed ``simpletree`` from the package. The default tree builder is\n  now ``etree`` (using the ``xml.etree.cElementTree`` implementation if\n  available, and ``xml.etree.ElementTree`` otherwise).\n\n* Removed the ``XHTMLSerializer`` as it never actually guaranteed its\n  output was well-formed XML, and hence provided little of use.\n\n* Removed default DOM treebuilder, so ``html5lib.treebuilders.dom`` is no\n  longer supported. ``html5lib.treebuilders.getTreeBuilder(\"dom\")`` will\n  return the default DOM treebuilder, which uses ``xml.dom.minidom``.\n\n* Optional heuristic character encoding detection now based on\n  ``charade`` for Python 2.6 - 3.3 compatibility.\n\n* Optional ``Genshi`` treewalker support fixed.\n\n* Many bugfixes, including:\n\n  * #33: null in attribute value breaks XML AttValue;\n\n  * #4: nested, indirect descendant, <button> causes infinite loop;\n\n  * `Google Code 215\n    <http://code.google.com/p/html5lib/issues/detail?id=215>`_: Properly\n    detect seekable streams;\n\n  * `Google Code 206\n    <http://code.google.com/p/html5lib/issues/detail?id=206>`_: add\n    support for <video preload=...>, <audio preload=...>;\n\n  * `Google Code 205\n    <http://code.google.com/p/html5lib/issues/detail?id=205>`_: add\n    support for <video poster=...>;\n\n  * `Google Code 202\n    <http://code.google.com/p/html5lib/issues/detail?id=202>`_: Unicode\n    file breaks InputStream.\n\n* Source code is now mostly PEP 8 compliant.\n\n* Test harness has been improved and now depends on ``nose``.\n\n* Documentation updated and moved to https://html5lib.readthedocs.io/.\n\n\n0.95\n~~~~\n\nReleased on February 11, 2012\n\n\n0.90\n~~~~\n\nReleased on January 17, 2010\n\n\n0.11.1\n~~~~~~\n\nReleased on June 12, 2008\n\n\n0.11\n~~~~\n\nReleased on June 10, 2008\n\n\n0.10\n~~~~\n\nReleased on October 7, 2007\n\n\n0.9\n~~~\n\nReleased on March 11, 2007\n\n\n0.2\n~~~\n\nReleased on January 8, 2007", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/html5lib/html5lib-python", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "html5", "package_url": "https://pypi.org/project/html5/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/html5/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/html5lib/html5lib-python"}, "release_url": "https://pypi.org/project/html5/0.0.9/", "requires_dist": null, "requires_python": null, "summary": "HTML parser based on the WHATWG HTML specification", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/html5lib/html5lib-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/html5lib/html5lib-python.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc5df5483ca0751b8d098fce31299b61bce620bc/68747470733a2f2f7472617669732d63692e6f72672f68746d6c356c69622f68746d6c356c69622d707974686f6e2e706e673f6272616e63683d6d6173746572\"></a>\n<p>html5lib is a pure-python library for parsing HTML. It is designed to\nconform to the WHATWG HTML specification, as is implemented by all major\nweb browsers.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Simple usage follows this pattern:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"mydocument.html\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre>\n<p>or:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;p&gt;Hello World!\"</span><span class=\"p\">)</span>\n</pre>\n<p>By default, the <tt>document</tt> will be an <tt>xml.etree</tt> element instance.\nWhenever possible, html5lib chooses the accelerated <tt>ElementTree</tt>\nimplementation (i.e. <tt>xml.etree.cElementTree</tt> on Python 2.x).</p>\n<p>Two other tree types are supported: <tt>xml.dom.minidom</tt> and\n<tt>lxml.etree</tt>. To use an alternative format, specify the name of\na treebuilder:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"mydocument.html\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">lxml_etree_document</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">treebuilder</span><span class=\"o\">=</span><span class=\"s2\">\"lxml\"</span><span class=\"p\">)</span>\n</pre>\n<p>When using with <tt>urllib2</tt> (Python 2), the charset from HTTP should be\npass into html5lib as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">contextlib</span> <span class=\"kn\">import</span> <span class=\"n\">closing</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib2</span> <span class=\"kn\">import</span> <span class=\"n\">urlopen</span>\n<span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n\n<span class=\"k\">with</span> <span class=\"n\">closing</span><span class=\"p\">(</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.com/\"</span><span class=\"p\">))</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">transport_encoding</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">getparam</span><span class=\"p\">(</span><span class=\"s2\">\"charset\"</span><span class=\"p\">))</span>\n</pre>\n<p>When using with <tt>urllib.request</tt> (Python 3), the charset from HTTP\nshould be pass into html5lib as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">urllib.request</span> <span class=\"kn\">import</span> <span class=\"n\">urlopen</span>\n<span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n\n<span class=\"k\">with</span> <span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.com/\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">transport_encoding</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_content_charset</span><span class=\"p\">())</span>\n</pre>\n<p>To have more control over the parser, create a parser object explicitly.\nFor instance, to make the parser raise exceptions on parse errors, use:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"mydocument.html\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">HTMLParser</span><span class=\"p\">(</span><span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre>\n<p>When you\u2019re instantiating parser objects explicitly, pass a treebuilder\nclass as the <tt>tree</tt> keyword argument to use an alternative document\nformat:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">html5lib</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">HTMLParser</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">=</span><span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">getTreeBuilder</span><span class=\"p\">(</span><span class=\"s2\">\"dom\"</span><span class=\"p\">))</span>\n<span class=\"n\">minidom_document</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;p&gt;Hello World!\"</span><span class=\"p\">)</span>\n</pre>\n<p>More documentation is available at <a href=\"https://html5lib.readthedocs.io/\" rel=\"nofollow\">https://html5lib.readthedocs.io/</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>html5lib works on CPython 2.6+, CPython 3.3+ and PyPy.  To install it,\nuse:</p>\n<pre>$ pip install html5lib\n</pre>\n</div>\n<div id=\"optional-dependencies\">\n<h2>Optional Dependencies</h2>\n<p>The following third-party libraries may be used for additional\nfunctionality:</p>\n<ul>\n<li><tt>datrie</tt> can be used under CPython to improve parsing performance\n(though in almost all cases the improvement is marginal);</li>\n<li><tt>lxml</tt> is supported as a tree format (for both building and\nwalking) under CPython (but <em>not</em> PyPy where it is known to cause\nsegfaults);</li>\n<li><tt>genshi</tt> has a treewalker (but not builder); and</li>\n<li><tt>chardet</tt> can be used as a fallback when character encoding cannot\nbe determined.</li>\n</ul>\n</div>\n<div id=\"bugs\">\n<h2>Bugs</h2>\n<p>Please report any bugs on the <a href=\"https://github.com/html5lib/html5lib-python/issues\" rel=\"nofollow\">issue tracker</a>.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Unit tests require the <tt>pytest</tt> and <tt>mock</tt> libraries and can be\nrun using the <tt>py.test</tt> command in the root directory;\n<tt>ordereddict</tt> is required under Python 2.6. All should pass.</p>\n<p>Test data are contained in a separate <a href=\"https://github.com/html5lib/html5lib-tests\" rel=\"nofollow\">html5lib-tests</a> repository and included\nas a submodule, thus for git checkouts they must be initialized:</p>\n<pre>$ git submodule init\n$ git submodule update\n</pre>\n<p>If you have all compatible Python implementations available on your\nsystem, you can run tests on all of them using the <tt>tox</tt> utility,\nwhich can be found on PyPI.</p>\n</div>\n<div id=\"questions\">\n<h2>Questions?</h2>\n<p>There\u2019s a mailing list available for support on Google Groups,\n<a href=\"http://groups.google.com/group/html5lib-discuss\" rel=\"nofollow\">html5lib-discuss</a>,\nthough you may get a quicker response asking on IRC in <a href=\"http://wiki.whatwg.org/wiki/IRC\" rel=\"nofollow\">#whatwg on\nirc.freenode.net</a>.</p>\n</div>\n<div id=\"change-log\">\n<h2>Change Log</h2>\n<div id=\"b9\">\n<h3>0.99999999/1.0b9</h3>\n<p>Released on July 14, 2016</p>\n<ul>\n<li><strong>Added ordereddict as a mandatory dependency on Python 2.6.</strong></li>\n<li>Added <tt>lxml</tt>, <tt>genshi</tt>, <tt>datrie</tt>, <tt>charade</tt>, and <tt>all</tt>\nextras that will do the right thing based on the specific\ninterpreter implementation.</li>\n<li>Now requires the <tt>mock</tt> package for the testsuite.</li>\n<li>Cease supporting DATrie under PyPy.</li>\n<li><strong>Remove ``PullDOM`` support, as this hasn\u2019t ever been properly\ntested, doesn\u2019t entirely work, and as far as I can tell is\ncompletely unused by anyone.</strong></li>\n<li>Move testsuite to <tt>py.test</tt>.</li>\n<li><strong>Fix #124: move to webencodings for decoding the input byte stream;\nthis makes html5lib compliant with the Encoding Standard, and\nintroduces a required dependency on webencodings.</strong></li>\n<li><strong>Cease supporting Python 3.2 (in both CPython and PyPy forms).</strong></li>\n<li><strong>Fix comments containing double-dash with lxml 3.5 and above.</strong></li>\n<li><strong>Use scripting disabled by default (as we don\u2019t implement\nscripting).</strong></li>\n<li><strong>Fix #11, avoiding the XSS bug potentially caused by serializer\nallowing attribute values to be escaped out of in old browser versions,\nchanging the quote_attr_values option on serializer to take one of\nthree values, \u201calways\u201d (the old True value), \u201clegacy\u201d (the new option,\nand the new default), and \u201cspec\u201d (the old False value, and the old\ndefault).</strong></li>\n<li><strong>Fix #72 by rewriting the sanitizer to apply only to treewalkers\n(instead of the tokenizer); as such, this will require amending all\ncallers of it to use it via the treewalker API.</strong></li>\n<li><strong>Drop support of charade, now that chardet is supported once more.</strong></li>\n<li><strong>Replace the charset keyword argument on parse and related methods\nwith a set of keyword arguments: override_encoding, transport_encoding,\nsame_origin_parent_encoding, likely_encoding, and default_encoding.</strong></li>\n<li><strong>Move filters._base, treebuilder._base, and treewalkers._base to .base\nto clarify their status as public.</strong></li>\n<li><strong>Get rid of the sanitizer package. Merge sanitizer.sanitize into the\nsanitizer.htmlsanitizer module and move that to saniziter. This means\nanyone who used sanitizer.sanitize or sanitizer.HTMLSanitizer needs no\ncode changes.</strong></li>\n<li><strong>Rename treewalkers.lxmletree to .etree_lxml and\ntreewalkers.genshistream to .genshi to have a consistent API.</strong></li>\n<li>Move a whole load of stuff (inputstream, ihatexml, trie, tokenizer,\nutils) to be underscore prefixed to clarify their status as private.</li>\n</ul>\n</div>\n<div id=\"b8\">\n<h3>0.9999999/1.0b8</h3>\n<p>Released on September 10, 2015</p>\n<ul>\n<li>Fix #195: fix the sanitizer to drop broken URLs (it threw an\nexception between 0.9999 and 0.999999).</li>\n</ul>\n</div>\n<div id=\"b7\">\n<h3>0.999999/1.0b7</h3>\n<p>Released on July 7, 2015</p>\n<ul>\n<li>Fix #189: fix the sanitizer to allow relative URLs again (as it did\nprior to 0.9999/1.0b5).</li>\n</ul>\n</div>\n<div id=\"b6\">\n<h3>0.99999/1.0b6</h3>\n<p>Released on April 30, 2015</p>\n<ul>\n<li>Fix #188: fix the sanitizer to not throw an exception when sanitizing\nbogus data URLs.</li>\n</ul>\n</div>\n<div id=\"b5\">\n<h3>0.9999/1.0b5</h3>\n<p>Released on April 29, 2015</p>\n<ul>\n<li>Fix #153: Sanitizer fails to treat some attributes as URLs. Despite how\nthis sounds, this has no known security implications.  No known version\nof IE (5.5 to current), Firefox (3 to current), Safari (6 to current),\nChrome (1 to current), or Opera (12 to current) will run any script\nprovided in these attributes.</li>\n<li>Pass error message to the ParseError exception in strict parsing mode.</li>\n<li>Allow data URIs in the sanitizer, with a whitelist of content-types.</li>\n<li>Add support for Python implementations that don\u2019t support lone\nsurrogates (read: Jython). Fixes #2.</li>\n<li>Remove localization of error messages. This functionality was totally\nunused (and untested that everything was localizable), so we may as\nwell follow numerous browsers in not supporting translating technical\nstrings.</li>\n<li>Expose treewalkers.pprint as a public API.</li>\n<li>Add a documentEncoding property to HTML5Parser, fix #121.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3>0.999</h3>\n<p>Released on December 23, 2013</p>\n<ul>\n<li>Fix #127: add work-around for CPython issue #20007: .read(0) on\nhttp.client.HTTPResponse drops the rest of the content.</li>\n<li>Fix #115: lxml treewalker can now deal with fragments containing, at\ntheir root level, text nodes with non-ASCII characters on Python 2.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.99</h3>\n<p>Released on September 10, 2013</p>\n<ul>\n<li>No library changes from 1.0b3; released as 0.99 as pip has changed\nbehaviour from 1.4 to avoid installing pre-release versions per\nPEP 440.</li>\n</ul>\n</div>\n<div id=\"b3\">\n<h3>1.0b3</h3>\n<p>Released on July 24, 2013</p>\n<ul>\n<li>Removed <tt>RecursiveTreeWalker</tt> from <tt>treewalkers._base</tt>. Any\nimplementation using it should be moved to\n<tt>NonRecursiveTreeWalker</tt>, as everything bundled with html5lib has\nfor years.</li>\n<li>Fix #67 so that <tt>BufferedStream</tt> to correctly returns a bytes\nobject, thereby fixing any case where html5lib is passed a\nnon-seekable RawIOBase-like object.</li>\n</ul>\n</div>\n<div id=\"b2\">\n<h3>1.0b2</h3>\n<p>Released on June 27, 2013</p>\n<ul>\n<li>Removed reordering of attributes within the serializer. There is now\nan <tt>alphabetical_attributes</tt> option which preserves the previous\nbehaviour through a new filter. This allows attribute order to be\npreserved through html5lib if the tree builder preserves order.</li>\n<li>Removed <tt>dom2sax</tt> from DOM treebuilders. It has been replaced by\n<tt>treeadapters.sax.to_sax</tt> which is generic and supports any\ntreewalker; it also resolves all known bugs with <tt>dom2sax</tt>.</li>\n<li>Fix treewalker assertions on hitting bytes strings on\nPython 2. Previous to 1.0b1, treewalkers coped with mixed\nbytes/unicode data on Python 2; this reintroduces this prior\nbehaviour on Python 2. Behaviour is unchanged on Python 3.</li>\n</ul>\n</div>\n<div id=\"b1\">\n<h3>1.0b1</h3>\n<p>Released on May 17, 2013</p>\n<ul>\n<li>Implementation updated to implement the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/\" rel=\"nofollow\">HTML specification</a> as of 5th May\n2013 (<a href=\"http://svn.whatwg.org/webapps/\" rel=\"nofollow\">SVN</a> revision r7867).</li>\n<li>Python 3.2+ supported in a single codebase using the <tt>six</tt> library.</li>\n<li>Removed support for Python 2.5 and older.</li>\n<li>Removed the deprecated Beautiful Soup 3 treebuilder.\n<tt>beautifulsoup4</tt> can use <tt>html5lib</tt> as a parser instead. Note that\nsince it doesn\u2019t support namespaces, foreign content like SVG and\nMathML is parsed incorrectly.</li>\n<li>Removed <tt>simpletree</tt> from the package. The default tree builder is\nnow <tt>etree</tt> (using the <tt>xml.etree.cElementTree</tt> implementation if\navailable, and <tt>xml.etree.ElementTree</tt> otherwise).</li>\n<li>Removed the <tt>XHTMLSerializer</tt> as it never actually guaranteed its\noutput was well-formed XML, and hence provided little of use.</li>\n<li>Removed default DOM treebuilder, so <tt>html5lib.treebuilders.dom</tt> is no\nlonger supported. <tt><span class=\"pre\">html5lib.treebuilders.getTreeBuilder(\"dom\")</span></tt> will\nreturn the default DOM treebuilder, which uses <tt>xml.dom.minidom</tt>.</li>\n<li>Optional heuristic character encoding detection now based on\n<tt>charade</tt> for Python 2.6 - 3.3 compatibility.</li>\n<li>Optional <tt>Genshi</tt> treewalker support fixed.</li>\n<li>Many bugfixes, including:<ul>\n<li>#33: null in attribute value breaks XML AttValue;</li>\n<li>#4: nested, indirect descendant, &lt;button&gt; causes infinite loop;</li>\n<li><a href=\"http://code.google.com/p/html5lib/issues/detail?id=215\" rel=\"nofollow\">Google Code 215</a>: Properly\ndetect seekable streams;</li>\n<li><a href=\"http://code.google.com/p/html5lib/issues/detail?id=206\" rel=\"nofollow\">Google Code 206</a>: add\nsupport for &lt;video preload=\u2026&gt;, &lt;audio preload=\u2026&gt;;</li>\n<li><a href=\"http://code.google.com/p/html5lib/issues/detail?id=205\" rel=\"nofollow\">Google Code 205</a>: add\nsupport for &lt;video poster=\u2026&gt;;</li>\n<li><a href=\"http://code.google.com/p/html5lib/issues/detail?id=202\" rel=\"nofollow\">Google Code 202</a>: Unicode\nfile breaks InputStream.</li>\n</ul>\n</li>\n<li>Source code is now mostly PEP 8 compliant.</li>\n<li>Test harness has been improved and now depends on <tt>nose</tt>.</li>\n<li>Documentation updated and moved to <a href=\"https://html5lib.readthedocs.io/\" rel=\"nofollow\">https://html5lib.readthedocs.io/</a>.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.95</h3>\n<p>Released on February 11, 2012</p>\n</div>\n<div id=\"id4\">\n<h3>0.90</h3>\n<p>Released on January 17, 2010</p>\n</div>\n<div id=\"id5\">\n<h3>0.11.1</h3>\n<p>Released on June 12, 2008</p>\n</div>\n<div id=\"id6\">\n<h3>0.11</h3>\n<p>Released on June 10, 2008</p>\n</div>\n<div id=\"id7\">\n<h3>0.10</h3>\n<p>Released on October 7, 2007</p>\n</div>\n<div id=\"id8\">\n<h3>0.9</h3>\n<p>Released on March 11, 2007</p>\n</div>\n<div id=\"id9\">\n<h3>0.2</h3>\n<p>Released on January 8, 2007</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2263745, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e42adfbe5e58429a9e2f38325732c024", "sha256": "d79d00e842999b64932dfdc27bc451218c96e94b7160962bb59127081864d333"}, "downloads": -1, "filename": "html5-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e42adfbe5e58429a9e2f38325732c024", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 112418, "upload_time": "2016-08-05T09:19:17", "upload_time_iso_8601": "2016-08-05T09:19:17.929368Z", "url": "https://files.pythonhosted.org/packages/71/11/306973d0e89b41864b492812bb1bfd30515428045a483eb0935a43c9ed9d/html5-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a25a62707881706898b7a1a83a0729e", "sha256": "c15868449e583e0ec14eea8edeae2a841ea9321f92781d49542d1c8bb7df88df"}, "downloads": -1, "filename": "html5-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2a25a62707881706898b7a1a83a0729e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118917, "upload_time": "2016-08-05T09:19:14", "upload_time_iso_8601": "2016-08-05T09:19:14.857539Z", "url": "https://files.pythonhosted.org/packages/f9/78/cdeff0fb9355521d5c374438a76af728685c48aa08fa544e77dd6590d47e/html5-0.0.1.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "2ddd943f8f33308aadaca1784323ca78", "sha256": "0dcc8ab9a80924817c52c6fdcb7f2d3d22ae0977604f361731f11bc01c015a37"}, "downloads": -1, "filename": "html5-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ddd943f8f33308aadaca1784323ca78", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 112419, "upload_time": "2016-08-05T09:20:28", "upload_time_iso_8601": "2016-08-05T09:20:28.245336Z", "url": "https://files.pythonhosted.org/packages/e6/51/431cc45b61c668e26f406405878a86f7c537864426368210249bf9bed515/html5-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e54026387fa2467ae10562314dac7a12", "sha256": "c4ea3de7615dc8dc373b386db4f0e839e16f56c66afe68933313d76fb469240a"}, "downloads": -1, "filename": "html5-0.0.9.tar.gz", "has_sig": false, "md5_digest": "e54026387fa2467ae10562314dac7a12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118914, "upload_time": "2016-08-05T09:20:25", "upload_time_iso_8601": "2016-08-05T09:20:25.251953Z", "url": "https://files.pythonhosted.org/packages/d2/b1/4835c1b9e9b2e20e87758439ddb4e8b7cbe07235b5eea60858816e3021df/html5-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ddd943f8f33308aadaca1784323ca78", "sha256": "0dcc8ab9a80924817c52c6fdcb7f2d3d22ae0977604f361731f11bc01c015a37"}, "downloads": -1, "filename": "html5-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ddd943f8f33308aadaca1784323ca78", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 112419, "upload_time": "2016-08-05T09:20:28", "upload_time_iso_8601": "2016-08-05T09:20:28.245336Z", "url": "https://files.pythonhosted.org/packages/e6/51/431cc45b61c668e26f406405878a86f7c537864426368210249bf9bed515/html5-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e54026387fa2467ae10562314dac7a12", "sha256": "c4ea3de7615dc8dc373b386db4f0e839e16f56c66afe68933313d76fb469240a"}, "downloads": -1, "filename": "html5-0.0.9.tar.gz", "has_sig": false, "md5_digest": "e54026387fa2467ae10562314dac7a12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118914, "upload_time": "2016-08-05T09:20:25", "upload_time_iso_8601": "2016-08-05T09:20:25.251953Z", "url": "https://files.pythonhosted.org/packages/d2/b1/4835c1b9e9b2e20e87758439ddb4e8b7cbe07235b5eea60858816e3021df/html5-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:18 2020"}