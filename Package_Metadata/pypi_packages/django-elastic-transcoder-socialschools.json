{"info": {"author": "tzangms", "author_email": "tzangms@streetvoice.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django Elastic Transcoder\n=========================\n\n|Build Status| |Coverage Status|\n\n``django-elastic-transcoder`` is an `Django` app, let you integrate AWS Elastic Transcoder in Django easily.\n\nWhat is provided in this package?\n\n- ``Transcoder`` class\n- URL endpoint for receive SNS notification\n- Signals for PROGRESS, ERROR, COMPLETE\n- ``EncodeJob`` model\n\nWorkflow\n-----------\n\n.. image:: docs/images/workflow.jpg\n\n\nInstall\n-------\n\nFirst, install ``dj_elastictranscode`` with ``pip``\n\n.. code:: sh\n\n    $ pip install django-elastic-transcoder\n\nThen, add ``dj_elastictranscoder`` to ``INSTALLED_APPS``\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'dj_elastictranscoder',\n        ...\n    )\n\nBind ``urls.py``\n\n.. code:: python\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^dj_elastictranscoder/', include('dj_elastictranscoder.urls')),\n        ...\n    )\n\nMigrate\n\n.. code:: sh\n\n    $ ./manage.py migrate\n\nSetting up AWS Elastic Transcoder\n---------------------------------\n\n1. Create a new ``Pipeline`` in AWS Elastic Transcoder.\n2. Hookup every Notification.\n3. Subscribe SNS Notification through HTTP\n4. You are ready to encode!\n\n\nRequired Django settings\n-------------------------\n\nPlease settings up variables below to make this app works.\n\n.. code:: python\n\n    AWS_ACCESS_KEY_ID = <your aws access key id>\n    AWS_SECRET_ACCESS_KEY = <your aws secret access key>\n    AWS_REGION = <aws region>\n\nUsage\n-----\n\nFor instance, encode an mp3\n\n.. code:: python\n\n    from dj_elastictranscoder.transcoder import Transcoder\n\n    input = {\n        'Key': 'path/to/input.mp3', \n    }\n\n    outputs = [{\n        'Key': 'path/to/output.mp3',\n        'PresetId': '1351620000001-300040' # for example: 128k mp3 audio preset\n    }]\n\n    pipeline_id = '<pipeline_id>'\n\n    transcoder = Transcoder(pipeline_id)\n    transcoder.encode(input, outputs)\n\n    # your can also create a EncodeJob for object automatically\n    transcoder.create_job_for_object(obj)\n\n\n    # Transcoder can also work standalone without Django\n    # just pass region and required aws key/secret to Transcoder, when initiate\n\n    transcoder = Transcoder(pipeline_id, AWS_REGION, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)\n\n\nSetting Up AWS SNS endpoint\n---------------------------------\n\nAWS Elastic Transcoder can send various SNS notification to notify your application, like ``PROGRESS``, ``ERROR``, ``WARNING`` and ``COMPLETE``\n\nSo this package provide a endpoint to receieve these notifications, for you to update transcode progress. without checking by your self.\n\nGo to SNS section in AWS WebConsole to choose topic and subscribe with the url below.\n\n``http://<your-domain>/dj_elastictranscoder/endpoint/``\n\nBefore notification get started to work, you have to activate SNS subscription, you will receive email with activation link.\n\nAfter subscribe is done, you will receive SNS notification.\n\n    \nSignals\n-----------\n\nThis package provide various signals for you to get notification, and do more things in your application. you can check the signals usage in tests.py for more usage example.\n\n* transcode_onprogress\n* transcode_onerror\n* transcode_oncomplete\n\n\n.. |Build Status| image:: https://travis-ci.org/StreetVoice/django-elastic-transcoder.png?branch=master\n   :target: https://travis-ci.org/StreetVoice/django-elastic-transcoder\n.. |Coverage Status| image:: https://coveralls.io/repos/StreetVoice/django-elastic-transcoder/badge.png?branch=master\n   :target: https://coveralls.io/r/StreetVoice/django-elastic-transcoder?branch=master", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/StreetVoice/django-elastic-transcoder", "keywords": "django,aws,elastic,transcoder", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-elastic-transcoder-socialschools", "package_url": "https://pypi.org/project/django-elastic-transcoder-socialschools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-elastic-transcoder-socialschools/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/StreetVoice/django-elastic-transcoder"}, "release_url": "https://pypi.org/project/django-elastic-transcoder-socialschools/0.9.4/", "requires_dist": null, "requires_python": null, "summary": "Django with AWS elastic transcoder", "version": "0.9.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/StreetVoice/django-elastic-transcoder\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd8340caf346cf0de61ae95f5d1a0c4838f018a1/68747470733a2f2f7472617669732d63692e6f72672f537472656574566f6963652f646a616e676f2d656c61737469632d7472616e73636f6465722e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/StreetVoice/django-elastic-transcoder?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7dfcff3e7f7c4357ca6235c5b278965e68f49710/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f537472656574566f6963652f646a616e676f2d656c61737469632d7472616e73636f6465722f62616467652e706e673f6272616e63683d6d6173746572\"></a></p>\n<p><tt><span class=\"pre\">django-elastic-transcoder</span></tt> is an <cite>Django</cite> app, let you integrate AWS Elastic Transcoder in Django easily.</p>\n<p>What is provided in this package?</p>\n<ul>\n<li><tt>Transcoder</tt> class</li>\n<li>URL endpoint for receive SNS notification</li>\n<li>Signals for PROGRESS, ERROR, COMPLETE</li>\n<li><tt>EncodeJob</tt> model</li>\n</ul>\n<div id=\"workflow\">\n<h2>Workflow</h2>\n<img alt=\"docs/images/workflow.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1a188b92c7179e17dffe58c38e9ba71c54808c6/646f63732f696d616765732f776f726b666c6f772e6a7067\">\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>First, install <tt>dj_elastictranscode</tt> with <tt>pip</tt></p>\n<pre>$ pip install django-elastic-transcoder\n</pre>\n<p>Then, add <tt>dj_elastictranscoder</tt> to <tt>INSTALLED_APPS</tt></p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'dj_elastictranscoder'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Bind <tt>urls.py</tt></p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^dj_elastictranscoder/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'dj_elastictranscoder.urls'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Migrate</p>\n<pre>$ ./manage.py migrate\n</pre>\n</div>\n<div id=\"setting-up-aws-elastic-transcoder\">\n<h2>Setting up AWS Elastic Transcoder</h2>\n<ol>\n<li>Create a new <tt>Pipeline</tt> in AWS Elastic Transcoder.</li>\n<li>Hookup every Notification.</li>\n<li>Subscribe SNS Notification through HTTP</li>\n<li>You are ready to encode!</li>\n</ol>\n</div>\n<div id=\"required-django-settings\">\n<h2>Required Django settings</h2>\n<p>Please settings up variables below to make this app works.</p>\n<pre><span class=\"n\">AWS_ACCESS_KEY_ID</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">your</span> <span class=\"n\">aws</span> <span class=\"n\">access</span> <span class=\"n\">key</span> <span class=\"nb\">id</span><span class=\"o\">&gt;</span>\n<span class=\"n\">AWS_SECRET_ACCESS_KEY</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">your</span> <span class=\"n\">aws</span> <span class=\"n\">secret</span> <span class=\"n\">access</span> <span class=\"n\">key</span><span class=\"o\">&gt;</span>\n<span class=\"n\">AWS_REGION</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">aws</span> <span class=\"n\">region</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For instance, encode an mp3</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dj_elastictranscoder.transcoder</span> <span class=\"kn\">import</span> <span class=\"n\">Transcoder</span>\n\n<span class=\"nb\">input</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'Key'</span><span class=\"p\">:</span> <span class=\"s1\">'path/to/input.mp3'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"p\">[{</span>\n    <span class=\"s1\">'Key'</span><span class=\"p\">:</span> <span class=\"s1\">'path/to/output.mp3'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'PresetId'</span><span class=\"p\">:</span> <span class=\"s1\">'1351620000001-300040'</span> <span class=\"c1\"># for example: 128k mp3 audio preset</span>\n<span class=\"p\">}]</span>\n\n<span class=\"n\">pipeline_id</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;pipeline_id&gt;'</span>\n\n<span class=\"n\">transcoder</span> <span class=\"o\">=</span> <span class=\"n\">Transcoder</span><span class=\"p\">(</span><span class=\"n\">pipeline_id</span><span class=\"p\">)</span>\n<span class=\"n\">transcoder</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">,</span> <span class=\"n\">outputs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># your can also create a EncodeJob for object automatically</span>\n<span class=\"n\">transcoder</span><span class=\"o\">.</span><span class=\"n\">create_job_for_object</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Transcoder can also work standalone without Django</span>\n<span class=\"c1\"># just pass region and required aws key/secret to Transcoder, when initiate</span>\n\n<span class=\"n\">transcoder</span> <span class=\"o\">=</span> <span class=\"n\">Transcoder</span><span class=\"p\">(</span><span class=\"n\">pipeline_id</span><span class=\"p\">,</span> <span class=\"n\">AWS_REGION</span><span class=\"p\">,</span> <span class=\"n\">AWS_ACCESS_KEY_ID</span><span class=\"p\">,</span> <span class=\"n\">AWS_SECRET_ACCESS_KEY</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"setting-up-aws-sns-endpoint\">\n<h2>Setting Up AWS SNS endpoint</h2>\n<p>AWS Elastic Transcoder can send various SNS notification to notify your application, like <tt>PROGRESS</tt>, <tt>ERROR</tt>, <tt>WARNING</tt> and <tt>COMPLETE</tt></p>\n<p>So this package provide a endpoint to receieve these notifications, for you to update transcode progress. without checking by your self.</p>\n<p>Go to SNS section in AWS WebConsole to choose topic and subscribe with the url below.</p>\n<p><tt><span class=\"pre\">http://&lt;your-domain&gt;/dj_elastictranscoder/endpoint/</span></tt></p>\n<p>Before notification get started to work, you have to activate SNS subscription, you will receive email with activation link.</p>\n<p>After subscribe is done, you will receive SNS notification.</p>\n</div>\n<div id=\"signals\">\n<h2>Signals</h2>\n<p>This package provide various signals for you to get notification, and do more things in your application. you can check the signals usage in tests.py for more usage example.</p>\n<ul>\n<li>transcode_onprogress</li>\n<li>transcode_onerror</li>\n<li>transcode_oncomplete</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2461759, "releases": {"0.9.4": [{"comment_text": "", "digests": {"md5": "2bf7cc312ee88cebfe8be58718a1785e", "sha256": "2b33f679893b67be9b99d2c0fbecdae3303c837d7f778a53465de50281e48621"}, "downloads": -1, "filename": "django-elastic-transcoder-socialschools-0.9.4.tar.gz", "has_sig": false, "md5_digest": "2bf7cc312ee88cebfe8be58718a1785e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7404, "upload_time": "2016-11-15T12:40:37", "upload_time_iso_8601": "2016-11-15T12:40:37.329066Z", "url": "https://files.pythonhosted.org/packages/61/a8/a40cc1de3cfc43084814e97b69ad4acca6883e34adc0a82f5fbf89ec4d47/django-elastic-transcoder-socialschools-0.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bf7cc312ee88cebfe8be58718a1785e", "sha256": "2b33f679893b67be9b99d2c0fbecdae3303c837d7f778a53465de50281e48621"}, "downloads": -1, "filename": "django-elastic-transcoder-socialschools-0.9.4.tar.gz", "has_sig": false, "md5_digest": "2bf7cc312ee88cebfe8be58718a1785e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7404, "upload_time": "2016-11-15T12:40:37", "upload_time_iso_8601": "2016-11-15T12:40:37.329066Z", "url": "https://files.pythonhosted.org/packages/61/a8/a40cc1de3cfc43084814e97b69ad4acca6883e34adc0a82f5fbf89ec4d47/django-elastic-transcoder-socialschools-0.9.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:24 2020"}