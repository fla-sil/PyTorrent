{"info": {"author": "NDD19", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "pyautomagic\n===========\n\n[![Build Status](https://travis-ci.com/NeuroDataDesign/pyautomagic.svg?branch=master)](https://travis-ci.com/NeuroDataDesign/pyautomagic)\n[![Coverage Status](./coverage.svg)](./coverage.svg)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n![GitHub](https://img.shields.io/github/license/NeuroDataDesign/pyautomagic)\n![PyPI](https://img.shields.io/pypi/v/pyautomagic)\n![GitHub last commit](https://img.shields.io/github/last-commit/NeuroDataDesign/pyautomagic)\n![GitHub repo size](https://img.shields.io/github/repo-size/NeuroDataDesign/pyautomagic)\n\nA Python3 version of the automagic EEG processing pipeline. Development in progress. This is all temporary.\n\nReferences\n----------\n1. Paper: https://www.biorxiv.org/content/10.1101/460469v1\n2. Paper: https://www.ncbi.nlm.nih.gov/pubmed/31233907\n3. Matlab github repo: https://github.com/methlabUZH/automagic\n\n\nProject Organization\n--------------------\n\n    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 Makefile           <- Makefile with commands like `make data` or `make train`\n    \u251c\u2500\u2500 README.md          <- The top-level README for developers using this project.\n    \u251c\u2500\u2500 data\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 external       <- Data from third party sources.\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 interim        <- Intermediate data that has been transformed.\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 processed      <- The final, canonical data sets for modeling.\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 raw            <- The original, immutable data dump.\n    \u2502\n    \u251c\u2500\u2500 docs               <- A default Sphinx project; see sphinx-doc.org for details\n    \u2502\n    \u251c\u2500\u2500 notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n    \u2502                         the creator's initials, and a short `-` delimited description, e.g.\n    \u2502                         `1.0-jqp-initial-data-exploration`.\n    \u2502\n    \u251c\u2500\u2500 references         <- Data dictionaries, manuals, and all other explanatory materials.\n    \u2502\n    \u251c\u2500\u2500 reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 figures        <- Generated graphics and figures to be used in reporting\n    \u2502\n    \u251c\u2500\u2500 requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n    \u2502                         generated with `pip freeze > requirements.txt`\n    \u2502\n    \u251c\u2500\u2500 setup.py           <- makes project pip installable (pip install -e .) so src can be imported\n    \u251c\u2500\u2500 pyautomagic\n    |   \u251c\u2500\u2500 src            <- Src/ from automagic (matlab)\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py    <- Makes src a Python module\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 base           <- Scripts that are configuration files, or other code used by the entire pyautomagic repo.\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 gui             <- Scripts for the gui\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 preprocessing   <- Scripts for running EEG preprocessing\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 visualization  <- Scripts to visualize results, etc.\n    \u2502\n    \u2514\u2500\u2500 tox.ini            <- tox file with settings for running tox; see tox.testrun.org\n\n\n--------\n\n\nIntended Users / Usage\n----------------------\n\nResearchers dealing with EEG data. The main (default) workflow is summarized in: \n\nInstallation Guide\n------------------\n\nFor installation instructions, see [installation guide](./INSTALLATION.md).\n\nSetup Jupyter Kernel To Test\n----------------------------\n\nYou need to install ipykernel to expose your conda environment to jupyter notebooks.\n\n    conda install ipykernel\n    python -m ipykernel install --name pyautomagic --user\n    # now you can run jupyter lab and select a kernel\n    jupyter lab \n\n\nTesting and Documentation\n-------------------------\n\nFor contributing, please see [contribution guide](./CONTRIBUTING.md).\n\nFor running tests, please see [testing guide](./TESTING_SETUP.md).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NeuroDataDesign/pyautomagic", "keywords": "EEG,research tools,automated processing", "license": "MIT", "maintainer": "Adam Li", "maintainer_email": "adam2392@gmail.com", "name": "pyautomagic", "package_url": "https://pypi.org/project/pyautomagic/", "platform": "", "project_url": "https://pypi.org/project/pyautomagic/", "project_urls": {"Documentation": "https://github.com/NeuroDataDesign/pyautomagic/docs/", "Homepage": "https://github.com/NeuroDataDesign/pyautomagic", "Source": "https://github.com/NeuroDataDesign/pyautomagic", "Tracker": "https://github.com/NeuroDataDesign/pyautomagic/issues"}, "release_url": "https://pypi.org/project/pyautomagic/0.1.0/", "requires_dist": ["numpy (>=1.14.5)", "scipy (>=1.1.0)", "scikit-learn (>=0.19.2)", "pandas (>=0.23.4)", "mne (>=0.19.2)", "mne-bids (>=0.3)"], "requires_python": "", "summary": "A Python3 package for eeg (pre)processing from Automagic.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyautomagic</h1>\n<p><a href=\"https://travis-ci.com/NeuroDataDesign/pyautomagic\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e22dabaf94c7634ac5e42544123113a15e41dcf/68747470733a2f2f7472617669732d63692e636f6d2f4e6575726f4461746144657369676e2f70796175746f6d616769632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"./coverage.svg\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/faca3f347e8c79bbbdc8a8689cce5846fe609478/2e2f636f7665726167652e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffb6567c950b4516d8ab7640a03e894eaee858b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e6575726f4461746144657369676e2f70796175746f6d61676963\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5cf7f290fd6fd9cda5f73215bfd06a8ea3cbdfa/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796175746f6d61676963\">\n<img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61d6cd06f6ad6b21bfdf5058e2a974e7dbb31238/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f4e6575726f4461746144657369676e2f70796175746f6d61676963\">\n<img alt=\"GitHub repo size\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25eed79580a068644ae624a2220b590ecf118fc7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f4e6575726f4461746144657369676e2f70796175746f6d61676963\"></p>\n<p>A Python3 version of the automagic EEG processing pipeline. Development in progress. This is all temporary.</p>\n<h2>References</h2>\n<ol>\n<li>Paper: <a href=\"https://www.biorxiv.org/content/10.1101/460469v1\" rel=\"nofollow\">https://www.biorxiv.org/content/10.1101/460469v1</a></li>\n<li>Paper: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/31233907\" rel=\"nofollow\">https://www.ncbi.nlm.nih.gov/pubmed/31233907</a></li>\n<li>Matlab github repo: <a href=\"https://github.com/methlabUZH/automagic\" rel=\"nofollow\">https://github.com/methlabUZH/automagic</a></li>\n</ol>\n<h2>Project Organization</h2>\n<pre><code>\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 external       &lt;- Data from third party sources.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 interim        &lt;- Intermediate data that has been transformed.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 processed      &lt;- The final, canonical data sets for modeling.\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 raw            &lt;- The original, immutable data dump.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- A default Sphinx project; see sphinx-doc.org for details\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`\n\u2502\n\u251c\u2500\u2500 setup.py           &lt;- makes project pip installable (pip install -e .) so src can be imported\n\u251c\u2500\u2500 pyautomagic\n|   \u251c\u2500\u2500 src            &lt;- Src/ from automagic (matlab)\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py    &lt;- Makes src a Python module\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 base           &lt;- Scripts that are configuration files, or other code used by the entire pyautomagic repo.\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gui             &lt;- Scripts for the gui\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 preprocessing   &lt;- Scripts for running EEG preprocessing\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 visualization  &lt;- Scripts to visualize results, etc.\n\u2502\n\u2514\u2500\u2500 tox.ini            &lt;- tox file with settings for running tox; see tox.testrun.org\n</code></pre>\n<hr>\n<h2>Intended Users / Usage</h2>\n<p>Researchers dealing with EEG data. The main (default) workflow is summarized in:</p>\n<h2>Installation Guide</h2>\n<p>For installation instructions, see <a href=\"./INSTALLATION.md\" rel=\"nofollow\">installation guide</a>.</p>\n<h2>Setup Jupyter Kernel To Test</h2>\n<p>You need to install ipykernel to expose your conda environment to jupyter notebooks.</p>\n<pre><code>conda install ipykernel\npython -m ipykernel install --name pyautomagic --user\n# now you can run jupyter lab and select a kernel\njupyter lab \n</code></pre>\n<h2>Testing and Documentation</h2>\n<p>For contributing, please see <a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">contribution guide</a>.</p>\n<p>For running tests, please see <a href=\"./TESTING_SETUP.md\" rel=\"nofollow\">testing guide</a>.</p>\n\n          </div>"}, "last_serial": 6462461, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1daacb63c6e3b79ab5145c90b01b76cd", "sha256": "1a06e48a5dc4ba9db4ee79a83973c0b3d8ce175169c020bac9b0db6431186b84"}, "downloads": -1, "filename": "pyautomagic-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1daacb63c6e3b79ab5145c90b01b76cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34291, "upload_time": "2020-01-15T23:50:51", "upload_time_iso_8601": "2020-01-15T23:50:51.514690Z", "url": "https://files.pythonhosted.org/packages/01/78/ce346127228b2942e04c5c2485a75f7b70957a5c8ee078a388eb6689dfda/pyautomagic-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a3830c657f41c06571fe59a74d72aa8", "sha256": "a3ed0880530304b22ec582d501988e0ac4409e480d4309b3ba3e6fec2e538794"}, "downloads": -1, "filename": "pyautomagic-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a3830c657f41c06571fe59a74d72aa8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29571, "upload_time": "2020-01-15T23:50:53", "upload_time_iso_8601": "2020-01-15T23:50:53.465839Z", "url": "https://files.pythonhosted.org/packages/2a/d0/7d4e2cc50cb70dad396db0ef9d887d5996174dee69959a8af8ae8c1c7f4d/pyautomagic-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1daacb63c6e3b79ab5145c90b01b76cd", "sha256": "1a06e48a5dc4ba9db4ee79a83973c0b3d8ce175169c020bac9b0db6431186b84"}, "downloads": -1, "filename": "pyautomagic-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1daacb63c6e3b79ab5145c90b01b76cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34291, "upload_time": "2020-01-15T23:50:51", "upload_time_iso_8601": "2020-01-15T23:50:51.514690Z", "url": "https://files.pythonhosted.org/packages/01/78/ce346127228b2942e04c5c2485a75f7b70957a5c8ee078a388eb6689dfda/pyautomagic-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a3830c657f41c06571fe59a74d72aa8", "sha256": "a3ed0880530304b22ec582d501988e0ac4409e480d4309b3ba3e6fec2e538794"}, "downloads": -1, "filename": "pyautomagic-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a3830c657f41c06571fe59a74d72aa8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29571, "upload_time": "2020-01-15T23:50:53", "upload_time_iso_8601": "2020-01-15T23:50:53.465839Z", "url": "https://files.pythonhosted.org/packages/2a/d0/7d4e2cc50cb70dad396db0ef9d887d5996174dee69959a8af8ae8c1c7f4d/pyautomagic-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:33 2020"}