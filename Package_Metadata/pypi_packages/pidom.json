{"info": {"author": "Oprax", "author_email": "oprax@me.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Topic :: Home Automation"], "description": "======\nPi-Dom\n======\n\n.. image:: https://img.shields.io/travis/Oprax/pidom/master.svg?maxAge=2592000\n   :target: https://travis-ci.org/Oprax/pidom\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://github.com/Oprax/pidom/blob/master/LICENSE\n\n.. image:: https://img.shields.io/pypi/v/pidom.svg?maxAge=2592000\n   :target: https://pypi.python.org/pypi/pidom\n\n.. image:: https://img.shields.io/pypi/status/pidom.svg?maxAge=2592000\n   :target: https://pypi.python.org/pypi/pidom\n\n.. image:: https://img.shields.io/pypi/pyversions/pidom.svg?maxAge=2592000\n   :target: https://pypi.python.org/pypi/pidom\n\n\nPurpose\n=======\n\nThe goal of the project is to create a library can easely communicate with Chacon 54795 using HomeEasy protocol. I test my library with a Raspberry Pi 1 model B+.\n\n.. code-block:: python\n\n    from pidom import PiDom\n\n    pidom = PiDom()\n    pidom.synchronize('tv') # 'tv' is off\n    pidom.switch_on('tv') # 'tv' is on (obvious)\n    pidom.toggle('tv') # 'tv' is off\n    pidom.synchronize('light') # add new device\n    pidom.new_group('living-room', ['tv', 'light']) # switch off 'tv' & 'light'\n    pidom.toggle('living-room') # switch on 'tv' & 'light'\n    pidom.backup() # save device and group with pickle in '~/.pidom.bin'\n\n    # Use some event\n    from pidom import event\n\n    @event('pidom.update')\n    def print_data(ev, data):\n        print(\"{} change state for : {}\".format(\n            data['name'], data['state']))\n\n    pidom.toggle('living-room')\n    # print this :\n    # light change state for : False\n    # tv change state for : False\n\n\n\nMore example in ``test_pidom.py``.\n\nInstall\n=======\n\nDependecies\n-----------\n\nFirst you need to install `emit <http://www.noopy.fr/raspberry-pi/domotique/>`_ on you Raspberry Pi, ``emit`` use `wiringPi <https://projects.drogon.net/raspberry-pi/wiringpi/>`_ library.\n\ninstall ``wiringpi`` library :\n\n\n.. code-block:: bash\n\n    cd /tmp\n    git clone git://git.drogon.net/wiringPi\n    cd wiringPi\n    sudo ./build\n\n\ninstall ``emit`` command :\n\n.. code-block:: bash\n\n    cd /tmp\n    git clone https://github.com/landru29/chacon-rpi.git\n    cd chacon-rpi\n    make\n    sudo make install\n\n\nYou can test install with ``emit -h``\n\n``emit`` use pin 11 (GPIO 0) to communicate with the transmitter.\n\nPi-Dom\n------\n\n\nUse ``pip`` is the easiest way : \n\n.. code-block:: bash\n\n    pip install pidom", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Oprax/pidom", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pidom", "package_url": "https://pypi.org/project/pidom/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pidom/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Oprax/pidom"}, "release_url": "https://pypi.org/project/pidom/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "Pi-Dom is module to make domotic with RPi and.\nWith use emit from `<http://www.noopy.fr/raspberry-pi/domotique/>`_\n``emit`` can communicate with Chacon 54795", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Oprax/pidom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/Oprax/pidom/master.svg?maxAge=2592000\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98e6add7b2837c5ce1b4328e0e4d49a955bc199c/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4f707261782f7069646f6d2f6d61737465722e7376673f6d61784167653d32353932303030\"></a>\n<a href=\"https://github.com/Oprax/pidom/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pidom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pidom.svg?maxAge=2592000\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70d3efb8bba0961ddf2a7b230c372229d1e2bcd8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7069646f6d2e7376673f6d61784167653d32353932303030\"></a>\n<a href=\"https://pypi.python.org/pypi/pidom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/status/pidom.svg?maxAge=2592000\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a86c348e1ab55a54929c15d93220522bfe9c121/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7069646f6d2e7376673f6d61784167653d32353932303030\"></a>\n<a href=\"https://pypi.python.org/pypi/pidom\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pidom.svg?maxAge=2592000\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14fb567c9ad7ef6aede0db0058cda7d719b0f6ea/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7069646f6d2e7376673f6d61784167653d32353932303030\"></a>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>The goal of the project is to create a library can easely communicate with Chacon 54795 using HomeEasy protocol. I test my library with a Raspberry Pi 1 model B+.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pidom</span> <span class=\"kn\">import</span> <span class=\"n\">PiDom</span>\n\n<span class=\"n\">pidom</span> <span class=\"o\">=</span> <span class=\"n\">PiDom</span><span class=\"p\">()</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">synchronize</span><span class=\"p\">(</span><span class=\"s1\">'tv'</span><span class=\"p\">)</span> <span class=\"c1\"># 'tv' is off</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">switch_on</span><span class=\"p\">(</span><span class=\"s1\">'tv'</span><span class=\"p\">)</span> <span class=\"c1\"># 'tv' is on (obvious)</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">toggle</span><span class=\"p\">(</span><span class=\"s1\">'tv'</span><span class=\"p\">)</span> <span class=\"c1\"># 'tv' is off</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">synchronize</span><span class=\"p\">(</span><span class=\"s1\">'light'</span><span class=\"p\">)</span> <span class=\"c1\"># add new device</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">new_group</span><span class=\"p\">(</span><span class=\"s1\">'living-room'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'tv'</span><span class=\"p\">,</span> <span class=\"s1\">'light'</span><span class=\"p\">])</span> <span class=\"c1\"># switch off 'tv' &amp; 'light'</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">toggle</span><span class=\"p\">(</span><span class=\"s1\">'living-room'</span><span class=\"p\">)</span> <span class=\"c1\"># switch on 'tv' &amp; 'light'</span>\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">backup</span><span class=\"p\">()</span> <span class=\"c1\"># save device and group with pickle in '~/.pidom.bin'</span>\n\n<span class=\"c1\"># Use some event</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pidom</span> <span class=\"kn\">import</span> <span class=\"n\">event</span>\n\n<span class=\"nd\">@event</span><span class=\"p\">(</span><span class=\"s1\">'pidom.update'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_data</span><span class=\"p\">(</span><span class=\"n\">ev</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> change state for : </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">]))</span>\n\n<span class=\"n\">pidom</span><span class=\"o\">.</span><span class=\"n\">toggle</span><span class=\"p\">(</span><span class=\"s1\">'living-room'</span><span class=\"p\">)</span>\n<span class=\"c1\"># print this :</span>\n<span class=\"c1\"># light change state for : False</span>\n<span class=\"c1\"># tv change state for : False</span>\n</pre>\n<p>More example in <tt>test_pidom.py</tt>.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<div id=\"dependecies\">\n<h3>Dependecies</h3>\n<p>First you need to install <a href=\"http://www.noopy.fr/raspberry-pi/domotique/\" rel=\"nofollow\">emit</a> on you Raspberry Pi, <tt>emit</tt> use <a href=\"https://projects.drogon.net/raspberry-pi/wiringpi/\" rel=\"nofollow\">wiringPi</a> library.</p>\n<p>install <tt>wiringpi</tt> library :</p>\n<pre><span class=\"nb\">cd</span> /tmp\ngit clone git://git.drogon.net/wiringPi\n<span class=\"nb\">cd</span> wiringPi\nsudo ./build\n</pre>\n<p>install <tt>emit</tt> command :</p>\n<pre><span class=\"nb\">cd</span> /tmp\ngit clone https://github.com/landru29/chacon-rpi.git\n<span class=\"nb\">cd</span> chacon-rpi\nmake\nsudo make install\n</pre>\n<p>You can test install with <tt>emit <span class=\"pre\">-h</span></tt></p>\n<p><tt>emit</tt> use pin 11 (GPIO 0) to communicate with the transmitter.</p>\n</div>\n<div id=\"id1\">\n<h3>Pi-Dom</h3>\n<p>Use <tt>pip</tt> is the easiest way :</p>\n<pre>pip install pidom\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2293933, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "2d277cd564e55af75ac76af851694f35", "sha256": "ea018a91647668e0395d429af691120c914bef26a08df399373695861135640c"}, "downloads": -1, "filename": "pidom-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2d277cd564e55af75ac76af851694f35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3811, "upload_time": "2016-08-11T07:53:44", "upload_time_iso_8601": "2016-08-11T07:53:44.962739Z", "url": "https://files.pythonhosted.org/packages/54/97/44ea34ba1ea0f7146dcd431b3691526814532431da88dfae87732069e7c3/pidom-0.1.1.tar.gz", "yanked": false}], "0.2.0": [], "0.3.1": [{"comment_text": "", "digests": {"md5": "36d96055214c10d12e2f415413e053e4", "sha256": "5545be216c90c4930f68f2c9ab86c5b1dfe955b0fed24dc7234cc0b2d122c4a0"}, "downloads": -1, "filename": "pidom-0.3.1.tar.gz", "has_sig": false, "md5_digest": "36d96055214c10d12e2f415413e053e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5521, "upload_time": "2016-08-21T13:34:48", "upload_time_iso_8601": "2016-08-21T13:34:48.757588Z", "url": "https://files.pythonhosted.org/packages/63/b7/0580b2ba36565233d0f3ae1bda83adef402f3a0fd17b6430cf8d1c6b9836/pidom-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "ad918f779bb21d0d0626e29babd9b161", "sha256": "0f0b1351a71ed98f8ec6e1c23fb228ea36664a8f0b84bf11b1d154cf5b5f78e3"}, "downloads": -1, "filename": "pidom-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ad918f779bb21d0d0626e29babd9b161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5547, "upload_time": "2016-08-21T15:04:07", "upload_time_iso_8601": "2016-08-21T15:04:07.932649Z", "url": "https://files.pythonhosted.org/packages/52/40/3d2b806eebdd4fd7b9aca66ace0733c355f725b99bbc047aeb5f5fca2ed6/pidom-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad918f779bb21d0d0626e29babd9b161", "sha256": "0f0b1351a71ed98f8ec6e1c23fb228ea36664a8f0b84bf11b1d154cf5b5f78e3"}, "downloads": -1, "filename": "pidom-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ad918f779bb21d0d0626e29babd9b161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5547, "upload_time": "2016-08-21T15:04:07", "upload_time_iso_8601": "2016-08-21T15:04:07.932649Z", "url": "https://files.pythonhosted.org/packages/52/40/3d2b806eebdd4fd7b9aca66ace0733c355f725b99bbc047aeb5f5fca2ed6/pidom-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:57 2020"}