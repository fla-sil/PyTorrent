{"info": {"author": "Alexandre Dulaunoy", "author_email": "a@foo.be", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Security"], "description": "# git-vuln-finder\n\n![git-vuln-finder logo](https://raw.githubusercontent.com/cve-search/git-vuln-finder/f22077452c37e110bff0564e1f7b34637dc726c3/doc/logos/git-vuln-finder-small.png)\n\n[![Workflow](https://github.com/cve-search/git-vuln-finder/workflows/Python%20application/badge.svg)](https://github.com/cve-search/git-vuln-finder/actions?query=workflow%3A%22Python+application%22)\n\nFinding potential software vulnerabilities from git commit messages.\nThe output format is a JSON with the associated commit which could contain a\nfix regarding a software vulnerability. The search is based on a set of regular\nexpressions against the commit messages only. If CVE IDs are present, those are\nadded automatically in the output.\n\n# Requirements\n\n- jq (``sudo apt install jq``)\n\n\n# Installation\n\n## Use it as a library\n\ngit-vuln-finder can be install with poetry. If you don't have poetry installed, you can do the following `curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python`.\n\n~~~bash\n$ poetry install git-vuln-finder\n$ poetry shell\n~~~\n\nYou can also use ``pip``. Then just import it:\n\n~~~python\nPython 3.8.0 (default, Dec 11 2019, 21:43:13)\n[GCC 9.2.1 20191008] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from git_vuln_finder import find\n>>> all_potential_vulnerabilities, all_cve_found, found = find(\"~/git/curl\")\n\n>>> [commit for commit, summary in all_potential_vulnerabilities.items() if summary['state'] == 'cve-assigned']\n['9069838b30fb3b48af0123e39f664cea683254a5', 'facb0e4662415b5f28163e853dc6742ac5fafb3d',\n... snap ...\n '8a75dbeb2305297640453029b7905ef51b87e8dd', '1dc43de0dccc2ea7da6dddb7b98f8d7dcf323914', '192c4f788d48f82c03e9cef40013f34370e90737', '2eb8dcf26cb37f09cffe26909a646e702dbcab66', 'fa1ae0abcde5df8d0b3283299e3f246bedf7692c', 'c11c30a8c8d727dcf5634fa0cc6ee0b4b77ddc3d', '75ca568fa1c19de4c5358fed246686de8467c238', 'a20daf90e358c1476a325ea665d533f7a27e3364', '042cc1f69ec0878f542667cb684378869f859911']\n\n >>> print(json.dumps(all_potential_vulnerabilities['9069838b30fb3b48af0123e39f664cea683254a5'], sort_keys=True, indent=4, separators=(\",\", \": \")))\n {\n     \"author\": \"Daniel Stenberg\",\n     \"author-email\": \"daniel@haxx.se\",\n     \"authored_date\": 1567544372,\n     \"branches\": [\n         \"master\"\n     ],\n     \"commit-id\": \"9069838b30fb3b48af0123e39f664cea683254a5\",\n     \"committed_date\": 1568009674,\n     \"cve\": [\n         \"CVE-2019-5481\",\n         \"CVE-2019-5481\"\n     ],\n     \"language\": \"en\",\n     \"message\": \"security:read_data fix bad realloc()\\n\\n... that could end up a double-free\\n\\nCVE-2019-5481\\nBug: https://curl.haxx.se/docs/CVE-2019-5481.html\\n\",\n     \"origin\": \"https://github.com/curl/curl.git\",\n     \"origin-github-api\": \"https://api.github.com/repos///github.com/curl/curl/commits/9069838b30fb3b48af0123e39f664cea683254a5\",\n     \"pattern-matches\": [\n         \"double-free\"\n     ],\n     \"pattern-selected\": \"(?i)(double[-| ]free|buffer overflow|double free|race[-| ]condition)\",\n     \"state\": \"cve-assigned\",\n     \"stats\": {\n         \"deletions\": 4,\n         \"files\": 1,\n         \"insertions\": 2,\n         \"lines\": 6\n     },\n     \"summary\": \"security:read_data fix bad realloc()\",\n     \"tags\": []\n }\n~~~\n\n\n## Use it as a command line tool\n\n~~~bash\n$ pipx install git-vuln-finder\n$ git-vuln-finder --help\n~~~\n\nYou can also use pip.\n``pipx`` installs scripts (system wide available) provided by Python packages\ninto separate virtualenvs to shield them from your system and each other.\n\n\n### Usage\n\n~~~bash\nusage: git-vuln-finder [-h] [-v] [-r R] [-o O] [-s S] [-p P] [-c] [-t]\n\nFinding potential software vulnerabilities from git commit messages.\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -v          increase output verbosity\n  -r R        git repository to analyse\n  -o O        Output format: [json]\n  -s S        State of the commit found\n  -p P        Matching pattern to use: [vulnpatterns, cryptopatterns,\n              cpatterns] - the pattern 'all' is used to match all the patterns\n              at once.\n  -c          output only a list of the CVE pattern found in commit messages\n              (disable by default)\n  -t          Include tags matching a specific commit\n\nMore info: https://github.com/cve-search/git-vuln-finder\n~~~\n\n\n# Patterns\n\ngit-vuln-finder comes with 3 default patterns which can be selected to find the potential vulnerabilities described in the commit messages such as:\n\n- [`vulnpatterns`](https://github.com/cve-search/git-vuln-finder/blob/master/patterns/en/medium/vuln) is a generic vulnerability pattern especially targeting web application and generic security commit message. Based on an academic paper.\n- [`cryptopatterns`](https://github.com/cve-search/git-vuln-finder/blob/master/patterns/en/medium/crypto) is a vulnerability pattern for cryptographic errors mentioned in commit messages.\n- [`cpatterns`](https://github.com/cve-search/git-vuln-finder/blob/master/patterns/en/medium/c) is a set of standard vulnerability patterns see for C/C++-like languages.\n\n\n## A sample partial output from Curl git repository\n\n~~~bash\n$ git-vuln-finder -r ~/git/curl | jq .\n...\n \"6df916d751e72fc9a1febc07bb59c4ddd886c043\": {\n    \"message\": \"loadlibrary: Only load system DLLs from the system directory\\n\\nInspiration provided by: Daniel Stenberg and Ray Satiro\\n\\nBug: https://curl.haxx.se/docs/adv_20160530.html\\n\\nRef: Windows DLL hijacking with curl, CVE-2016-4802\\n\",\n    \"language\": \"en\",\n    \"commit-id\": \"6df916d751e72fc9a1febc07bb59c4ddd886c043\",\n    \"summary\": \"loadlibrary: Only load system DLLs from the system directory\",\n    \"stats\": {\n      \"insertions\": 180,\n      \"deletions\": 8,\n      \"lines\": 188,\n      \"files\": 7\n    },\n    \"author\": \"Steve Holme\",\n    \"author-email\": \"steve_holme@hotmail.com\",\n    \"authored_date\": 1464555460,\n    \"committed_date\": 1464588867,\n    \"branches\": [\n      \"master\"\n    ],\n    \"pattern-selected\": \"(?i)(denial of service |\\bXXE\\b|remote code execution|\\bopen redirect|OSVDB|\\bvuln|\\bCVE\\b |\\bXSS\\b|\\bReDoS\\b|\\bNVD\\b|malicious|x\u2212frame\u2212options|attack|cross site |exploit|malicious|directory traversal |\\bRCE\\b|\\bdos\\b|\\bXSRF \\b|\\bXSS\\b|clickjack|session.fixation|hijack|\\badvisory|\\binsecure |security |\\bcross\u2212origin\\b|unauthori[z|s]ed |infinite loop)\",\n    \"pattern-matches\": [\n      \"hijack\"\n    ],\n    \"origin\": \"git@github.com:curl/curl.git\",\n    \"origin-github-api\": \"https://api.github.com/repos/curl/curl/commits/6df916d751e72fc9a1febc07bb59c4ddd886c043\",\n    \"tags\": [],\n    \"cve\": [\n      \"CVE-2016-4802\"\n    ],\n    \"state\": \"cve-assigned\"\n  },\n  \"c2b3f264cb5210f82bdc84a3b89250a611b68dd3\": {\n    \"message\": \"CONNECT_ONLY: don't close connection on GSS 401/407 reponses\\n\\nPreviously, connections were closed immediately before the user had a\\nchance to extract the socket when the proxy required Negotiate\\nauthentication.\\n\\nThis regression was brought in with the security fix in commit\\n79b9d5f1a42578f\\n\\nCloses #655\\n\",\n    \"language\": \"en\",\n    \"commit-id\": \"c2b3f264cb5210f82bdc84a3b89250a611b68dd3\",\n    \"summary\": \"CONNECT_ONLY: don't close connection on GSS 401/407 reponses\",\n    \"stats\": {\n      \"insertions\": 4,\n      \"deletions\": 2,\n      \"lines\": 6,\n      \"files\": 1\n    },\n    \"author\": \"Marcel Raad\",\n    \"author-email\": \"raad@teamviewer.com\",\n    \"authored_date\": 1455523116,\n    \"committed_date\": 1461704516,\n    \"branches\": [\n      \"master\"\n    ],\n    \"pattern-selected\": \"(?i)(denial of service |\\bXXE\\b|remote code execution|\\bopen redirect|OSVDB|\\bvuln|\\bCVE\\b |\\bXSS\\b|\\bReDoS\\b|\\bNVD\\b|malicious|x\u2212frame\u2212options|attack|cross site |exploit|malicious|directory traversal |\\bRCE\\b|\\bdos\\b|\\bXSRF \\b|\\bXSS\\b|clickjack|session.fixation|hijack|\\badvisory|\\binsecure |security |\\bcross\u2212origin\\b|unauthori[z|s]ed |infinite loop)\",\n    \"pattern-matches\": [\n      \"security \"\n    ],\n    \"origin\": \"git@github.com:curl/curl.git\",\n    \"origin-github-api\": \"https://api.github.com/repos/curl/curl/commits/c2b3f264cb5210f82bdc84a3b89250a611b68dd3\",\n    \"tags\": [],\n    \"state\": \"under-review\"\n  },\n...\n~~~\n\n- Extracting CVE id(s) from git messages\n\n~~~json\n  \"98d132cf6a879faf0147aa83ea0c07ff326260ed\": {\n    \"message\": \"Add a macro for testing assertion in both debug and production builds\\n\\nIf we have an assert then in a debug build we want an abort() to occur.\\nIn a production build we wan\nt the function to return an error.\\n\\nThis introduces a new macro to assist with that. The idea is to replace\\nexisting use of OPENSSL_assert() with this new macro. The problem with\\nOPENSSL\n_assert() is that it aborts() on an assertion failure in both debug\\nand production builds. It should never be a library's decision to abort a\\nprocess (we don't get to decide when to kill t\nhe life support machine or\\nthe nuclear reactor control system). Additionally if an attacker can\\ncause a reachable assert to be hit then this can be a source of DoS attacks\\ne.g. see CVE-20\n17-3733, CVE-2015-0293, CVE-2011-4577 and CVE-2002-1568.\\n\\nReviewed-by: Tim Hudson <tjh@openssl.org>\\n(Merged from https://github.com/openssl/openssl/pull/3496)\",\n    \"commit-id\": \"98d132cf6a879faf0147aa83ea0c07ff326260ed\",\n    \"summary\": \"Add a macro for testing assertion in both debug and production builds\",\n    \"stats\": {\n      \"insertions\": 18,\n      \"deletions\": 0,\n      \"lines\": 18,\n      \"files\": 1\n    },\n    \"author\": \"Matt Caswell\",\n    \"author-email\": \"matt@openssl.org\",\n    \"authored_date\": 1495182637,\n    \"committed_date\": 1495457671,\n    \"branches\": [\n      \"master\"\n    ],\n    \"pattern-selected\": \"(?i)(denial of service |\\bXXE\\b|remote code execution|\\bopen redirect|OSVDB|\\bvuln|\\bCVE\\b |\\bXSS\\b|\\bReDoS\\b|\\bNVD\\b|malicious|x\u2212frame\u2212options|attack|cross site |ex\nploit|malicious|directory traversal |\\bRCE\\b|\\bdos\\b|\\bXSRF \\b|\\bXSS\\b|clickjack|session.fixation|hijack|\\badvisory|\\binsecure |security |\\bcross\u2212origin\\b|unauthori[z|s]ed |infinite loop)\",\n    \"pattern-matches\": [\n      \"attack\"\n    ],\n    \"cve\": [\n      \"CVE-2017-3733\",\n      \"CVE-2015-0293\",\n      \"CVE-2011-4577\",\n      \"CVE-2002-1568\"\n    ],\n    \"state\": \"cve-assigned\"\n  }\n~~~\n\n\n# Running the tests\n\n~~~bash\n$ pytest\n~~~\n\n\n# License and author(s)\n\nThis software is free software and licensed under the AGPL version 3.\n\nCopyright (c) 2019-2020 Alexandre Dulaunoy - https://github.com/adulau/\n\n\n# Acknowledgment\n\n- Thanks to [Jean-Louis Huynen](https://github.com/gallypette) for the discussions about the crypto vulnerability patterns.\n- Thanks to [Sebastien Tricaud](https://github.com/stricaud) for the discussions regarding native language, commit messages and external patterns.\n- Thanks to [Cedric Bonhomme](https://github.com/cedricbonhomme) to make git-vuln-finder a Python library, add tests and improve the overall installation process.\n\n\n# Contributing\n\nWe welcome contributions for the software and especially additional vulnerability patterns. Every contributors will be added in the [AUTHORS file](./AUTHORS) and\ncollectively own this open source software. The contributors acknowledge the [Developer Certificate of Origin](https://developercertificate.org/).\n\n\n# References\n\n- [Notes](https://gist.github.com/adulau/dce5a6ca5c65017869bb01dfee576303#file-finding-vuln-git-commit-messages-md)\n- https://csce.ucmss.com/cr/books/2017/LFS/CSREA2017/ICA2077.pdf (mainly using CVE referenced in the commit message) - archive (http://archive.is/xep9o)\n- https://asankhaya.github.io/pdf/automated-identification-of-security-issues-from-commit-messages-and-bug-reports.pdf (2 main regexps)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cve-search/git-vuln-finder", "keywords": "git,cve,scanner,cve-search,cve-scanning,software-vulnerability,software-vulnerabilities", "license": "AGPL-3.0-or-later", "maintainer": "", "maintainer_email": "", "name": "git-vuln-finder", "package_url": "https://pypi.org/project/git-vuln-finder/", "platform": "", "project_url": "https://pypi.org/project/git-vuln-finder/", "project_urls": {"Homepage": "https://github.com/cve-search/git-vuln-finder", "Repository": "https://github.com/cve-search/git-vuln-finder"}, "release_url": "https://pypi.org/project/git-vuln-finder/1.1/", "requires_dist": ["langdetect (>=1.0.7,<2.0.0)", "gitpython (>=3.0.5,<4.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Finding potential software vulnerabilities from git commit messages.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>git-vuln-finder</h1>\n<p><img alt=\"git-vuln-finder logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5bf23d1703bf363a7b25eca4410a0545c0b575e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6376652d7365617263682f6769742d76756c6e2d66696e6465722f663232303737343532633337653131306266663035363465316637623334363337646337323663332f646f632f6c6f676f732f6769742d76756c6e2d66696e6465722d736d616c6c2e706e67\"></p>\n<p><a href=\"https://github.com/cve-search/git-vuln-finder/actions?query=workflow%3A%22Python+application%22\" rel=\"nofollow\"><img alt=\"Workflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/458649a099e07ae723f6a98635a55cc25de549b0/68747470733a2f2f6769746875622e636f6d2f6376652d7365617263682f6769742d76756c6e2d66696e6465722f776f726b666c6f77732f507974686f6e2532306170706c69636174696f6e2f62616467652e737667\"></a></p>\n<p>Finding potential software vulnerabilities from git commit messages.\nThe output format is a JSON with the associated commit which could contain a\nfix regarding a software vulnerability. The search is based on a set of regular\nexpressions against the commit messages only. If CVE IDs are present, those are\nadded automatically in the output.</p>\n<h1>Requirements</h1>\n<ul>\n<li>jq (<code>sudo apt install jq</code>)</li>\n</ul>\n<h1>Installation</h1>\n<h2>Use it as a library</h2>\n<p>git-vuln-finder can be install with poetry. If you don't have poetry installed, you can do the following <code>curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python</code>.</p>\n<pre>$ poetry install git-vuln-finder\n$ poetry shell\n</pre>\n<p>You can also use <code>pip</code>. Then just import it:</p>\n<pre><span class=\"n\">Python</span> <span class=\"mf\">3.8</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Dec</span> <span class=\"mi\">11</span> <span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">43</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">GCC</span> <span class=\"mf\">9.2</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"mi\">20191008</span><span class=\"p\">]</span> <span class=\"n\">on</span> <span class=\"n\">linux</span>\n<span class=\"n\">Type</span> <span class=\"s2\">\"help\"</span><span class=\"p\">,</span> <span class=\"s2\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s2\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">git_vuln_finder</span> <span class=\"kn\">import</span> <span class=\"n\">find</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">all_potential_vulnerabilities</span><span class=\"p\">,</span> <span class=\"n\">all_cve_found</span><span class=\"p\">,</span> <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"~/git/curl\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">commit</span> <span class=\"k\">for</span> <span class=\"n\">commit</span><span class=\"p\">,</span> <span class=\"n\">summary</span> <span class=\"ow\">in</span> <span class=\"n\">all_potential_vulnerabilities</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">summary</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'cve-assigned'</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"s1\">'9069838b30fb3b48af0123e39f664cea683254a5'</span><span class=\"p\">,</span> <span class=\"s1\">'facb0e4662415b5f28163e853dc6742ac5fafb3d'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span> <span class=\"n\">snap</span> <span class=\"o\">...</span>\n <span class=\"s1\">'8a75dbeb2305297640453029b7905ef51b87e8dd'</span><span class=\"p\">,</span> <span class=\"s1\">'1dc43de0dccc2ea7da6dddb7b98f8d7dcf323914'</span><span class=\"p\">,</span> <span class=\"s1\">'192c4f788d48f82c03e9cef40013f34370e90737'</span><span class=\"p\">,</span> <span class=\"s1\">'2eb8dcf26cb37f09cffe26909a646e702dbcab66'</span><span class=\"p\">,</span> <span class=\"s1\">'fa1ae0abcde5df8d0b3283299e3f246bedf7692c'</span><span class=\"p\">,</span> <span class=\"s1\">'c11c30a8c8d727dcf5634fa0cc6ee0b4b77ddc3d'</span><span class=\"p\">,</span> <span class=\"s1\">'75ca568fa1c19de4c5358fed246686de8467c238'</span><span class=\"p\">,</span> <span class=\"s1\">'a20daf90e358c1476a325ea665d533f7a27e3364'</span><span class=\"p\">,</span> <span class=\"s1\">'042cc1f69ec0878f542667cb684378869f859911'</span><span class=\"p\">]</span>\n\n <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">all_potential_vulnerabilities</span><span class=\"p\">[</span><span class=\"s1\">'9069838b30fb3b48af0123e39f664cea683254a5'</span><span class=\"p\">],</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">separators</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\",\"</span><span class=\"p\">,</span> <span class=\"s2\">\": \"</span><span class=\"p\">)))</span>\n <span class=\"p\">{</span>\n     <span class=\"s2\">\"author\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Daniel Stenberg\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"author-email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"daniel@haxx.se\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"authored_date\"</span><span class=\"p\">:</span> <span class=\"mi\">1567544372</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"branches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"s2\">\"master\"</span>\n     <span class=\"p\">],</span>\n     <span class=\"s2\">\"commit-id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"9069838b30fb3b48af0123e39f664cea683254a5\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"committed_date\"</span><span class=\"p\">:</span> <span class=\"mi\">1568009674</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"cve\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"s2\">\"CVE-2019-5481\"</span><span class=\"p\">,</span>\n         <span class=\"s2\">\"CVE-2019-5481\"</span>\n     <span class=\"p\">],</span>\n     <span class=\"s2\">\"language\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"security:read_data fix bad realloc()</span><span class=\"se\">\\n\\n</span><span class=\"s2\">... that could end up a double-free</span><span class=\"se\">\\n\\n</span><span class=\"s2\">CVE-2019-5481</span><span class=\"se\">\\n</span><span class=\"s2\">Bug: https://curl.haxx.se/docs/CVE-2019-5481.html</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"origin\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://github.com/curl/curl.git\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"origin-github-api\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://api.github.com/repos///github.com/curl/curl/commits/9069838b30fb3b48af0123e39f664cea683254a5\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"pattern-matches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"s2\">\"double-free\"</span>\n     <span class=\"p\">],</span>\n     <span class=\"s2\">\"pattern-selected\"</span><span class=\"p\">:</span> <span class=\"s2\">\"(?i)(double[-| ]free|buffer overflow|double free|race[-| ]condition)\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"state\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cve-assigned\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"stats\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"s2\">\"deletions\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n         <span class=\"s2\">\"files\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n         <span class=\"s2\">\"insertions\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n         <span class=\"s2\">\"lines\"</span><span class=\"p\">:</span> <span class=\"mi\">6</span>\n     <span class=\"p\">},</span>\n     <span class=\"s2\">\"summary\"</span><span class=\"p\">:</span> <span class=\"s2\">\"security:read_data fix bad realloc()\"</span><span class=\"p\">,</span>\n     <span class=\"s2\">\"tags\"</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n <span class=\"p\">}</span>\n</pre>\n<h2>Use it as a command line tool</h2>\n<pre>$ pipx install git-vuln-finder\n$ git-vuln-finder --help\n</pre>\n<p>You can also use pip.\n<code>pipx</code> installs scripts (system wide available) provided by Python packages\ninto separate virtualenvs to shield them from your system and each other.</p>\n<h3>Usage</h3>\n<pre>usage: git-vuln-finder <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>-r R<span class=\"o\">]</span> <span class=\"o\">[</span>-o O<span class=\"o\">]</span> <span class=\"o\">[</span>-s S<span class=\"o\">]</span> <span class=\"o\">[</span>-p P<span class=\"o\">]</span> <span class=\"o\">[</span>-c<span class=\"o\">]</span> <span class=\"o\">[</span>-t<span class=\"o\">]</span>\n\nFinding potential software vulnerabilities from git commit messages.\n\noptional arguments:\n  -h, --help  show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -v          increase output verbosity\n  -r R        git repository to analyse\n  -o O        Output format: <span class=\"o\">[</span>json<span class=\"o\">]</span>\n  -s S        State of the commit found\n  -p P        Matching pattern to use: <span class=\"o\">[</span>vulnpatterns, cryptopatterns,\n              cpatterns<span class=\"o\">]</span> - the pattern <span class=\"s1\">'all'</span> is used to match all the patterns\n              at once.\n  -c          output only a list of the CVE pattern found in commit messages\n              <span class=\"o\">(</span>disable by default<span class=\"o\">)</span>\n  -t          Include tags matching a specific commit\n\nMore info: https://github.com/cve-search/git-vuln-finder\n</pre>\n<h1>Patterns</h1>\n<p>git-vuln-finder comes with 3 default patterns which can be selected to find the potential vulnerabilities described in the commit messages such as:</p>\n<ul>\n<li><a href=\"https://github.com/cve-search/git-vuln-finder/blob/master/patterns/en/medium/vuln\" rel=\"nofollow\"><code>vulnpatterns</code></a> is a generic vulnerability pattern especially targeting web application and generic security commit message. Based on an academic paper.</li>\n<li><a href=\"https://github.com/cve-search/git-vuln-finder/blob/master/patterns/en/medium/crypto\" rel=\"nofollow\"><code>cryptopatterns</code></a> is a vulnerability pattern for cryptographic errors mentioned in commit messages.</li>\n<li><a href=\"https://github.com/cve-search/git-vuln-finder/blob/master/patterns/en/medium/c\" rel=\"nofollow\"><code>cpatterns</code></a> is a set of standard vulnerability patterns see for C/C++-like languages.</li>\n</ul>\n<h2>A sample partial output from Curl git repository</h2>\n<pre>$ git-vuln-finder -r ~/git/curl <span class=\"p\">|</span> jq .\n...\n <span class=\"s2\">\"6df916d751e72fc9a1febc07bb59c4ddd886c043\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"message\"</span>: <span class=\"s2\">\"loadlibrary: Only load system DLLs from the system directory\\n\\nInspiration provided by: Daniel Stenberg and Ray Satiro\\n\\nBug: https://curl.haxx.se/docs/adv_20160530.html\\n\\nRef: Windows DLL hijacking with curl, CVE-2016-4802\\n\"</span>,\n    <span class=\"s2\">\"language\"</span>: <span class=\"s2\">\"en\"</span>,\n    <span class=\"s2\">\"commit-id\"</span>: <span class=\"s2\">\"6df916d751e72fc9a1febc07bb59c4ddd886c043\"</span>,\n    <span class=\"s2\">\"summary\"</span>: <span class=\"s2\">\"loadlibrary: Only load system DLLs from the system directory\"</span>,\n    <span class=\"s2\">\"stats\"</span>: <span class=\"o\">{</span>\n      <span class=\"s2\">\"insertions\"</span>: <span class=\"m\">180</span>,\n      <span class=\"s2\">\"deletions\"</span>: <span class=\"m\">8</span>,\n      <span class=\"s2\">\"lines\"</span>: <span class=\"m\">188</span>,\n      <span class=\"s2\">\"files\"</span>: <span class=\"m\">7</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"author\"</span>: <span class=\"s2\">\"Steve Holme\"</span>,\n    <span class=\"s2\">\"author-email\"</span>: <span class=\"s2\">\"steve_holme@hotmail.com\"</span>,\n    <span class=\"s2\">\"authored_date\"</span>: <span class=\"m\">1464555460</span>,\n    <span class=\"s2\">\"committed_date\"</span>: <span class=\"m\">1464588867</span>,\n    <span class=\"s2\">\"branches\"</span>: <span class=\"o\">[</span>\n      <span class=\"s2\">\"master\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"pattern-selected\"</span>: <span class=\"s2\">\"(?i)(denial of service |\\bXXE\\b|remote code execution|\\bopen redirect|OSVDB|\\bvuln|\\bCVE\\b |\\bXSS\\b|\\bReDoS\\b|\\bNVD\\b|malicious|x\u2212frame\u2212options|attack|cross site |exploit|malicious|directory traversal |\\bRCE\\b|\\bdos\\b|\\bXSRF \\b|\\bXSS\\b|clickjack|session.fixation|hijack|\\badvisory|\\binsecure |security |\\bcross\u2212origin\\b|unauthori[z|s]ed |infinite loop)\"</span>,\n    <span class=\"s2\">\"pattern-matches\"</span>: <span class=\"o\">[</span>\n      <span class=\"s2\">\"hijack\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"origin\"</span>: <span class=\"s2\">\"git@github.com:curl/curl.git\"</span>,\n    <span class=\"s2\">\"origin-github-api\"</span>: <span class=\"s2\">\"https://api.github.com/repos/curl/curl/commits/6df916d751e72fc9a1febc07bb59c4ddd886c043\"</span>,\n    <span class=\"s2\">\"tags\"</span>: <span class=\"o\">[]</span>,\n    <span class=\"s2\">\"cve\"</span>: <span class=\"o\">[</span>\n      <span class=\"s2\">\"CVE-2016-4802\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"state\"</span>: <span class=\"s2\">\"cve-assigned\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"c2b3f264cb5210f82bdc84a3b89250a611b68dd3\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"message\"</span>: <span class=\"s2\">\"CONNECT_ONLY: don't close connection on GSS 401/407 reponses\\n\\nPreviously, connections were closed immediately before the user had a\\nchance to extract the socket when the proxy required Negotiate\\nauthentication.\\n\\nThis regression was brought in with the security fix in commit\\n79b9d5f1a42578f\\n\\nCloses #655\\n\"</span>,\n    <span class=\"s2\">\"language\"</span>: <span class=\"s2\">\"en\"</span>,\n    <span class=\"s2\">\"commit-id\"</span>: <span class=\"s2\">\"c2b3f264cb5210f82bdc84a3b89250a611b68dd3\"</span>,\n    <span class=\"s2\">\"summary\"</span>: <span class=\"s2\">\"CONNECT_ONLY: don't close connection on GSS 401/407 reponses\"</span>,\n    <span class=\"s2\">\"stats\"</span>: <span class=\"o\">{</span>\n      <span class=\"s2\">\"insertions\"</span>: <span class=\"m\">4</span>,\n      <span class=\"s2\">\"deletions\"</span>: <span class=\"m\">2</span>,\n      <span class=\"s2\">\"lines\"</span>: <span class=\"m\">6</span>,\n      <span class=\"s2\">\"files\"</span>: <span class=\"m\">1</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"author\"</span>: <span class=\"s2\">\"Marcel Raad\"</span>,\n    <span class=\"s2\">\"author-email\"</span>: <span class=\"s2\">\"raad@teamviewer.com\"</span>,\n    <span class=\"s2\">\"authored_date\"</span>: <span class=\"m\">1455523116</span>,\n    <span class=\"s2\">\"committed_date\"</span>: <span class=\"m\">1461704516</span>,\n    <span class=\"s2\">\"branches\"</span>: <span class=\"o\">[</span>\n      <span class=\"s2\">\"master\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"pattern-selected\"</span>: <span class=\"s2\">\"(?i)(denial of service |\\bXXE\\b|remote code execution|\\bopen redirect|OSVDB|\\bvuln|\\bCVE\\b |\\bXSS\\b|\\bReDoS\\b|\\bNVD\\b|malicious|x\u2212frame\u2212options|attack|cross site |exploit|malicious|directory traversal |\\bRCE\\b|\\bdos\\b|\\bXSRF \\b|\\bXSS\\b|clickjack|session.fixation|hijack|\\badvisory|\\binsecure |security |\\bcross\u2212origin\\b|unauthori[z|s]ed |infinite loop)\"</span>,\n    <span class=\"s2\">\"pattern-matches\"</span>: <span class=\"o\">[</span>\n      <span class=\"s2\">\"security \"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"origin\"</span>: <span class=\"s2\">\"git@github.com:curl/curl.git\"</span>,\n    <span class=\"s2\">\"origin-github-api\"</span>: <span class=\"s2\">\"https://api.github.com/repos/curl/curl/commits/c2b3f264cb5210f82bdc84a3b89250a611b68dd3\"</span>,\n    <span class=\"s2\">\"tags\"</span>: <span class=\"o\">[]</span>,\n    <span class=\"s2\">\"state\"</span>: <span class=\"s2\">\"under-review\"</span>\n  <span class=\"o\">}</span>,\n...\n</pre>\n<ul>\n<li>Extracting CVE id(s) from git messages</li>\n</ul>\n<pre>  <span class=\"s2\">\"98d132cf6a879faf0147aa83ea0c07ff326260ed\"</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Add a macro for testing assertion in both debug and production builds\\n\\nIf we have an assert then in a debug build we want an abort() to occur.\\nIn a production build we wan</span>\n<span class=\"s2\">t the function to return an error.\\n\\nThis introduces a new macro to assist with that. The idea is to replace\\nexisting use of OPENSSL_assert() with this new macro. The problem with\\nOPENSSL</span>\n<span class=\"s2\">_assert() is that it aborts() on an assertion failure in both debug\\nand production builds. It should never be a library's decision to abort a\\nprocess (we don't get to decide when to kill t</span>\n<span class=\"s2\">he life support machine or\\nthe nuclear reactor control system). Additionally if an attacker can\\ncause a reachable assert to be hit then this can be a source of DoS attacks\\ne.g. see CVE-20</span>\n<span class=\"s2\">17-3733, CVE-2015-0293, CVE-2011-4577 and CVE-2002-1568.\\n\\nReviewed-by: Tim Hudson &lt;tjh@openssl.org&gt;\\n(Merged from https://github.com/openssl/openssl/pull/3496)\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"commit-id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"98d132cf6a879faf0147aa83ea0c07ff326260ed\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"summary\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Add a macro for testing assertion in both debug and production builds\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"stats\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"insertions\"</span><span class=\"p\">:</span> <span class=\"mi\">18</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"deletions\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"lines\"</span><span class=\"p\">:</span> <span class=\"mi\">18</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"files\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"author\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Matt Caswell\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"author-email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"matt@openssl.org\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"authored_date\"</span><span class=\"p\">:</span> <span class=\"mi\">1495182637</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"committed_date\"</span><span class=\"p\">:</span> <span class=\"mi\">1495457671</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"branches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"master\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"pattern-selected\"</span><span class=\"p\">:</span> <span class=\"s2\">\"(?i)(denial of service |\\bXXE\\b|remote code execution|\\bopen redirect|OSVDB|\\bvuln|\\bCVE\\b |\\bXSS\\b|\\bReDoS\\b|\\bNVD\\b|malicious|x\u2212frame\u2212options|attack|cross site |ex</span>\n<span class=\"s2\">ploit|malicious|directory traversal |\\bRCE\\b|\\bdos\\b|\\bXSRF \\b|\\bXSS\\b|clickjack|session.fixation|hijack|\\badvisory|\\binsecure |security |\\bcross\u2212origin\\b|unauthori[z|s]ed |infinite loop)\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"pattern-matches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"attack\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"cve\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"CVE-2017-3733\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"CVE-2015-0293\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"CVE-2011-4577\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"CVE-2002-1568\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"state\"</span><span class=\"p\">:</span> <span class=\"s2\">\"cve-assigned\"</span>\n  <span class=\"p\">}</span>\n</pre>\n<h1>Running the tests</h1>\n<pre>$ pytest\n</pre>\n<h1>License and author(s)</h1>\n<p>This software is free software and licensed under the AGPL version 3.</p>\n<p>Copyright (c) 2019-2020 Alexandre Dulaunoy - <a href=\"https://github.com/adulau/\" rel=\"nofollow\">https://github.com/adulau/</a></p>\n<h1>Acknowledgment</h1>\n<ul>\n<li>Thanks to <a href=\"https://github.com/gallypette\" rel=\"nofollow\">Jean-Louis Huynen</a> for the discussions about the crypto vulnerability patterns.</li>\n<li>Thanks to <a href=\"https://github.com/stricaud\" rel=\"nofollow\">Sebastien Tricaud</a> for the discussions regarding native language, commit messages and external patterns.</li>\n<li>Thanks to <a href=\"https://github.com/cedricbonhomme\" rel=\"nofollow\">Cedric Bonhomme</a> to make git-vuln-finder a Python library, add tests and improve the overall installation process.</li>\n</ul>\n<h1>Contributing</h1>\n<p>We welcome contributions for the software and especially additional vulnerability patterns. Every contributors will be added in the <a href=\"./AUTHORS\" rel=\"nofollow\">AUTHORS file</a> and\ncollectively own this open source software. The contributors acknowledge the <a href=\"https://developercertificate.org/\" rel=\"nofollow\">Developer Certificate of Origin</a>.</p>\n<h1>References</h1>\n<ul>\n<li><a href=\"https://gist.github.com/adulau/dce5a6ca5c65017869bb01dfee576303#file-finding-vuln-git-commit-messages-md\" rel=\"nofollow\">Notes</a></li>\n<li><a href=\"https://csce.ucmss.com/cr/books/2017/LFS/CSREA2017/ICA2077.pdf\" rel=\"nofollow\">https://csce.ucmss.com/cr/books/2017/LFS/CSREA2017/ICA2077.pdf</a> (mainly using CVE referenced in the commit message) - archive (<a href=\"http://archive.is/xep9o\" rel=\"nofollow\">http://archive.is/xep9o</a>)</li>\n<li><a href=\"https://asankhaya.github.io/pdf/automated-identification-of-security-issues-from-commit-messages-and-bug-reports.pdf\" rel=\"nofollow\">https://asankhaya.github.io/pdf/automated-identification-of-security-issues-from-commit-messages-and-bug-reports.pdf</a> (2 main regexps)</li>\n</ul>\n\n          </div>"}, "last_serial": 6408090, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "f6b22641171c1867e4e5217b1f23d54a", "sha256": "db24b1803cbcaa603325df449818f4b0bfd824c52ebcaf3dcbc9c864a0656e4f"}, "downloads": -1, "filename": "git_vuln_finder-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f6b22641171c1867e4e5217b1f23d54a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 13167, "upload_time": "2020-01-07T10:42:44", "upload_time_iso_8601": "2020-01-07T10:42:44.035923Z", "url": "https://files.pythonhosted.org/packages/31/54/62a124bbff25022301b505a61f325416fbb0bbf2e03f4e9f2445cdcb47d7/git_vuln_finder-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53b5102b68a68e2c833129c8ef88e960", "sha256": "25166326f8b4f91c82842f019f48497591cd4f714205f5da445280fd64e847dd"}, "downloads": -1, "filename": "git-vuln-finder-1.1.tar.gz", "has_sig": false, "md5_digest": "53b5102b68a68e2c833129c8ef88e960", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14480, "upload_time": "2020-01-07T10:42:41", "upload_time_iso_8601": "2020-01-07T10:42:41.520599Z", "url": "https://files.pythonhosted.org/packages/18/f1/e8e1672b0b1947ca2bde66898b4fea063b1d6696f279ae068e93ce17bc89/git-vuln-finder-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6b22641171c1867e4e5217b1f23d54a", "sha256": "db24b1803cbcaa603325df449818f4b0bfd824c52ebcaf3dcbc9c864a0656e4f"}, "downloads": -1, "filename": "git_vuln_finder-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f6b22641171c1867e4e5217b1f23d54a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 13167, "upload_time": "2020-01-07T10:42:44", "upload_time_iso_8601": "2020-01-07T10:42:44.035923Z", "url": "https://files.pythonhosted.org/packages/31/54/62a124bbff25022301b505a61f325416fbb0bbf2e03f4e9f2445cdcb47d7/git_vuln_finder-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53b5102b68a68e2c833129c8ef88e960", "sha256": "25166326f8b4f91c82842f019f48497591cd4f714205f5da445280fd64e847dd"}, "downloads": -1, "filename": "git-vuln-finder-1.1.tar.gz", "has_sig": false, "md5_digest": "53b5102b68a68e2c833129c8ef88e960", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14480, "upload_time": "2020-01-07T10:42:41", "upload_time_iso_8601": "2020-01-07T10:42:41.520599Z", "url": "https://files.pythonhosted.org/packages/18/f1/e8e1672b0b1947ca2bde66898b4fea063b1d6696f279ae068e93ce17bc89/git-vuln-finder-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:44 2020"}