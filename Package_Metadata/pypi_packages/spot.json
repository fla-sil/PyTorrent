{"info": {"author": "Eugene Van den Bulke", "author_email": "eugene.vandenbulke@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: Freely Distributable", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "==================================\r\nSPOT - DotCloud environment loader\r\n==================================\r\n\r\nWhy?\r\n====\r\n\r\nWhen working with DotCloud_ you will more than likely have a developement\r\nenvironment locally that offers the services your application requires which\r\nare specified in the `build file`_.\r\n\r\nLocally one very rarely bother changing the parameters of the services from\r\ntheir defaults settings but on DotCloud_ your application must read the\r\n`environment file`_.\r\n\r\nHence you end up with a fair amount of boilerplate code in your application\r\nwhich figures out wether it is running locally or on DotCloud_ and instantiates\r\nthe services for you to use accordingly.\r\n\r\nNot anymore ... if you don't want to ;)\r\n\r\nHow?\r\n====\r\n\r\nEnters SPOT (named after the French earth observation satellite). SPOT knows\r\nwether your code is running locally or on DotCloud_, exposes each service\r\nparameters under the name you gave it in your `build file`_.\r\n\r\nFor example if your build file contains a python_ service named www and a redis_\r\nservice named cache::\r\n\r\n    www:\r\n        type: python\r\n    cache:\r\n        type: redis\r\n\r\nThen when you instantiate a spot.Dotcloud() object it will expose the cache\r\nservices::\r\n\r\n    >>> import spot\r\n    >>> dotcloud = spot.Dotcloud()\r\n    >>> isinstance(dotcloud.cache, spot.Redis)\r\n    True\r\n\r\nWhen running locally::\r\n\r\n    >>> dotcloud.cache.host\r\n    u'localhost'\r\n\r\nBut on DotCloud::\r\n\r\n    >>> dotcloud.cache.host\r\n    u'SOMETHING.dotcloud.com'\r\n\r\nIf you have installed the packages allowing Python to handle the services e.g.\r\nredis_ (and hiredis_), the spot.Dotcloud instance also expose a connection to\r\nthe server you can use out of the box::\r\n\r\n    >>> type(dotcloud.cache.server)\r\n    <class 'redis.client.StrictRedis'>\r\n\r\nNext?\r\n=====\r\n\r\nAt this stage only the Redis_ and MongoDB_ services are managed. I will add more\r\nas I *require* them ... or you can contribute and submit new services definition\r\nvia pull request ;)\r\n\r\n\r\n\r\n.. _DotCloud: http://dotcloud.com\r\n.. _redis: http://redis.io\r\n.. _python: http://python.org\r\n.. _build file: http://docs.dotcloud.com/guides/build-file/\r\n.. _environment file: http://docs.dotcloud.com/guides/environment/\r\n.. _redis: http://pypi.python.org/pypi/redis\r\n.. _hiredis: http://pypi.python.org/pypi/hiredis\r\n.. _mongodb: http://www.mongodb.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/3kwa/spot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "spot", "package_url": "https://pypi.org/project/spot/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/spot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/3kwa/spot"}, "release_url": "https://pypi.org/project/spot/0.1a/", "requires_dist": null, "requires_python": null, "summary": "DotCloud environment loader", "version": "0.1a", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==================================\n<br>SPOT - DotCloud environment loader\n<br>==================================\n<br>\n<br>Why?\n<br>====\n<br>\n<br>When working with DotCloud_ you will more than likely have a developement\n<br>environment locally that offers the services your application requires which\n<br>are specified in the `build file`_.\n<br>\n<br>Locally one very rarely bother changing the parameters of the services from\n<br>their defaults settings but on DotCloud_ your application must read the\n<br>`environment file`_.\n<br>\n<br>Hence you end up with a fair amount of boilerplate code in your application\n<br>which figures out wether it is running locally or on DotCloud_ and instantiates\n<br>the services for you to use accordingly.\n<br>\n<br>Not anymore ... if you don't want to ;)\n<br>\n<br>How?\n<br>====\n<br>\n<br>Enters SPOT (named after the French earth observation satellite). SPOT knows\n<br>wether your code is running locally or on DotCloud_, exposes each service\n<br>parameters under the name you gave it in your `build file`_.\n<br>\n<br>For example if your build file contains a python_ service named www and a redis_\n<br>service named cache::\n<br>\n<br>    www:\n<br>        type: python\n<br>    cache:\n<br>        type: redis\n<br>\n<br>Then when you instantiate a spot.Dotcloud() object it will expose the cache\n<br>services::\n<br>\n<br>    &gt;&gt;&gt; import spot\n<br>    &gt;&gt;&gt; dotcloud = spot.Dotcloud()\n<br>    &gt;&gt;&gt; isinstance(dotcloud.cache, spot.Redis)\n<br>    True\n<br>\n<br>When running locally::\n<br>\n<br>    &gt;&gt;&gt; dotcloud.cache.host\n<br>    u'localhost'\n<br>\n<br>But on DotCloud::\n<br>\n<br>    &gt;&gt;&gt; dotcloud.cache.host\n<br>    u'SOMETHING.dotcloud.com'\n<br>\n<br>If you have installed the packages allowing Python to handle the services e.g.\n<br>redis_ (and hiredis_), the spot.Dotcloud instance also expose a connection to\n<br>the server you can use out of the box::\n<br>\n<br>    &gt;&gt;&gt; type(dotcloud.cache.server)\n<br>    &lt;class 'redis.client.StrictRedis'&gt;\n<br>\n<br>Next?\n<br>=====\n<br>\n<br>At this stage only the Redis_ and MongoDB_ services are managed. I will add more\n<br>as I *require* them ... or you can contribute and submit new services definition\n<br>via pull request ;)\n<br>\n<br>\n<br>\n<br>.. _DotCloud: http://dotcloud.com\n<br>.. _redis: http://redis.io\n<br>.. _python: http://python.org\n<br>.. _build file: http://docs.dotcloud.com/guides/build-file/\n<br>.. _environment file: http://docs.dotcloud.com/guides/environment/\n<br>.. _redis: http://pypi.python.org/pypi/redis\n<br>.. _hiredis: http://pypi.python.org/pypi/hiredis\n<br>.. _mongodb: http://www.mongodb.org/\n          </div>"}, "last_serial": 1988894, "releases": {"0.1a": [{"comment_text": "", "digests": {"md5": "86f253c7e446c2a86079e1ef13d30f5f", "sha256": "86a142517513d523258d3ccc08097aeeaab240b9866cf87c07dd8dbc41ef5903"}, "downloads": -1, "filename": "spot-0.1a.tar.gz", "has_sig": false, "md5_digest": "86f253c7e446c2a86079e1ef13d30f5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3855, "upload_time": "2012-05-20T06:20:20", "upload_time_iso_8601": "2012-05-20T06:20:20.757803Z", "url": "https://files.pythonhosted.org/packages/7a/be/f108566c1d719591902e72064b6779723b90a3e05bd27630856c34a34a35/spot-0.1a.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86f253c7e446c2a86079e1ef13d30f5f", "sha256": "86a142517513d523258d3ccc08097aeeaab240b9866cf87c07dd8dbc41ef5903"}, "downloads": -1, "filename": "spot-0.1a.tar.gz", "has_sig": false, "md5_digest": "86f253c7e446c2a86079e1ef13d30f5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3855, "upload_time": "2012-05-20T06:20:20", "upload_time_iso_8601": "2012-05-20T06:20:20.757803Z", "url": "https://files.pythonhosted.org/packages/7a/be/f108566c1d719591902e72064b6779723b90a3e05bd27630856c34a34a35/spot-0.1a.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:33 2020"}