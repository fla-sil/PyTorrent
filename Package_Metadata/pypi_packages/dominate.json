{"info": {"author": "Tom Flanagan and Jake Wharton", "author_email": "tom@zkpq.ca", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: HTML"], "description": "Dominate\n========\n\n`Dominate` is a Python library for creating and manipulating HTML documents using an elegant DOM API.\nIt allows you to write HTML pages in pure Python very concisely, which eliminates the need to learn another template language, and lets you take advantage of the more powerful features of Python.\n\n![Python version](https://img.shields.io/pypi/pyversions/dominate.svg?style=flat)\n[![Build status](https://img.shields.io/travis/Knio/dominate/master.svg?style=flat)](https://travis-ci.org/Knio/dominate)\n[![Coverage status](https://img.shields.io/coveralls/github/Knio/dominate/master.svg?style=flat)](https://coveralls.io/r/Knio/dominate?branch=master)\n\nPython:\n\n```python\nimport dominate\nfrom dominate.tags import *\n\ndoc = dominate.document(title='Dominate your HTML')\n\nwith doc.head:\n    link(rel='stylesheet', href='style.css')\n    script(type='text/javascript', src='script.js')\n\nwith doc:\n    with div(id='header').add(ol()):\n        for i in ['home', 'about', 'contact']:\n            li(a(i.title(), href='/%s.html' % i))\n\n    with div():\n        attr(cls='body')\n        p('Lorem ipsum..')\n\nprint(doc)\n```\n\nOutput:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Dominate your HTML</title>\n    <link href=\"style.css\" rel=\"stylesheet\">\n    <script src=\"script.js\" type=\"text/javascript\"></script>\n  </head>\n  <body>\n    <div id=\"header\">\n      <ol>\n        <li>\n          <a href=\"/home.html\">Home</a>\n        </li>\n        <li>\n          <a href=\"/about.html\">About</a>\n        </li>\n        <li>\n          <a href=\"/contact.html\">Contact</a>\n        </li>\n      </ol>\n    </div>\n    <div class=\"body\">\n      <p>Lorem ipsum..</p>\n    </div>\n  </body>\n</html>\n```\n\n\nInstallation\n------------\n\nThe recommended way to install `dominate` is with\n[`pip`](http://pypi.python.org/pypi/pip/):\n\n    sudo pip install dominate\n\n[![PyPI version](https://img.shields.io/pypi/v/dominate.svg?style=flat)](https://pypi.org/project/dominate/)\n[![PyPI downloads](https://img.shields.io/pypi/dm/dominate.svg?style=flat)](https://pypi.org/project/dominate/)\n\n\n\nDeveloped By\n------------\n\n* Tom Flanagan - <tom@zkpq.ca>\n* Jake Wharton - <jakewharton@gmail.com>\n* [Brad Janke](//github.com/bradj)\n\nGit repository located at\n[github.com/Knio/dominate](//github.com/Knio/dominate)\n\n\nExamples\n========\n\nAll examples assume you have imported the appropriate tags or entire tag set:\n\n```python\nfrom dominate.tags import *\n```\n\n\nHello, World!\n-------------\n\nThe most basic feature of `dominate` exposes a class for each HTML element, where the constructor\naccepts child elements, text, or keyword attributes. `dominate` nodes return their HTML representation\nfrom the `__str__`, `__unicode__`, and `render()` methods.\n\n```python\nprint(html(body(h1('Hello, World!'))))\n```\n```html\n<html>\n    <body>\n        <h1>Hello, World!</h1>\n    </body>\n</html>\n```\n\nAttributes\n----------\n\n`Dominate` can also use keyword arguments to append attributes onto your tags. Most of the attributes are a direct copy from the HTML spec with a few variations.\n\nFor attributes `class` and `for` which conflict with Python's [reserved keywords](http://docs.python.org/2/reference/lexical_analysis.html#keywords \"Reserved Keywords\"), you can use the following aliases:\n\n| class | for |\n|-------|-----|\n|_class | _for |\n|cls | fr |\n|className|htmlFor|\n|class_name|html_for|\n\n\n```python\ntest = label(cls='classname anothername', fr='someinput')\nprint(test)\n```\n```html\n<label class=\"classname anothername\" for=\"someinput\"></label>\n```\n\nUse `data_*` for [custom HTML5 data attributes](http://www.w3.org/html/wg/drafts/html/master/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes \"HTML5 Data Attributes\").\n\n```python\ntest = div(data_employee='101011')\nprint(test)\n```\n```html\n<div data-employee=\"101011\"></div>\n```\n\nYou can also modify the attributes of tags through a dictionary-like interface:\n\n```python\nheader = div()\nheader['id'] = 'header'\nprint(header)\n```\n```html\n<div id=\"header\"></div>\n```\n\nComplex Structures\n------------------\n\nThrough the use of the `+=` operator and the `.add()` method you can easily create more advanced structures.\n\nCreate a simple list:\n\n```python\nlist = ul()\nfor item in range(4):\n    list += li('Item #', item)\nprint(list)\n```\n```html\n<ul>\n    <li>Item #0</li>\n    <li>Item #1</li>\n    <li>Item #2</li>\n    <li>Item #3</li>\n</ul>\n```\n\n`dominate` supports iterables to help streamline your code:\n\n```python\nprint(ul(li(a(name, href=link), __pretty=False) for name, link in menu_items))\n```\n```html\n<ul>\n    <li><a href=\"/home/\">Home</a></li>\n    <li><a href=\"/about/\">About</a></li>\n    <li><a href=\"/downloads/\">Downloads</a></li>\n    <li><a href=\"/links/\">Links</a></li>\n</ul>\n```\n\nA simple document tree:\n\n```python\n_html = html()\n_body = _html.add(body())\nheader  = _body.add(div(id='header'))\ncontent = _body.add(div(id='content'))\nfooter  = _body.add(div(id='footer'))\nprint(_html)\n```\n```html\n<html>\n    <body>\n        <div id=\"header\"></div>\n        <div id=\"content\"></div>\n        <div id=\"footer\"></div>\n    </body>\n</html>\n```\n\nFor clean code, the `.add()` method returns children in tuples. The above example can be cleaned up and expanded like this:\n\n```python\n_html = html()\n_head, _body = _html.add(head(title('Simple Document Tree')), body())\nnames = ['header', 'content', 'footer']\nheader, content, footer = _body.add([div(id=name) for name in names])\nprint(_html)\n```\n```html\n<html>\n    <head>\n       <title>Simple Document Tree</title>\n    </head>\n    <body>\n        <div id=\"header\"></div>\n        <div id=\"content\"></div>\n        <div id=\"footer\"></div>\n    </body>\n</html>\n```\n\nYou can modify the attributes of tags through a dictionary-like interface:\n\n```python\nheader = div()\nheader['id'] = 'header'\nprint(header)\n```\n```html\n<div id=\"header\"></div>\n```\n\nOr the children of a tag though an array-line interface:\n\n```python\nheader = div('Test')\nheader[0] = 'Hello World'\nprint(header)\n```\n```html\n<div>Hello World</div>\n```\n\nComments can be created using objects too!\n\n```python\nprint(comment('BEGIN HEADER'))\n```\n```html\n<!--BEGIN HEADER-->\n```\n\n```python\nprint(comment(p('Upgrade to newer IE!'), condition='lt IE9'))\n```\n```html\n<!--[if lt IE9]>\n  <p>Upgrade to newer IE!</p>\n<![endif]-->\n```\n\nRendering\n---------\n\nBy default, `render()` tries to make all output human readable, with one HTML\nelement per line and two spaces of indentation.\n\nThis behavior can be controlled by the `__pretty` (default: `True` except for\ncertain element types like `pre`) attribute when creating an element, and by\nthe `pretty` (default: `True`), `indent` (default: `  `) and `xhtml` (default: `False`)\n arguments to `render()`. Rendering options propagate to all descendant nodes.\n\n```python\na = div(span('Hello World'))\nprint(a.render())\n```\n```html\n<div>\n  <span>Hello World</span>\n</div>\n```\n```python\nprint(a.render(pretty=False))\n```\n```html\n<div><span>Hello World</span></div>\n```\n```python\nprint(a.render(indent='\\t'))\n```\n```html\n<div>\n\t<span>Hello World</span>\n</div>\n```\n```python\na = div(span('Hello World'), __pretty=False)\nprint(a.render())\n```\n```html\n<div><span>Hello World</span></div>\n```\n```python\nd = div()\nwith d:\n    hr()\n    p(\"Test\")\n    br()\nprint(d.render())\nprint(d.render(xhtml=True))\n```\n```html\n<div>\n  <hr>\n  <p>Test</p><br>\n</div>\n<div>\n  <hr />\n  <p>Test</p><br />\n</div>\n```\n\n\nContext Managers\n----------------\n\nYou can also add child elements using Python's `with` statement:\n\n```python\nh = ul()\nwith h:\n    li('One')\n    li('Two')\n    li('Three')\n\nprint(h)\n```\n```html\n<ul>\n    <li>One</li>\n    <li>Two</li>\n    <li>Three</li>\n</ul>\n```\n\n\nYou can use this along with the other mechanisms of adding children elements, including nesting `with` statements, and it works as expected:\n\n```python\nh = html()\nwith h.add(body()).add(div(id='content')):\n    h1('Hello World!')\n    p('Lorem ipsum ...')\n    with table().add(tbody()):\n        l = tr()\n        l += td('One')\n        l.add(td('Two'))\n        with l:\n            td('Three')\n\nprint(h)\n```\n```html\n<html>\n    <body>\n        <div id=\"content\">\n            <h1>Hello World!</h1>\n            <p>Lorem ipsum ...</p>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>One</td>\n                        <td>Two</td>\n                        <td>Three</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </body>\n</html>\n```\n\nWhen the context is closed, any nodes that were not already added to something get added to the current context.\n\nAttributes can be added to the current context with the `attr` function:\n\n```python\nd = div()\nwith d:\n    attr(id='header')\n\n print(d)\n ```\n ```html\n<div id=\"header\"></div>\n```\n\nAnd text nodes can be added with the `dominate.util.text` function:\n\n```python\nfrom dominate.util import text\npara = p(__pretty=False)\nwith para:\n    text('Have a look at our ')\n    a('other products', href='/products')\n\nprint(para)\n```\n```html\n<p>Have a look at our <a href=\"/products\">other products</a></p>\n```\n\n\nDecorators\n----------\n\n`Dominate` is great for creating reusable widgets for parts of your page. Consider this example:\n\n```python\ndef greeting(name):\n    with div() as d:\n        p('Hello, %s' % name)\n    return d\n\nprint(greeting('Bob'))\n```\n```html\n<div>\n    <p>Hello, Bob</p>\n</div>\n```\n\nYou can see the following pattern being repeated here:\n\n```python\ndef widget(parameters):\n    with tag() as t:\n        ...\n    return t\n```\n\nThis boilerplate can be avoided by using tags (objects and instances) as decorators\n\n```python\n@div\ndef greeting(name):\n    p('Hello %s' % name)\nprint(greeting('Bob'))\n```\n```html\n<div>\n    <p>Hello Bob</p>\n</div>\n```\n\nThe decorated function will return a new instance of the tag used to decorate it, and execute in a `with` context which will collect all the nodes created inside it.\n\nYou can also use instances of tags as decorators, if you need to add attributes or other data to the root node of the widget.\nEach call to the decorated function will return a copy of the node used to decorate it.\n\n```python\n@div(h2('Welcome'), cls='greeting')\ndef greeting(name):\n    p('Hello %s' % name)\n\nprint(greeting('Bob'))\n```\n```html\n\n<div class=\"greeting\">\n    <h2>Welcome</h2>\n    <p>Hello Bob</p>\n</div>\n```\n\nCreating Documents\n------------------\n\nSince creating the common structure of an HTML document everytime would be excessively tedious dominate provides a class to create and manage them for you: `document`.\n\nWhen you create a new document, the basic HTML tag structure is created for you.\n\n```python\nd = document()\nprint(d)\n```\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n       <title>Dominate</title>\n    </head>\n    <body></body>\n</html>\n```\n\nThe `document` class accepts `title`, `doctype`, and `request` keyword arguments.\nThe default values for these arguments are `Dominate`, `<!DOCTYPE html>`, and `None` respectively.\n\nThe `document` class also provides helpers to allow you to access the `title`, `head`, and `body` nodes directly.\n\n```python\nd = document()\n```\n\n```python\n>>> d.head\n<dominate.tags.head: 0 attributes, 1 children>\n>>> d.body\n<dominate.tags.body: 0 attributes, 0 children>\n>>> d.title\nu'Dominate'\n```\n\n\nThe `document` class also provides helpers to allow you to directly add nodes to the `body` tag.\n\n```python\nd = document()\nd += h1('Hello, World!')\nd += p('This is a paragraph.')\nprint(d)\n```\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n       <title>Dominate</title>\n    </head>\n    <body>\n        <h1>Hello, World!</h1>\n        <p>This is a paragraph.</p>\n    </body>\n</html>\n```\n\nEmbedding HTML\n--------------\n\nIf you need to embed a node of pre-formed HTML coming from a library such as markdown or the like, you can avoid escaped HTML by using the raw method from the dominate.util package:\n\n```\nfrom dominate.util import raw\n...\ntd(raw('<a href=\"example.html\">Example</a>'))\n```\n\nWithout the raw call, this code would render escaped HTML with lt, etc.\n\n\nSVG\n---\n\nThe `dominate.svg` module contains SVG tags similar to how `dominate.tags` contains HTML tags. SVG elements will automatically convert `_` to `-` for dashed elements. For example:\n\n```python\nfrom dominate.svg import *\nprint(circle(stroke_width=5))\n```\n\n```html\n<circle stroke-width=\"5\"></circle>\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Knio/dominate/", "keywords": "framework templating template html xhtml python html5", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "dominate", "package_url": "https://pypi.org/project/dominate/", "platform": "", "project_url": "https://pypi.org/project/dominate/", "project_urls": {"Homepage": "https://github.com/Knio/dominate/"}, "release_url": "https://pypi.org/project/dominate/2.5.1/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Dominate is a Python library for creating and manipulating HTML documents using an elegant DOM API.", "version": "2.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dominate</h1>\n<p><code>Dominate</code> is a Python library for creating and manipulating HTML documents using an elegant DOM API.\nIt allows you to write HTML pages in pure Python very concisely, which eliminates the need to learn another template language, and lets you take advantage of the more powerful features of Python.</p>\n<p><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dcae574cbf209d3e49ab6f4e74e180e0d640f8b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646f6d696e6174652e7376673f7374796c653d666c6174\">\n<a href=\"https://travis-ci.org/Knio/dominate\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/523bfc599b682ed44c91cb598254d5b958f431a9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4b6e696f2f646f6d696e6174652f6d61737465722e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://coveralls.io/r/Knio/dominate?branch=master\" rel=\"nofollow\"><img alt=\"Coverage status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1de7e97415ed93ff23d256a58558de4a30a8987/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f4b6e696f2f646f6d696e6174652f6d61737465722e7376673f7374796c653d666c6174\"></a></p>\n<p>Python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dominate</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dominate.tags</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">dominate</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Dominate your HTML'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">:</span>\n    <span class=\"n\">link</span><span class=\"p\">(</span><span class=\"n\">rel</span><span class=\"o\">=</span><span class=\"s1\">'stylesheet'</span><span class=\"p\">,</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s1\">'style.css'</span><span class=\"p\">)</span>\n    <span class=\"n\">script</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'text/javascript'</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s1\">'script.js'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">doc</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">div</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'header'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ol</span><span class=\"p\">()):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">'home'</span><span class=\"p\">,</span> <span class=\"s1\">'about'</span><span class=\"p\">,</span> <span class=\"s1\">'contact'</span><span class=\"p\">]:</span>\n            <span class=\"n\">li</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(),</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s1\">'/</span><span class=\"si\">%s</span><span class=\"s1\">.html'</span> <span class=\"o\">%</span> <span class=\"n\">i</span><span class=\"p\">))</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">div</span><span class=\"p\">():</span>\n        <span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"s1\">'body'</span><span class=\"p\">)</span>\n        <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'Lorem ipsum..'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Dominate your HTML<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"style.css\"</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"script.js\"</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"header\"</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">ol</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/home.html\"</span><span class=\"p\">&gt;</span>Home<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/about.html\"</span><span class=\"p\">&gt;</span>About<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/contact.html\"</span><span class=\"p\">&gt;</span>Contact<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">ol</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"body\"</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Lorem ipsum..<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Installation</h2>\n<p>The recommended way to install <code>dominate</code> is with\n<a href=\"http://pypi.python.org/pypi/pip/\" rel=\"nofollow\"><code>pip</code></a>:</p>\n<pre><code>sudo pip install dominate\n</code></pre>\n<p><a href=\"https://pypi.org/project/dominate/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53fed2bfd91f45fb2b95616453575a226f8f80f1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646f6d696e6174652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.org/project/dominate/\" rel=\"nofollow\"><img alt=\"PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6872b4654f98ea7744648dbfd5fa405839f28775/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646f6d696e6174652e7376673f7374796c653d666c6174\"></a></p>\n<h2>Developed By</h2>\n<ul>\n<li>Tom Flanagan - <a href=\"mailto:tom@zkpq.ca\">tom@zkpq.ca</a></li>\n<li>Jake Wharton - <a href=\"mailto:jakewharton@gmail.com\">jakewharton@gmail.com</a></li>\n<li><a href=\"//github.com/bradj\" rel=\"nofollow\">Brad Janke</a></li>\n</ul>\n<p>Git repository located at\n<a href=\"//github.com/Knio/dominate\" rel=\"nofollow\">github.com/Knio/dominate</a></p>\n<h1>Examples</h1>\n<p>All examples assume you have imported the appropriate tags or entire tag set:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dominate.tags</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<h2>Hello, World!</h2>\n<p>The most basic feature of <code>dominate</code> exposes a class for each HTML element, where the constructor\naccepts child elements, text, or keyword attributes. <code>dominate</code> nodes return their HTML representation\nfrom the <code>__str__</code>, <code>__unicode__</code>, and <code>render()</code> methods.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">(</span><span class=\"n\">h1</span><span class=\"p\">(</span><span class=\"s1\">'Hello, World!'</span><span class=\"p\">))))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Hello, World!<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Attributes</h2>\n<p><code>Dominate</code> can also use keyword arguments to append attributes onto your tags. Most of the attributes are a direct copy from the HTML spec with a few variations.</p>\n<p>For attributes <code>class</code> and <code>for</code> which conflict with Python's <a href=\"http://docs.python.org/2/reference/lexical_analysis.html#keywords\" rel=\"nofollow\" title=\"Reserved Keywords\">reserved keywords</a>, you can use the following aliases:</p>\n<table>\n<thead>\n<tr>\n<th>class</th>\n<th>for</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>_class</td>\n<td>_for</td>\n</tr>\n<tr>\n<td>cls</td>\n<td>fr</td>\n</tr>\n<tr>\n<td>className</td>\n<td>htmlFor</td>\n</tr>\n<tr>\n<td>class_name</td>\n<td>html_for</td>\n</tr></tbody></table>\n<pre><span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"s1\">'classname anothername'</span><span class=\"p\">,</span> <span class=\"n\">fr</span><span class=\"o\">=</span><span class=\"s1\">'someinput'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">label</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"classname anothername\"</span> <span class=\"na\">for</span><span class=\"o\">=</span><span class=\"s\">\"someinput\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">label</span><span class=\"p\">&gt;</span>\n</pre>\n<p>Use <code>data_*</code> for <a href=\"http://www.w3.org/html/wg/drafts/html/master/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes\" rel=\"nofollow\" title=\"HTML5 Data Attributes\">custom HTML5 data attributes</a>.</p>\n<pre><span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">(</span><span class=\"n\">data_employee</span><span class=\"o\">=</span><span class=\"s1\">'101011'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-employee</span><span class=\"o\">=</span><span class=\"s\">\"101011\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>You can also modify the attributes of tags through a dictionary-like interface:</p>\n<pre><span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">()</span>\n<span class=\"n\">header</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'header'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"header\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Complex Structures</h2>\n<p>Through the use of the <code>+=</code> operator and the <code>.add()</code> method you can easily create more advanced structures.</p>\n<p>Create a simple list:</p>\n<pre><span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"n\">ul</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n    <span class=\"nb\">list</span> <span class=\"o\">+=</span> <span class=\"n\">li</span><span class=\"p\">(</span><span class=\"s1\">'Item #'</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>Item #0<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>Item #1<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>Item #2<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>Item #3<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</pre>\n<p><code>dominate</code> supports iterables to help streamline your code:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ul</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"n\">link</span><span class=\"p\">),</span> <span class=\"n\">__pretty</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">menu_items</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/home/\"</span><span class=\"p\">&gt;</span>Home<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/about/\"</span><span class=\"p\">&gt;</span>About<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/downloads/\"</span><span class=\"p\">&gt;</span>Downloads<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/links/\"</span><span class=\"p\">&gt;</span>Links<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</pre>\n<p>A simple document tree:</p>\n<pre><span class=\"n\">_html</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"p\">()</span>\n<span class=\"n\">_body</span> <span class=\"o\">=</span> <span class=\"n\">_html</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">())</span>\n<span class=\"n\">header</span>  <span class=\"o\">=</span> <span class=\"n\">_body</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">div</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'header'</span><span class=\"p\">))</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">_body</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">div</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'content'</span><span class=\"p\">))</span>\n<span class=\"n\">footer</span>  <span class=\"o\">=</span> <span class=\"n\">_body</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">div</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'footer'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">_html</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"header\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"content\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"footer\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>For clean code, the <code>.add()</code> method returns children in tuples. The above example can be cleaned up and expanded like this:</p>\n<pre><span class=\"n\">_html</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"p\">()</span>\n<span class=\"n\">_head</span><span class=\"p\">,</span> <span class=\"n\">_body</span> <span class=\"o\">=</span> <span class=\"n\">_html</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Simple Document Tree'</span><span class=\"p\">)),</span> <span class=\"n\">body</span><span class=\"p\">())</span>\n<span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'header'</span><span class=\"p\">,</span> <span class=\"s1\">'content'</span><span class=\"p\">,</span> <span class=\"s1\">'footer'</span><span class=\"p\">]</span>\n<span class=\"n\">header</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">footer</span> <span class=\"o\">=</span> <span class=\"n\">_body</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">([</span><span class=\"n\">div</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">_html</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n       <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Simple Document Tree<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"header\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"content\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"footer\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>You can modify the attributes of tags through a dictionary-like interface:</p>\n<pre><span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">()</span>\n<span class=\"n\">header</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'header'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"header\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>Or the children of a tag though an array-line interface:</p>\n<pre><span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">(</span><span class=\"s1\">'Test'</span><span class=\"p\">)</span>\n<span class=\"n\">header</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Hello World'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>Hello World<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>Comments can be created using objects too!</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"p\">(</span><span class=\"s1\">'BEGIN HEADER'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"c\">&lt;!--BEGIN HEADER--&gt;</span>\n</pre>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'Upgrade to newer IE!'</span><span class=\"p\">),</span> <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"s1\">'lt IE9'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"c\">&lt;!--[if lt IE9]&gt;</span>\n<span class=\"c\">  &lt;p&gt;Upgrade to newer IE!&lt;/p&gt;</span>\n<span class=\"c\">&lt;![endif]--&gt;</span>\n</pre>\n<h2>Rendering</h2>\n<p>By default, <code>render()</code> tries to make all output human readable, with one HTML\nelement per line and two spaces of indentation.</p>\n<p>This behavior can be controlled by the <code>__pretty</code> (default: <code>True</code> except for\ncertain element types like <code>pre</code>) attribute when creating an element, and by\nthe <code>pretty</code> (default: <code>True</code>), <code>indent</code> (default: <code></code>) and <code>xhtml</code> (default: <code>False</code>)\narguments to <code>render()</code>. Rendering options propagate to all descendant nodes.</p>\n<pre><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">(</span><span class=\"n\">span</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">())</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>Hello World<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">pretty</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>Hello World<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\t<span class=\"p\">&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>Hello World<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">(</span><span class=\"n\">span</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">),</span> <span class=\"n\">__pretty</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">())</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>Hello World<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">d</span><span class=\"p\">:</span>\n    <span class=\"n\">hr</span><span class=\"p\">()</span>\n    <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s2\">\"Test\"</span><span class=\"p\">)</span>\n    <span class=\"n\">br</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">xhtml</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">hr</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Test<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">br</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">hr</span> <span class=\"p\">/&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Test<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">br</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Context Managers</h2>\n<p>You can also add child elements using Python's <code>with</code> statement:</p>\n<pre><span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">ul</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">h</span><span class=\"p\">:</span>\n    <span class=\"n\">li</span><span class=\"p\">(</span><span class=\"s1\">'One'</span><span class=\"p\">)</span>\n    <span class=\"n\">li</span><span class=\"p\">(</span><span class=\"s1\">'Two'</span><span class=\"p\">)</span>\n    <span class=\"n\">li</span><span class=\"p\">(</span><span class=\"s1\">'Three'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>One<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>Two<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>Three<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</pre>\n<p>You can use this along with the other mechanisms of adding children elements, including nesting <code>with</code> statements, and it works as expected:</p>\n<pre><span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">div</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'content'</span><span class=\"p\">)):</span>\n    <span class=\"n\">h1</span><span class=\"p\">(</span><span class=\"s1\">'Hello World!'</span><span class=\"p\">)</span>\n    <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'Lorem ipsum ...'</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">table</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tbody</span><span class=\"p\">()):</span>\n        <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">tr</span><span class=\"p\">()</span>\n        <span class=\"n\">l</span> <span class=\"o\">+=</span> <span class=\"n\">td</span><span class=\"p\">(</span><span class=\"s1\">'One'</span><span class=\"p\">)</span>\n        <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">td</span><span class=\"p\">(</span><span class=\"s1\">'Two'</span><span class=\"p\">))</span>\n        <span class=\"k\">with</span> <span class=\"n\">l</span><span class=\"p\">:</span>\n            <span class=\"n\">td</span><span class=\"p\">(</span><span class=\"s1\">'Three'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"content\"</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Hello World!<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Lorem ipsum ...<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">tbody</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>One<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>Two<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>Three<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nt\">tbody</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>When the context is closed, any nodes that were not already added to something get added to the current context.</p>\n<p>Attributes can be added to the current context with the <code>attr</code> function:</p>\n<pre><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">div</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">d</span><span class=\"p\">:</span>\n    <span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'header'</span><span class=\"p\">)</span>\n\n <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"header\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>And text nodes can be added with the <code>dominate.util.text</code> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dominate.util</span> <span class=\"kn\">import</span> <span class=\"n\">text</span>\n<span class=\"n\">para</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"n\">__pretty</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">para</span><span class=\"p\">:</span>\n    <span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s1\">'Have a look at our '</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">(</span><span class=\"s1\">'other products'</span><span class=\"p\">,</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s1\">'/products'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">para</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Have a look at our <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/products\"</span><span class=\"p\">&gt;</span>other products<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Decorators</h2>\n<p><code>Dominate</code> is great for creating reusable widgets for parts of your page. Consider this example:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">div</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">d</span><span class=\"p\">:</span>\n        <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'Hello, </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">d</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"s1\">'Bob'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Hello, Bob<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>You can see the following pattern being repeated here:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">widget</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">tag</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n    <span class=\"k\">return</span> <span class=\"n\">t</span>\n</pre>\n<p>This boilerplate can be avoided by using tags (objects and instances) as decorators</p>\n<pre><span class=\"nd\">@div</span>\n<span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'Hello </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"s1\">'Bob'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Hello Bob<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>The decorated function will return a new instance of the tag used to decorate it, and execute in a <code>with</code> context which will collect all the nodes created inside it.</p>\n<p>You can also use instances of tags as decorators, if you need to add attributes or other data to the root node of the widget.\nEach call to the decorated function will return a copy of the node used to decorate it.</p>\n<pre><span class=\"nd\">@div</span><span class=\"p\">(</span><span class=\"n\">h2</span><span class=\"p\">(</span><span class=\"s1\">'Welcome'</span><span class=\"p\">),</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"s1\">'greeting'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'Hello </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">greeting</span><span class=\"p\">(</span><span class=\"s1\">'Bob'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"greeting\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>Welcome<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Hello Bob<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Creating Documents</h2>\n<p>Since creating the common structure of an HTML document everytime would be excessively tedious dominate provides a class to create and manage them for you: <code>document</code>.</p>\n<p>When you create a new document, the basic HTML tag structure is created for you.</p>\n<pre><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n       <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Dominate<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>The <code>document</code> class accepts <code>title</code>, <code>doctype</code>, and <code>request</code> keyword arguments.\nThe default values for these arguments are <code>Dominate</code>, <code>&lt;!DOCTYPE html&gt;</code>, and <code>None</code> respectively.</p>\n<p>The <code>document</code> class also provides helpers to allow you to access the <code>title</code>, <code>head</code>, and <code>body</code> nodes directly.</p>\n<pre><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">head</span>\n<span class=\"o\">&lt;</span><span class=\"n\">dominate</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"n\">attributes</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"n\">children</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">body</span>\n<span class=\"o\">&lt;</span><span class=\"n\">dominate</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"n\">attributes</span><span class=\"p\">,</span> <span class=\"mi\">0</span> <span class=\"n\">children</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">title</span>\n<span class=\"sa\">u</span><span class=\"s1\">'Dominate'</span>\n</pre>\n<p>The <code>document</code> class also provides helpers to allow you to directly add nodes to the <code>body</code> tag.</p>\n<pre><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"p\">()</span>\n<span class=\"n\">d</span> <span class=\"o\">+=</span> <span class=\"n\">h1</span><span class=\"p\">(</span><span class=\"s1\">'Hello, World!'</span><span class=\"p\">)</span>\n<span class=\"n\">d</span> <span class=\"o\">+=</span> <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s1\">'This is a paragraph.'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n       <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Dominate<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Hello, World!<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>This is a paragraph.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Embedding HTML</h2>\n<p>If you need to embed a node of pre-formed HTML coming from a library such as markdown or the like, you can avoid escaped HTML by using the raw method from the dominate.util package:</p>\n<pre><code>from dominate.util import raw\n...\ntd(raw('&lt;a href=\"example.html\"&gt;Example&lt;/a&gt;'))\n</code></pre>\n<p>Without the raw call, this code would render escaped HTML with lt, etc.</p>\n<h2>SVG</h2>\n<p>The <code>dominate.svg</code> module contains SVG tags similar to how <code>dominate.tags</code> contains HTML tags. SVG elements will automatically convert <code>_</code> to <code>-</code> for dashed elements. For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dominate.svg</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">stroke_width</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">circle</span> <span class=\"na\">stroke-width</span><span class=\"o\">=</span><span class=\"s\">\"5\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">circle</span><span class=\"p\">&gt;</span>\n</pre>\n\n          </div>"}, "last_serial": 6766558, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "dad2d66a4822ccae8b5a01f1bc5620d9", "sha256": "f9170a290dfc969b237db4f0523362a99853667d2d17daa64536dfc669ecc44a"}, "downloads": -1, "filename": "dominate-2.0.0.zip", "has_sig": false, "md5_digest": "dad2d66a4822ccae8b5a01f1bc5620d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20286, "upload_time": "2013-11-07T03:29:56", "upload_time_iso_8601": "2013-11-07T03:29:56.991123Z", "url": "https://files.pythonhosted.org/packages/ef/50/dcacbfaa9003b386afd61bba97fc39004214a5776e12521ef1cbe04ccfd8/dominate-2.0.0.zip", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "83d4143534ece10f1c06781fdd4a7d34", "sha256": "7984848b99f2635cce777f0639934365e5b484c1196c03ba41492b34cbbc2542"}, "downloads": -1, "filename": "dominate-2.0.1.zip", "has_sig": false, "md5_digest": "83d4143534ece10f1c06781fdd4a7d34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29085, "upload_time": "2013-11-17T05:27:55", "upload_time_iso_8601": "2013-11-17T05:27:55.289933Z", "url": "https://files.pythonhosted.org/packages/0a/00/6d2c0d47dbc9494c276c2c648cc6903b344dc3e8d55b7f2af307899ce2ab/dominate-2.0.1.zip", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "21ce1153a3c70823af6f9c4ab0abb89e", "sha256": "409647e12fa90bec8c4889c402b5f06c337a5c7de5aa518fff149ba8c55a68a0"}, "downloads": -1, "filename": "dominate-2.1.0.zip", "has_sig": false, "md5_digest": "21ce1153a3c70823af6f9c4ab0abb89e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29270, "upload_time": "2013-11-24T08:52:25", "upload_time_iso_8601": "2013-11-24T08:52:25.231339Z", "url": "https://files.pythonhosted.org/packages/f2/1a/bec611705bf170f8cec8f9a7e017acdcb7b6856e332312f1f625991c70e0/dominate-2.1.0.zip", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "809dd8616408ff6336b2f104c18f426b", "sha256": "2fff40eb013de558691b1cf78ae27638d805f5b565919ed0017c4696eceac935"}, "downloads": -1, "filename": "dominate-2.1.1.zip", "has_sig": false, "md5_digest": "809dd8616408ff6336b2f104c18f426b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29273, "upload_time": "2013-11-24T09:55:12", "upload_time_iso_8601": "2013-11-24T09:55:12.747657Z", "url": "https://files.pythonhosted.org/packages/46/07/219f55157b4fb184d01aaf30da6d4e2b1fe40dad472ed71ccc007204c82c/dominate-2.1.1.zip", "yanked": false}], "2.1.10": [{"comment_text": "", "digests": {"md5": "3dec26e5541e212f8c31f3495652a3af", "sha256": "87b62bc886757326d217a3c4fa9a04f3abcf9c167ac0f576e98c1975f9809f83"}, "downloads": -1, "filename": "dominate-2.1.10.tar.gz", "has_sig": false, "md5_digest": "3dec26e5541e212f8c31f3495652a3af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20511, "upload_time": "2014-05-23T23:55:28", "upload_time_iso_8601": "2014-05-23T23:55:28.753127Z", "url": "https://files.pythonhosted.org/packages/f6/11/a311e061afc22179c1255cff882d151aec716fbe972174b60e0a5497b798/dominate-2.1.10.tar.gz", "yanked": false}], "2.1.11": [{"comment_text": "", "digests": {"md5": "5b2c4cea6ee4dc9d9fdb866d9974d85b", "sha256": "8ce424941a8de8d94253d5e2ada2b242c33f0d966211a00f611540612f1e482b"}, "downloads": -1, "filename": "dominate-2.1.11.zip", "has_sig": false, "md5_digest": "5b2c4cea6ee4dc9d9fdb866d9974d85b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35916, "upload_time": "2014-11-04T06:59:53", "upload_time_iso_8601": "2014-11-04T06:59:53.713056Z", "url": "https://files.pythonhosted.org/packages/2b/f9/10374dc5732ac66b7de0f0831f11fae3fe7bb6cde6b7198fbe39a4c1de2d/dominate-2.1.11.zip", "yanked": false}], "2.1.12": [{"comment_text": "", "digests": {"md5": "af77ace88dc32cedb3989412528ae635", "sha256": "f961d8f8e585ad17257b0d54005856bf7a2a4051bbb0d8eff635a849efd8560a"}, "downloads": -1, "filename": "dominate-2.1.12.tar.gz", "has_sig": false, "md5_digest": "af77ace88dc32cedb3989412528ae635", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20458, "upload_time": "2014-12-16T19:58:11", "upload_time_iso_8601": "2014-12-16T19:58:11.019140Z", "url": "https://files.pythonhosted.org/packages/0e/64/a8479b1061f160c21888ca0066ec2c5f1bb0ff6b4e7d66715d9178456460/dominate-2.1.12.tar.gz", "yanked": false}], "2.1.13": [{"comment_text": "", "digests": {"md5": "e13bb43e715c660334ea2887ae7ce6df", "sha256": "c5a5881ad354f5b97869ceb036bd466ddd307fafdc983b7b0d1692322393f310"}, "downloads": -1, "filename": "dominate-2.1.13.zip", "has_sig": false, "md5_digest": "e13bb43e715c660334ea2887ae7ce6df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32085, "upload_time": "2015-09-21T05:42:38", "upload_time_iso_8601": "2015-09-21T05:42:38.805744Z", "url": "https://files.pythonhosted.org/packages/1a/98/4b72af47bce8983ec82fa0f9e3c5f24add0f29f9c25ce60e4d274de64f2f/dominate-2.1.13.zip", "yanked": false}], "2.1.14": [{"comment_text": "", "digests": {"md5": "a618acb095f4b83c8ab80b176a581a21", "sha256": "4f5630f65c501cbdfcf20f10bf977c50f0ac63d99fe07a0e133f68f5378bef2b"}, "downloads": -1, "filename": "dominate-2.1.14.zip", "has_sig": false, "md5_digest": "a618acb095f4b83c8ab80b176a581a21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32395, "upload_time": "2015-09-21T05:54:58", "upload_time_iso_8601": "2015-09-21T05:54:58.279892Z", "url": "https://files.pythonhosted.org/packages/1a/6a/6b0af43c6e8bbd9897f2adb9807f7f926b97a8ce9591ab4bbd84487e686f/dominate-2.1.14.zip", "yanked": false}], "2.1.15": [{"comment_text": "", "digests": {"md5": "fef0d29b95b3bd73e9a926a5b3700c27", "sha256": "6d13a9b9f3143a26c500a58ac0e4bf63e1fbc4667a6e892f4be1997381e5cc70"}, "downloads": -1, "filename": "dominate-2.1.15.zip", "has_sig": false, "md5_digest": "fef0d29b95b3bd73e9a926a5b3700c27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36434, "upload_time": "2015-09-21T06:03:34", "upload_time_iso_8601": "2015-09-21T06:03:34.308938Z", "url": "https://files.pythonhosted.org/packages/a2/18/2efdecd128b7dfd314c3ea9b2ae1886a71333bfda76c3bc2a5de21e1b93c/dominate-2.1.15.zip", "yanked": false}], "2.1.16": [{"comment_text": "", "digests": {"md5": "f11d2007f47a343c1323583c5b1360e9", "sha256": "e9ffb14b10cd3e33690153ed5e149794c088ad37e523ff07dc297c282a48a55e"}, "downloads": -1, "filename": "dominate-2.1.16.zip", "has_sig": false, "md5_digest": "f11d2007f47a343c1323583c5b1360e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36122, "upload_time": "2015-09-21T06:06:47", "upload_time_iso_8601": "2015-09-21T06:06:47.368371Z", "url": "https://files.pythonhosted.org/packages/f8/24/f1eaad0a3c6a71b8c88120249698e088bf4c4066021d50b9ad184b2291d6/dominate-2.1.16.zip", "yanked": false}], "2.1.17": [{"comment_text": "", "digests": {"md5": "8276b76ef3d6b5d41c9a4cbc977417b0", "sha256": "743cf135d2df89b7dffcef48cadb4a2fa1f6bb0e9a5b674cd04d3ff229b9fa09"}, "downloads": -1, "filename": "dominate-2.1.17.tar.gz", "has_sig": false, "md5_digest": "8276b76ef3d6b5d41c9a4cbc977417b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22875, "upload_time": "2016-02-18T04:40:39", "upload_time_iso_8601": "2016-02-18T04:40:39.274186Z", "url": "https://files.pythonhosted.org/packages/d9/9a/a28a0554e1f761e9082395a71db244935a5ca0c71d43a327fb5226b94ba1/dominate-2.1.17.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "8eba64d177e654d1e12fc4075f32cc30", "sha256": "5e57b50184c1f7697253c0b9a0be80a92ecdc6b45bf9ef4dd22a228b38d99660"}, "downloads": -1, "filename": "dominate-2.1.2.zip", "has_sig": false, "md5_digest": "8eba64d177e654d1e12fc4075f32cc30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29378, "upload_time": "2013-12-14T07:39:26", "upload_time_iso_8601": "2013-12-14T07:39:26.028608Z", "url": "https://files.pythonhosted.org/packages/bc/e0/6dda75630ab36785401b7eb057b9eb31328809b106036e3aa20eb02bebf9/dominate-2.1.2.zip", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "36336abf7a1e5fa8d9ccd4bfa81963ff", "sha256": "b2edbdcf09ed61cf47245121cc0232a7b509d1e5d3179c0a1a11f148e9caaf5a"}, "downloads": -1, "filename": "dominate-2.1.3.zip", "has_sig": false, "md5_digest": "36336abf7a1e5fa8d9ccd4bfa81963ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29603, "upload_time": "2013-12-25T06:32:59", "upload_time_iso_8601": "2013-12-25T06:32:59.307712Z", "url": "https://files.pythonhosted.org/packages/2b/1c/f5b75e25c06b09919afcca336ac2049669b8366729adc2b15a8fdf3972b3/dominate-2.1.3.zip", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "85fa3deaa82b72c8dd5c54735d53f891", "sha256": "e13b012ed3c96d9843ffdf3762f85dae6e43ae796634069f825fbb6ed581a64d"}, "downloads": -1, "filename": "dominate-2.1.4.zip", "has_sig": false, "md5_digest": "85fa3deaa82b72c8dd5c54735d53f891", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29646, "upload_time": "2014-01-21T07:35:15", "upload_time_iso_8601": "2014-01-21T07:35:15.453241Z", "url": "https://files.pythonhosted.org/packages/23/be/8cde45cf0ef6f28a81d0b3d1d73d2751a5046d295e65c310198b172a8e81/dominate-2.1.4.zip", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "4deca05906bca2a266c8b919a8cb892e", "sha256": "4f7e358bc4338b599c4f990e41781a15ec5c3ecb356bc9f51f72150510de27eb"}, "downloads": -1, "filename": "dominate-2.1.5.zip", "has_sig": false, "md5_digest": "4deca05906bca2a266c8b919a8cb892e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29852, "upload_time": "2014-02-02T20:32:09", "upload_time_iso_8601": "2014-02-02T20:32:09.203571Z", "url": "https://files.pythonhosted.org/packages/f8/ae/71ec20ed7b2f8828496ea67125e9ce06df540e55347fbd781c6a11017c6e/dominate-2.1.5.zip", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "bf563da92a78dedb52666fbd75373da2", "sha256": "f8ce4e8cb73e4a5a946ea685a36500484d5e24cc498eab85078567f9a4711fa2"}, "downloads": -1, "filename": "dominate-2.1.6.zip", "has_sig": false, "md5_digest": "bf563da92a78dedb52666fbd75373da2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29910, "upload_time": "2014-03-02T05:47:40", "upload_time_iso_8601": "2014-03-02T05:47:40.671472Z", "url": "https://files.pythonhosted.org/packages/da/db/656541523fb1efbe32ae68ef7fba43d96226e8f40aafde6b0455bee1d4f4/dominate-2.1.6.zip", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "6e619fb230eed5fb73ca56b5ee139d3d", "sha256": "cd3f72efe1a77f6d51d76b9396b390163a3b980ea113d599668c473a6c6bba1c"}, "downloads": -1, "filename": "dominate-2.1.7.tar.gz", "has_sig": false, "md5_digest": "6e619fb230eed5fb73ca56b5ee139d3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23012, "upload_time": "2014-03-10T18:30:37", "upload_time_iso_8601": "2014-03-10T18:30:37.951441Z", "url": "https://files.pythonhosted.org/packages/23/0a/a32f62d60b0b1c7ce2aba12d5c8257bfa57a21175c6f3bced3d395abb92c/dominate-2.1.7.tar.gz", "yanked": false}], "2.1.8": [{"comment_text": "", "digests": {"md5": "dadc7816a0b88615ac2e4d039245084c", "sha256": "8d07c09a16987a39003987d4c0ec4efea3ff3a1fe5fbb9eb8ac71501fad6dd06"}, "downloads": -1, "filename": "dominate-2.1.8.zip", "has_sig": false, "md5_digest": "dadc7816a0b88615ac2e4d039245084c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31683, "upload_time": "2014-03-13T05:27:54", "upload_time_iso_8601": "2014-03-13T05:27:54.497281Z", "url": "https://files.pythonhosted.org/packages/04/42/2d01d836c0b90014deae6036df27a48ed90205e73aa0612907dd4a6e6eb4/dominate-2.1.8.zip", "yanked": false}], "2.1.9": [{"comment_text": "", "digests": {"md5": "00d3db51aebdbda5cc115d1b45edd34e", "sha256": "0af7e980e494d41f5eca47773b083710ddfce45235e5c0516b995d894cd251ab"}, "downloads": -1, "filename": "dominate-2.1.9.zip", "has_sig": false, "md5_digest": "00d3db51aebdbda5cc115d1b45edd34e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31457, "upload_time": "2014-03-13T05:56:01", "upload_time_iso_8601": "2014-03-13T05:56:01.228073Z", "url": "https://files.pythonhosted.org/packages/14/ba/36e398693cfe5d7810070b712e755b5f715828c230d7d3272d5107834e1e/dominate-2.1.9.zip", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "14ee0361db7fbaed982220c09ef8e0b9", "sha256": "5032559e0f0835419763b3d1d88ad31ea4fe40935712db86014f2a341c89fa3d"}, "downloads": -1, "filename": "dominate-2.2.0.zip", "has_sig": false, "md5_digest": "14ee0361db7fbaed982220c09ef8e0b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35863, "upload_time": "2016-03-24T05:58:35", "upload_time_iso_8601": "2016-03-24T05:58:35.100702Z", "url": "https://files.pythonhosted.org/packages/bc/c9/22bcc9ab35b16419b068047d98f771ef1eab46c7c7f03e6783d3973849ff/dominate-2.2.0.zip", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "cd156b5b290f49f2bb5814ea8acc12a3", "sha256": "4aa6a2f458461541f9ceeb58b49da9b42320f80aa2a6f692baea2817431d9953"}, "downloads": -1, "filename": "dominate-2.2.1.zip", "has_sig": false, "md5_digest": "cd156b5b290f49f2bb5814ea8acc12a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46460, "upload_time": "2016-07-11T05:21:23", "upload_time_iso_8601": "2016-07-11T05:21:23.974794Z", "url": "https://files.pythonhosted.org/packages/1f/e0/303765bc892cc503ce577e1a785c6420e55791143a9a16b4fde48bd236e9/dominate-2.2.1.zip", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "ef849c2821b23b841093a5da73f733ae", "sha256": "c9c075329de8c6fc6d18f25ed6a9a98bfe873f0ad027c24d267ce3442dc73ca5"}, "downloads": -1, "filename": "dominate-2.3.0.tar.gz", "has_sig": false, "md5_digest": "ef849c2821b23b841093a5da73f733ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76796, "upload_time": "2016-11-10T03:53:01", "upload_time_iso_8601": "2016-11-10T03:53:01.880607Z", "url": "https://files.pythonhosted.org/packages/96/c1/7b653679ba40b9610c325aaea77f940008cf0a64f3e223d43bbb66533863/dominate-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "45bd97e6f7888aac24ae86013c57638e", "sha256": "4b8ce6f33633c9dd9175b228d21c00c801b6bd0327747cd5e17fc2da934c3a69"}, "downloads": -1, "filename": "dominate-2.3.1.tar.gz", "has_sig": false, "md5_digest": "45bd97e6f7888aac24ae86013c57638e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27887, "upload_time": "2016-11-27T05:21:17", "upload_time_iso_8601": "2016-11-27T05:21:17.507173Z", "url": "https://files.pythonhosted.org/packages/43/b2/3b7d67dd59dab93ae08569384b254323516e8868b453eea5614a53835baf/dominate-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "354407051bab3f4e0282327e3c805236", "sha256": "441ccb18f129e333860b700d36e84cd90eb3dd286c6d510990af58ffeed77d8e"}, "downloads": -1, "filename": "dominate-2.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "354407051bab3f4e0282327e3c805236", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25519, "upload_time": "2018-09-25T04:42:13", "upload_time_iso_8601": "2018-09-25T04:42:13.742793Z", "url": "https://files.pythonhosted.org/packages/8d/90/5b53d1b48305d185934d6a58548f5defe6fc5baba6376e5b78f813cd0ec3/dominate-2.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96e835cfb29f3ff0aaab031ff69387e9", "sha256": "2c570ff865a8ecb9e74dc564e0bbbe9e901c6e064b8c5b7b524ea4dfa565579c"}, "downloads": -1, "filename": "dominate-2.3.2.tar.gz", "has_sig": false, "md5_digest": "96e835cfb29f3ff0aaab031ff69387e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27695, "upload_time": "2018-09-25T04:42:15", "upload_time_iso_8601": "2018-09-25T04:42:15.734408Z", "url": "https://files.pythonhosted.org/packages/a6/05/7d242364ff6aeb2c1f178b254aac2a096c4df733b4331235f9437f6096dc/dominate-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "07194d77fabe3d6fb895f63ab28a14c6", "sha256": "c15ff4a3c25b2084380259cfdb2d088a73b048da36796bcd5708fbe34da4559f"}, "downloads": -1, "filename": "dominate-2.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07194d77fabe3d6fb895f63ab28a14c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 25587, "upload_time": "2018-09-25T04:45:05", "upload_time_iso_8601": "2018-09-25T04:45:05.599990Z", "url": "https://files.pythonhosted.org/packages/f6/df/7a9f1fe5eb537b72ee9e9fbe6dffd0045be4852f02e164651516ad4739a0/dominate-2.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38da04c680fa7fded9dfcf077685b4bb", "sha256": "c510e1d83511e43013621549e760a97dec61b67c4b1b8d913685b0af86d713ef"}, "downloads": -1, "filename": "dominate-2.3.3.tar.gz", "has_sig": false, "md5_digest": "38da04c680fa7fded9dfcf077685b4bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 27805, "upload_time": "2018-09-25T04:45:07", "upload_time_iso_8601": "2018-09-25T04:45:07.036129Z", "url": "https://files.pythonhosted.org/packages/82/83/4383709bea6889c8ddbdfa49793e1aed91e32398e86f5e6e3beceeccaf80/dominate-2.3.3.tar.gz", "yanked": false}], "2.3.4": [{"comment_text": "", "digests": {"md5": "69cfe9e0e981bab1dd0c9d57ae765a43", "sha256": "59abf22fe4072a97978afece563155279b3c3d6f26cb9fbbca28d0acc318cb1b"}, "downloads": -1, "filename": "dominate-2.3.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69cfe9e0e981bab1dd0c9d57ae765a43", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 25604, "upload_time": "2018-09-25T04:49:16", "upload_time_iso_8601": "2018-09-25T04:49:16.557859Z", "url": "https://files.pythonhosted.org/packages/05/9b/35849b04d3126d907c294f5bbd33c870d2753f5cfb008645b78419d99e94/dominate-2.3.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b4ab1e84777dc3f7acfeaa90e85fcaf", "sha256": "8dfcca2bde3937a2d03db6e55efcb0c0dea0d4ab0923dc983d794b19e9247328"}, "downloads": -1, "filename": "dominate-2.3.4.tar.gz", "has_sig": false, "md5_digest": "0b4ab1e84777dc3f7acfeaa90e85fcaf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 27834, "upload_time": "2018-09-25T04:49:17", "upload_time_iso_8601": "2018-09-25T04:49:17.906333Z", "url": "https://files.pythonhosted.org/packages/2d/b5/3c94d02b0adcc549c5676369666566f65c53c0cdfa3e96a799ed31958a35/dominate-2.3.4.tar.gz", "yanked": false}], "2.3.5": [{"comment_text": "", "digests": {"md5": "2b564db42a4fdb408dcf094e1917b283", "sha256": "4b9fd42d2824b79761799590697db45bf93daad511b130c50513af38da33df9b"}, "downloads": -1, "filename": "dominate-2.3.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2b564db42a4fdb408dcf094e1917b283", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 25601, "upload_time": "2018-11-27T04:28:15", "upload_time_iso_8601": "2018-11-27T04:28:15.404495Z", "url": "https://files.pythonhosted.org/packages/1a/54/50ec03a4b4114e2c02d049cc26fe6ad8f0653ba5d0cd55d7c9bf9a260434/dominate-2.3.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8ba4cc54888d71e41d678c46ca01e10", "sha256": "4076735c0745fe771e57b2313dbb4bfeec42731816ee23cee509f66e8912aa51"}, "downloads": -1, "filename": "dominate-2.3.5.tar.gz", "has_sig": false, "md5_digest": "b8ba4cc54888d71e41d678c46ca01e10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 27875, "upload_time": "2018-11-27T04:28:17", "upload_time_iso_8601": "2018-11-27T04:28:17.346480Z", "url": "https://files.pythonhosted.org/packages/ae/1e/810f14db340b55ab4a7b2e4c79496d58c362870629a0a68a608e634944de/dominate-2.3.5.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "9b14920bf14e6578e2dc1f24574fbf92", "sha256": "6e833aea505f0236a9fc692326bac575f8bd38ae0f3a1bdc73d20ca606ac75d5"}, "downloads": -1, "filename": "dominate-2.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b14920bf14e6578e2dc1f24574fbf92", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29052, "upload_time": "2019-08-04T04:55:28", "upload_time_iso_8601": "2019-08-04T04:55:28.106120Z", "url": "https://files.pythonhosted.org/packages/1d/64/593e829416c951eb35c2246430d59b86f640087e29e71f32632bcde5d0f7/dominate-2.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27d3aa7e0d67902c505e248e705e5e2e", "sha256": "a92474b4312bd8b4c1789792f3ec8c571cd8afa8e7502a2b1c64dd48cd67e59c"}, "downloads": -1, "filename": "dominate-2.4.0.tar.gz", "has_sig": false, "md5_digest": "27d3aa7e0d67902c505e248e705e5e2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 32810, "upload_time": "2019-08-04T04:55:30", "upload_time_iso_8601": "2019-08-04T04:55:30.147031Z", "url": "https://files.pythonhosted.org/packages/46/dd/0fde17069c908951941475eee110c84467591caa1cd8ca30136294c26621/dominate-2.4.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "5681a19ba50c8372ba409fc0002f2fba", "sha256": "22636ad28200e75fa9e751f0511aaeb9f0b630044ed8ccbd89c27acdf3dda7a1"}, "downloads": -1, "filename": "dominate-2.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5681a19ba50c8372ba409fc0002f2fba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29153, "upload_time": "2020-03-07T05:16:34", "upload_time_iso_8601": "2020-03-07T05:16:34.152326Z", "url": "https://files.pythonhosted.org/packages/4f/e6/794a119963b7cfe4bd41177c8f9d4195fe901652f04189fbd2edf513c7b2/dominate-2.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35eeb6b5587c8c9a51cd22c83e07ac49", "sha256": "9b05481605ea8c0afd0a98c0156a9fb78d9c406368d66b3e6fedf36920fb9d78"}, "downloads": -1, "filename": "dominate-2.5.1.tar.gz", "has_sig": false, "md5_digest": "35eeb6b5587c8c9a51cd22c83e07ac49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 37524, "upload_time": "2020-03-07T05:16:36", "upload_time_iso_8601": "2020-03-07T05:16:36.126101Z", "url": "https://files.pythonhosted.org/packages/a0/ef/3bcb71ab0d8584fcb0da1587850a866656725de8a9eb06a947139baf2d3a/dominate-2.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5681a19ba50c8372ba409fc0002f2fba", "sha256": "22636ad28200e75fa9e751f0511aaeb9f0b630044ed8ccbd89c27acdf3dda7a1"}, "downloads": -1, "filename": "dominate-2.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5681a19ba50c8372ba409fc0002f2fba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29153, "upload_time": "2020-03-07T05:16:34", "upload_time_iso_8601": "2020-03-07T05:16:34.152326Z", "url": "https://files.pythonhosted.org/packages/4f/e6/794a119963b7cfe4bd41177c8f9d4195fe901652f04189fbd2edf513c7b2/dominate-2.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35eeb6b5587c8c9a51cd22c83e07ac49", "sha256": "9b05481605ea8c0afd0a98c0156a9fb78d9c406368d66b3e6fedf36920fb9d78"}, "downloads": -1, "filename": "dominate-2.5.1.tar.gz", "has_sig": false, "md5_digest": "35eeb6b5587c8c9a51cd22c83e07ac49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 37524, "upload_time": "2020-03-07T05:16:36", "upload_time_iso_8601": "2020-03-07T05:16:36.126101Z", "url": "https://files.pythonhosted.org/packages/a0/ef/3bcb71ab0d8584fcb0da1587850a866656725de8a9eb06a947139baf2d3a/dominate-2.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:25 2020"}