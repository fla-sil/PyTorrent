{"info": {"author": "Jannis Leidel", "author_email": "jannis@leidel.info", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: No Input/Output (Daemon)", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: HTTP Servers", "Topic :: Software Development :: Version Control"], "description": "========\r\ngitserve\r\n========\r\n\r\nThis is a helper tool for git that mimics mercurial_'s serve_ command.\r\n\r\nIt makes it very easy to see all your git project via git_'s own gitweb_ by\r\nrunning a lightweight local server.\r\n\r\n.. _mercurial: http://www.selenic.com/mercurial/\r\n.. _serve: http://www.selenic.com/mercurial/wiki/index.cgi/hgserve\r\n.. _git: http://git.or.cz/\r\n.. _gitweb: http://git.or.cz/gitwiki/Gitweb\r\n\r\nUsage\r\n-----\r\n\r\nWhen ``gitserve`` was installed correctly (with ``sudo``) it's usually located\r\nin ``/usr/local/bin``. Note that this directory needs to be on your ``$PATH``\r\nenvironment variable to be found by your shell.\r\n\r\nUsage pretty easy::\r\n\r\n    $ gitserve --help\r\n    Usage: gitserve [options] <dir>\r\n\r\n    Options:\r\n      --version             show program's version number and exit\r\n      -h, --help            show this help message and exit\r\n      -v, --verbose         print status messages to stdout\r\n      -q, --quiet           don't print anything to stdout\r\n      -p PORT, --port=PORT  port to listen on (default: 8000)\r\n      -a ADDRESS, --address=ADDRESS\r\n                            address to listen on (default: hostname)\r\n      -l, --local           only listen on 127.0.0.1\r\n      -b, --browser         open default browser automatically\r\n      -d, --daemon          detach from terminal and become a daemon\r\n      --pid-file=PIDFILE    write the spawned process-id to this file\r\n      --gitweb=GITWEB       use this gitweb cgi file instead of the included\r\n                            version\r\n\r\nAs the only argument you can specify a directory that contains your git\r\nprojects. If you leave this argument blank ``gitserve`` will automatically uses\r\nthe current directory as the source for the gitweb script. E.g.::\r\n\r\n    $ gitserve /home/jannis/git-projects\r\n\r\nShortcuts in the directory argument are also possible and will be expanded on\r\nruntime::\r\n\r\n    $ gitserve ~/git-projects\r\n\r\nThe default ``gitserve`` process will listen on your machine's hostname and on\r\nport 8000, for example: http://127.0.0.1:8000/\r\n\r\nIf you provide a ``--port`` or ``--address`` option while starting ``gitserve``\r\nyou can have ``gitserve`` listen on your choices. You need to be root to run\r\nit on port 80 or any other port below 1024. The ``--local`` option tells\r\n``gitserve`` to listen only on ``127.0.0.1``.\r\n\r\nThe ``--browser`` option tells ``gitserve`` to automatically start your system's\r\ndefault web browser with the URL of the ``gitserve`` server while starting it.\r\n\r\nThe ``--daemon`` option causes the whole ``gitserve`` process to detach from\r\nyour current shell session, becoming a daemon process that runs in background.\r\nThis is very useful in combination with the ``--pid-file`` option that write\r\nthe process id in the given file.\r\n\r\nYou can specify the location of the gitweb.cgi file that ``gitserve`` uses\r\nwith the ``--gitweb`` option (e.g. /home/jannis/lib/git/gitweb.cgi).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jezdez/gitserve/", "keywords": "git dvcs mercurial serve cgi", "license": "GPL-2", "maintainer": "", "maintainer_email": "", "name": "gitserve", "package_url": "https://pypi.org/project/gitserve/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gitserve/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jezdez/gitserve/"}, "release_url": "https://pypi.org/project/gitserve/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "A helper tool for git that mimics mercurial's serve command", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a helper tool for git that mimics <a href=\"http://www.selenic.com/mercurial/\" rel=\"nofollow\">mercurial</a>\u2019s <a href=\"http://www.selenic.com/mercurial/wiki/index.cgi/hgserve\" rel=\"nofollow\">serve</a> command.</p>\n<p>It makes it very easy to see all your git project via <a href=\"http://git.or.cz/\" rel=\"nofollow\">git</a>\u2019s own <a href=\"http://git.or.cz/gitwiki/Gitweb\" rel=\"nofollow\">gitweb</a> by\nrunning a lightweight local server.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>When <tt>gitserve</tt> was installed correctly (with <tt>sudo</tt>) it\u2019s usually located\nin <tt>/usr/local/bin</tt>. Note that this directory needs to be on your <tt>$PATH</tt>\nenvironment variable to be found by your shell.</p>\n<p>Usage pretty easy:</p>\n<pre>$ gitserve --help\nUsage: gitserve [options] &lt;dir&gt;\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -v, --verbose         print status messages to stdout\n  -q, --quiet           don't print anything to stdout\n  -p PORT, --port=PORT  port to listen on (default: 8000)\n  -a ADDRESS, --address=ADDRESS\n                        address to listen on (default: hostname)\n  -l, --local           only listen on 127.0.0.1\n  -b, --browser         open default browser automatically\n  -d, --daemon          detach from terminal and become a daemon\n  --pid-file=PIDFILE    write the spawned process-id to this file\n  --gitweb=GITWEB       use this gitweb cgi file instead of the included\n                        version\n</pre>\n<p>As the only argument you can specify a directory that contains your git\nprojects. If you leave this argument blank <tt>gitserve</tt> will automatically uses\nthe current directory as the source for the gitweb script. E.g.:</p>\n<pre>$ gitserve /home/jannis/git-projects\n</pre>\n<p>Shortcuts in the directory argument are also possible and will be expanded on\nruntime:</p>\n<pre>$ gitserve ~/git-projects\n</pre>\n<p>The default <tt>gitserve</tt> process will listen on your machine\u2019s hostname and on\nport 8000, for example: <a href=\"http://127.0.0.1:8000/\" rel=\"nofollow\">http://127.0.0.1:8000/</a></p>\n<p>If you provide a <tt><span class=\"pre\">--port</span></tt> or <tt><span class=\"pre\">--address</span></tt> option while starting <tt>gitserve</tt>\nyou can have <tt>gitserve</tt> listen on your choices. You need to be root to run\nit on port 80 or any other port below 1024. The <tt><span class=\"pre\">--local</span></tt> option tells\n<tt>gitserve</tt> to listen only on <tt>127.0.0.1</tt>.</p>\n<p>The <tt><span class=\"pre\">--browser</span></tt> option tells <tt>gitserve</tt> to automatically start your system\u2019s\ndefault web browser with the URL of the <tt>gitserve</tt> server while starting it.</p>\n<p>The <tt><span class=\"pre\">--daemon</span></tt> option causes the whole <tt>gitserve</tt> process to detach from\nyour current shell session, becoming a daemon process that runs in background.\nThis is very useful in combination with the <tt><span class=\"pre\">--pid-file</span></tt> option that write\nthe process id in the given file.</p>\n<p>You can specify the location of the gitweb.cgi file that <tt>gitserve</tt> uses\nwith the <tt><span class=\"pre\">--gitweb</span></tt> option (e.g. /home/jannis/lib/git/gitweb.cgi).</p>\n</div>\n\n          </div>"}, "last_serial": 792484, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "2ac758f65b5205bf57f25ffefae71c11", "sha256": "827dc9c4cdd1a5cd6788304c000475321e7e7107c64df0d96759539ab92095ce"}, "downloads": -1, "filename": "gitserve-0.2.0.tar.gz", "has_sig": true, "md5_digest": "2ac758f65b5205bf57f25ffefae71c11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51446, "upload_time": "2008-04-28T10:33:20", "upload_time_iso_8601": "2008-04-28T10:33:20Z", "url": "https://files.pythonhosted.org/packages/a3/7a/cbb87890a9492a3f12272a5c510a777658f00cd453cedfff309649ab2640/gitserve-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ac758f65b5205bf57f25ffefae71c11", "sha256": "827dc9c4cdd1a5cd6788304c000475321e7e7107c64df0d96759539ab92095ce"}, "downloads": -1, "filename": "gitserve-0.2.0.tar.gz", "has_sig": true, "md5_digest": "2ac758f65b5205bf57f25ffefae71c11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51446, "upload_time": "2008-04-28T10:33:20", "upload_time_iso_8601": "2008-04-28T10:33:20Z", "url": "https://files.pythonhosted.org/packages/a3/7a/cbb87890a9492a3f12272a5c510a777658f00cd453cedfff309649ab2640/gitserve-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:47 2020"}