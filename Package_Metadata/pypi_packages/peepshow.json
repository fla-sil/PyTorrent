{"info": {"author": "Grzegorz Krason", "author_email": "grzegorz@krason.me", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Software Development :: Debuggers", "Topic :: Utilities"], "description": "PeepShow\n========\n\nProvides following utilities for debugging Python applications:\n\n* show - lightweight function that prints name and value of your variable(s) to the console.\n* peep - featured, interactive interface for data inspection.\n\n.. image:: https://user-images.githubusercontent.com/11185582/51219128-b3127780-192f-11e9-8618-ecfff642b87f.gif\n\nInstallation\n------------\n\nInstall ``peepshow`` package:\n\n.. code-block:: bash\n\n    pip install peepshow\n\nPeepShow uses ``clear``, ``vim``, ``man`` commands which are available in most of Linux distributions. Users of other operating systems need to install them on their own.\n\nBuilt-Ins\n^^^^^^^^^\n\nIf you expect to use peepshow often, consider adding ``peep`` and ``show`` commands to Python's built-ins and enabling except hook. Edit either ``{site-packages}/sitecustomize.py`` or ``{user-site-packages}/usercustomize.py`` and append the following:\n\n.. code-block:: python\n\n    import peepshow\n    import builtins\n    builtins.peep = peepshow.peep\n    builtins.show = peepshow.show\n    builtins.peep_ = peepshow.peep_\n    builtins.show_ = peepshow.show_\n    peepshow.enable_except_hook(consider_env=True)\n\nAlternatively let the installer do it for you:\n\n.. code-block:: bash\n\n        pip install peepshow --upgrade --force-reinstall --no-deps --install-option=\"--add-builtins\"\n\nNote that ``pip uninstall peepshow`` command will not undo this change. You need to do it manually.\n\nBreakpoint\n^^^^^^^^^^\n\nIt is also possible to invoke ``peep()`` as a result of calling built-in function ``breakpoint()``. To enable such behaviour use ``PYTHONBREAKPOINT`` system variable:\n\n.. code-block:: bash\n\n    export PYTHONBREAKPOINT=peepshow.peep\n\nCompatibility\n-------------\n\n* This software is expected to work with Python 3.6, 3.7, 3.8 and compatible.\n* It has never been tested under operating systems other than Linux.\n* It works fine when started in a plain Python script, in ipython or ptipython\n* In these environments like interactive python console, in pdb and ipdb, peep and show cannot infer names of the variables in the user context, so they need to be provided explicitely (e.g. use `peep_`` and ``show_``).\n\nUsage\n-----\n\nshow\n^^^^\n\nRunning this script:\n\n.. code-block:: python\n\n    x = 123\n    y = {'name': 'John', 'age': 123}\n    z = \"Hello World!\"\n\n    # show all the variables in the scope\n    show()\n\n    # or only variables of your choice\n    show(x, y)\n\n    # you can also rename them\n    show(my_var=x)\n\n    # use 'show_' to specify variable names as a string\n    show_('x')\n\n    # expressions and renaming are also allowed\n    show_('x + 321', zet='z')\n\n\nwill result in following output:\n\n.. code-block::\n\n    x = 123\n    y = {'age': 123, 'name': 'John'}\n    z = 'Hello World!'\n    x = 123\n    y = {'age': 123, 'name': 'John'}\n    my_var = 123\n    x = 123\n    x + 321 = 444\n    zet = 'Hello World!'\n\n\npeep\n^^^^\n\nTry running the following script:\n\n.. code-block:: python\n\n    x = 123\n    y = {'name': 'John', 'age': 123}\n    z = \"Hello World!\"\n\n    # inspect dictionary that consists of all the variables in the scope\n    peep()\n\n    # or inspect variable of your choice directly\n    peep(x)\n\n    # use 'peep_' to specify variable name as a string\n    peep_('x')\n\n\nWhen interactive interface pops up:\n\n* hit ENTER to see list of available variables\n* type ``10`` and hit ENTER to select ``y``\n* hit ENTER again to see items of your dictionary\n* type ``dir`` and hit ENTER to list attributes of ``y`` (excluding built-ins)\n* type ``continue`` and hit ENTER to proceed or type ``quit`` and hit ENTER to terminate your script\n\nNote that all the commands have their short aliases. E.g. ``quit`` and ``q`` is the same.\n\nFor more help:\n\n* type ``help`` and hit ENTER to see list of available commands\n* type ``man`` and hit ENTER to read the manual, hit ``q`` when you are done\n\nexcepthook\n^^^^^^^^^^\n\nBefore running your script, set environment variable `PYTHON_PEEP_EXCEPTIONS` to `1`. Now run the script and see what happens when an exception is raised.\n\nDevelopment\n-----------\n\nPreparing Environment\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: bash\n\n    ./setup.sh\n    source venv/bin/activate\n\n\nModifying Dependencies\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: bash\n\n    # edit setup.py\n    # edit requirements*.in\n    pip-compile\n    pip-sync\n    # git add... commit... push...\n\nTesting\n^^^^^^^\n\n.. code-block:: bash\n\n    pytest\n\nReleasing\n^^^^^^^^^\n\n.. code-block:: bash\n\n    # update version in setup.py\n    python setup.py sdist\n    twine upload dist/peepshow-$VERSION.tar.gz\n    git tag $VERSION\n    git push --tags", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gergelyk/peepshow", "keywords": "debug,data,explore,programming", "license": "", "maintainer": "", "maintainer_email": "", "name": "peepshow", "package_url": "https://pypi.org/project/peepshow/", "platform": "", "project_url": "https://pypi.org/project/peepshow/", "project_urls": {"Homepage": "https://github.com/gergelyk/peepshow"}, "release_url": "https://pypi.org/project/peepshow/0.2.2/", "requires_dist": null, "requires_python": ">=3.6,<3.9", "summary": "Data Explorer", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Provides following utilities for debugging Python applications:</p>\n<ul>\n<li>show - lightweight function that prints name and value of your variable(s) to the console.</li>\n<li>peep - featured, interactive interface for data inspection.</li>\n</ul>\n<img alt=\"https://user-images.githubusercontent.com/11185582/51219128-b3127780-192f-11e9-8618-ecfff642b87f.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c34378a7101f24a92db1261e2128c60bd7b703b8/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31313138353538322f35313231393132382d62333132373738302d313932662d313165392d383631382d6563666666363432623837662e676966\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install <tt>peepshow</tt> package:</p>\n<pre>pip install peepshow\n</pre>\n<p>PeepShow uses <tt>clear</tt>, <tt>vim</tt>, <tt>man</tt> commands which are available in most of Linux distributions. Users of other operating systems need to install them on their own.</p>\n<div id=\"built-ins\">\n<h3>Built-Ins</h3>\n<p>If you expect to use peepshow often, consider adding <tt>peep</tt> and <tt>show</tt> commands to Python\u2019s built-ins and enabling except hook. Edit either <tt><span class=\"pre\">{site-packages}/sitecustomize.py</span></tt> or <tt><span class=\"pre\">{user-site-packages}/usercustomize.py</span></tt> and append the following:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">peepshow</span>\n<span class=\"kn\">import</span> <span class=\"nn\">builtins</span>\n<span class=\"n\">builtins</span><span class=\"o\">.</span><span class=\"n\">peep</span> <span class=\"o\">=</span> <span class=\"n\">peepshow</span><span class=\"o\">.</span><span class=\"n\">peep</span>\n<span class=\"n\">builtins</span><span class=\"o\">.</span><span class=\"n\">show</span> <span class=\"o\">=</span> <span class=\"n\">peepshow</span><span class=\"o\">.</span><span class=\"n\">show</span>\n<span class=\"n\">builtins</span><span class=\"o\">.</span><span class=\"n\">peep_</span> <span class=\"o\">=</span> <span class=\"n\">peepshow</span><span class=\"o\">.</span><span class=\"n\">peep_</span>\n<span class=\"n\">builtins</span><span class=\"o\">.</span><span class=\"n\">show_</span> <span class=\"o\">=</span> <span class=\"n\">peepshow</span><span class=\"o\">.</span><span class=\"n\">show_</span>\n<span class=\"n\">peepshow</span><span class=\"o\">.</span><span class=\"n\">enable_except_hook</span><span class=\"p\">(</span><span class=\"n\">consider_env</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively let the installer do it for you:</p>\n<pre>pip install peepshow --upgrade --force-reinstall --no-deps --install-option<span class=\"o\">=</span><span class=\"s2\">\"--add-builtins\"</span>\n</pre>\n<p>Note that <tt>pip uninstall peepshow</tt> command will not undo this change. You need to do it manually.</p>\n</div>\n<div id=\"breakpoint\">\n<h3>Breakpoint</h3>\n<p>It is also possible to invoke <tt>peep()</tt> as a result of calling built-in function <tt>breakpoint()</tt>. To enable such behaviour use <tt>PYTHONBREAKPOINT</tt> system variable:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">PYTHONBREAKPOINT</span><span class=\"o\">=</span>peepshow.peep\n</pre>\n</div>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<ul>\n<li>This software is expected to work with Python 3.6, 3.7, 3.8 and compatible.</li>\n<li>It has never been tested under operating systems other than Linux.</li>\n<li>It works fine when started in a plain Python script, in ipython or ptipython</li>\n<li>In these environments like interactive python console, in pdb and ipdb, peep and show cannot infer names of the variables in the user context, so they need to be provided explicitely (e.g. use <cite>peep_`</cite> and <tt>show_</tt>).</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"show\">\n<h3>show</h3>\n<p>Running this script:</p>\n<pre><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">123</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">}</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hello World!\"</span>\n\n<span class=\"c1\"># show all the variables in the scope</span>\n<span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># or only variables of your choice</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can also rename them</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">my_var</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># use 'show_' to specify variable names as a string</span>\n<span class=\"n\">show_</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># expressions and renaming are also allowed</span>\n<span class=\"n\">show_</span><span class=\"p\">(</span><span class=\"s1\">'x + 321'</span><span class=\"p\">,</span> <span class=\"n\">zet</span><span class=\"o\">=</span><span class=\"s1\">'z'</span><span class=\"p\">)</span>\n</pre>\n<p>will result in following output:</p>\n<pre>x = 123\ny = {'age': 123, 'name': 'John'}\nz = 'Hello World!'\nx = 123\ny = {'age': 123, 'name': 'John'}\nmy_var = 123\nx = 123\nx + 321 = 444\nzet = 'Hello World!'\n</pre>\n</div>\n<div id=\"peep\">\n<h3>peep</h3>\n<p>Try running the following script:</p>\n<pre><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">123</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">}</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hello World!\"</span>\n\n<span class=\"c1\"># inspect dictionary that consists of all the variables in the scope</span>\n<span class=\"n\">peep</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># or inspect variable of your choice directly</span>\n<span class=\"n\">peep</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># use 'peep_' to specify variable name as a string</span>\n<span class=\"n\">peep_</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">)</span>\n</pre>\n<p>When interactive interface pops up:</p>\n<ul>\n<li>hit ENTER to see list of available variables</li>\n<li>type <tt>10</tt> and hit ENTER to select <tt>y</tt></li>\n<li>hit ENTER again to see items of your dictionary</li>\n<li>type <tt>dir</tt> and hit ENTER to list attributes of <tt>y</tt> (excluding built-ins)</li>\n<li>type <tt>continue</tt> and hit ENTER to proceed or type <tt>quit</tt> and hit ENTER to terminate your script</li>\n</ul>\n<p>Note that all the commands have their short aliases. E.g. <tt>quit</tt> and <tt>q</tt> is the same.</p>\n<p>For more help:</p>\n<ul>\n<li>type <tt>help</tt> and hit ENTER to see list of available commands</li>\n<li>type <tt>man</tt> and hit ENTER to read the manual, hit <tt>q</tt> when you are done</li>\n</ul>\n</div>\n<div id=\"excepthook\">\n<h3>excepthook</h3>\n<p>Before running your script, set environment variable <cite>PYTHON_PEEP_EXCEPTIONS</cite> to <cite>1</cite>. Now run the script and see what happens when an exception is raised.</p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<div id=\"preparing-environment\">\n<h3>Preparing Environment</h3>\n<pre>./setup.sh\n<span class=\"nb\">source</span> venv/bin/activate\n</pre>\n</div>\n<div id=\"modifying-dependencies\">\n<h3>Modifying Dependencies</h3>\n<pre><span class=\"c1\"># edit setup.py\n# edit requirements*.in\n</span>pip-compile\npip-sync\n<span class=\"c1\"># git add... commit... push...</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<pre>pytest\n</pre>\n</div>\n<div id=\"releasing\">\n<h3>Releasing</h3>\n<pre><span class=\"c1\"># update version in setup.py\n</span>python setup.py sdist\ntwine upload dist/peepshow-<span class=\"nv\">$VERSION</span>.tar.gz\ngit tag <span class=\"nv\">$VERSION</span>\ngit push --tags\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6409226, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9b32cd276d5198837ef6760bd8254d2e", "sha256": "a9c3301e8de6253078518edf128ff305a9dcf3f273255e2dc29a901757dcb519"}, "downloads": -1, "filename": "peepshow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9b32cd276d5198837ef6760bd8254d2e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6, ~=3.7", "size": 23890, "upload_time": "2018-12-01T15:24:17", "upload_time_iso_8601": "2018-12-01T15:24:17.669465Z", "url": "https://files.pythonhosted.org/packages/16/fb/f748573a70dc89dd0f283bbb3048286d0627d5326a553ccf35e0d8fef067/peepshow-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c59dc243f99a085df2a80e2634b0acdd", "sha256": "f2c223e2b8596ab9cfe2cfe96a3d6dd01c7517663bef1f4fd9b45c24c4235299"}, "downloads": -1, "filename": "peepshow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c59dc243f99a085df2a80e2634b0acdd", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6, ~=3.7", "size": 24680, "upload_time": "2018-12-01T23:01:26", "upload_time_iso_8601": "2018-12-01T23:01:26.974807Z", "url": "https://files.pythonhosted.org/packages/dd/46/e1ac6109661629774031838bf5443e150d55d2ae0809ff04d7ec19a28b23/peepshow-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "180f5d4e5cdff037555c2dc80d829e36", "sha256": "06455e15cb0e3126565432c8fd83ec91d4af03c119eb444d3e99ef2a21f3ae8b"}, "downloads": -1, "filename": "peepshow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "180f5d4e5cdff037555c2dc80d829e36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<=3.7", "size": 22498, "upload_time": "2018-12-02T22:14:34", "upload_time_iso_8601": "2018-12-02T22:14:34.582778Z", "url": "https://files.pythonhosted.org/packages/aa/3a/2add9544ea1889ceb9d87f2a48b6670000a8e61e6c244d70998189814e1c/peepshow-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c2f74f3fafa6195b8284f23be514fe7b", "sha256": "8c30fcc4185d55ed4aef6b6c769993dd056a9b934965fa2435fa6c6cf3424b73"}, "downloads": -1, "filename": "peepshow-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c2f74f3fafa6195b8284f23be514fe7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.8", "size": 24519, "upload_time": "2019-02-04T21:21:17", "upload_time_iso_8601": "2019-02-04T21:21:17.348858Z", "url": "https://files.pythonhosted.org/packages/c0/6e/3cb0908ce25e6e22902fefd7dfb47d97f4083114192f88f61092b24172af/peepshow-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d5e3a6cefd3ebc99753434bb89708ce6", "sha256": "565544866eb144b7e18e5f10b1016e61d4f3293b057679ca77e2fa786d970145"}, "downloads": -1, "filename": "peepshow-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d5e3a6cefd3ebc99753434bb89708ce6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.8", "size": 22494, "upload_time": "2019-06-21T21:18:17", "upload_time_iso_8601": "2019-06-21T21:18:17.417167Z", "url": "https://files.pythonhosted.org/packages/c7/07/cb5b2d956a68e842ea26bfdfc7c519c1720014c9e9819b8771b194651781/peepshow-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "0acd7c6d76ea361860f02acb84891272", "sha256": "31fbca686baa6bd1c42eb79d8ea58cb9e182a2b4e17cdd0d6ab1a0cb41f8e1d4"}, "downloads": -1, "filename": "peepshow-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0acd7c6d76ea361860f02acb84891272", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.8", "size": 22494, "upload_time": "2019-06-21T22:06:09", "upload_time_iso_8601": "2019-06-21T22:06:09.077579Z", "url": "https://files.pythonhosted.org/packages/c6/8a/c4021b586db07950856d70490668547474af4caa1e07f1021bffde3a34ac/peepshow-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "4189f124ba2f5b25b7ae2373a5b3d2b8", "sha256": "7c2febb7e84e3de6b8ed42f405bfeaa038c4c231760900838bc735cd52a8d1b6"}, "downloads": -1, "filename": "peepshow-0.1.6.tar.gz", "has_sig": false, "md5_digest": "4189f124ba2f5b25b7ae2373a5b3d2b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 25638, "upload_time": "2020-01-03T13:08:27", "upload_time_iso_8601": "2020-01-03T13:08:27.698287Z", "url": "https://files.pythonhosted.org/packages/68/1c/90714ae866a305e6bd6c32c0ec7df62157f98196e8e44266e9859bb9293b/peepshow-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7e6a2d58681f4f3365d28790d87e6130", "sha256": "5afa3932000542e51ad402f49fc0ad86edc71455405d3ba4f3dcc2a077b8af50"}, "downloads": -1, "filename": "peepshow-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7e6a2d58681f4f3365d28790d87e6130", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 25694, "upload_time": "2020-01-07T00:44:22", "upload_time_iso_8601": "2020-01-07T00:44:22.925440Z", "url": "https://files.pythonhosted.org/packages/6f/05/e3392ecd99e75788749362387ce71436363a0240031474865acc9ccd2e86/peepshow-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c53e7943990e210dd4b3a238986738b9", "sha256": "68f793996c579de08f502433d69da42fe8f006518611ea6f897d6e952b6b6c59"}, "downloads": -1, "filename": "peepshow-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c53e7943990e210dd4b3a238986738b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 26951, "upload_time": "2020-01-07T15:18:47", "upload_time_iso_8601": "2020-01-07T15:18:47.916604Z", "url": "https://files.pythonhosted.org/packages/67/17/79b713ea0a9a7b53adb28e0eb82a36a84b21a532c54703b89e85c94d3b09/peepshow-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "1cbf867dc15054d32cc9048e1c5ed1f8", "sha256": "7deb02086fcd67b9099431ee29861d67ada9149be791c51aab3310230631c163"}, "downloads": -1, "filename": "peepshow-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1cbf867dc15054d32cc9048e1c5ed1f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 26945, "upload_time": "2020-01-07T15:44:03", "upload_time_iso_8601": "2020-01-07T15:44:03.700091Z", "url": "https://files.pythonhosted.org/packages/e9/2a/faf8afa373933ef03c3ab75ea964f04f523ab3ccdf0a7f4c883f9e17f4a5/peepshow-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cbf867dc15054d32cc9048e1c5ed1f8", "sha256": "7deb02086fcd67b9099431ee29861d67ada9149be791c51aab3310230631c163"}, "downloads": -1, "filename": "peepshow-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1cbf867dc15054d32cc9048e1c5ed1f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 26945, "upload_time": "2020-01-07T15:44:03", "upload_time_iso_8601": "2020-01-07T15:44:03.700091Z", "url": "https://files.pythonhosted.org/packages/e9/2a/faf8afa373933ef03c3ab75ea964f04f523ab3ccdf0a7f4c883f9e17f4a5/peepshow-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:48 2020"}