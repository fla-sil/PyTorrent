{"info": {"author": "Xavier Barbosa", "author_email": "clint.northwood@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: System :: Clustering"], "description": "Facts\n=====\n\nReturns facts of local machine.\n\n\nInstallation\n------------\n\n::\n\n    pip install facts\n\n\nCLI Usage\n---------\n\nGet all facts::\n\n    facts all\n\nGet one fact::\n\n    fact read foo\n\nGet the human readable memory usage::\n\n    fact read memory --human\n\nSet one custom fact::\n\n    fact write foo 'It is nice'\n\nWhen value is a mapping, then you can choose between 2 merging strategies::\n\n    fact write foo '{is: bar}' --format yaml --replace\n    fact write foo '{not: baz}' --format yaml --merge\n\nDelete a custom fact::\n\n    fact delete foo\n\n\nTargeting\n---------\n\nBy convention key facts can't have colon marks.\nBecause facts can be nested, and it's possible to target these sub data.\nEach parts must be seperated by a colon. For example if::\n\n    fact read foo\n\nreturns::\n\n    is: bar\n    not: baz\n\nThen::\n\n    fact read foo:is\n\nreturns::\n\n    bar\n\nBut::\n\n    fact read foo:wrong:key\n\nwill return nothing.\n\n\nMatching\n--------\n\nIt is also possible to check if a certain fact turns out true::\n\n    fact match foo:is:bar\n\n\nGrafting\n--------\n\nFacts allow you to extends with 'grafts'. There is 2 ways\n\n\n1. by modules\n~~~~~~~~~~~~~\n\nYou can extend with your own facts. Any python modules under ``~/.facts/grafts`` will be loaded. For example::\n\n    # ~/.facts/grafts/my_grafts.py\n\n    from facts import graft, mark\n\n    @graft\n    def hello_world():\n        return {\n            'hello': 'world',\n            'size': mark(1234567890, 'bytes')\n        }\n\nWill append the fact ``hello`` with the value ``world``, and the fact ``size``\nwith one of these values (depending the --human switch) ``1234567890`` or ``1.1G``.\n\n\n2. with setuptools\n~~~~~~~~~~~~~~~~~~\n\nYou also write python libraries that will contribute to facts with using setuptools. Add the following to the setup.py function::\n\n    entry_points={\n        'facts.graft': [\n            'plugin-1 = mylib:plugin_1',\n            'plugin-2 = mylib:plugin_2'\n        ]\n    }", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/johnnoone/facts", "keywords": "infrastructure,asyncio", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "facts", "package_url": "https://pypi.org/project/facts/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/facts/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/johnnoone/facts"}, "release_url": "https://pypi.org/project/facts/0.4/", "requires_dist": null, "requires_python": null, "summary": "Return facts of server", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Returns facts of local machine.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install facts\n</pre>\n</div>\n<div id=\"cli-usage\">\n<h2>CLI Usage</h2>\n<p>Get all facts:</p>\n<pre>facts all\n</pre>\n<p>Get one fact:</p>\n<pre>fact read foo\n</pre>\n<p>Get the human readable memory usage:</p>\n<pre>fact read memory --human\n</pre>\n<p>Set one custom fact:</p>\n<pre>fact write foo 'It is nice'\n</pre>\n<p>When value is a mapping, then you can choose between 2 merging strategies:</p>\n<pre>fact write foo '{is: bar}' --format yaml --replace\nfact write foo '{not: baz}' --format yaml --merge\n</pre>\n<p>Delete a custom fact:</p>\n<pre>fact delete foo\n</pre>\n</div>\n<div id=\"targeting\">\n<h2>Targeting</h2>\n<p>By convention key facts can\u2019t have colon marks.\nBecause facts can be nested, and it\u2019s possible to target these sub data.\nEach parts must be seperated by a colon. For example if:</p>\n<pre>fact read foo\n</pre>\n<p>returns:</p>\n<pre>is: bar\nnot: baz\n</pre>\n<p>Then:</p>\n<pre>fact read foo:is\n</pre>\n<p>returns:</p>\n<pre>bar\n</pre>\n<p>But:</p>\n<pre>fact read foo:wrong:key\n</pre>\n<p>will return nothing.</p>\n</div>\n<div id=\"matching\">\n<h2>Matching</h2>\n<p>It is also possible to check if a certain fact turns out true:</p>\n<pre>fact match foo:is:bar\n</pre>\n</div>\n<div id=\"grafting\">\n<h2>Grafting</h2>\n<p>Facts allow you to extends with \u2018grafts\u2019. There is 2 ways</p>\n<div id=\"by-modules\">\n<h3>1. by modules</h3>\n<p>You can extend with your own facts. Any python modules under <tt><span class=\"pre\">~/.facts/grafts</span></tt> will be loaded. For example:</p>\n<pre># ~/.facts/grafts/my_grafts.py\n\nfrom facts import graft, mark\n\n@graft\ndef hello_world():\n    return {\n        'hello': 'world',\n        'size': mark(1234567890, 'bytes')\n    }\n</pre>\n<p>Will append the fact <tt>hello</tt> with the value <tt>world</tt>, and the fact <tt>size</tt>\nwith one of these values (depending the \u2013human switch) <tt>1234567890</tt> or <tt>1.1G</tt>.</p>\n</div>\n<div id=\"with-setuptools\">\n<h3>2. with setuptools</h3>\n<p>You also write python libraries that will contribute to facts with using setuptools. Add the following to the setup.py function:</p>\n<pre>entry_points={\n    'facts.graft': [\n        'plugin-1 = mylib:plugin_1',\n        'plugin-2 = mylib:plugin_2'\n    ]\n}\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1612866, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3b0a54cb5f9509958ba1b84a355deca2", "sha256": "c665db4611aaec350c45c7958e572803320af47de76d5dfcf3b0568afe49d753"}, "downloads": -1, "filename": "facts-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3b0a54cb5f9509958ba1b84a355deca2", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 9244, "upload_time": "2015-06-25T08:47:32", "upload_time_iso_8601": "2015-06-25T08:47:32.058055Z", "url": "https://files.pythonhosted.org/packages/4e/8e/5295b428d5872adca4e948c388666908927d1ab4a9d03681581a3366fa64/facts-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ec59ee1c3e09c31035cdff9da9268d8", "sha256": "25bf0415841bf7091a539194bb189202dffe8ee12504e1a0b3bfa24775207660"}, "downloads": -1, "filename": "facts-0.1.tar.gz", "has_sig": false, "md5_digest": "5ec59ee1c3e09c31035cdff9da9268d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5551, "upload_time": "2015-06-25T08:47:28", "upload_time_iso_8601": "2015-06-25T08:47:28.847951Z", "url": "https://files.pythonhosted.org/packages/83/5e/fdef4283a73ad9eaedaae6c1731b6c2749f90278d538d157846c189d40fe/facts-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "94672fa2e708cb31a5522353eb3498ab", "sha256": "9829c01bff93efe4f7e685559daa7828a996c351e5c0cfa926af6034e5ceec54"}, "downloads": -1, "filename": "facts-0.2.tar.gz", "has_sig": false, "md5_digest": "94672fa2e708cb31a5522353eb3498ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6623, "upload_time": "2015-06-29T15:10:19", "upload_time_iso_8601": "2015-06-29T15:10:19.432266Z", "url": "https://files.pythonhosted.org/packages/8d/2c/a09e8687ba2f730a5c613270e54b5ef5c99ec9e7246d1d876c187c0f55b7/facts-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ac5d6ce7214e1a6c90cdfdf7f9503429", "sha256": "0b9486eea3d1cf8f0d5ef1770b465057b6f7da4e4bdb1d7f528ade437f3c1a93"}, "downloads": -1, "filename": "facts-0.3.tar.gz", "has_sig": false, "md5_digest": "ac5d6ce7214e1a6c90cdfdf7f9503429", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7000, "upload_time": "2015-06-29T16:23:37", "upload_time_iso_8601": "2015-06-29T16:23:37.662243Z", "url": "https://files.pythonhosted.org/packages/3d/b3/51940ce1381f61d9683f927e8b988a75bf02ba4a3cc3e22c9ed38739b71e/facts-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f8509ac685f4e55f6b4110feee4564e3", "sha256": "68bffb019692e4aa4fe5ee467459da55f63724bad3f002c951893dc30e485c8e"}, "downloads": -1, "filename": "facts-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8509ac685f4e55f6b4110feee4564e3", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 12738, "upload_time": "2015-06-30T09:42:58", "upload_time_iso_8601": "2015-06-30T09:42:58.396718Z", "url": "https://files.pythonhosted.org/packages/67/de/1456ac14385015255d9dc3c23b08e5636257cf650df18fa5038bfb17a1dd/facts-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f958399abad0e644a344e5cddb1b700a", "sha256": "1e29229275171a71ef08ca0cbd634fcc3e62d7c095c39d788d9f0f32a1f07fe8"}, "downloads": -1, "filename": "facts-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f958399abad0e644a344e5cddb1b700a", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 12736, "upload_time": "2015-06-30T09:41:55", "upload_time_iso_8601": "2015-06-30T09:41:55.330983Z", "url": "https://files.pythonhosted.org/packages/04/52/6e9832fe1d439585f107c4b909a46688b17ed3721cf3d37323a46e80fc3e/facts-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bf5fbc1815e1eb08f7f3a361d7b03e2", "sha256": "c899c226ad527bc4d9bc4f71dbafed51728063ce22acf6436bfc5fd294956857"}, "downloads": -1, "filename": "facts-0.4.tar.gz", "has_sig": false, "md5_digest": "9bf5fbc1815e1eb08f7f3a361d7b03e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8171, "upload_time": "2015-06-30T09:41:51", "upload_time_iso_8601": "2015-06-30T09:41:51.518313Z", "url": "https://files.pythonhosted.org/packages/33/88/9a719b12018e4e4387c1f5d75e1631e85da04f0675b095d8561f851576e0/facts-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8509ac685f4e55f6b4110feee4564e3", "sha256": "68bffb019692e4aa4fe5ee467459da55f63724bad3f002c951893dc30e485c8e"}, "downloads": -1, "filename": "facts-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8509ac685f4e55f6b4110feee4564e3", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 12738, "upload_time": "2015-06-30T09:42:58", "upload_time_iso_8601": "2015-06-30T09:42:58.396718Z", "url": "https://files.pythonhosted.org/packages/67/de/1456ac14385015255d9dc3c23b08e5636257cf650df18fa5038bfb17a1dd/facts-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f958399abad0e644a344e5cddb1b700a", "sha256": "1e29229275171a71ef08ca0cbd634fcc3e62d7c095c39d788d9f0f32a1f07fe8"}, "downloads": -1, "filename": "facts-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f958399abad0e644a344e5cddb1b700a", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 12736, "upload_time": "2015-06-30T09:41:55", "upload_time_iso_8601": "2015-06-30T09:41:55.330983Z", "url": "https://files.pythonhosted.org/packages/04/52/6e9832fe1d439585f107c4b909a46688b17ed3721cf3d37323a46e80fc3e/facts-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bf5fbc1815e1eb08f7f3a361d7b03e2", "sha256": "c899c226ad527bc4d9bc4f71dbafed51728063ce22acf6436bfc5fd294956857"}, "downloads": -1, "filename": "facts-0.4.tar.gz", "has_sig": false, "md5_digest": "9bf5fbc1815e1eb08f7f3a361d7b03e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8171, "upload_time": "2015-06-30T09:41:51", "upload_time_iso_8601": "2015-06-30T09:41:51.518313Z", "url": "https://files.pythonhosted.org/packages/33/88/9a719b12018e4e4387c1f5d75e1631e85da04f0675b095d8561f851576e0/facts-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:02 2020"}