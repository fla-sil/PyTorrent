{"info": {"author": "Junji Hashimoto", "author_email": "junji.hashimoto@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "stacked-dag for python\n======================\n\n|Build Status|\n\nAscii DAG for visualization of dataflow\n\nstacked-dag can show Ascii-DAG(Directed acyclic graph) from a Dot file\nof graphviz. Dataflow's direction is from top to bottom. 'o' means a\nnode. A label of the node is shown to the left side. Other characters\nare edges of DAG.\n\nA sample of DAG is below.\n\n::\n\n    o o    l0,l4\n    |/\n    o    l1\n    |\n    o    l2\n    |\n    o    l3\n\nUsage with dot\n==============\n\nWrite a Dot file of graphviz.\n\n::\n\n    $ cat > sample.dot\n    digraph graphname {\n      0 [label=\"l0\"];\n      1 [label=\"l1\"];\n      2 [label=\"l2\"];\n      3 [label=\"l3\"];\n      4 [label=\"l4\"];\n      0->1;\n      1->2;\n      2->3;\n      4->1;\n    }\n\nShow ascii DAG by following command.\n\n::\n\n    $ python stackeddag.py sample.dot\n    o o    l0,l4\n    |/\n    o    l1\n    |\n    o    l2\n    |\n    o    l3\n\nUsage with tensorflow\n=====================\n\n::\n\n    import tensorflow as tf\n    import stackeddag.tf as sd\n\n    def mydataflow():\n      a = tf.constant(1,name=\"a\")\n      b = tf.constant(2,name=\"b\")\n      c = tf.add(a,b,name=\"c\")\n      return tf.get_default_graph()\n\n    print(sd.fromGraph(mydataflow()),end=\"\")\n\nThe output is below.\n\n::\n\n    o o    a,b\n    |/\n    o    c\n\nAnother sample\n==============\n\n::\n\n    $ python stackeddag.py sample/test.dot\n    o\n    |\n    o\n    |\\\n    o |\n    | |\\\n    o o |\n    |\\ \\ \\\n    | | |\\ \\\n    | | | | |\\\n    o o o o o |\n    |/ /_/ / /\n    | |  / /\n    o o o o\n    |/_/_/\n    o\n\n.. |Build Status| image:: https://travis-ci.org/junjihashimoto/py-stacked-dag.png?branch=master\n   :target: https://travis-ci.org/junjihashimoto/py-stacked-dag", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/junjihashimoto/py-stacked-dag", "keywords": "tensorflow tensor machine-learning graphviz ascii dag ml deep-learning neural-network", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "stackeddag", "package_url": "https://pypi.org/project/stackeddag/", "platform": "", "project_url": "https://pypi.org/project/stackeddag/", "project_urls": {"Homepage": "https://github.com/junjihashimoto/py-stacked-dag"}, "release_url": "https://pypi.org/project/stackeddag/0.3.3/", "requires_dist": null, "requires_python": "", "summary": "A visualization tool to show a ascii graph from Graphviz-Dot-file or Tensorflow", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"stacked-dag-for-python\">\n<h2>stacked-dag for python</h2>\n<p><a href=\"https://travis-ci.org/junjihashimoto/py-stacked-dag\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/577716cae49f17cf8ad55e0c62331582e967ad70/68747470733a2f2f7472617669732d63692e6f72672f6a756e6a6968617368696d6f746f2f70792d737461636b65642d6461672e706e673f6272616e63683d6d6173746572\"></a></p>\n<p>Ascii DAG for visualization of dataflow</p>\n<p>stacked-dag can show Ascii-DAG(Directed acyclic graph) from a Dot file\nof graphviz. Dataflow\u2019s direction is from top to bottom. \u2018o\u2019 means a\nnode. A label of the node is shown to the left side. Other characters\nare edges of DAG.</p>\n<p>A sample of DAG is below.</p>\n<pre>o o    l0,l4\n|/\no    l1\n|\no    l2\n|\no    l3\n</pre>\n</div>\n<div id=\"usage-with-dot\">\n<h2>Usage with dot</h2>\n<p>Write a Dot file of graphviz.</p>\n<pre>$ cat &gt; sample.dot\ndigraph graphname {\n  0 [label=\"l0\"];\n  1 [label=\"l1\"];\n  2 [label=\"l2\"];\n  3 [label=\"l3\"];\n  4 [label=\"l4\"];\n  0-&gt;1;\n  1-&gt;2;\n  2-&gt;3;\n  4-&gt;1;\n}\n</pre>\n<p>Show ascii DAG by following command.</p>\n<pre>$ python stackeddag.py sample.dot\no o    l0,l4\n|/\no    l1\n|\no    l2\n|\no    l3\n</pre>\n</div>\n<div id=\"usage-with-tensorflow\">\n<h2>Usage with tensorflow</h2>\n<pre>import tensorflow as tf\nimport stackeddag.tf as sd\n\ndef mydataflow():\n  a = tf.constant(1,name=\"a\")\n  b = tf.constant(2,name=\"b\")\n  c = tf.add(a,b,name=\"c\")\n  return tf.get_default_graph()\n\nprint(sd.fromGraph(mydataflow()),end=\"\")\n</pre>\n<p>The output is below.</p>\n<pre>o o    a,b\n|/\no    c\n</pre>\n</div>\n<div id=\"another-sample\">\n<h2>Another sample</h2>\n<pre>$ python stackeddag.py sample/test.dot\no\n|\no\n|\\\no |\n| |\\\no o |\n|\\ \\ \\\n| | |\\ \\\n| | | | |\\\no o o o o |\n|/ /_/ / /\n| |  / /\no o o o\n|/_/_/\no\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6744672, "releases": {"0.3.2": [{"comment_text": "", "digests": {"md5": "0ad8001f4086d5a292cefbf0e7181fde", "sha256": "d1c5d63b22c7ce30f6482ec229b2c8d6b461362d0a7d241537a748286e9ca983"}, "downloads": -1, "filename": "stackeddag-0.3.2.tar.gz", "has_sig": false, "md5_digest": "0ad8001f4086d5a292cefbf0e7181fde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7584, "upload_time": "2018-10-14T06:52:14", "upload_time_iso_8601": "2018-10-14T06:52:14.972594Z", "url": "https://files.pythonhosted.org/packages/49/ef/ea2a75646af29951360a88a9a25d62150fa6516797ae4acdd2a4b49b1890/stackeddag-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "4177ac64a9ff00bb469cb57f42c9a4d4", "sha256": "79fae5a6b6113203c29b6698d1f6eb8fdbcc1f63a7a61a1e4e811c80581a87a6"}, "downloads": -1, "filename": "stackeddag-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4177ac64a9ff00bb469cb57f42c9a4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7975, "upload_time": "2020-03-04T00:42:13", "upload_time_iso_8601": "2020-03-04T00:42:13.741424Z", "url": "https://files.pythonhosted.org/packages/6e/58/bbadd93380b83c9df7d8cb76f58845d3dfe0793159e584b49996279880c3/stackeddag-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4177ac64a9ff00bb469cb57f42c9a4d4", "sha256": "79fae5a6b6113203c29b6698d1f6eb8fdbcc1f63a7a61a1e4e811c80581a87a6"}, "downloads": -1, "filename": "stackeddag-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4177ac64a9ff00bb469cb57f42c9a4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7975, "upload_time": "2020-03-04T00:42:13", "upload_time_iso_8601": "2020-03-04T00:42:13.741424Z", "url": "https://files.pythonhosted.org/packages/6e/58/bbadd93380b83c9df7d8cb76f58845d3dfe0793159e584b49996279880c3/stackeddag-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:52 2020"}