{"info": {"author": "Alex Brandt", "author_email": "alunduil@gentoo.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "Description\n===========\n\nFramework for testing ebuilds.\n\nUsing Docker to provide consistent sandboxed environments, etest runs ebuilds\nthrough several tests (implicitly and explicitly defined).  Every ebuild gets\nmany containers created to run every testing scenario in isolation.  Testing\nscenarios are created from combinations of USE flags, features (test or no\ntest), as well as custom commands provided in the hints files.\n\nInstallation\n============\n\nThis package is available in my overlay, alunduil, and can be installed on\nGentoo quite easily::\n\n    layman -a alunduil\n    emerge app-portage/etest\n\nThis package is also stored in PyPI and can be installed the standard way::\n\n    pip install etest\n\nThe latest release available is:\n\n.. image:: https://badge.fury.io/py/etest.png\n    :target: http://badge.fury.io/py/etest\n\n\n ``etest`` does require a running docker daemon but does not explicitly list it\n as a requirement.  It's not explicitly listed since the docker daemon doesn't\n necessarily need to be local.  Non-local docker daemons are not currently\n supported.\n\nUsing etest\n===========\n\n.. note::\n    etest requires a running docker daemon (either local or remote).  If using\n    a remote docker instance you must set the DOCKER_HOST environment variable\n    with the hostname (just like compose).\n\nTo get started simply run ``etest`` in a directory that contains ebuilds in a\nvalid overlay.\n\nAlternatively, while still in a valid overlay directory or subdirectory, a list\nof ebuilds can be passed to ``etest`` to run tests only against those ebuilds::\n\n    # Run all etest tests for all ebuild versions.\n    cd /var/lib/layman/alunduil\n    etest app-portage/etest\n\n    # Run all etest tests for the specified ebuild.\n    cd app-portage/etest\n    etest etest-9999.ebuild\n\nMore advanced usage of this package is outlined in the built-in help::\n\n    etest --help\n\nDeveloping etest\n================\n\nIf you would prefer to clone this package directly from git or assist with \ndevelopment, the URL is https://github.com/alunduil/etest.\n\netest is tested continuously by Travis-CI and running the tests is quite \nsimple::\n\n    flake8\n    python setup.py test\n\nSystem tests can be run as well but require a working docker daemon as well as\napproximately two and half hours::\n\n    nosetests test_etest/test_system\n\nThe current status of the build is:\n\n.. image:: https://secure.travis-ci.org/alunduil/etest.png?branch=master\n   :target: http://travis-ci.org/alunduil/etest\n\nKnown Issues\n============\n\nKnown issues can be found in the github issue list at\nhttps://github.com/alunduil/etest/issues.\n\nTroubleshooting\n===============\n\nIf you need to troubleshoot an issue or submit information in a bug report, we\nrecommend obtaining the following pieces of information:\n\n* output with verbose output turned on\n* any relevant stack traces", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alunduil/etest", "keywords": "ebuild,test,gentoo,portage,emerge", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "etest", "package_url": "https://pypi.org/project/etest/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/etest/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alunduil/etest"}, "release_url": "https://pypi.org/project/etest/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Ebuild Testing Framework", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Description<br>===========<br><br>Framework for testing ebuilds.<br><br>Using Docker to provide consistent sandboxed environments, etest runs ebuilds<br>through several tests (implicitly and explicitly defined).  Every ebuild gets<br>many containers created to run every testing scenario in isolation.  Testing<br>scenarios are created from combinations of USE flags, features (test or no<br>test), as well as custom commands provided in the hints files.<br><br>Installation<br>============<br><br>This package is available in my overlay, alunduil, and can be installed on<br>Gentoo quite easily::<br><br>    layman -a alunduil<br>    emerge app-portage/etest<br><br>This package is also stored in PyPI and can be installed the standard way::<br><br>    pip install etest<br><br>The latest release available is:<br><br>.. image:: https://badge.fury.io/py/etest.png<br>    :target: http://badge.fury.io/py/etest<br><br><br> ``etest`` does require a running docker daemon but does not explicitly list it<br> as a requirement.  It's not explicitly listed since the docker daemon doesn't<br> necessarily need to be local.  Non-local docker daemons are not currently<br> supported.<br><br>Using etest<br>===========<br><br>.. note::<br>    etest requires a running docker daemon (either local or remote).  If using<br>    a remote docker instance you must set the DOCKER_HOST environment variable<br>    with the hostname (just like compose).<br><br>To get started simply run ``etest`` in a directory that contains ebuilds in a<br>valid overlay.<br><br>Alternatively, while still in a valid overlay directory or subdirectory, a list<br>of ebuilds can be passed to ``etest`` to run tests only against those ebuilds::<br><br>    # Run all etest tests for all ebuild versions.<br>    cd /var/lib/layman/alunduil<br>    etest app-portage/etest<br><br>    # Run all etest tests for the specified ebuild.<br>    cd app-portage/etest<br>    etest etest-9999.ebuild<br><br>More advanced usage of this package is outlined in the built-in help::<br><br>    etest --help<br><br>Developing etest<br>================<br><br>If you would prefer to clone this package directly from git or assist with <br>development, the URL is https://github.com/alunduil/etest.<br><br>etest is tested continuously by Travis-CI and running the tests is quite <br>simple::<br><br>    flake8<br>    python setup.py test<br><br>System tests can be run as well but require a working docker daemon as well as<br>approximately two and half hours::<br><br>    nosetests test_etest/test_system<br><br>The current status of the build is:<br><br>.. image:: https://secure.travis-ci.org/alunduil/etest.png?branch=master<br>   :target: http://travis-ci.org/alunduil/etest<br><br>Known Issues<br>============<br><br>Known issues can be found in the github issue list at<br>https://github.com/alunduil/etest/issues.<br><br>Troubleshooting<br>===============<br><br>If you need to troubleshoot an issue or submit information in a bug report, we<br>recommend obtaining the following pieces of information:<br><br>* output with verbose output turned on<br>* any relevant stack traces\n          </div>"}, "last_serial": 1863507, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "404ccc30fc1eb878d05c31d3553d2c6b", "sha256": "a8dc4fc1a1170488e030a45afb07b5e7f9a795ec67837dba95ab8f22f6b8a142"}, "downloads": -1, "filename": "etest-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "404ccc30fc1eb878d05c31d3553d2c6b", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 89195, "upload_time": "2015-12-15T16:05:45", "upload_time_iso_8601": "2015-12-15T16:05:45.003951Z", "url": "https://files.pythonhosted.org/packages/d0/5a/8b668055310dbe94de58030c71ba1b8cf74fcc57a094b6869e7e9e05d304/etest-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1adf73388c9138487d9e128d0a5ff442", "sha256": "1a135181cdf96df2cd32aa853715f5e9a468f1d10292542e684a929ee1183c5d"}, "downloads": -1, "filename": "etest-1.0.0.tar.gz", "has_sig": true, "md5_digest": "1adf73388c9138487d9e128d0a5ff442", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60530, "upload_time": "2015-12-15T16:05:30", "upload_time_iso_8601": "2015-12-15T16:05:30.454192Z", "url": "https://files.pythonhosted.org/packages/18/f7/51a8dd4ef5491a8477cbbd5601cc4b4298db435e61bbc5e429294f369824/etest-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "404ccc30fc1eb878d05c31d3553d2c6b", "sha256": "a8dc4fc1a1170488e030a45afb07b5e7f9a795ec67837dba95ab8f22f6b8a142"}, "downloads": -1, "filename": "etest-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "404ccc30fc1eb878d05c31d3553d2c6b", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 89195, "upload_time": "2015-12-15T16:05:45", "upload_time_iso_8601": "2015-12-15T16:05:45.003951Z", "url": "https://files.pythonhosted.org/packages/d0/5a/8b668055310dbe94de58030c71ba1b8cf74fcc57a094b6869e7e9e05d304/etest-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1adf73388c9138487d9e128d0a5ff442", "sha256": "1a135181cdf96df2cd32aa853715f5e9a468f1d10292542e684a929ee1183c5d"}, "downloads": -1, "filename": "etest-1.0.0.tar.gz", "has_sig": true, "md5_digest": "1adf73388c9138487d9e128d0a5ff442", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60530, "upload_time": "2015-12-15T16:05:30", "upload_time_iso_8601": "2015-12-15T16:05:30.454192Z", "url": "https://files.pythonhosted.org/packages/18/f7/51a8dd4ef5491a8477cbbd5601cc4b4298db435e61bbc5e429294f369824/etest-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:31 2020"}