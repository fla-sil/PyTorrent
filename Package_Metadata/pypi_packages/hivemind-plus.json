{"info": {"author": "Hivemind", "author_email": "support@hvmd.io", "bugtrack_url": null, "classifiers": [], "description": "Hivemind Plus\n=============\n\nHivemind Plus is a Python library to assist with the creation of\ninstances and processing of results on the Hivemind platform. Before you\nuse this library you will need to register for an API key via the\nwebsite.\n\nInstallation\n------------\n\n.. code:: sh\n\n    $ pip install hivemind-plus\n\nUsage\n-----\n\nIn order to use Hivemind Plus you must create an instance configuration,\na result configuration or both. Each type of configuration ships with a\n``ConfigBuilder`` class which helps you to assemble your configuration.\n\nInstance Configuration\n~~~~~~~~~~~~~~~~~~~~~~\n\n\n.. code:: python\n\n    from hivemindplus import instance\n\n    instance_config = (\n        instance.ConfigBuilder()\n            .with_connection_string('DRIVER={SQL Server};SERVER=localhost;DATABASE=DB;') # ODBC style connection string \n            .with_query('SELECT PeopleId, FullName FROM dbo.People') # Query to drive instances\n            .with_key('PeopleId') # Column name to use as unique identifier for an instance \n            .with_name('FullName') # Column name to use as a human readable identifier\n            .with_tags(['FullName']) # (Optional) Columns to tag instances with\n            .with_data(['FullName', 'PeopleId']) # (Optional) Columns to populate the data field on an instance with\n            .with_instructions('instructions.md', ['FullName']) # (Optional) Template markdown file and values\n            .with_schema('schema.json', ['Id', 'FullName']) # (Optional) Schema template json file and values\n            .with_qualifications_query('SELECT PeopleId, Qualification FROM dbo.Qualifications') # (Optional) Query for qualifications\n            .build()\n    )\n\nResult Configuration\n~~~~~~~~~~~~~~~~~~~~\n\n\n.. code:: python\n\n    from hivemindplus import result\n\n    # Executed for every agreed upon result\n    def output_fn(res):\n        print('Output function')\n        print(str(res))\n\n\n    # Custom agreement function that compares two results\n    def agreement_fn(a, b):\n        return a['data'] == b['data']\n\n\n    result_config = (\n        result.ConfigBuilder()\n            .with_connection_string('DRIVER={SQL Server};SERVER=localhost;DATABASE=DB;') # ODBC style connection string\n            .with_instance_table('dbo.InstanceResults') # (Optional) Override default name of instance results table\n            .with_iteration_table('dbo.IterationResults') # (Optional) Override default name of iteration results table\n            .with_output_function(output_fn) # (Optional) Function to execute on agreed upon result\n            .with_agreement_function(agreement_fn, 0.51) # (Optional) Function to determine agreement\n            .with_feedback_function(feedback_fn) # (Optional) Function executed with instance/iteration results for integration of feedback\n            .with_max_iterations(5) # (Optional) Max number of iterations to retry agreement checking with\n            .with_process_all_results(True) # (Optional) Whether to process all results, regardless if created by HM+\n            .build()\n    )\n\nWorkflow Configuration\n~~~~~~~~~~~~~~~~~~~~~~\n\n\n.. code:: python\n\n    from hivemindplus import workflow\n\n    flow = (\n        workflow.Builder()\n            .with_api_url('https://client.sandbox.hvmd.io') # URL of the API without a trailing /\n            .with_api_key('API-KEY') # Personal API key\n            .with_task_id(0) # Task that you want to manage\n            .with_instance_config(instance_config) # (Optional) instance configuration\n            .with_result_config(result_config) # (Optional) result configuration\n            .with_auto_submission() # (Optional) submit task if not already submitted\n            .build()\n    )\n\n    # Start the workflow\n    flow.start()\n\nExamples\n--------\n\nA full set of examples can be found in the ``/examples`` directory.\n\nDebugging\n---------\n\nHivemind Plus can be run in a debug mode that will print out all the actions it intends to take when not in debug mode.\n\n\n.. code:: python\n\n    from hivemindplus import workflow\n\n    flow = (\n        workflow.Builder()\n            .with_debug_enabled()\n            .build()\n    )\n\nDevelopment\n-----------\n\nTo begin development, you will need to install all the required\ndevelopment packages.\n\n.. code:: sh\n\n    $ pip install .[test]\n\nAll the source code resides within the ``/hivemindplus`` directory and\nthe tests can be ran from the project root directory as shown below.\n\n.. code:: sh\n\n    python -m pytest\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://bitbucket.org/hvmd/hivemind.plus/get/master.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/hvmd/hivemind.plus", "keywords": "workflow,tasks", "license": "", "maintainer": "", "maintainer_email": "", "name": "hivemind-plus", "package_url": "https://pypi.org/project/hivemind-plus/", "platform": "", "project_url": "https://pypi.org/project/hivemind-plus/", "project_urls": {"Download": "https://bitbucket.org/hvmd/hivemind.plus/get/master.tar.gz", "Homepage": "https://bitbucket.org/hvmd/hivemind.plus"}, "release_url": "https://pypi.org/project/hivemind-plus/0.4.4/", "requires_dist": ["requests", "python-dateutil", "pyodbc", "pytest; extra == 'test'", "pytest-mock; extra == 'test'", "mock; extra == 'test'", "freezegun; extra == 'test'", "pyhamcrest; extra == 'test'"], "requires_python": "", "summary": "A workflow wrapper for Hivemind", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Hivemind Plus is a Python library to assist with the creation of\ninstances and processing of results on the Hivemind platform. Before you\nuse this library you will need to register for an API key via the\nwebsite.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install hivemind-plus\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In order to use Hivemind Plus you must create an instance configuration,\na result configuration or both. Each type of configuration ships with a\n<tt>ConfigBuilder</tt> class which helps you to assemble your configuration.</p>\n<div id=\"instance-configuration\">\n<h3>Instance Configuration</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hivemindplus</span> <span class=\"kn\">import</span> <span class=\"n\">instance</span>\n\n<span class=\"n\">instance_config</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">ConfigBuilder</span><span class=\"p\">()</span>\n        <span class=\"o\">.</span><span class=\"n\">with_connection_string</span><span class=\"p\">(</span><span class=\"s1\">'DRIVER={SQL Server};SERVER=localhost;DATABASE=DB;'</span><span class=\"p\">)</span> <span class=\"c1\"># ODBC style connection string</span>\n        <span class=\"o\">.</span><span class=\"n\">with_query</span><span class=\"p\">(</span><span class=\"s1\">'SELECT PeopleId, FullName FROM dbo.People'</span><span class=\"p\">)</span> <span class=\"c1\"># Query to drive instances</span>\n        <span class=\"o\">.</span><span class=\"n\">with_key</span><span class=\"p\">(</span><span class=\"s1\">'PeopleId'</span><span class=\"p\">)</span> <span class=\"c1\"># Column name to use as unique identifier for an instance</span>\n        <span class=\"o\">.</span><span class=\"n\">with_name</span><span class=\"p\">(</span><span class=\"s1\">'FullName'</span><span class=\"p\">)</span> <span class=\"c1\"># Column name to use as a human readable identifier</span>\n        <span class=\"o\">.</span><span class=\"n\">with_tags</span><span class=\"p\">([</span><span class=\"s1\">'FullName'</span><span class=\"p\">])</span> <span class=\"c1\"># (Optional) Columns to tag instances with</span>\n        <span class=\"o\">.</span><span class=\"n\">with_data</span><span class=\"p\">([</span><span class=\"s1\">'FullName'</span><span class=\"p\">,</span> <span class=\"s1\">'PeopleId'</span><span class=\"p\">])</span> <span class=\"c1\"># (Optional) Columns to populate the data field on an instance with</span>\n        <span class=\"o\">.</span><span class=\"n\">with_instructions</span><span class=\"p\">(</span><span class=\"s1\">'instructions.md'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'FullName'</span><span class=\"p\">])</span> <span class=\"c1\"># (Optional) Template markdown file and values</span>\n        <span class=\"o\">.</span><span class=\"n\">with_schema</span><span class=\"p\">(</span><span class=\"s1\">'schema.json'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'Id'</span><span class=\"p\">,</span> <span class=\"s1\">'FullName'</span><span class=\"p\">])</span> <span class=\"c1\"># (Optional) Schema template json file and values</span>\n        <span class=\"o\">.</span><span class=\"n\">with_qualifications_query</span><span class=\"p\">(</span><span class=\"s1\">'SELECT PeopleId, Qualification FROM dbo.Qualifications'</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Query for qualifications</span>\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"result-configuration\">\n<h3>Result Configuration</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hivemindplus</span> <span class=\"kn\">import</span> <span class=\"n\">result</span>\n\n<span class=\"c1\"># Executed for every agreed upon result</span>\n<span class=\"k\">def</span> <span class=\"nf\">output_fn</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Output function'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">))</span>\n\n\n<span class=\"c1\"># Custom agreement function that compares two results</span>\n<span class=\"k\">def</span> <span class=\"nf\">agreement_fn</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\n\n\n<span class=\"n\">result_config</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">ConfigBuilder</span><span class=\"p\">()</span>\n        <span class=\"o\">.</span><span class=\"n\">with_connection_string</span><span class=\"p\">(</span><span class=\"s1\">'DRIVER={SQL Server};SERVER=localhost;DATABASE=DB;'</span><span class=\"p\">)</span> <span class=\"c1\"># ODBC style connection string</span>\n        <span class=\"o\">.</span><span class=\"n\">with_instance_table</span><span class=\"p\">(</span><span class=\"s1\">'dbo.InstanceResults'</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Override default name of instance results table</span>\n        <span class=\"o\">.</span><span class=\"n\">with_iteration_table</span><span class=\"p\">(</span><span class=\"s1\">'dbo.IterationResults'</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Override default name of iteration results table</span>\n        <span class=\"o\">.</span><span class=\"n\">with_output_function</span><span class=\"p\">(</span><span class=\"n\">output_fn</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Function to execute on agreed upon result</span>\n        <span class=\"o\">.</span><span class=\"n\">with_agreement_function</span><span class=\"p\">(</span><span class=\"n\">agreement_fn</span><span class=\"p\">,</span> <span class=\"mf\">0.51</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Function to determine agreement</span>\n        <span class=\"o\">.</span><span class=\"n\">with_feedback_function</span><span class=\"p\">(</span><span class=\"n\">feedback_fn</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Function executed with instance/iteration results for integration of feedback</span>\n        <span class=\"o\">.</span><span class=\"n\">with_max_iterations</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Max number of iterations to retry agreement checking with</span>\n        <span class=\"o\">.</span><span class=\"n\">with_process_all_results</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) Whether to process all results, regardless if created by HM+</span>\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"workflow-configuration\">\n<h3>Workflow Configuration</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hivemindplus</span> <span class=\"kn\">import</span> <span class=\"n\">workflow</span>\n\n<span class=\"n\">flow</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">workflow</span><span class=\"o\">.</span><span class=\"n\">Builder</span><span class=\"p\">()</span>\n        <span class=\"o\">.</span><span class=\"n\">with_api_url</span><span class=\"p\">(</span><span class=\"s1\">'https://client.sandbox.hvmd.io'</span><span class=\"p\">)</span> <span class=\"c1\"># URL of the API without a trailing /</span>\n        <span class=\"o\">.</span><span class=\"n\">with_api_key</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">)</span> <span class=\"c1\"># Personal API key</span>\n        <span class=\"o\">.</span><span class=\"n\">with_task_id</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c1\"># Task that you want to manage</span>\n        <span class=\"o\">.</span><span class=\"n\">with_instance_config</span><span class=\"p\">(</span><span class=\"n\">instance_config</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) instance configuration</span>\n        <span class=\"o\">.</span><span class=\"n\">with_result_config</span><span class=\"p\">(</span><span class=\"n\">result_config</span><span class=\"p\">)</span> <span class=\"c1\"># (Optional) result configuration</span>\n        <span class=\"o\">.</span><span class=\"n\">with_auto_submission</span><span class=\"p\">()</span> <span class=\"c1\"># (Optional) submit task if not already submitted</span>\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Start the workflow</span>\n<span class=\"n\">flow</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>A full set of examples can be found in the <tt>/examples</tt> directory.</p>\n</div>\n<div id=\"debugging\">\n<h2>Debugging</h2>\n<p>Hivemind Plus can be run in a debug mode that will print out all the actions it intends to take when not in debug mode.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hivemindplus</span> <span class=\"kn\">import</span> <span class=\"n\">workflow</span>\n\n<span class=\"n\">flow</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">workflow</span><span class=\"o\">.</span><span class=\"n\">Builder</span><span class=\"p\">()</span>\n        <span class=\"o\">.</span><span class=\"n\">with_debug_enabled</span><span class=\"p\">()</span>\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To begin development, you will need to install all the required\ndevelopment packages.</p>\n<pre>$ pip install .<span class=\"o\">[</span>test<span class=\"o\">]</span>\n</pre>\n<p>All the source code resides within the <tt>/hivemindplus</tt> directory and\nthe tests can be ran from the project root directory as shown below.</p>\n<pre>python -m pytest\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4875426, "releases": {"0.3.5": [{"comment_text": "", "digests": {"md5": "316759d615940261691083eed4530afb", "sha256": "e772ef0adc800b67076c3230ded5535a049c671ed202c5e259770d2839896c15"}, "downloads": -1, "filename": "hivemind_plus-0.3.5-py2-none-any.whl", "has_sig": false, "md5_digest": "316759d615940261691083eed4530afb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15313, "upload_time": "2017-09-20T11:23:45", "upload_time_iso_8601": "2017-09-20T11:23:45.774622Z", "url": "https://files.pythonhosted.org/packages/7a/b9/cab0ebd7fa59f64a020148380f90e8d77e4a4155cd20fd87b27f730c6e15/hivemind_plus-0.3.5-py2-none-any.whl", "yanked": false}], "0.3.6.dev1": [{"comment_text": "", "digests": {"md5": "240cf058d44039459f35eef5b95bcd57", "sha256": "4f17891706e36b2d54dbe8635e28b51867c0c8a9fb99841d55b3d60232eebded"}, "downloads": -1, "filename": "hivemind_plus-0.3.6.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "240cf058d44039459f35eef5b95bcd57", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15748, "upload_time": "2017-10-27T09:04:55", "upload_time_iso_8601": "2017-10-27T09:04:55.408924Z", "url": "https://files.pythonhosted.org/packages/3c/52/e49b1f71223dc1654d2cdeef85fee24a80c40d395dcade70e94ab6df836c/hivemind_plus-0.3.6.dev1-py2.py3-none-any.whl", "yanked": false}], "0.3.6.dev2": [{"comment_text": "", "digests": {"md5": "f5e446c8f368e3baffc67632db082aa3", "sha256": "3582134565ec905462f8bf0a2da0631136ac6a864ffaeef2007711e1a7fb11db"}, "downloads": -1, "filename": "hivemind_plus-0.3.6.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f5e446c8f368e3baffc67632db082aa3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15744, "upload_time": "2017-11-10T11:00:57", "upload_time_iso_8601": "2017-11-10T11:00:57.845347Z", "url": "https://files.pythonhosted.org/packages/4b/0d/df54fce9d30aa8777ac5279fbfa05cc11c7a3067824b670898a4f144a43c/hivemind_plus-0.3.6.dev2-py2.py3-none-any.whl", "yanked": false}], "0.3.6.dev3": [{"comment_text": "", "digests": {"md5": "26e444e7fac574e027a45e015d1d300f", "sha256": "fe513bb78bc9140265dd453de59b69dd75c98db6c7ae910de04bf6bd2b415aa9"}, "downloads": -1, "filename": "hivemind_plus-0.3.6.dev3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26e444e7fac574e027a45e015d1d300f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15981, "upload_time": "2017-12-11T12:12:37", "upload_time_iso_8601": "2017-12-11T12:12:37.826796Z", "url": "https://files.pythonhosted.org/packages/f3/fd/73718df5897c0a3bd40f23ecfb33b51d473f1cc43ab2155ee584d7393db5/hivemind_plus-0.3.6.dev3-py2.py3-none-any.whl", "yanked": false}], "0.3.6.dev4": [{"comment_text": "", "digests": {"md5": "458fd4d75acc15d4ce56713bbdb57f20", "sha256": "f76c965dc026ee7ab972f4e8971bccce17beaee3296b55880d914ed1a583a82c"}, "downloads": -1, "filename": "hivemind_plus-0.3.6.dev4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "458fd4d75acc15d4ce56713bbdb57f20", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15981, "upload_time": "2018-01-02T13:40:30", "upload_time_iso_8601": "2018-01-02T13:40:30.129792Z", "url": "https://files.pythonhosted.org/packages/7e/d7/520120fedb4053ad2230709681dbd6466fd05c788d28132f08563bc358b4/hivemind_plus-0.3.6.dev4-py2.py3-none-any.whl", "yanked": false}], "0.3.6.dev5": [{"comment_text": "", "digests": {"md5": "5acb31791fb8b961249bed37bd775744", "sha256": "749172aa2be773dfb36326c2a8f4bf0f793cc9bf8a047d0e3e4a167d7964c1b5"}, "downloads": -1, "filename": "hivemind_plus-0.3.6.dev5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5acb31791fb8b961249bed37bd775744", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16495, "upload_time": "2018-03-21T10:32:47", "upload_time_iso_8601": "2018-03-21T10:32:47.157831Z", "url": "https://files.pythonhosted.org/packages/0a/3d/061d6ddc555d4d7af37baef8ab4fac892cdcfa9216dd50cdc12b2dabd3d6/hivemind_plus-0.3.6.dev5-py2.py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "6a31cfa08dd70b5b89ce7edc3a6afd96", "sha256": "d0ed5b80c3f982d1048a1dffbc10070997db250591a79859bee26f629508cfbe"}, "downloads": -1, "filename": "hivemind_plus-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6a31cfa08dd70b5b89ce7edc3a6afd96", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16709, "upload_time": "2018-03-28T08:32:21", "upload_time_iso_8601": "2018-03-28T08:32:21.001110Z", "url": "https://files.pythonhosted.org/packages/e3/51/5bf05173f523c5051ab64f2a6b0b2fe6eacd69760a6672801091431627fa/hivemind_plus-0.4.0-py2.py3-none-any.whl", "yanked": false}], "0.4.0.dev1": [{"comment_text": "", "digests": {"md5": "b48c5bf70557903887cf8c7b4fe2e6ca", "sha256": "13175c05dbb61c475f0041ac2114d34afd009c50d8c8bc3c91318a52d97923d2"}, "downloads": -1, "filename": "hivemind_plus-0.4.0.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b48c5bf70557903887cf8c7b4fe2e6ca", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16791, "upload_time": "2018-03-22T08:34:47", "upload_time_iso_8601": "2018-03-22T08:34:47.004598Z", "url": "https://files.pythonhosted.org/packages/a8/0d/4a695a5ce546b77830de2f8ac4bb80d789a0dac68e7f9eee5427db307a03/hivemind_plus-0.4.0.dev1-py2.py3-none-any.whl", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "069e8be34df1540068985b535bf61dcb", "sha256": "26c7b80edfb9e20c1f87602497980975af443639fd8b1d5d48ccdefeeba763a6"}, "downloads": -1, "filename": "hivemind_plus-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "069e8be34df1540068985b535bf61dcb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14369, "upload_time": "2018-10-25T13:55:03", "upload_time_iso_8601": "2018-10-25T13:55:03.962786Z", "url": "https://files.pythonhosted.org/packages/55/06/6958ae9fce14c25e47c6a4b766246fb4176103601b2c4ebfdb983c29ad45/hivemind_plus-0.4.2-py2.py3-none-any.whl", "yanked": false}], "0.4.2.dev1": [{"comment_text": "", "digests": {"md5": "8de9c5ebc800e0b519b02dde7937539a", "sha256": "33268591af1c4d1ab61e950a891261531567e208639afd9ee84251dcde1cf387"}, "downloads": -1, "filename": "hivemind_plus-0.4.2.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8de9c5ebc800e0b519b02dde7937539a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14419, "upload_time": "2018-10-20T10:26:12", "upload_time_iso_8601": "2018-10-20T10:26:12.741418Z", "url": "https://files.pythonhosted.org/packages/09/48/a2feefb0bf121e9ed79cc412af304fe42ecb8812490d6fa45c8b68480976/hivemind_plus-0.4.2.dev1-py2.py3-none-any.whl", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "0d6844e122c2868377fee20ca8324250", "sha256": "8384712066c27b156885a42a5a132578a38d4ec29ad65745f848c16bcc332d07"}, "downloads": -1, "filename": "hivemind_plus-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d6844e122c2868377fee20ca8324250", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14487, "upload_time": "2019-02-27T17:49:51", "upload_time_iso_8601": "2019-02-27T17:49:51.297119Z", "url": "https://files.pythonhosted.org/packages/b3/bb/09566baba1750d7e5b951b35881bdbd88589780a172ea4bcbf1440a6a331/hivemind_plus-0.4.4-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d6844e122c2868377fee20ca8324250", "sha256": "8384712066c27b156885a42a5a132578a38d4ec29ad65745f848c16bcc332d07"}, "downloads": -1, "filename": "hivemind_plus-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d6844e122c2868377fee20ca8324250", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14487, "upload_time": "2019-02-27T17:49:51", "upload_time_iso_8601": "2019-02-27T17:49:51.297119Z", "url": "https://files.pythonhosted.org/packages/b3/bb/09566baba1750d7e5b951b35881bdbd88589780a172ea4bcbf1440a6a331/hivemind_plus-0.4.4-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:51:01 2020"}