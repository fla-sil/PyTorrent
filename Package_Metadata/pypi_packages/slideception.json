{"info": {"author": "Colin Chan", "author_email": "colinchan@lumeh.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Terminals"], "description": "# slideception\n\nA Python library for creating interactive presentations in Linux terminals.\n\n## Requirements\n\n* Python 3.8 or newer\n* Linux (unless you avoid the Linux-specific stuff)\n\n## Usage\n\nHere's a quick example:\n\n```python3\n#!/usr/bin/env python3\nfrom slideception import display_slides, ipython, slide\n\n@slide\ndef context_managers():\n    \"\"\"Context Managers\n\n    A **context manager** is a thing that can be used in a `with` block.\n\n    ```python3\n    with record_time() as timer:\n        stuff()\n    print(f\"stuff took {timer.elapsed} seconds\")\n    ```\n\n    It lets you factor out pieces of code that *surround* other code.\n    \"\"\"\n    # Now jump into an intepreter for a quick demo\n    ipython()\n\n\ndisplay_slides()\n```\n\n### Presentation Boilerplate\n\nAt a minimum, you'll need to import `display_slides` and `slide` and call\n`display_slides()` at the bottom of your script.\n\n```python3\n#!/usr/bin/env python3\nfrom slideception import display_slides, slide\n\n\u2026\n\ndisplay_slides()\n```\n\n### Defining Slides\n\n**@slide**\n\nThis decorator registers a function as a slide. The docstring of the function\nbecomes the slide's content, and the body of the function is executed after the\ncontent is displayed. The docstring is parsed as CommonMark and then rendered\nfor display in a terminal.\n\n### Helpers\n\n*   **bash(*history=None, init=None*)**\n\n    This function starts a Bash shell which can be used to demo shell scripting\n    and command-line programs.\n\n    The `history` parameter accepts a list of commands which will be preloaded\n    into the shell's history; this lets you simply press **Up** to recall those\n    commands instead of typing them from scratch.\n\n    The `init` parameter accepts a list of commands which will be executed\n    after the shell loads your `.bashrc` file. This can be used to `cd` to a\n    specific directory, create files, etc.\n\n*   **ipython()**\n\n    This function starts an iPython interpreter which can be used to demo Python\n    code.\n\n*   **python()**\n\n    This function starts a Python interpreter which can be used to demo Python\n    code. You should definitely prefer to use `ipython()` if possible.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kalgynirae/slideception", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "slideception", "package_url": "https://pypi.org/project/slideception/", "platform": "", "project_url": "https://pypi.org/project/slideception/", "project_urls": {"Homepage": "https://github.com/kalgynirae/slideception"}, "release_url": "https://pypi.org/project/slideception/0.1.0/", "requires_dist": ["boxing", "ipython", "mistletoe", "Pygments"], "requires_python": ">=3.8", "summary": "Framework for interactive slide decks in the terminal", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>slideception</h1>\n<p>A Python library for creating interactive presentations in Linux terminals.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.8 or newer</li>\n<li>Linux (unless you avoid the Linux-specific stuff)</li>\n</ul>\n<h2>Usage</h2>\n<p>Here's a quick example:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">slideception</span> <span class=\"kn\">import</span> <span class=\"n\">display_slides</span><span class=\"p\">,</span> <span class=\"n\">ipython</span><span class=\"p\">,</span> <span class=\"n\">slide</span>\n\n<span class=\"nd\">@slide</span>\n<span class=\"k\">def</span> <span class=\"nf\">context_managers</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Context Managers</span>\n\n<span class=\"sd\">    A **context manager** is a thing that can be used in a `with` block.</span>\n\n<span class=\"sd\">    ```python3</span>\n<span class=\"sd\">    with record_time() as timer:</span>\n<span class=\"sd\">        stuff()</span>\n<span class=\"sd\">    print(f\"stuff took {timer.elapsed} seconds\")</span>\n<span class=\"sd\">    ```</span>\n\n<span class=\"sd\">    It lets you factor out pieces of code that *surround* other code.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"c1\"># Now jump into an intepreter for a quick demo</span>\n    <span class=\"n\">ipython</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">display_slides</span><span class=\"p\">()</span>\n</pre>\n<h3>Presentation Boilerplate</h3>\n<p>At a minimum, you'll need to import <code>display_slides</code> and <code>slide</code> and call\n<code>display_slides()</code> at the bottom of your script.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">slideception</span> <span class=\"kn\">import</span> <span class=\"n\">display_slides</span><span class=\"p\">,</span> <span class=\"n\">slide</span>\n\n<span class=\"err\">\u2026</span>\n\n<span class=\"n\">display_slides</span><span class=\"p\">()</span>\n</pre>\n<h3>Defining Slides</h3>\n<p><strong>@slide</strong></p>\n<p>This decorator registers a function as a slide. The docstring of the function\nbecomes the slide's content, and the body of the function is executed after the\ncontent is displayed. The docstring is parsed as CommonMark and then rendered\nfor display in a terminal.</p>\n<h3>Helpers</h3>\n<ul>\n<li>\n<p><strong>bash(<em>history=None, init=None</em>)</strong></p>\n<p>This function starts a Bash shell which can be used to demo shell scripting\nand command-line programs.</p>\n<p>The <code>history</code> parameter accepts a list of commands which will be preloaded\ninto the shell's history; this lets you simply press <strong>Up</strong> to recall those\ncommands instead of typing them from scratch.</p>\n<p>The <code>init</code> parameter accepts a list of commands which will be executed\nafter the shell loads your <code>.bashrc</code> file. This can be used to <code>cd</code> to a\nspecific directory, create files, etc.</p>\n</li>\n<li>\n<p><strong>ipython()</strong></p>\n<p>This function starts an iPython interpreter which can be used to demo Python\ncode.</p>\n</li>\n<li>\n<p><strong>python()</strong></p>\n<p>This function starts a Python interpreter which can be used to demo Python\ncode. You should definitely prefer to use <code>ipython()</code> if possible.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6226803, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1292b09a8276198425d05e2918ad5134", "sha256": "1a4d08c16643d45c096aa8e1fb6d0790da6e69593a5ee3c776f9fe47d1233e1f"}, "downloads": -1, "filename": "slideception-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1292b09a8276198425d05e2918ad5134", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 5270, "upload_time": "2019-12-02T06:34:16", "upload_time_iso_8601": "2019-12-02T06:34:16.725298Z", "url": "https://files.pythonhosted.org/packages/48/85/5443a359aff115ba2f2ca35931a0a239e170b73683646b8bd0735c4c2c1d/slideception-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4fa3f14f83884945a227fe70c096cf3", "sha256": "d4083245abd03a5f53493870862b59f0a327a06fb24622f82714bd5c15b68980"}, "downloads": -1, "filename": "slideception-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e4fa3f14f83884945a227fe70c096cf3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4502, "upload_time": "2019-12-02T06:34:18", "upload_time_iso_8601": "2019-12-02T06:34:18.880001Z", "url": "https://files.pythonhosted.org/packages/a0/aa/f12fbbe3f28e8a1737c758448d3fe455058484dd4c35e4dd89c4591a3532/slideception-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1292b09a8276198425d05e2918ad5134", "sha256": "1a4d08c16643d45c096aa8e1fb6d0790da6e69593a5ee3c776f9fe47d1233e1f"}, "downloads": -1, "filename": "slideception-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1292b09a8276198425d05e2918ad5134", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 5270, "upload_time": "2019-12-02T06:34:16", "upload_time_iso_8601": "2019-12-02T06:34:16.725298Z", "url": "https://files.pythonhosted.org/packages/48/85/5443a359aff115ba2f2ca35931a0a239e170b73683646b8bd0735c4c2c1d/slideception-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4fa3f14f83884945a227fe70c096cf3", "sha256": "d4083245abd03a5f53493870862b59f0a327a06fb24622f82714bd5c15b68980"}, "downloads": -1, "filename": "slideception-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e4fa3f14f83884945a227fe70c096cf3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4502, "upload_time": "2019-12-02T06:34:18", "upload_time_iso_8601": "2019-12-02T06:34:18.880001Z", "url": "https://files.pythonhosted.org/packages/a0/aa/f12fbbe3f28e8a1737c758448d3fe455058484dd4c35e4dd89c4591a3532/slideception-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:24 2020"}