{"info": {"author": "Yesudeep Mangalapilly", "author_email": "yesudeep@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows :: Windows NT/2000", "Operating System :: OS Independent", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries", "Topic :: System :: Filesystems", "Topic :: System :: Monitoring", "Topic :: Utilities"], "description": "Watchdog\n========\n\n.. image:: https://travis-ci.org/gorakhargosh/watchdog.svg?branch=master\n    :target: https://travis-ci.org/gorakhargosh/watchdog\n\nPython API and shell utilities to monitor file system events.\n\nWorks on Python 2.7 and 3.4+. If you want to use an old version of Python, you should stick with watchdog < 0.10.0.\n\nExample API Usage\n-----------------\nA simple program that uses watchdog to monitor directories specified\nas command-line arguments and logs events generated:\n\n.. code-block:: python\n\n    import sys\n    import time\n    import logging\n    from watchdog.observers import Observer\n    from watchdog.events import LoggingEventHandler\n\n    if __name__ == \"__main__\":\n        logging.basicConfig(level=logging.INFO,\n                            format='%(asctime)s - %(message)s',\n                            datefmt='%Y-%m-%d %H:%M:%S')\n        path = sys.argv[1] if len(sys.argv) > 1 else '.'\n        event_handler = LoggingEventHandler()\n        observer = Observer()\n        observer.schedule(event_handler, path, recursive=True)\n        observer.start()\n        try:\n            while True:\n                time.sleep(1)\n        except KeyboardInterrupt:\n            observer.stop()\n        observer.join()\n\n\nShell Utilities\n---------------\nWatchdog comes with an *optional* utility script called ``watchmedo``.\nPlease type ``watchmedo --help`` at the shell prompt to\nknow more about this tool.\n\nHere is how you can log the current directory recursively\nfor events related only to ``*.py`` and ``*.txt`` files while\nignoring all directory events:\n\n.. code-block:: bash\n\n    watchmedo log \\\n        --patterns=\"*.py;*.txt\" \\\n        --ignore-directories \\\n        --recursive \\\n        .\n\nYou can use the ``shell-command`` subcommand to execute shell commands in\nresponse to events:\n\n.. code-block:: bash\n\n    watchmedo shell-command \\\n        --patterns=\"*.py;*.txt\" \\\n        --recursive \\\n        --command='echo \"${watch_src_path}\"' \\\n        .\n\nPlease see the help information for these commands by typing:\n\n.. code-block:: bash\n\n    watchmedo [command] --help\n\n\nAbout ``watchmedo`` Tricks\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n``watchmedo`` can read ``tricks.yaml`` files and execute tricks within them in\nresponse to file system events. Tricks are actually event handlers that\nsubclass ``watchdog.tricks.Trick`` and are written by plugin authors. Trick\nclasses are augmented with a few additional features that regular event handlers\ndon't need.\n\nAn example ``tricks.yaml`` file:\n\n.. code-block:: yaml\n\n    tricks:\n    - watchdog.tricks.LoggerTrick:\n        patterns: [\"*.py\", \"*.js\"]\n    - watchmedo_webtricks.GoogleClosureTrick:\n        patterns: ['*.js']\n        hash_names: true\n        mappings_format: json                  # json|yaml|python\n        mappings_module: app/javascript_mappings\n        suffix: .min.js\n        compilation_level: advanced            # simple|advanced\n        source_directory: app/static/js/\n        destination_directory: app/public/js/\n        files:\n          index-page:\n          - app/static/js/vendor/jquery*.js\n          - app/static/js/base.js\n          - app/static/js/index-page.js\n          about-page:\n          - app/static/js/vendor/jquery*.js\n          - app/static/js/base.js\n          - app/static/js/about-page/**/*.js\n\nThe directory containing the ``tricks.yaml`` file will be monitored. Each trick\nclass is initialized with its corresponding keys in the ``tricks.yaml`` file as\narguments and events are fed to an instance of this class as they arrive.\n\nTricks will be included in the 0.5.0 release. I need community input about them.\nPlease file enhancement requests at the `issue tracker`_.\n\n\nInstallation\n------------\nInstall from PyPI using ``pip``:\n\n.. code-block:: bash\n\n    $ python -m pip install watchdog\n\n    # or to install the watchmedo utility:\n    $ python -m pip install watchdog[watchmedo]\n\nInstall from source:\n\n.. code-block:: bash\n\n    $ python -m pip install -e .\n\n    # or to install the watchmedo utility:\n    $ python -m pip install -e \".[watchmedo]\"\n\n\nInstallation Caveats\n~~~~~~~~~~~~~~~~~~~~\nThe ``watchmedo`` script depends on PyYAML_ which links with LibYAML_,\nwhich brings a performance boost to the PyYAML parser. However, installing\nLibYAML_ is optional but recommended. On Mac OS X, you can use homebrew_\nto install LibYAML:\n\n.. code-block:: bash\n\n    $ brew install libyaml\n\nOn Linux, use your favorite package manager to install LibYAML. Here's how you\ndo it on Ubuntu:\n\n.. code-block:: bash\n\n    $ sudo aptitude install libyaml-dev\n\nOn Windows, please install PyYAML_ using the binaries they provide.\n\nDocumentation\n-------------\nYou can browse the latest release documentation_ online.\n\nContribute\n----------\nFork the `repository`_ on GitHub and send a pull request, or file an issue\nticket at the `issue tracker`_. For general help and questions use the official\n`mailing list`_ or ask on `stackoverflow`_ with tag `python-watchdog`.\n\nCreate and activate your virtual environment, then::\n\n    python -m pip install pytest pytest-cov\n    python -m pip install -e .[watchmedo]\n    python -m pytest tests\n\nIf you are making a substantial change, add an entry to the \"Unreleased\" section\nof the `changelog`_.\n\nSupported Platforms\n-------------------\n* Linux 2.6 (inotify)\n* Mac OS X (FSEvents, kqueue)\n* FreeBSD/BSD (kqueue)\n* Windows (ReadDirectoryChangesW with I/O completion ports;\n  ReadDirectoryChangesW worker threads)\n* OS-independent (polling the disk for directory snapshots and comparing them\n  periodically; slow and not recommended)\n\nNote that when using watchdog with kqueue, you need the\nnumber of file descriptors allowed to be opened by programs\nrunning on your system to be increased to more than the\nnumber of files that you will be monitoring. The easiest way\nto do that is to edit your ``~/.profile`` file and add\na line similar to::\n\n    ulimit -n 1024\n\nThis is an inherent problem with kqueue because it uses\nfile descriptors to monitor files. That plus the enormous\namount of bookkeeping that watchdog needs to do in order\nto monitor file descriptors just makes this a painful way\nto monitor files and directories. In essence, kqueue is\nnot a very scalable way to monitor a deeply nested\ndirectory of files and directories with a large number of\nfiles.\n\nAbout using watchdog with editors like Vim\n------------------------------------------\nVim does not modify files unless directed to do so.\nIt creates backup files and then swaps them in to replace\nthe files you are editing on the disk. This means that\nif you use Vim to edit your files, the on-modified events\nfor those files will not be triggered by watchdog.\nYou may need to configure Vim appropriately to disable\nthis feature.\n\n\nAbout using watchdog with CIFS\n------------------------------\nWhen you want to watch changes in CIFS, you need to explicitly tell watchdog to\nuse ``PollingObserver``, that is, instead of letting watchdog decide an\nappropriate observer like in the example above, do::\n\n    from watchdog.observers.polling import PollingObserver as Observer\n\n\nDependencies\n------------\n1. Python 2.7, 3.4 or above.\n2. pathtools_\n3. XCode_ (only on Mac OS X)\n4. PyYAML_ (only for ``watchmedo`` script)\n5. argh_ (only for ``watchmedo`` script)\n\n\nLicensing\n---------\nWatchdog is licensed under the terms of the `Apache License, version 2.0`_.\n\nCopyright 2011 `Yesudeep Mangalapilly`_.\n\nCopyright 2012 Google, Inc.\n\nProject `source code`_ is available at Github. Please report bugs and file\nenhancement requests at the `issue tracker`_.\n\nWhy Watchdog?\n-------------\nToo many people tried to do the same thing and none did what I needed Python\nto do:\n\n* pnotify_\n* `unison fsmonitor`_\n* fsmonitor_\n* guard_\n* pyinotify_\n* `inotify-tools`_\n* jnotify_\n* treewalker_\n* `file.monitor`_\n* pyfilesystem_\n\n.. links:\n.. _Yesudeep Mangalapilly: yesudeep@gmail.com\n.. _source code: http://github.com/gorakhargosh/watchdog\n.. _issue tracker: http://github.com/gorakhargosh/watchdog/issues\n.. _Apache License, version 2.0: http://www.apache.org/licenses/LICENSE-2.0\n.. _documentation: https://python-watchdog.readthedocs.io/\n.. _stackoverflow: http://stackoverflow.com/questions/tagged/python-watchdog\n.. _mailing list: http://groups.google.com/group/watchdog-python\n.. _repository: http://github.com/gorakhargosh/watchdog\n.. _issue tracker: http://github.com/gorakhargosh/watchdog/issues\n.. _changelog: https://github.com/gorakhargosh/watchdog/blob/master/changelog.rst\n\n.. _homebrew: http://mxcl.github.com/homebrew/\n.. _argh: http://pypi.python.org/pypi/argh\n.. _PyYAML: http://www.pyyaml.org/\n.. _XCode: http://developer.apple.com/technologies/tools/xcode.html\n.. _LibYAML: http://pyyaml.org/wiki/LibYAML\n.. _pathtools: http://github.com/gorakhargosh/pathtools\n\n.. _pnotify: http://mark.heily.com/pnotify\n.. _unison fsmonitor: https://webdav.seas.upenn.edu/viewvc/unison/trunk/src/fsmonitor.py?view=markup&pathrev=471\n.. _fsmonitor: http://github.com/shaurz/fsmonitor\n.. _guard: http://github.com/guard/guard\n.. _pyinotify: http://github.com/seb-m/pyinotify\n.. _inotify-tools: http://github.com/rvoicilas/inotify-tools\n.. _jnotify: http://jnotify.sourceforge.net/\n.. _treewalker: http://github.com/jbd/treewatcher\n.. _file.monitor: http://github.com/pke/file.monitor\n.. _pyfilesystem: http://code.google.com/p/pyfilesystem\n\n\n.. :changelog:\n\nChangelog\n---------\n\n0.10.2\n~~~~~~\n\n2020-02-08 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.1...v0.10.2>`__\n\n- Fixed the ``build_ext`` command on macOS Catalina (`#628 <https://github.com/gorakhargosh/watchdog/pull/628>`__)\n- Fixed the installation of macOS requirements on non-macOS OSes (`#635 <https://github.com/gorakhargosh/watchdog/pull/635>`__)\n- Refactored ``dispatch()`` method of ``FileSystemEventHandler``,\n  ``PatternMatchingEventHandler`` and ``RegexMatchingEventHandler``\n- [bsd] Improved tests support on non Windows/Linux platforms (`#633 <https://github.com/gorakhargosh/watchdog/pull/633>`__, `#639 <https://github.com/gorakhargosh/watchdog/pull/639>`__)\n- [bsd] Added FreeBSD CI support (`#532 <https://github.com/gorakhargosh/watchdog/pull/532>`__)\n- [bsd] Restored full support (`#638 <https://github.com/gorakhargosh/watchdog/pull/638>`__, `#641 <https://github.com/gorakhargosh/watchdog/pull/641>`__)\n- Thanks to our beloved contributors: @BoboTiG, @evilham, @danilobellini\n\n\n0.10.1\n~~~~~~\n\n2020-01-30 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.0...v0.10.1>`__\n\n- Fixed Python 2.7 to 3.6 installation when the OS locale is set to POSIX (`#615 <https://github.com/gorakhargosh/watchdog/pull/615>`__)\n- Fixed the ``build_ext`` command on macOS  (`#618 <https://github.com/gorakhargosh/watchdog/pull/618>`__, `#620 <https://github.com/gorakhargosh/watchdog/pull/620>`_)\n- Moved requirements to ``setup.cfg``  (`#617 <https://github.com/gorakhargosh/watchdog/pull/617>`__)\n- [mac] Removed old C code for Python 2.5 in the `fsevents` C implementation\n- [snapshot] Added ``EmptyDirectorySnapshot`` (`#613 <https://github.com/gorakhargosh/watchdog/pull/613>`__)\n- Thanks to our beloved contributors: @Ajordat, @tehkirill, @BoboTiG\n\n\n0.10.0\n~~~~~~\n\n2020-01-26 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.9.0...v0.10.0>`__\n\n**Breaking Changes**\n\n- Dropped support for Python 2.6, 3.2 and 3.3\n- Emitters that failed to start are now removed\n- [snapshot] Removed the deprecated ``walker_callback`` argument,\n  use ``stat`` instead\n- [watchmedo] The utility is no more installed by default but via the extra\n  ``watchdog[watchmedo]``\n\n**Other Changes**\n\n- Fixed several Python 3 warnings\n- Identify synthesized events with ``is_synthetic`` attribute (`#369 <https://github.com/gorakhargosh/watchdog/pull/369>`__)\n- Use ``os.scandir()`` to improve memory usage (`#503 <https://github.com/gorakhargosh/watchdog/pull/503>`__)\n- [bsd] Fixed flavors of FreeBSD detection (`#529 <https://github.com/gorakhargosh/watchdog/pull/529>`__)\n- [bsd] Skip unprocessable socket files (`#509 <https://github.com/gorakhargosh/watchdog/issue/509>`__)\n- [inotify] Fixed events containing non-ASCII characters (`#516 <https://github.com/gorakhargosh/watchdog/issues/516>`__)\n- [inotify] Fixed the way ``OSError`` are re-raised (`#377 <https://github.com/gorakhargosh/watchdog/issues/377>`__)\n- [inotify] Fixed wrong source path after renaming a top level folder (`#515 <https://github.com/gorakhargosh/watchdog/pull/515>`__)\n- [inotify] Removed  delay from non-move events (`#477 <https://github.com/gorakhargosh/watchdog/pull/477>`__)\n- [mac] Fixed a bug when calling ``FSEventsEmitter.stop()`` twice (`#466 <https://github.com/gorakhargosh/watchdog/pull/466>`__)\n- [mac] Support for unscheduling deleted watch (`#541 <https://github.com/gorakhargosh/watchdog/issue/541>`__)\n- [mac] Fixed missing field initializers and unused parameters in\n  ``watchdog_fsevents.c``\n- [snapshot] Don't walk directories without read permissions (`#408 <https://github.com/gorakhargosh/watchdog/pull/408>`__)\n- [snapshot] Fixed a race condition crash when a directory is swapped for a file (`#513 <https://github.com/gorakhargosh/watchdog/pull/513>`__)\n- [snasphot] Fixed an ``AttributeError`` about forgotten ``path_for_inode`` attr (`#436 <https://github.com/gorakhargosh/watchdog/issues/436>`__)\n- [snasphot] Added the ``ignore_device=False`` parameter to the ctor (`597 <https://github.com/gorakhargosh/watchdog/pull/597>`__)\n- [watchmedo] Fixed the path separator used (`#478 <https://github.com/gorakhargosh/watchdog/pull/478>`__)\n- [watchmedo] Fixed the use of ``yaml.load()`` for ``yaml.safe_load()`` (`#453 <https://github.com/gorakhargosh/watchdog/issues/453>`__)\n- [watchmedo] Handle all available signals (`#549 <https://github.com/gorakhargosh/watchdog/issue/549>`__)\n- [watchmedo] Added the ``--debug-force-polling`` argument (`#404 <https://github.com/gorakhargosh/watchdog/pull/404>`__)\n- [windows] Fixed issues when the observed directory is deleted (`#570 <https://github.com/gorakhargosh/watchdog/issues/570>`__ and `#601 <https://github.com/gorakhargosh/watchdog/pull/601>`__)\n- [windows] ``WindowsApiEmitter`` made easier to subclass (`#344 <https://github.com/gorakhargosh/watchdog/pull/344>`__)\n- [windows] Use separate ctypes DLL instances\n- [windows] Generate sub created events only if ``recursive=True`` (`#454 <https://github.com/gorakhargosh/watchdog/pull/454>`__)\n- Thanks to our beloved contributors: @BoboTiG, @LKleinNux, @rrzaripov,\n  @wildmichael, @TauPan, @segevfiner, @petrblahos, @QuantumEnergyE,\n  @jeffwidman, @kapsh, @nickoala, @petrblahos, @julianolf, @tonybaloney,\n  @mbakiev, @pR0Ps, javaguirre, @skurfer, @exarkun, @joshuaskelly,\n  @danilobellini, @Ajordat\n\n\n0.9.0\n~~~~~\n\n2018-08-28 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.3...v0.9.0>`__\n\n- Deleting the observed directory now emits a ``DirDeletedEvent`` event\n- [bsd] Improved the platform detection (`#378 <https://github.com/gorakhargosh/watchdog/pull/378>`__)\n- [inotify] Fixed a crash when the root directory being watched by was deleted (`#374 <https://github.com/gorakhargosh/watchdog/pull/374>`__)\n- [inotify] Handle systems providing uClibc\n- [linux] Fixed a possible ``DirDeletedEvent`` duplication when\n  deleting a directory\n- [mac] Fixed unicode path handling ``fsevents2.py`` (`#298 <https://github.com/gorakhargosh/watchdog/pull/298>`__)\n- [watchmedo] Added the ``--debug-force-polling`` argument (`#336 <https://github.com/gorakhargosh/watchdog/pull/336>`__)\n- [windows] Fixed the ``FILE_LIST_DIRECTORY`` constant (`#376 <https://github.com/gorakhargosh/watchdog/pull/376>`__)\n- Thanks to our beloved contributors: @vulpeszerda, @hpk42, @tamland, @senden9,\n  @gorakhargosh, @nolsto, @mafrosis, @DonyorM, @anthrotype, @danilobellini,\n  @pierregr, @ShinNoNoir, @adrpar, @gforcada, @pR0Ps, @yegorich, @dhke\n\n\n0.8.3\n~~~~~\n\n2015-02-11 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.2...v0.8.3>`__\n\n- Fixed the use of the root logger (`#274 <https://github.com/gorakhargosh/watchdog/issues/274>`__)\n- [inotify] Refactored libc loading and improved error handling in\n  ``inotify_c.py``\n- [inotify] Fixed a possible unbound local error in ``inotify_c.py``\n- Thanks to our beloved contributors: @mmorearty, @tamland, @tony,\n  @gorakhargosh\n\n\n0.8.2\n~~~~~\n\n2014-10-29 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.1...v0.8.2>`__\n\n- Event emitters are no longer started on schedule if ``Observer`` is not\n  already running\n- [mac] Fixed usued arguments to pass clang compilation (`#265 <https://github.com/gorakhargosh/watchdog/pull/265>`__)\n- [snapshot] Fixed a possible race condition crash on directory deletion (`#281 <https://github.com/gorakhargosh/watchdog/pull/281>`__)\n- [windows] Fixed an error when watching the same folder again (`#270 <https://github.com/gorakhargosh/watchdog/pull/270>`__)\n- Thanks to our beloved contributors: @tamland, @apetrone, @Falldog,\n  @theospears\n\n\n0.8.1\n~~~~~\n\n2014-07-28 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.0...v0.8.1>`__\n\n- Fixed ``anon_inode`` descriptors leakage  (`#249 <https://github.com/gorakhargosh/watchdog/pull/249>`__)\n- [inotify] Fixed thread stop dead lock (`#250 <https://github.com/gorakhargosh/watchdog/issues/250>`__)\n- Thanks to our beloved contributors: @Witos, @adiroiban, @tamland\n\n\n0.8.0\n~~~~~\n\n2014-07-02 \u2022 `full history <https://github.com/gorakhargosh/watchdog/compare/v0.7.1...v0.8.0>`__\n\n- Fixed ``argh`` deprecation warnings (`#242 <https://github.com/gorakhargosh/watchdog/pull/242>`__)\n- [snapshot] Methods returning internal stats info were replaced by\n  ``mtime()``, ``inode()`` and ``path()`` methods\n- [snapshot] Deprecated the ``walker_callback`` argument\n- [watchmedo] Fixed ``auto-restart`` to terminate all children processes (`#225 <https://github.com/gorakhargosh/watchdog/pull/225>`__)\n- [watchmedo] Added the ``--no-parallel`` argument (`#227 <https://github.com/gorakhargosh/watchdog/issues/227>`__)\n- [windows] Fixed the value of ``INVALID_HANDLE_VALUE`` (`#123 <https://github.com/gorakhargosh/watchdog/issues/123>`__)\n- [windows] Fixed octal usages to work with Python 3 as well (`#223 <https://github.com/gorakhargosh/watchdog/issues/223>`__)\n- Thanks to our beloved contributors: @tamland, @Ormod, @berdario, @cro,\n  @BernieSumption, @pypingou, @gotcha, @tommorris, @frewsxcv", "description_content_type": "", "docs_url": "https://pythonhosted.org/watchdog/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/gorakhargosh/watchdog", "keywords": "python filesystem monitoring monitor FSEvents kqueue inotify ReadDirectoryChangesW polling DirectorySnapshot", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "watchdog", "package_url": "https://pypi.org/project/watchdog/", "platform": "", "project_url": "https://pypi.org/project/watchdog/", "project_urls": {"Homepage": "http://github.com/gorakhargosh/watchdog"}, "release_url": "https://pypi.org/project/watchdog/0.10.2/", "requires_dist": null, "requires_python": "", "summary": "Filesystem events monitoring", "version": "0.10.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/gorakhargosh/watchdog\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/gorakhargosh/watchdog.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6df0128741c330df0b2821765c3b4e461120c133/68747470733a2f2f7472617669732d63692e6f72672f676f72616b686172676f73682f7761746368646f672e7376673f6272616e63683d6d6173746572\"></a>\n<p>Python API and shell utilities to monitor file system events.</p>\n<p>Works on Python 2.7 and 3.4+. If you want to use an old version of Python, you should stick with watchdog &lt; 0.10.0.</p>\n<div id=\"example-api-usage\">\n<h2>Example API Usage</h2>\n<p>A simple program that uses watchdog to monitor directories specified\nas command-line arguments and logs events generated:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">watchdog.observers</span> <span class=\"kn\">import</span> <span class=\"n\">Observer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">watchdog.events</span> <span class=\"kn\">import</span> <span class=\"n\">LoggingEventHandler</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span>\n                        <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n                        <span class=\"n\">datefmt</span><span class=\"o\">=</span><span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S'</span><span class=\"p\">)</span>\n    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"s1\">'.'</span>\n    <span class=\"n\">event_handler</span> <span class=\"o\">=</span> <span class=\"n\">LoggingEventHandler</span><span class=\"p\">()</span>\n    <span class=\"n\">observer</span> <span class=\"o\">=</span> <span class=\"n\">Observer</span><span class=\"p\">()</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">event_handler</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n        <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"shell-utilities\">\n<h2>Shell Utilities</h2>\n<p>Watchdog comes with an <em>optional</em> utility script called <tt>watchmedo</tt>.\nPlease type <tt>watchmedo <span class=\"pre\">--help</span></tt> at the shell prompt to\nknow more about this tool.</p>\n<p>Here is how you can log the current directory recursively\nfor events related only to <tt>*.py</tt> and <tt>*.txt</tt> files while\nignoring all directory events:</p>\n<pre>watchmedo log <span class=\"se\">\\\n</span>    --patterns<span class=\"o\">=</span><span class=\"s2\">\"*.py;*.txt\"</span> <span class=\"se\">\\\n</span>    --ignore-directories <span class=\"se\">\\\n</span>    --recursive <span class=\"se\">\\\n</span>    .\n</pre>\n<p>You can use the <tt><span class=\"pre\">shell-command</span></tt> subcommand to execute shell commands in\nresponse to events:</p>\n<pre>watchmedo shell-command <span class=\"se\">\\\n</span>    --patterns<span class=\"o\">=</span><span class=\"s2\">\"*.py;*.txt\"</span> <span class=\"se\">\\\n</span>    --recursive <span class=\"se\">\\\n</span>    --command<span class=\"o\">=</span><span class=\"s1\">'echo \"${watch_src_path}\"'</span> <span class=\"se\">\\\n</span>    .\n</pre>\n<p>Please see the help information for these commands by typing:</p>\n<pre>watchmedo <span class=\"o\">[</span>command<span class=\"o\">]</span> --help\n</pre>\n<div id=\"about-watchmedo-tricks\">\n<h3>About <tt>watchmedo</tt> Tricks</h3>\n<p><tt>watchmedo</tt> can read <tt>tricks.yaml</tt> files and execute tricks within them in\nresponse to file system events. Tricks are actually event handlers that\nsubclass <tt>watchdog.tricks.Trick</tt> and are written by plugin authors. Trick\nclasses are augmented with a few additional features that regular event handlers\ndon\u2019t need.</p>\n<p>An example <tt>tricks.yaml</tt> file:</p>\n<pre><span class=\"nt\">tricks</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">watchdog.tricks.LoggerTrick</span><span class=\"p\">:</span>\n    <span class=\"nt\">patterns</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"s\">\"*.py\"</span><span class=\"p-Indicator\">,</span> <span class=\"s\">\"*.js\"</span><span class=\"p-Indicator\">]</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">watchmedo_webtricks.GoogleClosureTrick</span><span class=\"p\">:</span>\n    <span class=\"nt\">patterns</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"s\">'*.js'</span><span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">hash_names</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n    <span class=\"nt\">mappings_format</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">json</span>                  <span class=\"c1\"># json|yaml|python</span>\n    <span class=\"nt\">mappings_module</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">app/javascript_mappings</span>\n    <span class=\"nt\">suffix</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">.min.js</span>\n    <span class=\"nt\">compilation_level</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">advanced</span>            <span class=\"c1\"># simple|advanced</span>\n    <span class=\"nt\">source_directory</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">app/static/js/</span>\n    <span class=\"nt\">destination_directory</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">app/public/js/</span>\n    <span class=\"nt\">files</span><span class=\"p\">:</span>\n      <span class=\"nt\">index-page</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app/static/js/vendor/jquery*.js</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app/static/js/base.js</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app/static/js/index-page.js</span>\n      <span class=\"nt\">about-page</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app/static/js/vendor/jquery*.js</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app/static/js/base.js</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app/static/js/about-page/**/*.js</span>\n</pre>\n<p>The directory containing the <tt>tricks.yaml</tt> file will be monitored. Each trick\nclass is initialized with its corresponding keys in the <tt>tricks.yaml</tt> file as\narguments and events are fed to an instance of this class as they arrive.</p>\n<p>Tricks will be included in the 0.5.0 release. I need community input about them.\nPlease file enhancement requests at the <a href=\"http://github.com/gorakhargosh/watchdog/issues\" rel=\"nofollow\">issue tracker</a>.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPI using <tt>pip</tt>:</p>\n<pre>$ python -m pip install watchdog\n\n<span class=\"c1\"># or to install the watchmedo utility:\n</span>$ python -m pip install watchdog<span class=\"o\">[</span>watchmedo<span class=\"o\">]</span>\n</pre>\n<p>Install from source:</p>\n<pre>$ python -m pip install -e .\n\n<span class=\"c1\"># or to install the watchmedo utility:\n</span>$ python -m pip install -e <span class=\"s2\">\".[watchmedo]\"</span>\n</pre>\n<div id=\"installation-caveats\">\n<h3>Installation Caveats</h3>\n<p>The <tt>watchmedo</tt> script depends on <a href=\"http://www.pyyaml.org/\" rel=\"nofollow\">PyYAML</a> which links with <a href=\"http://pyyaml.org/wiki/LibYAML\" rel=\"nofollow\">LibYAML</a>,\nwhich brings a performance boost to the PyYAML parser. However, installing\n<a href=\"http://pyyaml.org/wiki/LibYAML\" rel=\"nofollow\">LibYAML</a> is optional but recommended. On Mac OS X, you can use <a href=\"http://mxcl.github.com/homebrew/\" rel=\"nofollow\">homebrew</a>\nto install LibYAML:</p>\n<pre>$ brew install libyaml\n</pre>\n<p>On Linux, use your favorite package manager to install LibYAML. Here\u2019s how you\ndo it on Ubuntu:</p>\n<pre>$ sudo aptitude install libyaml-dev\n</pre>\n<p>On Windows, please install <a href=\"http://www.pyyaml.org/\" rel=\"nofollow\">PyYAML</a> using the binaries they provide.</p>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>You can browse the latest release <a href=\"https://python-watchdog.readthedocs.io/\" rel=\"nofollow\">documentation</a> online.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>Fork the <a href=\"http://github.com/gorakhargosh/watchdog\" rel=\"nofollow\">repository</a> on GitHub and send a pull request, or file an issue\nticket at the <a href=\"http://github.com/gorakhargosh/watchdog/issues\" rel=\"nofollow\">issue tracker</a>. For general help and questions use the official\n<a href=\"http://groups.google.com/group/watchdog-python\" rel=\"nofollow\">mailing list</a> or ask on <a href=\"http://stackoverflow.com/questions/tagged/python-watchdog\" rel=\"nofollow\">stackoverflow</a> with tag <cite>python-watchdog</cite>.</p>\n<p>Create and activate your virtual environment, then:</p>\n<pre>python -m pip install pytest pytest-cov\npython -m pip install -e .[watchmedo]\npython -m pytest tests\n</pre>\n<p>If you are making a substantial change, add an entry to the \u201cUnreleased\u201d section\nof the <a href=\"https://github.com/gorakhargosh/watchdog/blob/master/changelog.rst\" rel=\"nofollow\">changelog</a>.</p>\n</div>\n<div id=\"supported-platforms\">\n<h2>Supported Platforms</h2>\n<ul>\n<li>Linux 2.6 (inotify)</li>\n<li>Mac OS X (FSEvents, kqueue)</li>\n<li>FreeBSD/BSD (kqueue)</li>\n<li>Windows (ReadDirectoryChangesW with I/O completion ports;\nReadDirectoryChangesW worker threads)</li>\n<li>OS-independent (polling the disk for directory snapshots and comparing them\nperiodically; slow and not recommended)</li>\n</ul>\n<p>Note that when using watchdog with kqueue, you need the\nnumber of file descriptors allowed to be opened by programs\nrunning on your system to be increased to more than the\nnumber of files that you will be monitoring. The easiest way\nto do that is to edit your <tt><span class=\"pre\">~/.profile</span></tt> file and add\na line similar to:</p>\n<pre>ulimit -n 1024\n</pre>\n<p>This is an inherent problem with kqueue because it uses\nfile descriptors to monitor files. That plus the enormous\namount of bookkeeping that watchdog needs to do in order\nto monitor file descriptors just makes this a painful way\nto monitor files and directories. In essence, kqueue is\nnot a very scalable way to monitor a deeply nested\ndirectory of files and directories with a large number of\nfiles.</p>\n</div>\n<div id=\"about-using-watchdog-with-editors-like-vim\">\n<h2>About using watchdog with editors like Vim</h2>\n<p>Vim does not modify files unless directed to do so.\nIt creates backup files and then swaps them in to replace\nthe files you are editing on the disk. This means that\nif you use Vim to edit your files, the on-modified events\nfor those files will not be triggered by watchdog.\nYou may need to configure Vim appropriately to disable\nthis feature.</p>\n</div>\n<div id=\"about-using-watchdog-with-cifs\">\n<h2>About using watchdog with CIFS</h2>\n<p>When you want to watch changes in CIFS, you need to explicitly tell watchdog to\nuse <tt>PollingObserver</tt>, that is, instead of letting watchdog decide an\nappropriate observer like in the example above, do:</p>\n<pre>from watchdog.observers.polling import PollingObserver as Observer\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ol>\n<li>Python 2.7, 3.4 or above.</li>\n<li><a href=\"http://github.com/gorakhargosh/pathtools\" rel=\"nofollow\">pathtools</a></li>\n<li><a href=\"http://developer.apple.com/technologies/tools/xcode.html\" rel=\"nofollow\">XCode</a> (only on Mac OS X)</li>\n<li><a href=\"http://www.pyyaml.org/\" rel=\"nofollow\">PyYAML</a> (only for <tt>watchmedo</tt> script)</li>\n<li><a href=\"http://pypi.python.org/pypi/argh\" rel=\"nofollow\">argh</a> (only for <tt>watchmedo</tt> script)</li>\n</ol>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>Watchdog is licensed under the terms of the <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache License, version 2.0</a>.</p>\n<p>Copyright 2011 <a href=\"mailto:yesudeep%40gmail.com\">Yesudeep Mangalapilly</a>.</p>\n<p>Copyright 2012 Google, Inc.</p>\n<p>Project <a href=\"http://github.com/gorakhargosh/watchdog\" rel=\"nofollow\">source code</a> is available at Github. Please report bugs and file\nenhancement requests at the <a href=\"http://github.com/gorakhargosh/watchdog/issues\" rel=\"nofollow\">issue tracker</a>.</p>\n</div>\n<div id=\"why-watchdog\">\n<h2>Why Watchdog?</h2>\n<p>Too many people tried to do the same thing and none did what I needed Python\nto do:</p>\n<ul>\n<li><a href=\"http://mark.heily.com/pnotify\" rel=\"nofollow\">pnotify</a></li>\n<li><a href=\"https://webdav.seas.upenn.edu/viewvc/unison/trunk/src/fsmonitor.py?view=markup&amp;pathrev=471\" rel=\"nofollow\">unison fsmonitor</a></li>\n<li><a href=\"http://github.com/shaurz/fsmonitor\" rel=\"nofollow\">fsmonitor</a></li>\n<li><a href=\"http://github.com/guard/guard\" rel=\"nofollow\">guard</a></li>\n<li><a href=\"http://github.com/seb-m/pyinotify\" rel=\"nofollow\">pyinotify</a></li>\n<li><a href=\"http://github.com/rvoicilas/inotify-tools\" rel=\"nofollow\">inotify-tools</a></li>\n<li><a href=\"http://jnotify.sourceforge.net/\" rel=\"nofollow\">jnotify</a></li>\n<li><a href=\"http://github.com/jbd/treewatcher\" rel=\"nofollow\">treewalker</a></li>\n<li><a href=\"http://github.com/pke/file.monitor\" rel=\"nofollow\">file.monitor</a></li>\n<li><a href=\"http://code.google.com/p/pyfilesystem\" rel=\"nofollow\">pyfilesystem</a></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>Changelog</h2>\n<div id=\"id4\">\n<h3>0.10.2</h3>\n<p>2020-02-08 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.10.1...v0.10.2\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Fixed the <tt>build_ext</tt> command on macOS Catalina (<a href=\"https://github.com/gorakhargosh/watchdog/pull/628\" rel=\"nofollow\">#628</a>)</li>\n<li>Fixed the installation of macOS requirements on non-macOS OSes (<a href=\"https://github.com/gorakhargosh/watchdog/pull/635\" rel=\"nofollow\">#635</a>)</li>\n<li>Refactored <tt>dispatch()</tt> method of <tt>FileSystemEventHandler</tt>,\n<tt>PatternMatchingEventHandler</tt> and <tt>RegexMatchingEventHandler</tt></li>\n<li>[bsd] Improved tests support on non Windows/Linux platforms (<a href=\"https://github.com/gorakhargosh/watchdog/pull/633\" rel=\"nofollow\">#633</a>, <a href=\"https://github.com/gorakhargosh/watchdog/pull/639\" rel=\"nofollow\">#639</a>)</li>\n<li>[bsd] Added FreeBSD CI support (<a href=\"https://github.com/gorakhargosh/watchdog/pull/532\" rel=\"nofollow\">#532</a>)</li>\n<li>[bsd] Restored full support (<a href=\"https://github.com/gorakhargosh/watchdog/pull/638\" rel=\"nofollow\">#638</a>, <a href=\"https://github.com/gorakhargosh/watchdog/pull/641\" rel=\"nofollow\">#641</a>)</li>\n<li>Thanks to our beloved contributors: @BoboTiG, @evilham, @danilobellini</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.10.1</h3>\n<p>2020-01-30 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.10.0...v0.10.1\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Fixed Python 2.7 to 3.6 installation when the OS locale is set to POSIX (<a href=\"https://github.com/gorakhargosh/watchdog/pull/615\" rel=\"nofollow\">#615</a>)</li>\n<li>Fixed the <tt>build_ext</tt> command on macOS  (<a href=\"https://github.com/gorakhargosh/watchdog/pull/618\" rel=\"nofollow\">#618</a>, <a href=\"https://github.com/gorakhargosh/watchdog/pull/620\" rel=\"nofollow\">#620</a>)</li>\n<li>Moved requirements to <tt>setup.cfg</tt>  (<a href=\"https://github.com/gorakhargosh/watchdog/pull/617\" rel=\"nofollow\">#617</a>)</li>\n<li>[mac] Removed old C code for Python 2.5 in the <cite>fsevents</cite> C implementation</li>\n<li>[snapshot] Added <tt>EmptyDirectorySnapshot</tt> (<a href=\"https://github.com/gorakhargosh/watchdog/pull/613\" rel=\"nofollow\">#613</a>)</li>\n<li>Thanks to our beloved contributors: @Ajordat, @tehkirill, @BoboTiG</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.10.0</h3>\n<p>2020-01-26 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.9.0...v0.10.0\" rel=\"nofollow\">full history</a></p>\n<p><strong>Breaking Changes</strong></p>\n<ul>\n<li>Dropped support for Python 2.6, 3.2 and 3.3</li>\n<li>Emitters that failed to start are now removed</li>\n<li>[snapshot] Removed the deprecated <tt>walker_callback</tt> argument,\nuse <tt>stat</tt> instead</li>\n<li>[watchmedo] The utility is no more installed by default but via the extra\n<tt>watchdog[watchmedo]</tt></li>\n</ul>\n<p><strong>Other Changes</strong></p>\n<ul>\n<li>Fixed several Python 3 warnings</li>\n<li>Identify synthesized events with <tt>is_synthetic</tt> attribute (<a href=\"https://github.com/gorakhargosh/watchdog/pull/369\" rel=\"nofollow\">#369</a>)</li>\n<li>Use <tt>os.scandir()</tt> to improve memory usage (<a href=\"https://github.com/gorakhargosh/watchdog/pull/503\" rel=\"nofollow\">#503</a>)</li>\n<li>[bsd] Fixed flavors of FreeBSD detection (<a href=\"https://github.com/gorakhargosh/watchdog/pull/529\" rel=\"nofollow\">#529</a>)</li>\n<li>[bsd] Skip unprocessable socket files (<a href=\"https://github.com/gorakhargosh/watchdog/issue/509\" rel=\"nofollow\">#509</a>)</li>\n<li>[inotify] Fixed events containing non-ASCII characters (<a href=\"https://github.com/gorakhargosh/watchdog/issues/516\" rel=\"nofollow\">#516</a>)</li>\n<li>[inotify] Fixed the way <tt>OSError</tt> are re-raised (<a href=\"https://github.com/gorakhargosh/watchdog/issues/377\" rel=\"nofollow\">#377</a>)</li>\n<li>[inotify] Fixed wrong source path after renaming a top level folder (<a href=\"https://github.com/gorakhargosh/watchdog/pull/515\" rel=\"nofollow\">#515</a>)</li>\n<li>[inotify] Removed  delay from non-move events (<a href=\"https://github.com/gorakhargosh/watchdog/pull/477\" rel=\"nofollow\">#477</a>)</li>\n<li>[mac] Fixed a bug when calling <tt>FSEventsEmitter.stop()</tt> twice (<a href=\"https://github.com/gorakhargosh/watchdog/pull/466\" rel=\"nofollow\">#466</a>)</li>\n<li>[mac] Support for unscheduling deleted watch (<a href=\"https://github.com/gorakhargosh/watchdog/issue/541\" rel=\"nofollow\">#541</a>)</li>\n<li>[mac] Fixed missing field initializers and unused parameters in\n<tt>watchdog_fsevents.c</tt></li>\n<li>[snapshot] Don\u2019t walk directories without read permissions (<a href=\"https://github.com/gorakhargosh/watchdog/pull/408\" rel=\"nofollow\">#408</a>)</li>\n<li>[snapshot] Fixed a race condition crash when a directory is swapped for a file (<a href=\"https://github.com/gorakhargosh/watchdog/pull/513\" rel=\"nofollow\">#513</a>)</li>\n<li>[snasphot] Fixed an <tt>AttributeError</tt> about forgotten <tt>path_for_inode</tt> attr (<a href=\"https://github.com/gorakhargosh/watchdog/issues/436\" rel=\"nofollow\">#436</a>)</li>\n<li>[snasphot] Added the <tt>ignore_device=False</tt> parameter to the ctor (<a href=\"https://github.com/gorakhargosh/watchdog/pull/597\" rel=\"nofollow\">597</a>)</li>\n<li>[watchmedo] Fixed the path separator used (<a href=\"https://github.com/gorakhargosh/watchdog/pull/478\" rel=\"nofollow\">#478</a>)</li>\n<li>[watchmedo] Fixed the use of <tt>yaml.load()</tt> for <tt>yaml.safe_load()</tt> (<a href=\"https://github.com/gorakhargosh/watchdog/issues/453\" rel=\"nofollow\">#453</a>)</li>\n<li>[watchmedo] Handle all available signals (<a href=\"https://github.com/gorakhargosh/watchdog/issue/549\" rel=\"nofollow\">#549</a>)</li>\n<li>[watchmedo] Added the <tt><span class=\"pre\">--debug-force-polling</span></tt> argument (<a href=\"https://github.com/gorakhargosh/watchdog/pull/404\" rel=\"nofollow\">#404</a>)</li>\n<li>[windows] Fixed issues when the observed directory is deleted (<a href=\"https://github.com/gorakhargosh/watchdog/issues/570\" rel=\"nofollow\">#570</a> and <a href=\"https://github.com/gorakhargosh/watchdog/pull/601\" rel=\"nofollow\">#601</a>)</li>\n<li>[windows] <tt>WindowsApiEmitter</tt> made easier to subclass (<a href=\"https://github.com/gorakhargosh/watchdog/pull/344\" rel=\"nofollow\">#344</a>)</li>\n<li>[windows] Use separate ctypes DLL instances</li>\n<li>[windows] Generate sub created events only if <tt>recursive=True</tt> (<a href=\"https://github.com/gorakhargosh/watchdog/pull/454\" rel=\"nofollow\">#454</a>)</li>\n<li>Thanks to our beloved contributors: @BoboTiG, @LKleinNux, @rrzaripov,\n@wildmichael, @TauPan, @segevfiner, @petrblahos, @QuantumEnergyE,\n@jeffwidman, @kapsh, @nickoala, @petrblahos, @julianolf, @tonybaloney,\n@mbakiev, @pR0Ps, javaguirre, @skurfer, @exarkun, @joshuaskelly,\n@danilobellini, @Ajordat</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9.0</h3>\n<p>2018-08-28 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.8.3...v0.9.0\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Deleting the observed directory now emits a <tt>DirDeletedEvent</tt> event</li>\n<li>[bsd] Improved the platform detection (<a href=\"https://github.com/gorakhargosh/watchdog/pull/378\" rel=\"nofollow\">#378</a>)</li>\n<li>[inotify] Fixed a crash when the root directory being watched by was deleted (<a href=\"https://github.com/gorakhargosh/watchdog/pull/374\" rel=\"nofollow\">#374</a>)</li>\n<li>[inotify] Handle systems providing uClibc</li>\n<li>[linux] Fixed a possible <tt>DirDeletedEvent</tt> duplication when\ndeleting a directory</li>\n<li>[mac] Fixed unicode path handling <tt>fsevents2.py</tt> (<a href=\"https://github.com/gorakhargosh/watchdog/pull/298\" rel=\"nofollow\">#298</a>)</li>\n<li>[watchmedo] Added the <tt><span class=\"pre\">--debug-force-polling</span></tt> argument (<a href=\"https://github.com/gorakhargosh/watchdog/pull/336\" rel=\"nofollow\">#336</a>)</li>\n<li>[windows] Fixed the <tt>FILE_LIST_DIRECTORY</tt> constant (<a href=\"https://github.com/gorakhargosh/watchdog/pull/376\" rel=\"nofollow\">#376</a>)</li>\n<li>Thanks to our beloved contributors: @vulpeszerda, @hpk42, @tamland, @senden9,\n@gorakhargosh, @nolsto, @mafrosis, @DonyorM, @anthrotype, @danilobellini,\n@pierregr, @ShinNoNoir, @adrpar, @gforcada, @pR0Ps, @yegorich, @dhke</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.8.3</h3>\n<p>2015-02-11 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.8.2...v0.8.3\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Fixed the use of the root logger (<a href=\"https://github.com/gorakhargosh/watchdog/issues/274\" rel=\"nofollow\">#274</a>)</li>\n<li>[inotify] Refactored libc loading and improved error handling in\n<tt>inotify_c.py</tt></li>\n<li>[inotify] Fixed a possible unbound local error in <tt>inotify_c.py</tt></li>\n<li>Thanks to our beloved contributors: @mmorearty, @tamland, @tony,\n@gorakhargosh</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.8.2</h3>\n<p>2014-10-29 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.8.1...v0.8.2\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Event emitters are no longer started on schedule if <tt>Observer</tt> is not\nalready running</li>\n<li>[mac] Fixed usued arguments to pass clang compilation (<a href=\"https://github.com/gorakhargosh/watchdog/pull/265\" rel=\"nofollow\">#265</a>)</li>\n<li>[snapshot] Fixed a possible race condition crash on directory deletion (<a href=\"https://github.com/gorakhargosh/watchdog/pull/281\" rel=\"nofollow\">#281</a>)</li>\n<li>[windows] Fixed an error when watching the same folder again (<a href=\"https://github.com/gorakhargosh/watchdog/pull/270\" rel=\"nofollow\">#270</a>)</li>\n<li>Thanks to our beloved contributors: @tamland, @apetrone, @Falldog,\n@theospears</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.8.1</h3>\n<p>2014-07-28 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.8.0...v0.8.1\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Fixed <tt>anon_inode</tt> descriptors leakage  (<a href=\"https://github.com/gorakhargosh/watchdog/pull/249\" rel=\"nofollow\">#249</a>)</li>\n<li>[inotify] Fixed thread stop dead lock (<a href=\"https://github.com/gorakhargosh/watchdog/issues/250\" rel=\"nofollow\">#250</a>)</li>\n<li>Thanks to our beloved contributors: @Witos, @adiroiban, @tamland</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.8.0</h3>\n<p>2014-07-02 \u2022 <a href=\"https://github.com/gorakhargosh/watchdog/compare/v0.7.1...v0.8.0\" rel=\"nofollow\">full history</a></p>\n<ul>\n<li>Fixed <tt>argh</tt> deprecation warnings (<a href=\"https://github.com/gorakhargosh/watchdog/pull/242\" rel=\"nofollow\">#242</a>)</li>\n<li>[snapshot] Methods returning internal stats info were replaced by\n<tt>mtime()</tt>, <tt>inode()</tt> and <tt>path()</tt> methods</li>\n<li>[snapshot] Deprecated the <tt>walker_callback</tt> argument</li>\n<li>[watchmedo] Fixed <tt><span class=\"pre\">auto-restart</span></tt> to terminate all children processes (<a href=\"https://github.com/gorakhargosh/watchdog/pull/225\" rel=\"nofollow\">#225</a>)</li>\n<li>[watchmedo] Added the <tt><span class=\"pre\">--no-parallel</span></tt> argument (<a href=\"https://github.com/gorakhargosh/watchdog/issues/227\" rel=\"nofollow\">#227</a>)</li>\n<li>[windows] Fixed the value of <tt>INVALID_HANDLE_VALUE</tt> (<a href=\"https://github.com/gorakhargosh/watchdog/issues/123\" rel=\"nofollow\">#123</a>)</li>\n<li>[windows] Fixed octal usages to work with Python 3 as well (<a href=\"https://github.com/gorakhargosh/watchdog/issues/223\" rel=\"nofollow\">#223</a>)</li>\n<li>Thanks to our beloved contributors: @tamland, @Ormod, @berdario, @cro,\n@BernieSumption, @pypingou, @gotcha, @tommorris, @frewsxcv</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6596697, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "7618160661fcd8730e8d2771ba5a0e81", "sha256": "8e800496cdfb921cfdc62b58a11966d0d2203a35dc005b4b5b8e1ab3097b2eb5"}, "downloads": -1, "filename": "watchdog-0.10.0.tar.gz", "has_sig": false, "md5_digest": "7618160661fcd8730e8d2771ba5a0e81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94110, "upload_time": "2020-01-26T18:24:07", "upload_time_iso_8601": "2020-01-26T18:24:07.125385Z", "url": "https://files.pythonhosted.org/packages/01/01/cc9b2fd111e19687dd42155f066718bccb414c8a728eb7df0b229742caf7/watchdog-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "e6ae97f544d155afe3d6d6c152dc964c", "sha256": "d64786787b14c8c6a71a8cc014056776ba6b52e85d1164ef2ab50aec02723a3d"}, "downloads": -1, "filename": "watchdog-0.10.1.tar.gz", "has_sig": false, "md5_digest": "e6ae97f544d155afe3d6d6c152dc964c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94879, "upload_time": "2020-01-31T04:14:20", "upload_time_iso_8601": "2020-01-31T04:14:20.224945Z", "url": "https://files.pythonhosted.org/packages/34/65/dca6d9653656630169e9f71fe3fcf2a487b671a096cf11dc3011c822a408/watchdog-0.10.1.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "2477fb59dcb110b8562eb4eb973cda23", "sha256": "c560efb643faed5ef28784b2245cf8874f939569717a4a12826a173ac644456b"}, "downloads": -1, "filename": "watchdog-0.10.2.tar.gz", "has_sig": false, "md5_digest": "2477fb59dcb110b8562eb4eb973cda23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95505, "upload_time": "2020-02-08T23:16:52", "upload_time_iso_8601": "2020-02-08T23:16:52.237913Z", "url": "https://files.pythonhosted.org/packages/73/c3/ed6d992006837e011baca89476a4bbffb0a91602432f73bd4473816c76e2/watchdog-0.10.2.tar.gz", "yanked": false}], "0.3.4": [], "0.3.6": [], "0.5.0": [{"comment_text": "", "digests": {"md5": "c9c49ac9ddeba32fd4bbab3dcf99d8ee", "sha256": "bc723a3a080b5f5d5a1057b44bb4adf30cffb37f03608bbb379fe9ae6945066a"}, "downloads": -1, "filename": "watchdog-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c9c49ac9ddeba32fd4bbab3dcf99d8ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70656, "upload_time": "2011-01-20T05:53:53", "upload_time_iso_8601": "2011-01-20T05:53:53.780073Z", "url": "https://files.pythonhosted.org/packages/86/1f/676a4b9716502a2a7330b34955705b6401f16b4443945cad105a14ed1e1a/watchdog-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "9d2c3177646351d3201631ec5a8474d9", "sha256": "3e29ac6b9fede5dc06e6fa8e079b3118c98991c7b240a24ee9b1c3048be12033"}, "downloads": -1, "filename": "watchdog-0.5.1.tar.gz", "has_sig": false, "md5_digest": "9d2c3177646351d3201631ec5a8474d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69787, "upload_time": "2011-02-02T07:55:11", "upload_time_iso_8601": "2011-02-02T07:55:11.873436Z", "url": "https://files.pythonhosted.org/packages/64/9d/c56c2e9df4bcd25c837a482c9db626ea0d1932fd91832d0ee75c1634fa5b/watchdog-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "313894d315f556ffd109d2d5fb31b733", "sha256": "7b4b52943ac470018fe81751c0281627d11653c65475060a1314d1853d3b418c"}, "downloads": -1, "filename": "watchdog-0.5.2.tar.gz", "has_sig": false, "md5_digest": "313894d315f556ffd109d2d5fb31b733", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69802, "upload_time": "2011-02-04T20:33:11", "upload_time_iso_8601": "2011-02-04T20:33:11.820537Z", "url": "https://files.pythonhosted.org/packages/d3/10/d2ef642232a5c20686559e4bd592d2dca9435eca52a85811ccfe6c0fa230/watchdog-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "092fdabd8810922468a7e9fdcfa42520", "sha256": "d1baa0a5f43931b6601e4566e8256e17571b4a34d86510cd18985e73f098bade"}, "downloads": -1, "filename": "watchdog-0.5.3.tar.gz", "has_sig": false, "md5_digest": "092fdabd8810922468a7e9fdcfa42520", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69880, "upload_time": "2011-02-08T07:30:53", "upload_time_iso_8601": "2011-02-08T07:30:53.207528Z", "url": "https://files.pythonhosted.org/packages/d4/bd/70541069ce875ffd9cf5ff996edf2ba1fa27b8096bb26c7a1d97252a469f/watchdog-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "137cb7516b56a4e623934eccc26e1143", "sha256": "d70bca489bb42fe2ad8374bc43047e642cc5964682f43a4db2f6ef6f962284ad"}, "downloads": -1, "filename": "watchdog-0.5.4.tar.gz", "has_sig": false, "md5_digest": "137cb7516b56a4e623934eccc26e1143", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69900, "upload_time": "2011-02-15T09:40:40", "upload_time_iso_8601": "2011-02-15T09:40:40.470012Z", "url": "https://files.pythonhosted.org/packages/d3/cf/44af3e7f6de677923888fc98df845e013548c7c2aa89fedacb9fc2eb6b45/watchdog-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "6e8fb84aa6bdeb2054906bdf40048eba", "sha256": "aaae8ec476b31d46c5dc400105ade2e1c3e2221d9c5f8252a64a2f05165e9dd9"}, "downloads": -1, "filename": "watchdog-0.6.0.tar.gz", "has_sig": false, "md5_digest": "6e8fb84aa6bdeb2054906bdf40048eba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76560, "upload_time": "2012-03-18T07:48:59", "upload_time_iso_8601": "2012-03-18T07:48:59.984093Z", "url": "https://files.pythonhosted.org/packages/42/98/90f2486a5b8150fe68b51ee94a7d0b9caf22c94eaf699cd32a07537ca0b7/watchdog-0.6.0.tar.gz", "yanked": false}], "0.6.1": [], "0.7.0": [{"comment_text": "", "digests": {"md5": "f3c523a4a16c04f1792e62b0a3d665e6", "sha256": "8d89934fede6ec0dfe4d128606e36b989ba0b27b6cf74bd042b818b554625240"}, "downloads": -1, "filename": "watchdog-0.7.0.tar.gz", "has_sig": false, "md5_digest": "f3c523a4a16c04f1792e62b0a3d665e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77013, "upload_time": "2014-01-08T21:02:12", "upload_time_iso_8601": "2014-01-08T21:02:12.180730Z", "url": "https://files.pythonhosted.org/packages/b3/e9/554703d7991cce80223065f3e0f94172d89f1881ea9d5963bcccdcdfff2c/watchdog-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "ffec8b4afd1058e76f6c664ade8a0de7", "sha256": "54ca64fdf0a2fb23cecba6349f9587e62fd31840ae22a71898a65adb8c6b52f9"}, "downloads": -1, "filename": "watchdog-0.7.1.tar.gz", "has_sig": false, "md5_digest": "ffec8b4afd1058e76f6c664ade8a0de7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83438, "upload_time": "2014-02-03T19:42:54", "upload_time_iso_8601": "2014-02-03T19:42:54.811805Z", "url": "https://files.pythonhosted.org/packages/a6/ad/57748d1625d616a9f2adeef38f27f19679712b318d39cd40466bfb15d904/watchdog-0.7.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "8d3b7acc8a6988f70598002deb49ebf4", "sha256": "a86bb2d8b94bb4bf76fcc2ff36f741c0e511ec24c4d3a1059b47d49e377d64f5"}, "downloads": -1, "filename": "watchdog-0.8.0.tar.gz", "has_sig": false, "md5_digest": "8d3b7acc8a6988f70598002deb49ebf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152770, "upload_time": "2014-07-02T11:53:30", "upload_time_iso_8601": "2014-07-02T11:53:30.227449Z", "url": "https://files.pythonhosted.org/packages/8a/bf/1a6fbeb5dc69d55718e3f03d19a1f285eb3629200ebbc9d4ef69367a4355/watchdog-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "a58a082823dc6d3c60ffba1ff5f94608", "sha256": "d6ec6be582b244834a888c8ccc2d451816184ab104b5454b5e5cd7649e8f671c"}, "downloads": -1, "filename": "watchdog-0.8.1.tar.gz", "has_sig": false, "md5_digest": "a58a082823dc6d3c60ffba1ff5f94608", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154747, "upload_time": "2014-07-28T09:55:12", "upload_time_iso_8601": "2014-07-28T09:55:12.412353Z", "url": "https://files.pythonhosted.org/packages/96/c3/f48841b9399ba7c7331330e18d2c144ad20b29e5721e2073428d29979401/watchdog-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "0e6b803860f7da568d7ba5b17ea620fd", "sha256": "33a9ab3ce2e6b1aca4d2a50752231668d69bdba4ab096d9742195ccfbef1e023"}, "downloads": -1, "filename": "watchdog-0.8.2.tar.gz", "has_sig": false, "md5_digest": "0e6b803860f7da568d7ba5b17ea620fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 157936, "upload_time": "2014-10-29T11:45:56", "upload_time_iso_8601": "2014-10-29T11:45:56.087092Z", "url": "https://files.pythonhosted.org/packages/9e/1f/bd5c41dc7e549fd7d2431518172dbf0332f203baed08feda86710f37b99a/watchdog-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "bb16926bccc98eae2a04535e4512ddf1", "sha256": "7e65882adb7746039b6f3876ee174952f8eaaa34491ba34333ddf1fe35de4162"}, "downloads": -1, "filename": "watchdog-0.8.3.tar.gz", "has_sig": false, "md5_digest": "bb16926bccc98eae2a04535e4512ddf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83154, "upload_time": "2015-02-11T10:25:50", "upload_time_iso_8601": "2015-02-11T10:25:50.907994Z", "url": "https://files.pythonhosted.org/packages/54/7d/c7c0ad1e32b9f132075967fc353a244eb2b375a3d2f5b0ce612fd96e107e/watchdog-0.8.3.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "7cdc103f607e72fc32c206301a72d1b2", "sha256": "965f658d0732de3188211932aeb0bb457587f04f63ab4c1e33eab878e9de961d"}, "downloads": -1, "filename": "watchdog-0.9.0.tar.gz", "has_sig": false, "md5_digest": "7cdc103f607e72fc32c206301a72d1b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85549, "upload_time": "2018-08-28T21:23:35", "upload_time_iso_8601": "2018-08-28T21:23:35.416181Z", "url": "https://files.pythonhosted.org/packages/bb/e3/5a55d48a29300160779f0a0d2776d17c1b762a2039b36de528b093b87d5b/watchdog-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2477fb59dcb110b8562eb4eb973cda23", "sha256": "c560efb643faed5ef28784b2245cf8874f939569717a4a12826a173ac644456b"}, "downloads": -1, "filename": "watchdog-0.10.2.tar.gz", "has_sig": false, "md5_digest": "2477fb59dcb110b8562eb4eb973cda23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95505, "upload_time": "2020-02-08T23:16:52", "upload_time_iso_8601": "2020-02-08T23:16:52.237913Z", "url": "https://files.pythonhosted.org/packages/73/c3/ed6d992006837e011baca89476a4bbffb0a91602432f73bd4473816c76e2/watchdog-0.10.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:13 2020"}