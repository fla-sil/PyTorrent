{"info": {"author": "Quantlane", "author_email": "code@quantlane.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only"], "description": "aiodebug\n========\n\nThis is a tiny library for monitoring and testing asyncio programs.\nIts monitoring features are meant to be always on in production.\n\nAiodebug will use `logwood <https://github.com/qntln/logwood>`_ if it is installed, otherwise it will default\nto the standard logging module.\n\nAiodebug is only tested with Python 3.5. There are no plans to support older versions.\n\n\nLog warnings when callbacks block the event loop\n------------------------------------------------\n\n.. code-block:: python\n\n\taiodebug.log_slow_callbacks.enable(0.05)\n\nThis will produce WARNING-level logs such as\n\n.. code-block::\n\n\tExecuting <Task pending coro=<foo() running at /home/.../foo.py:37>\n\twait_for=<Future pending cb=[Task._wakeup()]>> took 0.069 seconds\n\nAsyncio already does this in debug mode, but you probably don't want to enable full-on debug mode in production.\n\n\n\nTrack event loop lags in StatsD\n------------------------------------------------\n\n.. code-block:: python\n\n\taiodebug.monitor_loop_lag.enable(statsd_client)\n\nTracks how much scheduled calls get delayed and sends the lags to StatsD:\n\n.. image:: https://github.com/qntln/aiodebug/raw/master/docs/loop-lags.png\n\n\n\nSpeed up or slow down time in the event loop\n------------------------------------------------\n\nThis is mainly useful for testing.\n\n.. code-block:: python\n\n\tloop = aiodebug.testing.time_dilated_loop.TimeDilatedLoop()\n\tasyncio.set_event_loop(loop)\n\n\tloop.time_dilation = 3\n\tawait asyncio.sleep(1) # Takes 0.333s of real time\n\n\tloop.time_dilation = 0.1\n\tawait asyncio.sleep(1) # Takes 10s of real time", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/qntln/aiodebug", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "aiodebug", "package_url": "https://pypi.org/project/aiodebug/", "platform": "", "project_url": "https://pypi.org/project/aiodebug/", "project_urls": {"Homepage": "https://github.com/qntln/aiodebug"}, "release_url": "https://pypi.org/project/aiodebug/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "A tiny library for monitoring and testing asyncio programs", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a tiny library for monitoring and testing asyncio programs.\nIts monitoring features are meant to be always on in production.</p>\n<p>Aiodebug will use <a href=\"https://github.com/qntln/logwood\" rel=\"nofollow\">logwood</a> if it is installed, otherwise it will default\nto the standard logging module.</p>\n<p>Aiodebug is only tested with Python 3.5. There are no plans to support older versions.</p>\n<div id=\"log-warnings-when-callbacks-block-the-event-loop\">\n<h2>Log warnings when callbacks block the event loop</h2>\n<pre><span class=\"n\">aiodebug</span><span class=\"o\">.</span><span class=\"n\">log_slow_callbacks</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n</pre>\n<p>This will produce WARNING-level logs such as</p>\n<pre>Executing &lt;Task pending coro=&lt;foo() running at /home/.../foo.py:37&gt;\nwait_for=&lt;Future pending cb=[Task._wakeup()]&gt;&gt; took 0.069 seconds\n</pre>\n<p>Asyncio already does this in debug mode, but you probably don\u2019t want to enable full-on debug mode in production.</p>\n</div>\n<div id=\"track-event-loop-lags-in-statsd\">\n<h2>Track event loop lags in StatsD</h2>\n<pre><span class=\"n\">aiodebug</span><span class=\"o\">.</span><span class=\"n\">monitor_loop_lag</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">(</span><span class=\"n\">statsd_client</span><span class=\"p\">)</span>\n</pre>\n<p>Tracks how much scheduled calls get delayed and sends the lags to StatsD:</p>\n<img alt=\"https://github.com/qntln/aiodebug/raw/master/docs/loop-lags.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8719ac383481e44756b296a4f92c7837ff49601/68747470733a2f2f6769746875622e636f6d2f716e746c6e2f61696f64656275672f7261772f6d61737465722f646f63732f6c6f6f702d6c6167732e706e67\">\n</div>\n<div id=\"speed-up-or-slow-down-time-in-the-event-loop\">\n<h2>Speed up or slow down time in the event loop</h2>\n<p>This is mainly useful for testing.</p>\n<pre><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">aiodebug</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">time_dilated_loop</span><span class=\"o\">.</span><span class=\"n\">TimeDilatedLoop</span><span class=\"p\">()</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">set_event_loop</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">time_dilation</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># Takes 0.333s of real time</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">time_dilation</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n<span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># Takes 10s of real time</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2487449, "releases": {"0.0.0": [], "1.1.1": [{"comment_text": "", "digests": {"md5": "a35a411ff0496b90d3150b3abb397db3", "sha256": "1d0bfa8dcd3dd023f9c7c4cbc1e8a27b38c87835b94573e5765bd69521f14ccc"}, "downloads": -1, "filename": "aiodebug-1.1.1.tar.gz", "has_sig": true, "md5_digest": "a35a411ff0496b90d3150b3abb397db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3960, "upload_time": "2016-11-28T16:40:03", "upload_time_iso_8601": "2016-11-28T16:40:03.845496Z", "url": "https://files.pythonhosted.org/packages/1a/c3/a1c2ca13f7b801db569348bc8b9ccbd6ae9a6233263d4b8c0f7a743b7f97/aiodebug-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "8cf8ea1e051e79330b959ed0a6ca33df", "sha256": "061dd0067f80a433a1e4fa4f76dd1b4cf366ee0ce2035e462ba3af00c79241ea"}, "downloads": -1, "filename": "aiodebug-1.1.2.tar.gz", "has_sig": true, "md5_digest": "8cf8ea1e051e79330b959ed0a6ca33df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3981, "upload_time": "2016-11-28T17:06:02", "upload_time_iso_8601": "2016-11-28T17:06:02.835654Z", "url": "https://files.pythonhosted.org/packages/36/b7/06aa0e122ddc7c98713e41da9a13c93acd8e040539803d1f065d670e32c8/aiodebug-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8cf8ea1e051e79330b959ed0a6ca33df", "sha256": "061dd0067f80a433a1e4fa4f76dd1b4cf366ee0ce2035e462ba3af00c79241ea"}, "downloads": -1, "filename": "aiodebug-1.1.2.tar.gz", "has_sig": true, "md5_digest": "8cf8ea1e051e79330b959ed0a6ca33df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3981, "upload_time": "2016-11-28T17:06:02", "upload_time_iso_8601": "2016-11-28T17:06:02.835654Z", "url": "https://files.pythonhosted.org/packages/36/b7/06aa0e122ddc7c98713e41da9a13c93acd8e040539803d1f065d670e32c8/aiodebug-1.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:40 2020"}