{"info": {"author": "Piero Dotti, Paolo Guglielmini", "author_email": "pnproductions.dev@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "py-tvd\n======\n\nThis is a Python implementation of `Total Variation Denoising`_ method proposed by Guy Gilboa.\n\n    Reduces the total-variation of the image.\n    Filters out noise while preserving edges. Textures and fine-scale details are also removed.\n\nRequirements\n------------\n\nTo run this code you need the following packages:\n\n-  `Numpy`_\n-  `Numexpr`_\n-  `OpenCV`_ (Optional)\n\n**Everything but OpenCV can be installed via ``pip install -r requirements``**\n\nInstallation\n------------\n\nTo install everything just type:\n\n.. code:: shell\n\n    pip install py-tvd\n\n\nFor manual installation:\n\n.. code:: shell\n\n    python setup.py install\n\nProbably you have to run it with ``sudo``.\n\nTesting\n-------\n\nTest are provided via `unittest`_.\n\nTo run them all:\n\n.. code:: shell\n\n    nosetests\n\nExamples\n--------\n\n.. code:: python\n\n    import cv2\n    from tvd import TotalVariationDenoising\n    import os\n\n    image = cv2.imread(os.path.dirname(__file__) + '/../assets/example.bmp')\n    image = cv2.cvtColor(image, cv2.COLOR_BGR2YCR_CB)\n    subject = TotalVariationDenoising(image[:, :, 0])\n    output = subject.generate()\n    cv2.imshow('Total Variation Denoising image', output / 255)\n    cv2.waitKey(0)\n    cv2.destroyAllWindows()\n\nThe conversion to *YCbCr* color space is optionally (sure?)\n\n\n.. _Total Variation Denoising: http://visl.technion.ac.il/~gilboa/PDE-filt/tv_denoising.html\n.. _Python 2.7: https://www.python.org/download/releases/2.7/\n.. _OpenCV: http://opencv.org/\n.. _Numpy: http://www.numpy.org/\n.. _numexpr: https://github.com/pydata/numexpr\n.. _unittest: https://docs.python.org/2/library/unittest.html\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PNProductions/py-tvd", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "py-tvd", "package_url": "https://pypi.org/project/py-tvd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/py-tvd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/PNProductions/py-tvd"}, "release_url": "https://pypi.org/project/py-tvd/1.0/", "requires_dist": null, "requires_python": null, "summary": "A total variation denoising implementation in python.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Python implementation of <a href=\"http://visl.technion.ac.il/~gilboa/PDE-filt/tv_denoising.html\" rel=\"nofollow\">Total Variation Denoising</a> method proposed by Guy Gilboa.</p>\n<blockquote>\nReduces the total-variation of the image.\nFilters out noise while preserving edges. Textures and fine-scale details are also removed.</blockquote>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>To run this code you need the following packages:</p>\n<ul>\n<li><a href=\"http://www.numpy.org/\" rel=\"nofollow\">Numpy</a></li>\n<li><a href=\"https://github.com/pydata/numexpr\" rel=\"nofollow\">Numexpr</a></li>\n<li><a href=\"http://opencv.org/\" rel=\"nofollow\">OpenCV</a> (Optional)</li>\n</ul>\n<p><strong>Everything but OpenCV can be installed via ``pip install -r requirements``</strong></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install everything just type:</p>\n<pre>pip install py-tvd\n</pre>\n<p>For manual installation:</p>\n<pre>python setup.py install\n</pre>\n<p>Probably you have to run it with <tt>sudo</tt>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Test are provided via <a href=\"https://docs.python.org/2/library/unittest.html\" rel=\"nofollow\">unittest</a>.</p>\n<p>To run them all:</p>\n<pre>nosetests\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tvd</span> <span class=\"kn\">import</span> <span class=\"n\">TotalVariationDenoising</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'/../assets/example.bmp'</span><span class=\"p\">)</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2YCR_CB</span><span class=\"p\">)</span>\n<span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">TotalVariationDenoising</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">subject</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s1\">'Total Variation Denoising image'</span><span class=\"p\">,</span> <span class=\"n\">output</span> <span class=\"o\">/</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>\n</pre>\n<p>The conversion to <em>YCbCr</em> color space is optionally (sure?)</p>\n</div>\n\n          </div>"}, "last_serial": 1292329, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "fb018897e93475cca9446380c12e47db", "sha256": "0eae27ffdec93257705672b948933261907d1175693eaff00409ce72d21d942a"}, "downloads": -1, "filename": "py-tvd-1.0.tar.gz", "has_sig": false, "md5_digest": "fb018897e93475cca9446380c12e47db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2863, "upload_time": "2014-11-03T03:48:58", "upload_time_iso_8601": "2014-11-03T03:48:58.524743Z", "url": "https://files.pythonhosted.org/packages/fb/6a/e896051e0eb54d2d7007be725f4b859d1bd6546a7a17df7302839ea17ac7/py-tvd-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb018897e93475cca9446380c12e47db", "sha256": "0eae27ffdec93257705672b948933261907d1175693eaff00409ce72d21d942a"}, "downloads": -1, "filename": "py-tvd-1.0.tar.gz", "has_sig": false, "md5_digest": "fb018897e93475cca9446380c12e47db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2863, "upload_time": "2014-11-03T03:48:58", "upload_time_iso_8601": "2014-11-03T03:48:58.524743Z", "url": "https://files.pythonhosted.org/packages/fb/6a/e896051e0eb54d2d7007be725f4b859d1bd6546a7a17df7302839ea17ac7/py-tvd-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:53 2020"}