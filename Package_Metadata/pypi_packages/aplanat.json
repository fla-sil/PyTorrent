{"info": {"author": "cwright", "author_email": "cwright@nanoporetech.com", "bugtrack_url": null, "classifiers": [], "description": "Aplanat\n=======\n\nAplanat provides a wrappers (templates) around the bokeh library to simplify\nthe plotting of common plots, with a particular focus on producing plots in\nJuypyter notebook environments.\n\nInstallation\n------------\n\nAplanat is easily installed in the standard python tradition:\n\n    git clone --recursive https://github.com/epi2me-labs/aplanat.git\n    cd aplanat\n    pip install -r requirements.txt\n    python setup.py install\n\nor via pip:\n\n    pip install aplanat.\n\n\nUsage\n-----\n\nAplanat does not try to be everything to everyone; this is both the power\nand downfall of a number of plotting libraries. Being overly generic leads\nto confusing documentation and boilerplate code. As much as the developers\nlove the declarative nature of `ggplot` in `R`, aplanat eschews this approach\nin search of something more transparent --- aplanat does not try to be too\nclever with your data.\n\nRather aplanat attempts to make constructing common plots as simple as possible\nby translating directly a users inputs into displayed data. Most plotting\nfunctions are of the form:\n\n    plot = plot_function(\n        [series_1_x, series_2_x, ...], [series_1_y, series_2_y, ...],\n        name=[series_1_name, series_2_name, ...],\n        colors=[series_1_color, series_1_color, ...])\n\nHere are some examples, plotting a kernel density estimate (a simple line plot\nhaving computed the transform of the data):\n\n    import aplanat\n    from aplanat import lines, util\n    data = [....]  # a list or numpy array\n    x_grid, pdf = util.kernel_density_estimate(data)\n    plot = lines.line([x_grid], [pdf])\n    aplanat.show(plot)  # to show the plot in a notebook\n\nTo add axis and plot titles:\n\n    plot = lines.line(...,\n       title='Chart title', x_axis_label='x-axis', y_axis_label='y-axis')\n\nTo plot multiple series just extend the lists given to the arguments (this\ntime using points):\n\n    from aplanat import points\n    x0, y0 = [...], [...]\n    x1, y1 = [...], [...]\n    plot = points.points([x0, x1], [y0, y1])\n\nPlotting a histogram:\n\n    from aplanat import hist\n    data = [...]   # a list or numpy array\n    plot = hist.histogram([data], bins=400)\n\nA simple bar plot illustrating counts of groups:\n\n    groups = [...]\n    counts = [...]\n    plot = bars.simple_bar(groups, counts)\n\nA set of boxplots illustrating how the distribution of variable changes (y-axis)\nwith a second grouping variable (the x-axis):\n\n    from aplanat import bars\n    values = [...] \n    groups = [...]  # as long as `values`, indicating the group for each value\n    plot = bars.boxplot_series(groups, values)\n\nPlot a heat map using a hexagonal binning (as seems to be popular these days):\n\n    from aplanat import spatial\n    x_values = [...]\n    y_values = [...]\n    plot = spatial.hexmap(x_values, y_values)\n\nTo show multiple plots, use `aplanat.grid` rather than `aplanat.show`:\n\n    plots = [hist.histogram(x) for x in (...)]\n    aplanat.grid(plots, ncol=3)\n\nThe plots will be shown filling a grid row-wise.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/epi2me-labs/aplanat", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aplanat", "package_url": "https://pypi.org/project/aplanat/", "platform": "", "project_url": "https://pypi.org/project/aplanat/", "project_urls": {"Homepage": "https://github.com/epi2me-labs/aplanat"}, "release_url": "https://pypi.org/project/aplanat/0.0.9/", "requires_dist": null, "requires_python": "", "summary": "Bokeh plotting API.", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Aplanat</h1>\n<p>Aplanat provides a wrappers (templates) around the bokeh library to simplify\nthe plotting of common plots, with a particular focus on producing plots in\nJuypyter notebook environments.</p>\n<h2>Installation</h2>\n<p>Aplanat is easily installed in the standard python tradition:</p>\n<pre><code>git clone --recursive https://github.com/epi2me-labs/aplanat.git\ncd aplanat\npip install -r requirements.txt\npython setup.py install\n</code></pre>\n<p>or via pip:</p>\n<pre><code>pip install aplanat.\n</code></pre>\n<h2>Usage</h2>\n<p>Aplanat does not try to be everything to everyone; this is both the power\nand downfall of a number of plotting libraries. Being overly generic leads\nto confusing documentation and boilerplate code. As much as the developers\nlove the declarative nature of <code>ggplot</code> in <code>R</code>, aplanat eschews this approach\nin search of something more transparent --- aplanat does not try to be too\nclever with your data.</p>\n<p>Rather aplanat attempts to make constructing common plots as simple as possible\nby translating directly a users inputs into displayed data. Most plotting\nfunctions are of the form:</p>\n<pre><code>plot = plot_function(\n    [series_1_x, series_2_x, ...], [series_1_y, series_2_y, ...],\n    name=[series_1_name, series_2_name, ...],\n    colors=[series_1_color, series_1_color, ...])\n</code></pre>\n<p>Here are some examples, plotting a kernel density estimate (a simple line plot\nhaving computed the transform of the data):</p>\n<pre><code>import aplanat\nfrom aplanat import lines, util\ndata = [....]  # a list or numpy array\nx_grid, pdf = util.kernel_density_estimate(data)\nplot = lines.line([x_grid], [pdf])\naplanat.show(plot)  # to show the plot in a notebook\n</code></pre>\n<p>To add axis and plot titles:</p>\n<pre><code>plot = lines.line(...,\n   title='Chart title', x_axis_label='x-axis', y_axis_label='y-axis')\n</code></pre>\n<p>To plot multiple series just extend the lists given to the arguments (this\ntime using points):</p>\n<pre><code>from aplanat import points\nx0, y0 = [...], [...]\nx1, y1 = [...], [...]\nplot = points.points([x0, x1], [y0, y1])\n</code></pre>\n<p>Plotting a histogram:</p>\n<pre><code>from aplanat import hist\ndata = [...]   # a list or numpy array\nplot = hist.histogram([data], bins=400)\n</code></pre>\n<p>A simple bar plot illustrating counts of groups:</p>\n<pre><code>groups = [...]\ncounts = [...]\nplot = bars.simple_bar(groups, counts)\n</code></pre>\n<p>A set of boxplots illustrating how the distribution of variable changes (y-axis)\nwith a second grouping variable (the x-axis):</p>\n<pre><code>from aplanat import bars\nvalues = [...] \ngroups = [...]  # as long as `values`, indicating the group for each value\nplot = bars.boxplot_series(groups, values)\n</code></pre>\n<p>Plot a heat map using a hexagonal binning (as seems to be popular these days):</p>\n<pre><code>from aplanat import spatial\nx_values = [...]\ny_values = [...]\nplot = spatial.hexmap(x_values, y_values)\n</code></pre>\n<p>To show multiple plots, use <code>aplanat.grid</code> rather than <code>aplanat.show</code>:</p>\n<pre><code>plots = [hist.histogram(x) for x in (...)]\naplanat.grid(plots, ncol=3)\n</code></pre>\n<p>The plots will be shown filling a grid row-wise.</p>\n\n          </div>"}, "last_serial": 7187544, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4b74e4e09b15ae5949269c383b359aad", "sha256": "7739d15bc55224bd34c26bd6bf32e82b5da902347e9adf41493e5b3b8ef95cab"}, "downloads": -1, "filename": "aplanat-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4b74e4e09b15ae5949269c383b359aad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5180, "upload_time": "2020-03-26T15:12:08", "upload_time_iso_8601": "2020-03-26T15:12:08.250793Z", "url": "https://files.pythonhosted.org/packages/6d/87/7d69e236ee4f66c18a23c016154813834ca07b60515af86e75be84bddd2d/aplanat-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "237bfc5db5ad34be126d4c0f24b82aef", "sha256": "08114c35315f6f9de8c4ffdad68c76c0f8bd98de232305ed1b97b154e565c3fb"}, "downloads": -1, "filename": "aplanat-0.0.2.tar.gz", "has_sig": false, "md5_digest": "237bfc5db5ad34be126d4c0f24b82aef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6298, "upload_time": "2020-03-30T16:08:37", "upload_time_iso_8601": "2020-03-30T16:08:37.035930Z", "url": "https://files.pythonhosted.org/packages/0a/44/7d44bd864e83a33b286fe3778989e6b4662b7f013ae9a4d0c793878b38a5/aplanat-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "87dc11d596342a60a07e2d89cb1462ef", "sha256": "f73a2d0982043eae5ba28f1943932f2a7b59d7314575ed81175776a5dcd4d8ae"}, "downloads": -1, "filename": "aplanat-0.0.3.tar.gz", "has_sig": false, "md5_digest": "87dc11d596342a60a07e2d89cb1462ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11791, "upload_time": "2020-03-30T16:43:33", "upload_time_iso_8601": "2020-03-30T16:43:33.495407Z", "url": "https://files.pythonhosted.org/packages/75/97/9d9134f062e4994f1028525bd96d42d93df935a2aaf2ce809baa1ee59353/aplanat-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f77fc2d05c3a3d4084fae8994507daf5", "sha256": "37d7707fec62dbbb6c6b1e7d5a8b45455945ae957a91357ebe19c532945e0bd0"}, "downloads": -1, "filename": "aplanat-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f77fc2d05c3a3d4084fae8994507daf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12371, "upload_time": "2020-04-08T14:32:55", "upload_time_iso_8601": "2020-04-08T14:32:55.380529Z", "url": "https://files.pythonhosted.org/packages/47/02/ec88430eee5ae7d9409d95c8db72ad10a12e1c97efdd22c8142dd7409342/aplanat-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6c44b736d9d09ba87b79400ff4af76b9", "sha256": "0124f76804edc41e25efb7b1cca41d9af953c229a83fea7a5b548d1d733b570e"}, "downloads": -1, "filename": "aplanat-0.0.5.tar.gz", "has_sig": false, "md5_digest": "6c44b736d9d09ba87b79400ff4af76b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15310, "upload_time": "2020-04-15T15:05:47", "upload_time_iso_8601": "2020-04-15T15:05:47.049537Z", "url": "https://files.pythonhosted.org/packages/9d/b7/44dac14f683c8aae709e436c5d1e2c07549faffcc8867921f68f3be0ea5a/aplanat-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "dccca8a8b4b9f888b73a473d529dc2b4", "sha256": "fcf16b49c499d62ada86fc8ff90c74e943d81e7982cb9a0a57ee2bd380f9fa19"}, "downloads": -1, "filename": "aplanat-0.0.6.tar.gz", "has_sig": false, "md5_digest": "dccca8a8b4b9f888b73a473d529dc2b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15315, "upload_time": "2020-04-15T20:20:43", "upload_time_iso_8601": "2020-04-15T20:20:43.299105Z", "url": "https://files.pythonhosted.org/packages/eb/a8/58961b2c9e5ac43ea0aad25f3ac347c99feb5fb86ea79abb183dad689df5/aplanat-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "13d6f1f63eab2485b27a07e3d658258e", "sha256": "8e33e76c02a36aac3ed39611af85cf74be2915d9c2c673040bcc3a7d36d2c144"}, "downloads": -1, "filename": "aplanat-0.0.7.tar.gz", "has_sig": false, "md5_digest": "13d6f1f63eab2485b27a07e3d658258e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15936, "upload_time": "2020-04-16T09:50:09", "upload_time_iso_8601": "2020-04-16T09:50:09.858926Z", "url": "https://files.pythonhosted.org/packages/e5/12/53b764dc8c19498fcdd0771201746790b06e554c615b70143a31be41734f/aplanat-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "a20332d57ca146d83e2102226be1e7cb", "sha256": "bea335e8455c6f4717b260874892f17a1470c9de8194d2b7012676a98fe6f2dd"}, "downloads": -1, "filename": "aplanat-0.0.8.tar.gz", "has_sig": false, "md5_digest": "a20332d57ca146d83e2102226be1e7cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16725, "upload_time": "2020-05-06T11:20:08", "upload_time_iso_8601": "2020-05-06T11:20:08.746275Z", "url": "https://files.pythonhosted.org/packages/4f/0d/aea7982fe7e24be05940d4a62e3a682c0e1bce25031134124f0885ea225d/aplanat-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "b9f54bf5087166eb1eb71a30ced39582", "sha256": "f6cb4aa1759774a604519b2cc1925a3c51b3c8a52598320e74bf52757229db82"}, "downloads": -1, "filename": "aplanat-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b9f54bf5087166eb1eb71a30ced39582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16841, "upload_time": "2020-05-07T11:14:56", "upload_time_iso_8601": "2020-05-07T11:14:56.141034Z", "url": "https://files.pythonhosted.org/packages/7f/f5/a3cf0d1c0267884c5a5f469b1918a724181c06926cac97f3934f0f173f85/aplanat-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9f54bf5087166eb1eb71a30ced39582", "sha256": "f6cb4aa1759774a604519b2cc1925a3c51b3c8a52598320e74bf52757229db82"}, "downloads": -1, "filename": "aplanat-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b9f54bf5087166eb1eb71a30ced39582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16841, "upload_time": "2020-05-07T11:14:56", "upload_time_iso_8601": "2020-05-07T11:14:56.141034Z", "url": "https://files.pythonhosted.org/packages/7f/f5/a3cf0d1c0267884c5a5f469b1918a724181c06926cac97f3934f0f173f85/aplanat-0.0.9.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:43 2020"}