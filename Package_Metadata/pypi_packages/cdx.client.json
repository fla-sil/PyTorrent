{"info": {"author": "Sean Kelly", "author_email": "sean.kelly@jpl.nasa.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database :: Front-Ends", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "**********\ncdx.client\n**********\n\n.. contents::\n\nCDX Client provides an API library and command-line tools for\naccessing CDX data.  CDX is the Climate Data Exchange, an effort of the Jet\nPropulsion Laboratory to create a virtual environment for the sharing of\nclimate data.\n\nInstallation\n************\n\nThis document tells you how to install cdx.client.\n\n\nQuick Instructions\n==================\n\nAs a user with administrative privileges, run::\n\n    easy_install cdx.client\n\nThat's it.\n\n\nFull Instructions\n=================\n\ncdx.client requires the Python_ programming language.  We recommend version 2.4\nor later.  As of this writing, 2.6 is the latest stable version.  If Python is\nnot yet installed on your system, you can find binary and and source\ndistributions from the Python website.\n\nTo test if a correct version of Python is available on your system, run::\n\n    python -V\n    \nYou should see output similar to::\n\n    Python 2.6\n    \nindicating the version of Python installed.  cdx.client also requires `Agile\nOODT`_.  OODT_ is Object Oriented Data Technology, a framework for metadata\nand data grids.  Agile OODT is a Python version of OODT that supports higher\nperformance and easier integration than the Java_ version.\n\nBy far the easiest, recommended, and encouraged way to install cdx.client is\nto use EasyInstall_.  If your Python installation has EasyInstall available to\nit, then this one command is all you need to run in order to download, build,\ninstall, and generate command-line tools all in one go for all users on your\nsystem::\n\n    easy_install cdx.client\n    \nBe sure to run that command as an administrative user.  For example, on Mac OS\nX and other Unix systems, you might need to run::\n\n    sudo easy_install cdx.client\n\nThat will also download and install all dependencies, including Agile OODT.\n\n\nExecutables\n-----------\n\nThe commands ``cdxls`` and ``cdxget`` will be generated and placed with your\nstandard installation directory for Python commands.  Usually, this is the\nsame location as the ``python`` executable itself.  For example, on Mac OS X\n10.5, the directory is::\n\n    /Library/Frameworks/Python.framework/Versions/Current/bin\n\nYou may want to add that directory to your shell's PATH variable, as well as\nforcing your shell to re-scan the PATH variable for new executables.\n\n\nInstalling EasyInstall\n----------------------\n\nIf you happen to be on a system where your Python installation lacks easy\ninstall, fret not.  Upgrading your system to gain EasyInstall's abilities is\nquite simple.  Follow these instructions:\n\n1.  Download http://peak.telecommunity.com/dist/ez_setup.py\n2.  As an administrative user, run the freshly-downloaded ez_setup.py file\n    using your system's Python.\n\nEasyInstall and its necessary libraries will be downloaded, built, and\ninstalled for you, and the ``easy_install`` executable generated.  The\nlocation of the ``easy_install`` executable is as described above.\n\n\nInstalling Without EasyInstall\n------------------------------\n\nIf EasyInstall is not available on your system, you can still make a proper\ninstallation of cdx.client. Follow these instructions:\n\n1.  Download the Agile OODT source distribution from\n    http://oodt.jpl.nasa.gov/dist/agile-oodt/oodt-0.0.1.tar.gz.\n    Substitute version numbers as appropriate.\n2.  Download the cdx.client source distribution from\n    http://cdx.jpl.nasa.gov/software/dist/cdx.client-0.0.3.tar.gz.\n    Substitute version numbers as appropriate.\n3.  Unpack each archive.\n4.  Change the current working directory to each newly-created subdirectory,\n    ``oodt-0.0.1`` and ``cdx.client-0.0.2``, again substituting version\n    numbers as appropriate.\n5.  As an administrative user, run:  ``python setup.py install`` in each\n    subdirectory.\n\n\nIssues and Questions\n====================\n\nTo report any problems with or ask for help about cdx.client, visit our\ncontact_  web page.\n\n\n.. References:\n.. _Agile OODT: http://agility.jpl.nasa.gov/\n.. _contact: http://cdx.jpl.nasa.gov/contact-info\n.. _EasyInstall: http://peak.telecommunity.com/DevCenter/EasyInstall\n.. _Java: http://tinyurl.com/5kng2h\n.. _OODT: http://oodt.jpl.nasa.gov/\n.. _Python: http://python.org/\n\nUsing CDX Client\n****************\n\nInstalling the CDX Client package makes available three things on your\ncomputer:\n\n``cdxls`` command\n    The ``cdxls`` command lets you list the contents of a CDX server from your\n    terminal prompt or a shell script.\n``cdxget`` command\n    The ``cdxget`` command lets you retrieve data from CDX from either your\n    terminal prompt or a shell script.\nCDX Library\n    The CDX Library is a Python-based API for using CDX servers.\n    \nThis document describes how to use the above three items, with special\nattention to the CDX Library.\n\n\nCommands\n========\n\nAfter installing the CDX Client package, two new command are made available on\nyour system, ``cdxls`` and ``cdxget``.  These commands enable you to list the\ncontents of the data on a CDX server and retrieve selected files from the\nserver.\n\nTo use these commands from your interactive prompt, you just need to make sure\nyour shell's PATH environment variable includes the directory where the\ncommands are installed.  On most systems, these two commands are installed in::\n\n    /usr/local/bin\n\nHowever, on Mac OS X, the installation location may be::\n\n    /Library/Frameworks/Python.framework/Versions/Current/bin\n    \nAnd on Windows, it may be::\n\n    c:\\Program Files\\Python\n    \nNote also that some interactive shells create a cache of commands in order to\nexecute your requests more quickly.  You may need to force your shell to\nre-build that cache.  The csh and tcsh shells are two such examples; you can\nmake these shells rebuild their caches by running the ``rehash`` command.\n\n\nUse from Shell Scripts\n----------------------\n\nThe ``cdxls`` and ``cdxget`` commands may be used from shell scripts as well.  The\nonly requirement for making these commands available to shell scripts is the\nsame as for interactive sessions:  the shell's PATH environment variable must\ninclude the directory that contains the ``cdxls`` and ``cdxget`` commands.\n\nHere is a sample shell script that retrieves the MLS Aura L2GP data files (and\nmetadata) files for HO2 and HOCl from day 325 in 2008::\n\n    #!/bin/sh\n    PATH=/usr/local/bin:/usr/bin:/bin; export PATH\n    CDX_SERVER=http://mlscdx.jpl.nasa.gov:8080/cdx/prod; export CDX_SERVER\n    \n    for kind in HO2 HOCl; do\n        for extension in he5 he5.met; do\n            cdxget 2008/325/MLS-Aura_L2GP-${kind}_v02-23-c01_2008d325.${extension}\n        done\n    done\n    \nThe above shell script assumes that ``cdxget`` will be found in\n``/usr/local/bin``, ``/usr/bin``, or ``/bin``.  It also sets the ``CDX_SERVER``\nenvironment variable to set what CDX server to talk to.  It then loops through\ntwo kinds of data (``HO2`` and ``HOCl``), and loops through two kinds of file\nextensions (``he5`` and ``he5.met``).  The results is it retrieves four files to\nthe current working directory, specifically:\n\n* 2008/325/MLS-Aura_L2GP-HO2_v02-23-c01_2008d325.he5\n* 2008/325/MLS-Aura_L2GP-HO2_v02-23-c01_2008d325.he5.met\n* 2008/325/MLS-Aura_L2GP-HOCl_v02-23-c01_2008d325.he5\n* 2008/325/MLS-Aura_L2GP-HOCl_v02-23-c01_2008d325.he5.met\n\n\nThe ``cdxsubset`` command may also be used from a shell script.  It is\nconfigured by two environment variables:\n\n* CDX_SUBSET_MODE - if set then local data wrapper mode will be used (remote\n  is assumed as default)\n* CDX_SERVER - set to the product server to talk to for subsetting\n\nSome example working commands are:\n\nSubset spatial bounding box from NCAR CCSM model output::\n\n    cdxsubset -b /esg/data18/commit/atm/da/hfls/ncar_ccsm3_0/run1/hfls_A2.Commit_1.CCSM.atmd.2000-01-01_cat_2039-12-31.nc\n\nSubset time range from NCAR CCSM model output::\n\n    cdxsubset -t /esg/data18/commit/atm/da/hfls/ncar_ccsm3_0/run1/hfls_A2.Commit_1.CCSM.atmd.2000-01-01_cat_2039-12-31.nc\n    \nGet time array variable data from the MLS L2 granule::\n\n    cdxsubset -p Time /mls/2005/100/MLS-Aura_L2GP-BrO_v01-51-c01_2005d100.he5\n\nGet spatial bounding box from AIRS level 2 granule::\n\n    cdxsubset -b /airs/data/s4pa/Aqua_AIRS_Level2/AIRX2RET.003/2007/005/AIRS.2007.01.05.240.L2.RetStd.v4.0.9.0.G07007180718.hdf\n\nSubset by lat lon and variable for an AIRS level 2 granule::\n\n    cdxsubset -p TAirStd --latitude-range=67.35:78.40 -longitude-range=172.226:176.10 /airs/2009/01/01/airx2ret/AIRS.2009.01.01.001.L2.RetStd.v5.2.2.0.G09002135510.hdf\n\nCDX Library\n===========\n\nThe CDX Library is a Python-based application programming interface (API) for\ncommunicating with CDX servers.  In fact, the two commands ``cdxls`` and\n``cdxget`` are implemented using the CDX Library.  If shell-script programming\nis not to your taste, and you know Python, then using the CDX Library may be\nright for you.\n\nThe CDX Library uses an object-oriented approach to model the contents of a\nCDX server.  Objects represent CDX files and directories, and you call methods\non those objects to determine file attributes, directory contents, or retrieve\na file's contents.\n\nThe remainder of this document describes the modules, classes, and functions\nthat comprise the CDX Library.  If you don't know Python, you may wish to skip\nthe rest.\n\n\nThe ``cdx`` Module\n------------------\n\nThe ``cdx`` module is a namespace module.  It provides no classes or functions.\nRather, it contains a single, nested module called ``client``.\n\n\nThe ``cdx.client`` Module\n-------------------------\n\nThe ``cdx.client`` module contains nested modules that provide the CDX Library.\nIt also contains implementations of the ``cdxls`` and ``cdxget`` commands.\n\n\nThe ``cdx.client.cdxfile`` Module\n---------------------------------\n\nThe ``cdx.client.cdxfile`` module is where all the action is.  It contains\nclasses and functions for communicating with and modeling the contents of CDX\nservers. It contains the following items:\n\n``CDXDirectory``\n    Objects of this class represent directories on a CDX server.  You can use\n    Python's iterator, length, and containment protocols to examine the\n    contents of the directory. They can also be sorted.\n``CDXFile``\n    Objects of this class represent files on a CDX server.  While you can\n    instantiate objects of this class, you'd typically instantiate a\n    CDXDirectory and examine its contents which will include CDXFile objects\n    for files in the directory and nested CDXDirectory objects for\n    subdirectories.  A CDXFile object also provides a method to let you\n    retrieve its data.\n``findFile``\n    The ``findFile`` function is a utility function that, given a starting\n    CDXDirectory and a path name, yields the matching CDXDirectory or CDXFile\n    on a CDX server.\n\n\nCDXDirectory Objects\n~~~~~~~~~~~~~~~~~~~~\n\n``CDXDirectory`` objects represent directories in a CDX server.  You can\ncreate these objects directly or you can use the ``findFile`` method in the\n``cdx.client.cdxfile`` module.\n\nclass CDXDirectory(*path*, *cdxURL* = None)\n    Create a ``CDXDirectory`` object with the given *path*.  You can also\n    specify the URL to a CDX server to use by passing in a string for\n    *cdxURL*.\nsort(*cmp* = cmp, *reverse* = False)\n    Return the contents of the directory, sorted, using the a comparison\n    function *cmp*, defaulting to Python's built-in ``cmp``.  If *reverse* is\n    True, reverse the order of the sort.  Comparison with *cmp* on ``CDXFile``\n    and ``CDXDirectory`` objects is by CDX server URL and by name.  You can\n    pass in your own *cmp* that, for example, sorts by file size.\nisFile()\n    Always returns False.\npath\n    The path name of the directory.\nname\n    The name of the directory; this is the last element of the path.\nsize\n    By convention sizes for directories are always zero.\n\n``CDXDirectory`` objects obey Python's protocols for hashing, comparison,\ncontainment testing, iteration, indexing, and length query.  Containment\ntesting with directories with with ``CDXDirectory`` objects, ``CDXFile``\nobjects, or plain strings::\n\n    >>> from cdx.client.cdxfile import CDXDirectory\n    >>> root = CDXDirectory('/', 'http://localhost:8192/cdx/prod')\n    >>> len(root)\n    3\n    >>> subdir = root['2005']\n    >>> subdir\n    CDXDirectory(path=/2005)\n    >>> subdir in root\n    True\n    >>> '2005' in root\n    True\n    >>> subdir < root\n    False\n    >>> subdir > root\n    True\n    >>> for i in root:\n    ...     print i\n    ...\n    /2008\n    /2007\n    /2005\n    >>> root.sort()\n    [CDXDirectory(path=/2005), CDXDirectory(path=/2007), CDXDirectory(path=/2008)]\n    \n\n``CDXFile`` Objects\n~~~~~~~~~~~~~~~~~~~\n\nTBD.\n\n\nChangelog\n*********\n\n1.3.1 - 10/19/11\n================\n\nThis release includes an updated version of the datawrappers \npackage (0.0.8) as specified in CDX-122.\n\nFor the issue tracker, see\nhttps://oodt.jpl.nasa.gov/jira/browse/CDX\n\n1.3.0 - 10/17/11\n================\n\nThis release fixes an important issue in the CDX regrid service \nand computes an average of the running sum of data points indexed \nby cube cell. See CDX-118 for more information.\n\nFor the issue tracker, see\nhttps://oodt.jpl.nasa.gov/jira/browse/CDX\n\n\n1.2.0 - 06/27/11\n================\n\nThis release provides tight integration with the ESG, and plugs \ninto its security infrastructure and adds a bunch of virtual \nroots for use in cdxregrid and cdxsubset for ESG data. See CDX-110\nand CDX-111 for more information.\n\nFor the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n\n1.1.0 - 11/13/2010\n==================\n\nThis release incorporates version 0.0.6 of the cdx.datawrappers package\nwhich includes CDX-103, which implements GetVariable by lat, lon, and \ntime. In turn this release also provides CDX-102, which incoprorates \nthis functionality into the basic cdxregrid functionality. At this point, \ncdxregrid is pretty much fully functional.\n\nFor the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n1.0.0 - 09/10/10\n================\n\nThis release made a minor improvement to the public cdxls API, exposing\nthe set of found and lost files from the listFiles function, taking away\nits function-local orchestration and exposing the lists of found and notfound \nfiles to the user. See CDX-93 for more information. This release additionally \nexposes the CDX MODIS product server via cdxls. See CDX-98 for more details. \nFinally, this release includes updates to fix CloudSat as a cdxsubset source, \nas described in CDX-99.\n\nFor the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n\n0.0.9 - 03/24/2010\n==================\n\nThis release includes improvements to cdxsubset, specifically the ability\nto print out the full numpy array returned from a DataWrapper. See \nCDX-82 for specific details. Additionally cdxsubset has been updated to expose\nthe subset by LatLon functionality per CDX-84 and CDX-85. Subset by range query\nallowing constraints to be specified was also included in this release (see \nCDX-86 for more information).\n\nFor the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n\n0.0.8 - Inclusion of improvements to cdxcd, virtual roots and new tools\n=======================================================================\n\nThis release includes improvements to cdxcd to make it work nicely \nwith cdx virtual roots, and includes integration with the other cdx client\ntoolkit including cdxls, cdxsubset and cdxget. See CDX-70 and CDX-71 for\nfurther details.\n\nFor the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n\n0.0.7 - Add Resource Files\n==========================\n\nRelease 0.0.6 was mis-configured and didn't include some important resource\nfiles.  This emergency release includes them!\n\n\n0.0.6 - Inclusion of cdxsubset and other tools, and some minor bug fixes\n========================================================================\n\nThis release includes the cdxsubset tool, as described in CDX-56.\nThis release also includes the cdxcd tool, as described in CDX-69.\nThis release also includes minor aestetic bug fixes that address pathing\nissues in cdxls, e.g., CDX-29.\n\nFor the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n\n0.0.5 - Repaired Unit Tests\n===========================\n\nThis release updates the unit tests and test data based on the changes in\n0.0.4 and the new behavior of actual product servers. In addition, it\nfixes some documentation problems (incorrect package name cdx-client\nwhich should've been cdx.client) in the INSTALL.txt file.\n\nThe sole bug report addressed in this release is CDX-45, \"Unit tests in\ncdx-client failing\". For the issue tracker, see\nhttp://oodt.jpl.nasa.gov/jira/browse/CDX.\n\n\n0.0.4 - Bugfix to 0.0.3 release\n===============================\n\nThis is a bugfix release to 0.0.3, which includes some error checking to\ndeal with some data format inconsistencies on the OODT OFSN product server\nend.\n\nJIRA issues addressed (see http://oodt.jpl.nasa.gov/jira/browse/CDX):\n\n* CDX-43 Directory structure shouldn't be preserved if cdxget is called\n  without the -r parameter\n* CDX-42 cdxget -r fails to retrieve MLS data\n* CDX-41 cdxls -R chokes if dir size not provided\n\n\n0.0.3 - Directory caching\n=========================\n\nThe major feature of this release is the ``cdx.client.dircache`` module which\nenables local-disk caching of a subset of a remote CDX product server's\ncontents.  It also introduces the concept of a ``cdx:`` scheme URL.  Such a\nURL has this form::\n\n    cdx://hostname[:port]/endpoint/prod/path/to/a/directory\n    \nwhere hostname is the name or IP address of a CDX product server, port is an\noptional port number on which the server is listening, endpoint is the\nWebGrid_  service identifier (typically just the string ``cdx``), prod is the\nfixed keyword ``prod``, and ``path/to/a/directory`` is an absolute path to a\ndirectory within that product server.\n\nSuch caching is intended to support the CCMValDiag_ software.\n\n\n0.0.2 - Bug fix for cdxls\n=========================\n\nThis release repairs a bug in cdxls that caused directories with only one item\nin them to not be listed properly.\n\n\n0.0.1 - URL specification\n=========================\n\nThis release provides support for a (-u url, --url=url) pair of command-line\noptions that enable specification of a specific URL to use, falling back to\nthe URL specified in the CDX_SERVER environment variable (and, if that's\nunset, then http://mlscdx.jpl.nasa.gov:8080/cdx/prod).  This supports two\nideas suggested in CDX-16 (the first two, not the third with a cdx:  style\nURL).\n\n\n0.0.0 - Initial\n===============\n\nThis is an initial release of cdx-client supporting minimal ``cdxls`` and\n``cdxget`` function.\n\n\n.. References:\n.. _WebGrid: http://agility.jpl.nasa.gov/products/agile-oodt/\n.. _CCMValDiag: http://www.pa.op.dlr.de/CCMVal/CCMVal_DiagnosticTool.html", "description_content_type": null, "docs_url": null, "download_url": "http://oodt.jpl.nasa.gov/dist/cdx-client", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://cdx.jpl.nasa.gov/software/cdx-client", "keywords": "climate data cdx python client", "license": "Copyright\n*********\n\nCopyright (c) 2008-2009 by the California Institute of Technology.  ALL RIGHTS\nRESERVED.\n\nThe Software is owned by Caltech/JPL and is protected by United States\ncopyright laws and applicable international treaties and/or conventions.  The\nUnited States Government may have prior rights to use some or all of the\nSoftware as determined under applicable contracts and license agreements with\nCaltech/JPL.\n\nThis software was developed at the Jet Propulsion Laboratory, an operating\ndivision of the California Institute of Technology and is not available for\nuse by any person, organization, or other entity without prior, specific\nwritten permission.", "maintainer": null, "maintainer_email": null, "name": "cdx.client", "package_url": "https://pypi.org/project/cdx.client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cdx.client/", "project_urls": {"Download": "http://oodt.jpl.nasa.gov/dist/cdx-client", "Homepage": "http://cdx.jpl.nasa.gov/software/cdx-client"}, "release_url": "https://pypi.org/project/cdx.client/1.3.1/", "requires_dist": null, "requires_python": null, "summary": "CDX Client", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id7\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#quick-instructions\" id=\"id8\" rel=\"nofollow\">Quick Instructions</a></li>\n<li><a href=\"#full-instructions\" id=\"id9\" rel=\"nofollow\">Full Instructions</a><ul>\n<li><a href=\"#executables\" id=\"id10\" rel=\"nofollow\">Executables</a></li>\n<li><a href=\"#installing-easyinstall\" id=\"id11\" rel=\"nofollow\">Installing EasyInstall</a></li>\n<li><a href=\"#installing-without-easyinstall\" id=\"id12\" rel=\"nofollow\">Installing Without EasyInstall</a></li>\n</ul>\n</li>\n<li><a href=\"#issues-and-questions\" id=\"id13\" rel=\"nofollow\">Issues and Questions</a></li>\n</ul>\n</li>\n<li><a href=\"#using-cdx-client\" id=\"id14\" rel=\"nofollow\">Using CDX Client</a><ul>\n<li><a href=\"#commands\" id=\"id15\" rel=\"nofollow\">Commands</a><ul>\n<li><a href=\"#use-from-shell-scripts\" id=\"id16\" rel=\"nofollow\">Use from Shell Scripts</a></li>\n</ul>\n</li>\n<li><a href=\"#cdx-library\" id=\"id17\" rel=\"nofollow\">CDX Library</a><ul>\n<li><a href=\"#the-cdx-module\" id=\"id18\" rel=\"nofollow\">The <tt>cdx</tt> Module</a></li>\n<li><a href=\"#the-cdx-client-module\" id=\"id19\" rel=\"nofollow\">The <tt>cdx.client</tt> Module</a></li>\n<li><a href=\"#the-cdx-client-cdxfile-module\" id=\"id20\" rel=\"nofollow\">The <tt>cdx.client.cdxfile</tt> Module</a><ul>\n<li><a href=\"#cdxdirectory-objects\" id=\"id21\" rel=\"nofollow\">CDXDirectory Objects</a></li>\n<li><a href=\"#cdxfile-objects\" id=\"id22\" rel=\"nofollow\"><tt>CDXFile</tt> Objects</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id23\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id24\" rel=\"nofollow\">1.3.1 - 10/19/11</a></li>\n<li><a href=\"#id2\" id=\"id25\" rel=\"nofollow\">1.3.0 - 10/17/11</a></li>\n<li><a href=\"#id3\" id=\"id26\" rel=\"nofollow\">1.2.0 - 06/27/11</a></li>\n<li><a href=\"#id4\" id=\"id27\" rel=\"nofollow\">1.1.0 - 11/13/2010</a></li>\n<li><a href=\"#id5\" id=\"id28\" rel=\"nofollow\">1.0.0 - 09/10/10</a></li>\n<li><a href=\"#id6\" id=\"id29\" rel=\"nofollow\">0.0.9 - 03/24/2010</a></li>\n<li><a href=\"#inclusion-of-improvements-to-cdxcd-virtual-roots-and-new-tools\" id=\"id30\" rel=\"nofollow\">0.0.8 - Inclusion of improvements to cdxcd, virtual roots and new tools</a></li>\n<li><a href=\"#add-resource-files\" id=\"id31\" rel=\"nofollow\">0.0.7 - Add Resource Files</a></li>\n<li><a href=\"#inclusion-of-cdxsubset-and-other-tools-and-some-minor-bug-fixes\" id=\"id32\" rel=\"nofollow\">0.0.6 - Inclusion of cdxsubset and other tools, and some minor bug fixes</a></li>\n<li><a href=\"#repaired-unit-tests\" id=\"id33\" rel=\"nofollow\">0.0.5 - Repaired Unit Tests</a></li>\n<li><a href=\"#bugfix-to-0-0-3-release\" id=\"id34\" rel=\"nofollow\">0.0.4 - Bugfix to 0.0.3 release</a></li>\n<li><a href=\"#directory-caching\" id=\"id35\" rel=\"nofollow\">0.0.3 - Directory caching</a></li>\n<li><a href=\"#bug-fix-for-cdxls\" id=\"id36\" rel=\"nofollow\">0.0.2 - Bug fix for cdxls</a></li>\n<li><a href=\"#url-specification\" id=\"id37\" rel=\"nofollow\">0.0.1 - URL specification</a></li>\n<li><a href=\"#initial\" id=\"id38\" rel=\"nofollow\">0.0.0 - Initial</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p>CDX Client provides an API library and command-line tools for\naccessing CDX data.  CDX is the Climate Data Exchange, an effort of the Jet\nPropulsion Laboratory to create a virtual environment for the sharing of\nclimate data.</p>\n<div id=\"installation\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Installation</a></h2>\n<p>This document tells you how to install cdx.client.</p>\n<div id=\"quick-instructions\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Quick Instructions</a></h3>\n<p>As a user with administrative privileges, run:</p>\n<pre>easy_install cdx.client\n</pre>\n<p>That\u2019s it.</p>\n</div>\n<div id=\"full-instructions\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Full Instructions</a></h3>\n<p>cdx.client requires the <a href=\"http://python.org/\" rel=\"nofollow\">Python</a> programming language.  We recommend version 2.4\nor later.  As of this writing, 2.6 is the latest stable version.  If Python is\nnot yet installed on your system, you can find binary and and source\ndistributions from the Python website.</p>\n<p>To test if a correct version of Python is available on your system, run:</p>\n<pre>python -V\n</pre>\n<p>You should see output similar to:</p>\n<pre>Python 2.6\n</pre>\n<p>indicating the version of Python installed.  cdx.client also requires <a href=\"http://agility.jpl.nasa.gov/\" rel=\"nofollow\">Agile\nOODT</a>.  <a href=\"http://oodt.jpl.nasa.gov/\" rel=\"nofollow\">OODT</a> is Object Oriented Data Technology, a framework for metadata\nand data grids.  Agile OODT is a Python version of OODT that supports higher\nperformance and easier integration than the <a href=\"http://tinyurl.com/5kng2h\" rel=\"nofollow\">Java</a> version.</p>\n<p>By far the easiest, recommended, and encouraged way to install cdx.client is\nto use <a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">EasyInstall</a>.  If your Python installation has EasyInstall available to\nit, then this one command is all you need to run in order to download, build,\ninstall, and generate command-line tools all in one go for all users on your\nsystem:</p>\n<pre>easy_install cdx.client\n</pre>\n<p>Be sure to run that command as an administrative user.  For example, on Mac OS\nX and other Unix systems, you might need to run:</p>\n<pre>sudo easy_install cdx.client\n</pre>\n<p>That will also download and install all dependencies, including Agile OODT.</p>\n<div id=\"executables\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Executables</a></h4>\n<p>The commands <tt>cdxls</tt> and <tt>cdxget</tt> will be generated and placed with your\nstandard installation directory for Python commands.  Usually, this is the\nsame location as the <tt>python</tt> executable itself.  For example, on Mac OS X\n10.5, the directory is:</p>\n<pre>/Library/Frameworks/Python.framework/Versions/Current/bin\n</pre>\n<p>You may want to add that directory to your shell\u2019s PATH variable, as well as\nforcing your shell to re-scan the PATH variable for new executables.</p>\n</div>\n<div id=\"installing-easyinstall\">\n<h4><a href=\"#id11\" rel=\"nofollow\">Installing EasyInstall</a></h4>\n<p>If you happen to be on a system where your Python installation lacks easy\ninstall, fret not.  Upgrading your system to gain EasyInstall\u2019s abilities is\nquite simple.  Follow these instructions:</p>\n<ol>\n<li>Download <a href=\"http://peak.telecommunity.com/dist/ez_setup.py\" rel=\"nofollow\">http://peak.telecommunity.com/dist/ez_setup.py</a></li>\n<li>As an administrative user, run the freshly-downloaded ez_setup.py file\nusing your system\u2019s Python.</li>\n</ol>\n<p>EasyInstall and its necessary libraries will be downloaded, built, and\ninstalled for you, and the <tt>easy_install</tt> executable generated.  The\nlocation of the <tt>easy_install</tt> executable is as described above.</p>\n</div>\n<div id=\"installing-without-easyinstall\">\n<h4><a href=\"#id12\" rel=\"nofollow\">Installing Without EasyInstall</a></h4>\n<p>If EasyInstall is not available on your system, you can still make a proper\ninstallation of cdx.client. Follow these instructions:</p>\n<ol>\n<li>Download the Agile OODT source distribution from\n<a href=\"http://oodt.jpl.nasa.gov/dist/agile-oodt/oodt-0.0.1.tar.gz\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/dist/agile-oodt/oodt-0.0.1.tar.gz</a>.\nSubstitute version numbers as appropriate.</li>\n<li>Download the cdx.client source distribution from\n<a href=\"http://cdx.jpl.nasa.gov/software/dist/cdx.client-0.0.3.tar.gz\" rel=\"nofollow\">http://cdx.jpl.nasa.gov/software/dist/cdx.client-0.0.3.tar.gz</a>.\nSubstitute version numbers as appropriate.</li>\n<li>Unpack each archive.</li>\n<li>Change the current working directory to each newly-created subdirectory,\n<tt><span class=\"pre\">oodt-0.0.1</span></tt> and <tt><span class=\"pre\">cdx.client-0.0.2</span></tt>, again substituting version\nnumbers as appropriate.</li>\n<li>As an administrative user, run:  <tt>python setup.py install</tt> in each\nsubdirectory.</li>\n</ol>\n</div>\n</div>\n<div id=\"issues-and-questions\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Issues and Questions</a></h3>\n<p>To report any problems with or ask for help about cdx.client, visit our\n<a href=\"http://cdx.jpl.nasa.gov/contact-info\" rel=\"nofollow\">contact</a>  web page.</p>\n</div>\n</div>\n<div id=\"using-cdx-client\">\n<h2><a href=\"#id14\" rel=\"nofollow\">Using CDX Client</a></h2>\n<p>Installing the CDX Client package makes available three things on your\ncomputer:</p>\n<dl>\n<dt><tt>cdxls</tt> command</dt>\n<dd>The <tt>cdxls</tt> command lets you list the contents of a CDX server from your\nterminal prompt or a shell script.</dd>\n<dt><tt>cdxget</tt> command</dt>\n<dd>The <tt>cdxget</tt> command lets you retrieve data from CDX from either your\nterminal prompt or a shell script.</dd>\n<dt>CDX Library</dt>\n<dd>The CDX Library is a Python-based API for using CDX servers.</dd>\n</dl>\n<p>This document describes how to use the above three items, with special\nattention to the CDX Library.</p>\n<div id=\"commands\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Commands</a></h3>\n<p>After installing the CDX Client package, two new command are made available on\nyour system, <tt>cdxls</tt> and <tt>cdxget</tt>.  These commands enable you to list the\ncontents of the data on a CDX server and retrieve selected files from the\nserver.</p>\n<p>To use these commands from your interactive prompt, you just need to make sure\nyour shell\u2019s PATH environment variable includes the directory where the\ncommands are installed.  On most systems, these two commands are installed in:</p>\n<pre>/usr/local/bin\n</pre>\n<p>However, on Mac OS X, the installation location may be:</p>\n<pre>/Library/Frameworks/Python.framework/Versions/Current/bin\n</pre>\n<p>And on Windows, it may be:</p>\n<pre>c:\\Program Files\\Python\n</pre>\n<p>Note also that some interactive shells create a cache of commands in order to\nexecute your requests more quickly.  You may need to force your shell to\nre-build that cache.  The csh and tcsh shells are two such examples; you can\nmake these shells rebuild their caches by running the <tt>rehash</tt> command.</p>\n<div id=\"use-from-shell-scripts\">\n<h4><a href=\"#id16\" rel=\"nofollow\">Use from Shell Scripts</a></h4>\n<p>The <tt>cdxls</tt> and <tt>cdxget</tt> commands may be used from shell scripts as well.  The\nonly requirement for making these commands available to shell scripts is the\nsame as for interactive sessions:  the shell\u2019s PATH environment variable must\ninclude the directory that contains the <tt>cdxls</tt> and <tt>cdxget</tt> commands.</p>\n<p>Here is a sample shell script that retrieves the MLS Aura L2GP data files (and\nmetadata) files for HO2 and HOCl from day 325 in 2008:</p>\n<pre>#!/bin/sh\nPATH=/usr/local/bin:/usr/bin:/bin; export PATH\nCDX_SERVER=http://mlscdx.jpl.nasa.gov:8080/cdx/prod; export CDX_SERVER\n\nfor kind in HO2 HOCl; do\n    for extension in he5 he5.met; do\n        cdxget 2008/325/MLS-Aura_L2GP-${kind}_v02-23-c01_2008d325.${extension}\n    done\ndone\n</pre>\n<p>The above shell script assumes that <tt>cdxget</tt> will be found in\n<tt>/usr/local/bin</tt>, <tt>/usr/bin</tt>, or <tt>/bin</tt>.  It also sets the <tt>CDX_SERVER</tt>\nenvironment variable to set what CDX server to talk to.  It then loops through\ntwo kinds of data (<tt>HO2</tt> and <tt>HOCl</tt>), and loops through two kinds of file\nextensions (<tt>he5</tt> and <tt>he5.met</tt>).  The results is it retrieves four files to\nthe current working directory, specifically:</p>\n<ul>\n<li>2008/325/MLS-Aura_L2GP-HO2_v02-23-c01_2008d325.he5</li>\n<li>2008/325/MLS-Aura_L2GP-HO2_v02-23-c01_2008d325.he5.met</li>\n<li>2008/325/MLS-Aura_L2GP-HOCl_v02-23-c01_2008d325.he5</li>\n<li>2008/325/MLS-Aura_L2GP-HOCl_v02-23-c01_2008d325.he5.met</li>\n</ul>\n<p>The <tt>cdxsubset</tt> command may also be used from a shell script.  It is\nconfigured by two environment variables:</p>\n<ul>\n<li>CDX_SUBSET_MODE - if set then local data wrapper mode will be used (remote\nis assumed as default)</li>\n<li>CDX_SERVER - set to the product server to talk to for subsetting</li>\n</ul>\n<p>Some example working commands are:</p>\n<p>Subset spatial bounding box from NCAR CCSM model output:</p>\n<pre>cdxsubset -b /esg/data18/commit/atm/da/hfls/ncar_ccsm3_0/run1/hfls_A2.Commit_1.CCSM.atmd.2000-01-01_cat_2039-12-31.nc\n</pre>\n<p>Subset time range from NCAR CCSM model output:</p>\n<pre>cdxsubset -t /esg/data18/commit/atm/da/hfls/ncar_ccsm3_0/run1/hfls_A2.Commit_1.CCSM.atmd.2000-01-01_cat_2039-12-31.nc\n</pre>\n<p>Get time array variable data from the MLS L2 granule:</p>\n<pre>cdxsubset -p Time /mls/2005/100/MLS-Aura_L2GP-BrO_v01-51-c01_2005d100.he5\n</pre>\n<p>Get spatial bounding box from AIRS level 2 granule:</p>\n<pre>cdxsubset -b /airs/data/s4pa/Aqua_AIRS_Level2/AIRX2RET.003/2007/005/AIRS.2007.01.05.240.L2.RetStd.v4.0.9.0.G07007180718.hdf\n</pre>\n<p>Subset by lat lon and variable for an AIRS level 2 granule:</p>\n<pre>cdxsubset -p TAirStd --latitude-range=67.35:78.40 -longitude-range=172.226:176.10 /airs/2009/01/01/airx2ret/AIRS.2009.01.01.001.L2.RetStd.v5.2.2.0.G09002135510.hdf\n</pre>\n</div>\n</div>\n<div id=\"cdx-library\">\n<h3><a href=\"#id17\" rel=\"nofollow\">CDX Library</a></h3>\n<p>The CDX Library is a Python-based application programming interface (API) for\ncommunicating with CDX servers.  In fact, the two commands <tt>cdxls</tt> and\n<tt>cdxget</tt> are implemented using the CDX Library.  If shell-script programming\nis not to your taste, and you know Python, then using the CDX Library may be\nright for you.</p>\n<p>The CDX Library uses an object-oriented approach to model the contents of a\nCDX server.  Objects represent CDX files and directories, and you call methods\non those objects to determine file attributes, directory contents, or retrieve\na file\u2019s contents.</p>\n<p>The remainder of this document describes the modules, classes, and functions\nthat comprise the CDX Library.  If you don\u2019t know Python, you may wish to skip\nthe rest.</p>\n<div id=\"the-cdx-module\">\n<h4><a href=\"#id18\" rel=\"nofollow\">The <tt>cdx</tt> Module</a></h4>\n<p>The <tt>cdx</tt> module is a namespace module.  It provides no classes or functions.\nRather, it contains a single, nested module called <tt>client</tt>.</p>\n</div>\n<div id=\"the-cdx-client-module\">\n<h4><a href=\"#id19\" rel=\"nofollow\">The <tt>cdx.client</tt> Module</a></h4>\n<p>The <tt>cdx.client</tt> module contains nested modules that provide the CDX Library.\nIt also contains implementations of the <tt>cdxls</tt> and <tt>cdxget</tt> commands.</p>\n</div>\n<div id=\"the-cdx-client-cdxfile-module\">\n<h4><a href=\"#id20\" rel=\"nofollow\">The <tt>cdx.client.cdxfile</tt> Module</a></h4>\n<p>The <tt>cdx.client.cdxfile</tt> module is where all the action is.  It contains\nclasses and functions for communicating with and modeling the contents of CDX\nservers. It contains the following items:</p>\n<dl>\n<dt><tt>CDXDirectory</tt></dt>\n<dd>Objects of this class represent directories on a CDX server.  You can use\nPython\u2019s iterator, length, and containment protocols to examine the\ncontents of the directory. They can also be sorted.</dd>\n<dt><tt>CDXFile</tt></dt>\n<dd>Objects of this class represent files on a CDX server.  While you can\ninstantiate objects of this class, you\u2019d typically instantiate a\nCDXDirectory and examine its contents which will include CDXFile objects\nfor files in the directory and nested CDXDirectory objects for\nsubdirectories.  A CDXFile object also provides a method to let you\nretrieve its data.</dd>\n<dt><tt>findFile</tt></dt>\n<dd>The <tt>findFile</tt> function is a utility function that, given a starting\nCDXDirectory and a path name, yields the matching CDXDirectory or CDXFile\non a CDX server.</dd>\n</dl>\n<div id=\"cdxdirectory-objects\">\n<h5><a href=\"#id21\" rel=\"nofollow\">CDXDirectory Objects</a></h5>\n<p><tt>CDXDirectory</tt> objects represent directories in a CDX server.  You can\ncreate these objects directly or you can use the <tt>findFile</tt> method in the\n<tt>cdx.client.cdxfile</tt> module.</p>\n<dl>\n<dt>class CDXDirectory(<em>path</em>, <em>cdxURL</em> = None)</dt>\n<dd>Create a <tt>CDXDirectory</tt> object with the given <em>path</em>.  You can also\nspecify the URL to a CDX server to use by passing in a string for\n<em>cdxURL</em>.</dd>\n<dt>sort(<em>cmp</em> = cmp, <em>reverse</em> = False)</dt>\n<dd>Return the contents of the directory, sorted, using the a comparison\nfunction <em>cmp</em>, defaulting to Python\u2019s built-in <tt>cmp</tt>.  If <em>reverse</em> is\nTrue, reverse the order of the sort.  Comparison with <em>cmp</em> on <tt>CDXFile</tt>\nand <tt>CDXDirectory</tt> objects is by CDX server URL and by name.  You can\npass in your own <em>cmp</em> that, for example, sorts by file size.</dd>\n<dt>isFile()</dt>\n<dd>Always returns False.</dd>\n<dt>path</dt>\n<dd>The path name of the directory.</dd>\n<dt>name</dt>\n<dd>The name of the directory; this is the last element of the path.</dd>\n<dt>size</dt>\n<dd>By convention sizes for directories are always zero.</dd>\n</dl>\n<p><tt>CDXDirectory</tt> objects obey Python\u2019s protocols for hashing, comparison,\ncontainment testing, iteration, indexing, and length query.  Containment\ntesting with directories with with <tt>CDXDirectory</tt> objects, <tt>CDXFile</tt>\nobjects, or plain strings:</p>\n<pre>&gt;&gt;&gt; from cdx.client.cdxfile import CDXDirectory\n&gt;&gt;&gt; root = CDXDirectory('/', 'http://localhost:8192/cdx/prod')\n&gt;&gt;&gt; len(root)\n3\n&gt;&gt;&gt; subdir = root['2005']\n&gt;&gt;&gt; subdir\nCDXDirectory(path=/2005)\n&gt;&gt;&gt; subdir in root\nTrue\n&gt;&gt;&gt; '2005' in root\nTrue\n&gt;&gt;&gt; subdir &lt; root\nFalse\n&gt;&gt;&gt; subdir &gt; root\nTrue\n&gt;&gt;&gt; for i in root:\n...     print i\n...\n/2008\n/2007\n/2005\n&gt;&gt;&gt; root.sort()\n[CDXDirectory(path=/2005), CDXDirectory(path=/2007), CDXDirectory(path=/2008)]\n</pre>\n</div>\n<div id=\"cdxfile-objects\">\n<h5><a href=\"#id22\" rel=\"nofollow\"><tt>CDXFile</tt> Objects</a></h5>\n<p>TBD.</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id24\" rel=\"nofollow\">1.3.1 - 10/19/11</a></h3>\n<p>This release includes an updated version of the datawrappers\npackage (0.0.8) as specified in CDX-122.</p>\n<p>For the issue tracker, see\n<a href=\"https://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">https://oodt.jpl.nasa.gov/jira/browse/CDX</a></p>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id25\" rel=\"nofollow\">1.3.0 - 10/17/11</a></h3>\n<p>This release fixes an important issue in the CDX regrid service\nand computes an average of the running sum of data points indexed\nby cube cell. See CDX-118 for more information.</p>\n<p>For the issue tracker, see\n<a href=\"https://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">https://oodt.jpl.nasa.gov/jira/browse/CDX</a></p>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id26\" rel=\"nofollow\">1.2.0 - 06/27/11</a></h3>\n<p>This release provides tight integration with the ESG, and plugs\ninto its security infrastructure and adds a bunch of virtual\nroots for use in cdxregrid and cdxsubset for ESG data. See CDX-110\nand CDX-111 for more information.</p>\n<p>For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id27\" rel=\"nofollow\">1.1.0 - 11/13/2010</a></h3>\n<p>This release incorporates version 0.0.6 of the cdx.datawrappers package\nwhich includes CDX-103, which implements GetVariable by lat, lon, and\ntime. In turn this release also provides CDX-102, which incoprorates\nthis functionality into the basic cdxregrid functionality. At this point,\ncdxregrid is pretty much fully functional.</p>\n<p>For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.0.0 - 09/10/10</a></h3>\n<p>This release made a minor improvement to the public cdxls API, exposing\nthe set of found and lost files from the listFiles function, taking away\nits function-local orchestration and exposing the lists of found and notfound\nfiles to the user. See CDX-93 for more information. This release additionally\nexposes the CDX MODIS product server via cdxls. See CDX-98 for more details.\nFinally, this release includes updates to fix CloudSat as a cdxsubset source,\nas described in CDX-99.</p>\n<p>For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id29\" rel=\"nofollow\">0.0.9 - 03/24/2010</a></h3>\n<p>This release includes improvements to cdxsubset, specifically the ability\nto print out the full numpy array returned from a DataWrapper. See\nCDX-82 for specific details. Additionally cdxsubset has been updated to expose\nthe subset by LatLon functionality per CDX-84 and CDX-85. Subset by range query\nallowing constraints to be specified was also included in this release (see\nCDX-86 for more information).</p>\n<p>For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"inclusion-of-improvements-to-cdxcd-virtual-roots-and-new-tools\">\n<h3><a href=\"#id30\" rel=\"nofollow\">0.0.8 - Inclusion of improvements to cdxcd, virtual roots and new tools</a></h3>\n<p>This release includes improvements to cdxcd to make it work nicely\nwith cdx virtual roots, and includes integration with the other cdx client\ntoolkit including cdxls, cdxsubset and cdxget. See CDX-70 and CDX-71 for\nfurther details.</p>\n<p>For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"add-resource-files\">\n<h3><a href=\"#id31\" rel=\"nofollow\">0.0.7 - Add Resource Files</a></h3>\n<p>Release 0.0.6 was mis-configured and didn\u2019t include some important resource\nfiles.  This emergency release includes them!</p>\n</div>\n<div id=\"inclusion-of-cdxsubset-and-other-tools-and-some-minor-bug-fixes\">\n<h3><a href=\"#id32\" rel=\"nofollow\">0.0.6 - Inclusion of cdxsubset and other tools, and some minor bug fixes</a></h3>\n<p>This release includes the cdxsubset tool, as described in CDX-56.\nThis release also includes the cdxcd tool, as described in CDX-69.\nThis release also includes minor aestetic bug fixes that address pathing\nissues in cdxls, e.g., CDX-29.</p>\n<p>For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"repaired-unit-tests\">\n<h3><a href=\"#id33\" rel=\"nofollow\">0.0.5 - Repaired Unit Tests</a></h3>\n<p>This release updates the unit tests and test data based on the changes in\n0.0.4 and the new behavior of actual product servers. In addition, it\nfixes some documentation problems (incorrect package name cdx-client\nwhich should\u2019ve been cdx.client) in the INSTALL.txt file.</p>\n<p>The sole bug report addressed in this release is CDX-45, \u201cUnit tests in\ncdx-client failing\u201d. For the issue tracker, see\n<a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>.</p>\n</div>\n<div id=\"bugfix-to-0-0-3-release\">\n<h3><a href=\"#id34\" rel=\"nofollow\">0.0.4 - Bugfix to 0.0.3 release</a></h3>\n<p>This is a bugfix release to 0.0.3, which includes some error checking to\ndeal with some data format inconsistencies on the OODT OFSN product server\nend.</p>\n<p>JIRA issues addressed (see <a href=\"http://oodt.jpl.nasa.gov/jira/browse/CDX\" rel=\"nofollow\">http://oodt.jpl.nasa.gov/jira/browse/CDX</a>):</p>\n<ul>\n<li>CDX-43 Directory structure shouldn\u2019t be preserved if cdxget is called\nwithout the -r parameter</li>\n<li>CDX-42 cdxget -r fails to retrieve MLS data</li>\n<li>CDX-41 cdxls -R chokes if dir size not provided</li>\n</ul>\n</div>\n<div id=\"directory-caching\">\n<h3><a href=\"#id35\" rel=\"nofollow\">0.0.3 - Directory caching</a></h3>\n<p>The major feature of this release is the <tt>cdx.client.dircache</tt> module which\nenables local-disk caching of a subset of a remote CDX product server\u2019s\ncontents.  It also introduces the concept of a <tt>cdx:</tt> scheme URL.  Such a\nURL has this form:</p>\n<pre>cdx://hostname[:port]/endpoint/prod/path/to/a/directory\n</pre>\n<p>where hostname is the name or IP address of a CDX product server, port is an\noptional port number on which the server is listening, endpoint is the\n<a href=\"http://agility.jpl.nasa.gov/products/agile-oodt/\" rel=\"nofollow\">WebGrid</a>  service identifier (typically just the string <tt>cdx</tt>), prod is the\nfixed keyword <tt>prod</tt>, and <tt>path/to/a/directory</tt> is an absolute path to a\ndirectory within that product server.</p>\n<p>Such caching is intended to support the <a href=\"http://www.pa.op.dlr.de/CCMVal/CCMVal_DiagnosticTool.html\" rel=\"nofollow\">CCMValDiag</a> software.</p>\n</div>\n<div id=\"bug-fix-for-cdxls\">\n<h3><a href=\"#id36\" rel=\"nofollow\">0.0.2 - Bug fix for cdxls</a></h3>\n<p>This release repairs a bug in cdxls that caused directories with only one item\nin them to not be listed properly.</p>\n</div>\n<div id=\"url-specification\">\n<h3><a href=\"#id37\" rel=\"nofollow\">0.0.1 - URL specification</a></h3>\n<p>This release provides support for a (-u url, \u2013url=url) pair of command-line\noptions that enable specification of a specific URL to use, falling back to\nthe URL specified in the CDX_SERVER environment variable (and, if that\u2019s\nunset, then <a href=\"http://mlscdx.jpl.nasa.gov:8080/cdx/prod\" rel=\"nofollow\">http://mlscdx.jpl.nasa.gov:8080/cdx/prod</a>).  This supports two\nideas suggested in CDX-16 (the first two, not the third with a cdx:  style\nURL).</p>\n</div>\n<div id=\"initial\">\n<h3><a href=\"#id38\" rel=\"nofollow\">0.0.0 - Initial</a></h3>\n<p>This is an initial release of cdx-client supporting minimal <tt>cdxls</tt> and\n<tt>cdxget</tt> function.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 334676, "releases": {"0.0.0": [], "0.0.0.dev-r4691": [], "0.0.1": [], "0.0.2": [], "0.0.4.dev-r5660": [], "0.0.5": [], "0.0.6": [], "0.0.7": [], "0.0.7.dev-r7006": [], "0.0.8": [], "0.0.9": [], "1.0.0": [], "1.1.0": [], "1.2.0": [], "1.3.0": [], "1.3.1": []}, "urls": [], "timestamp": "Thu May  7 22:34:54 2020"}