{"info": {"author": "Jan Hermann", "author_email": "dev@jan.hermann.name", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Fortran", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "# Libmbd\n\n[![build](https://img.shields.io/travis/jhrmnn/libmbd/master.svg)](https://travis-ci.org/jhrmnn/libmbd)\n[![coverage](https://img.shields.io/codecov/c/github/jhrmnn/libmbd.svg)](https://codecov.io/gh/jhrmnn/libmbd)\n![python](https://img.shields.io/pypi/pyversions/pymbd.svg)\n[![release](https://img.shields.io/github/release/jhrmnn/libmbd.svg)](https://github.com/jhrmnn/libmbd/releases)\n[![conda](https://img.shields.io/conda/v/libmbd/pymbd.svg)](https://anaconda.org/libmbd/pymbd)\n[![pypi](https://img.shields.io/pypi/v/pymbd.svg)](https://pypi.org/project/pymbd/)\n[![commits since](https://img.shields.io/github/commits-since/jhrmnn/libmbd/latest.svg)](https://github.com/jhrmnn/libmbd/releases)\n[![last commit](https://img.shields.io/github/last-commit/jhrmnn/libmbd.svg)](https://github.com/jhrmnn/libmbd/commits/master)\n[![license](https://img.shields.io/github/license/jhrmnn/libmbd.svg)](https://github.com/jhrmnn/libmbd/blob/master/LICENSE)\n[![code style](https://img.shields.io/badge/code%20style-black-202020.svg)](https://github.com/ambv/black)\n\nLibmbd contains implementations of the [many-body dispersion](http://dx.doi.org/10.1063/1.4865104) (MBD) method in several programming languages and frameworks:\n\n- The Fortran implementation is the reference, most advanced implementation, with support for analytical gradients and distributed parallelism, and additional functionality beyond the MBD method itself. It provides a low-level and a high-level Fortran API, and a C API. Furthermore, Python bindings to the C API are provided.\n- The Python/Numpy implementation is intended for prototyping, and as a high-level language reference.\n- The Python/Tensorflow implementation is an experiment that should enable rapid prototyping of machine learning applications with MBD.\n\nThe Python-based implementations as well as Python bindings to the Libmbd C API are accessible from the Python package called Pymbd.\n\n## Installing Pymbd\n\nThe easiest way to get Pymbd is to install the Pymbd [Conda](https://conda.io/docs/) package, which ships with pre-built Libmbd.\n\n```\nconda install -c libmbd pymbd\n```\n\nAlternatively, if you have Libmbd installed on your system (see below), you can install Pymbd via Pip, in which case it links against the installed Libmbd. To support Libmbd built with ScaLAPACK/MPI, the `MPI` extras is required.\n\n```\npip install pymbd  # or pymbd[MPI]\n```\n\nIn both cases, tests can be run with Pytest.\n\n```\npytest -v --durations=3 --pyargs pymbd\n```\n\nIf you don\u2019t need the Fortran bindings in Pymbd, you can install it without the C extension, in which case `pymbd.fortran` becomes unimportable\n\n```\npip install pymbd --install-option=\"--no-ext\"\n```\n\n## Installing Libmbd\n\nLibmbd uses CMake for building and installation, and requires a Fortran compiler, LAPACK, and optionally ScaLAPACK/MPI.\n\nOn Ubuntu:\n\n```bash\napt-get install gfortran libblas-dev liblapack-dev [mpi-default-dev mpi-default-bin libscalapack-mpi-dev]\n```\n\nOn macOS:\n\n```bash\nbrew install gcc [open-mpi scalapack]\n```\n\nThe building and installation can then proceed with\n\n```\ngit clone https://github.com/jhrmnn/libmbd.git && cd libmbd\nmkdir build && cd build\ncmake .. [-DENABLE_SCALAPACK_MPI=ON]\nmake\nmake install\n```\n\nThis installs the Libmbd shared library, C API header file, and high-level Fortran API module file.\n\nTests can be run with\n\n```\nmake check\n```\n\n## Examples\n\n```python\nfrom pymbd import mbd_energy_species, ang\nfrom pymbd.fortran import MBDCalc\n\nene_py = mbd_energy_species(  # pure Python implementation\n    [(0, 0, 0), (0, 0, 4*ang)], ['Ar', 'Ar'], [1, 1], 0.83\n)\nwith MBDCalc() as calc:\n    ene_f = calc.mbd_energy_species(  # Fortran implementation\n        [(0, 0, 0), (0, 0, 4*ang)], ['Ar', 'Ar'], [1, 1], 0.83\n    )\nassert abs(ene_f-ene_py) < 1e-15\n```\n\n```fortran\nuse mbd, only: mbd_input_t, mbd_calc_t\n\ntype(mbd_input_t) :: inp\ntype(mbd_calc_t) :: calc\nreal(8) :: energy, gradients(3, 2)\ninteger :: code\ncharacter(200) :: origin, msg\n\ninp%atom_types = ['Ar', 'Ar']\ninp%coords = reshape([0d0, 0d0, 0d0, 0d0, 0d0, 7.5d0], [3, 2])\ninp%xc = 'pbe'\ncall calc%init(inp)\ncall calc%get_exception(code, origin, msg)\nif (code > 0) then\n    print *, msg\n    stop\nend if\ncall calc%update_vdw_params_from_ratios([0.98d0, 0.98d0])\ncall calc%evaluate_vdw_method(energy)\ncall calc%get_gradients(gradients)\ncall calc%destroy()\n```\n\n## Links\n\n- Libmbd documentation: https://jhrmnn.github.io/libmbd\n- Pymbd documentation: https://jhrmnn.github.io/libmbd/pymbd\n\n## Developing\n\nFor development, Libmbd doesn't have to be installed on the system, and Pymbd can be linked against Libmbd in the build directory. Use [Tox](https://tox.readthedocs.io/) for comfortable running of Python tests.\n\n```\npip install tox tox-venv  # or just make sure you have tox and tox-venv installed\ngit clone https://github.com/jhrmnn/libmbd.git && cd libmbd\nmake setup  # creates ./build and runs cmake\n# do some development\nmake test && tox\n# do some development\nmake test && tox\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jhrmnn/libmbd", "keywords": "", "license": "MPL 2.0", "maintainer": "", "maintainer_email": "", "name": "pymbd", "package_url": "https://pypi.org/project/pymbd/", "platform": "", "project_url": "https://pypi.org/project/pymbd/", "project_urls": {"Homepage": "https://github.com/jhrmnn/libmbd"}, "release_url": "https://pypi.org/project/pymbd/0.8.0/", "requires_dist": null, "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "summary": "Many-body dispersion library", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Libmbd</h1>\n<p><a href=\"https://travis-ci.org/jhrmnn/libmbd\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e6c479b0b7909fdf590b96846622675e850447c/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a68726d6e6e2f6c69626d62642f6d61737465722e737667\"></a>\n<a href=\"https://codecov.io/gh/jhrmnn/libmbd\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a17297a99d8adde4c06af82a6d0c7398c1a4f9b9/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6a68726d6e6e2f6c69626d62642e737667\"></a>\n<img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49974422fbd79490ee13456145435c4b253adaff/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796d62642e737667\">\n<a href=\"https://github.com/jhrmnn/libmbd/releases\" rel=\"nofollow\"><img alt=\"release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbf9298abef05ee1b6a63c69fc670834c9993813/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6a68726d6e6e2f6c69626d62642e737667\"></a>\n<a href=\"https://anaconda.org/libmbd/pymbd\" rel=\"nofollow\"><img alt=\"conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e79f2cb7ecf2c0ff1c2bd1005744278c7b1fcf14/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f762f6c69626d62642f70796d62642e737667\"></a>\n<a href=\"https://pypi.org/project/pymbd/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c06ce2061814da815fcdcc8c3e43e1411efb8f35/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796d62642e737667\"></a>\n<a href=\"https://github.com/jhrmnn/libmbd/releases\" rel=\"nofollow\"><img alt=\"commits since\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f95a245de53197e738523fb18e76c428a8e8bb23/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f6a68726d6e6e2f6c69626d62642f6c61746573742e737667\"></a>\n<a href=\"https://github.com/jhrmnn/libmbd/commits/master\" rel=\"nofollow\"><img alt=\"last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60d6369932711339a96ace9d89117eb87f2a8e24/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6a68726d6e6e2f6c69626d62642e737667\"></a>\n<a href=\"https://github.com/jhrmnn/libmbd/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20bfe8bdc6c64a945027de8c7c113ef10b160400/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a68726d6e6e2f6c69626d62642e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"code style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50d8bd7bc32b7c5fe0029bcc7289ed7e0beb2a5f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3230323032302e737667\"></a></p>\n<p>Libmbd contains implementations of the <a href=\"http://dx.doi.org/10.1063/1.4865104\" rel=\"nofollow\">many-body dispersion</a> (MBD) method in several programming languages and frameworks:</p>\n<ul>\n<li>The Fortran implementation is the reference, most advanced implementation, with support for analytical gradients and distributed parallelism, and additional functionality beyond the MBD method itself. It provides a low-level and a high-level Fortran API, and a C API. Furthermore, Python bindings to the C API are provided.</li>\n<li>The Python/Numpy implementation is intended for prototyping, and as a high-level language reference.</li>\n<li>The Python/Tensorflow implementation is an experiment that should enable rapid prototyping of machine learning applications with MBD.</li>\n</ul>\n<p>The Python-based implementations as well as Python bindings to the Libmbd C API are accessible from the Python package called Pymbd.</p>\n<h2>Installing Pymbd</h2>\n<p>The easiest way to get Pymbd is to install the Pymbd <a href=\"https://conda.io/docs/\" rel=\"nofollow\">Conda</a> package, which ships with pre-built Libmbd.</p>\n<pre><code>conda install -c libmbd pymbd\n</code></pre>\n<p>Alternatively, if you have Libmbd installed on your system (see below), you can install Pymbd via Pip, in which case it links against the installed Libmbd. To support Libmbd built with ScaLAPACK/MPI, the <code>MPI</code> extras is required.</p>\n<pre><code>pip install pymbd  # or pymbd[MPI]\n</code></pre>\n<p>In both cases, tests can be run with Pytest.</p>\n<pre><code>pytest -v --durations=3 --pyargs pymbd\n</code></pre>\n<p>If you don\u2019t need the Fortran bindings in Pymbd, you can install it without the C extension, in which case <code>pymbd.fortran</code> becomes unimportable</p>\n<pre><code>pip install pymbd --install-option=\"--no-ext\"\n</code></pre>\n<h2>Installing Libmbd</h2>\n<p>Libmbd uses CMake for building and installation, and requires a Fortran compiler, LAPACK, and optionally ScaLAPACK/MPI.</p>\n<p>On Ubuntu:</p>\n<pre>apt-get install gfortran libblas-dev liblapack-dev <span class=\"o\">[</span>mpi-default-dev mpi-default-bin libscalapack-mpi-dev<span class=\"o\">]</span>\n</pre>\n<p>On macOS:</p>\n<pre>brew install gcc <span class=\"o\">[</span>open-mpi scalapack<span class=\"o\">]</span>\n</pre>\n<p>The building and installation can then proceed with</p>\n<pre><code>git clone https://github.com/jhrmnn/libmbd.git &amp;&amp; cd libmbd\nmkdir build &amp;&amp; cd build\ncmake .. [-DENABLE_SCALAPACK_MPI=ON]\nmake\nmake install\n</code></pre>\n<p>This installs the Libmbd shared library, C API header file, and high-level Fortran API module file.</p>\n<p>Tests can be run with</p>\n<pre><code>make check\n</code></pre>\n<h2>Examples</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymbd</span> <span class=\"kn\">import</span> <span class=\"n\">mbd_energy_species</span><span class=\"p\">,</span> <span class=\"n\">ang</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pymbd.fortran</span> <span class=\"kn\">import</span> <span class=\"n\">MBDCalc</span>\n\n<span class=\"n\">ene_py</span> <span class=\"o\">=</span> <span class=\"n\">mbd_energy_species</span><span class=\"p\">(</span>  <span class=\"c1\"># pure Python implementation</span>\n    <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">ang</span><span class=\"p\">)],</span> <span class=\"p\">[</span><span class=\"s1\">'Ar'</span><span class=\"p\">,</span> <span class=\"s1\">'Ar'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mf\">0.83</span>\n<span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">MBDCalc</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">calc</span><span class=\"p\">:</span>\n    <span class=\"n\">ene_f</span> <span class=\"o\">=</span> <span class=\"n\">calc</span><span class=\"o\">.</span><span class=\"n\">mbd_energy_species</span><span class=\"p\">(</span>  <span class=\"c1\"># Fortran implementation</span>\n        <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">ang</span><span class=\"p\">)],</span> <span class=\"p\">[</span><span class=\"s1\">'Ar'</span><span class=\"p\">,</span> <span class=\"s1\">'Ar'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mf\">0.83</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">ene_f</span><span class=\"o\">-</span><span class=\"n\">ene_py</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mf\">1e-15</span>\n</pre>\n<pre><span class=\"k\">use </span><span class=\"n\">mbd</span><span class=\"p\">,</span> <span class=\"n\">only</span><span class=\"p\">:</span> <span class=\"n\">mbd_input_t</span><span class=\"p\">,</span> <span class=\"n\">mbd_calc_t</span>\n\n<span class=\"k\">type</span><span class=\"p\">(</span><span class=\"n\">mbd_input_t</span><span class=\"p\">)</span> <span class=\"kd\">::</span> <span class=\"n\">inp</span>\n<span class=\"k\">type</span><span class=\"p\">(</span><span class=\"n\">mbd_calc_t</span><span class=\"p\">)</span> <span class=\"kd\">::</span> <span class=\"n\">calc</span>\n<span class=\"kt\">real</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"kd\">::</span> <span class=\"n\">energy</span><span class=\"p\">,</span> <span class=\"n\">gradients</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"kt\">integer</span> <span class=\"kd\">::</span> <span class=\"n\">code</span>\n<span class=\"kt\">character</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span> <span class=\"kd\">::</span> <span class=\"n\">origin</span><span class=\"p\">,</span> <span class=\"n\">msg</span>\n\n<span class=\"n\">inp</span><span class=\"p\">%</span><span class=\"n\">atom_types</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Ar'</span><span class=\"p\">,</span> <span class=\"s1\">'Ar'</span><span class=\"p\">]</span>\n<span class=\"n\">inp</span><span class=\"p\">%</span><span class=\"n\">coords</span> <span class=\"o\">=</span> <span class=\"nb\">reshape</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"n\">d0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">d0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">d0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">d0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"n\">d0</span><span class=\"p\">,</span> <span class=\"mf\">7.5d0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"n\">inp</span><span class=\"p\">%</span><span class=\"n\">xc</span> <span class=\"o\">=</span> <span class=\"s1\">'pbe'</span>\n<span class=\"k\">call </span><span class=\"n\">calc</span><span class=\"p\">%</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">inp</span><span class=\"p\">)</span>\n<span class=\"k\">call </span><span class=\"n\">calc</span><span class=\"p\">%</span><span class=\"n\">get_exception</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">code</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">then</span>\n<span class=\"k\">    print</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">msg</span>\n    <span class=\"k\">stop</span>\n<span class=\"k\">end if</span>\n<span class=\"k\">call </span><span class=\"n\">calc</span><span class=\"p\">%</span><span class=\"n\">update_vdw_params_from_ratios</span><span class=\"p\">([</span><span class=\"mf\">0.98d0</span><span class=\"p\">,</span> <span class=\"mf\">0.98d0</span><span class=\"p\">])</span>\n<span class=\"k\">call </span><span class=\"n\">calc</span><span class=\"p\">%</span><span class=\"n\">evaluate_vdw_method</span><span class=\"p\">(</span><span class=\"n\">energy</span><span class=\"p\">)</span>\n<span class=\"k\">call </span><span class=\"n\">calc</span><span class=\"p\">%</span><span class=\"n\">get_gradients</span><span class=\"p\">(</span><span class=\"n\">gradients</span><span class=\"p\">)</span>\n<span class=\"k\">call </span><span class=\"n\">calc</span><span class=\"p\">%</span><span class=\"n\">destroy</span><span class=\"p\">()</span>\n</pre>\n<h2>Links</h2>\n<ul>\n<li>Libmbd documentation: <a href=\"https://jhrmnn.github.io/libmbd\" rel=\"nofollow\">https://jhrmnn.github.io/libmbd</a></li>\n<li>Pymbd documentation: <a href=\"https://jhrmnn.github.io/libmbd/pymbd\" rel=\"nofollow\">https://jhrmnn.github.io/libmbd/pymbd</a></li>\n</ul>\n<h2>Developing</h2>\n<p>For development, Libmbd doesn't have to be installed on the system, and Pymbd can be linked against Libmbd in the build directory. Use <a href=\"https://tox.readthedocs.io/\" rel=\"nofollow\">Tox</a> for comfortable running of Python tests.</p>\n<pre><code>pip install tox tox-venv  # or just make sure you have tox and tox-venv installed\ngit clone https://github.com/jhrmnn/libmbd.git &amp;&amp; cd libmbd\nmake setup  # creates ./build and runs cmake\n# do some development\nmake test &amp;&amp; tox\n# do some development\nmake test &amp;&amp; tox\n</code></pre>\n\n          </div>"}, "last_serial": 6053098, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "57b604d2ae7bf5e9d53d80a3162b2492", "sha256": "732e2ff8949104d140cad5a3dd56272ce5ca84e58e348245ea2cb9aa4a47a46b"}, "downloads": -1, "filename": "pymbd-0.4.0.tar.gz", "has_sig": false, "md5_digest": "57b604d2ae7bf5e9d53d80a3162b2492", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 24013, "upload_time": "2019-01-13T18:13:22", "upload_time_iso_8601": "2019-01-13T18:13:22.779634Z", "url": "https://files.pythonhosted.org/packages/bf/96/67ac864ed1ead60e9cf42ae93603859b44264d32366875f830d05275ebc3/pymbd-0.4.0.tar.gz", "yanked": false}], "0.4.0a7": [{"comment_text": "", "digests": {"md5": "390900f1e361391b019aa020f5f3a1ff", "sha256": "19c5fdd058bb4fccfa1200e4f26d5a728be89b2c185064b41f6b649fc48943e4"}, "downloads": -1, "filename": "pymbd-0.4.0a7-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "390900f1e361391b019aa020f5f3a1ff", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 395260, "upload_time": "2018-10-15T20:23:01", "upload_time_iso_8601": "2018-10-15T20:23:01.336500Z", "url": "https://files.pythonhosted.org/packages/39/ef/568e47dd4dbf9644bef02ec8105a31f4be07825c5e0efcbfbcfdd570c1d1/pymbd-0.4.0a7-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a22d18486345182986c3098ca5ea1e37", "sha256": "54a215291d15d957f3c934ac3474f7555f4c9950c0a5ecba20ae5f2de3318da0"}, "downloads": -1, "filename": "pymbd-0.4.0a7.tar.gz", "has_sig": false, "md5_digest": "a22d18486345182986c3098ca5ea1e37", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 58601, "upload_time": "2018-10-15T20:23:03", "upload_time_iso_8601": "2018-10-15T20:23:03.431140Z", "url": "https://files.pythonhosted.org/packages/72/a6/26f0ab1d8e023c32d3acf363e2e042e1a77f2443a4fddcf8780b9dbf6d3c/pymbd-0.4.0a7.tar.gz", "yanked": false}], "0.4.0a8": [{"comment_text": "", "digests": {"md5": "579c717cbc11d50f8774d1e152ccfaba", "sha256": "eb2bcf709a51e0bc6f9e540130f803f2fb80b6744b373b60400ffadf8e800653"}, "downloads": -1, "filename": "pymbd-0.4.0a8.tar.gz", "has_sig": false, "md5_digest": "579c717cbc11d50f8774d1e152ccfaba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 31274, "upload_time": "2018-10-17T22:18:32", "upload_time_iso_8601": "2018-10-17T22:18:32.250935Z", "url": "https://files.pythonhosted.org/packages/4e/3f/3ce4089165a030829c69594be5957c3d48ccca3271cf21896d627489a5f7/pymbd-0.4.0a8.tar.gz", "yanked": false}], "0.4.0a9": [{"comment_text": "", "digests": {"md5": "509915238629a527c55c9b484e6f93d1", "sha256": "bff4906877292aa32d9a86bcc122d181004c2e42df88faba84063efe52659fa9"}, "downloads": -1, "filename": "pymbd-0.4.0a9.tar.gz", "has_sig": false, "md5_digest": "509915238629a527c55c9b484e6f93d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 23723, "upload_time": "2019-01-07T00:09:33", "upload_time_iso_8601": "2019-01-07T00:09:33.578833Z", "url": "https://files.pythonhosted.org/packages/59/f4/8de640ce181da6b1c6dc5e30280b10f7daa6a8f6f633761647291f70de19/pymbd-0.4.0a9.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6388afb97fdfe7580f4a890e8684dbe7", "sha256": "13948473bd88c4e4493a4c8c085f7a1cc7e87172ba023734fc2a9adfa6bf4764"}, "downloads": -1, "filename": "pymbd-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6388afb97fdfe7580f4a890e8684dbe7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 31864, "upload_time": "2019-01-15T14:52:44", "upload_time_iso_8601": "2019-01-15T14:52:44.089021Z", "url": "https://files.pythonhosted.org/packages/39/9b/b74e1f8c2dcf8d81f4d01afd70103724d06767957be12c2516a4f178b92a/pymbd-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "e3a313c4bd4bdbf74538d384e527dc75", "sha256": "9a00a389ac344328dfb47465a6f7b585ede573c05468ce87ad83984446b537f6"}, "downloads": -1, "filename": "pymbd-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e3a313c4bd4bdbf74538d384e527dc75", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 32510, "upload_time": "2019-03-01T14:51:20", "upload_time_iso_8601": "2019-03-01T14:51:20.407783Z", "url": "https://files.pythonhosted.org/packages/12/d6/ba49cc30bcf47aed973dd440865a3297366bcdd8d1154d3982e6f1f8db14/pymbd-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "cbc5714e45c99f9ab4c4361cd28546bf", "sha256": "6fe174aa478da5508387d8f927bb3792e7edc71fffb87cd570316932a00091a4"}, "downloads": -1, "filename": "pymbd-0.6.0.tar.gz", "has_sig": false, "md5_digest": "cbc5714e45c99f9ab4c4361cd28546bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 34282, "upload_time": "2019-04-23T12:26:29", "upload_time_iso_8601": "2019-04-23T12:26:29.608988Z", "url": "https://files.pythonhosted.org/packages/fc/fe/9545096f05993a1cbbff3ee25888419884059fc5b1367e80c21a1a8bfd18/pymbd-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "05e6c14ff9c0ba36ee699411c343b5a1", "sha256": "c98a301a6e152a41804f1942a8fcfae29fba2ea05b1a5f942bf470e68b3e638a"}, "downloads": -1, "filename": "pymbd-0.7.0.tar.gz", "has_sig": false, "md5_digest": "05e6c14ff9c0ba36ee699411c343b5a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 35048, "upload_time": "2019-05-15T11:41:30", "upload_time_iso_8601": "2019-05-15T11:41:30.679284Z", "url": "https://files.pythonhosted.org/packages/3b/3e/d40687b563617e550f51fe46b6df105894523a25fcf54b8bfa0e61334775/pymbd-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "9f73b5eb7d7ffdea4aec1fb2cf85db5d", "sha256": "18a7e5ab9df8c68e5c16c6f93b1a10cf687f96cad98f0f2ec9e9627f3d50bed7"}, "downloads": -1, "filename": "pymbd-0.8.0.tar.gz", "has_sig": false, "md5_digest": "9f73b5eb7d7ffdea4aec1fb2cf85db5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 34149, "upload_time": "2019-10-30T14:52:41", "upload_time_iso_8601": "2019-10-30T14:52:41.533649Z", "url": "https://files.pythonhosted.org/packages/89/1a/2295edccdc5cf0fcd6852c4ba4fd8c32e1d506906b695b444d056a08614d/pymbd-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9f73b5eb7d7ffdea4aec1fb2cf85db5d", "sha256": "18a7e5ab9df8c68e5c16c6f93b1a10cf687f96cad98f0f2ec9e9627f3d50bed7"}, "downloads": -1, "filename": "pymbd-0.8.0.tar.gz", "has_sig": false, "md5_digest": "9f73b5eb7d7ffdea4aec1fb2cf85db5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 34149, "upload_time": "2019-10-30T14:52:41", "upload_time_iso_8601": "2019-10-30T14:52:41.533649Z", "url": "https://files.pythonhosted.org/packages/89/1a/2295edccdc5cf0fcd6852c4ba4fd8c32e1d506906b695b444d056a08614d/pymbd-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:24 2020"}