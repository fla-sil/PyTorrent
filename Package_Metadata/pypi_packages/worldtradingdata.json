{"info": {"author": "Tom Stanley", "author_email": "tstanleyuk@icloud.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# World Trading Data Python SDK\n\n**This is an _UNOFFICIAL_ SDK. That means that neither this repo nor the author have any \nrelationship with World Trading Data. This repo is simply a tool built to make it easier to \nintegrate with the rest API.**\n\n_This SDK is designed to access financial data. Therefore the author would like to stress that \nwhat you do with any data you may get through this SDK is your problem and yours alone. I take \nabsolutely zero responsibility for any losses or problems that may arise from using this SDK.\nNor am I responsible for the accuracy of any of the data._  \n_In the words of GNU (even though this project is under the MIT license),  \n \"This software comes with ABSOLUTELY NO WARRANTY\"_\n\n### Getting Started\n\nThis SDK will require you to have an account with World Trading Data (sign up \n[here](https://www.worldtradingdata.com))\n\n#### Installation\n1.  Make sure you have pip3 or pip installed\n2.  In the console `pip3 install worldtradingdata==0.1.1`\n\n\nthen in python...\n\n`>>> from WorldTradingData import WorldTradingData`  \n`>>> my_api_token = get_my_token_from_somewhere_safe()`  \n`# provide the api_token once when creating the WorldTradingData instance.`  \n`# you do not need to provide the api_token on each request`  \n\n`>>> wtd = WorldTradingData(my_api_token)`  \n`>>> wtd.stock_search('AAPL')  # will find all your favourite fruity stocks`\n\n#### General Guidance\nRequired arguments should be given individually, and optional arguments should be \nsupplied as a dictionary, with the param name as the key, and the param value as the value.\n\ne.g.\nPerform a basic stock search with  \n`wtd.stock_search('AAPL')`\n\nAnything which is an optional query string param in the official docs can be passed in a dictionary \nas a second argument \n([see official docs for full argument reference](https://www.worldtradingdata.com/documentation#stocks-and-indexes)).\n\n`optional_params = {'output': 'csv', 'currency': 'usd'}`  \n`wtd.stock_search('AAPL', optional_params)`\n\n\nMethods have been named in accordance with the url path suffix for that request in the official docs. \ni.e. if the base url of a request is\n`https://api.worldtradingdata.com/api/v1`\n and the final url for a Forex History request is \n`https://api.worldtradingdata.com/api/v1/forex_history`\nthen the url path suffix of the request is considered to be `/forex_history`.  \n\nAll the methods in the SDK are named according to their corresponding url path suffix without the `/`.  \ne.g. `wtd.forex_history(args, in, here)` \n\n\n\n## Method Reference\n\nPlease be aware that this SDK is designed to be a loose wrapper around the official REST API \nprovided by www.worldtradingdata.com .\nThat means that it does not include pre-flight checks to make sure your provided arguments are correct. \nThis provides much more flexibility, but it means if you provide poorly formed arguments \nto the SDK, they will be ignored and the results you get might not be what you expect.\n\nI'm working on stricter type checking for version 2.\n\n\\# note: 'api_token' is supplied automatically\n\n### Real Time Market Data\n_full reference at [https://www.worldtradingdata.com/documentation#real-time-market-data](https://www.worldtradingdata.com/documentation#real-time-market-data)_   \n**Stock and Index Real Time**  \n`wtd.stock(symbol: list [, optional_params: dict])`  \n_example_  \n`more_params = {'output': 'csv'}`  \n`wtd.stock(['AAPL', 'GOOG'], more_params)`\n\n**Mutual Fund Real Time**  \n`wtd.mutual_fund(symbol: list [, optional_params: dict])`  \n_example_  \n`my_symbol_array = ['AAAAX', 'AAADX', 'AAAGX']`  \n`wtd.mutual_fund(my_symbol_array)`  \n\n### Intraday Market Data\n_full reference at [https://www.worldtradingdata.com/documentation#intraday-market-data](https://www.worldtradingdata.com/documentation#intraday-market-data)_  \n**Stock and Index Intraday**  \n`wtd.intraday(symbol: str, interval: int, range: int [, optional_params: dict])`  \n\n### Historical Market Data\n_full reference at [https://www.worldtradingdata.com/documentation#historical-market-data](https://www.worldtradingdata.com/documentation#historical-market-data)_  \n**Full History**  \n`wtd.history(symbol: str [, optional_params: dict])`  \n\n**Multi Single Day History**  \n`wtd.history_multi_single_day(symbol: str, date: str [, optional_params: dict])`  \n`# date should be formatted as 'YYYY-MM-DD'`  \n\n### Forex\n_full reference at [https://www.worldtradingdata.com/documentation#forex-data](https://www.worldtradingdata.com/documentation#forex-data)_  \n**Real Time**  \n`wtd.forex(base: str)`  \n\n**Historical**  \n`wtd.forex_history(base: str, convert_to: str [, optional_params: dict])`  \n\n**Single Day History**  \n`wtd.forex_single_day(base: str, date: str [, optional_params: dict])`  \n\n### Searching Stocks\n_full reference at [https://www.worldtradingdata.com/documentation#searching](https://www.worldtradingdata.com/documentation#searching)_  \n`wtd._stock_search(search_term: string [, optional_params: dict])`  \n\nPerform a basic stock search with  \n`wtd.stock_search('AAPL')`  \n\nAnything which is a query_string param in the official docs can be passed \nin the dictionary of optional params.  \n\n`optional_params = {'output': 'csv', 'currency': 'usd'}`  \n`wtd.stock_search('AAPL', optional_params)`  \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/staneslevski/WorldTradingDataPythonSDK", "keywords": "finance,trading,data,world trading data", "license": "", "maintainer": "", "maintainer_email": "", "name": "worldtradingdata", "package_url": "https://pypi.org/project/worldtradingdata/", "platform": "", "project_url": "https://pypi.org/project/worldtradingdata/", "project_urls": {"Homepage": "https://github.com/staneslevski/WorldTradingDataPythonSDK"}, "release_url": "https://pypi.org/project/worldtradingdata/0.1.5/", "requires_dist": ["urllib3 (==1.25.3)", "pytest (==5.0.1)"], "requires_python": "", "summary": "Python SDK to interact with www.worldtradingdata.com", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>World Trading Data Python SDK</h1>\n<p><strong>This is an <em>UNOFFICIAL</em> SDK. That means that neither this repo nor the author have any\nrelationship with World Trading Data. This repo is simply a tool built to make it easier to\nintegrate with the rest API.</strong></p>\n<p><em>This SDK is designed to access financial data. Therefore the author would like to stress that\nwhat you do with any data you may get through this SDK is your problem and yours alone. I take\nabsolutely zero responsibility for any losses or problems that may arise from using this SDK.\nNor am I responsible for the accuracy of any of the data.</em><br>\n<em>In the words of GNU (even though this project is under the MIT license),<br>\n\"This software comes with ABSOLUTELY NO WARRANTY\"</em></p>\n<h3>Getting Started</h3>\n<p>This SDK will require you to have an account with World Trading Data (sign up\n<a href=\"https://www.worldtradingdata.com\" rel=\"nofollow\">here</a>)</p>\n<h4>Installation</h4>\n<ol>\n<li>Make sure you have pip3 or pip installed</li>\n<li>In the console <code>pip3 install worldtradingdata==0.1.1</code></li>\n</ol>\n<p>then in python...</p>\n<p><code>&gt;&gt;&gt; from WorldTradingData import WorldTradingData</code><br>\n<code>&gt;&gt;&gt; my_api_token = get_my_token_from_somewhere_safe()</code><br>\n<code># provide the api_token once when creating the WorldTradingData instance.</code><br>\n<code># you do not need to provide the api_token on each request</code></p>\n<p><code>&gt;&gt;&gt; wtd = WorldTradingData(my_api_token)</code><br>\n<code>&gt;&gt;&gt; wtd.stock_search('AAPL') # will find all your favourite fruity stocks</code></p>\n<h4>General Guidance</h4>\n<p>Required arguments should be given individually, and optional arguments should be\nsupplied as a dictionary, with the param name as the key, and the param value as the value.</p>\n<p>e.g.\nPerform a basic stock search with<br>\n<code>wtd.stock_search('AAPL')</code></p>\n<p>Anything which is an optional query string param in the official docs can be passed in a dictionary\nas a second argument\n(<a href=\"https://www.worldtradingdata.com/documentation#stocks-and-indexes\" rel=\"nofollow\">see official docs for full argument reference</a>).</p>\n<p><code>optional_params = {'output': 'csv', 'currency': 'usd'}</code><br>\n<code>wtd.stock_search('AAPL', optional_params)</code></p>\n<p>Methods have been named in accordance with the url path suffix for that request in the official docs.\ni.e. if the base url of a request is\n<code>https://api.worldtradingdata.com/api/v1</code>\nand the final url for a Forex History request is\n<code>https://api.worldtradingdata.com/api/v1/forex_history</code>\nthen the url path suffix of the request is considered to be <code>/forex_history</code>.</p>\n<p>All the methods in the SDK are named according to their corresponding url path suffix without the <code>/</code>.<br>\ne.g. <code>wtd.forex_history(args, in, here)</code></p>\n<h2>Method Reference</h2>\n<p>Please be aware that this SDK is designed to be a loose wrapper around the official REST API\nprovided by <a href=\"http://www.worldtradingdata.com\" rel=\"nofollow\">www.worldtradingdata.com</a> .\nThat means that it does not include pre-flight checks to make sure your provided arguments are correct.\nThis provides much more flexibility, but it means if you provide poorly formed arguments\nto the SDK, they will be ignored and the results you get might not be what you expect.</p>\n<p>I'm working on stricter type checking for version 2.</p>\n<p># note: 'api_token' is supplied automatically</p>\n<h3>Real Time Market Data</h3>\n<p><em>full reference at <a href=\"https://www.worldtradingdata.com/documentation#real-time-market-data\" rel=\"nofollow\">https://www.worldtradingdata.com/documentation#real-time-market-data</a></em><br>\n<strong>Stock and Index Real Time</strong><br>\n<code>wtd.stock(symbol: list [, optional_params: dict])</code><br>\n<em>example</em><br>\n<code>more_params = {'output': 'csv'}</code><br>\n<code>wtd.stock(['AAPL', 'GOOG'], more_params)</code></p>\n<p><strong>Mutual Fund Real Time</strong><br>\n<code>wtd.mutual_fund(symbol: list [, optional_params: dict])</code><br>\n<em>example</em><br>\n<code>my_symbol_array = ['AAAAX', 'AAADX', 'AAAGX']</code><br>\n<code>wtd.mutual_fund(my_symbol_array)</code></p>\n<h3>Intraday Market Data</h3>\n<p><em>full reference at <a href=\"https://www.worldtradingdata.com/documentation#intraday-market-data\" rel=\"nofollow\">https://www.worldtradingdata.com/documentation#intraday-market-data</a></em><br>\n<strong>Stock and Index Intraday</strong><br>\n<code>wtd.intraday(symbol: str, interval: int, range: int [, optional_params: dict])</code></p>\n<h3>Historical Market Data</h3>\n<p><em>full reference at <a href=\"https://www.worldtradingdata.com/documentation#historical-market-data\" rel=\"nofollow\">https://www.worldtradingdata.com/documentation#historical-market-data</a></em><br>\n<strong>Full History</strong><br>\n<code>wtd.history(symbol: str [, optional_params: dict])</code></p>\n<p><strong>Multi Single Day History</strong><br>\n<code>wtd.history_multi_single_day(symbol: str, date: str [, optional_params: dict])</code><br>\n<code># date should be formatted as 'YYYY-MM-DD'</code></p>\n<h3>Forex</h3>\n<p><em>full reference at <a href=\"https://www.worldtradingdata.com/documentation#forex-data\" rel=\"nofollow\">https://www.worldtradingdata.com/documentation#forex-data</a></em><br>\n<strong>Real Time</strong><br>\n<code>wtd.forex(base: str)</code></p>\n<p><strong>Historical</strong><br>\n<code>wtd.forex_history(base: str, convert_to: str [, optional_params: dict])</code></p>\n<p><strong>Single Day History</strong><br>\n<code>wtd.forex_single_day(base: str, date: str [, optional_params: dict])</code></p>\n<h3>Searching Stocks</h3>\n<p><em>full reference at <a href=\"https://www.worldtradingdata.com/documentation#searching\" rel=\"nofollow\">https://www.worldtradingdata.com/documentation#searching</a></em><br>\n<code>wtd._stock_search(search_term: string [, optional_params: dict])</code></p>\n<p>Perform a basic stock search with<br>\n<code>wtd.stock_search('AAPL')</code></p>\n<p>Anything which is a query_string param in the official docs can be passed\nin the dictionary of optional params.</p>\n<p><code>optional_params = {'output': 'csv', 'currency': 'usd'}</code><br>\n<code>wtd.stock_search('AAPL', optional_params)</code></p>\n\n          </div>"}, "last_serial": 5586662, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "f24afc0bebd698732df4124875773446", "sha256": "26c56570b65bb0f78910517c19926806ff70f90f9678cb887230761936d38ef9"}, "downloads": -1, "filename": "worldtradingdata-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f24afc0bebd698732df4124875773446", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7143, "upload_time": "2019-07-24T07:41:54", "upload_time_iso_8601": "2019-07-24T07:41:54.524888Z", "url": "https://files.pythonhosted.org/packages/5f/80/b4d2dff55e6bd626135cefcd0b08ef3b0d8b5f81defd74679db2c4c0ab2c/worldtradingdata-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7095fd1e65e777b4cf4ed6420cfeaeb9", "sha256": "9f317005a0dc8e58b31880cd88bce7330f0503505596e6273e868feafa59a079"}, "downloads": -1, "filename": "worldtradingdata-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7095fd1e65e777b4cf4ed6420cfeaeb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4144, "upload_time": "2019-07-24T07:41:57", "upload_time_iso_8601": "2019-07-24T07:41:57.279375Z", "url": "https://files.pythonhosted.org/packages/1d/73/9d2d9b0263395e694f01a74cfd60c9ad89b21f6be9bfe6e8af10a148a5db/worldtradingdata-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ee2ec0bf40d251dd38204fec2f9bf15d", "sha256": "3af4a13e69027df62a9ee5f096fb5187d1d9bda90add44f9165dbebb2224db5b"}, "downloads": -1, "filename": "worldtradingdata-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ee2ec0bf40d251dd38204fec2f9bf15d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9825, "upload_time": "2019-07-24T10:49:55", "upload_time_iso_8601": "2019-07-24T10:49:55.128716Z", "url": "https://files.pythonhosted.org/packages/87/ca/04bbb6a7badaf3178ecf7b8554976f611f827187609a722e2ec1e0404bd2/worldtradingdata-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8cdbae3104c2b9f5bb32386ab979bc5", "sha256": "fe4a483a1e9559f2e46880d095ed25fa20e7185ccee290d377112267f5f48cfe"}, "downloads": -1, "filename": "worldtradingdata-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b8cdbae3104c2b9f5bb32386ab979bc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4120, "upload_time": "2019-07-24T10:49:56", "upload_time_iso_8601": "2019-07-24T10:49:56.630567Z", "url": "https://files.pythonhosted.org/packages/01/09/17191f75f6e8b0aa7e02bbb0619bce21c245b98e75cb604760145821cf43/worldtradingdata-0.0.4.tar.gz", "yanked": false}], "0.0.90": [{"comment_text": "", "digests": {"md5": "e3ca69743ef90f7fae64bac14a0c609a", "sha256": "ade22e4e628152196a74552b6977b371a47786dc397aa469eca821f624e359dd"}, "downloads": -1, "filename": "worldtradingdata-0.0.90-py3-none-any.whl", "has_sig": false, "md5_digest": "e3ca69743ef90f7fae64bac14a0c609a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11220, "upload_time": "2019-07-25T11:25:41", "upload_time_iso_8601": "2019-07-25T11:25:41.801711Z", "url": "https://files.pythonhosted.org/packages/23/57/7c3ed915a190626ac644584efdf260672e7976eec52bc8a3c3ef1ea96a89/worldtradingdata-0.0.90-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97cd72730214803db3b25609e6b18082", "sha256": "6121a53b9a9f141eaa106a53ee73a89ec804da71514d89e5a18e57461715a54a"}, "downloads": -1, "filename": "worldtradingdata-0.0.90.tar.gz", "has_sig": false, "md5_digest": "97cd72730214803db3b25609e6b18082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5350, "upload_time": "2019-07-25T11:25:43", "upload_time_iso_8601": "2019-07-25T11:25:43.457531Z", "url": "https://files.pythonhosted.org/packages/74/99/8fc636703d9c4ddccc4e443db19145a88035b43ba3a7ae8561ca1ab3a924/worldtradingdata-0.0.90.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "b76d145791654297a4733ef0f8afd4f0", "sha256": "4e5f7cce4515945dd04d3579d1dcdf3bb18b52965c9fc052646255299e86d963"}, "downloads": -1, "filename": "worldtradingdata-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b76d145791654297a4733ef0f8afd4f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9654, "upload_time": "2019-07-26T01:42:47", "upload_time_iso_8601": "2019-07-26T01:42:47.547352Z", "url": "https://files.pythonhosted.org/packages/c1/49/44a4a70fbae61553f625ff3ad903cd8582e5e4427e5a53b67fd89df84f17/worldtradingdata-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e75f7da42498c00b1f7aa58b464d7387", "sha256": "c8e011fe88da394b6c8325fdb1e1bb3da830996d8d2bf214f8a213af04c86cea"}, "downloads": -1, "filename": "worldtradingdata-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e75f7da42498c00b1f7aa58b464d7387", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8825, "upload_time": "2019-07-26T01:42:49", "upload_time_iso_8601": "2019-07-26T01:42:49.474783Z", "url": "https://files.pythonhosted.org/packages/2f/bf/29455e3037e3c16729ab51dd4ce09c1ddc5799d165d00dd4a66588fa92ee/worldtradingdata-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b8b4baf0786f3be4a81bee0975e67184", "sha256": "cdf8c5eafb85dfedaa1051ee670db49d4957eec61ad3e4c9902281ffc1d73c46"}, "downloads": -1, "filename": "worldtradingdata-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b8b4baf0786f3be4a81bee0975e67184", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9868, "upload_time": "2019-07-26T02:59:38", "upload_time_iso_8601": "2019-07-26T02:59:38.683319Z", "url": "https://files.pythonhosted.org/packages/b6/20/481a7e33b8e2336b10e9becbbd028c2ab70d12171864b688f06a06afd084/worldtradingdata-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfc6403c3992d46900c19d17e1788220", "sha256": "a35dde746a389a9f8409b512bd18eda5e03e9933a6df056eda4006f90d81561e"}, "downloads": -1, "filename": "worldtradingdata-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bfc6403c3992d46900c19d17e1788220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9012, "upload_time": "2019-07-26T02:59:40", "upload_time_iso_8601": "2019-07-26T02:59:40.781283Z", "url": "https://files.pythonhosted.org/packages/78/1a/bfc118b47b81cdc8072b9df2ffd2ce4c8eaf7ffa89d1caa40e38fe7d3896/worldtradingdata-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8fbaad0c7b5d3efea38d1a177a8cda9e", "sha256": "d0f45b5996a0dd30681563268da8a6b262ce9138b8174c38c9be30154e5bc3ba"}, "downloads": -1, "filename": "worldtradingdata-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8fbaad0c7b5d3efea38d1a177a8cda9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9901, "upload_time": "2019-07-26T03:26:45", "upload_time_iso_8601": "2019-07-26T03:26:45.622588Z", "url": "https://files.pythonhosted.org/packages/05/df/0b86a75354536b90940aa86314c07f2eaa7a88f174c3e0f522d92cd0f5f4/worldtradingdata-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bedc9ac1462b8f41075e982385ecf226", "sha256": "a438ca02c22865a74e83e25a3ce39214f37b0157029b840e79e2679cd077766a"}, "downloads": -1, "filename": "worldtradingdata-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bedc9ac1462b8f41075e982385ecf226", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9108, "upload_time": "2019-07-26T03:26:47", "upload_time_iso_8601": "2019-07-26T03:26:47.583603Z", "url": "https://files.pythonhosted.org/packages/02/3e/4586c5b556d81aca577a8850175046d07faf9a6ef747d62ffca8abfa2db4/worldtradingdata-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e1d56e94466bc4d7f08d12a5a1b5a2ff", "sha256": "ad2bf8a5f5acaf93370260fd0f2a49c35c59d605eb4de404543b5cc47e45d941"}, "downloads": -1, "filename": "WorldTradingData-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e1d56e94466bc4d7f08d12a5a1b5a2ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9919, "upload_time": "2019-07-26T03:35:04", "upload_time_iso_8601": "2019-07-26T03:35:04.523265Z", "url": "https://files.pythonhosted.org/packages/ce/29/ff9270b1a0ee5c6b36379f8579650cbba4ccce349174a309ac99c33c21d1/WorldTradingData-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "825bcc2ca29398cc7d4f0aadc12276c0", "sha256": "290c6fbe6bd58165c8a83ca086b597fee13365036ec05fdba03019fab406dfd3"}, "downloads": -1, "filename": "WorldTradingData-0.1.3.tar.gz", "has_sig": false, "md5_digest": "825bcc2ca29398cc7d4f0aadc12276c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9090, "upload_time": "2019-07-26T03:35:06", "upload_time_iso_8601": "2019-07-26T03:35:06.979438Z", "url": "https://files.pythonhosted.org/packages/c2/b8/f9c90f31408b37507cb1e94ba09c6dcc7ed1888517b3131b4c462d69eafd/WorldTradingData-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "cabda20f448c724d3c184a9c5e93f97e", "sha256": "02409479a34ab1b26a58737704ce503725e016ca51844bae80e5daf0f92102e9"}, "downloads": -1, "filename": "worldtradingdata-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "cabda20f448c724d3c184a9c5e93f97e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9918, "upload_time": "2019-07-26T03:43:35", "upload_time_iso_8601": "2019-07-26T03:43:35.092871Z", "url": "https://files.pythonhosted.org/packages/b4/5e/9385b5ebc59571a891d42107d5ecc28beb896ddffbc06fffc05712a70773/worldtradingdata-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0369f065855be4d4fc65f3085f99b06e", "sha256": "89bd6161e924a59085133b0ba2b9cb8fd9af138712b5fd6147baa8260f79626f"}, "downloads": -1, "filename": "worldtradingdata-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0369f065855be4d4fc65f3085f99b06e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9087, "upload_time": "2019-07-26T03:43:37", "upload_time_iso_8601": "2019-07-26T03:43:37.310294Z", "url": "https://files.pythonhosted.org/packages/57/79/f70296559d2706267e46fbc2ee5d6e6fb90de633d97d0e113205a908c62d/worldtradingdata-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cabda20f448c724d3c184a9c5e93f97e", "sha256": "02409479a34ab1b26a58737704ce503725e016ca51844bae80e5daf0f92102e9"}, "downloads": -1, "filename": "worldtradingdata-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "cabda20f448c724d3c184a9c5e93f97e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9918, "upload_time": "2019-07-26T03:43:35", "upload_time_iso_8601": "2019-07-26T03:43:35.092871Z", "url": "https://files.pythonhosted.org/packages/b4/5e/9385b5ebc59571a891d42107d5ecc28beb896ddffbc06fffc05712a70773/worldtradingdata-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0369f065855be4d4fc65f3085f99b06e", "sha256": "89bd6161e924a59085133b0ba2b9cb8fd9af138712b5fd6147baa8260f79626f"}, "downloads": -1, "filename": "worldtradingdata-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0369f065855be4d4fc65f3085f99b06e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9087, "upload_time": "2019-07-26T03:43:37", "upload_time_iso_8601": "2019-07-26T03:43:37.310294Z", "url": "https://files.pythonhosted.org/packages/57/79/f70296559d2706267e46fbc2ee5d6e6fb90de633d97d0e113205a908c62d/worldtradingdata-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:46 2020"}