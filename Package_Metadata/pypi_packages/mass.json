{"info": {"author": "jack boberg alex padgett", "author_email": "info@codedbyhand.com", "bugtrack_url": null, "classifiers": [], "description": "Merge and Simplify Scripts (MASS)\n=================================\n\nInspired by SASS, MASS is an automated tool for managing javascript\nfiles in a web projects.\n\nGoals\n~~~~~\n\n-  easy method to combine multiple files into single asset request\n-  automated minification/optimization\n-  extending javascript to allow import other scripts\n\nRequirements\n------------\n\n-  Mac OS X (currently using fsevents to track file changes. will later\n   add support for Linux and Windows)\n\nPython Packages Used\n~~~~~~~~~~~~~~~~~~~~\n\n-  jsmin (http://pypi.python.org/pypi/jsmin)\n-  macfsevents (http://pypi.python.org/pypi/MacFSEvents/0.2.1)\n-  virtualenv (http://pypi.python.org/pypi/virtualenv)\n-  argparse (http://pypi.python.org/pypi/argparse)\n\nInstallation\n------------\n\nMASS can be installed via pip:\n\n::\n\n    pip install mass\n\nTo install MASS manually, clone the repo and install using setup.py:\n\n::\n\n    python setup.py install\n\nMASS comes with the necessary python packages via virutalenv by default.\n\nBefore installing MASS, users can enable virtualenv by navigating to the\nrepository and sourcing the virtual environment.\n\n::\n\n    cd path/to/MASS\n    source env/bin/activate\n\nSource Files\n------------\n\nSource files use the extension '.xjs', which tentatively signifies\nextended javascript. These files are used to define javascript files\nwhich will be included in a \"compiled\" version that is output by MASS.\n\nIncluding Files\n~~~~~~~~~~~~~~~\n\nInside 'extended' javascript files, you can import other scripts. All\njavascript files listed in the source file will be combined, minified\nand output to a javascript file with the same name as the original xjs\nfile. Paths to imported javascript files should be relative to the\ndirectory of the xjs file they are imported into.\n\nThe example below specifies two javascript files and will be output to\nthe file foo.min.js:\n\n::\n\n    // foo.xjs\n    // import \"foo.js\"\n    // import \"plugins/jquery.jnotify.js\"\n\nRequire commands can be used to ensure that a file has been already been\nimported, and will import the script if they have not.\n\n::\n\n    // foo.xjs\n    // import \"foo.js\"\n    // import \"bar.js\"\n\n    // foo.js\n    // require \"bar.js\" \n\nIn the above example, bar.js will not be re-imported since foo.xjs has\nalready imported it.\n\nMASS also supports 'inline' javascript\n\n::\n\n    // bar.js\n    // import \"foo.js\"\n\n    // now some javascript \n    $(document).ready(function(){\n        // jquery is ready\n    });\n\n    // another import!\n    // import \"plugins/jquery.jnotify.js\"\n\nCLI Arguments\n-------------\n\nBasic Commands\n~~~~~~~~~~~~~~\n\nMass has two basic CLI commands, ``watch`` and ``compile``. ``watch``\nbegins monitoring the specified directory and will compile files as they\nare edited while ``compile`` will simply minify and combine files\nlocated in the specified directory.\n\n::\n\n    mass watch -s path/to/source\n\n    mass compile -s path/to/source\n\nDefining Destination Directory\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, MASS saves the compiled js files in the same directory as\nthe source files. The -d argument can be used to specify a different\noutput directory.\n\n::\n\n    mass watch -d path/to/output\n\nDefining Source Directory\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf a source directory is not specified, MASS uses the current directory\nby default. The -s argument can be used to specify the directory for\nMASS to discover files.\n\n::\n\n    mass watch -s path/to/source -d path/to/output", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coded-by-hand/mass", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "mass", "package_url": "https://pypi.org/project/mass/", "platform": "Mac OSX", "project_url": "https://pypi.org/project/mass/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/coded-by-hand/mass"}, "release_url": "https://pypi.org/project/mass/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Merge and Simplify Scripts: an automated tool for managing, combining and minifying javascript assets for web projects.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Inspired by SASS, MASS is an automated tool for managing javascript\nfiles in a web projects.</p>\n<div id=\"goals\">\n<h2>Goals</h2>\n<ul>\n<li>easy method to combine multiple files into single asset request</li>\n<li>automated minification/optimization</li>\n<li>extending javascript to allow import other scripts</li>\n</ul>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Mac OS X (currently using fsevents to track file changes. will later\nadd support for Linux and Windows)</li>\n</ul>\n</div>\n</div>\n<div id=\"python-packages-used\">\n<h2>Python Packages Used</h2>\n<ul>\n<li>jsmin (<a href=\"http://pypi.python.org/pypi/jsmin\" rel=\"nofollow\">http://pypi.python.org/pypi/jsmin</a>)</li>\n<li>macfsevents (<a href=\"http://pypi.python.org/pypi/MacFSEvents/0.2.1\" rel=\"nofollow\">http://pypi.python.org/pypi/MacFSEvents/0.2.1</a>)</li>\n<li>virtualenv (<a href=\"http://pypi.python.org/pypi/virtualenv\" rel=\"nofollow\">http://pypi.python.org/pypi/virtualenv</a>)</li>\n<li>argparse (<a href=\"http://pypi.python.org/pypi/argparse\" rel=\"nofollow\">http://pypi.python.org/pypi/argparse</a>)</li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>MASS can be installed via pip:</p>\n<pre>pip install mass\n</pre>\n<p>To install MASS manually, clone the repo and install using setup.py:</p>\n<pre>python setup.py install\n</pre>\n<p>MASS comes with the necessary python packages via virutalenv by default.</p>\n<p>Before installing MASS, users can enable virtualenv by navigating to the\nrepository and sourcing the virtual environment.</p>\n<pre>cd path/to/MASS\nsource env/bin/activate\n</pre>\n</div>\n<div id=\"source-files\">\n<h3>Source Files</h3>\n<p>Source files use the extension \u2018.xjs\u2019, which tentatively signifies\nextended javascript. These files are used to define javascript files\nwhich will be included in a \u201ccompiled\u201d version that is output by MASS.</p>\n</div>\n</div>\n<div id=\"including-files\">\n<h2>Including Files</h2>\n<p>Inside \u2018extended\u2019 javascript files, you can import other scripts. All\njavascript files listed in the source file will be combined, minified\nand output to a javascript file with the same name as the original xjs\nfile. Paths to imported javascript files should be relative to the\ndirectory of the xjs file they are imported into.</p>\n<p>The example below specifies two javascript files and will be output to\nthe file foo.min.js:</p>\n<pre>// foo.xjs\n// import \"foo.js\"\n// import \"plugins/jquery.jnotify.js\"\n</pre>\n<p>Require commands can be used to ensure that a file has been already been\nimported, and will import the script if they have not.</p>\n<pre>// foo.xjs\n// import \"foo.js\"\n// import \"bar.js\"\n\n// foo.js\n// require \"bar.js\"\n</pre>\n<p>In the above example, bar.js will not be re-imported since foo.xjs has\nalready imported it.</p>\n<p>MASS also supports \u2018inline\u2019 javascript</p>\n<pre>// bar.js\n// import \"foo.js\"\n\n// now some javascript\n$(document).ready(function(){\n    // jquery is ready\n});\n\n// another import!\n// import \"plugins/jquery.jnotify.js\"\n</pre>\n<div id=\"cli-arguments\">\n<h3>CLI Arguments</h3>\n</div>\n</div>\n<div id=\"basic-commands\">\n<h2>Basic Commands</h2>\n<p>Mass has two basic CLI commands, <tt>watch</tt> and <tt>compile</tt>. <tt>watch</tt>\nbegins monitoring the specified directory and will compile files as they\nare edited while <tt>compile</tt> will simply minify and combine files\nlocated in the specified directory.</p>\n<pre>mass watch -s path/to/source\n\nmass compile -s path/to/source\n</pre>\n</div>\n<div id=\"defining-destination-directory\">\n<h2>Defining Destination Directory</h2>\n<p>By default, MASS saves the compiled js files in the same directory as\nthe source files. The -d argument can be used to specify a different\noutput directory.</p>\n<pre>mass watch -d path/to/output\n</pre>\n</div>\n<div id=\"defining-source-directory\">\n<h2>Defining Source Directory</h2>\n<p>If a source directory is not specified, MASS uses the current directory\nby default. The -s argument can be used to specify the directory for\nMASS to discover files.</p>\n<pre>mass watch -s path/to/source -d path/to/output\n</pre>\n</div>\n\n          </div>"}, "last_serial": 794552, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4b8a3c068b63971c4cf9389b9e51018f", "sha256": "5b694b0ec8647648be6283129048621fc2abfd55b34945201cc1eef8a0c78842"}, "downloads": -1, "filename": "mass-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4b8a3c068b63971c4cf9389b9e51018f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3039, "upload_time": "2012-03-23T15:19:20", "upload_time_iso_8601": "2012-03-23T15:19:20.042427Z", "url": "https://files.pythonhosted.org/packages/66/f6/ea471b01ed34ef4c8bf87de10db2aa32fa0ec3e0d499df820bd551af02f1/mass-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9f038b3a64b8ac197778d478fe4dae5f", "sha256": "67512d8d566d784d80b2d0cc21229043110e5f32a54ff1e65cd8f1a0f5d510a5"}, "downloads": -1, "filename": "mass-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9f038b3a64b8ac197778d478fe4dae5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4835, "upload_time": "2012-04-05T17:46:36", "upload_time_iso_8601": "2012-04-05T17:46:36.732384Z", "url": "https://files.pythonhosted.org/packages/91/f9/83bb7331f40b751435ac485293cf19a3aff264d94eafbc0653136ffb8a7b/mass-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cb7dc9ce50aa59ce87f6a0051e49d76f", "sha256": "0710ed76b4c07faf11fc0ae2dada4caac4283a2cdba193a8c20f4ecc17d10df2"}, "downloads": -1, "filename": "mass-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cb7dc9ce50aa59ce87f6a0051e49d76f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4870, "upload_time": "2012-04-11T15:29:51", "upload_time_iso_8601": "2012-04-11T15:29:51.659889Z", "url": "https://files.pythonhosted.org/packages/09/e2/adf758e2e04191b74ef9f4a56981a135354138fd3a77cfd59eb19297f911/mass-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f44241981974d0b9db0c1187bda95805", "sha256": "59db24da14e28015443067489e1b8e5d4b041949ce577f37b7d92d5444185daa"}, "downloads": -1, "filename": "mass-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f44241981974d0b9db0c1187bda95805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4890, "upload_time": "2012-04-11T23:06:15", "upload_time_iso_8601": "2012-04-11T23:06:15.465181Z", "url": "https://files.pythonhosted.org/packages/48/72/e24d26de0f2aebb69688cf5565e01f36a2e3324e816d97a660053785f411/mass-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "7dac4cc09c80d48e6a450256f50c7ac8", "sha256": "479462f58700dd5db39d38d52fbab35ccc486cbf7627abeb86a3ad8ea47b8f36"}, "downloads": -1, "filename": "mass-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7dac4cc09c80d48e6a450256f50c7ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4894, "upload_time": "2012-04-24T22:42:52", "upload_time_iso_8601": "2012-04-24T22:42:52.637770Z", "url": "https://files.pythonhosted.org/packages/7b/54/97abbc40b4087748aecee98b19aecb4e1ca42a19cbce3b5b9984e91baa3f/mass-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7dac4cc09c80d48e6a450256f50c7ac8", "sha256": "479462f58700dd5db39d38d52fbab35ccc486cbf7627abeb86a3ad8ea47b8f36"}, "downloads": -1, "filename": "mass-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7dac4cc09c80d48e6a450256f50c7ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4894, "upload_time": "2012-04-24T22:42:52", "upload_time_iso_8601": "2012-04-24T22:42:52.637770Z", "url": "https://files.pythonhosted.org/packages/7b/54/97abbc40b4087748aecee98b19aecb4e1ca42a19cbce3b5b9984e91baa3f/mass-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:29 2020"}