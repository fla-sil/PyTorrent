{"info": {"author": "Marcio Mazza", "author_email": "marciomazza@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "========================\n Detailed Documentation\n========================\nMotivation\n==========\n\n`PyDev <http://www.pydev.org>`_ is a Python IDE for Eclipse.\n\nAmong many useful things it **highlights syntax errors**, allows **code completion** and **code navigation**.\nFor these to fully work, it is necessary to configure the project's external dependencies appropriately.\n\nThis recipe\n===========\n\nPyDev adds a new *PyDev Project* to Eclipse.\n\nThis `zc.buildout <http://www.buildout.org/>`_ recipe generates the two files that define a PyDev Project:\n\n  ``.project`` and ``.pydevproject``.\n\nApart from simple project configuration,\nthe recipe adds the eggs of your choice as external dependencies.\nTheir transitive dependencies are added as well.\n\nBenefits\n--------\n\n1. Usually the PyDev Project files ``.project`` and ``.pydevproject`` are not good candidates for versioning.\n   The reason is that these can easily contain user specific information, like personal directory paths.\n   This recipe allows you to version, in a buildout file, the information necessary to generate these files.\n\n2. Configuring the PyDev Project external dependencies by hand is neither clear not easy.\n\n3. Users of Maven and Eclipse JDT might find this project build generation very familiar. *(Don't use Java? I thought every Eclipse user did.)*\n\nUsage\n-----\n\nAdd your recipe configuration to ``buildout.cfg`` and include it in ``${buildout:parts}``. An example::\n\n    [buildout]\n    ...\n    parts = ... pydevproject\n\n    [pydevproject]\n    recipe = collective.recipe.pydevproject\n    name = my_project_name\n    src = src\n    python_version = python 2.7\n    python_interpreter = Default\n    eggs = any_egg_you_want\n\nOptions\n-------\nThese match the options of a PyDev Project.\n\nname\n  The project name. This is just for Eclipse and can be anything you want.\nsrc\n  The source folder, relative to the root of the project. Usually *src*. *(TODO: get this from ${buildout:develop} and setup.py)*\npython_version\n  The combination of interpreter and grammar version. E.g. *python 2.7*\npython_interpreter\n  The interpreter name, as configured in the the Eclipse Preferences for PyDev. Usually *Default* is fine.\n\n  Remember to register at least one interpreter in Eclipse before using your project. That can be done in ``Window > Preferences > PyDev > Interpreter - Python > New...``.\neggs\n  The eggs that will be listed as external dependencies.\n  You don't need to include transitive dependencies. This is done automatically.\n\nSource\n------\n\nSource code lives at http://github.com/collective/collective.recipe.pydevproject.\n\n\n================\n Change history\n================\n0.1 (2012-12-01)\n================\n\n- Initial implementation.\n  [marciomazza]\n\n\n==============\n Contributors\n==============\n - Marcio Mazza [marciomazza]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.recipe.pydevproject", "keywords": "buildout eggs eclipse pydev", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.recipe.pydevproject", "package_url": "https://pypi.org/project/collective.recipe.pydevproject/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.recipe.pydevproject/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.recipe.pydevproject"}, "release_url": "https://pypi.org/project/collective.recipe.pydevproject/0.1/", "requires_dist": null, "requires_python": null, "summary": "zc.buildout recipe that creates an Eclipse PyDev Project config with PYTHONPATH pointing to some eggs and their dependencies", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"detailed-documentation\">\n<h2>Detailed Documentation</h2>\n<div id=\"motivation\">\n<h3>Motivation</h3>\n<p><a href=\"http://www.pydev.org\" rel=\"nofollow\">PyDev</a> is a Python IDE for Eclipse.</p>\n<p>Among many useful things it <strong>highlights syntax errors</strong>, allows <strong>code completion</strong> and <strong>code navigation</strong>.\nFor these to fully work, it is necessary to configure the project\u2019s external dependencies appropriately.</p>\n</div>\n<div id=\"this-recipe\">\n<h3>This recipe</h3>\n<p>PyDev adds a new <em>PyDev Project</em> to Eclipse.</p>\n<p>This <a href=\"http://www.buildout.org/\" rel=\"nofollow\">zc.buildout</a> recipe generates the two files that define a PyDev Project:</p>\n<blockquote>\n<tt>.project</tt> and <tt>.pydevproject</tt>.</blockquote>\n<p>Apart from simple project configuration,\nthe recipe adds the eggs of your choice as external dependencies.\nTheir transitive dependencies are added as well.</p>\n<div id=\"benefits\">\n<h4>Benefits</h4>\n<ol>\n<li>Usually the PyDev Project files <tt>.project</tt> and <tt>.pydevproject</tt> are not good candidates for versioning.\nThe reason is that these can easily contain user specific information, like personal directory paths.\nThis recipe allows you to version, in a buildout file, the information necessary to generate these files.</li>\n<li>Configuring the PyDev Project external dependencies by hand is neither clear not easy.</li>\n<li>Users of Maven and Eclipse JDT might find this project build generation very familiar. <em>(Don\u2019t use Java? I thought every Eclipse user did.)</em></li>\n</ol>\n</div>\n<div id=\"usage\">\n<h4>Usage</h4>\n<p>Add your recipe configuration to <tt>buildout.cfg</tt> and include it in <tt>${buildout:parts}</tt>. An example:</p>\n<pre>[buildout]\n...\nparts = ... pydevproject\n\n[pydevproject]\nrecipe = collective.recipe.pydevproject\nname = my_project_name\nsrc = src\npython_version = python 2.7\npython_interpreter = Default\neggs = any_egg_you_want\n</pre>\n</div>\n<div id=\"options\">\n<h4>Options</h4>\n<p>These match the options of a PyDev Project.</p>\n<dl>\n<dt>name</dt>\n<dd>The project name. This is just for Eclipse and can be anything you want.</dd>\n<dt>src</dt>\n<dd>The source folder, relative to the root of the project. Usually <em>src</em>. <em>(TODO: get this from ${buildout:develop} and setup.py)</em></dd>\n<dt>python_version</dt>\n<dd>The combination of interpreter and grammar version. E.g. <em>python 2.7</em></dd>\n<dt>python_interpreter</dt>\n<dd><p>The interpreter name, as configured in the the Eclipse Preferences for PyDev. Usually <em>Default</em> is fine.</p>\n<p>Remember to register at least one interpreter in Eclipse before using your project. That can be done in <tt>Window &gt; Preferences &gt; PyDev &gt; Interpreter - Python &gt; <span class=\"pre\">New...</span></tt>.</p>\n</dd>\n<dt>eggs</dt>\n<dd>The eggs that will be listed as external dependencies.\nYou don\u2019t need to include transitive dependencies. This is done automatically.</dd>\n</dl>\n</div>\n<div id=\"source\">\n<h4>Source</h4>\n<p>Source code lives at <a href=\"http://github.com/collective/collective.recipe.pydevproject\" rel=\"nofollow\">http://github.com/collective/collective.recipe.pydevproject</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"change-history\">\n<h2>Change history</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1 (2012-12-01)</span></h2>\n<ul>\n<li>Initial implementation.\n[marciomazza]</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<blockquote>\n<ul>\n<li>Marcio Mazza [marciomazza]</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 788149, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b9a5054aac88a37dff7e4c01450ff456", "sha256": "6cba8624738af0cb26d075d7c37fdf93baa2bfa598ec6c05d53b1ed12fd34074"}, "downloads": -1, "filename": "collective.recipe.pydevproject-0.1.zip", "has_sig": false, "md5_digest": "b9a5054aac88a37dff7e4c01450ff456", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11693, "upload_time": "2012-12-01T21:02:10", "upload_time_iso_8601": "2012-12-01T21:02:10.778392Z", "url": "https://files.pythonhosted.org/packages/b5/e5/9ea7290dc6075cdaa3292defda10df5ab4f2756149b495e84bed235d6d77/collective.recipe.pydevproject-0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9a5054aac88a37dff7e4c01450ff456", "sha256": "6cba8624738af0cb26d075d7c37fdf93baa2bfa598ec6c05d53b1ed12fd34074"}, "downloads": -1, "filename": "collective.recipe.pydevproject-0.1.zip", "has_sig": false, "md5_digest": "b9a5054aac88a37dff7e4c01450ff456", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11693, "upload_time": "2012-12-01T21:02:10", "upload_time_iso_8601": "2012-12-01T21:02:10.778392Z", "url": "https://files.pythonhosted.org/packages/b5/e5/9ea7290dc6075cdaa3292defda10df5ab4f2756149b495e84bed235d6d77/collective.recipe.pydevproject-0.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:54 2020"}