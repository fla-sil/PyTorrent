{"info": {"author": "4teamwork AG", "author_email": "mailto:info@4teamwork.ch", "bugtrack_url": null, "classifiers": [], "description": "supervisor-haproxy\n==================\n\n``supervisor-haproxy`` is a supervisor event listener for notifying HaProxy\nwhen the status of programs change.\n\nBy actively notifying HaProxy we can avoid that HaProxy sends requests to\nservers which are down or will be down shortly for maintenance.\n\nThe event listener listens to supervisors ``PROCESS_STATE`` events and sends\nstatus updates to HaProxy via an admin-level stats socket.\n\n\nConfiguration\n-------------\n\nWhen the egg ``supervisor-haproxy`` is installed, the supervisor event listener\nis created as console script ``supervisor-haproxy``.\nIt needs to be configured in the supervisor configuration and requires the\nhaproxy stats socket and the program infos in order to work correctly.\n\nThe program infos have the form ``supervisorProgram:HaProxyBackend/HaProxyServer``,\nfor example ``instance2:plone04/plone0402`` and tell the event listener which\nprogram in supervisor is which backend server in haproxy.\n\nFirst configure a stats socket in the **haproxy config**:\n\n.. code::\n\n   global\n       stats socket ipv4@127.0.0.1:8801 level admin\n\nthen configure the supervisor haproxy event listener in the **supervisor config**:\n\n.. code:: ini\n\n    [eventlistener:HaProxy]\n    command = .../bin/supervisor-haproxy tcp://localhost:8801 instance1:plone01/plone0101 instance2:plone01/plone0102\n    events = PROCESS_STATE\n    process_name=HaProxy\n\nExample using buildout for configuring supervisor:\n\n.. code:: ini\n\n    [supervisor]\n    plugins +=\n        supervisor-haproxy\n    eventlisteners +=\n        HaProxy PROCESS_STATE ${buildout:bin-directory}/supervisor-haproxy [tcp://localhost:8801 instance1:plone01/plone0101 instance2:plone01/plone0102]\n\n\n\nDevelopment / Tests\n-------------------\n\nFor development and running tests you need to install:\n\n- `tox <https://tox.readthedocs.io/en/latest/>`_ in order to run the tests.\n- `docker <https://www.docker.com/>`_ so that the tests can set up a haproxy\n  for testing against.\n\nAfter installing `tox` and `docker` you can clone the repository and run the\ntests with the `tox` command:\n\n.. code:: bash\n\n    $ git clone git@github.com:4teamwork/supervisor-haproxy.git\n    $ cd supervisor-haproxy\n    $ tox\n\nWhile running the tests, the haproxy in docker will be bound to the port ``9902``,\nso you need to make sure that this port is available.\n\n\nLinks\n-----\n\n- Github: https://github.com/4teamwork/supervisor-haproxy\n- Issues: https://github.com/4teamwork/supervisor-haproxy/issue\n- Pypi: http://pypi.python.org/pypi/supervisor-haproxy\n\n\nCopyright\n---------\n\nThis package is copyright by `4teamwork <http://www.4teamwork.ch/>`_.\n\n``supervisor-haproxy`` is licensed under GNU General Public License, version 2.\n\nChangelog\n=========\n\n\n1.1.0 (2017-06-09)\n------------------\n\n- Avoid high CPU load problem when connection to HaProxy fails. [jone]\n\n\n1.0.0 (2016-09-30)\n------------------\n\n- Initial implementation\n  [jone]", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/4teamwork/supervisor-haproxy", "keywords": "", "license": "GPL2", "maintainer": "", "maintainer_email": "", "name": "supervisor-haproxy", "package_url": "https://pypi.org/project/supervisor-haproxy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/supervisor-haproxy/", "project_urls": {"Homepage": "https://github.com/4teamwork/supervisor-haproxy"}, "release_url": "https://pypi.org/project/supervisor-haproxy/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "supervisor eventlistener for notifying haproxy", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"supervisor-haproxy\">\n<h2>supervisor-haproxy</h2>\n<p><tt><span class=\"pre\">supervisor-haproxy</span></tt> is a supervisor event listener for notifying HaProxy\nwhen the status of programs change.</p>\n<p>By actively notifying HaProxy we can avoid that HaProxy sends requests to\nservers which are down or will be down shortly for maintenance.</p>\n<p>The event listener listens to supervisors <tt>PROCESS_STATE</tt> events and sends\nstatus updates to HaProxy via an admin-level stats socket.</p>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>When the egg <tt><span class=\"pre\">supervisor-haproxy</span></tt> is installed, the supervisor event listener\nis created as console script <tt><span class=\"pre\">supervisor-haproxy</span></tt>.\nIt needs to be configured in the supervisor configuration and requires the\nhaproxy stats socket and the program infos in order to work correctly.</p>\n<p>The program infos have the form <tt>supervisorProgram:HaProxyBackend/HaProxyServer</tt>,\nfor example <tt>instance2:plone04/plone0402</tt> and tell the event listener which\nprogram in supervisor is which backend server in haproxy.</p>\n<p>First configure a stats socket in the <strong>haproxy config</strong>:</p>\n<pre>global\n    stats socket ipv4@127.0.0.1:8801 level admin\n</pre>\n<p>then configure the supervisor haproxy event listener in the <strong>supervisor config</strong>:</p>\n<pre><span class=\"k\">[eventlistener:HaProxy]</span>\n<span class=\"na\">command</span> <span class=\"o\">=</span> <span class=\"s\">.../bin/supervisor-haproxy tcp://localhost:8801 instance1:plone01/plone0101 instance2:plone01/plone0102</span>\n<span class=\"na\">events</span> <span class=\"o\">=</span> <span class=\"s\">PROCESS_STATE</span>\n<span class=\"na\">process_name</span><span class=\"o\">=</span><span class=\"s\">HaProxy</span>\n</pre>\n<p>Example using buildout for configuring supervisor:</p>\n<pre><span class=\"k\">[supervisor]</span>\n<span class=\"na\">plugins +</span><span class=\"o\">=</span><span class=\"s\">\n    supervisor-haproxy</span>\n<span class=\"na\">eventlisteners +</span><span class=\"o\">=</span><span class=\"s\">\n    HaProxy PROCESS_STATE ${buildout:bin-directory}/supervisor-haproxy [tcp://localhost:8801 instance1:plone01/plone0101 instance2:plone01/plone0102]</span>\n</pre>\n</div>\n<div id=\"development-tests\">\n<h3>Development / Tests</h3>\n<p>For development and running tests you need to install:</p>\n<ul>\n<li><a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a> in order to run the tests.</li>\n<li><a href=\"https://www.docker.com/\" rel=\"nofollow\">docker</a> so that the tests can set up a haproxy\nfor testing against.</li>\n</ul>\n<p>After installing <cite>tox</cite> and <cite>docker</cite> you can clone the repository and run the\ntests with the <cite>tox</cite> command:</p>\n<pre>$ git clone git@github.com:4teamwork/supervisor-haproxy.git\n$ <span class=\"nb\">cd</span> supervisor-haproxy\n$ tox\n</pre>\n<p>While running the tests, the haproxy in docker will be bound to the port <tt>9902</tt>,\nso you need to make sure that this port is available.</p>\n</div>\n<div id=\"links\">\n<h3>Links</h3>\n<ul>\n<li>Github: <a href=\"https://github.com/4teamwork/supervisor-haproxy\" rel=\"nofollow\">https://github.com/4teamwork/supervisor-haproxy</a></li>\n<li>Issues: <a href=\"https://github.com/4teamwork/supervisor-haproxy/issue\" rel=\"nofollow\">https://github.com/4teamwork/supervisor-haproxy/issue</a></li>\n<li>Pypi: <a href=\"http://pypi.python.org/pypi/supervisor-haproxy\" rel=\"nofollow\">http://pypi.python.org/pypi/supervisor-haproxy</a></li>\n</ul>\n</div>\n<div id=\"copyright\">\n<h3>Copyright</h3>\n<p>This package is copyright by <a href=\"http://www.4teamwork.ch/\" rel=\"nofollow\">4teamwork</a>.</p>\n<p><tt><span class=\"pre\">supervisor-haproxy</span></tt> is licensed under GNU General Public License, version 2.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.1.0 (2017-06-09)</h3>\n<ul>\n<li>Avoid high CPU load problem when connection to HaProxy fails. [jone]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.0 (2016-09-30)</h3>\n<ul>\n<li>Initial implementation\n[jone]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6573532, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a088af476c3870f7c61a79de551a99af", "sha256": "abf249eeee7b5f1d7fa23f33d6c970c77aed4d31b336c76e10b5e4ff6bd598f6"}, "downloads": -1, "filename": "supervisor-haproxy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a088af476c3870f7c61a79de551a99af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13452, "upload_time": "2016-09-30T16:04:30", "upload_time_iso_8601": "2016-09-30T16:04:30.486924Z", "url": "https://files.pythonhosted.org/packages/1b/f6/1c79fbd7af3a9799aefe4f527ef0e1243fc49150948d00e2e61a1befdb2b/supervisor-haproxy-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9fc93a2a0f86c9c78b54ec44fb5c7997", "sha256": "96b4c9d553ac6bcc66ff2b9e99164f79f74e04de8fd7bd9328f754931e97f63d"}, "downloads": -1, "filename": "supervisor-haproxy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9fc93a2a0f86c9c78b54ec44fb5c7997", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15477, "upload_time": "2017-06-09T06:49:20", "upload_time_iso_8601": "2017-06-09T06:49:20.228657Z", "url": "https://files.pythonhosted.org/packages/e3/af/7910f3d6b7a37de8f8e78b427e97b0f205b6ef19f9b3ef858f7831f8dd14/supervisor-haproxy-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9fc93a2a0f86c9c78b54ec44fb5c7997", "sha256": "96b4c9d553ac6bcc66ff2b9e99164f79f74e04de8fd7bd9328f754931e97f63d"}, "downloads": -1, "filename": "supervisor-haproxy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9fc93a2a0f86c9c78b54ec44fb5c7997", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15477, "upload_time": "2017-06-09T06:49:20", "upload_time_iso_8601": "2017-06-09T06:49:20.228657Z", "url": "https://files.pythonhosted.org/packages/e3/af/7910f3d6b7a37de8f8e78b427e97b0f205b6ef19f9b3ef858f7831f8dd14/supervisor-haproxy-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:07 2020"}