{"info": {"author": "Yifan Wu", "author_email": "yw693@cornell.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# python-text-distance\n\n[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/) \n[![Generic badge](https://img.shields.io/badge/pypi%20package-0.1.5-blue.svg)](https://pypi.org/project/pytextdist/)\n[![Build Status](https://travis-ci.com/ywu94/python-text-distance.svg?branch=master)](https://travis-ci.com/ywu94/python-text-distance)\n[![Maintenance](https://img.shields.io/badge/maintained%3F-yes-1abc9c.svg)](https://github.com/ywu94/python-text-distance/graphs/commit-activity)\n[![Generic badge](https://img.shields.io/badge/contact-yw693@cornell.edu-blue.svg)]()\n\nA python implementation of a variety of text distance and similarity metrics.\n\n* [Install](#install)\n* [How to Use](#use)\n* [Module](#module)\n  * [Edit Distance](#edit)\n     * [Levenshtein Distance & Similarity](#lev_dis)\n     * [Longest Common Subsequence Distance & Similarity](#lcs_dis)\n     * [Damerau-Levenshtein Distance & Similarity](#dam_dis)\n     * [Hamming Distance & Similarity](#ham_dis)\n     * [Jaro & Jaro-Winkler Similarity & Similarity](#jaro_dis)\n  * [Vector Similarity](#vec)\n     * [Cosine Similarity](#cos_sim)\n     * [Jaccard Similarity](#jac_sim)\n     * [Sorensen Dice Similarity](#sor_sim)\n     * [Q-Gram Similarity](#qgr_sim)\n* [Customize Preprocess](#preprocessing)\n\n---\n\n<a id='install'></a>\n## Install\n\nRequirements: `py>=3.3`\n\nInstall Command: `pip install pytextdist`\n\n---\n\n<a id='use'></a>\n## How to use\n\nThe functions in this package takes two strings as input and return the distance/similarity metric between them. The preprocessing of the strings are included in the functions with default recommendation. If you want to change the preprocessing see [Customize Preprocessing](#preprocessing).\n\n---\n<a id='module'></a>\n## Modules\n\n<a id='edit'></a>\n### Edit Distance\n\nBy default functions in this module consider single character as the unit for editting.\n\n<a id='lev_dis'></a>\n**[Levenshtein Distance & Similarity](https://en.wikipedia.org/wiki/Levenshtein_distance)**: edit with insertion, deletion, and substitution\n\n```python\nfrom pytextdist.edit_distance import levenshtein_distance, levenshtein_similarity\n\nstr_a = 'kitten'\nstr_b = 'sitting'\ndist = levenshtein_distance(str_a,str_b)\nsimi = levenshtein_similarity(str_a,str_b)\nprint(f\"Levenshtein Distance:{dist:.0f}\\nLevenshtein Similarity:{simi:.2f}\")\n\n>> Levenshtein Distance:3\n>> Levenshtein Similarity:0.57\n```\n<a id='lcs_dis'></a>\n**[Longest Common Subsequence Distance & Similarity](https://en.wikipedia.org/wiki/Longest_common_subsequence_problem)**: edit with insertion and deletion \n\n```python\nfrom pytextdist.edit_distance import lcs_distance, lcs_similarity\n\nstr_a = 'kitten'\nstr_b = 'sitting'\ndist = lcs_distance(str_a,str_b)\nsimi = lcs_similarity(str_a,str_b)\nprint(f\"LCS Distance:{dist:.0f}\\nLCS Similarity:{simi:.2f}\")\n\n>> LCS Distance:5\n>> LCS Similarity:0.62\n```\n\n<a id='dam_dis'></a>\n**[Damerau-Levenshtein Distance & Similarity](https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance)**: edit with insertion, deletion, substitution, and transposition of two adjacent units\n\n```python\nfrom pytextdist.edit_distance import damerau_levenshtein_distance, damerau_levenshtein_similarity\n\nstr_a = 'kitten'\nstr_b = 'sitting'\ndist = damerau_levenshtein_distance(str_a,str_b)\nsimi = damerau_levenshtein_similarity(str_a,str_b)\nprint(f\"Damerau-Levenshtein Distance:{dist:.0f}\\nDamerau-Levenshtein Similarity:{simi:.2f}\")\n\n>> Damerau-Levenshtein Distance:3\n>> Damerau-Levenshtein Similarity:0.57\n```\n\n<a id='ham_dis'></a>\n**[Hamming Distance & Similarity](https://en.wikipedia.org/wiki/Hamming_distance)**: edit with substition; note that hamming metric only works for phrases of the same lengths\n\n```python\nfrom pytextdist.edit_distance import hamming_distance, hamming_similarity\n\nstr_a = 'kittens'\nstr_b = 'sitting'\ndist = hamming_distance(str_a,str_b)\nsimi = hamming_similarity(str_a,str_b)\nprint(f\"Hamming Distance:{dist:.0f}\\nHamming Similarity:{simi:.2f}\")\n\n>> Hamming Distance:3\n>> Hamming Similarity:0.57\n```\n\n<a id='jaro_dis'></a>\n**[Jaro & Jaro-Winkler Similarity](https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance)**: edit with transposition\n\n```python\nfrom pytextdist.edit_distance import jaro_similarity, jaro_winkler_similarity\n\nstr_a = 'sitten'\nstr_b = 'sitting'\nsimi_j = jaro_similarity(str_a,str_b)\nsimi_jw = jaro_winkler_similarity(str_a,str_b)\nprint(f\"Jaro Similarity:{simi_j:.2f}\\nJaro-Winkler Similarity:{simi_jw:.2f}\")\n\n>> Jaro Similarity:0.85\n>> Jaro-Winkler Similarity:0.91\n```\n\n<a id='vec'></a>\n### Vector Similarity\n\nBy default functions in this module use unigram (single word) to build vectors and calculate similarity. You can change `n` to other numbers for n-gram (n contiguous words) vector similarity. \n\n<a id='cos_sim'></a>\n**[Cosine Similarity](https://en.wikipedia.org/wiki/Cosine_similarity)**\n\n```python\nfrom pytextdist.vector_similarity import cosine_similarity\n\nphrase_a = 'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'\nphrase_b = 'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'\nsimi_1 = cosine_similarity(phrase_a, phrase_b, n=1)\nsimi_2 = cosine_similarity(phrase_a, phrase_b, n=2)\nprint(f\"Unigram Cosine Similarity:{simi_1:.2f}\\nBigram Cosine Similarity:{simi_2:.2f}\")\n\n>> Unigram Cosine Similarity:0.65\n>> Bigram Cosine Similarity:0.38\n```\n\n<a id='jac_sim'></a>\n**[Jaccard Similarity](https://en.wikipedia.org/wiki/Jaccard_index)**\n\n```python\nfrom pytextdist.vector_similarity import jaccard_similarity\n\nphrase_a = 'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'\nphrase_b = 'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'\nsimi_1 = jaccard_similarity(phrase_a, phrase_b, n=1)\nsimi_2 = jaccard_similarity(phrase_a, phrase_b, n=2)\nprint(f\"Unigram Jaccard Similarity:{simi_1:.2f}\\nBigram Jaccard Similarity:{simi_2:.2f}\")\n\n>> Unigram Jaccard Similarity:0.47\n>> Bigram Jaccard Similarity:0.22\n```\n\n<a id='sor_sim'></a>\n**[Sorensen Dice Similarity](https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient)**\n\n```python\nfrom pytextdist.vector_similarity import sorensen_dice_similarity\n\nphrase_a = 'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'\nphrase_b = 'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'\nsimi_1 = sorensen_dice_similarity(phrase_a, phrase_b, n=1)\nsimi_2 = sorensen_dice_similarity(phrase_a, phrase_b, n=2)\nprint(f\"Unigram Sorensen Dice Similarity:{simi_1:.2f}\\nBigram Sorensen Dice Similarity:{simi_2:.2f}\")\n\n>> Unigram Sorensen Dice Similarity:0.64\n>> Bigram Sorensen Dice Similarity:0.36\n```\n\n<a id='qgr_sim'></a>\n**[Q-Gram Similarity](https://www.sciencedirect.com/science/article/pii/0304397592901434)**\n\n```python\nfrom pytextdist.vector_similarity import qgram_similarity\n\nphrase_a = 'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'\nphrase_b = 'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'\nsimi_1 = qgram_similarity(phrase_a, phrase_b, n=1)\nsimi_2 = qgram_similarity(phrase_a, phrase_b, n=2)\nprint(f\"Unigram Q-Gram Similarity:{simi_1:.2f}\\nBigram Q-Gram Similarity:{simi_2:.2f}\")\n\n>> Unigram Q-Gram Similarity:0.32\n>> Bigram Q-Gram Similarity:0.15\n```\n\n<a id='preprocessing'></a>\n## Customize Preprocessing\n\nAll functions will perform `pytextdist.preprocessing.phrase_preprocessing` to clean the input strings and convert them to a list of tokens.\n\n* **When grain=\"char\" - remove specific characters from the string and convert it to a list of characters**\n\n   The following boolean parameters control what characters to remove/change from the string (all True by default):\n\n   *- ignore_non_alnumspc*: whether to remove all non-numeric/alpha/space characters <br/>\n   *- ignore_space*: whether to remove all space <br/>\n   *- ignore_numeric*: whether to remove all numeric characters <br/>\n   *- ignore_case*: whether to convert all alpha charachers to lower case <br/>\n\n   Example:\n  ```python\n  from pytextdist.preprocessing import phrase_preprocessing\n\n  before = 'AI Top-50'\n  after = phrase_preprocessing(before, grain='char')\n  print(after)\n\n  >> ['a', 'i', 't', 'o', 'p']\n  ```\n\n* **When grain=\"word\" - convert the string to a list of words and remove specific characters from the words**\n\n   The string is firstly converted to a list of words assuming all words are separated by one space, then the following boolean parameters control what characters to remove/change from the string (all True by default):\n\n   *- ignore_non_alnumspc*: whether to remove all non-numeric/alpha/space characters <br/>\n   *- ignore_numeric*: whether to remove all numeric characters <br/>\n   *- ignore_case*: whether to convert all alpha charachers to lower case <br/>\n\n  Example:\n  ```python\n  from pytextdist.preprocessing import phrase_preprocessing\n\n  before = 'AI Top-50'\n  after = phrase_preprocessing(before, grain='word')\n  print(after)\n\n  >> ['ai', 'top']\n  ```\n\nFunctions under the vector similarity module will also perform `pytextdist.preprocessing.ngram_counter` on the list return from `pytextdist.preprocessing.phrase_preprocessing`.\n\n* **Convert a list of tokens to a counter of the n-grams**\n\n   The following parameter control the n to use for n-grams (1 by default):\n\n   *- n*: number of contiguous items to use to form a sequence\n\n   Example:\n  ```python\n  from pytextdist.preprocessing import phrase_preprocessing, ngram_counter\n\n  before = 'AI Top-50 Company'\n  after = phrase_preprocessing(before, grain='word')\n  print(after)\n  ngram_cnt_1 = ngram_counter(after, n=1)\n  print(ngram_cnt_1)\n  ngram_cnt_2 = ngram_counter(after, n=2)\n  print(ngram_cnt_2)\n\n  >> ['ai', 'top', 'company']\n  >> Counter({'ai': 1, 'top': 1, 'company': 1})\n  >> Counter({'ai top': 1, 'top company': 1})\n  ```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytextdist", "package_url": "https://pypi.org/project/pytextdist/", "platform": "", "project_url": "https://pypi.org/project/pytextdist/", "project_urls": null, "release_url": "https://pypi.org/project/pytextdist/0.1.6/", "requires_dist": null, "requires_python": ">=3.3", "summary": "A python implementation of a variety of text distance and similarity metrics.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-text-distance</h1>\n<p><a href=\"https://lbesson.mit-license.org/\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://pypi.org/project/pytextdist/\" rel=\"nofollow\"><img alt=\"Generic badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddc4d5b50e267b07fd1ccc26d5721a15d051668c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707970692532307061636b6167652d302e312e352d626c75652e737667\"></a>\n<a href=\"https://travis-ci.com/ywu94/python-text-distance\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a6a0f82e2a791ae8fe3521fa28d4c5952a8aefe/68747470733a2f2f7472617669732d63692e636f6d2f79777539342f707974686f6e2d746578742d64697374616e63652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/ywu94/python-text-distance/graphs/commit-activity\" rel=\"nofollow\"><img alt=\"Maintenance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03c7b3c45d5367953aea0e30b847fbcce5ae60f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e65642533462d7965732d3161626339632e737667\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"Generic badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b719594978914713081baf00bccf947c7e9523f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e746163742d797736393340636f726e656c6c2e6564752d626c75652e737667\"></a></p>\n<p>A python implementation of a variety of text distance and similarity metrics.</p>\n<ul>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#use\" rel=\"nofollow\">How to Use</a></li>\n<li><a href=\"#module\" rel=\"nofollow\">Module</a>\n<ul>\n<li><a href=\"#edit\" rel=\"nofollow\">Edit Distance</a>\n<ul>\n<li><a href=\"#lev_dis\" rel=\"nofollow\">Levenshtein Distance &amp; Similarity</a></li>\n<li><a href=\"#lcs_dis\" rel=\"nofollow\">Longest Common Subsequence Distance &amp; Similarity</a></li>\n<li><a href=\"#dam_dis\" rel=\"nofollow\">Damerau-Levenshtein Distance &amp; Similarity</a></li>\n<li><a href=\"#ham_dis\" rel=\"nofollow\">Hamming Distance &amp; Similarity</a></li>\n<li><a href=\"#jaro_dis\" rel=\"nofollow\">Jaro &amp; Jaro-Winkler Similarity &amp; Similarity</a></li>\n</ul>\n</li>\n<li><a href=\"#vec\" rel=\"nofollow\">Vector Similarity</a>\n<ul>\n<li><a href=\"#cos_sim\" rel=\"nofollow\">Cosine Similarity</a></li>\n<li><a href=\"#jac_sim\" rel=\"nofollow\">Jaccard Similarity</a></li>\n<li><a href=\"#sor_sim\" rel=\"nofollow\">Sorensen Dice Similarity</a></li>\n<li><a href=\"#qgr_sim\" rel=\"nofollow\">Q-Gram Similarity</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#preprocessing\" rel=\"nofollow\">Customize Preprocess</a></li>\n</ul>\n<hr>\n<p><a id=\"install\"></a></p>\n<h2>Install</h2>\n<p>Requirements: <code>py&gt;=3.3</code></p>\n<p>Install Command: <code>pip install pytextdist</code></p>\n<hr>\n<p><a id=\"use\"></a></p>\n<h2>How to use</h2>\n<p>The functions in this package takes two strings as input and return the distance/similarity metric between them. The preprocessing of the strings are included in the functions with default recommendation. If you want to change the preprocessing see <a href=\"#preprocessing\" rel=\"nofollow\">Customize Preprocessing</a>.</p>\n<hr>\n<p><a id=\"module\"></a></p>\n<h2>Modules</h2>\n<p><a id=\"edit\"></a></p>\n<h3>Edit Distance</h3>\n<p>By default functions in this module consider single character as the unit for editting.</p>\n<p><a id=\"lev_dis\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Levenshtein_distance\" rel=\"nofollow\">Levenshtein Distance &amp; Similarity</a></strong>: edit with insertion, deletion, and substitution</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.edit_distance</span> <span class=\"kn\">import</span> <span class=\"n\">levenshtein_distance</span><span class=\"p\">,</span> <span class=\"n\">levenshtein_similarity</span>\n\n<span class=\"n\">str_a</span> <span class=\"o\">=</span> <span class=\"s1\">'kitten'</span>\n<span class=\"n\">str_b</span> <span class=\"o\">=</span> <span class=\"s1\">'sitting'</span>\n<span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">levenshtein_distance</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"n\">simi</span> <span class=\"o\">=</span> <span class=\"n\">levenshtein_similarity</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Levenshtein Distance:</span><span class=\"si\">{</span><span class=\"n\">dist</span><span class=\"si\">:</span><span class=\"s2\">.0f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Levenshtein Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Levenshtein</span> <span class=\"n\">Distance</span><span class=\"p\">:</span><span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Levenshtein</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.57</span>\n</pre>\n<p><a id=\"lcs_dis\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Longest_common_subsequence_problem\" rel=\"nofollow\">Longest Common Subsequence Distance &amp; Similarity</a></strong>: edit with insertion and deletion</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.edit_distance</span> <span class=\"kn\">import</span> <span class=\"n\">lcs_distance</span><span class=\"p\">,</span> <span class=\"n\">lcs_similarity</span>\n\n<span class=\"n\">str_a</span> <span class=\"o\">=</span> <span class=\"s1\">'kitten'</span>\n<span class=\"n\">str_b</span> <span class=\"o\">=</span> <span class=\"s1\">'sitting'</span>\n<span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">lcs_distance</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"n\">simi</span> <span class=\"o\">=</span> <span class=\"n\">lcs_similarity</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"LCS Distance:</span><span class=\"si\">{</span><span class=\"n\">dist</span><span class=\"si\">:</span><span class=\"s2\">.0f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">LCS Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">LCS</span> <span class=\"n\">Distance</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">LCS</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.62</span>\n</pre>\n<p><a id=\"dam_dis\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance\" rel=\"nofollow\">Damerau-Levenshtein Distance &amp; Similarity</a></strong>: edit with insertion, deletion, substitution, and transposition of two adjacent units</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.edit_distance</span> <span class=\"kn\">import</span> <span class=\"n\">damerau_levenshtein_distance</span><span class=\"p\">,</span> <span class=\"n\">damerau_levenshtein_similarity</span>\n\n<span class=\"n\">str_a</span> <span class=\"o\">=</span> <span class=\"s1\">'kitten'</span>\n<span class=\"n\">str_b</span> <span class=\"o\">=</span> <span class=\"s1\">'sitting'</span>\n<span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">damerau_levenshtein_distance</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"n\">simi</span> <span class=\"o\">=</span> <span class=\"n\">damerau_levenshtein_similarity</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Damerau-Levenshtein Distance:</span><span class=\"si\">{</span><span class=\"n\">dist</span><span class=\"si\">:</span><span class=\"s2\">.0f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Damerau-Levenshtein Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Damerau</span><span class=\"o\">-</span><span class=\"n\">Levenshtein</span> <span class=\"n\">Distance</span><span class=\"p\">:</span><span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Damerau</span><span class=\"o\">-</span><span class=\"n\">Levenshtein</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.57</span>\n</pre>\n<p><a id=\"ham_dis\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" rel=\"nofollow\">Hamming Distance &amp; Similarity</a></strong>: edit with substition; note that hamming metric only works for phrases of the same lengths</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.edit_distance</span> <span class=\"kn\">import</span> <span class=\"n\">hamming_distance</span><span class=\"p\">,</span> <span class=\"n\">hamming_similarity</span>\n\n<span class=\"n\">str_a</span> <span class=\"o\">=</span> <span class=\"s1\">'kittens'</span>\n<span class=\"n\">str_b</span> <span class=\"o\">=</span> <span class=\"s1\">'sitting'</span>\n<span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">hamming_distance</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"n\">simi</span> <span class=\"o\">=</span> <span class=\"n\">hamming_similarity</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Hamming Distance:</span><span class=\"si\">{</span><span class=\"n\">dist</span><span class=\"si\">:</span><span class=\"s2\">.0f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Hamming Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Hamming</span> <span class=\"n\">Distance</span><span class=\"p\">:</span><span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Hamming</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.57</span>\n</pre>\n<p><a id=\"jaro_dis\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance\" rel=\"nofollow\">Jaro &amp; Jaro-Winkler Similarity</a></strong>: edit with transposition</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.edit_distance</span> <span class=\"kn\">import</span> <span class=\"n\">jaro_similarity</span><span class=\"p\">,</span> <span class=\"n\">jaro_winkler_similarity</span>\n\n<span class=\"n\">str_a</span> <span class=\"o\">=</span> <span class=\"s1\">'sitten'</span>\n<span class=\"n\">str_b</span> <span class=\"o\">=</span> <span class=\"s1\">'sitting'</span>\n<span class=\"n\">simi_j</span> <span class=\"o\">=</span> <span class=\"n\">jaro_similarity</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"n\">simi_jw</span> <span class=\"o\">=</span> <span class=\"n\">jaro_winkler_similarity</span><span class=\"p\">(</span><span class=\"n\">str_a</span><span class=\"p\">,</span><span class=\"n\">str_b</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Jaro Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_j</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Jaro-Winkler Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_jw</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Jaro</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.85</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Jaro</span><span class=\"o\">-</span><span class=\"n\">Winkler</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.91</span>\n</pre>\n<p><a id=\"vec\"></a></p>\n<h3>Vector Similarity</h3>\n<p>By default functions in this module use unigram (single word) to build vectors and calculate similarity. You can change <code>n</code> to other numbers for n-gram (n contiguous words) vector similarity.</p>\n<p><a id=\"cos_sim\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Cosine_similarity\" rel=\"nofollow\">Cosine Similarity</a></strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.vector_similarity</span> <span class=\"kn\">import</span> <span class=\"n\">cosine_similarity</span>\n\n<span class=\"n\">phrase_a</span> <span class=\"o\">=</span> <span class=\"s1\">'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'</span>\n<span class=\"n\">phrase_b</span> <span class=\"o\">=</span> <span class=\"s1\">'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'</span>\n<span class=\"n\">simi_1</span> <span class=\"o\">=</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">simi_2</span> <span class=\"o\">=</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Unigram Cosine Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_1</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Bigram Cosine Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_2</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Unigram</span> <span class=\"n\">Cosine</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.65</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Bigram</span> <span class=\"n\">Cosine</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.38</span>\n</pre>\n<p><a id=\"jac_sim\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/Jaccard_index\" rel=\"nofollow\">Jaccard Similarity</a></strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.vector_similarity</span> <span class=\"kn\">import</span> <span class=\"n\">jaccard_similarity</span>\n\n<span class=\"n\">phrase_a</span> <span class=\"o\">=</span> <span class=\"s1\">'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'</span>\n<span class=\"n\">phrase_b</span> <span class=\"o\">=</span> <span class=\"s1\">'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'</span>\n<span class=\"n\">simi_1</span> <span class=\"o\">=</span> <span class=\"n\">jaccard_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">simi_2</span> <span class=\"o\">=</span> <span class=\"n\">jaccard_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Unigram Jaccard Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_1</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Bigram Jaccard Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_2</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Unigram</span> <span class=\"n\">Jaccard</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.47</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Bigram</span> <span class=\"n\">Jaccard</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.22</span>\n</pre>\n<p><a id=\"sor_sim\"></a>\n<strong><a href=\"https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient\" rel=\"nofollow\">Sorensen Dice Similarity</a></strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.vector_similarity</span> <span class=\"kn\">import</span> <span class=\"n\">sorensen_dice_similarity</span>\n\n<span class=\"n\">phrase_a</span> <span class=\"o\">=</span> <span class=\"s1\">'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'</span>\n<span class=\"n\">phrase_b</span> <span class=\"o\">=</span> <span class=\"s1\">'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'</span>\n<span class=\"n\">simi_1</span> <span class=\"o\">=</span> <span class=\"n\">sorensen_dice_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">simi_2</span> <span class=\"o\">=</span> <span class=\"n\">sorensen_dice_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Unigram Sorensen Dice Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_1</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Bigram Sorensen Dice Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_2</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Unigram</span> <span class=\"n\">Sorensen</span> <span class=\"n\">Dice</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.64</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Bigram</span> <span class=\"n\">Sorensen</span> <span class=\"n\">Dice</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.36</span>\n</pre>\n<p><a id=\"qgr_sim\"></a>\n<strong><a href=\"https://www.sciencedirect.com/science/article/pii/0304397592901434\" rel=\"nofollow\">Q-Gram Similarity</a></strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.vector_similarity</span> <span class=\"kn\">import</span> <span class=\"n\">qgram_similarity</span>\n\n<span class=\"n\">phrase_a</span> <span class=\"o\">=</span> <span class=\"s1\">'For Paperwork Reduction Act Notice, see your tax return instructions. For Paperwork Reduction Act Notice, see your tax return instructions.'</span>\n<span class=\"n\">phrase_b</span> <span class=\"o\">=</span> <span class=\"s1\">'For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040'</span>\n<span class=\"n\">simi_1</span> <span class=\"o\">=</span> <span class=\"n\">qgram_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">simi_2</span> <span class=\"o\">=</span> <span class=\"n\">qgram_similarity</span><span class=\"p\">(</span><span class=\"n\">phrase_a</span><span class=\"p\">,</span> <span class=\"n\">phrase_b</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Unigram Q-Gram Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_1</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Bigram Q-Gram Similarity:</span><span class=\"si\">{</span><span class=\"n\">simi_2</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Unigram</span> <span class=\"n\">Q</span><span class=\"o\">-</span><span class=\"n\">Gram</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.32</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Bigram</span> <span class=\"n\">Q</span><span class=\"o\">-</span><span class=\"n\">Gram</span> <span class=\"n\">Similarity</span><span class=\"p\">:</span><span class=\"mf\">0.15</span>\n</pre>\n<p><a id=\"preprocessing\"></a></p>\n<h2>Customize Preprocessing</h2>\n<p>All functions will perform <code>pytextdist.preprocessing.phrase_preprocessing</code> to clean the input strings and convert them to a list of tokens.</p>\n<ul>\n<li>\n<p><strong>When grain=\"char\" - remove specific characters from the string and convert it to a list of characters</strong></p>\n<p>The following boolean parameters control what characters to remove/change from the string (all True by default):</p>\n<p><em>- ignore_non_alnumspc</em>: whether to remove all non-numeric/alpha/space characters <br>\n<em>- ignore_space</em>: whether to remove all space <br>\n<em>- ignore_numeric</em>: whether to remove all numeric characters <br>\n<em>- ignore_case</em>: whether to convert all alpha charachers to lower case <br></p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">phrase_preprocessing</span>\n\n<span class=\"n\">before</span> <span class=\"o\">=</span> <span class=\"s1\">'AI Top-50'</span>\n<span class=\"n\">after</span> <span class=\"o\">=</span> <span class=\"n\">phrase_preprocessing</span><span class=\"p\">(</span><span class=\"n\">before</span><span class=\"p\">,</span> <span class=\"n\">grain</span><span class=\"o\">=</span><span class=\"s1\">'char'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'i'</span><span class=\"p\">,</span> <span class=\"s1\">'t'</span><span class=\"p\">,</span> <span class=\"s1\">'o'</span><span class=\"p\">,</span> <span class=\"s1\">'p'</span><span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p><strong>When grain=\"word\" - convert the string to a list of words and remove specific characters from the words</strong></p>\n<p>The string is firstly converted to a list of words assuming all words are separated by one space, then the following boolean parameters control what characters to remove/change from the string (all True by default):</p>\n<p><em>- ignore_non_alnumspc</em>: whether to remove all non-numeric/alpha/space characters <br>\n<em>- ignore_numeric</em>: whether to remove all numeric characters <br>\n<em>- ignore_case</em>: whether to convert all alpha charachers to lower case <br></p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">phrase_preprocessing</span>\n\n<span class=\"n\">before</span> <span class=\"o\">=</span> <span class=\"s1\">'AI Top-50'</span>\n<span class=\"n\">after</span> <span class=\"o\">=</span> <span class=\"n\">phrase_preprocessing</span><span class=\"p\">(</span><span class=\"n\">before</span><span class=\"p\">,</span> <span class=\"n\">grain</span><span class=\"o\">=</span><span class=\"s1\">'word'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'ai'</span><span class=\"p\">,</span> <span class=\"s1\">'top'</span><span class=\"p\">]</span>\n</pre>\n</li>\n</ul>\n<p>Functions under the vector similarity module will also perform <code>pytextdist.preprocessing.ngram_counter</code> on the list return from <code>pytextdist.preprocessing.phrase_preprocessing</code>.</p>\n<ul>\n<li>\n<p><strong>Convert a list of tokens to a counter of the n-grams</strong></p>\n<p>The following parameter control the n to use for n-grams (1 by default):</p>\n<p><em>- n</em>: number of contiguous items to use to form a sequence</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytextdist.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">phrase_preprocessing</span><span class=\"p\">,</span> <span class=\"n\">ngram_counter</span>\n\n<span class=\"n\">before</span> <span class=\"o\">=</span> <span class=\"s1\">'AI Top-50 Company'</span>\n<span class=\"n\">after</span> <span class=\"o\">=</span> <span class=\"n\">phrase_preprocessing</span><span class=\"p\">(</span><span class=\"n\">before</span><span class=\"p\">,</span> <span class=\"n\">grain</span><span class=\"o\">=</span><span class=\"s1\">'word'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"p\">)</span>\n<span class=\"n\">ngram_cnt_1</span> <span class=\"o\">=</span> <span class=\"n\">ngram_counter</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ngram_cnt_1</span><span class=\"p\">)</span>\n<span class=\"n\">ngram_cnt_2</span> <span class=\"o\">=</span> <span class=\"n\">ngram_counter</span><span class=\"p\">(</span><span class=\"n\">after</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ngram_cnt_2</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'ai'</span><span class=\"p\">,</span> <span class=\"s1\">'top'</span><span class=\"p\">,</span> <span class=\"s1\">'company'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Counter</span><span class=\"p\">({</span><span class=\"s1\">'ai'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'top'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'company'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">Counter</span><span class=\"p\">({</span><span class=\"s1\">'ai top'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'top company'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6833456, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f1333d65adbea4ce3e038ff69412bf5c", "sha256": "91b0445b9e1d500aca76620c9d8c01ff86511b312136fd9c628a44226c080649"}, "downloads": -1, "filename": "pytextdist-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f1333d65adbea4ce3e038ff69412bf5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 3274, "upload_time": "2020-01-10T01:10:10", "upload_time_iso_8601": "2020-01-10T01:10:10.255267Z", "url": "https://files.pythonhosted.org/packages/e2/cb/d4ea4fb06993a661595b788a040df10484fd9c54e2ceecc92929b5ce7a41/pytextdist-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f22853b4fc0ce4b6d5ea66aaabced51", "sha256": "f591421a22725ca19b14bc857671e6037e437915ca40f4075e3c4d8bc265365b"}, "downloads": -1, "filename": "pytextdist-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2f22853b4fc0ce4b6d5ea66aaabced51", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 1917, "upload_time": "2020-01-10T01:10:12", "upload_time_iso_8601": "2020-01-10T01:10:12.634170Z", "url": "https://files.pythonhosted.org/packages/63/17/f20c4d14d1a43713dba522b57a82b2916f232d8cf14108e8bae3a4c4e12b/pytextdist-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7deaa0cb7c81bd23089b510d4b232f92", "sha256": "cd0cb88204e9ee33a61fd90c05a0a2cc53b0e5673e9da587b3f2cfc88c42e623"}, "downloads": -1, "filename": "pytextdist-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7deaa0cb7c81bd23089b510d4b232f92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 6563, "upload_time": "2020-01-31T23:16:16", "upload_time_iso_8601": "2020-01-31T23:16:16.603152Z", "url": "https://files.pythonhosted.org/packages/19/94/54329ad98265041ac2c78e836a93545453b6d66d0415a2c78a46506bbd58/pytextdist-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91a92bf115903a0c4b12e409af858719", "sha256": "b64a397f2ff5da8de59eff8b20d2c22e7073e0edc1d84591551c237fb9a803ae"}, "downloads": -1, "filename": "pytextdist-0.1.0.tar.gz", "has_sig": false, "md5_digest": "91a92bf115903a0c4b12e409af858719", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 3882, "upload_time": "2020-01-31T23:16:18", "upload_time_iso_8601": "2020-01-31T23:16:18.166785Z", "url": "https://files.pythonhosted.org/packages/40/f0/d513effa0469b0e37677110b0b2f2084524bc5381c755878d642e03e667e/pytextdist-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4d25765c6f2656a3d49392d498678961", "sha256": "de9102aaad3a16ac5d8ddd6b1e5ace4dc18f0407415aeda930b4d676d96b2b9b"}, "downloads": -1, "filename": "pytextdist-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d25765c6f2656a3d49392d498678961", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 7187, "upload_time": "2020-02-01T00:09:23", "upload_time_iso_8601": "2020-02-01T00:09:23.406800Z", "url": "https://files.pythonhosted.org/packages/01/98/e179388458dc9ac89b03cc134a76ed0a843c58f82d144cb7ad031b374728/pytextdist-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31987f68500604151827e5837982f600", "sha256": "cadb0afbe92723de34de8d6bd7506a3032589fb383e12bf4b2fea47ea70fef7b"}, "downloads": -1, "filename": "pytextdist-0.1.1.tar.gz", "has_sig": false, "md5_digest": "31987f68500604151827e5837982f600", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 5126, "upload_time": "2020-02-01T00:09:26", "upload_time_iso_8601": "2020-02-01T00:09:26.353416Z", "url": "https://files.pythonhosted.org/packages/89/24/c191d9854c9f1079f013d8e641fb4f666efb012f195f51bcd16af6c3d9ca/pytextdist-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "441faaa1233d92bcdad5e408477d4fce", "sha256": "588292f617893365f17a4d1f0fe284287e24c8afed337e1661b39e0688732512"}, "downloads": -1, "filename": "pytextdist-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "441faaa1233d92bcdad5e408477d4fce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 7246, "upload_time": "2020-02-02T21:05:29", "upload_time_iso_8601": "2020-02-02T21:05:29.057240Z", "url": "https://files.pythonhosted.org/packages/59/d0/7c170b80b2afa99f4368478a5a0b44637f2b6ca86c269e4c18c6569c61a0/pytextdist-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe465d52e0ceb3f9d7d2300380d18b0f", "sha256": "656b5507f301cb04d7e8b303fa3e38ad9829830903649df483ce99ded0cfd096"}, "downloads": -1, "filename": "pytextdist-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fe465d52e0ceb3f9d7d2300380d18b0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 4883, "upload_time": "2020-02-02T21:05:32", "upload_time_iso_8601": "2020-02-02T21:05:32.524087Z", "url": "https://files.pythonhosted.org/packages/8f/91/a642e2a46de82b44608a35b689f7b190e68152c832607149b540a1f688de/pytextdist-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "64454e20c9ef6add9df9ca5f0a8f5b11", "sha256": "318e65e4867c246be2b81ee23ff5da906c8b63a6e7221dfad66526113dc7781d"}, "downloads": -1, "filename": "pytextdist-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "64454e20c9ef6add9df9ca5f0a8f5b11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 10478, "upload_time": "2020-02-05T00:46:07", "upload_time_iso_8601": "2020-02-05T00:46:07.836190Z", "url": "https://files.pythonhosted.org/packages/5a/bc/8e61bb4faa54f165547366941d886881f3dca920a2937b5901d6ffaea628/pytextdist-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65a04bbace196fc68d517363f3f61e63", "sha256": "9b15f24876b82ce38eedbac8557a477fb4c787756f1eb87eab918a40a0f285d0"}, "downloads": -1, "filename": "pytextdist-0.1.3.tar.gz", "has_sig": false, "md5_digest": "65a04bbace196fc68d517363f3f61e63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 10222, "upload_time": "2020-02-05T00:46:12", "upload_time_iso_8601": "2020-02-05T00:46:12.081092Z", "url": "https://files.pythonhosted.org/packages/ee/1f/be3579e1a6ea4051ff48f1b29c6f095e929ab8157bf6c8802513ac496044/pytextdist-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a72ef0d3a113ee40805d6ef471676336", "sha256": "ea228a779e797e2b0b7fa484bbcaac864adfd3813c4a4c71b72e4d3c3fcf79a5"}, "downloads": -1, "filename": "pytextdist-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a72ef0d3a113ee40805d6ef471676336", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 10511, "upload_time": "2020-03-06T23:54:01", "upload_time_iso_8601": "2020-03-06T23:54:01.459648Z", "url": "https://files.pythonhosted.org/packages/9a/38/c00de550c77fdb2aee9083a826be7e0773285e5c1cec03d7aa64dd987c28/pytextdist-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6541c0ddfba035dd7ea11124cf4edc26", "sha256": "c755d0572a1ccf0e494e01d2a38b40b21fdf7565635de3198171f619131d23bf"}, "downloads": -1, "filename": "pytextdist-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6541c0ddfba035dd7ea11124cf4edc26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 10333, "upload_time": "2020-03-06T23:54:07", "upload_time_iso_8601": "2020-03-06T23:54:07.834776Z", "url": "https://files.pythonhosted.org/packages/01/37/f7915796826443fd1fc3a6836f1a3a8fc83b1f4f74d6e672b12858ada6d5/pytextdist-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f5f4ea75abef0728003844e9637e36a2", "sha256": "7f7fa7357d1487660f6e714c318eb3735af5c5c88bd9f2974b48b43e6fe462c0"}, "downloads": -1, "filename": "pytextdist-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f5f4ea75abef0728003844e9637e36a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 10481, "upload_time": "2020-03-18T05:22:31", "upload_time_iso_8601": "2020-03-18T05:22:31.166469Z", "url": "https://files.pythonhosted.org/packages/56/de/e6e5336a9738b34bbe14548e1ebf7edc0025da85e5bea85d309a6398e121/pytextdist-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9034e50974c3ce432802b3793251b6d5", "sha256": "0bf57c4f9ffbd6dbdd0535e643d39afbfc82df402dac4af9152e2588edf0d236"}, "downloads": -1, "filename": "pytextdist-0.1.5.tar.gz", "has_sig": false, "md5_digest": "9034e50974c3ce432802b3793251b6d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 10203, "upload_time": "2020-03-18T05:22:36", "upload_time_iso_8601": "2020-03-18T05:22:36.900572Z", "url": "https://files.pythonhosted.org/packages/7d/be/1ace11efa7f32fc8f503ad794c0e70dc1ceb090be72241f5dc2fc0403397/pytextdist-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "d7f20d44454abbbda2e43b0eb0270f79", "sha256": "180abf4855ae0496de67bd6490714d956328eb4b529c57a460b9f0fee7618ee9"}, "downloads": -1, "filename": "pytextdist-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d7f20d44454abbbda2e43b0eb0270f79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 10213, "upload_time": "2020-03-18T05:36:27", "upload_time_iso_8601": "2020-03-18T05:36:27.061172Z", "url": "https://files.pythonhosted.org/packages/b2/1c/e29a308a6ac3125a28afae20850b0b15a06edd6f4159bb730fe303c98e36/pytextdist-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c37362315e9da7eaf1d33e93e07445e6", "sha256": "58bd119928dba9e0958de2771c5e99189b4cb2a06167e4daf011a6871dfa5676"}, "downloads": -1, "filename": "pytextdist-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c37362315e9da7eaf1d33e93e07445e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 9902, "upload_time": "2020-03-18T05:36:32", "upload_time_iso_8601": "2020-03-18T05:36:32.774071Z", "url": "https://files.pythonhosted.org/packages/95/3c/48eec71c75a7d86ac7d5bba81269871e015876ae0510e1edffbe8d65c966/pytextdist-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7f20d44454abbbda2e43b0eb0270f79", "sha256": "180abf4855ae0496de67bd6490714d956328eb4b529c57a460b9f0fee7618ee9"}, "downloads": -1, "filename": "pytextdist-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d7f20d44454abbbda2e43b0eb0270f79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 10213, "upload_time": "2020-03-18T05:36:27", "upload_time_iso_8601": "2020-03-18T05:36:27.061172Z", "url": "https://files.pythonhosted.org/packages/b2/1c/e29a308a6ac3125a28afae20850b0b15a06edd6f4159bb730fe303c98e36/pytextdist-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c37362315e9da7eaf1d33e93e07445e6", "sha256": "58bd119928dba9e0958de2771c5e99189b4cb2a06167e4daf011a6871dfa5676"}, "downloads": -1, "filename": "pytextdist-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c37362315e9da7eaf1d33e93e07445e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 9902, "upload_time": "2020-03-18T05:36:32", "upload_time_iso_8601": "2020-03-18T05:36:32.774071Z", "url": "https://files.pythonhosted.org/packages/95/3c/48eec71c75a7d86ac7d5bba81269871e015876ae0510e1edffbe8d65c966/pytextdist-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:32 2020"}