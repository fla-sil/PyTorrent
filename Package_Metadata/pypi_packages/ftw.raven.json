{"info": {"author": "4teamwork AG", "author_email": "mailto:info@4teamwork.ch", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. contents:: Table of Contents\n\n\nPurpose\n=======\n\nThis package extends `raven`, the Sentry integration with\na Plone integration wich is not logger based but hooks into\nthe Zope exception handling.\n\nBe aware that there is already a standard `logging based Zope /\nPlone integration for raven <https://docs.getsentry.com/hosted/clients/python/integrations/zope/>`_. You should use the standard implementation unless you\nwant the exception hook based integration.\n\n\nInstallation and configuration\n==============================\n\n- Add the `ftw.raven` package to your dependencies.\n- Configure the raven client with environment variables in buildout\n\nExample configuration for buildout:\n\n.. code:: ini\n\n    [instance]\n    eggs +=\n        ftw.raven\n    environment-vars +=\n        RAVEN_DSN https://123:456@sentry.local/2\n\n\nConfiguration-Test\n==================\n\nYou can test your configuration by visiting the view ``raven-test`` on\nany context as ``Manager``-user.\nThis will trigger an exception which should appear in your sentry project.\n\nIn JavaScript you can call the function ``raven_test()`` in your javascript\nconsole, which will also trigger an exception.\n\n\nRelease tracking\n================\n\nWhen an exception is reported, the release can be sent along.\nA release can either be the version number of a released distribution\n(e.g. released on pypi) or the HEAD SHA of a project checkout when the\napp is not released on pypi.\n\nVersion of a released distribution\n----------------------------------\n\nFor using a distribution version as release, the environment variable\n``RAVEN_PROJECT_DIST`` must contain the name of the distribution, e.g.\n\n.. code:: ini\n\n    [instance]\n    environment-vars +=\n        RAVEN_PROJECT_DIST my.project\n\n\nGit SHA of checkout\n-------------------\n\nUsually the buildout root is a checkout of the project, thus we need to\nconfigured the ``RAVEN_BUILDOUT_ROOT`` so that the git repository is found:\n\n.. code:: ini\n\n    [instance]\n    environment-vars +=\n        RAVEN_BUILDOUT_ROOT ${buildout:directory}\n\n\nIgnored exceptions\n==================\n\nBy default, not all exceptions are reported, because some exceptions\nsuch as redirects or 404s are not errors but are implemented as exceptions.\nWithout configuration, the exceptions ``NotFound``, ``Unauthorized``,\n``Redirect`` and ``Intercepted``.\n\nReporting of those exceptions can be enabled by with the environment variable\n``RAVEN_ENABLE_EXCEPTIONS``:\n\n.. code::\n\n    [instance]\n    environment-vars +=\n        RAVEN_ENABLE_EXCEPTIONS NotFound, Redirect\n\nIf you need to disable custom exceptions, you can do that with the environment\nvariable ``RAVEN_DISABLE_EXCEPTIONS``:\n\n.. code::\n\n    [instance]\n    environment-vars +=\n        RAVEN_DISABLE_EXCEPTIONS UnimportantError\n\n\nReport JavaScript errors\n========================\n\nIn order to be able to report JavaScript-errors, the ``ftw.raven:default``\nGeneric Setup profile must be installed, which registers a JavaScript\nincluding the raven library and the configuration.\n\n\nAdditional tags\n===============\n\nIt is possible to report additional, predefined tags for a deployment.\nThe tags may be directly declared as JSON in the environment variable\n``RAVEN_TAGS`` or the variable ``RAVEN_TAGS_FILE`` may contain a path\nto a json-file.\nThese two methods may be combined, and the respective dictionaries will\nbe merged (with tags from the ``RAVEN_TAGS`` variable taking precedence).\n\nThe JSON must be a one-level hash containing strings as keys and values.\n\nExamples:\n\n.. code::\n\n    [instance]\n    environment-vars +=\n        RAVEN_TAGS {\"deployment\": \"production\"}\n\n.. code::\n\n    [instance]\n    environment-vars +=\n        RAVEN_TAGS_FILE ${buildout:directory}/conf/raven_tags.json\n\n\nLinks\n=====\n\n- Github: https://github.com/4teamwork/ftw.raven\n- Issues: https://github.com/4teamwork/ftw.raven/issues\n- Pypi: http://pypi.python.org/pypi/ftw.raven\n- Continuous integration: https://jenkins.4teamwork.ch/search?q=ftw.raven\n\nCopyright\n=========\n\nThis package is copyright by `4teamwork <http://www.4teamwork.ch/>`_.\n\n``ftw.raven`` is licensed under GNU General Public License, version 2.\n\nChangelog\n=========\n\n\n1.3.0 (2019-03-08)\n------------------\n\n- Add support for Plone 5. [mbaechtold, jone]\n\n- Move raven ressources to plone bundle. [mathias.leimgruber]\n\n\n1.2.0 (2017-03-15)\n------------------\n\n- Add ``RAVEN_DISABLE_EXCEPTIONS`` environment variable\n  for allowing to disable reporting of custom exceptions. [jone]\n\n\n1.1.3 (2016-04-29)\n------------------\n\n- Also ignore `Intercepted` exceptions from plone.caching by default.\n  [lgraf]\n\n\n1.1.2 (2016-03-15)\n------------------\n\n- Test if raven config is accessible in javascript integration.\n  [Kevin Bieri]\n\n\n1.1.1 (2016-01-20)\n------------------\n\n- Fix bug on errors ignored by error_log, such as NotFound. [jone]\n\n\n1.1.0 (2016-01-20)\n------------------\n\n- Refactor JavaScript integration so that it is cacheable. [jone]\n\n- Report error_log number as tag. [jone]\n\n- Add a view ``raven-test`` and a JavaScript function ``raven_test()``\n  for testing the raven configuration and connection. Both will throw\n  an exception which will be reported to sentry. [jone]\n\n- New environment variables ``RAVEN_TAGS`` and ``RAVEN_TAGS_FILE`` for\n  making it possible to attach additional static tags. [jone]\n\n\n1.0.2 (2016-01-15)\n------------------\n\n- Fix IP reporting: prioritize X-Forwarded-For.\n  [jone]\n\n\n1.0.1 (2016-01-15)\n------------------\n\n- Report the client IP instead of the proxy IP.\n  [jone]\n\n- Do not report ConflictError which are handled with a Retry,\n  but those which failed after 3 retries.\n  [jone]\n\n\n1.0.0 (2016-01-15)\n------------------\n\n- Initial implementation\n  [jone]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/4teamwork/ftw.raven", "keywords": "ftw raven plone", "license": "GPL2", "maintainer": "", "maintainer_email": "", "name": "ftw.raven", "package_url": "https://pypi.org/project/ftw.raven/", "platform": "", "project_url": "https://pypi.org/project/ftw.raven/", "project_urls": {"Homepage": "https://github.com/4teamwork/ftw.raven"}, "release_url": "https://pypi.org/project/ftw.raven/1.3.0/", "requires_dist": null, "requires_python": "", "summary": "Plone integration for raven / sentry.", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#purpose\" id=\"id10\" rel=\"nofollow\">Purpose</a></li>\n<li><a href=\"#installation-and-configuration\" id=\"id11\" rel=\"nofollow\">Installation and configuration</a></li>\n<li><a href=\"#configuration-test\" id=\"id12\" rel=\"nofollow\">Configuration-Test</a></li>\n<li><a href=\"#release-tracking\" id=\"id13\" rel=\"nofollow\">Release tracking</a><ul>\n<li><a href=\"#version-of-a-released-distribution\" id=\"id14\" rel=\"nofollow\">Version of a released distribution</a></li>\n<li><a href=\"#git-sha-of-checkout\" id=\"id15\" rel=\"nofollow\">Git SHA of checkout</a></li>\n</ul>\n</li>\n<li><a href=\"#ignored-exceptions\" id=\"id16\" rel=\"nofollow\">Ignored exceptions</a></li>\n<li><a href=\"#report-javascript-errors\" id=\"id17\" rel=\"nofollow\">Report JavaScript errors</a></li>\n<li><a href=\"#additional-tags\" id=\"id18\" rel=\"nofollow\">Additional tags</a></li>\n<li><a href=\"#links\" id=\"id19\" rel=\"nofollow\">Links</a></li>\n<li><a href=\"#copyright\" id=\"id20\" rel=\"nofollow\">Copyright</a></li>\n<li><a href=\"#changelog\" id=\"id21\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id22\" rel=\"nofollow\">1.3.0 (2019-03-08)</a></li>\n<li><a href=\"#id2\" id=\"id23\" rel=\"nofollow\">1.2.0 (2017-03-15)</a></li>\n<li><a href=\"#id3\" id=\"id24\" rel=\"nofollow\">1.1.3 (2016-04-29)</a></li>\n<li><a href=\"#id4\" id=\"id25\" rel=\"nofollow\">1.1.2 (2016-03-15)</a></li>\n<li><a href=\"#id5\" id=\"id26\" rel=\"nofollow\">1.1.1 (2016-01-20)</a></li>\n<li><a href=\"#id6\" id=\"id27\" rel=\"nofollow\">1.1.0 (2016-01-20)</a></li>\n<li><a href=\"#id7\" id=\"id28\" rel=\"nofollow\">1.0.2 (2016-01-15)</a></li>\n<li><a href=\"#id8\" id=\"id29\" rel=\"nofollow\">1.0.1 (2016-01-15)</a></li>\n<li><a href=\"#id9\" id=\"id30\" rel=\"nofollow\">1.0.0 (2016-01-15)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"purpose\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Purpose</a></h2>\n<p>This package extends <cite>raven</cite>, the Sentry integration with\na Plone integration wich is not logger based but hooks into\nthe Zope exception handling.</p>\n<p>Be aware that there is already a standard <a href=\"https://docs.getsentry.com/hosted/clients/python/integrations/zope/\" rel=\"nofollow\">logging based Zope /\nPlone integration for raven</a>. You should use the standard implementation unless you\nwant the exception hook based integration.</p>\n</div>\n<div id=\"installation-and-configuration\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Installation and configuration</a></h2>\n<ul>\n<li>Add the <cite>ftw.raven</cite> package to your dependencies.</li>\n<li>Configure the raven client with environment variables in buildout</li>\n</ul>\n<p>Example configuration for buildout:</p>\n<pre><span class=\"k\">[instance]</span>\n<span class=\"na\">eggs +</span><span class=\"o\">=</span><span class=\"s\">\n    ftw.raven</span>\n<span class=\"na\">environment-vars +</span><span class=\"o\">=</span><span class=\"s\">\n    RAVEN_DSN https://123:456@sentry.local/2</span>\n</pre>\n</div>\n<div id=\"configuration-test\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Configuration-Test</a></h2>\n<p>You can test your configuration by visiting the view <tt><span class=\"pre\">raven-test</span></tt> on\nany context as <tt>Manager</tt>-user.\nThis will trigger an exception which should appear in your sentry project.</p>\n<p>In JavaScript you can call the function <tt>raven_test()</tt> in your javascript\nconsole, which will also trigger an exception.</p>\n</div>\n<div id=\"release-tracking\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Release tracking</a></h2>\n<p>When an exception is reported, the release can be sent along.\nA release can either be the version number of a released distribution\n(e.g. released on pypi) or the HEAD SHA of a project checkout when the\napp is not released on pypi.</p>\n<div id=\"version-of-a-released-distribution\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Version of a released distribution</a></h3>\n<p>For using a distribution version as release, the environment variable\n<tt>RAVEN_PROJECT_DIST</tt> must contain the name of the distribution, e.g.</p>\n<pre><span class=\"k\">[instance]</span>\n<span class=\"na\">environment-vars +</span><span class=\"o\">=</span><span class=\"s\">\n    RAVEN_PROJECT_DIST my.project</span>\n</pre>\n</div>\n<div id=\"git-sha-of-checkout\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Git SHA of checkout</a></h3>\n<p>Usually the buildout root is a checkout of the project, thus we need to\nconfigured the <tt>RAVEN_BUILDOUT_ROOT</tt> so that the git repository is found:</p>\n<pre><span class=\"k\">[instance]</span>\n<span class=\"na\">environment-vars +</span><span class=\"o\">=</span><span class=\"s\">\n    RAVEN_BUILDOUT_ROOT ${buildout:directory}</span>\n</pre>\n</div>\n</div>\n<div id=\"ignored-exceptions\">\n<h2><a href=\"#id16\" rel=\"nofollow\">Ignored exceptions</a></h2>\n<p>By default, not all exceptions are reported, because some exceptions\nsuch as redirects or 404s are not errors but are implemented as exceptions.\nWithout configuration, the exceptions <tt>NotFound</tt>, <tt>Unauthorized</tt>,\n<tt>Redirect</tt> and <tt>Intercepted</tt>.</p>\n<p>Reporting of those exceptions can be enabled by with the environment variable\n<tt>RAVEN_ENABLE_EXCEPTIONS</tt>:</p>\n<pre>[instance]\nenvironment-vars +=\n    RAVEN_ENABLE_EXCEPTIONS NotFound, Redirect\n</pre>\n<p>If you need to disable custom exceptions, you can do that with the environment\nvariable <tt>RAVEN_DISABLE_EXCEPTIONS</tt>:</p>\n<pre>[instance]\nenvironment-vars +=\n    RAVEN_DISABLE_EXCEPTIONS UnimportantError\n</pre>\n</div>\n<div id=\"report-javascript-errors\">\n<h2><a href=\"#id17\" rel=\"nofollow\">Report JavaScript errors</a></h2>\n<p>In order to be able to report JavaScript-errors, the <tt>ftw.raven:default</tt>\nGeneric Setup profile must be installed, which registers a JavaScript\nincluding the raven library and the configuration.</p>\n</div>\n<div id=\"additional-tags\">\n<h2><a href=\"#id18\" rel=\"nofollow\">Additional tags</a></h2>\n<p>It is possible to report additional, predefined tags for a deployment.\nThe tags may be directly declared as JSON in the environment variable\n<tt>RAVEN_TAGS</tt> or the variable <tt>RAVEN_TAGS_FILE</tt> may contain a path\nto a json-file.\nThese two methods may be combined, and the respective dictionaries will\nbe merged (with tags from the <tt>RAVEN_TAGS</tt> variable taking precedence).</p>\n<p>The JSON must be a one-level hash containing strings as keys and values.</p>\n<p>Examples:</p>\n<pre>[instance]\nenvironment-vars +=\n    RAVEN_TAGS {\"deployment\": \"production\"}\n</pre>\n<pre>[instance]\nenvironment-vars +=\n    RAVEN_TAGS_FILE ${buildout:directory}/conf/raven_tags.json\n</pre>\n</div>\n<div id=\"links\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Links</a></h2>\n<ul>\n<li>Github: <a href=\"https://github.com/4teamwork/ftw.raven\" rel=\"nofollow\">https://github.com/4teamwork/ftw.raven</a></li>\n<li>Issues: <a href=\"https://github.com/4teamwork/ftw.raven/issues\" rel=\"nofollow\">https://github.com/4teamwork/ftw.raven/issues</a></li>\n<li>Pypi: <a href=\"http://pypi.python.org/pypi/ftw.raven\" rel=\"nofollow\">http://pypi.python.org/pypi/ftw.raven</a></li>\n<li>Continuous integration: <a href=\"https://jenkins.4teamwork.ch/search?q=ftw.raven\" rel=\"nofollow\">https://jenkins.4teamwork.ch/search?q=ftw.raven</a></li>\n</ul>\n</div>\n<div id=\"copyright\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Copyright</a></h2>\n<p>This package is copyright by <a href=\"http://www.4teamwork.ch/\" rel=\"nofollow\">4teamwork</a>.</p>\n<p><tt>ftw.raven</tt> is licensed under GNU General Public License, version 2.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id21\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id22\" rel=\"nofollow\">1.3.0 (2019-03-08)</a></h3>\n<ul>\n<li>Add support for Plone 5. [mbaechtold, jone]</li>\n<li>Move raven ressources to plone bundle. [mathias.leimgruber]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id23\" rel=\"nofollow\">1.2.0 (2017-03-15)</a></h3>\n<ul>\n<li>Add <tt>RAVEN_DISABLE_EXCEPTIONS</tt> environment variable\nfor allowing to disable reporting of custom exceptions. [jone]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id24\" rel=\"nofollow\">1.1.3 (2016-04-29)</a></h3>\n<ul>\n<li>Also ignore <cite>Intercepted</cite> exceptions from plone.caching by default.\n[lgraf]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id25\" rel=\"nofollow\">1.1.2 (2016-03-15)</a></h3>\n<ul>\n<li>Test if raven config is accessible in javascript integration.\n[Kevin Bieri]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id26\" rel=\"nofollow\">1.1.1 (2016-01-20)</a></h3>\n<ul>\n<li>Fix bug on errors ignored by error_log, such as NotFound. [jone]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id27\" rel=\"nofollow\">1.1.0 (2016-01-20)</a></h3>\n<ul>\n<li>Refactor JavaScript integration so that it is cacheable. [jone]</li>\n<li>Report error_log number as tag. [jone]</li>\n<li>Add a view <tt><span class=\"pre\">raven-test</span></tt> and a JavaScript function <tt>raven_test()</tt>\nfor testing the raven configuration and connection. Both will throw\nan exception which will be reported to sentry. [jone]</li>\n<li>New environment variables <tt>RAVEN_TAGS</tt> and <tt>RAVEN_TAGS_FILE</tt> for\nmaking it possible to attach additional static tags. [jone]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.0.2 (2016-01-15)</a></h3>\n<ul>\n<li>Fix IP reporting: prioritize X-Forwarded-For.\n[jone]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.0.1 (2016-01-15)</a></h3>\n<ul>\n<li>Report the client IP instead of the proxy IP.\n[jone]</li>\n<li>Do not report ConflictError which are handled with a Retry,\nbut those which failed after 3 retries.\n[jone]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.0.0 (2016-01-15)</a></h3>\n<ul>\n<li>Initial implementation\n[jone]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6569381, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e5f2e876bae841bc96ba2309a513d116", "sha256": "0a4b91575dbe29115d85858b35498408e1840c03e4cfb6917e34733b3e1ba182"}, "downloads": -1, "filename": "ftw.raven-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e5f2e876bae841bc96ba2309a513d116", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26544, "upload_time": "2016-01-15T10:39:26", "upload_time_iso_8601": "2016-01-15T10:39:26.223053Z", "url": "https://files.pythonhosted.org/packages/51/f3/f92aaef414a48e0db9f6717d2f24beba06006c41c8cc69be45f779becab5/ftw.raven-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "12559582e6a5206a97f0cf99cbcdd3cb", "sha256": "edf434216eba022ccaf367b45c4ae12a6e8aa97699a1eacec60c25a19d274851"}, "downloads": -1, "filename": "ftw.raven-1.0.1.tar.gz", "has_sig": false, "md5_digest": "12559582e6a5206a97f0cf99cbcdd3cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27156, "upload_time": "2016-01-15T14:49:54", "upload_time_iso_8601": "2016-01-15T14:49:54.322608Z", "url": "https://files.pythonhosted.org/packages/c4/a8/01b128f84712640b6d23441b79fdd09b46e9251135aa294e27f87707258f/ftw.raven-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "fd9735cc0d21294f190daee84909195b", "sha256": "d6b9c70a5ad65db51236949ec11f1b4ecf4d2d1613d7e507691e7ab373bb58f0"}, "downloads": -1, "filename": "ftw.raven-1.0.2.tar.gz", "has_sig": false, "md5_digest": "fd9735cc0d21294f190daee84909195b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27230, "upload_time": "2016-01-15T15:21:50", "upload_time_iso_8601": "2016-01-15T15:21:50.337542Z", "url": "https://files.pythonhosted.org/packages/9c/f6/77884c6e5a38248d84c3b504a894c78a22be218b9e192205c69e824d6935/ftw.raven-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d8912fa2b268793df7b29c8eb5531f09", "sha256": "fbc14ee5b2799331cb3d9b5380e36ef0b4d7c6187c267dbd80509b2054a2b8a8"}, "downloads": -1, "filename": "ftw.raven-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d8912fa2b268793df7b29c8eb5531f09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30908, "upload_time": "2016-01-20T14:07:13", "upload_time_iso_8601": "2016-01-20T14:07:13.045058Z", "url": "https://files.pythonhosted.org/packages/c4/63/08b01807b4b48a49e12b730cf4422d8063aca9d6985f7ffbcd3cec5b0753/ftw.raven-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "689dcea235f65b36b69c8de6345b875a", "sha256": "e4ad3b78c8d05e82047198f32f4c6e0f7bd311fcfd430ffd31b45f33af14b2de"}, "downloads": -1, "filename": "ftw.raven-1.1.1.tar.gz", "has_sig": false, "md5_digest": "689dcea235f65b36b69c8de6345b875a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30974, "upload_time": "2016-01-20T16:21:29", "upload_time_iso_8601": "2016-01-20T16:21:29.790316Z", "url": "https://files.pythonhosted.org/packages/ce/1e/90779c56cdc0befbb8928d2e6ad63c94689c9efc0ec5cb5539bdfbda2b2d/ftw.raven-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "fecf145a9a10bd78984b7581d85248f4", "sha256": "32dd67418937f17907a20c1a0a5ecc30f9c8f1c873a17fbc13e8154f95744cc1"}, "downloads": -1, "filename": "ftw.raven-1.1.2.tar.gz", "has_sig": false, "md5_digest": "fecf145a9a10bd78984b7581d85248f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31143, "upload_time": "2016-03-15T14:37:13", "upload_time_iso_8601": "2016-03-15T14:37:13.242288Z", "url": "https://files.pythonhosted.org/packages/f3/14/8e5ab558e44be27c116a3fd2ef8bf96bd47440114e73c450b8d0a14dad55/ftw.raven-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "87923d271b5bd4255f8634640ab55b11", "sha256": "7dabd88c456b261a8f9c04cf2426ce53e8214f3e467bd73d682d124349ced6a3"}, "downloads": -1, "filename": "ftw.raven-1.1.3.tar.gz", "has_sig": false, "md5_digest": "87923d271b5bd4255f8634640ab55b11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31237, "upload_time": "2016-04-29T12:57:20", "upload_time_iso_8601": "2016-04-29T12:57:20.194454Z", "url": "https://files.pythonhosted.org/packages/5a/05/3102a1930430028474b1d552b466b9660b3409fd6446db78ae70d8ea45c2/ftw.raven-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "7b6877c5ff3e321428d5e8c2405c9f4d", "sha256": "256b293fed648a6b7cac93fbbdc39dff7f8f5f5a59de1aecc497b94fd5e7f168"}, "downloads": -1, "filename": "ftw.raven-1.2.0.tar.gz", "has_sig": false, "md5_digest": "7b6877c5ff3e321428d5e8c2405c9f4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31503, "upload_time": "2017-03-15T12:46:30", "upload_time_iso_8601": "2017-03-15T12:46:30.782907Z", "url": "https://files.pythonhosted.org/packages/ed/85/e3c2f8b2b8d29f8b5e6f38328dd28e5006a21d30707c13225ed38babb124/ftw.raven-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "f6d426d2890ed9493307553db8c869e7", "sha256": "19b5ef23e12824f2a2e5bde5c825ae6d9f7b152a66d79be698bd3bf00f0c482d"}, "downloads": -1, "filename": "ftw.raven-1.3.0.tar.gz", "has_sig": false, "md5_digest": "f6d426d2890ed9493307553db8c869e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33678, "upload_time": "2019-03-08T10:01:35", "upload_time_iso_8601": "2019-03-08T10:01:35.819771Z", "url": "https://files.pythonhosted.org/packages/7f/ea/0e0dd95068e8747fc0b32383615f1ee2ddd1ebeb2f34840f97fa03d74072/ftw.raven-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6d426d2890ed9493307553db8c869e7", "sha256": "19b5ef23e12824f2a2e5bde5c825ae6d9f7b152a66d79be698bd3bf00f0c482d"}, "downloads": -1, "filename": "ftw.raven-1.3.0.tar.gz", "has_sig": false, "md5_digest": "f6d426d2890ed9493307553db8c869e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33678, "upload_time": "2019-03-08T10:01:35", "upload_time_iso_8601": "2019-03-08T10:01:35.819771Z", "url": "https://files.pythonhosted.org/packages/7f/ea/0e0dd95068e8747fc0b32383615f1ee2ddd1ebeb2f34840f97fa03d74072/ftw.raven-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:51 2020"}