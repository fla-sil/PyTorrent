{"info": {"author": "Kentaro Wada", "author_email": "www.kentaro.wada@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "<h1 align=\"center\">\n  <img src=\"https://github.com/wkentaro/labelme/blob/master/labelme/icons/icon.png?raw=true\"><br/>labelme\n</h1>\n\n<h4 align=\"center\">\n  Image Polygonal Annotation with Python\n</h4>\n\n<div align=\"center\">\n  <a href=\"https://pypi.python.org/pypi/labelme\"><img src=\"https://img.shields.io/pypi/v/labelme.svg\"></a>\n  <a href=\"https://pypi.org/project/labelme\"><img src=\"https://img.shields.io/pypi/pyversions/labelme.svg\"></a>\n  <a href=\"https://travis-ci.org/wkentaro/labelme\"><img src=\"https://travis-ci.org/wkentaro/labelme.svg?branch=master\"></a>\n  <a href=\"https://hub.docker.com/r/wkentaro/labelme\"><img src=\"https://img.shields.io/docker/build/wkentaro/labelme.svg\"></a>\n</div>\n\n<br/>\n\n<div align=\"center\">\n  <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation/.readme/annotation.jpg?raw=true\" width=\"70%\">\n</div>\n\n## Description\n\nLabelme is a graphical image annotation tool inspired by <http://labelme.csail.mit.edu>.  \nIt is written in Python and uses Qt for its graphical interface.\n\n<img src=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation/data_dataset_voc/JPEGImages/2011_000006.jpg?raw=true\" width=\"19%\" /> <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation/data_dataset_voc/SegmentationClassPNG/2011_000006.png?raw=true\" width=\"19%\" /> <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation/data_dataset_voc/SegmentationClassVisualization/2011_000006.jpg?raw=true\" width=\"19%\" /> <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation/data_dataset_voc/SegmentationObjectPNG/2011_000006.png?raw=true\" width=\"19%\" /> <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation/data_dataset_voc/SegmentationObjectVisualization/2011_000006.jpg?raw=true\" width=\"19%\" />  \n<i>VOC dataset example of instance segmentation.</i>\n\n<img src=\"https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation/.readme/annotation.jpg?raw=true\" width=\"32%\" /> <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/bbox_detection/.readme/annotation.jpg?raw=true\" width=\"30%\" /> <img src=\"https://github.com/wkentaro/labelme/blob/master/examples/classification/.readme/annotation_cat.jpg?raw=true\" width=\"35%\" />  \n<i>Other examples (semantic segmentation, bbox detection, and classification).</i>\n\n<img src=\"https://user-images.githubusercontent.com/4310419/47907116-85667800-de82-11e8-83d0-b9f4eb33268f.gif\" width=\"30%\" /> <img src=\"https://user-images.githubusercontent.com/4310419/47922172-57972880-deae-11e8-84f8-e4324a7c856a.gif\" width=\"30%\" /> <img src=\"https://user-images.githubusercontent.com/14256482/46932075-92145f00-d080-11e8-8d09-2162070ae57c.png\" width=\"32%\" />  \n<i>Various primitives (polygon, rectangle, circle, line, and point).</i>\n\n\n## Features\n\n- [x] Image annotation for polygon, rectangle, circle, line and point. ([tutorial](https://github.com/wkentaro/labelme/blob/master/examples/tutorial))\n- [x] Image flag annotation for classification and cleaning. ([#166](https://github.com/wkentaro/labelme/pull/166))\n- [x] Video annotation. ([video annotation](https://github.com/wkentaro/labelme/blob/master/examples/video_annotation?raw=true))\n- [x] GUI customization (predefined labels / flags, auto-saving, label validation, etc). ([#144](https://github.com/wkentaro/labelme/pull/144))\n- [x] Exporting VOC-format dataset for semantic/instance segmentation. ([semantic segmentation](https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation?raw=true), [instance segmentation](https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true))\n- [x] Exporting COCO-format dataset for instance segmentation. ([instance segmentation](https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true))\n\n\n\n## Requirements\n\n- Ubuntu / macOS / Windows\n- Python2 / Python3\n- [PyQt4 / PyQt5](http://www.riverbankcomputing.co.uk/software/pyqt/intro) / [PySide2](https://wiki.qt.io/PySide2_GettingStarted)\n\n\n## Installation\n\nThere are options:\n\n- Platform agonistic installation: [Anaconda](https://github.com/wkentaro/labelme/blob/master/#anaconda), [Docker](https://github.com/wkentaro/labelme/blob/master/#docker)\n- Platform specific installation: [Ubuntu](https://github.com/wkentaro/labelme/blob/master/#ubuntu), [macOS](https://github.com/wkentaro/labelme/blob/master/#macos), [Windows](https://github.com/wkentaro/labelme/blob/master/#windows)\n\n### Anaconda\n\nYou need install [Anaconda](https://www.continuum.io/downloads), then run below:\n\n```bash\n# python2\nconda create --name=labelme python=2.7\nsource activate labelme\n# conda install -c conda-forge pyside2\nconda install pyqt\npip install labelme\n# if you'd like to use the latest version. run below:\n# pip install git+https://github.com/wkentaro/labelme.git\n\n# python3\nconda create --name=labelme python=3.6\nsource activate labelme\n# conda install -c conda-forge pyside2\n# conda install pyqt\npip install pyqt5  # pyqt5 can be installed via pip on python3\npip install labelme\n```\n\n### Docker\n\nYou need install [docker](https://www.docker.com), then run below:\n\n```bash\nwget https://raw.githubusercontent.com/wkentaro/labelme/master/labelme/cli/on_docker.py -O labelme_on_docker\nchmod u+x labelme_on_docker\n\n# Maybe you need http://sourabhbajaj.com/blog/2017/02/07/gui-applications-docker-mac/ on macOS\n./labelme_on_docker examples/tutorial/apc2016_obj3.jpg -O examples/tutorial/apc2016_obj3.json\n./labelme_on_docker examples/semantic_segmentation/data_annotated\n```\n\n### Ubuntu\n\n```bash\n# Ubuntu 14.04 / Ubuntu 16.04\n# Python2\n# sudo apt-get install python-qt4  # PyQt4\nsudo apt-get install python-pyqt5  # PyQt5\nsudo pip install labelme\n# Python3\nsudo apt-get install python3-pyqt5  # PyQt5\nsudo pip3 install labelme\n```\n\n### macOS\n\n```bash\n# macOS Sierra\nbrew install pyqt  # maybe pyqt5\npip install labelme  # both python2/3 should work\n\n# or install standalone executable / app\n# NOTE: this only installs the `labelme` command\nbrew install wkentaro/labelme/labelme\nbrew cask install wkentaro/labelme/labelme\n```\n\n### Windows\n\nFirstly, follow instruction in [Anaconda](https://github.com/wkentaro/labelme/blob/master/#anaconda).\n\n```bash\n# Pillow 5 causes dll load error on Windows.\n# https://github.com/wkentaro/labelme/pull/174\nconda install pillow=4.0.0\n```\n\n\n## Usage\n\nRun `labelme --help` for detail.  \nThe annotations are saved as a [JSON](http://www.json.org/) file.\n\n```bash\nlabelme  # just open gui\n\n# tutorial (single image example)\ncd examples/tutorial\nlabelme apc2016_obj3.jpg  # specify image file\nlabelme apc2016_obj3.jpg -O apc2016_obj3.json  # close window after the save\nlabelme apc2016_obj3.jpg --nodata  # not include image data but relative image path in JSON file\nlabelme apc2016_obj3.jpg \\\n  --labels highland_6539_self_stick_notes,mead_index_cards,kong_air_dog_squeakair_tennis_ball  # specify label list\n\n# semantic segmentation example\ncd examples/semantic_segmentation\nlabelme data_annotated/  # Open directory to annotate all images in it\nlabelme data_annotated/ --labels labels.txt  # specify label list with a file\n```\n\nFor more advanced usage, please refer to the examples:\n\n* [Tutorial (Single Image Example)](https://github.com/wkentaro/labelme/blob/master/examples/tutorial)\n* [Semantic Segmentation Example](https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation?raw=true)\n* [Instance Segmentation Example](https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true)\n* [Video Annotation Example](https://github.com/wkentaro/labelme/blob/master/examples/video_annotation?raw=true)\n\n### Command Line Arguemnts\n- `--output` specifies the location that annotations will be written to. If the location ends with .json, a single annotation will be written to this file. Only one image can be annotated if a location is specified with .json. If the location does not end with .json, the program will assume it is a directory. Annotations will be stored in this directory with a name that corresponds to the image that the annotation was made on.\n- The first time you run labelme, it will create a config file in `~/.labelmerc`. You can edit this file and the changes will be applied the next time that you launch labelme. If you would prefer to use a config file from another location, you can specify this file with the `--config` flag.\n- Without the `--nosortlabels` flag, the program will list labels in alphabetical order. When the program is run with this flag, it will display labels in the order that they are provided.\n- Flags are assigned to an entire image. [Example](https://github.com/wkentaro/labelme/blob/master/examples/classification?raw=true)\n- Labels are assigned to a single polygon. [Example](https://github.com/wkentaro/labelme/blob/master/examples/bbox_detection?raw=true)\n\n## FAQ\n\n- **How to convert JSON file to numpy array?** See [examples/tutorial](https://github.com/wkentaro/labelme/blob/master/examples/tutorial#convert-to-dataset).\n- **How to load label PNG file?** See [examples/tutorial](https://github.com/wkentaro/labelme/blob/master/examples/tutorial#how-to-load-label-png-file).\n- **How to get annotations for semantic segmentation?** See [examples/semantic_segmentation](https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation?raw=true).\n- **How to get annotations for instance segmentation?** See [examples/instance_segmentation](https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true).\n\n\n## Testing\n\n```bash\npip install hacking pytest pytest-qt\nflake8 .\npytest -v tests\n```\n\n\n## Developing\n\n```bash\ngit clone https://github.com/wkentaro/labelme.git\ncd labelme\n\n# Install anaconda3 and labelme\ncurl -L https://github.com/wkentaro/dotfiles/raw/master/local/bin/install_anaconda3.sh | bash -s .\nsource .anaconda3/bin/activate\npip install -e .\n```\n\n\n## How to build standalone executable\n\nBelow shows how to build the standalone executable on macOS, Linux and Windows.  \nAlso, there are pre-built executables in\n[the release section](https://github.com/wkentaro/labelme/releases).\n\n```bash\n# Setup conda\nconda create --name labelme python==3.6.0\nconda activate labelme\n\n# Build the standalone executable\npip install .\npip install pyinstaller\npyinstaller labelme.spec\ndist/labelme --version\n```\n\n\n## Acknowledgement\n\nThis repo is the fork of [mpitid/pylabelme](https://github.com/mpitid/pylabelme),\nwhose development has already stopped.\n\n\n## Cite This Project\n\nIf you use this project in your research or wish to refer to the baseline results published in the README, please use the following BibTeX entry.\n\n```bash\n@misc{labelme2016,\n  author =       {Ketaro Wada},\n  title =        {{labelme: Image Polygonal Annotation with Python}},\n  howpublished = {\\url{https://github.com/wkentaro/labelme}},\n  year =         {2016}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wkentaro/labelme", "keywords": "Image Annotation,Machine Learning", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "labelme-v1", "package_url": "https://pypi.org/project/labelme-v1/", "platform": "", "project_url": "https://pypi.org/project/labelme-v1/", "project_urls": {"Homepage": "https://github.com/wkentaro/labelme"}, "release_url": "https://pypi.org/project/labelme-v1/3.16.2/", "requires_dist": null, "requires_python": "", "summary": "Image Polygonal Annotation with Python", "version": "3.16.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe753aef697ac9e788648bd7732a34dad4967d51/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6c6162656c6d652f69636f6e732f69636f6e2e706e673f7261773d74727565\"><br>labelme\n</h1>\n<h4>\n  Image Polygonal Annotation with Python\n</h4>\n<div>\n  <a href=\"https://pypi.python.org/pypi/labelme\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7326e7193d92c556ec600406c99d506519a6fcb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6162656c6d652e737667\"></a>\n  <a href=\"https://pypi.org/project/labelme\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49e8e2eb5e31b2178fec8cbef0cc59a1d1ed3473/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c6162656c6d652e737667\"></a>\n  <a href=\"https://travis-ci.org/wkentaro/labelme\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38213a600ee1ef8cb515d982cabe72af8dc80a9c/68747470733a2f2f7472617669732d63692e6f72672f776b656e7461726f2f6c6162656c6d652e7376673f6272616e63683d6d6173746572\"></a>\n  <a href=\"https://hub.docker.com/r/wkentaro/labelme\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aefb6f2780c668a20ba803a5aba97ff94700df32/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f6275696c642f776b656e7461726f2f6c6162656c6d652e737667\"></a>\n</div>\n<br>\n<div>\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bc0b8d43e4abac3516670a0095cf13d5f9695a4/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f696e7374616e63655f7365676d656e746174696f6e2f2e726561646d652f616e6e6f746174696f6e2e6a70673f7261773d74727565\" width=\"70%\">\n</div>\n<h2>Description</h2>\n<p>Labelme is a graphical image annotation tool inspired by <a href=\"http://labelme.csail.mit.edu\" rel=\"nofollow\">http://labelme.csail.mit.edu</a>.<br>\nIt is written in Python and uses Qt for its graphical interface.</p>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50bfe316582d1b33eb014eb05df689741babe20a/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f696e7374616e63655f7365676d656e746174696f6e2f646174615f646174617365745f766f632f4a504547496d616765732f323031315f3030303030362e6a70673f7261773d74727565\" width=\"19%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d68132d4b4f4d34430b709887f660340cf446416/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f696e7374616e63655f7365676d656e746174696f6e2f646174615f646174617365745f766f632f5365676d656e746174696f6e436c617373504e472f323031315f3030303030362e706e673f7261773d74727565\" width=\"19%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a075330d6b14040a9f14d4181517e12b084a9008/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f696e7374616e63655f7365676d656e746174696f6e2f646174615f646174617365745f766f632f5365676d656e746174696f6e436c61737356697375616c697a6174696f6e2f323031315f3030303030362e6a70673f7261773d74727565\" width=\"19%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97cbee2cba6c3e4c8c34325690274b52add8bd4e/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f696e7374616e63655f7365676d656e746174696f6e2f646174615f646174617365745f766f632f5365676d656e746174696f6e4f626a656374504e472f323031315f3030303030362e706e673f7261773d74727565\" width=\"19%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a040bcfa4f3be702b3e7e65b045f00c82c78610/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f696e7374616e63655f7365676d656e746174696f6e2f646174615f646174617365745f766f632f5365676d656e746174696f6e4f626a65637456697375616c697a6174696f6e2f323031315f3030303030362e6a70673f7261773d74727565\" width=\"19%\"><br>\n<i>VOC dataset example of instance segmentation.</i></p>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8912b779dd8b814531017a364a303da5e336bb2/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f73656d616e7469635f7365676d656e746174696f6e2f2e726561646d652f616e6e6f746174696f6e2e6a70673f7261773d74727565\" width=\"32%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d3e9554c400560fed5f619c64454a3c84e4c203/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f62626f785f646574656374696f6e2f2e726561646d652f616e6e6f746174696f6e2e6a70673f7261773d74727565\" width=\"30%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/202fffbb9f08e2d794ba922591c9d763dcafdb17/68747470733a2f2f6769746875622e636f6d2f776b656e7461726f2f6c6162656c6d652f626c6f622f6d61737465722f6578616d706c65732f636c617373696669636174696f6e2f2e726561646d652f616e6e6f746174696f6e5f6361742e6a70673f7261773d74727565\" width=\"35%\"><br>\n<i>Other examples (semantic segmentation, bbox detection, and classification).</i></p>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5927db4ed026bb6d711b9aec2919bf27840564a5/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f343331303431392f34373930373131362d38353636373830302d646538322d313165382d383364302d6239663465623333323638662e676966\" width=\"30%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/718653498d7d16b136e46e68ec87aef6aed15655/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f343331303431392f34373932323137322d35373937323838302d646561652d313165382d383466382d6534333234613763383536612e676966\" width=\"30%\"> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e595ddfd57f543ff5f964f4dad81df4f3bce622/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31343235363438322f34363933323037352d39323134356630302d643038302d313165382d386430392d3231363230373061653537632e706e67\" width=\"32%\"><br>\n<i>Various primitives (polygon, rectangle, circle, line, and point).</i></p>\n<h2>Features</h2>\n<ul>\n<li>[x] Image annotation for polygon, rectangle, circle, line and point. (<a href=\"https://github.com/wkentaro/labelme/blob/master/examples/tutorial\" rel=\"nofollow\">tutorial</a>)</li>\n<li>[x] Image flag annotation for classification and cleaning. (<a href=\"https://github.com/wkentaro/labelme/pull/166\" rel=\"nofollow\">#166</a>)</li>\n<li>[x] Video annotation. (<a href=\"https://github.com/wkentaro/labelme/blob/master/examples/video_annotation?raw=true\" rel=\"nofollow\">video annotation</a>)</li>\n<li>[x] GUI customization (predefined labels / flags, auto-saving, label validation, etc). (<a href=\"https://github.com/wkentaro/labelme/pull/144\" rel=\"nofollow\">#144</a>)</li>\n<li>[x] Exporting VOC-format dataset for semantic/instance segmentation. (<a href=\"https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation?raw=true\" rel=\"nofollow\">semantic segmentation</a>, <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true\" rel=\"nofollow\">instance segmentation</a>)</li>\n<li>[x] Exporting COCO-format dataset for instance segmentation. (<a href=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true\" rel=\"nofollow\">instance segmentation</a>)</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Ubuntu / macOS / Windows</li>\n<li>Python2 / Python3</li>\n<li><a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow\">PyQt4 / PyQt5</a> / <a href=\"https://wiki.qt.io/PySide2_GettingStarted\" rel=\"nofollow\">PySide2</a></li>\n</ul>\n<h2>Installation</h2>\n<p>There are options:</p>\n<ul>\n<li>Platform agonistic installation: <a href=\"https://github.com/wkentaro/labelme/blob/master/#anaconda\" rel=\"nofollow\">Anaconda</a>, <a href=\"https://github.com/wkentaro/labelme/blob/master/#docker\" rel=\"nofollow\">Docker</a></li>\n<li>Platform specific installation: <a href=\"https://github.com/wkentaro/labelme/blob/master/#ubuntu\" rel=\"nofollow\">Ubuntu</a>, <a href=\"https://github.com/wkentaro/labelme/blob/master/#macos\" rel=\"nofollow\">macOS</a>, <a href=\"https://github.com/wkentaro/labelme/blob/master/#windows\" rel=\"nofollow\">Windows</a></li>\n</ul>\n<h3>Anaconda</h3>\n<p>You need install <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">Anaconda</a>, then run below:</p>\n<pre><span class=\"c1\"># python2</span>\nconda create --name<span class=\"o\">=</span>labelme <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">2</span>.7\n<span class=\"nb\">source</span> activate labelme\n<span class=\"c1\"># conda install -c conda-forge pyside2</span>\nconda install pyqt\npip install labelme\n<span class=\"c1\"># if you'd like to use the latest version. run below:</span>\n<span class=\"c1\"># pip install git+https://github.com/wkentaro/labelme.git</span>\n\n<span class=\"c1\"># python3</span>\nconda create --name<span class=\"o\">=</span>labelme <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.6\n<span class=\"nb\">source</span> activate labelme\n<span class=\"c1\"># conda install -c conda-forge pyside2</span>\n<span class=\"c1\"># conda install pyqt</span>\npip install pyqt5  <span class=\"c1\"># pyqt5 can be installed via pip on python3</span>\npip install labelme\n</pre>\n<h3>Docker</h3>\n<p>You need install <a href=\"https://www.docker.com\" rel=\"nofollow\">docker</a>, then run below:</p>\n<pre>wget https://raw.githubusercontent.com/wkentaro/labelme/master/labelme/cli/on_docker.py -O labelme_on_docker\nchmod u+x labelme_on_docker\n\n<span class=\"c1\"># Maybe you need http://sourabhbajaj.com/blog/2017/02/07/gui-applications-docker-mac/ on macOS</span>\n./labelme_on_docker examples/tutorial/apc2016_obj3.jpg -O examples/tutorial/apc2016_obj3.json\n./labelme_on_docker examples/semantic_segmentation/data_annotated\n</pre>\n<h3>Ubuntu</h3>\n<pre><span class=\"c1\"># Ubuntu 14.04 / Ubuntu 16.04</span>\n<span class=\"c1\"># Python2</span>\n<span class=\"c1\"># sudo apt-get install python-qt4  # PyQt4</span>\nsudo apt-get install python-pyqt5  <span class=\"c1\"># PyQt5</span>\nsudo pip install labelme\n<span class=\"c1\"># Python3</span>\nsudo apt-get install python3-pyqt5  <span class=\"c1\"># PyQt5</span>\nsudo pip3 install labelme\n</pre>\n<h3>macOS</h3>\n<pre><span class=\"c1\"># macOS Sierra</span>\nbrew install pyqt  <span class=\"c1\"># maybe pyqt5</span>\npip install labelme  <span class=\"c1\"># both python2/3 should work</span>\n\n<span class=\"c1\"># or install standalone executable / app</span>\n<span class=\"c1\"># NOTE: this only installs the `labelme` command</span>\nbrew install wkentaro/labelme/labelme\nbrew cask install wkentaro/labelme/labelme\n</pre>\n<h3>Windows</h3>\n<p>Firstly, follow instruction in <a href=\"https://github.com/wkentaro/labelme/blob/master/#anaconda\" rel=\"nofollow\">Anaconda</a>.</p>\n<pre><span class=\"c1\"># Pillow 5 causes dll load error on Windows.</span>\n<span class=\"c1\"># https://github.com/wkentaro/labelme/pull/174</span>\nconda install <span class=\"nv\">pillow</span><span class=\"o\">=</span><span class=\"m\">4</span>.0.0\n</pre>\n<h2>Usage</h2>\n<p>Run <code>labelme --help</code> for detail.<br>\nThe annotations are saved as a <a href=\"http://www.json.org/\" rel=\"nofollow\">JSON</a> file.</p>\n<pre>labelme  <span class=\"c1\"># just open gui</span>\n\n<span class=\"c1\"># tutorial (single image example)</span>\n<span class=\"nb\">cd</span> examples/tutorial\nlabelme apc2016_obj3.jpg  <span class=\"c1\"># specify image file</span>\nlabelme apc2016_obj3.jpg -O apc2016_obj3.json  <span class=\"c1\"># close window after the save</span>\nlabelme apc2016_obj3.jpg --nodata  <span class=\"c1\"># not include image data but relative image path in JSON file</span>\nlabelme apc2016_obj3.jpg <span class=\"se\">\\</span>\n  --labels highland_6539_self_stick_notes,mead_index_cards,kong_air_dog_squeakair_tennis_ball  <span class=\"c1\"># specify label list</span>\n\n<span class=\"c1\"># semantic segmentation example</span>\n<span class=\"nb\">cd</span> examples/semantic_segmentation\nlabelme data_annotated/  <span class=\"c1\"># Open directory to annotate all images in it</span>\nlabelme data_annotated/ --labels labels.txt  <span class=\"c1\"># specify label list with a file</span>\n</pre>\n<p>For more advanced usage, please refer to the examples:</p>\n<ul>\n<li><a href=\"https://github.com/wkentaro/labelme/blob/master/examples/tutorial\" rel=\"nofollow\">Tutorial (Single Image Example)</a></li>\n<li><a href=\"https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation?raw=true\" rel=\"nofollow\">Semantic Segmentation Example</a></li>\n<li><a href=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true\" rel=\"nofollow\">Instance Segmentation Example</a></li>\n<li><a href=\"https://github.com/wkentaro/labelme/blob/master/examples/video_annotation?raw=true\" rel=\"nofollow\">Video Annotation Example</a></li>\n</ul>\n<h3>Command Line Arguemnts</h3>\n<ul>\n<li><code>--output</code> specifies the location that annotations will be written to. If the location ends with .json, a single annotation will be written to this file. Only one image can be annotated if a location is specified with .json. If the location does not end with .json, the program will assume it is a directory. Annotations will be stored in this directory with a name that corresponds to the image that the annotation was made on.</li>\n<li>The first time you run labelme, it will create a config file in <code>~/.labelmerc</code>. You can edit this file and the changes will be applied the next time that you launch labelme. If you would prefer to use a config file from another location, you can specify this file with the <code>--config</code> flag.</li>\n<li>Without the <code>--nosortlabels</code> flag, the program will list labels in alphabetical order. When the program is run with this flag, it will display labels in the order that they are provided.</li>\n<li>Flags are assigned to an entire image. <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/classification?raw=true\" rel=\"nofollow\">Example</a></li>\n<li>Labels are assigned to a single polygon. <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/bbox_detection?raw=true\" rel=\"nofollow\">Example</a></li>\n</ul>\n<h2>FAQ</h2>\n<ul>\n<li><strong>How to convert JSON file to numpy array?</strong> See <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/tutorial#convert-to-dataset\" rel=\"nofollow\">examples/tutorial</a>.</li>\n<li><strong>How to load label PNG file?</strong> See <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/tutorial#how-to-load-label-png-file\" rel=\"nofollow\">examples/tutorial</a>.</li>\n<li><strong>How to get annotations for semantic segmentation?</strong> See <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/semantic_segmentation?raw=true\" rel=\"nofollow\">examples/semantic_segmentation</a>.</li>\n<li><strong>How to get annotations for instance segmentation?</strong> See <a href=\"https://github.com/wkentaro/labelme/blob/master/examples/instance_segmentation?raw=true\" rel=\"nofollow\">examples/instance_segmentation</a>.</li>\n</ul>\n<h2>Testing</h2>\n<pre>pip install hacking pytest pytest-qt\nflake8 .\npytest -v tests\n</pre>\n<h2>Developing</h2>\n<pre>git clone https://github.com/wkentaro/labelme.git\n<span class=\"nb\">cd</span> labelme\n\n<span class=\"c1\"># Install anaconda3 and labelme</span>\ncurl -L https://github.com/wkentaro/dotfiles/raw/master/local/bin/install_anaconda3.sh <span class=\"p\">|</span> bash -s .\n<span class=\"nb\">source</span> .anaconda3/bin/activate\npip install -e .\n</pre>\n<h2>How to build standalone executable</h2>\n<p>Below shows how to build the standalone executable on macOS, Linux and Windows.<br>\nAlso, there are pre-built executables in\n<a href=\"https://github.com/wkentaro/labelme/releases\" rel=\"nofollow\">the release section</a>.</p>\n<pre><span class=\"c1\"># Setup conda</span>\nconda create --name labelme <span class=\"nv\">python</span><span class=\"o\">==</span><span class=\"m\">3</span>.6.0\nconda activate labelme\n\n<span class=\"c1\"># Build the standalone executable</span>\npip install .\npip install pyinstaller\npyinstaller labelme.spec\ndist/labelme --version\n</pre>\n<h2>Acknowledgement</h2>\n<p>This repo is the fork of <a href=\"https://github.com/mpitid/pylabelme\" rel=\"nofollow\">mpitid/pylabelme</a>,\nwhose development has already stopped.</p>\n<h2>Cite This Project</h2>\n<p>If you use this project in your research or wish to refer to the baseline results published in the README, please use the following BibTeX entry.</p>\n<pre>@misc<span class=\"o\">{</span>labelme2016,\n  <span class=\"nv\">author</span> <span class=\"o\">=</span>       <span class=\"o\">{</span>Ketaro Wada<span class=\"o\">}</span>,\n  <span class=\"nv\">title</span> <span class=\"o\">=</span>        <span class=\"o\">{{</span>labelme: Image Polygonal Annotation with Python<span class=\"o\">}}</span>,\n  <span class=\"nv\">howpublished</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"se\">\\u</span>rl<span class=\"o\">{</span>https://github.com/wkentaro/labelme<span class=\"o\">}}</span>,\n  <span class=\"nv\">year</span> <span class=\"o\">=</span>         <span class=\"o\">{</span><span class=\"m\">2016</span><span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 5550518, "releases": {"3.16.2": [{"comment_text": "", "digests": {"md5": "1627633f9bf4ff30bba7c0020cf3e6dd", "sha256": "5dd80fe10b5eba7853b218e99e6fa50f06dc17efeda76ca3e046d4b8dffeee07"}, "downloads": -1, "filename": "labelme-v1-3.16.2.tar.gz", "has_sig": false, "md5_digest": "1627633f9bf4ff30bba7c0020cf3e6dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1456532, "upload_time": "2019-07-18T11:09:41", "upload_time_iso_8601": "2019-07-18T11:09:41.406790Z", "url": "https://files.pythonhosted.org/packages/ba/a8/cc68062bb8f55ed92d29f88e25858add39e0c292a1dfed96615a332569a3/labelme-v1-3.16.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1627633f9bf4ff30bba7c0020cf3e6dd", "sha256": "5dd80fe10b5eba7853b218e99e6fa50f06dc17efeda76ca3e046d4b8dffeee07"}, "downloads": -1, "filename": "labelme-v1-3.16.2.tar.gz", "has_sig": false, "md5_digest": "1627633f9bf4ff30bba7c0020cf3e6dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1456532, "upload_time": "2019-07-18T11:09:41", "upload_time_iso_8601": "2019-07-18T11:09:41.406790Z", "url": "https://files.pythonhosted.org/packages/ba/a8/cc68062bb8f55ed92d29f88e25858add39e0c292a1dfed96615a332569a3/labelme-v1-3.16.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:22 2020"}