{"info": {"author": "Detlef Stern", "author_email": "mail-python.org@yodod.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: System :: Systems Administration :: Authentication/Directory"], "description": "Django HTTP Basic Authentication Backend\n========================================\n\nDescription\n-----------\n\nThis module provides the client side for a HTTP Basic Authentication provider\nto allow authentication for a Django application. It must be installed as a\nDjango authentication backend.\n\nThis allows to authenticate your Django application with the help of a web\nserver that already provides HTTP Basic Authentication, as it is described in\n[RFC2617](https://www.ietf.org/rfc/rfc2617.txt). Web servers, such as Apache\nor Nginx, can easily be configured to adapt complex authentication scenarios,\ne.g. authentication via a combination of LDAP and manual filters. Your Django\nproject is now able to utilize such a configuration.\n\nInstallation\n------------\n\nAdd this module to your `setup.py` and/or to `requirements.txt` file:\n\n    # ...\n    django-auth-http-basic\n    # ...\n\nYou need at least Django >= 1.10.\n\nConfiguration\n-------------\n\nIn your `settings.py` file, you must add/set the variable\n`AUTHENTICATION_BACKENDS` so that it includes the authentication backend, e.g.:\n\n    AUTHENTICATION_BACKENDS = ['django_auth_http_basic.HttpBasicAuthBackend']\n\nIn addition, you must specify an URL that provides HTTP Basic Authentication by\nproviding a value for the variable `HTTP_BASIC_AUTH_URL` in your `settings.py`\nfile, e.g.:\n\n    HTTP_BASIC_AUTH_URL = 'https://example.com/auth'\n\nAs long as the web services conforms to HTTP Basic Authentication, it could be\nused as an authentication backend. Since HTTP Basic Authentication transports\nuser name and password in clear text, you should access it via HTTPS. If the\nweb server is on your local host, you might use unencrypted HTTP.\n\nThe web server is expected to return a 401 response, if no user name and/or\nno password is provided. It must return a 2xx response if the user is\nauthenticated, and a 403 response if the user is not authenticated. Currently,\nevery response code except 2xx will be interpreted as a failed authentication.\nMost web servers conform to this rule. However, you are free to implement your\nown authenticating web server.\n\nFor testing purposes, `HTTP_BASIC_AUTH_URL` can be set to `None`. In this case\nno web server will be contacted, every user will be authenticated. Please be\nsure to change `HTTP_BASIC_AUTH_URL` to a valid URL for production code.\n\nIf you don't set the variable `HTTP_BASIC_AUTH_URL` to any value, no user will\nbe authenticated. In this case, an error message will be sent to the logger\nnamed `django-auth-http-basic`.\n\nAnother (optional) variable you can use in your `settings.py` is\n`HTTP_BASIC_AUTH_CASE`. This value specifies, whether the user name will be\nhandled case-sensitive or case-insensitive in the backend. Its value itself\nis treated case-insensive. Only its first letter is analysed. If it is a '0',\n'f' or 'n', then the user name will be folded to lower-case. If you omit this\nvariable, a value 'yes' is assumed.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/t73fde/django-auth-http-basic", "keywords": "authentication django http basic auth", "license": "APL2", "maintainer": "", "maintainer_email": "", "name": "django-auth-http-basic", "package_url": "https://pypi.org/project/django-auth-http-basic/", "platform": "", "project_url": "https://pypi.org/project/django-auth-http-basic/", "project_urls": {"Homepage": "https://github.com/t73fde/django-auth-http-basic"}, "release_url": "https://pypi.org/project/django-auth-http-basic/20191020.0/", "requires_dist": null, "requires_python": "", "summary": "Django authentication based based on HTTP basic authentication", "version": "20191020.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>This module provides the client side for a HTTP Basic Authentication provider\nto allow authentication for a Django application. It must be installed as a\nDjango authentication backend.</p>\n<p>This allows to authenticate your Django application with the help of a web\nserver that already provides HTTP Basic Authentication, as it is described in\n[RFC2617](<a href=\"https://www.ietf.org/rfc/rfc2617.txt\" rel=\"nofollow\">https://www.ietf.org/rfc/rfc2617.txt</a>). Web servers, such as Apache\nor Nginx, can easily be configured to adapt complex authentication scenarios,\ne.g. authentication via a combination of LDAP and manual filters. Your Django\nproject is now able to utilize such a configuration.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Add this module to your <cite>setup.py</cite> and/or to <cite>requirements.txt</cite> file:</p>\n<blockquote>\n# \u2026\ndjango-auth-http-basic\n# \u2026</blockquote>\n<p>You need at least Django &gt;= 1.10.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>In your <cite>settings.py</cite> file, you must add/set the variable\n<cite>AUTHENTICATION_BACKENDS</cite> so that it includes the authentication backend, e.g.:</p>\n<blockquote>\nAUTHENTICATION_BACKENDS = [\u2018django_auth_http_basic.HttpBasicAuthBackend\u2019]</blockquote>\n<p>In addition, you must specify an URL that provides HTTP Basic Authentication by\nproviding a value for the variable <cite>HTTP_BASIC_AUTH_URL</cite> in your <cite>settings.py</cite>\nfile, e.g.:</p>\n<blockquote>\nHTTP_BASIC_AUTH_URL = \u2018<a href=\"https://example.com/auth\" rel=\"nofollow\">https://example.com/auth</a>\u2019</blockquote>\n<p>As long as the web services conforms to HTTP Basic Authentication, it could be\nused as an authentication backend. Since HTTP Basic Authentication transports\nuser name and password in clear text, you should access it via HTTPS. If the\nweb server is on your local host, you might use unencrypted HTTP.</p>\n<p>The web server is expected to return a 401 response, if no user name and/or\nno password is provided. It must return a 2xx response if the user is\nauthenticated, and a 403 response if the user is not authenticated. Currently,\nevery response code except 2xx will be interpreted as a failed authentication.\nMost web servers conform to this rule. However, you are free to implement your\nown authenticating web server.</p>\n<p>For testing purposes, <cite>HTTP_BASIC_AUTH_URL</cite> can be set to <cite>None</cite>. In this case\nno web server will be contacted, every user will be authenticated. Please be\nsure to change <cite>HTTP_BASIC_AUTH_URL</cite> to a valid URL for production code.</p>\n<p>If you don\u2019t set the variable <cite>HTTP_BASIC_AUTH_URL</cite> to any value, no user will\nbe authenticated. In this case, an error message will be sent to the logger\nnamed <cite>django-auth-http-basic</cite>.</p>\n<p>Another (optional) variable you can use in your <cite>settings.py</cite> is\n<cite>HTTP_BASIC_AUTH_CASE</cite>. This value specifies, whether the user name will be\nhandled case-sensitive or case-insensitive in the backend. Its value itself\nis treated case-insensive. Only its first letter is analysed. If it is a \u20180\u2019,\n\u2018f\u2019 or \u2018n\u2019, then the user name will be folded to lower-case. If you omit this\nvariable, a value \u2018yes\u2019 is assumed.</p>\n</div>\n\n          </div>"}, "last_serial": 6003610, "releases": {"0.0.7": [{"comment_text": "", "digests": {"md5": "662a57a75343cd9a076395ce73f917e6", "sha256": "b6d411b054ce81d8a5606d31c0ff29e66ff00668a6f0f280787bb6d7752568eb"}, "downloads": -1, "filename": "django-auth-http-basic-0.0.7.tar.gz", "has_sig": false, "md5_digest": "662a57a75343cd9a076395ce73f917e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4885, "upload_time": "2018-03-30T16:43:21", "upload_time_iso_8601": "2018-03-30T16:43:21.053100Z", "url": "https://files.pythonhosted.org/packages/09/a2/58fe72293023c21cc64a330d91a0ee2f588a5c61f42e57c1626449b6d0e9/django-auth-http-basic-0.0.7.tar.gz", "yanked": false}], "20180404.1": [{"comment_text": "", "digests": {"md5": "20eac035010db3f0a87577d3dd352965", "sha256": "fc23b84b65ea35df893ea0bb51ee09b383994c30078733760a73ee2084efb7fb"}, "downloads": -1, "filename": "django-auth-http-basic-20180404.1.tar.gz", "has_sig": false, "md5_digest": "20eac035010db3f0a87577d3dd352965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5148, "upload_time": "2018-04-04T14:47:59", "upload_time_iso_8601": "2018-04-04T14:47:59.289566Z", "url": "https://files.pythonhosted.org/packages/7b/3a/e45324fb46bccc585cdc1cead23d2f475563031f7c1d4bebdac3e2dcc88d/django-auth-http-basic-20180404.1.tar.gz", "yanked": false}], "20180405.0": [{"comment_text": "", "digests": {"md5": "62ee7f148c82ad02ff06b325854110fc", "sha256": "fb34ecc1dc118f4d120035f6cb004991a8723503eb13fa7b2525f693f551502b"}, "downloads": -1, "filename": "django-auth-http-basic-20180405.0.tar.gz", "has_sig": false, "md5_digest": "62ee7f148c82ad02ff06b325854110fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5268, "upload_time": "2018-04-05T14:22:03", "upload_time_iso_8601": "2018-04-05T14:22:03.755136Z", "url": "https://files.pythonhosted.org/packages/e8/c7/e855f0d244b57d9ccb3614d5adc847148ce4ba789097537c279d31bfca50/django-auth-http-basic-20180405.0.tar.gz", "yanked": false}], "20180508.0": [{"comment_text": "", "digests": {"md5": "17397bc0672d7d53ff8cff8707bad04f", "sha256": "f94be0a5d3ce74d648785c007e00b99cb51d913641b57c5f2bbe29d36867ea13"}, "downloads": -1, "filename": "django-auth-http-basic-20180508.0.tar.gz", "has_sig": false, "md5_digest": "17397bc0672d7d53ff8cff8707bad04f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5251, "upload_time": "2018-05-08T13:31:19", "upload_time_iso_8601": "2018-05-08T13:31:19.762202Z", "url": "https://files.pythonhosted.org/packages/68/d8/99c3e308ce18fe2756ff45876872c259519aa6bda4eb59907799096d99b0/django-auth-http-basic-20180508.0.tar.gz", "yanked": false}], "20181221.0": [{"comment_text": "", "digests": {"md5": "bd5a1bda7a903dc5a5184dd675fed244", "sha256": "8102b821eb609cc2d06fb613aaa799d3723b8abe7b35cd97eae005aac4c3390c"}, "downloads": -1, "filename": "django-auth-http-basic-20181221.0.tar.gz", "has_sig": false, "md5_digest": "bd5a1bda7a903dc5a5184dd675fed244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5255, "upload_time": "2018-12-21T13:34:20", "upload_time_iso_8601": "2018-12-21T13:34:20.402777Z", "url": "https://files.pythonhosted.org/packages/97/d3/4e4bfbe4c193bbf8834a9786ac11c0aaac9f3fc2ad850ab4b3692909f824/django-auth-http-basic-20181221.0.tar.gz", "yanked": false}], "20191020.0": [{"comment_text": "", "digests": {"md5": "4914048d3146ddb91eb408d3a53d46f2", "sha256": "6b2fe721b8da03b85fec0bd2ab12cb53a6cb372125e384e147f75ccfdb82de33"}, "downloads": -1, "filename": "django-auth-http-basic-20191020.0.tar.gz", "has_sig": false, "md5_digest": "4914048d3146ddb91eb408d3a53d46f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5272, "upload_time": "2019-10-20T17:30:30", "upload_time_iso_8601": "2019-10-20T17:30:30.136955Z", "url": "https://files.pythonhosted.org/packages/15/90/b7306a7fae44fb8831b026eec10af18d7c5699c3d115fd6afae69e796a59/django-auth-http-basic-20191020.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4914048d3146ddb91eb408d3a53d46f2", "sha256": "6b2fe721b8da03b85fec0bd2ab12cb53a6cb372125e384e147f75ccfdb82de33"}, "downloads": -1, "filename": "django-auth-http-basic-20191020.0.tar.gz", "has_sig": false, "md5_digest": "4914048d3146ddb91eb408d3a53d46f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5272, "upload_time": "2019-10-20T17:30:30", "upload_time_iso_8601": "2019-10-20T17:30:30.136955Z", "url": "https://files.pythonhosted.org/packages/15/90/b7306a7fae44fb8831b026eec10af18d7c5699c3d115fd6afae69e796a59/django-auth-http-basic-20191020.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:34 2020"}