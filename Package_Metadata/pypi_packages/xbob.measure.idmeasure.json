{"info": {"author": "Chi Ho CHAN", "author_email": "chiho.chan@surrey.ac.uk", "bugtrack_url": null, "classifiers": ["Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "===================================================\r\nDetection and Identification Rate for Bob\r\n===================================================\r\n\r\nThis example demonstrates how to extend Bob by providing a new performance measurement \r\nfor measuring the open-set identification\r\n\r\nInstallation\r\n============\r\n\r\nFirst, you have to install `bob <http://www.idiap.ch/software/bob>`_ following the instructions\r\n`there <http://www.idiap.ch/software/bob/docs/releases/last/sphinx/html/Installation.html>`_.\r\n\r\n.. note:: \r\n\r\n  If you are reading this page through our GitHub portal and not through PyPI,\r\n  note **the development tip of the package may not be stable** or become\r\n  unstable in a matter of moments.\r\n\r\n  Go to `https://pypi.python.org/pypi/xbob.measure.idmeasure\r\n  <https://pypi.python.org/pypi/xbob.measure.idmeasure>`_ to download the latest\r\n  stable version of this package.\r\n\r\nThere are two options you can follow to get this package installed and \r\noperational on your computer: you can use automatic installers like `pip\r\n<http://pypi.python.org/pypi/pip/>`_ (or `easy_install\r\n<http://pypi.python.org/pypi/setuptools>`_) or manually download, unpack and \r\nuse `zc.buildout <http://pypi.python.org/pypi/zc.buildout>`_ to create a\r\nvirtual work environment just for this package. In both cases, the two \r\ndependences listed above will be automatically downloaded and installed.\r\n\r\nUsing an automatic installer\r\n----------------------------\r\n\r\nUsing ``pip`` is the easiest (shell commands are marked with a ``$`` signal)::\r\n\r\n  $ pip install xbob.measure.idmeasure\r\n\r\nYou can also do the same with ``easy_install``::\r\n\r\n  $ easy_install xbob.measure.idmeasure\r\n\r\nThis will download and install this package plus any other required\r\ndependencies. It will also verify if the version of Bob you have installed\r\nis compatible.\r\n\r\nThis scheme works well with virtual environments by `virtualenv\r\n<http://pypi.python.org/pypi/virtualenv>`_ or if you have root access to your\r\nmachine. Otherwise, we recommend you use the next option.\r\n\r\nUsing ``zc.buildout``\r\n---------------------\r\n\r\nDownload the latest version of this package from `PyPI\r\n<http://pypi.python.org/pypi/xbob.measure.idmeasure>`_ and unpack it in your\r\nworking area. The installation of the toolkit itself uses `buildout\r\n<http://www.buildout.org/>`_. You don't need to understand its inner workings\r\nto use this package. Here is a recipe to get you started::\r\n  \r\n  $ python bootstrap.py \r\n  $ ./bin/buildout\r\n\r\nThese two commands should download and install all non-installed dependencies and \r\nget you a fully operational test and development environment.\r\n\r\n.. note::\r\n\r\n  The python shell used in the first line of the previous command set\r\n  determines the python interpreter that will be used for all scripts developed\r\n  inside this package. Because this package makes use of `Bob`_, you must make sure\r\n  that the ``bootstrap.py`` script is called with the **same** interpreter used to \r\n  build Bob, or unexpected problems might occur.\r\n\r\n  If Bob is installed by the administrator of your system, it is safe to\r\n  consider it uses the default python interpreter. In this case, the above 3\r\n  command lines should work as expected. If you have Bob installed somewhere\r\n  else on a private directory, edit the file ``buildout.cfg`` **before**\r\n  running ``./bin/buildout``. Find the section named ``buildout`` and edit or\r\n  add the line ``prefixes`` to point to the directory where Bob is installed or\r\n  built. For example::\r\n\r\n    [buildout]\r\n    ...\r\n    prefixes=/Users/crazyfox/work/bob/build\r\n\r\n\r\nUser Guide\r\n==========\r\n\r\nIt is assumed you have followed the installation instructions for the package\r\nand got this package installed.\r\n\r\nTwo functions, DIR and DIR_plot, are in this package to compute and plot the \r\ndetection and identification rates by given the predefined false acceptance \r\nrates.  The descriptions of these function are presented below::\r\n\r\n    DIR(cmc_scores, far_list):\r\n    ==========================\r\n    Calculates the Detection and Identification Rate from the give input and \r\n    a vector of specified false acceptance rates\r\n    \r\n    Keyword attributes:\r\n\r\n    cmc_scores\r\n      List of two-element tuples. Each of the tuples contains the negative and \r\n      the positive scores for one test item.\r\n\r\n    far_list\r\n      Array of predefined false acceptance rates.\r\n\r\n    Return: List of two-element tuples, namely detection and identificatio rate. \r\n      Each of the tuples contains the probability that the rank r of the \r\n      positive score and the corresponding false acceptance rate. r is computed\r\n      as the number of negative scores that are higher than the positive score.\r\n\r\n    DIR_plot(cmc_scores, far_list, logx = True, **kwargs):\r\n    ======================================================\r\n    Plot the Detection and Identification Rate from the give input and a \r\n    vector of specified false acceptance rates\r\n    \r\n    Keyword attributes:\r\n\r\n    cmc_scores\r\n      List of two-element tuples. Each of the tuples contains the negative \r\n      and the positive scores for one test item.\r\n\r\n    far_list\r\n      Array of predefined false acceptance rates.\r\n\r\n    logx\r\n      Boolean input, if it is true, the x-axis is in log scale.\r\n\r\n    kwargs\r\n      A dictionary of extra plotting parameters, that is passed directly to \r\n      matplotlib.pyplot.plot\r\n\r\n    Note: This function does not initiate and save the figure instance, it\r\n          only issues the plotting commands.  Every user is responsible for\r\n          setting up and saving the figure as it best fits his purpose.\r\n\r\nBelow, we provide an example of how to appy DIR_plot to plot the DIR curve, from \r\nthe python universe::\r\n\r\n  >>> import idmeasure\r\n  # predefine a list of false acceptance rates\r\n  >>> FAR=[.01, 0.1, 1]\r\n  #Read The four column file needs to be in the same format as described in the\r\n   five_column function, and the \"test label\" (column 4) has to contain the \r\n   test/probe file name.  please refer the functions of \r\n   bob.measure.load.cmc_four_column, bob.measure.load.cmc_five_column to load \r\n   or generate the \"cmc scores\".\r\n  >>> idmeasure.DIR_plot(cmc_scores, FAR)\r\n  >>>pyplot.xlabel(\"Rank\")\r\n  >>>pyplot.ylabel(\"Identification Rate (%)\")\r\n  >>>pyplot.title(\"Detection and Identification Rate Identification Experiment\")\r\n  >>>pyplot.grid()\r\n  >>>pyplot.savefig(\"eigenfaceDIR.png\")\r\n  >>>pyplot.close()", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/xbob.measure.idmeasure", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "xbob.measure.idmeasure", "package_url": "https://pypi.org/project/xbob.measure.idmeasure/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xbob.measure.idmeasure/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/xbob.measure.idmeasure"}, "release_url": "https://pypi.org/project/xbob.measure.idmeasure/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Detection and Identification Rate", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This example demonstrates how to extend Bob by providing a new performance measurement\nfor measuring the open-set identification</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>First, you have to install <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">bob</a> following the instructions\n<a href=\"http://www.idiap.ch/software/bob/docs/releases/last/sphinx/html/Installation.html\" rel=\"nofollow\">there</a>.</p>\n<div>\n<p>Note</p>\n<p>If you are reading this page through our GitHub portal and not through PyPI,\nnote <strong>the development tip of the package may not be stable</strong> or become\nunstable in a matter of moments.</p>\n<p>Go to <a href=\"https://pypi.python.org/pypi/xbob.measure.idmeasure\" rel=\"nofollow\">https://pypi.python.org/pypi/xbob.measure.idmeasure</a> to download the latest\nstable version of this package.</p>\n</div>\n<p>There are two options you can follow to get this package installed and\noperational on your computer: you can use automatic installers like <a href=\"http://pypi.python.org/pypi/pip/\" rel=\"nofollow\">pip</a> (or <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">easy_install</a>) or manually download, unpack and\nuse <a href=\"http://pypi.python.org/pypi/zc.buildout\" rel=\"nofollow\">zc.buildout</a> to create a\nvirtual work environment just for this package. In both cases, the two\ndependences listed above will be automatically downloaded and installed.</p>\n<div id=\"using-an-automatic-installer\">\n<h3>Using an automatic installer</h3>\n<p>Using <tt>pip</tt> is the easiest (shell commands are marked with a <tt>$</tt> signal):</p>\n<pre>$ pip install xbob.measure.idmeasure\n</pre>\n<p>You can also do the same with <tt>easy_install</tt>:</p>\n<pre>$ easy_install xbob.measure.idmeasure\n</pre>\n<p>This will download and install this package plus any other required\ndependencies. It will also verify if the version of Bob you have installed\nis compatible.</p>\n<p>This scheme works well with virtual environments by <a href=\"http://pypi.python.org/pypi/virtualenv\" rel=\"nofollow\">virtualenv</a> or if you have root access to your\nmachine. Otherwise, we recommend you use the next option.</p>\n</div>\n<div id=\"using-zc-buildout\">\n<h3>Using <tt>zc.buildout</tt></h3>\n<p>Download the latest version of this package from <a href=\"http://pypi.python.org/pypi/xbob.measure.idmeasure\" rel=\"nofollow\">PyPI</a> and unpack it in your\nworking area. The installation of the toolkit itself uses <a href=\"http://www.buildout.org/\" rel=\"nofollow\">buildout</a>. You don\u2019t need to understand its inner workings\nto use this package. Here is a recipe to get you started:</p>\n<pre>$ python bootstrap.py\n$ ./bin/buildout\n</pre>\n<p>These two commands should download and install all non-installed dependencies and\nget you a fully operational test and development environment.</p>\n<div>\n<p>Note</p>\n<p>The python shell used in the first line of the previous command set\ndetermines the python interpreter that will be used for all scripts developed\ninside this package. Because this package makes use of <a href=\"http://www.idiap.ch/software/bob\" rel=\"nofollow\">Bob</a>, you must make sure\nthat the <tt>bootstrap.py</tt> script is called with the <strong>same</strong> interpreter used to\nbuild Bob, or unexpected problems might occur.</p>\n<p>If Bob is installed by the administrator of your system, it is safe to\nconsider it uses the default python interpreter. In this case, the above 3\ncommand lines should work as expected. If you have Bob installed somewhere\nelse on a private directory, edit the file <tt>buildout.cfg</tt> <strong>before</strong>\nrunning <tt>./bin/buildout</tt>. Find the section named <tt>buildout</tt> and edit or\nadd the line <tt>prefixes</tt> to point to the directory where Bob is installed or\nbuilt. For example:</p>\n<pre>[buildout]\n...\nprefixes=/Users/crazyfox/work/bob/build\n</pre>\n</div>\n</div>\n</div>\n<div id=\"user-guide\">\n<h2>User Guide</h2>\n<p>It is assumed you have followed the installation instructions for the package\nand got this package installed.</p>\n<p>Two functions, DIR and DIR_plot, are in this package to compute and plot the\ndetection and identification rates by given the predefined false acceptance\nrates.  The descriptions of these function are presented below:</p>\n<pre>DIR(cmc_scores, far_list):\n==========================\nCalculates the Detection and Identification Rate from the give input and\na vector of specified false acceptance rates\n\nKeyword attributes:\n\ncmc_scores\n  List of two-element tuples. Each of the tuples contains the negative and\n  the positive scores for one test item.\n\nfar_list\n  Array of predefined false acceptance rates.\n\nReturn: List of two-element tuples, namely detection and identificatio rate.\n  Each of the tuples contains the probability that the rank r of the\n  positive score and the corresponding false acceptance rate. r is computed\n  as the number of negative scores that are higher than the positive score.\n\nDIR_plot(cmc_scores, far_list, logx = True, **kwargs):\n======================================================\nPlot the Detection and Identification Rate from the give input and a\nvector of specified false acceptance rates\n\nKeyword attributes:\n\ncmc_scores\n  List of two-element tuples. Each of the tuples contains the negative\n  and the positive scores for one test item.\n\nfar_list\n  Array of predefined false acceptance rates.\n\nlogx\n  Boolean input, if it is true, the x-axis is in log scale.\n\nkwargs\n  A dictionary of extra plotting parameters, that is passed directly to\n  matplotlib.pyplot.plot\n\nNote: This function does not initiate and save the figure instance, it\n      only issues the plotting commands.  Every user is responsible for\n      setting up and saving the figure as it best fits his purpose.\n</pre>\n<p>Below, we provide an example of how to appy DIR_plot to plot the DIR curve, from\nthe python universe:</p>\n<pre>&gt;&gt;&gt; import idmeasure\n# predefine a list of false acceptance rates\n&gt;&gt;&gt; FAR=[.01, 0.1, 1]\n#Read The four column file needs to be in the same format as described in the\n five_column function, and the \"test label\" (column 4) has to contain the\n test/probe file name.  please refer the functions of\n bob.measure.load.cmc_four_column, bob.measure.load.cmc_five_column to load\n or generate the \"cmc scores\".\n&gt;&gt;&gt; idmeasure.DIR_plot(cmc_scores, FAR)\n&gt;&gt;&gt;pyplot.xlabel(\"Rank\")\n&gt;&gt;&gt;pyplot.ylabel(\"Identification Rate (%)\")\n&gt;&gt;&gt;pyplot.title(\"Detection and Identification Rate Identification Experiment\")\n&gt;&gt;&gt;pyplot.grid()\n&gt;&gt;&gt;pyplot.savefig(\"eigenfaceDIR.png\")\n&gt;&gt;&gt;pyplot.close()\n</pre>\n</div>\n\n          </div>"}, "last_serial": 907219, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "d52ce9446db50a6fa1e5fa6863aa4b88", "sha256": "40414a7726d13ff47ffabb9dea2d8bf3ec56d3f6fe33852bd9ff828c9bb87874"}, "downloads": -1, "filename": "xbob.measure.idmeasure-0.0.2.zip", "has_sig": false, "md5_digest": "d52ce9446db50a6fa1e5fa6863aa4b88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91423, "upload_time": "2013-10-09T12:02:29", "upload_time_iso_8601": "2013-10-09T12:02:29.445798Z", "url": "https://files.pythonhosted.org/packages/0b/3a/b0c3695af7f2975f030093846a8afe4243953a5f42bd18e57b8e77046763/xbob.measure.idmeasure-0.0.2.zip", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7a40c3796a60c7926f4721574b47cc8a", "sha256": "58a708deb6e5b853c6cefd7078818e28c3d1048df653732e09a736c335644b73"}, "downloads": -1, "filename": "xbob.measure.idmeasure-0.0.3.zip", "has_sig": false, "md5_digest": "7a40c3796a60c7926f4721574b47cc8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93629, "upload_time": "2013-10-10T15:41:00", "upload_time_iso_8601": "2013-10-10T15:41:00.938009Z", "url": "https://files.pythonhosted.org/packages/87/cd/c045166562089cef3f984c4c6c2c1fd8a882f6fa45fde3e65c315985abf1/xbob.measure.idmeasure-0.0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a40c3796a60c7926f4721574b47cc8a", "sha256": "58a708deb6e5b853c6cefd7078818e28c3d1048df653732e09a736c335644b73"}, "downloads": -1, "filename": "xbob.measure.idmeasure-0.0.3.zip", "has_sig": false, "md5_digest": "7a40c3796a60c7926f4721574b47cc8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93629, "upload_time": "2013-10-10T15:41:00", "upload_time_iso_8601": "2013-10-10T15:41:00.938009Z", "url": "https://files.pythonhosted.org/packages/87/cd/c045166562089cef3f984c4c6c2c1fd8a882f6fa45fde3e65c315985abf1/xbob.measure.idmeasure-0.0.3.zip", "yanked": false}], "timestamp": "Fri May  8 03:26:10 2020"}