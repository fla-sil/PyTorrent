{"info": {"author": "RedTurtle Technology", "author_email": "sviluppoplone@redturtle.it", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 3.2", "Framework :: Plone :: 3.3", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)"], "description": "redturtle.portlets.inspector\n============================\n\nredturtle.portlets.inspector is a report view to check the portlets inside a\nPlone site.\n\nThe report view\n---------------\nThis product gives you a view called `@@inspect-portlets`.\nTo visit this view you have to be manager.\n\nYou can call it on the root of your Plone site, e.g.:\n - http://localhost:8080/Plone-site-id/@@inspect-portlets\nor in restrict your analysis in a subsection of your site, e.g.:\n - http://localhost:8080/Plone-site-id/sub/section/@@inspect-portlets\n\nFor a newly created Plone site it will output:\n```\n{'/Plone': {u'plone.leftcolumn': [('<Assignment at ++contextportlets++plone.leftcolumn/navigation>',\n                                   \"<class 'plone.app.portlets.portlets.navigation.Assignment'>\")],\n            u'plone.rightcolumn': [('<Assignment at ++contextportlets++plone.rightcolumn/news>',\n                                    \"<class 'plone.app.portlets.portlets.news.Assignment'>\"),\n                                   ('<Assignment at ++contextportlets++plone.rightcolumn/events>',\n                                    \"<class 'plone.app.portlets.portlets.events.Assignment'>\")]}}\n```\n\nInstallation\n------------\nJust add this egg to your instance eggs.\n```\neggs+=\n    redturtle.portlets.inspector\n```\n\nIf your are using an older version of Plone (before 3.3), you will also have\nto add this egg to the zcml.\n```\nzcml+=\n    redturtle.portlets.inspector\n```\n\nWhy you want it\n---------------\nYou may want to check this view for several reasons:\n - you want to remove a product that provides a portlet and want to remove all \n   the related portlets in your site otherwise it will break\n - you want to analyze a Plone site before migrating it\n - you are simply curious\n\nDetailed Documentation\n**********************\n\nIntroduction\n============\n\nCounts the portlets in a site\n\n\nTest suite\n==========\n\nThis is a full-blown functional test. The emphasis here is on testing what\nthe user may input and see, and the system is largely tested as a black box.\nWe use PloneTestCase to set up this test as well, so we have a full Plone site\nto play with. We *can* inspect the state of the portal, e.g. using \nself.portal and self.folder, but it is often frowned upon since you are not\ntreating the system as a black box. Also, if you, for example, log in or set\nroles using calls like self.setRoles(), these are not reflected in the test\nbrowser, which runs as a separate session.\n\nBeing a doctest, we can tell a story here.\n\nFirst, we must perform some setup. We use the testbrowser that is shipped\nwith Five, as this provides proper Zope 2 integration. Most of the \ndocumentation, though, is in the underlying zope.testbrower package.\n\n    >>> from Products.Five.testbrowser import Browser\n    >>> browser = Browser()\n    >>> portal_url = self.portal.absolute_url()\n\nThe following is useful when writing and debugging testbrowser tests. It lets\nus see all error messages in the error_log.\n\n    >>> self.portal.error_log._ignored_exceptions = ()\n\nWith that in place, we can go to the portal front page and log in. We will\ndo this using the default user from PloneTestCase:\n\n    >>> from Products.PloneTestCase.setup import portal_owner, default_password\n\nBecause add-on themes or products may remove or hide the login portlet, this test will use the login form that comes with plone.  \n\n    >>> browser.open(portal_url + '/login_form')\n    >>> browser.getControl(name='__ac_name').value = portal_owner\n    >>> browser.getControl(name='__ac_password').value = default_password\n    >>> browser.getControl(name='submit').click()\n\nHere, we set the value of the fields on the login form and then simulate a\nsubmit click.  We then ensure that we get the friendly logged-in message:\n\n    >>> \"You are now logged in\" in browser.contents\n    True\n\nFinally, let's return to the front page of our site before continuing\n\n    >>> browser.open(portal_url)\n    \nThen we check the inspect-portlets view    \n    >>> browser.open(portal_url+'/@@inspect-portlets')\n\n-*- extra stuff goes here -*-\n\n\nContributors\n************\n\n\"\", Author\n\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/redturtle.portlets.inspector", "keywords": "plone portlets", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "redturtle.portlets.inspector", "package_url": "https://pypi.org/project/redturtle.portlets.inspector/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/redturtle.portlets.inspector/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/redturtle.portlets.inspector"}, "release_url": "https://pypi.org/project/redturtle.portlets.inspector/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Redturtle Portlets Inspector", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            redturtle.portlets.inspector<br>============================<br><br>redturtle.portlets.inspector is a report view to check the portlets inside a<br>Plone site.<br><br>The report view<br>---------------<br>This product gives you a view called `@@inspect-portlets`.<br>To visit this view you have to be manager.<br><br>You can call it on the root of your Plone site, e.g.:<br> - http://localhost:8080/Plone-site-id/@@inspect-portlets<br>or in restrict your analysis in a subsection of your site, e.g.:<br> - http://localhost:8080/Plone-site-id/sub/section/@@inspect-portlets<br><br>For a newly created Plone site it will output:<br>```<br>{'/Plone': {u'plone.leftcolumn': [('&lt;Assignment at ++contextportlets++plone.leftcolumn/navigation&gt;',<br>                                   \"&lt;class 'plone.app.portlets.portlets.navigation.Assignment'&gt;\")],<br>            u'plone.rightcolumn': [('&lt;Assignment at ++contextportlets++plone.rightcolumn/news&gt;',<br>                                    \"&lt;class 'plone.app.portlets.portlets.news.Assignment'&gt;\"),<br>                                   ('&lt;Assignment at ++contextportlets++plone.rightcolumn/events&gt;',<br>                                    \"&lt;class 'plone.app.portlets.portlets.events.Assignment'&gt;\")]}}<br>```<br><br>Installation<br>------------<br>Just add this egg to your instance eggs.<br>```<br>eggs+=<br>    redturtle.portlets.inspector<br>```<br><br>If your are using an older version of Plone (before 3.3), you will also have<br>to add this egg to the zcml.<br>```<br>zcml+=<br>    redturtle.portlets.inspector<br>```<br><br>Why you want it<br>---------------<br>You may want to check this view for several reasons:<br> - you want to remove a product that provides a portlet and want to remove all <br>   the related portlets in your site otherwise it will break<br> - you want to analyze a Plone site before migrating it<br> - you are simply curious<br><br>Detailed Documentation<br>**********************<br><br>Introduction<br>============<br><br>Counts the portlets in a site<br><br><br>Test suite<br>==========<br><br>This is a full-blown functional test. The emphasis here is on testing what<br>the user may input and see, and the system is largely tested as a black box.<br>We use PloneTestCase to set up this test as well, so we have a full Plone site<br>to play with. We *can* inspect the state of the portal, e.g. using <br>self.portal and self.folder, but it is often frowned upon since you are not<br>treating the system as a black box. Also, if you, for example, log in or set<br>roles using calls like self.setRoles(), these are not reflected in the test<br>browser, which runs as a separate session.<br><br>Being a doctest, we can tell a story here.<br><br>First, we must perform some setup. We use the testbrowser that is shipped<br>with Five, as this provides proper Zope 2 integration. Most of the <br>documentation, though, is in the underlying zope.testbrower package.<br><br>    &gt;&gt;&gt; from Products.Five.testbrowser import Browser<br>    &gt;&gt;&gt; browser = Browser()<br>    &gt;&gt;&gt; portal_url = self.portal.absolute_url()<br><br>The following is useful when writing and debugging testbrowser tests. It lets<br>us see all error messages in the error_log.<br><br>    &gt;&gt;&gt; self.portal.error_log._ignored_exceptions = ()<br><br>With that in place, we can go to the portal front page and log in. We will<br>do this using the default user from PloneTestCase:<br><br>    &gt;&gt;&gt; from Products.PloneTestCase.setup import portal_owner, default_password<br><br>Because add-on themes or products may remove or hide the login portlet, this test will use the login form that comes with plone.  <br><br>    &gt;&gt;&gt; browser.open(portal_url + '/login_form')<br>    &gt;&gt;&gt; browser.getControl(name='__ac_name').value = portal_owner<br>    &gt;&gt;&gt; browser.getControl(name='__ac_password').value = default_password<br>    &gt;&gt;&gt; browser.getControl(name='submit').click()<br><br>Here, we set the value of the fields on the login form and then simulate a<br>submit click.  We then ensure that we get the friendly logged-in message:<br><br>    &gt;&gt;&gt; \"You are now logged in\" in browser.contents<br>    True<br><br>Finally, let's return to the front page of our site before continuing<br><br>    &gt;&gt;&gt; browser.open(portal_url)<br>    <br>Then we check the inspect-portlets view    <br>    &gt;&gt;&gt; browser.open(portal_url+'/@@inspect-portlets')<br><br>-*- extra stuff goes here -*-<br><br><br>Contributors<br>************<br><br>\"\", Author<br><br><br>Download<br>********\n          </div>"}, "last_serial": 929535, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "053b2d61f79bc8a65f5d26a8f1caf526", "sha256": "63bc27d056d9475b8eec7ecee486fbeb25b663bb9d5ec517e59560a650cfc9ec"}, "downloads": -1, "filename": "redturtle.portlets.inspector-1.0.0.zip", "has_sig": false, "md5_digest": "053b2d61f79bc8a65f5d26a8f1caf526", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25203, "upload_time": "2013-11-26T13:29:51", "upload_time_iso_8601": "2013-11-26T13:29:51.784827Z", "url": "https://files.pythonhosted.org/packages/ee/55/1d7150f71291032273edca0b94ef712ca563738fb2994a21cbbea4a10d0e/redturtle.portlets.inspector-1.0.0.zip", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "b7507b39061c1b5b1e6c9a3b584862a7", "sha256": "f50824763b58281113397deb64a19f7d16b980da8057fd94f9c5598c1f61d351"}, "downloads": -1, "filename": "redturtle.portlets.inspector-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "b7507b39061c1b5b1e6c9a3b584862a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14144, "upload_time": "2013-04-15T15:33:43", "upload_time_iso_8601": "2013-04-15T15:33:43.950229Z", "url": "https://files.pythonhosted.org/packages/e1/c5/642778d743fec17b85ca89a0aafb4f0509a39ba64c863e0a913085390e26/redturtle.portlets.inspector-1.0.0rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "053b2d61f79bc8a65f5d26a8f1caf526", "sha256": "63bc27d056d9475b8eec7ecee486fbeb25b663bb9d5ec517e59560a650cfc9ec"}, "downloads": -1, "filename": "redturtle.portlets.inspector-1.0.0.zip", "has_sig": false, "md5_digest": "053b2d61f79bc8a65f5d26a8f1caf526", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25203, "upload_time": "2013-11-26T13:29:51", "upload_time_iso_8601": "2013-11-26T13:29:51.784827Z", "url": "https://files.pythonhosted.org/packages/ee/55/1d7150f71291032273edca0b94ef712ca563738fb2994a21cbbea4a10d0e/redturtle.portlets.inspector-1.0.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:05:32 2020"}