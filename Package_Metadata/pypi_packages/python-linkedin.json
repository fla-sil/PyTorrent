{"info": {"author": "Ozgur Vatansever", "author_email": "ozgurvt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7"], "description": "Python LinkedIn\n=================\n\nPython interface to the LinkedIn API\n\nThis library provides a pure Python interface to the LinkedIn **Profile**, **Group**, **Company**, **Jobs**, **Search**, **Share**, **Network** and **Invitation** REST APIs.\n\n`LinkedIn <http://developer.linkedin.com>`_ provides a service that lets people bring their LinkedIn profiles and networks with them to your site or application via their OAuth based API. This library provides a lightweight interface over a complicated LinkedIn OAuth based API to make it for python programmers easy to use.\n\nInstallation\n--------------------\n\nYou can install **python-linkedin** library via pip:\n\n.. code-block:: bash\n\n    $ pip install python-linkedin\n\nAuthentication\n-----------------------\n\nLinkedIn REST API uses **Oauth 2.0** protocol for authentication. In order to use the LinkedIn API, you have an **application key** and **application secret**. You can get more detail from `here <http://developers.linkedin.com/documents/authentication>`_.\n\nFor debugging purposes you can use the credentials below. It belongs to my test application. Nothing's harmful.\n\n.. code-block:: python\n\n    KEY = 'wFNJekVpDCJtRPFX812pQsJee-gt0zO4X5XmG6wcfSOSlLocxodAXNMbl0_hw3Vl'\n    SECRET = 'daJDa6_8UcnGMw1yuq9TjoO_PMKukXMo8vEMo7Qv5J-G3SPgrAV0FqFCd0TNjQyG'\n\n\nLinkedIn redirects the user back to your website's URL after granting access (giving proper permissions) to your application. We call that url **RETURN URL**. Assuming your return url is **http://localhost:8000**, you can write something like this:\n\n.. code-block:: python\n\n    from linkedin import linkedin\n\n    API_KEY = \"wFNJekVpDCJtRPFX812pQsJee-gt0zO4X5XmG6wcfSOSlLocxodAXNMbl0_hw3Vl\"\n    API_SECRET = \"daJDa6_8UcnGMw1yuq9TjoO_PMKukXMo8vEMo7Qv5J-G3SPgrAV0FqFCd0TNjQyG\"\n    RETURN_URL = \"http://localhost:8000\"\n    authentication = linkedin.LinkedInAuthentication(API_KEY, API_SECRET, RETURN_URL, linkedin.PERMISSIONS.enums.values())\n    print authentication.authorization_url\n    application = linkedin.LinkedInApplication(authentication)\n\nWhen you grant access to the application, you will be redirected to the return url with the following query strings appended to your **RETURN_URL**:\n\n.. code-block:: python\n\n    \"http://localhost:8000/?code=AQTXrv3Pe1iWS0EQvLg0NJA8ju_XuiadXACqHennhWih7iRyDSzAm5jaf3R7I8&state=ea34a04b91c72863c82878d2b8f1836c\"\n\n\nThis means that the value of the **authorization_code** is **AQTXrv3Pe1iWS0EQvLg0NJA8ju_XuiadXACqHennhWih7iRyDSzAm5jaf3R7I8**. After setting it by hand, we can call the **.get_access_token()** to get the actual token.\n\n.. code-block:: python\n\n    authentication.authorization_code = \"AQTXrv3Pe1iWS0EQvLg0NJA8ju_XuiadXACqHennhWih7iRyDSzAm5jaf3R7I8\"\n    authentication.get_access_token()\n\n\nAfter you get the access token, you are now permitted to make API calls on behalf of the user who granted access to you app. In addition to that, in order to prevent from going through the OAuth flow for every consecutive request,\none can directly assign the access token obtained before to the application instance.\n\n\n.. code-block:: python\n\n    application = linkedin.LinkedInApplication(token='AQTFtPILQkJzXHrHtyQ0rjLe3W0I')\n\n\nQuick Usage From Python Interpreter\n---------------------------------------------------------\n\nFor testing the library using an interpreter, use the quick helper.\n\n.. code-block:: python\n\n    from linkedin import server\n    application = server.quick_api(KEY, SECRET)\n\nThis will print the authorization url to the screen. Go into this URL using a browser, after you login, the method will return with an API object you can now use.\n\n.. code-block:: python\n\n    application.get_profile()\n\n\nMore\n-----------------\nFor more information, visit the `homepage <http://ozgur.github.com/python-linkedin/>`_ of the project.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ozgur.github.com/python-linkedin/", "keywords": "linkedin python", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "python-linkedin", "package_url": "https://pypi.org/project/python-linkedin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-linkedin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://ozgur.github.com/python-linkedin/"}, "release_url": "https://pypi.org/project/python-linkedin/4.1/", "requires_dist": null, "requires_python": null, "summary": "Python Interface to the LinkedIn API", "version": "4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python interface to the LinkedIn API</p>\n<p>This library provides a pure Python interface to the LinkedIn <strong>Profile</strong>, <strong>Group</strong>, <strong>Company</strong>, <strong>Jobs</strong>, <strong>Search</strong>, <strong>Share</strong>, <strong>Network</strong> and <strong>Invitation</strong> REST APIs.</p>\n<p><a href=\"http://developer.linkedin.com\" rel=\"nofollow\">LinkedIn</a> provides a service that lets people bring their LinkedIn profiles and networks with them to your site or application via their OAuth based API. This library provides a lightweight interface over a complicated LinkedIn OAuth based API to make it for python programmers easy to use.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <strong>python-linkedin</strong> library via pip:</p>\n<pre>$ pip install python-linkedin\n</pre>\n</div>\n<div id=\"authentication\">\n<h2>Authentication</h2>\n<p>LinkedIn REST API uses <strong>Oauth 2.0</strong> protocol for authentication. In order to use the LinkedIn API, you have an <strong>application key</strong> and <strong>application secret</strong>. You can get more detail from <a href=\"http://developers.linkedin.com/documents/authentication\" rel=\"nofollow\">here</a>.</p>\n<p>For debugging purposes you can use the credentials below. It belongs to my test application. Nothing\u2019s harmful.</p>\n<pre><span class=\"n\">KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'wFNJekVpDCJtRPFX812pQsJee-gt0zO4X5XmG6wcfSOSlLocxodAXNMbl0_hw3Vl'</span>\n<span class=\"n\">SECRET</span> <span class=\"o\">=</span> <span class=\"s1\">'daJDa6_8UcnGMw1yuq9TjoO_PMKukXMo8vEMo7Qv5J-G3SPgrAV0FqFCd0TNjQyG'</span>\n</pre>\n<p>LinkedIn redirects the user back to your website\u2019s URL after granting access (giving proper permissions) to your application. We call that url <strong>RETURN URL</strong>. Assuming your return url is <strong>http://localhost:8000</strong>, you can write something like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">linkedin</span> <span class=\"kn\">import</span> <span class=\"n\">linkedin</span>\n\n<span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"wFNJekVpDCJtRPFX812pQsJee-gt0zO4X5XmG6wcfSOSlLocxodAXNMbl0_hw3Vl\"</span>\n<span class=\"n\">API_SECRET</span> <span class=\"o\">=</span> <span class=\"s2\">\"daJDa6_8UcnGMw1yuq9TjoO_PMKukXMo8vEMo7Qv5J-G3SPgrAV0FqFCd0TNjQyG\"</span>\n<span class=\"n\">RETURN_URL</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://localhost:8000\"</span>\n<span class=\"n\">authentication</span> <span class=\"o\">=</span> <span class=\"n\">linkedin</span><span class=\"o\">.</span><span class=\"n\">LinkedInAuthentication</span><span class=\"p\">(</span><span class=\"n\">API_KEY</span><span class=\"p\">,</span> <span class=\"n\">API_SECRET</span><span class=\"p\">,</span> <span class=\"n\">RETURN_URL</span><span class=\"p\">,</span> <span class=\"n\">linkedin</span><span class=\"o\">.</span><span class=\"n\">PERMISSIONS</span><span class=\"o\">.</span><span class=\"n\">enums</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span> <span class=\"n\">authentication</span><span class=\"o\">.</span><span class=\"n\">authorization_url</span>\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">linkedin</span><span class=\"o\">.</span><span class=\"n\">LinkedInApplication</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">)</span>\n</pre>\n<p>When you grant access to the application, you will be redirected to the return url with the following query strings appended to your <strong>RETURN_URL</strong>:</p>\n<pre><span class=\"s2\">\"http://localhost:8000/?code=AQTXrv3Pe1iWS0EQvLg0NJA8ju_XuiadXACqHennhWih7iRyDSzAm5jaf3R7I8&amp;state=ea34a04b91c72863c82878d2b8f1836c\"</span>\n</pre>\n<p>This means that the value of the <strong>authorization_code</strong> is <strong>AQTXrv3Pe1iWS0EQvLg0NJA8ju_XuiadXACqHennhWih7iRyDSzAm5jaf3R7I8</strong>. After setting it by hand, we can call the <strong>.get_access_token()</strong> to get the actual token.</p>\n<pre><span class=\"n\">authentication</span><span class=\"o\">.</span><span class=\"n\">authorization_code</span> <span class=\"o\">=</span> <span class=\"s2\">\"AQTXrv3Pe1iWS0EQvLg0NJA8ju_XuiadXACqHennhWih7iRyDSzAm5jaf3R7I8\"</span>\n<span class=\"n\">authentication</span><span class=\"o\">.</span><span class=\"n\">get_access_token</span><span class=\"p\">()</span>\n</pre>\n<p>After you get the access token, you are now permitted to make API calls on behalf of the user who granted access to you app. In addition to that, in order to prevent from going through the OAuth flow for every consecutive request,\none can directly assign the access token obtained before to the application instance.</p>\n<pre><span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">linkedin</span><span class=\"o\">.</span><span class=\"n\">LinkedInApplication</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'AQTFtPILQkJzXHrHtyQ0rjLe3W0I'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"quick-usage-from-python-interpreter\">\n<h2>Quick Usage From Python Interpreter</h2>\n<p>For testing the library using an interpreter, use the quick helper.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">linkedin</span> <span class=\"kn\">import</span> <span class=\"n\">server</span>\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">quick_api</span><span class=\"p\">(</span><span class=\"n\">KEY</span><span class=\"p\">,</span> <span class=\"n\">SECRET</span><span class=\"p\">)</span>\n</pre>\n<p>This will print the authorization url to the screen. Go into this URL using a browser, after you login, the method will return with an API object you can now use.</p>\n<pre><span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">get_profile</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"more\">\n<h2>More</h2>\n<p>For more information, visit the <a href=\"http://ozgur.github.com/python-linkedin/\" rel=\"nofollow\">homepage</a> of the project.</p>\n</div>\n\n          </div>"}, "last_serial": 4156383, "releases": {"4.0": [{"comment_text": "", "digests": {"md5": "2273404f09ea58b0264c1e984c8a074b", "sha256": "58646e4bd642ba579bf50736c6f03e9fb230fa7e314d7ff402b3f43de42b4514"}, "downloads": -1, "filename": "python-linkedin-4.0.tar.gz", "has_sig": false, "md5_digest": "2273404f09ea58b0264c1e984c8a074b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8465, "upload_time": "2014-05-12T13:25:35", "upload_time_iso_8601": "2014-05-12T13:25:35.132877Z", "url": "https://files.pythonhosted.org/packages/5a/98/1fb381faf7b3675de8f1382519c345825584ea350aa29000a3d2a43af413/python-linkedin-4.0.tar.gz", "yanked": false}], "4.1": [{"comment_text": "", "digests": {"md5": "10574e7c6836f3db4fb06feb9e3b04d6", "sha256": "0b026fd2a78b68470ad498f1af61b34129b34f244816e828dfb70482be2d4ba4"}, "downloads": -1, "filename": "python-linkedin-4.1.tar.gz", "has_sig": false, "md5_digest": "10574e7c6836f3db4fb06feb9e3b04d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8430, "upload_time": "2014-05-12T13:33:29", "upload_time_iso_8601": "2014-05-12T13:33:29.911310Z", "url": "https://files.pythonhosted.org/packages/16/b3/c91e371df70cbb7c377c338625f1d8bc7464a9b6eef17ce4ba1bffd47a09/python-linkedin-4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10574e7c6836f3db4fb06feb9e3b04d6", "sha256": "0b026fd2a78b68470ad498f1af61b34129b34f244816e828dfb70482be2d4ba4"}, "downloads": -1, "filename": "python-linkedin-4.1.tar.gz", "has_sig": false, "md5_digest": "10574e7c6836f3db4fb06feb9e3b04d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8430, "upload_time": "2014-05-12T13:33:29", "upload_time_iso_8601": "2014-05-12T13:33:29.911310Z", "url": "https://files.pythonhosted.org/packages/16/b3/c91e371df70cbb7c377c338625f1d8bc7464a9b6eef17ce4ba1bffd47a09/python-linkedin-4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:45 2020"}