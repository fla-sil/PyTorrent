{"info": {"author": "City of Austin", "author_email": "transportation.data@austintexas.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# atd-mds-client\nA Python utility to interact data endpoints compliant with the [Mobility Data Specification](https://github.com/openmobilityfoundation/mobility-data-specification/tree/master/provider), as designed by the Open Mobility Foundation.\n\nThis client was inspired by the [City of Santa Monica MDS Provider Client](https://github.com/CityofSantaMonica/mds-provider).\n\n## Installation\n\nInstall the library:\n\n```python\npip install atd-mds-client\n```\n\nOr the development branch:\n```python\npip install atd-mds-client-dev\n```\n\n## Getting started\n\n```python\n# Import standard libraies:\nimport json\nfrom datetime import datetime\n\n# Import the MDS Library:\nfrom mds import *\n\n# Provider Configuration\nprovider_configuration = {\n    # Authentication type: \"OAuth\", \"Bearer\", \"Basic\" or \"Custom\"\n    \"auth_type\": \"Bearer\",\n    # If you have a Bearer authentication, provide the token:\n    \"token\": \"secret_token_here\",\n    # Provide the URL endpoint of the provider:\n    \"mds_api_url\": \"https://mds.your-scooter-company.com/api/endpoint/v1\",\n    # (Optional) The Provider ID\n    \"provider_id\": \"mds_provider_id\",\n    # Any additional HTTP Headers:\n    \"headers\": {\n        \"App-Version\": \"3.0.0\"\n    },\n    # Any additional settings:\n    \"time_format\": \"unix\",\n    \"delay\": 1, # Delay in seconds per http request\n    \"max_attempts\": 3, # Max attempts if the http request fails\n    \"paging\": True, # Enable/Disable pagination\n    \"timeout\": 10, # Maximum time allowed for an HTTP request in seconds\n    \"version\": \"0.3.0\", # MDS Version: \"0.2.0\", \"0.3.0\" or \"0.4.0\" or remove for custom driver\n}\n\n# Builds a time-zone aware date time range\nmy_time = MDSTimeZone(\n    date_time_now=datetime(2020, 1, 1, 20), # Either Now or any date as specified by datetime, becomes end_time\n    offset=3600,             # Subtract 1 hour from date_time_now and becomes start_time\n    time_zone=\"US/Central\",  # US/Central\n)\n\n # Initialize the MDS Client\nmds_client = MDSClient(config=provider_configuration, provider=\"amazing scooters\")\n\n# Get trips\ntrips = mds_client.get_trips(\n    # First the start time for the query\n    start_time=my_time.get_time_start(\n        utc=True, # Transforms local time into UTC\n        unix=True # Transforms format from ISO into Unix Epoch time\n    ),\n    # Now the end time:\n    end_time=my_time.get_time_end(\n        utc=True, # Transforms local time into UTC\n        unix=True # Transforms format from ISO into Unix Epoch time\n    )\n)\n\nprint(json.dumps(trips))\n```\n\n# CD/CI\n\nWe make use of CircleCI for our deployments, you can see the build script in the `.circleci` folder in this repo. The basic process consists of a couple steps:\n\n1. Generate basic variables based on the current branch\n2. Change the package name based on the current branch\n3. Builds the package\n4. Deploys with twine \n\n**In short, the only way to deploy a package is to change it's version number manually in `setup.py`.** If the changes were made in the master branch, the deployment will go into production, for the dev branch, a postfix will be added to the name of the package before it is deployed to pypi. \n\n# Development\n\nWe currently have two branches: master and dev. The master branch is used in production, our dev is meant for development and testing. \n\n### Dev & Master Postfix\n\nFor the dev branch, the build script will attach a post fix `\"-dev\"` to the package name specified in `setup.py`. For example, in the dev branch file `setup.py` we see the package name is `name=\"atd-mds-client\"` and the current version was `0.0.X`, if you were to change the version number and commit to the dev branch, the deployment script will deploy to pypi as `atd-mds-client-dev` with the new version.\n\n### Pull Requests & Local Development\n\nPull requests are ignored by the CD/CI pipeline, meaning they do not get built. If you need a package built for dev testing:\n\n- Test your script locally\n- Create a PR against the dev branch, make sure you change the version number in setup.py\n- Merge your PR branch to the dev branch\n\nHow about local development?\n\nAt the moment, local development is open-ended. You may use any python mechanism or style when including source python packages in your development and local tests.\n\n# Tests\n\nSome minimal unit testing has been done for the mds library; however, the testing is not thorough and it was only implemented as a way to test basic functionality. \n\nFor more instructions and documentation, please follow this link:\nhttps://github.com/cityofaustin/atd-mds-client/blob/master/tests\n\n# License\n\nThe package is distributed under the GPL 3.0 license.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cityofaustin/atd-mds-client/tree/atd-mds-client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "atd-mds-client", "package_url": "https://pypi.org/project/atd-mds-client/", "platform": "", "project_url": "https://pypi.org/project/atd-mds-client/", "project_urls": {"Homepage": "https://github.com/cityofaustin/atd-mds-client/tree/atd-mds-client"}, "release_url": "https://pypi.org/project/atd-mds-client/0.0.4/", "requires_dist": ["requests", "pytz"], "requires_python": "", "summary": "A Python utility to interact data endpoints compliant with the Mobility Data Specification, as designed by the Open Mobility Foundation", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>atd-mds-client</h1>\n<p>A Python utility to interact data endpoints compliant with the <a href=\"https://github.com/openmobilityfoundation/mobility-data-specification/tree/master/provider\" rel=\"nofollow\">Mobility Data Specification</a>, as designed by the Open Mobility Foundation.</p>\n<p>This client was inspired by the <a href=\"https://github.com/CityofSantaMonica/mds-provider\" rel=\"nofollow\">City of Santa Monica MDS Provider Client</a>.</p>\n<h2>Installation</h2>\n<p>Install the library:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">atd</span><span class=\"o\">-</span><span class=\"n\">mds</span><span class=\"o\">-</span><span class=\"n\">client</span>\n</pre>\n<p>Or the development branch:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">atd</span><span class=\"o\">-</span><span class=\"n\">mds</span><span class=\"o\">-</span><span class=\"n\">client</span><span class=\"o\">-</span><span class=\"n\">dev</span>\n</pre>\n<h2>Getting started</h2>\n<pre><span class=\"c1\"># Import standard libraies:</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"c1\"># Import the MDS Library:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mds</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># Provider Configuration</span>\n<span class=\"n\">provider_configuration</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># Authentication type: \"OAuth\", \"Bearer\", \"Basic\" or \"Custom\"</span>\n    <span class=\"s2\">\"auth_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bearer\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># If you have a Bearer authentication, provide the token:</span>\n    <span class=\"s2\">\"token\"</span><span class=\"p\">:</span> <span class=\"s2\">\"secret_token_here\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Provide the URL endpoint of the provider:</span>\n    <span class=\"s2\">\"mds_api_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://mds.your-scooter-company.com/api/endpoint/v1\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># (Optional) The Provider ID</span>\n    <span class=\"s2\">\"provider_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mds_provider_id\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Any additional HTTP Headers:</span>\n    <span class=\"s2\">\"headers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"App-Version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3.0.0\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># Any additional settings:</span>\n    <span class=\"s2\">\"time_format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"unix\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"delay\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"c1\"># Delay in seconds per http request</span>\n    <span class=\"s2\">\"max_attempts\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"c1\"># Max attempts if the http request fails</span>\n    <span class=\"s2\">\"paging\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\"># Enable/Disable pagination</span>\n    <span class=\"s2\">\"timeout\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"c1\"># Maximum time allowed for an HTTP request in seconds</span>\n    <span class=\"s2\">\"version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0.3.0\"</span><span class=\"p\">,</span> <span class=\"c1\"># MDS Version: \"0.2.0\", \"0.3.0\" or \"0.4.0\" or remove for custom driver</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Builds a time-zone aware date time range</span>\n<span class=\"n\">my_time</span> <span class=\"o\">=</span> <span class=\"n\">MDSTimeZone</span><span class=\"p\">(</span>\n    <span class=\"n\">date_time_now</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2020</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"c1\"># Either Now or any date as specified by datetime, becomes end_time</span>\n    <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">3600</span><span class=\"p\">,</span>             <span class=\"c1\"># Subtract 1 hour from date_time_now and becomes start_time</span>\n    <span class=\"n\">time_zone</span><span class=\"o\">=</span><span class=\"s2\">\"US/Central\"</span><span class=\"p\">,</span>  <span class=\"c1\"># US/Central</span>\n<span class=\"p\">)</span>\n\n <span class=\"c1\"># Initialize the MDS Client</span>\n<span class=\"n\">mds_client</span> <span class=\"o\">=</span> <span class=\"n\">MDSClient</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">provider_configuration</span><span class=\"p\">,</span> <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">\"amazing scooters\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get trips</span>\n<span class=\"n\">trips</span> <span class=\"o\">=</span> <span class=\"n\">mds_client</span><span class=\"o\">.</span><span class=\"n\">get_trips</span><span class=\"p\">(</span>\n    <span class=\"c1\"># First the start time for the query</span>\n    <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">my_time</span><span class=\"o\">.</span><span class=\"n\">get_time_start</span><span class=\"p\">(</span>\n        <span class=\"n\">utc</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\"># Transforms local time into UTC</span>\n        <span class=\"n\">unix</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"c1\"># Transforms format from ISO into Unix Epoch time</span>\n    <span class=\"p\">),</span>\n    <span class=\"c1\"># Now the end time:</span>\n    <span class=\"n\">end_time</span><span class=\"o\">=</span><span class=\"n\">my_time</span><span class=\"o\">.</span><span class=\"n\">get_time_end</span><span class=\"p\">(</span>\n        <span class=\"n\">utc</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\"># Transforms local time into UTC</span>\n        <span class=\"n\">unix</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"c1\"># Transforms format from ISO into Unix Epoch time</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">trips</span><span class=\"p\">))</span>\n</pre>\n<h1>CD/CI</h1>\n<p>We make use of CircleCI for our deployments, you can see the build script in the <code>.circleci</code> folder in this repo. The basic process consists of a couple steps:</p>\n<ol>\n<li>Generate basic variables based on the current branch</li>\n<li>Change the package name based on the current branch</li>\n<li>Builds the package</li>\n<li>Deploys with twine</li>\n</ol>\n<p><strong>In short, the only way to deploy a package is to change it's version number manually in <code>setup.py</code>.</strong> If the changes were made in the master branch, the deployment will go into production, for the dev branch, a postfix will be added to the name of the package before it is deployed to pypi.</p>\n<h1>Development</h1>\n<p>We currently have two branches: master and dev. The master branch is used in production, our dev is meant for development and testing.</p>\n<h3>Dev &amp; Master Postfix</h3>\n<p>For the dev branch, the build script will attach a post fix <code>\"-dev\"</code> to the package name specified in <code>setup.py</code>. For example, in the dev branch file <code>setup.py</code> we see the package name is <code>name=\"atd-mds-client\"</code> and the current version was <code>0.0.X</code>, if you were to change the version number and commit to the dev branch, the deployment script will deploy to pypi as <code>atd-mds-client-dev</code> with the new version.</p>\n<h3>Pull Requests &amp; Local Development</h3>\n<p>Pull requests are ignored by the CD/CI pipeline, meaning they do not get built. If you need a package built for dev testing:</p>\n<ul>\n<li>Test your script locally</li>\n<li>Create a PR against the dev branch, make sure you change the version number in setup.py</li>\n<li>Merge your PR branch to the dev branch</li>\n</ul>\n<p>How about local development?</p>\n<p>At the moment, local development is open-ended. You may use any python mechanism or style when including source python packages in your development and local tests.</p>\n<h1>Tests</h1>\n<p>Some minimal unit testing has been done for the mds library; however, the testing is not thorough and it was only implemented as a way to test basic functionality.</p>\n<p>For more instructions and documentation, please follow this link:\n<a href=\"https://github.com/cityofaustin/atd-mds-client/blob/master/tests\" rel=\"nofollow\">https://github.com/cityofaustin/atd-mds-client/blob/master/tests</a></p>\n<h1>License</h1>\n<p>The package is distributed under the GPL 3.0 license.</p>\n\n          </div>"}, "last_serial": 6865548, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7df5077c3be95f3ab9acac77d89025af", "sha256": "74364ebf6b1ad56bd3ef9b681bc4e31d21f3e9bd98cdad637bb87328a2f26fbf"}, "downloads": -1, "filename": "atd_mds_client-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7df5077c3be95f3ab9acac77d89025af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25409, "upload_time": "2020-01-28T19:00:53", "upload_time_iso_8601": "2020-01-28T19:00:53.556452Z", "url": "https://files.pythonhosted.org/packages/58/61/727638428d000ae7372405cdc3c7d9f6eae03522ea7ce3458b87b1189e6e/atd_mds_client-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cdcd6e4960665337286755c82255498", "sha256": "c3f9f6b0dac65b7f4c079215b8d396225ef895c0cca3bb8a8303b043c15f91f1"}, "downloads": -1, "filename": "atd-mds-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4cdcd6e4960665337286755c82255498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7790, "upload_time": "2020-01-28T19:00:55", "upload_time_iso_8601": "2020-01-28T19:00:55.857927Z", "url": "https://files.pythonhosted.org/packages/2f/4c/a1ca40a4904792d3a936437e748344c7ced3e6092fc1762f699b26fc2228/atd-mds-client-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c70ef9c7901009d8f91f6599ee3a6f28", "sha256": "7f973222531f2b16942244e2bb780c818b6cdca412ee8b48452bcfae29c0abcb"}, "downloads": -1, "filename": "atd_mds_client-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c70ef9c7901009d8f91f6599ee3a6f28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25396, "upload_time": "2020-01-28T19:05:16", "upload_time_iso_8601": "2020-01-28T19:05:16.422375Z", "url": "https://files.pythonhosted.org/packages/71/c0/01668ee58fc868b4d204ea3de5eea13053eb372f4994eddcf79d1de51d26/atd_mds_client-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cce1a0dc0fc1a111bdba4696e02ba0f1", "sha256": "a509017c1eb697468c57e0b48c43735d62dd882635f0414d7501c0cfda70e429"}, "downloads": -1, "filename": "atd-mds-client-0.0.2.tar.gz", "has_sig": false, "md5_digest": "cce1a0dc0fc1a111bdba4696e02ba0f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7787, "upload_time": "2020-01-28T19:05:17", "upload_time_iso_8601": "2020-01-28T19:05:17.950667Z", "url": "https://files.pythonhosted.org/packages/a8/70/0a0c72e10f96755c10bbac7ab6c196c88e9a42c3e384231702c38f29168b/atd-mds-client-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "33ef367756b5f159262e91a7e8d25a60", "sha256": "87ac34e577055952e52529c78f23c5e23242bc5de4ef7f0d3700381b9bd61664"}, "downloads": -1, "filename": "atd_mds_client-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "33ef367756b5f159262e91a7e8d25a60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28576, "upload_time": "2020-01-28T20:12:22", "upload_time_iso_8601": "2020-01-28T20:12:22.420447Z", "url": "https://files.pythonhosted.org/packages/9f/31/1bc3ba013da158ea187e4108d0cee843765dba46efcfa6df846ff7169d4d/atd_mds_client-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea9a551bc1d17242265b84c0b50b8fd2", "sha256": "cf56cd39a456daccfa8fe74eb9681e2cd2631ea694561722273f509bdb41465d"}, "downloads": -1, "filename": "atd-mds-client-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ea9a551bc1d17242265b84c0b50b8fd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10224, "upload_time": "2020-01-28T20:12:24", "upload_time_iso_8601": "2020-01-28T20:12:24.133769Z", "url": "https://files.pythonhosted.org/packages/c9/98/8ac99f4e839015d6fdd6e015325b31d3d06f48122295837a943fe16b10b7/atd-mds-client-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b36b4cfcc6b40f15593d2e92d635b70a", "sha256": "21d7ff457f8d148fa689b4100c9300edcee4f9389128e816beff17f7eda58d22"}, "downloads": -1, "filename": "atd_mds_client-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b36b4cfcc6b40f15593d2e92d635b70a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29414, "upload_time": "2020-03-23T14:01:10", "upload_time_iso_8601": "2020-03-23T14:01:10.512221Z", "url": "https://files.pythonhosted.org/packages/f8/f3/e0b4597439a0ceb2d9118c79f76f578d344ad9869934a69da254a563ef25/atd_mds_client-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f17da51da166e53e10d942cbec5027f", "sha256": "62755c5fc0675f35351ca17669a28dd0edfb496e01737a47883aee083126437d"}, "downloads": -1, "filename": "atd-mds-client-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6f17da51da166e53e10d942cbec5027f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10875, "upload_time": "2020-03-23T14:01:11", "upload_time_iso_8601": "2020-03-23T14:01:11.955259Z", "url": "https://files.pythonhosted.org/packages/8d/6c/559314d36c689cad37be47dc918204aeb02c5917d6daa5b342e625276c30/atd-mds-client-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b36b4cfcc6b40f15593d2e92d635b70a", "sha256": "21d7ff457f8d148fa689b4100c9300edcee4f9389128e816beff17f7eda58d22"}, "downloads": -1, "filename": "atd_mds_client-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b36b4cfcc6b40f15593d2e92d635b70a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29414, "upload_time": "2020-03-23T14:01:10", "upload_time_iso_8601": "2020-03-23T14:01:10.512221Z", "url": "https://files.pythonhosted.org/packages/f8/f3/e0b4597439a0ceb2d9118c79f76f578d344ad9869934a69da254a563ef25/atd_mds_client-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f17da51da166e53e10d942cbec5027f", "sha256": "62755c5fc0675f35351ca17669a28dd0edfb496e01737a47883aee083126437d"}, "downloads": -1, "filename": "atd-mds-client-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6f17da51da166e53e10d942cbec5027f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10875, "upload_time": "2020-03-23T14:01:11", "upload_time_iso_8601": "2020-03-23T14:01:11.955259Z", "url": "https://files.pythonhosted.org/packages/8d/6c/559314d36c689cad37be47dc918204aeb02c5917d6daa5b342e625276c30/atd-mds-client-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:37 2020"}