{"info": {"author": "Janne Kohvakka", "author_email": "jkohvakk@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# popt\nPoPT - Power of Plain Text is a tool for generating plain text human-readable log files from Robotframework output.xml files.\n\n```\n$ popt output.xml\n========================================================================================================================\ngenerated: 20160105 13:37:33.973\ngenerator: Robot 3.0 (Python 2.7.6 on linux2)\n========================================================================================================================\n  Source Of Test Xml                                                                          FAIL  13:37:33.974  00.610\n    Suite setup                                                                               PASS  13:37:34.030  00.000\n      BuiltIn.Log                                                                             PASS  13:37:34.030  00.000\n          arg: We are doing some strange setup actions here!\n        13:37:34.030  INFO   We are doing some strange setup actions here!\n------------------------------------------------------------------------------------------------------------------------\n    Test 1                                                                                    PASS  13:37:34.031  00.200\n      Write a long log                                                                        PASS  13:37:34.031  00.100\n        BuiltIn.Log                                                                           PASS  13:37:34.031  00.000\n            arg: ${VERY LONG TEXT}\n          13:37:34.031  INFO   The Zen of Python, by Tim Peters\n\n                               Beautiful is better than ugly.\n                               Explicit is better than implicit.\n                               Simple is better than complex.\n                               Complex is better than complicated.\n                               Flat is better than nested.\n                               Sparse is better than dense.\n                               Readability counts.\n                               Special cases aren't special enough to break the rules.\n                               Although practicality beats purity.\n                               Errors should never pass silently.\n                               Unless explicitly silenced.\n                               In the face of ambiguity, refuse the temptation to guess.\n                               There should be one-- and preferably only one --obvious way to do it.\n                               Although that way may not be obvious at first unless you're Dutch.\n                               Now is better than never.\n                               Although never is often better than *right* now.\n                               If the implementation is hard to explain, it's a bad idea.\n                               If the implementation is easy to explain, it may be a good idea.\n                               Namespaces are one honking great idea -- let's do more of those!\n\n      Test 1 keyword 2                                                                        PASS  13:37:34.032  00.100\n        BuiltIn.Log                                                                           PASS  13:37:34.032  00.000\n            arg: Test 1 keyword 2\n          13:37:34.032  INFO   Test 1 keyword 2\n        Test 1 inner keyword                                                                  PASS  13:37:34.032  00.100\n          BuiltIn.Log                                                                         PASS  13:37:34.032  00.100\n              arg: Test 1 inner keyword\n            13:37:34.032  INFO   Test 1 inner keyword\n        tag: Feature1\n        tag: Feature2\n------------------------------------------------------------------------------------------------------------------------\n    Test 2                                                                                    FAIL  13:37:34.033  00.200\n      Test 2 keyword 1                                                                        PASS  13:37:34.033  00.100\n          arg: foo\n          arg: bar\n          arg: dii\n          arg: daa\n        assign {} \n          var {} ${foo}\n        BuiltIn.Log                                                                           PASS  13:37:34.034  00.000\n            arg: Test 2 keyword 1\n          13:37:34.034  INFO   Test 2 keyword 1\n        13:37:34.034  INFO   ${foo} = foo\n      BuiltIn.Should Be Equal                                                                 FAIL  13:37:34.034  00.000\n          arg: ${foo}\n          arg: bar\n        13:37:34.034  FAIL   foo != bar\n    metadata {} \n      item {'name': 'Version'} 0.1\n  errors {} \n========================================================================================================================\n\n```\n\nThe following is useful in travis CI or similar to find out where your robot \ntests are failing. If you use \"Log Source\" you be able to view the source in the \noutput.\n\n```\n\"grep  --include=output.xml -Rl  FAIL . | xargs --no-run-if-empty -n 1 python2.7 popt\"\n```\n\n## Changelog\n\n\n### 0.4\n- Unicode support in log file parsing\n- More detailed README.md\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jkohvakk/popt", "keywords": "Robot Framework,log", "license": "", "maintainer": "", "maintainer_email": "", "name": "popt", "package_url": "https://pypi.org/project/popt/", "platform": "", "project_url": "https://pypi.org/project/popt/", "project_urls": {"Homepage": "https://github.com/jkohvakk/popt"}, "release_url": "https://pypi.org/project/popt/0.4/", "requires_dist": ["pytest ; extra == 'test'", "mock ; extra == 'test'"], "requires_python": "", "summary": "Tool for converting Robot Framework xml output to a human-readable log file", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>popt</h1>\n<p>PoPT - Power of Plain Text is a tool for generating plain text human-readable log files from Robotframework output.xml files.</p>\n<pre><code>$ popt output.xml\n========================================================================================================================\ngenerated: 20160105 13:37:33.973\ngenerator: Robot 3.0 (Python 2.7.6 on linux2)\n========================================================================================================================\n  Source Of Test Xml                                                                          FAIL  13:37:33.974  00.610\n    Suite setup                                                                               PASS  13:37:34.030  00.000\n      BuiltIn.Log                                                                             PASS  13:37:34.030  00.000\n          arg: We are doing some strange setup actions here!\n        13:37:34.030  INFO   We are doing some strange setup actions here!\n------------------------------------------------------------------------------------------------------------------------\n    Test 1                                                                                    PASS  13:37:34.031  00.200\n      Write a long log                                                                        PASS  13:37:34.031  00.100\n        BuiltIn.Log                                                                           PASS  13:37:34.031  00.000\n            arg: ${VERY LONG TEXT}\n          13:37:34.031  INFO   The Zen of Python, by Tim Peters\n\n                               Beautiful is better than ugly.\n                               Explicit is better than implicit.\n                               Simple is better than complex.\n                               Complex is better than complicated.\n                               Flat is better than nested.\n                               Sparse is better than dense.\n                               Readability counts.\n                               Special cases aren't special enough to break the rules.\n                               Although practicality beats purity.\n                               Errors should never pass silently.\n                               Unless explicitly silenced.\n                               In the face of ambiguity, refuse the temptation to guess.\n                               There should be one-- and preferably only one --obvious way to do it.\n                               Although that way may not be obvious at first unless you're Dutch.\n                               Now is better than never.\n                               Although never is often better than *right* now.\n                               If the implementation is hard to explain, it's a bad idea.\n                               If the implementation is easy to explain, it may be a good idea.\n                               Namespaces are one honking great idea -- let's do more of those!\n\n      Test 1 keyword 2                                                                        PASS  13:37:34.032  00.100\n        BuiltIn.Log                                                                           PASS  13:37:34.032  00.000\n            arg: Test 1 keyword 2\n          13:37:34.032  INFO   Test 1 keyword 2\n        Test 1 inner keyword                                                                  PASS  13:37:34.032  00.100\n          BuiltIn.Log                                                                         PASS  13:37:34.032  00.100\n              arg: Test 1 inner keyword\n            13:37:34.032  INFO   Test 1 inner keyword\n        tag: Feature1\n        tag: Feature2\n------------------------------------------------------------------------------------------------------------------------\n    Test 2                                                                                    FAIL  13:37:34.033  00.200\n      Test 2 keyword 1                                                                        PASS  13:37:34.033  00.100\n          arg: foo\n          arg: bar\n          arg: dii\n          arg: daa\n        assign {} \n          var {} ${foo}\n        BuiltIn.Log                                                                           PASS  13:37:34.034  00.000\n            arg: Test 2 keyword 1\n          13:37:34.034  INFO   Test 2 keyword 1\n        13:37:34.034  INFO   ${foo} = foo\n      BuiltIn.Should Be Equal                                                                 FAIL  13:37:34.034  00.000\n          arg: ${foo}\n          arg: bar\n        13:37:34.034  FAIL   foo != bar\n    metadata {} \n      item {'name': 'Version'} 0.1\n  errors {} \n========================================================================================================================\n\n</code></pre>\n<p>The following is useful in travis CI or similar to find out where your robot\ntests are failing. If you use \"Log Source\" you be able to view the source in the\noutput.</p>\n<pre><code>\"grep  --include=output.xml -Rl  FAIL . | xargs --no-run-if-empty -n 1 python2.7 popt\"\n</code></pre>\n<h2>Changelog</h2>\n<h3>0.4</h3>\n<ul>\n<li>Unicode support in log file parsing</li>\n<li>More detailed README.md</li>\n</ul>\n\n          </div>"}, "last_serial": 5607238, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "36fa8fffc9a93ebc33765b47bb9366a0", "sha256": "e284422e22b7079d0ccbd0af8c69925bd42ffaad718d226ae345af9c062e3569"}, "downloads": -1, "filename": "popt-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "36fa8fffc9a93ebc33765b47bb9366a0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3680, "upload_time": "2016-01-04T10:43:07", "upload_time_iso_8601": "2016-01-04T10:43:07.321356Z", "url": "https://files.pythonhosted.org/packages/35/3b/e000dc6276aaa603a1cb51c68d7f8a51196433f2d1eebd520b8596defd8f/popt-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c34fcff0218c741569f247c536b49d9b", "sha256": "6092b1d512f51c7baa4acbe3657f7a8756422a4706b3743ba58e565378958d22"}, "downloads": -1, "filename": "popt-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c34fcff0218c741569f247c536b49d9b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3684, "upload_time": "2016-01-04T10:43:22", "upload_time_iso_8601": "2016-01-04T10:43:22.613646Z", "url": "https://files.pythonhosted.org/packages/6c/b8/20002a54ab805caa4dabb01c29140bec62625693793031561f308d45825a/popt-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a1067fc6cb3ce48ee2728d83a06084a", "sha256": "9efaecd601ae7543e0777ba1320053975f5eeedc8551ebce02a462306d6677e1"}, "downloads": -1, "filename": "popt-0.1.tar.gz", "has_sig": false, "md5_digest": "0a1067fc6cb3ce48ee2728d83a06084a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1962, "upload_time": "2016-01-04T10:43:35", "upload_time_iso_8601": "2016-01-04T10:43:35.252821Z", "url": "https://files.pythonhosted.org/packages/0f/c2/22299cf9a3d17c9415dee67ff1c3cf79629f69ed09e76acb43e1ed06b766/popt-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "227ad68bc924e0cda3bb6d5c05eb1c96", "sha256": "d33f9f1d3ecf4a6fb62e6f88063e0dac6f648a060f0b44ae0f011b153310ece0"}, "downloads": -1, "filename": "popt-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "227ad68bc924e0cda3bb6d5c05eb1c96", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3767, "upload_time": "2016-01-04T11:45:44", "upload_time_iso_8601": "2016-01-04T11:45:44.337623Z", "url": "https://files.pythonhosted.org/packages/71/c0/2034ab95921d15d1dde18e240427c1df3a8fe09e8dad905cba401aa1a741/popt-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8e48cb44e64e22f5b41419254da230b", "sha256": "b86462a4b1293eb548b394b450f3e1ab4407fc2ae7ff038d431fa4c73d02d60e"}, "downloads": -1, "filename": "popt-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8e48cb44e64e22f5b41419254da230b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3771, "upload_time": "2016-01-04T11:45:49", "upload_time_iso_8601": "2016-01-04T11:45:49.527589Z", "url": "https://files.pythonhosted.org/packages/2f/19/49d293b6aeedf68b6ca7828a07f0ca0702ff3c78e70420910a7328e8ec21/popt-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1e56dc69e78b20268d31b4a6290afff", "sha256": "40fdb49460b5c458e20184748319f325c5b9eb793db98e6bfa2331a02b842f6a"}, "downloads": -1, "filename": "popt-0.2.tar.gz", "has_sig": false, "md5_digest": "e1e56dc69e78b20268d31b4a6290afff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2271, "upload_time": "2016-01-04T11:45:54", "upload_time_iso_8601": "2016-01-04T11:45:54.808587Z", "url": "https://files.pythonhosted.org/packages/d9/94/1a187b7906f94188907ddab0691f9a7c06cf970265f5308dcbb8b577e687/popt-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2460b65568d3ab3c370c0b3b02b95e9a", "sha256": "736c5c01823d8845dea4dc3cf23ea7164391998ca617a11c48b54dd7722f0845"}, "downloads": -1, "filename": "popt-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "2460b65568d3ab3c370c0b3b02b95e9a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4134, "upload_time": "2016-01-08T10:53:55", "upload_time_iso_8601": "2016-01-08T10:53:55.620371Z", "url": "https://files.pythonhosted.org/packages/ef/4d/73b80346cd6bf7d9441ac1620687fc26d05eaa3ce87c35852fedd86cc71f/popt-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "760b16c49584738e9a8048d92741bc7c", "sha256": "e643238dc80112173a799eeab9f01db535b1933687cf93f48cc83829d001881f"}, "downloads": -1, "filename": "popt-0.3.tar.gz", "has_sig": false, "md5_digest": "760b16c49584738e9a8048d92741bc7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4116, "upload_time": "2016-01-08T10:54:01", "upload_time_iso_8601": "2016-01-08T10:54:01.684212Z", "url": "https://files.pythonhosted.org/packages/ed/9b/1ac349fe96e4702f65a1126a59e2ae0f4a4fe662556afc0b6750b3e33f26/popt-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5f734d9414eafa2ff46d1a3aa07911bb", "sha256": "c0e0a186b40f5a878e22cca1760e02c92a76919ddb355e2a38ca71f9e3132ab0"}, "downloads": -1, "filename": "popt-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "5f734d9414eafa2ff46d1a3aa07911bb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5545, "upload_time": "2019-07-30T11:33:21", "upload_time_iso_8601": "2019-07-30T11:33:21.141792Z", "url": "https://files.pythonhosted.org/packages/82/29/4b031376d090a66473a1d4635b0489c08613b6c3afe38054058f27259187/popt-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f658c5187e017d6e0904aa451da3a4b3", "sha256": "fc74040bfac1c451c32b587cf989cf629b48dbf3d8e1962cfdb34a03b5b085fe"}, "downloads": -1, "filename": "popt-0.4.tar.gz", "has_sig": false, "md5_digest": "f658c5187e017d6e0904aa451da3a4b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5885, "upload_time": "2019-07-30T11:33:22", "upload_time_iso_8601": "2019-07-30T11:33:22.950091Z", "url": "https://files.pythonhosted.org/packages/fe/36/73d0bb3a14bb98aa5893e73c810f5912d3e2a9e5851b950e5baada850f8f/popt-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f734d9414eafa2ff46d1a3aa07911bb", "sha256": "c0e0a186b40f5a878e22cca1760e02c92a76919ddb355e2a38ca71f9e3132ab0"}, "downloads": -1, "filename": "popt-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "5f734d9414eafa2ff46d1a3aa07911bb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5545, "upload_time": "2019-07-30T11:33:21", "upload_time_iso_8601": "2019-07-30T11:33:21.141792Z", "url": "https://files.pythonhosted.org/packages/82/29/4b031376d090a66473a1d4635b0489c08613b6c3afe38054058f27259187/popt-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f658c5187e017d6e0904aa451da3a4b3", "sha256": "fc74040bfac1c451c32b587cf989cf629b48dbf3d8e1962cfdb34a03b5b085fe"}, "downloads": -1, "filename": "popt-0.4.tar.gz", "has_sig": false, "md5_digest": "f658c5187e017d6e0904aa451da3a4b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5885, "upload_time": "2019-07-30T11:33:22", "upload_time_iso_8601": "2019-07-30T11:33:22.950091Z", "url": "https://files.pythonhosted.org/packages/fe/36/73d0bb3a14bb98aa5893e73c810f5912d3e2a9e5851b950e5baada850f8f/popt-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:32 2020"}