{"info": {"author": "Cameron Shand", "author_email": "cameron.shand@manchester.ac.uk", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "HAWKS Data Generator\n====================\n\n.. image:: docs/source/images/hawks_animation.gif\n   :alt: Example gif of HAWKS\n   :scale: 65 %\n   :align: center\n\n.. summary-marker-1-start\n\nHAWKS is a tool for generating controllably difficult synthetic data,\nused primarily for clustering.\n\n.. summary-marker-1-end\n\nThis `repo <https://github.com/sea-shunned/hawks>`_ is associated with the following paper:\n\n.. paper-marker-1-start\n\n1. `Shand, C. <http://sea-shunned.github.io/>`_, `Allmendinger, R. <https://personalpages.manchester.ac.uk/staff/Richard.Allmendinger/>`_, `Handl, J. <https://personalpages.manchester.ac.uk/staff/Julia.Handl/>`_, `Webb, A. <http://www.awebb.info/>`_, & Keane, J. (2019, July). Evolving controllably difficult datasets for clustering. In Proceedings of the Genetic and Evolutionary Computation Conference (pp. 463-471). https://doi.org/10.1145/3321707.3321761 **(Nominated for best paper on the evolutionary machine learning track at GECCO'19)**\n\nThe academic/technical details can be found there. What follows here is\na practical guide to using HAWKS to generate synthetic data.\n\n.. paper-marker-1-end\n\nIf you use HAWKS to generate data that forms part of a paper, please\ncite the paper above and link to this repo.\n\n\n.. installation-marker-start\n\nInstallation\n------------\n\nInstallation is available through pip by:\n\n``pip install hawks``\n\n.. installation-marker-end\n\nor by cloning this repo (and installing locally using\n``pip install .``). HAWKS was written for Python 3.6+. Other dependencies are specified in the `setup.py <https://github.com/sea-shunned/hawks/blob/master/setup.py>`_ file.\n\n\nRunning HAWKS\n-------------\n\nThe parameters of hawks are configured via a config file system. Details\nof the parameters are found in the `documentation <https://hawks.readthedocs.io/parameters>`_. For any parameters\nthat are not specified, default values will be used (as defined in\n``hawks/defaults.json``).\n\n.. example-marker-start\n\nThe example below illustrates how to run ``hawks``. Either a dictionary\nor a path to a JSON config can be provided to override any of the\ndefault values. Further examples can be found `here <https://hawks.readthedocs.io/examples>`_. \n\n.. Need to turn the bit below into an example file and then just include that\n\n.. code-block:: python\n\n    \"\"\"Single, simple HAWKS run, with KMeans applied to the best dataset\n    \"\"\"\n    import numpy as np\n    from sklearn.cluster import KMeans\n    from sklearn.metrics import adjusted_rand_score\n    import hawks\n\n    # Set the magic seed number\n    SEED_NUM = 42\n    # Set the seed number in the config\n    config = {\n        \"hawks\": {\n            \"folder_name\": \"simple_example\",\n            \"seed_num\": SEED_NUM\n        },\n        \"dataset\": {\n            \"num_clusters\": 5\n        },\n        \"objectives\": {\n            \"silhouette\": {\n                \"target\": 0.9\n            }\n        }\n    }\n    # Any missing parameters will take from hawks/defaults.json\n    generator = hawks.create_generator(config)\n    # Run the generator\n    generator.run()\n    # Let's plot the best individual found\n    generator.plot_best_indivs(show=True)\n    # Get the best dataset found and it's labels\n    datasets, label_sets = generator.get_best_dataset()\n    # Stored as a list for multiple runs\n    data, labels = datasets[0], label_sets[0]\n    # Run KMeans on the data\n    km = KMeans(\n        n_clusters=len(np.unique(labels)), random_state=SEED_NUM\n    ).fit(data)\n    # Plot the output of KMeans\n    hawks.plotting.scatter_prediction(data, km.labels_)\n    # Get the Adjusted Rand Index for KMeans on the data\n    ari = adjusted_rand_score(labels, km.labels_)\n    print(f\"ARI: {ari}\")\n\n\n.. example-marker-end\n\n\nDocumentation\n-------------\n\nFor further information about how to use HAWKS, including examples, please see the `documentation <https://hawks.readthedocs.io/>`__.\n\n\nIssues\n------\n\nAs this work is still in development, plain sailing is not guaranteed.\nIf you encounter an issue, first ensure that ``hawks`` is running as\nintended by navigating to the tests directory, and running\n``python tests.py``. If any test fails, please add details of this\nalongside your original problem to an issue on the `GitHub repo <https://github.com/sea-shunned/hawks>`__.\n\n\nContributing\n------------\n\n.. contributing-marker-start\n\nAt present, this is primarily academic work, so future developments will be released here after they have been published. If you have any suggestions or simple feature requests for HAWKS as a tool to use, please raise that on the `GitHub repo <https://github.com/sea-shunned/hawks/issues>`__.\n\nI have various directions for HAWKS at present, and can only work on a subset of them, and so involvement with more people would be great. If you would like to extend this work or collaborate, please `contact me <https://sea-shunned.github.io/>`__.\n\n.. contributing-marker-end\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sea-shunned/hawks", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "hawks", "package_url": "https://pypi.org/project/hawks/", "platform": "", "project_url": "https://pypi.org/project/hawks/", "project_urls": {"Documentation": "https://hawks.readthedocs.io/", "Homepage": "https://github.com/sea-shunned/hawks"}, "release_url": "https://pypi.org/project/hawks/0.2.0/", "requires_dist": ["deap (==1.2.2)", "matplotlib (>=3.0)", "numpy (>=1.15)", "orange3 (>=3.23)", "pandas (>=0.23)", "scikit-learn (>=0.20)", "scipy (>=1.1)", "seaborn (>=0.9.0)", "tqdm (>=4.15)"], "requires_python": ">=3.6", "summary": "A package for generating synthetic clusters, with parameters to customize different aspects of the complexity of the cluster structure", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"Example gif of HAWKS\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5b554ced4b6cf7ee254f22054794a8e640dd2b5/646f63732f736f757263652f696d616765732f6861776b735f616e696d6174696f6e2e676966\">\n<p>HAWKS is a tool for generating controllably difficult synthetic data,\nused primarily for clustering.</p>\n<p>This <a href=\"https://github.com/sea-shunned/hawks\" rel=\"nofollow\">repo</a> is associated with the following paper:</p>\n<ol>\n<li><a href=\"http://sea-shunned.github.io/\" rel=\"nofollow\">Shand, C.</a>, <a href=\"https://personalpages.manchester.ac.uk/staff/Richard.Allmendinger/\" rel=\"nofollow\">Allmendinger, R.</a>, <a href=\"https://personalpages.manchester.ac.uk/staff/Julia.Handl/\" rel=\"nofollow\">Handl, J.</a>, <a href=\"http://www.awebb.info/\" rel=\"nofollow\">Webb, A.</a>, &amp; Keane, J. (2019, July). Evolving controllably difficult datasets for clustering. In Proceedings of the Genetic and Evolutionary Computation Conference (pp. 463-471). <a href=\"https://doi.org/10.1145/3321707.3321761\" rel=\"nofollow\">https://doi.org/10.1145/3321707.3321761</a> <strong>(Nominated for best paper on the evolutionary machine learning track at GECCO\u201919)</strong></li>\n</ol>\n<p>The academic/technical details can be found there. What follows here is\na practical guide to using HAWKS to generate synthetic data.</p>\n<p>If you use HAWKS to generate data that forms part of a paper, please\ncite the paper above and link to this repo.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation is available through pip by:</p>\n<p><tt>pip install hawks</tt></p>\n<p>or by cloning this repo (and installing locally using\n<tt>pip install .</tt>). HAWKS was written for Python 3.6+. Other dependencies are specified in the <a href=\"https://github.com/sea-shunned/hawks/blob/master/setup.py\" rel=\"nofollow\">setup.py</a> file.</p>\n</div>\n<div id=\"running-hawks\">\n<h2>Running HAWKS</h2>\n<p>The parameters of hawks are configured via a config file system. Details\nof the parameters are found in the <a href=\"https://hawks.readthedocs.io/parameters\" rel=\"nofollow\">documentation</a>. For any parameters\nthat are not specified, default values will be used (as defined in\n<tt>hawks/defaults.json</tt>).</p>\n<p>The example below illustrates how to run <tt>hawks</tt>. Either a dictionary\nor a path to a JSON config can be provided to override any of the\ndefault values. Further examples can be found <a href=\"https://hawks.readthedocs.io/examples\" rel=\"nofollow\">here</a>.</p>\n<pre><span class=\"sd\">\"\"\"Single, simple HAWKS run, with KMeans applied to the best dataset\n\"\"\"</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">KMeans</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">adjusted_rand_score</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hawks</span>\n\n<span class=\"c1\"># Set the magic seed number</span>\n<span class=\"n\">SEED_NUM</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n<span class=\"c1\"># Set the seed number in the config</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"hawks\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"folder_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"simple_example\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"seed_num\"</span><span class=\"p\">:</span> <span class=\"n\">SEED_NUM</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"dataset\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"num_clusters\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"objectives\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"silhouette\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"target\"</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"c1\"># Any missing parameters will take from hawks/defaults.json</span>\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">hawks</span><span class=\"o\">.</span><span class=\"n\">create_generator</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"c1\"># Run the generator</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"c1\"># Let's plot the best individual found</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">plot_best_indivs</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the best dataset found and it's labels</span>\n<span class=\"n\">datasets</span><span class=\"p\">,</span> <span class=\"n\">label_sets</span> <span class=\"o\">=</span> <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">get_best_dataset</span><span class=\"p\">()</span>\n<span class=\"c1\"># Stored as a list for multiple runs</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">label_sets</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"c1\"># Run KMeans on the data</span>\n<span class=\"n\">km</span> <span class=\"o\">=</span> <span class=\"n\">KMeans</span><span class=\"p\">(</span>\n    <span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)),</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"n\">SEED_NUM</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"c1\"># Plot the output of KMeans</span>\n<span class=\"n\">hawks</span><span class=\"o\">.</span><span class=\"n\">plotting</span><span class=\"o\">.</span><span class=\"n\">scatter_prediction</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">km</span><span class=\"o\">.</span><span class=\"n\">labels_</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the Adjusted Rand Index for KMeans on the data</span>\n<span class=\"n\">ari</span> <span class=\"o\">=</span> <span class=\"n\">adjusted_rand_score</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">km</span><span class=\"o\">.</span><span class=\"n\">labels_</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"ARI: </span><span class=\"si\">{</span><span class=\"n\">ari</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"id1\">\n<h2>Documentation</h2>\n<p>For further information about how to use HAWKS, including examples, please see the <a href=\"https://hawks.readthedocs.io/\" rel=\"nofollow\">documentation</a>.</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>As this work is still in development, plain sailing is not guaranteed.\nIf you encounter an issue, first ensure that <tt>hawks</tt> is running as\nintended by navigating to the tests directory, and running\n<tt>python tests.py</tt>. If any test fails, please add details of this\nalongside your original problem to an issue on the <a href=\"https://github.com/sea-shunned/hawks\" rel=\"nofollow\">GitHub repo</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>At present, this is primarily academic work, so future developments will be released here after they have been published. If you have any suggestions or simple feature requests for HAWKS as a tool to use, please raise that on the <a href=\"https://github.com/sea-shunned/hawks/issues\" rel=\"nofollow\">GitHub repo</a>.</p>\n<p>I have various directions for HAWKS at present, and can only work on a subset of them, and so involvement with more people would be great. If you would like to extend this work or collaborate, please <a href=\"https://sea-shunned.github.io/\" rel=\"nofollow\">contact me</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6564034, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2aa729f6ad1bf6847c44f5a19349f192", "sha256": "6557746e16b6b30bef7fdf17f3b8711160914d01f5b2f18c33a8b6d2de5a4048"}, "downloads": -1, "filename": "hawks-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2aa729f6ad1bf6847c44f5a19349f192", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 25652, "upload_time": "2019-06-25T15:28:12", "upload_time_iso_8601": "2019-06-25T15:28:12.898859Z", "url": "https://files.pythonhosted.org/packages/9e/20/3a058d57b4bf977f5bf6236157cefd65e566d81d7bd349d6f3d52f2337e6/hawks-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5367862b8be0f446264ffa0498d782b5", "sha256": "b168a83928c50105a3e6f8487ec56519ce02587890bcd663bb6f07c9ec83d66d"}, "downloads": -1, "filename": "hawks-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5367862b8be0f446264ffa0498d782b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22376, "upload_time": "2019-06-25T15:28:15", "upload_time_iso_8601": "2019-06-25T15:28:15.340691Z", "url": "https://files.pythonhosted.org/packages/88/58/df1f7a5fa68093558eed681d7a932900b4b949a7e4cde23581e94e611686/hawks-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f7a64f372bda36398b2df94d5dac92d0", "sha256": "38d5f4a03d286c4e6251729738ada526dd0b7e2da14ceda3de524f5c422c83d3"}, "downloads": -1, "filename": "hawks-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f7a64f372bda36398b2df94d5dac92d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27163, "upload_time": "2019-06-29T11:37:41", "upload_time_iso_8601": "2019-06-29T11:37:41.230648Z", "url": "https://files.pythonhosted.org/packages/4a/16/e7be7b8d7183177d56ea9bebc3517641ef36f60b2ffd993c1ff28588ad7b/hawks-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8cf0887b3ed1e4729c8b66437864601c", "sha256": "d0845dd4bed55c970c228469c335de2c77ce9960da584fb6fd38764d26721087"}, "downloads": -1, "filename": "hawks-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8cf0887b3ed1e4729c8b66437864601c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24398, "upload_time": "2019-06-29T11:37:42", "upload_time_iso_8601": "2019-06-29T11:37:42.589324Z", "url": "https://files.pythonhosted.org/packages/19/54/645e32da60788b194ce176e414be379168921a0f6bd6516f056cee415901/hawks-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8d3cf907d821eae1e0deed18a6511705", "sha256": "797e8636a6b19b864bf9f263fe6e3a24981b3da92f111f35ae3c055c583f603b"}, "downloads": -1, "filename": "hawks-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8d3cf907d821eae1e0deed18a6511705", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45825, "upload_time": "2019-08-28T16:29:36", "upload_time_iso_8601": "2019-08-28T16:29:36.886629Z", "url": "https://files.pythonhosted.org/packages/70/1b/74c03989496c8e014619b5767dbc15f5d20f0ec976551f6e2130f8fde7d8/hawks-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f59bd30b68effb3b4f5a4d7724bd7f", "sha256": "bb14f6dae50a1c880bd36165a11fba652f93135d375a8460a07c74db3ea7a8e8"}, "downloads": -1, "filename": "hawks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f2f59bd30b68effb3b4f5a4d7724bd7f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31995, "upload_time": "2019-08-28T16:29:38", "upload_time_iso_8601": "2019-08-28T16:29:38.341000Z", "url": "https://files.pythonhosted.org/packages/98/98/355c70bc55072b7836ffd66b38835d747be8f4b55ed33e00ba76828c884c/hawks-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ae96471c63f8122ab0de535dfecc2074", "sha256": "68980c8669c72f82042bb655273813ecbcd93a80f7e784b0225773dacafb57b7"}, "downloads": -1, "filename": "hawks-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae96471c63f8122ab0de535dfecc2074", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 60468, "upload_time": "2020-02-03T17:48:31", "upload_time_iso_8601": "2020-02-03T17:48:31.065821Z", "url": "https://files.pythonhosted.org/packages/c1/23/2aa0d521822c949d8037034f3564978a86d3c17ea3300533855948b52e50/hawks-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db238f49c43b962faf7c0849f872214b", "sha256": "1958a0a900a3fc48be047ed5e07e6635440778c4c1d0dce887c7ed493d5fb618"}, "downloads": -1, "filename": "hawks-0.2.0.tar.gz", "has_sig": false, "md5_digest": "db238f49c43b962faf7c0849f872214b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42019, "upload_time": "2020-02-03T17:48:33", "upload_time_iso_8601": "2020-02-03T17:48:33.007238Z", "url": "https://files.pythonhosted.org/packages/22/16/358383134c34674c59f4e42d1717efe104e7ca8f0d5a927e0cb9191d0803/hawks-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ae96471c63f8122ab0de535dfecc2074", "sha256": "68980c8669c72f82042bb655273813ecbcd93a80f7e784b0225773dacafb57b7"}, "downloads": -1, "filename": "hawks-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae96471c63f8122ab0de535dfecc2074", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 60468, "upload_time": "2020-02-03T17:48:31", "upload_time_iso_8601": "2020-02-03T17:48:31.065821Z", "url": "https://files.pythonhosted.org/packages/c1/23/2aa0d521822c949d8037034f3564978a86d3c17ea3300533855948b52e50/hawks-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db238f49c43b962faf7c0849f872214b", "sha256": "1958a0a900a3fc48be047ed5e07e6635440778c4c1d0dce887c7ed493d5fb618"}, "downloads": -1, "filename": "hawks-0.2.0.tar.gz", "has_sig": false, "md5_digest": "db238f49c43b962faf7c0849f872214b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42019, "upload_time": "2020-02-03T17:48:33", "upload_time_iso_8601": "2020-02-03T17:48:33.007238Z", "url": "https://files.pythonhosted.org/packages/22/16/358383134c34674c59f4e42d1717efe104e7ca8f0d5a927e0cb9191d0803/hawks-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:13 2020"}