{"info": {"author": "Sean McLemon", "author_email": "sean.mclemon@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "xnm\n===\n\nxnm is a lightweight networkmanager menu for window managers missing\none, such as xmonad.\n\nInstall\n-------\n\nEither retrieve from pypi using pip:\n\n::\n\n    $ pip install xsms\n\nor clone this repo, and install using ``setup.py``:\n\n::\n\n    $ git clone https://github.com/smcl/xsms\n    $ cd xsms\n    $ python setup.py install\n\nUsing\n-----\n\nOnce xnm is installed you can either launch it standalone in an xterm...\n\n::\n\n    $ python -m xnm\n\n... or you can add it as an ``action`` in your xmobar setup, so that\nwhen you click an icon (I use ``DynNetwork``) like so:\n\n::\n\n     template = \"... <action=`/home/sean/.xmonad/xnm.py`>%dynnetwork% <fn=1>\uf1e4</fn></action> ...\"\n\nTODO\n----\n\nNetworkManager can do a lot of things but I do not plan to do all of\nthem, but my goals are (checkbox indicates whether completed or not):\n\n-  wifi\n-  [x] search\n-  [x] connect (open and authenticated using wpa-psk)\n-  [x] disconnect\n-  mobile broadband\n-  [ ] configure new\n-  [x] connect\n-  [x] disconnect\n-  bluetooth\n-  [ ] search\n-  [ ] pair\n\nRight now it can search for and connect to open and protected wifi\nnetworks, so there's quite a way to go :)\n\nscreenshot\n==========\n\n.. figure:: /xnm-screenshot.png?raw=true\n   :alt: work in progress\n\n   work in progress", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smcl/xnm/tarball/0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smcl/xnm", "keywords": "NetworkManager,Network,wifi,xnm,xmonad,xmobar", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "xnm", "package_url": "https://pypi.org/project/xnm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xnm/", "project_urls": {"Download": "https://github.com/smcl/xnm/tarball/0.1", "Homepage": "https://github.com/smcl/xnm"}, "release_url": "https://pypi.org/project/xnm/0.1/", "requires_dist": null, "requires_python": null, "summary": "lightweight GUi for NetworkManager written in Tkinter, with simple xmobar integration", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"xnm\">\n<h2>xnm</h2>\n<p>xnm is a lightweight networkmanager menu for window managers missing\none, such as xmonad.</p>\n<div id=\"install\">\n<h3>Install</h3>\n<p>Either retrieve from pypi using pip:</p>\n<pre>$ pip install xsms\n</pre>\n<p>or clone this repo, and install using <tt>setup.py</tt>:</p>\n<pre>$ git clone https://github.com/smcl/xsms\n$ cd xsms\n$ python setup.py install\n</pre>\n</div>\n<div id=\"using\">\n<h3>Using</h3>\n<p>Once xnm is installed you can either launch it standalone in an xterm\u2026</p>\n<pre>$ python -m xnm\n</pre>\n<p>\u2026 or you can add it as an <tt>action</tt> in your xmobar setup, so that\nwhen you click an icon (I use <tt>DynNetwork</tt>) like so:</p>\n<pre>template = \"... &lt;action=`/home/sean/.xmonad/xnm.py`&gt;%dynnetwork% &lt;fn=1&gt;\uf1e4&lt;/fn&gt;&lt;/action&gt; ...\"\n</pre>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<p>NetworkManager can do a lot of things but I do not plan to do all of\nthem, but my goals are (checkbox indicates whether completed or not):</p>\n<ul>\n<li>wifi</li>\n<li>[x] search</li>\n<li>[x] connect (open and authenticated using wpa-psk)</li>\n<li>[x] disconnect</li>\n<li>mobile broadband</li>\n<li>[ ] configure new</li>\n<li>[x] connect</li>\n<li>[x] disconnect</li>\n<li>bluetooth</li>\n<li>[ ] search</li>\n<li>[ ] pair</li>\n</ul>\n<p>Right now it can search for and connect to open and protected wifi\nnetworks, so there\u2019s quite a way to go :)</p>\n</div>\n</div>\n<div id=\"screenshot\">\n<h2>screenshot</h2>\n<div>\n<img alt=\"work in progress\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be8cb1d1ff63a929263e60f3aa6c916408513678/2f786e6d2d73637265656e73686f742e706e673f7261773d74727565\">\n<p>work in progress</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2444047, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "17c33fbc75ae9f7e191f49eb0fc1d9b2", "sha256": "67f827868202f35059e5091d68a9c3c261d37fb360691b3d532f8b2239df07ea"}, "downloads": -1, "filename": "xnm-0.1.tar.gz", "has_sig": false, "md5_digest": "17c33fbc75ae9f7e191f49eb0fc1d9b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3977, "upload_time": "2016-11-05T11:35:54", "upload_time_iso_8601": "2016-11-05T11:35:54.220976Z", "url": "https://files.pythonhosted.org/packages/2f/8b/d0f573721834ef244e00573f1f096282d8feeb54339b6495528c0ee4ad7f/xnm-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "17c33fbc75ae9f7e191f49eb0fc1d9b2", "sha256": "67f827868202f35059e5091d68a9c3c261d37fb360691b3d532f8b2239df07ea"}, "downloads": -1, "filename": "xnm-0.1.tar.gz", "has_sig": false, "md5_digest": "17c33fbc75ae9f7e191f49eb0fc1d9b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3977, "upload_time": "2016-11-05T11:35:54", "upload_time_iso_8601": "2016-11-05T11:35:54.220976Z", "url": "https://files.pythonhosted.org/packages/2f/8b/d0f573721834ef244e00573f1f096282d8feeb54339b6495528c0ee4ad7f/xnm-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:50 2020"}