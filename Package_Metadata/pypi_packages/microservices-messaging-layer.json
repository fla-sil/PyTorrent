{"info": {"author": "Antonio Di Mariano", "author_email": "antonio.dimariano@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Triskelion\n\n## A Kafka Messaging helper for Microservices \n\n![](ermes.png)\n\n\n\n# Service description\n\n\nTriskelion provides your code with a helper for Kafka and Confluent Kafka producers. \nThe end goal of this project is to become a messages communication layer for microservices.\nHowever, The code is at its earlier stage and there is room for improvements. If you want to contribute to it please contact me at antonio.dimariano[AT]gmail.com\nIf you find a bug please submit it [here](https://github.com/antoniodimariano/kafka_messaging_layer/issues)\n\nI would like to thank all the [Confluent Community on Slack](https://confluentcommunity.slack.com/archives/C49G1J750) for the priceless help during my learning path.\n\n\n<a name=\"confluent_kafka_producer_configuration\"><h1>Confluent Kafka Producer Configuration</h1></a>\n\n\n\n\n# Brokers \n\n ENV variables name  | VALUE                                                                                    |\n|---------------------|------------------------------------------------------------------------------------------|\n| brokers             | mybroker1:9093,mybroker2:9093,mybroker3:9093                                                |\n| schema_registry     | http://my_avro_schema_registry:8081                                                    |\n\n\n# SASL Identification \n\nPlease refer to https://docs.confluent.io/3.0.0/kafka/sasl.html. \nIf your broker requires SASL authentication, these are the ENVironment variables to include\n\n\n| ENV variables name  | VALUE                                                                                    |\n|---------------------|------------------------------------------------------------------------------------------|\n| sasl_mechanisms     | PLAIN                                                                                   |\n| security_protocol   | SASL_SSL                                                                                   |\n| sasl_username   | YOUR USERNAME HERE                                                                                   |\n| sasl_password   | YOUR PASSWORD HERE                                                                                   |\n\n\nIf you schema registry requires authentication, these are the ENVironment variables to include\n\n| ENV variables name  | VALUE                                                                                    |\n|---------------------|------------------------------------------------------------------------------------------|\n| schema\\_registry\\_basic\\_auth\\_user_info     | authentication string                                                |\n| schema\\_registry\\_basic\\_auth\\_credentials_source   | USER_INFO                                                    |\n\n\n# SSL certificate for brokers and schema registry\n\nIf your brokers and schema registry servers require a SSL certificate, these are the \n\n| ENV variables name  | VALUE                                                                                    |\n|---------------------|------------------------------------------------------------------------------------------|\n| security_protocol     | ssl string                                                |\n\nYou have to place your certificate in \n\n# How to use it \n\n\n## Confluent Kafka Producer  \n\nThe `produce_message` method accepts a list of messages. Messages are dispatched asynchronously to the Kafka Broker\nThe module provides you with two different Producers' class. Both of them have a public method `producer_message`.\nHowever, If your are working with AVRO topics, you have to do `from messaging_middleware.confluent_producer.AVROProducer import AVROPRODUCER`. \nOtherwise you can `from messaging_middleware.confluent_producer.ConfluentProducer import ConfluentProducer`\nThe following is an example how to produce a message in both cases.\n\n\n```python\nfrom messaging_middleware.confluent_producer.ConfluentProducer import ConfluentProducer\nfrom messaging_middleware.confluent_producer.AVROProducer import AVROPRODUCER\n\nimport os\ndefault_key_value = {\"service_name\":\"test\"}\n\nclass OutboundCommunicationLayer:\n\n    def __init__(self,topic,brokers_uri,security_protocol='plaintext',schema_registry=None):\n        print(\"OS:\",os.environ.get('brokers'),os.environ.get('schema_registry'))\n\n        if schema_registry is None:\n            self.producer = ConfluentProducer(\n                brokers_uri=brokers_uri,\n                topic=topic, security_protocol=security_protocol)\n        else:\n            self.avro_producer = AVROPRODUCER(\n                brokers_uri=brokers_uri,\n                schema_registry_url=schema_registry,\n                topic=topic, security_protocol=security_protocol)\n\n    def produce_topic(self,value):\n        self.producer.produce_message(message=value)\n\n    def produce_avro_topic(self, value,key=default_key_value):\n\n        self.avro_producer.produce_message(value=value, key=key)\n\n\n\n\nif __name__ == \"__main__\":\n\n    o = OutboundCommunicationLayer(topic='my-test-2',brokers_uri=os.environ.get('brokers'),schema_registry=os.environ.get('schema_registry'))\n    o.produce_avro_topic(value={\"my_text\":\"ciaociaociaociao\"},key=default_key_value)\n\n```\n\n\n# Using Synchronous Producer\n\nEven though it is not always the best practise and it has its issues (https://github.com/edenhill/librdkafka/wiki/FAQ#why-is-there-no-sync-produce-interface) , there is no harm to have a synchronous producer. \nThe module provides you with two classes to \n\n\n\n\n## Integrated Logging System \n\nThe  Logger class aims to be used to print log messages and/or to produce logging message to an AVRO topic.\nIt uses the AVRO_PRODUCER and by default it produces messages to the AVRO topic `tcservicesmonitor` with the following schema \nIf you want to configure the Confluent Kafka producer, you have to pass a `init_kafka=1` when creating your instance.\n\n```json\nlogger = Logger(init_kafka=1, brokers_uri=os.environ.get('brokers'),\n                    schema_registry_url=os.environ.get('schema_registry_url'))\n```\n* tcservicesmonitor-value\n```json\n {\n        \"service_name\": \"string\",\n        \"last_operation\": \"string\",\n        \"timestamp\": \"string\",\n        \"operation_result\": \"string\",\n        \"operation_description\": \"string\",\n        \"error_description\": \"string\"\n    }\n```\n\n* tcservicesmonitor-key \n```json\n\"service_name\": \"string\"}\n```\n\nIf you want to use another topic you have to specify it in the ENV variable `monitoring_topic`\n\nIn order to use the Logging system, please refer to the configuration used to set up a [Confluent Kafka Producer](#confluent_kafka_producer_configuration)   \n\n\n```python\nimport os\nfrom messaging_middleware.Logger.Logger import Logger\nfrom datetime import datetime, timezone\n\n    logger = Logger(init_kafka=1, brokers_uri=os.environ.get('brokers'),\n                    schema_registry_url=os.environ.get('schema_registry_url'))\n    logger.print_log('info', 'My log ', 10)\n    logger.print_log('debug', 'my second log')\n    message_to_produce = {\n        \"service_name\": \"my-test-microservice\",\n        \"last_operation\": \"last-completed-operation\",\n        \"timestamp\": datetime.now(timezone.utc).replace(microsecond=0).isoformat(),\n        \"operation_result\": \"SUCCESS\",\n        \"operation_description\": \"The operation description\",\n        \"error_description\": \"\"\n    }\n\n\n    logger.produce_msg(message_to_produce=message_to_produce, schema_key={\n        \"service_name\": \"my-test-service\"})\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/antoniodimariano/kafka_messaging_layer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "microservices-messaging-layer", "package_url": "https://pypi.org/project/microservices-messaging-layer/", "platform": "", "project_url": "https://pypi.org/project/microservices-messaging-layer/", "project_urls": {"Homepage": "https://github.com/antoniodimariano/kafka_messaging_layer"}, "release_url": "https://pypi.org/project/microservices-messaging-layer/1.0.22/", "requires_dist": ["avro-python3", "kafka", "requests", "confluent-kafka"], "requires_python": "~=3.6", "summary": "Messaging Communication Layer for Microservices Architecture", "version": "1.0.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Triskelion</h1>\n<h2>A Kafka Messaging helper for Microservices</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/035cc9b2996d88f64cd24cb6d1d88eb421ee1abd/65726d65732e706e67\"></p>\n<h1>Service description</h1>\n<p>Triskelion provides your code with a helper for Kafka and Confluent Kafka producers.\nThe end goal of this project is to become a messages communication layer for microservices.\nHowever, The code is at its earlier stage and there is room for improvements. If you want to contribute to it please contact me at antonio.dimariano[AT]gmail.com\nIf you find a bug please submit it <a href=\"https://github.com/antoniodimariano/kafka_messaging_layer/issues\" rel=\"nofollow\">here</a></p>\n<p>I would like to thank all the <a href=\"https://confluentcommunity.slack.com/archives/C49G1J750\" rel=\"nofollow\">Confluent Community on Slack</a> for the priceless help during my learning path.</p>\n<p><a></a></p><h1><a>Confluent Kafka Producer Configuration</a></h1><p></p>\n<h1>Brokers</h1>\n<table>\n<thead>\n<tr>\n<th>ENV variables name</th>\n<th>VALUE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>brokers</td>\n<td>mybroker1:9093,mybroker2:9093,mybroker3:9093</td>\n</tr>\n<tr>\n<td>schema_registry</td>\n<td>http://my_avro_schema_registry:8081</td>\n</tr></tbody></table>\n<h1>SASL Identification</h1>\n<p>Please refer to <a href=\"https://docs.confluent.io/3.0.0/kafka/sasl.html\" rel=\"nofollow\">https://docs.confluent.io/3.0.0/kafka/sasl.html</a>.\nIf your broker requires SASL authentication, these are the ENVironment variables to include</p>\n<table>\n<thead>\n<tr>\n<th>ENV variables name</th>\n<th>VALUE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sasl_mechanisms</td>\n<td>PLAIN</td>\n</tr>\n<tr>\n<td>security_protocol</td>\n<td>SASL_SSL</td>\n</tr>\n<tr>\n<td>sasl_username</td>\n<td>YOUR USERNAME HERE</td>\n</tr>\n<tr>\n<td>sasl_password</td>\n<td>YOUR PASSWORD HERE</td>\n</tr></tbody></table>\n<p>If you schema registry requires authentication, these are the ENVironment variables to include</p>\n<table>\n<thead>\n<tr>\n<th>ENV variables name</th>\n<th>VALUE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>schema_registry_basic_auth_user_info</td>\n<td>authentication string</td>\n</tr>\n<tr>\n<td>schema_registry_basic_auth_credentials_source</td>\n<td>USER_INFO</td>\n</tr></tbody></table>\n<h1>SSL certificate for brokers and schema registry</h1>\n<p>If your brokers and schema registry servers require a SSL certificate, these are the</p>\n<table>\n<thead>\n<tr>\n<th>ENV variables name</th>\n<th>VALUE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>security_protocol</td>\n<td>ssl string</td>\n</tr></tbody></table>\n<p>You have to place your certificate in</p>\n<h1>How to use it</h1>\n<h2>Confluent Kafka Producer</h2>\n<p>The <code>produce_message</code> method accepts a list of messages. Messages are dispatched asynchronously to the Kafka Broker\nThe module provides you with two different Producers' class. Both of them have a public method <code>producer_message</code>.\nHowever, If your are working with AVRO topics, you have to do <code>from messaging_middleware.confluent_producer.AVROProducer import AVROPRODUCER</code>.\nOtherwise you can <code>from messaging_middleware.confluent_producer.ConfluentProducer import ConfluentProducer</code>\nThe following is an example how to produce a message in both cases.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">messaging_middleware.confluent_producer.ConfluentProducer</span> <span class=\"kn\">import</span> <span class=\"n\">ConfluentProducer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">messaging_middleware.confluent_producer.AVROProducer</span> <span class=\"kn\">import</span> <span class=\"n\">AVROPRODUCER</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">default_key_value</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span><span class=\"s2\">\"test\"</span><span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">OutboundCommunicationLayer</span><span class=\"p\">:</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">topic</span><span class=\"p\">,</span><span class=\"n\">brokers_uri</span><span class=\"p\">,</span><span class=\"n\">security_protocol</span><span class=\"o\">=</span><span class=\"s1\">'plaintext'</span><span class=\"p\">,</span><span class=\"n\">schema_registry</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"OS:\"</span><span class=\"p\">,</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'brokers'</span><span class=\"p\">),</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'schema_registry'</span><span class=\"p\">))</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">schema_registry</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">producer</span> <span class=\"o\">=</span> <span class=\"n\">ConfluentProducer</span><span class=\"p\">(</span>\n                <span class=\"n\">brokers_uri</span><span class=\"o\">=</span><span class=\"n\">brokers_uri</span><span class=\"p\">,</span>\n                <span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">security_protocol</span><span class=\"o\">=</span><span class=\"n\">security_protocol</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">avro_producer</span> <span class=\"o\">=</span> <span class=\"n\">AVROPRODUCER</span><span class=\"p\">(</span>\n                <span class=\"n\">brokers_uri</span><span class=\"o\">=</span><span class=\"n\">brokers_uri</span><span class=\"p\">,</span>\n                <span class=\"n\">schema_registry_url</span><span class=\"o\">=</span><span class=\"n\">schema_registry</span><span class=\"p\">,</span>\n                <span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">security_protocol</span><span class=\"o\">=</span><span class=\"n\">security_protocol</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">produce_topic</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">producer</span><span class=\"o\">.</span><span class=\"n\">produce_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">produce_avro_topic</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">default_key_value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">avro_producer</span><span class=\"o\">.</span><span class=\"n\">produce_message</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">)</span>\n\n\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n\n    <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">OutboundCommunicationLayer</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"s1\">'my-test-2'</span><span class=\"p\">,</span><span class=\"n\">brokers_uri</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'brokers'</span><span class=\"p\">),</span><span class=\"n\">schema_registry</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'schema_registry'</span><span class=\"p\">))</span>\n    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">produce_avro_topic</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"my_text\"</span><span class=\"p\">:</span><span class=\"s2\">\"ciaociaociaociao\"</span><span class=\"p\">},</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">default_key_value</span><span class=\"p\">)</span>\n</pre>\n<h1>Using Synchronous Producer</h1>\n<p>Even though it is not always the best practise and it has its issues (<a href=\"https://github.com/edenhill/librdkafka/wiki/FAQ#why-is-there-no-sync-produce-interface\" rel=\"nofollow\">https://github.com/edenhill/librdkafka/wiki/FAQ#why-is-there-no-sync-produce-interface</a>) , there is no harm to have a synchronous producer.\nThe module provides you with two classes to</p>\n<h2>Integrated Logging System</h2>\n<p>The  Logger class aims to be used to print log messages and/or to produce logging message to an AVRO topic.\nIt uses the AVRO_PRODUCER and by default it produces messages to the AVRO topic <code>tcservicesmonitor</code> with the following schema\nIf you want to configure the Confluent Kafka producer, you have to pass a <code>init_kafka=1</code> when creating your instance.</p>\n<pre><span class=\"err\">logger</span> <span class=\"err\">=</span> <span class=\"err\">Logger(init_kafka=</span><span class=\"mi\">1</span><span class=\"err\">,</span> <span class=\"err\">brokers_uri=os.environ.get('brokers'),</span>\n                    <span class=\"err\">schema_registry_url=os.environ.get('schema_registry_url'))</span>\n</pre>\n<ul>\n<li>tcservicesmonitor-value</li>\n</ul>\n<pre> <span class=\"p\">{</span>\n        <span class=\"nt\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"last_operation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"operation_result\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"operation_description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"error_description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span>\n    <span class=\"p\">}</span>\n</pre>\n<ul>\n<li>tcservicesmonitor-key</li>\n</ul>\n<pre><span class=\"s2\">\"service_name\"</span><span class=\"err\">:</span> <span class=\"s2\">\"string\"</span><span class=\"err\">}</span>\n</pre>\n<p>If you want to use another topic you have to specify it in the ENV variable <code>monitoring_topic</code></p>\n<p>In order to use the Logging system, please refer to the configuration used to set up a <a href=\"#confluent_kafka_producer_configuration\" rel=\"nofollow\">Confluent Kafka Producer</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">messaging_middleware.Logger.Logger</span> <span class=\"kn\">import</span> <span class=\"n\">Logger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timezone</span>\n\n    <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">(</span><span class=\"n\">init_kafka</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">brokers_uri</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'brokers'</span><span class=\"p\">),</span>\n                    <span class=\"n\">schema_registry_url</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'schema_registry_url'</span><span class=\"p\">))</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">print_log</span><span class=\"p\">(</span><span class=\"s1\">'info'</span><span class=\"p\">,</span> <span class=\"s1\">'My log '</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">print_log</span><span class=\"p\">(</span><span class=\"s1\">'debug'</span><span class=\"p\">,</span> <span class=\"s1\">'my second log'</span><span class=\"p\">)</span>\n    <span class=\"n\">message_to_produce</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-test-microservice\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"last_operation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"last-completed-operation\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">microsecond</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n        <span class=\"s2\">\"operation_result\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SUCCESS\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"operation_description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The operation description\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"error_description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">}</span>\n\n\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">produce_msg</span><span class=\"p\">(</span><span class=\"n\">message_to_produce</span><span class=\"o\">=</span><span class=\"n\">message_to_produce</span><span class=\"p\">,</span> <span class=\"n\">schema_key</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-test-service\"</span><span class=\"p\">})</span>\n</pre>\n\n          </div>"}, "last_serial": 6778513, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "a0c3079de527a853fb509ad61c284cd6", "sha256": "caac1f35a6867e274988cc19ad5ae56fab6f79d2a55c3adc516cf964539a2911"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a0c3079de527a853fb509ad61c284cd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 4530, "upload_time": "2018-04-25T13:09:15", "upload_time_iso_8601": "2018-04-25T13:09:15.884103Z", "url": "https://files.pythonhosted.org/packages/75/58/797be8c4abdb1dde3978ecfb891ed59322e6b33480169f2c85221ad7a161/microservices_messaging_layer-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "decd4c8c7191701f5a847b90c7a78d4d", "sha256": "800a157d3733994a9b02955def905235c22c7762af42374fd77ef1687be1430f"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "decd4c8c7191701f5a847b90c7a78d4d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 2901, "upload_time": "2018-04-25T13:09:17", "upload_time_iso_8601": "2018-04-25T13:09:17.050432Z", "url": "https://files.pythonhosted.org/packages/a6/c6/cf806152246792687c16c8a4be06281315564fd0727c6e6103e58b70614e/microservices_messaging_layer-1.0.1.tar.gz", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "e81bb5ff492b40bebcb465fd9c2ec526", "sha256": "baafa2a9d3fe030d31c98e73acfff63217d52c434c8344d436a37f0b50f39d03"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.15-py2-none-any.whl", "has_sig": false, "md5_digest": "e81bb5ff492b40bebcb465fd9c2ec526", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": "~=3.6", "size": 11392, "upload_time": "2019-02-08T15:09:06", "upload_time_iso_8601": "2019-02-08T15:09:06.776940Z", "url": "https://files.pythonhosted.org/packages/50/48/40cfd2b5d3b8fc1f87eab6d2afa6218907c2587bc0b53a694dd0f0a0644d/microservices_messaging_layer-1.0.15-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12ea8c3f283d6e849bbb232f9c7b8c63", "sha256": "393480a1af84d0ca3021039ec42e2fb5c4ecd64a6d01ecdd5ed30fad7c56b40c"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.15.tar.gz", "has_sig": false, "md5_digest": "12ea8c3f283d6e849bbb232f9c7b8c63", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 6389, "upload_time": "2019-02-08T15:09:08", "upload_time_iso_8601": "2019-02-08T15:09:08.677719Z", "url": "https://files.pythonhosted.org/packages/55/2c/f53a3c4db389e94b08542cbe95c941506baefc02e56169867313b810f3e8/microservices_messaging_layer-1.0.15.tar.gz", "yanked": false}], "1.0.17": [{"comment_text": "", "digests": {"md5": "0a95c03cb4364feebe496c4ad8b9207c", "sha256": "6a9ef7606a960a886193938e87841127da6f851a9c0d96a512d9b31fd795fda3"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "0a95c03cb4364feebe496c4ad8b9207c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 11436, "upload_time": "2019-02-13T13:39:06", "upload_time_iso_8601": "2019-02-13T13:39:06.378532Z", "url": "https://files.pythonhosted.org/packages/53/34/ccfe388d3ce305b8f25454649bc30dbd0e62029f619257b621663dc66dc6/microservices_messaging_layer-1.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e63f803ceab7e3a15bcf91f748e134c1", "sha256": "1dfe57f5008804b05f4981905e46258d83258908b8bc95530e6bed85f95e3d2a"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.17.tar.gz", "has_sig": false, "md5_digest": "e63f803ceab7e3a15bcf91f748e134c1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 6429, "upload_time": "2019-02-13T13:39:07", "upload_time_iso_8601": "2019-02-13T13:39:07.389397Z", "url": "https://files.pythonhosted.org/packages/2b/64/5fded284d82779643986bbc76eb16a1a19d370a2e7c14dc154f94e1f9b57/microservices_messaging_layer-1.0.17.tar.gz", "yanked": false}], "1.0.18": [{"comment_text": "", "digests": {"md5": "86fb887c606505d479f5af2ab6b9278d", "sha256": "61538ef90ed40832faebd538b9a5c9da6d3e2a52b93445b73d41a8bbaeb9ece8"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "86fb887c606505d479f5af2ab6b9278d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 12784, "upload_time": "2019-12-21T18:13:25", "upload_time_iso_8601": "2019-12-21T18:13:25.786341Z", "url": "https://files.pythonhosted.org/packages/27/2f/04fe36d189463097bcb5526a6e1a2bbdffd90bfb3d3fc90476fd525dd134/microservices_messaging_layer-1.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57c00d8d2f3a4933aad0b2e4b0922d0a", "sha256": "a64e4e366352fca51d16656ce0a927ac86952ebff69c7ffb337182a219287c4a"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.18.tar.gz", "has_sig": false, "md5_digest": "57c00d8d2f3a4933aad0b2e4b0922d0a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 8060, "upload_time": "2019-12-21T18:13:28", "upload_time_iso_8601": "2019-12-21T18:13:28.393214Z", "url": "https://files.pythonhosted.org/packages/76/67/4461d62059b53f227eb5611a501d9bfd3838999769ffce04e00de1a22936/microservices_messaging_layer-1.0.18.tar.gz", "yanked": false}], "1.0.22": [{"comment_text": "", "digests": {"md5": "1b4659b920edfb6611bf7125c59fade2", "sha256": "e35f49ea49e6635b6d531fcee0ed165632c51f0b2a66fd9d073dd0a57e505538"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "1b4659b920edfb6611bf7125c59fade2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23260, "upload_time": "2020-03-09T16:58:11", "upload_time_iso_8601": "2020-03-09T16:58:11.838779Z", "url": "https://files.pythonhosted.org/packages/8d/43/513dae22ef5875237f8e62c92fd5006bed82f410e6803c75c171fabea108/microservices_messaging_layer-1.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea5775e7d78294efcb0857edb5b85694", "sha256": "d7126f70273f65ab75d59eb28566a2686273f446ea793937bce26563fbfc7e43"}, "downloads": -1, "filename": "microservices-messaging-layer-1.0.22.tar.gz", "has_sig": false, "md5_digest": "ea5775e7d78294efcb0857edb5b85694", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 12031, "upload_time": "2020-03-09T16:58:13", "upload_time_iso_8601": "2020-03-09T16:58:13.346784Z", "url": "https://files.pythonhosted.org/packages/f9/19/bcd1ca624acb1004c2045c5d097f54ba1c3f08acac6640ac838e9c774517/microservices-messaging-layer-1.0.22.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "da6e0a9767d00575c5f76cd17b74d505", "sha256": "83b5e6621908fc44e92f78f0305b127a387aa184ce6d107723f1a0dec11197d9"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "da6e0a9767d00575c5f76cd17b74d505", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 6127, "upload_time": "2018-05-31T10:25:36", "upload_time_iso_8601": "2018-05-31T10:25:36.481465Z", "url": "https://files.pythonhosted.org/packages/5f/03/45845ce7622fd00688695c06c999578c740087be30d41011acb15cedc210/microservices_messaging_layer-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c87a599d3944bd6a9dd0cde7a08588", "sha256": "11ca28bf94ea740d826ba6622c167f544863220fcbdc279931f7b678d92e9c3e"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.3.tar.gz", "has_sig": false, "md5_digest": "a7c87a599d3944bd6a9dd0cde7a08588", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3519, "upload_time": "2018-05-31T10:25:38", "upload_time_iso_8601": "2018-05-31T10:25:38.370759Z", "url": "https://files.pythonhosted.org/packages/a0/48/5f6382fc712d5a34632732589f0354923d4ef9565a4cc7635b33af0b7af4/microservices_messaging_layer-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "3f16d2c5fd92cc271909da7a622a2379", "sha256": "1882d645cd53ec125caa99b7564c72365cfa2862c2e835c9b807f069060a5225"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3f16d2c5fd92cc271909da7a622a2379", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 6154, "upload_time": "2018-06-13T17:08:01", "upload_time_iso_8601": "2018-06-13T17:08:01.201306Z", "url": "https://files.pythonhosted.org/packages/9a/47/4af9354398eeb8afcc05778092577388b12ab83cd2f3801a00f979f78b07/microservices_messaging_layer-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "836012eadee612e2a4e16342f1cfd327", "sha256": "e189c7755b171d114a3c420de20a559e84018e8fccb1784e2ab7b7330af93079"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.4.tar.gz", "has_sig": false, "md5_digest": "836012eadee612e2a4e16342f1cfd327", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3531, "upload_time": "2018-06-13T17:08:02", "upload_time_iso_8601": "2018-06-13T17:08:02.575868Z", "url": "https://files.pythonhosted.org/packages/15/6c/bf943a21a8680ad7e41e9f87134be6099556c7155e30090567b3d3e0f307/microservices_messaging_layer-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "0dd728b6a8a57db02ec3d43778c0c852", "sha256": "46ee9d97633f547624b79f3cfb88d516e2d9d152a69b5df7fb6065bc95b507b4"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0dd728b6a8a57db02ec3d43778c0c852", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 6777, "upload_time": "2018-06-15T11:17:27", "upload_time_iso_8601": "2018-06-15T11:17:27.623044Z", "url": "https://files.pythonhosted.org/packages/59/62/309dbe69ca6949808a245cf44f5ac1b07f32670c14ff23e35c08105adcfd/microservices_messaging_layer-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "882dc94f4015a4e8e5ab1caa35650a94", "sha256": "e53f942acfa3622b3e66b7311e4fb6fc215943fa71eeca44b5456370ebd4d7ee"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.5.tar.gz", "has_sig": false, "md5_digest": "882dc94f4015a4e8e5ab1caa35650a94", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3664, "upload_time": "2018-06-15T11:17:28", "upload_time_iso_8601": "2018-06-15T11:17:28.708063Z", "url": "https://files.pythonhosted.org/packages/cb/dd/0232cded4317e22fa0b482089a1b6ce864861bc453e3ba1a8b742ab62aaa/microservices_messaging_layer-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a3f30e5d9f05e8dc6ec38514f3130f5d", "sha256": "6d5e495a992855a8b9c1606e793a3eb3814906b684e12c5228b156d3bce6e1a9"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a3f30e5d9f05e8dc6ec38514f3130f5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 6771, "upload_time": "2018-06-15T11:25:39", "upload_time_iso_8601": "2018-06-15T11:25:39.011056Z", "url": "https://files.pythonhosted.org/packages/02/af/d5ae296a882814cfba792fdbc598c21357ca87095ea86904bd7f3a8ac9bb/microservices_messaging_layer-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d71279428a67ef99524cd166b8ebd2ce", "sha256": "e7d946d52f756a7c81219ce25d2539b99694ccc8f0659c83459dee7864a39189"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.6.tar.gz", "has_sig": false, "md5_digest": "d71279428a67ef99524cd166b8ebd2ce", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3654, "upload_time": "2018-06-15T11:25:40", "upload_time_iso_8601": "2018-06-15T11:25:40.263675Z", "url": "https://files.pythonhosted.org/packages/6e/27/0715d583d51ebddddd8b4690f2d03a74d8b5d26ced94a94aa1168373c49d/microservices_messaging_layer-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "ba7e10a9999660dcb43db5582721ecf9", "sha256": "e83ad6ff1b65f3c6c56d4246bc35d3e628c977ae581dfb9675726533a57d562d"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ba7e10a9999660dcb43db5582721ecf9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 7852, "upload_time": "2018-06-25T14:35:16", "upload_time_iso_8601": "2018-06-25T14:35:16.490451Z", "url": "https://files.pythonhosted.org/packages/c3/b5/2b18d086fc4c994a338c867b21ad2c8c5c7eacb3826613e77b0a2dec1f26/microservices_messaging_layer-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f46e6f2855f377b6d8421123fdf2c574", "sha256": "92d0656ec3ed0bc7999381e108d2914f30359c4b670cebacfee7c3facbd97806"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.7.tar.gz", "has_sig": false, "md5_digest": "f46e6f2855f377b6d8421123fdf2c574", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 3895, "upload_time": "2018-06-25T14:35:17", "upload_time_iso_8601": "2018-06-25T14:35:17.387811Z", "url": "https://files.pythonhosted.org/packages/8b/10/809c820fb500456160e0d85b9c82104f96f6d19bb01eb38f39b2dd3e4096/microservices_messaging_layer-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "867c93381def754c38cdd47be41c7606", "sha256": "586742902441789e4104637bc90c9cc031071e032f468631b270d09f914ded5f"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.8.macosx-10.9-x86_64.tar.gz", "has_sig": false, "md5_digest": "867c93381def754c38cdd47be41c7606", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 11302, "upload_time": "2019-02-06T10:18:56", "upload_time_iso_8601": "2019-02-06T10:18:56.223578Z", "url": "https://files.pythonhosted.org/packages/c3/dd/be3d6cd301f71c6db4c1ae35f827a13f7f44934b8837c61e6f80a296ab54/microservices_messaging_layer-1.0.8.macosx-10.9-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5f41a1241ba56d8c21216a69ecadb48", "sha256": "d0bf9c4c1b3ad6e7f5a7df9706c6fbf14120064a009fedcca69617b5da9bb9d7"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "d5f41a1241ba56d8c21216a69ecadb48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 7912, "upload_time": "2018-06-25T19:07:58", "upload_time_iso_8601": "2018-06-25T19:07:58.769588Z", "url": "https://files.pythonhosted.org/packages/08/f9/684a874e5e45a474a84966cbd1ffbf16cb7951661b5e98ac5db382bf6047/microservices_messaging_layer-1.0.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b4659b920edfb6611bf7125c59fade2", "sha256": "e35f49ea49e6635b6d531fcee0ed165632c51f0b2a66fd9d073dd0a57e505538"}, "downloads": -1, "filename": "microservices_messaging_layer-1.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "1b4659b920edfb6611bf7125c59fade2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 23260, "upload_time": "2020-03-09T16:58:11", "upload_time_iso_8601": "2020-03-09T16:58:11.838779Z", "url": "https://files.pythonhosted.org/packages/8d/43/513dae22ef5875237f8e62c92fd5006bed82f410e6803c75c171fabea108/microservices_messaging_layer-1.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea5775e7d78294efcb0857edb5b85694", "sha256": "d7126f70273f65ab75d59eb28566a2686273f446ea793937bce26563fbfc7e43"}, "downloads": -1, "filename": "microservices-messaging-layer-1.0.22.tar.gz", "has_sig": false, "md5_digest": "ea5775e7d78294efcb0857edb5b85694", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 12031, "upload_time": "2020-03-09T16:58:13", "upload_time_iso_8601": "2020-03-09T16:58:13.346784Z", "url": "https://files.pythonhosted.org/packages/f9/19/bcd1ca624acb1004c2045c5d097f54ba1c3f08acac6640ac838e9c774517/microservices-messaging-layer-1.0.22.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:56 2020"}