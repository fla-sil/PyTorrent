{"info": {"author": "kpj", "author_email": "kpjkpjkpjkpjkpjkpj@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "RNAseq Analysis Pipeline\n========================\n\n|PyPI| |Build Status|\n\nInstallation\n------------\n\nInstall ``seqpipe`` using ``pip``:\n\n.. code:: bash\n\n    $ pip install seqpipe\n\n``seqpipe`` offers various commandline-arguments:\n\n::\n\n    $ seqpipe --help\n    Usage: seqpipe [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      --help  Show this message and exit.\n\n    Commands:\n      map\n      stats\n\nIn particular, the mapping pipeline is interesting:\n\n.. code:: bash\n\n    $ seqpipe map --help\n    Usage: seqpipe map [OPTIONS]\n\n    Options:\n      -r, --read PATH             Path to read file/directory.  [required]\n      -g, --genome PATH           Path to genome file/directory.  [required]\n      -o, --output DIRECTORY      Directory to save results to.\n      --scripts / --no-scripts    Whether to execute scripts or not.\n      -m, --min-read-len INTEGER  Minimal read length.\n      -M, --max-read-len INTEGER  Maximal read length.\n      -b, --bowtie-args TEXT      Extra arguments for bowtie.\n      -t, --threads INTEGER       How many threads to run in.\n      --help                      Show this message and exit.\n\nUsage\n-----\n\nTo map a directory of reads to two references, execute it as follows:\n\n.. code:: bash\n\n    $ seqpipe map \\\n      -r seqpipe/tests/data/reads/ \\\n      -g seqpipe/tests/data/references/10-ref.fa \\\n      -g seqpipe/tests/data/references/20-ref.fa \\\n      -o my_mapping\n\nThis will create a ``my_mapping`` directory which contains two\ndirectories: \\* ``runs`` stores all data related to each individual read\nfile \\* ``results`` contains data generated by scripts from the\n``scripts`` folder\n\nAn overview of the read distributions can then be generated via:\n\n.. code:: bash\n\n    $ seqpipe stats plot_rdist -o my_images/ my_mapping/\n\nExtras\n------\n\nAdditional useful scripts are contained in ``extra``. The entry point is\n``main.py`` (check ``python ./extra/main.py --help`` for help).\n\nThe respective individual files are: \\* ``sequential_pipeline.sh`` \\*\nmap length-filtered reads against multiple genomes in succession \\*\n``plot_sequential_data.py`` \\* visualize data obtained from sequential\npipeline \\* ``plot_expression_differences.py`` \\* visualize differences\nin RNAseq expression levels over pairs of samples\n\nLinks\n-----\n\n-  `Github <https://github.com/kpj/SeqPipe>`__\n-  `PyPi <https://pypi.python.org/pypi/seqpipe>`__\n\nDependencies\n------------\n\nTools: \\* cutadapt \\* fastqc \\* `more\ninfo <http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/>`__\n\\* bowtie \\* samtools \\*\n`specifications <https://samtools.github.io/hts-specs/SAMv1.pdf>`__ \\*\nbedtools\n\nLanguages: \\* bash \\* python \\* numpy \\* pandas \\* seaborn \\* matplotlib\n\\* tqdm \\* biopython \\* pysam \\* joblib \\* click \\* sh \\* colorama\n\nDevelopment notes\n-----------------\n\nTests\n~~~~~\n\nRun tests using:\n\n.. code:: bash\n\n    $ tox\n\nRelease package\n~~~~~~~~~~~~~~~\n\nThis guide assumes a properly setup ``~/.pypirc``.\n\nBuild package:\n\n.. code:: bash\n\n    $ python setup.py sdist\n\nRegister it (only once):\n\n.. code:: bash\n\n    $ twine register dist/seqpipe-X.Y.Z.tar.gz\n\nTry installation locally:\n\n.. code:: bash\n\n    $ rm -rf /tmp/seqpipe_tmp\n    $ virtualenv /tmp/seqpipe_tmp\n    $ /tmp/seqpipe_tmp/bin/pip install dist/seqpipe-X.Y.Z.tar.gz\n    $ /tmp/seqpipe_tmp/bin/seqpipe --help\n\nTry installation using test-servers:\n\n.. code:: bash\n\n    $ twine upload -r test dist/seqpipe-X.Y.Z.tar.gz\n    $ pip install -i https://testpypi.python.org/pypi seqpipe\n    $ seqpipe --help\n\nCheck `testpypi-page <https://testpypi.python.org/pypi/seqpipe>`__.\n\nFinally, install it on actual server:\n\n.. code:: bash\n\n    $ twine upload dist/seqpipe-X.Y.Z.tar.gz\n    $ pip install -U seqpipe\n    $ seqpipe --help\n\nCheck actual `pypi-page <https://pypi.python.org/pypi/seqpipe>`__.\n\nMisc\n~~~~\n\nCreate dev-builds with:\n\n.. code:: bash\n\n    $ pip install --user -e .\n\nRun uninstalled version:\n\n.. code:: bash\n\n    $ python -m seqpipe.main\n\nEnable bash-autocompletion as follows:\n\n.. code:: bash\n\n    $ _SEQPIPE_COMPLETE=source seqpipe >> ~/.bashrc\n    $ . ~/.bashrc\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/seqpipe.svg?style=flat\n   :target: \n.. |Build Status| image:: https://travis-ci.org/kpj/SeqPipe.svg?branch=master\n   :target: https://travis-ci.org/kpj/SeqPipe", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kpj/SeqPipe", "keywords": "bioinformatics sequencing pipeline alignment mapping", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "seqpipe", "package_url": "https://pypi.org/project/seqpipe/", "platform": "", "project_url": "https://pypi.org/project/seqpipe/", "project_urls": {"Homepage": "https://github.com/kpj/SeqPipe"}, "release_url": "https://pypi.org/project/seqpipe/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "Sequencing pipeline", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            RNAseq Analysis Pipeline<br>========================<br><br>|PyPI| |Build Status|<br><br>Installation<br>------------<br><br>Install ``seqpipe`` using ``pip``:<br><br>.. code:: bash<br><br>    $ pip install seqpipe<br><br>``seqpipe`` offers various commandline-arguments:<br><br>::<br><br>    $ seqpipe --help<br>    Usage: seqpipe [OPTIONS] COMMAND [ARGS]...<br><br>    Options:<br>      --help  Show this message and exit.<br><br>    Commands:<br>      map<br>      stats<br><br>In particular, the mapping pipeline is interesting:<br><br>.. code:: bash<br><br>    $ seqpipe map --help<br>    Usage: seqpipe map [OPTIONS]<br><br>    Options:<br>      -r, --read PATH             Path to read file/directory.  [required]<br>      -g, --genome PATH           Path to genome file/directory.  [required]<br>      -o, --output DIRECTORY      Directory to save results to.<br>      --scripts / --no-scripts    Whether to execute scripts or not.<br>      -m, --min-read-len INTEGER  Minimal read length.<br>      -M, --max-read-len INTEGER  Maximal read length.<br>      -b, --bowtie-args TEXT      Extra arguments for bowtie.<br>      -t, --threads INTEGER       How many threads to run in.<br>      --help                      Show this message and exit.<br><br>Usage<br>-----<br><br>To map a directory of reads to two references, execute it as follows:<br><br>.. code:: bash<br><br>    $ seqpipe map \\<br>      -r seqpipe/tests/data/reads/ \\<br>      -g seqpipe/tests/data/references/10-ref.fa \\<br>      -g seqpipe/tests/data/references/20-ref.fa \\<br>      -o my_mapping<br><br>This will create a ``my_mapping`` directory which contains two<br>directories: \\* ``runs`` stores all data related to each individual read<br>file \\* ``results`` contains data generated by scripts from the<br>``scripts`` folder<br><br>An overview of the read distributions can then be generated via:<br><br>.. code:: bash<br><br>    $ seqpipe stats plot_rdist -o my_images/ my_mapping/<br><br>Extras<br>------<br><br>Additional useful scripts are contained in ``extra``. The entry point is<br>``main.py`` (check ``python ./extra/main.py --help`` for help).<br><br>The respective individual files are: \\* ``sequential_pipeline.sh`` \\*<br>map length-filtered reads against multiple genomes in succession \\*<br>``plot_sequential_data.py`` \\* visualize data obtained from sequential<br>pipeline \\* ``plot_expression_differences.py`` \\* visualize differences<br>in RNAseq expression levels over pairs of samples<br><br>Links<br>-----<br><br>-  `Github &lt;https://github.com/kpj/SeqPipe&gt;`__<br>-  `PyPi &lt;https://pypi.python.org/pypi/seqpipe&gt;`__<br><br>Dependencies<br>------------<br><br>Tools: \\* cutadapt \\* fastqc \\* `more<br>info &lt;http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/&gt;`__<br>\\* bowtie \\* samtools \\*<br>`specifications &lt;https://samtools.github.io/hts-specs/SAMv1.pdf&gt;`__ \\*<br>bedtools<br><br>Languages: \\* bash \\* python \\* numpy \\* pandas \\* seaborn \\* matplotlib<br>\\* tqdm \\* biopython \\* pysam \\* joblib \\* click \\* sh \\* colorama<br><br>Development notes<br>-----------------<br><br>Tests<br>~~~~~<br><br>Run tests using:<br><br>.. code:: bash<br><br>    $ tox<br><br>Release package<br>~~~~~~~~~~~~~~~<br><br>This guide assumes a properly setup ``~/.pypirc``.<br><br>Build package:<br><br>.. code:: bash<br><br>    $ python setup.py sdist<br><br>Register it (only once):<br><br>.. code:: bash<br><br>    $ twine register dist/seqpipe-X.Y.Z.tar.gz<br><br>Try installation locally:<br><br>.. code:: bash<br><br>    $ rm -rf /tmp/seqpipe_tmp<br>    $ virtualenv /tmp/seqpipe_tmp<br>    $ /tmp/seqpipe_tmp/bin/pip install dist/seqpipe-X.Y.Z.tar.gz<br>    $ /tmp/seqpipe_tmp/bin/seqpipe --help<br><br>Try installation using test-servers:<br><br>.. code:: bash<br><br>    $ twine upload -r test dist/seqpipe-X.Y.Z.tar.gz<br>    $ pip install -i https://testpypi.python.org/pypi seqpipe<br>    $ seqpipe --help<br><br>Check `testpypi-page &lt;https://testpypi.python.org/pypi/seqpipe&gt;`__.<br><br>Finally, install it on actual server:<br><br>.. code:: bash<br><br>    $ twine upload dist/seqpipe-X.Y.Z.tar.gz<br>    $ pip install -U seqpipe<br>    $ seqpipe --help<br><br>Check actual `pypi-page &lt;https://pypi.python.org/pypi/seqpipe&gt;`__.<br><br>Misc<br>~~~~<br><br>Create dev-builds with:<br><br>.. code:: bash<br><br>    $ pip install --user -e .<br><br>Run uninstalled version:<br><br>.. code:: bash<br><br>    $ python -m seqpipe.main<br><br>Enable bash-autocompletion as follows:<br><br>.. code:: bash<br><br>    $ _SEQPIPE_COMPLETE=source seqpipe &gt;&gt; ~/.bashrc<br>    $ . ~/.bashrc<br><br>.. |PyPI| image:: https://img.shields.io/pypi/v/seqpipe.svg?style=flat<br>   :target: <br>.. |Build Status| image:: https://travis-ci.org/kpj/SeqPipe.svg?branch=master<br>   :target: https://travis-ci.org/kpj/SeqPipe\n          </div>"}, "last_serial": 3117065, "releases": {"0.0.3": [], "0.0.4": [{"comment_text": "", "digests": {"md5": "3021450accf95923b0a99cfc443c60f8", "sha256": "3774fd0637e80e3256bc2125dbbcb6b1f5ce1a4dd98b43fd05949be6f36b29d0"}, "downloads": -1, "filename": "seqpipe-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3021450accf95923b0a99cfc443c60f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7367, "upload_time": "2017-05-30T20:55:50", "upload_time_iso_8601": "2017-05-30T20:55:50.000796Z", "url": "https://files.pythonhosted.org/packages/d1/3f/74d8e31739eaa5c51bf9c1f9fd624483fa8ee8feab3f04335ba24f1e3b2c/seqpipe-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ffb528b999f3b58bbacdd90533206ae4", "sha256": "f6a24bc9c93bfbef85f797e8d344e08861d441c9199ff3020fdba6f1f1fff1f8"}, "downloads": -1, "filename": "seqpipe-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ffb528b999f3b58bbacdd90533206ae4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9720, "upload_time": "2017-05-31T21:06:06", "upload_time_iso_8601": "2017-05-31T21:06:06.386979Z", "url": "https://files.pythonhosted.org/packages/85/08/ae57e69d3806434a97ea447c6a74254e5f3bcd6c605e416d882029711c14/seqpipe-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "1c361563983df65619335167fa830b0e", "sha256": "639e8b11bf73b329fc98a926efa5a4e448fe998f3d20b5628d67c5c96e5b52d9"}, "downloads": -1, "filename": "seqpipe-0.0.6.tar.gz", "has_sig": false, "md5_digest": "1c361563983df65619335167fa830b0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10308, "upload_time": "2017-06-01T09:03:07", "upload_time_iso_8601": "2017-06-01T09:03:07.897238Z", "url": "https://files.pythonhosted.org/packages/87/e2/2ccb57606eaef514924429c79cfce18639feaec38276204e4f6ced4020da/seqpipe-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "30fbf82ac974e71576fff616b5770a01", "sha256": "8056a890d6ff692b409dc26b8b14f318a0ee86098b23af57d73f027c0d12ba08"}, "downloads": -1, "filename": "seqpipe-0.0.7.tar.gz", "has_sig": false, "md5_digest": "30fbf82ac974e71576fff616b5770a01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11987, "upload_time": "2017-08-23T10:03:21", "upload_time_iso_8601": "2017-08-23T10:03:21.174794Z", "url": "https://files.pythonhosted.org/packages/b6/2c/154fcdd3c9ec7e31b51df5c9100db2344cfd59d5ad434008574b8b0dec2e/seqpipe-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30fbf82ac974e71576fff616b5770a01", "sha256": "8056a890d6ff692b409dc26b8b14f318a0ee86098b23af57d73f027c0d12ba08"}, "downloads": -1, "filename": "seqpipe-0.0.7.tar.gz", "has_sig": false, "md5_digest": "30fbf82ac974e71576fff616b5770a01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11987, "upload_time": "2017-08-23T10:03:21", "upload_time_iso_8601": "2017-08-23T10:03:21.174794Z", "url": "https://files.pythonhosted.org/packages/b6/2c/154fcdd3c9ec7e31b51df5c9100db2344cfd59d5ad434008574b8b0dec2e/seqpipe-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:50 2020"}