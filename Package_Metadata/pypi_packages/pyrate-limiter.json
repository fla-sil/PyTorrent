{"info": {"author": "vutr", "author_email": "me@vutr.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "<img align=\"left\" width=\"95\" height=\"120\" src=\"https://raw.githubusercontent.com/vutran1710/PyrateLimiter/master/img/log.png\">\n\n# PyrateLimiter\nThe request rate limiter using Leaky-bucket algorithm\n\n[![PyPI version](https://badge.fury.io/py/pyrate-limiter.svg)](https://badge.fury.io/py/pyrate-limiter)\n[![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)](https://www.python.org/downloads/release/python-370/)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/vutran1710/PyrateLimiter/graphs/commit-activity)\n[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://pypi.python.org/pypi/pyrate-limiter/)\n[![HitCount](http://hits.dwyl.io/vutran1710/PyrateLimiter.svg)](http://hits.dwyl.io/vutran1710/PyrateLimiter)\n\n<br>\n\n## Introduction\nThis module can be used to apply rate-limit for API request, using `leaky-bucket` algorithm. User defines `window`\nduration and the limit of function calls within such interval.\n\n- To hold the state of the Bucket, you can use `LocalBucket` as internal bucket.\n- To use PyrateLimiter with `Redis`,  `redis-py` is required to be installed.\n- It is also possible to use your own Bucket implementation, by extending `AbstractBucket` from `pyrate_limiter.core`\n\n\n## Installation\nUsing pip/pipenv/poetry, whatever that works for your\n\n``` shell\n$ pip install pyrate-limiter\n```\n\n\n## API\nOne of the most pleasing features of this lib is that it is meant to be very extensible. People's efforts to solve the rate-limiting\nproblem have so far led to the introduction of a few variations of the **leaky-bucket** algorithm. The idea behind this is project is that\nyou can extend the main core data-structure that powers every member of this algorithm family.\n\n#### AbstractBucket\n```python\nfrom pyrate_limiter.core import AbstractBucket\n```\nAbstractBucket is a python abstract class that provides the Interface for, well, a `queue`. The algorithms provided in\n`pyrate_limiter.core` all make use of this data-structure. A concrete implementation of this abstract class must includes 4\nmethods of the *bucket* instance.\n\n``` python\nclass AbstractBucket(ABC):\n    \"\"\"An abstract class for Bucket as Queue\"\"\"\n\n    __values__ = []\n\n    @abstractmethod\n    def append(self, item) -> None:\n        \"\"\"Add single item to the queue\n        \"\"\"\n    @abstractmethod\n    def values(self) -> List:\n        \"\"\"Return queue values\n        \"\"\"\n    @abstractmethod\n    def update(self, new_list: List) -> None:\n        \"\"\"Completely replace the existing queue with a new one\n        \"\"\"\n    def getlen(self) -> int:\n        \"\"\"Return the current queue's length\n        \"\"\"\n        return len(self.__values__)\n```\n\nDue to personal needs, 2 ready-use implementations with [Redis](https://github.com/vutran1710/PyrateLimiter/blob/master/pyrate_limiter/engines/redis.py) and [Application Local State](https://github.com/vutran1710/PyrateLimiter/blob/master/pyrate_limiter/engines/local.py) are provided.\n\nWhen designing a rate-limiting service that depends on a different type of data-store, like `Postgres` or `Mysql`,\nthe user can write their own AbstractBucket implementation that fits their needs.\n\n## Usage\n\n``` python\nfrom pyrate_limiter.core import TokenBucketLimiter, LeakyBucketLimiter\nfrom pyrate_limiter.engines.redis import RedisBucket\nfrom pyrate_limiter.engines.local import LocalBucket\nfrom pyrate_limiter.exceptions import BucketFullException\n\n# Init redis bucket\nbucket = RedisBucket('redis-url', hash='some-hash', key='some-key')\n\n# Create Limiter using Token-Bucket Algorithm\n# Maximum 10 items over 60 seconds\nlimiter = TokenBucketLimiter(bucket, capacity=10, window=60)\nlimiter.queue.config(key='change-key')\n# Process an item\ntry:\n    limiter.process('some-json-serializable-value')\n    print('Item allowed to pass through')\nexcept BucketFullException:\n    print('Bucket is full')\n    # do something\n\n\n\n# Similarly, using Leaky-Bucket Algorithm\nlimiter = LeakyBucketLimiter(bucket, capacity=5, window=6)\nlimiter.queue.config(key='change-key')\n# Process an item\ntry:\n    # For LeakyBucketLimiter using the similar process method, only\n    # different in naming...\n    limiter.append('some-json-serializable-value')\n    print('Item allowed to pass through')\nexcept BucketFullException:\n    print('Bucket is full')\n    # do something\n\n\n# If using LocalBucket, the instantiation is even simpler\nbucket = LocalBucket(initial_values=some_list_type_value)\n```\n\n\n## Understanding the Algorithms\n\n#### LeakyBucket with Sliding-Window Algorithm\nLeakyBucket with Sliding-Window Algorithm is a capped bucket of items. Every item expires after {window} time, making room for later items to go in.\n\nItem's expiring-rate is {window} time.\nUsing a simple timeline model, we can describe it as follow\n```\nTIME <<----------[===========WINDOW===========]--------------------------------<<\nREQS >>--- <req> ---- <req> ---- <req> ---- <req> ---- <req> ---- <req> ------->>\n```\n\n#### TokenBucket\nTokenBucket with Fixed-Window Algorithm can be described as multiple groups of Going-In-Items that do not exceed the Bucket Capacity running into the Bucket with fixed-intervals between groups.\n\nThe bucket's queue resets if the interval between 2 items is larger or equal to {window} time.\n\n```\n>>-- [x items] ----- (window) ------ [y items] ------ (window) ------ [z items] --->>\neg:  3reqs/3s         <5sec>          2reqs/1s         <5sec>          3reqs/3s\n```\n\n## Testing\nSimple as it should be, given you have [poetry](https://poetry.eustace.io/) installed...\n\n``` shell\n$ poetry run test\n```\n\nCICD flow is not currently set up since I dont have much time, but FYI, the `coverage` is decent enought IMO...\n\n``` shell\ntests/test_leaky_bucket.py::test_bucket_overloaded PASSED\ntests/test_leaky_bucket.py::test_bucket_cooldown PASSED\ntests/test_local_engine.py::test_invalid_initials PASSED\ntests/test_local_engine.py::test_leaky_bucket_overloaded PASSED\ntests/test_local_engine.py::test_leaky_bucket_cooldown PASSED\ntests/test_local_engine.py::test_token_bucket_overloaded PASSED\ntests/test_local_engine.py::test_token_bucket_cooldown PASSED\ntests/test_redis_engine.py::test_bucket_overloaded PASSED\ntests/test_redis_engine.py::test_bucket_cooldown PASSED\ntests/test_redis_engine.py::test_normalize_redis_value PASSED\ntests/test_redis_engine.py::test_token_bucket_overloaded PASSED\ntests/test_redis_engine.py::test_token_bucket_cooldown PASSED\ntests/test_token_bucket.py::test_bucket_overloaded PASSED\ntests/test_token_bucket.py::test_bucket_cooldown PASSED\n\n---------- coverage: platform darwin, python 3.7.5-final-0 -----------\nName                                Stmts   Miss  Cover\n-------------------------------------------------------\npyrate_limiter/__init__.py              1      0   100%\npyrate_limiter/basic_algorithm.py      45      0   100%\npyrate_limiter/core.py                 63      3    95%\npyrate_limiter/engines/local.py        14      0   100%\npyrate_limiter/engines/redis.py        33      1    97%\npyrate_limiter/exceptions.py            5      0   100%\n-------------------------------------------------------\nTOTAL                                 161      4    98%\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vutran1710/PyrateLimiter", "keywords": "rate,rate-limiter,rate_limiter,ratelimiter,leaky-bucket", "license": "MIT", "maintainer": "vutr", "maintainer_email": "me@vutr.io", "name": "pyrate-limiter", "package_url": "https://pypi.org/project/pyrate-limiter/", "platform": "", "project_url": "https://pypi.org/project/pyrate-limiter/", "project_urls": {"Homepage": "https://github.com/vutran1710/PyrateLimiter", "Repository": "https://github.com/vutran1710/PyrateLimiter"}, "release_url": "https://pypi.org/project/pyrate-limiter/1.1.0/", "requires_dist": null, "requires_python": ">=3.7,<4.0", "summary": "Python Rate-Limiter using Leaky-Bucket Algorimth Family", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img align=\"left\" height=\"120\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79baccd8b922b88a4ad34d3ab0c68c3e8978dfa2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f76757472616e313731302f5079726174654c696d697465722f6d61737465722f696d672f6c6f672e706e67\" width=\"95\">\n<h1>PyrateLimiter</h1>\n<p>The request rate limiter using Leaky-bucket algorithm</p>\n<p><a href=\"https://badge.fury.io/py/pyrate-limiter\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f9d185bb3be074cbe71db1b5d1f12013c4d7dc2/68747470733a2f2f62616467652e667572792e696f2f70792f7079726174652d6c696d697465722e737667\"></a>\n<a href=\"https://www.python.org/downloads/release/python-370/\" rel=\"nofollow\"><img alt=\"Python 3.7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99a5180f32db379110e9948c7de1aaf8f77bf2e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372d626c75652e737667\"></a>\n<a href=\"https://github.com/vutran1710/PyrateLimiter/graphs/commit-activity\" rel=\"nofollow\"><img alt=\"Maintenance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90bf1b2a4d99698c4dffbc494b9734690a777fec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696e7461696e65642533462d7965732d677265656e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyrate-limiter/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb7554d3f165ac5e7bc396a6fbc22d51a890512a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f616e7369636f6c6f72746167732e737667\"></a>\n<a href=\"http://hits.dwyl.io/vutran1710/PyrateLimiter\" rel=\"nofollow\"><img alt=\"HitCount\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b017bba52435dba7608d2b188c415fca57a97edb/687474703a2f2f686974732e6477796c2e696f2f76757472616e313731302f5079726174654c696d697465722e737667\"></a></p>\n<br>\n<h2>Introduction</h2>\n<p>This module can be used to apply rate-limit for API request, using <code>leaky-bucket</code> algorithm. User defines <code>window</code>\nduration and the limit of function calls within such interval.</p>\n<ul>\n<li>To hold the state of the Bucket, you can use <code>LocalBucket</code> as internal bucket.</li>\n<li>To use PyrateLimiter with <code>Redis</code>,  <code>redis-py</code> is required to be installed.</li>\n<li>It is also possible to use your own Bucket implementation, by extending <code>AbstractBucket</code> from <code>pyrate_limiter.core</code></li>\n</ul>\n<h2>Installation</h2>\n<p>Using pip/pipenv/poetry, whatever that works for your</p>\n<pre>$ pip install pyrate-limiter\n</pre>\n<h2>API</h2>\n<p>One of the most pleasing features of this lib is that it is meant to be very extensible. People's efforts to solve the rate-limiting\nproblem have so far led to the introduction of a few variations of the <strong>leaky-bucket</strong> algorithm. The idea behind this is project is that\nyou can extend the main core data-structure that powers every member of this algorithm family.</p>\n<h4>AbstractBucket</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyrate_limiter.core</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractBucket</span>\n</pre>\n<p>AbstractBucket is a python abstract class that provides the Interface for, well, a <code>queue</code>. The algorithms provided in\n<code>pyrate_limiter.core</code> all make use of this data-structure. A concrete implementation of this abstract class must includes 4\nmethods of the <em>bucket</em> instance.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">AbstractBucket</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"An abstract class for Bucket as Queue\"\"\"</span>\n\n    <span class=\"n\">__values__</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Add single item to the queue</span>\n<span class=\"sd\">        \"\"\"</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">values</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Return queue values</span>\n<span class=\"sd\">        \"\"\"</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Completely replace the existing queue with a new one</span>\n<span class=\"sd\">        \"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getlen</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Return the current queue's length</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__values__</span><span class=\"p\">)</span>\n</pre>\n<p>Due to personal needs, 2 ready-use implementations with <a href=\"https://github.com/vutran1710/PyrateLimiter/blob/master/pyrate_limiter/engines/redis.py\" rel=\"nofollow\">Redis</a> and <a href=\"https://github.com/vutran1710/PyrateLimiter/blob/master/pyrate_limiter/engines/local.py\" rel=\"nofollow\">Application Local State</a> are provided.</p>\n<p>When designing a rate-limiting service that depends on a different type of data-store, like <code>Postgres</code> or <code>Mysql</code>,\nthe user can write their own AbstractBucket implementation that fits their needs.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyrate_limiter.core</span> <span class=\"kn\">import</span> <span class=\"n\">TokenBucketLimiter</span><span class=\"p\">,</span> <span class=\"n\">LeakyBucketLimiter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyrate_limiter.engines.redis</span> <span class=\"kn\">import</span> <span class=\"n\">RedisBucket</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyrate_limiter.engines.local</span> <span class=\"kn\">import</span> <span class=\"n\">LocalBucket</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyrate_limiter.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">BucketFullException</span>\n\n<span class=\"c1\"># Init redis bucket</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">RedisBucket</span><span class=\"p\">(</span><span class=\"s1\">'redis-url'</span><span class=\"p\">,</span> <span class=\"nb\">hash</span><span class=\"o\">=</span><span class=\"s1\">'some-hash'</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'some-key'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create Limiter using Token-Bucket Algorithm</span>\n<span class=\"c1\"># Maximum 10 items over 60 seconds</span>\n<span class=\"n\">limiter</span> <span class=\"o\">=</span> <span class=\"n\">TokenBucketLimiter</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">capacity</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"n\">limiter</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'change-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Process an item</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">limiter</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"s1\">'some-json-serializable-value'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Item allowed to pass through'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">BucketFullException</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Bucket is full'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># do something</span>\n\n\n\n<span class=\"c1\"># Similarly, using Leaky-Bucket Algorithm</span>\n<span class=\"n\">limiter</span> <span class=\"o\">=</span> <span class=\"n\">LeakyBucketLimiter</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">capacity</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">limiter</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'change-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Process an item</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"c1\"># For LeakyBucketLimiter using the similar process method, only</span>\n    <span class=\"c1\"># different in naming...</span>\n    <span class=\"n\">limiter</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'some-json-serializable-value'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Item allowed to pass through'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">BucketFullException</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Bucket is full'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># do something</span>\n\n\n<span class=\"c1\"># If using LocalBucket, the instantiation is even simpler</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">LocalBucket</span><span class=\"p\">(</span><span class=\"n\">initial_values</span><span class=\"o\">=</span><span class=\"n\">some_list_type_value</span><span class=\"p\">)</span>\n</pre>\n<h2>Understanding the Algorithms</h2>\n<h4>LeakyBucket with Sliding-Window Algorithm</h4>\n<p>LeakyBucket with Sliding-Window Algorithm is a capped bucket of items. Every item expires after {window} time, making room for later items to go in.</p>\n<p>Item's expiring-rate is {window} time.\nUsing a simple timeline model, we can describe it as follow</p>\n<pre><code>TIME &lt;&lt;----------[===========WINDOW===========]--------------------------------&lt;&lt;\nREQS &gt;&gt;--- &lt;req&gt; ---- &lt;req&gt; ---- &lt;req&gt; ---- &lt;req&gt; ---- &lt;req&gt; ---- &lt;req&gt; -------&gt;&gt;\n</code></pre>\n<h4>TokenBucket</h4>\n<p>TokenBucket with Fixed-Window Algorithm can be described as multiple groups of Going-In-Items that do not exceed the Bucket Capacity running into the Bucket with fixed-intervals between groups.</p>\n<p>The bucket's queue resets if the interval between 2 items is larger or equal to {window} time.</p>\n<pre><code>&gt;&gt;-- [x items] ----- (window) ------ [y items] ------ (window) ------ [z items] ---&gt;&gt;\neg:  3reqs/3s         &lt;5sec&gt;          2reqs/1s         &lt;5sec&gt;          3reqs/3s\n</code></pre>\n<h2>Testing</h2>\n<p>Simple as it should be, given you have <a href=\"https://poetry.eustace.io/\" rel=\"nofollow\">poetry</a> installed...</p>\n<pre>$ poetry run <span class=\"nb\">test</span>\n</pre>\n<p>CICD flow is not currently set up since I dont have much time, but FYI, the <code>coverage</code> is decent enought IMO...</p>\n<pre>tests/test_leaky_bucket.py::test_bucket_overloaded PASSED\ntests/test_leaky_bucket.py::test_bucket_cooldown PASSED\ntests/test_local_engine.py::test_invalid_initials PASSED\ntests/test_local_engine.py::test_leaky_bucket_overloaded PASSED\ntests/test_local_engine.py::test_leaky_bucket_cooldown PASSED\ntests/test_local_engine.py::test_token_bucket_overloaded PASSED\ntests/test_local_engine.py::test_token_bucket_cooldown PASSED\ntests/test_redis_engine.py::test_bucket_overloaded PASSED\ntests/test_redis_engine.py::test_bucket_cooldown PASSED\ntests/test_redis_engine.py::test_normalize_redis_value PASSED\ntests/test_redis_engine.py::test_token_bucket_overloaded PASSED\ntests/test_redis_engine.py::test_token_bucket_cooldown PASSED\ntests/test_token_bucket.py::test_bucket_overloaded PASSED\ntests/test_token_bucket.py::test_bucket_cooldown PASSED\n\n---------- coverage: platform darwin, python <span class=\"m\">3</span>.7.5-final-0 -----------\nName                                Stmts   Miss  Cover\n-------------------------------------------------------\npyrate_limiter/__init__.py              <span class=\"m\">1</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\npyrate_limiter/basic_algorithm.py      <span class=\"m\">45</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\npyrate_limiter/core.py                 <span class=\"m\">63</span>      <span class=\"m\">3</span>    <span class=\"m\">95</span>%\npyrate_limiter/engines/local.py        <span class=\"m\">14</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\npyrate_limiter/engines/redis.py        <span class=\"m\">33</span>      <span class=\"m\">1</span>    <span class=\"m\">97</span>%\npyrate_limiter/exceptions.py            <span class=\"m\">5</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\n-------------------------------------------------------\nTOTAL                                 <span class=\"m\">161</span>      <span class=\"m\">4</span>    <span class=\"m\">98</span>%\n</pre>\n\n          </div>"}, "last_serial": 6317898, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "75d263ec3e7e92c2786c36faf8bdca78", "sha256": "ccc510d65f960b4a0eaeab0046f7618bdb6adb4e39b398477bb44b839c72f069"}, "downloads": -1, "filename": "pyrate_limiter-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "75d263ec3e7e92c2786c36faf8bdca78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 4218, "upload_time": "2019-11-25T07:18:13", "upload_time_iso_8601": "2019-11-25T07:18:13.877261Z", "url": "https://files.pythonhosted.org/packages/f2/b9/79e2575c3e0c9c5734a6dbeff6b9c1bb85e8c524f87a9d109e02b6ee641d/pyrate_limiter-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5b72a3e82982da587a1ce0876f6a508", "sha256": "d98a5b8ffd41841caf647dcb138e32782c2c36d6a11ad9cbfacbcffa84eb0ace"}, "downloads": -1, "filename": "pyrate-limiter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a5b72a3e82982da587a1ce0876f6a508", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 3076, "upload_time": "2019-11-25T07:18:11", "upload_time_iso_8601": "2019-11-25T07:18:11.680702Z", "url": "https://files.pythonhosted.org/packages/34/1a/530ee95ed820dd11d15e53b4c0f6657b7a205d21e40d901b4f374251da45/pyrate-limiter-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "89623cb30e5aada69382c2f2e75b5b81", "sha256": "d78dcab3ada04708be3b9934d15d23392194e9c9eb7b0c71597d433252d89dfa"}, "downloads": -1, "filename": "pyrate_limiter-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "89623cb30e5aada69382c2f2e75b5b81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6094, "upload_time": "2019-11-25T14:53:28", "upload_time_iso_8601": "2019-11-25T14:53:28.894745Z", "url": "https://files.pythonhosted.org/packages/67/1a/3fc12b12a20d7b8d4f6ff2a5cb26fe85877e9fed94b8f3b6835ab3e4ad68/pyrate_limiter-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5403fff60c738e16b93b6470787f986", "sha256": "55b1c530286833a95d6e0c79de2a4452be34e5935bbe8dd4b87d5e13451a599f"}, "downloads": -1, "filename": "pyrate-limiter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c5403fff60c738e16b93b6470787f986", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5124, "upload_time": "2019-11-25T14:53:26", "upload_time_iso_8601": "2019-11-25T14:53:26.947075Z", "url": "https://files.pythonhosted.org/packages/f1/b0/07aa537b42468d3be94c9ab5e8985d7153d618b38473215493153cfbf9df/pyrate-limiter-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "13da39529834b0c4565a3426c64f2ec7", "sha256": "1236d8b5aaa0e89faadf673114a4aee9627725134d5450b9835e9d483b48f815"}, "downloads": -1, "filename": "pyrate_limiter-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "13da39529834b0c4565a3426c64f2ec7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7558, "upload_time": "2019-11-27T09:48:33", "upload_time_iso_8601": "2019-11-27T09:48:33.620027Z", "url": "https://files.pythonhosted.org/packages/63/55/e0a53874800a313c621cf366b1b10fa858edb9cc1d651496441c37fd4a40/pyrate_limiter-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6adc28bc2219889788c7b9bc91df1304", "sha256": "299fe59c557fedec1c4ede3ddd13bf048ecb8683bfe62c2167a218b33f3d4d9b"}, "downloads": -1, "filename": "pyrate-limiter-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6adc28bc2219889788c7b9bc91df1304", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6917, "upload_time": "2019-11-27T09:48:31", "upload_time_iso_8601": "2019-11-27T09:48:31.619219Z", "url": "https://files.pythonhosted.org/packages/3d/42/f48f013bdb7f4c502a014a8e486bf18b9315915651e4b491512066a54749/pyrate-limiter-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "006bad313ef144e046ce0b45553af9e0", "sha256": "474159e2d3b1109a6bf70eed32988f9e0b222a418bd082772ec5b7cdef4e8937"}, "downloads": -1, "filename": "pyrate_limiter-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "006bad313ef144e046ce0b45553af9e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7020, "upload_time": "2019-12-17T14:07:38", "upload_time_iso_8601": "2019-12-17T14:07:38.286794Z", "url": "https://files.pythonhosted.org/packages/43/f2/ec2d3ee50fafedd5d9bc3c8e4b51f5ade6af30c78847c5231bc1ea5ecfa1/pyrate_limiter-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c812b81a0687b7ef144aea522b86f4c7", "sha256": "268bbf087c6d0cf952d69628d54811efb11d69ab936f64afdcdc44f653fd0262"}, "downloads": -1, "filename": "pyrate-limiter-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c812b81a0687b7ef144aea522b86f4c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6334, "upload_time": "2019-12-17T14:07:36", "upload_time_iso_8601": "2019-12-17T14:07:36.647079Z", "url": "https://files.pythonhosted.org/packages/29/2a/7428fdf8d1327478cb7ec44afc8a4349fdb322708e5f381a663eed21de42/pyrate-limiter-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "006bad313ef144e046ce0b45553af9e0", "sha256": "474159e2d3b1109a6bf70eed32988f9e0b222a418bd082772ec5b7cdef4e8937"}, "downloads": -1, "filename": "pyrate_limiter-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "006bad313ef144e046ce0b45553af9e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7020, "upload_time": "2019-12-17T14:07:38", "upload_time_iso_8601": "2019-12-17T14:07:38.286794Z", "url": "https://files.pythonhosted.org/packages/43/f2/ec2d3ee50fafedd5d9bc3c8e4b51f5ade6af30c78847c5231bc1ea5ecfa1/pyrate_limiter-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c812b81a0687b7ef144aea522b86f4c7", "sha256": "268bbf087c6d0cf952d69628d54811efb11d69ab936f64afdcdc44f653fd0262"}, "downloads": -1, "filename": "pyrate-limiter-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c812b81a0687b7ef144aea522b86f4c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6334, "upload_time": "2019-12-17T14:07:36", "upload_time_iso_8601": "2019-12-17T14:07:36.647079Z", "url": "https://files.pythonhosted.org/packages/29/2a/7428fdf8d1327478cb7ec44afc8a4349fdb322708e5f381a663eed21de42/pyrate-limiter-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:05 2020"}