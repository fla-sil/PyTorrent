{"info": {"author": "Zegami", "author_email": "help@zegami.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: User Interfaces"], "description": "# zegami-cli\nA Command Line Interface for [Zegami](https://www.zegami.com).\n\nZegami is a visual data exploration tool that makes the analysis of large collections of image rich information quick and simple.\n\nThe Zegami cli relies on a combination of yaml files and arguments.\n\nThe first step is to create a collection\n\n# Installation\n```\npip3 install zegami-cli[sql]\n```\n\n# Commands\n\n## Login\nThe login command promtps for username and password which is then used to retrieve a long-lived API token which can be used for subsequent requests. The token is stored in a file in the currenet users data directory.\nOnce retrieved all subsequent commands will use the stored token, unless it is specifically overridden with the `--token` option\n```\nzeg login\n```\n\n## Get a collection\nGet the details of a collection.\nIf the `collection id` is excluded then all collections will be listed.\n```\nzeg get collections [collection id] --project [Project Id] --token [API token]\n```\n\n## Create a collection\nCreate a collection using a combined dataset and imageset config.\n```\nzeg create collections --project [Project Id] --token [API token] --url [Server url] --config [path to configuration yaml]\n```\nThe following config properties are supported for file based imageset and datasets.\n\n```\n# The name of the collection\nname: file based\ndescription: an example collection with a file based imageset and dataset\n# The type of data set. For now this needs to be set to 'file'\ndataset_type: file\n# Config for the file data set type\nimageset_type: file\n# Config for the file image set type\nfile_config:\n# Path to the dataset file\n    path:\n# A collection of paths to image files. Paths can be to both images and directories\n    paths:\n        - an_image.jpg\n        - a/directory/path\n# Name of the column in the dataset that contains the image name\ndataset_column: image_name\n```\n\nIf you are creating a url based imageset with a data file use these properties.\n\nThe dataset_column property is used to set the column where the url is stored. You will need to include the full image url e.g. https://zegami.com/wp-content/uploads/2018/01/weatherall.svg\n\n```\n# The name of the collection\nname: url based\n# The description of the collection\ndescription: an example collection with a file based dataset where images are to be downloaded from urls\n# The type of image set. for now this needs to be set to 'url'\nimageset_type: url\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n# Url pattern - python format string where {} is the name of the image name (from data file)\nurl_template: https://example.com/images/{}?accesscode=abc3e20423423497\ndataset_type: file\n# Config for the file data set type\nfile_config:\n# Path to the dataset file\n    path:\n```\n\nIf you are creating an imageset on Azure from a private azure bucket with a local file do as follows:\n\n```\n# The name of the collection\nname: azure bucket based\n# The description of the collection\ndescription: an example collection with a file based dataset where images are to be downloaded from an azure bucket\ndataset_type: file\n# Config for the file data set type\nfile_config:\n# Path to the dataset file\n    path:\n# The type of image set. for now this needs to be set to 'url'\nimageset_type: azure_storage_container\n# Name of the container\ncontainer_name: my_azure_blobs\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n\n# Note that the storage account connection string should also be made available via environment variable AZURE_STORAGE_CONNECTION_STRING\n```\n\nIf you are using SQL data see below for config\n\n## Update a collection\nUpdate a collection - *coming soon*.\n\n## Delete a collection\nDelete a collection\n```\nzeg delete collections [collection id] --project [Project Id] --token [API token]\n```\n\n## Publish a collection\n```\nzeg publish collection [collection id] --project [Project Id] --config [path to configuration yaml] --token [API token]\n```\n\nThe config `yaml` file is used to specify additional configuration for the collection publish.\n```\n# The type of update. For now this needs to be set to 'publish'\nupdate_type: publish\n# Config for the publish update type\npublish_config:\n# Flag to indicate if the collection should be published or unpublished\n    publish: true\n# The id of the project to publish to\n    destination_project: public\n```\n\n## Get a data set\nGet a data set\n```\nzeg get dataset [dataset id] --project [Project Id] --token [API token]\n```\n\n\n## Update a data set\nUpdate an existing data set with new data.\n\nNote that when using against a collection the dataset id used should be the upload_dataset_id. This is different from the below imageset update which requires the dataset identifier known as dataset_id from the collection.\n```\nzeg update dataset [dataset id] --project [Project Id] --config [path to configuration yaml] --token [API token]\n```\n\nThe config `yaml` file is used to specify additional configuration for the data set update. There are *two* supported `dataset_type` supported.\n\n### File\nThe `file` type is used to update a data set with a file. It can be set up to either specify the fully qualified path to a `.csv.`, `.tsv` or `.xlsx` file to upload using the `path` property *or* the `directory` property can be used to upload the latest file in a directory location.\n```\n# The type of data set. For now this needs to be set to 'file'\ndataset_type: file\n# Config for the file data set type\nfile_config:\n# Path to the dataset file\n    path:\n# Or path to a directory that contains data files.\n# Only the latest file that matches the accepted extensions (.csv, .tsv, .xlsx)\n# will be uploaded. This is useful for creating collections based on\n# automated exports from a system, like log files.\n    directory:\n```\n\n### SQL\nThe `sql` type is used to update a data set based on an `SQL` query.\nUses SQLAlchemy to connect to the database. See http://docs.sqlalchemy.org/en/latest/core/engines.html and https://www.connectionstrings.com/ for the correct connection string format.\n\n```\n# The type of data set. For now this needs to be set to 'file'\ndataset_type: sql\n# Config for the sql data set type\nsql_config:\n# The connection string.\n    connection:\n# SQL query\n    query:\n```\n\n### PostgreSQL - tested on Linux and windows, up to Python v3.7\nPre-requisites :\n\n1. Standard requirements - code editor, pip package manager, python 3.7.\n\n2. Make sure Zegami CLI latest is installed \n```\npip install zegami-cli[sql] --upgrade --no-cache-dir\n```\n_Note: --no-cache-dir avoids some errors upon install_\n\nTest the install with the login command, which prompts for username and password. This is then used to retrieve a long-lived API token which can be used for subsequent requests. The token is stored in a file in the current users data directory.\nOnce retrieved all subsequent commands will use the stored token, unless it is specifically overridden with the `--token` option\n```\nzeg login\n```\n\n3. Install pre-requirements for PostgreSQL connection\n\nPsycopg2 - https://pypi.org/project/psycopg2/ , http://initd.org/psycopg/\n```\npip install python-psycopg2\n```\n\n_libpq-dev was required for linux, not windows_\nlibpq-dev - https://pypi.org/project/libpq-dev/ , https://github.com/ncbi/python-libpq-dev\n```\nsudo apt-get install libpq-dev\n```\n\nOnce these are installed you will need to create a YAML file with the correct connection strings.\n\n*Connection String Example:*\n```\n# The type of data set. For now this needs to be set to 'file'\ndataset_type: sql\n# Config for the sql data set type\nsql_config: \n# The connection string.\n    connection: \"postgresql://postgres:myPassword@localhost:5432/postgres?sslmode=disable\" \n# SQL query\n    query: select * from XYZ\n```\n_Note: Connections strings must have indentation by \"connection\" and \"query\"_\n\nIf you have already created a collection we can run the update command as above \ne.g. zeg update dataset upload_dataset_id --project projectID --config root/psqlconstring.yaml \n\nIf successful the following message will appear: \n```\n=========================================\nupdate dataset with result:\n-----------------------------------------\nid: datasetID\nname: Schema dataset for postgresql test\nsource:\n  blob_id: blobID\n  dataset_id: datasetID\n  upload:\n    name: zeg-datasetiop9cbtn.csv\n\n=========================================\n```\n\nUseful links:\nhttps://www.npgsql.org/doc/connection-string-parameters.html\nhttps://www.connectionstrings.com/postgresql/ (Standard)\nhttps://docs.sqlalchemy.org/en/13/core/engines.html#postgresql (Specifies pre-reqs for connection)\n\n\n\n\n## Delete a data set\nDelete a data set - *coming soon*.\n```\nzeg delete dataset [dataset id] --project [Project Id] --token [API token]\n```\n\n## Get an image set\nGet an image set - *coming soon*.\n```\nzeg get imageset [imageset id] --project [Project Id] --token [API token]\n```\n\n## Update an image set\nUpdate an image set with new images.\n```\nzeg update imageset [imageset id] --project [Project Id] --config [path to configuration yaml] --token [API token]\n```\n\nThe config `yaml` file is used to specify additional configuration for the image set update.\n\n### File imageset\n\nThe `paths` property is used to specify the location of images to upload and can include both images and directories.\n\n\n```\n# The type of image set. for now this needs to be set to 'file'\nimageset_type: file\n# Config for the file image set type\nfile_config:\n# A collection of paths. Paths can be to both images and directories\n    paths:\n        - an_image.jpg\n        - a/directory/path\n# Unique identifier of the collection\ncollection_id: 5ad3a99b75f3b30001732f36\n# Unique identifier of the collection data set (get this from dataset_id)\ndataset_id: 5ad3a99b75f3b30001732f36\n# Name of the column in the dataset that contains the image name\ndataset_column: image_name\n```\n\n### URL imageset\n\nThe dataset_column property is used to set the column where the url is stored. You will need to include the full image url e.g. https://zegami.com/wp-content/uploads/2018/01/weatherall.svg\n\n```\n# The type of image set. for now this needs to be set to 'url'\nimageset_type: url\n# Unique identifier of the collection\ncollection_id: 5ad3a99b75f3b30001732f36\n# Unique identifier of the collection data set\ndataset_id: 5ad3a99b75f3b30001732f36\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n# Url pattern - python format string where {} is the name of the image name (from data file)\nurl_template: https://example.com/images/{}?accesscode=abc3e20423423497\n```\n\n### Azure storage imageset\n\n```\n# The type of image set.\nimageset_type: azure_storage_container\n# Name of the container\ncontainer_name: my_azure_blobs\n# Unique identifier of the collection\ncollection_id: 5ad3a99b75f3b30001732f36\n# Unique identifier of the collection data set\ndataset_id: 5ad3a99b75f3b30001732f36\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n\n# Note that the storage account connection string should also be made available via environment variable AZURE_STORAGE_CONNECTION_STRING\n```\n\n## Delete an image set\nDelete an image set - *coming soon*.\n```\nzeg delete imageset [imageset id] --project [Project Id] --token [API token]\n```\n\n\n# Developer\n\n## Tests\nSetup tests:\n```\npip install -r requirements/test.txt\n```\n\nRun tests:\n```\npython3 -m unittest discover .\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zegami/zegami-cli", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "zegami-cli", "package_url": "https://pypi.org/project/zegami-cli/", "platform": "", "project_url": "https://pypi.org/project/zegami-cli/", "project_urls": {"Bug Reports": "https://github.com/zegami/zegami-cli/issues", "Homepage": "https://github.com/zegami/zegami-cli", "Zegami": "https://zegami.com"}, "release_url": "https://pypi.org/project/zegami-cli/1.1.7/", "requires_dist": ["appdirs (==1.4.3)", "azure-storage-blob (==12.3.0)", "colorama (==0.4.3)", "jsonschema (==3.2.0)", "PyYaml (==5.3.1)", "requests (<3.0,>=2.15.0)", "tqdm (==4.43.0)", "pyodbc (==4.0.30) ; extra == 'sql'", "SQLAlchemy (==1.3.15) ; extra == 'sql'"], "requires_python": "", "summary": "Command Line Interface for Zegami", "version": "1.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>zegami-cli</h1>\n<p>A Command Line Interface for <a href=\"https://www.zegami.com\" rel=\"nofollow\">Zegami</a>.</p>\n<p>Zegami is a visual data exploration tool that makes the analysis of large collections of image rich information quick and simple.</p>\n<p>The Zegami cli relies on a combination of yaml files and arguments.</p>\n<p>The first step is to create a collection</p>\n<h1>Installation</h1>\n<pre><code>pip3 install zegami-cli[sql]\n</code></pre>\n<h1>Commands</h1>\n<h2>Login</h2>\n<p>The login command promtps for username and password which is then used to retrieve a long-lived API token which can be used for subsequent requests. The token is stored in a file in the currenet users data directory.\nOnce retrieved all subsequent commands will use the stored token, unless it is specifically overridden with the <code>--token</code> option</p>\n<pre><code>zeg login\n</code></pre>\n<h2>Get a collection</h2>\n<p>Get the details of a collection.\nIf the <code>collection id</code> is excluded then all collections will be listed.</p>\n<pre><code>zeg get collections [collection id] --project [Project Id] --token [API token]\n</code></pre>\n<h2>Create a collection</h2>\n<p>Create a collection using a combined dataset and imageset config.</p>\n<pre><code>zeg create collections --project [Project Id] --token [API token] --url [Server url] --config [path to configuration yaml]\n</code></pre>\n<p>The following config properties are supported for file based imageset and datasets.</p>\n<pre><code># The name of the collection\nname: file based\ndescription: an example collection with a file based imageset and dataset\n# The type of data set. For now this needs to be set to 'file'\ndataset_type: file\n# Config for the file data set type\nimageset_type: file\n# Config for the file image set type\nfile_config:\n# Path to the dataset file\n    path:\n# A collection of paths to image files. Paths can be to both images and directories\n    paths:\n        - an_image.jpg\n        - a/directory/path\n# Name of the column in the dataset that contains the image name\ndataset_column: image_name\n</code></pre>\n<p>If you are creating a url based imageset with a data file use these properties.</p>\n<p>The dataset_column property is used to set the column where the url is stored. You will need to include the full image url e.g. <a href=\"https://zegami.com/wp-content/uploads/2018/01/weatherall.svg\" rel=\"nofollow\">https://zegami.com/wp-content/uploads/2018/01/weatherall.svg</a></p>\n<pre><code># The name of the collection\nname: url based\n# The description of the collection\ndescription: an example collection with a file based dataset where images are to be downloaded from urls\n# The type of image set. for now this needs to be set to 'url'\nimageset_type: url\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n# Url pattern - python format string where {} is the name of the image name (from data file)\nurl_template: https://example.com/images/{}?accesscode=abc3e20423423497\ndataset_type: file\n# Config for the file data set type\nfile_config:\n# Path to the dataset file\n    path:\n</code></pre>\n<p>If you are creating an imageset on Azure from a private azure bucket with a local file do as follows:</p>\n<pre><code># The name of the collection\nname: azure bucket based\n# The description of the collection\ndescription: an example collection with a file based dataset where images are to be downloaded from an azure bucket\ndataset_type: file\n# Config for the file data set type\nfile_config:\n# Path to the dataset file\n    path:\n# The type of image set. for now this needs to be set to 'url'\nimageset_type: azure_storage_container\n# Name of the container\ncontainer_name: my_azure_blobs\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n\n# Note that the storage account connection string should also be made available via environment variable AZURE_STORAGE_CONNECTION_STRING\n</code></pre>\n<p>If you are using SQL data see below for config</p>\n<h2>Update a collection</h2>\n<p>Update a collection - <em>coming soon</em>.</p>\n<h2>Delete a collection</h2>\n<p>Delete a collection</p>\n<pre><code>zeg delete collections [collection id] --project [Project Id] --token [API token]\n</code></pre>\n<h2>Publish a collection</h2>\n<pre><code>zeg publish collection [collection id] --project [Project Id] --config [path to configuration yaml] --token [API token]\n</code></pre>\n<p>The config <code>yaml</code> file is used to specify additional configuration for the collection publish.</p>\n<pre><code># The type of update. For now this needs to be set to 'publish'\nupdate_type: publish\n# Config for the publish update type\npublish_config:\n# Flag to indicate if the collection should be published or unpublished\n    publish: true\n# The id of the project to publish to\n    destination_project: public\n</code></pre>\n<h2>Get a data set</h2>\n<p>Get a data set</p>\n<pre><code>zeg get dataset [dataset id] --project [Project Id] --token [API token]\n</code></pre>\n<h2>Update a data set</h2>\n<p>Update an existing data set with new data.</p>\n<p>Note that when using against a collection the dataset id used should be the upload_dataset_id. This is different from the below imageset update which requires the dataset identifier known as dataset_id from the collection.</p>\n<pre><code>zeg update dataset [dataset id] --project [Project Id] --config [path to configuration yaml] --token [API token]\n</code></pre>\n<p>The config <code>yaml</code> file is used to specify additional configuration for the data set update. There are <em>two</em> supported <code>dataset_type</code> supported.</p>\n<h3>File</h3>\n<p>The <code>file</code> type is used to update a data set with a file. It can be set up to either specify the fully qualified path to a <code>.csv.</code>, <code>.tsv</code> or <code>.xlsx</code> file to upload using the <code>path</code> property <em>or</em> the <code>directory</code> property can be used to upload the latest file in a directory location.</p>\n<pre><code># The type of data set. For now this needs to be set to 'file'\ndataset_type: file\n# Config for the file data set type\nfile_config:\n# Path to the dataset file\n    path:\n# Or path to a directory that contains data files.\n# Only the latest file that matches the accepted extensions (.csv, .tsv, .xlsx)\n# will be uploaded. This is useful for creating collections based on\n# automated exports from a system, like log files.\n    directory:\n</code></pre>\n<h3>SQL</h3>\n<p>The <code>sql</code> type is used to update a data set based on an <code>SQL</code> query.\nUses SQLAlchemy to connect to the database. See <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html\" rel=\"nofollow\">http://docs.sqlalchemy.org/en/latest/core/engines.html</a> and <a href=\"https://www.connectionstrings.com/\" rel=\"nofollow\">https://www.connectionstrings.com/</a> for the correct connection string format.</p>\n<pre><code># The type of data set. For now this needs to be set to 'file'\ndataset_type: sql\n# Config for the sql data set type\nsql_config:\n# The connection string.\n    connection:\n# SQL query\n    query:\n</code></pre>\n<h3>PostgreSQL - tested on Linux and windows, up to Python v3.7</h3>\n<p>Pre-requisites :</p>\n<ol>\n<li>\n<p>Standard requirements - code editor, pip package manager, python 3.7.</p>\n</li>\n<li>\n<p>Make sure Zegami CLI latest is installed</p>\n</li>\n</ol>\n<pre><code>pip install zegami-cli[sql] --upgrade --no-cache-dir\n</code></pre>\n<p><em>Note: --no-cache-dir avoids some errors upon install</em></p>\n<p>Test the install with the login command, which prompts for username and password. This is then used to retrieve a long-lived API token which can be used for subsequent requests. The token is stored in a file in the current users data directory.\nOnce retrieved all subsequent commands will use the stored token, unless it is specifically overridden with the <code>--token</code> option</p>\n<pre><code>zeg login\n</code></pre>\n<ol>\n<li>Install pre-requirements for PostgreSQL connection</li>\n</ol>\n<p>Psycopg2 - <a href=\"https://pypi.org/project/psycopg2/\" rel=\"nofollow\">https://pypi.org/project/psycopg2/</a> , <a href=\"http://initd.org/psycopg/\" rel=\"nofollow\">http://initd.org/psycopg/</a></p>\n<pre><code>pip install python-psycopg2\n</code></pre>\n<p><em>libpq-dev was required for linux, not windows</em>\nlibpq-dev - <a href=\"https://pypi.org/project/libpq-dev/\" rel=\"nofollow\">https://pypi.org/project/libpq-dev/</a> , <a href=\"https://github.com/ncbi/python-libpq-dev\" rel=\"nofollow\">https://github.com/ncbi/python-libpq-dev</a></p>\n<pre><code>sudo apt-get install libpq-dev\n</code></pre>\n<p>Once these are installed you will need to create a YAML file with the correct connection strings.</p>\n<p><em>Connection String Example:</em></p>\n<pre><code># The type of data set. For now this needs to be set to 'file'\ndataset_type: sql\n# Config for the sql data set type\nsql_config: \n# The connection string.\n    connection: \"postgresql://postgres:myPassword@localhost:5432/postgres?sslmode=disable\" \n# SQL query\n    query: select * from XYZ\n</code></pre>\n<p><em>Note: Connections strings must have indentation by \"connection\" and \"query\"</em></p>\n<p>If you have already created a collection we can run the update command as above\ne.g. zeg update dataset upload_dataset_id --project projectID --config root/psqlconstring.yaml</p>\n<p>If successful the following message will appear:</p>\n<pre><code>=========================================\nupdate dataset with result:\n-----------------------------------------\nid: datasetID\nname: Schema dataset for postgresql test\nsource:\n  blob_id: blobID\n  dataset_id: datasetID\n  upload:\n    name: zeg-datasetiop9cbtn.csv\n\n=========================================\n</code></pre>\n<p>Useful links:\n<a href=\"https://www.npgsql.org/doc/connection-string-parameters.html\" rel=\"nofollow\">https://www.npgsql.org/doc/connection-string-parameters.html</a>\n<a href=\"https://www.connectionstrings.com/postgresql/\" rel=\"nofollow\">https://www.connectionstrings.com/postgresql/</a> (Standard)\n<a href=\"https://docs.sqlalchemy.org/en/13/core/engines.html#postgresql\" rel=\"nofollow\">https://docs.sqlalchemy.org/en/13/core/engines.html#postgresql</a> (Specifies pre-reqs for connection)</p>\n<h2>Delete a data set</h2>\n<p>Delete a data set - <em>coming soon</em>.</p>\n<pre><code>zeg delete dataset [dataset id] --project [Project Id] --token [API token]\n</code></pre>\n<h2>Get an image set</h2>\n<p>Get an image set - <em>coming soon</em>.</p>\n<pre><code>zeg get imageset [imageset id] --project [Project Id] --token [API token]\n</code></pre>\n<h2>Update an image set</h2>\n<p>Update an image set with new images.</p>\n<pre><code>zeg update imageset [imageset id] --project [Project Id] --config [path to configuration yaml] --token [API token]\n</code></pre>\n<p>The config <code>yaml</code> file is used to specify additional configuration for the image set update.</p>\n<h3>File imageset</h3>\n<p>The <code>paths</code> property is used to specify the location of images to upload and can include both images and directories.</p>\n<pre><code># The type of image set. for now this needs to be set to 'file'\nimageset_type: file\n# Config for the file image set type\nfile_config:\n# A collection of paths. Paths can be to both images and directories\n    paths:\n        - an_image.jpg\n        - a/directory/path\n# Unique identifier of the collection\ncollection_id: 5ad3a99b75f3b30001732f36\n# Unique identifier of the collection data set (get this from dataset_id)\ndataset_id: 5ad3a99b75f3b30001732f36\n# Name of the column in the dataset that contains the image name\ndataset_column: image_name\n</code></pre>\n<h3>URL imageset</h3>\n<p>The dataset_column property is used to set the column where the url is stored. You will need to include the full image url e.g. <a href=\"https://zegami.com/wp-content/uploads/2018/01/weatherall.svg\" rel=\"nofollow\">https://zegami.com/wp-content/uploads/2018/01/weatherall.svg</a></p>\n<pre><code># The type of image set. for now this needs to be set to 'url'\nimageset_type: url\n# Unique identifier of the collection\ncollection_id: 5ad3a99b75f3b30001732f36\n# Unique identifier of the collection data set\ndataset_id: 5ad3a99b75f3b30001732f36\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n# Url pattern - python format string where {} is the name of the image name (from data file)\nurl_template: https://example.com/images/{}?accesscode=abc3e20423423497\n</code></pre>\n<h3>Azure storage imageset</h3>\n<pre><code># The type of image set.\nimageset_type: azure_storage_container\n# Name of the container\ncontainer_name: my_azure_blobs\n# Unique identifier of the collection\ncollection_id: 5ad3a99b75f3b30001732f36\n# Unique identifier of the collection data set\ndataset_id: 5ad3a99b75f3b30001732f36\n# Name of the column in the dataset that contains the image url\ndataset_column: image_name\n\n# Note that the storage account connection string should also be made available via environment variable AZURE_STORAGE_CONNECTION_STRING\n</code></pre>\n<h2>Delete an image set</h2>\n<p>Delete an image set - <em>coming soon</em>.</p>\n<pre><code>zeg delete imageset [imageset id] --project [Project Id] --token [API token]\n</code></pre>\n<h1>Developer</h1>\n<h2>Tests</h2>\n<p>Setup tests:</p>\n<pre><code>pip install -r requirements/test.txt\n</code></pre>\n<p>Run tests:</p>\n<pre><code>python3 -m unittest discover .\n</code></pre>\n\n          </div>"}, "last_serial": 7190350, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "467c59bfc621cbe2f020145753304832", "sha256": "74d5523f59de87c7c859258249776230131ac3df63edcd4bdc231ebffb928c2a"}, "downloads": -1, "filename": "zegami_cli-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "467c59bfc621cbe2f020145753304832", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9439, "upload_time": "2018-04-03T20:03:01", "upload_time_iso_8601": "2018-04-03T20:03:01.897165Z", "url": "https://files.pythonhosted.org/packages/fd/fe/9cf57be9437eb4e952dde6a577afe54940cc32c6221fb8dc9d8a0d383639/zegami_cli-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fa5d55b6caacab5982ad94ffb072f54", "sha256": "92f75c79e6d291038650d6aea3d11df5707d13b6304deac667df7e61264cdad7"}, "downloads": -1, "filename": "zegami-cli-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7fa5d55b6caacab5982ad94ffb072f54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6190, "upload_time": "2018-04-03T20:03:02", "upload_time_iso_8601": "2018-04-03T20:03:02.964055Z", "url": "https://files.pythonhosted.org/packages/d1/35/0172aad0c2c6f387364f1b338a5af38f48639314fe61291f8ff7fa6796fd/zegami-cli-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "647f2524e4a3268ea326d16f532cbac8", "sha256": "054b4ca338d1d6266a4513019ab58fe848733b5f57bdef33d48e446dc95d38c4"}, "downloads": -1, "filename": "zegami_cli-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "647f2524e4a3268ea326d16f532cbac8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14068, "upload_time": "2018-05-24T09:09:38", "upload_time_iso_8601": "2018-05-24T09:09:38.014763Z", "url": "https://files.pythonhosted.org/packages/10/fe/c0099b9407dd39cc3b42dc4d3fbf66ef7a045e4f822e8042bcec7ca25c94/zegami_cli-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f271d0bb5e3b42050e656034e036e4d", "sha256": "bab3d2880c880236104f982ba30248c77e6e1439a1cf73e38cf77ebdfc512f9c"}, "downloads": -1, "filename": "zegami-cli-0.10.0.tar.gz", "has_sig": false, "md5_digest": "2f271d0bb5e3b42050e656034e036e4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16646, "upload_time": "2018-05-24T09:09:39", "upload_time_iso_8601": "2018-05-24T09:09:39.999905Z", "url": "https://files.pythonhosted.org/packages/07/d0/ec2014dabc1fd82585ee1f491a3137c889fa6f8cf5b90ad647f5fff379cd/zegami-cli-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "6a4ad4447a445cb3578ae4491b7dacf1", "sha256": "6cc8320d69206cd226ab8641b079b8797a49a22d5dd3d183bdde82ff6b6fc3a9"}, "downloads": -1, "filename": "zegami_cli-0.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a4ad4447a445cb3578ae4491b7dacf1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14061, "upload_time": "2018-06-17T10:41:18", "upload_time_iso_8601": "2018-06-17T10:41:18.699437Z", "url": "https://files.pythonhosted.org/packages/78/13/db56c5e59c16e1241a4d57f036b05dbbf68c649df7830c0b0d12f6178b46/zegami_cli-0.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0289594abc5d73c8dfa7eef3d86bfc82", "sha256": "e7f65fb87ad75e97916550ad8bc1073ae6faf250bfc982263fd01cf566d921be"}, "downloads": -1, "filename": "zegami-cli-0.11.0.tar.gz", "has_sig": false, "md5_digest": "0289594abc5d73c8dfa7eef3d86bfc82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16656, "upload_time": "2018-06-17T10:41:21", "upload_time_iso_8601": "2018-06-17T10:41:21.541017Z", "url": "https://files.pythonhosted.org/packages/20/1b/629fa049e994f06ecd09495dbcb7abc6484d42a63515b712d1910660eaa2/zegami-cli-0.11.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "4ef8c149a63c5e1f3e3af2f9b2cb64f2", "sha256": "a604d379cb81f54a5f0ee2ba50647605b5eee6ba88b52820c83035d6f022270b"}, "downloads": -1, "filename": "zegami_cli-0.11.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4ef8c149a63c5e1f3e3af2f9b2cb64f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14059, "upload_time": "2018-09-10T12:17:19", "upload_time_iso_8601": "2018-09-10T12:17:19.326104Z", "url": "https://files.pythonhosted.org/packages/54/76/1dd836801f57ee5fe4324f502f268f5a22acb02e8bced55a80ad71e6d831/zegami_cli-0.11.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21620a7806478d42e4fed1bfbba2e10e", "sha256": "c680525ea9df1776c8e46934aed94e9766904550bc9db860021bba64142720e0"}, "downloads": -1, "filename": "zegami-cli-0.11.1.tar.gz", "has_sig": false, "md5_digest": "21620a7806478d42e4fed1bfbba2e10e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16673, "upload_time": "2018-09-10T12:17:23", "upload_time_iso_8601": "2018-09-10T12:17:23.105925Z", "url": "https://files.pythonhosted.org/packages/75/6b/3aff0f4606cd2cce6d8b2044ebb8cdb5b9376140f8e9697e76dd63eef4d6/zegami-cli-0.11.1.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "903778c9c4970ac66b0d9b0a1515b75d", "sha256": "7ab56cc775cd67759ff70b0df663dabed143e001699c4109bda22a90162a16a4"}, "downloads": -1, "filename": "zegami_cli-0.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "903778c9c4970ac66b0d9b0a1515b75d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18208, "upload_time": "2019-05-03T11:32:07", "upload_time_iso_8601": "2019-05-03T11:32:07.675935Z", "url": "https://files.pythonhosted.org/packages/57/02/27fd682b632afcf2eec06f185e2a566639054f831aedb21af49f81123a82/zegami_cli-0.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51fcadf58fbc629489d3ff656bf74724", "sha256": "bc032d374d5ffb44cda099b2e246a9b7c7fde26637b71817cdc092257a42f1b9"}, "downloads": -1, "filename": "zegami-cli-0.12.0.tar.gz", "has_sig": false, "md5_digest": "51fcadf58fbc629489d3ff656bf74724", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16599, "upload_time": "2019-05-03T11:32:12", "upload_time_iso_8601": "2019-05-03T11:32:12.713149Z", "url": "https://files.pythonhosted.org/packages/03/6d/b405a76ff24502d998c666dbafe16d73665d892d28e4a425cab06fe0ad3e/zegami-cli-0.12.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c8033fc9b2112728d274a31bc161fe9c", "sha256": "eadabdfcf36d6801e0210122bdc1c0d483f92d37d337e22c6245759d4d79e4b8"}, "downloads": -1, "filename": "zegami_cli-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8033fc9b2112728d274a31bc161fe9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12605, "upload_time": "2018-04-10T08:36:17", "upload_time_iso_8601": "2018-04-10T08:36:17.314638Z", "url": "https://files.pythonhosted.org/packages/f6/09/d493ee24c191105d89556d0946fca9df7154c7dba28d2c5629a63c87e5cb/zegami_cli-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "968540d770902691bab719ca2d222b55", "sha256": "2050119e9b191a7595c4780831cad0225124cb814588af72b05e61457d88997b"}, "downloads": -1, "filename": "zegami-cli-0.2.0.tar.gz", "has_sig": false, "md5_digest": "968540d770902691bab719ca2d222b55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9246, "upload_time": "2018-04-10T08:36:18", "upload_time_iso_8601": "2018-04-10T08:36:18.460221Z", "url": "https://files.pythonhosted.org/packages/54/2a/8b2c2ff2985374e6faf56f567cf1334a79fb67274a8e607ff08f6d393421/zegami-cli-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1b29f7d6ab93e01b7d11550717ae3a0b", "sha256": "1ab708c44cb44e5a72cf6fe63620e38a9b9dd3a5c615e903b85e5956e22e8e32"}, "downloads": -1, "filename": "zegami_cli-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1b29f7d6ab93e01b7d11550717ae3a0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13021, "upload_time": "2018-04-16T12:26:51", "upload_time_iso_8601": "2018-04-16T12:26:51.088419Z", "url": "https://files.pythonhosted.org/packages/6d/61/db21b5b6402106c434f8c17368955f7f4fb88c354b3ff46b46e5486fb589/zegami_cli-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71ba1a2f24fb96262fb6fb6f022749a2", "sha256": "56794141d2a6deb16b898f355b70a9439ccffb8b93e42e214323fe557b11071f"}, "downloads": -1, "filename": "zegami-cli-0.3.0.tar.gz", "has_sig": false, "md5_digest": "71ba1a2f24fb96262fb6fb6f022749a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9429, "upload_time": "2018-04-16T12:26:52", "upload_time_iso_8601": "2018-04-16T12:26:52.503426Z", "url": "https://files.pythonhosted.org/packages/f1/3a/76b4c70a0746c56e650e1df7b2c787512c2e998692590b7bba500201c4d0/zegami-cli-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "32031d42ac40e8fc5f56e182ffbd04ad", "sha256": "a5d9d0b173545d30ba58e5b09e420ab1214d4f3e88e10db67ac53b5dc316c6d7"}, "downloads": -1, "filename": "zegami_cli-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32031d42ac40e8fc5f56e182ffbd04ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14947, "upload_time": "2018-04-18T11:26:03", "upload_time_iso_8601": "2018-04-18T11:26:03.757577Z", "url": "https://files.pythonhosted.org/packages/e0/0c/a2e15c630596d9c5bbc5392f6f1b9eb0b82b2f103b98a5409040825f6c41/zegami_cli-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "370f27d21f97ecca52ae728e81ea5ca2", "sha256": "cafc99ebeca78e07c8e7fad10c404e09dabdfa127017d4cda94c101cde5c8792"}, "downloads": -1, "filename": "zegami-cli-0.4.0.tar.gz", "has_sig": false, "md5_digest": "370f27d21f97ecca52ae728e81ea5ca2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11007, "upload_time": "2018-04-18T11:26:05", "upload_time_iso_8601": "2018-04-18T11:26:05.883052Z", "url": "https://files.pythonhosted.org/packages/25/93/7856d8d24b65d7d5995ec9c1a0bf9136589199a724d28d16ab2b40d2ccb7/zegami-cli-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "419590e0373553cd6209827fcc317dc1", "sha256": "10b25ea828d50e54fb87c298ac69750b0045207d640fc62ae2e81bb9b444e1cb"}, "downloads": -1, "filename": "zegami_cli-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "419590e0373553cd6209827fcc317dc1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15144, "upload_time": "2018-04-19T15:05:20", "upload_time_iso_8601": "2018-04-19T15:05:20.391207Z", "url": "https://files.pythonhosted.org/packages/26/16/50747abf97747d2266bbdb71dce38bd4c3258a7bd387fd99dfe079747b41/zegami_cli-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17ec63cd23fb7ecaf4da4ec40e66ff0f", "sha256": "4c3ce1f5dda5cd54d01e6727d9dfb08d6fbe1253412713eb65af37afe6f6c1ee"}, "downloads": -1, "filename": "zegami-cli-0.5.0.tar.gz", "has_sig": false, "md5_digest": "17ec63cd23fb7ecaf4da4ec40e66ff0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11187, "upload_time": "2018-04-19T15:05:22", "upload_time_iso_8601": "2018-04-19T15:05:22.580454Z", "url": "https://files.pythonhosted.org/packages/48/2a/1bbcdf9b6bc5ea6678cf0a7e8496f74c42a7ebf44eef65b118e22305e0a2/zegami-cli-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "809f46d495f084092baa29344a56a542", "sha256": "18bba2943dcebb40803431b5a8870583b36f216c6186ec3c8818b297a1c1aaed"}, "downloads": -1, "filename": "zegami_cli-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "809f46d495f084092baa29344a56a542", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15013, "upload_time": "2018-04-27T08:44:20", "upload_time_iso_8601": "2018-04-27T08:44:20.456539Z", "url": "https://files.pythonhosted.org/packages/53/59/ddedd8e71d2873229160e56aa659ab796126fa47d18e1b58b86927a5f54c/zegami_cli-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbab31487abe5b72b2a8f3c9d9ddcaa0", "sha256": "f1dcafd2a8f6217362dfc190216cdd8ef322ef6f2fed0a53e3dfdc25c9cd1b9f"}, "downloads": -1, "filename": "zegami-cli-0.6.0.tar.gz", "has_sig": false, "md5_digest": "cbab31487abe5b72b2a8f3c9d9ddcaa0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11086, "upload_time": "2018-04-27T08:44:23", "upload_time_iso_8601": "2018-04-27T08:44:23.438394Z", "url": "https://files.pythonhosted.org/packages/81/83/d001db04d385b83312a09f7c4bcf13748c38d69a250c57ca6631a165eed9/zegami-cli-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "4874e6683d847852875c3409614d8bc5", "sha256": "2d1fc5b58a0749d05ceafff4013002cf9b45add1ff1a170a7e7e24bf3cd684a2"}, "downloads": -1, "filename": "zegami_cli-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4874e6683d847852875c3409614d8bc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13264, "upload_time": "2018-05-22T09:49:41", "upload_time_iso_8601": "2018-05-22T09:49:41.744128Z", "url": "https://files.pythonhosted.org/packages/9c/b5/7526d4aefc0ba3f1d7246536e536fbfd2970b53e1543e604f70c33b82ab9/zegami_cli-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d540523996959aa68b7816e006533dbf", "sha256": "3bee7413fc2451e31d409fc2ab3950c86eb7f814f1c2d6f5a53e57b37a627931"}, "downloads": -1, "filename": "zegami-cli-0.7.0.tar.gz", "has_sig": false, "md5_digest": "d540523996959aa68b7816e006533dbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12004, "upload_time": "2018-05-22T09:49:45", "upload_time_iso_8601": "2018-05-22T09:49:45.397512Z", "url": "https://files.pythonhosted.org/packages/71/77/02bb12745aee60cec5d8c4be5fdc6bb9cbcc27e92144af6f9094e6c34fe6/zegami-cli-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "4990549fed05548e91b8cc1b039a381c", "sha256": "8f0b32b9d8958d7127b3d637dce299556b94a34844ba90579c5b14e9e309b1ed"}, "downloads": -1, "filename": "zegami_cli-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4990549fed05548e91b8cc1b039a381c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13281, "upload_time": "2018-05-22T12:24:47", "upload_time_iso_8601": "2018-05-22T12:24:47.414021Z", "url": "https://files.pythonhosted.org/packages/9a/8b/2d288811692ec948a591d05d3935d1f7c76fcdda5d471418679787d9f5b4/zegami_cli-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b8f985a567cf0e182e1933a8dea0bf4", "sha256": "c6b4aa683e6d3f2b706c3424270f6998448ea7c392b54e2cf06e1815a5a2d31e"}, "downloads": -1, "filename": "zegami-cli-0.8.0.tar.gz", "has_sig": false, "md5_digest": "0b8f985a567cf0e182e1933a8dea0bf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12034, "upload_time": "2018-05-22T12:24:48", "upload_time_iso_8601": "2018-05-22T12:24:48.196291Z", "url": "https://files.pythonhosted.org/packages/30/d0/24f7355480cfb3880eed74565db02a9dddf35243bfad2c4da1e960e42a5d/zegami-cli-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "8ccb626bab3946406e5aa94270475a26", "sha256": "b2f48bfabf3aa52b0bb0753b14cfd5990430fc044992641d42f5e06e690dc1fe"}, "downloads": -1, "filename": "zegami_cli-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8ccb626bab3946406e5aa94270475a26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14080, "upload_time": "2018-05-24T07:00:14", "upload_time_iso_8601": "2018-05-24T07:00:14.599621Z", "url": "https://files.pythonhosted.org/packages/4a/68/c56e36108ba3db463efc356d78c63f11a75e33530b6698329896c3aad82b/zegami_cli-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34a0d48b8955470a153afe03b0b02376", "sha256": "7064039aa0db9be049d9a42df14112793212fc9a4fbd85ac1405fe68ae48f165"}, "downloads": -1, "filename": "zegami-cli-0.9.0.tar.gz", "has_sig": false, "md5_digest": "34a0d48b8955470a153afe03b0b02376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16655, "upload_time": "2018-05-24T07:00:16", "upload_time_iso_8601": "2018-05-24T07:00:16.362012Z", "url": "https://files.pythonhosted.org/packages/93/ff/858442a0dfe82301dae35cad0ce4a567c3d2b7f500bdccfa0c65520cee88/zegami-cli-0.9.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "4c45de23c6d1d69fce62886e76322984", "sha256": "634c50629f6683f88233be0d2b108267ae4bf0deb9a7bfec8b6c323c56ff6716"}, "downloads": -1, "filename": "zegami-cli-1.1.2.tar.gz", "has_sig": false, "md5_digest": "4c45de23c6d1d69fce62886e76322984", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21806, "upload_time": "2020-01-07T13:44:04", "upload_time_iso_8601": "2020-01-07T13:44:04.407747Z", "url": "https://files.pythonhosted.org/packages/39/fa/6a5ac645c378d1fe614f0e5a03d84ab6c3efe90a558088fe43f327349b56/zegami-cli-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "6b1dae1d5d672cc5e5c25bf071b3340d", "sha256": "055d50923ee67391e8d085cdfce5a31e4b2df69a07ad531d413c0f1ad63a3221"}, "downloads": -1, "filename": "zegami-cli-1.1.3.tar.gz", "has_sig": false, "md5_digest": "6b1dae1d5d672cc5e5c25bf071b3340d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23219, "upload_time": "2020-01-13T23:02:50", "upload_time_iso_8601": "2020-01-13T23:02:50.908384Z", "url": "https://files.pythonhosted.org/packages/17/35/b796a8408749d50a68586a7161621e34503ddf665306f4b25d762c492265/zegami-cli-1.1.3.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "4b73f815767344cd4d58f9558fcfd94d", "sha256": "ccd17e4fc3ce5158779f01710a54b494f3122d75e38ce8b0430533cde8d023b4"}, "downloads": -1, "filename": "zegami-cli-1.1.5.tar.gz", "has_sig": false, "md5_digest": "4b73f815767344cd4d58f9558fcfd94d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24523, "upload_time": "2020-03-05T12:42:44", "upload_time_iso_8601": "2020-03-05T12:42:44.428917Z", "url": "https://files.pythonhosted.org/packages/fa/97/b2b2bfd2a391fa2c4b320203707d3a42c40a0c2bf11c2ceaf13947269797/zegami-cli-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "068f95cfa2ca3aae384484a0f5372cfd", "sha256": "907a842be8e6eccaee568869e1cf5df296e76c7ec50cfb79d59ceb43ddae3494"}, "downloads": -1, "filename": "zegami_cli-1.1.6-py3-none-any.whl", "has_sig": true, "md5_digest": "068f95cfa2ca3aae384484a0f5372cfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25103, "upload_time": "2020-03-20T17:02:23", "upload_time_iso_8601": "2020-03-20T17:02:23.332308Z", "url": "https://files.pythonhosted.org/packages/02/c1/b2cfffbec9663050d5351ebb7b606b9872f2d47cab4752801e5b5c537b03/zegami_cli-1.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4ac928eb2a7b5e0549a82f119e3cb92", "sha256": "306948423c47844debbf97e0d585e437e926ac580fa6b87fe8beeefdf37a30cf"}, "downloads": -1, "filename": "zegami-cli-1.1.6.tar.gz", "has_sig": true, "md5_digest": "a4ac928eb2a7b5e0549a82f119e3cb92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21246, "upload_time": "2020-03-20T17:02:25", "upload_time_iso_8601": "2020-03-20T17:02:25.587080Z", "url": "https://files.pythonhosted.org/packages/94/c4/f79b9c3b79bd57775eef54b7c5390295658e5885c7bc313466415be04399/zegami-cli-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "25a39cadec9a4900752a6ff55a29b793", "sha256": "80a4e94327c15d6864ca2075d1d3bb4d6912b1936c73d3583161dc07e6a49b47"}, "downloads": -1, "filename": "zegami-cli-1.1.7.linux-x86_64.tar.gz", "has_sig": true, "md5_digest": "25a39cadec9a4900752a6ff55a29b793", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32994, "upload_time": "2020-04-09T10:29:03", "upload_time_iso_8601": "2020-04-09T10:29:03.424713Z", "url": "https://files.pythonhosted.org/packages/2b/78/1f0eeba4563f13f426378bc2804bbfd5b8c8ba52689db8d2f6a32909c146/zegami-cli-1.1.7.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eecc593b19e80c16d138ecc700a277d", "sha256": "ce2412308249c7d03d17e91d04273375fa4419be1f8820915fe81d3b8624c8b3"}, "downloads": -1, "filename": "zegami_cli-1.1.7-py3-none-any.whl", "has_sig": true, "md5_digest": "5eecc593b19e80c16d138ecc700a277d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25422, "upload_time": "2020-04-09T10:29:01", "upload_time_iso_8601": "2020-04-09T10:29:01.187853Z", "url": "https://files.pythonhosted.org/packages/94/c9/35f8f636297ea9deb13b7a1a8006d187bbf91e821e5004ba33436e000956/zegami_cli-1.1.7-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25a39cadec9a4900752a6ff55a29b793", "sha256": "80a4e94327c15d6864ca2075d1d3bb4d6912b1936c73d3583161dc07e6a49b47"}, "downloads": -1, "filename": "zegami-cli-1.1.7.linux-x86_64.tar.gz", "has_sig": true, "md5_digest": "25a39cadec9a4900752a6ff55a29b793", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32994, "upload_time": "2020-04-09T10:29:03", "upload_time_iso_8601": "2020-04-09T10:29:03.424713Z", "url": "https://files.pythonhosted.org/packages/2b/78/1f0eeba4563f13f426378bc2804bbfd5b8c8ba52689db8d2f6a32909c146/zegami-cli-1.1.7.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eecc593b19e80c16d138ecc700a277d", "sha256": "ce2412308249c7d03d17e91d04273375fa4419be1f8820915fe81d3b8624c8b3"}, "downloads": -1, "filename": "zegami_cli-1.1.7-py3-none-any.whl", "has_sig": true, "md5_digest": "5eecc593b19e80c16d138ecc700a277d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25422, "upload_time": "2020-04-09T10:29:01", "upload_time_iso_8601": "2020-04-09T10:29:01.187853Z", "url": "https://files.pythonhosted.org/packages/94/c9/35f8f636297ea9deb13b7a1a8006d187bbf91e821e5004ba33436e000956/zegami_cli-1.1.7-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:18:23 2020"}