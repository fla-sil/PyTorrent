{"info": {"author": "Alex Root Junior", "author_email": "aiogram@illemius.xyz", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: AsyncIO", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "AIOGraph\n========\n\n|shield-pypi| |shield-pypi-status| |shield-travis| |shield-codecov| |shield-license|\n\n**aiograph** - asynchronous Python Telegra.ph API wrapper.\n\nAnnotations\n-----------\nThe Telegraph class (``aiograph.Telegraph``) encapsulates all API calls in a single class.\nIt provides functions such as create_page, get_views and other's methods described at `Telegra.ph/api <http://telegra.ph/api>`_ page\n\nAll data types  stored In the package ``aiograph.types``.\n\nAll methods are named following the `PEP-8 <https://www.python.org/dev/peps/pep-0008/>`_ instructions\nfor example ``create_account`` for ``createAccount`` method and etc.\nAll API methods are awaitable and can be called only inside Event-loop.\n\nAlso if you want to upload the file to Telegra.ph service use ``upload`` method\nfrom the instance of Telegraph class.\n\nBy the end of all actions you will need to close HTTP connections by calling the `close()` method (is awaitable).\n\n\nInstallation\n------------\n\nUsing PIP\n~~~~~~~~~\n.. code-block:: bash\n\n    $ pip install -U aiograph\n\nFrom sources\n~~~~~~~~~~~~\n.. code-block:: bash\n\n    $ git clone https://github.com/aiogram/aiograph.git\n    $ cd aiograph\n    $ python setup.py install\n\n\nUsage examples\n--------------\n\n`Basics <https://github.com/aiogram/aiograph/blob/master/examples/basics.py>`_\n\n.. code-block:: python3\n\n   import asyncio\n\n   from aiograph import Telegraph\n\n   loop = asyncio.get_event_loop()\n   telegraph = Telegraph()\n\n\n   async def main():\n       await telegraph.create_account('aiograph-demo')\n       page = await telegraph.create_page('Demo', '<p><strong>Hello, world!</strong></p>')\n       print('Created page:', page.url)\n\n\n   if __name__ == '__main__':\n       try:\n           loop.run_until_complete(main())\n       except (KeyboardInterrupt, SystemExit):\n           pass\n       finally:\n           loop.run_until_complete(telegraph.close())  # Close the aiohttp.ClientSession\n\n\nLinks\n-----\n\n- News: `@aiogram_live <https://t.me/aiogram_live>`_\n- Community: `@aiogram <https://t.me/aiogram>`_\n- Russian community: `@aiogram_ru <https://t.me/aiogram_ru>`_\n- Pip: `aiograph <https://pypi.org/project/aiograph>`_\n- Source: `Github repo <https://github.com/aiogram/aiograph>`_\n- Issues/Bug tracker: `Github issues tracker <https://github.com/aiogram/aiograph/issues>`_\n\n.. |shield-pypi| image:: https://img.shields.io/pypi/v/aiograph.svg?style=flat-square\n   :target: https://pypi.org/project/aiograph/\n   :alt: PyPI\n\n.. |shield-pypi-status| image:: https://img.shields.io/pypi/status/aiograph.svg?style=flat-square\n   :target: https://pypi.org/project/aiograph/\n   :alt: PyPi status\n\n.. |shield-travis| image:: https://img.shields.io/travis/aiogram/aiograph.svg?branch=master&style=flat-square\n   :target: https://travis-ci.org/aiogram/aiograph\n   :alt: Travis-CI\n\n.. |shield-codecov| image:: https://img.shields.io/codecov/c/github/aiogram/aiograph.svg?style=flat-square\n   :target: https://codecov.io/gh/aiogram/aiograph\n   :alt: Codecov\n\n.. |shield-license| image:: https://img.shields.io/pypi/l/aiogram.svg?style=flat-square\n   :target: https://opensource.org/licenses/MIT\n   :alt: MIT License\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aiogram/aiograph", "keywords": "", "license": "MIT", "maintainer": "Alex Root Junior <jroot.junior@gmail.com>", "maintainer_email": "aiogram@illemius.xyz", "name": "aiograph", "package_url": "https://pypi.org/project/aiograph/", "platform": "", "project_url": "https://pypi.org/project/aiograph/", "project_urls": {"Homepage": "https://github.com/aiogram/aiograph"}, "release_url": "https://pypi.org/project/aiograph/0.2/", "requires_dist": ["aiohttp (>=3.4.4)", "certifi (>=2018.11.29)", "attrs (>=19.1.0)", "aiohttp (>=3.4.4) ; extra == 'dev'", "certifi (>=2018.11.29) ; extra == 'dev'", "attrs (>=19.1.0) ; extra == 'dev'", "aiohttp-socks (>=0.2.2) ; extra == 'dev'", "pytest (>=3.5.1) ; extra == 'dev'", "pytest-asyncio (>=0.8.0) ; extra == 'dev'", "pytest-cov (>=2.5.1) ; extra == 'dev'", "wheel (>=0.31.0) ; extra == 'dev'", "codecov (>=2.0.15) ; extra == 'dev'"], "requires_python": "", "summary": "asynchronous Python Telegra.ph API wrapper", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/aiograph/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60e2b7928e739bc2fc0bf26768d859663c60c668/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f67726170682e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.org/project/aiograph/\" rel=\"nofollow\"><img alt=\"PyPi status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b69a7ef36a29abdc288d24abdc963be8f5a4b3d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f61696f67726170682e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/aiogram/aiograph\" rel=\"nofollow\"><img alt=\"Travis-CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5bf9114f4fa6c8b36f6345125f11d5b7d1174c8/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f61696f6772616d2f61696f67726170682e7376673f6272616e63683d6d6173746572267374796c653d666c61742d737175617265\"></a> <a href=\"https://codecov.io/gh/aiogram/aiograph\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3acf91a9fb83436af1d77102d47cc6fd48d7db9e/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f61696f6772616d2f61696f67726170682e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49d6af22d6b2ddb7cfeb5a0472612c312cff6c8b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61696f6772616d2e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p><strong>aiograph</strong> - asynchronous Python Telegra.ph API wrapper.</p>\n<div id=\"annotations\">\n<h2>Annotations</h2>\n<p>The Telegraph class (<tt>aiograph.Telegraph</tt>) encapsulates all API calls in a single class.\nIt provides functions such as create_page, get_views and other\u2019s methods described at <a href=\"http://telegra.ph/api\" rel=\"nofollow\">Telegra.ph/api</a> page</p>\n<p>All data types  stored In the package <tt>aiograph.types</tt>.</p>\n<p>All methods are named following the <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP-8</a> instructions\nfor example <tt>create_account</tt> for <tt>createAccount</tt> method and etc.\nAll API methods are awaitable and can be called only inside Event-loop.</p>\n<p>Also if you want to upload the file to Telegra.ph service use <tt>upload</tt> method\nfrom the instance of Telegraph class.</p>\n<p>By the end of all actions you will need to close HTTP connections by calling the <cite>close()</cite> method (is awaitable).</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"using-pip\">\n<h3>Using PIP</h3>\n<pre>$ pip install -U aiograph\n</pre>\n</div>\n<div id=\"from-sources\">\n<h3>From sources</h3>\n<pre>$ git clone https://github.com/aiogram/aiograph.git\n$ <span class=\"nb\">cd</span> aiograph\n$ python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<p><a href=\"https://github.com/aiogram/aiograph/blob/master/examples/basics.py\" rel=\"nofollow\">Basics</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiograph</span> <span class=\"kn\">import</span> <span class=\"n\">Telegraph</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">telegraph</span> <span class=\"o\">=</span> <span class=\"n\">Telegraph</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">await</span> <span class=\"n\">telegraph</span><span class=\"o\">.</span><span class=\"n\">create_account</span><span class=\"p\">(</span><span class=\"s1\">'aiograph-demo'</span><span class=\"p\">)</span>\n    <span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">telegraph</span><span class=\"o\">.</span><span class=\"n\">create_page</span><span class=\"p\">(</span><span class=\"s1\">'Demo'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;p&gt;&lt;strong&gt;Hello, world!&lt;/strong&gt;&lt;/p&gt;'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Created page:'</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n    <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">,</span> <span class=\"ne\">SystemExit</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">telegraph</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">())</span>  <span class=\"c1\"># Close the aiohttp.ClientSession</span>\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li>News: <a href=\"https://t.me/aiogram_live\" rel=\"nofollow\">@aiogram_live</a></li>\n<li>Community: <a href=\"https://t.me/aiogram\" rel=\"nofollow\">@aiogram</a></li>\n<li>Russian community: <a href=\"https://t.me/aiogram_ru\" rel=\"nofollow\">@aiogram_ru</a></li>\n<li>Pip: <a href=\"https://pypi.org/project/aiograph\" rel=\"nofollow\">aiograph</a></li>\n<li>Source: <a href=\"https://github.com/aiogram/aiograph\" rel=\"nofollow\">Github repo</a></li>\n<li>Issues/Bug tracker: <a href=\"https://github.com/aiogram/aiograph/issues\" rel=\"nofollow\">Github issues tracker</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4919837, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "17366062fb7c5de86ca56b107e2d7973", "sha256": "5f10e678f9d8a1958e88ef7b0efd7e7686c50ff29e76542734d0ac0d5aa55e52"}, "downloads": -1, "filename": "aiograph-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "17366062fb7c5de86ca56b107e2d7973", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13936, "upload_time": "2018-05-11T15:54:50", "upload_time_iso_8601": "2018-05-11T15:54:50.389844Z", "url": "https://files.pythonhosted.org/packages/9b/d6/24900ffbb1ec36fb6975f2e9ee0137a9dc8c2bfe3855adbe359709caa2d3/aiograph-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "674240785f6eec6577fff2d5e627ff16", "sha256": "3b6bad9e186b57c67fd256c7972468b4dbe85d37b6814cb7750f118053471f33"}, "downloads": -1, "filename": "aiograph-0.1.tar.gz", "has_sig": false, "md5_digest": "674240785f6eec6577fff2d5e627ff16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13134, "upload_time": "2018-05-11T15:55:19", "upload_time_iso_8601": "2018-05-11T15:55:19.109865Z", "url": "https://files.pythonhosted.org/packages/08/e6/53fa6c765263d1025059c85ba38cc893e6cbff9f3b042f9f6a4d96370301/aiograph-0.1.tar.gz", "yanked": false}], "0.1b1": [{"comment_text": "", "digests": {"md5": "e7be8a1fc2b0c4d364c6199d873ed355", "sha256": "e23d3349d44089cdf36de9af8ccc8b01e7e2b2ed448cc066c05adcc14dd9e714"}, "downloads": -1, "filename": "aiograph-0.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "e7be8a1fc2b0c4d364c6199d873ed355", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11914, "upload_time": "2018-05-05T12:27:21", "upload_time_iso_8601": "2018-05-05T12:27:21.090010Z", "url": "https://files.pythonhosted.org/packages/1f/a2/d6ec140148fb20d93d8125a0bfefc4dc7ab383064a6a7913c0f260369442/aiograph-0.1b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a2b914cdd1732fee06df99d6f8d1cda", "sha256": "f00649f70352eb7babd3524e1800eb96d1958284edc7f91bb1f38f80c530bae3"}, "downloads": -1, "filename": "aiograph-0.1b1.tar.gz", "has_sig": false, "md5_digest": "8a2b914cdd1732fee06df99d6f8d1cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9289, "upload_time": "2018-05-05T12:27:22", "upload_time_iso_8601": "2018-05-05T12:27:22.903440Z", "url": "https://files.pythonhosted.org/packages/38/97/493397463bd028e1059cd2cd065d2147a8fadf9876ecc4b3d406bc1e82d1/aiograph-0.1b1.tar.gz", "yanked": false}], "0.1b3": [{"comment_text": "", "digests": {"md5": "b242958ec7882ce8dd80bc2c3befff90", "sha256": "bd80a04b98fc613bfe1f5e331f1ca3fb972e47a503069d9c7ac9c9b8a842fe03"}, "downloads": -1, "filename": "aiograph-0.1b3-py3-none-any.whl", "has_sig": false, "md5_digest": "b242958ec7882ce8dd80bc2c3befff90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12655, "upload_time": "2018-05-10T22:33:50", "upload_time_iso_8601": "2018-05-10T22:33:50.313603Z", "url": "https://files.pythonhosted.org/packages/6e/a8/ff2a5363cf8d90187444118e1bce33af30c666e8b946a11cf33470b0f01c/aiograph-0.1b3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee45015a74e53bdaebf47252455924a1", "sha256": "7a4cd1d503d60213c84151666e273e57694b0e299e441e5218f9ab83697a12f1"}, "downloads": -1, "filename": "aiograph-0.1b3.tar.gz", "has_sig": false, "md5_digest": "ee45015a74e53bdaebf47252455924a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10835, "upload_time": "2018-05-10T22:33:51", "upload_time_iso_8601": "2018-05-10T22:33:51.582643Z", "url": "https://files.pythonhosted.org/packages/da/79/8727b6186b04298765e17a1a623b23982914e05ae024adbb7c3a81a23336/aiograph-0.1b3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8cfd44a22c250fee4da3f8100e1c2a01", "sha256": "d0db6bf351ae1eb874f7f041d031e3882df781159200d8334dc6b732e6f7bcb2"}, "downloads": -1, "filename": "aiograph-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8cfd44a22c250fee4da3f8100e1c2a01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15084, "upload_time": "2019-03-09T22:38:16", "upload_time_iso_8601": "2019-03-09T22:38:16.219820Z", "url": "https://files.pythonhosted.org/packages/33/23/67e592fb8115e6c37351e633a797818b98e37f01f08580ed24847b8f3f8f/aiograph-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acbe08d2f8bf8dccb1a76212a5e306bd", "sha256": "e44afe92bd0c73f056f36dae47424a0fcc277d28f9783049408b1e8e5b9b5a1e"}, "downloads": -1, "filename": "aiograph-0.2.tar.gz", "has_sig": false, "md5_digest": "acbe08d2f8bf8dccb1a76212a5e306bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13494, "upload_time": "2019-03-09T22:38:17", "upload_time_iso_8601": "2019-03-09T22:38:17.945563Z", "url": "https://files.pythonhosted.org/packages/94/48/d91daec35f93e7c314ecee78fe5e89eb5e9ac16bfc17bb9ddffed5a98022/aiograph-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8cfd44a22c250fee4da3f8100e1c2a01", "sha256": "d0db6bf351ae1eb874f7f041d031e3882df781159200d8334dc6b732e6f7bcb2"}, "downloads": -1, "filename": "aiograph-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8cfd44a22c250fee4da3f8100e1c2a01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15084, "upload_time": "2019-03-09T22:38:16", "upload_time_iso_8601": "2019-03-09T22:38:16.219820Z", "url": "https://files.pythonhosted.org/packages/33/23/67e592fb8115e6c37351e633a797818b98e37f01f08580ed24847b8f3f8f/aiograph-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acbe08d2f8bf8dccb1a76212a5e306bd", "sha256": "e44afe92bd0c73f056f36dae47424a0fcc277d28f9783049408b1e8e5b9b5a1e"}, "downloads": -1, "filename": "aiograph-0.2.tar.gz", "has_sig": false, "md5_digest": "acbe08d2f8bf8dccb1a76212a5e306bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13494, "upload_time": "2019-03-09T22:38:17", "upload_time_iso_8601": "2019-03-09T22:38:17.945563Z", "url": "https://files.pythonhosted.org/packages/94/48/d91daec35f93e7c314ecee78fe5e89eb5e9ac16bfc17bb9ddffed5a98022/aiograph-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:31 2020"}