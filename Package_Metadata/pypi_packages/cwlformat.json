{"info": {"author": "Kaushik Ghose", "author_email": "kaushik.ghose@sbgenomics.com", "bugtrack_url": null, "classifiers": [], "description": "# CWL Format\n\n[![Tests](https://github.com/rabix/cwl-format/workflows/Tests/badge.svg)](https://github.com/rabix/cwl-format/actions?query=workflow%3ATests)\n\nCWL Format is a specification and a reference implementation for\na very opinionated CWL code formatter.\n\nIt outputs CWL in a standardized YAML format. It has no settings or\noptions because you have better things to do with your time. And because\nCWL Format is always correct.\n\nThis repository lists the formatting rules and also contains a Python\nimplementation of the formatter.\n\n```\npip install cwlformat\ncwl-format unformatted.cwl > formatted.cwl\n```\n\nUse programmatically in Python by doing\n\n```python\nfrom cwlformat.formatter import cwl_format\n\nformatted_text = cwl_format(unformatted_text)\n```\n\nor\n\n```python\nfrom cwlformat.formatter import stringify_dict\n\nas_dict = load_yaml(...)\nformatted_str = stringify_dict(as_dict)\n```\n\n## Rules\n\n- Only comment lines at the top of the file, including blank lines,\n  before the actual CWL code are preserved. All other comments are lost.\n  **Do not use this if all comments in the YAML are important to you**. \n\n- If the first line does not start with `#!/usr/bin/env ` the line\n  `#!/usr/bin/env cwl-runner` is added to the top of the file.\n\n- All CWL fields are ordered systematically. The field order for specific \n  fields have a defined precedence (\"pinned fields\"). Any fields not \n  present in this file (\"free fields\") are printed after the pinned fields \n  and ordered alphabetically.\n\n- A single blank line is added before the following fields if the parent \n  structure is a process.\n  - inputs\n  - outputs\n  - steps\n  - requirements\n  - hints\n  - baseCommand\n\n- The pinned fields are defined in [this YAML file][spec]. \n\n- Specific pinned field orderings are available for CommandLineTool, \n  ExpressionTool and Workflow processes. All other types follow a generic\n  pinned field list.\n\n- All strings that fit within 80 columns are expressed in flow style.\n  Longer strings or strings with new lines are expressed in block style.\n\n- All lists and maps are expressed in block style\n\n- The ordering of all lists are preserved\n\n- Indentation is 2 spaces, including for lists\n\n[spec]: https://raw.githubusercontent.com/rabix/cwl-format/master/cwlformat/keyorder.yml\n\n## Conformance tests\n\nA series of documents are found in the [`tests`][tests] directory that can be used\nto check correctness of a formatter. The files named `original-*` are the input files\nand the files named `formatted-*` are the corresponding formatted documents. There\nare a mixture of YAML and JSON input files. Formatted files are always YAML.\n\n[tests]: https://github.com/rabix/cwl-format/tree/master/tests/cwl\n\n\n# CWL Exploder\n\nThis takes as input a packed workflow (workflow with all steps in lined) and splits it\nrecursively into parts.\n\n```\ncwl-explode formatted-atac-seq-pipeline.cwl expected-exploded-atac-seq.cwl\n```\n\nResults in the [exploded parent workflow](https://github.com/rabix/cwl-format/blob/master/tests/cwl/expected-exploded-atac-seq.cwl)\nand [52 sub-components](https://github.com/rabix/cwl-format/tree/master/tests/cwl/expected-exploded-atac-seq.cwl.steps)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kaushik-work/cwlformat", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cwlformat", "package_url": "https://pypi.org/project/cwlformat/", "platform": "", "project_url": "https://pypi.org/project/cwlformat/", "project_urls": {"Homepage": "https://github.com/kaushik-work/cwlformat"}, "release_url": "https://pypi.org/project/cwlformat/2020.4.30/", "requires_dist": ["ruamel.yaml (>=0.15.77)"], "requires_python": ">=3.7.0", "summary": "A prettifier for CWL code", "version": "2020.4.30", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CWL Format</h1>\n<p><a href=\"https://github.com/rabix/cwl-format/actions?query=workflow%3ATests\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad8c13dca26de1ab2236349547c5d13390b91613/68747470733a2f2f6769746875622e636f6d2f72616269782f63776c2d666f726d61742f776f726b666c6f77732f54657374732f62616467652e737667\"></a></p>\n<p>CWL Format is a specification and a reference implementation for\na very opinionated CWL code formatter.</p>\n<p>It outputs CWL in a standardized YAML format. It has no settings or\noptions because you have better things to do with your time. And because\nCWL Format is always correct.</p>\n<p>This repository lists the formatting rules and also contains a Python\nimplementation of the formatter.</p>\n<pre><code>pip install cwlformat\ncwl-format unformatted.cwl &gt; formatted.cwl\n</code></pre>\n<p>Use programmatically in Python by doing</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cwlformat.formatter</span> <span class=\"kn\">import</span> <span class=\"n\">cwl_format</span>\n\n<span class=\"n\">formatted_text</span> <span class=\"o\">=</span> <span class=\"n\">cwl_format</span><span class=\"p\">(</span><span class=\"n\">unformatted_text</span><span class=\"p\">)</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cwlformat.formatter</span> <span class=\"kn\">import</span> <span class=\"n\">stringify_dict</span>\n\n<span class=\"n\">as_dict</span> <span class=\"o\">=</span> <span class=\"n\">load_yaml</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">formatted_str</span> <span class=\"o\">=</span> <span class=\"n\">stringify_dict</span><span class=\"p\">(</span><span class=\"n\">as_dict</span><span class=\"p\">)</span>\n</pre>\n<h2>Rules</h2>\n<ul>\n<li>\n<p>Only comment lines at the top of the file, including blank lines,\nbefore the actual CWL code are preserved. All other comments are lost.\n<strong>Do not use this if all comments in the YAML are important to you</strong>.</p>\n</li>\n<li>\n<p>If the first line does not start with <code>#!/usr/bin/env</code> the line\n<code>#!/usr/bin/env cwl-runner</code> is added to the top of the file.</p>\n</li>\n<li>\n<p>All CWL fields are ordered systematically. The field order for specific\nfields have a defined precedence (\"pinned fields\"). Any fields not\npresent in this file (\"free fields\") are printed after the pinned fields\nand ordered alphabetically.</p>\n</li>\n<li>\n<p>A single blank line is added before the following fields if the parent\nstructure is a process.</p>\n<ul>\n<li>inputs</li>\n<li>outputs</li>\n<li>steps</li>\n<li>requirements</li>\n<li>hints</li>\n<li>baseCommand</li>\n</ul>\n</li>\n<li>\n<p>The pinned fields are defined in <a href=\"https://raw.githubusercontent.com/rabix/cwl-format/master/cwlformat/keyorder.yml\" rel=\"nofollow\">this YAML file</a>.</p>\n</li>\n<li>\n<p>Specific pinned field orderings are available for CommandLineTool,\nExpressionTool and Workflow processes. All other types follow a generic\npinned field list.</p>\n</li>\n<li>\n<p>All strings that fit within 80 columns are expressed in flow style.\nLonger strings or strings with new lines are expressed in block style.</p>\n</li>\n<li>\n<p>All lists and maps are expressed in block style</p>\n</li>\n<li>\n<p>The ordering of all lists are preserved</p>\n</li>\n<li>\n<p>Indentation is 2 spaces, including for lists</p>\n</li>\n</ul>\n<h2>Conformance tests</h2>\n<p>A series of documents are found in the <a href=\"https://github.com/rabix/cwl-format/tree/master/tests/cwl\" rel=\"nofollow\"><code>tests</code></a> directory that can be used\nto check correctness of a formatter. The files named <code>original-*</code> are the input files\nand the files named <code>formatted-*</code> are the corresponding formatted documents. There\nare a mixture of YAML and JSON input files. Formatted files are always YAML.</p>\n<h1>CWL Exploder</h1>\n<p>This takes as input a packed workflow (workflow with all steps in lined) and splits it\nrecursively into parts.</p>\n<pre><code>cwl-explode formatted-atac-seq-pipeline.cwl expected-exploded-atac-seq.cwl\n</code></pre>\n<p>Results in the <a href=\"https://github.com/rabix/cwl-format/blob/master/tests/cwl/expected-exploded-atac-seq.cwl\" rel=\"nofollow\">exploded parent workflow</a>\nand <a href=\"https://github.com/rabix/cwl-format/tree/master/tests/cwl/expected-exploded-atac-seq.cwl.steps\" rel=\"nofollow\">52 sub-components</a></p>\n\n          </div>"}, "last_serial": 7137949, "releases": {"2020.3.26": [{"comment_text": "", "digests": {"md5": "1e9aa3f1e618e7660348b349ed7856f7", "sha256": "a886c7e9cac5f1cd5909b34468f96ff902a4c15407f7aa5106bd82dacf8d2b7f"}, "downloads": -1, "filename": "cwlformat-2020.3.26-py3-none-any.whl", "has_sig": false, "md5_digest": "1e9aa3f1e618e7660348b349ed7856f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4569, "upload_time": "2020-03-26T16:49:27", "upload_time_iso_8601": "2020-03-26T16:49:27.762978Z", "url": "https://files.pythonhosted.org/packages/bf/dc/0ad9785b90ecc5d706287f696b14678e3a5bfec54fe4e296dbe5aea49544/cwlformat-2020.3.26-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23387870696c0f6dec605fb63ff159a", "sha256": "1a46af051e18e817968ee02bb35682bdbfe0510c2b1d4aaace644588c57b37a5"}, "downloads": -1, "filename": "cwlformat-2020.3.26.tar.gz", "has_sig": false, "md5_digest": "e23387870696c0f6dec605fb63ff159a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3471, "upload_time": "2020-03-26T16:49:30", "upload_time_iso_8601": "2020-03-26T16:49:30.038037Z", "url": "https://files.pythonhosted.org/packages/58/35/1d4a9751cfc69ba9e504309084f3fb590ea74346d308c60798cfcc635e99/cwlformat-2020.3.26.tar.gz", "yanked": false}], "2020.3.26.1": [{"comment_text": "", "digests": {"md5": "56339670cc15072e02f2ea6c5d2a919e", "sha256": "baf1cd47d8175ea1fe1496f641f8649fc2b9ac360ff86356aff08c0805533cca"}, "downloads": -1, "filename": "cwlformat-2020.3.26.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56339670cc15072e02f2ea6c5d2a919e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 4606, "upload_time": "2020-03-26T19:09:22", "upload_time_iso_8601": "2020-03-26T19:09:22.315109Z", "url": "https://files.pythonhosted.org/packages/f7/fd/c3d79be6140edbc2e958575d828897233e42419b4431291db0ca59064890/cwlformat-2020.3.26.1-py3-none-any.whl", "yanked": false}], "2020.4.30": [{"comment_text": "", "digests": {"md5": "ac954c0f0cc61f16b84334e4760915c2", "sha256": "3ee8481982e44542ec4d666fcc3026f2ed51bc997f3f77c8584dca5181e7b05c"}, "downloads": -1, "filename": "cwlformat-2020.4.30-py3-none-any.whl", "has_sig": false, "md5_digest": "ac954c0f0cc61f16b84334e4760915c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 10377, "upload_time": "2020-04-30T14:50:28", "upload_time_iso_8601": "2020-04-30T14:50:28.546985Z", "url": "https://files.pythonhosted.org/packages/e2/cf/4306fa90409f83d9688a59c6eb67ef64c3197d31f5c5bab6077e29235dda/cwlformat-2020.4.30-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "559352c3d6ca0699a969e7364d2d57bb", "sha256": "ecffb7aa06b52cb2d3539fc6f3ec3beb54f33bd0015c88b6d9df3804aa63eb66"}, "downloads": -1, "filename": "cwlformat-2020.4.30.tar.gz", "has_sig": false, "md5_digest": "559352c3d6ca0699a969e7364d2d57bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 4919, "upload_time": "2020-04-30T14:50:29", "upload_time_iso_8601": "2020-04-30T14:50:29.953533Z", "url": "https://files.pythonhosted.org/packages/e2/e4/b7cd116c6eb844fa20e43bc8e5af39aaf4048fa2ba3433b154293bba29aa/cwlformat-2020.4.30.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac954c0f0cc61f16b84334e4760915c2", "sha256": "3ee8481982e44542ec4d666fcc3026f2ed51bc997f3f77c8584dca5181e7b05c"}, "downloads": -1, "filename": "cwlformat-2020.4.30-py3-none-any.whl", "has_sig": false, "md5_digest": "ac954c0f0cc61f16b84334e4760915c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 10377, "upload_time": "2020-04-30T14:50:28", "upload_time_iso_8601": "2020-04-30T14:50:28.546985Z", "url": "https://files.pythonhosted.org/packages/e2/cf/4306fa90409f83d9688a59c6eb67ef64c3197d31f5c5bab6077e29235dda/cwlformat-2020.4.30-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "559352c3d6ca0699a969e7364d2d57bb", "sha256": "ecffb7aa06b52cb2d3539fc6f3ec3beb54f33bd0015c88b6d9df3804aa63eb66"}, "downloads": -1, "filename": "cwlformat-2020.4.30.tar.gz", "has_sig": false, "md5_digest": "559352c3d6ca0699a969e7364d2d57bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 4919, "upload_time": "2020-04-30T14:50:29", "upload_time_iso_8601": "2020-04-30T14:50:29.953533Z", "url": "https://files.pythonhosted.org/packages/e2/e4/b7cd116c6eb844fa20e43bc8e5af39aaf4048fa2ba3433b154293bba29aa/cwlformat-2020.4.30.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:11 2020"}