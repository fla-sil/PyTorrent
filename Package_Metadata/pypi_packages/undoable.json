{"info": {"author": "asrp", "author_email": "asrp@email.com", "bugtrack_url": null, "classifiers": [], "description": "Undoable\n========\n\nA simple Python list (``observed_list``) and dict (``observed_dict``)\nwith callbacks when they are changed and undo/redo using these\ncallbacks.\n\nAlso includes ``observed_tree``, a labelled tree with ordered children\nimplemented as Python list with parent pointers and a bit of consistency\ncheck.\n\nImplementation\n--------------\n\nImplemented using the `command\npattern <https://en.wikipedia.org/wiki/Command_pattern>`__. See `my blog\npost discussing this <https://asrp.github.io/blog/undo-redo.html>`__.\n\nExample\n-------\n\n::\n\n    pip install undoable\n\nCallbacks\n~~~~~~~~~\n\n::\n\n    >>> from undoable import observed_dict, observed_list\n    >>> def printargs(*args):\n    ...     print args\n    ... \n    >>> l = observed_list([1, 2, 3])\n    >>> l.callbacks.append(printargs)\n    >>> l.append(4)\n    ([1, 2, 3, 4], 'append', 4)\n    >>> l.extend([5, 6, 7])\n    ([1, 2, 3, 4, 5, 6, 7], 'extend', [5, 6, 7])\n    >>> d = observed_dict({1: \"one\", 2: \"two\"})\n    >>> d.callbacks.append(printargs)\n    >>> d[3] = \"three\"\n    ({1: 'one', 2: 'two', 3: 'three'}, '__setitem__', 3, 'three')\n    >>> d2 = observed_dict()\n    >>> d2.undocallbacks.append(printargs)\n    >>> d2[1] = \"one\"\n    ({1: 'one'}, ('__delitem__', 1), ('__setitem__', 1, 'one'))\n\nUndo/redo\n~~~~~~~~~\n\n::\n\n    >>> from undoable import UndoLog, observed_dict, observed_list\n    >>> u = UndoLog()\n    >>> d = observed_dict({1: \"one\", 2: \"two\"})\n    >>> l = observed_list([1, 2, 3])\n    >>> u.add(d)\n    >>> u.add(l)\n    >>> l.append(1)\n    >>> d[3] = \"Hello\"\n    >>> l\n    [1, 2, 3, 1]\n    >>> d\n    {1: 'one', 2: 'two', 3: 'Hello'}\n    >>> u.undo()\n    >>> d\n    {1: 'one', 2: 'two'}\n    >>> u.undo()\n    >>> l\n    [1, 2, 3]\n    >>> u.redo()\n    >>> u.redo()\n    >>> l\n    [1, 2, 3, 1]\n    >>> d\n    {1: 'one', 2: 'two', 3: 'Hello'}\n    >>> u.start_group(\"foo\")\n    True\n    >>> d[53] = \"user\"\n    >>> del d[1]\n    >>> u.end_group(\"foo\")\n    >>> d\n    {2: 'two', 3: 'Hello', 53: 'user'}\n    >>> u.undo()\n    >>> d\n    {1: 'one', 2: 'two', 3: 'Hello'}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asrp/undoable", "keywords": "callbacks undo observer", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "undoable", "package_url": "https://pypi.org/project/undoable/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/undoable/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/asrp/undoable"}, "release_url": "https://pypi.org/project/undoable/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Simple Python list and dict with undo/redo", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple Python list (<tt>observed_list</tt>) and dict (<tt>observed_dict</tt>)\nwith callbacks when they are changed and undo/redo using these\ncallbacks.</p>\n<p>Also includes <tt>observed_tree</tt>, a labelled tree with ordered children\nimplemented as Python list with parent pointers and a bit of consistency\ncheck.</p>\n<div id=\"implementation\">\n<h2>Implementation</h2>\n<p>Implemented using the <a href=\"https://en.wikipedia.org/wiki/Command_pattern\" rel=\"nofollow\">command\npattern</a>. See <a href=\"https://asrp.github.io/blog/undo-redo.html\" rel=\"nofollow\">my blog\npost discussing this</a>.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>pip install undoable\n</pre>\n<div id=\"callbacks\">\n<h3>Callbacks</h3>\n<pre>&gt;&gt;&gt; from undoable import observed_dict, observed_list\n&gt;&gt;&gt; def printargs(*args):\n...     print args\n...\n&gt;&gt;&gt; l = observed_list([1, 2, 3])\n&gt;&gt;&gt; l.callbacks.append(printargs)\n&gt;&gt;&gt; l.append(4)\n([1, 2, 3, 4], 'append', 4)\n&gt;&gt;&gt; l.extend([5, 6, 7])\n([1, 2, 3, 4, 5, 6, 7], 'extend', [5, 6, 7])\n&gt;&gt;&gt; d = observed_dict({1: \"one\", 2: \"two\"})\n&gt;&gt;&gt; d.callbacks.append(printargs)\n&gt;&gt;&gt; d[3] = \"three\"\n({1: 'one', 2: 'two', 3: 'three'}, '__setitem__', 3, 'three')\n&gt;&gt;&gt; d2 = observed_dict()\n&gt;&gt;&gt; d2.undocallbacks.append(printargs)\n&gt;&gt;&gt; d2[1] = \"one\"\n({1: 'one'}, ('__delitem__', 1), ('__setitem__', 1, 'one'))\n</pre>\n</div>\n<div id=\"undo-redo\">\n<h3>Undo/redo</h3>\n<pre>&gt;&gt;&gt; from undoable import UndoLog, observed_dict, observed_list\n&gt;&gt;&gt; u = UndoLog()\n&gt;&gt;&gt; d = observed_dict({1: \"one\", 2: \"two\"})\n&gt;&gt;&gt; l = observed_list([1, 2, 3])\n&gt;&gt;&gt; u.add(d)\n&gt;&gt;&gt; u.add(l)\n&gt;&gt;&gt; l.append(1)\n&gt;&gt;&gt; d[3] = \"Hello\"\n&gt;&gt;&gt; l\n[1, 2, 3, 1]\n&gt;&gt;&gt; d\n{1: 'one', 2: 'two', 3: 'Hello'}\n&gt;&gt;&gt; u.undo()\n&gt;&gt;&gt; d\n{1: 'one', 2: 'two'}\n&gt;&gt;&gt; u.undo()\n&gt;&gt;&gt; l\n[1, 2, 3]\n&gt;&gt;&gt; u.redo()\n&gt;&gt;&gt; u.redo()\n&gt;&gt;&gt; l\n[1, 2, 3, 1]\n&gt;&gt;&gt; d\n{1: 'one', 2: 'two', 3: 'Hello'}\n&gt;&gt;&gt; u.start_group(\"foo\")\nTrue\n&gt;&gt;&gt; d[53] = \"user\"\n&gt;&gt;&gt; del d[1]\n&gt;&gt;&gt; u.end_group(\"foo\")\n&gt;&gt;&gt; d\n{2: 'two', 3: 'Hello', 53: 'user'}\n&gt;&gt;&gt; u.undo()\n&gt;&gt;&gt; d\n{1: 'one', 2: 'two', 3: 'Hello'}\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2672632, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "fc869b95b9da23c0e64b7a7e9e975391", "sha256": "efd6fbe465f220388ffa5db67b2576a027afb11114966f972143aff59e9db25b"}, "downloads": -1, "filename": "undoable-0.3.tar.gz", "has_sig": false, "md5_digest": "fc869b95b9da23c0e64b7a7e9e975391", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4818, "upload_time": "2017-02-28T08:34:20", "upload_time_iso_8601": "2017-02-28T08:34:20.738571Z", "url": "https://files.pythonhosted.org/packages/ea/96/f9fbbdebcc17ccc66f88b4794c2781bc96d4a51bb12001a05bc2786a36f8/undoable-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "8e97dfb7408f615867abd3b85dd53606", "sha256": "57db8770cf5f27fb816784b7bbd03a1dfcd54730807a724dfe2ea4e452e09988"}, "downloads": -1, "filename": "undoable-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8e97dfb7408f615867abd3b85dd53606", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4809, "upload_time": "2017-02-28T08:39:39", "upload_time_iso_8601": "2017-02-28T08:39:39.788102Z", "url": "https://files.pythonhosted.org/packages/54/47/939631e14bec61f1cc44c7084b92f0555381d9b2930f15528709822879c7/undoable-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8e97dfb7408f615867abd3b85dd53606", "sha256": "57db8770cf5f27fb816784b7bbd03a1dfcd54730807a724dfe2ea4e452e09988"}, "downloads": -1, "filename": "undoable-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8e97dfb7408f615867abd3b85dd53606", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4809, "upload_time": "2017-02-28T08:39:39", "upload_time_iso_8601": "2017-02-28T08:39:39.788102Z", "url": "https://files.pythonhosted.org/packages/54/47/939631e14bec61f1cc44c7084b92f0555381d9b2930f15528709822879c7/undoable-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:49 2020"}