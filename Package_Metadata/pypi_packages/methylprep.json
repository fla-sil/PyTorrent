{"info": {"author": "Life Epigenetics", "author_email": "info@lifeegx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: Jupyter", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "`methylprep` is a python package for processing Illumina methylation array data.\nView on [ReadTheDocs.](https://life-epigenetics-methylprep.readthedocs-hosted.com/en/latest/)\n\n[![Readthedocs](https://readthedocs.com/projects/life-epigenetics-methylprep/badge/?version=latest)](https://life-epigenetics-methylprep.readthedocs-hosted.com/en/latest/) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![CircleCI](https://circleci.com/gh/LifeEGX/methylprep.svg?style=shield)](https://circleci.com/gh/LifeEGX/methylprep) [![Build status](https://ci.appveyor.com/api/projects/status/jqhqss0ks58kt4mh?svg=true)](https://ci.appveyor.com/project/life_epigenetics/methpype-ck8v2)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/5112cd82685548ffb8c64961e286180b)](https://www.codacy.com/app/marcmaxmeister/methylprep?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LifeEGX/methylprep&amp;utm_campaign=Badge_Grade)\n[![Coverage Status](https://coveralls.io/repos/github/LifeEGX/methylprep/badge.svg?t=mwigt8)](https://coveralls.io/github/LifeEGX/methylprep) ![PyPI-Downloads](https://img.shields.io/pypi/dm/methylprep.svg?label=pypi%20downloads&logo=PyPI&logoColor=white)\n\n## Methylprep is part of the methyl-suite\n\n![](https://github.com/LifeEGX/methylprep/blob/dev/docs/methyl-suite.png?raw=true)\n\n`methylprep` is part of a methyl-suite of python packages that provide functions to process and analyze DNA methylation data from Illumina arrays (27, 450k, and EPIC/850k supported). The `methylprep` package contains functions for processing raw data files from arrays, or downloading (and processing) public data sets from GEO (the NIH Gene Expression Omnibus is a database repository), or from ArrayExpress. It contains both a command line interface (CLI) for processing data from local files, and a set of functions for building a custom pipeline in a jupyter notebook or python scripting environment. The aim is to offer a standard process, with flexibility for those who want it.\n\n## Related packages\n\nYou should install all three components, as they work together.\n\n- `methylcheck` includes\n   - quality control (QC) functions for filtering out unreliable probes, based on the published literature and outlier detection.\n   - sample outlier detection\n   - array level QC plots, based on Genome Studio functions\n   - data visualization functions based on seaborn and matplotlib graphic libraries.\n   - predict sex of human samples from probes\n   - interactive method for assigning samples to groups, based on array data, in a Jupyter notebook \n- `methylize` provides analysis functions\n   - differentially methylated probe statistics (between treatment and control samples)\n   - volcano plots (which probes are the most different)\n   - manhattan plot (where in genome are the differences)\n\n## Installation\n\nmethylprep maintains configuration files for your Python package manager of choice: [pipenv](https://pipenv.readthedocs.io/en/latest/) or [pip](https://pip.pypa.io/en/stable/). Conda install is coming soon.\n\n```python\npip install methylprep\n```\n\n---\n\n## Command line data processing\n\nThe most common use case is processing `.idat` files on a computer within a command line interface. This can also be done in a Jupyter notebook, but large data sets take hours to run and Jupyter will take longer to run these than command line.\n\n![processing pipeline](https://github.com/LifeEGX/methylprep/blob/master/docs/methylprep-processing-pipeline.png?raw=true)\n\n### `process`\n\n```shell\npython -m methylprep -v process -d <filepath> --all\n```\nThe `--all` option applies the most common settings. Here are some specific options:\n\nArgument | Type | Default | Description\n--- | --- | --- | ---\n`data_dir` | `str`, `Path` | **REQUIRED** | Base directory of the sample sheet and associated IDAT files\n`array_type` | `str` | `None` | Code of the array type being processed. Possible values are `custom`, `27k`, `450k`, `epic`, and `epic+`. If not provided, the pacakage will attempt to determine the array type based on the number of probes in the raw data. If the batch contains samples from different array types, this may not work. Our data `download` function attempts to split different arrays into separate batches for processing to accommodate this.\n`manifest_filepath` | `str`, `Path` | `None` | File path for the array's manifest file. If not provided, this file will be downloaded from a Life Epigenetics archive.\n`no_sample_sheet` | `bool` | `None` | pass in \"--no_sample_sheet\" from command line to trigger sample sheet auto-generation. Sample names will be based on idat filenames. Useful for public GEO data sets that lack sample sheets.\n`sample_sheet_filepath` | `str`, `Path` | `None` | File path of the project's sample sheet. If not provided, the package will try to find one based on the supplied data directory path.\n`sample_name` | `str` to list | `None` | List of sample names to process, in the CLI format of `-n sample1 sample2 sample3 etc`. If provided, only those samples specified will be processed. Otherwise all samples found in the sample sheet will be processed.\n`export` | `bool` | `False` | Add flag to export the processed data to CSV.\n`betas` | `bool` | `False` | Add flag to output a pickled dataframe of beta values of sample probe values.\n`m_value` | `bool` | `False` | Add flag to output a pickled dataframe of m_values of samples probe values.\n`batch_size` | `int` | `None` | Optional: splits the batch into smaller sized sets for processing. Useful when processing hundreds of samples that can't fit into memory. Produces multiple output files. This is also used by the package to process batches that come from different array types.\n\n`data_dir` is the one required field. If you do not provide the file path for the project's sample_sheet, it will find one based on the supplied data directory path. It will also auto detect the array type and download the corresponding manifest file for you.\n\n\n### `run_pipeline` (within a python interpreter, such as IDLE or Jupyter)\n\nRun the complete methylation processing pipeline for the given project directory, optionally exporting the results to file.\n\nReturns: A collection of DataContainer objects for each processed sample\n\n```python\nfrom methylprep import run_pipeline\n\ndata_containers = run_pipeline(data_dir, array_type=None, export=False, manifest_filepath=None, sample_sheet_filepath=None, sample_names=None)\n```\nNote: All the same input parameters from command line apply to `run_pipeline`, except `--all`. Type `dir(methylprep.run_pipeline)` in an interactive python session to see details.\n\nNote: By default, if `run_pipeline` is called as a function in a script, a list of SampleDataContainer objects is returned. However, if you specify `betas=True` or `m_value=True`, a dataframe of beta values or m-values is returned instead. All `methylcheck` functions are designed to work on a dataframe or a folder to the processed data generated by `run_pipeline`.\n\n### Getting help from command line\n\nmethylprep provides a command line interface (CLI) so the package can be used directly in bash/batchfile or windows/cmd scripts as part of building your custom processing pipeline.\n\nAll invocations of the methylprep CLI will provide contextual help, supplying the possible arguments and/or options available based on the invoked command. If you specify verbose logging the package will emit log output of DEBUG levels and above.\n\n```Shell\npython -m methylprep\n\nusage: methylprep [-h] [-v] {process,sample_sheet} ...\n\nUtility to process methylation data from Illumina IDAT files\n\npositional arguments:\n  {process,sample_sheet}\n    process             process help\n    sample_sheet        sample sheet help\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Enable verbose logging\n```\n\n---\n\n### Other commands\n\nThe methylprep cli provides these top-level commands:\n\n- `process` the main function: processing methylation data from `idat` files. Covered already.\n- `sample_sheet` to find/read/validate a sample sheet and output its contents\n- `download` download and process public data sets in NIH GEO or ArrayExpress collections. Provide the public Accession ID and it will handle the rest.\n- `composite` download a bunch of datasets from a list of GEO ids, process them all, and combine into a large dataset\n- `alert` scan GEO database and construct a CSV / dataframe of sample meta data and phenotypes for all studies matching a keyword\n\n### `download`\n\nThere are thousands of publically accessible DNA methylation data sets available via the GEO (US NCBI NIH) https://www.ncbi.nlm.nih.gov/geo/ and ArrayExpress (UK) https://www.ebi.ac.uk/arrayexpress/ websites. This function makes it easy to import them and build a reference library of methylation data.\n\nThe CLI now includes a `download` option. Supply the GEO ID or ArrayExpress ID and it will locate the files, download the idats, process them, and build a dataframe of the associated meta data. This dataframe format should be compatible with methylcheck and methylize.\n\nArgument | Type | Default | Description\n--- | --- | --- | ---  \n-h, --help ||        show this help message and exit\n  -d , --data_dir | `str` | [required path] | path to where the data series will be saved. Folder must exist already.\n  -i ID, --id ID | `str` | [required ID] |The dataset's reference ID (Starts with `GSE` for GEO or `E-MTAB-` for ArrayExpress)\n  -l LIST, --list LIST | `multiple strings` | optional | List of series IDs (can be either GEO or ArrayExpress), for partial downloading\n  -o, --dict_only | `True` | pass flag only | If passed, will only create dictionaries and not process any samples\n  -b BATCH_SIZE, --batch_size BATCH_SIZE | `int` | optional | Number of samples to process at a time, 100 by default.\n\nWhen processing large batches of raw `.idat` files, specify `--batch_size` to break the processing up into smaller batches so the computer's memory won't overload. This is off by default when using `process` but is ON when using `download` and set to batch_size of 100. Set to 0 to force processing everything as one batch. The output files will be split into multiple files afterwards, and you can recomine them using `methylcheck.load`.\n\n### `sample_sheet`\n\nFind and parse the sample sheet in a given directory and emit the details of each sample. This is not required for actually processing data.\n\n```Shell\n>>> python -m methylprep sample_sheet\n```\n\nusage: methylprep sample_sheet -d DATA_DIR\n\noptional arguments:\n\n  Argument | Type | Description\n  --- | --- | ---   \n  -h, --help || show this help message and exit\n  -d, --data_dir | string | Base directory of the sample sheet and associated IDAT files\n  -c, --create | bool | If specified, this creates a sample sheet from idats instead of parsing an existing sample sheet. The output file will be called \"samplesheet.csv\".\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE | string | If creating a sample sheet, you can provide an optional output filename (CSV).                        \n\n\n#### example of creating a sample sheet\n```bash\n~/methylprep$ python -m methylprep -v sample_sheet -d ~/GSE133062/GSE133062 --create\nINFO:methylprep.files.sample_sheets:[!] Created sample sheet: ~/GSE133062/GSE133062/samplesheet.csv with 70 GSM_IDs\nINFO:methylprep.files.sample_sheets:Searching for sample_sheet in ~/GSE133062/GSE133062\nINFO:methylprep.files.sample_sheets:Found sample sheet file: ~/GSE133062/GSE133062/samplesheet.csv\nINFO:methylprep.files.sample_sheets:Parsing sample_sheet\n200861170112_R01C01\n200882160083_R03C01\n200861170067_R02C01\n200498360027_R04C01\n200498360027_R08C01\n200861170067_R01C01\n200861170072_R05C01\n200498360027_R06C01\n200861170072_R01C01\n200861170067_R03C01\n200882160070_R02C01\n...\n```\n\n### `composite`\n\nA tool to build a data set from a list of public datasets.\noptional arguments:\n\nArgument | Type | Description\n--- | --- | ---  \n  -h, --help || show this help message and exit\n  -l LIST, --list LIST | filepath | A text file containg several GEO/ArrayExpress series ids. One ID per line in file. Note: The GEO Accession Viewer lets you export search results in this format.\n  -d DATA_DIR, --data_dir DATA_DIR | filepath | Folder where to save data (and read the ID list file).\n  -c, --control | bool | If flagged, this will only save samples that have the word \"control\" in their meta data.\n  -k KEYWORD --keyword KEYWORD | string | Only retain samples that include this keyword (e.g. blood) somewhere in their meta data.\n  -e, --export | bool | If passed, saves raw processing file data for each sample. (unlike meth-process, this is off by default)\n  -b, --betas  | bool | If passed, output returns a dataframe of beta values for samples x probes. Local file beta_values.npy is also created.\n  -m, --m_value  | bool | If passed, output returns a dataframe of M-values for samples x probes. Local file m_values.npy is also created.\n\n### `alert`\n\nFunction to check for new datasets on GEO and update a csv each time it is run. Usable as a weekly cron command line function. Saves data to a local csv to compare with old datasets in <pattern>_meta.csv. Saves the dates of each dataset from GEO; calculates any new ones as new rows. updates csv.\n\n   Argument | Type | Description\n   --- | --- | ---  \n   keyword | string | Specify a word or phrase to narrow the search, such as \"spleen blood\".\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LifeEGX/methylprep", "keywords": "methylation dna data processing epigenetics illumina", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "methylprep", "package_url": "https://pypi.org/project/methylprep/", "platform": "", "project_url": "https://pypi.org/project/methylprep/", "project_urls": {"Documentation": "https://life-epigenetics-methylprep.readthedocs-hosted.com/en/latest/", "Funding": "https://lifeegx.com/", "Homepage": "https://github.com/LifeEGX/methylprep", "Source": "https://github.com/lifeEGX/methylprep/"}, "release_url": "https://pypi.org/project/methylprep/1.2.11/", "requires_dist": ["numpy", "pandas", "scipy", "statsmodels", "tqdm", "bs4", "lxml"], "requires_python": "", "summary": "Python-based Illumina methylation array preprocessing software", "version": "1.2.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><code>methylprep</code> is a python package for processing Illumina methylation array data.\nView on <a href=\"https://life-epigenetics-methylprep.readthedocs-hosted.com/en/latest/\" rel=\"nofollow\">ReadTheDocs.</a></p>\n<p><a href=\"https://life-epigenetics-methylprep.readthedocs-hosted.com/en/latest/\" rel=\"nofollow\"><img alt=\"Readthedocs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b104d3a584a0d88943e2e6423a32cbcb9e8ba02/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6c6966652d65706967656e65746963732d6d657468796c707265702f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a> <a href=\"https://circleci.com/gh/LifeEGX/methylprep\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd4cc7cf8521b90a4a3aa57167c7cbede3dbd813/68747470733a2f2f636972636c6563692e636f6d2f67682f4c6966654547582f6d657468796c707265702e7376673f7374796c653d736869656c64\"></a> <a href=\"https://ci.appveyor.com/project/life_epigenetics/methpype-ck8v2\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d16fb81a471179d03b4e728a418433d1cda75d5/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6a7168717373306b7335386b74346d683f7376673d74727565\"></a>\n<a href=\"https://www.codacy.com/app/marcmaxmeister/methylprep?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LifeEGX/methylprep&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c938686727d1883c214b959ebd31eec19a6f096/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3531313263643832363835353438666662386336343936316532383631383062\"></a>\n<a href=\"https://coveralls.io/github/LifeEGX/methylprep\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fa9e1225cc4d94406693b5a1039e997fa96ad42/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c6966654547582f6d657468796c707265702f62616467652e7376673f743d6d7769677438\"></a> <img alt=\"PyPI-Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8ca92d389163306f2086a8b9a76cf6bf5629a05/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6d657468796c707265702e7376673f6c6162656c3d70797069253230646f776e6c6f616473266c6f676f3d50795049266c6f676f436f6c6f723d7768697465\"></p>\n<h2>Methylprep is part of the methyl-suite</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9e69f05d04408503895cfcac65c208d40e86e9c/68747470733a2f2f6769746875622e636f6d2f4c6966654547582f6d657468796c707265702f626c6f622f6465762f646f63732f6d657468796c2d73756974652e706e673f7261773d74727565\"></p>\n<p><code>methylprep</code> is part of a methyl-suite of python packages that provide functions to process and analyze DNA methylation data from Illumina arrays (27, 450k, and EPIC/850k supported). The <code>methylprep</code> package contains functions for processing raw data files from arrays, or downloading (and processing) public data sets from GEO (the NIH Gene Expression Omnibus is a database repository), or from ArrayExpress. It contains both a command line interface (CLI) for processing data from local files, and a set of functions for building a custom pipeline in a jupyter notebook or python scripting environment. The aim is to offer a standard process, with flexibility for those who want it.</p>\n<h2>Related packages</h2>\n<p>You should install all three components, as they work together.</p>\n<ul>\n<li><code>methylcheck</code> includes\n<ul>\n<li>quality control (QC) functions for filtering out unreliable probes, based on the published literature and outlier detection.</li>\n<li>sample outlier detection</li>\n<li>array level QC plots, based on Genome Studio functions</li>\n<li>data visualization functions based on seaborn and matplotlib graphic libraries.</li>\n<li>predict sex of human samples from probes</li>\n<li>interactive method for assigning samples to groups, based on array data, in a Jupyter notebook</li>\n</ul>\n</li>\n<li><code>methylize</code> provides analysis functions\n<ul>\n<li>differentially methylated probe statistics (between treatment and control samples)</li>\n<li>volcano plots (which probes are the most different)</li>\n<li>manhattan plot (where in genome are the differences)</li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>methylprep maintains configuration files for your Python package manager of choice: <a href=\"https://pipenv.readthedocs.io/en/latest/\" rel=\"nofollow\">pipenv</a> or <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>. Conda install is coming soon.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">methylprep</span>\n</pre>\n<hr>\n<h2>Command line data processing</h2>\n<p>The most common use case is processing <code>.idat</code> files on a computer within a command line interface. This can also be done in a Jupyter notebook, but large data sets take hours to run and Jupyter will take longer to run these than command line.</p>\n<p><img alt=\"processing pipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aae3b4d29175db77384e305701b69066892165ef/68747470733a2f2f6769746875622e636f6d2f4c6966654547582f6d657468796c707265702f626c6f622f6d61737465722f646f63732f6d657468796c707265702d70726f63657373696e672d706970656c696e652e706e673f7261773d74727565\"></p>\n<h3><code>process</code></h3>\n<pre>python -m methylprep -v process -d &lt;filepath&gt; --all\n</pre>\n<p>The <code>--all</code> option applies the most common settings. Here are some specific options:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data_dir</code></td>\n<td><code>str</code>, <code>Path</code></td>\n<td><strong>REQUIRED</strong></td>\n<td>Base directory of the sample sheet and associated IDAT files</td>\n</tr>\n<tr>\n<td><code>array_type</code></td>\n<td><code>str</code></td>\n<td><code>None</code></td>\n<td>Code of the array type being processed. Possible values are <code>custom</code>, <code>27k</code>, <code>450k</code>, <code>epic</code>, and <code>epic+</code>. If not provided, the pacakage will attempt to determine the array type based on the number of probes in the raw data. If the batch contains samples from different array types, this may not work. Our data <code>download</code> function attempts to split different arrays into separate batches for processing to accommodate this.</td>\n</tr>\n<tr>\n<td><code>manifest_filepath</code></td>\n<td><code>str</code>, <code>Path</code></td>\n<td><code>None</code></td>\n<td>File path for the array's manifest file. If not provided, this file will be downloaded from a Life Epigenetics archive.</td>\n</tr>\n<tr>\n<td><code>no_sample_sheet</code></td>\n<td><code>bool</code></td>\n<td><code>None</code></td>\n<td>pass in \"--no_sample_sheet\" from command line to trigger sample sheet auto-generation. Sample names will be based on idat filenames. Useful for public GEO data sets that lack sample sheets.</td>\n</tr>\n<tr>\n<td><code>sample_sheet_filepath</code></td>\n<td><code>str</code>, <code>Path</code></td>\n<td><code>None</code></td>\n<td>File path of the project's sample sheet. If not provided, the package will try to find one based on the supplied data directory path.</td>\n</tr>\n<tr>\n<td><code>sample_name</code></td>\n<td><code>str</code> to list</td>\n<td><code>None</code></td>\n<td>List of sample names to process, in the CLI format of <code>-n sample1 sample2 sample3 etc</code>. If provided, only those samples specified will be processed. Otherwise all samples found in the sample sheet will be processed.</td>\n</tr>\n<tr>\n<td><code>export</code></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>Add flag to export the processed data to CSV.</td>\n</tr>\n<tr>\n<td><code>betas</code></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>Add flag to output a pickled dataframe of beta values of sample probe values.</td>\n</tr>\n<tr>\n<td><code>m_value</code></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>Add flag to output a pickled dataframe of m_values of samples probe values.</td>\n</tr>\n<tr>\n<td><code>batch_size</code></td>\n<td><code>int</code></td>\n<td><code>None</code></td>\n<td>Optional: splits the batch into smaller sized sets for processing. Useful when processing hundreds of samples that can't fit into memory. Produces multiple output files. This is also used by the package to process batches that come from different array types.</td>\n</tr></tbody></table>\n<p><code>data_dir</code> is the one required field. If you do not provide the file path for the project's sample_sheet, it will find one based on the supplied data directory path. It will also auto detect the array type and download the corresponding manifest file for you.</p>\n<h3><code>run_pipeline</code> (within a python interpreter, such as IDLE or Jupyter)</h3>\n<p>Run the complete methylation processing pipeline for the given project directory, optionally exporting the results to file.</p>\n<p>Returns: A collection of DataContainer objects for each processed sample</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">methylprep</span> <span class=\"kn\">import</span> <span class=\"n\">run_pipeline</span>\n\n<span class=\"n\">data_containers</span> <span class=\"o\">=</span> <span class=\"n\">run_pipeline</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"p\">,</span> <span class=\"n\">array_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">export</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">manifest_filepath</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sample_sheet_filepath</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sample_names</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Note: All the same input parameters from command line apply to <code>run_pipeline</code>, except <code>--all</code>. Type <code>dir(methylprep.run_pipeline)</code> in an interactive python session to see details.</p>\n<p>Note: By default, if <code>run_pipeline</code> is called as a function in a script, a list of SampleDataContainer objects is returned. However, if you specify <code>betas=True</code> or <code>m_value=True</code>, a dataframe of beta values or m-values is returned instead. All <code>methylcheck</code> functions are designed to work on a dataframe or a folder to the processed data generated by <code>run_pipeline</code>.</p>\n<h3>Getting help from command line</h3>\n<p>methylprep provides a command line interface (CLI) so the package can be used directly in bash/batchfile or windows/cmd scripts as part of building your custom processing pipeline.</p>\n<p>All invocations of the methylprep CLI will provide contextual help, supplying the possible arguments and/or options available based on the invoked command. If you specify verbose logging the package will emit log output of DEBUG levels and above.</p>\n<pre>python -m methylprep\n\nusage: methylprep <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">{</span>process,sample_sheet<span class=\"o\">}</span> ...\n\nUtility to process methylation data from Illumina IDAT files\n\npositional arguments:\n  <span class=\"o\">{</span>process,sample_sheet<span class=\"o\">}</span>\n    process             process <span class=\"nb\">help</span>\n    sample_sheet        sample sheet <span class=\"nb\">help</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -v, --verbose         Enable verbose logging\n</pre>\n<hr>\n<h3>Other commands</h3>\n<p>The methylprep cli provides these top-level commands:</p>\n<ul>\n<li><code>process</code> the main function: processing methylation data from <code>idat</code> files. Covered already.</li>\n<li><code>sample_sheet</code> to find/read/validate a sample sheet and output its contents</li>\n<li><code>download</code> download and process public data sets in NIH GEO or ArrayExpress collections. Provide the public Accession ID and it will handle the rest.</li>\n<li><code>composite</code> download a bunch of datasets from a list of GEO ids, process them all, and combine into a large dataset</li>\n<li><code>alert</code> scan GEO database and construct a CSV / dataframe of sample meta data and phenotypes for all studies matching a keyword</li>\n</ul>\n<h3><code>download</code></h3>\n<p>There are thousands of publically accessible DNA methylation data sets available via the GEO (US NCBI NIH) <a href=\"https://www.ncbi.nlm.nih.gov/geo/\" rel=\"nofollow\">https://www.ncbi.nlm.nih.gov/geo/</a> and ArrayExpress (UK) <a href=\"https://www.ebi.ac.uk/arrayexpress/\" rel=\"nofollow\">https://www.ebi.ac.uk/arrayexpress/</a> websites. This function makes it easy to import them and build a reference library of methylation data.</p>\n<p>The CLI now includes a <code>download</code> option. Supply the GEO ID or ArrayExpress ID and it will locate the files, download the idats, process them, and build a dataframe of the associated meta data. This dataframe format should be compatible with methylcheck and methylize.</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-h, --help</td>\n<td></td>\n<td>show this help message and exit</td>\n<td></td>\n</tr>\n<tr>\n<td>-d , --data_dir</td>\n<td><code>str</code></td>\n<td>[required path]</td>\n<td>path to where the data series will be saved. Folder must exist already.</td>\n</tr>\n<tr>\n<td>-i ID, --id ID</td>\n<td><code>str</code></td>\n<td>[required ID]</td>\n<td>The dataset's reference ID (Starts with <code>GSE</code> for GEO or <code>E-MTAB-</code> for ArrayExpress)</td>\n</tr>\n<tr>\n<td>-l LIST, --list LIST</td>\n<td><code>multiple strings</code></td>\n<td>optional</td>\n<td>List of series IDs (can be either GEO or ArrayExpress), for partial downloading</td>\n</tr>\n<tr>\n<td>-o, --dict_only</td>\n<td><code>True</code></td>\n<td>pass flag only</td>\n<td>If passed, will only create dictionaries and not process any samples</td>\n</tr>\n<tr>\n<td>-b BATCH_SIZE, --batch_size BATCH_SIZE</td>\n<td><code>int</code></td>\n<td>optional</td>\n<td>Number of samples to process at a time, 100 by default.</td>\n</tr></tbody></table>\n<p>When processing large batches of raw <code>.idat</code> files, specify <code>--batch_size</code> to break the processing up into smaller batches so the computer's memory won't overload. This is off by default when using <code>process</code> but is ON when using <code>download</code> and set to batch_size of 100. Set to 0 to force processing everything as one batch. The output files will be split into multiple files afterwards, and you can recomine them using <code>methylcheck.load</code>.</p>\n<h3><code>sample_sheet</code></h3>\n<p>Find and parse the sample sheet in a given directory and emit the details of each sample. This is not required for actually processing data.</p>\n<pre>&gt;&gt;&gt; python -m methylprep sample_sheet\n</pre>\n<p>usage: methylprep sample_sheet -d DATA_DIR</p>\n<p>optional arguments:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-h, --help</td>\n<td></td>\n<td>show this help message and exit</td>\n</tr>\n<tr>\n<td>-d, --data_dir</td>\n<td>string</td>\n<td>Base directory of the sample sheet and associated IDAT files</td>\n</tr>\n<tr>\n<td>-c, --create</td>\n<td>bool</td>\n<td>If specified, this creates a sample sheet from idats instead of parsing an existing sample sheet. The output file will be called \"samplesheet.csv\".</td>\n</tr>\n<tr>\n<td>-o OUTPUT_FILE, --output_file OUTPUT_FILE</td>\n<td>string</td>\n<td>If creating a sample sheet, you can provide an optional output filename (CSV).</td>\n</tr></tbody></table>\n<h4>example of creating a sample sheet</h4>\n<pre>~/methylprep$ python -m methylprep -v sample_sheet -d ~/GSE133062/GSE133062 --create\nINFO:methylprep.files.sample_sheets:<span class=\"o\">[</span>!<span class=\"o\">]</span> Created sample sheet: ~/GSE133062/GSE133062/samplesheet.csv with <span class=\"m\">70</span> GSM_IDs\nINFO:methylprep.files.sample_sheets:Searching <span class=\"k\">for</span> sample_sheet in ~/GSE133062/GSE133062\nINFO:methylprep.files.sample_sheets:Found sample sheet file: ~/GSE133062/GSE133062/samplesheet.csv\nINFO:methylprep.files.sample_sheets:Parsing sample_sheet\n200861170112_R01C01\n200882160083_R03C01\n200861170067_R02C01\n200498360027_R04C01\n200498360027_R08C01\n200861170067_R01C01\n200861170072_R05C01\n200498360027_R06C01\n200861170072_R01C01\n200861170067_R03C01\n200882160070_R02C01\n...\n</pre>\n<h3><code>composite</code></h3>\n<p>A tool to build a data set from a list of public datasets.\noptional arguments:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-h, --help</td>\n<td></td>\n<td>show this help message and exit</td>\n</tr>\n<tr>\n<td>-l LIST, --list LIST</td>\n<td>filepath</td>\n<td>A text file containg several GEO/ArrayExpress series ids. One ID per line in file. Note: The GEO Accession Viewer lets you export search results in this format.</td>\n</tr>\n<tr>\n<td>-d DATA_DIR, --data_dir DATA_DIR</td>\n<td>filepath</td>\n<td>Folder where to save data (and read the ID list file).</td>\n</tr>\n<tr>\n<td>-c, --control</td>\n<td>bool</td>\n<td>If flagged, this will only save samples that have the word \"control\" in their meta data.</td>\n</tr>\n<tr>\n<td>-k KEYWORD --keyword KEYWORD</td>\n<td>string</td>\n<td>Only retain samples that include this keyword (e.g. blood) somewhere in their meta data.</td>\n</tr>\n<tr>\n<td>-e, --export</td>\n<td>bool</td>\n<td>If passed, saves raw processing file data for each sample. (unlike meth-process, this is off by default)</td>\n</tr>\n<tr>\n<td>-b, --betas</td>\n<td>bool</td>\n<td>If passed, output returns a dataframe of beta values for samples x probes. Local file beta_values.npy is also created.</td>\n</tr>\n<tr>\n<td>-m, --m_value</td>\n<td>bool</td>\n<td>If passed, output returns a dataframe of M-values for samples x probes. Local file m_values.npy is also created.</td>\n</tr></tbody></table>\n<h3><code>alert</code></h3>\n<p>Function to check for new datasets on GEO and update a csv each time it is run. Usable as a weekly cron command line function. Saves data to a local csv to compare with old datasets in &lt;pattern&gt;_meta.csv. Saves the dates of each dataset from GEO; calculates any new ones as new rows. updates csv.</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>keyword</td>\n<td>string</td>\n<td>Specify a word or phrase to narrow the search, such as \"spleen blood\".</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6974909, "releases": {"1.0.6": [{"comment_text": "", "digests": {"md5": "1f8d2c0f0a1c036cfc4a9605b663d684", "sha256": "300e9b6697984ea8b0c738c0a0a7d3d72bab5d4389e13685d8eb70a16edbb174"}, "downloads": -1, "filename": "methylprep-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1f8d2c0f0a1c036cfc4a9605b663d684", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61945, "upload_time": "2019-08-22T15:40:25", "upload_time_iso_8601": "2019-08-22T15:40:25.498959Z", "url": "https://files.pythonhosted.org/packages/aa/65/426b7ba3c2e407cd54435819fd7e2cb66fb7c1711a8cf084fbcb9f80e22e/methylprep-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3dd578cc1e6c1e0725e2d399c42f649", "sha256": "f12e54c2c2615bc2f7942ee0279982abbbbf4b854400412c12d6b87e1005de9b"}, "downloads": -1, "filename": "methylprep-1.0.6.tar.gz", "has_sig": false, "md5_digest": "b3dd578cc1e6c1e0725e2d399c42f649", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28146, "upload_time": "2019-08-22T15:40:27", "upload_time_iso_8601": "2019-08-22T15:40:27.953795Z", "url": "https://files.pythonhosted.org/packages/66/9e/b8e04cdc5b6e45518715601660ca1109295a4db2f0c3bda1b8ca9452cf76/methylprep-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "ace23e6737631a2c013c70e81b2fc79a", "sha256": "87e8c6ef7e1e410f42fd348a341b5ea303a15ae83b24ed36e259759376de19ae"}, "downloads": -1, "filename": "methylprep-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ace23e6737631a2c013c70e81b2fc79a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 62106, "upload_time": "2019-09-03T19:13:59", "upload_time_iso_8601": "2019-09-03T19:13:59.100737Z", "url": "https://files.pythonhosted.org/packages/b9/bc/dc67a178faf89e99c9b086a854bde7686a6e7c39973567ee35f6e51b94c1/methylprep-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aed789d417f60bedd50133692cb51d1b", "sha256": "459dc042b55a9b5b8249a2bd93164d866bfa77286e8f30714e66f956c3b81d25"}, "downloads": -1, "filename": "methylprep-1.0.7.tar.gz", "has_sig": false, "md5_digest": "aed789d417f60bedd50133692cb51d1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28174, "upload_time": "2019-09-03T19:14:00", "upload_time_iso_8601": "2019-09-03T19:14:00.974762Z", "url": "https://files.pythonhosted.org/packages/8b/8b/7f3ce797334b552287b4b1853888d8154359e6e97620304149197711ad36/methylprep-1.0.7.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "95588e37334f67e387e392ee4de5187c", "sha256": "fb7adb12ff39d49be0d7175e11197fbdc069e3049490d8a6502b4112c74a1210"}, "downloads": -1, "filename": "methylprep-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "95588e37334f67e387e392ee4de5187c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 70269, "upload_time": "2019-09-05T22:18:26", "upload_time_iso_8601": "2019-09-05T22:18:26.153807Z", "url": "https://files.pythonhosted.org/packages/c1/6b/e7ff81b99f952bace750401cc70028ac81dacbac3c64b2bd942124c09180/methylprep-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "247cf2077537bf5c71c8965ae3a9a497", "sha256": "20de414efc05b03e1e64fba57eecc3743b1ad8b72a5b8c2a3b71cdaad5cb762c"}, "downloads": -1, "filename": "methylprep-1.1.0.tar.gz", "has_sig": false, "md5_digest": "247cf2077537bf5c71c8965ae3a9a497", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33645, "upload_time": "2019-09-05T22:18:28", "upload_time_iso_8601": "2019-09-05T22:18:28.022575Z", "url": "https://files.pythonhosted.org/packages/89/a4/f7f4187972cc4415dc80922ffbbf6e4140801a8d71f225aee9ab49dc5d3a/methylprep-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "2683fa59c30d4a1bab594d1e60e73c65", "sha256": "b653aa2479ef51feb68b040402a388ee15a87b397b38f2203dfe2aa10f157b16"}, "downloads": -1, "filename": "methylprep-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2683fa59c30d4a1bab594d1e60e73c65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43184, "upload_time": "2019-09-16T15:56:53", "upload_time_iso_8601": "2019-09-16T15:56:53.677361Z", "url": "https://files.pythonhosted.org/packages/e7/e1/673a8f418fe2528f9e1a3bbda7677a9a1914e8a7264ad355e225618b482d/methylprep-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ee25394c452aaefabd521390b11cc35", "sha256": "38232793a6a40101cc340ad3911cbfa2601f535d430ebe1824a303622717341a"}, "downloads": -1, "filename": "methylprep-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8ee25394c452aaefabd521390b11cc35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35320, "upload_time": "2019-09-16T15:56:55", "upload_time_iso_8601": "2019-09-16T15:56:55.574554Z", "url": "https://files.pythonhosted.org/packages/d6/d2/a4a9ac41a0d1d6d1c2d615498fe330ddd435cd66d523aa924ac91d345df1/methylprep-1.1.1.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "99363a066412a1748aba1bea2b38da59", "sha256": "0d4edf2dffcabffb893b727510f863b2d10441e4c1dd56aaa3c498e9d232ea28"}, "downloads": -1, "filename": "methylprep-1.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "99363a066412a1748aba1bea2b38da59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47463, "upload_time": "2019-10-30T17:42:53", "upload_time_iso_8601": "2019-10-30T17:42:53.387304Z", "url": "https://files.pythonhosted.org/packages/d5/ec/8fb772b88ee7349983f33e29e409052c4c9400694657414cefb49850ceff/methylprep-1.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b9c7ee978a2a3a3d10d5b069c890294", "sha256": "5a39866e6a92c774e86bc91d969f3221e85ec4d6ed240a7ca3b6f263101f91c6"}, "downloads": -1, "filename": "methylprep-1.1.10.tar.gz", "has_sig": false, "md5_digest": "0b9c7ee978a2a3a3d10d5b069c890294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40864, "upload_time": "2019-10-30T17:42:55", "upload_time_iso_8601": "2019-10-30T17:42:55.036564Z", "url": "https://files.pythonhosted.org/packages/22/78/683827c07608d541392c0e913af7500bca27a649ca710537c124074393d5/methylprep-1.1.10.tar.gz", "yanked": false}], "1.1.11": [{"comment_text": "", "digests": {"md5": "f1cbd405fb374cb6dd4e9d5066a9e1cf", "sha256": "b766b08b282999890bd6e90cb546f45a82e148661c409b41ee65936e7c75b4e4"}, "downloads": -1, "filename": "methylprep-1.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "f1cbd405fb374cb6dd4e9d5066a9e1cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48838, "upload_time": "2019-11-04T23:30:05", "upload_time_iso_8601": "2019-11-04T23:30:05.100249Z", "url": "https://files.pythonhosted.org/packages/d7/9a/ed5da28fae8460f029003d33b4a417f78b117453d48d2b76bbabd4bebb44/methylprep-1.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75065604e1b739b06e6e302ace87ea55", "sha256": "180efe8e340654cfd7b8d68a85a7b6f7c148045cb82d829abd9c39fb5e32e1d5"}, "downloads": -1, "filename": "methylprep-1.1.11.tar.gz", "has_sig": false, "md5_digest": "75065604e1b739b06e6e302ace87ea55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42220, "upload_time": "2019-11-04T23:30:06", "upload_time_iso_8601": "2019-11-04T23:30:06.936067Z", "url": "https://files.pythonhosted.org/packages/c2/19/ef20dff17dc189fad6da5cc30e482703dca0ed3d924c3335d3c0f5f6638b/methylprep-1.1.11.tar.gz", "yanked": false}], "1.1.12": [{"comment_text": "", "digests": {"md5": "7696373fc455f10e47f5cc74ee0073c4", "sha256": "d995c236dad63ca25847749df3e29803c356b4d729b30b978bc82bacec176e59"}, "downloads": -1, "filename": "methylprep-1.1.12-py3-none-any.whl", "has_sig": false, "md5_digest": "7696373fc455f10e47f5cc74ee0073c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48839, "upload_time": "2019-11-05T21:14:55", "upload_time_iso_8601": "2019-11-05T21:14:55.742780Z", "url": "https://files.pythonhosted.org/packages/66/10/d0e22f80af9d3a8991d585f9d7b930ebca90830d360102ce27af2699b91e/methylprep-1.1.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a44db06f9fb0111797e66526b5ef30c", "sha256": "f8d0818c979cbbfe070981279d81cf3ddfd10fa6c0d2030965e5b0a90f459a76"}, "downloads": -1, "filename": "methylprep-1.1.12.tar.gz", "has_sig": false, "md5_digest": "1a44db06f9fb0111797e66526b5ef30c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42232, "upload_time": "2019-11-05T21:14:57", "upload_time_iso_8601": "2019-11-05T21:14:57.759107Z", "url": "https://files.pythonhosted.org/packages/68/cf/1bc3aa3cb58274da021bc67ac0f38a50982db4a53b667b7284efaf774daa/methylprep-1.1.12.tar.gz", "yanked": false}], "1.1.14": [{"comment_text": "", "digests": {"md5": "0b51ce339a446c533a6c974166cdaa8d", "sha256": "f459cb333a5ea7bb829b62bdbbec5a96abc57ba4e64f581a6568b003e9a88877"}, "downloads": -1, "filename": "methylprep-1.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "0b51ce339a446c533a6c974166cdaa8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57102, "upload_time": "2019-11-13T22:52:17", "upload_time_iso_8601": "2019-11-13T22:52:17.734478Z", "url": "https://files.pythonhosted.org/packages/c6/43/d6ca84540d999f16aeb3ce4103ce14c21aba2dd4b4b46a039a9dceedf224/methylprep-1.1.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d11685a604c68a32ec57a66864428bf8", "sha256": "52f407856974dcb9a8c9148b16afa940ad3fdc31a57449d36f651c0973037327"}, "downloads": -1, "filename": "methylprep-1.1.14.tar.gz", "has_sig": false, "md5_digest": "d11685a604c68a32ec57a66864428bf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48053, "upload_time": "2019-11-13T22:52:19", "upload_time_iso_8601": "2019-11-13T22:52:19.190033Z", "url": "https://files.pythonhosted.org/packages/f8/91/450350f14279295acc3684f2f06c2fa45b85b398e9c79dae8d68047ac061/methylprep-1.1.14.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "1bab66232b7bf2270fb05b9392889573", "sha256": "118269e34a778e326d279569518848fc339152ccdb641452617f3a139d427038"}, "downloads": -1, "filename": "methylprep-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1bab66232b7bf2270fb05b9392889573", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44727, "upload_time": "2019-09-19T20:05:28", "upload_time_iso_8601": "2019-09-19T20:05:28.767228Z", "url": "https://files.pythonhosted.org/packages/3d/9e/5fe8742523be5a358eb827f00063f91590c17f857fc31eaaf6e877f54a61/methylprep-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9becfd0dd1d9ac05f9bd49dbf7acdf1", "sha256": "b17f6e219e86bcb4661c3e128a5bcbc65c220f45a3589d7b0cd0a5dc1886d009"}, "downloads": -1, "filename": "methylprep-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e9becfd0dd1d9ac05f9bd49dbf7acdf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37921, "upload_time": "2019-09-19T20:05:32", "upload_time_iso_8601": "2019-09-19T20:05:32.260444Z", "url": "https://files.pythonhosted.org/packages/0e/bb/6aaa7e146c9555396ba234ecda63d368802da3bb8ea845ec79e67dc08c84/methylprep-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "a90d478410bf98af846e385facd2a076", "sha256": "06d20a3f5e23aacb503c19077c765a551b6bfeaad8729e0900e3583288eecb4f"}, "downloads": -1, "filename": "methylprep-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a90d478410bf98af846e385facd2a076", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44727, "upload_time": "2019-09-19T20:05:30", "upload_time_iso_8601": "2019-09-19T20:05:30.387308Z", "url": "https://files.pythonhosted.org/packages/62/74/31e8d57e23947e130a8951c79d608b5895618d69527ecb0014cfae193862/methylprep-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "902acc14bbba1d010af3adaa30ab6e35", "sha256": "6602d3ec6265d11ac30abc96d224f73e486f3b76cc10811b763bac02fca27eac"}, "downloads": -1, "filename": "methylprep-1.1.3.tar.gz", "has_sig": false, "md5_digest": "902acc14bbba1d010af3adaa30ab6e35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37921, "upload_time": "2019-09-19T20:05:34", "upload_time_iso_8601": "2019-09-19T20:05:34.096766Z", "url": "https://files.pythonhosted.org/packages/58/de/3caffb31ed9ba9a8f2e868661ca6353f2a94eb8f2b2f35322dd5d779991c/methylprep-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "38c2b694aeee4ba02551ece7e3c30912", "sha256": "e97c43c107d1b035fd3041b70bed922e55d4097e2bcec42389c83af2d5933b96"}, "downloads": -1, "filename": "methylprep-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "38c2b694aeee4ba02551ece7e3c30912", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45251, "upload_time": "2019-09-24T21:30:16", "upload_time_iso_8601": "2019-09-24T21:30:16.155447Z", "url": "https://files.pythonhosted.org/packages/08/a0/a684f044b642476a7c14734fc3339a7944d366e2d13febf6c7342dbb7f25/methylprep-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b7f3cba783e169102154cabb2783759", "sha256": "dc0e21944935f9c88aebc237c5e7fd59cdf698623ca22f5e38952210ebacbedc"}, "downloads": -1, "filename": "methylprep-1.1.4.tar.gz", "has_sig": false, "md5_digest": "7b7f3cba783e169102154cabb2783759", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38692, "upload_time": "2019-09-24T21:30:18", "upload_time_iso_8601": "2019-09-24T21:30:18.134797Z", "url": "https://files.pythonhosted.org/packages/03/51/aead181fab030608c373f46a6c51b72d3ff331e75e315d3b0cac1d929566/methylprep-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "f347400d3cb16c402faab8242bec33f0", "sha256": "0e0cf20faf8d0d492a4bd08ec1862a45b0ae4cd0dd8b6e651985e77ccc48c9c8"}, "downloads": -1, "filename": "methylprep-1.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f347400d3cb16c402faab8242bec33f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46034, "upload_time": "2019-10-08T15:56:56", "upload_time_iso_8601": "2019-10-08T15:56:56.609901Z", "url": "https://files.pythonhosted.org/packages/9a/b8/aff1a9c950734a71ab855b7d8fb3a10d846fa1c901edbfa5978f2e5a9a03/methylprep-1.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1df06116cb442f19c505856c90eb7a6", "sha256": "25efb5efe7e0a06a59218b5dbd21aa8219b7806a2e7df55901c9ee3993e5a3d4"}, "downloads": -1, "filename": "methylprep-1.1.5.tar.gz", "has_sig": false, "md5_digest": "e1df06116cb442f19c505856c90eb7a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39421, "upload_time": "2019-10-08T15:56:58", "upload_time_iso_8601": "2019-10-08T15:56:58.887013Z", "url": "https://files.pythonhosted.org/packages/55/18/22b09d66bf897df27299c570082096d5f91d9405a69478e3ea0eb6e6886d/methylprep-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "d96f3edc38733f7cf4881dce5960445d", "sha256": "46fde9703403c6f4b04bf7a0321ca23032cda0f0f64845e1ffc2b2aaa99b6f6f"}, "downloads": -1, "filename": "methylprep-1.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d96f3edc38733f7cf4881dce5960445d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46221, "upload_time": "2019-10-15T22:43:25", "upload_time_iso_8601": "2019-10-15T22:43:25.778604Z", "url": "https://files.pythonhosted.org/packages/54/e3/9a3d8d6a6ce71d32a4ee1bb65c19ddef7ea629c38edd257a75e6be56da10/methylprep-1.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a913a5af0fde73e590997a6a844948b8", "sha256": "86875c8be64e38a5f5ab063b683f9f977635dffc80dba41e826314adbec14fd4"}, "downloads": -1, "filename": "methylprep-1.1.6.tar.gz", "has_sig": false, "md5_digest": "a913a5af0fde73e590997a6a844948b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39650, "upload_time": "2019-10-15T22:43:27", "upload_time_iso_8601": "2019-10-15T22:43:27.865989Z", "url": "https://files.pythonhosted.org/packages/9d/35/02b804c0ccd8a889acc097f8b7f475ac57c1d958dda9e49950a55703d9d6/methylprep-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "3150e931ef9c9a79c0fed83d2809e2e4", "sha256": "4d55747c56f610dd0abf13c81e37ed9272aaeed9339615554e1b19b6b973915f"}, "downloads": -1, "filename": "methylprep-1.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3150e931ef9c9a79c0fed83d2809e2e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47359, "upload_time": "2019-10-18T19:03:33", "upload_time_iso_8601": "2019-10-18T19:03:33.523629Z", "url": "https://files.pythonhosted.org/packages/2c/d8/6b6dada5eae1d98ad7e8baa5f63a177b0a406a7a04436ce79939b756e69c/methylprep-1.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f895b20916560fb7601909a679246b0", "sha256": "198ddd5321d5d7321ea093f6eac594bc255afa6eda7e2e3b7edd72ace534a9b2"}, "downloads": -1, "filename": "methylprep-1.1.7.tar.gz", "has_sig": false, "md5_digest": "6f895b20916560fb7601909a679246b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40809, "upload_time": "2019-10-18T19:03:35", "upload_time_iso_8601": "2019-10-18T19:03:35.355837Z", "url": "https://files.pythonhosted.org/packages/8b/73/96c8eeaff08b4bf2976057799c8b206cfbdfaef6eead24b62e5572506fbd/methylprep-1.1.7.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "cebbf810352e1a97b09c1f5ab9dabc11", "sha256": "5dc688905dffa11fd537cee41beb44f8070a1b16b2227653c767f9be2cf061db"}, "downloads": -1, "filename": "methylprep-1.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "cebbf810352e1a97b09c1f5ab9dabc11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47408, "upload_time": "2019-10-18T21:18:35", "upload_time_iso_8601": "2019-10-18T21:18:35.415832Z", "url": "https://files.pythonhosted.org/packages/49/e2/c48ec0df07db899007c23e25a45c8b61e310493ef0cb0e7f2d7e6fdc296d/methylprep-1.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6ae8e77446aea71c4f2685b17a00595", "sha256": "6bf4aef2ec20cd5eccffdf7bc67520d53d0313c920d455fbaa7072c9dd78c843"}, "downloads": -1, "filename": "methylprep-1.1.8.tar.gz", "has_sig": false, "md5_digest": "c6ae8e77446aea71c4f2685b17a00595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40830, "upload_time": "2019-10-18T21:18:37", "upload_time_iso_8601": "2019-10-18T21:18:37.331258Z", "url": "https://files.pythonhosted.org/packages/ca/34/9f936decbea70b8c6394ba2419af13efe3c3950783416126f987e69a4df5/methylprep-1.1.8.tar.gz", "yanked": false}], "1.1.9": [{"comment_text": "", "digests": {"md5": "0a981c8a70235213a55cb3c4fa101a7f", "sha256": "8e63d851f971ccf794f1a1dbac14272a0a9b51b04d90b8b490c92ca734470c64"}, "downloads": -1, "filename": "methylprep-1.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "0a981c8a70235213a55cb3c4fa101a7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47412, "upload_time": "2019-10-23T17:44:25", "upload_time_iso_8601": "2019-10-23T17:44:25.495098Z", "url": "https://files.pythonhosted.org/packages/37/cd/b00ce0df34d56efe33cb8a95d663ac36062cd6d48812df5564dd2d5b8a53/methylprep-1.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a751ddbd60c3cc174596d99e3739d8c0", "sha256": "061abb7043b534447b7f26c4ad29fc04fbc170e9487a711263ddad81f868801c"}, "downloads": -1, "filename": "methylprep-1.1.9.tar.gz", "has_sig": false, "md5_digest": "a751ddbd60c3cc174596d99e3739d8c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40792, "upload_time": "2019-10-23T17:44:26", "upload_time_iso_8601": "2019-10-23T17:44:26.942643Z", "url": "https://files.pythonhosted.org/packages/c8/92/9cc545c0a515598150dd8921a8bec8f958765c21f6ee5eec009d8a6530da/methylprep-1.1.9.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "0306da0adbbe73be105abb1fff98b9a8", "sha256": "0817a1833ac821a5da88b2398866269b233ef88acf7d11d6a0ed6297ee3519b3"}, "downloads": -1, "filename": "methylprep-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0306da0adbbe73be105abb1fff98b9a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57100, "upload_time": "2019-11-14T21:27:32", "upload_time_iso_8601": "2019-11-14T21:27:32.985045Z", "url": "https://files.pythonhosted.org/packages/c7/b3/be9cc5accc73886b9216f0e4f091a9efeb4dca77c9ae23f1917c0b9a0eb4/methylprep-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eadbaf063158f9ccb8009d5ae9a87b91", "sha256": "2d1fb3d1026e07ddbe3f2edc168ae9a31b46a1ec8f74577501c62d8f288fd8b1"}, "downloads": -1, "filename": "methylprep-1.2.0.tar.gz", "has_sig": false, "md5_digest": "eadbaf063158f9ccb8009d5ae9a87b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47992, "upload_time": "2019-11-14T21:27:34", "upload_time_iso_8601": "2019-11-14T21:27:34.455344Z", "url": "https://files.pythonhosted.org/packages/45/7f/8bc969f8fba8329150aefb12d44e1c937ca7bc63d432e2b8e71af5028bfb/methylprep-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "b3793d701770f4e01f41607829759460", "sha256": "cee89a4b5ff69086afb4bd5a4484e61faa0d2323ca2262287d0790cf0c2bc490"}, "downloads": -1, "filename": "methylprep-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b3793d701770f4e01f41607829759460", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 68314, "upload_time": "2020-01-17T16:30:14", "upload_time_iso_8601": "2020-01-17T16:30:14.591540Z", "url": "https://files.pythonhosted.org/packages/6c/db/45fb13b3ec12faf218393f258503ec4b7468eee6e472567071b7900cda5a/methylprep-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24097c808373585b4344cd0ca3569389", "sha256": "2aa5345cc58a023a611bd57d9008d4d5cab57c5ce55d33cc696f5dc3e6ff4248"}, "downloads": -1, "filename": "methylprep-1.2.1.tar.gz", "has_sig": false, "md5_digest": "24097c808373585b4344cd0ca3569389", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58170, "upload_time": "2020-01-17T16:30:16", "upload_time_iso_8601": "2020-01-17T16:30:16.387849Z", "url": "https://files.pythonhosted.org/packages/19/70/80866d65b86290ca516cfe3f1719106f4e5396045bb3af69b62814511c2a/methylprep-1.2.1.tar.gz", "yanked": false}], "1.2.10": [{"comment_text": "", "digests": {"md5": "cbd4bd458f011968a880d1d7e2947cab", "sha256": "d1eba8effa57964f6a2f9e27755d70d0b16e8abf75b186764084b529708e0f79"}, "downloads": -1, "filename": "methylprep-1.2.10-py3-none-any.whl", "has_sig": false, "md5_digest": "cbd4bd458f011968a880d1d7e2947cab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84830, "upload_time": "2020-04-07T03:52:43", "upload_time_iso_8601": "2020-04-07T03:52:43.645587Z", "url": "https://files.pythonhosted.org/packages/ae/a1/3c05098f31e2e7fd3f62a24277cef05af418aa55c3d306ba745ce9562a86/methylprep-1.2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3dfc3c5a1e6b806a512fb00975e30d6", "sha256": "ff6fd2e8fe294b541d5aa0316e5785c5488425ecfc9c0fb873c830fc0b1c9c76"}, "downloads": -1, "filename": "methylprep-1.2.10.tar.gz", "has_sig": false, "md5_digest": "c3dfc3c5a1e6b806a512fb00975e30d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68395, "upload_time": "2020-04-07T03:52:45", "upload_time_iso_8601": "2020-04-07T03:52:45.071125Z", "url": "https://files.pythonhosted.org/packages/fd/a1/31c403397423c21b2275212da9e034c11138ece3fd84ce2d45b529babff3/methylprep-1.2.10.tar.gz", "yanked": false}], "1.2.11": [{"comment_text": "", "digests": {"md5": "5969c0ddd7e5b0864396b245d00a34ba", "sha256": "8346f0f56df5c65afc249c57d7dbe9f5a1d05cf75e4ddf5820074d8cd6072a02"}, "downloads": -1, "filename": "methylprep-1.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "5969c0ddd7e5b0864396b245d00a34ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84840, "upload_time": "2020-04-08T04:06:49", "upload_time_iso_8601": "2020-04-08T04:06:49.968425Z", "url": "https://files.pythonhosted.org/packages/15/37/c7283ce117b203a117876a6661ecd289cc06723e8ba5fda0239acbafc6f2/methylprep-1.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8103a8f047783dfdbe3a10b3d1f3ffc", "sha256": "87ee7e7cff99c138c15769bd0c9de437900db491275469ffafdf2b4c8e2468ca"}, "downloads": -1, "filename": "methylprep-1.2.11.tar.gz", "has_sig": false, "md5_digest": "a8103a8f047783dfdbe3a10b3d1f3ffc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68408, "upload_time": "2020-04-08T04:06:51", "upload_time_iso_8601": "2020-04-08T04:06:51.666619Z", "url": "https://files.pythonhosted.org/packages/dc/24/2e180e456a278f1dd897b0308437e0c22913404336c3b355cf5760e044ac/methylprep-1.2.11.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "658f12c0ef1fd43cabb4464a6ff57917", "sha256": "e294f2e991dff2016576bc7db0851445bbe57e84078c1ee041fb4c577d94058d"}, "downloads": -1, "filename": "methylprep-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "658f12c0ef1fd43cabb4464a6ff57917", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71968, "upload_time": "2020-01-24T19:27:24", "upload_time_iso_8601": "2020-01-24T19:27:24.991459Z", "url": "https://files.pythonhosted.org/packages/5c/b3/60b6e2a196235d5e50a2e6daf72dc4d93dfe3aea021b360b19fcf91190f9/methylprep-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65d5292e7ec7fdb283d3f59c9a9c0449", "sha256": "9aafe1d55898c8eaa806ffe61fa55ad43dfeb99dd3efd6e758743f73c7c75f17"}, "downloads": -1, "filename": "methylprep-1.2.2.tar.gz", "has_sig": false, "md5_digest": "65d5292e7ec7fdb283d3f59c9a9c0449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61550, "upload_time": "2020-01-24T19:27:26", "upload_time_iso_8601": "2020-01-24T19:27:26.914218Z", "url": "https://files.pythonhosted.org/packages/2a/1b/c5b017dee3cace4cc08e2544f76e798900b4a7779f5eac016fadbcabd730/methylprep-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "5a6da66b8b3c0e9564ea10632e477269", "sha256": "e53456c70188def0a98d8344c588fef1c246d89bd38dc4c55719a8b4debd54ff"}, "downloads": -1, "filename": "methylprep-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5a6da66b8b3c0e9564ea10632e477269", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77183, "upload_time": "2020-02-13T23:37:38", "upload_time_iso_8601": "2020-02-13T23:37:38.285547Z", "url": "https://files.pythonhosted.org/packages/a9/00/2efe04ac10c29c122912b07676212c8ed9195d337149751b188efaa11f95/methylprep-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb9a7f668b8acd74e25a09a714ea14b5", "sha256": "29821e2569b7711aa858a0345294dec76492fc0a4c8aa2013e517cfe732f6f2d"}, "downloads": -1, "filename": "methylprep-1.2.3.tar.gz", "has_sig": false, "md5_digest": "eb9a7f668b8acd74e25a09a714ea14b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65117, "upload_time": "2020-02-13T23:37:40", "upload_time_iso_8601": "2020-02-13T23:37:40.000446Z", "url": "https://files.pythonhosted.org/packages/31/26/ee06f6bd79c4d1d8ae6687d89d01ca3e44f33aa3480258900e02d6f7975a/methylprep-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "6c110338e05eb593418598477625e9f0", "sha256": "44da9b43168a22e6c1470f5bbae2db3dc552eb3006c6610046497e423d5a03f3"}, "downloads": -1, "filename": "methylprep-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6c110338e05eb593418598477625e9f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77907, "upload_time": "2020-03-10T20:35:39", "upload_time_iso_8601": "2020-03-10T20:35:39.210915Z", "url": "https://files.pythonhosted.org/packages/d9/06/721ad8c6b38c9e427ab63713e04b4d0c441613138508cd586b4dc99ff783/methylprep-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e704fd06e6d409e295df61c78c703d93", "sha256": "dd8912c042b83194dd45ab10bc209441d193c14e595908e0484ecb14938cb91a"}, "downloads": -1, "filename": "methylprep-1.2.4.tar.gz", "has_sig": false, "md5_digest": "e704fd06e6d409e295df61c78c703d93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62810, "upload_time": "2020-03-10T20:35:41", "upload_time_iso_8601": "2020-03-10T20:35:41.331874Z", "url": "https://files.pythonhosted.org/packages/cb/0b/56e5f600fcd36835e51e3f633e1a55c8ced0393555194d23031c70014836/methylprep-1.2.4.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "2a1a414fef88b647cc28f2cd59c1a2fb", "sha256": "3e9cc1fa9a30733daacfcbb2a9c284fa40c03da02a9d82010e9834397db1ed96"}, "downloads": -1, "filename": "methylprep-1.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2a1a414fef88b647cc28f2cd59c1a2fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81214, "upload_time": "2020-03-31T02:47:50", "upload_time_iso_8601": "2020-03-31T02:47:50.389906Z", "url": "https://files.pythonhosted.org/packages/35/24/77ef5e49bc58a3d6496b129283196b25c916efe107350e120f1b01d5f1e4/methylprep-1.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b61e6e5405ceb18208e82d2533cb88f", "sha256": "8cf1702200ada5e2911a57e59b6dd0a96b392b063241607bd604e326c4293ac0"}, "downloads": -1, "filename": "methylprep-1.2.6.tar.gz", "has_sig": false, "md5_digest": "5b61e6e5405ceb18208e82d2533cb88f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65854, "upload_time": "2020-03-31T02:47:52", "upload_time_iso_8601": "2020-03-31T02:47:52.027409Z", "url": "https://files.pythonhosted.org/packages/fb/c0/135bbc382c91afdc60aea572adb28e1d5295a592bdb1412628c991de1cf0/methylprep-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "9739da7667c4e4069f5d939a50c6a10f", "sha256": "1e8cb59a7d43f26d71718d515749438df4cc412610c1af777061151dcf940cd6"}, "downloads": -1, "filename": "methylprep-1.2.7-py3.7.egg", "has_sig": false, "md5_digest": "9739da7667c4e4069f5d939a50c6a10f", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 172890, "upload_time": "2020-04-03T16:33:34", "upload_time_iso_8601": "2020-04-03T16:33:34.188340Z", "url": "https://files.pythonhosted.org/packages/30/bb/f4350871ac9291f3741168122102e73810176a795fe942ae5c496c76eca3/methylprep-1.2.7-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf47b938919dd8afa1cbba24db66134a", "sha256": "c5f1a6f5f71bb107be57948eb630ced2750050f572ade2cd6061aef91c9bc6f8"}, "downloads": -1, "filename": "methylprep-1.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "cf47b938919dd8afa1cbba24db66134a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81122, "upload_time": "2020-03-31T16:47:19", "upload_time_iso_8601": "2020-03-31T16:47:19.486673Z", "url": "https://files.pythonhosted.org/packages/3d/e4/e7e63e0d39d66dd6313b7af07ff60579772db281213c1cd9b97abeb6b63c/methylprep-1.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8065d205c42a8be59a38a5900e193aa", "sha256": "d4ef466c8b4b5f86cdaf118104b4bb11efc0aea5d3112afaa634109367ce6b1b"}, "downloads": -1, "filename": "methylprep-1.2.7.tar.gz", "has_sig": false, "md5_digest": "c8065d205c42a8be59a38a5900e193aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65151, "upload_time": "2020-03-31T16:47:21", "upload_time_iso_8601": "2020-03-31T16:47:21.265482Z", "url": "https://files.pythonhosted.org/packages/d3/8f/3e132343a38da1a12994344d957a190613477b45e538dc1bd666aa28ad13/methylprep-1.2.7.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "2cb11a6e7ae0cfe8b12f5832ae7f05b7", "sha256": "cf768368c0c111869c4b8db007bffef5a5c29d170673bd471cfca6199e737290"}, "downloads": -1, "filename": "methylprep-1.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "2cb11a6e7ae0cfe8b12f5832ae7f05b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81480, "upload_time": "2020-04-03T16:33:31", "upload_time_iso_8601": "2020-04-03T16:33:31.712874Z", "url": "https://files.pythonhosted.org/packages/2a/2e/27782a7686cd225284d3e4a60233b7e7bafab213982f078fc1fae4b20ece/methylprep-1.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a42b8f2c1c3976c2a4905854bb27148a", "sha256": "b7a1dbf41bf8428d48c7efb0a6e7d80b01860f1e946dd5ed97dca18e4cade2e8"}, "downloads": -1, "filename": "methylprep-1.2.8.tar.gz", "has_sig": false, "md5_digest": "a42b8f2c1c3976c2a4905854bb27148a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65144, "upload_time": "2020-04-03T16:33:35", "upload_time_iso_8601": "2020-04-03T16:33:35.920820Z", "url": "https://files.pythonhosted.org/packages/ee/f0/22950eebb8c75ab24c8e78998d235b3becac6b697af8cf03a3562fd50a42/methylprep-1.2.8.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "e4b10c0113693598e2b121a8bb55f134", "sha256": "902abfc0403e8e7d9e1b1f4abfea42cbc91ecfdc5496f7d176d6da3e4e22d4b6"}, "downloads": -1, "filename": "methylprep-1.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e4b10c0113693598e2b121a8bb55f134", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84605, "upload_time": "2020-04-04T03:02:55", "upload_time_iso_8601": "2020-04-04T03:02:55.639007Z", "url": "https://files.pythonhosted.org/packages/3c/80/20b8c268780d7c20dcec0191ed1fbc58201fa1b6a459c295c644f546992c/methylprep-1.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d91d0dd4f5257b87bb0e150a0163bae6", "sha256": "249812737a387b2b77da8f44d0fab45ae933836477f77343f71cc696a1dfd4de"}, "downloads": -1, "filename": "methylprep-1.2.9.tar.gz", "has_sig": false, "md5_digest": "d91d0dd4f5257b87bb0e150a0163bae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68177, "upload_time": "2020-04-04T03:02:57", "upload_time_iso_8601": "2020-04-04T03:02:57.415635Z", "url": "https://files.pythonhosted.org/packages/4d/e7/f0091eedda97a206b5f2fb1b89bd338cbe8ec1a9a693487d818fa6aa29fe/methylprep-1.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5969c0ddd7e5b0864396b245d00a34ba", "sha256": "8346f0f56df5c65afc249c57d7dbe9f5a1d05cf75e4ddf5820074d8cd6072a02"}, "downloads": -1, "filename": "methylprep-1.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "5969c0ddd7e5b0864396b245d00a34ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84840, "upload_time": "2020-04-08T04:06:49", "upload_time_iso_8601": "2020-04-08T04:06:49.968425Z", "url": "https://files.pythonhosted.org/packages/15/37/c7283ce117b203a117876a6661ecd289cc06723e8ba5fda0239acbafc6f2/methylprep-1.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8103a8f047783dfdbe3a10b3d1f3ffc", "sha256": "87ee7e7cff99c138c15769bd0c9de437900db491275469ffafdf2b4c8e2468ca"}, "downloads": -1, "filename": "methylprep-1.2.11.tar.gz", "has_sig": false, "md5_digest": "a8103a8f047783dfdbe3a10b3d1f3ffc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68408, "upload_time": "2020-04-08T04:06:51", "upload_time_iso_8601": "2020-04-08T04:06:51.666619Z", "url": "https://files.pythonhosted.org/packages/dc/24/2e180e456a278f1dd897b0308437e0c22913404336c3b355cf5760e044ac/methylprep-1.2.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:42 2020"}