{"info": {"author": "Microsoft Corporation", "author_email": "azpysdkhelp@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure EventHubs Checkpoint Store client library for Python using Storage Blobs\n\nAzure EventHubs Checkpoint Store is used for storing checkpoints while processing events from Azure Event Hubs.\nThis Checkpoint Store package works as a plug-in package to `EventHubConsumerClient`. It uses Azure Storage Blob as the persistent store for maintaining checkpoints and partition ownership information.\n\nPlease note that this is an async library, for sync version of the Azure EventHubs Checkpoint Store client library, please refer to [azure-eventhub-checkpointstoreblob](https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub-checkpointstoreblob).\n\n[Source code](https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio) | [Package (PyPi)](https://pypi.org/project/azure-eventhub-checkpointstoreblob-aio/) | [API reference documentation](https://azuresdkdocs.blob.core.windows.net/$web/python/azure-eventhub/5.0.1/azure.eventhub.aio.html#azure.eventhub.aio.CheckpointStore) | [Azure Eventhubs documentation](https://docs.microsoft.com/en-us/azure/event-hubs/) | [Azure Storage documentation](https://docs.microsoft.com/en-us/azure/storage/)\n\n## Getting started\n\n### Prerequisites\n\n- Python 3.5.3 or later.\n- **Microsoft Azure Subscription:**  To use Azure services, including Azure Event Hubs, you'll need a subscription.  If you do not have an existing Azure account, you may sign up for a free trial or use your MSDN subscriber benefits when you [create an account](https://azure.microsoft.com/en-us/).\n\n- **Event Hubs namespace with an Event Hub:** To interact with Azure Event Hubs, you'll also need to have a namespace and Event Hub  available.  If you are not familiar with creating Azure resources, you may wish to follow the step-by-step guide for [creating an Event Hub using the Azure portal](https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-create).  There, you can also find detailed instructions for using the Azure CLI, Azure PowerShell, or Azure Resource Manager (ARM) templates to create an Event Hub.\n\n- **Azure Storage Account:** You'll need to have an Azure Storage Account and create a Azure Blob Storage Block Container to store the checkpoint data with blobs. You may follow the guide [creating an Azure Block Blob Storage Account](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-create-account-block-blob).\n\n### Install the package\n\n```\n$ pip install azure-eventhub-checkpointstoreblob-aio\n```\n\n## Key concepts\n\n### Checkpointing\n\nCheckpointing is a process by which readers mark or commit their position within a partition event sequence.\nCheckpointing is the responsibility of the consumer and occurs on a per-partition basis within a consumer group.\nThis responsibility means that for each consumer group, each partition reader must keep track of its current position\nin the event stream, and can inform the service when it considers the data stream complete. If a reader disconnects from\na partition, when it reconnects it begins reading at the checkpoint that was previously submitted by the last reader of\nthat partition in that consumer group. When the reader connects, it passes the offset to the event hub to specify the\nlocation at which to start reading. In this way, you can use checkpointing to both mark events as \"complete\" by\ndownstream applications, and to provide resiliency if a failover between readers running on different machines occurs.\nIt is possible to return to older data by specifying a lower offset from this checkpointing process. Through this\nmechanism, checkpointing enables both failover resiliency and event stream replay.\n\n### Offsets & sequence numbers\nBoth offset & sequence number refer to the position of an event within a partition. You can think of them as a\nclient-side cursor. The offset is a byte numbering of the event. The offset/sequence number enables an event consumer\n(reader) to specify a point in the event stream from which they want to begin reading events. You can specify a\ntimestamp such that you receive events enqueued only after the given timestamp. Consumers are responsible for\nstoring their own offset values outside of the Event Hubs service. Within a partition, each event includes an offset,\nsequence number and the timestamp of when it was enqueued.\n\n## Examples\n- [Create an Azure EventHubs `EventHubConsumerClient`](#create-an-eventhubconsumerclient)\n- [Consume events using a `BlobCheckpointStore`](#consume-events-using-a-blobcheckpointstore-to-do-checkpoint)\n\n### Create an `EventHubConsumerClient`\nThe easiest way to create a `EventHubConsumerClient` is to use a connection string.\n```python\nfrom azure.eventhub.aio import EventHubConsumerClient\neventhub_client = EventHubConsumerClient.from_connection_string(\"my_eventhub_namespace_connection_string\", \"my_consumer_group\", eventhub_name=\"my_eventhub\")\n```\nFor other ways of creating a `EventHubConsumerClient`, refer to [EventHubs library](https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub) for more details.\n\n### Consume events using a `BlobCheckpointStore` to do checkpoint\n```python\nimport asyncio\n\nfrom azure.eventhub.aio import EventHubConsumerClient\nfrom azure.eventhub.extensions.checkpointstoreblobaio import BlobCheckpointStore\n\nconnection_str = '<< CONNECTION STRING FOR THE EVENT HUBS NAMESPACE >>'\nconsumer_group = '<< CONSUMER GROUP >>'\neventhub_name = '<< NAME OF THE EVENT HUB >>'\nstorage_connection_str = '<< CONNECTION STRING OF THE STORAGE >>'\ncontainer_name = '<< STORAGE CONTAINER NAME>>'\n\nasync def on_event(partition_context, event):\n    # Put your code here.\n    await partition_context.update_checkpoint(event)  # Or update_checkpoint every N events for better performance.\n\nasync def main():\n    checkpoint_store = BlobCheckpointStore.from_connection_string(\n        storage_connection_str,\n        container_name\n    )\n    client = EventHubConsumerClient.from_connection_string(\n        connection_str,\n        consumer_group,\n        eventhub_name=eventhub_name,\n        checkpoint_store=checkpoint_store,\n    )\n\n    async with client:\n        await client.receive(on_event)\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n```\n\n#### Use `BlobCheckpointStore` with a different version of Azure Storage Service API\nSome environments have different versions of Azure Storage Service API. \n`BlobCheckpointStore` by default uses the Storage Service API version 2019-07-07. To use it against a different\nversion, specify `api_version` when you create the `BlobCheckpointStore` object.\n\n\n## Troubleshooting\n\n### General\nEnabling logging will be helpful to do trouble shooting.\n\n### Logging\n\n- Enable `azure.eventhub.extensions.checkpointstoreblobaio` logger to collect traces from the library.\n- Enable `azure.eventhub` logger to collect traces from the main azure-eventhub library.\n- Enable `azure.eventhub.extensions.checkpointstoreblobaio._vendor.storage` logger to collect traces from azure storage blob library.\n- Enable `uamqp` logger to collect traces from the underlying uAMQP library.\n- Enable AMQP frame level trace by setting `logging_enable=True` when creating the client.\n\n## Next steps\n\n### Examples\n- [./samples/event_processor_blob_storage_example.py](https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/samples/event_processor_blob_storage_example.py) - EventHubConsumerClient with blob checkpoint store example\n\n### Documentation\n\nReference documentation is available [here](https://azuresdkdocs.blob.core.windows.net/$web/python/azure-eventhub/5.0.1/azure.eventhub.aio.html#azure.eventhub.aio.CheckpointStore)\n\n### Provide Feedback\n\nIf you encounter any bugs or have suggestions, please file an issue in the [Issues](https://github.com/Azure/azure-sdk-for-python/issues) section of the project.\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/README.png)\n\n\n# Release History\n\n## 1.1.0 (2020-03-09)\n\n**New features**\n- Param `api_version` of `BlobCheckpointStore` now supports older versions of Azure Storage Service API.\n\n## 1.0.0 (2020-01-13)\nStable release. No new features or API changes.\n\n## 1.0.0b6 (2019-12-04)\n\n**Breaking changes**\n\n- Renamed `BlobPartitionManager` to `BlobCheckpointStore`.\n- Constructor of `BlobCheckpointStore` has been updated to take the storage container details directly rather than an instance of `ContainerClient`.\n- A `from_connection_string` constructor has been added for Blob Storage connection strings.\n- Module `blobstoragepmaio` is now internal, all imports should be directly from `azure.eventhub.extensions.checkpointstoreblobaio`.\n- `BlobCheckpointStore` now has a `close()` function for shutting down an HTTP connection pool, additionally the object can be used in a context manager to manage the connection.\n\n## 1.0.0b5 (2019-11-04)\n\n**New features**\n\n- Added method `list_checkpoints` which list all the checkpoints under given eventhub namespace, eventhub name and consumer group.\n\n## 1.0.0b4 (2019-10-09)\nThis release has trivial internal changes only. No feature changes.\n\n## 1.0.0b1 (2019-09-10)\n\n**New features**\n\n- `BlobPartitionManager` that uses Azure Blob Storage Block Blob to store EventProcessor checkpoint data\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/HISTORY.png)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-eventhub-checkpointstoreblob-aio", "package_url": "https://pypi.org/project/azure-eventhub-checkpointstoreblob-aio/", "platform": "", "project_url": "https://pypi.org/project/azure-eventhub-checkpointstoreblob-aio/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio"}, "release_url": "https://pypi.org/project/azure-eventhub-checkpointstoreblob-aio/1.1.0/", "requires_dist": ["azure-core (<2.0.0,>=1.2.2)", "msrest (>=0.6.10)", "cryptography (>=2.1.4)", "azure-eventhub (<6.0.0,>=5.0.0)", "aiohttp (<4.0,>=3.0)", "futures ; python_version<'3.0'", "enum34 (>=1.0.4) ; python_version<'3.4'", "typing ; python_version<'3.5'"], "requires_python": ">=3.5.3", "summary": "Microsoft Azure Event Hubs checkpointer implementation with Blob Storage Client Library for Python", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Azure EventHubs Checkpoint Store client library for Python using Storage Blobs</h1>\n<p>Azure EventHubs Checkpoint Store is used for storing checkpoints while processing events from Azure Event Hubs.\nThis Checkpoint Store package works as a plug-in package to <code>EventHubConsumerClient</code>. It uses Azure Storage Blob as the persistent store for maintaining checkpoints and partition ownership information.</p>\n<p>Please note that this is an async library, for sync version of the Azure EventHubs Checkpoint Store client library, please refer to <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub-checkpointstoreblob\" rel=\"nofollow\">azure-eventhub-checkpointstoreblob</a>.</p>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio\" rel=\"nofollow\">Source code</a> | <a href=\"https://pypi.org/project/azure-eventhub-checkpointstoreblob-aio/\" rel=\"nofollow\">Package (PyPi)</a> | <a href=\"https://azuresdkdocs.blob.core.windows.net/%24web/python/azure-eventhub/5.0.1/azure.eventhub.aio.html#azure.eventhub.aio.CheckpointStore\" rel=\"nofollow\">API reference documentation</a> | <a href=\"https://docs.microsoft.com/en-us/azure/event-hubs/\" rel=\"nofollow\">Azure Eventhubs documentation</a> | <a href=\"https://docs.microsoft.com/en-us/azure/storage/\" rel=\"nofollow\">Azure Storage documentation</a></p>\n<h2>Getting started</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li>\n<p>Python 3.5.3 or later.</p>\n</li>\n<li>\n<p><strong>Microsoft Azure Subscription:</strong>  To use Azure services, including Azure Event Hubs, you'll need a subscription.  If you do not have an existing Azure account, you may sign up for a free trial or use your MSDN subscriber benefits when you <a href=\"https://azure.microsoft.com/en-us/\" rel=\"nofollow\">create an account</a>.</p>\n</li>\n<li>\n<p><strong>Event Hubs namespace with an Event Hub:</strong> To interact with Azure Event Hubs, you'll also need to have a namespace and Event Hub  available.  If you are not familiar with creating Azure resources, you may wish to follow the step-by-step guide for <a href=\"https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-create\" rel=\"nofollow\">creating an Event Hub using the Azure portal</a>.  There, you can also find detailed instructions for using the Azure CLI, Azure PowerShell, or Azure Resource Manager (ARM) templates to create an Event Hub.</p>\n</li>\n<li>\n<p><strong>Azure Storage Account:</strong> You'll need to have an Azure Storage Account and create a Azure Blob Storage Block Container to store the checkpoint data with blobs. You may follow the guide <a href=\"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-create-account-block-blob\" rel=\"nofollow\">creating an Azure Block Blob Storage Account</a>.</p>\n</li>\n</ul>\n<h3>Install the package</h3>\n<pre><code>$ pip install azure-eventhub-checkpointstoreblob-aio\n</code></pre>\n<h2>Key concepts</h2>\n<h3>Checkpointing</h3>\n<p>Checkpointing is a process by which readers mark or commit their position within a partition event sequence.\nCheckpointing is the responsibility of the consumer and occurs on a per-partition basis within a consumer group.\nThis responsibility means that for each consumer group, each partition reader must keep track of its current position\nin the event stream, and can inform the service when it considers the data stream complete. If a reader disconnects from\na partition, when it reconnects it begins reading at the checkpoint that was previously submitted by the last reader of\nthat partition in that consumer group. When the reader connects, it passes the offset to the event hub to specify the\nlocation at which to start reading. In this way, you can use checkpointing to both mark events as \"complete\" by\ndownstream applications, and to provide resiliency if a failover between readers running on different machines occurs.\nIt is possible to return to older data by specifying a lower offset from this checkpointing process. Through this\nmechanism, checkpointing enables both failover resiliency and event stream replay.</p>\n<h3>Offsets &amp; sequence numbers</h3>\n<p>Both offset &amp; sequence number refer to the position of an event within a partition. You can think of them as a\nclient-side cursor. The offset is a byte numbering of the event. The offset/sequence number enables an event consumer\n(reader) to specify a point in the event stream from which they want to begin reading events. You can specify a\ntimestamp such that you receive events enqueued only after the given timestamp. Consumers are responsible for\nstoring their own offset values outside of the Event Hubs service. Within a partition, each event includes an offset,\nsequence number and the timestamp of when it was enqueued.</p>\n<h2>Examples</h2>\n<ul>\n<li><a href=\"#create-an-eventhubconsumerclient\" rel=\"nofollow\">Create an Azure EventHubs <code>EventHubConsumerClient</code></a></li>\n<li><a href=\"#consume-events-using-a-blobcheckpointstore-to-do-checkpoint\" rel=\"nofollow\">Consume events using a <code>BlobCheckpointStore</code></a></li>\n</ul>\n<h3>Create an <code>EventHubConsumerClient</code></h3>\n<p>The easiest way to create a <code>EventHubConsumerClient</code> is to use a connection string.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.eventhub.aio</span> <span class=\"kn\">import</span> <span class=\"n\">EventHubConsumerClient</span>\n<span class=\"n\">eventhub_client</span> <span class=\"o\">=</span> <span class=\"n\">EventHubConsumerClient</span><span class=\"o\">.</span><span class=\"n\">from_connection_string</span><span class=\"p\">(</span><span class=\"s2\">\"my_eventhub_namespace_connection_string\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my_consumer_group\"</span><span class=\"p\">,</span> <span class=\"n\">eventhub_name</span><span class=\"o\">=</span><span class=\"s2\">\"my_eventhub\"</span><span class=\"p\">)</span>\n</pre>\n<p>For other ways of creating a <code>EventHubConsumerClient</code>, refer to <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub\" rel=\"nofollow\">EventHubs library</a> for more details.</p>\n<h3>Consume events using a <code>BlobCheckpointStore</code> to do checkpoint</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">azure.eventhub.aio</span> <span class=\"kn\">import</span> <span class=\"n\">EventHubConsumerClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.eventhub.extensions.checkpointstoreblobaio</span> <span class=\"kn\">import</span> <span class=\"n\">BlobCheckpointStore</span>\n\n<span class=\"n\">connection_str</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;&lt; CONNECTION STRING FOR THE EVENT HUBS NAMESPACE &gt;&gt;'</span>\n<span class=\"n\">consumer_group</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;&lt; CONSUMER GROUP &gt;&gt;'</span>\n<span class=\"n\">eventhub_name</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;&lt; NAME OF THE EVENT HUB &gt;&gt;'</span>\n<span class=\"n\">storage_connection_str</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;&lt; CONNECTION STRING OF THE STORAGE &gt;&gt;'</span>\n<span class=\"n\">container_name</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;&lt; STORAGE CONTAINER NAME&gt;&gt;'</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_event</span><span class=\"p\">(</span><span class=\"n\">partition_context</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Put your code here.</span>\n    <span class=\"k\">await</span> <span class=\"n\">partition_context</span><span class=\"o\">.</span><span class=\"n\">update_checkpoint</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>  <span class=\"c1\"># Or update_checkpoint every N events for better performance.</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">checkpoint_store</span> <span class=\"o\">=</span> <span class=\"n\">BlobCheckpointStore</span><span class=\"o\">.</span><span class=\"n\">from_connection_string</span><span class=\"p\">(</span>\n        <span class=\"n\">storage_connection_str</span><span class=\"p\">,</span>\n        <span class=\"n\">container_name</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">EventHubConsumerClient</span><span class=\"o\">.</span><span class=\"n\">from_connection_string</span><span class=\"p\">(</span>\n        <span class=\"n\">connection_str</span><span class=\"p\">,</span>\n        <span class=\"n\">consumer_group</span><span class=\"p\">,</span>\n        <span class=\"n\">eventhub_name</span><span class=\"o\">=</span><span class=\"n\">eventhub_name</span><span class=\"p\">,</span>\n        <span class=\"n\">checkpoint_store</span><span class=\"o\">=</span><span class=\"n\">checkpoint_store</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">receive</span><span class=\"p\">(</span><span class=\"n\">on_event</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h4>Use <code>BlobCheckpointStore</code> with a different version of Azure Storage Service API</h4>\n<p>Some environments have different versions of Azure Storage Service API.\n<code>BlobCheckpointStore</code> by default uses the Storage Service API version 2019-07-07. To use it against a different\nversion, specify <code>api_version</code> when you create the <code>BlobCheckpointStore</code> object.</p>\n<h2>Troubleshooting</h2>\n<h3>General</h3>\n<p>Enabling logging will be helpful to do trouble shooting.</p>\n<h3>Logging</h3>\n<ul>\n<li>Enable <code>azure.eventhub.extensions.checkpointstoreblobaio</code> logger to collect traces from the library.</li>\n<li>Enable <code>azure.eventhub</code> logger to collect traces from the main azure-eventhub library.</li>\n<li>Enable <code>azure.eventhub.extensions.checkpointstoreblobaio._vendor.storage</code> logger to collect traces from azure storage blob library.</li>\n<li>Enable <code>uamqp</code> logger to collect traces from the underlying uAMQP library.</li>\n<li>Enable AMQP frame level trace by setting <code>logging_enable=True</code> when creating the client.</li>\n</ul>\n<h2>Next steps</h2>\n<h3>Examples</h3>\n<ul>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/93b121d268aa2913e6b499ad1c1928793c38ec77/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/samples/event_processor_blob_storage_example.py\" rel=\"nofollow\">./samples/event_processor_blob_storage_example.py</a> - EventHubConsumerClient with blob checkpoint store example</li>\n</ul>\n<h3>Documentation</h3>\n<p>Reference documentation is available <a href=\"https://azuresdkdocs.blob.core.windows.net/%24web/python/azure-eventhub/5.0.1/azure.eventhub.aio.html#azure.eventhub.aio.CheckpointStore\" rel=\"nofollow\">here</a></p>\n<h3>Provide Feedback</h3>\n<p>If you encounter any bugs or have suggestions, please file an issue in the <a href=\"https://github.com/Azure/azure-sdk-for-python/issues\" rel=\"nofollow\">Issues</a> section of the project.</p>\n<h2>Contributing</h2>\n<p>This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">https://cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</p>\n<p>This project has adopted the <a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>.\nFor more information see the <a href=\"https://opensource.microsoft.com/codeofconduct/faq/\" rel=\"nofollow\">Code of Conduct FAQ</a> or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any additional questions or comments.</p>\n<p><img alt=\"Impressions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05c66446033192094a4b94ee7dd3226b4dff6699/68747470733a2f2f617a7572652d73646b2d696d7072657373696f6e732e617a75726577656273697465732e6e65742f6170692f696d7072657373696f6e732f617a7572652d73646b2d666f722d707974686f6e2f73646b2f6576656e746875622f617a7572652d6576656e746875622d636865636b706f696e7473746f7265626c6f622d61696f2f524541444d452e706e67\"></p>\n<h1>Release History</h1>\n<h2>1.1.0 (2020-03-09)</h2>\n<p><strong>New features</strong></p>\n<ul>\n<li>Param <code>api_version</code> of <code>BlobCheckpointStore</code> now supports older versions of Azure Storage Service API.</li>\n</ul>\n<h2>1.0.0 (2020-01-13)</h2>\n<p>Stable release. No new features or API changes.</p>\n<h2>1.0.0b6 (2019-12-04)</h2>\n<p><strong>Breaking changes</strong></p>\n<ul>\n<li>Renamed <code>BlobPartitionManager</code> to <code>BlobCheckpointStore</code>.</li>\n<li>Constructor of <code>BlobCheckpointStore</code> has been updated to take the storage container details directly rather than an instance of <code>ContainerClient</code>.</li>\n<li>A <code>from_connection_string</code> constructor has been added for Blob Storage connection strings.</li>\n<li>Module <code>blobstoragepmaio</code> is now internal, all imports should be directly from <code>azure.eventhub.extensions.checkpointstoreblobaio</code>.</li>\n<li><code>BlobCheckpointStore</code> now has a <code>close()</code> function for shutting down an HTTP connection pool, additionally the object can be used in a context manager to manage the connection.</li>\n</ul>\n<h2>1.0.0b5 (2019-11-04)</h2>\n<p><strong>New features</strong></p>\n<ul>\n<li>Added method <code>list_checkpoints</code> which list all the checkpoints under given eventhub namespace, eventhub name and consumer group.</li>\n</ul>\n<h2>1.0.0b4 (2019-10-09)</h2>\n<p>This release has trivial internal changes only. No feature changes.</p>\n<h2>1.0.0b1 (2019-09-10)</h2>\n<p><strong>New features</strong></p>\n<ul>\n<li><code>BlobPartitionManager</code> that uses Azure Blob Storage Block Blob to store EventProcessor checkpoint data</li>\n</ul>\n<p><img alt=\"Impressions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79597071ff6e44bad733dafe7ff3bc51bca60073/68747470733a2f2f617a7572652d73646b2d696d7072657373696f6e732e617a75726577656273697465732e6e65742f6170692f696d7072657373696f6e732f617a7572652d73646b2d666f722d707974686f6e2f73646b2f6576656e746875622f617a7572652d6576656e746875622d636865636b706f696e7473746f7265626c6f622d61696f2f484953544f52592e706e67\"></p>\n\n          </div>"}, "last_serial": 6782096, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7abb6843a81af3dd73242cb0224d27e8", "sha256": "43d6dbe48338cd8ba11098054bb60ff631eadd8f3732a7426496185900d0a1b7"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7abb6843a81af3dd73242cb0224d27e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 9425, "upload_time": "2020-01-14T02:32:13", "upload_time_iso_8601": "2020-01-14T02:32:13.060798Z", "url": "https://files.pythonhosted.org/packages/c1/2b/3d381d303eee801dde68e8d696c1f538c3bd0ed79f7393d51daace6eaff2/azure_eventhub_checkpointstoreblob_aio-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82102a5a7d7aa59b5666e619c6c9d7bc", "sha256": "0a03045d0712294848d1a54551a2e7671594354ab23ab79cd5d4cb0eaf5b037f"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.0.0.zip", "has_sig": false, "md5_digest": "82102a5a7d7aa59b5666e619c6c9d7bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 24639, "upload_time": "2020-01-14T02:32:15", "upload_time_iso_8601": "2020-01-14T02:32:15.265624Z", "url": "https://files.pythonhosted.org/packages/c2/b1/d7e99a4e8b8bf632c8bfbb5b036af1db6b68616f8332557aa1d004143ac5/azure-eventhub-checkpointstoreblob-aio-1.0.0.zip", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "ff333b0216487a58aff2a48b7a27ecdd", "sha256": "0a00d60e48b2fa59be633d86d903bee8aa9182ba90b35619fc701970740a387d"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "ff333b0216487a58aff2a48b7a27ecdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8275, "upload_time": "2019-09-12T21:19:41", "upload_time_iso_8601": "2019-09-12T21:19:41.559604Z", "url": "https://files.pythonhosted.org/packages/f6/65/425e68675aaaf3ce0bc9c39ef7dffbcf5732ad8b3177244ccfdc2a8ff194/azure_eventhub_checkpointstoreblob_aio-1.0.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bc0c3816f78a9beccbb7defdd9c661b", "sha256": "8d3dd5a0e6d808675bfa31089c2ae22005d59758a878ca825cba904614880cf4"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.0.0b1.zip", "has_sig": false, "md5_digest": "2bc0c3816f78a9beccbb7defdd9c661b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 20267, "upload_time": "2019-09-12T21:19:46", "upload_time_iso_8601": "2019-09-12T21:19:46.731819Z", "url": "https://files.pythonhosted.org/packages/c2/97/9744d13fabb07a7bf4aeffcbf9e5b128ab0f561de41e51c9ec6c05983806/azure-eventhub-checkpointstoreblob-aio-1.0.0b1.zip", "yanked": false}], "1.0.0b4": [{"comment_text": "", "digests": {"md5": "3dc9c423ccb581c20a47c4445d50c7cd", "sha256": "65605d2b43e2d69184284838f4aaf3a07abc3868eeebb3e8ba6542541a589e9a"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.0.0b4-py3-none-any.whl", "has_sig": false, "md5_digest": "3dc9c423ccb581c20a47c4445d50c7cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8314, "upload_time": "2019-10-09T01:11:53", "upload_time_iso_8601": "2019-10-09T01:11:53.763191Z", "url": "https://files.pythonhosted.org/packages/e9/57/05f474e53e4f404ae4523deb58da6d6656bd3dd958b2f8e6d486306ba628/azure_eventhub_checkpointstoreblob_aio-1.0.0b4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17eae2aebebfc40075cfe4bef464d0a6", "sha256": "2fbe13d50457206ec3726c08b1327d94628119b4f48080025727e0d2606b234b"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.0.0b4.zip", "has_sig": false, "md5_digest": "17eae2aebebfc40075cfe4bef464d0a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 20386, "upload_time": "2019-10-09T01:11:55", "upload_time_iso_8601": "2019-10-09T01:11:55.186034Z", "url": "https://files.pythonhosted.org/packages/13/97/6f701367e176f8e2e3ab5d9b57497a09b6692f1da3951bac4413ddd012c2/azure-eventhub-checkpointstoreblob-aio-1.0.0b4.zip", "yanked": false}], "1.0.0b5": [{"comment_text": "", "digests": {"md5": "bf05dec66f8e1f091f63cec6592fc735", "sha256": "e505613071518b4944fa1937f6a890224722220a91d761dac83a6cb30a6c3bb5"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.0.0b5-py3-none-any.whl", "has_sig": false, "md5_digest": "bf05dec66f8e1f091f63cec6592fc735", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 8344, "upload_time": "2019-11-06T04:45:50", "upload_time_iso_8601": "2019-11-06T04:45:50.007185Z", "url": "https://files.pythonhosted.org/packages/03/60/b9f21d6500e2ab884bf9ed9d5df6751dc11ca78c59e46325ee1e2dcf4a01/azure_eventhub_checkpointstoreblob_aio-1.0.0b5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3ee31868f326fef9762f92ba68cbd16", "sha256": "c2bfae97d644d3989f602aef419478b7a594bcac690784da90fc3364e1727400"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.0.0b5.zip", "has_sig": false, "md5_digest": "e3ee31868f326fef9762f92ba68cbd16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 23263, "upload_time": "2019-11-06T04:45:51", "upload_time_iso_8601": "2019-11-06T04:45:51.746604Z", "url": "https://files.pythonhosted.org/packages/c7/4b/496457715f3cd588b5592ada89856d03dd37a679eb034a1d3e6355b8f8ed/azure-eventhub-checkpointstoreblob-aio-1.0.0b5.zip", "yanked": false}], "1.0.0b6": [{"comment_text": "", "digests": {"md5": "1c98c777b15a056884b814dda8c41172", "sha256": "1b597d3c1d24817d3ca4cd47781ce935da7c2cff07d492557406029661d6d304"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.0.0b6-py3-none-any.whl", "has_sig": false, "md5_digest": "1c98c777b15a056884b814dda8c41172", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 9441, "upload_time": "2019-12-04T01:47:58", "upload_time_iso_8601": "2019-12-04T01:47:58.946815Z", "url": "https://files.pythonhosted.org/packages/8f/01/73015cd127456728d1a67352cdbfa6406b4bddf2021b2263ecf9f65a670b/azure_eventhub_checkpointstoreblob_aio-1.0.0b6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0956b2c4c89d1845e6ec8e7d3e84bb58", "sha256": "341077925b661176566f0aea8c1cde05cf5377c1f3afcef7bef6fc2b965dafde"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.0.0b6.zip", "has_sig": false, "md5_digest": "0956b2c4c89d1845e6ec8e7d3e84bb58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 24693, "upload_time": "2019-12-04T01:48:00", "upload_time_iso_8601": "2019-12-04T01:48:00.478775Z", "url": "https://files.pythonhosted.org/packages/58/29/7492fc721768d9789c1c1f1ae26ba5a4b773799d7325830bab75c57d5167/azure-eventhub-checkpointstoreblob-aio-1.0.0b6.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f524c54095df3b62aaedfdac2342e49f", "sha256": "643ee7ffd556ba4958e9d0cc2739c2f308da5a217c658c6b0aabff8191fdd870"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f524c54095df3b62aaedfdac2342e49f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 287518, "upload_time": "2020-03-10T02:00:01", "upload_time_iso_8601": "2020-03-10T02:00:01.645670Z", "url": "https://files.pythonhosted.org/packages/44/a2/acf27b0ce947b322eac2d385d67a649a45967e03032fa7f8b6d7c12582b7/azure_eventhub_checkpointstoreblob_aio-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "120f685b6d07c9b3adb5286dfeec326d", "sha256": "95d3ea5361884c98635f80c5b0e9cbda45881059782d4f36d26be0b01893e6c2"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.1.0.zip", "has_sig": false, "md5_digest": "120f685b6d07c9b3adb5286dfeec326d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 310434, "upload_time": "2020-03-10T02:00:03", "upload_time_iso_8601": "2020-03-10T02:00:03.666311Z", "url": "https://files.pythonhosted.org/packages/25/cc/915b8d90aa5687630da442439242632644d6cc2a172829b173b4b246fb0b/azure-eventhub-checkpointstoreblob-aio-1.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f524c54095df3b62aaedfdac2342e49f", "sha256": "643ee7ffd556ba4958e9d0cc2739c2f308da5a217c658c6b0aabff8191fdd870"}, "downloads": -1, "filename": "azure_eventhub_checkpointstoreblob_aio-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f524c54095df3b62aaedfdac2342e49f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 287518, "upload_time": "2020-03-10T02:00:01", "upload_time_iso_8601": "2020-03-10T02:00:01.645670Z", "url": "https://files.pythonhosted.org/packages/44/a2/acf27b0ce947b322eac2d385d67a649a45967e03032fa7f8b6d7c12582b7/azure_eventhub_checkpointstoreblob_aio-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "120f685b6d07c9b3adb5286dfeec326d", "sha256": "95d3ea5361884c98635f80c5b0e9cbda45881059782d4f36d26be0b01893e6c2"}, "downloads": -1, "filename": "azure-eventhub-checkpointstoreblob-aio-1.1.0.zip", "has_sig": false, "md5_digest": "120f685b6d07c9b3adb5286dfeec326d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 310434, "upload_time": "2020-03-10T02:00:03", "upload_time_iso_8601": "2020-03-10T02:00:03.666311Z", "url": "https://files.pythonhosted.org/packages/25/cc/915b8d90aa5687630da442439242632644d6cc2a172829b173b4b246fb0b/azure-eventhub-checkpointstoreblob-aio-1.1.0.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:22 2020"}