{"info": {"author": "Heartex", "author_email": "hello@heartex.ai", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pyheartex\n\nPython interface for running ML backend server and using it for active learning & prelabeling & prediction within [Heartex platform](https://www.heartex.net)\n\n# Installation\n\nFirst make sure you have [Redis server](https://redis.io/topics/quickstart) running (otherwise you can use only prediction, not active learning).\n\nInstall Heartex SDK:\n```bash\ngit clone https://github.com/heartexlabs/pyheartex.git\ncd pyheartex/\npip install -r requirements.txt\npip install -e .\n```\n\nLast thing you should do is to start RQ workers in the background:\n```bash\nrq worker default\n```\n\n# Using Docker\nHere is an example how to start serving image classifier:\n```bash\ncd examples/docker\ndocker-compose up\n```\nAll you need to replace with your own model is to change loading, inference and training scripts from [this file](examples/docker/scripts/image_classifier.py).\n\n# Quick start\n\nQuick start guide provides the usage of the following popular machine learning frameworks within Heartex platform:\n- [scikit-learn](#scikit-learn)\n- [FastAI](#fastai)\n\n\n## Scikit-learn\nLet's serve [scikit-learn](https://scikit-learn.org/stable/) model for text classification.\n\nYou can simply launch\n```bash\npython examples/quickstart.py\n```\n\nThis script looks like\n```python\nfrom htx.adapters.sklearn import serve\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import make_pipeline\n\n\nif __name__ == \"__main__\":\n\n    # Creating sklearn-compatible model\n    my_model = make_pipeline(TfidfVectorizer(), LogisticRegression())\n\n    # Start serving this model\n    serve(my_model)\n``` \n\nIt starts serving at http://localhost:16118 listening for Heartex event. \nTo connect your model, go to Heartex -> Settings -> Machine learning page and choose \"Add custom model\".\n\nOr you can use Heartex API to activate your model:\n```bash\ncurl -X POST -H 'Content-Type: application/json' \\\n-H 'Authorization: Token <PUT-YOUR-TOKEN-HERE>' \\\n-d '[{\"url\": \"$HOST:$PORT\", \"name\": \"my_model\", \"title\": \"My model\", \"description\": \"My new model deployed on Heartex\"}]' \\\nhttp://go.heartex.net/api/projects/{project-id}/backends/\n```\nwhere `$HOST:$PORT` is your server URL that should be accessible from the outside.\n\n## FastAI\nYou can integrate [FastAI](https://docs.fast.ai/) models similarly to scikit-learn.\nCheck [this example](examples/run_fastai_image_classifier.py) to learn how to plug in updateable image classifier.\n\n# Advanced usage\nWhen you want to go beyond using sklearn compatible API, you can build your own model, by making manually input/output interface conversion.\nYou have to subclass Heartex models as follows:\n```python\nfrom htx.base_model import BaseModel\n\n# This class exposes methods needed to handle model in the runtime (loading into memory, running predictions)\nclass MyModel(BaseModel):\n\n    def get_input(self, task):\n        \"\"\"Extract input from serialized task\"\"\"\n        pass\n\n    def get_output(self, task):\n        \"\"\"Extract output from serialized task\"\"\"\n        pass\n\n    def load(self, train_output):\n        \"\"\"Loads model into memory. `train_output` dict is actually the output the `train` method (see below)\"\"\"\n        pass\n\n    def predict(self, tasks):\n        \"\"\"Get list of tasks, already processed by `get_input` method, and returns completions in Heartex format\"\"\"\n        pass\n\n# This method handles model retraining\ndef train(input_tasks, output_model_dir, **kwargs):\n    \"\"\"\n    :param input_tasks: list of tasks already processed by `get_input`\n    :param output_model_dir: output directory where you can optionally store model resources\n    :param kwargs: any additional kwargs taken from `train_kwargs`\n    :return: `train_output` dict for consequent model loading\n    \"\"\"\n    pass\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/heartexlabs/pyheartex", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyheartex", "package_url": "https://pypi.org/project/pyheartex/", "platform": "", "project_url": "https://pypi.org/project/pyheartex/", "project_urls": {"Homepage": "https://github.com/heartexlabs/pyheartex"}, "release_url": "https://pypi.org/project/pyheartex/0.0.8/", "requires_dist": ["Flask (==1.0.2)", "attrs (==19.1.0)", "rq (==1.0)", "numpy (>=1.16.3)", "requests (==2.22.0)"], "requires_python": ">=3.6", "summary": "Deploying machine learning for Heartex or Label Studio", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyheartex</h1>\n<p>Python interface for running ML backend server and using it for active learning &amp; prelabeling &amp; prediction within <a href=\"https://www.heartex.net\" rel=\"nofollow\">Heartex platform</a></p>\n<h1>Installation</h1>\n<p>First make sure you have <a href=\"https://redis.io/topics/quickstart\" rel=\"nofollow\">Redis server</a> running (otherwise you can use only prediction, not active learning).</p>\n<p>Install Heartex SDK:</p>\n<pre>git clone https://github.com/heartexlabs/pyheartex.git\n<span class=\"nb\">cd</span> pyheartex/\npip install -r requirements.txt\npip install -e .\n</pre>\n<p>Last thing you should do is to start RQ workers in the background:</p>\n<pre>rq worker default\n</pre>\n<h1>Using Docker</h1>\n<p>Here is an example how to start serving image classifier:</p>\n<pre><span class=\"nb\">cd</span> examples/docker\ndocker-compose up\n</pre>\n<p>All you need to replace with your own model is to change loading, inference and training scripts from <a href=\"examples/docker/scripts/image_classifier.py\" rel=\"nofollow\">this file</a>.</p>\n<h1>Quick start</h1>\n<p>Quick start guide provides the usage of the following popular machine learning frameworks within Heartex platform:</p>\n<ul>\n<li><a href=\"#scikit-learn\" rel=\"nofollow\">scikit-learn</a></li>\n<li><a href=\"#fastai\" rel=\"nofollow\">FastAI</a></li>\n</ul>\n<h2>Scikit-learn</h2>\n<p>Let's serve <a href=\"https://scikit-learn.org/stable/\" rel=\"nofollow\">scikit-learn</a> model for text classification.</p>\n<p>You can simply launch</p>\n<pre>python examples/quickstart.py\n</pre>\n<p>This script looks like</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">htx.adapters.sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">serve</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.feature_extraction.text</span> <span class=\"kn\">import</span> <span class=\"n\">TfidfVectorizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">LogisticRegression</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.pipeline</span> <span class=\"kn\">import</span> <span class=\"n\">make_pipeline</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Creating sklearn-compatible model</span>\n    <span class=\"n\">my_model</span> <span class=\"o\">=</span> <span class=\"n\">make_pipeline</span><span class=\"p\">(</span><span class=\"n\">TfidfVectorizer</span><span class=\"p\">(),</span> <span class=\"n\">LogisticRegression</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># Start serving this model</span>\n    <span class=\"n\">serve</span><span class=\"p\">(</span><span class=\"n\">my_model</span><span class=\"p\">)</span>\n</pre>\n<p>It starts serving at <a href=\"http://localhost:16118\" rel=\"nofollow\">http://localhost:16118</a> listening for Heartex event.\nTo connect your model, go to Heartex -&gt; Settings -&gt; Machine learning page and choose \"Add custom model\".</p>\n<p>Or you can use Heartex API to activate your model:</p>\n<pre>curl -X POST -H <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n-H <span class=\"s1\">'Authorization: Token &lt;PUT-YOUR-TOKEN-HERE&gt;'</span> <span class=\"se\">\\</span>\n-d <span class=\"s1\">'[{\"url\": \"$HOST:$PORT\", \"name\": \"my_model\", \"title\": \"My model\", \"description\": \"My new model deployed on Heartex\"}]'</span> <span class=\"se\">\\</span>\nhttp://go.heartex.net/api/projects/<span class=\"o\">{</span>project-id<span class=\"o\">}</span>/backends/\n</pre>\n<p>where <code>$HOST:$PORT</code> is your server URL that should be accessible from the outside.</p>\n<h2>FastAI</h2>\n<p>You can integrate <a href=\"https://docs.fast.ai/\" rel=\"nofollow\">FastAI</a> models similarly to scikit-learn.\nCheck <a href=\"examples/run_fastai_image_classifier.py\" rel=\"nofollow\">this example</a> to learn how to plug in updateable image classifier.</p>\n<h1>Advanced usage</h1>\n<p>When you want to go beyond using sklearn compatible API, you can build your own model, by making manually input/output interface conversion.\nYou have to subclass Heartex models as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">htx.base_model</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span>\n\n<span class=\"c1\"># This class exposes methods needed to handle model in the runtime (loading into memory, running predictions)</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_input</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Extract input from serialized task\"\"\"</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Extract output from serialized task\"\"\"</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">train_output</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Loads model into memory. `train_output` dict is actually the output the `train` method (see below)\"\"\"</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">predict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tasks</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Get list of tasks, already processed by `get_input` method, and returns completions in Heartex format\"\"\"</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"c1\"># This method handles model retraining</span>\n<span class=\"k\">def</span> <span class=\"nf\">train</span><span class=\"p\">(</span><span class=\"n\">input_tasks</span><span class=\"p\">,</span> <span class=\"n\">output_model_dir</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    :param input_tasks: list of tasks already processed by `get_input`</span>\n<span class=\"sd\">    :param output_model_dir: output directory where you can optionally store model resources</span>\n<span class=\"sd\">    :param kwargs: any additional kwargs taken from `train_kwargs`</span>\n<span class=\"sd\">    :return: `train_output` dict for consequent model loading</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 6936404, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c4e987b1e77f543f9d375c49f924789c", "sha256": "bacc768f47d0e78c595583735ffc92e0627b4bcfdd31e6cb3e4430adea9d43fc"}, "downloads": -1, "filename": "pyheartex-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c4e987b1e77f543f9d375c49f924789c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15757, "upload_time": "2019-11-19T16:43:23", "upload_time_iso_8601": "2019-11-19T16:43:23.770043Z", "url": "https://files.pythonhosted.org/packages/c6/21/40af9241aadff52ca3d2083cc835b51a4c7fdff1c5ab118d6171b69d3681/pyheartex-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a75896e0488ae65da2ad2eb5860564f1", "sha256": "a89d458785797f943488928321ea920841bdeaf4e78353c110b48dea28043ad9"}, "downloads": -1, "filename": "pyheartex-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a75896e0488ae65da2ad2eb5860564f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13832, "upload_time": "2019-11-19T16:43:26", "upload_time_iso_8601": "2019-11-19T16:43:26.808472Z", "url": "https://files.pythonhosted.org/packages/80/df/b7a9409b5c45305f17a388d211f87b1a7c073707cc96ed4e17b1b18cf588/pyheartex-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a9c7247a5fbdb430ece2ab2287cf81a2", "sha256": "dc0ef55bd80344b18f07db871014fe47da2a2a4c9332b3ef9c093067d5b9c054"}, "downloads": -1, "filename": "pyheartex-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a9c7247a5fbdb430ece2ab2287cf81a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15888, "upload_time": "2019-12-10T13:17:49", "upload_time_iso_8601": "2019-12-10T13:17:49.202184Z", "url": "https://files.pythonhosted.org/packages/ec/77/99be790d77ce9e3f7f78cbfe8dec89ef48e1e2cb7a28c8c649867b62972b/pyheartex-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a92a55d5a8986113da5138a40eb24e45", "sha256": "e575f9bd3b663d4c9653c7ce2430ab390f4fdf37626b8169c06aebac406f53f2"}, "downloads": -1, "filename": "pyheartex-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a92a55d5a8986113da5138a40eb24e45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14088, "upload_time": "2019-12-10T13:17:50", "upload_time_iso_8601": "2019-12-10T13:17:50.731243Z", "url": "https://files.pythonhosted.org/packages/5d/77/f0da19dad599bbb9712e0fff1f2d22d3cce7691a833495b24aef2a96b0d5/pyheartex-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "39646f9aa664ca89dd5fe9a3b77a55be", "sha256": "39292d493b02c9866252b87cf75872f333c1bd9adee405caa4a139fe5f0b4249"}, "downloads": -1, "filename": "pyheartex-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "39646f9aa664ca89dd5fe9a3b77a55be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15931, "upload_time": "2020-03-27T11:21:32", "upload_time_iso_8601": "2020-03-27T11:21:32.730271Z", "url": "https://files.pythonhosted.org/packages/80/42/2794fcd62be0def81d9725faefaf9c6c8cee3e114c7889b5275cfff29778/pyheartex-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20323d559cf75d35c1c7d346bf5157b4", "sha256": "ee29b38c21e84be9638bd9a848f66a8d3a37754dbb87870bc431f29aca062510"}, "downloads": -1, "filename": "pyheartex-0.0.3.tar.gz", "has_sig": false, "md5_digest": "20323d559cf75d35c1c7d346bf5157b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14146, "upload_time": "2020-03-27T11:21:34", "upload_time_iso_8601": "2020-03-27T11:21:34.668240Z", "url": "https://files.pythonhosted.org/packages/ef/0b/c9c9cf6b3c2b6612359afb6ad9443afdcf7dc0a166466155c60a9dc1d85f/pyheartex-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b674ca684809f98e60574561b27786e3", "sha256": "05f744801d7c7bba736f5da74ae7d74e6435cb9808731dc38f69a2037917b30c"}, "downloads": -1, "filename": "pyheartex-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b674ca684809f98e60574561b27786e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15928, "upload_time": "2020-03-27T13:34:48", "upload_time_iso_8601": "2020-03-27T13:34:48.262207Z", "url": "https://files.pythonhosted.org/packages/b1/8a/062fa7032714e3c44f7ca3bb67c894e0a4383e9d87a163dae6ceec1bcda9/pyheartex-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e50de99f60c9762ab06d0e6a26f2b66", "sha256": "bda8495666abc430e1ecb6603bdfeeb93f3fda51fdf62d9f95bb933040f6b35b"}, "downloads": -1, "filename": "pyheartex-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7e50de99f60c9762ab06d0e6a26f2b66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14136, "upload_time": "2020-03-27T13:34:50", "upload_time_iso_8601": "2020-03-27T13:34:50.403782Z", "url": "https://files.pythonhosted.org/packages/4e/29/8dd67f459d23d7d28b382ef29c5489425e3498bf74ce3d8ff851eeff9eef/pyheartex-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d750609548394a4f6a4b152650baf9be", "sha256": "93e2a2d7471ce6bcacc3f0a1bf08ac836c381e29cf0e0cebe6b8586a4c1545e1"}, "downloads": -1, "filename": "pyheartex-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d750609548394a4f6a4b152650baf9be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15923, "upload_time": "2020-03-27T15:38:57", "upload_time_iso_8601": "2020-03-27T15:38:57.628858Z", "url": "https://files.pythonhosted.org/packages/22/1b/173f89843fea6b5f1036a3d27fc866712b32501017ec0730493ab3fcd2da/pyheartex-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea1aabd51d3c1fe78209bce1f50b2386", "sha256": "faabaa9b6e75262d7bd829da5bf5ea1d2885c3322231c41d02a7a82d458ca6d0"}, "downloads": -1, "filename": "pyheartex-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ea1aabd51d3c1fe78209bce1f50b2386", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14138, "upload_time": "2020-03-27T15:39:00", "upload_time_iso_8601": "2020-03-27T15:39:00.270084Z", "url": "https://files.pythonhosted.org/packages/fb/22/555cf7598439d183f6c9cd0627fd3e8b6dc374efdd42d5017a4cd8f9d820/pyheartex-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "38f1f49e0d8c347f246a4d87deb7c26f", "sha256": "469685de37dc5549fe0e72d558feef079cd54b0d8ba888554484d64f00687819"}, "downloads": -1, "filename": "pyheartex-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "38f1f49e0d8c347f246a4d87deb7c26f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15925, "upload_time": "2020-04-02T12:55:19", "upload_time_iso_8601": "2020-04-02T12:55:19.994668Z", "url": "https://files.pythonhosted.org/packages/bc/ce/870d87afc2a837c424eeace82a544d661165768f7fcf6e264c3066acc3fd/pyheartex-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1c3af985cfd3b2634e057d1a11c30c7", "sha256": "4b78cfbb72bcc62c1bcff3a60f09cebd3e17f991857711638735dfc3b5eb9b51"}, "downloads": -1, "filename": "pyheartex-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b1c3af985cfd3b2634e057d1a11c30c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14176, "upload_time": "2020-04-02T12:55:21", "upload_time_iso_8601": "2020-04-02T12:55:21.212032Z", "url": "https://files.pythonhosted.org/packages/ae/75/1501217de30419957cb0981ac5f0aee971f152ace2b229471b00b470eb64/pyheartex-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f4a5724752dccb23f7dcba7129b55c2c", "sha256": "44e64c33662493424e0c522c59a3d8ddda98e9c10ab44d5cf7246ade3621531f"}, "downloads": -1, "filename": "pyheartex-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f4a5724752dccb23f7dcba7129b55c2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15876, "upload_time": "2020-04-02T13:22:42", "upload_time_iso_8601": "2020-04-02T13:22:42.264433Z", "url": "https://files.pythonhosted.org/packages/69/9b/2686c0fa185d1328087ff287b5eb007691921f4a175ebef88602d1878ed8/pyheartex-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f1914859280104a7072e4d03f0bf48e", "sha256": "334e82ca8bbd2c03c821b2c84ebcebb4c4ea9bd1e36aa08b82fa81f2e530ff37"}, "downloads": -1, "filename": "pyheartex-0.0.7.tar.gz", "has_sig": false, "md5_digest": "6f1914859280104a7072e4d03f0bf48e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14106, "upload_time": "2020-04-02T13:22:43", "upload_time_iso_8601": "2020-04-02T13:22:43.540318Z", "url": "https://files.pythonhosted.org/packages/f4/83/1e82dac6e229b0ab53f268fa4c76272046561cd320678d52359cec2723bb/pyheartex-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e41b0e50e4f3b4c6761558baf150582f", "sha256": "0a7f680e620ff47f64e1eeb9a605726292587fc7a9d0063f366e94d9705b93a8"}, "downloads": -1, "filename": "pyheartex-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e41b0e50e4f3b4c6761558baf150582f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15910, "upload_time": "2020-04-02T15:21:57", "upload_time_iso_8601": "2020-04-02T15:21:57.633787Z", "url": "https://files.pythonhosted.org/packages/65/46/25dccd54890725ca411921f4ab146a4e230004840b06d9049abde2c72d70/pyheartex-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a062287e9a1d015a8c727618fc3319", "sha256": "c1663561eff033711443bd2faf78b2bd4dbe9981aa1dee60d31e00a0b9619164"}, "downloads": -1, "filename": "pyheartex-0.0.8.tar.gz", "has_sig": false, "md5_digest": "c4a062287e9a1d015a8c727618fc3319", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14153, "upload_time": "2020-04-02T15:21:59", "upload_time_iso_8601": "2020-04-02T15:21:59.141378Z", "url": "https://files.pythonhosted.org/packages/dc/b5/3f3b10acf77429f21fa8e575bef2b5ad5e39961554b12d3292608af2c332/pyheartex-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e41b0e50e4f3b4c6761558baf150582f", "sha256": "0a7f680e620ff47f64e1eeb9a605726292587fc7a9d0063f366e94d9705b93a8"}, "downloads": -1, "filename": "pyheartex-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e41b0e50e4f3b4c6761558baf150582f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15910, "upload_time": "2020-04-02T15:21:57", "upload_time_iso_8601": "2020-04-02T15:21:57.633787Z", "url": "https://files.pythonhosted.org/packages/65/46/25dccd54890725ca411921f4ab146a4e230004840b06d9049abde2c72d70/pyheartex-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a062287e9a1d015a8c727618fc3319", "sha256": "c1663561eff033711443bd2faf78b2bd4dbe9981aa1dee60d31e00a0b9619164"}, "downloads": -1, "filename": "pyheartex-0.0.8.tar.gz", "has_sig": false, "md5_digest": "c4a062287e9a1d015a8c727618fc3319", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14153, "upload_time": "2020-04-02T15:21:59", "upload_time_iso_8601": "2020-04-02T15:21:59.141378Z", "url": "https://files.pythonhosted.org/packages/dc/b5/3f3b10acf77429f21fa8e575bef2b5ad5e39961554b12d3292608af2c332/pyheartex-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:27 2020"}