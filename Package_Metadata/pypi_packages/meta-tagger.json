{"info": {"author": "dreipol GmbH", "author_email": "dev@dreipol.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "===========\nmeta-tagger\n===========\nThis package handles the meta tags of your django CMS project. Some global stuff like the page author and publisher can\nbe managed as setting variables. Other things are stored in a page extension. If you have your own Django models you\ncan even use a mixin to have everything you need for your meta tags.\n\nRequirements\n------------\n\n- ``Django`` >= 1.5\n- ``django-cms`` >= 3.0\n\nQuickstart\n----------\n\nInstall meta-tagger::\n\n    pip install meta-tagger\n\nLoad all template tags of this package ::\n\n    {% load meta_tagger_tags %}\n\nConfigure installed apps in your ``settings.py`` ::\n\n    INSTALLED_APPS = (\n        ...,\n        'meta_tagger',\n    )\n\nRender the content of the title tag ::\n\n    <title>{% render_title_tag %}</title>\n\nInclude all the other meta tags::\n\n    {% include 'meta_tagger/meta_tags.html' %}\n\nMigrate your database ::\n\n    $ ./manage.py migrate meta_tagger\n\n\nAdd the sitemap to your project urls.py ::\n\n    from meta_tagger.cms_sitemap import MetaTagRobotsSiteMap\n\n    urlpatterns = [\n        ...,\n        url(r'^sitemap\\.xml/$', 'django.contrib.sitemaps.views.sitemap', {'sitemaps': {'cmspages': MetaTagRobotsSiteMap}})\n    ]\n\nFeatures\n--------\n\n* Django CMS page extension for the ``robots`` meta tag and the open graph image.\n* Mixin for app models to inherit page specific fields (e.g. meta title, robots, etc.)\n* Include template that renders all meta tags.\n\n\nModel mixin\n-----------\nThis package provides several mixins for the models of your own Django apps. The usage of\n``MetaTagTitleDescriptionMixin``, ``OpenGraphMixin``, ``RobotsMixin`` is straightforward like\nany other mixin. If your view has a context variable called ``object``, which is the default value for the class based\ngeneric ``DetailView``, you don't need to consider anything. Otherwise just pass the object as context to your view.\n\nMake sure you don't forget to implement your translation settings before you create your migrations.\n\nYou might want to use one of your own model fields as meta title. By overriding the corresponding method\n(e.g. get_meta_title), it is very easy to provide another value.\n\n\nStatic settings\n---------------\n\nTo populate the global meta tags with values, just add the following lines to your ``settings.py`` ::\n\n    META_TAGGER_META_TAG_CONF = {\n        'META_AUTHOR': 'My author',\n        'META_PUBLISHER': 'My publisher',\n        'META_COPYRIGHT': '2016',\n        'META_COMPANY': 'My company',\n        'META_SITE_NAME': 'My site name',\n        'META_TYPE': 'website',\n    }\n\n    META_TAGGER_ROBOTS_DOMAIN_WHITELIST = ['www.example.com']\n\n\nDynamic settings\n----------------\n\nIf you are looking for a solution to manage the global meta tags in the admin rather than the settings file, you might\ntake a look at the ``constance`` package. The installation is pretty easy::\n\n    pip install \"django-constance[database]\"\n    pip install django-picklefield\n\nConfigure installed apps in your ``settings.py`` ::\n\n    INSTALLED_APPS = (\n        ...,\n        'constance',\n        'constance.backends.database',\n    )\n\n    CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'\n    CONSTANCE_DATABASE_CACHE_BACKEND = 'default'\n    CONSTANCE_ADDITIONAL_FIELDS = {\n        'short_text': ['django.forms.fields.CharField', {'widget': 'django.forms.fields.TextInput'}],\n    }\n    CONSTANCE_CONFIG = {\n        'META_AUTHOR': ('', '<meta name=\"author\" content=\"{META_AUTHOR}\">', 'short_text'),\n        'META_PUBLISHER': ('', '<meta name=\"publisher\" content=\"{META_PUBLISHER}\">', 'short_text'),\n        'META_COPYRIGHT': ('', '<meta name=\"copyright\" content=\"{META_COPYRIGHT}\">', 'short_text'),\n        'META_COMPANY': ('', '<meta name=\"company\" content=\"{META_COMPANY}\">', 'short_text'),\n        'META_SITE_NAME': ('', '<meta name=\"site-name\" content=\"{META_SITE_NAME}\">', 'short_text'),\n        'META_TYPE': ('website', '<meta property=\"og:type\" content=\"{META_TYPE}\">', 'short_text'),\n        'META_OG_IMAGE_WIDTH': (1200, '<meta property=\"og:image:width\" content=\"{META_OG_IMAGE_WIDTH}\">', int),\n        'META_OG_IMAGE_HEIGHT': (630, '<meta property=\"og:image:height\" content=\"{META_OG_IMAGE_HEIGHT}\">', int),\n    }\n\n    META_TAGGER_ROBOTS_DOMAIN_WHITELIST = ['www.example.com']\n\nPlease refer to the documentation of django constance for additional installation support (e.g. Redis)\n\n\nROBOTS INDEXING\n---------------\n\nTo prevent indexing any unwanted domains, the content of the robots meta tag defaults to ``noindex, nofollow``. All\ndomains listed in the setting variable use the configuration of your model instance or CMS page::\n\n    META_TAGGER_ROBOTS_DOMAIN_WHITELIST = ['www.example.com']\n\n\nRunning Tests\n-------------\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install -r requirements-test.txt\n    (myenv) $ python runtests.py\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.10 (2019-07-02)\n+++++++++++++++++++\n\n* Add support for Django 2.1\n\n0.1.9 (2019-06-20)\n++++++++++++++++++\n\n* Add support for django CMS 3.6\n\n0.1.7 (2018-11-08)\n++++++++++++++++++\n\n* Add view for robots.txt\n* Introduce disallow field\n* Add some German translations\n\n\n0.1.6 (2017-07-11)\n++++++++++++++++++\n\n* Add default indexing\n\n\n0.1.5 (2016-11-25)\n++++++++++++++++++\n\n* Fix for setups without a CMS.\n\n\n0.1.5 (2016-11-25)\n++++++++++++++++++\n\n* Fix for setups without a CMS.\n\n\n0.1.4 (2016-10-06)\n++++++++++++++++++\n\n* Wrap block tags to allow template overrides\n\n\n0.1.3 (2016-08-25)\n++++++++++++++++++\n\n* Minor bugfixes\n\n\n0.1.2 (2016-06-22)\n++++++++++++++++++\n\n* Minor bugfixes\n\n\n0.1.1 (2016-05-30)\n++++++++++++++++++\n\n* Allow property override.\n* Add width and height property for open graph image.\n* Prevent indexing unwanted domains.\n\n\n0.1.0 (2016-05-24)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dreipol/meta-tagger", "keywords": "meta-tagger", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "meta-tagger", "package_url": "https://pypi.org/project/meta-tagger/", "platform": "", "project_url": "https://pypi.org/project/meta-tagger/", "project_urls": {"Homepage": "https://github.com/dreipol/meta-tagger"}, "release_url": "https://pypi.org/project/meta-tagger/0.1.11/", "requires_dist": null, "requires_python": "", "summary": "Your project description goes here", "version": "0.1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package handles the meta tags of your django CMS project. Some global stuff like the page author and publisher can\nbe managed as setting variables. Other things are stored in a page extension. If you have your own Django models you\ncan even use a mixin to have everything you need for your meta tags.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><tt>Django</tt> &gt;= 1.5</li>\n<li><tt><span class=\"pre\">django-cms</span></tt> &gt;= 3.0</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install meta-tagger:</p>\n<pre>pip install meta-tagger\n</pre>\n<p>Load all template tags of this package</p>\n<pre>{% load meta_tagger_tags %}\n</pre>\n<p>Configure installed apps in your <tt>settings.py</tt></p>\n<pre>INSTALLED_APPS = (\n    ...,\n    'meta_tagger',\n)\n</pre>\n<p>Render the content of the title tag</p>\n<pre>&lt;title&gt;{% render_title_tag %}&lt;/title&gt;\n</pre>\n<p>Include all the other meta tags:</p>\n<pre>{% include 'meta_tagger/meta_tags.html' %}\n</pre>\n<p>Migrate your database</p>\n<pre>$ ./manage.py migrate meta_tagger\n</pre>\n<p>Add the sitemap to your project urls.py</p>\n<pre>from meta_tagger.cms_sitemap import MetaTagRobotsSiteMap\n\nurlpatterns = [\n    ...,\n    url(r'^sitemap\\.xml/$', 'django.contrib.sitemaps.views.sitemap', {'sitemaps': {'cmspages': MetaTagRobotsSiteMap}})\n]\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Django CMS page extension for the <tt>robots</tt> meta tag and the open graph image.</li>\n<li>Mixin for app models to inherit page specific fields (e.g. meta title, robots, etc.)</li>\n<li>Include template that renders all meta tags.</li>\n</ul>\n</div>\n<div id=\"model-mixin\">\n<h2>Model mixin</h2>\n<p>This package provides several mixins for the models of your own Django apps. The usage of\n<tt>MetaTagTitleDescriptionMixin</tt>, <tt>OpenGraphMixin</tt>, <tt>RobotsMixin</tt> is straightforward like\nany other mixin. If your view has a context variable called <tt>object</tt>, which is the default value for the class based\ngeneric <tt>DetailView</tt>, you don\u2019t need to consider anything. Otherwise just pass the object as context to your view.</p>\n<p>Make sure you don\u2019t forget to implement your translation settings before you create your migrations.</p>\n<p>You might want to use one of your own model fields as meta title. By overriding the corresponding method\n(e.g. get_meta_title), it is very easy to provide another value.</p>\n</div>\n<div id=\"static-settings\">\n<h2>Static settings</h2>\n<p>To populate the global meta tags with values, just add the following lines to your <tt>settings.py</tt></p>\n<pre>META_TAGGER_META_TAG_CONF = {\n    'META_AUTHOR': 'My author',\n    'META_PUBLISHER': 'My publisher',\n    'META_COPYRIGHT': '2016',\n    'META_COMPANY': 'My company',\n    'META_SITE_NAME': 'My site name',\n    'META_TYPE': 'website',\n}\n\nMETA_TAGGER_ROBOTS_DOMAIN_WHITELIST = ['www.example.com']\n</pre>\n</div>\n<div id=\"dynamic-settings\">\n<h2>Dynamic settings</h2>\n<p>If you are looking for a solution to manage the global meta tags in the admin rather than the settings file, you might\ntake a look at the <tt>constance</tt> package. The installation is pretty easy:</p>\n<pre>pip install \"django-constance[database]\"\npip install django-picklefield\n</pre>\n<p>Configure installed apps in your <tt>settings.py</tt></p>\n<pre>INSTALLED_APPS = (\n    ...,\n    'constance',\n    'constance.backends.database',\n)\n\nCONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'\nCONSTANCE_DATABASE_CACHE_BACKEND = 'default'\nCONSTANCE_ADDITIONAL_FIELDS = {\n    'short_text': ['django.forms.fields.CharField', {'widget': 'django.forms.fields.TextInput'}],\n}\nCONSTANCE_CONFIG = {\n    'META_AUTHOR': ('', '&lt;meta name=\"author\" content=\"{META_AUTHOR}\"&gt;', 'short_text'),\n    'META_PUBLISHER': ('', '&lt;meta name=\"publisher\" content=\"{META_PUBLISHER}\"&gt;', 'short_text'),\n    'META_COPYRIGHT': ('', '&lt;meta name=\"copyright\" content=\"{META_COPYRIGHT}\"&gt;', 'short_text'),\n    'META_COMPANY': ('', '&lt;meta name=\"company\" content=\"{META_COMPANY}\"&gt;', 'short_text'),\n    'META_SITE_NAME': ('', '&lt;meta name=\"site-name\" content=\"{META_SITE_NAME}\"&gt;', 'short_text'),\n    'META_TYPE': ('website', '&lt;meta property=\"og:type\" content=\"{META_TYPE}\"&gt;', 'short_text'),\n    'META_OG_IMAGE_WIDTH': (1200, '&lt;meta property=\"og:image:width\" content=\"{META_OG_IMAGE_WIDTH}\"&gt;', int),\n    'META_OG_IMAGE_HEIGHT': (630, '&lt;meta property=\"og:image:height\" content=\"{META_OG_IMAGE_HEIGHT}\"&gt;', int),\n}\n\nMETA_TAGGER_ROBOTS_DOMAIN_WHITELIST = ['www.example.com']\n</pre>\n<p>Please refer to the documentation of django constance for additional installation support (e.g. Redis)</p>\n</div>\n<div id=\"robots-indexing\">\n<h2>ROBOTS INDEXING</h2>\n<p>To prevent indexing any unwanted domains, the content of the robots meta tag defaults to <tt>noindex, nofollow</tt>. All\ndomains listed in the setting variable use the configuration of your model instance or CMS page:</p>\n<pre>META_TAGGER_ROBOTS_DOMAIN_WHITELIST = ['www.example.com']\n</pre>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<pre>source &lt;YOURVIRTUALENV&gt;/bin/activate\n(myenv) $ pip install -r requirements-test.txt\n(myenv) $ python runtests.py\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.10 (2019-07-02)</h3>\n<ul>\n<li>Add support for Django 2.1</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.9 (2019-06-20)</h3>\n<ul>\n<li>Add support for django CMS 3.6</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.7 (2018-11-08)</h3>\n<ul>\n<li>Add view for robots.txt</li>\n<li>Introduce disallow field</li>\n<li>Add some German translations</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.6 (2017-07-11)</h3>\n<ul>\n<li>Add default indexing</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.5 (2016-11-25)</h3>\n<ul>\n<li>Fix for setups without a CMS.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.5 (2016-11-25)</h3>\n<ul>\n<li>Fix for setups without a CMS.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.4 (2016-10-06)</h3>\n<ul>\n<li>Wrap block tags to allow template overrides</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1.3 (2016-08-25)</h3>\n<ul>\n<li>Minor bugfixes</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.1.2 (2016-06-22)</h3>\n<ul>\n<li>Minor bugfixes</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.1.1 (2016-05-30)</h3>\n<ul>\n<li>Allow property override.</li>\n<li>Add width and height property for open graph image.</li>\n<li>Prevent indexing unwanted domains.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.1.0 (2016-05-24)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6006827, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ad41735628d951feb0cd2cd69c967415", "sha256": "03ff369a2d713cf81cc478cdb45bbe27f0b2504752faf61126c032a7178b5360"}, "downloads": -1, "filename": "meta-tagger-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ad41735628d951feb0cd2cd69c967415", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8761, "upload_time": "2016-05-24T09:24:37", "upload_time_iso_8601": "2016-05-24T09:24:37.897704Z", "url": "https://files.pythonhosted.org/packages/dd/6b/32c86f0613a440490aeb306c0b18b2481ba9424bde09b4f2b61362b25e9b/meta-tagger-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2e5d95cefe1f1852480c7ddc77f68eef", "sha256": "af272441d6b1bdeb8fd910c3d32c26d4eda6e66a856d6b09b3c4076937a1046d"}, "downloads": -1, "filename": "meta-tagger-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2e5d95cefe1f1852480c7ddc77f68eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10093, "upload_time": "2016-05-30T13:01:50", "upload_time_iso_8601": "2016-05-30T13:01:50.119672Z", "url": "https://files.pythonhosted.org/packages/20/93/051837ef66d2bdf37a913d5e2755b1ab58aeabcb77c13d6fc4765f72d380/meta-tagger-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "9ee34f718d1ad56ba066d2b4f6991ed4", "sha256": "cb54554fc9267e808733a7ce75cf3057b44e7f4056d0322fb4350a9bd50ecc96"}, "downloads": -1, "filename": "meta-tagger-0.1.10.tar.gz", "has_sig": false, "md5_digest": "9ee34f718d1ad56ba066d2b4f6991ed4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11852, "upload_time": "2019-07-02T13:22:13", "upload_time_iso_8601": "2019-07-02T13:22:13.023155Z", "url": "https://files.pythonhosted.org/packages/1d/2f/070c2cd19b0d76cdba61fef88ff5841fbf830ded1a16f91532c6d8489e3a/meta-tagger-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "4c979b9769a531a40b1b4d601cb67732", "sha256": "a9197270573fcb2e37e577b6923812c7b7259c224b9552f9bb7c396bf1c47c53"}, "downloads": -1, "filename": "meta-tagger-0.1.11.tar.gz", "has_sig": false, "md5_digest": "4c979b9769a531a40b1b4d601cb67732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11868, "upload_time": "2019-10-21T11:19:28", "upload_time_iso_8601": "2019-10-21T11:19:28.791258Z", "url": "https://files.pythonhosted.org/packages/c3/5c/665520ac8d0c4e171ee6dcb40c325fe6ba9f774b7e8817de202ee3716de0/meta-tagger-0.1.11.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "08547499eeac7b73cedc1138842e8f29", "sha256": "96558d8e127a5bea40071df34629f8ac211e0a4a52b203d445f286a7dd2cf38a"}, "downloads": -1, "filename": "meta-tagger-0.1.2.tar.gz", "has_sig": false, "md5_digest": "08547499eeac7b73cedc1138842e8f29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10141, "upload_time": "2016-06-22T08:36:50", "upload_time_iso_8601": "2016-06-22T08:36:50.235896Z", "url": "https://files.pythonhosted.org/packages/80/78/9618dcf0ded77c75da41407b8d49f4fef4bb81623d32a89242dc4f6e5ccc/meta-tagger-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "39d8c18701ee26ef7f2672d8bc898bf5", "sha256": "3907884f6d86199867cdf0f258107caa52c6b55ff28d5d0e2e0eca368dfbabbd"}, "downloads": -1, "filename": "meta-tagger-0.1.3.tar.gz", "has_sig": false, "md5_digest": "39d8c18701ee26ef7f2672d8bc898bf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10201, "upload_time": "2016-08-25T09:36:42", "upload_time_iso_8601": "2016-08-25T09:36:42.078860Z", "url": "https://files.pythonhosted.org/packages/c1/4f/455b4e5ba771b10a58e756dcb3ac94ab54e9562cef08e9dc2cfd00f3f6fd/meta-tagger-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3cc4238af3e1ea5c4a43b2f9f8045a5b", "sha256": "695a0816315cd385ca42af17281657bbb2ada15f4d0823a26d5b32d4bda81f7a"}, "downloads": -1, "filename": "meta-tagger-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3cc4238af3e1ea5c4a43b2f9f8045a5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10323, "upload_time": "2016-10-06T11:37:15", "upload_time_iso_8601": "2016-10-06T11:37:15.598614Z", "url": "https://files.pythonhosted.org/packages/60/41/41bd03abe45811018e4c26949ca5c0925512e818a990fb35fb2eeba3bb6a/meta-tagger-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "8a39a1538ab7cdc5c7e3cf59a47c2c23", "sha256": "da0b98ef946d5521900692ddb873ace9140cd0b3a8bba9fdca09660dd1393971"}, "downloads": -1, "filename": "meta-tagger-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8a39a1538ab7cdc5c7e3cf59a47c2c23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10571, "upload_time": "2016-11-25T15:35:45", "upload_time_iso_8601": "2016-11-25T15:35:45.214525Z", "url": "https://files.pythonhosted.org/packages/e1/29/895c241e72421431ab6f2df6215a26892876c5462d18e38247d47b0c8876/meta-tagger-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "3243e2731ac9d27f31fe7631d5e712b4", "sha256": "e0a209389259d237c97ebfd3215ce3b3a6accd0d078e98045f187a7369194184"}, "downloads": -1, "filename": "meta-tagger-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3243e2731ac9d27f31fe7631d5e712b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10579, "upload_time": "2017-07-11T11:20:53", "upload_time_iso_8601": "2017-07-11T11:20:53.588801Z", "url": "https://files.pythonhosted.org/packages/13/46/136add4e1ba85e6ccb6c619742000bb3cf95b961ea7f3e12a9ceee683c36/meta-tagger-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "488d6a3f96e768ed68898f92729a6f76", "sha256": "cabd49de47d49d619c5c893d14ee70f33aedc7b392845376070d8177277ff2a3"}, "downloads": -1, "filename": "meta-tagger-0.1.7.tar.gz", "has_sig": false, "md5_digest": "488d6a3f96e768ed68898f92729a6f76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11361, "upload_time": "2018-11-08T08:58:43", "upload_time_iso_8601": "2018-11-08T08:58:43.003481Z", "url": "https://files.pythonhosted.org/packages/1b/e0/71dd62bcd74160fa95cdba8d663cc938b5a2b81fbc43021b93549e07c88d/meta-tagger-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "ea301783c4c55defedbb826cd1d46275", "sha256": "b1c5fea74df7e9942129447ddd92199efe9a1d114e8ecc4f23df9c2e79b66629"}, "downloads": -1, "filename": "meta-tagger-0.1.8.tar.gz", "has_sig": false, "md5_digest": "ea301783c4c55defedbb826cd1d46275", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11453, "upload_time": "2018-11-27T12:48:24", "upload_time_iso_8601": "2018-11-27T12:48:24.674608Z", "url": "https://files.pythonhosted.org/packages/a9/01/39eef6c0563cd3f554dff07689a01ef1f045b00b4b915ec19957615d0855/meta-tagger-0.1.8.tar.gz", "yanked": false}], "0.1.8.1": [{"comment_text": "", "digests": {"md5": "24078c00e31c30c5073ce10967067154", "sha256": "ea62b78928a74a6d09b078c95662db3e166b7fb45ae5f3f940691c32f36d712b"}, "downloads": -1, "filename": "meta-tagger-0.1.8.1.tar.gz", "has_sig": false, "md5_digest": "24078c00e31c30c5073ce10967067154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11553, "upload_time": "2018-11-27T12:55:37", "upload_time_iso_8601": "2018-11-27T12:55:37.709653Z", "url": "https://files.pythonhosted.org/packages/50/2e/8a807b2645a1f9188482ebb8a3780be1731b30d3640bca50c02dd0ed5d05/meta-tagger-0.1.8.1.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "d61bb4aaa401140c553158993786ac92", "sha256": "a690ebd818106465226f7da7ac524aedaededa86b39d21d501aaae1ac1fcf96c"}, "downloads": -1, "filename": "meta-tagger-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d61bb4aaa401140c553158993786ac92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11643, "upload_time": "2019-06-20T14:14:23", "upload_time_iso_8601": "2019-06-20T14:14:23.206082Z", "url": "https://files.pythonhosted.org/packages/42/bd/4eda616636bfc81a97f9a9b1e7428a001d017058a8646e1346f0f898dbfc/meta-tagger-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c979b9769a531a40b1b4d601cb67732", "sha256": "a9197270573fcb2e37e577b6923812c7b7259c224b9552f9bb7c396bf1c47c53"}, "downloads": -1, "filename": "meta-tagger-0.1.11.tar.gz", "has_sig": false, "md5_digest": "4c979b9769a531a40b1b4d601cb67732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11868, "upload_time": "2019-10-21T11:19:28", "upload_time_iso_8601": "2019-10-21T11:19:28.791258Z", "url": "https://files.pythonhosted.org/packages/c3/5c/665520ac8d0c4e171ee6dcb40c325fe6ba9f774b7e8817de202ee3716de0/meta-tagger-0.1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:46 2020"}