{"info": {"author": "Ross Anderson", "author_email": "ross.anderson@ualberta.ca", "bugtrack_url": null, "classifiers": [], "description": "Description: catan-spectator\n        ---------------\n        \n        A GUI for Mac and Windows for spectating and logging games of Settlers of Catan.\n        \n        Other projects can read game logs and do useful things, i.e.\n        \n        * semi-automated tournaments: draws, matchups, stats, tiebreakers computed from game logs.\n        * machine learning: game outcome prediction, AI development\n        \n        Todos are listed below.\n        \n        > Author: Ross Anderson ([rosshamish](https://github.com/rosshamish))\n        \n        ### Demo\n        ![Demo](/doc/gifs/v0.1.3-demo.mov.gif)\n        \n        ### Usage\n        \n        See http://rosshamish.github.io/catan-spectator\n        \n        ### Development\n        \n        Clone, install dependencies:\n        ```\n        $ git clone https://github.com/rosshamish/catan-spectator\n        $ cd catan-spectator\n        $ pip3 install -r requirements.txt\n        ```\n        \n        Basic usage:\n        ```\n        $ python3 main.py\n        ```\n        \n        Full list of options:\n        ```\n        $ python3 main.py --help\n        usage: main.py [-h] [--board BOARD] [--terrain TERRAIN] [--numbers NUMBERS]\n                       [--ports PORTS] [--pieces PIECES] [--players PLAYERS]\n                       [--pregame PREGAME]  [--use_stdout]\n        \n        log a game of catan\n        \n        optional arguments:\n          -h, --help         show this help message and exit\n          --board BOARD      string with space-separated short-codes for terrain and\n                             numbers, e.g. 'w w h b s o w w b ... 2 None 9 3 4 6 ...'\n          --terrain TERRAIN  random|preset|empty|debug, default random\n          --numbers NUMBERS  random|preset|empty|debug, default preset\n          --ports PORTS      random|preset|empty|debug, default preset\n          --pieces PIECES    random|preset|empty|debug, default preset\n          --players PLAYERS  random|preset|empty|debug, default preset\n          --pregame PREGAME  on|off, default oncatan-spectator\n          --use_stdout       write to stdout\n        ```\n        \n        Make targets:\n        ```\n        - `make relaunch`: launch (or relaunch) the GUI\n        - `make logs`: cat the python logs\n        - `make tail`: tail the python logs\n        - `make`: alias for relaunch && tailFor a particular board layout:\n        ```\n        \n        ### File Format\n        \n        <!-- remember to update this section in sync with \"File Format\" in github.com/rosshamish/catan-py/README.md -->\n        \n        catan-spectator writes game logs in the `.catan` format described by package [`catanlog`](https://github.com/rosshamish/catanlog).\n        \n        They look like this:\n        \n        ```\n        green rolls 6\n        blue buys settlement, builds at (1 NW)\n        orange buys city, builds at (1 SE)\n        red plays monopoly on ore\n        ```\n        \n        ### Todos\n        \n        Need to have\n        - [ ] views documented\n        - [x] piece placing should be cancellable (via undo)\n        - [x] all actions should be undoable\n        - [ ] ui+catanlog: save log file to custom location on End Game\n        - [ ] ui: city-shaped polygon for cities\n        - [ ] ui/ux improvements\n        \n        Nice to have\n        - [ ] board: random number setup obeys red number rule\n        - [ ] ui+board+hexgrid: during piece placement, use little red x\u2019s (at least in debug mode) on \u201ckilled spots\u201d\n        - [ ] ui+game+player+states: dev cards, i.e. keep a count of how many dev cards a player has played and enable Play Dev Card buttons if num > 0\n        - [x] ui+game+port+hexgrid: port trading, disable buttons if the current player doesn\u2019t have the port. 4:1 is always enabled.\n        - [x] ui+port+hexgrid: port trading, don't allow getting or giving more or less than defined by the port type (3:1, 2:1).\n        - [ ] ui+port: port trading, don\u2019t allow n for 0 trades\n        - [ ] ui: large indicator off what the current player is (and what the order is)\n        - [x] ui: cancelling of roads/settlements/cities while placing\n        - [ ] ui: images, colors in UI buttons (eg dice for roll, )\n        - [attempted, might be worse] ui: tile images instead of colored hexagons\n        - [ ] ui: port images instead of colored triangles\n        - [ ] ui: piece images instead of colored polygons\n        - [x] ui: number images instead of text (or avoid contrast issues otherwise)\n        - [ ] ui+game+states+robber: steal dropdown has \u201cnil\u201d option always, for in case it goes on a person with no cards and no steal happens. Name it something obvious, don\u2019t use an empty string.\n        \n        ### Attribution\n        \n        Codebase originally forked from [fruitnuke/catan](https://github.com/fruitnuke/catan), a catan board generator\n        \n        ### License\n        \n        GPLv3\n        \nPlatform: UNKNOWN\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/rosshamish/catan-spectator/tarball/0.1.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rosshamish/catan-spectator/", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "catan-spectator", "package_url": "https://pypi.org/project/catan-spectator/", "platform": "", "project_url": "https://pypi.org/project/catan-spectator/", "project_urls": {"Download": "https://github.com/rosshamish/catan-spectator/tarball/0.1.4", "Homepage": "https://github.com/rosshamish/catan-spectator/"}, "release_url": "https://pypi.org/project/catan-spectator/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Transcribe games of Settlers of Catan for research purposes, replay purposes, broadcast purposes, etc.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            Description: catan-spectator<br>        ---------------<br>        <br>        A GUI for Mac and Windows for spectating and logging games of Settlers of Catan.<br>        <br>        Other projects can read game logs and do useful things, i.e.<br>        <br>        * semi-automated tournaments: draws, matchups, stats, tiebreakers computed from game logs.<br>        * machine learning: game outcome prediction, AI development<br>        <br>        Todos are listed below.<br>        <br>        &gt; Author: Ross Anderson ([rosshamish](https://github.com/rosshamish))<br>        <br>        ### Demo<br>        ![Demo](/doc/gifs/v0.1.3-demo.mov.gif)<br>        <br>        ### Usage<br>        <br>        See http://rosshamish.github.io/catan-spectator<br>        <br>        ### Development<br>        <br>        Clone, install dependencies:<br>        ```<br>        $ git clone https://github.com/rosshamish/catan-spectator<br>        $ cd catan-spectator<br>        $ pip3 install -r requirements.txt<br>        ```<br>        <br>        Basic usage:<br>        ```<br>        $ python3 main.py<br>        ```<br>        <br>        Full list of options:<br>        ```<br>        $ python3 main.py --help<br>        usage: main.py [-h] [--board BOARD] [--terrain TERRAIN] [--numbers NUMBERS]<br>                       [--ports PORTS] [--pieces PIECES] [--players PLAYERS]<br>                       [--pregame PREGAME]  [--use_stdout]<br>        <br>        log a game of catan<br>        <br>        optional arguments:<br>          -h, --help         show this help message and exit<br>          --board BOARD      string with space-separated short-codes for terrain and<br>                             numbers, e.g. 'w w h b s o w w b ... 2 None 9 3 4 6 ...'<br>          --terrain TERRAIN  random|preset|empty|debug, default random<br>          --numbers NUMBERS  random|preset|empty|debug, default preset<br>          --ports PORTS      random|preset|empty|debug, default preset<br>          --pieces PIECES    random|preset|empty|debug, default preset<br>          --players PLAYERS  random|preset|empty|debug, default preset<br>          --pregame PREGAME  on|off, default oncatan-spectator<br>          --use_stdout       write to stdout<br>        ```<br>        <br>        Make targets:<br>        ```<br>        - `make relaunch`: launch (or relaunch) the GUI<br>        - `make logs`: cat the python logs<br>        - `make tail`: tail the python logs<br>        - `make`: alias for relaunch &amp;&amp; tailFor a particular board layout:<br>        ```<br>        <br>        ### File Format<br>        <br>        &lt;!-- remember to update this section in sync with \"File Format\" in github.com/rosshamish/catan-py/README.md --&gt;<br>        <br>        catan-spectator writes game logs in the `.catan` format described by package [`catanlog`](https://github.com/rosshamish/catanlog).<br>        <br>        They look like this:<br>        <br>        ```<br>        green rolls 6<br>        blue buys settlement, builds at (1 NW)<br>        orange buys city, builds at (1 SE)<br>        red plays monopoly on ore<br>        ```<br>        <br>        ### Todos<br>        <br>        Need to have<br>        - [ ] views documented<br>        - [x] piece placing should be cancellable (via undo)<br>        - [x] all actions should be undoable<br>        - [ ] ui+catanlog: save log file to custom location on End Game<br>        - [ ] ui: city-shaped polygon for cities<br>        - [ ] ui/ux improvements<br>        <br>        Nice to have<br>        - [ ] board: random number setup obeys red number rule<br>        - [ ] ui+board+hexgrid: during piece placement, use little red x\u2019s (at least in debug mode) on \u201ckilled spots\u201d<br>        - [ ] ui+game+player+states: dev cards, i.e. keep a count of how many dev cards a player has played and enable Play Dev Card buttons if num &gt; 0<br>        - [x] ui+game+port+hexgrid: port trading, disable buttons if the current player doesn\u2019t have the port. 4:1 is always enabled.<br>        - [x] ui+port+hexgrid: port trading, don't allow getting or giving more or less than defined by the port type (3:1, 2:1).<br>        - [ ] ui+port: port trading, don\u2019t allow n for 0 trades<br>        - [ ] ui: large indicator off what the current player is (and what the order is)<br>        - [x] ui: cancelling of roads/settlements/cities while placing<br>        - [ ] ui: images, colors in UI buttons (eg dice for roll, )<br>        - [attempted, might be worse] ui: tile images instead of colored hexagons<br>        - [ ] ui: port images instead of colored triangles<br>        - [ ] ui: piece images instead of colored polygons<br>        - [x] ui: number images instead of text (or avoid contrast issues otherwise)<br>        - [ ] ui+game+states+robber: steal dropdown has \u201cnil\u201d option always, for in case it goes on a person with no cards and no steal happens. Name it something obvious, don\u2019t use an empty string.<br>        <br>        ### Attribution<br>        <br>        Codebase originally forked from [fruitnuke/catan](https://github.com/fruitnuke/catan), a catan board generator<br>        <br>        ### License<br>        <br>        GPLv3<br>        <br>Platform: UNKNOWN<br>\n          </div>"}, "last_serial": 4060337, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "730a14e231f438c81439defd8855cb99", "sha256": "c140d84f35cbcd99a54c5229bebd460754f9fac6de08114dc779dac846bb6b1f"}, "downloads": -1, "filename": "catan-spectator-0.1.0.tar.gz", "has_sig": false, "md5_digest": "730a14e231f438c81439defd8855cb99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15409, "upload_time": "2016-02-27T01:27:43", "upload_time_iso_8601": "2016-02-27T01:27:43.291622Z", "url": "https://files.pythonhosted.org/packages/fa/62/4a7e5e32795db72eb8c13cd8503aac6d829edad5aa978976be976d3e2941/catan-spectator-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cd0f344b3bcb4df960738ae70903013d", "sha256": "706d0cc1fd6149991ca1609e725cf509b7bab49fa950dab4dc661f99f2fe5784"}, "downloads": -1, "filename": "catan-spectator-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cd0f344b3bcb4df960738ae70903013d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30015, "upload_time": "2016-02-27T01:29:27", "upload_time_iso_8601": "2016-02-27T01:29:27.409033Z", "url": "https://files.pythonhosted.org/packages/94/65/f47af553644872a864f34f5458dbb798c5bfc87606f22cf7e1c329fe24a0/catan-spectator-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "119d3af3936b841b9112edc26568b65a", "sha256": "61c1babd06d86d9c3261a06cc74ffd6db43fc580af62919851409e43d14bea0d"}, "downloads": -1, "filename": "catan-spectator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "119d3af3936b841b9112edc26568b65a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30937, "upload_time": "2016-02-27T01:32:17", "upload_time_iso_8601": "2016-02-27T01:32:17.961292Z", "url": "https://files.pythonhosted.org/packages/45/83/90163b2e4956663aa689c8c4521b6d3d7bb109c963261b736f67ab031c64/catan-spectator-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1d32bd31d34208be035e6659be064f80", "sha256": "28d92bd2de86201dfdf6d51d46f2ea9da3a34f0a6fba9ca301b37051f9b8d391"}, "downloads": -1, "filename": "catan-spectator-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1d32bd31d34208be035e6659be064f80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30943, "upload_time": "2016-02-27T01:48:55", "upload_time_iso_8601": "2016-02-27T01:48:55.817536Z", "url": "https://files.pythonhosted.org/packages/9a/6b/cd9438b16deb400d1975db871c09dce9d89315be382c30dbdba07b31a00b/catan-spectator-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ba5b5da783aa9afa50c152f85d020383", "sha256": "a43f362721606e7fa8481f8479d84778c854767c174c14621bc353b61d4e8b9a"}, "downloads": -1, "filename": "catan-spectator-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ba5b5da783aa9afa50c152f85d020383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30197, "upload_time": "2018-07-14T02:35:28", "upload_time_iso_8601": "2018-07-14T02:35:28.081427Z", "url": "https://files.pythonhosted.org/packages/95/4c/df199c935a1a81ee63554c33b6bc8478694612f40c4ffb36f92df68d84f6/catan-spectator-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba5b5da783aa9afa50c152f85d020383", "sha256": "a43f362721606e7fa8481f8479d84778c854767c174c14621bc353b61d4e8b9a"}, "downloads": -1, "filename": "catan-spectator-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ba5b5da783aa9afa50c152f85d020383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30197, "upload_time": "2018-07-14T02:35:28", "upload_time_iso_8601": "2018-07-14T02:35:28.081427Z", "url": "https://files.pythonhosted.org/packages/95/4c/df199c935a1a81ee63554c33b6bc8478694612f40c4ffb36f92df68d84f6/catan-spectator-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:17 2020"}