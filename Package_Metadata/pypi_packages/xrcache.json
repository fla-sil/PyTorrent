{"info": {"author": "Florian Knoop", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "WIP: xrcache | on-disk cache for numerical functions working with xarray\n===\n\n![python](https://img.shields.io/badge/python-3.5--3.8-lightgrey.svg?style=flat)\n[![pypi](https://img.shields.io/pypi/v/xrcache.svg?style=flat)](https://pypi.org/project/xrcache/)\n![license](https://img.shields.io/pypi/l/xrcache.svg?color=red&style=flat)\n[![code style](https://img.shields.io/badge/code%20style-black-202020.svg?style=flat)](https://github.com/ambv/black)\n\n## Disclaimer\n\nThis is work in progress, things change fast.\n\n## What is this?\n\n_xrcache_ provides on-disk caching for functions operating on `xarray.DataArray` or `xarray.Dataset`, see [xarray documentation](http://xarray.pydata.org/).\n\n## How does it work?\n\n_xrcache_ provides a decorator that turns a function into a cached function, which means it saves its result to the `cache` folder as `xarray.DataArray` or `xarray.Dataset` and _automatically_ re-uses this result if it receives the same input again.\n\n### Hash Philosophy\n\nEach `Dataset` is assigned a `hash` for identification. The initial hash for the data has to be provided by the user (see example below). All subsequent hashes are generated deterministically from the `hash_input`, i.e., the `hash` of the input data, and `hash_function`, a hash generated from the signature of the function that is called.\n\n## Who needs this?\n\nPeople who like to work with `xarray.DataArray` and `xarray.Dataset` and like to store intermediate results of their workflows locally, and speedup recalculation of intermediate steps.\n\n## Example\n\n```python\nimport xarray as xr\nimport xrcache as xc\n\n# create a generic named dataset and assign a hash to its `attrs`\nds = xr.Dataset({\"bar\": (\"x\", [1, 2, 3, 4]), \"x\": list(\"abcd\")})\nds.attrs.update({\"name\": \"dataset\"})  # <- name your data!\nds.attrs.update({xc.keys.hash: \"some_hash\"})  # <- important\n\n\n# define some function that works on the dataset, e.g.\ndef function(dataset: xr.Dataset) -> xr.Dataset:\n    \"\"\"add square of input\"\"\"\n    ds = dataset.copy()\n    result = dataset.bar ** 2\n    new_ds = ds.update({\"foo\": result})\n\n    return new_ds\n\n\n# make it a cached function with xrcache\n@xc.cached\ndef cached_function(dataset):\n    return function(dataset)\n```\n\nCheck out the notebooks in `/doc`.\n\n## Changelog\n\nv0.0.4: Allow `func(..., cache=False, hash='some_other_hash')` for more fine grained control. Add 3 digits of the hash to the cache file to avoid clashes.\n\nv0.0.3: Add array/dataset names to stored files, introduce `@stored`, simplify attached data, allow `@cached(verbose=True)`\n\nv0.0.2: include project description on pypi\n\nv0.0.1: initial commit\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/flokno/xrcache", "keywords": "xarray,cache,caching", "license": "ISC", "maintainer": "Florian Knoop", "maintainer_email": "", "name": "xrcache", "package_url": "https://pypi.org/project/xrcache/", "platform": "", "project_url": "https://pypi.org/project/xrcache/", "project_urls": {"Homepage": "https://github.com/flokno/xrcache", "Repository": "https://github.com/flokno/xrcache"}, "release_url": "https://pypi.org/project/xrcache/0.0.4/", "requires_dist": ["xarray (>=0.11.0)", "netCDF4 (>=1.0)"], "requires_python": ">=3.5,<4.0", "summary": "On-disk cache for functions operating on xarray.DataArrays and Datasets", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WIP: xrcache | on-disk cache for numerical functions working with xarray</h1>\n<p><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53c1c7999f7f61b8bbbafae2a6d4b2879fba8b3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352d2d332e382d6c69676874677265792e7376673f7374796c653d666c6174\">\n<a href=\"https://pypi.org/project/xrcache/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ebb56ecdbd7ef253f7aa8428c7e83d7159782d9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f787263616368652e7376673f7374796c653d666c6174\"></a>\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/908eb8f47ee03c5610e2f20beac97d1ca734e10c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f787263616368652e7376673f636f6c6f723d726564267374796c653d666c6174\">\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"code style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1320789a04e31dbea6c6fa492605613506380e50/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3230323032302e7376673f7374796c653d666c6174\"></a></p>\n<h2>Disclaimer</h2>\n<p>This is work in progress, things change fast.</p>\n<h2>What is this?</h2>\n<p><em>xrcache</em> provides on-disk caching for functions operating on <code>xarray.DataArray</code> or <code>xarray.Dataset</code>, see <a href=\"http://xarray.pydata.org/\" rel=\"nofollow\">xarray documentation</a>.</p>\n<h2>How does it work?</h2>\n<p><em>xrcache</em> provides a decorator that turns a function into a cached function, which means it saves its result to the <code>cache</code> folder as <code>xarray.DataArray</code> or <code>xarray.Dataset</code> and <em>automatically</em> re-uses this result if it receives the same input again.</p>\n<h3>Hash Philosophy</h3>\n<p>Each <code>Dataset</code> is assigned a <code>hash</code> for identification. The initial hash for the data has to be provided by the user (see example below). All subsequent hashes are generated deterministically from the <code>hash_input</code>, i.e., the <code>hash</code> of the input data, and <code>hash_function</code>, a hash generated from the signature of the function that is called.</p>\n<h2>Who needs this?</h2>\n<p>People who like to work with <code>xarray.DataArray</code> and <code>xarray.Dataset</code> and like to store intermediate results of their workflows locally, and speedup recalculation of intermediate steps.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xrcache</span> <span class=\"k\">as</span> <span class=\"nn\">xc</span>\n\n<span class=\"c1\"># create a generic named dataset and assign a hash to its `attrs`</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">({</span><span class=\"s2\">\"bar\"</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">\"x\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]),</span> <span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"s2\">\"abcd\"</span><span class=\"p\">)})</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dataset\"</span><span class=\"p\">})</span>  <span class=\"c1\"># &lt;- name your data!</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"n\">xc</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"o\">.</span><span class=\"n\">hash</span><span class=\"p\">:</span> <span class=\"s2\">\"some_hash\"</span><span class=\"p\">})</span>  <span class=\"c1\"># &lt;- important</span>\n\n\n<span class=\"c1\"># define some function that works on the dataset, e.g.</span>\n<span class=\"k\">def</span> <span class=\"nf\">function</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"add square of input\"\"\"</span>\n    <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">bar</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n    <span class=\"n\">new_ds</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"n\">result</span><span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">new_ds</span>\n\n\n<span class=\"c1\"># make it a cached function with xrcache</span>\n<span class=\"nd\">@xc</span><span class=\"o\">.</span><span class=\"n\">cached</span>\n<span class=\"k\">def</span> <span class=\"nf\">cached_function</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n</pre>\n<p>Check out the notebooks in <code>/doc</code>.</p>\n<h2>Changelog</h2>\n<p>v0.0.4: Allow <code>func(..., cache=False, hash='some_other_hash')</code> for more fine grained control. Add 3 digits of the hash to the cache file to avoid clashes.</p>\n<p>v0.0.3: Add array/dataset names to stored files, introduce <code>@stored</code>, simplify attached data, allow <code>@cached(verbose=True)</code></p>\n<p>v0.0.2: include project description on pypi</p>\n<p>v0.0.1: initial commit</p>\n\n          </div>"}, "last_serial": 6649941, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "28cb8701e420122776a86b15ff68311c", "sha256": "7e1f022389d4d548ccc693d3e7cf5938d0e215d27bfbe526fb6b9eb250f1f439"}, "downloads": -1, "filename": "xrcache-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "28cb8701e420122776a86b15ff68311c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 4705, "upload_time": "2020-02-17T09:51:26", "upload_time_iso_8601": "2020-02-17T09:51:26.606322Z", "url": "https://files.pythonhosted.org/packages/a3/08/033761d6d0b67dd153e852477358aa57d7f8eabdfb277163f9318f213277/xrcache-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee21bcc55bd4bca560f2aebc5ff48638", "sha256": "06bcde21f6982ef0e4569c973df23098b3b3843c0d6abfca78f77a032654d8d8"}, "downloads": -1, "filename": "xrcache-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ee21bcc55bd4bca560f2aebc5ff48638", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 4762, "upload_time": "2020-02-17T09:51:27", "upload_time_iso_8601": "2020-02-17T09:51:27.955459Z", "url": "https://files.pythonhosted.org/packages/b3/10/8eebce86d566f4f746552fb850a99cc54884e5fcadb009a318abbe8c6038/xrcache-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "20773f498b60ce5c1e9fd1f6f80b81e8", "sha256": "07ea9dc19ac861a239a776d0a787bf5df46538390d0892763d356f61fb090a83"}, "downloads": -1, "filename": "xrcache-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "20773f498b60ce5c1e9fd1f6f80b81e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 4926, "upload_time": "2020-02-17T23:35:21", "upload_time_iso_8601": "2020-02-17T23:35:21.300232Z", "url": "https://files.pythonhosted.org/packages/81/d1/90f1a31926ca371dc4958e467b731c2f5bfc815b46ea9cd077de65d34534/xrcache-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "007361500f8247c3bc887f8acce281d2", "sha256": "0b016368de12e39666e09682e5412c9ef6f1e1b1970d850262ffdf844743f097"}, "downloads": -1, "filename": "xrcache-0.0.4.tar.gz", "has_sig": false, "md5_digest": "007361500f8247c3bc887f8acce281d2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 5025, "upload_time": "2020-02-17T23:35:22", "upload_time_iso_8601": "2020-02-17T23:35:22.863681Z", "url": "https://files.pythonhosted.org/packages/a8/12/2756418a6e0cf0dc0288907b7f2b1f9c7a870b82805b54fc6ba35d5b42b1/xrcache-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20773f498b60ce5c1e9fd1f6f80b81e8", "sha256": "07ea9dc19ac861a239a776d0a787bf5df46538390d0892763d356f61fb090a83"}, "downloads": -1, "filename": "xrcache-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "20773f498b60ce5c1e9fd1f6f80b81e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 4926, "upload_time": "2020-02-17T23:35:21", "upload_time_iso_8601": "2020-02-17T23:35:21.300232Z", "url": "https://files.pythonhosted.org/packages/81/d1/90f1a31926ca371dc4958e467b731c2f5bfc815b46ea9cd077de65d34534/xrcache-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "007361500f8247c3bc887f8acce281d2", "sha256": "0b016368de12e39666e09682e5412c9ef6f1e1b1970d850262ffdf844743f097"}, "downloads": -1, "filename": "xrcache-0.0.4.tar.gz", "has_sig": false, "md5_digest": "007361500f8247c3bc887f8acce281d2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 5025, "upload_time": "2020-02-17T23:35:22", "upload_time_iso_8601": "2020-02-17T23:35:22.863681Z", "url": "https://files.pythonhosted.org/packages/a8/12/2756418a6e0cf0dc0288907b7f2b1f9c7a870b82805b54fc6ba35d5b42b1/xrcache-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:29 2020"}