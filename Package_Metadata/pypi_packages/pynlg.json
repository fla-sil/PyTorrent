{"info": {"author": "Jerry Nieuviarts", "author_email": "jerry@mapado.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Linguistic"], "description": "pynlg\n=====\n\n.. image:: https://travis-ci.org/mapado/pynlg.svg\n    :target: https://travis-ci.org/mapado/pynlg\n\n``pynlg`` is a pure python re-implementation of `SimpleNLG-EnFr <https://github.com/rali-udem/SimpleNLG-EnFr>`_, a java library enabling french and english `text surface realisation <https://en.wikipedia.org/wiki/Realization_%28linguistics%29>`_, based on `SimpleNLG <https://github.com/simplenlg/simplenlg>`_.\n\nFor more information about what SimpleNLG and SimpleNLG-EnFr, have a look at their documentation:\n\n- `SimpleNLG-EnFr <https://github.com/rali-udem/SimpleNLG-EnFr/blob/master/docs/SimpleNLG-EnFr_doc_francais.pdf>`_ (in french)\n- `SimpleNLG <https://github.com/simplenlg/simplenlg/wiki/Section-0-%E2%80%93-SimpleNLG-Tutorial>`_\n\n``pynlg`` supports Python2.7 and 3.5. Python 3.3 and 3.4 should work, but are untested.\n\nExamples\n--------\n\nDefinition of a nominal sentence, with a feminine noun\n******************************************************\n\n.. code-block:: python\n\n    from pynlg.lexicon.fr import FrenchLexicon\n    from pynlg.lexicon.feature.category import NOUN, ADJECTIVE, DETERMINER\n    from pynlg.lexicon.feature.gender import FEMININE\n    from pynlg import make_noun_phrase\n\n    lex = FrenchLexicon()\n    un = lex.first(u'un', category=DETERMINER)\n    maison = lex.first(u'maison', category=NOUN)\n    maison = maison.inflex(gender=FEMININE)\n    beau = lex.first(u'beau', category=ADJECTIVE)\n    perdu = lex.first(u'perdu', category=ADJECTIVE)\n    phrase = make_noun_phrase(lexicon=lex, specifier=un, noun=maison, modifiers=[beau, perdu])\n    syntaxically_realised_phrase = phrase.realise()\n    morphologically_realised_phrase = syntaxically_realised_phrase.realise_morphology()\n    morphologically_realised_phrase.components\n    [<StringElement {realisation=une, category=DETERMINER}>,\n    <StringElement {realisation=belle, category=ADJECTIVE}>,\n    <StringElement {realisation=maison, category=CANNED_TEXT}>,\n    <StringElement {realisation=perdue, category=ADJECTIVE}>]\n\nSupported languages\n--------------------\n\nFor now, the following languages are supported:\n\n- french (in process)\n- english (in process)\n\nHow can I contribute?\n---------------------\n\nFirst, clone the repository, and create a new local branch. Once the new feature is implemented (or the bug is fixed) and everything is **tested** properly, push your work and create a pull request.\n\nNote: you should run the tests beforehand, and make sure they pass:\n\n.. code-block:: bash\n\n    $ tox\n\n\nHow do I add support for a new language?\n----------------------------------------\n\nTODO\n\n\nLicense\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Mapado\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mapado/pynlg", "keywords": "text realisation,pynlg,simplenlg", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pynlg", "package_url": "https://pypi.org/project/pynlg/", "platform": "", "project_url": "https://pypi.org/project/pynlg/", "project_urls": {"Homepage": "http://github.com/mapado/pynlg"}, "release_url": "https://pypi.org/project/pynlg/0.1.1/", "requires_dist": ["six"], "requires_python": "", "summary": "Natural Language Generation in Python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            pynlg<br>=====<br><br>.. image:: https://travis-ci.org/mapado/pynlg.svg<br>    :target: https://travis-ci.org/mapado/pynlg<br><br>``pynlg`` is a pure python re-implementation of `SimpleNLG-EnFr &lt;https://github.com/rali-udem/SimpleNLG-EnFr&gt;`_, a java library enabling french and english `text surface realisation &lt;https://en.wikipedia.org/wiki/Realization_%28linguistics%29&gt;`_, based on `SimpleNLG &lt;https://github.com/simplenlg/simplenlg&gt;`_.<br><br>For more information about what SimpleNLG and SimpleNLG-EnFr, have a look at their documentation:<br><br>- `SimpleNLG-EnFr &lt;https://github.com/rali-udem/SimpleNLG-EnFr/blob/master/docs/SimpleNLG-EnFr_doc_francais.pdf&gt;`_ (in french)<br>- `SimpleNLG &lt;https://github.com/simplenlg/simplenlg/wiki/Section-0-%E2%80%93-SimpleNLG-Tutorial&gt;`_<br><br>``pynlg`` supports Python2.7 and 3.5. Python 3.3 and 3.4 should work, but are untested.<br><br>Examples<br>--------<br><br>Definition of a nominal sentence, with a feminine noun<br>******************************************************<br><br>.. code-block:: python<br><br>    from pynlg.lexicon.fr import FrenchLexicon<br>    from pynlg.lexicon.feature.category import NOUN, ADJECTIVE, DETERMINER<br>    from pynlg.lexicon.feature.gender import FEMININE<br>    from pynlg import make_noun_phrase<br><br>    lex = FrenchLexicon()<br>    un = lex.first(u'un', category=DETERMINER)<br>    maison = lex.first(u'maison', category=NOUN)<br>    maison = maison.inflex(gender=FEMININE)<br>    beau = lex.first(u'beau', category=ADJECTIVE)<br>    perdu = lex.first(u'perdu', category=ADJECTIVE)<br>    phrase = make_noun_phrase(lexicon=lex, specifier=un, noun=maison, modifiers=[beau, perdu])<br>    syntaxically_realised_phrase = phrase.realise()<br>    morphologically_realised_phrase = syntaxically_realised_phrase.realise_morphology()<br>    morphologically_realised_phrase.components<br>    [&lt;StringElement {realisation=une, category=DETERMINER}&gt;,<br>    &lt;StringElement {realisation=belle, category=ADJECTIVE}&gt;,<br>    &lt;StringElement {realisation=maison, category=CANNED_TEXT}&gt;,<br>    &lt;StringElement {realisation=perdue, category=ADJECTIVE}&gt;]<br><br>Supported languages<br>--------------------<br><br>For now, the following languages are supported:<br><br>- french (in process)<br>- english (in process)<br><br>How can I contribute?<br>---------------------<br><br>First, clone the repository, and create a new local branch. Once the new feature is implemented (or the bug is fixed) and everything is **tested** properly, push your work and create a pull request.<br><br>Note: you should run the tests beforehand, and make sure they pass:<br><br>.. code-block:: bash<br><br>    $ tox<br><br><br>How do I add support for a new language?<br>----------------------------------------<br><br>TODO<br><br><br>License<br>-------<br><br>The MIT License (MIT)<br><br>Copyright (c) 2015 Mapado<br><br>Permission is hereby granted, free of charge, to any person obtaining a copy<br>of this software and associated documentation files (the \"Software\"), to deal<br>in the Software without restriction, including without limitation the rights<br>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>copies of the Software, and to permit persons to whom the Software is<br>furnished to do so, subject to the following conditions:<br><br>The above copyright notice and this permission notice shall be included in<br>all copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN<br>THE SOFTWARE.<br><br><br>\n          </div>"}, "last_serial": 3563277, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0de4ce77d7acdc55fe6a255bd6abff5e", "sha256": "444968e80f0457af473288f5842b9073a0bbbd41ca1686385a4dd65b2301e25f"}, "downloads": -1, "filename": "pynlg-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0de4ce77d7acdc55fe6a255bd6abff5e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 66957, "upload_time": "2018-02-08T10:58:26", "upload_time_iso_8601": "2018-02-08T10:58:26.456610Z", "url": "https://files.pythonhosted.org/packages/a0/5b/f261ef9fda0366d631a11c482511daab9b2b38545cfafd192b05056e7c0c/pynlg-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ad54a2a4075414b27206bd33eb5ad78", "sha256": "d9237c293aa46d120dafeba02b5d5adc57371a489d545b7f077de5a360a45a14"}, "downloads": -1, "filename": "pynlg-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ad54a2a4075414b27206bd33eb5ad78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49195, "upload_time": "2018-02-08T10:58:28", "upload_time_iso_8601": "2018-02-08T10:58:28.056681Z", "url": "https://files.pythonhosted.org/packages/de/9b/38111392e7d3223d4ad6defe661a3d1afbbd85615efd0fd71f1e995dfece/pynlg-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0de4ce77d7acdc55fe6a255bd6abff5e", "sha256": "444968e80f0457af473288f5842b9073a0bbbd41ca1686385a4dd65b2301e25f"}, "downloads": -1, "filename": "pynlg-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0de4ce77d7acdc55fe6a255bd6abff5e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 66957, "upload_time": "2018-02-08T10:58:26", "upload_time_iso_8601": "2018-02-08T10:58:26.456610Z", "url": "https://files.pythonhosted.org/packages/a0/5b/f261ef9fda0366d631a11c482511daab9b2b38545cfafd192b05056e7c0c/pynlg-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ad54a2a4075414b27206bd33eb5ad78", "sha256": "d9237c293aa46d120dafeba02b5d5adc57371a489d545b7f077de5a360a45a14"}, "downloads": -1, "filename": "pynlg-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ad54a2a4075414b27206bd33eb5ad78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49195, "upload_time": "2018-02-08T10:58:28", "upload_time_iso_8601": "2018-02-08T10:58:28.056681Z", "url": "https://files.pythonhosted.org/packages/de/9b/38111392e7d3223d4ad6defe661a3d1afbbd85615efd0fd71f1e995dfece/pynlg-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:10 2020"}