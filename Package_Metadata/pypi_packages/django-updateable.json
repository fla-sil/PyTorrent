{"info": {"author": "Baldur \u00de\u00f3r Emilsson", "author_email": "baldur@baldur.biz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: JavaScript", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "django-updateable\n=================\n\ndjango-updateable adds template tags to automatically update parts of pages via AJAX.\n\nInstall\n-------\n\nYou can use pip to install:\n\n    pip install django-updateable\n\nConfigure\n---------\n\nAfter installing django-updateable you must change a few settings in your settings.py\n\n* Add ``updateable`` to INSTALLED_APPS\n* Add ``updateable.middleware.UpdateableMiddleware`` to MIDDLEWARE_CLASSES\n* Be sure to use the ``django.core.context_processors.request`` in your TEMPLATE_CONTEXT_PROCESSORS\n\nUsage\n-----\n\nAdd updateable.js to the pages where you use updateable, e.g.\n``<script src=\"{% static \"updateable.js\" %}\"></script>``. Load the tags in your\ntemplate, ``{% load updateable %}``. Wrap the parts of you template you would\nlike to update automatically in ``{% updateable %}`` and\n``{% endupdateable %}`` tags.\n\nExample template\n----------------\n::\n\n  {% load staticfiles updateable %}\n  \n  <!doctype html>\n  <html>\n    <head>\n      <title>example</title>\n      <script src='{% static 'updateable.js' %}'></script>\n    </head>\n    <body>\n    <h1>Static header</h1>\n    {% updateable %}\n      The time is {% now 'H:i:s' %}\n    {% endupdateable %}\n    </body>\n  </html>\n\nThe time will be updated with 3 second intervals.\n\nSupported platforms\n-------------------\n\ndjango-updateable has been tested with Django 1.3, 1.4 and 1.5 on Python 2.7\nand with Django 1.5 on Python 2.6.\n\nIt has been tested on the latest version of Chrome (26) and Firefox (20). It\nworks with IE8 and up. If you need support for earlier versions of Internet \nExplorer you can use `this JavaScript file`_ which depends on jQuery.\n\n.. _this JavaScript file: https://raw.github.com/baldurthoremilsson/django-updateable/master/compat/updateable-compat.js\n\nImplementation details\n----------------------\n\nThe content in a ``{% updateable %}`` template tag is wrapped in a ``<div>``\nelement that contains data attributes with a unique ID and an MD5 hash of the\ncontent. Every AJAX request contains the IDs and hashes of the updateable\nblocks on the page along with a GET variable that triggers the\nUpdateableMiddleware to return only the parts of the page that have been\nupdated (the MD5 sum is used to decide which parts contain content that has\nchanged).\n\nA new dictionary object is created on the request object (request._updateable)\nthat contains data for the UpdateableMiddleware and the UpdateableNode (in the\ntemplate). The name of this object can be configured in the settings.\n\nAdvanced settings\n-----------------\n\nOptional settings in settings.py:\n\n* UPDATEABLE_REQUEST_OBJECT\n  The name of the dictionary object that is created on the request object.\n  Defaults to ``'_updateable'``\n* UPDATEABLE_GET_VARIABLE\n  Configures the name of the GET variable that triggers UpdateableMiddleware\n  to intercept the response and return only the updated parts of the page.\n  See getVariable in the JavaScript settings.\n  Defaults to ``'update'``\n\nOptional template tag setting:\n\n* {% updateable [tagname] %}\n  The given tagname is used for the enclosing element around the contents\n  inside the updateable template tag.\n  Defaults to ``div``\n\nOptional JavaScript settings:\n\n* getVariable\n  The name of the GET variable that triggers the UpdateableMiddleware.\n  See UPDATEABLE_GET_VARIABLES\n  Defaults to ``'update'``\n* timeout\n  Milliseconds between AJAX calls.\n  Defaults to ``3000``\n* callback\n  A function that is called for each DOM object that is replaced. The context\n  of the function is the newly added DOM object.\n  Defaults to an empty function\n\nThe JavaScript settings are read from a global object (on the window object)\ncalled updateableSettings. Example::\n\n    <head>\n      <script>\n        updateableSettings = {\n          timeout: 5000,\n          callback: function() {\n            console.log(this);\n        };\n      </script>\n      <script src='{% static 'updateable.js' %}'></script>\n    </head>\n\nUsage with jQuery Mobile\n------------------------\n\ndjango-updateable began life in a project that used `jQuery Mobile`_. When the\ncontent is updated it is necessary to call ``trigger('create')`` on the new\nDOM element, so the following updateableSettings can be useful in those\ncircumstances::\n\n    updateableSettings = {\n      callback: function() {\n        $(this).trigger('create');\n      }\n    }\n\n.. _jQuery Mobile: http://jquerymobile.com/\n\nRelease history\n---------------\n\n0.2.1\n=====\nBugfix: IDs of updateable segments that started with numbers caused a bug in\nthe Javascript. Many thanks to edtanous_!\n\n.. _edtanous: https://github.com/edtanous\n\n0.2\n===\nBugfixes, and jQuery is no longer a dependency (except for old browsers).\n\n0.1\n===\nInitial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/baldurthoremilsson/django-updateable", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-updateable", "package_url": "https://pypi.org/project/django-updateable/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-updateable/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/baldurthoremilsson/django-updateable"}, "release_url": "https://pypi.org/project/django-updateable/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Automatic updates for portions of templates with {% updateable %} tag", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-updateable\">\n<h2>django-updateable</h2>\n<p>django-updateable adds template tags to automatically update parts of pages via AJAX.</p>\n<div id=\"install\">\n<h3>Install</h3>\n<p>You can use pip to install:</p>\n<blockquote>\npip install django-updateable</blockquote>\n</div>\n<div id=\"configure\">\n<h3>Configure</h3>\n<p>After installing django-updateable you must change a few settings in your settings.py</p>\n<ul>\n<li>Add <tt>updateable</tt> to INSTALLED_APPS</li>\n<li>Add <tt>updateable.middleware.UpdateableMiddleware</tt> to MIDDLEWARE_CLASSES</li>\n<li>Be sure to use the <tt>django.core.context_processors.request</tt> in your TEMPLATE_CONTEXT_PROCESSORS</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Add updateable.js to the pages where you use updateable, e.g.\n<tt>&lt;script <span class=\"pre\">src=\"{%</span> static \"updateable.js\" <span class=\"pre\">%}\"&gt;&lt;/script&gt;</span></tt>. Load the tags in your\ntemplate, <tt>{% load updateable %}</tt>. Wrap the parts of you template you would\nlike to update automatically in <tt>{% updateable %}</tt> and\n<tt>{% endupdateable %}</tt> tags.</p>\n</div>\n<div id=\"example-template\">\n<h3>Example template</h3>\n<pre>{% load staticfiles updateable %}\n\n&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;example&lt;/title&gt;\n    &lt;script src='{% static 'updateable.js' %}'&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n  &lt;h1&gt;Static header&lt;/h1&gt;\n  {% updateable %}\n    The time is {% now 'H:i:s' %}\n  {% endupdateable %}\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>The time will be updated with 3 second intervals.</p>\n</div>\n<div id=\"supported-platforms\">\n<h3>Supported platforms</h3>\n<p>django-updateable has been tested with Django 1.3, 1.4 and 1.5 on Python 2.7\nand with Django 1.5 on Python 2.6.</p>\n<p>It has been tested on the latest version of Chrome (26) and Firefox (20). It\nworks with IE8 and up. If you need support for earlier versions of Internet\nExplorer you can use <a href=\"https://raw.github.com/baldurthoremilsson/django-updateable/master/compat/updateable-compat.js\" rel=\"nofollow\">this JavaScript file</a> which depends on jQuery.</p>\n</div>\n<div id=\"implementation-details\">\n<h3>Implementation details</h3>\n<p>The content in a <tt>{% updateable %}</tt> template tag is wrapped in a <tt>&lt;div&gt;</tt>\nelement that contains data attributes with a unique ID and an MD5 hash of the\ncontent. Every AJAX request contains the IDs and hashes of the updateable\nblocks on the page along with a GET variable that triggers the\nUpdateableMiddleware to return only the parts of the page that have been\nupdated (the MD5 sum is used to decide which parts contain content that has\nchanged).</p>\n<p>A new dictionary object is created on the request object (request._updateable)\nthat contains data for the UpdateableMiddleware and the UpdateableNode (in the\ntemplate). The name of this object can be configured in the settings.</p>\n</div>\n<div id=\"advanced-settings\">\n<h3>Advanced settings</h3>\n<p>Optional settings in settings.py:</p>\n<ul>\n<li>UPDATEABLE_REQUEST_OBJECT\nThe name of the dictionary object that is created on the request object.\nDefaults to <tt>'_updateable'</tt></li>\n<li>UPDATEABLE_GET_VARIABLE\nConfigures the name of the GET variable that triggers UpdateableMiddleware\nto intercept the response and return only the updated parts of the page.\nSee getVariable in the JavaScript settings.\nDefaults to <tt>'update'</tt></li>\n</ul>\n<p>Optional template tag setting:</p>\n<ul>\n<li>{% updateable [tagname] %}\nThe given tagname is used for the enclosing element around the contents\ninside the updateable template tag.\nDefaults to <tt>div</tt></li>\n</ul>\n<p>Optional JavaScript settings:</p>\n<ul>\n<li>getVariable\nThe name of the GET variable that triggers the UpdateableMiddleware.\nSee UPDATEABLE_GET_VARIABLES\nDefaults to <tt>'update'</tt></li>\n<li>timeout\nMilliseconds between AJAX calls.\nDefaults to <tt>3000</tt></li>\n<li>callback\nA function that is called for each DOM object that is replaced. The context\nof the function is the newly added DOM object.\nDefaults to an empty function</li>\n</ul>\n<p>The JavaScript settings are read from a global object (on the window object)\ncalled updateableSettings. Example:</p>\n<pre>&lt;head&gt;\n  &lt;script&gt;\n    updateableSettings = {\n      timeout: 5000,\n      callback: function() {\n        console.log(this);\n    };\n  &lt;/script&gt;\n  &lt;script src='{% static 'updateable.js' %}'&gt;&lt;/script&gt;\n&lt;/head&gt;\n</pre>\n</div>\n<div id=\"usage-with-jquery-mobile\">\n<h3>Usage with jQuery Mobile</h3>\n<p>django-updateable began life in a project that used <a href=\"http://jquerymobile.com/\" rel=\"nofollow\">jQuery Mobile</a>. When the\ncontent is updated it is necessary to call <tt><span class=\"pre\">trigger('create')</span></tt> on the new\nDOM element, so the following updateableSettings can be useful in those\ncircumstances:</p>\n<pre>updateableSettings = {\n  callback: function() {\n    $(this).trigger('create');\n  }\n}\n</pre>\n</div>\n<div id=\"release-history\">\n<h3>Release history</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.2.1</h2>\n<p>Bugfix: IDs of updateable segments that started with numbers caused a bug in\nthe Javascript. Many thanks to <a href=\"https://github.com/edtanous\" rel=\"nofollow\">edtanous</a>!</p>\n</div>\n<div id=\"id2\">\n<h2>0.2</h2>\n<p>Bugfixes, and jQuery is no longer a dependency (except for old browsers).</p>\n</div>\n<div id=\"id3\">\n<h2>0.1</h2>\n<p>Initial release.</p>\n</div>\n\n          </div>"}, "last_serial": 4133922, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2672cb61042532c93f9bbb0d3567dd3d", "sha256": "25f06ae9807dbf3b9c4ed177227736e1307473da985c75392bdf1432ac124d93"}, "downloads": -1, "filename": "django-updateable-0.1.tar.gz", "has_sig": false, "md5_digest": "2672cb61042532c93f9bbb0d3567dd3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38907, "upload_time": "2013-04-27T12:29:57", "upload_time_iso_8601": "2013-04-27T12:29:57.697020Z", "url": "https://files.pythonhosted.org/packages/7d/eb/75eaa7e57346ce337a4fe7bdea5286ad0a61959f62ab266fa3d1151b97f4/django-updateable-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5a9b8810e93df5ca816db5a6f9dbb150", "sha256": "4fd395b480003ea81cc3eabbbd0ecd3db6c13386ee7622dffdd54f08e0632fab"}, "downloads": -1, "filename": "django-updateable-0.2.tar.gz", "has_sig": false, "md5_digest": "5a9b8810e93df5ca816db5a6f9dbb150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5481, "upload_time": "2013-05-06T00:21:48", "upload_time_iso_8601": "2013-05-06T00:21:48.846982Z", "url": "https://files.pythonhosted.org/packages/69/45/ab4357f56d4cb3023f3e077181bf139bbbe93bc01dfd5a52c613f35618d6/django-updateable-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b37491b9ee120ade51af8314e7df35a7", "sha256": "a11709a880b371fdc2bc62654a9850c0fd547f81f1b6f538b6c7336c9bc58279"}, "downloads": -1, "filename": "django-updateable-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b37491b9ee120ade51af8314e7df35a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5368, "upload_time": "2014-07-07T23:58:44", "upload_time_iso_8601": "2014-07-07T23:58:44.673696Z", "url": "https://files.pythonhosted.org/packages/87/12/a1eb60c98a76910d7c54d8dec2233c2f69d39bac577df6a41c052e3c1306/django-updateable-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b37491b9ee120ade51af8314e7df35a7", "sha256": "a11709a880b371fdc2bc62654a9850c0fd547f81f1b6f538b6c7336c9bc58279"}, "downloads": -1, "filename": "django-updateable-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b37491b9ee120ade51af8314e7df35a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5368, "upload_time": "2014-07-07T23:58:44", "upload_time_iso_8601": "2014-07-07T23:58:44.673696Z", "url": "https://files.pythonhosted.org/packages/87/12/a1eb60c98a76910d7c54d8dec2233c2f69d39bac577df6a41c052e3c1306/django-updateable-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:13 2020"}