{"info": {"author": "Maciej Gawinecki", "author_email": "mgawinecki@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Human Machine Interfaces", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Text Processing", "Topic :: Text Processing :: General", "Topic :: Text Processing :: Linguistic"], "description": "Stempel Stemmer\n===============\n\n.. image:: https://badge.fury.io/py/pystempel.svg\n    :target: https://badge.fury.io/py/pystempel\n\nPython port of Stempel, an algorithmic stemmer for Polish language, originally written in Java.\n\nThe original stemmer has been implemented as part of `Egothor Project`_, taken virtually unchanged to\n`Stempel Stemmer Java library`_ by Andrzej Bia\u0142ecki and next included as part of `Apache Lucene`_,\na free and open-source search engine library. It is also used by `Elastic Search`_ search engine.\n\n.. _Egothor Project: https://www.egothor.org/product/egothor2/\n.. _Stempel Stemmer Java library: http://www.getopt.org/stempel/index.html\n.. _Apache Lucene: https://lucene.apache.org/core/3_1_0/api/contrib-stempel/index.html\n.. _Elastic Search: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-stempel.html\n\nThis package includes also high-quality stemming tables for Polish: original one pretrained by\nAndrzej Bia\u0142ecki on 20,000 training sets, and new one, pretrained on 259,080 training sets\nfrom Polimorf dictionary by me.\n\nThe port does not include code for compiling stemming tables.\n\n.. _sjp.pl: https://sjp.pl/slownik/en/\n\n\nHow to use\n----------\n\nInstall in your local environment:\n\n.. code:: console\n\n  pip install pystempel\n\nUse in your code:\n\n.. code:: python\n\n  >>> from stempel import StempelStemmer\n\nChoose original (called default) version of a stemmer:\n\n.. code:: python\n\n  >>> stemmer = StempelStemmer.default()\n\nor a version with new stemming table pretrained on training sets from Polimorf dictionary:\n\n.. code:: python\n\n >>> stemmer = StempelStemmer.polimorf()\n\nStem:\n\n.. code:: python\n\n  >>> for word in ['ksi\u0105\u017cka', 'ksi\u0105\u017cki', 'ksi\u0105\u017ckami', 'ksi\u0105\u017ckowa', 'ksi\u0105\u017ckowymi']:\n  ...   print(stemmer.stem(word))\n  ...\n  ksi\u0105\u017cek\n  ksi\u0105\u017cek\n  ksi\u0105\u017cek\n  ksi\u0105\u017ckowy\n  ksi\u0105\u017ckowy\n\n\nChoosing stemming table\n-----------------------\n\nPerformance between original (default) and new stemming table (Polimorf-based) varies significantly.\nThe stemmer for the default stemming table is *understemming*, i.e., for multiple forms of the\nsame lemma provides different stems more often (63%) than when using Polimorf-based stemming table\n(13%). However, the file footprint of the latter is bigger (2.2MB vs 0.3MB). Also loading takes\nlonger (7.5 seconds vs. 1.3 seconds), though this happens only once, when a stemmer is created. Also,\nfor original stemming table, the stemmer stems slightly faster: ~60000 vs ~51000 words per second.\nSee `Evaluation Jupyter Notebook`_ for the detailed evaluation results.\n\n.. _Evaluation Jupyter Notebook: http://htmlpreview.github.io/?https://github.com/dzieciou/pystempel/blob/master/Evaluation.html\n\nNote also, that the licensing schema of both stemming tables differs, and hence licensing of\ndata generated with each one. See \"Licensing\" section for the details.\n\n\n\nChoosing between port and wrapper\n---------------------------------\n\nIf you work on an NLP project in Python you can choose between Python port and Python wrapper.\nPython port is what pystempel tries to achieve: translation from Java implementation to Python.\nPython wrapper is what I used in `tests`_: Python functions to call the original Java implementation of\nstemmer. You can find more about wrappers and ports in `Stackoverflow comparision post`_. Here, I\ncompare both approaches to help you decide:\n\n* **Same accuracy**. I have verified Python port by comparing its output\n  with output of original Java implementation for 331224 words from Free Polish dictionary\n  (`sjp.pl`_) and for 100% of words it returns same output.\n* **Similar performance**. For mentioned dataset both stemmer versions achieved comparable performance.\n  Python port completed stemming in 4.4 seconds, while Python wrapper -- in 5 seconds (Intel Core\n  i5-6000 3.30 GHz, 16GB RAM, Windows 10, OpenJDK)\n* **Different setup**. Python wrapper requires additionally installation of Cython and pyjnius.\n  Python wrapper will make also `debugging harder`_ (switching between two programming languages).\n\n.. _Stackoverflow comparision post: https://stackoverflow.com/questions/10113218/how-to-decide-when-to-wrap-port-write-from-scratch\n.. _debugging harder: https://stackoverflow.com/questions/6970359/find-an-efficient-way-to-integrate-different-language-libraries-into-one-project\n.. _tests: tests/\n\nDevelopment setup\n-----------------\n\nTo setup environment for development you will need `Anaconda`_ installed.\n\n.. _Anaconda: https://anaconda.org/\n\n.. code:: console\n\n    conda env create --file environment.yml\n    conda activate pystempel-env\n\nTo run tests:\n\n.. code:: console\n\n    curl https://repo1.maven.org/maven2/org/apache/lucene/lucene-analyzers-stempel/8.1.1/lucene-analyzers-stempel-8.1.1.jar > stempel-8.1.1.jar\n    python -m pytest ./\n\nTo run benchmark:\n\n.. code:: console\n\n    set PYTHONPATH=%PYTHONPATH%;%cd%\n    python tests\\test_benchmark.py\n\nLicensing\n---------\n\n* **Code**: Most of the code is covered by `Egothor`_ Open Source License, an Apache-style license.\n  The rest of the code is covered by the `Apache License 2.0`_. This should be clear from a preamble\n  of each file.\n\n* **Data**:\n\n  * The original pretrained stemming table is covered by `Apache License 2.0`_.\n\n  * The new pretrained stemming table is covered by `2-Clause BSD License`_, similarly to the\n    `Polimorf dictionary` it has been derived from. The copyright owner of both the stemming table\n    and the dictionary is `Institute of Computer Science at Polish Academy of Science`_ (IPI PAN).\n\n  * Polish dictionary used by the unit tests comes from `sjp.pl`_  and is covered by\n    `Apache License 2.0`_ as well.\n\n.. _Egothor: https://www.egothor.org/product/egothor2/\n.. _Apache License 2.0: https://www.apache.org/licenses/LICENSE-2.0\n.. _Polimorf dictionary: dicts/\n.. _2-Clause BSD License: data/polimorf/LICENSE.txt\n.. _Institute of Computer Science at Polish Academy of Science: https://ipipan.waw.pl/en/\n\n\n\nAlternatives\n------------\n\n* `Estem`_ is Erlang wrapper (not port) for Stempel stemmer.\n* `pl_stemmer`_ is a Python stemmer based on Porter's Algorithm.\n* `polish-stem`_ is a Python stemmer using Finite State Transducers.\n\n\n.. _Estem: https://github.com/arcusfelis/estem\n.. _pl_stemmer: https://github.com/Tutanchamon/pl_stemmer\n.. _polish-stem: https://github.com/eugeniashurko/polish-stem\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dzieciou/pystempel", "keywords": "NLP,natural language processing,computational linguistics,stemming,linguistics,language,natural language,text analytics", "license": "See documentation", "maintainer": "", "maintainer_email": "", "name": "pystempel", "package_url": "https://pypi.org/project/pystempel/", "platform": "", "project_url": "https://pypi.org/project/pystempel/", "project_urls": {"Homepage": "https://github.com/dzieciou/pystempel", "Source": "https://github.com/dzieciou/pystempel"}, "release_url": "https://pypi.org/project/pystempel/1.1.0/", "requires_dist": ["sortedcontainers", "tqdm"], "requires_python": ">=3.5", "summary": "Polish stemmer.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/pystempel\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pystempel.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1df8e783159d4c92b644f0947eb90678c259ecc0/68747470733a2f2f62616467652e667572792e696f2f70792f70797374656d70656c2e737667\"></a>\n<p>Python port of Stempel, an algorithmic stemmer for Polish language, originally written in Java.</p>\n<p>The original stemmer has been implemented as part of <a href=\"https://www.egothor.org/product/egothor2/\" rel=\"nofollow\">Egothor Project</a>, taken virtually unchanged to\n<a href=\"http://www.getopt.org/stempel/index.html\" rel=\"nofollow\">Stempel Stemmer Java library</a> by Andrzej Bia\u0142ecki and next included as part of <a href=\"https://lucene.apache.org/core/3_1_0/api/contrib-stempel/index.html\" rel=\"nofollow\">Apache Lucene</a>,\na free and open-source search engine library. It is also used by <a href=\"https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-stempel.html\" rel=\"nofollow\">Elastic Search</a> search engine.</p>\n<p>This package includes also high-quality stemming tables for Polish: original one pretrained by\nAndrzej Bia\u0142ecki on 20,000 training sets, and new one, pretrained on 259,080 training sets\nfrom Polimorf dictionary by me.</p>\n<p>The port does not include code for compiling stemming tables.</p>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Install in your local environment:</p>\n<pre><span class=\"go\">pip install pystempel</span>\n</pre>\n<p>Use in your code:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">stempel</span> <span class=\"kn\">import</span> <span class=\"n\">StempelStemmer</span>\n</pre>\n<p>Choose original (called default) version of a stemmer:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stemmer</span> <span class=\"o\">=</span> <span class=\"n\">StempelStemmer</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">()</span>\n</pre>\n<p>or a version with new stemming table pretrained on training sets from Polimorf dictionary:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stemmer</span> <span class=\"o\">=</span> <span class=\"n\">StempelStemmer</span><span class=\"o\">.</span><span class=\"n\">polimorf</span><span class=\"p\">()</span>\n</pre>\n<p>Stem:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">'ksi\u0105\u017cka'</span><span class=\"p\">,</span> <span class=\"s1\">'ksi\u0105\u017cki'</span><span class=\"p\">,</span> <span class=\"s1\">'ksi\u0105\u017ckami'</span><span class=\"p\">,</span> <span class=\"s1\">'ksi\u0105\u017ckowa'</span><span class=\"p\">,</span> <span class=\"s1\">'ksi\u0105\u017ckowymi'</span><span class=\"p\">]:</span>\n<span class=\"o\">...</span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">stemmer</span><span class=\"o\">.</span><span class=\"n\">stem</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">))</span>\n<span class=\"o\">...</span>\n<span class=\"n\">ksi\u0105\u017cek</span>\n<span class=\"n\">ksi\u0105\u017cek</span>\n<span class=\"n\">ksi\u0105\u017cek</span>\n<span class=\"n\">ksi\u0105\u017ckowy</span>\n<span class=\"n\">ksi\u0105\u017ckowy</span>\n</pre>\n</div>\n<div id=\"choosing-stemming-table\">\n<h2>Choosing stemming table</h2>\n<p>Performance between original (default) and new stemming table (Polimorf-based) varies significantly.\nThe stemmer for the default stemming table is <em>understemming</em>, i.e., for multiple forms of the\nsame lemma provides different stems more often (63%) than when using Polimorf-based stemming table\n(13%). However, the file footprint of the latter is bigger (2.2MB vs 0.3MB). Also loading takes\nlonger (7.5 seconds vs. 1.3 seconds), though this happens only once, when a stemmer is created. Also,\nfor original stemming table, the stemmer stems slightly faster: ~60000 vs ~51000 words per second.\nSee <a href=\"http://htmlpreview.github.io/?https://github.com/dzieciou/pystempel/blob/master/Evaluation.html\" rel=\"nofollow\">Evaluation Jupyter Notebook</a> for the detailed evaluation results.</p>\n<p>Note also, that the licensing schema of both stemming tables differs, and hence licensing of\ndata generated with each one. See \u201cLicensing\u201d section for the details.</p>\n</div>\n<div id=\"choosing-between-port-and-wrapper\">\n<h2>Choosing between port and wrapper</h2>\n<p>If you work on an NLP project in Python you can choose between Python port and Python wrapper.\nPython port is what pystempel tries to achieve: translation from Java implementation to Python.\nPython wrapper is what I used in <a href=\"tests/\" rel=\"nofollow\">tests</a>: Python functions to call the original Java implementation of\nstemmer. You can find more about wrappers and ports in <a href=\"https://stackoverflow.com/questions/10113218/how-to-decide-when-to-wrap-port-write-from-scratch\" rel=\"nofollow\">Stackoverflow comparision post</a>. Here, I\ncompare both approaches to help you decide:</p>\n<ul>\n<li><strong>Same accuracy</strong>. I have verified Python port by comparing its output\nwith output of original Java implementation for 331224 words from Free Polish dictionary\n(<a href=\"https://sjp.pl/slownik/en/\" rel=\"nofollow\">sjp.pl</a>) and for 100% of words it returns same output.</li>\n<li><strong>Similar performance</strong>. For mentioned dataset both stemmer versions achieved comparable performance.\nPython port completed stemming in 4.4 seconds, while Python wrapper \u2013 in 5 seconds (Intel Core\ni5-6000 3.30 GHz, 16GB RAM, Windows 10, OpenJDK)</li>\n<li><strong>Different setup</strong>. Python wrapper requires additionally installation of Cython and pyjnius.\nPython wrapper will make also <a href=\"https://stackoverflow.com/questions/6970359/find-an-efficient-way-to-integrate-different-language-libraries-into-one-project\" rel=\"nofollow\">debugging harder</a> (switching between two programming languages).</li>\n</ul>\n</div>\n<div id=\"development-setup\">\n<h2>Development setup</h2>\n<p>To setup environment for development you will need <a href=\"https://anaconda.org/\" rel=\"nofollow\">Anaconda</a> installed.</p>\n<pre><span class=\"go\">conda env create --file environment.yml\nconda activate pystempel-env</span>\n</pre>\n<p>To run tests:</p>\n<pre><span class=\"go\">curl https://repo1.maven.org/maven2/org/apache/lucene/lucene-analyzers-stempel/8.1.1/lucene-analyzers-stempel-8.1.1.jar &gt; stempel-8.1.1.jar\npython -m pytest ./</span>\n</pre>\n<p>To run benchmark:</p>\n<pre><span class=\"go\">set PYTHONPATH=%PYTHONPATH%;%cd%\npython tests\\test_benchmark.py</span>\n</pre>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<ul>\n<li><strong>Code</strong>: Most of the code is covered by <a href=\"https://www.egothor.org/product/egothor2/\" rel=\"nofollow\">Egothor</a> Open Source License, an Apache-style license.\nThe rest of the code is covered by the <a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache License 2.0</a>. This should be clear from a preamble\nof each file.</li>\n<li><strong>Data</strong>:<ul>\n<li>The original pretrained stemming table is covered by <a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache License 2.0</a>.</li>\n<li>The new pretrained stemming table is covered by <a href=\"data/polimorf/LICENSE.txt\" rel=\"nofollow\">2-Clause BSD License</a>, similarly to the\n<cite>Polimorf dictionary</cite> it has been derived from. The copyright owner of both the stemming table\nand the dictionary is <a href=\"https://ipipan.waw.pl/en/\" rel=\"nofollow\">Institute of Computer Science at Polish Academy of Science</a> (IPI PAN).</li>\n<li>Polish dictionary used by the unit tests comes from <a href=\"https://sjp.pl/slownik/en/\" rel=\"nofollow\">sjp.pl</a>  and is covered by\n<a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache License 2.0</a> as well.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<ul>\n<li><a href=\"https://github.com/arcusfelis/estem\" rel=\"nofollow\">Estem</a> is Erlang wrapper (not port) for Stempel stemmer.</li>\n<li><a href=\"https://github.com/Tutanchamon/pl_stemmer\" rel=\"nofollow\">pl_stemmer</a> is a Python stemmer based on Porter\u2019s Algorithm.</li>\n<li><a href=\"https://github.com/eugeniashurko/polish-stem\" rel=\"nofollow\">polish-stem</a> is a Python stemmer using Finite State Transducers.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5976697, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "d6651cd0a228cc017d225420be85b71e", "sha256": "787199b74ef4e9353aa538c66f5237286d27eca2c111ae7e36b04c90f463b428"}, "downloads": -1, "filename": "pystempel-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d6651cd0a228cc017d225420be85b71e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 428933, "upload_time": "2019-07-23T16:31:10", "upload_time_iso_8601": "2019-07-23T16:31:10.097587Z", "url": "https://files.pythonhosted.org/packages/be/cd/fe9ab8760ff402b923841c5843f742052666508a5b84c4fc6a2e0b67dfdd/pystempel-1.0.1.tar.gz", "yanked": false}], "1.0.post1": [{"comment_text": "", "digests": {"md5": "833c7f26959a125d4a7a3489455e57fe", "sha256": "17f572d3b75459f7b5e2d007d1816e09e2493c137b8b94a9a196662c9936f7de"}, "downloads": -1, "filename": "pystempel-1.0.post1.tar.gz", "has_sig": false, "md5_digest": "833c7f26959a125d4a7a3489455e57fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 428953, "upload_time": "2019-07-23T16:27:48", "upload_time_iso_8601": "2019-07-23T16:27:48.330315Z", "url": "https://files.pythonhosted.org/packages/7a/e6/8595b6b2706e06e01be7540eb88ff59852a55571ac9290ff1a4ac807a552/pystempel-1.0.post1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a8882f56156266ec3b3dc8b6cdb5bff5", "sha256": "d5817b890b7221913bee5a3a73772d46bf994c5524b2d35be8a55428dfeabf89"}, "downloads": -1, "filename": "pystempel-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a8882f56156266ec3b3dc8b6cdb5bff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2715960, "upload_time": "2019-10-15T12:34:17", "upload_time_iso_8601": "2019-10-15T12:34:17.034666Z", "url": "https://files.pythonhosted.org/packages/0a/c5/292b9423cfd103e4a224ff76f81633cc19a476160eb077b27b4bb98cfd75/pystempel-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23c71686a6cf2c1ed4257fe509a9576", "sha256": "98b30e9f702647c6788361b266b2df46c72a2c9ab899a8412fb028fbcc2046fa"}, "downloads": -1, "filename": "pystempel-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e23c71686a6cf2c1ed4257fe509a9576", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14647, "upload_time": "2019-10-15T12:34:20", "upload_time_iso_8601": "2019-10-15T12:34:20.060824Z", "url": "https://files.pythonhosted.org/packages/cb/1a/ef339caef849b3c543211274d89fb218aee42c30b3c2e39eed0ddb330c44/pystempel-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8882f56156266ec3b3dc8b6cdb5bff5", "sha256": "d5817b890b7221913bee5a3a73772d46bf994c5524b2d35be8a55428dfeabf89"}, "downloads": -1, "filename": "pystempel-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a8882f56156266ec3b3dc8b6cdb5bff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2715960, "upload_time": "2019-10-15T12:34:17", "upload_time_iso_8601": "2019-10-15T12:34:17.034666Z", "url": "https://files.pythonhosted.org/packages/0a/c5/292b9423cfd103e4a224ff76f81633cc19a476160eb077b27b4bb98cfd75/pystempel-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23c71686a6cf2c1ed4257fe509a9576", "sha256": "98b30e9f702647c6788361b266b2df46c72a2c9ab899a8412fb028fbcc2046fa"}, "downloads": -1, "filename": "pystempel-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e23c71686a6cf2c1ed4257fe509a9576", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14647, "upload_time": "2019-10-15T12:34:20", "upload_time_iso_8601": "2019-10-15T12:34:20.060824Z", "url": "https://files.pythonhosted.org/packages/cb/1a/ef339caef849b3c543211274d89fb218aee42c30b3c2e39eed0ddb330c44/pystempel-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:59 2020"}