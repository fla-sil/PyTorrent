{"info": {"author": "Pieter Gijsbers", "author_email": "p.gijsbers@tue.nl", "bugtrack_url": null, "classifiers": [], "description": "# GAMA\n**G**enetic **A**utomated **M**achine learning **A**ssistant  \nAn automated machine learning tool based on genetic programming.  \nMake sure to check out the [documentation](https://pgijsbers.github.io/gama/).\n\n[![Build Status](https://travis-ci.org/PGijsbers/gama.svg?branch=master)](https://travis-ci.org/PGijsbers/gama)\n[![codecov](https://codecov.io/gh/PGijsbers/gama/branch/master/graph/badge.svg)](https://codecov.io/gh/PGijsbers/gama)\n[![DOI](http://joss.theoj.org/papers/10.21105/joss.01132/status.svg)](https://doi.org/10.21105/joss.01132)\n\n-----------------------------------------------------------------------------------------------------------------------\n\nGAMA is an AutoML package for end-users and AutoML researchers.\nIt generates optimized machine learning pipelines given specific input data and resource constraints.\nA machine learning pipeline contains data preprocessing (e.g. PCA, normalization) as well as a machine learning algorithm (e.g. Logistic Regression, Random Forests), with fine-tuned hyperparameter settings (e.g. number of trees in a Random Forest).\n\nTo find these pipelines, multiple search procedures have been implemented.\nGAMA can also combine multiple tuned machine learning pipelines together into an ensemble, which on average should help model performance.\nAt the moment, GAMA is restricted to classification and regression problems on tabular data.\n\nIn addition to its general use AutoML functionality, GAMA aims to serve AutoML researchers as well.\nDuring the optimization process, GAMA keeps an extensive log of progress made.\nUsing this log, insight can be obtained on the behaviour of the search procedure.\nFor example, it can produce a graph that shows pipeline fitness over time:\n![graph of fitness over time](https://github.com/PGijsbers/gama/blob/master/docs/source/technical_guide/images/viz.gif)\n\nFor more examples and information on the visualization, see [the technical guide](https://pgijsbers.github.io/gama/technical_guide/index.html#visualization).\n\n## Installing GAMA\n\nYou can install GAMA with pip: `pip install gama`\n\n## Minimal Example\nThe following example uses AutoML to find a machine learning pipeline that classifies breast cancer as malign or benign.\nSee the documentation for examples in \n[classification](https://pgijsbers.github.io/gama/user_guide/index.html#classification),\n[regression](https://pgijsbers.github.io/gama/user_guide/index.html#regression),\nusing [ARFF as input](https://pgijsbers.github.io/gama/user_guide/index.html#using-arff-files).\n```python\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import log_loss, accuracy_score\nfrom gama import GamaClassifier\n\nif __name__ == '__main__':\n    X, y = load_breast_cancer(return_X_y=True)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\n\n    automl = GamaClassifier(max_total_time=180, keep_analysis_log=None)\n    print(\"Starting `fit` which will take roughly 3 minutes.\")\n    automl.fit(X_train, y_train)\n\n    label_predictions = automl.predict(X_test)\n    probability_predictions = automl.predict_proba(X_test)\n\n    print('accuracy:', accuracy_score(y_test, label_predictions))\n    print('log loss:', log_loss(y_test, probability_predictions))\n    # the `score` function outputs the score on the metric optimized towards (by default, `log_loss`)\n    print('log_loss', automl.score(X_test, y_test))\n```\n*note*: By default, GamaClassifier optimizes towards `log_loss`.\n\n## Citing\nIf you want to cite GAMA, please use [our JOSS publication](http://joss.theoj.org/papers/10.21105/joss.01132).\n```latex\n@article{Gijsbers2019,\n  doi = {10.21105/joss.01132},\n  url = {https://doi.org/10.21105/joss.01132},\n  year  = {2019},\n  month = {jan},\n  publisher = {The Open Journal},\n  volume = {4},\n  number = {33},\n  pages = {1132},\n  author = {Pieter Gijsbers and Joaquin Vanschoren},\n  title = {{GAMA}: Genetic Automated Machine learning Assistant},\n  journal = {Journal of Open Source Software}\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PGijsbers/GAMA", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gama", "package_url": "https://pypi.org/project/gama/", "platform": "", "project_url": "https://pypi.org/project/gama/", "project_urls": {"Bug Tracker": "https://github.com/PGijsbers/gama/issues", "Documentation": "https://pgijsbers.github.io/gama/", "Homepage": "https://github.com/PGijsbers/GAMA", "Source Code": "https://github.com/PGijsbers/gama"}, "release_url": "https://pypi.org/project/gama/20.2.0/", "requires_dist": ["numpy (>=1.14.0)", "scipy (>=1.0.0)", "scikit-learn (>=0.20.0)", "stopit (>=1.1.1)", "liac-arff (>=2.2.2)", "category-encoders (>=1.2.8)", "black (==19.10b0)", "psutil", "pre-commit (==2.1.1) ; extra == 'all'", "pytest (>=4.4.0) ; extra == 'all'", "pytest-mock ; extra == 'all'", "pytest-xdist ; extra == 'all'", "codecov ; extra == 'all'", "pytest-cov ; extra == 'all'", "sphinx ; extra == 'all'", "sphinx-rtd-theme ; extra == 'all'", "dash (==1.3) ; extra == 'all'", "dash-daq (==0.1.0) ; extra == 'all'", "dash-bootstrap-components ; extra == 'all'", "visdcc ; extra == 'all'", "pre-commit (==2.1.1) ; extra == 'dev'", "pytest (>=4.4.0) ; extra == 'dev'", "pytest-mock ; extra == 'dev'", "pytest-xdist ; extra == 'dev'", "codecov ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "sphinx ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'", "dash (==1.3) ; extra == 'vis'", "dash-daq (==0.1.0) ; extra == 'vis'", "dash-bootstrap-components ; extra == 'vis'", "visdcc ; extra == 'vis'"], "requires_python": ">=3.6.0", "summary": "A package for automated machine learning based on scikit-learn.", "version": "20.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GAMA</h1>\n<p><strong>G</strong>enetic <strong>A</strong>utomated <strong>M</strong>achine learning <strong>A</strong>ssistant<br>\nAn automated machine learning tool based on genetic programming.<br>\nMake sure to check out the <a href=\"https://pgijsbers.github.io/gama/\" rel=\"nofollow\">documentation</a>.</p>\n<p><a href=\"https://travis-ci.org/PGijsbers/gama\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a0d7b7ac51b6c640c56f6675a3257a69bf2224b/68747470733a2f2f7472617669732d63692e6f72672f5047696a73626572732f67616d612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/PGijsbers/gama\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aac5857cb97c8177a5be132d13f7ede9addcd846/68747470733a2f2f636f6465636f762e696f2f67682f5047696a73626572732f67616d612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://doi.org/10.21105/joss.01132\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6634ed4fce8ce62d93a807725346274fb05d0f9/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30313133322f7374617475732e737667\"></a></p>\n<hr>\n<p>GAMA is an AutoML package for end-users and AutoML researchers.\nIt generates optimized machine learning pipelines given specific input data and resource constraints.\nA machine learning pipeline contains data preprocessing (e.g. PCA, normalization) as well as a machine learning algorithm (e.g. Logistic Regression, Random Forests), with fine-tuned hyperparameter settings (e.g. number of trees in a Random Forest).</p>\n<p>To find these pipelines, multiple search procedures have been implemented.\nGAMA can also combine multiple tuned machine learning pipelines together into an ensemble, which on average should help model performance.\nAt the moment, GAMA is restricted to classification and regression problems on tabular data.</p>\n<p>In addition to its general use AutoML functionality, GAMA aims to serve AutoML researchers as well.\nDuring the optimization process, GAMA keeps an extensive log of progress made.\nUsing this log, insight can be obtained on the behaviour of the search procedure.\nFor example, it can produce a graph that shows pipeline fitness over time:\n<img alt=\"graph of fitness over time\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd2e789af2e7ca32fa15e5c4e9eb6b4f381cd4b6/68747470733a2f2f6769746875622e636f6d2f5047696a73626572732f67616d612f626c6f622f6d61737465722f646f63732f736f757263652f746563686e6963616c5f67756964652f696d616765732f76697a2e676966\"></p>\n<p>For more examples and information on the visualization, see <a href=\"https://pgijsbers.github.io/gama/technical_guide/index.html#visualization\" rel=\"nofollow\">the technical guide</a>.</p>\n<h2>Installing GAMA</h2>\n<p>You can install GAMA with pip: <code>pip install gama</code></p>\n<h2>Minimal Example</h2>\n<p>The following example uses AutoML to find a machine learning pipeline that classifies breast cancer as malign or benign.\nSee the documentation for examples in\n<a href=\"https://pgijsbers.github.io/gama/user_guide/index.html#classification\" rel=\"nofollow\">classification</a>,\n<a href=\"https://pgijsbers.github.io/gama/user_guide/index.html#regression\" rel=\"nofollow\">regression</a>,\nusing <a href=\"https://pgijsbers.github.io/gama/user_guide/index.html#using-arff-files\" rel=\"nofollow\">ARFF as input</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_breast_cancer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">log_loss</span><span class=\"p\">,</span> <span class=\"n\">accuracy_score</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gama</span> <span class=\"kn\">import</span> <span class=\"n\">GamaClassifier</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_breast_cancer</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">stratify</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"n\">automl</span> <span class=\"o\">=</span> <span class=\"n\">GamaClassifier</span><span class=\"p\">(</span><span class=\"n\">max_total_time</span><span class=\"o\">=</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"n\">keep_analysis_log</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Starting `fit` which will take roughly 3 minutes.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">automl</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n\n    <span class=\"n\">label_predictions</span> <span class=\"o\">=</span> <span class=\"n\">automl</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n    <span class=\"n\">probability_predictions</span> <span class=\"o\">=</span> <span class=\"n\">automl</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'accuracy:'</span><span class=\"p\">,</span> <span class=\"n\">accuracy_score</span><span class=\"p\">(</span><span class=\"n\">y_test</span><span class=\"p\">,</span> <span class=\"n\">label_predictions</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'log loss:'</span><span class=\"p\">,</span> <span class=\"n\">log_loss</span><span class=\"p\">(</span><span class=\"n\">y_test</span><span class=\"p\">,</span> <span class=\"n\">probability_predictions</span><span class=\"p\">))</span>\n    <span class=\"c1\"># the `score` function outputs the score on the metric optimized towards (by default, `log_loss`)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'log_loss'</span><span class=\"p\">,</span> <span class=\"n\">automl</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">))</span>\n</pre>\n<p><em>note</em>: By default, GamaClassifier optimizes towards <code>log_loss</code>.</p>\n<h2>Citing</h2>\n<p>If you want to cite GAMA, please use <a href=\"http://joss.theoj.org/papers/10.21105/joss.01132\" rel=\"nofollow\">our JOSS publication</a>.</p>\n<pre>@article<span class=\"nb\">{</span>Gijsbers2019,\n  doi = <span class=\"nb\">{</span>10.21105/joss.01132<span class=\"nb\">}</span>,\n  url = <span class=\"nb\">{</span>https://doi.org/10.21105/joss.01132<span class=\"nb\">}</span>,\n  year  = <span class=\"nb\">{</span>2019<span class=\"nb\">}</span>,\n  month = <span class=\"nb\">{</span>jan<span class=\"nb\">}</span>,\n  publisher = <span class=\"nb\">{</span>The Open Journal<span class=\"nb\">}</span>,\n  volume = <span class=\"nb\">{</span>4<span class=\"nb\">}</span>,\n  number = <span class=\"nb\">{</span>33<span class=\"nb\">}</span>,\n  pages = <span class=\"nb\">{</span>1132<span class=\"nb\">}</span>,\n  author = <span class=\"nb\">{</span>Pieter Gijsbers and Joaquin Vanschoren<span class=\"nb\">}</span>,\n  title = <span class=\"nb\">{{</span>GAMA<span class=\"nb\">}</span>: Genetic Automated Machine learning Assistant<span class=\"nb\">}</span>,\n  journal = <span class=\"nb\">{</span>Journal of Open Source Software<span class=\"nb\">}</span>\n<span class=\"nb\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 7094058, "releases": {"19.11.0": [{"comment_text": "", "digests": {"md5": "cc8ee2b167bcc6341b2c8c676192752e", "sha256": "d8e60494e751e1e7c9e9c381df3a90b1ece5734d81b0bfcd31f3b426998dab2d"}, "downloads": -1, "filename": "gama-19.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cc8ee2b167bcc6341b2c8c676192752e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 76784, "upload_time": "2019-11-07T14:39:24", "upload_time_iso_8601": "2019-11-07T14:39:24.886357Z", "url": "https://files.pythonhosted.org/packages/05/12/7e2939d7a0693faf2371ef2cd0ab98c259ba0a9c7ebff68413f87fb8028b/gama-19.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05802c2afd1554d0952bae1ed63a89f5", "sha256": "79f64324539a095653c41f409e9b7800cd3396d7ebb669ae03373d65fbcefbbc"}, "downloads": -1, "filename": "gama-19.11.0.tar.gz", "has_sig": false, "md5_digest": "05802c2afd1554d0952bae1ed63a89f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 66299, "upload_time": "2019-11-07T14:39:26", "upload_time_iso_8601": "2019-11-07T14:39:26.584101Z", "url": "https://files.pythonhosted.org/packages/b8/2e/cae5088a1a32044c2d9d6fca3b964708c2afa667c40010f93d25c614fb97/gama-19.11.0.tar.gz", "yanked": false}], "19.11.1": [{"comment_text": "", "digests": {"md5": "4134700d49747cdd0f1f3e16d689715a", "sha256": "08d330b1f622d67f2bc703e18d53c48b5b6df2c8df60752b33ffee87214f2be8"}, "downloads": -1, "filename": "gama-19.11.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4134700d49747cdd0f1f3e16d689715a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 76784, "upload_time": "2019-11-07T14:51:39", "upload_time_iso_8601": "2019-11-07T14:51:39.082138Z", "url": "https://files.pythonhosted.org/packages/61/01/17625ec661fa47cd24491d8247a633a691c38691e785d04079fb6ffac656/gama-19.11.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d147804bf2080db0a950e0e2fb7ae299", "sha256": "653e82fabf1da724d288de60b435f3302e99a790152e7b89c52a2853e4311e8a"}, "downloads": -1, "filename": "gama-19.11.1.tar.gz", "has_sig": false, "md5_digest": "d147804bf2080db0a950e0e2fb7ae299", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 66281, "upload_time": "2019-11-07T14:51:40", "upload_time_iso_8601": "2019-11-07T14:51:40.372310Z", "url": "https://files.pythonhosted.org/packages/e8/ff/f97b18c9154efb99bd60b9353a31bdccedd0f9490008894e99af5a3e27ca/gama-19.11.1.tar.gz", "yanked": false}], "19.11.2": [{"comment_text": "", "digests": {"md5": "d87f0d5eab8dc7e90c6a85fba0026639", "sha256": "42e9f27084307ba27609bdd155f8dbd7cbc8f04686f7a3d5b4107c538849337d"}, "downloads": -1, "filename": "gama-19.11.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d87f0d5eab8dc7e90c6a85fba0026639", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 76937, "upload_time": "2019-11-07T16:23:33", "upload_time_iso_8601": "2019-11-07T16:23:33.323615Z", "url": "https://files.pythonhosted.org/packages/b5/08/d18c3564815ff5c84a14599c644a2eb23798fb23aeeac99fcc3725303222/gama-19.11.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b275458c62c281677ddbd7bd7dd2cef", "sha256": "e2c3baba9f6a211433ec150237937873df59a06f29d4716ce4b04838df295333"}, "downloads": -1, "filename": "gama-19.11.2.tar.gz", "has_sig": false, "md5_digest": "1b275458c62c281677ddbd7bd7dd2cef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 66415, "upload_time": "2019-11-07T16:23:35", "upload_time_iso_8601": "2019-11-07T16:23:35.773871Z", "url": "https://files.pythonhosted.org/packages/1d/80/36018d259f39a29bcee21388a2b78f888588e481c45498185d0bf138e904/gama-19.11.2.tar.gz", "yanked": false}], "19.8.0": [{"comment_text": "", "digests": {"md5": "83754fb37e27f7b10f95a6d0a4349055", "sha256": "b8873baf4e94176b7dd4bc25e2ba42f9a3f5a947362c4b6b8f5afa2de0e7b551"}, "downloads": -1, "filename": "gama-19.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "83754fb37e27f7b10f95a6d0a4349055", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 76447, "upload_time": "2019-09-17T14:14:50", "upload_time_iso_8601": "2019-09-17T14:14:50.163675Z", "url": "https://files.pythonhosted.org/packages/88/f9/a76eed0f50e170cdf877cb15c2bed2d526ab96e43ba24d818986b8fa46e5/gama-19.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4b3b859bf740b7920e398e55a94c17c", "sha256": "ffa781bfb5d0972fb949bb215b2cbee9524de0d72083b6e8ae361c411fa15fc1"}, "downloads": -1, "filename": "gama-19.8.0.tar.gz", "has_sig": false, "md5_digest": "f4b3b859bf740b7920e398e55a94c17c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 63181, "upload_time": "2019-09-17T14:14:53", "upload_time_iso_8601": "2019-09-17T14:14:53.997420Z", "url": "https://files.pythonhosted.org/packages/92/dd/4769d71049c221839b521273f20c98df94cc0a6b47b1050c66634eff4f26/gama-19.8.0.tar.gz", "yanked": false}], "20.0.0": [{"comment_text": "", "digests": {"md5": "e8630fc27b891b55b5c73388647cee7d", "sha256": "ee7b766b7bc4aa694c359c6d248f85e7885da0305f2e14c4a3d8c627c7dfb94b"}, "downloads": -1, "filename": "gama-20.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e8630fc27b891b55b5c73388647cee7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 96772, "upload_time": "2020-01-13T14:49:58", "upload_time_iso_8601": "2020-01-13T14:49:58.030794Z", "url": "https://files.pythonhosted.org/packages/8e/98/6f3f765dadbbaaa2aebb0165a0112e012c3adaffcb9a6556ad5f958a9f46/gama-20.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "546d9cce803d62e6332e1d9bf9fd1db8", "sha256": "ef91e71a26e1597bde3228c091bb5a86be02e7e2b65df283711e8f9b168c9e61"}, "downloads": -1, "filename": "gama-20.0.0.tar.gz", "has_sig": false, "md5_digest": "546d9cce803d62e6332e1d9bf9fd1db8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 70549, "upload_time": "2020-01-13T14:49:59", "upload_time_iso_8601": "2020-01-13T14:49:59.989047Z", "url": "https://files.pythonhosted.org/packages/6f/26/7c1ae92e160e3f5a165ac8cbce85075c4ee56b656d84ca669fd6c7173196/gama-20.0.0.tar.gz", "yanked": false}], "20.1.0": [{"comment_text": "", "digests": {"md5": "a943a94dc9d53e1ec90a804baae80191", "sha256": "d2c426501302fab95a370259217319640ad8840ab7cdcb64f09ace44775354ce"}, "downloads": -1, "filename": "gama-20.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a943a94dc9d53e1ec90a804baae80191", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 101267, "upload_time": "2020-02-21T10:46:33", "upload_time_iso_8601": "2020-02-21T10:46:33.238783Z", "url": "https://files.pythonhosted.org/packages/2e/ea/b7e5a9e82d1b5a55bf6f5e76a727f2b4856927e855701a1228cd916c71e9/gama-20.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00479466981ab1d6262b431a8e410a20", "sha256": "5515f1f6b27be867623cd35401d8e1686dbf23dc563bdcf5009f5749cb2f1212"}, "downloads": -1, "filename": "gama-20.1.0.tar.gz", "has_sig": false, "md5_digest": "00479466981ab1d6262b431a8e410a20", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 74329, "upload_time": "2020-02-21T10:46:34", "upload_time_iso_8601": "2020-02-21T10:46:34.671977Z", "url": "https://files.pythonhosted.org/packages/e1/56/78cb31a3934fffd781010987dc017b96887b35e0bee5344402b9374775fa/gama-20.1.0.tar.gz", "yanked": false}], "20.2.0": [{"comment_text": "", "digests": {"md5": "116e6d21c82b9e3959204efb4fd3be3e", "sha256": "7fcd92fdeb2f72e9357c6a4e6a813932734479997ce30b30a51a6775378dcd5f"}, "downloads": -1, "filename": "gama-20.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "116e6d21c82b9e3959204efb4fd3be3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 101553, "upload_time": "2020-04-24T16:00:06", "upload_time_iso_8601": "2020-04-24T16:00:06.172482Z", "url": "https://files.pythonhosted.org/packages/14/51/fa3471d91111f0023125ab85673c78e9028cf5b9e35db2532ec88735dea6/gama-20.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147a1066a117c38b75f677cc473ad916", "sha256": "94f34a902cc6fd3a021a7ab3a5b55582e7551a139cafc0f6220a553e5c8a46f8"}, "downloads": -1, "filename": "gama-20.2.0.tar.gz", "has_sig": false, "md5_digest": "147a1066a117c38b75f677cc473ad916", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 74756, "upload_time": "2020-04-24T16:00:07", "upload_time_iso_8601": "2020-04-24T16:00:07.519567Z", "url": "https://files.pythonhosted.org/packages/2a/fa/ee2ef23b072c0b2183c0d90c412726bf51ee65536ada0b7d4fecb77c9c26/gama-20.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "116e6d21c82b9e3959204efb4fd3be3e", "sha256": "7fcd92fdeb2f72e9357c6a4e6a813932734479997ce30b30a51a6775378dcd5f"}, "downloads": -1, "filename": "gama-20.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "116e6d21c82b9e3959204efb4fd3be3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 101553, "upload_time": "2020-04-24T16:00:06", "upload_time_iso_8601": "2020-04-24T16:00:06.172482Z", "url": "https://files.pythonhosted.org/packages/14/51/fa3471d91111f0023125ab85673c78e9028cf5b9e35db2532ec88735dea6/gama-20.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147a1066a117c38b75f677cc473ad916", "sha256": "94f34a902cc6fd3a021a7ab3a5b55582e7551a139cafc0f6220a553e5c8a46f8"}, "downloads": -1, "filename": "gama-20.2.0.tar.gz", "has_sig": false, "md5_digest": "147a1066a117c38b75f677cc473ad916", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 74756, "upload_time": "2020-04-24T16:00:07", "upload_time_iso_8601": "2020-04-24T16:00:07.519567Z", "url": "https://files.pythonhosted.org/packages/2a/fa/ee2ef23b072c0b2183c0d90c412726bf51ee65536ada0b7d4fecb77c9c26/gama-20.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:15 2020"}