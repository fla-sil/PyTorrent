{"info": {"author": "OpenCensus Authors", "author_email": "census-developers@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "OpenCensus Runtime Context\n============================================================================\n\n|pypi|\n\n.. |pypi| image:: https://badge.fury.io/py/opencensus-context.svg\n   :target: https://pypi.org/project/opencensus-context/\n\nThe **OpenCensus Runtime Context** provides in-process context propagation.\nBy default, ``thread local storage`` is used for Python 2.7, 3.4 and 3.5;\n``contextvars`` is used for Python >= 3.6, which provides ``asyncio`` support.\n\nInstallation\n------------\n\nThis library is installed by default with ``opencensus``, there is no need\nto install it explicitly.\n\nUsage\n-----\n\nIn most cases context propagation happens automatically within a process,\nfollowing the control flow of threads and asynchronous coroutines. The runtime\ncontext is a dictionary stored in a `context variable <https://docs.python.org/3/library/contextvars.html>`_\nwhen available, and in `thread local storage <https://docs.python.org/2/library/threading.html#threading.local>`_\notherwise.\n\nThere are cases where you may want to propagate the context explicitly:\n\nExplicit Thread Creation\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from threading import Thread\n    from opencensus.common.runtime_context import RuntimeContext\n\n    def work(name):\n        # here you will get the context from the parent thread\n        print(RuntimeContext)\n\n    thread = Thread(\n        # propagate context explicitly\n        target=RuntimeContext.with_current_context(work),\n        args=('foobar',),\n    )\n    thread.start()\n    thread.join()\n\nThread Pool\n~~~~~~~~~~~\n\n.. code:: python\n\n    from multiprocessing.dummy import Pool as ThreadPool\n    from opencensus.common.runtime_context import RuntimeContext\n\n    def work(name):\n        # here you will get the context from the parent thread\n        print(RuntimeContext)\n\n    pool = ThreadPool(2)\n    # propagate context explicitly\n    pool.map(RuntimeContext.with_current_context(work), [\n        'bear',\n        'cat',\n        'dog',\n        'horse',\n        'rabbit',\n    ])\n    pool.close()\n    pool.join()\n\nReferences\n----------\n\n* `Examples <https://github.com/census-instrumentation/opencensus-python/tree/master/context/opencensus-context/examples>`_\n* `OpenCensus Project <https://opencensus.io/>`_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/census-instrumentation/opencensus-python/tree/master/context/opencensus-context", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "opencensus-context", "package_url": "https://pypi.org/project/opencensus-context/", "platform": "", "project_url": "https://pypi.org/project/opencensus-context/", "project_urls": {"Homepage": "https://github.com/census-instrumentation/opencensus-python/tree/master/context/opencensus-context"}, "release_url": "https://pypi.org/project/opencensus-context/0.1.1/", "requires_dist": ["contextvars ; python_version >= \"3.6\" and python_version < \"3.7\""], "requires_python": "", "summary": "OpenCensus Runtime Context", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/opencensus-context/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2329238aced9caec81e5c0d3bb88bfdfbad7b65/68747470733a2f2f62616467652e667572792e696f2f70792f6f70656e63656e7375732d636f6e746578742e737667\"></a></p>\n<p>The <strong>OpenCensus Runtime Context</strong> provides in-process context propagation.\nBy default, <tt>thread local storage</tt> is used for Python 2.7, 3.4 and 3.5;\n<tt>contextvars</tt> is used for Python &gt;= 3.6, which provides <tt>asyncio</tt> support.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This library is installed by default with <tt>opencensus</tt>, there is no need\nto install it explicitly.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In most cases context propagation happens automatically within a process,\nfollowing the control flow of threads and asynchronous coroutines. The runtime\ncontext is a dictionary stored in a <a href=\"https://docs.python.org/3/library/contextvars.html\" rel=\"nofollow\">context variable</a>\nwhen available, and in <a href=\"https://docs.python.org/2/library/threading.html#threading.local\" rel=\"nofollow\">thread local storage</a>\notherwise.</p>\n<p>There are cases where you may want to propagate the context explicitly:</p>\n<div id=\"explicit-thread-creation\">\n<h3>Explicit Thread Creation</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">threading</span> <span class=\"kn\">import</span> <span class=\"n\">Thread</span>\n<span class=\"kn\">from</span> <span class=\"nn\">opencensus.common.runtime_context</span> <span class=\"kn\">import</span> <span class=\"n\">RuntimeContext</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">work</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"c1\"># here you will get the context from the parent thread</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">RuntimeContext</span><span class=\"p\">)</span>\n\n<span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"n\">Thread</span><span class=\"p\">(</span>\n    <span class=\"c1\"># propagate context explicitly</span>\n    <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">RuntimeContext</span><span class=\"o\">.</span><span class=\"n\">with_current_context</span><span class=\"p\">(</span><span class=\"n\">work</span><span class=\"p\">),</span>\n    <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'foobar'</span><span class=\"p\">,),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"thread-pool\">\n<h3>Thread Pool</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">multiprocessing.dummy</span> <span class=\"kn\">import</span> <span class=\"n\">Pool</span> <span class=\"k\">as</span> <span class=\"n\">ThreadPool</span>\n<span class=\"kn\">from</span> <span class=\"nn\">opencensus.common.runtime_context</span> <span class=\"kn\">import</span> <span class=\"n\">RuntimeContext</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">work</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"c1\"># here you will get the context from the parent thread</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">RuntimeContext</span><span class=\"p\">)</span>\n\n<span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">ThreadPool</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"c1\"># propagate context explicitly</span>\n<span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">RuntimeContext</span><span class=\"o\">.</span><span class=\"n\">with_current_context</span><span class=\"p\">(</span><span class=\"n\">work</span><span class=\"p\">),</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'bear'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'cat'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'dog'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'horse'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'rabbit'</span><span class=\"p\">,</span>\n<span class=\"p\">])</span>\n<span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"https://github.com/census-instrumentation/opencensus-python/tree/master/context/opencensus-context/examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"https://opencensus.io/\" rel=\"nofollow\">OpenCensus Project</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5640780, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a8f7bdc0990b20db6c71ecda1f5dd043", "sha256": "0d63a1da591b529371d4121819ffe0c191548236a24af3df5b502d3e6eb10447"}, "downloads": -1, "filename": "opencensus_context-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8f7bdc0990b20db6c71ecda1f5dd043", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3727, "upload_time": "2019-04-09T01:44:59", "upload_time_iso_8601": "2019-04-09T01:44:59.655547Z", "url": "https://files.pythonhosted.org/packages/67/71/ca8180acc6f43ec9b1ef91fe5b0dc30c8671d410d22d342179ba13a1b894/opencensus_context-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d9544c3095cfa936806c671f5a51c4c2", "sha256": "1a3fdf6bec537031efcc93d51b04f1edee5201f8c9a0c85681d63308b76f5702"}, "downloads": -1, "filename": "opencensus_context-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9544c3095cfa936806c671f5a51c4c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4430, "upload_time": "2019-06-01T04:02:19", "upload_time_iso_8601": "2019-06-01T04:02:19.401582Z", "url": "https://files.pythonhosted.org/packages/2b/b7/720d4507e97aa3916ac47054cd75490de6b6148c46d8c2c487638f16ad95/opencensus_context-0.1.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9544c3095cfa936806c671f5a51c4c2", "sha256": "1a3fdf6bec537031efcc93d51b04f1edee5201f8c9a0c85681d63308b76f5702"}, "downloads": -1, "filename": "opencensus_context-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9544c3095cfa936806c671f5a51c4c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4430, "upload_time": "2019-06-01T04:02:19", "upload_time_iso_8601": "2019-06-01T04:02:19.401582Z", "url": "https://files.pythonhosted.org/packages/2b/b7/720d4507e97aa3916ac47054cd75490de6b6148c46d8c2c487638f16ad95/opencensus_context-0.1.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:23 2020"}