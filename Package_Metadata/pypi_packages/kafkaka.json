{"info": {"author": "Du Wei", "author_email": "pandorid@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: Chinese (Simplified)", "Natural Language :: Chinese (Traditional)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "kafkaka\n===============\n\na Kafka client which using easy described protocol tool, also be able to be used with Gevent and tornado.\n\nWARNING: Under development, Now only support simple send method. Not support Python3.\n\nUSAGE\n-------------------------\n\nInstall using pypi::\n\n    pip install kafkaka\n\nInstall from source::\n\n    git clone https://github.com/wesdu/kafkaka.git\n    cd kafkaka\n    python setup.py install\n\nEXAMPLE\n-------------------------\n\nsimple block mode::\n\n    # coding: utf8\n    from kafkaka.client import KafkaClient\n    import time\n\n    if __name__ == \"__main__\":\n        c = KafkaClient(\"tx-storm1:9092\")\n        c.send_message('im-msg', 'hi', str(time.time()))\n        c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()))\n        print 'this will block'\n\nusing with Gevent::\n\n    # coding: utf8\n    from kafkaka.gevent_patch import KafkaClient\n    from gevent import spawn\n    from gevent import sleep\n    import time\n\n    if __name__ == \"__main__\":\n        c = KafkaClient(\"t-storm1:9092\", topic_names=['im-msg'])\n        print ''\n        for i in xrange(50):\n            c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n            c.send_message('im-msg', 'hi', str(time.time()), str(i))\n        print 'this will not block'\n        for i in xrange(50):\n            c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n            c.send_message('im-msg', 'hi', str(time.time()), str(i))\n            sleep(0.1)\n        print 'but this will block'\n        sleep(30)\n\nyou can set the number of max parallel connections by using pool_size param::\n\n    # coding: utf8\n    from kafkaka.gevent_patch import KafkaClient\n    from gevent import joinall\n\n    import time\n\n    if __name__ == \"__main__\":\n        c = KafkaClient(\"t-storm1:9092\",\n                        topic_names=['im-msg'],\n                        pool_size=10  # the number of max parallel connections.\n        )\n        start = time.time()\n        all = []\n        print ''\n        for i in xrange(50):\n            all.append(c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i)))\n            all.append(c.send_message('im-msg', 'hi', str(time.time()), str(i)))\n        print 'this will not block'\n        for i in xrange(50):\n            all.append(c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i)))\n            all.append(c.send_message('im-msg', 'hi', str(time.time()), str(i)))\n        joinall(all)\n        print 'but this will block'\n        print time.time() - start\n\nusing with tornado::\n\n    # coding: utf8\n    from kafkaka.tornado_patch import KafkaClient\n    import tornado.ioloop\n\n    import time\n\n    if __name__ == \"__main__\":\n        c = KafkaClient(\"t-storm1:9092\", topic_names=['im-msg'])\n        start = time.time()\n        print ''\n        for i in xrange(500):\n            c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n            c.send_message('im-msg', 'hi', str(time.time()), str(i))\n        for i in xrange(500):\n            c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n            c.send_message('im-msg', 'hi', str(time.time()), str(i))\n        print time.time() - start\n        print 'this will not block'\n        tornado.ioloop.IOLoop.instance().start()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wesdu/kafkaka", "keywords": "Kafka,gevent,tornado,client", "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "kafkaka", "package_url": "https://pypi.org/project/kafkaka/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kafkaka/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/wesdu/kafkaka"}, "release_url": "https://pypi.org/project/kafkaka/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "Kafka Client with smarter protocol described, support for Gevent and tornado", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>a Kafka client which using easy described protocol tool, also be able to be used with Gevent and tornado.</p>\n<p>WARNING: Under development, Now only support simple send method. Not support Python3.</p>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<p>Install using pypi:</p>\n<pre>pip install kafkaka\n</pre>\n<p>Install from source:</p>\n<pre>git clone https://github.com/wesdu/kafkaka.git\ncd kafkaka\npython setup.py install\n</pre>\n</div>\n<div id=\"example\">\n<h2>EXAMPLE</h2>\n<p>simple block mode:</p>\n<pre># coding: utf8\nfrom kafkaka.client import KafkaClient\nimport time\n\nif __name__ == \"__main__\":\n    c = KafkaClient(\"tx-storm1:9092\")\n    c.send_message('im-msg', 'hi', str(time.time()))\n    c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()))\n    print 'this will block'\n</pre>\n<p>using with Gevent:</p>\n<pre># coding: utf8\nfrom kafkaka.gevent_patch import KafkaClient\nfrom gevent import spawn\nfrom gevent import sleep\nimport time\n\nif __name__ == \"__main__\":\n    c = KafkaClient(\"t-storm1:9092\", topic_names=['im-msg'])\n    print ''\n    for i in xrange(50):\n        c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n        c.send_message('im-msg', 'hi', str(time.time()), str(i))\n    print 'this will not block'\n    for i in xrange(50):\n        c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n        c.send_message('im-msg', 'hi', str(time.time()), str(i))\n        sleep(0.1)\n    print 'but this will block'\n    sleep(30)\n</pre>\n<p>you can set the number of max parallel connections by using pool_size param:</p>\n<pre># coding: utf8\nfrom kafkaka.gevent_patch import KafkaClient\nfrom gevent import joinall\n\nimport time\n\nif __name__ == \"__main__\":\n    c = KafkaClient(\"t-storm1:9092\",\n                    topic_names=['im-msg'],\n                    pool_size=10  # the number of max parallel connections.\n    )\n    start = time.time()\n    all = []\n    print ''\n    for i in xrange(50):\n        all.append(c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i)))\n        all.append(c.send_message('im-msg', 'hi', str(time.time()), str(i)))\n    print 'this will not block'\n    for i in xrange(50):\n        all.append(c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i)))\n        all.append(c.send_message('im-msg', 'hi', str(time.time()), str(i)))\n    joinall(all)\n    print 'but this will block'\n    print time.time() - start\n</pre>\n<p>using with tornado:</p>\n<pre># coding: utf8\nfrom kafkaka.tornado_patch import KafkaClient\nimport tornado.ioloop\n\nimport time\n\nif __name__ == \"__main__\":\n    c = KafkaClient(\"t-storm1:9092\", topic_names=['im-msg'])\n    start = time.time()\n    print ''\n    for i in xrange(500):\n        c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n        c.send_message('im-msg', 'hi', str(time.time()), str(i))\n    for i in xrange(500):\n        c.send_message('im-msg', u'\u4f60\u597d'.encode('utf8'), str(time.time()), str(i))\n        c.send_message('im-msg', 'hi', str(time.time()), str(i))\n    print time.time() - start\n    print 'this will not block'\n    tornado.ioloop.IOLoop.instance().start()\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2638082, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c4e02f025aaa62d879bea0b09a9d0651", "sha256": "01daf3d2683d03e1db7ca5412257d01673d1b360e4ceb1e6a1355e7dc33b51cb"}, "downloads": -1, "filename": "kafkaka-0.1.tar.gz", "has_sig": false, "md5_digest": "c4e02f025aaa62d879bea0b09a9d0651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23458, "upload_time": "2014-12-23T08:05:47", "upload_time_iso_8601": "2014-12-23T08:05:47.113917Z", "url": "https://files.pythonhosted.org/packages/1b/e9/b85f8e8377fb4637196849f6be080bc976e114f087b922fcd0bd91c85326/kafkaka-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "54de1de7ef139cb0b9c5f99deee94cb1", "sha256": "08b90867ee88372ba6ecf53f37af81c3a35280db5a30e912e0d7ce6abe09f3b7"}, "downloads": -1, "filename": "kafkaka-0.2.tar.gz", "has_sig": false, "md5_digest": "54de1de7ef139cb0b9c5f99deee94cb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23154, "upload_time": "2014-12-23T08:25:14", "upload_time_iso_8601": "2014-12-23T08:25:14.740922Z", "url": "https://files.pythonhosted.org/packages/b6/a1/bff288cf4aafc36d82f5ba04676360824e9553fb9399ea3d1262489a17fa/kafkaka-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "14225a1ea4f6bf34b5aff6baea332f2e", "sha256": "0ea4c98c54e22a5696e72578c69ac595744801e21e34c01bbdb19b1a324b3d00"}, "downloads": -1, "filename": "kafkaka-0.2.1.tar.gz", "has_sig": false, "md5_digest": "14225a1ea4f6bf34b5aff6baea332f2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23524, "upload_time": "2014-12-23T08:33:04", "upload_time_iso_8601": "2014-12-23T08:33:04.335768Z", "url": "https://files.pythonhosted.org/packages/9e/cc/12f500493e493be4b1ca692aab9b13a937b7f012c3dd7b6a134e516e1671/kafkaka-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "89d38dd274770055c00d5ebdf7ac731a", "sha256": "f6c2baea6d649b2628d71029f2c9f639f98f39768f29a3cca4a161001d47950c"}, "downloads": -1, "filename": "kafkaka-0.2.2.tar.gz", "has_sig": false, "md5_digest": "89d38dd274770055c00d5ebdf7ac731a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23733, "upload_time": "2014-12-23T08:37:55", "upload_time_iso_8601": "2014-12-23T08:37:55.902104Z", "url": "https://files.pythonhosted.org/packages/11/e3/51ff501ae2a909015bae1ae5684638e40684b85350cfcb06b9d9c36046fa/kafkaka-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "83a7678d50a7a0fec79146217e993105", "sha256": "556ce5c48618dcfa84cc1355b5a876d5c84c230a465d5b73cebf5f46eef11606"}, "downloads": -1, "filename": "kafkaka-0.2.3.tar.gz", "has_sig": false, "md5_digest": "83a7678d50a7a0fec79146217e993105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23502, "upload_time": "2014-12-23T08:38:29", "upload_time_iso_8601": "2014-12-23T08:38:29.562731Z", "url": "https://files.pythonhosted.org/packages/bf/11/40bebf3466e66368519918bc6999872a326e0688ae903298ca7599a62669/kafkaka-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b89f0e61d073e980dabb600188197e63", "sha256": "393ba140e8d3707b14ed4a9b7d0a55f52fa19517e0facdfb934de173f1ed34bb"}, "downloads": -1, "filename": "kafkaka-0.2.4.tar.gz", "has_sig": false, "md5_digest": "b89f0e61d073e980dabb600188197e63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24334, "upload_time": "2014-12-24T02:46:35", "upload_time_iso_8601": "2014-12-24T02:46:35.290870Z", "url": "https://files.pythonhosted.org/packages/a6/71/fe4ebe3e7a6679a242149a5000d2e9304975527504d12c4c6c39521ac699/kafkaka-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "a80e5168b8029db73dd6be95d7d2071f", "sha256": "b6324d6050e4c2ba4e61dbd60f5cb0af041d752bf2b5acf9db24ccc087467740"}, "downloads": -1, "filename": "kafkaka-0.2.5.tar.gz", "has_sig": false, "md5_digest": "a80e5168b8029db73dd6be95d7d2071f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30146, "upload_time": "2014-12-25T14:37:32", "upload_time_iso_8601": "2014-12-25T14:37:32.333660Z", "url": "https://files.pythonhosted.org/packages/ba/d6/bfef81616006a9c10d2c7e50d2919c2fc4b11badc70b72da758df2af0aea/kafkaka-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "03b2b58b1f84bb0d3198f01d083f22ad", "sha256": "d268196338a5ecd406d8e98305eab4ba876bba11ec8334250afb02ef780419db"}, "downloads": -1, "filename": "kafkaka-0.2.6.tar.gz", "has_sig": false, "md5_digest": "03b2b58b1f84bb0d3198f01d083f22ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30139, "upload_time": "2015-01-09T07:11:01", "upload_time_iso_8601": "2015-01-09T07:11:01.218410Z", "url": "https://files.pythonhosted.org/packages/3d/d0/04b642b4390926f6b84b7c1ea4c43af5a1ed550a583d7efacb70257fb286/kafkaka-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "11164ef6446e27ed21b88e04ff3587a3", "sha256": "7d31808c40f11d21fda8a0108512f8fc311d6ff09754234b8e3ce74377b56ec2"}, "downloads": -1, "filename": "kafkaka-0.2.7.tar.gz", "has_sig": false, "md5_digest": "11164ef6446e27ed21b88e04ff3587a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30138, "upload_time": "2015-01-09T07:16:28", "upload_time_iso_8601": "2015-01-09T07:16:28.268377Z", "url": "https://files.pythonhosted.org/packages/28/6f/455708f0a7d2b57fb22b170d58f5836d8ce24a90ff3f15a42e63b13e1ea5/kafkaka-0.2.7.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "89fb519fe9eef0f1e9444b330f6cc5c5", "sha256": "94d5129ed29257f55833108da6c7196a9fd76e39b70c401b4abf2351ee82508e"}, "downloads": -1, "filename": "kafkaka-0.3.0.tar.gz", "has_sig": false, "md5_digest": "89fb519fe9eef0f1e9444b330f6cc5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30583, "upload_time": "2015-01-13T02:37:02", "upload_time_iso_8601": "2015-01-13T02:37:02.685091Z", "url": "https://files.pythonhosted.org/packages/05/b3/d405041f91e34778b315ca6332b20b5c84b69f7f7e13e776def0d6f75e89/kafkaka-0.3.0.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "916d9cdc440ee5ca2fc210f48765b93a", "sha256": "c2d80999117188c5bd9d5aaaa69d77b44e2338cbd4b044ae2cf7d05511e62061"}, "downloads": -1, "filename": "kafkaka-0.3.7.tar.gz", "has_sig": false, "md5_digest": "916d9cdc440ee5ca2fc210f48765b93a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30938, "upload_time": "2015-09-07T08:07:18", "upload_time_iso_8601": "2015-09-07T08:07:18.605656Z", "url": "https://files.pythonhosted.org/packages/d7/a4/bb78f4631470001f3f8c8086af1f129276086ff8a85f81ca42c79c0e849a/kafkaka-0.3.7.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e324a43511750dcbe3f73eb9ea9d6e4f", "sha256": "b30ac7d627661d92db6b0fc2b8dfab48dfcfc68ba424f5f1c4e5d6f72898b45f"}, "downloads": -1, "filename": "kafkaka-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e324a43511750dcbe3f73eb9ea9d6e4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34376, "upload_time": "2015-12-03T07:20:02", "upload_time_iso_8601": "2015-12-03T07:20:02.361923Z", "url": "https://files.pythonhosted.org/packages/eb/09/cde2d574168d53f345132ef31a42d455e38f04184712645bd0e173a93db3/kafkaka-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c12515befa6dc08fb6f3b1276ac3df9e", "sha256": "06a4cf0ba53178c89178499c33b6d254bd2473825ea0c4f2ee17d74eb34c9e8c"}, "downloads": -1, "filename": "kafkaka-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c12515befa6dc08fb6f3b1276ac3df9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34383, "upload_time": "2017-02-13T08:44:19", "upload_time_iso_8601": "2017-02-13T08:44:19.895372Z", "url": "https://files.pythonhosted.org/packages/ec/d9/e0f77cf99bfdc019fff3f4aeafc5567b2395f61d456e88f018d4f7a9ebee/kafkaka-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c12515befa6dc08fb6f3b1276ac3df9e", "sha256": "06a4cf0ba53178c89178499c33b6d254bd2473825ea0c4f2ee17d74eb34c9e8c"}, "downloads": -1, "filename": "kafkaka-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c12515befa6dc08fb6f3b1276ac3df9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34383, "upload_time": "2017-02-13T08:44:19", "upload_time_iso_8601": "2017-02-13T08:44:19.895372Z", "url": "https://files.pythonhosted.org/packages/ec/d9/e0f77cf99bfdc019fff3f4aeafc5567b2395f61d456e88f018d4f7a9ebee/kafkaka-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:51 2020"}