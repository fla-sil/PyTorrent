{"info": {"author": "ethan mak", "author_email": "wmmak8@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# TL:DR\nSimple wrapper for some of google api functions for python namely:\nGoogle Shared Drive and Google Email\n\n# How to use #\n\nExample to use the googledrivewrapper.py\n\n```python\nfrom googleapiwrapper.googledrivewrapper import GoogleSharedDrive\n\n# Load your service account credentials. Google to find out how to do it\nSERVICE_ACCOUNT_FILE = './credentials.json'\n\n# instantiate the Drive\nshared_drives = GoogleSharedDrive(SERVICE_ACCOUNT_FILE)\n\n# Find the ID for the folder name\nfolder_1_id = shared_drives.fetch_folder_id('<YOURPROJECTNAME>')\n\n# Create a new folder in previous folder\nnewFolder = shared_drives.create_new_folder(folder_1_id, '<new folder>')\n# Create another folder in new folder's folder\nsubfile = shared_drives.create_new_folder(newFolder['id'], 'new sub folder')\n\n# Upload a new file in new folder, will output the file meta data\nfile_metadata = shared_drives.upload_file(newFolder['id'], './<file you need>', 'new_file.xlsx')\n# Get the file ID\nfileID = file_metadata.get('id')\n\n# Search a file ID using file Name in a specific folder\n# You will need to provide the folder ID for this function\ninput_folder_id = \"<YOURFOLDERID>\"\nfile_name = \"test.xlsx\"\nfileID = shared_drives.search_fileID_in_folder_using_fileName(input_folder_id, file_name)\n\n# Download file from GoogleDrive\ninput_file_id = '<YOURFOLDERID>'\nshared_drives.download_file(input_file_id, './test.xlsx')\n```\n\n\nExample to use the googleemailwrapper.py\n\n```python\nfrom googleapiwrapper.googleemailwrapper import GoogleEmail\n\nSERVICE_ACCOUNT_FILE = \"./credentials.json\"\nEMAIL_FROM = \"<YOUREMAILADDRESS>\"\nEMAIL_TO = \"<OTHEREMAILADDRESS>\"\nEMAIL_SUBJECT = \"Hello, Test\"\nEMAIL_CONTENT = \"Testing. Thanks, it works\"\n\n# instantiate the Email\ngmail = GoogleEmail(SERVICE_ACCOUNT_FILE, EMAIL_FROM)\n\n# Create the email contents\nmessage = gmail.create_message(EMAIL_TO, EMAIL_SUBJECT, EMAIL_CONTENT, ['test.csv'])\n\n# Send email\nsent = gmail.send_message()\n\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wmmak12/googleapiwrapper", "keywords": "google,api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "googleapiwrapper", "package_url": "https://pypi.org/project/googleapiwrapper/", "platform": "", "project_url": "https://pypi.org/project/googleapiwrapper/", "project_urls": {"Homepage": "https://github.com/wmmak12/googleapiwrapper", "Repository": "https://github.com/wmmak12/googleapiwrapper"}, "release_url": "https://pypi.org/project/googleapiwrapper/0.2.0/", "requires_dist": ["google-api-python-client (>=1.8.0,<2.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "A simple wrapper for GoogleApi ", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TL:DR</h1>\n<p>Simple wrapper for some of google api functions for python namely:\nGoogle Shared Drive and Google Email</p>\n<h1>How to use</h1>\n<p>Example to use the googledrivewrapper.py</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">googleapiwrapper.googledrivewrapper</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleSharedDrive</span>\n\n<span class=\"c1\"># Load your service account credentials. Google to find out how to do it</span>\n<span class=\"n\">SERVICE_ACCOUNT_FILE</span> <span class=\"o\">=</span> <span class=\"s1\">'./credentials.json'</span>\n\n<span class=\"c1\"># instantiate the Drive</span>\n<span class=\"n\">shared_drives</span> <span class=\"o\">=</span> <span class=\"n\">GoogleSharedDrive</span><span class=\"p\">(</span><span class=\"n\">SERVICE_ACCOUNT_FILE</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Find the ID for the folder name</span>\n<span class=\"n\">folder_1_id</span> <span class=\"o\">=</span> <span class=\"n\">shared_drives</span><span class=\"o\">.</span><span class=\"n\">fetch_folder_id</span><span class=\"p\">(</span><span class=\"s1\">'&lt;YOURPROJECTNAME&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a new folder in previous folder</span>\n<span class=\"n\">newFolder</span> <span class=\"o\">=</span> <span class=\"n\">shared_drives</span><span class=\"o\">.</span><span class=\"n\">create_new_folder</span><span class=\"p\">(</span><span class=\"n\">folder_1_id</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;new folder&gt;'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create another folder in new folder's folder</span>\n<span class=\"n\">subfile</span> <span class=\"o\">=</span> <span class=\"n\">shared_drives</span><span class=\"o\">.</span><span class=\"n\">create_new_folder</span><span class=\"p\">(</span><span class=\"n\">newFolder</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span> <span class=\"s1\">'new sub folder'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Upload a new file in new folder, will output the file meta data</span>\n<span class=\"n\">file_metadata</span> <span class=\"o\">=</span> <span class=\"n\">shared_drives</span><span class=\"o\">.</span><span class=\"n\">upload_file</span><span class=\"p\">(</span><span class=\"n\">newFolder</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span> <span class=\"s1\">'./&lt;file you need&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'new_file.xlsx'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the file ID</span>\n<span class=\"n\">fileID</span> <span class=\"o\">=</span> <span class=\"n\">file_metadata</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Search a file ID using file Name in a specific folder</span>\n<span class=\"c1\"># You will need to provide the folder ID for this function</span>\n<span class=\"n\">input_folder_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;YOURFOLDERID&gt;\"</span>\n<span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"test.xlsx\"</span>\n<span class=\"n\">fileID</span> <span class=\"o\">=</span> <span class=\"n\">shared_drives</span><span class=\"o\">.</span><span class=\"n\">search_fileID_in_folder_using_fileName</span><span class=\"p\">(</span><span class=\"n\">input_folder_id</span><span class=\"p\">,</span> <span class=\"n\">file_name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Download file from GoogleDrive</span>\n<span class=\"n\">input_file_id</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;YOURFOLDERID&gt;'</span>\n<span class=\"n\">shared_drives</span><span class=\"o\">.</span><span class=\"n\">download_file</span><span class=\"p\">(</span><span class=\"n\">input_file_id</span><span class=\"p\">,</span> <span class=\"s1\">'./test.xlsx'</span><span class=\"p\">)</span>\n</pre>\n<p>Example to use the googleemailwrapper.py</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">googleapiwrapper.googleemailwrapper</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleEmail</span>\n\n<span class=\"n\">SERVICE_ACCOUNT_FILE</span> <span class=\"o\">=</span> <span class=\"s2\">\"./credentials.json\"</span>\n<span class=\"n\">EMAIL_FROM</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;YOUREMAILADDRESS&gt;\"</span>\n<span class=\"n\">EMAIL_TO</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;OTHEREMAILADDRESS&gt;\"</span>\n<span class=\"n\">EMAIL_SUBJECT</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hello, Test\"</span>\n<span class=\"n\">EMAIL_CONTENT</span> <span class=\"o\">=</span> <span class=\"s2\">\"Testing. Thanks, it works\"</span>\n\n<span class=\"c1\"># instantiate the Email</span>\n<span class=\"n\">gmail</span> <span class=\"o\">=</span> <span class=\"n\">GoogleEmail</span><span class=\"p\">(</span><span class=\"n\">SERVICE_ACCOUNT_FILE</span><span class=\"p\">,</span> <span class=\"n\">EMAIL_FROM</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create the email contents</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">create_message</span><span class=\"p\">(</span><span class=\"n\">EMAIL_TO</span><span class=\"p\">,</span> <span class=\"n\">EMAIL_SUBJECT</span><span class=\"p\">,</span> <span class=\"n\">EMAIL_CONTENT</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'test.csv'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Send email</span>\n<span class=\"n\">sent</span> <span class=\"o\">=</span> <span class=\"n\">gmail</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6832841, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7c2dd7835241f7f371b6690eda2e6ee7", "sha256": "84d17b548fbad5e5b889cfddcb66e0c042cf23882e6f6984d598f1638e1c3ac1"}, "downloads": -1, "filename": "googleapiwrapper-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c2dd7835241f7f371b6690eda2e6ee7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 4954, "upload_time": "2020-03-17T11:03:28", "upload_time_iso_8601": "2020-03-17T11:03:28.377325Z", "url": "https://files.pythonhosted.org/packages/56/60/12ba4235b5c43f9a1a1a5d4a2c84adf8ed01bf6ad736cfd59805e3ec7c62/googleapiwrapper-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59243207a892bf70ea2960dc14052ec7", "sha256": "9f1740f75747472e6402808d5236d52f747a71989366732866f876c96aba7164"}, "downloads": -1, "filename": "googleapiwrapper-0.1.0.tar.gz", "has_sig": false, "md5_digest": "59243207a892bf70ea2960dc14052ec7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4194, "upload_time": "2020-03-17T11:03:31", "upload_time_iso_8601": "2020-03-17T11:03:31.066298Z", "url": "https://files.pythonhosted.org/packages/75/e9/16eaebbb0fd3ddc9bd211c4bea00906ec5166a400d8d486a697de9f35f54/googleapiwrapper-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f54639307f0915188126e43ad93ca4fe", "sha256": "bcafbeb2535f84bd20b090e4a81f55ca038d043bb2c2f5bf517c5e556e53641e"}, "downloads": -1, "filename": "googleapiwrapper-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f54639307f0915188126e43ad93ca4fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5856, "upload_time": "2020-03-18T02:16:34", "upload_time_iso_8601": "2020-03-18T02:16:34.136380Z", "url": "https://files.pythonhosted.org/packages/43/fc/e1b7fd870852051f13b120aa296cfab7fe1c757c753d2e9cd2ea0a0a531c/googleapiwrapper-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa88d221de4e4c7ddcda0dbc72bba1e2", "sha256": "75a534203b5383a0288a2d9c543d0b2942390d86abe2a4b57f8ad69b8117b459"}, "downloads": -1, "filename": "googleapiwrapper-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fa88d221de4e4c7ddcda0dbc72bba1e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5398, "upload_time": "2020-03-18T02:16:35", "upload_time_iso_8601": "2020-03-18T02:16:35.816211Z", "url": "https://files.pythonhosted.org/packages/f7/26/22a6ee98d9e84bba11f4d461fa97d7c439e806e73ff04825a5c6f5115a2e/googleapiwrapper-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f54639307f0915188126e43ad93ca4fe", "sha256": "bcafbeb2535f84bd20b090e4a81f55ca038d043bb2c2f5bf517c5e556e53641e"}, "downloads": -1, "filename": "googleapiwrapper-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f54639307f0915188126e43ad93ca4fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5856, "upload_time": "2020-03-18T02:16:34", "upload_time_iso_8601": "2020-03-18T02:16:34.136380Z", "url": "https://files.pythonhosted.org/packages/43/fc/e1b7fd870852051f13b120aa296cfab7fe1c757c753d2e9cd2ea0a0a531c/googleapiwrapper-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa88d221de4e4c7ddcda0dbc72bba1e2", "sha256": "75a534203b5383a0288a2d9c543d0b2942390d86abe2a4b57f8ad69b8117b459"}, "downloads": -1, "filename": "googleapiwrapper-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fa88d221de4e4c7ddcda0dbc72bba1e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5398, "upload_time": "2020-03-18T02:16:35", "upload_time_iso_8601": "2020-03-18T02:16:35.816211Z", "url": "https://files.pythonhosted.org/packages/f7/26/22a6ee98d9e84bba11f4d461fa97d7c439e806e73ff04825a5c6f5115a2e/googleapiwrapper-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:47 2020"}