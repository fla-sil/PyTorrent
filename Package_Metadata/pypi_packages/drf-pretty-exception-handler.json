{"info": {"author": "Denis Ivlev", "author_email": "me@dierz.pro", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "Django Rest Framework pretty exception handler\n==============================================\n\n\n![https://pypi.python.org/pypi/drf_pretty_exception_handler](https://img.shields.io/pypi/v/drf_pretty_exception_handler.svg) ![https://travis-ci.com/ivlevdenis/drf_pretty_exception_handler](https://img.shields.io/travis/ivlevdenis/drf_pretty_exception_handler.svg) ![https://drf-pretty-exception-handler.readthedocs.io/en/latest/?badge=latest](https://readthedocs.org/projects/drf-pretty-exception-handler/badge/?version=latest) ![https://pyup.io/repos/github/ivlevdenis/drf_pretty_exception_handler/](https://pyup.io/repos/github/ivlevdenis/drf_pretty_exception_handler/shield.svg)\n\nDjango Rest Framework pretty exception handler\n\n**Dependencies**\n\n* Python 3.7+\n* Django 2.0+\n* Django Rest Framework 3.10+\n\n**Setup**\n\nYou can install the library directly from pypi using pip:\n\n`$ pip install drf-pretty-exception-handler`\n\nEdit your REST_FRAMEWORK settings in settings.py file:\n\n```python\n\nREST_FRAMEWORK = {\n    ...\n    'EXCEPTION_HANDLER': 'drf_pretty_exception_handler.exception_handler',\n    ...\n}\n\n```\n\nLicense\n-------\nFree software: MIT license\n\n\nFeatures\n--------\n\nDefault Django Rest Framework exception handler return errors in different formats.\n\n**Examples**:\nResponse on `raise exceptions.APIException`.\n```json\n{\n  \"detail\": \"A server error occurred.\"\n}\n```\nResponse on `raise exceptions.ValidationError`.\n```json\n[\n  \"Invalid input.\"\n]\n```\nResponse on `raise exceptions.ValidationError` if error in field serializator.\n```json\n{\n  \"email\": [\n    \"This field is required.\"\n  ]\n}\n```\nResponse on `raise exceptions.ValidationError` in serializator `.validate()` .\n```json\n{\n  \"non_field_errors\": [\n    \"Passwords does not match\"\n  ]\n}\n```\n\n\nThis greatly complicates error handling in the frontend. This package provide own format of errors.\n\n```json\n{\n  \"status_code\": 500,\n  \"errors\": {\n    \"non_field_errors\": [\n      \"A server error occurred.\"\n    ]\n  }\n}\n```\n\n```json\n{\n  \"status_code\": 400,\n  \"errors\": {\n    \"non_field_errors\": [\n      \"Invalid input.\"\n    ]\n  }\n}\n```\n```json\n{\n  \"status_code\": 400,\n  \"errors\": {\n    \"email\": [\n      \"This field is required.\"\n    ]\n  }\n}\n```\n```json\n{\n  \"status_code\": 400,\n  \"errors\": {\n    \"non_field_errors\": [\n      \"Passwords does not match\"\n    ]\n  }\n}\n```\n\nAnd this package handle default Python exceptions.\n```python\nl = [1, 2, 3, 4]\nl[10]\n```\n\n```json\n{\n  \"status_code\": 500,\n  \"errors\": {\n    \"non_field_errors\": [\n      \"IndexError: list index out of range\"\n    ]\n  }\n}\n```\n<!-- * TODO -->\n\nCredits\n-------\n\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage) project template.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ivlevdenis/drf_pretty_exception_handler", "keywords": "drf_pretty_exception_handler", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "drf-pretty-exception-handler", "package_url": "https://pypi.org/project/drf-pretty-exception-handler/", "platform": "", "project_url": "https://pypi.org/project/drf-pretty-exception-handler/", "project_urls": {"Homepage": "https://github.com/ivlevdenis/drf_pretty_exception_handler"}, "release_url": "https://pypi.org/project/drf-pretty-exception-handler/0.1.1/", "requires_dist": ["djangorestframework (>=3.10)"], "requires_python": ">=3.5", "summary": "Django Rest Framework pretty exception handler", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Rest Framework pretty exception handler</h1>\n<p><img alt=\"https://pypi.python.org/pypi/drf_pretty_exception_handler\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6794375338cd190694bc7e5742e4e041747fa8cf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6472665f7072657474795f657863657074696f6e5f68616e646c65722e737667\"> <img alt=\"https://travis-ci.com/ivlevdenis/drf_pretty_exception_handler\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f5eeda0755d688d6e412e3957e3c68835df901a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f69766c657664656e69732f6472665f7072657474795f657863657074696f6e5f68616e646c65722e737667\"> <img alt=\"https://drf-pretty-exception-handler.readthedocs.io/en/latest/?badge=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/899b26f482d1bc7a7fe11ba58045605659465a0a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6472662d7072657474792d657863657074696f6e2d68616e646c65722f62616467652f3f76657273696f6e3d6c6174657374\"> <img alt=\"https://pyup.io/repos/github/ivlevdenis/drf_pretty_exception_handler/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e1d3dcbb952215517ca3948839b1528e21b7cf2/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f69766c657664656e69732f6472665f7072657474795f657863657074696f6e5f68616e646c65722f736869656c642e737667\"></p>\n<p>Django Rest Framework pretty exception handler</p>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>Python 3.7+</li>\n<li>Django 2.0+</li>\n<li>Django Rest Framework 3.10+</li>\n</ul>\n<p><strong>Setup</strong></p>\n<p>You can install the library directly from pypi using pip:</p>\n<p><code>$ pip install drf-pretty-exception-handler</code></p>\n<p>Edit your REST_FRAMEWORK settings in settings.py file:</p>\n<pre><span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'EXCEPTION_HANDLER'</span><span class=\"p\">:</span> <span class=\"s1\">'drf_pretty_exception_handler.exception_handler'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>License</h2>\n<p>Free software: MIT license</p>\n<h2>Features</h2>\n<p>Default Django Rest Framework exception handler return errors in different formats.</p>\n<p><strong>Examples</strong>:\nResponse on <code>raise exceptions.APIException</code>.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"detail\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A server error occurred.\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Response on <code>raise exceptions.ValidationError</code>.</p>\n<pre><span class=\"p\">[</span>\n  <span class=\"s2\">\"Invalid input.\"</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Response on <code>raise exceptions.ValidationError</code> if error in field serializator.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"This field is required.\"</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Response on <code>raise exceptions.ValidationError</code> in serializator <code>.validate()</code> .</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"non_field_errors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Passwords does not match\"</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This greatly complicates error handling in the frontend. This package provide own format of errors.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"errors\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"non_field_errors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"A server error occurred.\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"errors\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"non_field_errors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"Invalid input.\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"errors\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"email\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"This field is required.\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"errors\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"non_field_errors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"Passwords does not match\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>And this package handle default Python exceptions.</p>\n<pre><span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">l</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n</pre>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"errors\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"non_field_errors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"IndexError: list index out of range\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n\n<h2>Credits</h2>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n\n          </div>"}, "last_serial": 6709433, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0af70bedf30ca1e41d2b4be167decd64", "sha256": "50860b7beb2b6d7f8a8e6d4485a70f6a13012e522761881dcfe05525687c2db6"}, "downloads": -1, "filename": "drf_pretty_exception_handler-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0af70bedf30ca1e41d2b4be167decd64", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 4435, "upload_time": "2020-02-26T17:25:56", "upload_time_iso_8601": "2020-02-26T17:25:56.104522Z", "url": "https://files.pythonhosted.org/packages/4b/a3/e5ef99b1282e24d428f62f6f6d7272800f38c82871c2b078e00d59b8e58b/drf_pretty_exception_handler-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04915e8b42c62b4bea609de47640a08a", "sha256": "143cadc529a1da35985d69c2444fb052811c24b18c55bd9ccd2c01c4da5b01a7"}, "downloads": -1, "filename": "drf_pretty_exception_handler-0.1.0.tar.gz", "has_sig": false, "md5_digest": "04915e8b42c62b4bea609de47640a08a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9011, "upload_time": "2020-02-26T17:25:58", "upload_time_iso_8601": "2020-02-26T17:25:58.416673Z", "url": "https://files.pythonhosted.org/packages/cd/0b/60e3e6739af529ca418104252c619d9695ed5a901095a003cb6d79503f5a/drf_pretty_exception_handler-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "240799c0dea62a9c5b0f548481d63fe8", "sha256": "62c2000a6ef14804a710baea12d4f25734172ec0c616d9264efc31326962ff09"}, "downloads": -1, "filename": "drf_pretty_exception_handler-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "240799c0dea62a9c5b0f548481d63fe8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 4613, "upload_time": "2020-02-27T07:31:00", "upload_time_iso_8601": "2020-02-27T07:31:00.586903Z", "url": "https://files.pythonhosted.org/packages/35/a9/8d4ed242411326dd741281f585aaae94f3c722b4be7f65884a16cbb342a3/drf_pretty_exception_handler-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf635f33c17f2f1104200e5d289fced8", "sha256": "cd42dadb9746b41d4f0f72a7121b44caee6480f18b244c4e74038a9bfefcebb9"}, "downloads": -1, "filename": "drf_pretty_exception_handler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bf635f33c17f2f1104200e5d289fced8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9222, "upload_time": "2020-02-27T07:31:02", "upload_time_iso_8601": "2020-02-27T07:31:02.098832Z", "url": "https://files.pythonhosted.org/packages/b4/96/c865063fc1d31c0eaf695e90484c4bad823a5b748fe2282e7024ee5027c0/drf_pretty_exception_handler-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "240799c0dea62a9c5b0f548481d63fe8", "sha256": "62c2000a6ef14804a710baea12d4f25734172ec0c616d9264efc31326962ff09"}, "downloads": -1, "filename": "drf_pretty_exception_handler-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "240799c0dea62a9c5b0f548481d63fe8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 4613, "upload_time": "2020-02-27T07:31:00", "upload_time_iso_8601": "2020-02-27T07:31:00.586903Z", "url": "https://files.pythonhosted.org/packages/35/a9/8d4ed242411326dd741281f585aaae94f3c722b4be7f65884a16cbb342a3/drf_pretty_exception_handler-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf635f33c17f2f1104200e5d289fced8", "sha256": "cd42dadb9746b41d4f0f72a7121b44caee6480f18b244c4e74038a9bfefcebb9"}, "downloads": -1, "filename": "drf_pretty_exception_handler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bf635f33c17f2f1104200e5d289fced8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9222, "upload_time": "2020-02-27T07:31:02", "upload_time_iso_8601": "2020-02-27T07:31:02.098832Z", "url": "https://files.pythonhosted.org/packages/b4/96/c865063fc1d31c0eaf695e90484c4bad823a5b748fe2282e7024ee5027c0/drf_pretty_exception_handler-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:41 2020"}