{"info": {"author": "Michael Korotkov", "author_email": "github.spookymushroom@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only"], "description": "=====================\nMinecraft Maps Editor\n=====================\n\nSimple Python 3 editor for Minecraft maps (the item) in NBT format. Allows editing the map image with the Python Image Library or by editing bytes in the color native format. \n\n\nUsage::\n\n import minecraftmap\n filepath = \"/Users/spookymushroom/AppData/Roaming/.minecraft/saves/Test World/data/map_0.dat\"\n \n # The False eco value indicates that __init__ should run genimage to update im (the PIL image)\n m = minecraftmap.Map(filepath,eco=False)\n \n # The '8' byte in Minecraft's color format is equivalent to (174, 164, 115)\n print(m.allcolors[8]) \n \n # The allcolorsinversemap dictionary will return the byte value of a color\n # when any native Minecraft map color is passed into it\n print(m.allcolorsinversemap[(174, 164, 115)])\n \n if m.getbyte(6747) != 8:\n    m.setbyte(6747,8)\n \n # Equivalent to getbyte(6747) for a 128x128 map\n if m.getpoint((91,52)) != 8:\n    m.setpoint((91,52),8)\n \n # Updates Map.im (PIL) to match Map.file (NBT)\n m.genimage()\n \n # PIL methods, m.font defaults to Andrew Tyler's Minecraftia\n m.draw.rectangle((0,0,30,30),fill=(56,58,89))\n m.draw.text((40,40),\"testing\",font=m.font)\n \n # Save Map.im (The PIL.Image object) to a file\n m.saveimagepng(\"map_0.png\") #front-end for m.im.save\n m.saveimagejpg(\"map_0.jpg\") #front-end for m.im.save\n \n # PIL.Image.save method\n m.im.save(\"map_0_customqual.jpg\",\"JPEG\",quality=80)\n \n # Updates Map.file (NBT data) to match Map.im (PIL image)\n # Versions before 0.2 require that the image contains only native colors\n m.imagetonbt()\n \n # Saves Map.file to an NBT file\n # If filename argument is left blank, it saves data to\n # the original file as identified by m.file.filename\n print(m.file.filename)\n m.savenbt()\n\n\n\n:Requires: Thomas Woolford's NBT library\n:Requires: Python Image Library (Pillow)\n:Includes: Andrew Tyler's Minecraftia font", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/spookymushroom/minecraftmap/tarball/0.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/spookymushroom/minecraftmap/", "keywords": "minecraft,map,nbt,item", "license": "Copyright (c) 2016 Michael Korotkov and contributors\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "minecraftmap", "package_url": "https://pypi.org/project/minecraftmap/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/minecraftmap/", "project_urls": {"Download": "https://github.com/spookymushroom/minecraftmap/tarball/0.3", "Homepage": "https://github.com/spookymushroom/minecraftmap/"}, "release_url": "https://pypi.org/project/minecraftmap/0.3/", "requires_dist": null, "requires_python": null, "summary": "Minecraft Map Reader/Writer", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple Python 3 editor for Minecraft maps (the item) in NBT format. Allows editing the map image with the Python Image Library or by editing bytes in the color native format.</p>\n<p>Usage:</p>\n<pre>import minecraftmap\nfilepath = \"/Users/spookymushroom/AppData/Roaming/.minecraft/saves/Test World/data/map_0.dat\"\n\n# The False eco value indicates that __init__ should run genimage to update im (the PIL image)\nm = minecraftmap.Map(filepath,eco=False)\n\n# The '8' byte in Minecraft's color format is equivalent to (174, 164, 115)\nprint(m.allcolors[8])\n\n# The allcolorsinversemap dictionary will return the byte value of a color\n# when any native Minecraft map color is passed into it\nprint(m.allcolorsinversemap[(174, 164, 115)])\n\nif m.getbyte(6747) != 8:\n   m.setbyte(6747,8)\n\n# Equivalent to getbyte(6747) for a 128x128 map\nif m.getpoint((91,52)) != 8:\n   m.setpoint((91,52),8)\n\n# Updates Map.im (PIL) to match Map.file (NBT)\nm.genimage()\n\n# PIL methods, m.font defaults to Andrew Tyler's Minecraftia\nm.draw.rectangle((0,0,30,30),fill=(56,58,89))\nm.draw.text((40,40),\"testing\",font=m.font)\n\n# Save Map.im (The PIL.Image object) to a file\nm.saveimagepng(\"map_0.png\") #front-end for m.im.save\nm.saveimagejpg(\"map_0.jpg\") #front-end for m.im.save\n\n# PIL.Image.save method\nm.im.save(\"map_0_customqual.jpg\",\"JPEG\",quality=80)\n\n# Updates Map.file (NBT data) to match Map.im (PIL image)\n# Versions before 0.2 require that the image contains only native colors\nm.imagetonbt()\n\n# Saves Map.file to an NBT file\n# If filename argument is left blank, it saves data to\n# the original file as identified by m.file.filename\nprint(m.file.filename)\nm.savenbt()\n</pre>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Requires:</th><td>Thomas Woolford\u2019s NBT library</td>\n</tr>\n<tr><th>Requires:</th><td>Python Image Library (Pillow)</td>\n</tr>\n<tr><th>Includes:</th><td>Andrew Tyler\u2019s Minecraftia font</td>\n</tr>\n</tbody>\n</table>\n\n          </div>"}, "last_serial": 2522181, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e3c5f0779dfe49b96b311fe9c933e2d4", "sha256": "cc71384091ff885a4362cf0d96e2bed973f8232785641c7a2b0e15e0ce19950a"}, "downloads": -1, "filename": "minecraftmap-0.1.zip", "has_sig": false, "md5_digest": "e3c5f0779dfe49b96b311fe9c933e2d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14493, "upload_time": "2016-09-30T21:27:51", "upload_time_iso_8601": "2016-09-30T21:27:51.299892Z", "url": "https://files.pythonhosted.org/packages/08/be/fcb4747015f8e36b80b20954803a06f22e0370081d92325d3990647d85de/minecraftmap-0.1.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2e73847fceb807f7bf3c206528d884b4", "sha256": "40dbb739d03291c76ad5eb4508c4f3bad2098c50e27431a78ed6f4758494a15d"}, "downloads": -1, "filename": "minecraftmap-0.1.1.zip", "has_sig": false, "md5_digest": "2e73847fceb807f7bf3c206528d884b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15331, "upload_time": "2016-09-30T21:42:01", "upload_time_iso_8601": "2016-09-30T21:42:01.488510Z", "url": "https://files.pythonhosted.org/packages/e6/90/05089723563d64c59544d87e0e8f1ea3c2002f868c69ded11724d8ccc7fe/minecraftmap-0.1.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0f412294bf949dfb2e3d657653490935", "sha256": "07650c5200987d8debccc33a1f8b350dbd4b263fc792bc71bc81c625a6aa8d2a"}, "downloads": -1, "filename": "minecraftmap-0.2.zip", "has_sig": false, "md5_digest": "0f412294bf949dfb2e3d657653490935", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15723, "upload_time": "2016-12-09T02:51:41", "upload_time_iso_8601": "2016-12-09T02:51:41.310114Z", "url": "https://files.pythonhosted.org/packages/67/77/da7b6d22b28483666ad7c35c3a703a77e0acb4fc0294e6367b0b6a75f300/minecraftmap-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d05a492a3e18e67bd4c81fbd7b4250ee", "sha256": "d2b5840d5b20a012a1480726d3a36ec891297d8067bbbdae984ec06235cf1b07"}, "downloads": -1, "filename": "minecraftmap-0.3.zip", "has_sig": false, "md5_digest": "d05a492a3e18e67bd4c81fbd7b4250ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20100, "upload_time": "2016-12-15T22:45:16", "upload_time_iso_8601": "2016-12-15T22:45:16.538806Z", "url": "https://files.pythonhosted.org/packages/a7/bf/af68a212869b1a7939b25d9552300aabab132e1f91d087b0412131b34943/minecraftmap-0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d05a492a3e18e67bd4c81fbd7b4250ee", "sha256": "d2b5840d5b20a012a1480726d3a36ec891297d8067bbbdae984ec06235cf1b07"}, "downloads": -1, "filename": "minecraftmap-0.3.zip", "has_sig": false, "md5_digest": "d05a492a3e18e67bd4c81fbd7b4250ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20100, "upload_time": "2016-12-15T22:45:16", "upload_time_iso_8601": "2016-12-15T22:45:16.538806Z", "url": "https://files.pythonhosted.org/packages/a7/bf/af68a212869b1a7939b25d9552300aabab132e1f91d087b0412131b34943/minecraftmap-0.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:54:31 2020"}