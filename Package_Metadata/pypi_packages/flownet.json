{"info": {"author": "R&T Equinor", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "[![PyPI version](https://badge.fury.io/py/flownet.svg)](https://badge.fury.io/py/flownet)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/equinor/flownet/CI)](https://github.com/equinor/flownet/actions?query=workflow%3ACI)\n[![Python 3.6 | 3.7](https://img.shields.io/badge/python-3.6%20|%203.7-blue.svg)](https://www.python.org/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/equinor/flownet.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/equinor/flownet/alerts/)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/equinor/flownet.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/equinor/flownet/context:python)\n\n# _FlowNet_\n\n_FlowNet_ aims at solving the following problems:\n\n* Create data-driven reduced physics models - directly from the data\n* Train the model\n* Assure model predictiveness\n* Use the models to efficiently optimize and make decisions\n\n## Contributing\n\nPlease check out our [contribution guidelines](CONTRIBUTING.md) if you want to contribute to FlowNet.\n\n## Installation\n\n_FlowNet_ is a Python package. The package itself, and other dependencies,\ncould be installed e.g. using a Python/Conda virtual environment. You will\nneed to choose your favourite environment and install all dependencies\nto get going.\n\n### Install FlowNet\n\n_FlowNet_ uses the open-source reservoir simulator [_OPM-Flow_](https://opm-project.org/?page_id=19). To be able to run _FlowNet_ you will need to have _OPM-Flow_\ninstalled first. There are also other dependencies like the Python packages [`libecl`](https://github.com/equinor/libecl) and\n[`libres`](https://github.com/equinor/libres) which currently are not easily installable from PyPI (however, things are happening, so hopefully in a not too distant future, dependencies are installable from PyPI, which is already the case for flownet itself: `pip install flownet`).\n\n##### 1. Clone the _FlowNet_ GitHub repository with SSH:\n```bash\ngit clone git@github.com:equinor/flownet.git\n```\n\n##### 2. Move into the cloned directory:\n```bash\ncd ddpd-flownet\n```\n\n##### 3. Run the `build_environment.sh` script containing the building recipe: \n```bash\nbash ./build_environment.sh ./venv\n```\nThis will automatically create a simple [Python virtual environment](docs.python.org/3/library/venv.html) `./venv`\n\n<details>\n<summary><u>Click here</u> for alternative installation by creating your own environment</summary>\n\n#### A. Python virtual environment\n##### A.1. Create a [Python virtual environment](docs.python.org/3/library/venv.html) named `venv` yourself:\n```bash\npython3 -m venv ./venv\n```\n##### A.2. Activate the environment:\n```bash\nsource ./venv/bin/activate\n```\n##### A.3. Run the build script providing the path to the Python virtual environment:\n```bash\n./build_environment.sh $VIRTUAL_ENV\n```\nor\n#### B. Conda environment\n##### B.1. Create a [Conda environment](docs.conda.io/projects/conda/en/latest/user-guide/concepts/environments.html)\n```bash\nconda create -n venv python=3.7\n```\n##### B.2. Activate the environment:\n```bash\nconda activate venv\n```\n##### B.3. Fix path to Python packages:\n```bash\nconda create -n flownet python=3.7\nconda activate flownet\necho \"$CONDA_PREFIX/lib/python3.7/dist-packages\" > $CONDA_PREFIX/lib/python3.7/site-packages/dist-packages.pth\n```\n##### B.4. Run the build script providing the path to the Conda environment:\n```bash\n./build_environment.sh $CONDA_PREFIX\n```\n\n</details>\n\n##### 4. Install the `flownet` Python module in development mode:\n```bash\npip install -e .\n```\nOmit the `-e` flag if you want a standard installation.\n\n> :warning: Do you want to run FlowNet through the LSF queue?\nTo be able to have the ERT process, that will be called by FlowNet,\nrun jobs via LSF correctly you will need to update your default shell's\nconfiguration file (`.cshrc` or `.bashrc`) to automatically source your\nvirtual environment.\n> \n\n### Install OPM-data (optional)\n\nTo be able to run examples that are dependent on the Norne field simulation,\nyou need to download the [OPM-data](https://github.com/OPM/opm-data) repository.\nThe preferred installation location is in the home directory, e.g. `~/opm-data`:\n\n```bash\ncd\ngit clone https://github.com/OPM/opm-data.git\n```\n\n### Running FlowNet\n\nYou can run _FlowNet_ as a single command line:\n```\nflownet ./some_config.yaml ./some_output_folder\n```\nRun `flownet --help` to see all possible command line argument options.\n\n### Running webviz to check results\n\nBefore running `webviz` for the first time on your machine, you will need to to create a localhost `https` certificate by doing:\n```bash\nwebviz certificate --auto-install --force\n```\n\n### Build documentation\n\nYou can build the documentation after installation by running\n```bash\ncd ./docs\nmake html\n```\nand then open the generated `./docs/_build/html/index.html` in a browser.\n\n### License\n\nFlowNet is, with a few exceptions listed below, [GPLv3](./LICENSE).\n\n- The [Norne test data](./tests/data/norne.tar.gz) is available under the [Open Database License](http://opendatacommons.org/licenses/odbl/1.0/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/equinor/flownet", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flownet", "package_url": "https://pypi.org/project/flownet/", "platform": "", "project_url": "https://pypi.org/project/flownet/", "project_urls": {"Homepage": "https://github.com/equinor/flownet"}, "release_url": "https://pypi.org/project/flownet/0.1.1/", "requires_dist": ["configsuite (~=0.5)", "cwrap (~=1.6)", "ecl2df (~=0.5.1)", "jinja2 (~=2.10)", "matplotlib (~=3.1)", "numpy (~=1.17)", "pandas (~=0.25)", "pyarrow (~=0.14)", "pyscal (~=0.4.1)", "pyvista (~=0.23)", "pyyaml (~=5.2)", "scipy (~=1.4)", "tqdm (~=4.43)", "webviz-config (>=0.0.42)", "webviz-config-equinor (>=0.0.9)", "webviz-subsurface (>=0.0.24)", "black ; extra == 'tests'", "mypy (~=0.761) ; extra == 'tests'", "pylint (~=2.3) ; extra == 'tests'", "pytest (~=5.3) ; extra == 'tests'", "pytest-cov (~=2.8) ; extra == 'tests'", "sphinx ; extra == 'tests'", "sphinx-rtd-theme ; extra == 'tests'"], "requires_python": "", "summary": "Simplified training of reservoir simulation models", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/flownet\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1109023958e98d214e466bfac768efba58de7c6/68747470733a2f2f62616467652e667572792e696f2f70792f666c6f776e65742e737667\"></a>\n<a href=\"https://github.com/equinor/flownet/actions?query=workflow%3ACI\" rel=\"nofollow\"><img alt=\"GitHub Workflow Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ee18e581e92f84f2bb438ac6913080d9701be7f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f657175696e6f722f666c6f776e65742f4349\"></a>\n<a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"Python 3.6 | 3.7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2390055e2fdf2bcda0b376a926e961a950c060e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253230253743253230332e372d626c75652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://lgtm.com/projects/g/equinor/flownet/alerts/\" rel=\"nofollow\"><img alt=\"Total alerts\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/674eaaea698b396beb6be02ee0446da34878a754/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f657175696e6f722f666c6f776e65742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a>\n<a href=\"https://lgtm.com/projects/g/equinor/flownet/context:python\" rel=\"nofollow\"><img alt=\"Language grade: Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0c378ea9b810821beef83d5b21881d4acf5f796/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f657175696e6f722f666c6f776e65742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a></p>\n<h1><em>FlowNet</em></h1>\n<p><em>FlowNet</em> aims at solving the following problems:</p>\n<ul>\n<li>Create data-driven reduced physics models - directly from the data</li>\n<li>Train the model</li>\n<li>Assure model predictiveness</li>\n<li>Use the models to efficiently optimize and make decisions</li>\n</ul>\n<h2>Contributing</h2>\n<p>Please check out our <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">contribution guidelines</a> if you want to contribute to FlowNet.</p>\n<h2>Installation</h2>\n<p><em>FlowNet</em> is a Python package. The package itself, and other dependencies,\ncould be installed e.g. using a Python/Conda virtual environment. You will\nneed to choose your favourite environment and install all dependencies\nto get going.</p>\n<h3>Install FlowNet</h3>\n<p><em>FlowNet</em> uses the open-source reservoir simulator <a href=\"https://opm-project.org/?page_id=19\" rel=\"nofollow\"><em>OPM-Flow</em></a>. To be able to run <em>FlowNet</em> you will need to have <em>OPM-Flow</em>\ninstalled first. There are also other dependencies like the Python packages <a href=\"https://github.com/equinor/libecl\" rel=\"nofollow\"><code>libecl</code></a> and\n<a href=\"https://github.com/equinor/libres\" rel=\"nofollow\"><code>libres</code></a> which currently are not easily installable from PyPI (however, things are happening, so hopefully in a not too distant future, dependencies are installable from PyPI, which is already the case for flownet itself: <code>pip install flownet</code>).</p>\n<h5>1. Clone the <em>FlowNet</em> GitHub repository with SSH:</h5>\n<pre>git clone git@github.com:equinor/flownet.git\n</pre>\n<h5>2. Move into the cloned directory:</h5>\n<pre><span class=\"nb\">cd</span> ddpd-flownet\n</pre>\n<h5>3. Run the <code>build_environment.sh</code> script containing the building recipe:</h5>\n<pre>bash ./build_environment.sh ./venv\n</pre>\n<p>This will automatically create a simple <a href=\"docs.python.org/3/library/venv.html\" rel=\"nofollow\">Python virtual environment</a> <code>./venv</code></p>\n<details>\n<summary>&lt;u&gt;Click here&lt;/u&gt; for alternative installation by creating your own environment</summary>\n<h4>A. Python virtual environment</h4>\n<h5>A.1. Create a <a href=\"docs.python.org/3/library/venv.html\" rel=\"nofollow\">Python virtual environment</a> named <code>venv</code> yourself:</h5>\n<pre>python3 -m venv ./venv\n</pre>\n<h5>A.2. Activate the environment:</h5>\n<pre><span class=\"nb\">source</span> ./venv/bin/activate\n</pre>\n<h5>A.3. Run the build script providing the path to the Python virtual environment:</h5>\n<pre>./build_environment.sh <span class=\"nv\">$VIRTUAL_ENV</span>\n</pre>\n<p>or</p>\n<h4>B. Conda environment</h4>\n<h5>B.1. Create a <a href=\"docs.conda.io/projects/conda/en/latest/user-guide/concepts/environments.html\" rel=\"nofollow\">Conda environment</a></h5>\n<pre>conda create -n venv <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7\n</pre>\n<h5>B.2. Activate the environment:</h5>\n<pre>conda activate venv\n</pre>\n<h5>B.3. Fix path to Python packages:</h5>\n<pre>conda create -n flownet <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7\nconda activate flownet\n<span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$CONDA_PREFIX</span><span class=\"s2\">/lib/python3.7/dist-packages\"</span> &gt; <span class=\"nv\">$CONDA_PREFIX</span>/lib/python3.7/site-packages/dist-packages.pth\n</pre>\n<h5>B.4. Run the build script providing the path to the Conda environment:</h5>\n<pre>./build_environment.sh <span class=\"nv\">$CONDA_PREFIX</span>\n</pre>\n</details>\n<h5>4. Install the <code>flownet</code> Python module in development mode:</h5>\n<pre>pip install -e .\n</pre>\n<p>Omit the <code>-e</code> flag if you want a standard installation.</p>\n<blockquote>\n<p>:warning: Do you want to run FlowNet through the LSF queue?\nTo be able to have the ERT process, that will be called by FlowNet,\nrun jobs via LSF correctly you will need to update your default shell's\nconfiguration file (<code>.cshrc</code> or <code>.bashrc</code>) to automatically source your\nvirtual environment.</p>\n</blockquote>\n<h3>Install OPM-data (optional)</h3>\n<p>To be able to run examples that are dependent on the Norne field simulation,\nyou need to download the <a href=\"https://github.com/OPM/opm-data\" rel=\"nofollow\">OPM-data</a> repository.\nThe preferred installation location is in the home directory, e.g. <code>~/opm-data</code>:</p>\n<pre><span class=\"nb\">cd</span>\ngit clone https://github.com/OPM/opm-data.git\n</pre>\n<h3>Running FlowNet</h3>\n<p>You can run <em>FlowNet</em> as a single command line:</p>\n<pre><code>flownet ./some_config.yaml ./some_output_folder\n</code></pre>\n<p>Run <code>flownet --help</code> to see all possible command line argument options.</p>\n<h3>Running webviz to check results</h3>\n<p>Before running <code>webviz</code> for the first time on your machine, you will need to to create a localhost <code>https</code> certificate by doing:</p>\n<pre>webviz certificate --auto-install --force\n</pre>\n<h3>Build documentation</h3>\n<p>You can build the documentation after installation by running</p>\n<pre><span class=\"nb\">cd</span> ./docs\nmake html\n</pre>\n<p>and then open the generated <code>./docs/_build/html/index.html</code> in a browser.</p>\n<h3>License</h3>\n<p>FlowNet is, with a few exceptions listed below, <a href=\"./LICENSE\" rel=\"nofollow\">GPLv3</a>.</p>\n<ul>\n<li>The <a href=\"./tests/data/norne.tar.gz\" rel=\"nofollow\">Norne test data</a> is available under the <a href=\"http://opendatacommons.org/licenses/odbl/1.0/\" rel=\"nofollow\">Open Database License</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7023569, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5ad1bd5148c674ad6260b00ce2ffed12", "sha256": "5bd42f65fec4274d20597be42ec9ce7f91c397801b3d4470e115eb33c31b354c"}, "downloads": -1, "filename": "flownet-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5ad1bd5148c674ad6260b00ce2ffed12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 85469, "upload_time": "2020-04-14T06:02:16", "upload_time_iso_8601": "2020-04-14T06:02:16.300105Z", "url": "https://files.pythonhosted.org/packages/46/5f/d4fbdbe78427c6e4abc6accc957cbb927ece110e06570b4f14a73a5fbd81/flownet-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ccdfb23c038b6b914c545d4706767f38", "sha256": "c35a86b418fa1c4361f1eacd18a0fea6044c28007af2873f8219ab5fac9eb390"}, "downloads": -1, "filename": "flownet-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ccdfb23c038b6b914c545d4706767f38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87697, "upload_time": "2020-04-15T10:02:15", "upload_time_iso_8601": "2020-04-15T10:02:15.883510Z", "url": "https://files.pythonhosted.org/packages/41/8b/c717ee2850a1b883add26c994540328b710116d5a79da2951e16ede25109/flownet-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccdfb23c038b6b914c545d4706767f38", "sha256": "c35a86b418fa1c4361f1eacd18a0fea6044c28007af2873f8219ab5fac9eb390"}, "downloads": -1, "filename": "flownet-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ccdfb23c038b6b914c545d4706767f38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87697, "upload_time": "2020-04-15T10:02:15", "upload_time_iso_8601": "2020-04-15T10:02:15.883510Z", "url": "https://files.pythonhosted.org/packages/41/8b/c717ee2850a1b883add26c994540328b710116d5a79da2951e16ede25109/flownet-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:01:40 2020"}