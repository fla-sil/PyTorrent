{"info": {"author": "Andrew Leech", "author_email": "andrew@alelec.net", "bugtrack_url": null, "classifiers": [], "description": "Future Thread\n=============\n\nCreates a thread with Future attributes.\n\nBased on (and actively uses) features from concurrent.futures module to easily start a function in a\nnew background thread without the overhead of using a ThreadPoolExecutor, while still providing a Future style handle around said thread.\n\nUsage::\n\n    import time\n    from future_thread import Future, DeferredFuture\n\n    def background():\n        time.sleep(10)\n        return True\n\n    fut = Future(background)\n    fut.result()  # will block until thread finished\n\n\n    fut = DeferredFuture(background)\n    # do some other stuff\n    fut.start()\n\nFor more info on the Future object see: https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/alelec/future_thread", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "future-thread", "package_url": "https://pypi.org/project/future-thread/", "platform": "", "project_url": "https://pypi.org/project/future-thread/", "project_urls": {"Homepage": "https://gitlab.com/alelec/future_thread"}, "release_url": "https://pypi.org/project/future-thread/1.0/", "requires_dist": null, "requires_python": "", "summary": "A simple module for creating a background thread and returning a Future object", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Creates a thread with Future attributes.</p>\n<p>Based on (and actively uses) features from concurrent.futures module to easily start a function in a\nnew background thread without the overhead of using a ThreadPoolExecutor, while still providing a Future style handle around said thread.</p>\n<p>Usage:</p>\n<pre>import time\nfrom future_thread import Future, DeferredFuture\n\ndef background():\n    time.sleep(10)\n    return True\n\nfut = Future(background)\nfut.result()  # will block until thread finished\n\n\nfut = DeferredFuture(background)\n# do some other stuff\nfut.start()\n</pre>\n<p>For more info on the Future object see: <a href=\"https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future\" rel=\"nofollow\">https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future</a></p>\n\n          </div>"}, "last_serial": 2975398, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "90fcaa11f91fda0629eec8082db72833", "sha256": "3b56d570e946b23aa40792904f8219e9aa92ed8096a36f79ff0c2d4a2a5b559b"}, "downloads": -1, "filename": "future_thread-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "90fcaa11f91fda0629eec8082db72833", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3488, "upload_time": "2017-06-24T08:12:36", "upload_time_iso_8601": "2017-06-24T08:12:36.719935Z", "url": "https://files.pythonhosted.org/packages/82/36/abe0a9268c28b4671a4bc79b6c23a063720ded76197246cc697d084eebea/future_thread-1.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90fcaa11f91fda0629eec8082db72833", "sha256": "3b56d570e946b23aa40792904f8219e9aa92ed8096a36f79ff0c2d4a2a5b559b"}, "downloads": -1, "filename": "future_thread-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "90fcaa11f91fda0629eec8082db72833", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3488, "upload_time": "2017-06-24T08:12:36", "upload_time_iso_8601": "2017-06-24T08:12:36.719935Z", "url": "https://files.pythonhosted.org/packages/82/36/abe0a9268c28b4671a4bc79b6c23a063720ded76197246cc697d084eebea/future_thread-1.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:59:33 2020"}