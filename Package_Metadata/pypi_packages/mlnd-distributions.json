{"info": {"author": "Anton Demurenko", "author_email": "dai99-uanic@priv.uanic.ua", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# MLND-distributions package\n\nThis package provides the Gaussian distribution and Binomial distribution classes.\n\n* Gaussian - Gaussian distribution class for calculating and visualizing a Gaussian distribution.\nAttributes:\n\t\tmean (float) - representing the mean value of the distribution.\n\t\tstdev (float) - representing the standard deviation of the distribution.\n\t\tdata_list (list of floats) - a list of floats extracted from the data file.\n\nMethods:\n\t\tcalculate_mean() - Function to calculate the mean of the data set.\n\t\tcalculate_stdev() - Function to calculate the standard deviation of the data set.\n\t\tplot_histogram() - Function to output a histogram of the instance variable data using matplotlib pyplot library.\n\t\tread_data_file(filename) - Function to read in data from a txt file. The txt file should have one number (float) per line. The numbers are stored in the data attribute.\n\t\tpdf(x) - Probability density function calculator for the gaussian distribution\n\t\t\tArgs:\n\t\t\t\tx (float): point for calculating the probability density function\n\t\t\tReturns:\n\t\t\t\tfloat: probability density function output\n\t\tplot_histogram_pdf(n_spaces = 50) - Function to plot the normalized histogram of the data and a plot of the probability density function along the same range\n\t\t\tArgs:\n\t\t\t\tn_spaces (int): number of data points\n\t\t\tReturns:\n\t\t\t\tlist: x values for the pdf plot\n\t\t\t\tlist: y values for the pdf plot\n\t\t__add__(other) - Function to add together two Gaussian distributions\n\t\tArgs:\n\t\t\tother (Gaussian): Gaussian instance\n\t\tReturns:\n\t\t\tGaussian: Gaussian distribution\n \t\t__repr__() - Function to output the characteristics of the Gaussian instance\n\n\n* Binomial - Binomial distribution class for calculating and visualizing a Binomial distribution.\n Attributes:\n\t\tmean (float) representing the mean value of the distribution\n\t\tstdev (float) representing the standard deviation of the distribution\n\t\tdata_list (list of floats) a list of floats to be extracted from the data file\n\t\tp (float) representing the probability of an event occurring\n\t\tn (int) number of trials\n\nMethods:\n\t\tcalculate_mean() - Function to calculate the mean from p and n.\n\t\tcalculate_stdev() - Function to calculate the standard deviation from p and n.\n\t\tread_data_file(filename) - Function to read in data from a txt file. The txt file should have one number (float) per line. The numbers are stored in the data attribute.\n\t\treplace_stats_with_data() - Function to calculate p and n from the data set\n\t\tArgs:\n\t\t\tNone\n\t\tReturns:\n\t\t\tfloat: the p value\n\t\t\tfloat: the n value\n\t\tplot_bar() - Function to output a histogram of the instance variable data using matplotlib pyplot library.\n\t\tpdf(k) - Probability density function calculator for the gaussian distribution.\n\t\tArgs:\n\t\t\tx (float): point for calculating the probability density function\n\t\tReturns:\n\t\t\tfloat: probability density function output\n\t\tplot_bar_pdf() - Function to plot the pdf of the binomial distribution\n\t\tArgs:\n\t\t\tNone\n\t\tReturns:\n\t\t\tlist: x values for the pdf plot\n\t\t\tlist: y values for the pdf plot\n\t\t__add__(other) - Function to add together two Binomial distributions with equal p\n\t\tArgs:\n\t\t\tother (Binomial): Binomial instance\n\t\tReturns:\n\t\t\tBinomial: Binomial distribution\n\t\t__repr__() - Function to output the characteristics of the Binomial instance.\n\n\n\n# Files\n* Generaldistribution.py - contains Distribution class, its attributes and methods being inherited by Gaussian and Binomial class.\n* Gaussiandistribution.py - contains Gaussian class, its attributes and methods stated above in udc-dsnd-distributions package summary.\n* Binomialdistribution.py - contains Binomial class, its attributes and methods stated above in udc-dsnd-distributions package summary.\n\n# Installation\n* The code should run with no issues using Python versions 3.*.\n* No extra besides the built-in libraries from Anaconda needed to run this project\n\t\tMath\n\t\tmatplotlib\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/demur/mlnd-distributions", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mlnd-distributions", "package_url": "https://pypi.org/project/mlnd-distributions/", "platform": "", "project_url": "https://pypi.org/project/mlnd-distributions/", "project_urls": {"Homepage": "https://github.com/demur/mlnd-distributions"}, "release_url": "https://pypi.org/project/mlnd-distributions/1.0/", "requires_dist": null, "requires_python": "", "summary": "Gaussian and Binomial distributions", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MLND-distributions package</h1>\n<p>This package provides the Gaussian distribution and Binomial distribution classes.</p>\n<ul>\n<li>Gaussian - Gaussian distribution class for calculating and visualizing a Gaussian distribution.\nAttributes:\nmean (float) - representing the mean value of the distribution.\nstdev (float) - representing the standard deviation of the distribution.\ndata_list (list of floats) - a list of floats extracted from the data file.</li>\n</ul>\n<p>Methods:\ncalculate_mean() - Function to calculate the mean of the data set.\ncalculate_stdev() - Function to calculate the standard deviation of the data set.\nplot_histogram() - Function to output a histogram of the instance variable data using matplotlib pyplot library.\nread_data_file(filename) - Function to read in data from a txt file. The txt file should have one number (float) per line. The numbers are stored in the data attribute.\npdf(x) - Probability density function calculator for the gaussian distribution\nArgs:\nx (float): point for calculating the probability density function\nReturns:\nfloat: probability density function output\nplot_histogram_pdf(n_spaces = 50) - Function to plot the normalized histogram of the data and a plot of the probability density function along the same range\nArgs:\nn_spaces (int): number of data points\nReturns:\nlist: x values for the pdf plot\nlist: y values for the pdf plot\n<strong>add</strong>(other) - Function to add together two Gaussian distributions\nArgs:\nother (Gaussian): Gaussian instance\nReturns:\nGaussian: Gaussian distribution\n<strong>repr</strong>() - Function to output the characteristics of the Gaussian instance</p>\n<ul>\n<li>Binomial - Binomial distribution class for calculating and visualizing a Binomial distribution.\nAttributes:\nmean (float) representing the mean value of the distribution\nstdev (float) representing the standard deviation of the distribution\ndata_list (list of floats) a list of floats to be extracted from the data file\np (float) representing the probability of an event occurring\nn (int) number of trials</li>\n</ul>\n<p>Methods:\ncalculate_mean() - Function to calculate the mean from p and n.\ncalculate_stdev() - Function to calculate the standard deviation from p and n.\nread_data_file(filename) - Function to read in data from a txt file. The txt file should have one number (float) per line. The numbers are stored in the data attribute.\nreplace_stats_with_data() - Function to calculate p and n from the data set\nArgs:\nNone\nReturns:\nfloat: the p value\nfloat: the n value\nplot_bar() - Function to output a histogram of the instance variable data using matplotlib pyplot library.\npdf(k) - Probability density function calculator for the gaussian distribution.\nArgs:\nx (float): point for calculating the probability density function\nReturns:\nfloat: probability density function output\nplot_bar_pdf() - Function to plot the pdf of the binomial distribution\nArgs:\nNone\nReturns:\nlist: x values for the pdf plot\nlist: y values for the pdf plot\n<strong>add</strong>(other) - Function to add together two Binomial distributions with equal p\nArgs:\nother (Binomial): Binomial instance\nReturns:\nBinomial: Binomial distribution\n<strong>repr</strong>() - Function to output the characteristics of the Binomial instance.</p>\n<h1>Files</h1>\n<ul>\n<li>Generaldistribution.py - contains Distribution class, its attributes and methods being inherited by Gaussian and Binomial class.</li>\n<li>Gaussiandistribution.py - contains Gaussian class, its attributes and methods stated above in udc-dsnd-distributions package summary.</li>\n<li>Binomialdistribution.py - contains Binomial class, its attributes and methods stated above in udc-dsnd-distributions package summary.</li>\n</ul>\n<h1>Installation</h1>\n<ul>\n<li>The code should run with no issues using Python versions 3.*.</li>\n<li>No extra besides the built-in libraries from Anaconda needed to run this project\nMath\nmatplotlib</li>\n</ul>\n\n          </div>"}, "last_serial": 6252484, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "7e7a449ef5b81f13db858f4a80ebf992", "sha256": "602d5f85a6cecd0d0ca9ceda81035f7558452ba24aec1be3f1f5eb29c4361eba"}, "downloads": -1, "filename": "mlnd_distributions-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7e7a449ef5b81f13db858f4a80ebf992", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6892, "upload_time": "2019-12-06T05:24:45", "upload_time_iso_8601": "2019-12-06T05:24:45.459588Z", "url": "https://files.pythonhosted.org/packages/bc/0d/e7ffd5df4ce4cd5c6338c4f31bc93e1f9482076db86246e55331277b3456/mlnd_distributions-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f57e62ee0683052378cc0b2b09569f9", "sha256": "c3c963e60ccdcc2ab1f7408ac6cd1daef5cc215684263411c6f650dd0eb92c95"}, "downloads": -1, "filename": "mlnd_distributions-1.0.tar.gz", "has_sig": false, "md5_digest": "8f57e62ee0683052378cc0b2b09569f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4398, "upload_time": "2019-12-06T05:24:47", "upload_time_iso_8601": "2019-12-06T05:24:47.825149Z", "url": "https://files.pythonhosted.org/packages/22/84/b453f00e35abda8d5335e178b12b1629a686dff8f4d9db8f5289e57e6e2a/mlnd_distributions-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e7a449ef5b81f13db858f4a80ebf992", "sha256": "602d5f85a6cecd0d0ca9ceda81035f7558452ba24aec1be3f1f5eb29c4361eba"}, "downloads": -1, "filename": "mlnd_distributions-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7e7a449ef5b81f13db858f4a80ebf992", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6892, "upload_time": "2019-12-06T05:24:45", "upload_time_iso_8601": "2019-12-06T05:24:45.459588Z", "url": "https://files.pythonhosted.org/packages/bc/0d/e7ffd5df4ce4cd5c6338c4f31bc93e1f9482076db86246e55331277b3456/mlnd_distributions-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f57e62ee0683052378cc0b2b09569f9", "sha256": "c3c963e60ccdcc2ab1f7408ac6cd1daef5cc215684263411c6f650dd0eb92c95"}, "downloads": -1, "filename": "mlnd_distributions-1.0.tar.gz", "has_sig": false, "md5_digest": "8f57e62ee0683052378cc0b2b09569f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4398, "upload_time": "2019-12-06T05:24:47", "upload_time_iso_8601": "2019-12-06T05:24:47.825149Z", "url": "https://files.pythonhosted.org/packages/22/84/b453f00e35abda8d5335e178b12b1629a686dff8f4d9db8f5289e57e6e2a/mlnd_distributions-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:27 2020"}