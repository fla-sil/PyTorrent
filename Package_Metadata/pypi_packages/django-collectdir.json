{"info": {"author": "James Pic", "author_email": "jamespic@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django-CollectDir: general purpose collectstatic alternative\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis app provides a command named collectdir, which works like collectstatic\nbut general purpose, so you need to add ``'collectdir'`` to your\n``settings.INSTALLED_APPS``. It can be used to mix Django with frontend\nframeworks or build tools in NodeJS.\n\nConsider such a project directory tree:\n\n- project/\n  - someapp/frontend  # <- frontend dir in someapp module of project\n  - otherapp/frontend # <- frontend dir in another INSTALLED_APPS\n  - frontend/         # <- non commited directory, autogenerated from above\n\nYou can rebuild ``project/frontend`` with command::\n\n    # collect all app's frontend/ dir into ./frontend\n    manage.py collectdir frontend:./frontend\n\nIf it detects a TTY, and watchdog is installed, it will keep running and\nsynchronizing the target directory. To install collectdir with watchdog\nexample::\n\n    pip install --user django-collectdir[dev]\n\nNote that in CRUDLFA+, we use ``js`` instead of frontend, so if you want to add\nyour own StimulusJS controllers to your bundle you can just add them in your\napp. And before executing the frontend toolchain, run::\n\n    manage.py collectdir js:./js\n\nOr, for NextJS support::\n\n    manage.py appwatch pages:./pages\n\nOr, for NextJS and React support and also have a components sub dir::\n\n    manage.py appwatch pages:./pages components:./pages/components\n\nHave fun provisionning other frameworks with Django apps :)\n\n.. image:: screenshot.png\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.yourlabs.org/oss/django-collectdir", "keywords": "django", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-collectdir", "package_url": "https://pypi.org/project/django-collectdir/", "platform": "", "project_url": "https://pypi.org/project/django-collectdir/", "project_urls": {"Homepage": "https://git.yourlabs.org/oss/django-collectdir"}, "release_url": "https://pypi.org/project/django-collectdir/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Generic purpose collecstatic alternative, with lovely colors", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This app provides a command named collectdir, which works like collectstatic\nbut general purpose, so you need to add <tt>'collectdir'</tt> to your\n<tt>settings.INSTALLED_APPS</tt>. It can be used to mix Django with frontend\nframeworks or build tools in NodeJS.</p>\n<p>Consider such a project directory tree:</p>\n<ul>\n<li>project/\n- someapp/frontend  # &lt;- frontend dir in someapp module of project\n- otherapp/frontend # &lt;- frontend dir in another INSTALLED_APPS\n- frontend/         # &lt;- non commited directory, autogenerated from above</li>\n</ul>\n<p>You can rebuild <tt>project/frontend</tt> with command:</p>\n<pre># collect all app's frontend/ dir into ./frontend\nmanage.py collectdir frontend:./frontend\n</pre>\n<p>If it detects a TTY, and watchdog is installed, it will keep running and\nsynchronizing the target directory. To install collectdir with watchdog\nexample:</p>\n<pre>pip install --user django-collectdir[dev]\n</pre>\n<p>Note that in CRUDLFA+, we use <tt>js</tt> instead of frontend, so if you want to add\nyour own StimulusJS controllers to your bundle you can just add them in your\napp. And before executing the frontend toolchain, run:</p>\n<pre>manage.py collectdir js:./js\n</pre>\n<p>Or, for NextJS support:</p>\n<pre>manage.py appwatch pages:./pages\n</pre>\n<p>Or, for NextJS and React support and also have a components sub dir:</p>\n<pre>manage.py appwatch pages:./pages components:./pages/components\n</pre>\n<p>Have fun provisionning other frameworks with Django apps :)</p>\n<img alt=\"screenshot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b62d4253740154b5f4ad40dba4b6e4de74af19a2/73637265656e73686f742e706e67\">\n\n          </div>"}, "last_serial": 3879909, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4386fc179349e2bbf725b59f68e61728", "sha256": "0a76d58b55201351ed9b07c2e99f35d03c31d7f60e87da595b22d0182b7c930c"}, "downloads": -1, "filename": "django-collectdir-1.0.0.tar.gz", "has_sig": true, "md5_digest": "4386fc179349e2bbf725b59f68e61728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4147, "upload_time": "2018-05-19T21:55:52", "upload_time_iso_8601": "2018-05-19T21:55:52.532694Z", "url": "https://files.pythonhosted.org/packages/9b/1d/737e7a6713f9b6f099c0225b899758fec548608f5749185c2fe66208a433/django-collectdir-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4386fc179349e2bbf725b59f68e61728", "sha256": "0a76d58b55201351ed9b07c2e99f35d03c31d7f60e87da595b22d0182b7c930c"}, "downloads": -1, "filename": "django-collectdir-1.0.0.tar.gz", "has_sig": true, "md5_digest": "4386fc179349e2bbf725b59f68e61728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4147, "upload_time": "2018-05-19T21:55:52", "upload_time_iso_8601": "2018-05-19T21:55:52.532694Z", "url": "https://files.pythonhosted.org/packages/9b/1d/737e7a6713f9b6f099c0225b899758fec548608f5749185c2fe66208a433/django-collectdir-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:57 2020"}