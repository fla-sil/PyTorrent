{"info": {"author": "Mathijs de Bruin", "author_email": "mathijs@visualspace.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "==============\ndjango-url-sso\n==============\n\n.. image:: https://badge.fury.io/py/django-url-sso.png\n    :target: http://badge.fury.io/py/django-url-sso\n\n.. image:: https://secure.travis-ci.org/visualspace/django-url-sso.png?branch=master\n    :target: http://travis-ci.org/visualspace/django-url-sso\n\n.. image:: https://pypip.in/d/django-url-sso/badge.png\n        :target: https://crate.io/packages/django-url-sso?version=latest\n\nGenerate login URL's for unstandardized SSO systems.\n----------------------------------------------------\n\nWhat is it?\n===========\nWe all know it is better for single sign-on systems to make use of properly standardized, tested and known secure protocols. That it is bad practise to put login tokens in HTTP query parameters.\n\nHowever, sometimes things just aren't as you wish they would be. Bad API's are out there and are numerous. And sometimes, we cannot avoid having to talk to them. That's what this module is for:\n\n**It allows configurable plugins to generate login URL's and use a RequestContextProcessor to make them available in templates.**\n\nStatus\n======\nWell tested and stable, though documentation is still a work in progress.\n\nCompatibility\n=============\nTested to work with Django 1.4, 1.5 and 1.6 and Python 2.6 as well as 2.7.\n\nRequirements\n============\nPlease refer to `requirements.txt <http://github.com/visualspace/django-url-sso/blob/master/requirements.txt>`_\nfor an updated list of required packages.\n\nSettings\n========\nThere are two types of settigns in this package: common settings across plugins and plugin specifc settings. Currently the only common setting is `URL_SSO_PLUGINS` which lists the enabled plugins. Example::\n\n    URL_SSO_PLUGINS = [\n        'url_sso.plugins.intershift.intershift_plugin',\n        'url_sso.plugins.iprova.iprova_plugin'\n    ]\n\nAlso, be sure to enable the RequestContextProcessor if you want the URL's to be available in your template context (and you do)::\n\n    TEMPLATE_CONTEXT_PROCESSORS = [\n        ...\n        'url_sso.context_processors.login_urls'\n        ...\n    ]\n\nPlugins\n=======\nCurrently, SSO for two systems are implemented:\n\n* `Intershift <https://www.intershift.nl/>`_\n* `Infoland iProva <http://www.infoland.nl/producten/iprova>`_\n\nIntershift\n~~~~~~~~~~\nPlugin name: `url_sso.plugins.intershift.intershift_plugin`\n\nFor each configured site in `sites` (see below), this plugin makes a URL available by the following name::\n\n    `INTERSHIFT_<SITENAME>_SSO_URL`\n\nSettings\n********\n\nExample settings::\n\n    URL_SSO_INTERSHIFT = {\n        # Secret key as specified by Intershift\n        'secret': '12345678',\n        # Sites enabled for SSO\n        'sites': {\n            'site1': {\n                # Users never have access to site1\n                'has_access': lambda request: False,\n                'url': 'https://customer1.intershift.nl/site1/cust/singlesignon.asp',\n                'has_access': lambda request: request.user.groups.filter(name='some_group').exists()\n            },\n            'site2': {\n                # Users always have acces to site2\n                'has_access': lambda request: True,\n                'url': 'https://customer1.intershift.nl/site2/cust/singlesignon.asp',\n            },\n            'site3': {\n                # No explicit access rules; same result as site2\n                'url': 'https://customer1.intershift.nl/site3/cust/singlesignon.asp',\n            },\n        },\n        # Key expiration in seconds, use one day here\n        'key_expiration': 86400\n    }\n\n\nInfoland iProva\n~~~~~~~~~~~~~~~\nPlugin name: `url_sso.plugins.iprova.iprova_plugin`\n\nThis plugin makes the following login URL's available, depending on which services are configured in the `services` setting below:\n\n* `IPROVA_MANAGEMENT_SSO_URL`\n* `IPROVA_IDOCUMENT_SSO_URL`\n* `IPROVA_IPORTAL_SSO_URL`\n* `IPROVA_ITASK_SSO_URL`\n\n\nSettings\n********\n\nExample settings::\n\n    URL_SSO_IPROVA = iprova_settings = {\n        # Service root URL\n        'root_url': 'http://intranet.organisation.com/',\n\n        # Services available for SSO\n        'services': ('management', 'idocument', 'iportal', 'itask'),\n\n        # Key expiration in seconds, use one hour here\n        'key_expiration': 3600,\n\n        'application_id': 'SharepointIntranet_Production',\n\n        'has_access': lambda request, service: request.user.groups.filter(name='some_group').exists()\n    }\n\n\nTests\n==========\nTests for pull req's and the master branch are automatically run through\n`Travis CI <http://travis-ci.org/visualspace/django-url-sso>`_.\n\nLicense\n=======\nThis application is released\nunder the GNU Affero General Public License version 3.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/visualspace/django-url-sso/", "keywords": null, "license": "AGPL", "maintainer": null, "maintainer_email": null, "name": "django-url-sso", "package_url": "https://pypi.org/project/django-url-sso/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-url-sso/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/visualspace/django-url-sso/"}, "release_url": "https://pypi.org/project/django-url-sso/0.9/", "requires_dist": null, "requires_python": null, "summary": "Generate login URL's for unstandardized SSO systems.", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/django-url-sso\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-url-sso.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8003e21054c0fd67b9df6c6bc631e35e82e4e810/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d75726c2d73736f2e706e67\"></a>\n<a href=\"http://travis-ci.org/visualspace/django-url-sso\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/visualspace/django-url-sso.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2267fba4f4ab34b8ff5c711da50232b0f8552d5/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f76697375616c73706163652f646a616e676f2d75726c2d73736f2e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://crate.io/packages/django-url-sso?version=latest\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/django-url-sso/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d075d42e908efc3ae5055532cc95382982fa0176/68747470733a2f2f70797069702e696e2f642f646a616e676f2d75726c2d73736f2f62616467652e706e67\"></a>\n<div id=\"generate-login-url-s-for-unstandardized-sso-systems\">\n<h2>Generate login URL\u2019s for unstandardized SSO systems.</h2>\n<div id=\"what-is-it\">\n<h3>What is it?</h3>\n<p>We all know it is better for single sign-on systems to make use of properly standardized, tested and known secure protocols. That it is bad practise to put login tokens in HTTP query parameters.</p>\n<p>However, sometimes things just aren\u2019t as you wish they would be. Bad API\u2019s are out there and are numerous. And sometimes, we cannot avoid having to talk to them. That\u2019s what this module is for:</p>\n<p><strong>It allows configurable plugins to generate login URL\u2019s and use a RequestContextProcessor to make them available in templates.</strong></p>\n</div>\n<div id=\"status\">\n<h3>Status</h3>\n<p>Well tested and stable, though documentation is still a work in progress.</p>\n</div>\n<div id=\"compatibility\">\n<h3>Compatibility</h3>\n<p>Tested to work with Django 1.4, 1.5 and 1.6 and Python 2.6 as well as 2.7.</p>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>Please refer to <a href=\"http://github.com/visualspace/django-url-sso/blob/master/requirements.txt\" rel=\"nofollow\">requirements.txt</a>\nfor an updated list of required packages.</p>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p>There are two types of settigns in this package: common settings across plugins and plugin specifc settings. Currently the only common setting is <cite>URL_SSO_PLUGINS</cite> which lists the enabled plugins. Example:</p>\n<pre>URL_SSO_PLUGINS = [\n    'url_sso.plugins.intershift.intershift_plugin',\n    'url_sso.plugins.iprova.iprova_plugin'\n]\n</pre>\n<p>Also, be sure to enable the RequestContextProcessor if you want the URL\u2019s to be available in your template context (and you do):</p>\n<pre>TEMPLATE_CONTEXT_PROCESSORS = [\n    ...\n    'url_sso.context_processors.login_urls'\n    ...\n]\n</pre>\n</div>\n<div id=\"plugins\">\n<h3>Plugins</h3>\n<p>Currently, SSO for two systems are implemented:</p>\n<ul>\n<li><a href=\"https://www.intershift.nl/\" rel=\"nofollow\">Intershift</a></li>\n<li><a href=\"http://www.infoland.nl/producten/iprova\" rel=\"nofollow\">Infoland iProva</a></li>\n</ul>\n<div id=\"id1\">\n<h4>Intershift</h4>\n<p>Plugin name: <cite>url_sso.plugins.intershift.intershift_plugin</cite></p>\n<p>For each configured site in <cite>sites</cite> (see below), this plugin makes a URL available by the following name:</p>\n<pre>`INTERSHIFT_&lt;SITENAME&gt;_SSO_URL`\n</pre>\n<div id=\"id2\">\n<h5>Settings</h5>\n<p>Example settings:</p>\n<pre>URL_SSO_INTERSHIFT = {\n    # Secret key as specified by Intershift\n    'secret': '12345678',\n    # Sites enabled for SSO\n    'sites': {\n        'site1': {\n            # Users never have access to site1\n            'has_access': lambda request: False,\n            'url': 'https://customer1.intershift.nl/site1/cust/singlesignon.asp',\n            'has_access': lambda request: request.user.groups.filter(name='some_group').exists()\n        },\n        'site2': {\n            # Users always have acces to site2\n            'has_access': lambda request: True,\n            'url': 'https://customer1.intershift.nl/site2/cust/singlesignon.asp',\n        },\n        'site3': {\n            # No explicit access rules; same result as site2\n            'url': 'https://customer1.intershift.nl/site3/cust/singlesignon.asp',\n        },\n    },\n    # Key expiration in seconds, use one day here\n    'key_expiration': 86400\n}\n</pre>\n</div>\n</div>\n<div id=\"id3\">\n<h4>Infoland iProva</h4>\n<p>Plugin name: <cite>url_sso.plugins.iprova.iprova_plugin</cite></p>\n<p>This plugin makes the following login URL\u2019s available, depending on which services are configured in the <cite>services</cite> setting below:</p>\n<ul>\n<li><cite>IPROVA_MANAGEMENT_SSO_URL</cite></li>\n<li><cite>IPROVA_IDOCUMENT_SSO_URL</cite></li>\n<li><cite>IPROVA_IPORTAL_SSO_URL</cite></li>\n<li><cite>IPROVA_ITASK_SSO_URL</cite></li>\n</ul>\n<div id=\"id4\">\n<h5>Settings</h5>\n<p>Example settings:</p>\n<pre>URL_SSO_IPROVA = iprova_settings = {\n    # Service root URL\n    'root_url': 'http://intranet.organisation.com/',\n\n    # Services available for SSO\n    'services': ('management', 'idocument', 'iportal', 'itask'),\n\n    # Key expiration in seconds, use one hour here\n    'key_expiration': 3600,\n\n    'application_id': 'SharepointIntranet_Production',\n\n    'has_access': lambda request, service: request.user.groups.filter(name='some_group').exists()\n}\n</pre>\n</div>\n</div>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>Tests for pull req\u2019s and the master branch are automatically run through\n<a href=\"http://travis-ci.org/visualspace/django-url-sso\" rel=\"nofollow\">Travis CI</a>.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>This application is released\nunder the GNU Affero General Public License version 3.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 996046, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "7197045705e7416b0e9be51621025030", "sha256": "1f2ee14a6e9711cc4caed8660d1665564e004ade54a8aa7e81584bb77f9da73d"}, "downloads": -1, "filename": "django_url_sso-0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7197045705e7416b0e9be51621025030", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 43665, "upload_time": "2014-02-10T10:48:05", "upload_time_iso_8601": "2014-02-10T10:48:05.386370Z", "url": "https://files.pythonhosted.org/packages/4a/9e/a236de96d9a7aee9ad810411658d9bb48aeba0fc7648521fa6748075d952/django_url_sso-0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ab7184650cf1fcbdab6bbce584316a9", "sha256": "2632c38fc113c985170237895c017676d0f0bd9500459f880a8493f22d6aba42"}, "downloads": -1, "filename": "django-url-sso-0.9.tar.gz", "has_sig": false, "md5_digest": "7ab7184650cf1fcbdab6bbce584316a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37783, "upload_time": "2014-02-10T10:47:57", "upload_time_iso_8601": "2014-02-10T10:47:57.729827Z", "url": "https://files.pythonhosted.org/packages/96/68/56d0741eb47078d4a3c1f231e927045504908bb69c2e451269ef23785f09/django-url-sso-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7197045705e7416b0e9be51621025030", "sha256": "1f2ee14a6e9711cc4caed8660d1665564e004ade54a8aa7e81584bb77f9da73d"}, "downloads": -1, "filename": "django_url_sso-0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7197045705e7416b0e9be51621025030", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 43665, "upload_time": "2014-02-10T10:48:05", "upload_time_iso_8601": "2014-02-10T10:48:05.386370Z", "url": "https://files.pythonhosted.org/packages/4a/9e/a236de96d9a7aee9ad810411658d9bb48aeba0fc7648521fa6748075d952/django_url_sso-0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ab7184650cf1fcbdab6bbce584316a9", "sha256": "2632c38fc113c985170237895c017676d0f0bd9500459f880a8493f22d6aba42"}, "downloads": -1, "filename": "django-url-sso-0.9.tar.gz", "has_sig": false, "md5_digest": "7ab7184650cf1fcbdab6bbce584316a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37783, "upload_time": "2014-02-10T10:47:57", "upload_time_iso_8601": "2014-02-10T10:47:57.729827Z", "url": "https://files.pythonhosted.org/packages/96/68/56d0741eb47078d4a3c1f231e927045504908bb69c2e451269ef23785f09/django-url-sso-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:11 2020"}