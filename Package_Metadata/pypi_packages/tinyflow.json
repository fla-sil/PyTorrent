{"info": {"author": "Kevin Wurster", "author_email": "wursterk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries", "Topic :: Text Processing", "Topic :: Utilities"], "description": "========\ntinyflow\n========\n\nExperiments in data flow programming.\n\n.. image:: https://travis-ci.org/geowurster/tinyflow.svg?branch=master\n    :target: https://travis-ci.org/geowurster/tinyflow?branch=master\n\n.. image:: https://coveralls.io/repos/geowurster/tinyflow/badge.svg?branch=master\n    :target: https://coveralls.io/r/geowurster/tinyflow?branch=master\n\nAfter some experimentation, Apache Beam's Python SDK got the API right.\nUse that instead.\n\n\nStandard Word Count Example\n===========================\n\nGrab the 5 most common words in ``LICENSE.txt``\n\n.. code-block:: python\n\n    from collections import Counter\n\n    from tinyflow.serial import ops, Pipeline\n\n\n    pipe = Pipeline() \\\n        | \"Split line into words\" >> ops.flatmap(lambda x: x.lower().split()) \\\n        | \"Remove empty lines\" >> ops.filter(bool) \\\n        | \"Produce the 5 most common words\" >> ops.counter(5) \\\n        | \"Sort by frequency desc\" >> ops.sort(key=lambda x: x[1], reverse=True)\n\n    with open('LICENSE.txt') as f:\n        results = dict(pipe(f))\n\n\nUsing only Python's builtins:\n\n.. code-block:: python\n\n    from collections import Counter\n    import itertools as it\n\n    with open('LICENSE.txt') as f:\n        lines = (line.lower().split() for line in f)\n        words = it.chain.from_iterable(lines)\n        count = Counter(words)\n        results = dict(count.most_common(10))\n\n\nDeveloping\n==========\n\n.. code-block:: console\n\n    $ git clone https://github.com/geowurster/tinyflow.git\n    $ cd tinyflow\n    $ pip install -e .\\[all\\]\n    $ pytest --cov tinyflow --cov-report term-missing\n\n\nLicense\n=======\n\nSee ``LICENSE.txt``\n\n\nChangelog\n=========\n\nSee ``CHANGES.md``\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/geowurster/tinyflow", "keywords": "experimental memory data flow", "license": "New BSD", "maintainer": "", "maintainer_email": "", "name": "tinyflow", "package_url": "https://pypi.org/project/tinyflow/", "platform": "", "project_url": "https://pypi.org/project/tinyflow/", "project_urls": {"Homepage": "https://github.com/geowurster/tinyflow"}, "release_url": "https://pypi.org/project/tinyflow/0.1/", "requires_dist": ["coveralls; extra == 'all'", "pytest (>=3); extra == 'all'", "pytest-cov; extra == 'all'", "coveralls; extra == 'dev'", "pytest (>=3); extra == 'dev'", "pytest-cov; extra == 'dev'"], "requires_python": "", "summary": "Experimental in-memory data flow pipelines.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Experiments in data flow programming.</p>\n<a href=\"https://travis-ci.org/geowurster/tinyflow?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/geowurster/tinyflow.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7100f687de0852237b4a0ba41d3003c5aedd7bc5/68747470733a2f2f7472617669732d63692e6f72672f67656f777572737465722f74696e79666c6f772e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/geowurster/tinyflow?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/geowurster/tinyflow/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0c3cde6ec5ce0087048e98a1da7d2623a4183e6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f67656f777572737465722f74696e79666c6f772f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>After some experimentation, Apache Beam\u2019s Python SDK got the API right.\nUse that instead.</p>\n<div id=\"standard-word-count-example\">\n<h2>Standard Word Count Example</h2>\n<p>Grab the 5 most common words in <tt>LICENSE.txt</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">Counter</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tinyflow.serial</span> <span class=\"kn\">import</span> <span class=\"n\">ops</span><span class=\"p\">,</span> <span class=\"n\">Pipeline</span>\n\n\n<span class=\"n\">pipe</span> <span class=\"o\">=</span> <span class=\"n\">Pipeline</span><span class=\"p\">()</span> \\\n    <span class=\"o\">|</span> <span class=\"s2\">\"Split line into words\"</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">flatmap</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">())</span> \\\n    <span class=\"o\">|</span> <span class=\"s2\">\"Remove empty lines\"</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">)</span> \\\n    <span class=\"o\">|</span> <span class=\"s2\">\"Produce the 5 most common words\"</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">counter</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> \\\n    <span class=\"o\">|</span> <span class=\"s2\">\"Sort by frequency desc\"</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'LICENSE.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">))</span>\n</pre>\n<p>Using only Python\u2019s builtins:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">Counter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">itertools</span> <span class=\"k\">as</span> <span class=\"nn\">it</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'LICENSE.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">)</span>\n    <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">it</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">from_iterable</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">)</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">.</span><span class=\"n\">most_common</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<pre><span class=\"gp\">$</span> git clone https://github.com/geowurster/tinyflow.git\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> tinyflow\n<span class=\"gp\">$</span> pip install -e .<span class=\"se\">\\[</span>all<span class=\"se\">\\]</span>\n<span class=\"gp\">$</span> pytest --cov tinyflow --cov-report term-missing\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <tt>LICENSE.txt</tt></p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See <tt>CHANGES.md</tt></p>\n</div>\n\n          </div>"}, "last_serial": 2770639, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e9b473ed24f4d464b466f58a80d5d83e", "sha256": "5cdbf7f936f867abb44814d197d262e9429d786c25d66b8f1743cb4160fcb51f"}, "downloads": -1, "filename": "tinyflow-0.1.macosx-10.12-x86_64.tar.gz", "has_sig": false, "md5_digest": "e9b473ed24f4d464b466f58a80d5d83e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13108, "upload_time": "2017-04-11T02:24:35", "upload_time_iso_8601": "2017-04-11T02:24:35.009358Z", "url": "https://files.pythonhosted.org/packages/cc/b7/58adbe143cabeb24162a487b974339d8f33c2594d67490c7dca1db05372a/tinyflow-0.1.macosx-10.12-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f11c7b3d63cadf1686de8df06f414a69", "sha256": "90c71e8d245725b418ee3528b455d1f3626b7432d1560e937205f3a70e150f1c"}, "downloads": -1, "filename": "tinyflow-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f11c7b3d63cadf1686de8df06f414a69", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10946, "upload_time": "2017-04-11T02:24:33", "upload_time_iso_8601": "2017-04-11T02:24:33.925191Z", "url": "https://files.pythonhosted.org/packages/12/2f/2fc055de29348a25111b6fce588a9ea013af8f5becb84aa606dbf3f47700/tinyflow-0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9b473ed24f4d464b466f58a80d5d83e", "sha256": "5cdbf7f936f867abb44814d197d262e9429d786c25d66b8f1743cb4160fcb51f"}, "downloads": -1, "filename": "tinyflow-0.1.macosx-10.12-x86_64.tar.gz", "has_sig": false, "md5_digest": "e9b473ed24f4d464b466f58a80d5d83e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13108, "upload_time": "2017-04-11T02:24:35", "upload_time_iso_8601": "2017-04-11T02:24:35.009358Z", "url": "https://files.pythonhosted.org/packages/cc/b7/58adbe143cabeb24162a487b974339d8f33c2594d67490c7dca1db05372a/tinyflow-0.1.macosx-10.12-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f11c7b3d63cadf1686de8df06f414a69", "sha256": "90c71e8d245725b418ee3528b455d1f3626b7432d1560e937205f3a70e150f1c"}, "downloads": -1, "filename": "tinyflow-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f11c7b3d63cadf1686de8df06f414a69", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10946, "upload_time": "2017-04-11T02:24:33", "upload_time_iso_8601": "2017-04-11T02:24:33.925191Z", "url": "https://files.pythonhosted.org/packages/12/2f/2fc055de29348a25111b6fce588a9ea013af8f5becb84aa606dbf3f47700/tinyflow-0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:53:03 2020"}