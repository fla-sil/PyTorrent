{"info": {"author": "DSI Labs", "author_email": "support@dsilabs.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# README\n\n[![Build Status](https://travis-ci.org/dsilabs/zoom.svg?branch=master)](https://travis-ci.org/dsilabs/zoom)\n[![Coverage Status](https://coveralls.io/repos/github/dsilabs/zoom/badge.svg?branch=master)](https://coveralls.io/github/dsilabs/zoom?branch=master)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nZoomFoundry is a dynamic Python Web framework written specifically for Python 3 that\npromotes modularity and rapid prototyping for building and maintaining useful\nweb sites quickly and easily.\n\n\n## Requirements\nZoomFoundry requires Python 3 and MySQL to run, along with a host of other\n3rd party library requirements listed in the requirements.txt file.  It is\ncurrently tested and used on various flavours of GNU/Linux, Mac and Windows.\n\n\n## Getting started with ZoomFoundry\nThe best way to get started with ZoomFoundry is to try it.  By following along with\nthis guide step by step you'll create a simple blog ZoomFoundry app.  Before you can\nstart building the app, you need to make sure that you have ZoomFoundry installed.\n\n\n### Installing ZoomFoundry\nOpen up a terminal window and follow along with the following steps.  The\ndollar sign $ in the following examples is the command prompt.\n\nZoomFoundry is a Python 3 framework so you'll need to have Python 3 installed to run it.  We\nrecommend the latest version which you can download from [python.org](https://www.python.org/downloads/).\n\nAll set?  Okay, here we go!\n\n1. Install ZoomFoundry\n    ```shell\n    $ pip install ZoomFoundry\n    ```\n\n    This will install a new Python package and corresponding CLI command; `zoom`.\n\n1. Once you have ZoomFoundry installed, you'll first want to create and populate a\n    Zoom *instance directory*.<br><br> Zoom is multi-tenant, meaning it can serve \n    multiple sites at the same time; an instance directory contains a set of Zoom \n    *sites* and resources shared between them. Run:\n    ```shell\n    $ zoom init ~/my-zoom-instance\n    ```\n\n    This will walk you through setting up your instance, including creating a\n    default site and database.\n\n    *Don't like wizards?* Every option Zoom commands prompt you with have a\n    corresponding command line option: see the help with `zoom -h`.\n\n1. Serve the created instance. <br><br>\n    Run the following to start the built-in server, pointed at the instance you just\n    created.\n    ```shell\n    $ zoom serve -p 80 ~/my-zoom-instance\n    ```\n\n### Creating the Blog App\nTo create a new app with Zoom, just run:\n```shell\nzoom new app blog ~/my-zoom-instance\n```\n\n*Don't mind a `cd`?* Zoom commands only require you to specify the path to an instance\ndirectory if you aren't already inside one. You could replace the above with:\n```shell\ncd ~/my-zoom-instance && zoom new app blog\n```\n\nYou've just created an app called `blog` at `~/my-zoom-instance/apps/blog`. Take a second to check it out.\nTo see the app in action, check out `http://localhost/blog` after running:\n```shell\nzoom serve -p 80 ~/my-zoom-instance\n```\n\nThis is the most basic app, which basically takes a request object as the sole parameter and returns a response, in this case, a page response.\n\nTo do a more advanced app, Zoom provides an App class that handles basic routing, other services, and calls other parts of your app.  To use it just create an instance of it in your `app.py` file, like this:\n\n```python\n\"\"\"\n    zoom app v 0.2\n\"\"\"\n\nimport zoom\n\napp = zoom.App()\n```\n\nNow when you run your app you should get a \"Page Not Found\" status 404 page.  This is happening because we haven't provided any pages for the app.  To do that create an `index.py` file to provided the app content.\n\nWith our blog app, we're going to use a Zoom collection.  A Zoom collection is a collection of any type of field related data that you would like to store.  It provides all the things you would typically expect of a basic data collection app including browsing records, searching, editing and displaying information.\n\nIn our case, we'd like to store blog posts.  For this example, for each blog entry we'll store a name, a description, the blog post body, and a published date.\n\nWe start by defining a function that returns the fields we want to use in our app.  We then pass that function to the Collection class which will use the fields to create a collection.\n\n```python\n\"\"\"\n    blog index v 0.1\n\"\"\"\n\nimport zoom\nimport zoom.fields as f\n\ndef blog_fields():\n    return f.Fields(\n    f.TextField('Name'),\n    f.MemoField('Description'),\n    f.EditField('Body'),\n    f.DateField('Date Published'),\n    )\n\nmain = zoom.collect.Collection(\n    blog_fields,\n    url=zoom.system.app.url,\n)\n```\n\nNow, when you run your app.  You should see a list where you can create blog entries.\n\nNow, let's say, you realized you would like to add an Author field.  Just add the field to the list and re-run your app.  Like this:\n\n```python\n\"\"\"\n    blog index v 0.1\n\"\"\"\n\nimport zoom\nimport zoom.fields as f\n\ndef blog_fields():\n    return f.Fields(\n    f.TextField('Name'),\n    f.TextField('Author'),\n    f.MemoField('Description'),\n    f.EditField('Body'),\n    f.DateField('Date Published'),\n    )\n\nmain = zoom.collect.Collection(\n    blog_fields,\n    url=zoom.system.app.url,\n)\n```\n\nNow, run it and try adding some data.\n\nWhat, what?!  Where's the data model step?  How do I create my tables?!  Where is my data stored?  What about migrations?\n\nFor now, Zoom will handle all of this for you.  Rest assured, your data is being stored in the MySQL database, but it's being stored in an entity store with a dynamic schema so you can add and remove fields from your collection at will and Zoom will just take care of it.\n\nZoom can use traditional tables as well, of course, but for prototyping and many other types of work a dynamic schema works very well.\n\nThat's as far as we'll go with the app right now.  In the future we'll provide more of the features people have come to expect from a blog app.\n\n\n## Contributing\nTo contribute your own code to Zoom you'll need to setup a development\nenvironment.\n\n### Setting Up The Easy way\nThe simplest way to hack on Zoom is to use one of our\n[Vagrant boxes](https://github.com/dsilabs/vagrant-zoom) or\n[Docker containers](https://github.com/dsilabs/docker-zoom-tiny).\n\n### Setting Up The Hard Way\nIf you can't use the prepared boxes then the best way to do that is to look\nat the Dockerfile or Vagrantfile of the boxes and see how those are set up.\n\n### Testing\nOnce your box is setup you can run the tests by switching to the zoom directory\nand running nosetests.\n```shell\n$ nosetests\n```\n\nThis will run the unittests, doctests and sidetests.  If your box is not\nsetup for sidetests (which uses webdriver, and various other libraries) you\ncan skip them by specifying only the other directories for tests.\n```shell\n$ nosetests zoom tests/unittests\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dsilabs/zoom", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ZoomFoundry", "package_url": "https://pypi.org/project/ZoomFoundry/", "platform": "", "project_url": "https://pypi.org/project/ZoomFoundry/", "project_urls": {"Homepage": "https://github.com/dsilabs/zoom"}, "release_url": "https://pypi.org/project/ZoomFoundry/6.4.0/", "requires_dist": ["PyMySQL", "bcrypt (>=1.1.1)", "passlib (>=1.7.1)", "markdown (>=2.6.1)", "Pillow (>=1.0)", "faker", "docopt", "werkzeug", "croniter", "pypugjs (>=5.9.1)", "libsass (>=0.19.4)"], "requires_python": "", "summary": "A dynamic Web Framework that promotes modularity and rapid prototyping", "version": "6.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>README</h1>\n<p><a href=\"https://travis-ci.org/dsilabs/zoom\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df6ef2f01c56b229456d4892001c18a1fdd22746/68747470733a2f2f7472617669732d63692e6f72672f6473696c6162732f7a6f6f6d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/dsilabs/zoom?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59e7b586cdc56bfb85e674d03da6f36a0f655939/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6473696c6162732f7a6f6f6d2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>ZoomFoundry is a dynamic Python Web framework written specifically for Python 3 that\npromotes modularity and rapid prototyping for building and maintaining useful\nweb sites quickly and easily.</p>\n<h2>Requirements</h2>\n<p>ZoomFoundry requires Python 3 and MySQL to run, along with a host of other\n3rd party library requirements listed in the requirements.txt file.  It is\ncurrently tested and used on various flavours of GNU/Linux, Mac and Windows.</p>\n<h2>Getting started with ZoomFoundry</h2>\n<p>The best way to get started with ZoomFoundry is to try it.  By following along with\nthis guide step by step you'll create a simple blog ZoomFoundry app.  Before you can\nstart building the app, you need to make sure that you have ZoomFoundry installed.</p>\n<h3>Installing ZoomFoundry</h3>\n<p>Open up a terminal window and follow along with the following steps.  The\ndollar sign $ in the following examples is the command prompt.</p>\n<p>ZoomFoundry is a Python 3 framework so you'll need to have Python 3 installed to run it.  We\nrecommend the latest version which you can download from <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">python.org</a>.</p>\n<p>All set?  Okay, here we go!</p>\n<ol>\n<li>\n<p>Install ZoomFoundry</p>\n<pre>$ pip install ZoomFoundry\n</pre>\n<p>This will install a new Python package and corresponding CLI command; <code>zoom</code>.</p>\n</li>\n<li>\n<p>Once you have ZoomFoundry installed, you'll first want to create and populate a\nZoom <em>instance directory</em>.<br><br> Zoom is multi-tenant, meaning it can serve\nmultiple sites at the same time; an instance directory contains a set of Zoom\n<em>sites</em> and resources shared between them. Run:</p>\n<pre>$ zoom init ~/my-zoom-instance\n</pre>\n<p>This will walk you through setting up your instance, including creating a\ndefault site and database.</p>\n<p><em>Don't like wizards?</em> Every option Zoom commands prompt you with have a\ncorresponding command line option: see the help with <code>zoom -h</code>.</p>\n</li>\n<li>\n<p>Serve the created instance. <br><br>\nRun the following to start the built-in server, pointed at the instance you just\ncreated.</p>\n<pre>$ zoom serve -p <span class=\"m\">80</span> ~/my-zoom-instance\n</pre>\n</li>\n</ol>\n<h3>Creating the Blog App</h3>\n<p>To create a new app with Zoom, just run:</p>\n<pre>zoom new app blog ~/my-zoom-instance\n</pre>\n<p><em>Don't mind a <code>cd</code>?</em> Zoom commands only require you to specify the path to an instance\ndirectory if you aren't already inside one. You could replace the above with:</p>\n<pre><span class=\"nb\">cd</span> ~/my-zoom-instance <span class=\"o\">&amp;&amp;</span> zoom new app blog\n</pre>\n<p>You've just created an app called <code>blog</code> at <code>~/my-zoom-instance/apps/blog</code>. Take a second to check it out.\nTo see the app in action, check out <code>http://localhost/blog</code> after running:</p>\n<pre>zoom serve -p <span class=\"m\">80</span> ~/my-zoom-instance\n</pre>\n<p>This is the most basic app, which basically takes a request object as the sole parameter and returns a response, in this case, a page response.</p>\n<p>To do a more advanced app, Zoom provides an App class that handles basic routing, other services, and calls other parts of your app.  To use it just create an instance of it in your <code>app.py</code> file, like this:</p>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    zoom app v 0.2</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">zoom</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">zoom</span><span class=\"o\">.</span><span class=\"n\">App</span><span class=\"p\">()</span>\n</pre>\n<p>Now when you run your app you should get a \"Page Not Found\" status 404 page.  This is happening because we haven't provided any pages for the app.  To do that create an <code>index.py</code> file to provided the app content.</p>\n<p>With our blog app, we're going to use a Zoom collection.  A Zoom collection is a collection of any type of field related data that you would like to store.  It provides all the things you would typically expect of a basic data collection app including browsing records, searching, editing and displaying information.</p>\n<p>In our case, we'd like to store blog posts.  For this example, for each blog entry we'll store a name, a description, the blog post body, and a published date.</p>\n<p>We start by defining a function that returns the fields we want to use in our app.  We then pass that function to the Collection class which will use the fields to create a collection.</p>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    blog index v 0.1</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">zoom</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zoom.fields</span> <span class=\"k\">as</span> <span class=\"nn\">f</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">blog_fields</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">Fields</span><span class=\"p\">(</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"s1\">'Name'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">MemoField</span><span class=\"p\">(</span><span class=\"s1\">'Description'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">EditField</span><span class=\"p\">(</span><span class=\"s1\">'Body'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"s1\">'Date Published'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"n\">zoom</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"o\">.</span><span class=\"n\">Collection</span><span class=\"p\">(</span>\n    <span class=\"n\">blog_fields</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">zoom</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Now, when you run your app.  You should see a list where you can create blog entries.</p>\n<p>Now, let's say, you realized you would like to add an Author field.  Just add the field to the list and re-run your app.  Like this:</p>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    blog index v 0.1</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">zoom</span>\n<span class=\"kn\">import</span> <span class=\"nn\">zoom.fields</span> <span class=\"k\">as</span> <span class=\"nn\">f</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">blog_fields</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">Fields</span><span class=\"p\">(</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"s1\">'Name'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"s1\">'Author'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">MemoField</span><span class=\"p\">(</span><span class=\"s1\">'Description'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">EditField</span><span class=\"p\">(</span><span class=\"s1\">'Body'</span><span class=\"p\">),</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"s1\">'Date Published'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"n\">zoom</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"o\">.</span><span class=\"n\">Collection</span><span class=\"p\">(</span>\n    <span class=\"n\">blog_fields</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">zoom</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Now, run it and try adding some data.</p>\n<p>What, what?!  Where's the data model step?  How do I create my tables?!  Where is my data stored?  What about migrations?</p>\n<p>For now, Zoom will handle all of this for you.  Rest assured, your data is being stored in the MySQL database, but it's being stored in an entity store with a dynamic schema so you can add and remove fields from your collection at will and Zoom will just take care of it.</p>\n<p>Zoom can use traditional tables as well, of course, but for prototyping and many other types of work a dynamic schema works very well.</p>\n<p>That's as far as we'll go with the app right now.  In the future we'll provide more of the features people have come to expect from a blog app.</p>\n<h2>Contributing</h2>\n<p>To contribute your own code to Zoom you'll need to setup a development\nenvironment.</p>\n<h3>Setting Up The Easy way</h3>\n<p>The simplest way to hack on Zoom is to use one of our\n<a href=\"https://github.com/dsilabs/vagrant-zoom\" rel=\"nofollow\">Vagrant boxes</a> or\n<a href=\"https://github.com/dsilabs/docker-zoom-tiny\" rel=\"nofollow\">Docker containers</a>.</p>\n<h3>Setting Up The Hard Way</h3>\n<p>If you can't use the prepared boxes then the best way to do that is to look\nat the Dockerfile or Vagrantfile of the boxes and see how those are set up.</p>\n<h3>Testing</h3>\n<p>Once your box is setup you can run the tests by switching to the zoom directory\nand running nosetests.</p>\n<pre>$ nosetests\n</pre>\n<p>This will run the unittests, doctests and sidetests.  If your box is not\nsetup for sidetests (which uses webdriver, and various other libraries) you\ncan skip them by specifying only the other directories for tests.</p>\n<pre>$ nosetests zoom tests/unittests\n</pre>\n\n          </div>"}, "last_serial": 7069022, "releases": {"6.0.1": [{"comment_text": "", "digests": {"md5": "13f83f8f60c5bf42b45f0d4d47a70a61", "sha256": "4a27845951f397b22dab45a59ed66a28a2a082b194fdabef8f568172828b8253"}, "downloads": -1, "filename": "ZoomFoundry-6.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "13f83f8f60c5bf42b45f0d4d47a70a61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 145028, "upload_time": "2019-11-10T07:51:01", "upload_time_iso_8601": "2019-11-10T07:51:01.362434Z", "url": "https://files.pythonhosted.org/packages/e5/6e/628b3085a8088431b5bd23b52f925bf1c7259b76cd5d32251f944718c22b/ZoomFoundry-6.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "152dad6ef904401844e0a6e256e8266c", "sha256": "48c8406357b8c025adab20868f19abc56c5e61f7b9fc7c58045ef72b7fdf1814"}, "downloads": -1, "filename": "ZoomFoundry-6.0.1.tar.gz", "has_sig": false, "md5_digest": "152dad6ef904401844e0a6e256e8266c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125338, "upload_time": "2019-11-10T07:51:04", "upload_time_iso_8601": "2019-11-10T07:51:04.011926Z", "url": "https://files.pythonhosted.org/packages/e5/b8/fb2230b3fa8e12f12fe0440cf1aab0eeef4cc302bdc951246bd25beadbc1/ZoomFoundry-6.0.1.tar.gz", "yanked": false}], "6.0.3": [{"comment_text": "", "digests": {"md5": "cedcddcc0928961262328e8cf9f383fd", "sha256": "640b081779961f03dbc17912488a2e23e000e63550a7ed19eda5d47082b9db30"}, "downloads": -1, "filename": "ZoomFoundry-6.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cedcddcc0928961262328e8cf9f383fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 154779, "upload_time": "2019-11-10T20:32:54", "upload_time_iso_8601": "2019-11-10T20:32:54.726498Z", "url": "https://files.pythonhosted.org/packages/cc/a6/cd6b1a97b35207aa234d12d19f6b507a1760336ccc0f290c7680decd9ce2/ZoomFoundry-6.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d53acf4166087436bb6042235b84725f", "sha256": "44f87506e178d31b185553bcfa2b3b889bf7b94546c561f970e5e0f232dca1df"}, "downloads": -1, "filename": "ZoomFoundry-6.0.3.tar.gz", "has_sig": false, "md5_digest": "d53acf4166087436bb6042235b84725f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133567, "upload_time": "2019-11-10T20:32:56", "upload_time_iso_8601": "2019-11-10T20:32:56.871323Z", "url": "https://files.pythonhosted.org/packages/9b/8d/3cf62722b55e3c1cac4d5c418629b6c65a6a8005699b6ce8388aeb8ccd7c/ZoomFoundry-6.0.3.tar.gz", "yanked": false}], "6.0.4": [{"comment_text": "", "digests": {"md5": "a9948284989f0dce02f4d5e0c4cbaf7a", "sha256": "a6922ce3c71621545769704abb82fc8878fd1f5c83f8b7e2e217448eb412a98d"}, "downloads": -1, "filename": "ZoomFoundry-6.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a9948284989f0dce02f4d5e0c4cbaf7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 165685, "upload_time": "2019-11-11T09:52:37", "upload_time_iso_8601": "2019-11-11T09:52:37.069845Z", "url": "https://files.pythonhosted.org/packages/aa/7a/e96fae2981ad0dd3bd0e51475d6dfd2c439ee4aefd6d437a0976faa91c36/ZoomFoundry-6.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c1fd899e66dd4e5c467cdef6f1d6f85", "sha256": "199777f236e8624d2d5388cf3647f060be3bbf5960dc1fb175b2a79c6d6cdcb5"}, "downloads": -1, "filename": "ZoomFoundry-6.0.4.tar.gz", "has_sig": false, "md5_digest": "5c1fd899e66dd4e5c467cdef6f1d6f85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140514, "upload_time": "2019-11-11T09:52:38", "upload_time_iso_8601": "2019-11-11T09:52:38.951319Z", "url": "https://files.pythonhosted.org/packages/cf/7a/d636d1ba586470f5d70fa792e436bd5179df93c74f08a4f8959b92c5ffc2/ZoomFoundry-6.0.4.tar.gz", "yanked": false}], "6.0.5": [{"comment_text": "", "digests": {"md5": "2bff29faef4db51c9542ec3b16f27187", "sha256": "9aac1c39cd4d90e8b6a6cf42faf63fc985bfeff42cfedbd3b1cd84977c1b3780"}, "downloads": -1, "filename": "ZoomFoundry-6.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2bff29faef4db51c9542ec3b16f27187", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 166633, "upload_time": "2019-11-20T03:19:59", "upload_time_iso_8601": "2019-11-20T03:19:59.940395Z", "url": "https://files.pythonhosted.org/packages/c8/cc/3148198bafb0d6f8aa82655440a26536e0ca233932d18a5fe93366419e95/ZoomFoundry-6.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aab0929cf35170689c99d448c676aecc", "sha256": "45703f2fcfcb3671f758bf1a35cf41288353443bd0e2005a8dc8ae617ccb523d"}, "downloads": -1, "filename": "ZoomFoundry-6.0.5.tar.gz", "has_sig": false, "md5_digest": "aab0929cf35170689c99d448c676aecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141174, "upload_time": "2019-11-20T03:20:01", "upload_time_iso_8601": "2019-11-20T03:20:01.828491Z", "url": "https://files.pythonhosted.org/packages/b2/53/791de58466fe810645e22b850775cfeda945be75d9749f5e8c4d894149b9/ZoomFoundry-6.0.5.tar.gz", "yanked": false}], "6.1.0": [{"comment_text": "", "digests": {"md5": "8be3a648bc73a3bc59a5ce02cf4a153c", "sha256": "8503047ab61165a6017095f6ce137a9848aafd708af8bbd351e4833e564dc0a7"}, "downloads": -1, "filename": "ZoomFoundry-6.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8be3a648bc73a3bc59a5ce02cf4a153c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 244452, "upload_time": "2019-11-27T01:26:25", "upload_time_iso_8601": "2019-11-27T01:26:25.326477Z", "url": "https://files.pythonhosted.org/packages/62/9f/d77cc44357e508be5c967776a95246374b6bbe9c122af9ac920bfd547b7b/ZoomFoundry-6.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f39ddafeb86af7281610b63db000650f", "sha256": "b7e9ae5424d6828bef7ee68143444867d2f34fd118d8095978e6d6bd6e93a940"}, "downloads": -1, "filename": "ZoomFoundry-6.1.0.tar.gz", "has_sig": false, "md5_digest": "f39ddafeb86af7281610b63db000650f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 195610, "upload_time": "2019-11-27T01:26:27", "upload_time_iso_8601": "2019-11-27T01:26:27.123763Z", "url": "https://files.pythonhosted.org/packages/ee/e8/0f7bddbee45128f765c953dd66c45c8c44a960838fc9edb55709d10dea46/ZoomFoundry-6.1.0.tar.gz", "yanked": false}], "6.2.0": [{"comment_text": "", "digests": {"md5": "23a6d79357ab2f42b2f0a8fc80a294e8", "sha256": "3a7491137aa40cda0d43a68474dfdf9765aa3e305a04482f420922cd2ad3dff0"}, "downloads": -1, "filename": "ZoomFoundry-6.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "23a6d79357ab2f42b2f0a8fc80a294e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254006, "upload_time": "2020-01-07T17:49:51", "upload_time_iso_8601": "2020-01-07T17:49:51.878146Z", "url": "https://files.pythonhosted.org/packages/4e/df/81a9290765554c63992c3660b61b9d66b41297895f05a343db6a57c0422c/ZoomFoundry-6.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99477fd67e3ebe583e81f3c8736ed44b", "sha256": "6a887c98150de455333adedfe2c368ab09bcbbe252e8a66970d783976d55c80a"}, "downloads": -1, "filename": "ZoomFoundry-6.2.0.tar.gz", "has_sig": false, "md5_digest": "99477fd67e3ebe583e81f3c8736ed44b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203357, "upload_time": "2020-01-07T17:49:53", "upload_time_iso_8601": "2020-01-07T17:49:53.466783Z", "url": "https://files.pythonhosted.org/packages/53/8d/54379806359663c6a92c078da22ed14cdfbc066e577651eb829c9ff892bd/ZoomFoundry-6.2.0.tar.gz", "yanked": false}], "6.2.1": [{"comment_text": "", "digests": {"md5": "bd135519388c071c88f189a90a466ebc", "sha256": "7de509775dbd9c18ed3bb04b5689f25a20755f7d7c3f990b2212977b658e6de2"}, "downloads": -1, "filename": "ZoomFoundry-6.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bd135519388c071c88f189a90a466ebc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 938194, "upload_time": "2020-01-13T19:39:48", "upload_time_iso_8601": "2020-01-13T19:39:48.419800Z", "url": "https://files.pythonhosted.org/packages/df/d7/537c5f07e802fd622ad0c09f67774b5b9bc2430905cb83b54df4d415a4ef/ZoomFoundry-6.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a189fbce41de6d0a49e912263f1eed6", "sha256": "342979d1cb420d970828f5d1e05dfd6296822c6fd0e1e2c00fc43b7d95eae089"}, "downloads": -1, "filename": "ZoomFoundry-6.2.1.tar.gz", "has_sig": false, "md5_digest": "7a189fbce41de6d0a49e912263f1eed6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 841499, "upload_time": "2020-01-13T19:39:50", "upload_time_iso_8601": "2020-01-13T19:39:50.612142Z", "url": "https://files.pythonhosted.org/packages/da/7e/703d33a2cd0895abb04862c38edde1e6773db2caa446d5032e9f87df9125/ZoomFoundry-6.2.1.tar.gz", "yanked": false}], "6.3.2": [{"comment_text": "", "digests": {"md5": "34c3dae49c77277adb6734cc5999feeb", "sha256": "d499cee3f63ed121436277d8f4abd19baa825bd8aff0a2c70cc15199b9f146e5"}, "downloads": -1, "filename": "ZoomFoundry-6.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "34c3dae49c77277adb6734cc5999feeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1464599, "upload_time": "2020-04-11T21:07:47", "upload_time_iso_8601": "2020-04-11T21:07:47.824842Z", "url": "https://files.pythonhosted.org/packages/d0/b8/0f24f4b54c8dd3df6ee4c7b64845e46839928b0ae71fa6a4fc8f095eba78/ZoomFoundry-6.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57ce547c11d704b03b29ae31be4d3a45", "sha256": "9e0d6b347a6c3c5f96d4e51d989c0acdf9b4a50ac7809886076c5d8b8538fea0"}, "downloads": -1, "filename": "ZoomFoundry-6.3.2.tar.gz", "has_sig": false, "md5_digest": "57ce547c11d704b03b29ae31be4d3a45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1367234, "upload_time": "2020-04-11T21:07:49", "upload_time_iso_8601": "2020-04-11T21:07:49.707018Z", "url": "https://files.pythonhosted.org/packages/b5/72/86f99a1223b2cac9cbc42a44cd9d9188fc44e40c90d7f5eb33decb3fca0c/ZoomFoundry-6.3.2.tar.gz", "yanked": false}], "6.4.0": [{"comment_text": "", "digests": {"md5": "cdbc0096d3527043909f5f33f1a7bfac", "sha256": "8f28b9ebc50d30caaa0295499e5ce4f56830c5281d88370647e52334d8d0a20b"}, "downloads": -1, "filename": "ZoomFoundry-6.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cdbc0096d3527043909f5f33f1a7bfac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1467530, "upload_time": "2020-04-21T16:02:38", "upload_time_iso_8601": "2020-04-21T16:02:38.987353Z", "url": "https://files.pythonhosted.org/packages/0d/10/0be386532ba9702634360a251b6051ad194c53d3570867186fdb25402c63/ZoomFoundry-6.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f57bce083357dd80f38a7608aba66ed", "sha256": "7cf9ea3314a6702b0f30e74fbb14b8a81d69c616255b113c6c8e840bd475bf80"}, "downloads": -1, "filename": "ZoomFoundry-6.4.0.tar.gz", "has_sig": false, "md5_digest": "7f57bce083357dd80f38a7608aba66ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1369007, "upload_time": "2020-04-21T16:02:41", "upload_time_iso_8601": "2020-04-21T16:02:41.076197Z", "url": "https://files.pythonhosted.org/packages/07/52/29b09d56c0aeebd3154eb14f8912db50707437cc0a4191f569a8d9d64795/ZoomFoundry-6.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cdbc0096d3527043909f5f33f1a7bfac", "sha256": "8f28b9ebc50d30caaa0295499e5ce4f56830c5281d88370647e52334d8d0a20b"}, "downloads": -1, "filename": "ZoomFoundry-6.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cdbc0096d3527043909f5f33f1a7bfac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1467530, "upload_time": "2020-04-21T16:02:38", "upload_time_iso_8601": "2020-04-21T16:02:38.987353Z", "url": "https://files.pythonhosted.org/packages/0d/10/0be386532ba9702634360a251b6051ad194c53d3570867186fdb25402c63/ZoomFoundry-6.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f57bce083357dd80f38a7608aba66ed", "sha256": "7cf9ea3314a6702b0f30e74fbb14b8a81d69c616255b113c6c8e840bd475bf80"}, "downloads": -1, "filename": "ZoomFoundry-6.4.0.tar.gz", "has_sig": false, "md5_digest": "7f57bce083357dd80f38a7608aba66ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1369007, "upload_time": "2020-04-21T16:02:41", "upload_time_iso_8601": "2020-04-21T16:02:41.076197Z", "url": "https://files.pythonhosted.org/packages/07/52/29b09d56c0aeebd3154eb14f8912db50707437cc0a4191f569a8d9d64795/ZoomFoundry-6.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:54 2020"}