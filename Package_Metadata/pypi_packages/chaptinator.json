{"info": {"author": "Michael Kuhn & Alexander von Bernuth", "author_email": "michael.kuhn@uni-tuebingen.de", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.8"], "description": "# chaptinator\n\nAdd chapters on scene changes to videos (e.g. slide changes in presentations)\n\n\n## Install\n\n`chaptinator` requires `ffmpeg` to be installed on your system and for it to\nbe in `PATH`.\nFollow the instructions on https://ffmpeg.org/ and make sure the commands\n`ffmpeg` and `ffprobe` are available in your favorite shell (bash, zsh,\nPowershell, ...).\n\nThen install this package via pip. For a global installation use\n\n```bash\nsudo pip install chaptinator\n```\n\nand for a user-local installation use\n\n```bash\npip install --user chaptinator\n```\n\n\n## Usage\n\n```bash\nchaptinator VIDEO [-t TITLE] [-a AUTHOR] [-c CHANGE_THRESH] [-s] [-r] [-v] [-o] [-d] [-m METADATA_FILE]\n```\n\n`-t TITLE` sets the title in the metadata (default: filename)\n\n`-a ARTIST` sets the artist in the metadata\n\n`-c CHANGE` \"value between 0 and 1 to indicate a new scene; a low value\nreflects a low probability for the current frame to introduce a new scene,\nwhile a higher value means the current frame is more likely to be one\"\n-- https://ffmpeg.org/ffmpeg-filters.html#select_002c-aselect\n\n`-s` scales the tagged result video to a height 720 while keeping the aspect\nratio\n\n`-r` reduces the framerate to 5fps, which is optimal to save bandwidth when\npowerpoint slides are the sole video content. Lower values cause problems with\nsome browser video players\n\n`-o` activates the ffmpeg tune 'stillimage' that lowers the deblocking filter,\noptimizing for still images like slides\n\n`-v` converts the audio to MP3 with VBR (Variable BitRate) and a quality\nsetting of 8, which is optimal for speech with relatively long segments of\nsilence.\n(Lame is compiled into the standard `ffmpeg` library while the Frauenhofer AAC,\nwhich supports VBR, is not)\n\n`-d` downmixes both audio channels into a single mono audio channel\n\n`-m METADATA_FILE` disables the cut detection and instead uses the provided\nmetadata file. This file has to have the structure described in\nhttps://ffmpeg.org/ffmpeg-formats.html#Metadata-1\n\n\n## Example\n\n```bash\n# increase cut detection threshold to 0.4, scale the video and reduce framerate\nchaptinator foo.mp4 -t \"Video Title\" -a \"Author Name\" -c 0.4 -s -r\n\n# read cuts from metadata file\nchaptinator foo.mp4 -m metadata.txt\n```\n\n## Use Cases\n\n`chaptinator` could be used to add chapters to presentation slides that were\nrecorded in PowerPoint and exported as video.\n\nBut of course it works with any video file that has cuts in it, just adjust\nthe `-c` parameter to your preference.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ekut-es/chaptinator", "keywords": "", "license": "Unlicense", "maintainer": "", "maintainer_email": "", "name": "chaptinator", "package_url": "https://pypi.org/project/chaptinator/", "platform": "", "project_url": "https://pypi.org/project/chaptinator/", "project_urls": {"Homepage": "https://github.com/ekut-es/chaptinator"}, "release_url": "https://pypi.org/project/chaptinator/0.6/", "requires_dist": null, "requires_python": ">=3.8", "summary": "Add chapters to video based on scene cuts", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>chaptinator</h1>\n<p>Add chapters on scene changes to videos (e.g. slide changes in presentations)</p>\n<h2>Install</h2>\n<p><code>chaptinator</code> requires <code>ffmpeg</code> to be installed on your system and for it to\nbe in <code>PATH</code>.\nFollow the instructions on <a href=\"https://ffmpeg.org/\" rel=\"nofollow\">https://ffmpeg.org/</a> and make sure the commands\n<code>ffmpeg</code> and <code>ffprobe</code> are available in your favorite shell (bash, zsh,\nPowershell, ...).</p>\n<p>Then install this package via pip. For a global installation use</p>\n<pre>sudo pip install chaptinator\n</pre>\n<p>and for a user-local installation use</p>\n<pre>pip install --user chaptinator\n</pre>\n<h2>Usage</h2>\n<pre>chaptinator VIDEO <span class=\"o\">[</span>-t TITLE<span class=\"o\">]</span> <span class=\"o\">[</span>-a AUTHOR<span class=\"o\">]</span> <span class=\"o\">[</span>-c CHANGE_THRESH<span class=\"o\">]</span> <span class=\"o\">[</span>-s<span class=\"o\">]</span> <span class=\"o\">[</span>-r<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>-o<span class=\"o\">]</span> <span class=\"o\">[</span>-d<span class=\"o\">]</span> <span class=\"o\">[</span>-m METADATA_FILE<span class=\"o\">]</span>\n</pre>\n<p><code>-t TITLE</code> sets the title in the metadata (default: filename)</p>\n<p><code>-a ARTIST</code> sets the artist in the metadata</p>\n<p><code>-c CHANGE</code> \"value between 0 and 1 to indicate a new scene; a low value\nreflects a low probability for the current frame to introduce a new scene,\nwhile a higher value means the current frame is more likely to be one\"\n-- <a href=\"https://ffmpeg.org/ffmpeg-filters.html#select_002c-aselect\" rel=\"nofollow\">https://ffmpeg.org/ffmpeg-filters.html#select_002c-aselect</a></p>\n<p><code>-s</code> scales the tagged result video to a height 720 while keeping the aspect\nratio</p>\n<p><code>-r</code> reduces the framerate to 5fps, which is optimal to save bandwidth when\npowerpoint slides are the sole video content. Lower values cause problems with\nsome browser video players</p>\n<p><code>-o</code> activates the ffmpeg tune 'stillimage' that lowers the deblocking filter,\noptimizing for still images like slides</p>\n<p><code>-v</code> converts the audio to MP3 with VBR (Variable BitRate) and a quality\nsetting of 8, which is optimal for speech with relatively long segments of\nsilence.\n(Lame is compiled into the standard <code>ffmpeg</code> library while the Frauenhofer AAC,\nwhich supports VBR, is not)</p>\n<p><code>-d</code> downmixes both audio channels into a single mono audio channel</p>\n<p><code>-m METADATA_FILE</code> disables the cut detection and instead uses the provided\nmetadata file. This file has to have the structure described in\n<a href=\"https://ffmpeg.org/ffmpeg-formats.html#Metadata-1\" rel=\"nofollow\">https://ffmpeg.org/ffmpeg-formats.html#Metadata-1</a></p>\n<h2>Example</h2>\n<pre><span class=\"c1\"># increase cut detection threshold to 0.4, scale the video and reduce framerate</span>\nchaptinator foo.mp4 -t <span class=\"s2\">\"Video Title\"</span> -a <span class=\"s2\">\"Author Name\"</span> -c <span class=\"m\">0</span>.4 -s -r\n\n<span class=\"c1\"># read cuts from metadata file</span>\nchaptinator foo.mp4 -m metadata.txt\n</pre>\n<h2>Use Cases</h2>\n<p><code>chaptinator</code> could be used to add chapters to presentation slides that were\nrecorded in PowerPoint and exported as video.</p>\n<p>But of course it works with any video file that has cuts in it, just adjust\nthe <code>-c</code> parameter to your preference.</p>\n\n          </div>"}, "last_serial": 7187374, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "ef2ede400569bfe41c11a8970265c61d", "sha256": "0f4a1a423c257cbf278854db7ece4f8e3afc4f59f08f348d96c78d23c3a3f490"}, "downloads": -1, "filename": "chaptinator-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ef2ede400569bfe41c11a8970265c61d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 5416, "upload_time": "2020-04-24T21:08:13", "upload_time_iso_8601": "2020-04-24T21:08:13.070602Z", "url": "https://files.pythonhosted.org/packages/e4/1c/209246cb43e164957b2c60f5252f1c7de460f4bb1b2b2e8d381733bcd5f3/chaptinator-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cca9e424383f09dd5624fa6e281acfbc", "sha256": "13b7c72c30900b8395991f4abc5f7ae01283ff3bb0d9919267f3784865cebb11"}, "downloads": -1, "filename": "chaptinator-0.3.tar.gz", "has_sig": false, "md5_digest": "cca9e424383f09dd5624fa6e281acfbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4009, "upload_time": "2020-04-24T21:08:14", "upload_time_iso_8601": "2020-04-24T21:08:14.712483Z", "url": "https://files.pythonhosted.org/packages/e5/03/fe5b76441d3455779b1e5801bb6dde369d5e72c30050eb400f2edc9c1c7e/chaptinator-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1b86e7d5fe842e7aa88eb96f5b45ced3", "sha256": "3e042af08f05640d95e28251acee00cff9cdaff46a1e6a2f532ac1b250bff2fe"}, "downloads": -1, "filename": "chaptinator-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1b86e7d5fe842e7aa88eb96f5b45ced3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 5877, "upload_time": "2020-04-28T07:32:55", "upload_time_iso_8601": "2020-04-28T07:32:55.786693Z", "url": "https://files.pythonhosted.org/packages/db/13/53eb24798ec983bc9523ef0d5b2c4015e5685f491ce1c072efb2b4744b11/chaptinator-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "700645449698c99e6ca91679a90c2ecb", "sha256": "ef0914dc4351ef374181ffaea12cf5acd9df248e9f8a11d2c997881b9033b256"}, "downloads": -1, "filename": "chaptinator-0.4.tar.gz", "has_sig": false, "md5_digest": "700645449698c99e6ca91679a90c2ecb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4499, "upload_time": "2020-04-28T07:32:56", "upload_time_iso_8601": "2020-04-28T07:32:56.484615Z", "url": "https://files.pythonhosted.org/packages/f3/06/13df3811a048edae623ab8c177123eb3494d7722f21238b0c088f9b7cdc6/chaptinator-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "abfbadead0c1a53ea25ae718c231b84e", "sha256": "14330253dccd3a6ce4a846b77c98c01d9296f7284f8212756e7576a4feb239f6"}, "downloads": -1, "filename": "chaptinator-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "abfbadead0c1a53ea25ae718c231b84e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6065, "upload_time": "2020-04-28T11:03:08", "upload_time_iso_8601": "2020-04-28T11:03:08.029061Z", "url": "https://files.pythonhosted.org/packages/d2/2f/5c214d6f90fc6d4a1ecdde7ab56b4d9cbcfcc4ff4ee9c2e42054da77198c/chaptinator-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f504fae40efca6d36cea40589b4dc4a", "sha256": "ac1dccc3549df12414b420eda220e86906f5dfa76d34db7101993590d102aa73"}, "downloads": -1, "filename": "chaptinator-0.5.tar.gz", "has_sig": false, "md5_digest": "9f504fae40efca6d36cea40589b4dc4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4647, "upload_time": "2020-04-28T11:03:08", "upload_time_iso_8601": "2020-04-28T11:03:08.946272Z", "url": "https://files.pythonhosted.org/packages/9e/ce/fbef18ed0a8ffeb86b46663b6d76ceba03f5f9b1c364d7509e9c8eba0ae9/chaptinator-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "aaedd0f0f5bf09d3b583aa125089241d", "sha256": "48a3430c484628bd57012b22bbe0ff6ebd73f8dc29a4231e27eead94649d1fc0"}, "downloads": -1, "filename": "chaptinator-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "aaedd0f0f5bf09d3b583aa125089241d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6078, "upload_time": "2020-05-07T10:45:05", "upload_time_iso_8601": "2020-05-07T10:45:05.557886Z", "url": "https://files.pythonhosted.org/packages/b6/59/0c9be1ca1bca0083a2ee34b83a79bee241f31b3efc81b5b74d57ccea3b67/chaptinator-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed80f95f1168bdf9a2eea1db0bb462ec", "sha256": "198218b9098cf8019b72d55f117fa4f462fd75a0ab0b045079a0aa0d379f050e"}, "downloads": -1, "filename": "chaptinator-0.6.tar.gz", "has_sig": false, "md5_digest": "ed80f95f1168bdf9a2eea1db0bb462ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4664, "upload_time": "2020-05-07T10:45:06", "upload_time_iso_8601": "2020-05-07T10:45:06.600058Z", "url": "https://files.pythonhosted.org/packages/da/ec/f610eb1609b646db7c4e68bd7318739b8876158a8397c24ab92dd494cc58/chaptinator-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aaedd0f0f5bf09d3b583aa125089241d", "sha256": "48a3430c484628bd57012b22bbe0ff6ebd73f8dc29a4231e27eead94649d1fc0"}, "downloads": -1, "filename": "chaptinator-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "aaedd0f0f5bf09d3b583aa125089241d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6078, "upload_time": "2020-05-07T10:45:05", "upload_time_iso_8601": "2020-05-07T10:45:05.557886Z", "url": "https://files.pythonhosted.org/packages/b6/59/0c9be1ca1bca0083a2ee34b83a79bee241f31b3efc81b5b74d57ccea3b67/chaptinator-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed80f95f1168bdf9a2eea1db0bb462ec", "sha256": "198218b9098cf8019b72d55f117fa4f462fd75a0ab0b045079a0aa0d379f050e"}, "downloads": -1, "filename": "chaptinator-0.6.tar.gz", "has_sig": false, "md5_digest": "ed80f95f1168bdf9a2eea1db0bb462ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4664, "upload_time": "2020-05-07T10:45:06", "upload_time_iso_8601": "2020-05-07T10:45:06.600058Z", "url": "https://files.pythonhosted.org/packages/da/ec/f610eb1609b646db7c4e68bd7318739b8876158a8397c24ab92dd494cc58/chaptinator-0.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:26 2020"}