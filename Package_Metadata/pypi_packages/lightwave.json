{"info": {"author": "Geoff Soord", "author_email": "geoff@soord.org.uk", "bugtrack_url": null, "classifiers": [], "description": "# lightwave\nPython library to provide a reliable communication link with LightWaveRF lights, switches and TRVs.\n\n# Installation\nEither clone this repository and run `python setup.py install`, or install from pip using `pip install lightwave`.\n\n## API\nThis library makes use of the public API provided by lightwave that can be found here: https://api.lightwaverf.com/lighting_power.html\n# Lights and Switches\nThe library supports the following functions:\n```\nturn_on_light(device_id, name)\nturn_on_switch(device_id, name)\nturn_on_with_brightness(device_id, name, brightness)\nturn_off(device_id, name)\n```\nWhere:\n* **device_id** takes the form **R#D#** where **R#** is the room number and **D#** is the device number.\n* **name** is the text that will be displayed on the hub.\n* **brightness** is a value from 0 (off) to 255 (full on).\n\n## Usage\nInitialise a link to the hub by passing in the IP address required. Then call a method on the object to modify the device.\nThe first time a switch is turned on or off the device will attempt to pair to the hub. This should then show a message on your WiFi Link asking you to pair the device. You have 12 seconds to push the button on the WiFi Link to accept this.\n\n\n```\nimport asyncio\nimport time\nfrom lightwave.lightwave import LWLink\n\nasync def main():\n    lwLink = LWLink('192.168.15.226')\n\n    print(\"Off\")\n    ### R1D3 is room 1 device 3\n    lwLink.turn_off('R1D3', \"Wall Lights\")\n    lwLink.turn_off('R1D4', \"Ceiling Lights\")\n\n    time.sleep(5)\n    print(\"On\")\n    lwLink.turn_on_light('R1D3', \"Wall Lights\")\n    lwLink.turn_on_light('R1D4', \"Ceiling Lights\")\n\n    time.sleep(5)\n    print(\"Off\")\n    lwLink.turn_off('R1D3', \"Wall Lights\")\n    lwLink.turn_off('R1D4', \"Ceiling Lights\")\n\n\n    time.sleep(5)\n    print(\"On\")\n    lwLink.turn_on_with_brightness('R1D3', \"Wall Lights\", 25)\n    lwLink.turn_on_with_brightness('R1D4', \"Ceiling Lights\", 50)\n    lwLink.turn_on_switch('R1D1', \"Sockets one\")\n    lwLink.turn_on_switch('R1D2', \"Sockets two\")\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\nloop.close()\n```\n# TRV Support\nThe library also supports TRVs with the following function:\n```\nset_temperature (device_id, temp, name)\n```\nWhere:\n* **device_id** takes the form **R#D#** where **R#** is the room number and **D#** is the device identifier (normally **Dh**).\n* **temp** is the target temperature (0.5 increments)\n* **name** is the text that will be displayed on the hub.\n## TRV Proxy\nTo read the TRV status (current temperature, target_temperature, battery status and current output) a [Lightwave TRV Proxy](https://github.com/ColinRobbins/Homeassistant-Lightwave-TRV) is needed. \nTo use the proxy:\n```\nset_trv_proxy (proxy_ip, proxy_port)\n(temp, targ, batt, output) = read_trv_status(serial)\n```\nWhere:\n* **proxy_ip** is the IP address of the proxy\n* **proxy_port** is the IP Port of the proxy\n* **serial** is the serial number of the TRV of interest (NB: This is the **serial** number, and NOT **device_id** they are different).\n# Contributors\n* TRV Support by [Colin Robbins](https://github.com/ColinRobbins)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GeoffAtHome/lightwave", "keywords": "Lightwave,LightwaveRF,Lightwave WiFiLink,Lightwave Link", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lightwave", "package_url": "https://pypi.org/project/lightwave/", "platform": "", "project_url": "https://pypi.org/project/lightwave/", "project_urls": {"Homepage": "https://github.com/GeoffAtHome/lightwave"}, "release_url": "https://pypi.org/project/lightwave/0.18/", "requires_dist": null, "requires_python": "", "summary": "Python library to provide a reliable communication link with LightWaveRF lights, switches and TRVs.", "version": "0.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lightwave</h1>\n<p>Python library to provide a reliable communication link with LightWaveRF lights, switches and TRVs.</p>\n<h1>Installation</h1>\n<p>Either clone this repository and run <code>python setup.py install</code>, or install from pip using <code>pip install lightwave</code>.</p>\n<h2>API</h2>\n<p>This library makes use of the public API provided by lightwave that can be found here: <a href=\"https://api.lightwaverf.com/lighting_power.html\" rel=\"nofollow\">https://api.lightwaverf.com/lighting_power.html</a></p>\n<h1>Lights and Switches</h1>\n<p>The library supports the following functions:</p>\n<pre><code>turn_on_light(device_id, name)\nturn_on_switch(device_id, name)\nturn_on_with_brightness(device_id, name, brightness)\nturn_off(device_id, name)\n</code></pre>\n<p>Where:</p>\n<ul>\n<li><strong>device_id</strong> takes the form <strong>R#D#</strong> where <strong>R#</strong> is the room number and <strong>D#</strong> is the device number.</li>\n<li><strong>name</strong> is the text that will be displayed on the hub.</li>\n<li><strong>brightness</strong> is a value from 0 (off) to 255 (full on).</li>\n</ul>\n<h2>Usage</h2>\n<p>Initialise a link to the hub by passing in the IP address required. Then call a method on the object to modify the device.\nThe first time a switch is turned on or off the device will attempt to pair to the hub. This should then show a message on your WiFi Link asking you to pair the device. You have 12 seconds to push the button on the WiFi Link to accept this.</p>\n<pre><code>import asyncio\nimport time\nfrom lightwave.lightwave import LWLink\n\nasync def main():\n    lwLink = LWLink('192.168.15.226')\n\n    print(\"Off\")\n    ### R1D3 is room 1 device 3\n    lwLink.turn_off('R1D3', \"Wall Lights\")\n    lwLink.turn_off('R1D4', \"Ceiling Lights\")\n\n    time.sleep(5)\n    print(\"On\")\n    lwLink.turn_on_light('R1D3', \"Wall Lights\")\n    lwLink.turn_on_light('R1D4', \"Ceiling Lights\")\n\n    time.sleep(5)\n    print(\"Off\")\n    lwLink.turn_off('R1D3', \"Wall Lights\")\n    lwLink.turn_off('R1D4', \"Ceiling Lights\")\n\n\n    time.sleep(5)\n    print(\"On\")\n    lwLink.turn_on_with_brightness('R1D3', \"Wall Lights\", 25)\n    lwLink.turn_on_with_brightness('R1D4', \"Ceiling Lights\", 50)\n    lwLink.turn_on_switch('R1D1', \"Sockets one\")\n    lwLink.turn_on_switch('R1D2', \"Sockets two\")\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\nloop.close()\n</code></pre>\n<h1>TRV Support</h1>\n<p>The library also supports TRVs with the following function:</p>\n<pre><code>set_temperature (device_id, temp, name)\n</code></pre>\n<p>Where:</p>\n<ul>\n<li><strong>device_id</strong> takes the form <strong>R#D#</strong> where <strong>R#</strong> is the room number and <strong>D#</strong> is the device identifier (normally <strong>Dh</strong>).</li>\n<li><strong>temp</strong> is the target temperature (0.5 increments)</li>\n<li><strong>name</strong> is the text that will be displayed on the hub.</li>\n</ul>\n<h2>TRV Proxy</h2>\n<p>To read the TRV status (current temperature, target_temperature, battery status and current output) a <a href=\"https://github.com/ColinRobbins/Homeassistant-Lightwave-TRV\" rel=\"nofollow\">Lightwave TRV Proxy</a> is needed.\nTo use the proxy:</p>\n<pre><code>set_trv_proxy (proxy_ip, proxy_port)\n(temp, targ, batt, output) = read_trv_status(serial)\n</code></pre>\n<p>Where:</p>\n<ul>\n<li><strong>proxy_ip</strong> is the IP address of the proxy</li>\n<li><strong>proxy_port</strong> is the IP Port of the proxy</li>\n<li><strong>serial</strong> is the serial number of the TRV of interest (NB: This is the <strong>serial</strong> number, and NOT <strong>device_id</strong> they are different).</li>\n</ul>\n<h1>Contributors</h1>\n<ul>\n<li>TRV Support by <a href=\"https://github.com/ColinRobbins\" rel=\"nofollow\">Colin Robbins</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6676703, "releases": {"0.14": [{"comment_text": "", "digests": {"md5": "f6b8f15369b625e8b1586b02dc888bd9", "sha256": "79f32f92c7b60d3042810e331e1d9f170f475b3478d053aa544f0c8430e1fe37"}, "downloads": -1, "filename": "lightwave-0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "f6b8f15369b625e8b1586b02dc888bd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3540, "upload_time": "2018-11-24T18:55:56", "upload_time_iso_8601": "2018-11-24T18:55:56.461870Z", "url": "https://files.pythonhosted.org/packages/11/b9/17788af76b32cfd57021780e93dd1b8ae8b9aa7dcfefaf76b2ec6e8ed9ba/lightwave-0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6efbc1d9a7b634eabefda8d8477dd005", "sha256": "e8192a7328b7d45eeebd33d9f1cef7ab850e25e357a7f2c628c21d4b9b6a9369"}, "downloads": -1, "filename": "lightwave-0.14.tar.gz", "has_sig": false, "md5_digest": "6efbc1d9a7b634eabefda8d8477dd005", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2450, "upload_time": "2018-11-24T18:55:58", "upload_time_iso_8601": "2018-11-24T18:55:58.219757Z", "url": "https://files.pythonhosted.org/packages/83/a4/5edd2e8f9fb147ceb3b5ced0e79bceb947ebca66e3a008eb5c90ca9e1119/lightwave-0.14.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "db9629918f88a9fe52be6315305545cc", "sha256": "f97351dcc9a1ce4038189a3b3a79962faaa9ac9a88374fe0af64106a6fb0501f"}, "downloads": -1, "filename": "lightwave-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "db9629918f88a9fe52be6315305545cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4372, "upload_time": "2018-12-01T12:32:24", "upload_time_iso_8601": "2018-12-01T12:32:24.375639Z", "url": "https://files.pythonhosted.org/packages/5a/0d/4da89c4314fa4f4f404ea512be5699dc17ae8e31a0f4015c7ec6cdbd2217/lightwave-0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8f71952930576a95dc8884b1d54f116", "sha256": "8302783162fd9094de29ed20373fe90360e5bfae950c4371fc24747dd6ac8559"}, "downloads": -1, "filename": "lightwave-0.15.tar.gz", "has_sig": false, "md5_digest": "a8f71952930576a95dc8884b1d54f116", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3332, "upload_time": "2018-12-01T12:32:25", "upload_time_iso_8601": "2018-12-01T12:32:25.577230Z", "url": "https://files.pythonhosted.org/packages/43/a5/e3f6927bb3fd0adb3779a9b8bd8f3e82e9408c9bbaca284cb7fcb93efac2/lightwave-0.15.tar.gz", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "92dcbc297256f66c0305d4c317f7414d", "sha256": "15d16b235e0b718fc4a18ba7b6936fe78149719d1742be370483d54b904f2aa3"}, "downloads": -1, "filename": "lightwave-0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "92dcbc297256f66c0305d4c317f7414d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4479, "upload_time": "2019-01-03T17:45:53", "upload_time_iso_8601": "2019-01-03T17:45:53.907916Z", "url": "https://files.pythonhosted.org/packages/05/3d/ae2cbea47252f4b4172459ed5b8f905f19ba37dd54c9f54babf292a18c8f/lightwave-0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11b030baaf57f83c66a18b7e8f130a38", "sha256": "abf0891f22c7f014feeb933b73a5dadf244cfde9ecc9261cb462483c3eba0d7b"}, "downloads": -1, "filename": "lightwave-0.16.tar.gz", "has_sig": false, "md5_digest": "11b030baaf57f83c66a18b7e8f130a38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3380, "upload_time": "2019-01-03T17:45:55", "upload_time_iso_8601": "2019-01-03T17:45:55.233318Z", "url": "https://files.pythonhosted.org/packages/bd/8d/6e04f9486ab984c67e22adb08907052ab40fcfc23bd55f38f634e73e954a/lightwave-0.16.tar.gz", "yanked": false}], "0.17": [{"comment_text": "", "digests": {"md5": "5e6e489101502cbc9023a5a921c09ddf", "sha256": "f791e00676b2052854033b98935ab4e13ed9a5f4c823c95c83e5e17ee183dc36"}, "downloads": -1, "filename": "lightwave-0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "5e6e489101502cbc9023a5a921c09ddf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4486, "upload_time": "2019-01-29T18:27:53", "upload_time_iso_8601": "2019-01-29T18:27:53.148379Z", "url": "https://files.pythonhosted.org/packages/12/82/83fb317e88e6799e97408051e825311571a4ed920faddd23e911fdc2dfc5/lightwave-0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4aed7af946d8572244c453e94ddedba", "sha256": "4736f4369bc9b2d3015645e1230025cdb2ecbe0102f86c627b1ff770728c1217"}, "downloads": -1, "filename": "lightwave-0.17.tar.gz", "has_sig": false, "md5_digest": "f4aed7af946d8572244c453e94ddedba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3401, "upload_time": "2019-01-29T18:27:54", "upload_time_iso_8601": "2019-01-29T18:27:54.262902Z", "url": "https://files.pythonhosted.org/packages/97/67/f9d52f703f6b81de075545978c1e67ae66de9df31ddbf38143ae9f49795e/lightwave-0.17.tar.gz", "yanked": false}], "0.18": [{"comment_text": "", "digests": {"md5": "3fcb1ef4a197e2f8faa6a2b0673d154d", "sha256": "6342dccdf97c386514a4295591253b755d276d2331f85e1a3a2a2dfcee99896f"}, "downloads": -1, "filename": "lightwave-0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "3fcb1ef4a197e2f8faa6a2b0673d154d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5248, "upload_time": "2020-02-21T17:14:08", "upload_time_iso_8601": "2020-02-21T17:14:08.918818Z", "url": "https://files.pythonhosted.org/packages/33/82/5cdf6c2590847295f1dabcba3294badddc8a325e76b4bd8e62fc924ca28a/lightwave-0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f72616b23c497dfc49e1acf698572df9", "sha256": "ec4e62ae1f5d3579e8c80484e5b2fb24cb1b7b32a847b7f76e892f4ed713c1fd"}, "downloads": -1, "filename": "lightwave-0.18.tar.gz", "has_sig": false, "md5_digest": "f72616b23c497dfc49e1acf698572df9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4357, "upload_time": "2020-02-21T17:14:10", "upload_time_iso_8601": "2020-02-21T17:14:10.140076Z", "url": "https://files.pythonhosted.org/packages/0d/c5/69ad8ef8b2462fec5c9b4bd325d1a2f494fe2d267768317110080fd8c6ea/lightwave-0.18.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3fcb1ef4a197e2f8faa6a2b0673d154d", "sha256": "6342dccdf97c386514a4295591253b755d276d2331f85e1a3a2a2dfcee99896f"}, "downloads": -1, "filename": "lightwave-0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "3fcb1ef4a197e2f8faa6a2b0673d154d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5248, "upload_time": "2020-02-21T17:14:08", "upload_time_iso_8601": "2020-02-21T17:14:08.918818Z", "url": "https://files.pythonhosted.org/packages/33/82/5cdf6c2590847295f1dabcba3294badddc8a325e76b4bd8e62fc924ca28a/lightwave-0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f72616b23c497dfc49e1acf698572df9", "sha256": "ec4e62ae1f5d3579e8c80484e5b2fb24cb1b7b32a847b7f76e892f4ed713c1fd"}, "downloads": -1, "filename": "lightwave-0.18.tar.gz", "has_sig": false, "md5_digest": "f72616b23c497dfc49e1acf698572df9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4357, "upload_time": "2020-02-21T17:14:10", "upload_time_iso_8601": "2020-02-21T17:14:10.140076Z", "url": "https://files.pythonhosted.org/packages/0d/c5/69ad8ef8b2462fec5c9b4bd325d1a2f494fe2d267768317110080fd8c6ea/lightwave-0.18.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:57 2020"}