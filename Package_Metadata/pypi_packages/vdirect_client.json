{"info": {"author": "Avishay Balderman", "author_email": "avishayb@radware.com", "bugtrack_url": null, "classifiers": ["Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python"], "description": ".. image:: http://www.radappliances.com/images/Software/vDirect/vdirect.jpg\n\n============================================================\nA REST-based python client for Radware vDirect\n============================================================\nAn auto-generated REST-based client for `Radware vDirect <https://www.radware.com/products/vdirect/>`_\n\n\n*******************\nClient features:\n*******************\n- Supports asynchronous mode. The default behavior of the client is to wait for completion of the requested operation. This behavior can be overidden. See the FAQ section at the end of this file for more details.\n- Supports vDirect server HA. When configured with a secondary vDirect IP address, the client automatically tries to switch to the secondary vDirect server instance when the primary vDirect server is not available.\n\n- API call result is a tuple with four entries:\n    * Entry 1 is an HTTP response code. For example: 404 (int)\n    * Entry 2 is an HTTP response reason. For example: Not found. (string)\n    * Entry 3 is the response as a string.\n    * Entry 4 is usually the response as a dict or a list of dicts.\n\nTo understand which payloads to send and their expected response, developers should consult the vDirect REST API documentation at https://<vdirect server IP address>:2189/docs/api-docs/.\n\n\n*******************\nBasic client usage:\n*******************\n.. code-block:: python\n\n    from vdirect_client import rest_client\n    from vdirect_client.rest_client import RestClient\n\n    def show(result):\n        print result[rest_client.RESP_STATUS]\n        print result[rest_client.RESP_REASON]\n        print result[rest_client.RESP_STR]\n        print result[rest_client.RESP_DATA]\n\n    ip = <vDirect server IP address>\n    user = <vDirect server user name>\n    password = <vDirect server password>\n\n    client = RestClient(ip, user, password)\n    data = {\"tenants\":[],\"parameters\":{\"vipAddress\":\"1.1.1.1\",\"ServerIps\":[\"1.2.3.4\",\"1.2.3.5\"]},\n                                       \"devices\":{\"adc\":{\"deviceId\":{\"name\":\"Site1.vx2\"}}}}\n    show(client.runnable.run(data,'ConfigurationTemplate','caching_enh','run'))\n    show(client.ha.get_ha_config())\n    show(client.ha.get_ha_status())\n    show(client.template.list())\n    show(client.defensePro.list())\n\n\t\n*******************\nFAQ:\n*******************\n:Q: What do RestClient init parameters mean?\n:A: RestClient init parameters description:\n\n* vdirect_ip: The primary / standalone vDirect server IP address (string)\n* vdirect_user: The vDirect server user name (string)\n* vdirect_password: The vDirect server user password (string)\n* wait: Wait for asynchronous operations to complete (boolean). Default is True\n* secondary_vdirect_ip: The secondary vDirect server IP address (string). Relevant for vDirect server HA pair\n* https_port: The https vDirect server port. Default is 2189 (integer)\n* http_port: The http vDirect server port. Default is 2188 (integer)\n* timeout: Time period (seconds) to wait for asynchronous operations completion (integer). Relevant for case where \"wait\" parameter is set to True. Default is 60 seconds\n* https: Use HTTPS connections (boolean), Default is True\n* strict_http_results: If set to True, only accept success HTTP status codes and throw exception for 4xx and 5xx status codes. Default is False\n* verify: Verify SSL certificates on HTTPS connections (boolean). Default is True\n* fetch_result: Fetch the result automatically if resultUri exists in response (boolean). Default is False\n\n:Q: How can I use vdirect_client in several places without passing init paramters each time?\n:A: You can use environment variables instead of any RestClient init parameter. Following is a map of init parameters and their respective environment variable names:\n\n* vdirect_ip - VDIRECT_IP\n* vdirect_user - VDIRECT_USER\n* vdirect_password - VDIRECT_PASSWORD\n* wait = VDIRECT_WAIT\n* secondary_vdirect_ip - VDIRECT_SECONDARY_IP\n* https_port - VDIRECT_HTTPS_PORT\n* http_port - VDIRECT_HTTP_PORT\n* timeout - VDIRECT_TIMEOUT\n* https - VDIRECT_HTTPS\n* strict_http_results- VDIRECT_STRICT_HTTP_RESULT\n* verify - VDIRECT_VERIFY\n* fetch_result - VDIRECT_FETCH_RESULT\n\n:Q: How do I disable SSL certificates verification on HTTPS connection?\n:A: To disable SSL certificates verification, do one of the following: either set the RestClient init \"verify\" parameter to False, or set environment variable VDIRECT_VERIFY to False.\n\n:Q: Why do I see method names ending with numbers, e.g. \"create0\", \"list2\", \"acquire0\", and others?\n:A: vdirect_client code is a generated code and those method names are the result of technical constraints.\n\n:Q: How do I know if my asynchronous operation has completed and succeeded?\n:A: See the vDirect REST API documentation at https://<vdirect server IP address>:2189/docs/api-docs/async.html.\n\n:Q: What is the difference between synchronous and asynchronous modes?\n:A: See the vDirect REST API documentation at https://<vdirect server IP address>:2189/docs/api-docs/async.html.\n    Following is a python code sample demonstrating how to get the URI token from the operation response, and to periodically verify whether the operation has completed, and if completion was successful.\n\n.. code-block:: python\n\t\n    import json\n    import requests\n    import time\n\t\t\n    from vdirect_client import rest_client\n    from vdirect_client.rest_client import RestClient\n\n    ip = <vDirect server IP address>\n    user = <vDirect server user name>\n    password = <vDirect server password>\n\n    # creating rest client with wait parameter set to False \n    client = RestClient(ip, user, password, wait=False)\n    data = {\"tenants\":[],\"parameters\":{\"vipAddress\":\"1.1.1.1\",\"ServerIps\":[\"1.2.3.4\",\"1.2.3.5\"]},\n                                       \"devices\":{\"adc\":{\"deviceId\":{\"name\":\"Site1.vx2\"}}}}\n    # Requesting operation and getting the operation URI token for completion sampling\n    ret = client.runnable.run(data,'WorkflowTemplate','caching_enh','createWorkflow')\n    token_uri = ret[rest_client.RESP_DATA]['uri']\n\n    # Getting the URI and periodically check for completion and success\n    cntr = 0\n    timeout = 10\n    while cntr < timeout:\n        time.sleep(1)\n        cntr+= 1\n        ret = requests.get(token_uri, auth=(user, password), verify=False)\n        content = json.loads(ret.content)\n        if content['complete']:\n            break\n\n    if content['complete']:\n        print(\"Operation completed\")\n        if (content['success']):\n            print(\"Operation succeeded\")\n        else:\n            print(\"Operation failed\")\n    else:\n        print(\"Operation not completed\")\n\t\t\n\n:Q: What is vDirect HA and how does it work?\n:A: vdirect_client supports vDirect server HA mode. For further information, see the vDirect documentation at https://<vdirect server IP address>:2189/docs/api-docs/examples/haServer/index.html.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/vdirect_client", "keywords": "radware vdirect python REST client", "license": "ASL 2.0", "maintainer": "", "maintainer_email": "", "name": "vdirect_client", "package_url": "https://pypi.org/project/vdirect_client/", "platform": "", "project_url": "https://pypi.org/project/vdirect_client/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/vdirect_client"}, "release_url": "https://pypi.org/project/vdirect_client/4.9.0.post4/", "requires_dist": null, "requires_python": "", "summary": "Radware vDirect server python REST client", "version": "4.9.0.post4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"http://www.radappliances.com/images/Software/vDirect/vdirect.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7711c815d5c55f0b2f968b82e6808078a799c7aa/687474703a2f2f7777772e7261646170706c69616e6365732e636f6d2f696d616765732f536f6674776172652f764469726563742f766469726563742e6a7067\">\n<div id=\"a-rest-based-python-client-for-radware-vdirect\">\n<h2>A REST-based python client for Radware vDirect</h2>\n<p>An auto-generated REST-based client for <a href=\"https://www.radware.com/products/vdirect/\" rel=\"nofollow\">Radware vDirect</a></p>\n<div id=\"client-features\">\n<h3>Client features:</h3>\n<ul>\n<li>Supports asynchronous mode. The default behavior of the client is to wait for completion of the requested operation. This behavior can be overidden. See the FAQ section at the end of this file for more details.</li>\n<li>Supports vDirect server HA. When configured with a secondary vDirect IP address, the client automatically tries to switch to the secondary vDirect server instance when the primary vDirect server is not available.</li>\n<li><dl>\n<dt>API call result is a tuple with four entries:</dt>\n<dd><ul>\n<li>Entry 1 is an HTTP response code. For example: 404 (int)</li>\n<li>Entry 2 is an HTTP response reason. For example: Not found. (string)</li>\n<li>Entry 3 is the response as a string.</li>\n<li>Entry 4 is usually the response as a dict or a list of dicts.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>To understand which payloads to send and their expected response, developers should consult the vDirect REST API documentation at <a href=\"https:/\" rel=\"nofollow\">https:/</a>/&lt;vdirect server IP address&gt;:2189/docs/api-docs/.</p>\n</div>\n<div id=\"basic-client-usage\">\n<h3>Basic client usage:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vdirect_client</span> <span class=\"kn\">import</span> <span class=\"n\">rest_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vdirect_client.rest_client</span> <span class=\"kn\">import</span> <span class=\"n\">RestClient</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">show</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">rest_client</span><span class=\"o\">.</span><span class=\"n\">RESP_STATUS</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">rest_client</span><span class=\"o\">.</span><span class=\"n\">RESP_REASON</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">rest_client</span><span class=\"o\">.</span><span class=\"n\">RESP_STR</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">rest_client</span><span class=\"o\">.</span><span class=\"n\">RESP_DATA</span><span class=\"p\">]</span>\n\n<span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">vDirect</span> <span class=\"n\">server</span> <span class=\"n\">IP</span> <span class=\"n\">address</span><span class=\"o\">&gt;</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">vDirect</span> <span class=\"n\">server</span> <span class=\"n\">user</span> <span class=\"n\">name</span><span class=\"o\">&gt;</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">vDirect</span> <span class=\"n\">server</span> <span class=\"n\">password</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">RestClient</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"tenants\"</span><span class=\"p\">:[],</span><span class=\"s2\">\"parameters\"</span><span class=\"p\">:{</span><span class=\"s2\">\"vipAddress\"</span><span class=\"p\">:</span><span class=\"s2\">\"1.1.1.1\"</span><span class=\"p\">,</span><span class=\"s2\">\"ServerIps\"</span><span class=\"p\">:[</span><span class=\"s2\">\"1.2.3.4\"</span><span class=\"p\">,</span><span class=\"s2\">\"1.2.3.5\"</span><span class=\"p\">]},</span>\n                                   <span class=\"s2\">\"devices\"</span><span class=\"p\">:{</span><span class=\"s2\">\"adc\"</span><span class=\"p\">:{</span><span class=\"s2\">\"deviceId\"</span><span class=\"p\">:{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"Site1.vx2\"</span><span class=\"p\">}}}}</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">runnable</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"s1\">'ConfigurationTemplate'</span><span class=\"p\">,</span><span class=\"s1\">'caching_enh'</span><span class=\"p\">,</span><span class=\"s1\">'run'</span><span class=\"p\">))</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ha</span><span class=\"o\">.</span><span class=\"n\">get_ha_config</span><span class=\"p\">())</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ha</span><span class=\"o\">.</span><span class=\"n\">get_ha_status</span><span class=\"p\">())</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">())</span>\n<span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">defensePro</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"faq\">\n<h3>FAQ:</h3>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Q:</th><td>What do RestClient init parameters mean?</td>\n</tr>\n<tr><th>A:</th><td>RestClient init parameters description:</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>vdirect_ip: The primary / standalone vDirect server IP address (string)</li>\n<li>vdirect_user: The vDirect server user name (string)</li>\n<li>vdirect_password: The vDirect server user password (string)</li>\n<li>wait: Wait for asynchronous operations to complete (boolean). Default is True</li>\n<li>secondary_vdirect_ip: The secondary vDirect server IP address (string). Relevant for vDirect server HA pair</li>\n<li>https_port: The https vDirect server port. Default is 2189 (integer)</li>\n<li>http_port: The http vDirect server port. Default is 2188 (integer)</li>\n<li>timeout: Time period (seconds) to wait for asynchronous operations completion (integer). Relevant for case where \u201cwait\u201d parameter is set to True. Default is 60 seconds</li>\n<li>https: Use HTTPS connections (boolean), Default is True</li>\n<li>strict_http_results: If set to True, only accept success HTTP status codes and throw exception for 4xx and 5xx status codes. Default is False</li>\n<li>verify: Verify SSL certificates on HTTPS connections (boolean). Default is True</li>\n<li>fetch_result: Fetch the result automatically if resultUri exists in response (boolean). Default is False</li>\n</ul>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Q:</th><td>How can I use vdirect_client in several places without passing init paramters each time?</td>\n</tr>\n<tr><th>A:</th><td>You can use environment variables instead of any RestClient init parameter. Following is a map of init parameters and their respective environment variable names:</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>vdirect_ip - VDIRECT_IP</li>\n<li>vdirect_user - VDIRECT_USER</li>\n<li>vdirect_password - VDIRECT_PASSWORD</li>\n<li>wait = VDIRECT_WAIT</li>\n<li>secondary_vdirect_ip - VDIRECT_SECONDARY_IP</li>\n<li>https_port - VDIRECT_HTTPS_PORT</li>\n<li>http_port - VDIRECT_HTTP_PORT</li>\n<li>timeout - VDIRECT_TIMEOUT</li>\n<li>https - VDIRECT_HTTPS</li>\n<li>strict_http_results- VDIRECT_STRICT_HTTP_RESULT</li>\n<li>verify - VDIRECT_VERIFY</li>\n<li>fetch_result - VDIRECT_FETCH_RESULT</li>\n</ul>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Q:</th><td>How do I disable SSL certificates verification on HTTPS connection?</td>\n</tr>\n<tr><th>A:</th><td>To disable SSL certificates verification, do one of the following: either set the RestClient init \u201cverify\u201d parameter to False, or set environment variable VDIRECT_VERIFY to False.</td>\n</tr>\n<tr><th>Q:</th><td>Why do I see method names ending with numbers, e.g. \u201ccreate0\u201d, \u201clist2\u201d, \u201cacquire0\u201d, and others?</td>\n</tr>\n<tr><th>A:</th><td>vdirect_client code is a generated code and those method names are the result of technical constraints.</td>\n</tr>\n<tr><th>Q:</th><td>How do I know if my asynchronous operation has completed and succeeded?</td>\n</tr>\n<tr><th>A:</th><td>See the vDirect REST API documentation at <a href=\"https:/\" rel=\"nofollow\">https:/</a>/&lt;vdirect server IP address&gt;:2189/docs/api-docs/async.html.</td>\n</tr>\n<tr><th>Q:</th><td>What is the difference between synchronous and asynchronous modes?</td>\n</tr>\n<tr><th>A:</th><td>See the vDirect REST API documentation at <a href=\"https:/\" rel=\"nofollow\">https:/</a>/&lt;vdirect server IP address&gt;:2189/docs/api-docs/async.html.\nFollowing is a python code sample demonstrating how to get the URI token from the operation response, and to periodically verify whether the operation has completed, and if completion was successful.</td>\n</tr>\n</tbody>\n</table>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">vdirect_client</span> <span class=\"kn\">import</span> <span class=\"n\">rest_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vdirect_client.rest_client</span> <span class=\"kn\">import</span> <span class=\"n\">RestClient</span>\n\n<span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">vDirect</span> <span class=\"n\">server</span> <span class=\"n\">IP</span> <span class=\"n\">address</span><span class=\"o\">&gt;</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">vDirect</span> <span class=\"n\">server</span> <span class=\"n\">user</span> <span class=\"n\">name</span><span class=\"o\">&gt;</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">vDirect</span> <span class=\"n\">server</span> <span class=\"n\">password</span><span class=\"o\">&gt;</span>\n\n<span class=\"c1\"># creating rest client with wait parameter set to False</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">RestClient</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">wait</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"tenants\"</span><span class=\"p\">:[],</span><span class=\"s2\">\"parameters\"</span><span class=\"p\">:{</span><span class=\"s2\">\"vipAddress\"</span><span class=\"p\">:</span><span class=\"s2\">\"1.1.1.1\"</span><span class=\"p\">,</span><span class=\"s2\">\"ServerIps\"</span><span class=\"p\">:[</span><span class=\"s2\">\"1.2.3.4\"</span><span class=\"p\">,</span><span class=\"s2\">\"1.2.3.5\"</span><span class=\"p\">]},</span>\n                                   <span class=\"s2\">\"devices\"</span><span class=\"p\">:{</span><span class=\"s2\">\"adc\"</span><span class=\"p\">:{</span><span class=\"s2\">\"deviceId\"</span><span class=\"p\">:{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"Site1.vx2\"</span><span class=\"p\">}}}}</span>\n<span class=\"c1\"># Requesting operation and getting the operation URI token for completion sampling</span>\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">runnable</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"s1\">'WorkflowTemplate'</span><span class=\"p\">,</span><span class=\"s1\">'caching_enh'</span><span class=\"p\">,</span><span class=\"s1\">'createWorkflow'</span><span class=\"p\">)</span>\n<span class=\"n\">token_uri</span> <span class=\"o\">=</span> <span class=\"n\">ret</span><span class=\"p\">[</span><span class=\"n\">rest_client</span><span class=\"o\">.</span><span class=\"n\">RESP_DATA</span><span class=\"p\">][</span><span class=\"s1\">'uri'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Getting the URI and periodically check for completion and success</span>\n<span class=\"n\">cntr</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"k\">while</span> <span class=\"n\">cntr</span> <span class=\"o\">&lt;</span> <span class=\"n\">timeout</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">cntr</span><span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">token_uri</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">),</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">content</span><span class=\"p\">[</span><span class=\"s1\">'complete'</span><span class=\"p\">]:</span>\n        <span class=\"k\">break</span>\n\n<span class=\"k\">if</span> <span class=\"n\">content</span><span class=\"p\">[</span><span class=\"s1\">'complete'</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Operation completed\"</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">[</span><span class=\"s1\">'success'</span><span class=\"p\">]):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Operation succeeded\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Operation failed\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Operation not completed\"</span><span class=\"p\">)</span>\n</pre>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Q:</th><td>What is vDirect HA and how does it work?</td>\n</tr>\n<tr><th>A:</th><td>vdirect_client supports vDirect server HA mode. For further information, see the vDirect documentation at <a href=\"https:/\" rel=\"nofollow\">https:/</a>/&lt;vdirect server IP address&gt;:2189/docs/api-docs/examples/haServer/index.html.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5707874, "releases": {"4.0.1": [], "4.0.2": [{"comment_text": "", "digests": {"md5": "4a69d2879b59eafd156ceba403e462d7", "sha256": "cacf4e3f307203e8b9cc9546ada14b1cbc3487606bde81abe1f2c06baf24b3a4"}, "downloads": -1, "filename": "vdirect-client-4.0.2.zip", "has_sig": false, "md5_digest": "4a69d2879b59eafd156ceba403e462d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16294, "upload_time": "2017-03-22T09:32:10", "upload_time_iso_8601": "2017-03-22T09:32:10.116787Z", "url": "https://files.pythonhosted.org/packages/9a/74/e87c82b8c441b1a77f752b2907dc73ff3188f10b2da87e87d70ff6bee3ef/vdirect-client-4.0.2.zip", "yanked": false}], "4.0.3": [{"comment_text": "", "digests": {"md5": "db1e65f9d7948b0795389892c1977d0c", "sha256": "f4bd194926aa8b71aca783157093fb70a17ac25bf081026cfb2f187eae29a265"}, "downloads": -1, "filename": "vdirect-client-4.0.3.zip", "has_sig": false, "md5_digest": "db1e65f9d7948b0795389892c1977d0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16300, "upload_time": "2017-03-22T09:46:25", "upload_time_iso_8601": "2017-03-22T09:46:25.615450Z", "url": "https://files.pythonhosted.org/packages/8a/bb/14aa89fb017916d2753145cedfd0debbceb699d2e736da59f6e9db773e00/vdirect-client-4.0.3.zip", "yanked": false}], "4.0.5": [{"comment_text": "", "digests": {"md5": "0ed3e549ff60f41bb39f72ef70143938", "sha256": "5558e86ffd0f6fdbdfaf47cecae43ce69a288f9a64b3c6617b4d693f9fa58f3d"}, "downloads": -1, "filename": "vdirect-client-4.0.5.zip", "has_sig": false, "md5_digest": "0ed3e549ff60f41bb39f72ef70143938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16324, "upload_time": "2017-03-22T10:07:40", "upload_time_iso_8601": "2017-03-22T10:07:40.289318Z", "url": "https://files.pythonhosted.org/packages/61/ff/c87c5edbe46a74eb7776a8a6b340db3491166392dc5767720d4a6f06677e/vdirect-client-4.0.5.zip", "yanked": false}], "4.0.6": [{"comment_text": "", "digests": {"md5": "767aec5011677804215f40c3bcf4e944", "sha256": "9a82389537bd83000120af25c17fc705d59974fa71196b093cd81b036928458d"}, "downloads": -1, "filename": "vdirect-client-4.0.6.zip", "has_sig": false, "md5_digest": "767aec5011677804215f40c3bcf4e944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16378, "upload_time": "2017-03-28T08:40:48", "upload_time_iso_8601": "2017-03-28T08:40:48.008941Z", "url": "https://files.pythonhosted.org/packages/49/f6/59410f441757c3409ecee4780645e003967ff18a5a1aa443d86f892d8419/vdirect-client-4.0.6.zip", "yanked": false}], "4.0.7": [{"comment_text": "", "digests": {"md5": "52c25091ad7b33b9cc32cd37db224ab1", "sha256": "1f55e1ef6719fbfb6291a0b6c92a4e4e58f0ddf78f120323200c2ed6e25e21ec"}, "downloads": -1, "filename": "vdirect-client-4.0.7.zip", "has_sig": false, "md5_digest": "52c25091ad7b33b9cc32cd37db224ab1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16384, "upload_time": "2017-03-28T08:51:40", "upload_time_iso_8601": "2017-03-28T08:51:40.834050Z", "url": "https://files.pythonhosted.org/packages/4f/0f/759fdd6a926406e109092dcdbed8753b606512ada1c072e98a5aa5f740d5/vdirect-client-4.0.7.zip", "yanked": false}], "4.1": [], "4.1.0": [{"comment_text": "", "digests": {"md5": "1146135b6209f2b73eda8386a13fbc58", "sha256": "06bf729de5f253f9fb59dd74688b65ad2701259505bf91e659ec8336e5a7cd1b"}, "downloads": -1, "filename": "vdirect-client-4.1.0.zip", "has_sig": false, "md5_digest": "1146135b6209f2b73eda8386a13fbc58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16224, "upload_time": "2017-06-06T07:45:37", "upload_time_iso_8601": "2017-06-06T07:45:37.043497Z", "url": "https://files.pythonhosted.org/packages/94/40/7580f1897689446ab5d1dfabf41240d1f122354876d540b77c8f7118ea5f/vdirect-client-4.1.0.zip", "yanked": false}], "4.1.1-10": [{"comment_text": "", "digests": {"md5": "761ee35cf6f5572e81f55eab78803533", "sha256": "f6d067fcfbba8cfd7f77862a84856135ee270d666c0ca095daacd169f0e4058f"}, "downloads": -1, "filename": "vdirect_client-4.1.1-10.tar.gz", "has_sig": false, "md5_digest": "761ee35cf6f5572e81f55eab78803533", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17671, "upload_time": "2017-08-01T06:29:24", "upload_time_iso_8601": "2017-08-01T06:29:24.787015Z", "url": "https://files.pythonhosted.org/packages/4e/5d/2123a23e3a07a02dc922e5c7f8507fb09e201cdd6f1fec201e3c72a202bc/vdirect_client-4.1.1-10.tar.gz", "yanked": false}], "4.1.1-11": [{"comment_text": "", "digests": {"md5": "d788ffd1675a965751511e1e29d59914", "sha256": "8c85d1fdb5e22ce4d7cf1f3f457a03b0429f9dccb9d99759f3a5c26a4df9180e"}, "downloads": -1, "filename": "vdirect_client-4.1.1-11.tar.gz", "has_sig": false, "md5_digest": "d788ffd1675a965751511e1e29d59914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17680, "upload_time": "2017-08-01T08:37:28", "upload_time_iso_8601": "2017-08-01T08:37:28.883271Z", "url": "https://files.pythonhosted.org/packages/79/ae/28e5186113329c558c5ad1f4e76ab6fb92959ca2e5e365f26eabd8579d4d/vdirect_client-4.1.1-11.tar.gz", "yanked": false}], "4.1.1-12": [{"comment_text": "", "digests": {"md5": "6af93c8b1ba233e77ee622db3dbadd6c", "sha256": "0a8419ef669b735fd9fea2ac0e2400bfb0c57a0c4964a1729a9b1a14abba00e6"}, "downloads": -1, "filename": "vdirect_client-4.1.1-12.tar.gz", "has_sig": false, "md5_digest": "6af93c8b1ba233e77ee622db3dbadd6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20358, "upload_time": "2017-08-06T15:25:10", "upload_time_iso_8601": "2017-08-06T15:25:10.363839Z", "url": "https://files.pythonhosted.org/packages/64/7f/47579180791f424dea75a45357d4cd8598cb4e0d319d608384239c1078a2/vdirect_client-4.1.1-12.tar.gz", "yanked": false}], "4.1.1-13": [{"comment_text": "", "digests": {"md5": "62b9ca499554de82fbc2e463da84acbb", "sha256": "69d71ed0cedc317bb22fdb3787e2d71c1b7a9cc0b918c1f673e3fa6c759ebf6c"}, "downloads": -1, "filename": "vdirect_client-4.1.1-13.tar.gz", "has_sig": false, "md5_digest": "62b9ca499554de82fbc2e463da84acbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20611, "upload_time": "2017-08-07T14:45:38", "upload_time_iso_8601": "2017-08-07T14:45:38.563921Z", "url": "https://files.pythonhosted.org/packages/9e/86/64da021b01832b3126eec805f3311ad01c4e2c6a999a0ef0abe223a67808/vdirect_client-4.1.1-13.tar.gz", "yanked": false}], "4.1.1-14": [{"comment_text": "", "digests": {"md5": "b3337187df9c4e56d45a08b20b1d1f89", "sha256": "12c4c36d131eb6f24a475ea3bd5ccfd85b22461eb6d5a1dfe9498785869d2226"}, "downloads": -1, "filename": "vdirect_client-4.1.1-14.tar.gz", "has_sig": false, "md5_digest": "b3337187df9c4e56d45a08b20b1d1f89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20970, "upload_time": "2017-08-13T13:51:59", "upload_time_iso_8601": "2017-08-13T13:51:59.573884Z", "url": "https://files.pythonhosted.org/packages/00/d9/ba73cc11542647ffc020e36b22f806f086de95e712622d8a2f3d33c6e362/vdirect_client-4.1.1-14.tar.gz", "yanked": false}], "4.4.0-1": [{"comment_text": "", "digests": {"md5": "cc40ba2cd2432c56513746cabe209052", "sha256": "18ee600891aabc695d7e9a21dca79e1fc5c98429440d59fab2fe8d3cbac0c7e2"}, "downloads": -1, "filename": "vdirect_client-4.4.0-1.tar.gz", "has_sig": false, "md5_digest": "cc40ba2cd2432c56513746cabe209052", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21409, "upload_time": "2018-04-24T09:22:08", "upload_time_iso_8601": "2018-04-24T09:22:08.689812Z", "url": "https://files.pythonhosted.org/packages/f2/d0/350510b0c636ad1f35b3f602920a7e0053a591055103b2e755afe7e26ec9/vdirect_client-4.4.0-1.tar.gz", "yanked": false}], "4.4.0-2": [{"comment_text": "", "digests": {"md5": "3e9911941071fd871e81c5973a6ec98a", "sha256": "ee0e1bcaa6e2550cab8ee7483506cc7ec414eaee306fd3124bd40518a06265fa"}, "downloads": -1, "filename": "vdirect_client-4.4.0-2.tar.gz", "has_sig": false, "md5_digest": "3e9911941071fd871e81c5973a6ec98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21418, "upload_time": "2018-04-24T11:10:49", "upload_time_iso_8601": "2018-04-24T11:10:49.386462Z", "url": "https://files.pythonhosted.org/packages/ff/33/7187b43887856b8578ad892db22e8e417ade214e4ddb4d69525153014d7c/vdirect_client-4.4.0-2.tar.gz", "yanked": false}], "4.4.0-3": [{"comment_text": "", "digests": {"md5": "a3507ff870b4623270380809e8a17007", "sha256": "fed492dbcf7c2f5421bca9f1c0713d6b842f682f2d9dcb95d13a7e46863ceac4"}, "downloads": -1, "filename": "vdirect_client-4.4.0-3.tar.gz", "has_sig": false, "md5_digest": "a3507ff870b4623270380809e8a17007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21411, "upload_time": "2018-04-24T11:30:59", "upload_time_iso_8601": "2018-04-24T11:30:59.629429Z", "url": "https://files.pythonhosted.org/packages/45/24/f5a64572936f8fc13fd4e644efb8e482cd2184e81d86b76ab5063877837d/vdirect_client-4.4.0-3.tar.gz", "yanked": false}], "4.4.0.post4": [{"comment_text": "", "digests": {"md5": "733c6cab85b93647c642dca5bc9aeba2", "sha256": "437e8cfc0fe233f2816d0ccb6bc574f9a4cbf113f6d3cfea7ade441b3dcb3b85"}, "downloads": -1, "filename": "vdirect_client-4.4.0.post4.tar.gz", "has_sig": false, "md5_digest": "733c6cab85b93647c642dca5bc9aeba2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21523, "upload_time": "2018-06-19T12:38:27", "upload_time_iso_8601": "2018-06-19T12:38:27.729381Z", "url": "https://files.pythonhosted.org/packages/9b/99/5d8b2177ae36b734ea3a0bb4826b02efdc1724c49142cb154ff58769c6ba/vdirect_client-4.4.0.post4.tar.gz", "yanked": false}], "4.9.0.post4": [{"comment_text": "", "digests": {"md5": "2bdc88e6589069c77998542c192237cd", "sha256": "4637e4b2010b1e1e200cc7e88270d2fde5f2ed9c7890bf50da9afb9cad7b8eb7"}, "downloads": -1, "filename": "vdirect_client-4.9.0.post4.tar.gz", "has_sig": false, "md5_digest": "2bdc88e6589069c77998542c192237cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22177, "upload_time": "2019-08-21T08:34:23", "upload_time_iso_8601": "2019-08-21T08:34:23.250028Z", "url": "https://files.pythonhosted.org/packages/61/61/54f38315cdd9d2e164f101559f1391dbb38e04b9431892951153b9f12e25/vdirect_client-4.9.0.post4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bdc88e6589069c77998542c192237cd", "sha256": "4637e4b2010b1e1e200cc7e88270d2fde5f2ed9c7890bf50da9afb9cad7b8eb7"}, "downloads": -1, "filename": "vdirect_client-4.9.0.post4.tar.gz", "has_sig": false, "md5_digest": "2bdc88e6589069c77998542c192237cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22177, "upload_time": "2019-08-21T08:34:23", "upload_time_iso_8601": "2019-08-21T08:34:23.250028Z", "url": "https://files.pythonhosted.org/packages/61/61/54f38315cdd9d2e164f101559f1391dbb38e04b9431892951153b9f12e25/vdirect_client-4.9.0.post4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:20 2020"}