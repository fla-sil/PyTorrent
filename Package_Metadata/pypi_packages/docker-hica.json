{"info": {"author": "Pavel Odvody", "author_email": "podvody@redhat.com", "bugtrack_url": null, "classifiers": [], "description": "HICA (Host Integrated Container Applications) v0.5.1\n----------------------------------------------------\n[h\u0251\u026ak\u02d0]\n\nThe goal of this project is to define a set of image label metadata \nand launcher tooling that understands said metadata to provide for\nsmooth experience running containerized applications with tight\nintegration with the host operating system.\n\n### Installation\n\n```\npip install docker-hica\n```\n\n### Docs\n\nVersioned specification of all labels can be found in [docs/labels.md](docs/labels.md)\n\nGuidelines for Dockerfiles can be found in [docs/dockerfile-guidelines.md](docs/dockerfile-guidelines.md)\n\nSELinux usage is documented in [docs/selinux.md](docs/selinux.md)\n\n### Examples\n\nExamples directory currently contains several example Dockerfiles:\n * `jq`\n * `firefox-testing`\n * `signify`\n * `opengl-testing`\n * `test-description`\n\nPlease refer to `README.md` in each particular subdirectory for more information.\nThe straightforward way is to simply:\n```bash\n$ cd examples/example\n$ docker build -t example .\n$ docker-hica example\n```\n\n### Advanced usage\n\nLet's overview the basic stuff:\n\n```bash\n$ docker-hica --help\nusage: docker-hica [-h] [--show-args] [--test-injectors] [--verbose] [--yes]\n                   [--selinux-label SELINUX_LABEL] [--user USER]\n                   hica_app_name ...\n\npositional arguments:\n  hica_app_name\n  named_action\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --show-args           show possible arguments for the specified\n                        \"hica_app_name\"\n  --test-injectors      executes injector tests for specified \"hica_app_name\"\n  --verbose             print additional information\n  --yes                 bypass the capability review check\n  --selinux-label SELINUX_LABEL\n                        provide a confinement context\n  --user USER           user:group to run as (1000:1000)\n```\n\nThe `--show-args` flag allows for displaying configurable parameters for image injectors, so\nto see what parameters can be passed to the `examples/firefox` image, execute:\n```bash\n$ docker-hica --show-args firefox:1.0\nusage: docker-hica [-h] [--show-args] [--verbose] [--yes]\n                   [--machine-id-path MACHINE_ID_PATH]\n                   [--xsocket-path XSOCKET_PATH]\n                   [--x-display-num X_DISPLAY_NUM]\n                   hica_app_name ...\n```\n\nWhen `--verbose` is specified, the Docker command is also printed out during execution:\n```bash\n$ docker-hica --verbose firefox:1.0\nThe container requests the following capabilities: \n - Bind mounts current working directory (/Repos/docker-hica) into the container\n - Bind mounts machine-id into the container\n - Bind mounts XSocket into the container\nProceed? [y/Y/n]: y\nExecuting: docker run -i -u 1000:1000 --volume /Repos/docker-hica:/Repos/docker-hica -w /Repos/docker-hica --volume /etc/machine-id:/etc/machine-id --volume /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=:0 firefox:1.0\n```\n\nAnd finally the `--yes` flag allows for skipping the initial prompt for confirmation as seen on the example above.\nThis option is dangerous, future versions will treat 'Y' in the prompt response as 'Yes and remmber', so that\nthe initial capability request is reviewed at least once.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shaded-enmity/docker-hica", "keywords": "docker host integrated container application", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "docker-hica", "package_url": "https://pypi.org/project/docker-hica/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/docker-hica/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/shaded-enmity/docker-hica"}, "release_url": "https://pypi.org/project/docker-hica/0.5.1/", "requires_dist": null, "requires_python": null, "summary": "The goal of this project is to define a set of image label metadata and launcher tooling that understands said metadata to provide for smooth experience running containerized applications with tight integration with the host operating system.", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            HICA (Host Integrated Container Applications) v0.5.1<br>----------------------------------------------------<br>[h\u0251\u026ak\u02d0]<br><br>The goal of this project is to define a set of image label metadata <br>and launcher tooling that understands said metadata to provide for<br>smooth experience running containerized applications with tight<br>integration with the host operating system.<br><br>### Installation<br><br>```<br>pip install docker-hica<br>```<br><br>### Docs<br><br>Versioned specification of all labels can be found in [docs/labels.md](docs/labels.md)<br><br>Guidelines for Dockerfiles can be found in [docs/dockerfile-guidelines.md](docs/dockerfile-guidelines.md)<br><br>SELinux usage is documented in [docs/selinux.md](docs/selinux.md)<br><br>### Examples<br><br>Examples directory currently contains several example Dockerfiles:<br> * `jq`<br> * `firefox-testing`<br> * `signify`<br> * `opengl-testing`<br> * `test-description`<br><br>Please refer to `README.md` in each particular subdirectory for more information.<br>The straightforward way is to simply:<br>```bash<br>$ cd examples/example<br>$ docker build -t example .<br>$ docker-hica example<br>```<br><br>### Advanced usage<br><br>Let's overview the basic stuff:<br><br>```bash<br>$ docker-hica --help<br>usage: docker-hica [-h] [--show-args] [--test-injectors] [--verbose] [--yes]<br>                   [--selinux-label SELINUX_LABEL] [--user USER]<br>                   hica_app_name ...<br><br>positional arguments:<br>  hica_app_name<br>  named_action<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --show-args           show possible arguments for the specified<br>                        \"hica_app_name\"<br>  --test-injectors      executes injector tests for specified \"hica_app_name\"<br>  --verbose             print additional information<br>  --yes                 bypass the capability review check<br>  --selinux-label SELINUX_LABEL<br>                        provide a confinement context<br>  --user USER           user:group to run as (1000:1000)<br>```<br><br>The `--show-args` flag allows for displaying configurable parameters for image injectors, so<br>to see what parameters can be passed to the `examples/firefox` image, execute:<br>```bash<br>$ docker-hica --show-args firefox:1.0<br>usage: docker-hica [-h] [--show-args] [--verbose] [--yes]<br>                   [--machine-id-path MACHINE_ID_PATH]<br>                   [--xsocket-path XSOCKET_PATH]<br>                   [--x-display-num X_DISPLAY_NUM]<br>                   hica_app_name ...<br>```<br><br>When `--verbose` is specified, the Docker command is also printed out during execution:<br>```bash<br>$ docker-hica --verbose firefox:1.0<br>The container requests the following capabilities: <br> - Bind mounts current working directory (/Repos/docker-hica) into the container<br> - Bind mounts machine-id into the container<br> - Bind mounts XSocket into the container<br>Proceed? [y/Y/n]: y<br>Executing: docker run -i -u 1000:1000 --volume /Repos/docker-hica:/Repos/docker-hica -w /Repos/docker-hica --volume /etc/machine-id:/etc/machine-id --volume /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=:0 firefox:1.0<br>```<br><br>And finally the `--yes` flag allows for skipping the initial prompt for confirmation as seen on the example above.<br>This option is dangerous, future versions will treat 'Y' in the prompt response as 'Yes and remmber', so that<br>the initial capability request is reviewed at least once.<br>\n          </div>"}, "last_serial": 1905829, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "414997fe0543b422e2087fa84ffa7812", "sha256": "a164e8f25c6335a65cd274ecdaae4023a912544a619c16353c42d8ecaceeabe4"}, "downloads": -1, "filename": "docker-hica-0.5.tar.gz", "has_sig": false, "md5_digest": "414997fe0543b422e2087fa84ffa7812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10707, "upload_time": "2016-01-15T09:50:17", "upload_time_iso_8601": "2016-01-15T09:50:17.908524Z", "url": "https://files.pythonhosted.org/packages/37/2d/aa922c0c9fa8f27f55ab9c9724df52168f2d7f9e9f7f380519e63317020e/docker-hica-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "f37070a297715adc205f52d9b03413ba", "sha256": "218fe3967d3d85a230b45af75f8d5793f330f2118970a7e01779e32e2520a9d4"}, "downloads": -1, "filename": "docker-hica-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f37070a297715adc205f52d9b03413ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17258, "upload_time": "2016-01-15T10:06:09", "upload_time_iso_8601": "2016-01-15T10:06:09.760582Z", "url": "https://files.pythonhosted.org/packages/f3/83/b105164cf5bb352754550ba2fae13ef9fda52cca06c08c3509928aef4c5d/docker-hica-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f37070a297715adc205f52d9b03413ba", "sha256": "218fe3967d3d85a230b45af75f8d5793f330f2118970a7e01779e32e2520a9d4"}, "downloads": -1, "filename": "docker-hica-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f37070a297715adc205f52d9b03413ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17258, "upload_time": "2016-01-15T10:06:09", "upload_time_iso_8601": "2016-01-15T10:06:09.760582Z", "url": "https://files.pythonhosted.org/packages/f3/83/b105164cf5bb352754550ba2fae13ef9fda52cca06c08c3509928aef4c5d/docker-hica-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:51 2020"}