{"info": {"author": "Nikita Tonkoshkur", "author_email": "humapen@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# django_xlspopulator\nEasy to use .xls Django model populator. \n\n\nHow to:\n1. First you need to install latest version of <b>xlrd: pip install xlrd==1.1.0</b>\n1. In order for this to work, you need exactly match your model's field names and xls's first row values(column names), like this:\n    ```python\n    class Test(models.Model):\n      one = models.CharField(max_length=150)\n      two = models.CharField(max_length=150)\n      three = models.CharField(max_length=150)\n      four = models.CharField(max_length=150)\n    ```\n    <img src=\"https://github.com/bloodwithmilk25/django-xlspopulator/blob/master/col_names.jpg\">\n1. Then you need to create `populate.py` file at the one level with your `manage.py`\n1. Put following code there:\n    ```python\n    # populate.py\n    import os\n    import django\n    from django_xlspopulator.populator import Populator\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE','YOURPOJECT.settings')\n    django.setup()\n    from YOURAPP.models import Test\n\n    pop = Populator('C:/Users/Guido/Desktop/testfile.xls', Test)\n    pop.populate()\n    ```\n    * Populator object takes three arguments:\n      * path to the .xls file in form of a string\n      * Django model object\n      * Sheet number, int(0 by defaulft, specify it if you want to use other sheet)\n1. Run `populate.py` from the terminal and wait. For my old machine with SQLite it took 5 mins to populate model from file that had 4 columns and 10000 rows.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bloodwithmilk25/django-xlspopulator", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-xlspopulator", "package_url": "https://pypi.org/project/django-xlspopulator/", "platform": "", "project_url": "https://pypi.org/project/django-xlspopulator/", "project_urls": {"Homepage": "https://github.com/bloodwithmilk25/django-xlspopulator"}, "release_url": "https://pypi.org/project/django-xlspopulator/1.1/", "requires_dist": ["xlrd"], "requires_python": "", "summary": "Populate your Django model from .xls file", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django_xlspopulator</h1>\n<p>Easy to use .xls Django model populator.</p>\n<p>How to:</p>\n<ol>\n<li>First you need to install latest version of <b>xlrd: pip install xlrd==1.1.0</b></li>\n<li>In order for this to work, you need exactly match your model's field names and xls's first row values(column names), like this:\n<pre><span class=\"k\">class</span> <span class=\"nc\">Test</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n  <span class=\"n\">one</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n  <span class=\"n\">two</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n  <span class=\"n\">three</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n  <span class=\"n\">four</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">)</span>\n</pre>\n <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/466d23d9abc9ac0a45c69dd437bc13f8956bb240/68747470733a2f2f6769746875622e636f6d2f626c6f6f64776974686d696c6b32352f646a616e676f2d786c73706f70756c61746f722f626c6f622f6d61737465722f636f6c5f6e616d65732e6a7067\">\n</li>\n<li>Then you need to create <code>populate.py</code> file at the one level with your <code>manage.py</code></li>\n<li>Put following code there:\n<pre><span class=\"c1\"># populate.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">django</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_xlspopulator.populator</span> <span class=\"kn\">import</span> <span class=\"n\">Populator</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_SETTINGS_MODULE'</span><span class=\"p\">,</span><span class=\"s1\">'YOURPOJECT.settings'</span><span class=\"p\">)</span>\n<span class=\"n\">django</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n<span class=\"kn\">from</span> <span class=\"nn\">YOURAPP.models</span> <span class=\"kn\">import</span> <span class=\"n\">Test</span>\n\n<span class=\"n\">pop</span> <span class=\"o\">=</span> <span class=\"n\">Populator</span><span class=\"p\">(</span><span class=\"s1\">'C:/Users/Guido/Desktop/testfile.xls'</span><span class=\"p\">,</span> <span class=\"n\">Test</span><span class=\"p\">)</span>\n<span class=\"n\">pop</span><span class=\"o\">.</span><span class=\"n\">populate</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Populator object takes three arguments:\n<ul>\n<li>path to the .xls file in form of a string</li>\n<li>Django model object</li>\n<li>Sheet number, int(0 by defaulft, specify it if you want to use other sheet)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Run <code>populate.py</code> from the terminal and wait. For my old machine with SQLite it took 5 mins to populate model from file that had 4 columns and 10000 rows.</li>\n</ol>\n\n          </div>"}, "last_serial": 4324643, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "249822dda26aad01cb01faf17ab2e626", "sha256": "1caf1a118b9f1ae743abb2cc3d77d7bdafea89fe7fd515db84ae341d7bfba896"}, "downloads": -1, "filename": "django_xlspopulator-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "249822dda26aad01cb01faf17ab2e626", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3642, "upload_time": "2018-09-30T09:37:48", "upload_time_iso_8601": "2018-09-30T09:37:48.575466Z", "url": "https://files.pythonhosted.org/packages/ae/40/705e0add97d1ce47ec322b1ad41e15daeb1b8cf8fb509c08ed60a382892d/django_xlspopulator-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7c071dee8e91fba73299b81e75dfcfd", "sha256": "570bbf79a422b40a7fe4f4a791ed6117b79320c7adc027309a1129f5445154f3"}, "downloads": -1, "filename": "django_xlspopulator-1.1.tar.gz", "has_sig": false, "md5_digest": "b7c071dee8e91fba73299b81e75dfcfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2301, "upload_time": "2018-09-30T09:37:50", "upload_time_iso_8601": "2018-09-30T09:37:50.186134Z", "url": "https://files.pythonhosted.org/packages/3b/8f/61e66aa2097e4429b19d00a1ffaf95f91bf8906bef09f7892544359480dd/django_xlspopulator-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "249822dda26aad01cb01faf17ab2e626", "sha256": "1caf1a118b9f1ae743abb2cc3d77d7bdafea89fe7fd515db84ae341d7bfba896"}, "downloads": -1, "filename": "django_xlspopulator-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "249822dda26aad01cb01faf17ab2e626", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3642, "upload_time": "2018-09-30T09:37:48", "upload_time_iso_8601": "2018-09-30T09:37:48.575466Z", "url": "https://files.pythonhosted.org/packages/ae/40/705e0add97d1ce47ec322b1ad41e15daeb1b8cf8fb509c08ed60a382892d/django_xlspopulator-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7c071dee8e91fba73299b81e75dfcfd", "sha256": "570bbf79a422b40a7fe4f4a791ed6117b79320c7adc027309a1129f5445154f3"}, "downloads": -1, "filename": "django_xlspopulator-1.1.tar.gz", "has_sig": false, "md5_digest": "b7c071dee8e91fba73299b81e75dfcfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2301, "upload_time": "2018-09-30T09:37:50", "upload_time_iso_8601": "2018-09-30T09:37:50.186134Z", "url": "https://files.pythonhosted.org/packages/3b/8f/61e66aa2097e4429b19d00a1ffaf95f91bf8906bef09f7892544359480dd/django_xlspopulator-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:47 2020"}