{"info": {"author": "Charlie Clark", "author_email": "charlie.clark@clark-consulting.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3"], "description": "Introduction\n============\n\nGviz Data Table is a simple Python library for converting Python data types\nto the Google Visualization Data Table JSON format.\nhttps://developers.google.com/chart/interactive/docs/reference\n\nThe Google Visualization Library itself is a Javascript library that provides\ninteractive charts that work in pretty much any browser. The libraries cover\nmost use cases including tables as well as charts, so you can have a chart\nand a table of the same data.\n\nGviz Data Table is designed primarily for use with data sources such as\ndatabases. Usage is supposed to be minimal: you provide a schema, that is a\nlist of columns, and the rows of data. A column must have a name and Python\ndata type. It can also have a label which will be used for display, otherwise\nthe name will be used.\n\nEach row is a sequence of cells. Although columns are explicit row names are\nalways the first cell in a row. Like columns, cells can also have labels.\nGviz Data Table will validate each cell to make sure that data conforms to\ntype specified in the schema and will map Python types to their JSON\nequivalent but it does not coerce any data, i.e. if a column has type `int`\nand a cell's data is a string containing numerical characters only this will\nstill raise an exception.\n\nGviz Data Table handles data conversion only. You will need to add the\nnecessary Javascript to an web page in order for any charts or table to be\ndrawn. Tables, columns and cells can all have options which are just\ndictionaries. As there is no further definition of options no validation of\ntheir items occurs. Unknown items will simply be ignored.\n\nGviz Data Table is composed of: one container class \"Table\"; two data\nclasses, Cell and Column and one JSON encoder. Application code should\nprobably only ever need to use Table and the encoder.\n\nUsage\n-----\n\nTables can be initialised with a schema or these can be added imperatively.\nOnce one row has been added to a table no more columns can be added. Once all\nthe rows have been added. The table can be converted into JSON using the\nencoder.\n\nExample\n*******\n\nLet's say we have data representing the names and salaries of people\n\n====== ======\nName   Salary\n====== ======\nJim       50\nBob       80\n====== ======\n\nThis could be coded in Gviz Data Table like this:\n\n   .. code-block:: python\n\n      from gviz_data_table import Table\n\n      table = Table()\n      table.add_column('name', str, \"Name\")\n      table.add_column(salary', int, \"Salary\")\n      table.append([\"Jim\", 50])\n      table.append([\"Bob\", 80])\n\nThis can be encoded into JSON using the encoder:\n\n   .. code-block:: python\n\n      from gviz_data_table import encode\n\n      encode(table)\n\nIt can also be directly encoded\n\n   .. code-block:: python\n\n      table.encode()\n\nAnd also used as a static data source for asynchronous loading from Javascript\n\n   .. code-block:: python\n\n      table.source()\n\n\nComplete documentation including the API at\nhttp://gviz-data-table.readthedocs.org/en/latest/\n\n\n1.0.2 (2015-06-29)\n------------------\n\n- Support `long`type in Python 2\n\n\n1.0.1 (2013-03-18)\n------------------\n\n - Correct release\n\n\n1.0.0 (2013-03-18)\n------------------\n\n- Python 3 compatibile\n- Changed convenience import: `encode` replaces `encoder`\n- Added convenience methods to Table to allow direct encoding as JSON and a\n  Google data source.\n\n\n0.9.1 (2012-07-26)\n------------------\n\n- Changed signature of add_column when I found I used it wrongly myself in\nthe docs\n\n\n0.9 (2012-07-25)\n----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/charlie_x/gviz-data-table", "keywords": "charting graph Google Visualisation", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "gviz_data_table", "package_url": "https://pypi.org/project/gviz_data_table/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gviz_data_table/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/charlie_x/gviz-data-table"}, "release_url": "https://pypi.org/project/gviz_data_table/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "Python API for Google Visualization", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Introduction<br>============<br><br>Gviz Data Table is a simple Python library for converting Python data types<br>to the Google Visualization Data Table JSON format.<br>https://developers.google.com/chart/interactive/docs/reference<br><br>The Google Visualization Library itself is a Javascript library that provides<br>interactive charts that work in pretty much any browser. The libraries cover<br>most use cases including tables as well as charts, so you can have a chart<br>and a table of the same data.<br><br>Gviz Data Table is designed primarily for use with data sources such as<br>databases. Usage is supposed to be minimal: you provide a schema, that is a<br>list of columns, and the rows of data. A column must have a name and Python<br>data type. It can also have a label which will be used for display, otherwise<br>the name will be used.<br><br>Each row is a sequence of cells. Although columns are explicit row names are<br>always the first cell in a row. Like columns, cells can also have labels.<br>Gviz Data Table will validate each cell to make sure that data conforms to<br>type specified in the schema and will map Python types to their JSON<br>equivalent but it does not coerce any data, i.e. if a column has type `int`<br>and a cell's data is a string containing numerical characters only this will<br>still raise an exception.<br><br>Gviz Data Table handles data conversion only. You will need to add the<br>necessary Javascript to an web page in order for any charts or table to be<br>drawn. Tables, columns and cells can all have options which are just<br>dictionaries. As there is no further definition of options no validation of<br>their items occurs. Unknown items will simply be ignored.<br><br>Gviz Data Table is composed of: one container class \"Table\"; two data<br>classes, Cell and Column and one JSON encoder. Application code should<br>probably only ever need to use Table and the encoder.<br><br>Usage<br>-----<br><br>Tables can be initialised with a schema or these can be added imperatively.<br>Once one row has been added to a table no more columns can be added. Once all<br>the rows have been added. The table can be converted into JSON using the<br>encoder.<br><br>Example<br>*******<br><br>Let's say we have data representing the names and salaries of people<br><br>====== ======<br>Name   Salary<br>====== ======<br>Jim       50<br>Bob       80<br>====== ======<br><br>This could be coded in Gviz Data Table like this:<br><br>   .. code-block:: python<br><br>      from gviz_data_table import Table<br><br>      table = Table()<br>      table.add_column('name', str, \"Name\")<br>      table.add_column(salary', int, \"Salary\")<br>      table.append([\"Jim\", 50])<br>      table.append([\"Bob\", 80])<br><br>This can be encoded into JSON using the encoder:<br><br>   .. code-block:: python<br><br>      from gviz_data_table import encode<br><br>      encode(table)<br><br>It can also be directly encoded<br><br>   .. code-block:: python<br><br>      table.encode()<br><br>And also used as a static data source for asynchronous loading from Javascript<br><br>   .. code-block:: python<br><br>      table.source()<br><br><br>Complete documentation including the API at<br>http://gviz-data-table.readthedocs.org/en/latest/<br><br><br>1.0.2 (2015-06-29)<br>------------------<br><br>- Support `long`type in Python 2<br><br><br>1.0.1 (2013-03-18)<br>------------------<br><br> - Correct release<br><br><br>1.0.0 (2013-03-18)<br>------------------<br><br>- Python 3 compatibile<br>- Changed convenience import: `encode` replaces `encoder`<br>- Added convenience methods to Table to allow direct encoding as JSON and a<br>  Google data source.<br><br><br>0.9.1 (2012-07-26)<br>------------------<br><br>- Changed signature of add_column when I found I used it wrongly myself in<br>the docs<br><br><br>0.9 (2012-07-25)<br>----------------<br><br>- Initial release\n          </div>"}, "last_serial": 1611282, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "74d73693ab4c1e37d77b369e7725e383", "sha256": "7272c52ea7bf166ab65539c5b88df7d8b8dcc705b52c00081132c696204951a8"}, "downloads": -1, "filename": "gviz_data_table-0.9.0.tar.gz", "has_sig": false, "md5_digest": "74d73693ab4c1e37d77b369e7725e383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8928, "upload_time": "2012-07-25T23:03:35", "upload_time_iso_8601": "2012-07-25T23:03:35.022367Z", "url": "https://files.pythonhosted.org/packages/5c/0b/417ba19e2e5d5bcc7d4cd49fbdb8dcde9a88dc92c0cd8b9bc94f06b76384/gviz_data_table-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "76f9a882ec3bbe4555b5ae34b00aebfa", "sha256": "8629ab637c139ce9bac5c8f897ea3bda8bcf099e869879693a80979709dcfed1"}, "downloads": -1, "filename": "gviz_data_table-0.9.1.tar.gz", "has_sig": false, "md5_digest": "76f9a882ec3bbe4555b5ae34b00aebfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10184, "upload_time": "2012-07-26T10:39:50", "upload_time_iso_8601": "2012-07-26T10:39:50.327899Z", "url": "https://files.pythonhosted.org/packages/fc/a3/2459421137a92eb6e5da003e7121bf5b463ee70477fd045d14a698ccc216/gviz_data_table-0.9.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "22e6898e35f30b886e765d68385e707b", "sha256": "3677a21dab612a11e2f43af7bd627907874d95ef6ec56cbb2c5626efb15d5445"}, "downloads": -1, "filename": "gviz_data_table-1.0.0.tar.gz", "has_sig": false, "md5_digest": "22e6898e35f30b886e765d68385e707b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11151, "upload_time": "2013-03-18T19:27:53", "upload_time_iso_8601": "2013-03-18T19:27:53.470959Z", "url": "https://files.pythonhosted.org/packages/a5/c8/99d191501bc91c846ddcc5019ca92e6a28d5555bf90522a696a8a33d9b1e/gviz_data_table-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "50894080ea8b2fb47cf34ef99441990d", "sha256": "e0b5f671b1b5b8c5f4b263282e7a67a46747135472ecdffe6711f7a0a6862bd8"}, "downloads": -1, "filename": "gviz_data_table-1.0.1.tar.gz", "has_sig": false, "md5_digest": "50894080ea8b2fb47cf34ef99441990d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11700, "upload_time": "2013-03-18T19:33:13", "upload_time_iso_8601": "2013-03-18T19:33:13.872992Z", "url": "https://files.pythonhosted.org/packages/00/0d/d82ff62f4227b279bb4681f4456cebb9e85950c38aa8e303e362782c9978/gviz_data_table-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6ae3129791a46800f9bcdc2486e6b6cf", "sha256": "821577644e099967bce778048c0eee35904aee7231ce4e8c9cd5e1676938a06b"}, "downloads": -1, "filename": "gviz_data_table-1.0.2.tar.gz", "has_sig": false, "md5_digest": "6ae3129791a46800f9bcdc2486e6b6cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13272, "upload_time": "2015-06-29T11:05:12", "upload_time_iso_8601": "2015-06-29T11:05:12.471477Z", "url": "https://files.pythonhosted.org/packages/27/cd/b8ad0408fc22ecdea148569dba0ab556210593f5841b9f0044ec740d750e/gviz_data_table-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ae3129791a46800f9bcdc2486e6b6cf", "sha256": "821577644e099967bce778048c0eee35904aee7231ce4e8c9cd5e1676938a06b"}, "downloads": -1, "filename": "gviz_data_table-1.0.2.tar.gz", "has_sig": false, "md5_digest": "6ae3129791a46800f9bcdc2486e6b6cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13272, "upload_time": "2015-06-29T11:05:12", "upload_time_iso_8601": "2015-06-29T11:05:12.471477Z", "url": "https://files.pythonhosted.org/packages/27/cd/b8ad0408fc22ecdea148569dba0ab556210593f5841b9f0044ec740d750e/gviz_data_table-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:07 2020"}