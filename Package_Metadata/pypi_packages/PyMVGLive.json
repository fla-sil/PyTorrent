{"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "PyMVGLive\n=========\n\nPython-Library to get live-data from mvg-live.de - yet another workaround the official, non-released API....\n\n\n## MVGLive.getlivedata()\nRetrieve the next departures from mvg-live.de\n\nConfiguration variables:\n \n- **station** (*Required*): Name of the stop or station. Visit [the MVG live web site](http://www.mvg-live.de) to find valid names.\n    \n- **timeoffset** (*Optional*): Do not display connections departing sooner than this number of minutes (defaults to 0). Useful if you are a couple of minutes away from the stop.\n    \n- **entries** (*Optional*): Number of entries to retrieve (defaults to 10).\n    \n- **ubahn** (*Optional*): If 'False', do not display U-Bahn (subway) departures\n    \n- **tram** (*Optional*): If 'False', do not display tram departures\n    \n- **bus** (*Optional*): If 'False', do not display bus departures\n    \n- **sbahn** (*Optional*): If 'False', do not display S-Bahn (suburban train) departures\n\n## MVGLive.getdisruptiondata()\nRetrieve current disruptions/status messages from mvg-live.de. Returns headline and description of disruption.\n\nPlease note, that this call will execute another API-request and might cause problems with rate-limits imposed by the webservice.\n\nFor a saver way, please use [RSS-feed](http://www.mvg-mobil.de/Tickerrss/CreateRssClass) that is also provided by the MVG. You can find a sample implementation [here](https://github.com/muccc/anzeigr/blob/master/current_nodes/mvgdefas/ticker/getmvgticker.py)", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": null, "keywords": null, "license": null, "maintainer": null, "maintainer_email": null, "name": "PyMVGLive", "package_url": "https://pypi.org/project/PyMVGLive/", "platform": null, "project_url": "https://pypi.org/project/PyMVGLive/", "project_urls": null, "release_url": "https://pypi.org/project/PyMVGLive/1.1.4/", "requires_dist": null, "requires_python": null, "summary": "get live-data from mvg-live.de", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python-Library to get live-data from mvg-live.de - yet another workaround the official, non-released API\u2026.</p>\n<p>## MVGLive.getlivedata()\nRetrieve the next departures from mvg-live.de</p>\n<p>Configuration variables:</p>\n<ul>\n<li><strong>station</strong> (<em>Required</em>): Name of the stop or station. Visit [the MVG live web site](<a href=\"http://www.mvg-live.de\" rel=\"nofollow\">http://www.mvg-live.de</a>) to find valid names.</li>\n<li><strong>timeoffset</strong> (<em>Optional</em>): Do not display connections departing sooner than this number of minutes (defaults to 0). Useful if you are a couple of minutes away from the stop.</li>\n<li><strong>entries</strong> (<em>Optional</em>): Number of entries to retrieve (defaults to 10).</li>\n<li><strong>ubahn</strong> (<em>Optional</em>): If \u2018False\u2019, do not display U-Bahn (subway) departures</li>\n<li><strong>tram</strong> (<em>Optional</em>): If \u2018False\u2019, do not display tram departures</li>\n<li><strong>bus</strong> (<em>Optional</em>): If \u2018False\u2019, do not display bus departures</li>\n<li><strong>sbahn</strong> (<em>Optional</em>): If \u2018False\u2019, do not display S-Bahn (suburban train) departures</li>\n</ul>\n<p>## MVGLive.getdisruptiondata()\nRetrieve current disruptions/status messages from mvg-live.de. Returns headline and description of disruption.</p>\n<p>Please note, that this call will execute another API-request and might cause problems with rate-limits imposed by the webservice.</p>\n<p>For a saver way, please use [RSS-feed](<a href=\"http://www.mvg-mobil.de/Tickerrss/CreateRssClass\" rel=\"nofollow\">http://www.mvg-mobil.de/Tickerrss/CreateRssClass</a>) that is also provided by the MVG. You can find a sample implementation [here](<a href=\"https://github.com/muccc/anzeigr/blob/master/current_nodes/mvgdefas/ticker/getmvgticker.py\" rel=\"nofollow\">https://github.com/muccc/anzeigr/blob/master/current_nodes/mvgdefas/ticker/getmvgticker.py</a>)</p>\n\n          </div>"}, "last_serial": 2882846, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "737fe5f0e8e82374d114fed93760f518", "sha256": "7741adf6455545960c7c88e44d4b818430e9c3eb80292b553582e6e23f570c1b"}, "downloads": -1, "filename": "PyMVGLive-1.0.0.tar.gz", "has_sig": false, "md5_digest": "737fe5f0e8e82374d114fed93760f518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2677, "upload_time": "2014-10-21T02:36:24", "upload_time_iso_8601": "2014-10-21T02:36:24.232338Z", "url": "https://files.pythonhosted.org/packages/56/90/b58cea05fef0a3e38f3b5a3a1ca9db34721ed9047b09e04d5ada8aeb3763/PyMVGLive-1.0.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "8e255dfaf668fb418031d30a69758970", "sha256": "11e08f56f84b6f0922e00f35b9542e050acc6acc7f176dfefe4ccae0eabc7700"}, "downloads": -1, "filename": "PyMVGLive-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8e255dfaf668fb418031d30a69758970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2789, "upload_time": "2015-06-09T02:27:54", "upload_time_iso_8601": "2015-06-09T02:27:54.659729Z", "url": "https://files.pythonhosted.org/packages/e8/2e/bc9345d00a98e498f3c8a71b837027921bfbdb03007340ec8d2526c53a67/PyMVGLive-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "267d2906200a8b1c53a27b163a6581fa", "sha256": "53f69f9cb5e405a2c51d129a48f5b13c58c34742ad8416eae355a6fb55fa98fe"}, "downloads": -1, "filename": "PyMVGLive-1.1.2..tar.gz", "has_sig": false, "md5_digest": "267d2906200a8b1c53a27b163a6581fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2879, "upload_time": "2016-06-19T12:03:13", "upload_time_iso_8601": "2016-06-19T12:03:13.917984Z", "url": "https://files.pythonhosted.org/packages/9e/85/3437815f79f7a8a35bc61787beef48cf2b2a0466806f50b620d479ada9db/PyMVGLive-1.1.2..tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "46bb1ce9336de591cdc7a4950ec4597f", "sha256": "aad267e32205b51d30cda90942fae9113116ef489e30fcef435d5172826a2704"}, "downloads": -1, "filename": "PyMVGLive-1.1.3.tar.gz", "has_sig": false, "md5_digest": "46bb1ce9336de591cdc7a4950ec4597f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2880, "upload_time": "2017-03-22T11:53:47", "upload_time_iso_8601": "2017-03-22T11:53:47.665489Z", "url": "https://files.pythonhosted.org/packages/62/c6/60887139c43d2bfea0ef5377acd2b6f25470d783187f2fa8ad9c105aebbc/PyMVGLive-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "77491acd3bb980867a267ed513642d8a", "sha256": "0c81dc7e306501cd63d88ab57dedf277bf6b778085d1bceeef38d5484eed046a"}, "downloads": -1, "filename": "PyMVGLive-1.1.4.tar.gz", "has_sig": false, "md5_digest": "77491acd3bb980867a267ed513642d8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3937, "upload_time": "2017-05-18T09:54:37", "upload_time_iso_8601": "2017-05-18T09:54:37.285433Z", "url": "https://files.pythonhosted.org/packages/01/ad/d5bb0c7d6e80de616548d3d8e46f09d5c98517dfff54179421cf3d4446b2/PyMVGLive-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77491acd3bb980867a267ed513642d8a", "sha256": "0c81dc7e306501cd63d88ab57dedf277bf6b778085d1bceeef38d5484eed046a"}, "downloads": -1, "filename": "PyMVGLive-1.1.4.tar.gz", "has_sig": false, "md5_digest": "77491acd3bb980867a267ed513642d8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3937, "upload_time": "2017-05-18T09:54:37", "upload_time_iso_8601": "2017-05-18T09:54:37.285433Z", "url": "https://files.pythonhosted.org/packages/01/ad/d5bb0c7d6e80de616548d3d8e46f09d5c98517dfff54179421cf3d4446b2/PyMVGLive-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:29 2020"}