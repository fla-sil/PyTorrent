{"info": {"author": "Jeffrey Bean", "author_email": "jrb3330@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Database Backups\n================\n\nOverview\n--------\nThe purpose of this tool is to make backing up databases in bulk easy to do. This service runs database actions based on a config file. No implementation details are needed to backup you common databases.\n\nCurrently supports the following Databases for backup:\n\n* PostGreSQL\n* MySQL\n\nInstallation\n------------\nSupported Platforms:\n\n* Linux\n\nSetup Requirements:\n\n* setuptools_git\n\nRequirements:\n\n* Python 2.7\n* requests\n\nInstall using `virtualenv` and `pip`.\n\n    mkdir -p ~/.venvs\n    virtualenv ~/.venvs/dbackups\n    source ~/.venvs/dbackups/bin/activate\n    pip install dbackups\n\nInstall using `pip`.\n\n    pip install dbackups\n\nConfigure\n---------\nThe purpose of this package is that now backing up multiple databases within an infrastructure. You can also specify\nwhere to upload the backups.\n\nConfig File:\n\nThis uses python ```os.path.expanduser('~')``` and translates to the following:\n\n    vim ~/.dbackups/databases.ini\n\nAdd each or your databases as a section of the config file. Defining the connection and upload options.\n\n### Example\n    [example-db]\n    # if you want to enable the backup for this database\n    enabled = True\n    # the type of database\n    db_type = postgresql\n    # connection parameters for the DB\n    db_host = host_of_database\n    db_name = user\n    db_user = postgres\n    db_pass = password123\n    db_port = 5432\n\n    # these are passed into a requests.put method (futures will improve this section)\n    upload_url = https://backups.example.com/backups/\n    upload_user = backupuser\n    upload_pass = password543\n\nRunning\n-------\n\nCurrently the one way to run the job of backing up the configured Databases from the config file is to run the\ncommand\n\n    dbackupscron\n\nThis will try to dump and upload all enabled databases in the config file. This is meant as a first step towards having\n python schedule its own cron and run as a systemd/init service.\n\n### Cron Script\nCreate a similar cron script in `/etc/cron.daily/`\n\n    sudo vim /etc/cron.daily/dbackups.cron\n    sudo chmod +x /etc/cron.daily/dbackups.cron\n\nContents:\n\n    #!/usr/bash\n    source ~/.venvs/dbackups/bin/activate && dbackupscron\n\n\n## Logging\n\n\nLogging for this application today is done by a config file. this can be found in the `config` directory under the\nproject root.\nThis file gets used by all of the binaries distributed by this application.\n\nBy default the logs can be found in the program directory:\n\n    ~/.dbackups/logs/\n\nThe `dbackupscron` script has its own log allowing easy triage of the cron script\n\n    ~/.dbackups/logs/database_backup_cron.log\n\n## Futures\n\n* Windows support\n* Script to enter new configuration entries to the database.ini\n* Add feature to clone one database to another for Development purposes\n* Add cleanup for the dump files. (relying on temp dir cleanup today)\n* A simple UI to see uploaded backups, and configure database entries.\n\n\n## DataBase Troubleshooting\n\n* [MySQL](docs/mysql.md)\n* [PostGreSQL](docs/postgres.md)\n\n## Reporting issues\n\nAs a start please log issues or they might never be fixed!\n\nAs a guild the following is a checklist of things to check and provide in your issue.\n\n* What OS are you running?\n* Please attach the [logs](##Logging)\n* Can you reproduce?\n* What steps did you take to get the issue?\n\n\n## Documentation Issues\n\nFor issues with the documentation or enhancements desired please log an issue with what page the issue is on and all the details about why it is not correct or clarification needed in any part of the docs.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeffbean/dbackups", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "dbackups", "package_url": "https://pypi.org/project/dbackups/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dbackups/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jeffbean/dbackups"}, "release_url": "https://pypi.org/project/dbackups/0.5.4/", "requires_dist": null, "requires_python": null, "summary": "A simple python application that makes database backups a little easier.", "version": "0.5.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>The purpose of this tool is to make backing up databases in bulk easy to do. This service runs database actions based on a config file. No implementation details are needed to backup you common databases.</p>\n<p>Currently supports the following Databases for backup:</p>\n<ul>\n<li>PostGreSQL</li>\n<li>MySQL</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Supported Platforms:</p>\n<ul>\n<li>Linux</li>\n</ul>\n<p>Setup Requirements:</p>\n<ul>\n<li>setuptools_git</li>\n</ul>\n<p>Requirements:</p>\n<ul>\n<li>Python 2.7</li>\n<li>requests</li>\n</ul>\n<p>Install using <cite>virtualenv</cite> and <cite>pip</cite>.</p>\n<blockquote>\nmkdir -p ~/.venvs\nvirtualenv ~/.venvs/dbackups\nsource ~/.venvs/dbackups/bin/activate\npip install dbackups</blockquote>\n<p>Install using <cite>pip</cite>.</p>\n<blockquote>\npip install dbackups</blockquote>\n</div>\n<div id=\"configure\">\n<h2>Configure</h2>\n<p>The purpose of this package is that now backing up multiple databases within an infrastructure. You can also specify\nwhere to upload the backups.</p>\n<p>Config File:</p>\n<p>This uses python <tt><span class=\"pre\">`os.path.expanduser('~')`</span></tt> and translates to the following:</p>\n<blockquote>\nvim ~/.dbackups/databases.ini</blockquote>\n<p>Add each or your databases as a section of the config file. Defining the connection and upload options.</p>\n<dl>\n<dt>### Example</dt>\n<dd><p>[example-db]\n# if you want to enable the backup for this database\nenabled = True\n# the type of database\ndb_type = postgresql\n# connection parameters for the DB\ndb_host = host_of_database\ndb_name = user\ndb_user = postgres\ndb_pass = password123\ndb_port = 5432</p>\n<p># these are passed into a requests.put method (futures will improve this section)\nupload_url = <a href=\"https://backups.example.com/backups/\" rel=\"nofollow\">https://backups.example.com/backups/</a>\nupload_user = backupuser\nupload_pass = password543</p>\n</dd>\n</dl>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>Currently the one way to run the job of backing up the configured Databases from the config file is to run the\ncommand</p>\n<blockquote>\ndbackupscron</blockquote>\n<dl>\n<dt>This will try to dump and upload all enabled databases in the config file. This is meant as a first step towards having</dt>\n<dd>python schedule its own cron and run as a systemd/init service.</dd>\n</dl>\n<p>### Cron Script\nCreate a similar cron script in <cite>/etc/cron.daily/</cite></p>\n<blockquote>\nsudo vim /etc/cron.daily/dbackups.cron\nsudo chmod +x /etc/cron.daily/dbackups.cron</blockquote>\n<p>Contents:</p>\n<blockquote>\n#!/usr/bash\nsource ~/.venvs/dbackups/bin/activate &amp;&amp; dbackupscron</blockquote>\n<p>## Logging</p>\n<p>Logging for this application today is done by a config file. this can be found in the <cite>config</cite> directory under the\nproject root.\nThis file gets used by all of the binaries distributed by this application.</p>\n<p>By default the logs can be found in the program directory:</p>\n<blockquote>\n~/.dbackups/logs/</blockquote>\n<p>The <cite>dbackupscron</cite> script has its own log allowing easy triage of the cron script</p>\n<blockquote>\n~/.dbackups/logs/database_backup_cron.log</blockquote>\n<p>## Futures</p>\n<ul>\n<li>Windows support</li>\n<li>Script to enter new configuration entries to the database.ini</li>\n<li>Add feature to clone one database to another for Development purposes</li>\n<li>Add cleanup for the dump files. (relying on temp dir cleanup today)</li>\n<li>A simple UI to see uploaded backups, and configure database entries.</li>\n</ul>\n<p>## DataBase Troubleshooting</p>\n<ul>\n<li>[MySQL](docs/mysql.md)</li>\n<li>[PostGreSQL](docs/postgres.md)</li>\n</ul>\n<p>## Reporting issues</p>\n<p>As a start please log issues or they might never be fixed!</p>\n<p>As a guild the following is a checklist of things to check and provide in your issue.</p>\n<ul>\n<li>What OS are you running?</li>\n<li>Please attach the [logs](##Logging)</li>\n<li>Can you reproduce?</li>\n<li>What steps did you take to get the issue?</li>\n</ul>\n<p>## Documentation Issues</p>\n<p>For issues with the documentation or enhancements desired please log an issue with what page the issue is on and all the details about why it is not correct or clarification needed in any part of the docs.</p>\n</div>\n\n          </div>"}, "last_serial": 1047149, "releases": {"0.5.2": [{"comment_text": "", "digests": {"md5": "0bd9cf1e1c626e516834e8c1d9bca0f7", "sha256": "909d27be45257446f57a47c9551617e1f0295c3a3912e8d0c5465728cab22336"}, "downloads": -1, "filename": "dbackups-0.5.2.tar.gz", "has_sig": false, "md5_digest": "0bd9cf1e1c626e516834e8c1d9bca0f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13535, "upload_time": "2014-03-03T20:42:44", "upload_time_iso_8601": "2014-03-03T20:42:44.842098Z", "url": "https://files.pythonhosted.org/packages/08/45/b2ed335ffd31a7d48c4373458fb5253f2975703f31d6d37158f315236e38/dbackups-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "84ecc7c101854cba449138952d16f35e", "sha256": "0a4e78c3f110ed79c38d6b7fbd24d2e00c178b0cb9b15408a35cf6d7ba926136"}, "downloads": -1, "filename": "dbackups-0.5.3.tar.gz", "has_sig": false, "md5_digest": "84ecc7c101854cba449138952d16f35e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13827, "upload_time": "2014-03-11T19:42:43", "upload_time_iso_8601": "2014-03-11T19:42:43.148854Z", "url": "https://files.pythonhosted.org/packages/54/96/403a4badb11d9593901b6ef61e9944f9b27c2167122b80b0019f8724583e/dbackups-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "8ccbc161af651295e46f02539d80d08c", "sha256": "9bf28e1770b222df6a5c196586808c8035493b606b28399386abf88ba5a1d91e"}, "downloads": -1, "filename": "dbackups-0.5.4.tar.gz", "has_sig": false, "md5_digest": "8ccbc161af651295e46f02539d80d08c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13821, "upload_time": "2014-03-31T21:27:24", "upload_time_iso_8601": "2014-03-31T21:27:24.856222Z", "url": "https://files.pythonhosted.org/packages/64/5c/57a6433841629a5aa70b74c2896a6d307c4e6b6bb3b1a4cfa323cdb082bc/dbackups-0.5.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ccbc161af651295e46f02539d80d08c", "sha256": "9bf28e1770b222df6a5c196586808c8035493b606b28399386abf88ba5a1d91e"}, "downloads": -1, "filename": "dbackups-0.5.4.tar.gz", "has_sig": false, "md5_digest": "8ccbc161af651295e46f02539d80d08c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13821, "upload_time": "2014-03-31T21:27:24", "upload_time_iso_8601": "2014-03-31T21:27:24.856222Z", "url": "https://files.pythonhosted.org/packages/64/5c/57a6433841629a5aa70b74c2896a6d307c4e6b6bb3b1a4cfa323cdb082bc/dbackups-0.5.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:59 2020"}