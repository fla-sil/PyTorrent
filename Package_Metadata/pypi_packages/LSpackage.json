{"info": {"author": "Andurnache Alexandru", "author_email": "alex.andur@yahoo.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "Local Search - Metaheuristic\n============================\n\nProject GIT address: https://github.com/anduralex/LSpackage.git\n\nThis lib implements some algorithms described on the book \"Metaheuristics - From Design to Implementation\", from El-Ghazali Talbi.\n\nI am testing the lib and it is available via pip install.\n\nAt this moment, the implementation includes:\n\n* Search\n    * Local Search algorithms - Hill Climbing\n\nInstallation\n============\n\nJust get it:\n\n.. code-block:: none\n\n    pip install LSpackage\n\nYou will need to have pip installed on your system. On linux install the \npython-pip package.\n\nExamples\n========\n\nLSpackage allows you to define problems and look for the solution with\ndifferent strategies. A sample are in the ``hello_word.py``.\n\nThe problem will try to create the string \"HELLO WORLD\" using localSearchAlg algorithm:\n\n.. code-block:: python\n\n from code.models import SearchProblem\n from code.local import hillClimbing,localSearchAlg,firstExpander\n\n WORD = 'HELLO WORLD'\n\n  class HelloProblem(SearchProblem):\n    def actions(self, state):\n        if len(state) < len(WORD):\n            return list(' ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n        else:\n            return []\n\n    def result(self, state, action):\n        return state+action\n\n    def value(self, state):\n        # how many correct letters there are?\n        count=sum(1 if state[i] == WORD[i] else 0\n                   for i in range(min(len(WORD), len(state))))\n        return count\n\n result = localSearchAlg(HelloProblem(initial_state=''),firstExpander)\n print(result.state)\n\nMore detailed documentation\n===========================\n\nYou can read the book \"Metaheuristics - From Design to Implementation\", from El-Ghazali Talbi. Or for offline access, you can clone the project code repository and work with it.\n\nAuthors\n=======\n\n* Andurnache Alexandru\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/alexandur/LSpackage", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "LSpackage", "package_url": "https://pypi.org/project/LSpackage/", "platform": "", "project_url": "https://pypi.org/project/LSpackage/", "project_urls": {"Homepage": "http://github.com/alexandur/LSpackage"}, "release_url": "https://pypi.org/project/LSpackage/1.0/", "requires_dist": null, "requires_python": "", "summary": "An implementation of Local Search algorithms based on single solution design", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Local Search - Metaheuristic<br>============================<br><br>Project GIT address: https://github.com/anduralex/LSpackage.git<br><br>This lib implements some algorithms described on the book \"Metaheuristics - From Design to Implementation\", from El-Ghazali Talbi.<br><br>I am testing the lib and it is available via pip install.<br><br>At this moment, the implementation includes:<br><br>* Search<br>    * Local Search algorithms - Hill Climbing<br><br>Installation<br>============<br><br>Just get it:<br><br>.. code-block:: none<br><br>    pip install LSpackage<br><br>You will need to have pip installed on your system. On linux install the <br>python-pip package.<br><br>Examples<br>========<br><br>LSpackage allows you to define problems and look for the solution with<br>different strategies. A sample are in the ``hello_word.py``.<br><br>The problem will try to create the string \"HELLO WORLD\" using localSearchAlg algorithm:<br><br>.. code-block:: python<br><br> from code.models import SearchProblem<br> from code.local import hillClimbing,localSearchAlg,firstExpander<br><br> WORD = 'HELLO WORLD'<br><br>  class HelloProblem(SearchProblem):<br>    def actions(self, state):<br>        if len(state) &lt; len(WORD):<br>            return list(' ABCDEFGHIJKLMNOPQRSTUVWXYZ')<br>        else:<br>            return []<br><br>    def result(self, state, action):<br>        return state+action<br><br>    def value(self, state):<br>        # how many correct letters there are?<br>        count=sum(1 if state[i] == WORD[i] else 0<br>                   for i in range(min(len(WORD), len(state))))<br>        return count<br><br> result = localSearchAlg(HelloProblem(initial_state=''),firstExpander)<br> print(result.state)<br><br>More detailed documentation<br>===========================<br><br>You can read the book \"Metaheuristics - From Design to Implementation\", from El-Ghazali Talbi. Or for offline access, you can clone the project code repository and work with it.<br><br>Authors<br>=======<br><br>* Andurnache Alexandru<br><br><br>\n          </div>"}, "last_serial": 4581847, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "10a3e12a02bace70d510895887b8c31c", "sha256": "9920ea68de0b3e1b3e5be78a86f85351613456effc6e593b60b6d8b136c77f51"}, "downloads": -1, "filename": "LSpackage-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "10a3e12a02bace70d510895887b8c31c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6781, "upload_time": "2018-12-08T15:21:04", "upload_time_iso_8601": "2018-12-08T15:21:04.220623Z", "url": "https://files.pythonhosted.org/packages/60/ef/e7fc9393bb1bf171a1bd33d08e62e358e6b3159ae49de22ec4eb56c948fb/LSpackage-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c03970b2c3a664c3b77e364b1f43251", "sha256": "66bd6f6d5c33541147825d7714543d81f284aa1b78637f45144d4ba3487a76fa"}, "downloads": -1, "filename": "LSpackage-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2c03970b2c3a664c3b77e364b1f43251", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5869, "upload_time": "2018-12-08T15:21:07", "upload_time_iso_8601": "2018-12-08T15:21:07.026762Z", "url": "https://files.pythonhosted.org/packages/f6/e2/00687f8e888fec266b21bf4fcfdd97694f3b5058fc3e1451e29d0b2461eb/LSpackage-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7b1007bfc45976511b934245549c894", "sha256": "2543677d7640ff8f01a04c6b66eda13a8d120e8f2ac8f8c501ca65f448839fac"}, "downloads": -1, "filename": "LSpackage-0.1.tar.gz", "has_sig": false, "md5_digest": "d7b1007bfc45976511b934245549c894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5095, "upload_time": "2018-12-08T15:21:08", "upload_time_iso_8601": "2018-12-08T15:21:08.508157Z", "url": "https://files.pythonhosted.org/packages/64/f2/cad2db693009c0a6106b58d95e8901d5ef5344a269f39cc3c185185168b1/LSpackage-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f4d4f05976787a05c3987069af3f0ed4", "sha256": "ad27e6fdb9cde58493023fb7e49dedf275e6ad2fa130722419b0df14175689f8"}, "downloads": -1, "filename": "LSpackage-0.2.tar.gz", "has_sig": false, "md5_digest": "f4d4f05976787a05c3987069af3f0ed4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4811, "upload_time": "2018-12-09T16:09:46", "upload_time_iso_8601": "2018-12-09T16:09:46.569559Z", "url": "https://files.pythonhosted.org/packages/80/29/3537441ab82804e890b1e6852a31e4f3c8dd7a76bf1f5f01aa71e8aeae35/LSpackage-0.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "e451b49e11135eca04fbae1714eacd6b", "sha256": "460580b55520008800a0f0434698d6e27b9c31f64dfa8f3f6212b1deaa94cee5"}, "downloads": -1, "filename": "LSpackage-1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "e451b49e11135eca04fbae1714eacd6b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5595, "upload_time": "2018-12-10T17:48:45", "upload_time_iso_8601": "2018-12-10T17:48:45.883755Z", "url": "https://files.pythonhosted.org/packages/99/76/9dc38c343123f7ce22845bdfacfa8cd1a863276474c44131c7f454823d87/LSpackage-1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e354ed8c735ad6ed4e766b674d1d0ed", "sha256": "2c2937f306d986171d7b97b965d84fe23e6081a386396645c050cb03217d9a03"}, "downloads": -1, "filename": "LSpackage-1.0.tar.gz", "has_sig": false, "md5_digest": "9e354ed8c735ad6ed4e766b674d1d0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4753, "upload_time": "2018-12-10T17:48:55", "upload_time_iso_8601": "2018-12-10T17:48:55.130544Z", "url": "https://files.pythonhosted.org/packages/76/b7/069b58b601411dcc751f113251d1d6f0842420df844c2b5a0a5ad8c9dc76/LSpackage-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e451b49e11135eca04fbae1714eacd6b", "sha256": "460580b55520008800a0f0434698d6e27b9c31f64dfa8f3f6212b1deaa94cee5"}, "downloads": -1, "filename": "LSpackage-1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "e451b49e11135eca04fbae1714eacd6b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5595, "upload_time": "2018-12-10T17:48:45", "upload_time_iso_8601": "2018-12-10T17:48:45.883755Z", "url": "https://files.pythonhosted.org/packages/99/76/9dc38c343123f7ce22845bdfacfa8cd1a863276474c44131c7f454823d87/LSpackage-1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e354ed8c735ad6ed4e766b674d1d0ed", "sha256": "2c2937f306d986171d7b97b965d84fe23e6081a386396645c050cb03217d9a03"}, "downloads": -1, "filename": "LSpackage-1.0.tar.gz", "has_sig": false, "md5_digest": "9e354ed8c735ad6ed4e766b674d1d0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4753, "upload_time": "2018-12-10T17:48:55", "upload_time_iso_8601": "2018-12-10T17:48:55.130544Z", "url": "https://files.pythonhosted.org/packages/76/b7/069b58b601411dcc751f113251d1d6f0842420df844c2b5a0a5ad8c9dc76/LSpackage-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:27 2020"}