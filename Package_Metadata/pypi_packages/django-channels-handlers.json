{"info": {"author": "Josh Smith", "author_email": "josh@joshsmith.codes", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# django-channels-handlers\n\n[![Latest PyPI\nversion](https://img.shields.io/pypi/v/django-channels-handlers.svg)](https://pypi.python.org/pypi/django-channels-handlers)\n[![image](https://travis-ci.com/joshua-s/django-channels-handlers.svg?branch=master)](https://travis-ci.com/joshua-s/django-channels-handlers)\n\nDjango Channels consumers, without the Pain \ud83d\udc8a\n\ndjango-channels-handers is an abstraction\nfor Django Channels that makes it easy to implement elegant protocols\nwithout having to worry about the communication layer.\n\n## Requirements\n\n- Django>=2.1\n- channels~=2.4\n- pydantic~=1.4\n\n## Usage\n\nInstall django-channels-handlers from\npypi:\n```bash\npip install django-channels-handlers\n```\n\nCreate pydantic models for each message you intend to handle. This\nallows the handler to validate the message and parse it into an object.\n\n```python\nfrom pydantic import BaseModel, UUID4\nfrom typing import Dict, Optional\nfrom datetime import datetime\n\n\nclass ChatMessage(BaseModel):\n    type: str = \"chat.message\"\n    id: UUID4\n    thread: UUID4\n    sender: UUID4\n    content: str\n    data: Optional[Dict] = {}\n    created: datetime\n```\n\nCreate a message handler.\n\nThis will first validate and parse a message that matches\nhandled_types using the corresponding\nentry in models. It will then execute the\nmethod specified in handled_types,\npassing the newly parsed message object.\n\n```python\nfrom channels_handlers.handlers import MessageHandler\n# For async, import AsyncMessageHandler\n\n\nclass ChatHandler(MessageHandler):\n    namespace = \"chat\"\n    models = {\n        \"chat.message\": ChatMessage,\n    }\n\n    def message(self, message):\n        # Some logic with message, e.g. save to database\n        pass\n```\n\nImport ConsumerHandlerMixin and add it to\nyour Django Channels consumer. Then, add your custom handler to the\nconsumer's handler_classes.\n\n```python\nfrom channels_handlers.consumers import ConsumerHandlerMixin\n# For async, import AsyncConsumerHandlerMixin\nfrom channels.generic.websocket import JsonWebsocketConsumer\n\n\nclass MyConsumer(ConsumerHandlerMixin, JsonWebsocketConsumer):\n    handler_classes = [ChatHandler]\n```\n\n## Compatibility\n\ndjango-channels-handlers is compatible\nwith Python 3.7+, Django 2.2+, and Django Channels 2.2+.\n\n## License\n\ndjango-channels-handlers is licensed\nunder the MIT License.\n\n## Authors\n\nSee [AUTHORS.md](AUTHORS.md).\n\n## Contributing\n\ndjango-channels-handlers relies on the contributions of talented coders like you.\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for more information.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joshua-s/django-channels-handlers", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-channels-handlers", "package_url": "https://pypi.org/project/django-channels-handlers/", "platform": "", "project_url": "https://pypi.org/project/django-channels-handlers/", "project_urls": {"Homepage": "https://github.com/joshua-s/django-channels-handlers"}, "release_url": "https://pypi.org/project/django-channels-handlers/0.2.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Django Channels, without the Pain \ud83d\udc8a", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-channels-handlers</h1>\n<p><a href=\"https://pypi.python.org/pypi/django-channels-handlers\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b17593b92a2f651721da516b3a43b605bf6018d8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d6368616e6e656c732d68616e646c6572732e737667\"></a>\n<a href=\"https://travis-ci.com/joshua-s/django-channels-handlers\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cb60d1e7f833d71960264a40e40908990504aa0/68747470733a2f2f7472617669732d63692e636f6d2f6a6f736875612d732f646a616e676f2d6368616e6e656c732d68616e646c6572732e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Django Channels consumers, without the Pain \ud83d\udc8a</p>\n<p>django-channels-handers is an abstraction\nfor Django Channels that makes it easy to implement elegant protocols\nwithout having to worry about the communication layer.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Django&gt;=2.1</li>\n<li>channels~=2.4</li>\n<li>pydantic~=1.4</li>\n</ul>\n<h2>Usage</h2>\n<p>Install django-channels-handlers from\npypi:</p>\n<pre>pip install django-channels-handlers\n</pre>\n<p>Create pydantic models for each message you intend to handle. This\nallows the handler to validate the message and parse it into an object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">UUID4</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ChatMessage</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\"chat.message\"</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">UUID4</span>\n    <span class=\"n\">thread</span><span class=\"p\">:</span> <span class=\"n\">UUID4</span>\n    <span class=\"n\">sender</span><span class=\"p\">:</span> <span class=\"n\">UUID4</span>\n    <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">created</span><span class=\"p\">:</span> <span class=\"n\">datetime</span>\n</pre>\n<p>Create a message handler.</p>\n<p>This will first validate and parse a message that matches\nhandled_types using the corresponding\nentry in models. It will then execute the\nmethod specified in handled_types,\npassing the newly parsed message object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">channels_handlers.handlers</span> <span class=\"kn\">import</span> <span class=\"n\">MessageHandler</span>\n<span class=\"c1\"># For async, import AsyncMessageHandler</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ChatHandler</span><span class=\"p\">(</span><span class=\"n\">MessageHandler</span><span class=\"p\">):</span>\n    <span class=\"n\">namespace</span> <span class=\"o\">=</span> <span class=\"s2\">\"chat\"</span>\n    <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"chat.message\"</span><span class=\"p\">:</span> <span class=\"n\">ChatMessage</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Some logic with message, e.g. save to database</span>\n        <span class=\"k\">pass</span>\n</pre>\n<p>Import ConsumerHandlerMixin and add it to\nyour Django Channels consumer. Then, add your custom handler to the\nconsumer's handler_classes.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">channels_handlers.consumers</span> <span class=\"kn\">import</span> <span class=\"n\">ConsumerHandlerMixin</span>\n<span class=\"c1\"># For async, import AsyncConsumerHandlerMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">channels.generic.websocket</span> <span class=\"kn\">import</span> <span class=\"n\">JsonWebsocketConsumer</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyConsumer</span><span class=\"p\">(</span><span class=\"n\">ConsumerHandlerMixin</span><span class=\"p\">,</span> <span class=\"n\">JsonWebsocketConsumer</span><span class=\"p\">):</span>\n    <span class=\"n\">handler_classes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ChatHandler</span><span class=\"p\">]</span>\n</pre>\n<h2>Compatibility</h2>\n<p>django-channels-handlers is compatible\nwith Python 3.7+, Django 2.2+, and Django Channels 2.2+.</p>\n<h2>License</h2>\n<p>django-channels-handlers is licensed\nunder the MIT License.</p>\n<h2>Authors</h2>\n<p>See <a href=\"AUTHORS.md\" rel=\"nofollow\">AUTHORS.md</a>.</p>\n<h2>Contributing</h2>\n<p>django-channels-handlers relies on the contributions of talented coders like you.\nSee <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> for more information.</p>\n\n          </div>"}, "last_serial": 6972402, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "869154ede0a3f80f135206e0e8c1224a", "sha256": "a111e09fdc7adbb1f6ccf8bd4766defd3c2d609db080eed42b945a84e871c15c"}, "downloads": -1, "filename": "django_channels_handlers-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "869154ede0a3f80f135206e0e8c1224a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5118, "upload_time": "2019-08-10T02:38:03", "upload_time_iso_8601": "2019-08-10T02:38:03.301813Z", "url": "https://files.pythonhosted.org/packages/48/b5/cb1ea89b65f7dfe37d9f2f434303085b70660f9395dfb895ba6e5b4c19cc/django_channels_handlers-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5198f7c78574de625063db46df79d40b", "sha256": "697b29f5686355ee82943edd91c1f925055f913f0bb42391b47c92ac773c3541"}, "downloads": -1, "filename": "django-channels-handlers-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5198f7c78574de625063db46df79d40b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3277, "upload_time": "2019-08-10T02:38:06", "upload_time_iso_8601": "2019-08-10T02:38:06.058246Z", "url": "https://files.pythonhosted.org/packages/17/02/e7bb055ddcc14fc97cd52bc87b5d1a77618b39f95929a7bffbb33430ec88/django-channels-handlers-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2c981438eb26e2b5826d91abe7174d3f", "sha256": "14685407db5fd7961635c59a35d368b81a81466ecf8b883e04a0a77271d56930"}, "downloads": -1, "filename": "django-channels-handlers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2c981438eb26e2b5826d91abe7174d3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4215, "upload_time": "2020-04-07T02:06:05", "upload_time_iso_8601": "2020-04-07T02:06:05.228222Z", "url": "https://files.pythonhosted.org/packages/01/bd/22aa28bf0db1de6d499980e4cb4004ac944cdfe12ebe0dcef724d828d934/django-channels-handlers-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ff396cb35389484616e593d3d0ba7b0c", "sha256": "c5363f5697525802201877c8cc08dab6c922162cfaf90cefcee28c03fc6dbd4d"}, "downloads": -1, "filename": "django-channels-handlers-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ff396cb35389484616e593d3d0ba7b0c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4212, "upload_time": "2020-04-07T19:33:33", "upload_time_iso_8601": "2020-04-07T19:33:33.435845Z", "url": "https://files.pythonhosted.org/packages/6f/de/0d8e6222bff507391d9e84eae25ef1c968b7d2105874d478fa7ce8533bd2/django-channels-handlers-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff396cb35389484616e593d3d0ba7b0c", "sha256": "c5363f5697525802201877c8cc08dab6c922162cfaf90cefcee28c03fc6dbd4d"}, "downloads": -1, "filename": "django-channels-handlers-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ff396cb35389484616e593d3d0ba7b0c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4212, "upload_time": "2020-04-07T19:33:33", "upload_time_iso_8601": "2020-04-07T19:33:33.435845Z", "url": "https://files.pythonhosted.org/packages/6f/de/0d8e6222bff507391d9e84eae25ef1c968b7d2105874d478fa7ce8533bd2/django-channels-handlers-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:11 2020"}