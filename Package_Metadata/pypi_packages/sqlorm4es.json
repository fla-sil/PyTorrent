{"info": {"author": "floatsliang", "author_email": "utavianus@qq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "### sqlorm4es\n\nA simple and expressive (like peewee) sql-like orm for elasticsearch.\n\n#### Examples\n\n* Defining index model in a Django way:\n\n```python\nfrom sqlorm4es import *\n\nclass LogCenter(BaseModel):\n    __index__ = 'lala'\n    __database__ = {\n        \"host\": \"127.0.0.1:9200\"\n    }\n\n    ok = Boolean(default=True)\n    lineno = Integer(required=True)\n    message = Text(default='xixi')\n    timestamp = Date(name=\"@timestamp\", timezone=\"+8\")\n    bigbrother = Object(\n        head=Text(),\n        hand=Object(\n            finger=Float(),\n            nail=Boolean()\n        )\n    )\n```\n\n* Search elasticsearch in a expressive way:\n\n```python\nres = LogCenter.select(LogCenter.ok, LogCenter.lineno, 'max(lineno)') \\\n    .where(((LogCenter.ok == False) & (LogCenter.message != 'error')) |\n           (LogCenter.timestamp >= '2017-10-12') |\n           (LogCenter.bigbrother.head >> ' ( tough; soft, medium soft ) '))\\\n    .execute()\n```\n\n* Note that and(&)/or(|) expression in where can be nested\n* Also support group by aggregation: MAX, MIN, AVG, SUM, COUNT...\n* Also support order by, LIMIT, OFFSET:\n\n```python\nres = LogCenter.select('max(lineno)')\\\n    .group_by(LogCenter.ok, LogCenter.timestamp)\\\n    .order_by((LogCenter.timestamp, 'asc'))\\\n    .execute()\n```\n* Manipulate document like a normal python object, value will be validated when assigning it (eg. value in Date Field all stored as UTC):\n```python\nnew_log = LogCenter(ok=False, message='oops', timestamp='2019-10-10')\nnew_log.bigbrother = {\n    \"head\": 'tough',\n    \"hand\": {\n        \"finger\": \"long\",\n        \"nail\": \"clean\"\n    }\n}\n```\n* Create a single document:\n```python\nnew_log.save()\n```\n* **Insert, Delete, Update and Index operation**: Coming soon...\n\n#### Install\nSqlorm4es has been packaged to pypi, so just need one simple command to install it:\n```shell\npip install sqlorm4es\n```\n\n#### Elasticsearch driver\nSqlorm4es implemented a simple almost lock-free connection pool based on official Elasticsearch client. As it is lock-free, so i am not sure whether it is thread-safe, but it works fine under my own multi-thread tests :)\n* Note that if you did not set config of your model, it will use the default config as below:\n```python\nconfig = {\n    'hosts': ['127.0.0.1:9200'],\n    'maxsize': 20,\n    'sniff_on_start': False,\n    'sniff_on_connection_fail': False,\n    'sniff_timeout': .1,\n    'sniffer_timeout': None,\n    'retry_on_timeout': False,\n    'timeout': 60,\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/floatliang/sqlorm4es", "keywords": "sql orm elasticsearch", "license": "", "maintainer": "", "maintainer_email": "", "name": "sqlorm4es", "package_url": "https://pypi.org/project/sqlorm4es/", "platform": "any", "project_url": "https://pypi.org/project/sqlorm4es/", "project_urls": {"Homepage": "https://github.com/floatliang/sqlorm4es"}, "release_url": "https://pypi.org/project/sqlorm4es/1.1.5/", "requires_dist": null, "requires_python": "", "summary": "A simple, expressive elasticsearch orm", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>sqlorm4es</h3>\n<p>A simple and expressive (like peewee) sql-like orm for elasticsearch.</p>\n<h4>Examples</h4>\n<ul>\n<li>Defining index model in a Django way:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlorm4es</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LogCenter</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"fm\">__index__</span> <span class=\"o\">=</span> <span class=\"s1\">'lala'</span>\n    <span class=\"n\">__database__</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"host\"</span><span class=\"p\">:</span> <span class=\"s2\">\"127.0.0.1:9200\"</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">ok</span> <span class=\"o\">=</span> <span class=\"n\">Boolean</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">lineno</span> <span class=\"o\">=</span> <span class=\"n\">Integer</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">Text</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'xixi'</span><span class=\"p\">)</span>\n    <span class=\"n\">timestamp</span> <span class=\"o\">=</span> <span class=\"n\">Date</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"@timestamp\"</span><span class=\"p\">,</span> <span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s2\">\"+8\"</span><span class=\"p\">)</span>\n    <span class=\"n\">bigbrother</span> <span class=\"o\">=</span> <span class=\"n\">Object</span><span class=\"p\">(</span>\n        <span class=\"n\">head</span><span class=\"o\">=</span><span class=\"n\">Text</span><span class=\"p\">(),</span>\n        <span class=\"n\">hand</span><span class=\"o\">=</span><span class=\"n\">Object</span><span class=\"p\">(</span>\n            <span class=\"n\">finger</span><span class=\"o\">=</span><span class=\"n\">Float</span><span class=\"p\">(),</span>\n            <span class=\"n\">nail</span><span class=\"o\">=</span><span class=\"n\">Boolean</span><span class=\"p\">()</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Search elasticsearch in a expressive way:</li>\n</ul>\n<pre><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">,</span> <span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">lineno</span><span class=\"p\">,</span> <span class=\"s1\">'max(lineno)'</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(((</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">ok</span> <span class=\"o\">==</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"o\">!=</span> <span class=\"s1\">'error'</span><span class=\"p\">))</span> <span class=\"o\">|</span>\n           <span class=\"p\">(</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">timestamp</span> <span class=\"o\">&gt;=</span> <span class=\"s1\">'2017-10-12'</span><span class=\"p\">)</span> <span class=\"o\">|</span>\n           <span class=\"p\">(</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">bigbrother</span><span class=\"o\">.</span><span class=\"n\">head</span> <span class=\"o\">&gt;&gt;</span> <span class=\"s1\">' ( tough; soft, medium soft ) '</span><span class=\"p\">))</span>\\\n    <span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Note that and(&amp;)/or(|) expression in where can be nested</li>\n<li>Also support group by aggregation: MAX, MIN, AVG, SUM, COUNT...</li>\n<li>Also support order by, LIMIT, OFFSET:</li>\n</ul>\n<pre><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'max(lineno)'</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">group_by</span><span class=\"p\">(</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">,</span> <span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">((</span><span class=\"n\">LogCenter</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">,</span> <span class=\"s1\">'asc'</span><span class=\"p\">))</span>\\\n    <span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Manipulate document like a normal python object, value will be validated when assigning it (eg. value in Date Field all stored as UTC):</li>\n</ul>\n<pre><span class=\"n\">new_log</span> <span class=\"o\">=</span> <span class=\"n\">LogCenter</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'oops'</span><span class=\"p\">,</span> <span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"s1\">'2019-10-10'</span><span class=\"p\">)</span>\n<span class=\"n\">new_log</span><span class=\"o\">.</span><span class=\"n\">bigbrother</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"head\"</span><span class=\"p\">:</span> <span class=\"s1\">'tough'</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"hand\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"finger\"</span><span class=\"p\">:</span> <span class=\"s2\">\"long\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"nail\"</span><span class=\"p\">:</span> <span class=\"s2\">\"clean\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>Create a single document:</li>\n</ul>\n<pre><span class=\"n\">new_log</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><strong>Insert, Delete, Update and Index operation</strong>: Coming soon...</li>\n</ul>\n<h4>Install</h4>\n<p>Sqlorm4es has been packaged to pypi, so just need one simple command to install it:</p>\n<pre>pip install sqlorm4es\n</pre>\n<h4>Elasticsearch driver</h4>\n<p>Sqlorm4es implemented a simple almost lock-free connection pool based on official Elasticsearch client. As it is lock-free, so i am not sure whether it is thread-safe, but it works fine under my own multi-thread tests :)</p>\n<ul>\n<li>Note that if you did not set config of your model, it will use the default config as below:</li>\n</ul>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'hosts'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'127.0.0.1:9200'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'maxsize'</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n    <span class=\"s1\">'sniff_on_start'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'sniff_on_connection_fail'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'sniff_timeout'</span><span class=\"p\">:</span> <span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'sniffer_timeout'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'retry_on_timeout'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'timeout'</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6339833, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "64c81a40005517b761168e2497a3974b", "sha256": "585cc54e8f34826296c205d39eb08151eb23efae1e41a70cf9372f5df99eab90"}, "downloads": -1, "filename": "sqlorm4es-1.1.0-py3.6.egg", "has_sig": false, "md5_digest": "64c81a40005517b761168e2497a3974b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 41921, "upload_time": "2019-10-12T15:18:22", "upload_time_iso_8601": "2019-10-12T15:18:22.227841Z", "url": "https://files.pythonhosted.org/packages/ee/4a/aadb29128703563f9504082550b6f70375dc7ab2a14aaa11d0e3ba423305/sqlorm4es-1.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b71584030c825bb35793dc462f6a8b6", "sha256": "88d50f717a5652fe018e9d3539da728aa1a62349354e6ed2cbee10324e9a841a"}, "downloads": -1, "filename": "sqlorm4es-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5b71584030c825bb35793dc462f6a8b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16963, "upload_time": "2019-10-12T15:18:25", "upload_time_iso_8601": "2019-10-12T15:18:25.782783Z", "url": "https://files.pythonhosted.org/packages/4d/5e/b4a8546ea426783c0b78020841a975993180e84a135a5eb7bf041f99b4c3/sqlorm4es-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "9f9004497c629698d3e611430c454a0b", "sha256": "82ba9fcfba82ee31722938131148931334dfe113391165b9ce5fc56873204b9b"}, "downloads": -1, "filename": "sqlorm4es-1.1.1.tar.gz", "has_sig": false, "md5_digest": "9f9004497c629698d3e611430c454a0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16956, "upload_time": "2019-10-12T15:43:22", "upload_time_iso_8601": "2019-10-12T15:43:22.510427Z", "url": "https://files.pythonhosted.org/packages/7e/35/c4c4e0948714b8d3b71c24aae8d78c5e2446c2ea6a388271f8aef1418fad/sqlorm4es-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f56970aa6960bd4a1b8fffeaa0f86e98", "sha256": "972802cba685a196ff14f727bdbdff3603c1fe7343dd430adb4b2b689bf2dffe"}, "downloads": -1, "filename": "sqlorm4es-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f56970aa6960bd4a1b8fffeaa0f86e98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17964, "upload_time": "2019-10-13T14:51:35", "upload_time_iso_8601": "2019-10-13T14:51:35.543672Z", "url": "https://files.pythonhosted.org/packages/f1/bf/e5f7acc9fdf2b32a2550bafbbf235fe2d7f8416a3f19f7c968a56b7a8d1b/sqlorm4es-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "6b0338698d211a78edcd7bb0c543bc5a", "sha256": "e48e0a2ea9c9e8d7781ef5c06e93190717efb31946b029b4e804dfa9f7e06c42"}, "downloads": -1, "filename": "sqlorm4es-1.1.3.tar.gz", "has_sig": false, "md5_digest": "6b0338698d211a78edcd7bb0c543bc5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18554, "upload_time": "2019-10-17T15:59:36", "upload_time_iso_8601": "2019-10-17T15:59:36.288117Z", "url": "https://files.pythonhosted.org/packages/85/11/d7ecbba23a36412356322d2a4c7ce3a7227e3174a0866fc7d9807d4410af/sqlorm4es-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "cfac36755577caeda687fe033db2a4b0", "sha256": "844c0f7df110ef58457bccc1a58b25e8976612dc22af647363edf777df3c177f"}, "downloads": -1, "filename": "sqlorm4es-1.1.4.tar.gz", "has_sig": false, "md5_digest": "cfac36755577caeda687fe033db2a4b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19185, "upload_time": "2019-11-11T13:14:41", "upload_time_iso_8601": "2019-11-11T13:14:41.484386Z", "url": "https://files.pythonhosted.org/packages/81/9b/c5ebd33d6148b0827e59b9047ea17fcb29c35d1b11ed79065f145dab22b4/sqlorm4es-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "0b36089a4e0c0f84d2b738a3db65b32c", "sha256": "e61cf8cf407e5d98a41b48f6ed14407d5635fd099853eec192635bfd70eb46bb"}, "downloads": -1, "filename": "sqlorm4es-1.1.5.tar.gz", "has_sig": false, "md5_digest": "0b36089a4e0c0f84d2b738a3db65b32c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19844, "upload_time": "2019-12-20T15:45:14", "upload_time_iso_8601": "2019-12-20T15:45:14.388316Z", "url": "https://files.pythonhosted.org/packages/ce/78/906c699f38c174fb5d396979348040e6caf728e6b0b527274b68eb0ac44d/sqlorm4es-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b36089a4e0c0f84d2b738a3db65b32c", "sha256": "e61cf8cf407e5d98a41b48f6ed14407d5635fd099853eec192635bfd70eb46bb"}, "downloads": -1, "filename": "sqlorm4es-1.1.5.tar.gz", "has_sig": false, "md5_digest": "0b36089a4e0c0f84d2b738a3db65b32c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19844, "upload_time": "2019-12-20T15:45:14", "upload_time_iso_8601": "2019-12-20T15:45:14.388316Z", "url": "https://files.pythonhosted.org/packages/ce/78/906c699f38c174fb5d396979348040e6caf728e6b0b527274b68eb0ac44d/sqlorm4es-1.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:36 2020"}