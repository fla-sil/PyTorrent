{"info": {"author": "Diogo de Jesus Soares Machado", "author_email": "diogomachado.bioinfo@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "PyInstaller Overview\n====================\nThe aminocode library can be used to encode texts written in natural language in a format based on amino acids. With coding is enable the application of various bioinformatics tools in text mining.\n\nStand alone tools based on library are available at link <https://sourceforge.net/projects/aminocode>.\n\nInstallation\n------------\nTo install aminocode through `pip`::\n\n      pip install aminocode\n\n\nTested Platforms\n----------------\n- Python:\n\n - 3.7.4\n\n- Windows (64bits):\n\n - 10\n\n- Ubuntu (64bits)\n\n - 18.04.1 LTS\n\nRequired external libraries\n---------------------------\n- numpy\n- unidecode\n- biopython\n\nFunctions\n---------------\n- :code:`encodetext(text,detailing='')`\n\n - **text:** natural language text string to be encoded;\n - **detailing:** details in coding. 'd' for details in digits. 'p' for details on the punctuation. 'dp' or 'pd' for both;\n - **output:** encode string.\n\n- :code:`decodetext(text,detailing='')`\n\n - **text:** text string encoded using the encodefile function to be decode;\n - **detailing:** details used in the text to be decoded. 'd' for details in digits. 'p' for details on the punctuation. 'dp' or 'pd' for both;\n - **output:** decode string.\n\n- :code:`encodefile(input_file_name,output_file_name=None,detailing='',header_format='number+originaltext',verbose=False)`\n\n - **input_file_name:** text file name or _io.TextIOWrapper variable. It can also be used the format that is imported by the Bio.SeqIO library of Biopython, in which case the function will automatically extract the headers to do the encoding;\n - **output_file_name:** the name for the output file. If not defined, the result will only be returned as a variable;\n - **detailing:** same as in the encodetext function;\n - **header_format:** format for the headers of the generated FASTA. It can be 'number+originaltext', 'number' or 'originaltext'. 'number' is a count of the lines in the input file. Blank lines are considered in the count, but are not added to the FASTA file. 'originaltext' is the input text itself;\n - **verbose:** if True displays progress;\n - **output:** FASTA variable in Biopython format. If defined output_file_name a file will be saved.\n\n\n- :code:`decodefile(input_file_name,output_file_name=None,detailing='',verbose=False)`\n\n - **input_file_name:** file name or variable in the format used by Biopython's Bio.SeqIO library\n - **output_file_name:** the name for the output file. If not defined, the result will only be returned as a variable;\n - **detailing:** same as in the decodetext function;\n - **verbose:** if True displays progress;\n - **output:** string list. If defined output_file_name a file will be saved.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aminocode", "package_url": "https://pypi.org/project/aminocode/", "platform": "", "project_url": "https://pypi.org/project/aminocode/", "project_urls": null, "release_url": "https://pypi.org/project/aminocode/1.0.1/", "requires_dist": ["numpy", "unidecode", "Biopython"], "requires_python": "", "summary": "The aminocode library can be used to encode texts written in natural language in a format based on amino acids", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The aminocode library can be used to encode texts written in natural language in a format based on amino acids. With coding is enable the application of various bioinformatics tools in text mining.</p>\n<p>Stand alone tools based on library are available at link &lt;<a href=\"https://sourceforge.net/projects/aminocode\" rel=\"nofollow\">https://sourceforge.net/projects/aminocode</a>&gt;.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install aminocode through <cite>pip</cite>:</p>\n<pre>pip install aminocode\n</pre>\n</div>\n<div id=\"tested-platforms\">\n<h2>Tested Platforms</h2>\n<ul>\n<li>Python:</li>\n</ul>\n<blockquote>\n<ul>\n<li>3.7.4</li>\n</ul>\n</blockquote>\n<ul>\n<li>Windows (64bits):</li>\n</ul>\n<blockquote>\n<ul>\n<li>10</li>\n</ul>\n</blockquote>\n<ul>\n<li>Ubuntu (64bits)</li>\n</ul>\n<blockquote>\n<ul>\n<li>18.04.1 LTS</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"required-external-libraries\">\n<h2>Required external libraries</h2>\n<ul>\n<li>numpy</li>\n<li>unidecode</li>\n<li>biopython</li>\n</ul>\n</div>\n<div id=\"functions\">\n<h2>Functions</h2>\n<ul>\n<li><code>encodetext(text,detailing='')</code></li>\n</ul>\n<blockquote>\n<ul>\n<li><strong>text:</strong> natural language text string to be encoded;</li>\n<li><strong>detailing:</strong> details in coding. \u2018d\u2019 for details in digits. \u2018p\u2019 for details on the punctuation. \u2018dp\u2019 or \u2018pd\u2019 for both;</li>\n<li><strong>output:</strong> encode string.</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>decodetext(text,detailing='')</code></li>\n</ul>\n<blockquote>\n<ul>\n<li><strong>text:</strong> text string encoded using the encodefile function to be decode;</li>\n<li><strong>detailing:</strong> details used in the text to be decoded. \u2018d\u2019 for details in digits. \u2018p\u2019 for details on the punctuation. \u2018dp\u2019 or \u2018pd\u2019 for both;</li>\n<li><strong>output:</strong> decode string.</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>encodefile(input_file_name,output_file_name=None,detailing='',header_format='number+originaltext',verbose=False)</code></li>\n</ul>\n<blockquote>\n<ul>\n<li><strong>input_file_name:</strong> text file name or _io.TextIOWrapper variable. It can also be used the format that is imported by the Bio.SeqIO library of Biopython, in which case the function will automatically extract the headers to do the encoding;</li>\n<li><strong>output_file_name:</strong> the name for the output file. If not defined, the result will only be returned as a variable;</li>\n<li><strong>detailing:</strong> same as in the encodetext function;</li>\n<li><strong>header_format:</strong> format for the headers of the generated FASTA. It can be \u2018number+originaltext\u2019, \u2018number\u2019 or \u2018originaltext\u2019. \u2018number\u2019 is a count of the lines in the input file. Blank lines are considered in the count, but are not added to the FASTA file. \u2018originaltext\u2019 is the input text itself;</li>\n<li><strong>verbose:</strong> if True displays progress;</li>\n<li><strong>output:</strong> FASTA variable in Biopython format. If defined output_file_name a file will be saved.</li>\n</ul>\n</blockquote>\n<ul>\n<li><code>decodefile(input_file_name,output_file_name=None,detailing='',verbose=False)</code></li>\n</ul>\n<blockquote>\n<ul>\n<li><strong>input_file_name:</strong> file name or variable in the format used by Biopython\u2019s Bio.SeqIO library</li>\n<li><strong>output_file_name:</strong> the name for the output file. If not defined, the result will only be returned as a variable;</li>\n<li><strong>detailing:</strong> same as in the decodetext function;</li>\n<li><strong>verbose:</strong> if True displays progress;</li>\n<li><strong>output:</strong> string list. If defined output_file_name a file will be saved.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 6712830, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "71930c37c979e3e80e99de8624a1822b", "sha256": "8d342bbcaaae66c4cc1e31c7fbe7b374faee9cee107f205bbc5bf829e5eb7e36"}, "downloads": -1, "filename": "aminocode-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71930c37c979e3e80e99de8624a1822b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4527, "upload_time": "2020-02-26T17:43:38", "upload_time_iso_8601": "2020-02-26T17:43:38.722317Z", "url": "https://files.pythonhosted.org/packages/e2/e8/661407e19b7fb14e396e7ef545dfe71d810ca695cfc3b2f2e19e3c491aea/aminocode-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03c88de3735a4a1ba3a8351fd98361ea", "sha256": "7dd30452f6107260f22c0b4957d0b35424192f7cca0dddf039dff8283978b66a"}, "downloads": -1, "filename": "aminocode-1.0.0.tar.gz", "has_sig": false, "md5_digest": "03c88de3735a4a1ba3a8351fd98361ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3951, "upload_time": "2020-02-26T17:43:41", "upload_time_iso_8601": "2020-02-26T17:43:41.511282Z", "url": "https://files.pythonhosted.org/packages/13/3a/315331a3f53f51b77d4893222257ccfe8f6877c023307a41486c7dc61b9a/aminocode-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "aff73447eba4338b0944f5991a3e42ce", "sha256": "60aadf62e237a0344382a87a903d6dbfb37aa48b1e91e6824e8fc5e16255f85f"}, "downloads": -1, "filename": "aminocode-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aff73447eba4338b0944f5991a3e42ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4511, "upload_time": "2020-02-27T19:23:30", "upload_time_iso_8601": "2020-02-27T19:23:30.789991Z", "url": "https://files.pythonhosted.org/packages/1c/b0/5f9265fb52cf03bea4ad65563b918c6a233d67eaf343b73bd678796c3db9/aminocode-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80ce176b9c46fc2431a813da14199957", "sha256": "69b8272488dc3452b282e296dd3907feefe5ca008c66406bd17491fca04750dc"}, "downloads": -1, "filename": "aminocode-1.0.1.tar.gz", "has_sig": false, "md5_digest": "80ce176b9c46fc2431a813da14199957", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3925, "upload_time": "2020-02-27T19:23:32", "upload_time_iso_8601": "2020-02-27T19:23:32.386885Z", "url": "https://files.pythonhosted.org/packages/18/3b/d4e8a3647be003ea7d7afe413a22c4408585c6acf0e9f4ebf187a10146a8/aminocode-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aff73447eba4338b0944f5991a3e42ce", "sha256": "60aadf62e237a0344382a87a903d6dbfb37aa48b1e91e6824e8fc5e16255f85f"}, "downloads": -1, "filename": "aminocode-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aff73447eba4338b0944f5991a3e42ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4511, "upload_time": "2020-02-27T19:23:30", "upload_time_iso_8601": "2020-02-27T19:23:30.789991Z", "url": "https://files.pythonhosted.org/packages/1c/b0/5f9265fb52cf03bea4ad65563b918c6a233d67eaf343b73bd678796c3db9/aminocode-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80ce176b9c46fc2431a813da14199957", "sha256": "69b8272488dc3452b282e296dd3907feefe5ca008c66406bd17491fca04750dc"}, "downloads": -1, "filename": "aminocode-1.0.1.tar.gz", "has_sig": false, "md5_digest": "80ce176b9c46fc2431a813da14199957", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3925, "upload_time": "2020-02-27T19:23:32", "upload_time_iso_8601": "2020-02-27T19:23:32.386885Z", "url": "https://files.pythonhosted.org/packages/18/3b/d4e8a3647be003ea7d7afe413a22c4408585c6acf0e9f4ebf187a10146a8/aminocode-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:21 2020"}