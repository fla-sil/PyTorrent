{"info": {"author": "Benjamin Ramser", "author_email": "ahoi@iwpnd.pw", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "<p align=\"center\">\n<a href=\"https://github.com/iwpnd/toponym/actions\" target=\"_blank\">\n    <img src=\"https://github.com/iwpnd/toponym/workflows/build/badge.svg?branch=master\" alt=\"Build Status\">\n</a>\n<a href=\"https://codecov.io/gh/iwpnd/toponym\" target=\"_blank\">\n    <img src=\"https://codecov.io/gh/iwpnd/toponym/branch/master/graph/badge.svg\" alt=\"Coverage\">\n</a>\n</p>\n\n# Toponym\n\nBuild grammatical cases for words in Slavic languages from pre-defined recipes.\n\n**documentation**: [https://toponym.iwpnd.pw/](https://toponym.iwpnd.pw/)  \n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n### Installing\n\nfor usage:\n```\npip install toponym\n```\n\nfor development:\n```\ngit clone https://github.com/iwpnd/toponym.git\npip install flit\nflit install toponym --symlink\n```\n\n# Description\n\n## Problem\nIn Slavic languages a word can change, depending on how and where it is used within a sentence. The city Moscow (`\u041c\u043e\u0441\u043a\u0432\u0430`) changes to `\u041c\u043e\u0441\u043a\u0432\u0435` when used prepositional.\nSo when you want to eg. know if:\n\n```python\n\"\u041c\u043e\u0441\u043a\u0432\u0430\" in \"\u0412 \u041c\u043e\u0441\u043a\u0432\u0435 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0433\u043e\u0434\u0430 \u043e\u0442\u0440\u0435\u043c\u043e\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 3 \u0442\u044b\u0441\u044f\u0447\u0438 \u043f\u043e\u0434\u044a\u0435\u0437\u0434\u043e\u0432\"\n\n>> False\n```\n\n## Solution\nThis is where Toponym comes in. Utilizing pre-defined recipes it naively creates grammatical cases depending on the ending of the input word that the user wants to create Toponyms from. The recipe looks as follows:\n\n### Recipe\n```python\nrecipe = {\n    \"\u0430\": { # ending of the input-word\n        \"nominative\": [[\"\"], 0],\n        \"genitive\": [ # case that we need\n            [\"\u044b\",\"\u0438\"], # ending of the output-word\n            1 # chars to be deleted, before ending of output is added\n            ],\n        \"dative\": [[\"\u0435\"], 1],\n        \"accusative\": [[\"\u0443\"], 1],\n        \"instrumental\": [...]\n}\n```\n\nIf multiple endings are given, multiple toponyms with that ending will be created. Some of those created toponyms do not make sense, or are not used in the wild. If you have an idea about how to remove those that are unreal please contact me.\n\nWith the built toponyms for you can now check:\n\n```python\nfrom toponym.recipes import Recipes\nfrom toponym.toponym import Toponym\n\nrecipes_russian = Recipes()\nrecipes_russian.load_from_language(language='russian')\n\ncity = \"\u041c\u043e\u0441\u043a\u0432\u0430\"\n\nt = Toponym(input_word=city, recipes=recipes_russian)\nt.build()\n\nprint(t.list_toponyms())\n>> ['\u041c\u043e\u0441\u043a\u0432\u043e\u0439', '\u041c\u043e\u0441\u043a\u0432\u044b', '\u041c\u043e\u0441\u043a\u0432\u0438', '\u041c\u043e\u0441\u043a\u0432\u0435', '\u041c\u043e\u0441\u043a\u0432\u0443', '\u041c\u043e\u0441\u043a\u0432\u0430']\n\nany([word in \"\u0412 \u041c\u043e\u0441\u043a\u0432\u0435 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0433\u043e\u0434\u0430 \u043e\u0442\u0440\u0435\u043c\u043e\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 3 \u0442\u044b\u0441\u044f\u0447\u0438 \u043f\u043e\u0434\u044a\u0435\u0437\u0434\u043e\u0432\" for word in tn.list_toponyms()])\n>> True\n```\n\n\n### supported languages:\n\n```\nfull name\t\tiso code\ncroatian\t\thr\nrussian\t\t    ru\nukrainian\t\tuk\nromanian\t\tro\nlatvian\t\t    lv\nhungarian\t\thu\ngreek\t\t    el\npolish\t\t    pl\n```\n\n## Running the tests\n\n```\npytest toponym/tests/\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iwpnd/toponym", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "toponym", "package_url": "https://pypi.org/project/toponym/", "platform": "", "project_url": "https://pypi.org/project/toponym/", "project_urls": {"Documentation": "https://toponym.iwpnd.pw/", "Homepage": "https://github.com/iwpnd/toponym"}, "release_url": "https://pypi.org/project/toponym/0.5.1/", "requires_dist": ["loguru==0.4.1", "pydantic==1.4", "typer==0.2.1", "safer==2.0.5", "awscli ; extra == \"doc\"", "mkdocs==1.0.4 ; extra == \"doc\"", "mkdocs-material==4.6.3 ; extra == \"doc\"", "markdown-include ; extra == \"doc\"", "pydoc-markdown==2.0.5 ; extra == \"doc\"", "pytest >=4.0.0 ; extra == \"test\"", "pytest-cov ; extra == \"test\""], "requires_python": ">=3.6", "summary": "Extract and count countries and cities (+their synonyms) from text", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n<a href=\"https://github.com/iwpnd/toponym/actions\" rel=\"nofollow\">\n    <img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09ca787a9044e1bc8bea72fc0beff2580a848907/68747470733a2f2f6769746875622e636f6d2f6977706e642f746f706f6e796d2f776f726b666c6f77732f6275696c642f62616467652e7376673f6272616e63683d6d6173746572\">\n</a>\n<a href=\"https://codecov.io/gh/iwpnd/toponym\" rel=\"nofollow\">\n    <img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d36c93826a283a5af151aa73a8d75469d7bc5f48/68747470733a2f2f636f6465636f762e696f2f67682f6977706e642f746f706f6e796d2f6272616e63682f6d61737465722f67726170682f62616467652e737667\">\n</a>\n</p>\n<h1>Toponym</h1>\n<p>Build grammatical cases for words in Slavic languages from pre-defined recipes.</p>\n<p><strong>documentation</strong>: <a href=\"https://toponym.iwpnd.pw/\" rel=\"nofollow\">https://toponym.iwpnd.pw/</a></p>\n<h2>Getting Started</h2>\n<p>These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.</p>\n<h3>Installing</h3>\n<p>for usage:</p>\n<pre><code>pip install toponym\n</code></pre>\n<p>for development:</p>\n<pre><code>git clone https://github.com/iwpnd/toponym.git\npip install flit\nflit install toponym --symlink\n</code></pre>\n<h1>Description</h1>\n<h2>Problem</h2>\n<p>In Slavic languages a word can change, depending on how and where it is used within a sentence. The city Moscow (<code>\u041c\u043e\u0441\u043a\u0432\u0430</code>) changes to <code>\u041c\u043e\u0441\u043a\u0432\u0435</code> when used prepositional.\nSo when you want to eg. know if:</p>\n<pre><span class=\"s2\">\"\u041c\u043e\u0441\u043a\u0432\u0430\"</span> <span class=\"ow\">in</span> <span class=\"s2\">\"\u0412 \u041c\u043e\u0441\u043a\u0432\u0435 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0433\u043e\u0434\u0430 \u043e\u0442\u0440\u0435\u043c\u043e\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 3 \u0442\u044b\u0441\u044f\u0447\u0438 \u043f\u043e\u0434\u044a\u0435\u0437\u0434\u043e\u0432\"</span>\n\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">False</span>\n</pre>\n<h2>Solution</h2>\n<p>This is where Toponym comes in. Utilizing pre-defined recipes it naively creates grammatical cases depending on the ending of the input word that the user wants to create Toponyms from. The recipe looks as follows:</p>\n<h3>Recipe</h3>\n<pre><span class=\"n\">recipe</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"\u0430\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># ending of the input-word</span>\n        <span class=\"s2\">\"nominative\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"\"</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"genitive\"</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"c1\"># case that we need</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"\u044b\"</span><span class=\"p\">,</span><span class=\"s2\">\"\u0438\"</span><span class=\"p\">],</span> <span class=\"c1\"># ending of the output-word</span>\n            <span class=\"mi\">1</span> <span class=\"c1\"># chars to be deleted, before ending of output is added</span>\n            <span class=\"p\">],</span>\n        <span class=\"s2\">\"dative\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"\u0435\"</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"accusative\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"s2\">\"\u0443\"</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"instrumental\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If multiple endings are given, multiple toponyms with that ending will be created. Some of those created toponyms do not make sense, or are not used in the wild. If you have an idea about how to remove those that are unreal please contact me.</p>\n<p>With the built toponyms for you can now check:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">toponym.recipes</span> <span class=\"kn\">import</span> <span class=\"n\">Recipes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">toponym.toponym</span> <span class=\"kn\">import</span> <span class=\"n\">Toponym</span>\n\n<span class=\"n\">recipes_russian</span> <span class=\"o\">=</span> <span class=\"n\">Recipes</span><span class=\"p\">()</span>\n<span class=\"n\">recipes_russian</span><span class=\"o\">.</span><span class=\"n\">load_from_language</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s1\">'russian'</span><span class=\"p\">)</span>\n\n<span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u041c\u043e\u0441\u043a\u0432\u0430\"</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Toponym</span><span class=\"p\">(</span><span class=\"n\">input_word</span><span class=\"o\">=</span><span class=\"n\">city</span><span class=\"p\">,</span> <span class=\"n\">recipes</span><span class=\"o\">=</span><span class=\"n\">recipes_russian</span><span class=\"p\">)</span>\n<span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">list_toponyms</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'\u041c\u043e\u0441\u043a\u0432\u043e\u0439'</span><span class=\"p\">,</span> <span class=\"s1\">'\u041c\u043e\u0441\u043a\u0432\u044b'</span><span class=\"p\">,</span> <span class=\"s1\">'\u041c\u043e\u0441\u043a\u0432\u0438'</span><span class=\"p\">,</span> <span class=\"s1\">'\u041c\u043e\u0441\u043a\u0432\u0435'</span><span class=\"p\">,</span> <span class=\"s1\">'\u041c\u043e\u0441\u043a\u0432\u0443'</span><span class=\"p\">,</span> <span class=\"s1\">'\u041c\u043e\u0441\u043a\u0432\u0430'</span><span class=\"p\">]</span>\n\n<span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"s2\">\"\u0412 \u041c\u043e\u0441\u043a\u0432\u0435 \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0433\u043e\u0434\u0430 \u043e\u0442\u0440\u0435\u043c\u043e\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 3 \u0442\u044b\u0441\u044f\u0447\u0438 \u043f\u043e\u0434\u044a\u0435\u0437\u0434\u043e\u0432\"</span> <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">tn</span><span class=\"o\">.</span><span class=\"n\">list_toponyms</span><span class=\"p\">()])</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"kc\">True</span>\n</pre>\n<h3>supported languages:</h3>\n<pre><code>full name\t\tiso code\ncroatian\t\thr\nrussian\t\t    ru\nukrainian\t\tuk\nromanian\t\tro\nlatvian\t\t    lv\nhungarian\t\thu\ngreek\t\t    el\npolish\t\t    pl\n</code></pre>\n<h2>Running the tests</h2>\n<pre><code>pytest toponym/tests/\n</code></pre>\n\n          </div>"}, "last_serial": 7128986, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "24d7836aedfdea84477a6a67572c4a36", "sha256": "c06bb65a2bc3c2467dccd85c3e1266a39ed528cb1a1e73052f6a6cb7eecae6b5"}, "downloads": -1, "filename": "toponym-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "24d7836aedfdea84477a6a67572c4a36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20336, "upload_time": "2020-04-28T08:26:57", "upload_time_iso_8601": "2020-04-28T08:26:57.986866Z", "url": "https://files.pythonhosted.org/packages/f0/97/9b68cb72604eeb019275dffbd2bb752f7c25bfe161c9f90dd006a92e3742/toponym-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "968529feccc5681a2b9e78e4cdc9b27c", "sha256": "b1d0f45ea1f4ddb5b63fc0d89a05a33507eb306244f2f0828e46aa21b5502f81"}, "downloads": -1, "filename": "toponym-0.5.0.tar.gz", "has_sig": false, "md5_digest": "968529feccc5681a2b9e78e4cdc9b27c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25856, "upload_time": "2020-04-28T08:27:02", "upload_time_iso_8601": "2020-04-28T08:27:02.501796Z", "url": "https://files.pythonhosted.org/packages/12/e5/7cb72b6a9da7fd512356b4a57635f9756e35a1f320d8c2abfd252636483a/toponym-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "4326c5a8157bbc3e7a6e5fd7d904008a", "sha256": "880cd2de807d976c38e5be7811a92020f7bca5aed053c6aa244fb0e506c18e16"}, "downloads": -1, "filename": "toponym-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4326c5a8157bbc3e7a6e5fd7d904008a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21615, "upload_time": "2020-04-29T13:42:28", "upload_time_iso_8601": "2020-04-29T13:42:28.732479Z", "url": "https://files.pythonhosted.org/packages/fa/ed/c25407d77f461ad1e59ca0d18f83e2e4bada2f33fe47b0195603772a8afd/toponym-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74d80dd64801fbdeb892552d78bb8488", "sha256": "cb2bb6e18b6c4c7621b37d109632dfd67523a916b87b9dbe6d83762dc9870d20"}, "downloads": -1, "filename": "toponym-0.5.1.tar.gz", "has_sig": false, "md5_digest": "74d80dd64801fbdeb892552d78bb8488", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23409, "upload_time": "2020-04-29T13:42:31", "upload_time_iso_8601": "2020-04-29T13:42:31.559075Z", "url": "https://files.pythonhosted.org/packages/a0/7f/1a93e7de33a296c3d079003f95ad0545b98286c6fae564f3789ae4929f3a/toponym-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4326c5a8157bbc3e7a6e5fd7d904008a", "sha256": "880cd2de807d976c38e5be7811a92020f7bca5aed053c6aa244fb0e506c18e16"}, "downloads": -1, "filename": "toponym-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4326c5a8157bbc3e7a6e5fd7d904008a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21615, "upload_time": "2020-04-29T13:42:28", "upload_time_iso_8601": "2020-04-29T13:42:28.732479Z", "url": "https://files.pythonhosted.org/packages/fa/ed/c25407d77f461ad1e59ca0d18f83e2e4bada2f33fe47b0195603772a8afd/toponym-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74d80dd64801fbdeb892552d78bb8488", "sha256": "cb2bb6e18b6c4c7621b37d109632dfd67523a916b87b9dbe6d83762dc9870d20"}, "downloads": -1, "filename": "toponym-0.5.1.tar.gz", "has_sig": false, "md5_digest": "74d80dd64801fbdeb892552d78bb8488", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23409, "upload_time": "2020-04-29T13:42:31", "upload_time_iso_8601": "2020-04-29T13:42:31.559075Z", "url": "https://files.pythonhosted.org/packages/a0/7f/1a93e7de33a296c3d079003f95ad0545b98286c6fae564f3789ae4929f3a/toponym-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:47 2020"}