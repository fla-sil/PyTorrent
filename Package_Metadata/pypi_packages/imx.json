{"info": {"author": "Martin Olejar", "author_email": "martin.olejar@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Embedded Systems", "Topic :: System :: Hardware", "Topic :: Utilities"], "description": "pyIMX\n=====\n\n|Build Status| |Coverage Status| |PyPI Status| |Python Version|\n\nThis repository collects a useful tools and python module targeted for\n`i.MX Applications\nProcessors <https://www.nxp.com/products/processors-and-microcontrollers/arm-based-processors-and-mcus/i.mx-applications-processors>`__.\n\n**What is implemented:**\n\n-  DCD (Device Configuration Data) API\n-  Boot Image v2 (i.MX6 and i.MX7) API\n-  Boot Image v3 (i.MX8QM-A0 and i.MX8QXP-A0) API\n-  SDP (Serial Download Protocol) API - only USB interface\n-  HAB-Log parser (only i.MX6 and i.MX7 yet)\n-  SRK Table API\n\n**Embedded tools:**\n\n-  `imxim <https://github.com/molejar/pyIMX/blob/master/doc/imxim.md>`__\n   - a tool for manipulation with ``*.imx`` boot image\n-  `imxsd <https://github.com/molejar/pyIMX/blob/master/doc/imxsd.md>`__\n   - a tool to download and execute code on i.MX SoCs through the Serial\n   Download Protocol (SDP)\n\n    This project is still in developing phase. Please, test it and\n    report founded issues.\n\nDependencies\n------------\n\n-  `Python <https://www.python.org>`__ - Python 3.x interpreter\n-  `Click <http://click.pocoo.org>`__ - Python package for creating\n   beautiful command line interface.\n-  `pyYAML <http://pyyaml.org/wiki/PyYAML>`__ - YAML parser and emitter\n   for the Python programming language.\n-  `bincopy <https://github.com/eerimoq/bincopy>`__ - Python package for\n   parsing S-Record, Intel HEX and TI-TXT files.\n-  `easy\\_enum <https://github.com/molejar/pyEnum>`__ - User friendly\n   implementation of documented Enum type for Python language.\n-  `cryptography <https://cryptography.io/en/latest>`__ - Provides\n   cryptographic recipes and primitives to Python developers\n-  `PyUSB <https://github.com/pyusb/pyusb>`__ - Python package to access\n   USB devices in Linux OS.\n-  `PyWinUSB <https://github.com/rene-aguirre/pywinusb>`__ - Python\n   package that simplifies USB-HID communications on Windows OS.\n\nInstallation\n------------\n\n.. code:: bash\n\n        $ pip install imx\n\nTo install the latest version from master branch execute in shell\nfollowing commands:\n\n.. code:: bash\n\n        $ pip install -r https://raw.githubusercontent.com/molejar/pyIMX/master/requirements.txt\n        $ pip install -U https://github.com/molejar/pyIMX/archive/master.zip\n\nIn case of development, install pyIMX from sources:\n\n.. code:: bash\n\n        $ git clone https://github.com/molejar/pyIMX.git\n        $ cd pyIMX\n        $ pip install -r requirements.txt\n        $ pip install -U -e .\n\nYou may run into a permissions issues running these commands. Here are a\nfew options how to fix it:\n\n1. Run with ``sudo`` to install pyIMX and dependencies globally\n2. Specify the ``--user`` option to install locally into your home\n   directory (export \"~/.local/bin\" into PATH variable if haven't).\n3. Run the command in a\n   `virtualenv <https://virtualenv.pypa.io/en/latest/>`__ local to a\n   specific project working set.\n\nUsage\n-----\n\nIn following example is demonstrated the simplicity of usage i.MX boot\nimage API covered by ``imx.img`` module:\n\n.. code:: python\n\n        from imx import img\n\n        # --------------------------------------------------------------------------------\n        # Create new U-Boot i.MX6/7 image\n        # --------------------------------------------------------------------------------\n\n        # Create DCD segment instance\n        dcd = img.SegDCD()\n\n        # Create Write Data command and append values with addresses\n        cmd = img.CmdWriteData(4, img.EnumWriteOps.WRITE_VALUE)\n        cmd.append(0x30340004, 0x4F400005)\n        cmd.append(0x30391000, 0x00000002)\n        cmd.append(0x307A0000, 0x01040001)\n\n        # Append commands into DCD segment\n        dcd.append(cmd)\n        dcd.append(img.CmdCheckData(4, img.EnumCheckOps.ANY_CLEAR, 0x307900C4, 0x00000001))\n\n        # Open U-Boot raw image\n        with open('u-boot.img', 'rb') as f:\n            app = f.read()\n\n        # Create IMX U-Boot image with DCD segment\n        image = img.BootImg2(0x877FF000, app, dcd)\n\n        # Print image info\n        print(image)\n\n        # Save IMX U-Boot image\n        with open('u-boot.imx', 'wb') as f:\n            f.write(image.export())\n\n        # --------------------------------------------------------------------------------\n        # Extract DCD from existing U-Boot i.MX6/7 image\n        # --------------------------------------------------------------------------------\n\n        # Open U-Boot IMX image\n        with open('u-boot.imx', 'rb') as f:\n            data = f.read()\n\n        # Parse U-Boot IMX image\n        image = img.BootImg2.parse(data)\n\n        # Extract DCD from U-Boot IMX image\n        dcd = image.dcd\n\n        # Print extracted DCD info\n        print(dcd)\n\n        # Save extracted DCD content as raw image\n        with open('dcd.img', 'wb') as f:\n            f.write(dcd.export())\n\n        # Save extracted DCD content as readable text file\n        with open('dcd.txt', 'w') as f:\n            f.write(dcd.store())\n\nSecond example demonstrate usage of i.MX serial downloader protocol API\ncovered by ``imx.sdp`` module:\n\n.. code:: python\n\n        from imx import sdp\n\n        # scan for connected USB devs\n        devs = sdp.scan_usb()\n\n        if devs:\n            # Print list of connected devices\n            for i, dev in enumerate(devs):\n                print(\"{}) {}\".format(i, dev.usbd.info()))\n\n            # Connect to first i.MX device\n            flasher = devs[0]\n            flasher.open()\n\n            # Read data from i.MX Device (i.MX7D OCRAM)\n            data = flasher.read(0x910000, 100, 8)\n\n            # Write boot image data into i.MX Device (i.MX7D OCRAM)\n            flasher.write_file(0x910000, data)\n\n            # Other commands\n            # ...\n\n            # Disconnect IMX Device\n            flasher.close()\n\n    For running ``imx.sdp`` module without root privileges in Linux OS\n    copy attached udev rules\n    `90-imx-sdp.rules <https://github.com/molejar/pyIMX/blob/master/udev/90-imx-sdp.rules>`__\n    into ``/etc/udev/rules.d`` directory and reload it with command:\n    ``sudo udevadm control --reload-rules``.\n\nTODO\n----\n\n-  Add serial interface support for ``imx.sdp`` module\n-  Add image security features (sign and encryption)\n-  Add eFuses read, write and validation functionality\n-  Add HAB-log parser for i.MX-RT and i.MX8 devices\n-  Add support for QSPI Flash image\n\n.. |Build Status| image:: https://travis-ci.org/molejar/pyIMX.svg?branch=master\n   :target: https://travis-ci.org/molejar/pyIMX\n.. |Coverage Status| image:: https://coveralls.io/repos/github/molejar/pyIMX/badge.svg?branch=master\n   :target: https://coveralls.io/github/molejar/pyIMX?branch=master\n.. |PyPI Status| image:: https://img.shields.io/pypi/v/imx.svg\n   :target: https://pypi.python.org/pypi/imx\n.. |Python Version| image:: https://img.shields.io/pypi/pyversions/imx.svg\n   :target: https://www.python.org\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/molejar/pyIMX", "keywords": "", "license": "BSD3", "maintainer": "", "maintainer_email": "", "name": "imx", "package_url": "https://pypi.org/project/imx/", "platform": "Windows", "project_url": "https://pypi.org/project/imx/", "project_urls": {"Homepage": "https://github.com/molejar/pyIMX"}, "release_url": "https://pypi.org/project/imx/0.1.3/", "requires_dist": ["click (==7.0)", "PyYAML (==5.1.1)", "bincopy (==16.0.0)", "easy-enum (==0.2.0)", "cryptography (==2.6.1)", "pyusb (==1.0.0) ; platform_system != \"Windows\"", "pywinusb (==0.4.2) ; platform_system == \"Windows\""], "requires_python": ">=3.5", "summary": "Open Source library for easy development with i.MX platform", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/molejar/pyIMX\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79009a4012b9d9621ca2414b7431f94eb0d3d3bc/68747470733a2f2f7472617669732d63692e6f72672f6d6f6c656a61722f7079494d582e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/molejar/pyIMX?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9702d22b118b5bf70ca8544a00fe6988daddc5c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6f6c656a61722f7079494d582f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/imx\" rel=\"nofollow\"><img alt=\"PyPI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a48bebe7d28a03e03789480e5f9682844e3eac3c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f696d782e737667\"></a> <a href=\"https://www.python.org\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49b41f363042d97c9ae92aebfff5ef18407f6e71/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696d782e737667\"></a></p>\n<p>This repository collects a useful tools and python module targeted for\n<a href=\"https://www.nxp.com/products/processors-and-microcontrollers/arm-based-processors-and-mcus/i.mx-applications-processors\" rel=\"nofollow\">i.MX Applications\nProcessors</a>.</p>\n<p><strong>What is implemented:</strong></p>\n<ul>\n<li>DCD (Device Configuration Data) API</li>\n<li>Boot Image v2 (i.MX6 and i.MX7) API</li>\n<li>Boot Image v3 (i.MX8QM-A0 and i.MX8QXP-A0) API</li>\n<li>SDP (Serial Download Protocol) API - only USB interface</li>\n<li>HAB-Log parser (only i.MX6 and i.MX7 yet)</li>\n<li>SRK Table API</li>\n</ul>\n<p><strong>Embedded tools:</strong></p>\n<ul>\n<li><p><a href=\"https://github.com/molejar/pyIMX/blob/master/doc/imxim.md\" rel=\"nofollow\">imxim</a>\n- a tool for manipulation with <tt>*.imx</tt> boot image</p>\n</li>\n<li><p><a href=\"https://github.com/molejar/pyIMX/blob/master/doc/imxsd.md\" rel=\"nofollow\">imxsd</a>\n- a tool to download and execute code on i.MX SoCs through the Serial\nDownload Protocol (SDP)</p>\n<blockquote>\n<p>This project is still in developing phase. Please, test it and\nreport founded issues.</p>\n</blockquote>\n</li>\n</ul>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://www.python.org\" rel=\"nofollow\">Python</a> - Python 3.x interpreter</li>\n<li><a href=\"http://click.pocoo.org\" rel=\"nofollow\">Click</a> - Python package for creating\nbeautiful command line interface.</li>\n<li><a href=\"http://pyyaml.org/wiki/PyYAML\" rel=\"nofollow\">pyYAML</a> - YAML parser and emitter\nfor the Python programming language.</li>\n<li><a href=\"https://github.com/eerimoq/bincopy\" rel=\"nofollow\">bincopy</a> - Python package for\nparsing S-Record, Intel HEX and TI-TXT files.</li>\n<li><a href=\"https://github.com/molejar/pyEnum\" rel=\"nofollow\">easy_enum</a> - User friendly\nimplementation of documented Enum type for Python language.</li>\n<li><a href=\"https://cryptography.io/en/latest\" rel=\"nofollow\">cryptography</a> - Provides\ncryptographic recipes and primitives to Python developers</li>\n<li><a href=\"https://github.com/pyusb/pyusb\" rel=\"nofollow\">PyUSB</a> - Python package to access\nUSB devices in Linux OS.</li>\n<li><a href=\"https://github.com/rene-aguirre/pywinusb\" rel=\"nofollow\">PyWinUSB</a> - Python\npackage that simplifies USB-HID communications on Windows OS.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install imx\n</pre>\n<p>To install the latest version from master branch execute in shell\nfollowing commands:</p>\n<pre>$ pip install -r https://raw.githubusercontent.com/molejar/pyIMX/master/requirements.txt\n$ pip install -U https://github.com/molejar/pyIMX/archive/master.zip\n</pre>\n<p>In case of development, install pyIMX from sources:</p>\n<pre>$ git clone https://github.com/molejar/pyIMX.git\n$ <span class=\"nb\">cd</span> pyIMX\n$ pip install -r requirements.txt\n$ pip install -U -e .\n</pre>\n<p>You may run into a permissions issues running these commands. Here are a\nfew options how to fix it:</p>\n<ol>\n<li>Run with <tt>sudo</tt> to install pyIMX and dependencies globally</li>\n<li>Specify the <tt><span class=\"pre\">--user</span></tt> option to install locally into your home\ndirectory (export \u201c~/.local/bin\u201d into PATH variable if haven\u2019t).</li>\n<li>Run the command in a\n<a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">virtualenv</a> local to a\nspecific project working set.</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In following example is demonstrated the simplicity of usage i.MX boot\nimage API covered by <tt>imx.img</tt> module:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">imx</span> <span class=\"kn\">import</span> <span class=\"n\">img</span>\n\n<span class=\"c1\"># --------------------------------------------------------------------------------</span>\n<span class=\"c1\"># Create new U-Boot i.MX6/7 image</span>\n<span class=\"c1\"># --------------------------------------------------------------------------------</span>\n\n<span class=\"c1\"># Create DCD segment instance</span>\n<span class=\"n\">dcd</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">SegDCD</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create Write Data command and append values with addresses</span>\n<span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">CmdWriteData</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">EnumWriteOps</span><span class=\"o\">.</span><span class=\"n\">WRITE_VALUE</span><span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mh\">0x30340004</span><span class=\"p\">,</span> <span class=\"mh\">0x4F400005</span><span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mh\">0x30391000</span><span class=\"p\">,</span> <span class=\"mh\">0x00000002</span><span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mh\">0x307A0000</span><span class=\"p\">,</span> <span class=\"mh\">0x01040001</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Append commands into DCD segment</span>\n<span class=\"n\">dcd</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n<span class=\"n\">dcd</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">CmdCheckData</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">EnumCheckOps</span><span class=\"o\">.</span><span class=\"n\">ANY_CLEAR</span><span class=\"p\">,</span> <span class=\"mh\">0x307900C4</span><span class=\"p\">,</span> <span class=\"mh\">0x00000001</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Open U-Boot raw image</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'u-boot.img'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create IMX U-Boot image with DCD segment</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">BootImg2</span><span class=\"p\">(</span><span class=\"mh\">0x877FF000</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">dcd</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print image info</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save IMX U-Boot image</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'u-boot.imx'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># --------------------------------------------------------------------------------</span>\n<span class=\"c1\"># Extract DCD from existing U-Boot i.MX6/7 image</span>\n<span class=\"c1\"># --------------------------------------------------------------------------------</span>\n\n<span class=\"c1\"># Open U-Boot IMX image</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'u-boot.imx'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Parse U-Boot IMX image</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">BootImg2</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Extract DCD from U-Boot IMX image</span>\n<span class=\"n\">dcd</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">dcd</span>\n\n<span class=\"c1\"># Print extracted DCD info</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dcd</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save extracted DCD content as raw image</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'dcd.img'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">dcd</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Save extracted DCD content as readable text file</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'dcd.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">dcd</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">())</span>\n</pre>\n<p>Second example demonstrate usage of i.MX serial downloader protocol API\ncovered by <tt>imx.sdp</tt> module:</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">imx</span> <span class=\"kn\">import</span> <span class=\"n\">sdp</span>\n\n    <span class=\"c1\"># scan for connected USB devs</span>\n    <span class=\"n\">devs</span> <span class=\"o\">=</span> <span class=\"n\">sdp</span><span class=\"o\">.</span><span class=\"n\">scan_usb</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">devs</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Print list of connected devices</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">dev</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">devs</span><span class=\"p\">):</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">) </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">dev</span><span class=\"o\">.</span><span class=\"n\">usbd</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()))</span>\n\n        <span class=\"c1\"># Connect to first i.MX device</span>\n        <span class=\"n\">flasher</span> <span class=\"o\">=</span> <span class=\"n\">devs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">flasher</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Read data from i.MX Device (i.MX7D OCRAM)</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">flasher</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mh\">0x910000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Write boot image data into i.MX Device (i.MX7D OCRAM)</span>\n        <span class=\"n\">flasher</span><span class=\"o\">.</span><span class=\"n\">write_file</span><span class=\"p\">(</span><span class=\"mh\">0x910000</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Other commands</span>\n        <span class=\"c1\"># ...</span>\n\n        <span class=\"c1\"># Disconnect IMX Device</span>\n        <span class=\"n\">flasher</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"n\">For</span> <span class=\"n\">running</span> <span class=\"err\">``</span><span class=\"n\">imx</span><span class=\"o\">.</span><span class=\"n\">sdp</span><span class=\"err\">``</span> <span class=\"n\">module</span> <span class=\"n\">without</span> <span class=\"n\">root</span> <span class=\"n\">privileges</span> <span class=\"ow\">in</span> <span class=\"n\">Linux</span> <span class=\"n\">OS</span>\n<span class=\"n\">copy</span> <span class=\"n\">attached</span> <span class=\"n\">udev</span> <span class=\"n\">rules</span>\n<span class=\"err\">`</span><span class=\"mi\">90</span><span class=\"o\">-</span><span class=\"n\">imx</span><span class=\"o\">-</span><span class=\"n\">sdp</span><span class=\"o\">.</span><span class=\"n\">rules</span> <span class=\"o\">&lt;</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">molejar</span><span class=\"o\">/</span><span class=\"n\">pyIMX</span><span class=\"o\">/</span><span class=\"n\">blob</span><span class=\"o\">/</span><span class=\"n\">master</span><span class=\"o\">/</span><span class=\"n\">udev</span><span class=\"o\">/</span><span class=\"mi\">90</span><span class=\"o\">-</span><span class=\"n\">imx</span><span class=\"o\">-</span><span class=\"n\">sdp</span><span class=\"o\">.</span><span class=\"n\">rules</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"n\">__</span>\n<span class=\"n\">into</span> <span class=\"err\">``</span><span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">udev</span><span class=\"o\">/</span><span class=\"n\">rules</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"err\">``</span> <span class=\"n\">directory</span> <span class=\"ow\">and</span> <span class=\"n\">reload</span> <span class=\"n\">it</span> <span class=\"k\">with</span> <span class=\"n\">command</span><span class=\"p\">:</span>\n<span class=\"err\">``</span><span class=\"n\">sudo</span> <span class=\"n\">udevadm</span> <span class=\"n\">control</span> <span class=\"o\">--</span><span class=\"n\">reload</span><span class=\"o\">-</span><span class=\"n\">rules</span><span class=\"err\">``</span><span class=\"o\">.</span>\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Add serial interface support for <tt>imx.sdp</tt> module</li>\n<li>Add image security features (sign and encryption)</li>\n<li>Add eFuses read, write and validation functionality</li>\n<li>Add HAB-log parser for i.MX-RT and i.MX8 devices</li>\n<li>Add support for QSPI Flash image</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5556467, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fe6415d3b442cc6ea449dbc5b05f0161", "sha256": "75403ec6d29c4f71dea2b8f1ad342207a9da961623f645737e80d367edf57981"}, "downloads": -1, "filename": "imx-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe6415d3b442cc6ea449dbc5b05f0161", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 47069, "upload_time": "2019-01-03T22:35:32", "upload_time_iso_8601": "2019-01-03T22:35:32.405741Z", "url": "https://files.pythonhosted.org/packages/35/78/dd0556c2e4e61fe44163a116501a185eaadd411cfdf723ffe30ef9ad2648/imx-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "bce2f1367e2bfadeaeb103c80b286b8c", "sha256": "0ec390fef9ee4ce187c858fabb3125ee840062538baa687e20cca3b3c088befd"}, "downloads": -1, "filename": "imx-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bce2f1367e2bfadeaeb103c80b286b8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 50032, "upload_time": "2019-04-05T11:37:46", "upload_time_iso_8601": "2019-04-05T11:37:46.442982Z", "url": "https://files.pythonhosted.org/packages/b1/4d/4e6bf793be6c3b4f9d3d64b29c7dcdc7ad2347d28e6a0fec2fbdac72e058/imx-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e85bb2a7d4ba522dbba7d07714f3577a", "sha256": "8546f3331a263260376444455939b86f0e37339fc5d3477cb2f405077bec3658"}, "downloads": -1, "filename": "imx-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e85bb2a7d4ba522dbba7d07714f3577a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 44639, "upload_time": "2019-04-05T11:37:47", "upload_time_iso_8601": "2019-04-05T11:37:47.940077Z", "url": "https://files.pythonhosted.org/packages/6e/c7/424b4744ffda6369f5778bc53a111af66abf05d90e6d3c3bfcb36578efe6/imx-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "774c3f1667ef880a14c33ae32e2722d4", "sha256": "ba1250d94027decb8288dd646cbfa2091c654003e1903ff03235af142ea02305"}, "downloads": -1, "filename": "imx-0.1.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "774c3f1667ef880a14c33ae32e2722d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 108166, "upload_time": "2019-06-03T21:49:26", "upload_time_iso_8601": "2019-06-03T21:49:26.681434Z", "url": "https://files.pythonhosted.org/packages/07/35/ac833cc6b4db097ed2384d92a049cfcbb4a4ea28caf62977a4904cb32492/imx-0.1.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e1a41224e6d16818140c5783cc4c9ef", "sha256": "d19a88b23a8232bc980e30293df52a5b3f3a1c852af4c1a4f0cdc3c8b28a0765"}, "downloads": -1, "filename": "imx-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9e1a41224e6d16818140c5783cc4c9ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53521, "upload_time": "2019-06-03T21:49:24", "upload_time_iso_8601": "2019-06-03T21:49:24.162695Z", "url": "https://files.pythonhosted.org/packages/75/d6/514dc88e138b160823eacfe0ed91615b2107d8e0d549c3f32ac40e2b586c/imx-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "06c6e9d815eb67fc46b352e233ae3870", "sha256": "0c48f9dce46b010be24cd3bf1bd33b8ffbdca19afbfc365064f8fa84a7b199aa"}, "downloads": -1, "filename": "imx-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "06c6e9d815eb67fc46b352e233ae3870", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53461, "upload_time": "2019-07-19T13:28:16", "upload_time_iso_8601": "2019-07-19T13:28:16.985035Z", "url": "https://files.pythonhosted.org/packages/0c/9c/1436e57efa16e23fc70d8a102195d440505b6dd5fa9a2c4e324ce4374315/imx-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46cb20da527ca29c9b1fc79ed3ee0159", "sha256": "02053bf98fb150015462a7b5e8bbea00705a7599b8c247c811e52310100651fb"}, "downloads": -1, "filename": "imx-0.1.3.tar.gz", "has_sig": false, "md5_digest": "46cb20da527ca29c9b1fc79ed3ee0159", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 47455, "upload_time": "2019-07-19T13:28:18", "upload_time_iso_8601": "2019-07-19T13:28:18.835253Z", "url": "https://files.pythonhosted.org/packages/88/75/85e49cfa689262b647a3ab09cdf22f9c32cc0261fcba79bfaa357c5c9eb6/imx-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06c6e9d815eb67fc46b352e233ae3870", "sha256": "0c48f9dce46b010be24cd3bf1bd33b8ffbdca19afbfc365064f8fa84a7b199aa"}, "downloads": -1, "filename": "imx-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "06c6e9d815eb67fc46b352e233ae3870", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53461, "upload_time": "2019-07-19T13:28:16", "upload_time_iso_8601": "2019-07-19T13:28:16.985035Z", "url": "https://files.pythonhosted.org/packages/0c/9c/1436e57efa16e23fc70d8a102195d440505b6dd5fa9a2c4e324ce4374315/imx-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46cb20da527ca29c9b1fc79ed3ee0159", "sha256": "02053bf98fb150015462a7b5e8bbea00705a7599b8c247c811e52310100651fb"}, "downloads": -1, "filename": "imx-0.1.3.tar.gz", "has_sig": false, "md5_digest": "46cb20da527ca29c9b1fc79ed3ee0159", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 47455, "upload_time": "2019-07-19T13:28:18", "upload_time_iso_8601": "2019-07-19T13:28:18.835253Z", "url": "https://files.pythonhosted.org/packages/88/75/85e49cfa689262b647a3ab09cdf22f9c32cc0261fcba79bfaa357c5c9eb6/imx-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:27 2020"}