{"info": {"author": "MacLeod & Robinson, Inc.", "author_email": "hello@tinkercorp.com", "bugtrack_url": null, "classifiers": ["License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7"], "description": "![alttext](gryphon/dashboards/static/img/gryphon-logo-blue@3x.png)\n\n# Gryphon Trading Framework\n**Gryphon** is an open source software platform for building and running algorithmic trading strategies in cryptocurrency markets. It was built by Tinker, one of the earliest cryptocurrency trading companies, and has traded billions in volume to date.\n\n\n-----------------\n\n\n| **`Documentation`** |\n|-----------------|\n| [![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://gryphon.readthedocs.io/en/latest/) |\n| [![Documentation Status](https://readthedocs.org/projects/gryphon/badge/?version=latest)](https://gryphon.readthedocs.io/en/latest/?badge=latest) |\n\n## What's included\n\nGryphon is both a software library that can be integrated into other projects, and an application suite for running trading strategies and operating a trading business. How you use Gryphon depends on your goals. Some highlights are:\n\nLibrary Highlights:\n* Exchange integrations ~ Because cryptocurrency exchanges all have their own API specifications, quirks, and issues, Gryphon includes a set of wrappers that conform these exchange APIs to a single reliable interface.\n* Common strategy operations ~ In a given strategy class, like market making or arbitrage, there are some operations that are very frequent. Gryphon includes building-block libraries that make designing new strategies simpler.\n\nApplication suite:\n\n* Execution environment ~ run from the command line as `gryphon-execute`, this is app runs strategies and includes some other utility functions that are commonly used in day-to-day operation of a trading business.\n* Gryphon Data Service ~ a standalone app for listening to market data and events at high frequency. GDS can be used in advanced installations of gryphon to massively speed up tick speeds. GDS can also archive the data it receives, over time building up large datasets which can be used for machine learning or other analysis techniques.\n* Dashboards ~ run from the command line as `gryphon-dashboards`, this is a web server that connects to your trading database to help you visualize the activity of your trading strategies and understand the health of your trading business.\n\n\n## Installation\n\nThe gryphon library can be installed directly through pip.\n\n```shell\n$ pip install gryphon-framework\n```\n\nTo use gryphon for trading, there are extra install steps to set up the execution environment. See this page for details: [Installing Gryphon](https://gryphon-docs-test.readthedocs.io/en/latest/).\n\nIf you are going to extend or modify gryphon, we recommend downloading the codebase and installing through pip with the `-e` flag.\n\n## Usage\n\n### Credentials and environment variables\n\nWhen using Gryphon sensitive credentials like API keys never leave your machine. Instead, gryphon applications read credentials from a `.env` file stored in the directory they are launched from. `.env` files are simple lists of key-value pairs,\n\nThe .env entries for an exchange like Coinbase look something like this.\n\n```\nCOINBASE_BTC_USD_API_KEY=[YOUR KEY]\nCOINBASE_BTC_USD_API_SECRET=[YOUR SECRET]\nCOINBASE_BTC_USD_API_PASSPHRASE=[YOUR PASSPHRASE]\n```\n\nDepending on the features you wish to use and the exchanges you wish to trade on, you'll need to have certain entries in your .env file. You can read the [.env appendix](https://gryphon-framework.readthedocs.io/en/latest) to find out which you will need.\n\n\n### Run a built-in strategy\n\nOnce you have followed the execution tools install steps [here](https://gryphon-framework.readthedocs.io/en/latest). You can use the gryphon execution environment to run strategies. Gryphon ships with a few simple built-in strategies. These aren't designed for serious trading but can be useful for testing and learning the framework.\n\nOne such strategy is called 'Simple Marketmaking'. It can be run as follows:\n\n```shell\n$ gryphon-execute strategy simple_mm --builtin [--execute]\n```\n\nIf you don't include the `--execute` flag, the strategy runs in test-mode, and won't place any orders on exchanges. This is a feature of the execution environment, not the strategy, so this flag works with every strategy you run or build on gryphon. Only use the `--execute` flag when you're ready to run or test a strategy with real money.\n\n### Write and run your first strategy\n\nGryphon has a lot of building-block libraries that make common tasks quite simple. For example, we can use the gryphon arbitrage library to write a simple arbitrage strategy in only three major function calls.\n\n```python\nfrom gryphon.execution.strategies.base import Strategy\nimport gryphon.lib.arbitrage as arb\n\n\nclass GeminiCoinbaseArbitrage(Strategy):\n    def tick(self):\n        cross = arb.get_crosses(\n            self.harness.gemini_btc_usd.get_orderbook(),\n            self.harness.coinbase_btc_usd.get_orderbook(),\n        )\n\n        executable_volume = arb.get_executable_volume(\n            cross,\n            self.coinbase_btc_usd.get_balance(),\n            self.gemini_btc_usd.get_balance(),\n        )\n\n        if cross and executable_volume:\n            self.harness.gemini_btc_usd.market_order(cross.volume, 'BID')\n            self.harness.coinbase_btc_usd.market_order(cross.volume, 'ASK')\n```\n\nCopy this code into a python file named 'arbitrage.py' in the same directory as your .env file, and you can run it in test mode with `gryphon-execute strategy arbitrage`.\n\nNotice how much functionality is in play here: `gryphon-execute` sets up the environment that strategies run in and orchestrates the tick-by-tick operation, the exchange integrations for Coinbase and Gemini abstract away all the implementation details of working with those APIs into simple semantic function calls, and the arbitrage library simplifies some complex calculations into just two function calls.\n\n\n## Contribution guidelines\n\n**We use [GitHub issues](https://gryphon-framework.readthedocs.io/en/latest) for\ntracking requests and bugs.**\n\n**See the [development roadmap](https://trello.com/b/0HQI8KE9/engineering) trello board for more ideas about how you can contribute.**\n\n\n## For more information\n\n* [Gryphon Website](https://www.gryphonframework.org)\nparticipate.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.gryphonframework.org", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gryphon-alpha", "package_url": "https://pypi.org/project/gryphon-alpha/", "platform": "", "project_url": "https://pypi.org/project/gryphon-alpha/", "project_urls": {"Homepage": "http://www.gryphonframework.org"}, "release_url": "https://pypi.org/project/gryphon-alpha/0.12.4/", "requires_dist": ["alembic (==0.6.0)", "Babel (==2.6.0)", "backports.shutil-get-terminal-size (==1.0.0)", "cement (==2.10.12)", "certifi (==2018.4.16)", "chardet (==3.0.4)", "coinbase (==1.0.4)", "contextlib2 (==0.5.5)", "Cython (==0.20.1)", "decorator (==4.3.0)", "Delorean (<2,>=1.0.0)", "enum34 (==1.1.6)", "futures (==3.2.0)", "gryphon-cdecimal (==2.3)", "gryphon-money", "gryphon-pusherclient", "idna (==2.7)", "ipython (==5.7.0)", "ipython-genutils (==0.2.0)", "line-profiler (==2.1.2)", "Mako (==1.0.7)", "MarkupSafe (==1.0)", "mock (==1.0.1)", "more-itertools (<5,>=4.2.0)", "MySQL-python (==1.2.5)", "nose (==1.3.7)", "pathlib2 (==2.3.2)", "pexpect (==4.6.0)", "pickleshare (==0.7.4)", "prompt-toolkit (==1.0.15)", "ptyprocess (==0.6.0)", "Pygments (==2.2.0)", "pylibmc (<2,>=1.5.2)", "python-dotenv (==0.8.2)", "pytz (==2018.5)", "raven (==6.9.0)", "rednose (<2,>=1.3.0)", "redis (==2.10.6)", "requests (==2.19.1)", "requests-futures (==0.9.7)", "requests-toolbelt (==0.8.0)", "retrying (==1.3.3)", "scandir (==1.7)", "simplegeneric (==0.8.1)", "six (==1.11.0)", "sure (==1.2.9)", "SQLAlchemy (<1.3,>=1.2.10)", "termcolor (==1.1.0)", "traitlets (==4.3.2)", "tzlocal (==1.5.1)", "urllib3 (==1.23)", "wcwidth (==0.1.7)", "websocket-client (==0.48.0)"], "requires_python": "", "summary": "A framework for running algorithmic trading strategies on cryptocurrency markets.", "version": "0.12.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"alttext\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35add9499390b45f75ed56336a1f649dbdbc029c/67727970686f6e2f64617368626f617264732f7374617469632f696d672f67727970686f6e2d6c6f676f2d626c75654033782e706e67\"></p>\n<h1>Gryphon Trading Framework</h1>\n<p><strong>Gryphon</strong> is an open source software platform for building and running algorithmic trading strategies in cryptocurrency markets. It was built by Tinker, one of the earliest cryptocurrency trading companies, and has traded billions in volume to date.</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th><strong><code>Documentation</code></strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://gryphon.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2c29f9e28077033634d3232ed5cbfce2cdb79ba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667\"></a></td>\n</tr>\n<tr>\n<td><a href=\"https://gryphon.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec68b7fe4f3bd0296d3dc6e2d90ef666a5166694/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f67727970686f6e2f62616467652f3f76657273696f6e3d6c6174657374\"></a></td>\n</tr></tbody></table>\n<h2>What's included</h2>\n<p>Gryphon is both a software library that can be integrated into other projects, and an application suite for running trading strategies and operating a trading business. How you use Gryphon depends on your goals. Some highlights are:</p>\n<p>Library Highlights:</p>\n<ul>\n<li>Exchange integrations ~ Because cryptocurrency exchanges all have their own API specifications, quirks, and issues, Gryphon includes a set of wrappers that conform these exchange APIs to a single reliable interface.</li>\n<li>Common strategy operations ~ In a given strategy class, like market making or arbitrage, there are some operations that are very frequent. Gryphon includes building-block libraries that make designing new strategies simpler.</li>\n</ul>\n<p>Application suite:</p>\n<ul>\n<li>Execution environment ~ run from the command line as <code>gryphon-execute</code>, this is app runs strategies and includes some other utility functions that are commonly used in day-to-day operation of a trading business.</li>\n<li>Gryphon Data Service ~ a standalone app for listening to market data and events at high frequency. GDS can be used in advanced installations of gryphon to massively speed up tick speeds. GDS can also archive the data it receives, over time building up large datasets which can be used for machine learning or other analysis techniques.</li>\n<li>Dashboards ~ run from the command line as <code>gryphon-dashboards</code>, this is a web server that connects to your trading database to help you visualize the activity of your trading strategies and understand the health of your trading business.</li>\n</ul>\n<h2>Installation</h2>\n<p>The gryphon library can be installed directly through pip.</p>\n<pre>$ pip install gryphon-framework\n</pre>\n<p>To use gryphon for trading, there are extra install steps to set up the execution environment. See this page for details: <a href=\"https://gryphon-docs-test.readthedocs.io/en/latest/\" rel=\"nofollow\">Installing Gryphon</a>.</p>\n<p>If you are going to extend or modify gryphon, we recommend downloading the codebase and installing through pip with the <code>-e</code> flag.</p>\n<h2>Usage</h2>\n<h3>Credentials and environment variables</h3>\n<p>When using Gryphon sensitive credentials like API keys never leave your machine. Instead, gryphon applications read credentials from a <code>.env</code> file stored in the directory they are launched from. <code>.env</code> files are simple lists of key-value pairs,</p>\n<p>The .env entries for an exchange like Coinbase look something like this.</p>\n<pre><code>COINBASE_BTC_USD_API_KEY=[YOUR KEY]\nCOINBASE_BTC_USD_API_SECRET=[YOUR SECRET]\nCOINBASE_BTC_USD_API_PASSPHRASE=[YOUR PASSPHRASE]\n</code></pre>\n<p>Depending on the features you wish to use and the exchanges you wish to trade on, you'll need to have certain entries in your .env file. You can read the <a href=\"https://gryphon-framework.readthedocs.io/en/latest\" rel=\"nofollow\">.env appendix</a> to find out which you will need.</p>\n<h3>Run a built-in strategy</h3>\n<p>Once you have followed the execution tools install steps <a href=\"https://gryphon-framework.readthedocs.io/en/latest\" rel=\"nofollow\">here</a>. You can use the gryphon execution environment to run strategies. Gryphon ships with a few simple built-in strategies. These aren't designed for serious trading but can be useful for testing and learning the framework.</p>\n<p>One such strategy is called 'Simple Marketmaking'. It can be run as follows:</p>\n<pre>$ gryphon-execute strategy simple_mm --builtin <span class=\"o\">[</span>--execute<span class=\"o\">]</span>\n</pre>\n<p>If you don't include the <code>--execute</code> flag, the strategy runs in test-mode, and won't place any orders on exchanges. This is a feature of the execution environment, not the strategy, so this flag works with every strategy you run or build on gryphon. Only use the <code>--execute</code> flag when you're ready to run or test a strategy with real money.</p>\n<h3>Write and run your first strategy</h3>\n<p>Gryphon has a lot of building-block libraries that make common tasks quite simple. For example, we can use the gryphon arbitrage library to write a simple arbitrage strategy in only three major function calls.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gryphon.execution.strategies.base</span> <span class=\"kn\">import</span> <span class=\"n\">Strategy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gryphon.lib.arbitrage</span> <span class=\"k\">as</span> <span class=\"nn\">arb</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">GeminiCoinbaseArbitrage</span><span class=\"p\">(</span><span class=\"n\">Strategy</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">tick</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">cross</span> <span class=\"o\">=</span> <span class=\"n\">arb</span><span class=\"o\">.</span><span class=\"n\">get_crosses</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">harness</span><span class=\"o\">.</span><span class=\"n\">gemini_btc_usd</span><span class=\"o\">.</span><span class=\"n\">get_orderbook</span><span class=\"p\">(),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">harness</span><span class=\"o\">.</span><span class=\"n\">coinbase_btc_usd</span><span class=\"o\">.</span><span class=\"n\">get_orderbook</span><span class=\"p\">(),</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">executable_volume</span> <span class=\"o\">=</span> <span class=\"n\">arb</span><span class=\"o\">.</span><span class=\"n\">get_executable_volume</span><span class=\"p\">(</span>\n            <span class=\"n\">cross</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">coinbase_btc_usd</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">(),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gemini_btc_usd</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">(),</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">cross</span> <span class=\"ow\">and</span> <span class=\"n\">executable_volume</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">harness</span><span class=\"o\">.</span><span class=\"n\">gemini_btc_usd</span><span class=\"o\">.</span><span class=\"n\">market_order</span><span class=\"p\">(</span><span class=\"n\">cross</span><span class=\"o\">.</span><span class=\"n\">volume</span><span class=\"p\">,</span> <span class=\"s1\">'BID'</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">harness</span><span class=\"o\">.</span><span class=\"n\">coinbase_btc_usd</span><span class=\"o\">.</span><span class=\"n\">market_order</span><span class=\"p\">(</span><span class=\"n\">cross</span><span class=\"o\">.</span><span class=\"n\">volume</span><span class=\"p\">,</span> <span class=\"s1\">'ASK'</span><span class=\"p\">)</span>\n</pre>\n<p>Copy this code into a python file named 'arbitrage.py' in the same directory as your .env file, and you can run it in test mode with <code>gryphon-execute strategy arbitrage</code>.</p>\n<p>Notice how much functionality is in play here: <code>gryphon-execute</code> sets up the environment that strategies run in and orchestrates the tick-by-tick operation, the exchange integrations for Coinbase and Gemini abstract away all the implementation details of working with those APIs into simple semantic function calls, and the arbitrage library simplifies some complex calculations into just two function calls.</p>\n<h2>Contribution guidelines</h2>\n<p><strong>We use <a href=\"https://gryphon-framework.readthedocs.io/en/latest\" rel=\"nofollow\">GitHub issues</a> for\ntracking requests and bugs.</strong></p>\n<p><strong>See the <a href=\"https://trello.com/b/0HQI8KE9/engineering\" rel=\"nofollow\">development roadmap</a> trello board for more ideas about how you can contribute.</strong></p>\n<h2>For more information</h2>\n<ul>\n<li><a href=\"https://www.gryphonframework.org\" rel=\"nofollow\">Gryphon Website</a>\nparticipate.</li>\n</ul>\n\n          </div>"}, "last_serial": 5131353, "releases": {"0.12": [{"comment_text": "", "digests": {"md5": "e60fa8055b0dc85d2adbb5f8ad754aa2", "sha256": "01cce6146f08eb7965da66bf4505d8c90b471857d833e558512d6189cbaa1b45"}, "downloads": -1, "filename": "gryphon_alpha-0.12-py2-none-any.whl", "has_sig": false, "md5_digest": "e60fa8055b0dc85d2adbb5f8ad754aa2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 443577, "upload_time": "2019-04-05T19:59:00", "upload_time_iso_8601": "2019-04-05T19:59:00.669211Z", "url": "https://files.pythonhosted.org/packages/1d/cc/611e9989564da3f1c240ad139a61261d77d892fea7193b0acd16111ef141/gryphon_alpha-0.12-py2-none-any.whl", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "582efdce274c6b3fabc45a749a3e721f", "sha256": "d34bc1371b23b4319053a40e482ba3c07386ca8ee7983aa87c5a9a2cd8c48a22"}, "downloads": -1, "filename": "gryphon_alpha-0.12.1-py2-none-any.whl", "has_sig": false, "md5_digest": "582efdce274c6b3fabc45a749a3e721f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 445370, "upload_time": "2019-04-10T20:30:00", "upload_time_iso_8601": "2019-04-10T20:30:00.416155Z", "url": "https://files.pythonhosted.org/packages/11/18/51bb76e45e05e3b2291a6d41588d015c5c4a93d06c1250b1b8ed98349cbb/gryphon_alpha-0.12.1-py2-none-any.whl", "yanked": false}], "0.12.2": [{"comment_text": "", "digests": {"md5": "b523ca5984bdc663a52b681248848814", "sha256": "809ecd320dacadc5cc3408b8219ead463dfecea713e320d038ea67e99c11ba10"}, "downloads": -1, "filename": "gryphon_alpha-0.12.2-py2-none-any.whl", "has_sig": false, "md5_digest": "b523ca5984bdc663a52b681248848814", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 451901, "upload_time": "2019-04-10T20:37:07", "upload_time_iso_8601": "2019-04-10T20:37:07.097699Z", "url": "https://files.pythonhosted.org/packages/03/48/8c1feb382450ecfab4349369f3bdfe6b851eaabdcdde31325b065eb84d7e/gryphon_alpha-0.12.2-py2-none-any.whl", "yanked": false}], "0.12.3": [{"comment_text": "", "digests": {"md5": "735ee9b6844656c43fbef5de0a301f6d", "sha256": "111ebbf90a193d2484d383ae04c08621b58b7cdd8974780edc48326789f5d284"}, "downloads": -1, "filename": "gryphon_alpha-0.12.3-py2-none-any.whl", "has_sig": false, "md5_digest": "735ee9b6844656c43fbef5de0a301f6d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 451352, "upload_time": "2019-04-10T21:25:45", "upload_time_iso_8601": "2019-04-10T21:25:45.714061Z", "url": "https://files.pythonhosted.org/packages/8c/73/3d3ed6c359952208e175739d7be14a12284c015f25f9625689e32df9ff07/gryphon_alpha-0.12.3-py2-none-any.whl", "yanked": false}], "0.12.4": [{"comment_text": "", "digests": {"md5": "89f489085db324d0a1b64e0be777fb8d", "sha256": "fcaac5c6c001918ccd0bec09a5f40e93ecf06fb391149d42067d1eb0c6de3d1a"}, "downloads": -1, "filename": "gryphon_alpha-0.12.4-py2-none-any.whl", "has_sig": false, "md5_digest": "89f489085db324d0a1b64e0be777fb8d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 452210, "upload_time": "2019-04-11T23:00:55", "upload_time_iso_8601": "2019-04-11T23:00:55.511464Z", "url": "https://files.pythonhosted.org/packages/12/35/e68478ada4c4a10f66b376d60bf3c515cd043a9afa98d299cfa0b497acb7/gryphon_alpha-0.12.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54453b2f46ea90101b07ffcfe9b273e8", "sha256": "7a7ffea7c89ee714f54ebe129701935addeb8e8d0637e0d37486dec8bc4eb5bc"}, "downloads": -1, "filename": "gryphon-alpha-0.12.4.tar.gz", "has_sig": false, "md5_digest": "54453b2f46ea90101b07ffcfe9b273e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 281342, "upload_time": "2019-04-11T23:00:57", "upload_time_iso_8601": "2019-04-11T23:00:57.423080Z", "url": "https://files.pythonhosted.org/packages/2f/57/531612e67978c3d78e883c1b087514518e2d631f6c3a2a895b3fc224c7ea/gryphon-alpha-0.12.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89f489085db324d0a1b64e0be777fb8d", "sha256": "fcaac5c6c001918ccd0bec09a5f40e93ecf06fb391149d42067d1eb0c6de3d1a"}, "downloads": -1, "filename": "gryphon_alpha-0.12.4-py2-none-any.whl", "has_sig": false, "md5_digest": "89f489085db324d0a1b64e0be777fb8d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 452210, "upload_time": "2019-04-11T23:00:55", "upload_time_iso_8601": "2019-04-11T23:00:55.511464Z", "url": "https://files.pythonhosted.org/packages/12/35/e68478ada4c4a10f66b376d60bf3c515cd043a9afa98d299cfa0b497acb7/gryphon_alpha-0.12.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54453b2f46ea90101b07ffcfe9b273e8", "sha256": "7a7ffea7c89ee714f54ebe129701935addeb8e8d0637e0d37486dec8bc4eb5bc"}, "downloads": -1, "filename": "gryphon-alpha-0.12.4.tar.gz", "has_sig": false, "md5_digest": "54453b2f46ea90101b07ffcfe9b273e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 281342, "upload_time": "2019-04-11T23:00:57", "upload_time_iso_8601": "2019-04-11T23:00:57.423080Z", "url": "https://files.pythonhosted.org/packages/2f/57/531612e67978c3d78e883c1b087514518e2d631f6c3a2a895b3fc224c7ea/gryphon-alpha-0.12.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:45 2020"}