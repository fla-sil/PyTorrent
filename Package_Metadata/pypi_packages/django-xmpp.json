{"info": {"author": "Filip Pytloun", "author_email": "filip@pytloun.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.8", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "===========\ndjango-xmpp\n===========\n\nXMPP integration for Django app made simple!\n\n.. attention:: This application is in early development stage. Every help or feedback is appreciated.\n\nFeatures\n--------\n\n- `ConverseJS <https://github.com/jcbrand/converse.js>`_ web chat integration\n\n  - surely best available XMPP web client\n  - inspired by `TracyWebTech/django-conversejs <https://github.com/TracyWebTech/django-conversejs>`_\n\n- Support for MUC auto join\n\n- Support for users query\n\n- Ejabberd Django authentication using ejabberd_auth management command\n\n  - inspired by `ffalcinelli/django-ejabberd-bridge <https://github.com/ffalcinelli/django-ejabberd-bridge/blob/master/ejabberd_bridge/management/commands/ejabberd_auth.py>`_\n\n- Single sign on functionality without storing user's credentials\n  (requires using ejabberd_auth)\n\n- Set avatar using gravatar and vCard during first login\n\nInstallation\n------------\n\nInstall ``django-xmpp`` via pip::\n\n    pip install django-xmpp\n\nAdd ``xmpp`` and ``django_gravatar`` into INSTALLED_APPS::\n\n    INSTALLED_APPS = (\n        ...\n        'django_gravatar',\n        'xmpp',\n    )\n\nSetup most important variables::\n\n    XMPP_DOMAIN = 'example.com'\n    XMPP_BOSH_SERVICE_URL = 'https://xmpp.example.com:5280/http-bind'\n\nOptionally setup ConverseJS to suit your needs::\n\n    XMPP_CONVERSEJS_SETTINGS = {\n        'allow_contact_removal': False,\n        'allow_contact_requests': True,\n        'auto_subscribe': True,\n        'allow_logout': False,\n        'allow_muc': True,\n        'allow_otr': False,\n        'allow_registration': False,\n        'message_carbons': True,\n        'hide_muc_server': True,\n        'use_vcards': True,\n        'animate': True,\n        'play_sounds': True,\n        'xhr_user_search': True,\n        'sounds_path': '%ssounds/' % STATIC_URL,\n        'visible_toolbar_buttons': {\n             'call': False,\n             'clear': False,\n             'emoticons': True,\n             'toggle_participants': False,\n        }\n    }\n\nInclude ``xmpp.urls`` in your ``urls.py``::\n\n    urlpatterns = [\n        ...\n        url(r'^xmpp/', include(\"xmpp.urls\")),\n    ]\n\nUse ConverseJS in your base template::\n\n    {% load xmpp_tags %}\n    {% conversejs_initialize %}\n\nEjabberd Django authentication\n------------------------------\n\nCreate ``ejaberd_auth.sh`` file that will simply call ``ejabberd_auth``\nmanagement command. Adjust to suit your environment (eg. virtualenv)::\n\n    #!/bin/bash\n    cd <path_to_your_django_project>\n    python manage.py ejabberd_auth $@\n\nEdit ejabberd.yml and add external auth script, eg.::\n\n    host_config:\n        \"example.com\":\n            auth_method: external\n            extauth_program: \"/<path_to_your_project>/ejabberd_auth.sh\"\n\nSettings\n--------\n\nThese are all available settings you may use.\n\nXMPP_BOSH_SERVICE_URL\n    URL for ConverseJS BOSH connection\n\nXMPP_DOMAIN\n    Default XMPP domain\n\nXMPP_DOMAIN_MUC\n    Domain for multi user chats (default converence.<XMPP_DOMAIN>)\n\nXMPP_CONVERSEJS_AUTH\n    Authentication type for ConverseJS (prebind is not\n    supported so login is the only option)\n\nXMPP_CONVERSEJS_SETTINGS\n    dictionary of settings passed to converse.initialize.\n    For more list of available options see `Converse.js docs\n    <https://conversejs.org/docs/html/configuration.html>`_\n\nXMPP_ENABLED\n    Enable or disable XMPP at all\n\nXMPP_UPDATE_VCARD\n    Enable or disable vCard update\n\nXMPP_UPDATE_VCARD_HOURS\n    Update vCard every n hours (default False)\n\nA note on usernames\n-------------------\n\nJabber IDs are case-insensitive (so \"MyUser@domain.com\" and \"myuser@domain.com\" are the same account). By contrast, the ``username`` field in the default Django ``User`` model is case-sensitive (see `this Django ticket <https://code.djangoproject.com/ticket/2273>`_). This means two separate \"MyUser\" and \"myuser\" accounts in Django will have the same JID on the XMPP server. The ``ejabberd_auth`` management command will not authenticate such users, and they will both see \"Authentication failed\" in Converse and other XMPP clients.\n\nTo avoid such conflicts, it is recommended to use a custom ``User`` model that enforces unique lowercase usernames with a ``RegexField``. Other characters not allowed in a Jabber ID should be excluded as well. See `this guide <http://archive.jabber.org/userguide/#register>`_ for details.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fpytloun/django-xmpp", "keywords": "django xmpp conversejs jabber chat ejabberd", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "django-xmpp", "package_url": "https://pypi.org/project/django-xmpp/", "platform": "", "project_url": "https://pypi.org/project/django-xmpp/", "project_urls": {"Homepage": "https://github.com/fpytloun/django-xmpp"}, "release_url": "https://pypi.org/project/django-xmpp/0.4/", "requires_dist": null, "requires_python": "", "summary": "XMPP integration for Django app made simple", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>XMPP integration for Django app made simple!</p>\n<div>\n<p>Attention!</p>\n<p>This application is in early development stage. Every help or feedback is appreciated.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><a href=\"https://github.com/jcbrand/converse.js\" rel=\"nofollow\">ConverseJS</a> web chat integration<ul>\n<li>surely best available XMPP web client</li>\n<li>inspired by <a href=\"https://github.com/TracyWebTech/django-conversejs\" rel=\"nofollow\">TracyWebTech/django-conversejs</a></li>\n</ul>\n</li>\n<li>Support for MUC auto join</li>\n<li>Support for users query</li>\n<li>Ejabberd Django authentication using ejabberd_auth management command<ul>\n<li>inspired by <a href=\"https://github.com/ffalcinelli/django-ejabberd-bridge/blob/master/ejabberd_bridge/management/commands/ejabberd_auth.py\" rel=\"nofollow\">ffalcinelli/django-ejabberd-bridge</a></li>\n</ul>\n</li>\n<li>Single sign on functionality without storing user\u2019s credentials\n(requires using ejabberd_auth)</li>\n<li>Set avatar using gravatar and vCard during first login</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install <tt><span class=\"pre\">django-xmpp</span></tt> via pip:</p>\n<pre>pip install django-xmpp\n</pre>\n<p>Add <tt>xmpp</tt> and <tt>django_gravatar</tt> into INSTALLED_APPS:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'django_gravatar',\n    'xmpp',\n)\n</pre>\n<p>Setup most important variables:</p>\n<pre>XMPP_DOMAIN = 'example.com'\nXMPP_BOSH_SERVICE_URL = 'https://xmpp.example.com:5280/http-bind'\n</pre>\n<p>Optionally setup ConverseJS to suit your needs:</p>\n<pre>XMPP_CONVERSEJS_SETTINGS = {\n    'allow_contact_removal': False,\n    'allow_contact_requests': True,\n    'auto_subscribe': True,\n    'allow_logout': False,\n    'allow_muc': True,\n    'allow_otr': False,\n    'allow_registration': False,\n    'message_carbons': True,\n    'hide_muc_server': True,\n    'use_vcards': True,\n    'animate': True,\n    'play_sounds': True,\n    'xhr_user_search': True,\n    'sounds_path': '%ssounds/' % STATIC_URL,\n    'visible_toolbar_buttons': {\n         'call': False,\n         'clear': False,\n         'emoticons': True,\n         'toggle_participants': False,\n    }\n}\n</pre>\n<p>Include <tt>xmpp.urls</tt> in your <tt>urls.py</tt>:</p>\n<pre>urlpatterns = [\n    ...\n    url(r'^xmpp/', include(\"xmpp.urls\")),\n]\n</pre>\n<p>Use ConverseJS in your base template:</p>\n<pre>{% load xmpp_tags %}\n{% conversejs_initialize %}\n</pre>\n</div>\n<div id=\"ejabberd-django-authentication\">\n<h2>Ejabberd Django authentication</h2>\n<p>Create <tt>ejaberd_auth.sh</tt> file that will simply call <tt>ejabberd_auth</tt>\nmanagement command. Adjust to suit your environment (eg. virtualenv):</p>\n<pre>#!/bin/bash\ncd &lt;path_to_your_django_project&gt;\npython manage.py ejabberd_auth $@\n</pre>\n<p>Edit ejabberd.yml and add external auth script, eg.:</p>\n<pre>host_config:\n    \"example.com\":\n        auth_method: external\n        extauth_program: \"/&lt;path_to_your_project&gt;/ejabberd_auth.sh\"\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>These are all available settings you may use.</p>\n<dl>\n<dt>XMPP_BOSH_SERVICE_URL</dt>\n<dd>URL for ConverseJS BOSH connection</dd>\n<dt>XMPP_DOMAIN</dt>\n<dd>Default XMPP domain</dd>\n<dt>XMPP_DOMAIN_MUC</dt>\n<dd>Domain for multi user chats (default converence.&lt;XMPP_DOMAIN&gt;)</dd>\n<dt>XMPP_CONVERSEJS_AUTH</dt>\n<dd>Authentication type for ConverseJS (prebind is not\nsupported so login is the only option)</dd>\n<dt>XMPP_CONVERSEJS_SETTINGS</dt>\n<dd>dictionary of settings passed to converse.initialize.\nFor more list of available options see <a href=\"https://conversejs.org/docs/html/configuration.html\" rel=\"nofollow\">Converse.js docs</a></dd>\n<dt>XMPP_ENABLED</dt>\n<dd>Enable or disable XMPP at all</dd>\n<dt>XMPP_UPDATE_VCARD</dt>\n<dd>Enable or disable vCard update</dd>\n<dt>XMPP_UPDATE_VCARD_HOURS</dt>\n<dd>Update vCard every n hours (default False)</dd>\n</dl>\n</div>\n<div id=\"a-note-on-usernames\">\n<h2>A note on usernames</h2>\n<p>Jabber IDs are case-insensitive (so \u201c<a href=\"mailto:MyUser%40domain.com\">MyUser<span>@</span>domain<span>.</span>com</a>\u201d and \u201c<a href=\"mailto:myuser%40domain.com\">myuser<span>@</span>domain<span>.</span>com</a>\u201d are the same account). By contrast, the <tt>username</tt> field in the default Django <tt>User</tt> model is case-sensitive (see <a href=\"https://code.djangoproject.com/ticket/2273\" rel=\"nofollow\">this Django ticket</a>). This means two separate \u201cMyUser\u201d and \u201cmyuser\u201d accounts in Django will have the same JID on the XMPP server. The <tt>ejabberd_auth</tt> management command will not authenticate such users, and they will both see \u201cAuthentication failed\u201d in Converse and other XMPP clients.</p>\n<p>To avoid such conflicts, it is recommended to use a custom <tt>User</tt> model that enforces unique lowercase usernames with a <tt>RegexField</tt>. Other characters not allowed in a Jabber ID should be excluded as well. See <a href=\"http://archive.jabber.org/userguide/#register\" rel=\"nofollow\">this guide</a> for details.</p>\n</div>\n\n          </div>"}, "last_serial": 4341100, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bd423fa7bdaa8d828080d732c1a76b0e", "sha256": "cf7d730e55b3b76a8695d6ed4bf61c290d40047f140eaa87c70d986a9d882af7"}, "downloads": -1, "filename": "django-xmpp-0.1.tar.gz", "has_sig": false, "md5_digest": "bd423fa7bdaa8d828080d732c1a76b0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5923, "upload_time": "2015-06-08T20:32:26", "upload_time_iso_8601": "2015-06-08T20:32:26.400374Z", "url": "https://files.pythonhosted.org/packages/35/cd/39a2c5f9a6b92ff6b5b62f727b532cbd3413a3aab9ea6f836df363d43ac9/django-xmpp-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5d68e8aed2d4e53ae49096e670725f69", "sha256": "e629d3035a612d6dace9a80500d00196d3a2e462855adf998068caad288fe9d9"}, "downloads": -1, "filename": "django-xmpp-0.2.tar.gz", "has_sig": false, "md5_digest": "5d68e8aed2d4e53ae49096e670725f69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 381596, "upload_time": "2015-06-08T21:06:25", "upload_time_iso_8601": "2015-06-08T21:06:25.881552Z", "url": "https://files.pythonhosted.org/packages/2b/90/8caa651d07ce2dff071bcbd268f2d1e1ad7ca13def3fcd917cf29b2c7a6e/django-xmpp-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "7d8b789213d13dc1ceb2e506a1315f46", "sha256": "c56368602088c96f1f19302983711d7f0ea74aac90c72aecbc54f1f38d24b8ae"}, "downloads": -1, "filename": "django-xmpp-0.3.tar.gz", "has_sig": false, "md5_digest": "7d8b789213d13dc1ceb2e506a1315f46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 429583, "upload_time": "2015-07-07T21:28:46", "upload_time_iso_8601": "2015-07-07T21:28:46.162198Z", "url": "https://files.pythonhosted.org/packages/65/a4/f01d2c14f692e22bb93e8a8dfc77704b502e9e5143d69281e389792a2fec/django-xmpp-0.3.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "491136aba70725ce5c12848be96c3edf", "sha256": "e94bf44030ddc00b5a98414095d85757e579c45ec7c554091d6f7d5c29484ecf"}, "downloads": -1, "filename": "django-xmpp-0.3.2.tar.gz", "has_sig": false, "md5_digest": "491136aba70725ce5c12848be96c3edf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 429707, "upload_time": "2015-07-11T14:11:47", "upload_time_iso_8601": "2015-07-11T14:11:47.432690Z", "url": "https://files.pythonhosted.org/packages/ae/54/a07ef8cee052e7319cb5bd89df6877070263150618972bf227158585fdcc/django-xmpp-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "34b15856a3e34e251559f9690c433698", "sha256": "53dab49cc711731b0906531074133d84b657e51f1ec8d9a23196dd0665c25d8e"}, "downloads": -1, "filename": "django-xmpp-0.4.tar.gz", "has_sig": false, "md5_digest": "34b15856a3e34e251559f9690c433698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 453086, "upload_time": "2018-10-04T16:51:06", "upload_time_iso_8601": "2018-10-04T16:51:06.592017Z", "url": "https://files.pythonhosted.org/packages/15/42/a93d2d2bda580285b961fc8d99e62a200cf297978f39f894ab09f8a9b2ab/django-xmpp-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34b15856a3e34e251559f9690c433698", "sha256": "53dab49cc711731b0906531074133d84b657e51f1ec8d9a23196dd0665c25d8e"}, "downloads": -1, "filename": "django-xmpp-0.4.tar.gz", "has_sig": false, "md5_digest": "34b15856a3e34e251559f9690c433698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 453086, "upload_time": "2018-10-04T16:51:06", "upload_time_iso_8601": "2018-10-04T16:51:06.592017Z", "url": "https://files.pythonhosted.org/packages/15/42/a93d2d2bda580285b961fc8d99e62a200cf297978f39f894ab09f8a9b2ab/django-xmpp-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:47 2020"}