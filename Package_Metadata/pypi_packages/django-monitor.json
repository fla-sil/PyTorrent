{"info": {"author": "Rajeesh Nair", "author_email": "rajeeshrnair@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "===============\nDjango-monitor\n===============\n\n---------------------------------------------------------\nA django-app to enable moderation of model objects\n---------------------------------------------------------\n\nAbout\n=====\n\nModeration seems to be some job each one want to do in their own way.\nDjango-monitor is a django-app to moderate model objects. It was started as a\nclone of `django-gatekeeper` project but to meet certain business requirements.\nRead about those requirements it meet in the ``Features`` section.\n\nHere, the moderation process is well integrated with django-admin. That is, all\nmoderation actvities are performed from within the changelist page itself.\n\nThe detailed documentation for latest revision is available at: \n\n* http://django-monitor.readthedocs.org\n\n* Within the ``docs/source/`` directory inside the source path.\n\nRequirements\n============\n\n* Python >= 2.4\n\n* Django >= 1.1\n\nInstallation\n============\n\n#. Directly from the python package index\n\n   #. Using pip: ::\n\n        $ pip install django_monitor\n\n   #. Using easy_install: ::\n\n        $ easy_install django_monitor\n\n#. OR Directly from the mercurial repo\n\n    #. Clone the repo (if you have hg installed): ::\n\n        $ hg clone http://bitbucket.org/rajeesh/django-monitor/\n\n#. OR Download & install from available archives:\n\n   * Get the archive from any of the following locations:\n\n     + http://bitbucket.org/rajeesh/django-monitor/downloads\n\n     + http://pypi.python.org/pypi/django-monitor#downloads\n\n   * Install using the setuptools as given below: ::\n\n        $ tar xzf django-monitor-xxx.tar.gz\n        $ cd django-monitor-xxx\n        $ python setup.py install\n\n   * If setuptools is not installed, you may copy the ``django_monitor``\n     directory to somewhere in your python path.\n\n#. Then add 'django_monitor' to your project's ``settings.INSTALLED_APPS``.\n\nFeatures\n=========\n\nModel-specific permission\n--------------------------\nEach moderated model will have an associated moderate permission. To approve\nor challenge any object created for a particular model, users need to have\nthe corresponding permission.\n\nAuto-moderation\n----------------\nAny object created by a user with add permission will have an ``In Pending``\nstatus. If the user has got moderate permission also, the object created will\nautomatically get approved (status becomes ``Approved``).\n\nModeration from within admin changelist\n----------------------------------------\nThe changelist of a moderated model displays the current moderation status of\nall objects. Also, you can filter the objects by their moderation status. Three\nactions are available for moderation. To moderate, user just need to select the\nobjects, choose appropriate action and press ``Go``.\n\nRelated moderation\n-------------------\nWhen a manager moderates some model objects, there may be some other related\nmodel objects which also can get moderated along with the original ones. The\ndeveloper can specify such related models to be moderated during registration.\n\nData protection\n----------------\nThe developer can prevent admin-users from changing values of selected fields\nof approved objects. Deleting approved objects also can be prevented if your\nclient's business requires that.\n\nBasic usage (developers)\n========================\n\n* Register the model for moderation using ``django_monitor.nq``.\n\n  **Example**: ::\n\n    import django_monitor\n    from django.db import models\n    class MyModel(models.Model):\n        pass\n\n    django_monitor.nq(MyModel)\n\n* Inherit ``MonitorAdmin``, not ``ModelAdmin`` for moderated models. ::\n\n    # in your admin.py\n    from django_monitor.admin import MonitorAdmin\n    class MyAdmin(MonitorAdmin):\n        pass\n\n    from django.contrib import admin\n    admin.site.register(MyModel, MyAdmin)\n\n.. note::\n\n   Django-monitor can not bring existing model instances under moderation.\n   So, enqueue the model first and then only create model instances.\n\nMore details given at the documentation locations mentioned above.", "description_content_type": null, "docs_url": "https://pythonhosted.org/django-monitor/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/rajeesh/django-monitor", "keywords": "django moderation models", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-monitor", "package_url": "https://pypi.org/project/django-monitor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-monitor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/rajeesh/django-monitor"}, "release_url": "https://pypi.org/project/django-monitor/0.2.1a/", "requires_dist": null, "requires_python": null, "summary": "Django app to moderate model objects", "version": "0.2.1a", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>Moderation seems to be some job each one want to do in their own way.\nDjango-monitor is a django-app to moderate model objects. It was started as a\nclone of <cite>django-gatekeeper</cite> project but to meet certain business requirements.\nRead about those requirements it meet in the <tt>Features</tt> section.</p>\n<p>Here, the moderation process is well integrated with django-admin. That is, all\nmoderation actvities are performed from within the changelist page itself.</p>\n<p>The detailed documentation for latest revision is available at:</p>\n<ul>\n<li><a href=\"http://django-monitor.readthedocs.org\" rel=\"nofollow\">http://django-monitor.readthedocs.org</a></li>\n<li>Within the <tt>docs/source/</tt> directory inside the source path.</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 2.4</li>\n<li>Django &gt;= 1.1</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Directly from the python package index</p>\n<ol>\n<li><p>Using pip:</p>\n<pre>$ pip install django_monitor\n</pre>\n</li>\n<li><p>Using easy_install:</p>\n<pre>$ easy_install django_monitor\n</pre>\n</li>\n</ol>\n</li>\n<li><p>OR Directly from the mercurial repo</p>\n<blockquote>\n<ol>\n<li><p>Clone the repo (if you have hg installed):</p>\n<pre>$ hg clone http://bitbucket.org/rajeesh/django-monitor/\n</pre>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>OR Download &amp; install from available archives:</p>\n<ul>\n<li><p>Get the archive from any of the following locations:</p>\n<ul>\n<li><a href=\"http://bitbucket.org/rajeesh/django-monitor/downloads\" rel=\"nofollow\">http://bitbucket.org/rajeesh/django-monitor/downloads</a></li>\n<li><a href=\"http://pypi.python.org/pypi/django-monitor#downloads\" rel=\"nofollow\">http://pypi.python.org/pypi/django-monitor#downloads</a></li>\n</ul>\n</li>\n<li><p>Install using the setuptools as given below:</p>\n<pre>$ tar xzf django-monitor-xxx.tar.gz\n$ cd django-monitor-xxx\n$ python setup.py install\n</pre>\n</li>\n<li><p>If setuptools is not installed, you may copy the <tt>django_monitor</tt>\ndirectory to somewhere in your python path.</p>\n</li>\n</ul>\n</li>\n<li><p>Then add \u2018django_monitor\u2019 to your project\u2019s <tt>settings.INSTALLED_APPS</tt>.</p>\n</li>\n</ol>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<div id=\"model-specific-permission\">\n<h3>Model-specific permission</h3>\n<p>Each moderated model will have an associated moderate permission. To approve\nor challenge any object created for a particular model, users need to have\nthe corresponding permission.</p>\n</div>\n<div id=\"auto-moderation\">\n<h3>Auto-moderation</h3>\n<p>Any object created by a user with add permission will have an <tt>In Pending</tt>\nstatus. If the user has got moderate permission also, the object created will\nautomatically get approved (status becomes <tt>Approved</tt>).</p>\n</div>\n<div id=\"moderation-from-within-admin-changelist\">\n<h3>Moderation from within admin changelist</h3>\n<p>The changelist of a moderated model displays the current moderation status of\nall objects. Also, you can filter the objects by their moderation status. Three\nactions are available for moderation. To moderate, user just need to select the\nobjects, choose appropriate action and press <tt>Go</tt>.</p>\n</div>\n<div id=\"related-moderation\">\n<h3>Related moderation</h3>\n<p>When a manager moderates some model objects, there may be some other related\nmodel objects which also can get moderated along with the original ones. The\ndeveloper can specify such related models to be moderated during registration.</p>\n</div>\n<div id=\"data-protection\">\n<h3>Data protection</h3>\n<p>The developer can prevent admin-users from changing values of selected fields\nof approved objects. Deleting approved objects also can be prevented if your\nclient\u2019s business requires that.</p>\n</div>\n</div>\n<div id=\"basic-usage-developers\">\n<h2>Basic usage (developers)</h2>\n<ul>\n<li><p>Register the model for moderation using <tt>django_monitor.nq</tt>.</p>\n<p><strong>Example</strong>:</p>\n<pre>import django_monitor\nfrom django.db import models\nclass MyModel(models.Model):\n    pass\n\ndjango_monitor.nq(MyModel)\n</pre>\n</li>\n<li><p>Inherit <tt>MonitorAdmin</tt>, not <tt>ModelAdmin</tt> for moderated models.</p>\n<pre># in your admin.py\nfrom django_monitor.admin import MonitorAdmin\nclass MyAdmin(MonitorAdmin):\n    pass\n\nfrom django.contrib import admin\nadmin.site.register(MyModel, MyAdmin)\n</pre>\n</li>\n</ul>\n<div>\n<p>Note</p>\n<p>Django-monitor can not bring existing model instances under moderation.\nSo, enqueue the model first and then only create model instances.</p>\n</div>\n<p>More details given at the documentation locations mentioned above.</p>\n</div>\n\n          </div>"}, "last_serial": 455411, "releases": {"0.2.1a": [{"comment_text": "", "digests": {"md5": "7417fa00ee6cac397ef765a1f333544c", "sha256": "7d3ae96f8acb241ec5ee98e33bf23cc5156478940e25c439e30b67d1dc13f61c"}, "downloads": -1, "filename": "django-monitor-0.2.1a.tar.gz", "has_sig": false, "md5_digest": "7417fa00ee6cac397ef765a1f333544c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95943, "upload_time": "2012-08-02T19:49:59", "upload_time_iso_8601": "2012-08-02T19:49:59.107788Z", "url": "https://files.pythonhosted.org/packages/0f/9a/bd2e62d54b94e62901d1d6c9a9f820e53b78dcb78bd1279dc3a157f188a1/django-monitor-0.2.1a.tar.gz", "yanked": false}], "0.2a": [{"comment_text": "", "digests": {"md5": "b42bc610502f8c14e06ca144232a48fd", "sha256": "9fc5d3a3fc1683035db75db294ae29b3910baed589087bac936679df4d419367"}, "downloads": -1, "filename": "django-monitor-0.2a.tar.gz", "has_sig": false, "md5_digest": "b42bc610502f8c14e06ca144232a48fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95888, "upload_time": "2011-06-03T16:24:57", "upload_time_iso_8601": "2011-06-03T16:24:57.814493Z", "url": "https://files.pythonhosted.org/packages/4f/6f/1422570f87f4110cc4bc60ec567f0b6ccdb34ea22c4f016df7cc8d9a8c57/django-monitor-0.2a.tar.gz", "yanked": false}], "0.2b": [{"comment_text": "", "digests": {"md5": "be576d0fbbb2a29126298c11537332fc", "sha256": "763195e7d09c29f96c219da6cb74fbe583bb68b98251090bd3653d7756103ddb"}, "downloads": -1, "filename": "django-monitor-0.2b.tar.gz", "has_sig": false, "md5_digest": "be576d0fbbb2a29126298c11537332fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97093, "upload_time": "2011-06-19T07:14:55", "upload_time_iso_8601": "2011-06-19T07:14:55.571544Z", "url": "https://files.pythonhosted.org/packages/12/61/2ae3de11bd446da7ad191dbdca9bc80fa5e9ba4cbf98865e1a3edc3f6581/django-monitor-0.2b.tar.gz", "yanked": false}], "0.2rc": [{"comment_text": "", "digests": {"md5": "4233d8c1e3e4cb8620b58278966b3daa", "sha256": "9a2ace550e704a8bd3ebae05fc3de2d3ad6c273300a27f76b6b2f029e05abf1a"}, "downloads": -1, "filename": "django-monitor-0.2rc.tar.gz", "has_sig": false, "md5_digest": "4233d8c1e3e4cb8620b58278966b3daa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95651, "upload_time": "2012-03-04T23:32:04", "upload_time_iso_8601": "2012-03-04T23:32:04.643918Z", "url": "https://files.pythonhosted.org/packages/73/22/f7925a594c32355fcf062a87af28ce2ba1769ece11b03530ea35376593f7/django-monitor-0.2rc.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7417fa00ee6cac397ef765a1f333544c", "sha256": "7d3ae96f8acb241ec5ee98e33bf23cc5156478940e25c439e30b67d1dc13f61c"}, "downloads": -1, "filename": "django-monitor-0.2.1a.tar.gz", "has_sig": false, "md5_digest": "7417fa00ee6cac397ef765a1f333544c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95943, "upload_time": "2012-08-02T19:49:59", "upload_time_iso_8601": "2012-08-02T19:49:59.107788Z", "url": "https://files.pythonhosted.org/packages/0f/9a/bd2e62d54b94e62901d1d6c9a9f820e53b78dcb78bd1279dc3a157f188a1/django-monitor-0.2.1a.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:34:58 2020"}