{"info": {"author": "BeamIO, Inc.", "author_email": "info@beamio.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# Welcome to the Algorithm Toolkit (BETA)!\n\nWe built the Algorithm Toolkit (ATK) to provide researchers and data anaysts the tools they need to process data quickly and efficiently, so they can focus on actually doing scientific or other analysis work.\n\nPlease see this project's official documentation on [Read The Docs](https://algorithm-toolkit.readthedocs.io/en/latest/index.html). Below are instructions for how to install the ATK on your own system.\n\n# Installation\n\n## Super Quick Start\n\nPython projects should be installed in virtual environments in order to keep versions of various packages in sync with the project code. However, if you want to get up and running immediately you can do the following in a Terminal window (assumes [Python](https://www.python.org/) and [pip](https://pip.pypa.io/en/stable/) are installed):\n\n```shell\npip install algorithm_toolkit\nalg cp myproject\ncd myproject\nalg run\n```\n\nPoint your browser to http://localhost:5000/. You should see the development environment welcome page.\n\nSee the next section for a more detailed install process.\n\n## Slightly More Involved But Still Pretty Quick Start\n\n### A word about virtual environments\n\nAs noted above, it's a best practice to start new Python projects in virtual environments. As you work on code, you rely more and more on external libraries. As time passes, changes to those libraries will eventually break your code unless you are constantly updating it. So when you install a new version of a library for another project, suddenly you find that your earlier project no longer works.\n\nVirtual environments solve this problem. Each environment contains a discreet set of the libraries used by your code, at the versions you determine.\n\nThankfully, creating virtual environments in Python is easy.\n\n#### Python 3\n\nLinux and Mac:\n\n```shell\npython3 -m venv myenvironment\nsource myenvironment/bin/activate\n```\n\n> On some Linux systems, python3-venv is not installed by default. If you get an error with the command above, try:\n> ```shell\n> # Debian/Ubuntu\n> sudo apt install python3-venv\n>\n> # RedHat/CentOS\n> sudo yum install python3-venv\n> ```\n\nOn Windows:\n\n```shell\npy -3 -m venv myenvironment\nmyenvironment\\Scripts\\activate.bat\n```\n\n#### Python 2\n\nPython 2 does not come with a built in virtual environment creator. We recommend using virtualenvwrapper. [Their install docs are excellent](https://virtualenvwrapper.readthedocs.io/en/latest/install.html).\n\nOnce you've installed and configured virtualenvwrapper, create your virtual environment:\n\n```shell\nmkvirtualenv myenvironment\n```\n\n## Setting up your ATK project\n\n```shell\npip install algorithm_toolkit\nalg cp myproject\ncd myproject\nalg run\n```\n\nPoint your browser to http://localhost:5000/. You should see the development environment welcome page.\n\n### What just happened?\n\nLet's walk through this line by line.\n\n```shell\npip install algorithm_toolkit\n```\n\nThe ATK lives on [PyPi](https://pypi.org/), so this line downloads and installs the ATK in your virtual environment. Several dependencies will be installed as well.\n\n```shell\nalg cp myproject\n```\n\nThis line uses the ATK's Command Line Interface (CLI) called `alg`. The `cp` command stands for \"create project\". \"myproject\" is the name of your project, which will also be the name of the folder created for the project (feel free to use a more original name).\n\n```shell\ncd myproject\n```\n\nPuts you in the project folder.\n\n```shell\nalg run\n```\n\nThis command also uses the CLI. The `run` command starts a development web server. As we discuss elsewhere in the docs (see TODO: create page), setting up your algorithms and processing chains is accomplished using a web-based interface.\n\n## Installing the example project\n\nThe ATK comes with an example project to help you understand how it works.\n\n### Prerequisites\n\nThe example project requires [NumPy](http://www.numpy.org/) in order to work. If you're on a Linux machine, you can install the example project and it will handle this dependency for you.\n\nHowever, if you're on a Mac or Windows machine, installing NumPy is more complicated.\n\n### Anaconda\n\nFor these operating systems, we highly recommend using Anaconda or it's smaller cousin Miniconda. The only difference between these two is that Anaconda installs over 150 packages (including SciPy and NumPy) out of the box whereas with Miniconda you need to install everything separately. Either way is fine.\n\n* [Anaconda installation Page](https://www.anaconda.com/download/#linux)\n* [Miniconda installation Page](https://docs.conda.io/en/latest/miniconda.html)\n\nOnce Anaconda is installed, you can set up the example project right away. If you decide to use Miniconda, first do the following:\n\n```shell\nconda install numpy\n```\n\n### Install the example project\n\nTo set up the example project, just use the `--example` flag when setting up a new project:\n\n```shell\nalg cp myproject --example\n```\n\n## Installing documentation locally\n\nIf you want these docs to be installed locally, use the `--with-docs` flag when creating a project. You need to have Sphinx installed for this to work.\n\n```shell\npip install sphinx sphinx_rtd_theme\nalg cp myproject --with-docs\n```\n\n## Troubleshooting Install Issues\n\nOn some systems, additional libraries may be needed to install the Algorithm Toolkit. Try these packages if your ATK install fails:\n\n**Debian/Ubuntu Linux**\n\n```shell\n# python 3\nsudo apt install python3-dev build-essential\n\n# python 2\nsudo apt install python-dev build-essential\n```\n\n**RedHat/CentOS Linux**\n\n```shell\n# python 3\nsudo yum install python3-devel\n\n# python 2\nsudo yum install python-devel\n```\n\n# Contributing\n\nThanks for your interest in contributing to the Algorithm Toolkit codebase! You should know a few things.\n\n## Code of Conduct\n\nFirst of all: this project has a code of conduct. Please read the CODE_OF_CONDUCT file in the project root folder and stick to its principles.\n\n## License\n\nThe MIT license (see LICENSE file) applies to all contributions.\n\n## Contributing to Docs\n\nWe also welcome contributions to the documentation. You should follow the same workflow for contributing code as for contributing documentation. Also, please follow the reSructuredText format used by the existing documents (guidelines here).\n\nYou will need to install Sphinx and the RTD theme to build docs locally (which you should do to make sure they look OK).\n\n```shell\n$ pip install sphinx sphinx_rtd_theme\n$ sphinx-build docs docs/html -a\n```\n\n## More Info\n\nPlease see the Contributing page on Read The Docs for more detailed information.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BeamIO-Inc/algorithm_toolkit", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "algorithm-toolkit", "package_url": "https://pypi.org/project/algorithm-toolkit/", "platform": "", "project_url": "https://pypi.org/project/algorithm-toolkit/", "project_urls": {"Documentation": "https://algorithm-toolkit.readthedocs.io/en/latest/index.html", "Homepage": "https://github.com/BeamIO-Inc/algorithm_toolkit", "Source Code": "https://github.com/BeamIO-Inc/algorithm_toolkit"}, "release_url": "https://pypi.org/project/algorithm-toolkit/0.1.2/", "requires_dist": ["configparser", "distro", "flask (>=1.0)", "flask-cors", "flask-wtf", "inflect", "numpy", "psutil", "python-dotenv", "requests", "tabulate"], "requires_python": "", "summary": "This project provides an easy way for researchers and developers to develop and share algorithms related to geospatial data and imagery.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome to the Algorithm Toolkit (BETA)!</h1>\n<p>We built the Algorithm Toolkit (ATK) to provide researchers and data anaysts the tools they need to process data quickly and efficiently, so they can focus on actually doing scientific or other analysis work.</p>\n<p>Please see this project's official documentation on <a href=\"https://algorithm-toolkit.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">Read The Docs</a>. Below are instructions for how to install the ATK on your own system.</p>\n<h1>Installation</h1>\n<h2>Super Quick Start</h2>\n<p>Python projects should be installed in virtual environments in order to keep versions of various packages in sync with the project code. However, if you want to get up and running immediately you can do the following in a Terminal window (assumes <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> and <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> are installed):</p>\n<pre>pip install algorithm_toolkit\nalg cp myproject\n<span class=\"nb\">cd</span> myproject\nalg run\n</pre>\n<p>Point your browser to <a href=\"http://localhost:5000/\" rel=\"nofollow\">http://localhost:5000/</a>. You should see the development environment welcome page.</p>\n<p>See the next section for a more detailed install process.</p>\n<h2>Slightly More Involved But Still Pretty Quick Start</h2>\n<h3>A word about virtual environments</h3>\n<p>As noted above, it's a best practice to start new Python projects in virtual environments. As you work on code, you rely more and more on external libraries. As time passes, changes to those libraries will eventually break your code unless you are constantly updating it. So when you install a new version of a library for another project, suddenly you find that your earlier project no longer works.</p>\n<p>Virtual environments solve this problem. Each environment contains a discreet set of the libraries used by your code, at the versions you determine.</p>\n<p>Thankfully, creating virtual environments in Python is easy.</p>\n<h4>Python 3</h4>\n<p>Linux and Mac:</p>\n<pre>python3 -m venv myenvironment\n<span class=\"nb\">source</span> myenvironment/bin/activate\n</pre>\n<blockquote>\n<p>On some Linux systems, python3-venv is not installed by default. If you get an error with the command above, try:</p>\n<pre><span class=\"c1\"># Debian/Ubuntu</span>\nsudo apt install python3-venv\n\n<span class=\"c1\"># RedHat/CentOS</span>\nsudo yum install python3-venv\n</pre>\n</blockquote>\n<p>On Windows:</p>\n<pre>py -3 -m venv myenvironment\nmyenvironment<span class=\"se\">\\S</span>cripts<span class=\"se\">\\a</span>ctivate.bat\n</pre>\n<h4>Python 2</h4>\n<p>Python 2 does not come with a built in virtual environment creator. We recommend using virtualenvwrapper. <a href=\"https://virtualenvwrapper.readthedocs.io/en/latest/install.html\" rel=\"nofollow\">Their install docs are excellent</a>.</p>\n<p>Once you've installed and configured virtualenvwrapper, create your virtual environment:</p>\n<pre>mkvirtualenv myenvironment\n</pre>\n<h2>Setting up your ATK project</h2>\n<pre>pip install algorithm_toolkit\nalg cp myproject\n<span class=\"nb\">cd</span> myproject\nalg run\n</pre>\n<p>Point your browser to <a href=\"http://localhost:5000/\" rel=\"nofollow\">http://localhost:5000/</a>. You should see the development environment welcome page.</p>\n<h3>What just happened?</h3>\n<p>Let's walk through this line by line.</p>\n<pre>pip install algorithm_toolkit\n</pre>\n<p>The ATK lives on <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a>, so this line downloads and installs the ATK in your virtual environment. Several dependencies will be installed as well.</p>\n<pre>alg cp myproject\n</pre>\n<p>This line uses the ATK's Command Line Interface (CLI) called <code>alg</code>. The <code>cp</code> command stands for \"create project\". \"myproject\" is the name of your project, which will also be the name of the folder created for the project (feel free to use a more original name).</p>\n<pre><span class=\"nb\">cd</span> myproject\n</pre>\n<p>Puts you in the project folder.</p>\n<pre>alg run\n</pre>\n<p>This command also uses the CLI. The <code>run</code> command starts a development web server. As we discuss elsewhere in the docs (see TODO: create page), setting up your algorithms and processing chains is accomplished using a web-based interface.</p>\n<h2>Installing the example project</h2>\n<p>The ATK comes with an example project to help you understand how it works.</p>\n<h3>Prerequisites</h3>\n<p>The example project requires <a href=\"http://www.numpy.org/\" rel=\"nofollow\">NumPy</a> in order to work. If you're on a Linux machine, you can install the example project and it will handle this dependency for you.</p>\n<p>However, if you're on a Mac or Windows machine, installing NumPy is more complicated.</p>\n<h3>Anaconda</h3>\n<p>For these operating systems, we highly recommend using Anaconda or it's smaller cousin Miniconda. The only difference between these two is that Anaconda installs over 150 packages (including SciPy and NumPy) out of the box whereas with Miniconda you need to install everything separately. Either way is fine.</p>\n<ul>\n<li><a href=\"https://www.anaconda.com/download/#linux\" rel=\"nofollow\">Anaconda installation Page</a></li>\n<li><a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">Miniconda installation Page</a></li>\n</ul>\n<p>Once Anaconda is installed, you can set up the example project right away. If you decide to use Miniconda, first do the following:</p>\n<pre>conda install numpy\n</pre>\n<h3>Install the example project</h3>\n<p>To set up the example project, just use the <code>--example</code> flag when setting up a new project:</p>\n<pre>alg cp myproject --example\n</pre>\n<h2>Installing documentation locally</h2>\n<p>If you want these docs to be installed locally, use the <code>--with-docs</code> flag when creating a project. You need to have Sphinx installed for this to work.</p>\n<pre>pip install sphinx sphinx_rtd_theme\nalg cp myproject --with-docs\n</pre>\n<h2>Troubleshooting Install Issues</h2>\n<p>On some systems, additional libraries may be needed to install the Algorithm Toolkit. Try these packages if your ATK install fails:</p>\n<p><strong>Debian/Ubuntu Linux</strong></p>\n<pre><span class=\"c1\"># python 3</span>\nsudo apt install python3-dev build-essential\n\n<span class=\"c1\"># python 2</span>\nsudo apt install python-dev build-essential\n</pre>\n<p><strong>RedHat/CentOS Linux</strong></p>\n<pre><span class=\"c1\"># python 3</span>\nsudo yum install python3-devel\n\n<span class=\"c1\"># python 2</span>\nsudo yum install python-devel\n</pre>\n<h1>Contributing</h1>\n<p>Thanks for your interest in contributing to the Algorithm Toolkit codebase! You should know a few things.</p>\n<h2>Code of Conduct</h2>\n<p>First of all: this project has a code of conduct. Please read the CODE_OF_CONDUCT file in the project root folder and stick to its principles.</p>\n<h2>License</h2>\n<p>The MIT license (see LICENSE file) applies to all contributions.</p>\n<h2>Contributing to Docs</h2>\n<p>We also welcome contributions to the documentation. You should follow the same workflow for contributing code as for contributing documentation. Also, please follow the reSructuredText format used by the existing documents (guidelines here).</p>\n<p>You will need to install Sphinx and the RTD theme to build docs locally (which you should do to make sure they look OK).</p>\n<pre>$ pip install sphinx sphinx_rtd_theme\n$ sphinx-build docs docs/html -a\n</pre>\n<h2>More Info</h2>\n<p>Please see the Contributing page on Read The Docs for more detailed information.</p>\n\n          </div>"}, "last_serial": 4865715, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6b4ab10b02668cef7f313503592ae607", "sha256": "3ac803e8c90331824a26bd3e1a67b9d7fc7a72c83789440bb5c5dd1d58d0ec1f"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b4ab10b02668cef7f313503592ae607", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2307797, "upload_time": "2019-02-24T16:40:08", "upload_time_iso_8601": "2019-02-24T16:40:08.664868Z", "url": "https://files.pythonhosted.org/packages/7a/4b/59da23c9a64aef14251ac632bc087acf8b2a58efbbfc271a8d7343dc0240/algorithm_toolkit-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc1b153bd36fd21609be08ec4d592c9b", "sha256": "6d304fee186b8aea91f210e1c2c15bd1fa24669778383f5d4321c191e3c56cda"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fc1b153bd36fd21609be08ec4d592c9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2285635, "upload_time": "2019-02-24T16:40:11", "upload_time_iso_8601": "2019-02-24T16:40:11.955883Z", "url": "https://files.pythonhosted.org/packages/64/6e/3fd8fc8586db9d9ce251035c5b28614288347e239d9ac8e9a8f0cd4c08d8/algorithm_toolkit-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7bfbd1291b17d30f37823d88fa43c240", "sha256": "1759cac785c596f7f96baf3d15e174aded7d3f6e953fce4bb27312ec119ecfea"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7bfbd1291b17d30f37823d88fa43c240", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2315403, "upload_time": "2019-02-25T15:45:30", "upload_time_iso_8601": "2019-02-25T15:45:30.336394Z", "url": "https://files.pythonhosted.org/packages/63/ac/b2cad001045d322ef4b4523b89e5b329046eb4b6f4bb0492ecc2f09cd4f8/algorithm_toolkit-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8298d1b467454863907a39286c6ac0d", "sha256": "e7cac6b3a3a89e644fbab71668fd76eac308ab5b358e65f23c00c33e282c21ac"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a8298d1b467454863907a39286c6ac0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2291733, "upload_time": "2019-02-25T15:45:32", "upload_time_iso_8601": "2019-02-25T15:45:32.730678Z", "url": "https://files.pythonhosted.org/packages/60/55/a5fc468b0ee7f6417e67926e14f5fb2ad29b5e7aa4905e61419320c978b7/algorithm_toolkit-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "14101cd0cbb35565cc23d34be0bb48e7", "sha256": "752898eec8143932ae50f564ddf9f94914851474542204fd788f3d510fd87174"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14101cd0cbb35565cc23d34be0bb48e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2315478, "upload_time": "2019-02-25T17:02:22", "upload_time_iso_8601": "2019-02-25T17:02:22.778416Z", "url": "https://files.pythonhosted.org/packages/0e/a7/51586916ad415583ebade863a7f990b4dd6a0184fcc441578c272ef133ff/algorithm_toolkit-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4ba453c083568f675aa964e7f01d802", "sha256": "dbd6e729018f0a1a0ec33e03bf44f5b6a2e0fc938174f5e08d87b6d6f314f3bd"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a4ba453c083568f675aa964e7f01d802", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2291797, "upload_time": "2019-02-25T17:02:24", "upload_time_iso_8601": "2019-02-25T17:02:24.943662Z", "url": "https://files.pythonhosted.org/packages/03/a7/3b438c4ee8c24e12ae5faa90c06c2b9ca577dab63446e99363532439eea0/algorithm_toolkit-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14101cd0cbb35565cc23d34be0bb48e7", "sha256": "752898eec8143932ae50f564ddf9f94914851474542204fd788f3d510fd87174"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14101cd0cbb35565cc23d34be0bb48e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2315478, "upload_time": "2019-02-25T17:02:22", "upload_time_iso_8601": "2019-02-25T17:02:22.778416Z", "url": "https://files.pythonhosted.org/packages/0e/a7/51586916ad415583ebade863a7f990b4dd6a0184fcc441578c272ef133ff/algorithm_toolkit-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4ba453c083568f675aa964e7f01d802", "sha256": "dbd6e729018f0a1a0ec33e03bf44f5b6a2e0fc938174f5e08d87b6d6f314f3bd"}, "downloads": -1, "filename": "algorithm_toolkit-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a4ba453c083568f675aa964e7f01d802", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2291797, "upload_time": "2019-02-25T17:02:24", "upload_time_iso_8601": "2019-02-25T17:02:24.943662Z", "url": "https://files.pythonhosted.org/packages/03/a7/3b438c4ee8c24e12ae5faa90c06c2b9ca577dab63446e99363532439eea0/algorithm_toolkit-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:50 2020"}