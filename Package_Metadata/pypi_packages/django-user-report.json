{"info": {"author": "Edward Chai", "author_email": "edwardc@acrossor.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development"], "description": "=====\nUser Content Report System\n=====\n\nIOS apps may may require server side has a report system to ensure each content user created can be reporeted and removed. This small django app comes with those essential features that you don't have to implement yourself:\n\n1. Query, monitor all tickets users sent from front-end app on Django Admin Page.\n2. Admin can set priorities, delete content, banning users directly on the admin page. \n3. Built in REST api for front-end calling and sumbitting a ticket.\n4. By default, enabled Email notification to target User (content creator).\n\nQuick start\n-----------\n\n1. Add \"report_system\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'report_system',\n    ]\n\n2. Configure Those settings (Recommended)::\n\n    # REPORT SYSTEM\n\tREPORT_SLUG_MODEL_MAPPINGS = (\n\t    ('user', AUTH_USER_MODEL),\n\t    ('user_blog', 'blogs.blog'),\n\t    ...\n\t)\n\tREPORT_EMAIL_RECEIVER_FIELDNAME = {\n\t    AUTH_USER_MODEL: None,\n\t    'blogs.blog': 'author',\n\t}\n\tREPORT_EMAIL_FROM = DEFAULT_FROM_EMAIL\n\n3. Run `python manage.py migrate` to create the Report System Tickets models.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DrChai/django-user-report", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-user-report", "package_url": "https://pypi.org/project/django-user-report/", "platform": "", "project_url": "https://pypi.org/project/django-user-report/", "project_urls": {"Homepage": "https://github.com/DrChai/django-user-report"}, "release_url": "https://pypi.org/project/django-user-report/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "A simple user content report system with RESTful api and Email Notification.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>User Content Report System<br>=====<br><br>IOS apps may may require server side has a report system to ensure each content user created can be reporeted and removed. This small django app comes with those essential features that you don't have to implement yourself:<br><br>1. Query, monitor all tickets users sent from front-end app on Django Admin Page.<br>2. Admin can set priorities, delete content, banning users directly on the admin page. <br>3. Built in REST api for front-end calling and sumbitting a ticket.<br>4. By default, enabled Email notification to target User (content creator).<br><br>Quick start<br>-----------<br><br>1. Add \"report_system\" to your INSTALLED_APPS setting like this::<br><br>    INSTALLED_APPS = [<br>        ...<br>        'report_system',<br>    ]<br><br>2. Configure Those settings (Recommended)::<br><br>    # REPORT SYSTEM<br>\tREPORT_SLUG_MODEL_MAPPINGS = (<br>\t    ('user', AUTH_USER_MODEL),<br>\t    ('user_blog', 'blogs.blog'),<br>\t    ...<br>\t)<br>\tREPORT_EMAIL_RECEIVER_FIELDNAME = {<br>\t    AUTH_USER_MODEL: None,<br>\t    'blogs.blog': 'author',<br>\t}<br>\tREPORT_EMAIL_FROM = DEFAULT_FROM_EMAIL<br><br>3. Run `python manage.py migrate` to create the Report System Tickets models.\n          </div>"}, "last_serial": 2695612, "releases": {"1.0.1b0": [{"comment_text": "", "digests": {"md5": "4dd605b92fd0b02c2f3dc42b39707d6b", "sha256": "f11161a46f84f68b07d7d95187b0521c3bb95807f29dd1c7f3cc48732961caed"}, "downloads": -1, "filename": "django-user-report-1.0.1b0.zip", "has_sig": false, "md5_digest": "4dd605b92fd0b02c2f3dc42b39707d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16481, "upload_time": "2016-09-28T20:41:23", "upload_time_iso_8601": "2016-09-28T20:41:23.269006Z", "url": "https://files.pythonhosted.org/packages/02/e0/cd4fb9c329a5be3ab669a01935b9e14a1bb7c463438a2a4fe2d777064d07/django-user-report-1.0.1b0.zip", "yanked": false}], "1.0.1rc0": [{"comment_text": "", "digests": {"md5": "7813232d3d8238b9d27afef168819760", "sha256": "ba838ffb9757f7ecbfd33c6a6845c9a8ebf30b42b4ba12f27103ee57dbb0c447"}, "downloads": -1, "filename": "django-user-report-1.0.1rc0.zip", "has_sig": false, "md5_digest": "7813232d3d8238b9d27afef168819760", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16553, "upload_time": "2016-09-28T22:24:51", "upload_time_iso_8601": "2016-09-28T22:24:51.011677Z", "url": "https://files.pythonhosted.org/packages/5f/c6/c86aefd804f0b5d197ba18e7fcfec2f956b139028eccc0d2f0c694cc490e/django-user-report-1.0.1rc0.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0a9c8bd639fd7892999e9a5377433e95", "sha256": "a46f20c954f3ee89d2bf20e5bd567ce6938a07c5fd316bbc6ecc700fdc7be474"}, "downloads": -1, "filename": "django-user-report-1.0.2.zip", "has_sig": false, "md5_digest": "0a9c8bd639fd7892999e9a5377433e95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16360, "upload_time": "2016-11-29T04:05:18", "upload_time_iso_8601": "2016-11-29T04:05:18.042416Z", "url": "https://files.pythonhosted.org/packages/61/b4/cd010ebaf9229ddb530c2edbf96076e94d6292187c9255b931bcc0668474/django-user-report-1.0.2.zip", "yanked": false}], "1.0.3b0": [{"comment_text": "", "digests": {"md5": "ab8ab2e1794f27f3d3783cd0174da542", "sha256": "b55247f08160c6cc9bbf8623571f3417b9a3641a74b4f15e3b1d866c49e83af4"}, "downloads": -1, "filename": "django-user-report-1.0.3b0.tar.gz", "has_sig": false, "md5_digest": "ab8ab2e1794f27f3d3783cd0174da542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8804, "upload_time": "2017-03-08T23:49:45", "upload_time_iso_8601": "2017-03-08T23:49:45.775299Z", "url": "https://files.pythonhosted.org/packages/78/a6/059c639ed50184566b50f6eb5509b288f87c7483eec869cd7ff1bc11a4b0/django-user-report-1.0.3b0.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c72e0937d41bf77da96750619c56dbbc", "sha256": "2dde1322537142e61a8efa7e66249032452be1b5a548b7a1d7b3287086ed9b8c"}, "downloads": -1, "filename": "django-user-report-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c72e0937d41bf77da96750619c56dbbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8812, "upload_time": "2017-03-10T00:12:00", "upload_time_iso_8601": "2017-03-10T00:12:00.468013Z", "url": "https://files.pythonhosted.org/packages/57/a3/4db6a0419b38af2f38950c071b1fcdb86e1917a8c6f42fa2f662a2cc00d5/django-user-report-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c72e0937d41bf77da96750619c56dbbc", "sha256": "2dde1322537142e61a8efa7e66249032452be1b5a548b7a1d7b3287086ed9b8c"}, "downloads": -1, "filename": "django-user-report-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c72e0937d41bf77da96750619c56dbbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8812, "upload_time": "2017-03-10T00:12:00", "upload_time_iso_8601": "2017-03-10T00:12:00.468013Z", "url": "https://files.pythonhosted.org/packages/57/a3/4db6a0419b38af2f38950c071b1fcdb86e1917a8c6f42fa2f662a2cc00d5/django-user-report-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:07 2020"}