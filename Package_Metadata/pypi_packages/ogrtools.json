{"info": {"author": "Pirmin Kalberer", "author_email": "pka@sourcepole.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering :: GIS"], "description": "ogrtools\n========\n\nIntroduction\n------------\n\nogrtools is a collection of libraries and tools built with the Python\nAPI of `OGR <http://www.gdal.org/ogr/>`__.\n\npyogr library\n-------------\n\npyogr gives you OGR commands like ogr2ogr or ogrinfo as Python library,\ni.e. without calling an external executable file. Most of the code is\nalready included in the OGR source distribution as samples for using the\nPython API.\n\n-  ogr2ogr.py: ogr2ogr call with stdout/stderr redirection\n-  ogrinfo.py: ogrinfo call\n-  ogrvrt.py: generate a VRT from a datasource\n-  ogrds.py: Call OGR SQL commands on a datasource\n\ninterlis library\n----------------\n\nExtensions for the OGR `Interlis\ndriver <http://www.gdal.org/ogr/drv_ili.html>`__.\n\n-  Automatic detection of used models in transfer files\n-  Extracting enums from IlisMeta model\n-  Loading and converting of Interlis models from model repositories\n\nogrtransform library\n--------------------\n\nOGR has many options to transform data when converting from one format\ninto an other. The ogrtransform library uses a configuration in JSON\nformat to transform data.\n\nExample:\n\n::\n\n    {\n      \"//\": \"OGR transformation configuration\", \n      \"src_format\": \"Interlis 2\", \n      \"dst_format\": \"PostgreSQL\",\n      \"dst_dsco\": {}, \n      \"dst_lco\": {\n        \"SCHEMA\": \"public\"\n      }, \n      \"layers\": {\n        \"roadsexdm2ben_roads_streetnameposition\": {\n          \"fields\": {\n            \"tid\": {\n              \"src\": \"TID\", \n              \"type\": \"String\"\n            }, \n            \"street\": {\n              \"src\": \"Street\", \n              \"type\": \"String\"\n            }, \n            \"namori\": {\n              \"src\": \"NamOri\", \n              \"type\": \"Real\"\n            }\n          }, \n          \"geometry_type\": \"Point\", \n          \"src_layer\": \"RoadsExdm2ben.Roads.StreetNamePosition\", \n          \"geom_fields\": {\n            \"nampos\": {\n              \"src\": \"NamPos\", \n              \"type\": \"Point\"\n            }\n          }\n        }, \n        \"roadsexdm2ben_roads_streetaxis\": {\n          \"fields\": {\n            \"tid\": {\n              \"src\": \"TID\", \n              \"type\": \"String\"\n            }, \n            \"street\": {\n              \"src\": \"Street\", \n              \"type\": \"String\"\n            }\n          }, \n          \"geometry_type\": \"MultiLineString\", \n          \"src_layer\": \"RoadsExdm2ben.Roads.StreetAxis\", \n          \"geom_fields\": {\n            \"geometry\": {\n              \"src\": \"Geometry\", \n              \"type\": \"MultiLineString\"\n            }\n          }\n        }\n      }, \n      \"enums\": {\n        \"enum0_type\": {\n          \"src_name\": \"RoadsExdm2ben.Roads.RoadSign.Type\", \n          \"values\": [\n            {\n              \"enumtxt\": \"prohibition\", \n              \"enum\": \"prohibition\", \n              \"id\": 0\n            }, \n            {\n              \"enumtxt\": \"indication\", \n              \"enum\": \"indication\", \n              \"id\": 1\n            }, \n            {\n              \"enumtxt\": \"danger\", \n              \"enum\": \"danger\", \n              \"id\": 2\n            }, \n            {\n              \"enumtxt\": \"velocity\", \n              \"enum\": \"velocity\", \n              \"id\": 3\n            }\n          ]\n        }\n      }\n    }\n\nSee `Wiki <https://github.com/sourcepole/ogrtools/wiki>`__ for more\ninformation.\n\nogr command line tool\n---------------------\n\nThe ogr command line tool exposes ogrtools functionality for using in a\ncommand shell.\n\n::\n\n    ogr --help\n    usage: ogr [-h]\n               {version,formats,info,sql,vrt,genconfig,write-enums,transform} ...\n\n    Query and transform OGR compatible vector data\n\n    optional arguments:\n      -h, --help            show this help message and exit\n\n    commands:\n      valid commands\n\n      {version,formats,info,sql,vrt,genconfig,write-enums,transform}\n        version             Show version information\n        formats             List available data formats\n        info                Information about data\n        sql                 Execute SQL Query\n        vrt                 Create VRT from data source\n        genconfig           Generate OGR configuration from data source\n        write-enums         Write tables with enumeration values\n        transform           Transform data source based on OGR configuration\n\nogr version\n~~~~~~~~~~~\n\nShow version information\n\n::\n\n    usage: ogr version [-h]\n\nogr formats\n~~~~~~~~~~~\n\nList available data formats\n\n::\n\n    usage: ogr formats [-h]\n\nogr info\n~~~~~~~~\n\nInformation about data\n\n::\n\n    usage: ogr info [-h] source [layers [layers ...]]\n\nExample:\n\n::\n\n    ogr info tests/data/osm/railway.shp\n\n::\n\n    INFO: Open of `tests/data/osm/railway.shp'\n          using driver `ESRI Shapefile' successful.\n\n    Layer name: railway\n    Geometry: Line String\n    Feature Count: 73\n    Extent: (9.478497, 9.628118) - (47.124600, 47.262550)\n    Layer SRS WKT:\n    GEOGCS[\"GCS_WGS_1984\",\n        DATUM[\"WGS_1984\",\n            SPHEROID[\"WGS_84\",6378137,298.257223563]],\n        PRIMEM[\"Greenwich\",0],\n        UNIT[\"Degree\",0.017453292519943295]]\n    type: String (255.0)\n    osm_id: Real (11.0)\n    lastchange: Date (10.0)\n    name: String (255.0)\n    keyvalue: String (80.0)\n\nogr sql\n~~~~~~~\n\nExecute SQL Query\n\n::\n\n    usage: ogr sql [-h] source sql-query\n\nExample:\n\n::\n\n    ogr sql tests/data/osm/railway.shp \"SELECT type,osm_id,lastchange FROM railway WHERE lastchange < '2008/04/01'\"\n\n::\n\n    INFO: Open of `tests/data/osm/railway.shp'\n          using driver `ESRI Shapefile' successful.\n\n    Layer name: railway\n    Geometry: Line String\n    Feature Count: 8\n    Extent: (9.478497, 9.628118) - (47.124600, 47.262550)\n    Layer SRS WKT:\n    GEOGCS[\"GCS_WGS_1984\",\n        DATUM[\"WGS_1984\",\n            SPHEROID[\"WGS_84\",6378137,298.257223563]],\n        PRIMEM[\"Greenwich\",0],\n        UNIT[\"Degree\",0.017453292519943295]]\n    type: String (255.0)\n    osm_id: Real (11.0)\n    lastchange: Date (10.0)\n    OGRFeature(railway):6\n      type (String) = rail\n      osm_id (Real) = 9675696\n      lastchange (Date) = 2007/10/17\n      LINESTRING (9.6174755 47.227974,9.6170635 47.22802)\n\n    OGRFeature(railway):8\n      type (String) = rail\n      osm_id (Real) = 9675711\n      lastchange (Date) = 2007/10/17\n      LINESTRING (9.617415 47.22794,9.617038 47.227985)\n    ...\n\nogr vrt\n~~~~~~~\n\nCreate VRT from data source\n\n::\n\n    usage: ogr vrt [-h] source [layers [layers ...]]\n\nExample:\n\n::\n\n    ogr vrt tests/data/osm/railway.shp\n\n::\n\n    <OGRVRTDataSource>\n      <OGRVRTLayer name=\"railway\">\n        <SrcDataSource relativeToVRT=\"0\" shared=\"1\">tests/data/osm/railway.shp</SrcDataSource>\n        <SrcLayer>railway</SrcLayer>\n        <GeometryType>wkbLineString</GeometryType>\n        <LayerSRS>GEOGCS[&quot;GCS_WGS_1984&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS_84&quot;,6378137,298.257223563]],PRIMEM[&quot;Greenwich&quot;,0],UNIT[&quot;Degree&quot;,0.017453292519943295]]</LayerSRS>\n        <Field name=\"type\" type=\"String\" src=\"type\" width=\"255\"/>\n        <Field name=\"osm_id\" type=\"Real\" src=\"osm_id\" width=\"11\"/>\n        <Field name=\"lastchange\" type=\"Date\" src=\"lastchange\" width=\"10\"/>\n        <Field name=\"name\" type=\"String\" src=\"name\" width=\"255\"/>\n        <Field name=\"keyvalue\" type=\"String\" src=\"keyvalue\" width=\"80\"/>\n      </OGRVRTLayer>\n    </OGRVRTDataSource>\n\nogr genconfig\n~~~~~~~~~~~~~\n\nGenerate transormation specification from data source\n\n::\n\n    usage: ogr genconfig [-h] [--format FORMAT] [--model MODEL]\n                       source [layers [layers ...]]\n\nExample:\n\n::\n\n    ogr genconfig --format=PostgreSQL tests/data/osm/railway.shp\n\n::\n\n    {\n      \"comment\": \"// OGR transformation specification\",\n      \"layers\": {\n        \"railway\": {\n          \"fields\": {\n            \"keyvalue\": {\n              \"src\": \"keyvalue\", \n              \"type\": \"String\", \n              \"width\": 80\n            }, \n            \"lastchange\": {\n              \"src\": \"lastchange\", \n              \"type\": \"Date\", \n              \"width\": 10\n            }, \n            \"type\": {\n              \"src\": \"type\", \n              \"type\": \"String\", \n              \"width\": 255\n            }, \n            \"name\": {\n              \"src\": \"name\", \n              \"type\": \"String\", \n              \"width\": 255\n            }, \n            \"osm_id\": {\n              \"src\": \"osm_id\", \n              \"type\": \"Real\", \n              \"width\": 11\n            }\n          }, \n          \"geometry_type\": \"LineString\", \n          \"src_layer\": \"railway\"\n        }\n      }\n    }\n\nogr write-enums\n~~~~~~~~~~~~~~~\n\nWrite tables with enumeration values\n\n::\n\n    usage: ogr write-enums [-h] [--debug] [--format FORMAT] [--config CONFIG]\n                           [dest]\n\n    positional arguments:\n      dest             output datasource\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      --debug          Display debugging information\n      --format FORMAT  Destination format\n      --config CONFIG  OGR configuration\n\nExample:\n\n::\n\n    ogr write-enums --config=roads.cfg \"PG:dbname=ogrili\"\n\nogr transform\n~~~~~~~~~~~~~\n\nTransform data source based on transformation configuration\n\n::\n\n    usage: ogr transform [-h] [--debug] [--reverse] [--format FORMAT]\n                         [--config CONFIG]\n                         [dest] source [layers [layers ...]]\n\n    positional arguments:\n      dest             output datasource\n      source           input datasource\n      layers           layer names\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      --debug          Display debugging information\n      --reverse        Reverse transformation\n      --format FORMAT  Destination format\n      --config CONFIG  OGR configuration\n\nExample:\n\n::\n\n    ogr transform --config=roads.cfg \"PG:dbname=ogrili\" RoadsExdm2ien.xml\n\nFrom Interlis to GML:\n\n::\n\n    ogr transform --format GML --config tests/data/ili/RoadsExdm2ien.cfg tests/data/ili/RoadsExdm2ien.gml tests/data/ili/roads23.xtf,tests/data/ili/RoadsExdm2ien.imd\n\nBack to Interlis:\n\n::\n\n    ogr transform --reverse --config tests/data/ili/RoadsExdm2ien.cfg /tmp/roads23_from_gml.xtf,tests/data/ili/RoadsExdm2ien.imd tests/data/ili/RoadsExdm2ien.gml\n\nogrprocessing QGIS plugin\n-------------------------\n\nProvides OGR functionality as QGIS SEXTANTE plugin. It was published for\nQGIS 1.8 and is now included in the core processing algorithms of QGIS\n2.0.\n\nInterlis QGIS plugin\n--------------------\n\nGUI for importing and exporting Interlis data with OGR/ogrtools.\nIncludes Python libraries for easy installation. Currently tested with\nQGIS 2.0.\n\nDevelopment\n-----------\n\n::\n\n    git clone https://github.com/sourcepole/ogrtools.git\n\nRunning tests:\n\n::\n\n    apt-get install python-nose\n\n::\n\n    nosetests\n\nFor running ogr commands from source tree:\n\n::\n\n    alias ogr=\"PYTHONPATH=$(pwd) $(pwd)/ogr_cli/ogr.py\"\n\nLicense\n-------\n\nogrtools is Copyright \u00a9 2012-2015 Sourcepole AG. It is free software,\nand may be redistributed under the terms specified in the LICENSE.txt\nfile.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/sourcepole/mypackage/tarball/0.7.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sourcepole/ogrtools", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "ogrtools", "package_url": "https://pypi.org/project/ogrtools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ogrtools/", "project_urls": {"Download": "https://github.com/sourcepole/mypackage/tarball/0.7.3", "Homepage": "https://github.com/sourcepole/ogrtools"}, "release_url": "https://pypi.org/project/ogrtools/0.7.3/", "requires_dist": null, "requires_python": null, "summary": "Collection of libraries and tools built with the Python API of OGR.", "version": "0.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>ogrtools is a collection of libraries and tools built with the Python\nAPI of <a href=\"http://www.gdal.org/ogr/\" rel=\"nofollow\">OGR</a>.</p>\n</div>\n<div id=\"pyogr-library\">\n<h2>pyogr library</h2>\n<p>pyogr gives you OGR commands like ogr2ogr or ogrinfo as Python library,\ni.e. without calling an external executable file. Most of the code is\nalready included in the OGR source distribution as samples for using the\nPython API.</p>\n<ul>\n<li>ogr2ogr.py: ogr2ogr call with stdout/stderr redirection</li>\n<li>ogrinfo.py: ogrinfo call</li>\n<li>ogrvrt.py: generate a VRT from a datasource</li>\n<li>ogrds.py: Call OGR SQL commands on a datasource</li>\n</ul>\n</div>\n<div id=\"interlis-library\">\n<h2>interlis library</h2>\n<p>Extensions for the OGR <a href=\"http://www.gdal.org/ogr/drv_ili.html\" rel=\"nofollow\">Interlis\ndriver</a>.</p>\n<ul>\n<li>Automatic detection of used models in transfer files</li>\n<li>Extracting enums from IlisMeta model</li>\n<li>Loading and converting of Interlis models from model repositories</li>\n</ul>\n</div>\n<div id=\"ogrtransform-library\">\n<h2>ogrtransform library</h2>\n<p>OGR has many options to transform data when converting from one format\ninto an other. The ogrtransform library uses a configuration in JSON\nformat to transform data.</p>\n<p>Example:</p>\n<pre>{\n  \"//\": \"OGR transformation configuration\",\n  \"src_format\": \"Interlis 2\",\n  \"dst_format\": \"PostgreSQL\",\n  \"dst_dsco\": {},\n  \"dst_lco\": {\n    \"SCHEMA\": \"public\"\n  },\n  \"layers\": {\n    \"roadsexdm2ben_roads_streetnameposition\": {\n      \"fields\": {\n        \"tid\": {\n          \"src\": \"TID\",\n          \"type\": \"String\"\n        },\n        \"street\": {\n          \"src\": \"Street\",\n          \"type\": \"String\"\n        },\n        \"namori\": {\n          \"src\": \"NamOri\",\n          \"type\": \"Real\"\n        }\n      },\n      \"geometry_type\": \"Point\",\n      \"src_layer\": \"RoadsExdm2ben.Roads.StreetNamePosition\",\n      \"geom_fields\": {\n        \"nampos\": {\n          \"src\": \"NamPos\",\n          \"type\": \"Point\"\n        }\n      }\n    },\n    \"roadsexdm2ben_roads_streetaxis\": {\n      \"fields\": {\n        \"tid\": {\n          \"src\": \"TID\",\n          \"type\": \"String\"\n        },\n        \"street\": {\n          \"src\": \"Street\",\n          \"type\": \"String\"\n        }\n      },\n      \"geometry_type\": \"MultiLineString\",\n      \"src_layer\": \"RoadsExdm2ben.Roads.StreetAxis\",\n      \"geom_fields\": {\n        \"geometry\": {\n          \"src\": \"Geometry\",\n          \"type\": \"MultiLineString\"\n        }\n      }\n    }\n  },\n  \"enums\": {\n    \"enum0_type\": {\n      \"src_name\": \"RoadsExdm2ben.Roads.RoadSign.Type\",\n      \"values\": [\n        {\n          \"enumtxt\": \"prohibition\",\n          \"enum\": \"prohibition\",\n          \"id\": 0\n        },\n        {\n          \"enumtxt\": \"indication\",\n          \"enum\": \"indication\",\n          \"id\": 1\n        },\n        {\n          \"enumtxt\": \"danger\",\n          \"enum\": \"danger\",\n          \"id\": 2\n        },\n        {\n          \"enumtxt\": \"velocity\",\n          \"enum\": \"velocity\",\n          \"id\": 3\n        }\n      ]\n    }\n  }\n}\n</pre>\n<p>See <a href=\"https://github.com/sourcepole/ogrtools/wiki\" rel=\"nofollow\">Wiki</a> for more\ninformation.</p>\n</div>\n<div id=\"ogr-command-line-tool\">\n<h2>ogr command line tool</h2>\n<p>The ogr command line tool exposes ogrtools functionality for using in a\ncommand shell.</p>\n<pre>ogr --help\nusage: ogr [-h]\n           {version,formats,info,sql,vrt,genconfig,write-enums,transform} ...\n\nQuery and transform OGR compatible vector data\n\noptional arguments:\n  -h, --help            show this help message and exit\n\ncommands:\n  valid commands\n\n  {version,formats,info,sql,vrt,genconfig,write-enums,transform}\n    version             Show version information\n    formats             List available data formats\n    info                Information about data\n    sql                 Execute SQL Query\n    vrt                 Create VRT from data source\n    genconfig           Generate OGR configuration from data source\n    write-enums         Write tables with enumeration values\n    transform           Transform data source based on OGR configuration\n</pre>\n<div id=\"ogr-version\">\n<h3>ogr version</h3>\n<p>Show version information</p>\n<pre>usage: ogr version [-h]\n</pre>\n</div>\n<div id=\"ogr-formats\">\n<h3>ogr formats</h3>\n<p>List available data formats</p>\n<pre>usage: ogr formats [-h]\n</pre>\n</div>\n<div id=\"ogr-info\">\n<h3>ogr info</h3>\n<p>Information about data</p>\n<pre>usage: ogr info [-h] source [layers [layers ...]]\n</pre>\n<p>Example:</p>\n<pre>ogr info tests/data/osm/railway.shp\n</pre>\n<pre>INFO: Open of `tests/data/osm/railway.shp'\n      using driver `ESRI Shapefile' successful.\n\nLayer name: railway\nGeometry: Line String\nFeature Count: 73\nExtent: (9.478497, 9.628118) - (47.124600, 47.262550)\nLayer SRS WKT:\nGEOGCS[\"GCS_WGS_1984\",\n    DATUM[\"WGS_1984\",\n        SPHEROID[\"WGS_84\",6378137,298.257223563]],\n    PRIMEM[\"Greenwich\",0],\n    UNIT[\"Degree\",0.017453292519943295]]\ntype: String (255.0)\nosm_id: Real (11.0)\nlastchange: Date (10.0)\nname: String (255.0)\nkeyvalue: String (80.0)\n</pre>\n</div>\n<div id=\"ogr-sql\">\n<h3>ogr sql</h3>\n<p>Execute SQL Query</p>\n<pre>usage: ogr sql [-h] source sql-query\n</pre>\n<p>Example:</p>\n<pre>ogr sql tests/data/osm/railway.shp \"SELECT type,osm_id,lastchange FROM railway WHERE lastchange &lt; '2008/04/01'\"\n</pre>\n<pre>INFO: Open of `tests/data/osm/railway.shp'\n      using driver `ESRI Shapefile' successful.\n\nLayer name: railway\nGeometry: Line String\nFeature Count: 8\nExtent: (9.478497, 9.628118) - (47.124600, 47.262550)\nLayer SRS WKT:\nGEOGCS[\"GCS_WGS_1984\",\n    DATUM[\"WGS_1984\",\n        SPHEROID[\"WGS_84\",6378137,298.257223563]],\n    PRIMEM[\"Greenwich\",0],\n    UNIT[\"Degree\",0.017453292519943295]]\ntype: String (255.0)\nosm_id: Real (11.0)\nlastchange: Date (10.0)\nOGRFeature(railway):6\n  type (String) = rail\n  osm_id (Real) = 9675696\n  lastchange (Date) = 2007/10/17\n  LINESTRING (9.6174755 47.227974,9.6170635 47.22802)\n\nOGRFeature(railway):8\n  type (String) = rail\n  osm_id (Real) = 9675711\n  lastchange (Date) = 2007/10/17\n  LINESTRING (9.617415 47.22794,9.617038 47.227985)\n...\n</pre>\n</div>\n<div id=\"ogr-vrt\">\n<h3>ogr vrt</h3>\n<p>Create VRT from data source</p>\n<pre>usage: ogr vrt [-h] source [layers [layers ...]]\n</pre>\n<p>Example:</p>\n<pre>ogr vrt tests/data/osm/railway.shp\n</pre>\n<pre>&lt;OGRVRTDataSource&gt;\n  &lt;OGRVRTLayer name=\"railway\"&gt;\n    &lt;SrcDataSource relativeToVRT=\"0\" shared=\"1\"&gt;tests/data/osm/railway.shp&lt;/SrcDataSource&gt;\n    &lt;SrcLayer&gt;railway&lt;/SrcLayer&gt;\n    &lt;GeometryType&gt;wkbLineString&lt;/GeometryType&gt;\n    &lt;LayerSRS&gt;GEOGCS[&amp;quot;GCS_WGS_1984&amp;quot;,DATUM[&amp;quot;WGS_1984&amp;quot;,SPHEROID[&amp;quot;WGS_84&amp;quot;,6378137,298.257223563]],PRIMEM[&amp;quot;Greenwich&amp;quot;,0],UNIT[&amp;quot;Degree&amp;quot;,0.017453292519943295]]&lt;/LayerSRS&gt;\n    &lt;Field name=\"type\" type=\"String\" src=\"type\" width=\"255\"/&gt;\n    &lt;Field name=\"osm_id\" type=\"Real\" src=\"osm_id\" width=\"11\"/&gt;\n    &lt;Field name=\"lastchange\" type=\"Date\" src=\"lastchange\" width=\"10\"/&gt;\n    &lt;Field name=\"name\" type=\"String\" src=\"name\" width=\"255\"/&gt;\n    &lt;Field name=\"keyvalue\" type=\"String\" src=\"keyvalue\" width=\"80\"/&gt;\n  &lt;/OGRVRTLayer&gt;\n&lt;/OGRVRTDataSource&gt;\n</pre>\n</div>\n<div id=\"ogr-genconfig\">\n<h3>ogr genconfig</h3>\n<p>Generate transormation specification from data source</p>\n<pre>usage: ogr genconfig [-h] [--format FORMAT] [--model MODEL]\n                   source [layers [layers ...]]\n</pre>\n<p>Example:</p>\n<pre>ogr genconfig --format=PostgreSQL tests/data/osm/railway.shp\n</pre>\n<pre>{\n  \"comment\": \"// OGR transformation specification\",\n  \"layers\": {\n    \"railway\": {\n      \"fields\": {\n        \"keyvalue\": {\n          \"src\": \"keyvalue\",\n          \"type\": \"String\",\n          \"width\": 80\n        },\n        \"lastchange\": {\n          \"src\": \"lastchange\",\n          \"type\": \"Date\",\n          \"width\": 10\n        },\n        \"type\": {\n          \"src\": \"type\",\n          \"type\": \"String\",\n          \"width\": 255\n        },\n        \"name\": {\n          \"src\": \"name\",\n          \"type\": \"String\",\n          \"width\": 255\n        },\n        \"osm_id\": {\n          \"src\": \"osm_id\",\n          \"type\": \"Real\",\n          \"width\": 11\n        }\n      },\n      \"geometry_type\": \"LineString\",\n      \"src_layer\": \"railway\"\n    }\n  }\n}\n</pre>\n</div>\n<div id=\"ogr-write-enums\">\n<h3>ogr write-enums</h3>\n<p>Write tables with enumeration values</p>\n<pre>usage: ogr write-enums [-h] [--debug] [--format FORMAT] [--config CONFIG]\n                       [dest]\n\npositional arguments:\n  dest             output datasource\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --debug          Display debugging information\n  --format FORMAT  Destination format\n  --config CONFIG  OGR configuration\n</pre>\n<p>Example:</p>\n<pre>ogr write-enums --config=roads.cfg \"PG:dbname=ogrili\"\n</pre>\n</div>\n<div id=\"ogr-transform\">\n<h3>ogr transform</h3>\n<p>Transform data source based on transformation configuration</p>\n<pre>usage: ogr transform [-h] [--debug] [--reverse] [--format FORMAT]\n                     [--config CONFIG]\n                     [dest] source [layers [layers ...]]\n\npositional arguments:\n  dest             output datasource\n  source           input datasource\n  layers           layer names\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --debug          Display debugging information\n  --reverse        Reverse transformation\n  --format FORMAT  Destination format\n  --config CONFIG  OGR configuration\n</pre>\n<p>Example:</p>\n<pre>ogr transform --config=roads.cfg \"PG:dbname=ogrili\" RoadsExdm2ien.xml\n</pre>\n<p>From Interlis to GML:</p>\n<pre>ogr transform --format GML --config tests/data/ili/RoadsExdm2ien.cfg tests/data/ili/RoadsExdm2ien.gml tests/data/ili/roads23.xtf,tests/data/ili/RoadsExdm2ien.imd\n</pre>\n<p>Back to Interlis:</p>\n<pre>ogr transform --reverse --config tests/data/ili/RoadsExdm2ien.cfg /tmp/roads23_from_gml.xtf,tests/data/ili/RoadsExdm2ien.imd tests/data/ili/RoadsExdm2ien.gml\n</pre>\n</div>\n</div>\n<div id=\"ogrprocessing-qgis-plugin\">\n<h2>ogrprocessing QGIS plugin</h2>\n<p>Provides OGR functionality as QGIS SEXTANTE plugin. It was published for\nQGIS 1.8 and is now included in the core processing algorithms of QGIS\n2.0.</p>\n</div>\n<div id=\"interlis-qgis-plugin\">\n<h2>Interlis QGIS plugin</h2>\n<p>GUI for importing and exporting Interlis data with OGR/ogrtools.\nIncludes Python libraries for easy installation. Currently tested with\nQGIS 2.0.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<pre>git clone https://github.com/sourcepole/ogrtools.git\n</pre>\n<p>Running tests:</p>\n<pre>apt-get install python-nose\n</pre>\n<pre>nosetests\n</pre>\n<p>For running ogr commands from source tree:</p>\n<pre>alias ogr=\"PYTHONPATH=$(pwd) $(pwd)/ogr_cli/ogr.py\"\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>ogrtools is Copyright \u00a9 2012-2015 Sourcepole AG. It is free software,\nand may be redistributed under the terms specified in the LICENSE.txt\nfile.</p>\n</div>\n\n          </div>"}, "last_serial": 2018974, "releases": {"0.7.2": [{"comment_text": "", "digests": {"md5": "c373073f753b2a8fc1c6afd445a4516e", "sha256": "4fa48b76a528a5db16fcbe1a9dfeb0b4b3668ff8ce875a1ceebb3e28c2331579"}, "downloads": -1, "filename": "ogrtools-0.7.2.tar.gz", "has_sig": false, "md5_digest": "c373073f753b2a8fc1c6afd445a4516e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37086, "upload_time": "2014-09-05T21:01:12", "upload_time_iso_8601": "2014-09-05T21:01:12.560800Z", "url": "https://files.pythonhosted.org/packages/04/04/fa34b0dd9c5e6541dc125b5663ca2da4b7178c807dd287042b3a97c6eb13/ogrtools-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "2b22864ac072e3b011ea56bd6c63f666", "sha256": "a0cbe1c01c2a145daa055f57daa3048288734bee8fd9c61e9955821dcc9607f0"}, "downloads": -1, "filename": "ogrtools-0.7.3.tar.gz", "has_sig": false, "md5_digest": "2b22864ac072e3b011ea56bd6c63f666", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40654, "upload_time": "2016-03-21T16:22:53", "upload_time_iso_8601": "2016-03-21T16:22:53.850562Z", "url": "https://files.pythonhosted.org/packages/39/fd/a4c96d956bfdbcad6c09e51ca3d416ac06b44b5a3a7ebaef473b08d52adb/ogrtools-0.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b22864ac072e3b011ea56bd6c63f666", "sha256": "a0cbe1c01c2a145daa055f57daa3048288734bee8fd9c61e9955821dcc9607f0"}, "downloads": -1, "filename": "ogrtools-0.7.3.tar.gz", "has_sig": false, "md5_digest": "2b22864ac072e3b011ea56bd6c63f666", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40654, "upload_time": "2016-03-21T16:22:53", "upload_time_iso_8601": "2016-03-21T16:22:53.850562Z", "url": "https://files.pythonhosted.org/packages/39/fd/a4c96d956bfdbcad6c09e51ca3d416ac06b44b5a3a7ebaef473b08d52adb/ogrtools-0.7.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:52 2020"}