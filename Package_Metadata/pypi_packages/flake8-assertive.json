{"info": {"author": "Jon Parise", "author_email": "jon@indelible.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: Flake8", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Unit"], "description": "=================================\nFlake8 Unittest Assertion Checker\n=================================\n\n|PyPI Version| |Python Versions|\n\n``flake8-assertive`` is a `Flake8 <http://flake8.pycqa.org/>`_ extension that\nencourages using richer, more specific `unittest`_ assertions beyond just the\ntypical ``assertEqual(a, b)`` and ``assertTrue(x)`` methods. The suggested\nmethods perform more precise checks and provide better failure messages than\nthe generic methods.\n\n+------------------------------------------+-----------------------------------+------+\n| Original                                 | Suggestion                        | Code |\n+==========================================+===================================+======+\n| ``assertTrue(a == b)``                   | ``assertEqual(a, b)``             | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a != b)``                   | ``assertNotEqual(a, b)``          | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a == b)``                  | ``assertNotEqual(a, b)``          | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a != b)``                  | ``assertEqual(a, b)``             | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a < b)``                    | ``assertLess(a, b)``              | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a <= b)``                   | ``assertLessEqual(a, b)``         | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a > b)``                    | ``assertGreater(a, b)``           | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a >= b)``                   | ``assertGreaterEqual(a, b)``      | A500 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a is b)``                   | ``assertIs(a, b)``                | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a is not b)``               | ``assertIsNot(a, b)``             | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a is b)``                  | ``assertNotIs(a, b)``             | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a is not b)``              | ``assertIs(a, b)``                | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a in b)``                   | ``assertIn(a, b)``                | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a in b)``                  | ``assertNotIn(a, b)``             | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(isinstance(a, b))``         | ``assertIsInstance(a, b)``        | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(isinstance(a, b))``        | ``assertNotIsInstance(a, b)``     | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertEqual(a, round(b, x))``          | ``assertAlmostEqual(a, b, x)``    | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertAlmostEqual(a, round(b, x))``    | ``assertAlmostEqual(a, b, x)``    | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertNotEqual(a, round(b, x))``       | ``assertNotAlmostEqual(a, b, x)`` | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertNotAlmostEqual(a, round(b, x))`` | ``assertNotAlmostEqual(a, b, x)`` | A501 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertEqual(a, None)``                 | ``assertIsNone(a)``               | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertNotEqual(a, None)``              | ``assertIsNotNone(a)``            | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a is None)``                | ``assertIsNone(a)``               | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertTrue(a is not None)``            | ``assertIsNotNone(a)``            | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a is None)``               | ``assertIsNotNone(a)``            | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertFalse(a is not None)``           | ``assertIsNone(a)``               | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertEqual(a, True)``                 | ``assertTrue(a)``                 | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertEqual(a, False)``                | ``assertFalse(a)``                | A502 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertEquals(a, b)``                   | ``assertEqual(a, b)``             | A503 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertNotEquals(a, b)``                | ``assertNotEqual(a, b)``          | A503 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertAlmostEquals(a, b, x)``          | ``assertAlmostEqual(a, b, x)``    | A503 |\n+------------------------------------------+-----------------------------------+------+\n| ``assertNotAlmostEquals(a, b, x)``       | ``assertNotAlmostEqual(a, b, x)`` | A503 |\n+------------------------------------------+-----------------------------------+------+\n\nNote that some suggestions are normalized forms of the original, such as when\na double-negative is used (``assertFalse(a != b)`` \u2192 ``assertEqual(a, b)``).\nThere aren't suggestions for things like ``assertFalse(a > b)``, which may or\nmay not be equivalent to ``assertLessEqual(a, b)``.\n\n\nInstallation\n------------\n\nInstall from PyPI using ``pip``:\n\n.. code-block:: sh\n\n    $ pip install flake8-assertive\n\nThe extension will be activated automatically by ``flake8``. You can verify\nthat it has been loaded by inspecting the ``flake8 --version`` string.\n\n.. code-block:: sh\n\n    $ flake8 --version\n    3.7.9 (assertive: 1.2.1, ...) CPython 2.7.17 on Darwin\n\n\nError Codes\n-----------\n\nThis extension adds three new `error codes`__ (using the ``A50`` prefix):\n\n- ``A500``: prefer *{func}* for '*{op}*' comparisons\n- ``A501``: prefer *{func}* for '*{op}*' expressions\n- ``A502``: prefer *{func}* instead of comparing to *{obj}*\n- ``A503``: use *{func}* instead of the deprecated *{name}*\n\n.. __: http://flake8.pycqa.org/en/latest/user/error-codes.html\n\nConfiguration\n-------------\n\nConfiguration values are specified in the ``[flake8]`` section of your `config\nfile`_ or as command line arguments (e.g. ``--assertive-snakecase``).\n\n- ``assertive-snakecase``: suggest snake_case assert method names\n  (e.g. ``assert_true()``) instead of the standard names (e.g. ``assertTrue()``)\n- ``assertive-test-pattern``: `fnmatch`_ pattern for identifying unittest test\n  files (and all other files will be skipped)\n\n.. _fnmatch: https://docs.python.org/library/fnmatch.html\n.. _unittest: https://docs.python.org/library/unittest.html\n.. _config file: http://flake8.pycqa.org/en/latest/user/configuration.html\n\nCaveats\n-------\n\nThere are some specific cases when the suggestion might not match the intent\nof the original.\n\nTesting the equality operator\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``assertEqual()`` won't use the ``==`` operator if the comparison has been\ndelegated to a `type-specific equalilty function`__. By default, this is the\ncase for strings, sequences, lists, tuples, sets, and dicts.\n\n.. __: https://docs.python.org/3/library/unittest.html#unittest.TestCase.addTypeEqualityFunc\n\nIf your intent is to specifically test the ``==`` operator, consider writing\nthe assertion like this instead:\n\n.. code-block:: python\n\n    assertIs(a == b, True)\n\nThis approach has the benefit of verifying that the type's ``__eq__``\nimplementation returns a boolean value. Unfortunately, it also has the\ndownside of reporting the result of ``a == b`` on failure instead of the\nvalues of ``a`` and ``b``.\n\nSuggested by: `Serhiy Storchaka <https://twitter.com/SerhiyStorchaka>`_\n\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/flake8-assertive.svg\n   :target: https://pypi.python.org/pypi/flake8-assertive\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/flake8-assertive.svg\n   :target: https://pypi.python.org/pypi/flake8-assertive\n\n\nChanges\n=======\n\n1.2.1 (2019-12-08)\n------------------\n\n* Support keyword arguments in assert method calls.\n\n1.2.0 (2019-12-05)\n------------------\n\n* Suggest the preferred names for deprecated methods, such as\n  ``assertEqual()`` instead of ``assertEquals()``.\n\n1.1.0 (2019-06-26)\n------------------\n\n* Suggest ``assertAlmostEqual(a, b, x)`` for ``round()`` expressions like in\n  ``assertEqual(a, round(b, x))`` and ``assertAlmostEqual(a, round(b, x))``\n  (and similar for ``assertNotEqual()`` and ``assertNotAlmostEqual()``.\n* Recognize ``assertAmostEquals()`` and ``assertNotAlmostEquals()`` as aliases\n  for ``assertAlmostEqual()`` and ``assertNotAlmostEqual()``.\n* Drop Python 3.4 as a supported version since it has been officially retired.\n\n1.0.1 (2018-07-03)\n------------------\n\n* Don't make suggestions for assertions containing multiple comparison\n  operations (e.g. ``assertTrue(a == b == c)``).\n\n1.0.0 (2018-06-04)\n------------------\n\n* Suggest ``assertIsNone(a)`` for ``assertTrue(a is None)``, etc.\n* Recognize ``assertEquals()`` and ``assertNotEquals()`` as aliases for\n  ``assertEqual()`` and ``assertNotEqual()``.\n\n0.9.0 (2018-05-14)\n------------------\n\n* Initial beta release\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/jparise/flake8-assertive/tarball/1.2.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jparise/flake8-assertive", "keywords": "flake8 testing unittest assert", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flake8-assertive", "package_url": "https://pypi.org/project/flake8-assertive/", "platform": "", "project_url": "https://pypi.org/project/flake8-assertive/", "project_urls": {"Download": "https://github.com/jparise/flake8-assertive/tarball/1.2.1", "Homepage": "https://github.com/jparise/flake8-assertive"}, "release_url": "https://pypi.org/project/flake8-assertive/1.2.1/", "requires_dist": ["flake8"], "requires_python": "", "summary": "Flake8 unittest assert method checker", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/flake8-assertive\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0dd7fc12b32ac53da178f7d478f34288b63e77b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c616b65382d6173736572746976652e737667\"></a> <a href=\"https://pypi.python.org/pypi/flake8-assertive\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbd0e8f7a40f72fd6cd40b88fee39775db2ec776/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f666c616b65382d6173736572746976652e737667\"></a></p>\n<p><tt><span class=\"pre\">flake8-assertive</span></tt> is a <a href=\"http://flake8.pycqa.org/\" rel=\"nofollow\">Flake8</a> extension that\nencourages using richer, more specific <a href=\"https://docs.python.org/library/unittest.html\" rel=\"nofollow\">unittest</a> assertions beyond just the\ntypical <tt>assertEqual(a, b)</tt> and <tt>assertTrue(x)</tt> methods. The suggested\nmethods perform more precise checks and provide better failure messages than\nthe generic methods.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Original</th>\n<th>Suggestion</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>assertTrue(a == b)</tt></td>\n<td><tt>assertEqual(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertTrue(a != b)</tt></td>\n<td><tt>assertNotEqual(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertFalse(a == b)</tt></td>\n<td><tt>assertNotEqual(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertFalse(a != b)</tt></td>\n<td><tt>assertEqual(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertTrue(a &lt; b)</tt></td>\n<td><tt>assertLess(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertTrue(a &lt;= b)</tt></td>\n<td><tt>assertLessEqual(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertTrue(a &gt; b)</tt></td>\n<td><tt>assertGreater(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertTrue(a &gt;= b)</tt></td>\n<td><tt>assertGreaterEqual(a, b)</tt></td>\n<td>A500</td>\n</tr>\n<tr><td><tt>assertTrue(a is b)</tt></td>\n<td><tt>assertIs(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertTrue(a is not b)</tt></td>\n<td><tt>assertIsNot(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertFalse(a is b)</tt></td>\n<td><tt>assertNotIs(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertFalse(a is not b)</tt></td>\n<td><tt>assertIs(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertTrue(a in b)</tt></td>\n<td><tt>assertIn(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertFalse(a in b)</tt></td>\n<td><tt>assertNotIn(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertTrue(isinstance(a, b))</tt></td>\n<td><tt>assertIsInstance(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertFalse(isinstance(a, b))</tt></td>\n<td><tt>assertNotIsInstance(a, b)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertEqual(a, round(b, x))</tt></td>\n<td><tt>assertAlmostEqual(a, b, x)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertAlmostEqual(a, round(b, x))</tt></td>\n<td><tt>assertAlmostEqual(a, b, x)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertNotEqual(a, round(b, x))</tt></td>\n<td><tt>assertNotAlmostEqual(a, b, x)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertNotAlmostEqual(a, round(b, x))</tt></td>\n<td><tt>assertNotAlmostEqual(a, b, x)</tt></td>\n<td>A501</td>\n</tr>\n<tr><td><tt>assertEqual(a, None)</tt></td>\n<td><tt>assertIsNone(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertNotEqual(a, None)</tt></td>\n<td><tt>assertIsNotNone(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertTrue(a is None)</tt></td>\n<td><tt>assertIsNone(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertTrue(a is not None)</tt></td>\n<td><tt>assertIsNotNone(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertFalse(a is None)</tt></td>\n<td><tt>assertIsNotNone(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertFalse(a is not None)</tt></td>\n<td><tt>assertIsNone(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertEqual(a, True)</tt></td>\n<td><tt>assertTrue(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertEqual(a, False)</tt></td>\n<td><tt>assertFalse(a)</tt></td>\n<td>A502</td>\n</tr>\n<tr><td><tt>assertEquals(a, b)</tt></td>\n<td><tt>assertEqual(a, b)</tt></td>\n<td>A503</td>\n</tr>\n<tr><td><tt>assertNotEquals(a, b)</tt></td>\n<td><tt>assertNotEqual(a, b)</tt></td>\n<td>A503</td>\n</tr>\n<tr><td><tt>assertAlmostEquals(a, b, x)</tt></td>\n<td><tt>assertAlmostEqual(a, b, x)</tt></td>\n<td>A503</td>\n</tr>\n<tr><td><tt>assertNotAlmostEquals(a, b, x)</tt></td>\n<td><tt>assertNotAlmostEqual(a, b, x)</tt></td>\n<td>A503</td>\n</tr>\n</tbody>\n</table>\n<p>Note that some suggestions are normalized forms of the original, such as when\na double-negative is used (<tt>assertFalse(a != b)</tt> \u2192 <tt>assertEqual(a, b)</tt>).\nThere aren\u2019t suggestions for things like <tt>assertFalse(a &gt; b)</tt>, which may or\nmay not be equivalent to <tt>assertLessEqual(a, b)</tt>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPI using <tt>pip</tt>:</p>\n<pre>$ pip install flake8-assertive\n</pre>\n<p>The extension will be activated automatically by <tt>flake8</tt>. You can verify\nthat it has been loaded by inspecting the <tt>flake8 <span class=\"pre\">--version</span></tt> string.</p>\n<pre>$ flake8 --version\n<span class=\"m\">3</span>.7.9 <span class=\"o\">(</span>assertive: <span class=\"m\">1</span>.2.1, ...<span class=\"o\">)</span> CPython <span class=\"m\">2</span>.7.17 on Darwin\n</pre>\n</div>\n<div id=\"error-codes\">\n<h2>Error Codes</h2>\n<p>This extension adds three new <a href=\"http://flake8.pycqa.org/en/latest/user/error-codes.html\" rel=\"nofollow\">error codes</a> (using the <tt>A50</tt> prefix):</p>\n<ul>\n<li><tt>A500</tt>: prefer <em>{func}</em> for \u2018<em>{op}</em>\u2019 comparisons</li>\n<li><tt>A501</tt>: prefer <em>{func}</em> for \u2018<em>{op}</em>\u2019 expressions</li>\n<li><tt>A502</tt>: prefer <em>{func}</em> instead of comparing to <em>{obj}</em></li>\n<li><tt>A503</tt>: use <em>{func}</em> instead of the deprecated <em>{name}</em></li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configuration values are specified in the <tt>[flake8]</tt> section of your <a href=\"http://flake8.pycqa.org/en/latest/user/configuration.html\" rel=\"nofollow\">config\nfile</a> or as command line arguments (e.g. <tt><span class=\"pre\">--assertive-snakecase</span></tt>).</p>\n<ul>\n<li><tt><span class=\"pre\">assertive-snakecase</span></tt>: suggest snake_case assert method names\n(e.g. <tt>assert_true()</tt>) instead of the standard names (e.g. <tt>assertTrue()</tt>)</li>\n<li><tt><span class=\"pre\">assertive-test-pattern</span></tt>: <a href=\"https://docs.python.org/library/fnmatch.html\" rel=\"nofollow\">fnmatch</a> pattern for identifying unittest test\nfiles (and all other files will be skipped)</li>\n</ul>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>There are some specific cases when the suggestion might not match the intent\nof the original.</p>\n<div id=\"testing-the-equality-operator\">\n<h3>Testing the equality operator</h3>\n<p><tt>assertEqual()</tt> won\u2019t use the <tt>==</tt> operator if the comparison has been\ndelegated to a <a href=\"https://docs.python.org/3/library/unittest.html#unittest.TestCase.addTypeEqualityFunc\" rel=\"nofollow\">type-specific equalilty function</a>. By default, this is the\ncase for strings, sequences, lists, tuples, sets, and dicts.</p>\n<p>If your intent is to specifically test the <tt>==</tt> operator, consider writing\nthe assertion like this instead:</p>\n<pre><span class=\"n\">assertIs</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>This approach has the benefit of verifying that the type\u2019s <tt>__eq__</tt>\nimplementation returns a boolean value. Unfortunately, it also has the\ndownside of reporting the result of <tt>a == b</tt> on failure instead of the\nvalues of <tt>a</tt> and <tt>b</tt>.</p>\n<p>Suggested by: <a href=\"https://twitter.com/SerhiyStorchaka\" rel=\"nofollow\">Serhiy Storchaka</a></p>\n<div id=\"changes\">\n<h4>Changes</h4>\n</div>\n</div>\n</div>\n<div id=\"id3\">\n<h2>1.2.1 (2019-12-08)</h2>\n<ul>\n<li>Support keyword arguments in assert method calls.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>1.2.0 (2019-12-05)</h2>\n<ul>\n<li>Suggest the preferred names for deprecated methods, such as\n<tt>assertEqual()</tt> instead of <tt>assertEquals()</tt>.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>1.1.0 (2019-06-26)</h2>\n<ul>\n<li>Suggest <tt>assertAlmostEqual(a, b, x)</tt> for <tt>round()</tt> expressions like in\n<tt>assertEqual(a, round(b, x))</tt> and <tt>assertAlmostEqual(a, round(b, x))</tt>\n(and similar for <tt>assertNotEqual()</tt> and <tt>assertNotAlmostEqual()</tt>.</li>\n<li>Recognize <tt>assertAmostEquals()</tt> and <tt>assertNotAlmostEquals()</tt> as aliases\nfor <tt>assertAlmostEqual()</tt> and <tt>assertNotAlmostEqual()</tt>.</li>\n<li>Drop Python 3.4 as a supported version since it has been officially retired.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>1.0.1 (2018-07-03)</h2>\n<ul>\n<li>Don\u2019t make suggestions for assertions containing multiple comparison\noperations (e.g. <tt>assertTrue(a == b == c)</tt>).</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>1.0.0 (2018-06-04)</h2>\n<ul>\n<li>Suggest <tt>assertIsNone(a)</tt> for <tt>assertTrue(a is None)</tt>, etc.</li>\n<li>Recognize <tt>assertEquals()</tt> and <tt>assertNotEquals()</tt> as aliases for\n<tt>assertEqual()</tt> and <tt>assertNotEqual()</tt>.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>0.9.0 (2018-05-14)</h2>\n<ul>\n<li>Initial beta release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6262841, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "7b7524fdfc335b3443b63a363b311f23", "sha256": "3b4c09a3cbfa52d83a6ec3be476fd280f2363a591c8a1f0208dcda5677002988"}, "downloads": -1, "filename": "flake8_assertive-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b7524fdfc335b3443b63a363b311f23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5438, "upload_time": "2018-05-14T19:47:01", "upload_time_iso_8601": "2018-05-14T19:47:01.581173Z", "url": "https://files.pythonhosted.org/packages/7b/cf/09e19a6f56b3bd75f3a123050654297573dcf3e647a9c3b90f883057049d/flake8_assertive-0.9.0-py2.py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8aad5551aa9f676d295f5692017456ae", "sha256": "222d39d2ca6fd58a260fd0f2d8b86db170ec31f6696b320b4d01a7f67682c98d"}, "downloads": -1, "filename": "flake8_assertive-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8aad5551aa9f676d295f5692017456ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5585, "upload_time": "2018-06-04T16:46:52", "upload_time_iso_8601": "2018-06-04T16:46:52.252781Z", "url": "https://files.pythonhosted.org/packages/78/52/18ae0a63ae2466eaedf6ab4af51612f998afbbd4da93aba9ecee7906f67a/flake8_assertive-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "157042618a2c6928d57eb3467233e02a", "sha256": "7b65e8bdbe1eab101e0e9df78604b39ad89bde24297ca8aa7dd795ec87478c67"}, "downloads": -1, "filename": "flake8-assertive-1.0.0.tar.gz", "has_sig": false, "md5_digest": "157042618a2c6928d57eb3467233e02a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6204, "upload_time": "2018-06-04T16:46:53", "upload_time_iso_8601": "2018-06-04T16:46:53.794083Z", "url": "https://files.pythonhosted.org/packages/40/5f/24bb530168e14f02b707a27e7aea5f5ff5431485876166c83e12dfda30c5/flake8-assertive-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2d1ff4d24036a8948cd07280f395c2a7", "sha256": "ca51b155a968fb65193d8ddfce76250b809d379e7026b6ba819eb37bf04d5fe1"}, "downloads": -1, "filename": "flake8_assertive-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2d1ff4d24036a8948cd07280f395c2a7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5658, "upload_time": "2018-07-03T17:44:19", "upload_time_iso_8601": "2018-07-03T17:44:19.489095Z", "url": "https://files.pythonhosted.org/packages/20/9a/a88f714c8943dfc832714e677859f5998ca7f7e516fe4904c21091fec3cb/flake8_assertive-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1db9a6e2440d71680cb65869fbc4015", "sha256": "6894b1069560635a6dc48505c0f8bf9b189fc227862670258c9f687fdffc52f2"}, "downloads": -1, "filename": "flake8-assertive-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f1db9a6e2440d71680cb65869fbc4015", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6376, "upload_time": "2018-07-03T17:44:20", "upload_time_iso_8601": "2018-07-03T17:44:20.676952Z", "url": "https://files.pythonhosted.org/packages/2c/b7/b164fa95daf4a666e7ca48a0454a5288727704d193a550df87b9eb38a332/flake8-assertive-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9b7b516594defdb44888ab585696497c", "sha256": "dd66ccd5cb15d01c8aaaa5f82d66af534f50fdac7b1e0cec3153e3288f8dec5a"}, "downloads": -1, "filename": "flake8_assertive-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b7b516594defdb44888ab585696497c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7141, "upload_time": "2019-06-26T16:39:13", "upload_time_iso_8601": "2019-06-26T16:39:13.239462Z", "url": "https://files.pythonhosted.org/packages/f6/97/dab6349ad06403918fcafd21e90829181ffb4161375f6871a4d45803f6ca/flake8_assertive-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70f2cce3b1e10e0e8355cf950aa0a804", "sha256": "06e98538ebc6252476d0af6a50d7277a065dceb53adab2da418a9df6c977ebe2"}, "downloads": -1, "filename": "flake8-assertive-1.1.0.tar.gz", "has_sig": false, "md5_digest": "70f2cce3b1e10e0e8355cf950aa0a804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7272, "upload_time": "2019-06-26T16:39:15", "upload_time_iso_8601": "2019-06-26T16:39:15.078475Z", "url": "https://files.pythonhosted.org/packages/bc/fe/26a428845c3332d0cd4802f8a12fe90fe3b727fa510780e10a9dc5a6d85e/flake8-assertive-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "bd31b46da42a3839d33ee34b60c0f544", "sha256": "43fa215c5dbc70bfbb4de8ea7b8b44cbdc11268bf36a6cd944f8ff9463ba94a6"}, "downloads": -1, "filename": "flake8_assertive-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd31b46da42a3839d33ee34b60c0f544", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7466, "upload_time": "2019-12-05T17:45:35", "upload_time_iso_8601": "2019-12-05T17:45:35.317048Z", "url": "https://files.pythonhosted.org/packages/69/b3/86e4478dc8b5f6b72e2501393b2a988ef2c6cbefc429af1613bd082faa87/flake8_assertive-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65e8856ec4866a6f9e2af79dfd92d8de", "sha256": "b0645b0a745a88490a5d19b365f45998b98b3b5e402afaaa2cb337fd8c37adb9"}, "downloads": -1, "filename": "flake8-assertive-1.2.0.tar.gz", "has_sig": false, "md5_digest": "65e8856ec4866a6f9e2af79dfd92d8de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7720, "upload_time": "2019-12-05T17:45:36", "upload_time_iso_8601": "2019-12-05T17:45:36.574567Z", "url": "https://files.pythonhosted.org/packages/46/cb/4925fe4486fca5a3257181571c5f1bfe9bc49d6b8ca2396bba902d839707/flake8-assertive-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "67c2c78b82f6147a200d8a0f1ce3bebd", "sha256": "25b98c2d6c0d5eba509d89d4847fa63c2bf704135b427f0b8e0203dab7073e9f"}, "downloads": -1, "filename": "flake8_assertive-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67c2c78b82f6147a200d8a0f1ce3bebd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7532, "upload_time": "2019-12-08T17:43:15", "upload_time_iso_8601": "2019-12-08T17:43:15.586244Z", "url": "https://files.pythonhosted.org/packages/b8/1a/1291761f36385bcc5d5c707b890a1b78dac6cc06d654c7e18ef6cda84eaa/flake8_assertive-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29c1320d1c47dd2f292e2e91f774aac0", "sha256": "1416eba73332437fdf918f05d3a94a17287d2062423e00ed76c4985b39db5938"}, "downloads": -1, "filename": "flake8-assertive-1.2.1.tar.gz", "has_sig": false, "md5_digest": "29c1320d1c47dd2f292e2e91f774aac0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7817, "upload_time": "2019-12-08T17:43:17", "upload_time_iso_8601": "2019-12-08T17:43:17.353802Z", "url": "https://files.pythonhosted.org/packages/67/e2/cef66a3fec571b9ca8bbbd85182fa91e528a1f1fe56fbf8e0bd9a58ea6b3/flake8-assertive-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67c2c78b82f6147a200d8a0f1ce3bebd", "sha256": "25b98c2d6c0d5eba509d89d4847fa63c2bf704135b427f0b8e0203dab7073e9f"}, "downloads": -1, "filename": "flake8_assertive-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67c2c78b82f6147a200d8a0f1ce3bebd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7532, "upload_time": "2019-12-08T17:43:15", "upload_time_iso_8601": "2019-12-08T17:43:15.586244Z", "url": "https://files.pythonhosted.org/packages/b8/1a/1291761f36385bcc5d5c707b890a1b78dac6cc06d654c7e18ef6cda84eaa/flake8_assertive-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29c1320d1c47dd2f292e2e91f774aac0", "sha256": "1416eba73332437fdf918f05d3a94a17287d2062423e00ed76c4985b39db5938"}, "downloads": -1, "filename": "flake8-assertive-1.2.1.tar.gz", "has_sig": false, "md5_digest": "29c1320d1c47dd2f292e2e91f774aac0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7817, "upload_time": "2019-12-08T17:43:17", "upload_time_iso_8601": "2019-12-08T17:43:17.353802Z", "url": "https://files.pythonhosted.org/packages/67/e2/cef66a3fec571b9ca8bbbd85182fa91e528a1f1fe56fbf8e0bd9a58ea6b3/flake8-assertive-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:58 2020"}