{"info": {"author": "MetaCarta Labs", "author_email": "labs+featureserver@metacarta.com", "bugtrack_url": null, "classifiers": [], "description": "===============\n        featureserver\n        ===============\n        \n        ---------------------------------------\n        Simple Python geographic feature server\n        ---------------------------------------\n        \n        :Author: labs@metacarta.com\n        :Date:   2008-05-06\n        :Version: 1.12\n        :Manual group: GIS Utilities\n        \n        DESCRIPTION\n        ===========\n        FeatureServer is a simple Python-based geographic feature server. It allows\n        you to store geogrpahic vector features in a number of different backends,\n        and interact with them -- creating, updating, and deleting -- via a\n        REST-based API.\n        \n        FeatureServer will run under Python CGI, mod_python, or as a standalone server.\n        \n        FeatureServer was designed as a companion to OpenLayers, the BSD licensed web\n        mapping interface. For help with setting up FeatureServer for use with\n        OpenLayers, please feel free to stop by #featureserver, on irc.freenode.net, or\n        to send email to featureserver@featureserver.org.\n        \n        FeatureServer is released under a copyright only open source license similar\n        to the BSD license.\n        \n        RUNNING UNDER CGI\n        =================\n        \n        * Extract the code to some web directory (e.g. in /var/www).\n        * Edit featureserver.cfg to point the 'file' attribute of the 'scribble'\n        datasource to the location you wish to save your database.\n        * Permit CGI execution in the FeatureServer directory.\n        For example, if FeatureServer is to be run with Apache, the\n        following must be added in your Apache configuration,\n        where /var/www/featureserver is the directory resulting from\n        the code extraction.\n        \n        ::\n        \n        <Directory /var/www/featureserver>\n        AddHandler cgi-script .cgi\n        Options +ExecCGI\n        </Directory>\n        \n        * Visit:\n        \n        http://example.com/yourdir/featureserver.cgi/scribble/all.atom\n        \n        * If you see an empty GeoRSS feed, you have set up your configuration\n        correctly. Congrats!\n        \n        Python Prerequisites\n        --------------------\n        In order to use the default demo included with FeatureServer, you must have\n        the simplejson module installed. If you do not, you can add it by doing the\n        following:\n        \n        $ wget http://cheeseshop.python.org/packages/source/s/simplejson/simplejson-1.7.1.tar.gz\n        $ tar -zvxf simplejson-1.7.1.tar.gz\n        $ cp -r simplejson-1.7.1/simplejson /var/www/featureserver\n        \n        Note that these instructions are for Linux systems: the end goal is to extract\n        the simplejson directory from the distribution and put it in the root of your\n        FeatureServer install.\n        \n        Other dependancies for DataSources and Services are outlined in their\n        respective documentation files.\n        \n        Non-standard Python Location\n        ----------------------------\n        If your Python is not at /usr/bin/python on your system, you will need to\n        change the first line of featureserver.cgi to reference the location of your\n        Python binary. A common example is:\n        \n        ::\n        \n        #!/usr/local/bin/python\n        \n        Under Apache, you might see an error message like:\n        \n        ::\n        \n        [Wed Mar 14 19:55:30 2007] [error] [client 127.0.0.1] (2)No such file or\n        directory: exec of '/www/featureserver.cgi' failed\n        \n        to indicate this problem.\n        \n        You can typically locate where Python is installed on your system via the\n        command 'which python'.\n        \n        Windows users: If you are using Windows, you should change the first line\n        of featureserver.cgi to read:\n        \n        ::\n        \n        #!C:/Python/python.exe -u\n        \n        C:/Python should match the location Python is installed under on your\n        system. In Python 2.5, this location is C:/Python25 by default.\n        \n        RUNNING UNDER MOD_PYTHON\n        ========================\n        \n        * Extract the code to some web directory (e.g. /var/www).\n        * Edit featureserver.cfg to point the 'file' attribute of the 'scribble'\n        datasource to the location you wish to save your database.\n        * Add the following to your Apache configuration, under a <Directory> heading:\n        \n        ::\n        \n        AddHandler python-program .py\n        PythonPath sys.path+['/path/to/featureserver/FeatureServer', '/path/to/featureserver']\n        PythonHandler FeatureServer.Server\n        PythonOption FeatureServerConfig /path/to/featureserver.cfg\n        \n        * An example might look like:\n        \n        ::\n        \n        <Directory /var/www/featureserver/>\n        AddHandler python-program .py\n        PythonPath sys.path+['/var/www/featureserver/FeatureServer', '/var/www/featureserver']\n        PythonHandler FeatureServer.Server\n        PythonOption FeatureServerConfig /var/www/featureserver/featureserver.cfg\n        </Directory>\n        \n        * In this example, /var/www/featureserver is the directory resulting from\n        the code extraction.\n        * Visit the URL described above, replacing featureserver.cgi with\n        featureserver.py\n        * If you see an empty GeoRSS file you have set up your configuration correctly.\n        Congrats!\n        * Note that mod_python has not yet been well tested, and may not work well\n        for all data sources.\n        \n        \n        RUNNING STANDALONE (UNDER WSGI)\n        ===============================\n        \n        FeatureServer comes with a standalone HTTP server which uses the WSGI handler.\n        This implementation depends on *Python Paste*, which can be downloaded from:\n        \n        http://cheeseshop.python.org/pypi/Paste\n        \n        For versions of Python earlier than 2.5, you will also need to install\n        wsgiref:\n        \n        http://cheeseshop.python.org/pypi/wsgiref\n        \n        Once you have all the prerequisites installed, simply run:\n        \n        ::\n        \n        python featureserver_http_server.py\n        \n        This will start a webserver listening on port 8080, after which you should\n        be able to open:\n        \n        ::\n        \n        http://hostname:8080/scribble/all.atom\n        \n        to see your first file.\n        \n        RUNNING UNDER FASTCGI\n        =====================\n        \n        FeatureServer comes with a fastcgi implementation. In order to use this\n        implementation, you will need to install flup, available from:\n        \n        http://trac.saddi.com/flup\n        \n        This implementation also depends on Python Paste, which can be downloaded\n        from:\n        \n        http://cheeseshop.python.org/pypi/Paste\n        \n        Once you have done this, you can configure your fastcgi server to use\n        featureserver.fcgi.\n        \n        Configuring FastCGI is beyond the scope of this documentation.\n        \n        CONFIGURATION\n        =============\n        FeatureServer is configured by a config file, defaulting to featureserver.cfg.\n        FeatureServer data source documentation is available in doc/DataSources.\n        \n        USING FEATURESERVER WITH OPENLAYERS\n        ===================================\n        \n        To run OpenLayers with FeatureServer, the URL passed to the\n        OpenLayers.Layer.WFS constructor must point to the FeatureServer script,\n        i.e. featureserver.cgi or featureserver.py. As an example see the\n        index.html file included in the FeatureServer distribution.\n        \n        Note: index.html assumes FeatureServer is set up under CGI (see above).\n        If you set up FeatureServer under mod_python you'd need to slighly\n        modify index.html: the URL passed to the OpenLayers.Layer.WFS constructor\n        must point to the mod_python script as opposed to the CGI script, so replace\n        featureserver.cgi with featureserver.py. Similarly, you would need to edit\n        this URL if you were to use FeatureServer with the standalone HTTP Server\n        or FastCGI.\n        \n        SEE ALSO\n        ========\n        \n        http://featureserver.org/\n        \n        http://openlayers.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://featureserver.org/", "keywords": "", "license": "Clear BSD", "maintainer": "", "maintainer_email": "", "name": "FeatureServer", "package_url": "https://pypi.org/project/FeatureServer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/FeatureServer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://featureserver.org/"}, "release_url": "https://pypi.org/project/FeatureServer/1.12/", "requires_dist": null, "requires_python": null, "summary": "A server for geographic features on the web.", "version": "1.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            ===============<br>        featureserver<br>        ===============<br>        <br>        ---------------------------------------<br>        Simple Python geographic feature server<br>        ---------------------------------------<br>        <br>        :Author: labs@metacarta.com<br>        :Date:   2008-05-06<br>        :Version: 1.12<br>        :Manual group: GIS Utilities<br>        <br>        DESCRIPTION<br>        ===========<br>        FeatureServer is a simple Python-based geographic feature server. It allows<br>        you to store geogrpahic vector features in a number of different backends,<br>        and interact with them -- creating, updating, and deleting -- via a<br>        REST-based API.<br>        <br>        FeatureServer will run under Python CGI, mod_python, or as a standalone server.<br>        <br>        FeatureServer was designed as a companion to OpenLayers, the BSD licensed web<br>        mapping interface. For help with setting up FeatureServer for use with<br>        OpenLayers, please feel free to stop by #featureserver, on irc.freenode.net, or<br>        to send email to featureserver@featureserver.org.<br>        <br>        FeatureServer is released under a copyright only open source license similar<br>        to the BSD license.<br>        <br>        RUNNING UNDER CGI<br>        =================<br>        <br>        * Extract the code to some web directory (e.g. in /var/www).<br>        * Edit featureserver.cfg to point the 'file' attribute of the 'scribble'<br>        datasource to the location you wish to save your database.<br>        * Permit CGI execution in the FeatureServer directory.<br>        For example, if FeatureServer is to be run with Apache, the<br>        following must be added in your Apache configuration,<br>        where /var/www/featureserver is the directory resulting from<br>        the code extraction.<br>        <br>        ::<br>        <br>        &lt;Directory /var/www/featureserver&gt;<br>        AddHandler cgi-script .cgi<br>        Options +ExecCGI<br>        &lt;/Directory&gt;<br>        <br>        * Visit:<br>        <br>        http://example.com/yourdir/featureserver.cgi/scribble/all.atom<br>        <br>        * If you see an empty GeoRSS feed, you have set up your configuration<br>        correctly. Congrats!<br>        <br>        Python Prerequisites<br>        --------------------<br>        In order to use the default demo included with FeatureServer, you must have<br>        the simplejson module installed. If you do not, you can add it by doing the<br>        following:<br>        <br>        $ wget http://cheeseshop.python.org/packages/source/s/simplejson/simplejson-1.7.1.tar.gz<br>        $ tar -zvxf simplejson-1.7.1.tar.gz<br>        $ cp -r simplejson-1.7.1/simplejson /var/www/featureserver<br>        <br>        Note that these instructions are for Linux systems: the end goal is to extract<br>        the simplejson directory from the distribution and put it in the root of your<br>        FeatureServer install.<br>        <br>        Other dependancies for DataSources and Services are outlined in their<br>        respective documentation files.<br>        <br>        Non-standard Python Location<br>        ----------------------------<br>        If your Python is not at /usr/bin/python on your system, you will need to<br>        change the first line of featureserver.cgi to reference the location of your<br>        Python binary. A common example is:<br>        <br>        ::<br>        <br>        #!/usr/local/bin/python<br>        <br>        Under Apache, you might see an error message like:<br>        <br>        ::<br>        <br>        [Wed Mar 14 19:55:30 2007] [error] [client 127.0.0.1] (2)No such file or<br>        directory: exec of '/www/featureserver.cgi' failed<br>        <br>        to indicate this problem.<br>        <br>        You can typically locate where Python is installed on your system via the<br>        command 'which python'.<br>        <br>        Windows users: If you are using Windows, you should change the first line<br>        of featureserver.cgi to read:<br>        <br>        ::<br>        <br>        #!C:/Python/python.exe -u<br>        <br>        C:/Python should match the location Python is installed under on your<br>        system. In Python 2.5, this location is C:/Python25 by default.<br>        <br>        RUNNING UNDER MOD_PYTHON<br>        ========================<br>        <br>        * Extract the code to some web directory (e.g. /var/www).<br>        * Edit featureserver.cfg to point the 'file' attribute of the 'scribble'<br>        datasource to the location you wish to save your database.<br>        * Add the following to your Apache configuration, under a &lt;Directory&gt; heading:<br>        <br>        ::<br>        <br>        AddHandler python-program .py<br>        PythonPath sys.path+['/path/to/featureserver/FeatureServer', '/path/to/featureserver']<br>        PythonHandler FeatureServer.Server<br>        PythonOption FeatureServerConfig /path/to/featureserver.cfg<br>        <br>        * An example might look like:<br>        <br>        ::<br>        <br>        &lt;Directory /var/www/featureserver/&gt;<br>        AddHandler python-program .py<br>        PythonPath sys.path+['/var/www/featureserver/FeatureServer', '/var/www/featureserver']<br>        PythonHandler FeatureServer.Server<br>        PythonOption FeatureServerConfig /var/www/featureserver/featureserver.cfg<br>        &lt;/Directory&gt;<br>        <br>        * In this example, /var/www/featureserver is the directory resulting from<br>        the code extraction.<br>        * Visit the URL described above, replacing featureserver.cgi with<br>        featureserver.py<br>        * If you see an empty GeoRSS file you have set up your configuration correctly.<br>        Congrats!<br>        * Note that mod_python has not yet been well tested, and may not work well<br>        for all data sources.<br>        <br>        <br>        RUNNING STANDALONE (UNDER WSGI)<br>        ===============================<br>        <br>        FeatureServer comes with a standalone HTTP server which uses the WSGI handler.<br>        This implementation depends on *Python Paste*, which can be downloaded from:<br>        <br>        http://cheeseshop.python.org/pypi/Paste<br>        <br>        For versions of Python earlier than 2.5, you will also need to install<br>        wsgiref:<br>        <br>        http://cheeseshop.python.org/pypi/wsgiref<br>        <br>        Once you have all the prerequisites installed, simply run:<br>        <br>        ::<br>        <br>        python featureserver_http_server.py<br>        <br>        This will start a webserver listening on port 8080, after which you should<br>        be able to open:<br>        <br>        ::<br>        <br>        http://hostname:8080/scribble/all.atom<br>        <br>        to see your first file.<br>        <br>        RUNNING UNDER FASTCGI<br>        =====================<br>        <br>        FeatureServer comes with a fastcgi implementation. In order to use this<br>        implementation, you will need to install flup, available from:<br>        <br>        http://trac.saddi.com/flup<br>        <br>        This implementation also depends on Python Paste, which can be downloaded<br>        from:<br>        <br>        http://cheeseshop.python.org/pypi/Paste<br>        <br>        Once you have done this, you can configure your fastcgi server to use<br>        featureserver.fcgi.<br>        <br>        Configuring FastCGI is beyond the scope of this documentation.<br>        <br>        CONFIGURATION<br>        =============<br>        FeatureServer is configured by a config file, defaulting to featureserver.cfg.<br>        FeatureServer data source documentation is available in doc/DataSources.<br>        <br>        USING FEATURESERVER WITH OPENLAYERS<br>        ===================================<br>        <br>        To run OpenLayers with FeatureServer, the URL passed to the<br>        OpenLayers.Layer.WFS constructor must point to the FeatureServer script,<br>        i.e. featureserver.cgi or featureserver.py. As an example see the<br>        index.html file included in the FeatureServer distribution.<br>        <br>        Note: index.html assumes FeatureServer is set up under CGI (see above).<br>        If you set up FeatureServer under mod_python you'd need to slighly<br>        modify index.html: the URL passed to the OpenLayers.Layer.WFS constructor<br>        must point to the mod_python script as opposed to the CGI script, so replace<br>        featureserver.cgi with featureserver.py. Similarly, you would need to edit<br>        this URL if you were to use FeatureServer with the standalone HTTP Server<br>        or FastCGI.<br>        <br>        SEE ALSO<br>        ========<br>        <br>        http://featureserver.org/<br>        <br>        http://openlayers.org/\n          </div>"}, "last_serial": 6727309, "releases": {"1.06": [], "1.11": [{"comment_text": "", "digests": {"md5": "b2c04f2c89f5be1275f15d268b90f856", "sha256": "4cdf6b1de014ac1b220cb9a8af7bc23b171440c65d91e84bb4f123de5308449b"}, "downloads": -1, "filename": "FeatureServer-1.11-py2.4.egg", "has_sig": false, "md5_digest": "b2c04f2c89f5be1275f15d268b90f856", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 94059, "upload_time": "2007-12-31T15:24:13", "upload_time_iso_8601": "2007-12-31T15:24:13Z", "url": "https://files.pythonhosted.org/packages/74/72/27d590d788a97a7507e0a7e6b5d560b5f4b2f6aafa839ea7560575ba579b/FeatureServer-1.11-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e3c78e74cabaaa8b963579af2162bf0", "sha256": "8f18d72a77a8a9b92658fccc75c088370baf795347212a75b7f545db73e2ae24"}, "downloads": -1, "filename": "FeatureServer-1.11-py2.5.egg", "has_sig": false, "md5_digest": "7e3c78e74cabaaa8b963579af2162bf0", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 92739, "upload_time": "2007-12-31T15:25:43", "upload_time_iso_8601": "2007-12-31T15:25:43Z", "url": "https://files.pythonhosted.org/packages/3e/7c/9a8302b171f3858d9c4758229135e4099c433f00a99794ae959cd36c5792/FeatureServer-1.11-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "05f0a95a56d43e29ac891379bb61ef54", "sha256": "32e5fbfb0cefe897fa5e09af150a6b1deaf437a5df635d9d244395ad09dbed5d"}, "downloads": -1, "filename": "FeatureServer-1.11.tar.gz", "has_sig": false, "md5_digest": "05f0a95a56d43e29ac891379bb61ef54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30021, "upload_time": "2007-12-31T15:24:05", "upload_time_iso_8601": "2007-12-31T15:24:05Z", "url": "https://files.pythonhosted.org/packages/f1/8f/7e3d6c7ad3e47317c864235ff039b53761b56df2e544aec64e53cef47022/FeatureServer-1.11.tar.gz", "yanked": false}], "1.12": [{"comment_text": "", "digests": {"md5": "27b6f7560d1dc0284d9978aa8daa982e", "sha256": "3dfb098f7c59f39aae29f4c13afd9086c00118e89a638282894068ee69ddca73"}, "downloads": -1, "filename": "FeatureServer-1.12-py2.4.egg", "has_sig": false, "md5_digest": "27b6f7560d1dc0284d9978aa8daa982e", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 102130, "upload_time": "2008-05-20T04:21:54", "upload_time_iso_8601": "2008-05-20T04:21:54Z", "url": "https://files.pythonhosted.org/packages/69/38/a6acb00c1bbb4faa6fa218eae16f6d137981ae81abcb6017501a5e985267/FeatureServer-1.12-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d06f1e4193c14c5718fab80974f2efe8", "sha256": "615e7c5065b20f86cff8e25918563b2335b53f69ddba6f4e5697f8c056030686"}, "downloads": -1, "filename": "FeatureServer-1.12-py2.5.egg", "has_sig": false, "md5_digest": "d06f1e4193c14c5718fab80974f2efe8", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 100632, "upload_time": "2008-05-20T04:32:33", "upload_time_iso_8601": "2008-05-20T04:32:33Z", "url": "https://files.pythonhosted.org/packages/7a/67/6aa457870911854ab98f5d448d5aa7b49c74a9b5b1eaa970b40923a909d0/FeatureServer-1.12-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fc99d4dcf8d93d667005fa4e0a8e39a", "sha256": "a97ad970d1b8e2b0221820f311128dc0c135a4b43eb53439fa6e41908e790a39"}, "downloads": -1, "filename": "FeatureServer-1.12.tar.gz", "has_sig": false, "md5_digest": "6fc99d4dcf8d93d667005fa4e0a8e39a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28419, "upload_time": "2008-05-20T04:21:04", "upload_time_iso_8601": "2008-05-20T04:21:04Z", "url": "https://files.pythonhosted.org/packages/10/9a/6a03e1c09ce1b05df816dc1eab62f33e171897eb8d34ac6d15aad197b4a4/FeatureServer-1.12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27b6f7560d1dc0284d9978aa8daa982e", "sha256": "3dfb098f7c59f39aae29f4c13afd9086c00118e89a638282894068ee69ddca73"}, "downloads": -1, "filename": "FeatureServer-1.12-py2.4.egg", "has_sig": false, "md5_digest": "27b6f7560d1dc0284d9978aa8daa982e", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 102130, "upload_time": "2008-05-20T04:21:54", "upload_time_iso_8601": "2008-05-20T04:21:54Z", "url": "https://files.pythonhosted.org/packages/69/38/a6acb00c1bbb4faa6fa218eae16f6d137981ae81abcb6017501a5e985267/FeatureServer-1.12-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d06f1e4193c14c5718fab80974f2efe8", "sha256": "615e7c5065b20f86cff8e25918563b2335b53f69ddba6f4e5697f8c056030686"}, "downloads": -1, "filename": "FeatureServer-1.12-py2.5.egg", "has_sig": false, "md5_digest": "d06f1e4193c14c5718fab80974f2efe8", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 100632, "upload_time": "2008-05-20T04:32:33", "upload_time_iso_8601": "2008-05-20T04:32:33Z", "url": "https://files.pythonhosted.org/packages/7a/67/6aa457870911854ab98f5d448d5aa7b49c74a9b5b1eaa970b40923a909d0/FeatureServer-1.12-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fc99d4dcf8d93d667005fa4e0a8e39a", "sha256": "a97ad970d1b8e2b0221820f311128dc0c135a4b43eb53439fa6e41908e790a39"}, "downloads": -1, "filename": "FeatureServer-1.12.tar.gz", "has_sig": false, "md5_digest": "6fc99d4dcf8d93d667005fa4e0a8e39a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28419, "upload_time": "2008-05-20T04:21:04", "upload_time_iso_8601": "2008-05-20T04:21:04Z", "url": "https://files.pythonhosted.org/packages/10/9a/6a03e1c09ce1b05df816dc1eab62f33e171897eb8d34ac6d15aad197b4a4/FeatureServer-1.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:05 2020"}