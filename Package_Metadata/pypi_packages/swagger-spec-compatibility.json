{"info": {"author": "Yelp, Inc.", "author_email": "opensource+swagger-spec-compatibility@yelp.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://img.shields.io/travis/com/Yelp/swagger-spec-compatibility.svg\n    :target: https://travis-ci.com/Yelp/swagger-spec-compatibility?branch=master\n\n.. image:: https://img.shields.io/codecov/c/gh/Yelp/swagger-spec-compatibility.svg\n    :target: https://codecov.io/gh/Yelp/swagger-spec-compatibility\n\n.. image:: https://img.shields.io/pypi/v/swagger-spec-compatibility.svg\n    :target: https://pypi.python.org/pypi/swagger-spec-compatibility/\n    :alt: PyPi version\n\n.. image:: https://img.shields.io/pypi/pyversions/swagger-spec-compatibility.svg\n    :target: https://pypi.python.org/pypi/swagger-spec-compatibility/\n    :alt: Supported Python versions\n\nswagger-spec-compatibility\n==========================\n\nAbout\n-----\n\n\n``swagger-spec-compatibility`` is a Yelp maintained library that provides tools to automatically detect\nthe safety of `Swagger/OpenAPI 2.0 specification <https://swagger.io/docs/specification/2-0/basic-structure/>`_ changes\nwith respect to **backwards compatibility**.\n\n\n``swagger-spec-compatibility`` aims to give developers confidence that their spec changes are safe and that clients\nbuilt with previous versions of the Swagger spec can continue to communicate correctly.\n\nDocumentation\n-------------\n\nMore documentation is available at `swagger-spec-compatibility.readthedocs.org <http://swagger-spec-compatibility.readthedocs.org/>`__.\n\nHow to Install\n--------------\n\n.. code-block:: bash\n\n    # to install the latest released version\n    $ pip install swagger-spec-compatiblity\n\n    # to install the latest master [from Github]\n    $ pip install git+https://github.com/Yelp/swagger-spec-compatibility\n\nExample Usage\n-------------\nThe commands below assume that the library is already installed\n\n.. code-block:: bash\n\n    $ swagger_spec_compatibility -h\n    usage: swagger_spec_compatibility [-h] {explain,info,run} ...\n\n    Tool for the identification of backward incompatible changes between two swagger specs.\n\n    The tool provides the following level of results:\n    - WARNING: the Swagger specs are technically compatible but the are likely to break known Swagger implementations\n    - ERROR: new Swagger spec does introduce a breaking change respect the old implementation\n\n    positional arguments:\n      {explain,info,run}  help for sub-command\n        explain           explain selected rules\n        info              Reports tool's information\n        run               run backward compatibility detection\n\n    optional arguments:\n      -h, --help          show this help message and exit\n\n.. code-block:: bash\n\n    $ swagger_spec_compatibility explain -r REQ-E001 REQ-E002\n    Rules explanation\n    [REQ-E001] Added Required Property in Request contract:\n    \tAdding a required property to an object used in requests leads client request to fail if the property is not present.\n    [REQ-E002] Removed Enum value from Request contract:\n    \tRemoving an enum value from a request parameter is backward incompatible as a previously valid request will not be\n    \tvalid. This happens because a request containing the removed enum value, valid according to the \"old\" Swagger spec, is\n    \tnot valid according to the new specs.\n\n.. code-block:: bash\n\n    $ old_spec_path=docs/source/rules/examples/REQ-E001/old.yaml\n    $ new_spec_path=docs/source/rules/examples/REQ-E001/new.yaml\n\n    # Run with all the registered rules\n    $ swagger_spec_compatibility run ${old_spec_path} ${new_spec_path}\n    ERROR rules:\n    \t[REQ-E001] Added Required Property in Request contract : #/paths//endpoint/post/parameters/0/schema\n    $ echo $?\n    1\n\n    # Run with a subset of registered rules\n    $ swagger_spec_compatibility -r=MIS-E001 -r=MIS-E002 run ${old_spec_path} ${new_spec_path}\n    $ echo $?\n    0\n\n.. code-block:: bash\n\n    $ swagger_spec_compatibility info\n    swagger-spec-compatibility: 1.3.0\n    Python version: CPython - 3.6.9\n    Python compiler: GCC 4.2.1 Compatible Apple LLVM 10.0.1 (clang-1001.0.46.4)\n    Discovered rules:\n        MIS-E001: swagger_spec_compatibility.rules.deleted_endpoint.DeletedEndpoint\n        MIS-E002: swagger_spec_compatibility.rules.changed_type.ChangedType\n        REQ-E001: swagger_spec_compatibility.rules.added_required_property_in_request.AddedRequiredPropertyInRequest\n        REQ-E002: swagger_spec_compatibility.rules.removed_enum_value_from_request.RemovedEnumValueFromRequest\n        REQ-E003: swagger_spec_compatibility.rules.removed_properties_from_request_objects_with_additional_properties_set_to_false.RemovedPropertiesFromRequestObjectsWithAdditionalPropertiesSetToFalse\n        RES-E001: swagger_spec_compatibility.rules.added_properties_in_response_objects_with_additional_properties_set_to_false.AddedPropertiesInResponseObjectsWithAdditionalPropertiesSetToFalse\n        RES-E002: swagger_spec_compatibility.rules.removed_required_property_from_response.RemovedRequiredPropertyFromResponse\n        RES-E003: swagger_spec_compatibility.rules.added_enum_value_in_response.AddedEnumValueInRequest\n\nDevelopment\n-----------\n\nCode is documented using `Sphinx <http://sphinx-doc.org/>`__.\n\n`virtualenv <http://virtualenv.readthedocs.org/en/latest/virtualenv.html>`__ is\nrecommended to keep dependencies and libraries isolated.\n\nSetup\n~~~~~\n\n.. code-block:: bash\n\n    # Initialize your dev environment\n    $ make minimal\n\n    # Ensure that you have activated the virtualenvironment\n    $ source ./venv/bin/activate\n\nTip: If you have `aactivator <https://github.com/Yelp/aactivator>`__ installed the virtual environment will\nbe automatically activated\n\nHow to define a new compatibility rule\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUse the following steps to define a new rule:\n\n1. Define a new rule class in ``swagger_spec_compatibility/rules/``\n\n.. code-block:: python\n\n    # Example of the file content  (assume that the file will be named FILE.py)\n    class RuleClassName(BaseRule):\n        description = ''\n        error_code = 'ERROR_CODE'\n        error_level = Level.LEVEL\n        rule_type = RuleType.TYPE\n        short_name = ''\n\n        @classmethod\n        def validate(cls, left_spec, right_spec):\n            # type: (Spec, Spec) -> typing.Iterable[ValidationMessage]\n            # Implement here your logic\n            raise NotImplemented()\n\n     # Please make sure that:\n     #  * `description` and `short_name` are reasonably explicative to support `swagger_spec_compatibility explain` command\n     #  * `error_code` has REQ- prefix for `RuleType.REQUEST_CONTRACT`, RES- for `RuleType.RESPONSE_CONTRACT` and MIS- for `RuleType.MISCELLANEOUS`\n\n\n3. Add tests to ensure that your rule behaves as expected (tests in ``tests/rules/FILE_test.py``)\n\n3. Add documentation for the defined rule in ``docs/source/rules/ERROR_CODE.rst``. Try to be consistent with the style\n   of the others documentation pages\n\n4. Add example of a Swagger spec change that triggers the rule in ``docs/source/rules/examples/ERROR_CODE.rst``.\n   Ensure to define a `tester.py` file that will make explicit the backward incompatible change through the usage of a\n   `bravado <https://github.com/Yelp/bravado>`_ client (check the other testers for examples).\n   **NOTE**: The testers are executed by automated tests, this is intended to ensure that documentation is in sync with\n   the codebase.\n5. [Optional] Add integration tests to ensure that no regressions will be introduced and/or to validate edge cases of the new rule.\n   Integration tests are defined as follow: ``case-<incremental number>-<number of expected reports>-reports-<short description>`` directory\n   with two files: ``old.yaml`` and ``new.yaml``. The two files represent two versions of the swagger specs that need to be checked for\n   backward compatibility.\n\nContributing\n~~~~~~~~~~~~\n\n1. Fork it ( http://github.com/Yelp/swagger-spec-compatibility/fork )\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Add your modifications\n4. Commit your changes (``git commit -m \"Add some feature\"``)\n5. Push to the branch (``git push origin my-new-feature``)\n6. Create new Pull Request\n\nLicense\n-------\n\nCopyright 2019 Yelp, Inc.\n\nSwagger Spec Compatibility is licensed with a `Apache License 2.0 <https://opensource.org/licenses/Apache-2.0>`__.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Yelp/swagger-spec-compatibility", "keywords": "", "license": "Copyright Yelp, Inc. 2018", "maintainer": "", "maintainer_email": "", "name": "swagger-spec-compatibility", "package_url": "https://pypi.org/project/swagger-spec-compatibility/", "platform": "", "project_url": "https://pypi.org/project/swagger-spec-compatibility/", "project_urls": {"Homepage": "https://github.com/Yelp/swagger-spec-compatibility"}, "release_url": "https://pypi.org/project/swagger-spec-compatibility/1.2.1/", "requires_dist": ["bravado", "bravado-core (!=5.16.0)", "swagger-spec-validator", "six", "termcolor", "typing-extensions", "venusian", "functools32 ; python_version<\"3.2\"", "typing ; python_version<\"3.5\""], "requires_python": "", "summary": "Python library to check Swagger Spec backward compatibility", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/Yelp/swagger-spec-compatibility?branch=master\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/com/Yelp/swagger-spec-compatibility.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d2a1b2cf74983e4a455c15954ea6920c61d1b4b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f59656c702f737761676765722d737065632d636f6d7061746962696c6974792e737667\"></a>\n<a href=\"https://codecov.io/gh/Yelp/swagger-spec-compatibility\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/gh/Yelp/swagger-spec-compatibility.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/081c60d3543d6104681164871fd989a1e4a2f22e/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f59656c702f737761676765722d737065632d636f6d7061746962696c6974792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/swagger-spec-compatibility/\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1f2e3d01429c2006b96ae12c6a43029ecb3bfee/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737761676765722d737065632d636f6d7061746962696c6974792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/swagger-spec-compatibility/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb5dfb110525db368c248d761e742c6f26987d78/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f737761676765722d737065632d636f6d7061746962696c6974792e737667\"></a>\n<div id=\"swagger-spec-compatibility\">\n<h2>swagger-spec-compatibility</h2>\n<div id=\"about\">\n<h3>About</h3>\n<p><tt><span class=\"pre\">swagger-spec-compatibility</span></tt> is a Yelp maintained library that provides tools to automatically detect\nthe safety of <a href=\"https://swagger.io/docs/specification/2-0/basic-structure/\" rel=\"nofollow\">Swagger/OpenAPI 2.0 specification</a> changes\nwith respect to <strong>backwards compatibility</strong>.</p>\n<p><tt><span class=\"pre\">swagger-spec-compatibility</span></tt> aims to give developers confidence that their spec changes are safe and that clients\nbuilt with previous versions of the Swagger spec can continue to communicate correctly.</p>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>More documentation is available at <a href=\"http://swagger-spec-compatibility.readthedocs.org/\" rel=\"nofollow\">swagger-spec-compatibility.readthedocs.org</a>.</p>\n</div>\n<div id=\"how-to-install\">\n<h3>How to Install</h3>\n<pre><span class=\"c1\"># to install the latest released version\n</span>$ pip install swagger-spec-compatiblity\n\n<span class=\"c1\"># to install the latest master [from Github]\n</span>$ pip install git+https://github.com/Yelp/swagger-spec-compatibility\n</pre>\n</div>\n<div id=\"example-usage\">\n<h3>Example Usage</h3>\n<p>The commands below assume that the library is already installed</p>\n<pre>$ swagger_spec_compatibility -h\nusage: swagger_spec_compatibility <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">{</span>explain,info,run<span class=\"o\">}</span> ...\n\nTool <span class=\"k\">for</span> the identification of backward incompatible changes between two swagger specs.\n\nThe tool provides the following level of results:\n- WARNING: the Swagger specs are technically compatible but the are likely to <span class=\"nb\">break</span> known Swagger implementations\n- ERROR: new Swagger spec does introduce a breaking change respect the old implementation\n\npositional arguments:\n  <span class=\"o\">{</span>explain,info,run<span class=\"o\">}</span>  <span class=\"nb\">help</span> <span class=\"k\">for</span> sub-command\n    explain           explain selected rules\n    info              Reports tool<span class=\"err\">'</span>s information\n    run               run backward compatibility detection\n\noptional arguments:\n  -h, --help          show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n</pre>\n<pre>$ swagger_spec_compatibility explain -r REQ-E001 REQ-E002\nRules explanation\n<span class=\"o\">[</span>REQ-E001<span class=\"o\">]</span> Added Required Property in Request contract:\n    Adding a required property to an object used in requests leads client request to fail <span class=\"k\">if</span> the property is not present.\n<span class=\"o\">[</span>REQ-E002<span class=\"o\">]</span> Removed Enum value from Request contract:\n    Removing an enum value from a request parameter is backward incompatible as a previously valid request will not be\n    valid. This happens because a request containing the removed enum value, valid according to the <span class=\"s2\">\"old\"</span> Swagger spec, is\n    not valid according to the new specs.\n</pre>\n<pre>$ <span class=\"nv\">old_spec_path</span><span class=\"o\">=</span>docs/source/rules/examples/REQ-E001/old.yaml\n$ <span class=\"nv\">new_spec_path</span><span class=\"o\">=</span>docs/source/rules/examples/REQ-E001/new.yaml\n\n<span class=\"c1\"># Run with all the registered rules\n</span>$ swagger_spec_compatibility run <span class=\"si\">${</span><span class=\"nv\">old_spec_path</span><span class=\"si\">}</span> <span class=\"si\">${</span><span class=\"nv\">new_spec_path</span><span class=\"si\">}</span>\nERROR rules:\n    <span class=\"o\">[</span>REQ-E001<span class=\"o\">]</span> Added Required Property in Request contract : <span class=\"c1\">#/paths//endpoint/post/parameters/0/schema\n</span>$ <span class=\"nb\">echo</span> <span class=\"nv\">$?</span>\n<span class=\"m\">1</span>\n\n<span class=\"c1\"># Run with a subset of registered rules\n</span>$ swagger_spec_compatibility -r<span class=\"o\">=</span>MIS-E001 -r<span class=\"o\">=</span>MIS-E002 run <span class=\"si\">${</span><span class=\"nv\">old_spec_path</span><span class=\"si\">}</span> <span class=\"si\">${</span><span class=\"nv\">new_spec_path</span><span class=\"si\">}</span>\n$ <span class=\"nb\">echo</span> <span class=\"nv\">$?</span>\n<span class=\"m\">0</span>\n</pre>\n<pre>$ swagger_spec_compatibility info\nswagger-spec-compatibility: <span class=\"m\">1</span>.3.0\nPython version: CPython - <span class=\"m\">3</span>.6.9\nPython compiler: GCC <span class=\"m\">4</span>.2.1 Compatible Apple LLVM <span class=\"m\">10</span>.0.1 <span class=\"o\">(</span>clang-1001.0.46.4<span class=\"o\">)</span>\nDiscovered rules:\n    MIS-E001: swagger_spec_compatibility.rules.deleted_endpoint.DeletedEndpoint\n    MIS-E002: swagger_spec_compatibility.rules.changed_type.ChangedType\n    REQ-E001: swagger_spec_compatibility.rules.added_required_property_in_request.AddedRequiredPropertyInRequest\n    REQ-E002: swagger_spec_compatibility.rules.removed_enum_value_from_request.RemovedEnumValueFromRequest\n    REQ-E003: swagger_spec_compatibility.rules.removed_properties_from_request_objects_with_additional_properties_set_to_false.RemovedPropertiesFromRequestObjectsWithAdditionalPropertiesSetToFalse\n    RES-E001: swagger_spec_compatibility.rules.added_properties_in_response_objects_with_additional_properties_set_to_false.AddedPropertiesInResponseObjectsWithAdditionalPropertiesSetToFalse\n    RES-E002: swagger_spec_compatibility.rules.removed_required_property_from_response.RemovedRequiredPropertyFromResponse\n    RES-E003: swagger_spec_compatibility.rules.added_enum_value_in_response.AddedEnumValueInRequest\n</pre>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Code is documented using <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a>.</p>\n<p><a href=\"http://virtualenv.readthedocs.org/en/latest/virtualenv.html\" rel=\"nofollow\">virtualenv</a> is\nrecommended to keep dependencies and libraries isolated.</p>\n<div id=\"setup\">\n<h4>Setup</h4>\n<pre><span class=\"c1\"># Initialize your dev environment\n</span>$ make minimal\n\n<span class=\"c1\"># Ensure that you have activated the virtualenvironment\n</span>$ <span class=\"nb\">source</span> ./venv/bin/activate\n</pre>\n<p>Tip: If you have <a href=\"https://github.com/Yelp/aactivator\" rel=\"nofollow\">aactivator</a> installed the virtual environment will\nbe automatically activated</p>\n</div>\n<div id=\"how-to-define-a-new-compatibility-rule\">\n<h4>How to define a new compatibility rule</h4>\n<p>Use the following steps to define a new rule:</p>\n<ol>\n<li>Define a new rule class in <tt>swagger_spec_compatibility/rules/</tt></li>\n</ol>\n<pre><span class=\"c1\"># Example of the file content  (assume that the file will be named FILE.py)</span>\n<span class=\"k\">class</span> <span class=\"nc\">RuleClassName</span><span class=\"p\">(</span><span class=\"n\">BaseRule</span><span class=\"p\">):</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n    <span class=\"n\">error_code</span> <span class=\"o\">=</span> <span class=\"s1\">'ERROR_CODE'</span>\n    <span class=\"n\">error_level</span> <span class=\"o\">=</span> <span class=\"n\">Level</span><span class=\"o\">.</span><span class=\"n\">LEVEL</span>\n    <span class=\"n\">rule_type</span> <span class=\"o\">=</span> <span class=\"n\">RuleType</span><span class=\"o\">.</span><span class=\"n\">TYPE</span>\n    <span class=\"n\">short_name</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">left_spec</span><span class=\"p\">,</span> <span class=\"n\">right_spec</span><span class=\"p\">):</span>\n        <span class=\"c1\"># type: (Spec, Spec) -&gt; typing.Iterable[ValidationMessage]</span>\n        <span class=\"c1\"># Implement here your logic</span>\n        <span class=\"k\">raise</span> <span class=\"bp\">NotImplemented</span><span class=\"p\">()</span>\n\n <span class=\"c1\"># Please make sure that:</span>\n <span class=\"c1\">#  * `description` and `short_name` are reasonably explicative to support `swagger_spec_compatibility explain` command</span>\n <span class=\"c1\">#  * `error_code` has REQ- prefix for `RuleType.REQUEST_CONTRACT`, RES- for `RuleType.RESPONSE_CONTRACT` and MIS- for `RuleType.MISCELLANEOUS`</span>\n</pre>\n<ol>\n<li>Add tests to ensure that your rule behaves as expected (tests in <tt>tests/rules/FILE_test.py</tt>)</li>\n</ol>\n<ol>\n<li>Add documentation for the defined rule in <tt>docs/source/rules/ERROR_CODE.rst</tt>. Try to be consistent with the style\nof the others documentation pages</li>\n<li>Add example of a Swagger spec change that triggers the rule in <tt>docs/source/rules/examples/ERROR_CODE.rst</tt>.\nEnsure to define a <cite>tester.py</cite> file that will make explicit the backward incompatible change through the usage of a\n<a href=\"https://github.com/Yelp/bravado\" rel=\"nofollow\">bravado</a> client (check the other testers for examples).\n<strong>NOTE</strong>: The testers are executed by automated tests, this is intended to ensure that documentation is in sync with\nthe codebase.</li>\n<li>[Optional] Add integration tests to ensure that no regressions will be introduced and/or to validate edge cases of the new rule.\nIntegration tests are defined as follow: <tt><span class=\"pre\">case-&lt;incremental</span> <span class=\"pre\">number&gt;-&lt;number</span> of expected <span class=\"pre\">reports&gt;-reports-&lt;short</span> description&gt;</tt> directory\nwith two files: <tt>old.yaml</tt> and <tt>new.yaml</tt>. The two files represent two versions of the swagger specs that need to be checked for\nbackward compatibility.</li>\n</ol>\n</div>\n<div id=\"contributing\">\n<h4>Contributing</h4>\n<ol>\n<li>Fork it ( <a href=\"http://github.com/Yelp/swagger-spec-compatibility/fork\" rel=\"nofollow\">http://github.com/Yelp/swagger-spec-compatibility/fork</a> )</li>\n<li>Create your feature branch (<tt>git checkout <span class=\"pre\">-b</span> <span class=\"pre\">my-new-feature</span></tt>)</li>\n<li>Add your modifications</li>\n<li>Commit your changes (<tt>git commit <span class=\"pre\">-m</span> \"Add some feature\"</tt>)</li>\n<li>Push to the branch (<tt>git push origin <span class=\"pre\">my-new-feature</span></tt>)</li>\n<li>Create new Pull Request</li>\n</ol>\n</div>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>Copyright 2019 Yelp, Inc.</p>\n<p>Swagger Spec Compatibility is licensed with a <a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\">Apache License 2.0</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6411140, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f28c53eb90dd830aedf7644087365e36", "sha256": "351216c8b04a93235c074f2107b8a1976344245ff112acf05d49b07661fd4178"}, "downloads": -1, "filename": "swagger_spec_compatibility-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f28c53eb90dd830aedf7644087365e36", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34122, "upload_time": "2019-02-26T16:04:15", "upload_time_iso_8601": "2019-02-26T16:04:15.793649Z", "url": "https://files.pythonhosted.org/packages/80/5d/021b325254be1e041a73101fcabb4a46fe0e73cf75105e8011ea45dd933b/swagger_spec_compatibility-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99599c0b719da6a09e6996a334f5cfda", "sha256": "dd46aed18c1de30249c1b7cc331355f49ff733f503c2fd6ed5b3cbfd94cd1dd0"}, "downloads": -1, "filename": "swagger-spec-compatibility-1.0.0.tar.gz", "has_sig": false, "md5_digest": "99599c0b719da6a09e6996a334f5cfda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15915, "upload_time": "2019-02-26T16:04:17", "upload_time_iso_8601": "2019-02-26T16:04:17.847971Z", "url": "https://files.pythonhosted.org/packages/5e/34/ea696e254e119264b47a6611cd195ebca3878ca9e5713487aaa33f367405/swagger-spec-compatibility-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c489f27eca0920ccb6471354b35f30c6", "sha256": "9c22df6cdef17bcf461e2fee4a4c7981159f9301f1a7203632393650eb61c3bb"}, "downloads": -1, "filename": "swagger_spec_compatibility-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c489f27eca0920ccb6471354b35f30c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36663, "upload_time": "2019-02-26T17:03:49", "upload_time_iso_8601": "2019-02-26T17:03:49.740526Z", "url": "https://files.pythonhosted.org/packages/41/fb/07893b8f25451982cff570c6d0f9e06deb64f7887cc6a29a377f47681470/swagger_spec_compatibility-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "286cf736bf44c9125945b4fdbcb1439c", "sha256": "41985ef830c83f74cbb51f7037fdeee4f7e7bff79a920d051087f760b6d612f9"}, "downloads": -1, "filename": "swagger-spec-compatibility-1.0.1.tar.gz", "has_sig": false, "md5_digest": "286cf736bf44c9125945b4fdbcb1439c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19242, "upload_time": "2019-02-26T17:03:51", "upload_time_iso_8601": "2019-02-26T17:03:51.451339Z", "url": "https://files.pythonhosted.org/packages/ef/bc/57b0a954c6a434303e64dbbdb54ab9037546f6fee0705431757ca8c84802/swagger-spec-compatibility-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "bff8a2411d00c57e4464afb84fe6780c", "sha256": "bbb4d004b52502e6214a0dc23c73cb50296d7d0a0f2398335922b7a8fe88c20a"}, "downloads": -1, "filename": "swagger_spec_compatibility-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bff8a2411d00c57e4464afb84fe6780c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38900, "upload_time": "2019-03-07T17:05:03", "upload_time_iso_8601": "2019-03-07T17:05:03.178111Z", "url": "https://files.pythonhosted.org/packages/5c/05/67994c8bc5fdd8e10c98162e741443344e61b86695abd0162fb71c24a2b2/swagger_spec_compatibility-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db71954f91bc188c5834518c3140e873", "sha256": "4457c6180f00eed416786ff366cfdcd56570c657afeabcad34d6db94407a4210"}, "downloads": -1, "filename": "swagger-spec-compatibility-1.1.0.tar.gz", "has_sig": false, "md5_digest": "db71954f91bc188c5834518c3140e873", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19125, "upload_time": "2019-03-07T17:05:04", "upload_time_iso_8601": "2019-03-07T17:05:04.588288Z", "url": "https://files.pythonhosted.org/packages/21/e4/9832c80eb3a9ed2d0524e454a8e1a0bd5dbdd716078e08b06ee3619fc988/swagger-spec-compatibility-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "8c833afb9be29dfb7ff03fcc1fd03de3", "sha256": "a2215558fec8ef66f7b938c7de8d96efceacfa05e1fa575c7a45d4fcabf4eb01"}, "downloads": -1, "filename": "swagger_spec_compatibility-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c833afb9be29dfb7ff03fcc1fd03de3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39277, "upload_time": "2019-03-27T16:37:22", "upload_time_iso_8601": "2019-03-27T16:37:22.530271Z", "url": "https://files.pythonhosted.org/packages/09/c6/7e7ee99991c5b9d5eed24eecdc8b9ddb976d012344d73a4f80de29f492d3/swagger_spec_compatibility-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c4a48398cc2f624bde57e518eced226", "sha256": "0e9b92660b1297c9e3ae5dd422dd23f33dcc2cea169d585d8946c027cf7b082c"}, "downloads": -1, "filename": "swagger-spec-compatibility-1.2.0.tar.gz", "has_sig": false, "md5_digest": "5c4a48398cc2f624bde57e518eced226", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19440, "upload_time": "2019-03-27T16:37:23", "upload_time_iso_8601": "2019-03-27T16:37:23.744319Z", "url": "https://files.pythonhosted.org/packages/18/74/a4c026fa909688e570f6223e57ec84cf321cf1ec44f8f64a2b26a55e9ca3/swagger-spec-compatibility-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "f7ebc5a27178b11291d1c1cb11bacf4f", "sha256": "9cb20612fa5299b3d54d7062b61f760eba84ad4fb4fe51f01d9256c0a6b7f774"}, "downloads": -1, "filename": "swagger_spec_compatibility-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f7ebc5a27178b11291d1c1cb11bacf4f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41116, "upload_time": "2020-01-07T22:02:42", "upload_time_iso_8601": "2020-01-07T22:02:42.066958Z", "url": "https://files.pythonhosted.org/packages/50/d0/a59e6877de1a0d66ec1a4efb242a2f9b4064912433aaa0b32b0ced7fb785/swagger_spec_compatibility-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b08ab7982e39131578f1e1e955beb465", "sha256": "a2246708c45c6b332ca561f842285ddca8b38625019a03c977f661a6fd42358b"}, "downloads": -1, "filename": "swagger-spec-compatibility-1.2.1.tar.gz", "has_sig": false, "md5_digest": "b08ab7982e39131578f1e1e955beb465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20724, "upload_time": "2020-01-07T22:02:43", "upload_time_iso_8601": "2020-01-07T22:02:43.602348Z", "url": "https://files.pythonhosted.org/packages/dd/39/1b36a515df3a06c8186ce699f4773de7d3f8f376b6a37c6b940f16e5eb5b/swagger-spec-compatibility-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7ebc5a27178b11291d1c1cb11bacf4f", "sha256": "9cb20612fa5299b3d54d7062b61f760eba84ad4fb4fe51f01d9256c0a6b7f774"}, "downloads": -1, "filename": "swagger_spec_compatibility-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f7ebc5a27178b11291d1c1cb11bacf4f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41116, "upload_time": "2020-01-07T22:02:42", "upload_time_iso_8601": "2020-01-07T22:02:42.066958Z", "url": "https://files.pythonhosted.org/packages/50/d0/a59e6877de1a0d66ec1a4efb242a2f9b4064912433aaa0b32b0ced7fb785/swagger_spec_compatibility-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b08ab7982e39131578f1e1e955beb465", "sha256": "a2246708c45c6b332ca561f842285ddca8b38625019a03c977f661a6fd42358b"}, "downloads": -1, "filename": "swagger-spec-compatibility-1.2.1.tar.gz", "has_sig": false, "md5_digest": "b08ab7982e39131578f1e1e955beb465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20724, "upload_time": "2020-01-07T22:02:43", "upload_time_iso_8601": "2020-01-07T22:02:43.602348Z", "url": "https://files.pythonhosted.org/packages/dd/39/1b36a515df3a06c8186ce699f4773de7d3f8f376b6a37c6b940f16e5eb5b/swagger-spec-compatibility-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:44 2020"}