{"info": {"author": "Keita Kurita", "author_email": "keita.kurita@gmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://circleci.com/gh/keitakurita/torchtable.svg?style=svg\n    :target: https://circleci.com/gh/keitakurita/torchtable\n\n.. image:: https://readthedocs.org/projects/torchtable/badge/?version=master\n    :target: https://torchtable.readthedocs.io/en/master/?badge=master\n    :alt: Documentation Status\n\ntorchtable\n++++++++++\n\nTorchtable is a library for handling tabular datasets in PyTorch. It is heavily inspired by torchtext and uses a similar API but without some of the limitations (e.g. only one field per column).\nTorchtable aims to be **simple to use** and **easily extensible**. \nIt provides sensible defaults while allowing the user to define their own custom pipelines, putting all of this behind an intuitive interface.\n\nInstallation\n============\nInstall via pip.\n\n`$ pip install torchtable`\n\nDocumentation\n=============\nDocumentation is a work in progress, but the current docs can be read `here <https://torchtable.readthedocs.io/en/master/>`_.\nIn addition, you can read the notebooks in the examples directory or dev_nb directory to learn more.\n\nUsage\n=====\n\nTorchtable uses a declarative API similar to torchtext.\nHere is an example of how you might handle an imaginary dataset where you are supposed to predict the price of some product.\n\n.. code-block:: python\n\n  >>> train = TabularDataset.from_csv('data/train.csv',\n  ...    fields={'seller_id': CategoricalField(min_freq=3),\n  ...            'timestamp': [DayofWeekField(), HourField()],\n  ...            'price': NumericalField(fill_missing=\"median\", is_target=True)\n  ...    })\n  ...\n\nSee the examples directory for more examples.\n\nTODO\n====\n- Add more models\n- Implement default field selection\n- Implement text field/operations\n- Implement swap noise\n- Implement input/output validation\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/keitakurita/torchtable", "keywords": "PyTorch,deep learning,machine learning", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torchtable", "package_url": "https://pypi.org/project/torchtable/", "platform": "", "project_url": "https://pypi.org/project/torchtable/", "project_urls": {"Homepage": "https://github.com/keitakurita/torchtable"}, "release_url": "https://pypi.org/project/torchtable/0.1.0/", "requires_dist": ["numpy", "pandas", "scipy", "torch (>=1.0.0)"], "requires_python": ">=3.6", "summary": "Tools for processing tabular datasets for PyTorch", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/keitakurita/torchtable\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/keitakurita/torchtable.svg?style=svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cdf87b556c58591bdb7f0e871fb341d4482655d/68747470733a2f2f636972636c6563692e636f6d2f67682f6b656974616b75726974612f746f7263687461626c652e7376673f7374796c653d737667\"></a>\n<a href=\"https://torchtable.readthedocs.io/en/master/?badge=master\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fec6274d80b5a63cb3af24a75d54d865f7116e9f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f746f7263687461626c652f62616467652f3f76657273696f6e3d6d6173746572\"></a>\n<div id=\"torchtable\">\n<h2>torchtable</h2>\n<p>Torchtable is a library for handling tabular datasets in PyTorch. It is heavily inspired by torchtext and uses a similar API but without some of the limitations (e.g. only one field per column).\nTorchtable aims to be <strong>simple to use</strong> and <strong>easily extensible</strong>.\nIt provides sensible defaults while allowing the user to define their own custom pipelines, putting all of this behind an intuitive interface.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install via pip.</p>\n<p><cite>$ pip install torchtable</cite></p>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Documentation is a work in progress, but the current docs can be read <a href=\"https://torchtable.readthedocs.io/en/master/\" rel=\"nofollow\">here</a>.\nIn addition, you can read the notebooks in the examples directory or dev_nb directory to learn more.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Torchtable uses a declarative API similar to torchtext.\nHere is an example of how you might handle an imaginary dataset where you are supposed to predict the price of some product.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">TabularDataset</span><span class=\"o\">.</span><span class=\"n\">from_csv</span><span class=\"p\">(</span><span class=\"s1\">'data/train.csv'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>    <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'seller_id'</span><span class=\"p\">:</span> <span class=\"n\">CategoricalField</span><span class=\"p\">(</span><span class=\"n\">min_freq</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>            <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">DayofWeekField</span><span class=\"p\">(),</span> <span class=\"n\">HourField</span><span class=\"p\">()],</span>\n<span class=\"o\">...</span>            <span class=\"s1\">'price'</span><span class=\"p\">:</span> <span class=\"n\">NumericalField</span><span class=\"p\">(</span><span class=\"n\">fill_missing</span><span class=\"o\">=</span><span class=\"s2\">\"median\"</span><span class=\"p\">,</span> <span class=\"n\">is_target</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>    <span class=\"p\">})</span>\n<span class=\"o\">...</span>\n</pre>\n<p>See the examples directory for more examples.</p>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>Add more models</li>\n<li>Implement default field selection</li>\n<li>Implement text field/operations</li>\n<li>Implement swap noise</li>\n<li>Implement input/output validation</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4628654, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ba54e0fb26eefd7b8d9e776f4b7fedaa", "sha256": "29b5768fb6ee3195eea3dc8e23d3b072e17fff2d69aa1e2309b8cc1ccbbfb4b1"}, "downloads": -1, "filename": "torchtable-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ba54e0fb26eefd7b8d9e776f4b7fedaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24721, "upload_time": "2018-12-23T00:47:18", "upload_time_iso_8601": "2018-12-23T00:47:18.276825Z", "url": "https://files.pythonhosted.org/packages/d7/a4/0eab2395179abce676828882466e41991de388fa9235f0795db349c8dc1a/torchtable-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b15096d94e80ea12b4b4700297ec6680", "sha256": "2cc9575905226c0ad6c701d03017402f7a7187d189b8da5023ce04f2cb1aa860"}, "downloads": -1, "filename": "torchtable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b15096d94e80ea12b4b4700297ec6680", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18032, "upload_time": "2018-12-23T00:47:20", "upload_time_iso_8601": "2018-12-23T00:47:20.454228Z", "url": "https://files.pythonhosted.org/packages/11/e7/4332b142118efb307ee91e24841f5ce781c06e6427fb6d851bc9eef2202b/torchtable-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba54e0fb26eefd7b8d9e776f4b7fedaa", "sha256": "29b5768fb6ee3195eea3dc8e23d3b072e17fff2d69aa1e2309b8cc1ccbbfb4b1"}, "downloads": -1, "filename": "torchtable-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ba54e0fb26eefd7b8d9e776f4b7fedaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24721, "upload_time": "2018-12-23T00:47:18", "upload_time_iso_8601": "2018-12-23T00:47:18.276825Z", "url": "https://files.pythonhosted.org/packages/d7/a4/0eab2395179abce676828882466e41991de388fa9235f0795db349c8dc1a/torchtable-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b15096d94e80ea12b4b4700297ec6680", "sha256": "2cc9575905226c0ad6c701d03017402f7a7187d189b8da5023ce04f2cb1aa860"}, "downloads": -1, "filename": "torchtable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b15096d94e80ea12b4b4700297ec6680", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18032, "upload_time": "2018-12-23T00:47:20", "upload_time_iso_8601": "2018-12-23T00:47:20.454228Z", "url": "https://files.pythonhosted.org/packages/11/e7/4332b142118efb307ee91e24841f5ce781c06e6427fb6d851bc9eef2202b/torchtable-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:09 2020"}