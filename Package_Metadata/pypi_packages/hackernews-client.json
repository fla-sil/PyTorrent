{"info": {"author": "samisnotinsane", "author_email": "sameen11@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# hackernews-client\n\n[![CircleCI](https://circleci.com/gh/samisnotinsane/hackernews-client/tree/master.svg?style=svg)](https://circleci.com/gh/samisnotinsane/hackernews-client/tree/master)\n[![codebeat badge](https://codebeat.co/badges/651aecbd-aba5-4631-9246-fce7bca9a382)](https://codebeat.co/projects/github-com-samisnotinsane-hackernews-client-master)\n[![Open Source Love](https://badges.frapsoft.com/os/mit/mit.svg?v=102)](https://opensource.org/licenses/mit-license.php)\n\nUse this wrapper library to download Hacker News headlines into your Python program. \n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. \n\n### Prerequisites\n\nYou will need the python-requests library so we can make HTTP calls. Install with pip:\n\n```\npip install requests\n```\n\n### Installing\n\nIn your Terminal\n\n```\ngit clone https://github.com/samisnotinsane/hackernews-client.git\ncd hackernews-client\n```\n\nRun the example script: `news.py`\n\n```\npython news.py\n```\n\nthis fetches:\n  - Best stories\n  - Search\n    - story\n    - comment\n    - poll\n    - job\n  - Most recent items (last `n` items)\n\n\n\nYou may make another copy of this script\n\n```\ncp news.py ./my_copy_news.py\npython my_copy_news.py\n```\n\nmodifying it to suit your use case.\n\n## Running the tests\n\nThis package contains tests which verifies the integrity of the internal logic.\n\n### Unit tests\n\nTo run all unit tests, make sure you're in the root directory (`hackernews-client`). Use Python's built in `unittest` library\n\n```\npython -m unittest -v\n```\n\nIf you have clone from `master` branch, these should always pass. At the time of testing, sometimes these tests failed with `SSLErrors` due to too many requests being made to the Hacker News API too quickly. Wait ~20 secs before running the unit tests again.\n\nAlternatively, it could be that a breaking change was made to the Web API which would require updating this library. Feel free to raise an [Issue](https://github.com/samisnotinsane/hackernews-client/issues) or a [Pull Request](https://github.com/samisnotinsane/hackernews-client/pulls) to remediate the problem.\n\n## Usage\n\nBegin by importing the library. This example assumes you're working within `news.py` in the root directory of the repo.\n\n```\nfrom hackernews import hn\n```\n\nThe client is then initialised in the following way\n\n```\nnews_client = hn.NewsClient()\n```\n\nIn this case, `news_client` object gives access to all available methods. The data contained in the methods and the instances returned all closely follow the [HackerNews API](https://github.com/HackerNews/API).\n\nYou may retrieve a list of best `10` stories in the following way\n\n```\nnews_client.get_best_story(fetchMax=10)\n```\n\nadjusting the value of `fetchMax` up to and including a maximum of `500`.\n\nFor completeness, full documentation with examples are provided below.\n\n## Documentation\n\n### Class: `NewsClient`\n\n- `get_item`\n\n**Parameters:**\n\n\n| Name       | Type | Required | Description                                   | Default\n| ---------- | ---- | -------- | --------------------------------------------- | -------\n| `item_id`  | int  | Yes      | unique item id of Hacker News story, comment etc | None\n\nReturns:\na list of `Item` (each of type `dict`). See class documentation for `Item` which contains a full description of each property.\n\n\n- `get_top_story`\n\n**Parameters:**\n\n| Name        | Type    | Required    | Description                             | Default\n| ----------- | ------- | ----------- | --------------------------------------- | -------\n| `fetchMax`  | int     | Yes         | Number of stories to fetch, max value = 500 | 500\n\nReturns:\na list of top stories as `Item` from the url `https://hacker-news.firebaseio.com/v0/topstories.json`\n\n- `get_ask_story`\n\n**Parameters:**\n\n| Name        | Type    | Required    | Description                             | Default\n| ----------- | ------- | ----------- | --------------------------------------- | -------\n| `fetchMax`  | int     | Yes         | Number of stories to fetch, max value = 200 | 200\n\nReturns:\na list of Ask HN stories as `Item` from the url `https://hacker-news.firebaseio.com/v0/askstories.json`\n\n- `get_new_story`\n\n**Parameters:**\n\n| Name        | Type    | Required    | Description                             | Default\n| ----------- | ------- | ----------- | --------------------------------------- | -------\n| `fetchMax`  | int     | Yes         | Number of stories to fetch, max value = 500 | 500\n\nReturns:\na list of new stories as `Item` from the url `https://hacker-news.firebaseio.com/v0/newstories.json`\n\n- `get_show_story`\n\n**Parameters:**\n\n| Name        | Type    | Required    | Description                             | Default\n| ----------- | ------- | ----------- | --------------------------------------- | -------\n| `fetchMax`  | int     | Yes         | Number of stories to fetch, max value = 200 | 200\n\nReturns:\na list of Show HN stories as `Item` from the url `https://hacker-news.firebaseio.com/v0/showstories.json`\n\n- `get_best_story`\n\n**Parameters:**\n\n| Name        | Type    | Required    | Description                             | Default\n| ----------- | ------- | ----------- | --------------------------------------- | -------\n| `fetchMax`  | int     | Yes         | Number of stories to fetch, max value = 200 | 200\n\nReturns:\na list of best stories as `Item` from the url `https://hacker-news.firebaseio.com/v0/beststories.json`\n\n- `get_job_story`\n\n**Parameters:**\n\n| Name        | Type    | Required    | Description                             | Default\n| ----------- | ------- | ----------- | --------------------------------------- | -------\n| `fetchMax`  | int     | Yes         | Number of stories to fetch, max value = 200 | 200\n\nReturns:\na list of job stories as `Item` from the url `https://hacker-news.firebaseio.com/v0/jobstories.json`\n\n- `get_max_item_id`\n\n**Parameters:** None\n\nReturns:\n`int` of the largest item id from the url: `https://hacker-news.firebaseio.com/v0/maxitem.json`\n\n- `get_item_by_id`\n\n**Parameters:**\n\n| Name  | Type | Required | Description                           | Default\n| ----- | ---- | -------- | ------------------------------------- | -------\n| `id`  | int  | Yes      | unique `Item` id of Hacker News story | None\n\nReturns:\n`Item` representing the Hacker News story with given `id` fetched\nfrom url: `https://hacker-news.firebaseio.com/v0/item/<item_id>.json`\n\n- `get_user_by_id`\n\n**Parameters:**\n\n| Name  | Type | Required | Description                           | Default\n| ----- | ---- | -------- | ------------------------------------- | -------\n| `id`  | int  | Yes      | unique `Item` id of Hacker News story | None\n\nReturns:\n`User` representing the Hacker News user with given `id` fetched\nfrom url: `https://hacker-news.firebaseio.com/v0/user/<user_id>.json`\n\n### Class: `Item`\n\nStories, comments, jobs, Ask HNs and even polls are just items. They're identified by their ids, which are unique integers.\n\nField | Description\n------|------------\nid | The item's unique id.\ndeleted | `true` if the item is deleted.\ntype | The type of item. One of \"job\", \"story\", \"comment\", \"poll\", or \"pollopt\".\nby | The username of the item's author.\ntime | Creation date of the item, in [Unix Time](http://en.wikipedia.org/wiki/Unix_time).\ntext | The comment, story or poll text. HTML.\ndead | `true` if the item is dead.\nparent | The comment's parent: either another comment or the relevant story.\npoll | The pollopt's associated poll.\nkids | list of `Item` of this item's comments, in ranked display order.\nurl | The URL of the story.\nscore | The story's score, or the votes for a pollopt.\ntitle | The title of the story, poll or job.\nparts | A list of related pollopts, in display order.\ndescendants | In the case of stories or polls, the total comment count.\n\n### Class: `User`\n\nUsers are identified by case-sensitive ids. Only users that have public activity (comments or story submissions) on the site are available through the API.\n\nField | Description\n------|------------\n**id** | The user's unique username. Case-sensitive. Required.\ndelay | Delay in minutes between a comment's creation and its visibility to other users.\n**created** | Creation date of the user, in [Unix Time](http://en.wikipedia.org/wiki/Unix_time).\n**karma** | The user's karma.\nabout | The user's optional self-description. HTML.\nsubmitted | List of the user's stories, polls and comments.\n\n## Screenshot\n\n![Hacker News Client](/screenshots/hackernews-client-screenshot.png?raw=true \"Bash shell running example.py script\")\n\n## Authors\n\n* **Sameen Islam** - [samisnotinsane](https://github.com/samisnotinsane)\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE.md file for details\n\n## Acknowledgments\n\n* Author of [haxor](https://github.com/avinassh/haxor) whose library inspired me to make my first Python library\n* Author of [python-packaging](http://veekaybee.github.io/2017/09/26/python-packaging/) whose tutorial helped me get my head around the Python import system", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/samisnotinsane/hackernews-client", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hackernews-client", "package_url": "https://pypi.org/project/hackernews-client/", "platform": "", "project_url": "https://pypi.org/project/hackernews-client/", "project_urls": {"Homepage": "https://github.com/samisnotinsane/hackernews-client"}, "release_url": "https://pypi.org/project/hackernews-client/0.1.2b1/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "An unofficial but simple Python client for Hacker News Web API.", "version": "0.1.2b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hackernews-client</h1>\n<p><a href=\"https://circleci.com/gh/samisnotinsane/hackernews-client/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/857ae68aeada4ef696e6b1513ad184cd9e0fb8bb/68747470733a2f2f636972636c6563692e636f6d2f67682f73616d69736e6f74696e73616e652f6861636b65726e6577732d636c69656e742f747265652f6d61737465722e7376673f7374796c653d737667\"></a>\n<a href=\"https://codebeat.co/projects/github-com-samisnotinsane-hackernews-client-master\" rel=\"nofollow\"><img alt=\"codebeat badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b56898491f15667c1f455089d487f8f264a5d696/68747470733a2f2f636f6465626561742e636f2f6261646765732f36353161656362642d616261352d343633312d393234362d666365376263613961333832\"></a>\n<a href=\"https://opensource.org/licenses/mit-license.php\" rel=\"nofollow\"><img alt=\"Open Source Love\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52acc3793025f88983c40263ecdd7d289735b292/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f6d69742f6d69742e7376673f763d313032\"></a></p>\n<p>Use this wrapper library to download Hacker News headlines into your Python program.</p>\n<h2>Getting Started</h2>\n<p>These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.</p>\n<h3>Prerequisites</h3>\n<p>You will need the python-requests library so we can make HTTP calls. Install with pip:</p>\n<pre><code>pip install requests\n</code></pre>\n<h3>Installing</h3>\n<p>In your Terminal</p>\n<pre><code>git clone https://github.com/samisnotinsane/hackernews-client.git\ncd hackernews-client\n</code></pre>\n<p>Run the example script: <code>news.py</code></p>\n<pre><code>python news.py\n</code></pre>\n<p>this fetches:</p>\n<ul>\n<li>Best stories</li>\n<li>Search\n<ul>\n<li>story</li>\n<li>comment</li>\n<li>poll</li>\n<li>job</li>\n</ul>\n</li>\n<li>Most recent items (last <code>n</code> items)</li>\n</ul>\n<p>You may make another copy of this script</p>\n<pre><code>cp news.py ./my_copy_news.py\npython my_copy_news.py\n</code></pre>\n<p>modifying it to suit your use case.</p>\n<h2>Running the tests</h2>\n<p>This package contains tests which verifies the integrity of the internal logic.</p>\n<h3>Unit tests</h3>\n<p>To run all unit tests, make sure you're in the root directory (<code>hackernews-client</code>). Use Python's built in <code>unittest</code> library</p>\n<pre><code>python -m unittest -v\n</code></pre>\n<p>If you have clone from <code>master</code> branch, these should always pass. At the time of testing, sometimes these tests failed with <code>SSLErrors</code> due to too many requests being made to the Hacker News API too quickly. Wait ~20 secs before running the unit tests again.</p>\n<p>Alternatively, it could be that a breaking change was made to the Web API which would require updating this library. Feel free to raise an <a href=\"https://github.com/samisnotinsane/hackernews-client/issues\" rel=\"nofollow\">Issue</a> or a <a href=\"https://github.com/samisnotinsane/hackernews-client/pulls\" rel=\"nofollow\">Pull Request</a> to remediate the problem.</p>\n<h2>Usage</h2>\n<p>Begin by importing the library. This example assumes you're working within <code>news.py</code> in the root directory of the repo.</p>\n<pre><code>from hackernews import hn\n</code></pre>\n<p>The client is then initialised in the following way</p>\n<pre><code>news_client = hn.NewsClient()\n</code></pre>\n<p>In this case, <code>news_client</code> object gives access to all available methods. The data contained in the methods and the instances returned all closely follow the <a href=\"https://github.com/HackerNews/API\" rel=\"nofollow\">HackerNews API</a>.</p>\n<p>You may retrieve a list of best <code>10</code> stories in the following way</p>\n<pre><code>news_client.get_best_story(fetchMax=10)\n</code></pre>\n<p>adjusting the value of <code>fetchMax</code> up to and including a maximum of <code>500</code>.</p>\n<p>For completeness, full documentation with examples are provided below.</p>\n<h2>Documentation</h2>\n<h3>Class: <code>NewsClient</code></h3>\n<ul>\n<li><code>get_item</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>item_id</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>unique item id of Hacker News story, comment etc</td>\n<td>None</td>\n</tr></tbody></table>\n<p>Returns:\na list of <code>Item</code> (each of type <code>dict</code>). See class documentation for <code>Item</code> which contains a full description of each property.</p>\n<ul>\n<li><code>get_top_story</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fetchMax</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>Number of stories to fetch, max value = 500</td>\n<td>500</td>\n</tr></tbody></table>\n<p>Returns:\na list of top stories as <code>Item</code> from the url <code>https://hacker-news.firebaseio.com/v0/topstories.json</code></p>\n<ul>\n<li><code>get_ask_story</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fetchMax</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>Number of stories to fetch, max value = 200</td>\n<td>200</td>\n</tr></tbody></table>\n<p>Returns:\na list of Ask HN stories as <code>Item</code> from the url <code>https://hacker-news.firebaseio.com/v0/askstories.json</code></p>\n<ul>\n<li><code>get_new_story</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fetchMax</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>Number of stories to fetch, max value = 500</td>\n<td>500</td>\n</tr></tbody></table>\n<p>Returns:\na list of new stories as <code>Item</code> from the url <code>https://hacker-news.firebaseio.com/v0/newstories.json</code></p>\n<ul>\n<li><code>get_show_story</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fetchMax</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>Number of stories to fetch, max value = 200</td>\n<td>200</td>\n</tr></tbody></table>\n<p>Returns:\na list of Show HN stories as <code>Item</code> from the url <code>https://hacker-news.firebaseio.com/v0/showstories.json</code></p>\n<ul>\n<li><code>get_best_story</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fetchMax</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>Number of stories to fetch, max value = 200</td>\n<td>200</td>\n</tr></tbody></table>\n<p>Returns:\na list of best stories as <code>Item</code> from the url <code>https://hacker-news.firebaseio.com/v0/beststories.json</code></p>\n<ul>\n<li><code>get_job_story</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fetchMax</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>Number of stories to fetch, max value = 200</td>\n<td>200</td>\n</tr></tbody></table>\n<p>Returns:\na list of job stories as <code>Item</code> from the url <code>https://hacker-news.firebaseio.com/v0/jobstories.json</code></p>\n<ul>\n<li><code>get_max_item_id</code></li>\n</ul>\n<p><strong>Parameters:</strong> None</p>\n<p>Returns:\n<code>int</code> of the largest item id from the url: <code>https://hacker-news.firebaseio.com/v0/maxitem.json</code></p>\n<ul>\n<li><code>get_item_by_id</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>unique <code>Item</code> id of Hacker News story</td>\n<td>None</td>\n</tr></tbody></table>\n<p>Returns:\n<code>Item</code> representing the Hacker News story with given <code>id</code> fetched\nfrom url: <code>https://hacker-news.firebaseio.com/v0/item/&lt;item_id&gt;.json</code></p>\n<ul>\n<li><code>get_user_by_id</code></li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>int</td>\n<td>Yes</td>\n<td>unique <code>Item</code> id of Hacker News story</td>\n<td>None</td>\n</tr></tbody></table>\n<p>Returns:\n<code>User</code> representing the Hacker News user with given <code>id</code> fetched\nfrom url: <code>https://hacker-news.firebaseio.com/v0/user/&lt;user_id&gt;.json</code></p>\n<h3>Class: <code>Item</code></h3>\n<p>Stories, comments, jobs, Ask HNs and even polls are just items. They're identified by their ids, which are unique integers.</p>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>The item's unique id.</td>\n</tr>\n<tr>\n<td>deleted</td>\n<td><code>true</code> if the item is deleted.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>The type of item. One of \"job\", \"story\", \"comment\", \"poll\", or \"pollopt\".</td>\n</tr>\n<tr>\n<td>by</td>\n<td>The username of the item's author.</td>\n</tr>\n<tr>\n<td>time</td>\n<td>Creation date of the item, in <a href=\"http://en.wikipedia.org/wiki/Unix_time\" rel=\"nofollow\">Unix Time</a>.</td>\n</tr>\n<tr>\n<td>text</td>\n<td>The comment, story or poll text. HTML.</td>\n</tr>\n<tr>\n<td>dead</td>\n<td><code>true</code> if the item is dead.</td>\n</tr>\n<tr>\n<td>parent</td>\n<td>The comment's parent: either another comment or the relevant story.</td>\n</tr>\n<tr>\n<td>poll</td>\n<td>The pollopt's associated poll.</td>\n</tr>\n<tr>\n<td>kids</td>\n<td>list of <code>Item</code> of this item's comments, in ranked display order.</td>\n</tr>\n<tr>\n<td>url</td>\n<td>The URL of the story.</td>\n</tr>\n<tr>\n<td>score</td>\n<td>The story's score, or the votes for a pollopt.</td>\n</tr>\n<tr>\n<td>title</td>\n<td>The title of the story, poll or job.</td>\n</tr>\n<tr>\n<td>parts</td>\n<td>A list of related pollopts, in display order.</td>\n</tr>\n<tr>\n<td>descendants</td>\n<td>In the case of stories or polls, the total comment count.</td>\n</tr></tbody></table>\n<h3>Class: <code>User</code></h3>\n<p>Users are identified by case-sensitive ids. Only users that have public activity (comments or story submissions) on the site are available through the API.</p>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>id</strong></td>\n<td>The user's unique username. Case-sensitive. Required.</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>Delay in minutes between a comment's creation and its visibility to other users.</td>\n</tr>\n<tr>\n<td><strong>created</strong></td>\n<td>Creation date of the user, in <a href=\"http://en.wikipedia.org/wiki/Unix_time\" rel=\"nofollow\">Unix Time</a>.</td>\n</tr>\n<tr>\n<td><strong>karma</strong></td>\n<td>The user's karma.</td>\n</tr>\n<tr>\n<td>about</td>\n<td>The user's optional self-description. HTML.</td>\n</tr>\n<tr>\n<td>submitted</td>\n<td>List of the user's stories, polls and comments.</td>\n</tr></tbody></table>\n<h2>Screenshot</h2>\n<p><img alt=\"Hacker News Client\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be95f74e3eeff6adef2991ec60975ae4b7789567/2f73637265656e73686f74732f6861636b65726e6577732d636c69656e742d73637265656e73686f742e706e673f7261773d74727565\"></p>\n<h2>Authors</h2>\n<ul>\n<li><strong>Sameen Islam</strong> - <a href=\"https://github.com/samisnotinsane\" rel=\"nofollow\">samisnotinsane</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the LICENSE.md file for details</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>Author of <a href=\"https://github.com/avinassh/haxor\" rel=\"nofollow\">haxor</a> whose library inspired me to make my first Python library</li>\n<li>Author of <a href=\"http://veekaybee.github.io/2017/09/26/python-packaging/\" rel=\"nofollow\">python-packaging</a> whose tutorial helped me get my head around the Python import system</li>\n</ul>\n\n          </div>"}, "last_serial": 5710279, "releases": {"0.1.2b1": [{"comment_text": "", "digests": {"md5": "5d70ce23b27893f8505f3508334f4adb", "sha256": "854e9a97808bdff4cd5acfbdf07644f0ddd0ba9136a521a3c42ac587fc02524d"}, "downloads": -1, "filename": "hackernews-client-0.1.2b1.tar.gz", "has_sig": false, "md5_digest": "5d70ce23b27893f8505f3508334f4adb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8080, "upload_time": "2019-08-21T15:03:14", "upload_time_iso_8601": "2019-08-21T15:03:14.521900Z", "url": "https://files.pythonhosted.org/packages/d2/c5/8cb8d095743698272937551b1bed0b79d899d8c8f9d550407e499c3d5abf/hackernews-client-0.1.2b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d70ce23b27893f8505f3508334f4adb", "sha256": "854e9a97808bdff4cd5acfbdf07644f0ddd0ba9136a521a3c42ac587fc02524d"}, "downloads": -1, "filename": "hackernews-client-0.1.2b1.tar.gz", "has_sig": false, "md5_digest": "5d70ce23b27893f8505f3508334f4adb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 8080, "upload_time": "2019-08-21T15:03:14", "upload_time_iso_8601": "2019-08-21T15:03:14.521900Z", "url": "https://files.pythonhosted.org/packages/d2/c5/8cb8d095743698272937551b1bed0b79d899d8c8f9d550407e499c3d5abf/hackernews-client-0.1.2b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:50 2020"}