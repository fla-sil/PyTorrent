{"info": {"author": "Patrick Lauber", "author_email": "digi@treepy.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# Django Smart Selects\n\n[![Build Status](https://travis-ci.org/digi604/django-smart-selects.svg?branch=master)](https://travis-ci.org/digi604/django-smart-selects)\n\n[![Coverage Status](https://coveralls.io/repos/github/digi604/django-smart-selects/badge.svg?branch=master)](https://coveralls.io/github/digi604/django-smart-selects?branch=master)\n\nThis package was forked from the official django-smart-selects repo and has all the bug fixes applied. \n\nThis package allows you to quickly filter or group \"chained\" models by adding a custom foreign key or many to many field to your models. This will use an AJAX query to load only the applicable chained objects.\n\n**Warning**: The AJAX endpoint enforces no permissions by default.  This means that **any model with a chained field will be world readable**. If you would like more control over this permission, the [`django-autocomplete-light`](https://github.com/yourlabs/django-autocomplete-light) package is a great, high-quality package that enables the same functionality with permission checks.\n\n## Chained Selects\n\nGiven the following model:\n\n```python\nclass Continent(models.Model):\n    name = models.CharField(max_length=255)\n\nclass Country(models.Model):\n    continent = models.ForeignKey(Continent)\n    name = models.CharField(max_length=255)\n\nclass Location(models.Model):\n    continent = models.ForeignKey(Continent)\n    country = models.ForeignKey(Country)\n    area = models.ForeignKey(Area)\n    city = models.CharField(max_length=50)\n    street = models.CharField(max_length=100)\n```\n\nOnce you select a continent, if you want only the countries on that continent to be available, you can use a `ChainedForeignKey` on the `Location` model:\n\n```python\nfrom smart_selects.db_fields import ChainedForeignKey\n\nclass Location(models.Model):\n    continent = models.ForeignKey(Continent)\n    country = ChainedForeignKey(\n        Country,\n        chained_field=\"continent\",\n        chained_model_field=\"continent\",\n        show_all=False,\n        auto_choose=True,\n        sort=True)\n    area = ForeignKey(Area)\n    city = models.CharField(max_length=50)\n    street = models.CharField(max_length=100)\n```\n\n### ChainedForeignKey options\n\n#### chained_field (required)\n\nThe `chained_field` indicates the field on the same model that should be chained to. In the `Continent`, `Country`, `Location` example, `chained_field` is the name of the field `continent` in model `Location`.\n\n```python\nclass Location(models.Model)\n    continent = models.ForeignKey(Continent)\n```\n\n#### chained_model_field (required)\n\nThe `chained_model_field` indicates the field of the chained model that corresponds to the model linked to by the `chained_field`. In the `Continent`, `Country`, `Location` example, `chained_model_field` is the name of field `continent` in Model `Country`.\n\n```python\nclass Country(models.Model):\n    continent = models.ForeignKey(Continent)\n```\n\n#### show_all (optional)\n\n`show_all` indicates if only the filtered results should be shown or if you also want to display the other results further down.\n\n#### auto_choose (optional)\n\n`auto_choose` indicates if auto select the choice when there is only one available choice.\n\n#### `sort` (optional)\n\n`sort` indicates if the result set should be sorted lexicographically or not. Disable if you want to use the `Model.ordering` option. Defaults to `True`.\n\n\n## Chained ManyToMany Selects\n\nThe `ChainedManyToManyField` works as you would expect:\n\n```python\nfrom smart_selects.db_fields import ChainedManyToManyField\n\nclass Publication(models.Model):\n    name = models.CharField(max_length=255)\n\nclass Writer(models.Model):\n    name = models.CharField(max_length=255)\n    publications = models.ManyToManyField('Publication', blank=True, null=True)\n\nclass Book(models.Model):\n    publication = models.ForeignKey(Publication)\n    writer = ChainedManyToManyField(\n        Writer,\n        chained_field=\"publication\",\n        chained_model_field=\"publications\")\n    name = models.CharField(max_length=255)\n```\n\n\n### Using chained fields in the admin\n\nDo **not** specify the field in the `ModelAdmin` `filter_horizontal` list. Instead, simply pass `horizontal=True` to the `ChainedManyToManyField`:\n\n```python\nfrom smart_selects.db_fields import ChainedManyToManyField\n\nclass Publication(models.Model):\n    name = models.CharField(max_length=255)\n\nclass Writer(models.Model):\n    name = models.CharField(max_length=255)\n    publications = models.ManyToManyField('Publication', blank=True, null=True)\n\nclass Book(models.Model):\n    publication = models.ForeignKey(Publication)\n    writer = ChainedManyToManyField(\n        Writer,\n        horizontal=True,\n        verbose_name='writer',\n        chained_field=\"publication\",\n        chained_model_field=\"publications\")\n    name = models.CharField(max_length=255)\n```\n\n\n### ChainedManyToManyField options\n\n#### `chained_field` (required)\n\nThe `chained_field` indicates the field on the same model that should be chained to. In the `Publication`, `Writer`, `Book` example, `chained_field` is the name of the field `publication` in model `Book`.\n\n```python\nclass Book(models.Model):\n    publication = models.ForeignKey(Publication)\n```\n\n#### `chained_model_field` (required)\n\nThe `chained_model_field` indicates the field of the chained model that corresponds to the model linked to by the `chained_field`. In the `Publication`, `Writer`, `Book` example, `chained_model_field` is the name of field `publications` in `Writer` model.\n\n```python\nclass Writer(models.Model):\n    publications = models.ManyToManyField('Publication', blank=True, null=True)\n```\n\n#### `auto_choose` (optional)\n\n`auto_choose` indicates if auto select the choice when there is only one available choice.\n\n#### `horizontal` (optional)\n\nThis option will mixin Django's `FilteredSelectMultiple` to work in the Django admin as you expect\n\n\n## Grouped Selects\n\nIf you have the following model:\n\n```python\nclass Country(models.Model):\n    continent = models.ForeignKey(Continent)\n\nclass Location(models.Model):\n    continent = models.ForeignKey(Continent)\n    country = models.ForeignKey(Country)\n```\n\nAnd you want to group countries by their continent in the HTML select list, you can use a `GroupedForeignKey`:\n\n```python\nfrom smart_selects.db_fields import GroupedForeignKey\n\nclass Location(models.Model):\n    continent = models.ForeignKey(Continent)\n    country = GroupedForeignKey(Country, \"continent\")\n```\n\n\n## Installation\n\n1. Add `smart_selects` to your `INSTALLED_APPS`\n2. Add the `smart_selects` urls into your project's `urls.py`. This is needed for the `Chained Selects` and `Chained ManyToMany Selects`. For example:\n\n    ```python\n    urlpatterns = patterns('',\n        url(r'^admin/', include(admin.site.urls)),\n        url(r'^chaining/', include('smart_selects.urls')),\n    )\n    ```\n\n3. You will also need to include jQuery in every page that includes a field from `smart_selects`, or set `JQUERY_URL = True` in your project's `settings.py`.\n\n\n## Settings\n\n`JQUERY_URL`\n:   jQuery 2.2.0 is loaded from Google's CDN if this is set to `True`. If you would prefer to\n    use a different version put the full URL here. Set `JQUERY_URL = False`\n    to disable loading jQuery altogether.\n\n`USE_DJANGO_JQUERY`\n:   By default, `smart_selects` loads jQuery from Google's CDN. However, it can use jQuery from Django's\n    admin area. Set `USE_DJANGO_JQUERY = True` to enable this behaviour.\n\n\n## TODO\n\n* Add permission checks to enable users to restrict who can use the chained fields.\n* Add a `ChainedCheckboxSelectMultiple` widget and adjust `chainedm2m.js` and `chainedfk.js` to build checkboxes in that case\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/map711/django-smart-selects", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-smart-selects-711", "package_url": "https://pypi.org/project/django-smart-selects-711/", "platform": "", "project_url": "https://pypi.org/project/django-smart-selects-711/", "project_urls": {"Homepage": "https://github.com/map711/django-smart-selects"}, "release_url": "https://pypi.org/project/django-smart-selects-711/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Django application to handle chained model fields.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Smart Selects</h1>\n<p><a href=\"https://travis-ci.org/digi604/django-smart-selects\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b7cd4d7dceb82b87f2f5c935ac1718f1357c791/68747470733a2f2f7472617669732d63692e6f72672f646967693630342f646a616e676f2d736d6172742d73656c656374732e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><a href=\"https://coveralls.io/github/digi604/django-smart-selects?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70bd4fdd288f14bd2d0b877c5268a57f7724f555/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f646967693630342f646a616e676f2d736d6172742d73656c656374732f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This package was forked from the official django-smart-selects repo and has all the bug fixes applied.</p>\n<p>This package allows you to quickly filter or group \"chained\" models by adding a custom foreign key or many to many field to your models. This will use an AJAX query to load only the applicable chained objects.</p>\n<p><strong>Warning</strong>: The AJAX endpoint enforces no permissions by default.  This means that <strong>any model with a chained field will be world readable</strong>. If you would like more control over this permission, the <a href=\"https://github.com/yourlabs/django-autocomplete-light\" rel=\"nofollow\"><code>django-autocomplete-light</code></a> package is a great, high-quality package that enables the same functionality with permission checks.</p>\n<h2>Chained Selects</h2>\n<p>Given the following model:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Continent</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Country</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Country</span><span class=\"p\">)</span>\n    <span class=\"n\">area</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Area</span><span class=\"p\">)</span>\n    <span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">street</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<p>Once you select a continent, if you want only the countries on that continent to be available, you can use a <code>ChainedForeignKey</code> on the <code>Location</code> model:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smart_selects.db_fields</span> <span class=\"kn\">import</span> <span class=\"n\">ChainedForeignKey</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">ChainedForeignKey</span><span class=\"p\">(</span>\n        <span class=\"n\">Country</span><span class=\"p\">,</span>\n        <span class=\"n\">chained_field</span><span class=\"o\">=</span><span class=\"s2\">\"continent\"</span><span class=\"p\">,</span>\n        <span class=\"n\">chained_model_field</span><span class=\"o\">=</span><span class=\"s2\">\"continent\"</span><span class=\"p\">,</span>\n        <span class=\"n\">show_all</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">auto_choose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">area</span> <span class=\"o\">=</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Area</span><span class=\"p\">)</span>\n    <span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">street</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<h3>ChainedForeignKey options</h3>\n<h4>chained_field (required)</h4>\n<p>The <code>chained_field</code> indicates the field on the same model that should be chained to. In the <code>Continent</code>, <code>Country</code>, <code>Location</code> example, <code>chained_field</code> is the name of the field <code>continent</code> in model <code>Location</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">)</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n</pre>\n<h4>chained_model_field (required)</h4>\n<p>The <code>chained_model_field</code> indicates the field of the chained model that corresponds to the model linked to by the <code>chained_field</code>. In the <code>Continent</code>, <code>Country</code>, <code>Location</code> example, <code>chained_model_field</code> is the name of field <code>continent</code> in Model <code>Country</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Country</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n</pre>\n<h4>show_all (optional)</h4>\n<p><code>show_all</code> indicates if only the filtered results should be shown or if you also want to display the other results further down.</p>\n<h4>auto_choose (optional)</h4>\n<p><code>auto_choose</code> indicates if auto select the choice when there is only one available choice.</p>\n<h4><code>sort</code> (optional)</h4>\n<p><code>sort</code> indicates if the result set should be sorted lexicographically or not. Disable if you want to use the <code>Model.ordering</code> option. Defaults to <code>True</code>.</p>\n<h2>Chained ManyToMany Selects</h2>\n<p>The <code>ChainedManyToManyField</code> works as you would expect:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smart_selects.db_fields</span> <span class=\"kn\">import</span> <span class=\"n\">ChainedManyToManyField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Publication</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Writer</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">publications</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"s1\">'Publication'</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">publication</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Publication</span><span class=\"p\">)</span>\n    <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">ChainedManyToManyField</span><span class=\"p\">(</span>\n        <span class=\"n\">Writer</span><span class=\"p\">,</span>\n        <span class=\"n\">chained_field</span><span class=\"o\">=</span><span class=\"s2\">\"publication\"</span><span class=\"p\">,</span>\n        <span class=\"n\">chained_model_field</span><span class=\"o\">=</span><span class=\"s2\">\"publications\"</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n</pre>\n<h3>Using chained fields in the admin</h3>\n<p>Do <strong>not</strong> specify the field in the <code>ModelAdmin</code> <code>filter_horizontal</code> list. Instead, simply pass <code>horizontal=True</code> to the <code>ChainedManyToManyField</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smart_selects.db_fields</span> <span class=\"kn\">import</span> <span class=\"n\">ChainedManyToManyField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Publication</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Writer</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">publications</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"s1\">'Publication'</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">publication</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Publication</span><span class=\"p\">)</span>\n    <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">ChainedManyToManyField</span><span class=\"p\">(</span>\n        <span class=\"n\">Writer</span><span class=\"p\">,</span>\n        <span class=\"n\">horizontal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"s1\">'writer'</span><span class=\"p\">,</span>\n        <span class=\"n\">chained_field</span><span class=\"o\">=</span><span class=\"s2\">\"publication\"</span><span class=\"p\">,</span>\n        <span class=\"n\">chained_model_field</span><span class=\"o\">=</span><span class=\"s2\">\"publications\"</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n</pre>\n<h3>ChainedManyToManyField options</h3>\n<h4><code>chained_field</code> (required)</h4>\n<p>The <code>chained_field</code> indicates the field on the same model that should be chained to. In the <code>Publication</code>, <code>Writer</code>, <code>Book</code> example, <code>chained_field</code> is the name of the field <code>publication</code> in model <code>Book</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">publication</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Publication</span><span class=\"p\">)</span>\n</pre>\n<h4><code>chained_model_field</code> (required)</h4>\n<p>The <code>chained_model_field</code> indicates the field of the chained model that corresponds to the model linked to by the <code>chained_field</code>. In the <code>Publication</code>, <code>Writer</code>, <code>Book</code> example, <code>chained_model_field</code> is the name of field <code>publications</code> in <code>Writer</code> model.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Writer</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">publications</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"s1\">'Publication'</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h4><code>auto_choose</code> (optional)</h4>\n<p><code>auto_choose</code> indicates if auto select the choice when there is only one available choice.</p>\n<h4><code>horizontal</code> (optional)</h4>\n<p>This option will mixin Django's <code>FilteredSelectMultiple</code> to work in the Django admin as you expect</p>\n<h2>Grouped Selects</h2>\n<p>If you have the following model:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Country</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Country</span><span class=\"p\">)</span>\n</pre>\n<p>And you want to group countries by their continent in the HTML select list, you can use a <code>GroupedForeignKey</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smart_selects.db_fields</span> <span class=\"kn\">import</span> <span class=\"n\">GroupedForeignKey</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">continent</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Continent</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">GroupedForeignKey</span><span class=\"p\">(</span><span class=\"n\">Country</span><span class=\"p\">,</span> <span class=\"s2\">\"continent\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<ol>\n<li>\n<p>Add <code>smart_selects</code> to your <code>INSTALLED_APPS</code></p>\n</li>\n<li>\n<p>Add the <code>smart_selects</code> urls into your project's <code>urls.py</code>. This is needed for the <code>Chained Selects</code> and <code>Chained ManyToMany Selects</code>. For example:</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^admin/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">)),</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^chaining/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'smart_selects.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>You will also need to include jQuery in every page that includes a field from <code>smart_selects</code>, or set <code>JQUERY_URL = True</code> in your project's <code>settings.py</code>.</p>\n</li>\n</ol>\n<h2>Settings</h2>\n<p><code>JQUERY_URL</code>\n:   jQuery 2.2.0 is loaded from Google's CDN if this is set to <code>True</code>. If you would prefer to\nuse a different version put the full URL here. Set <code>JQUERY_URL = False</code>\nto disable loading jQuery altogether.</p>\n<p><code>USE_DJANGO_JQUERY</code>\n:   By default, <code>smart_selects</code> loads jQuery from Google's CDN. However, it can use jQuery from Django's\nadmin area. Set <code>USE_DJANGO_JQUERY = True</code> to enable this behaviour.</p>\n<h2>TODO</h2>\n<ul>\n<li>Add permission checks to enable users to restrict who can use the chained fields.</li>\n<li>Add a <code>ChainedCheckboxSelectMultiple</code> widget and adjust <code>chainedm2m.js</code> and <code>chainedfk.js</code> to build checkboxes in that case</li>\n</ul>\n\n          </div>"}, "last_serial": 4363145, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "12198949aa8c9c0acb0b32c39c8d99d9", "sha256": "75919f30e830da24f3d22d97672ed80673757d6ba5e3cc30c830a5a8cfaa0fd5"}, "downloads": -1, "filename": "django_smart_selects_711-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "12198949aa8c9c0acb0b32c39c8d99d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32280, "upload_time": "2018-10-11T07:16:19", "upload_time_iso_8601": "2018-10-11T07:16:19.287261Z", "url": "https://files.pythonhosted.org/packages/84/8f/87564f6a3872e0f39573873febaae526e86dd1c9fd80c4d360c6c35782f9/django_smart_selects_711-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38f6d775be46305c5481ff6e36738e0a", "sha256": "2e280d7fe8f6f252b002137b438cf102025cfd5599ebd79ba040cffae8b9ab0c"}, "downloads": -1, "filename": "django-smart-selects-711-1.0.0.tar.gz", "has_sig": false, "md5_digest": "38f6d775be46305c5481ff6e36738e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23598, "upload_time": "2018-10-11T07:16:21", "upload_time_iso_8601": "2018-10-11T07:16:21.212397Z", "url": "https://files.pythonhosted.org/packages/fb/49/8ca62e7c36e7d436800a444624bc931d9944449eb49365737d2288593f83/django-smart-selects-711-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12198949aa8c9c0acb0b32c39c8d99d9", "sha256": "75919f30e830da24f3d22d97672ed80673757d6ba5e3cc30c830a5a8cfaa0fd5"}, "downloads": -1, "filename": "django_smart_selects_711-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "12198949aa8c9c0acb0b32c39c8d99d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32280, "upload_time": "2018-10-11T07:16:19", "upload_time_iso_8601": "2018-10-11T07:16:19.287261Z", "url": "https://files.pythonhosted.org/packages/84/8f/87564f6a3872e0f39573873febaae526e86dd1c9fd80c4d360c6c35782f9/django_smart_selects_711-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38f6d775be46305c5481ff6e36738e0a", "sha256": "2e280d7fe8f6f252b002137b438cf102025cfd5599ebd79ba040cffae8b9ab0c"}, "downloads": -1, "filename": "django-smart-selects-711-1.0.0.tar.gz", "has_sig": false, "md5_digest": "38f6d775be46305c5481ff6e36738e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23598, "upload_time": "2018-10-11T07:16:21", "upload_time_iso_8601": "2018-10-11T07:16:21.212397Z", "url": "https://files.pythonhosted.org/packages/fb/49/8ca62e7c36e7d436800a444624bc931d9944449eb49365737d2288593f83/django-smart-selects-711-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:10 2020"}