{"info": {"author": "Henri Bai", "author_email": "hbai@yelp.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy"], "description": "=======================================================\npy_swf\n=======================================================\n\n.. image:: https://travis-ci.org/Yelp/pyswf.svg?branch=master\n    :target: https://travis-ci.org/Yelp/pyswf\n\n.. image:: https://coveralls.io/repos/github/Yelp/pyswf/badge.svg?branch=master\n    :target: https://coveralls.io/github/Yelp/pyswf?branch=master\n\n.. image:: https://readthedocs.org/projects/py-swf/badge/?version=latest\n    :target: http://py-swf.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/pypi/v/py-swf.svg\n    :target: https://pypi.python.org/pypi/py-swf/\n\npy_swf is a library that provides a pythonic way to interact with the boto3 SWF client. It provides a thin client above boto3 and tries to provide the same API as boto3's SWF client. This library tries to group the API calls into SWF's framework of deciders, activity runners, and a client that can initiate and terminate workflows. More information on inputs to boto3 can be found in the boto3 :class:`~SWF.Client` class.\n\nThe library provides 4 clients: \n - A client that allows starting and force-termination of workflows.\n - A client that can poll for decision tasks and respond to decision tasks.\n - A client that can poll for activity tasks and respond to activity tasks.\n - A client that can perform registration of workflows in SWF.\n\nConsumers of this library are expected to write their own daemons that enact business logic.\n\nExample daemon that listens on decision tasks\n\n.. code-block:: python\n\n        import boto3\n        from py_swf.config_definitions import DecisionConfig\n        from py_swf.clients.decision import DecisionClient\n\n        boto_client =  boto3.Session(...).client('swf')\n        decision_config = DecisionConfig(...)\n\n        client = DecisionClient(decision_config, boto_client)\n\n        while True:\n                task = client.poll()\n\n                ... = perform_decision_task(task)\n\n                client.finish_decision_with_activity(\n                        task.task_token,\n                        ...\n                )\n\nThe heart of the daemon is the :class:`~py_swf.clients.decision.DecisionClient`. You must provide a valid bare boto3 client, and :class:`~py_swf.config_definitions.DecisionConfig` which represents common SWF inputs, such as domain, and some timeouts. \n\nLikewise, you must implement an activity runner:\n\n.. code-block:: python\n\n        import boto3\n        from py_swf.config_definitions import ActivityTaskConfig\n        from py_swf.clients.activity_task import ActivityTaskClient\n\n        boto_client =  boto3.Session(...).client('swf')\n        activity_task_config = ActivityTaskConfig(...)\n\n        client = ActivityTaskClient(decision_config, boto_client)\n\n        while True:\n                task = client.poll()\n\n                result = perform_activity_task(task.input)\n\n                client.finish(\n                        task_token=task.task_token,\n                        result=result,\n                )\n\nActivity task runners are very similar to deciders. However, they don't have any information of the workflow, and only perform one task given an input and responds with an output.\n\n\n\nDocumentation\n-------------\n\nThe full documentation is at http://py-swf.readthedocs.io/en/latest/\n\n\n\nHistory\n-------\n\n1.3.0 (2016-12-12)\n++++++++++++++++++\n\n* WorkflowClient now supports count open or closed workflows by filter. Filter includes start time, close time, workflow type, tag, workflow id and close status.\n\n1.1.0 (2016-10-03)\n++++++++++++++++++\n\n* Update botocore version to 1.4.46\n\n1.0.0 (2016-09-09)\n++++++++++++++++++\n\n* Initial release of py_swf\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://py-swf.readthedocs.io/en/latest/", "keywords": "py_swf,swf,amazon,workflow", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-swf", "package_url": "https://pypi.org/project/py-swf/", "platform": "", "project_url": "https://pypi.org/project/py-swf/", "project_urls": {"Homepage": "http://py-swf.readthedocs.io/en/latest/"}, "release_url": "https://pypi.org/project/py-swf/1.3.0/", "requires_dist": ["boto3", "botocore (>=1.3.24)"], "requires_python": "", "summary": "A SWF client library that makes things easy for building workflow logic", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =======================================================<br>py_swf<br>=======================================================<br><br>.. image:: https://travis-ci.org/Yelp/pyswf.svg?branch=master<br>    :target: https://travis-ci.org/Yelp/pyswf<br><br>.. image:: https://coveralls.io/repos/github/Yelp/pyswf/badge.svg?branch=master<br>    :target: https://coveralls.io/github/Yelp/pyswf?branch=master<br><br>.. image:: https://readthedocs.org/projects/py-swf/badge/?version=latest<br>    :target: http://py-swf.readthedocs.io/en/latest/?badge=latest<br>    :alt: Documentation Status<br><br>.. image:: https://img.shields.io/pypi/v/py-swf.svg<br>    :target: https://pypi.python.org/pypi/py-swf/<br><br>py_swf is a library that provides a pythonic way to interact with the boto3 SWF client. It provides a thin client above boto3 and tries to provide the same API as boto3's SWF client. This library tries to group the API calls into SWF's framework of deciders, activity runners, and a client that can initiate and terminate workflows. More information on inputs to boto3 can be found in the boto3 :class:`~SWF.Client` class.<br><br>The library provides 4 clients: <br> - A client that allows starting and force-termination of workflows.<br> - A client that can poll for decision tasks and respond to decision tasks.<br> - A client that can poll for activity tasks and respond to activity tasks.<br> - A client that can perform registration of workflows in SWF.<br><br>Consumers of this library are expected to write their own daemons that enact business logic.<br><br>Example daemon that listens on decision tasks<br><br>.. code-block:: python<br><br>        import boto3<br>        from py_swf.config_definitions import DecisionConfig<br>        from py_swf.clients.decision import DecisionClient<br><br>        boto_client =  boto3.Session(...).client('swf')<br>        decision_config = DecisionConfig(...)<br><br>        client = DecisionClient(decision_config, boto_client)<br><br>        while True:<br>                task = client.poll()<br><br>                ... = perform_decision_task(task)<br><br>                client.finish_decision_with_activity(<br>                        task.task_token,<br>                        ...<br>                )<br><br>The heart of the daemon is the :class:`~py_swf.clients.decision.DecisionClient`. You must provide a valid bare boto3 client, and :class:`~py_swf.config_definitions.DecisionConfig` which represents common SWF inputs, such as domain, and some timeouts. <br><br>Likewise, you must implement an activity runner:<br><br>.. code-block:: python<br><br>        import boto3<br>        from py_swf.config_definitions import ActivityTaskConfig<br>        from py_swf.clients.activity_task import ActivityTaskClient<br><br>        boto_client =  boto3.Session(...).client('swf')<br>        activity_task_config = ActivityTaskConfig(...)<br><br>        client = ActivityTaskClient(decision_config, boto_client)<br><br>        while True:<br>                task = client.poll()<br><br>                result = perform_activity_task(task.input)<br><br>                client.finish(<br>                        task_token=task.task_token,<br>                        result=result,<br>                )<br><br>Activity task runners are very similar to deciders. However, they don't have any information of the workflow, and only perform one task given an input and responds with an output.<br><br><br><br>Documentation<br>-------------<br><br>The full documentation is at http://py-swf.readthedocs.io/en/latest/<br><br><br><br>History<br>-------<br><br>1.3.0 (2016-12-12)<br>++++++++++++++++++<br><br>* WorkflowClient now supports count open or closed workflows by filter. Filter includes start time, close time, workflow type, tag, workflow id and close status.<br><br>1.1.0 (2016-10-03)<br>++++++++++++++++++<br><br>* Update botocore version to 1.4.46<br><br>1.0.0 (2016-09-09)<br>++++++++++++++++++<br><br>* Initial release of py_swf<br><br><br>\n          </div>"}, "last_serial": 2519883, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d50c548a9cc0d89773a34cad0917a9b0", "sha256": "c0e3dfd158edb670ec54121d94572e066c51f58eeab47a4b36729fbb0aad0f30"}, "downloads": -1, "filename": "py_swf-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d50c548a9cc0d89773a34cad0917a9b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20690, "upload_time": "2016-09-16T23:54:40", "upload_time_iso_8601": "2016-09-16T23:54:40.894596Z", "url": "https://files.pythonhosted.org/packages/e9/bf/a93e8d712c39858120a5874d33b05a700792dfff7b83d3bb97a0692814cd/py_swf-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f232b04f0be3619aa5d72524749a76c5", "sha256": "1f638844214abe3f71e454f6769748670bc23b139e8e60cc1ba0243029acabdb"}, "downloads": -1, "filename": "py-swf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f232b04f0be3619aa5d72524749a76c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9224, "upload_time": "2016-09-16T23:54:43", "upload_time_iso_8601": "2016-09-16T23:54:43.017611Z", "url": "https://files.pythonhosted.org/packages/27/75/c1fccec93d8a4aed804172eb92e51328651df58363008f8292572d5dcf8f/py-swf-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "009b1848258f374afbf30d3d4e584e02", "sha256": "8b440fa48ba224019717cfb8de443b4437a11f340a4198f3da2fd540ec9d19b5"}, "downloads": -1, "filename": "py_swf-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "009b1848258f374afbf30d3d4e584e02", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12724, "upload_time": "2016-10-05T00:04:43", "upload_time_iso_8601": "2016-10-05T00:04:43.100340Z", "url": "https://files.pythonhosted.org/packages/52/a4/d6d40157ff387fedb8aae345f63bd173ac855d6cc2ee37fc75a349a55abd/py_swf-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a8617cf246bd5225a245b66f360e156", "sha256": "cf7bf56adbb13fb50b6b4a3172381deb8f4791e2ce9996977a3017d70eb72730"}, "downloads": -1, "filename": "py-swf-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0a8617cf246bd5225a245b66f360e156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9351, "upload_time": "2016-10-05T00:04:46", "upload_time_iso_8601": "2016-10-05T00:04:46.082633Z", "url": "https://files.pythonhosted.org/packages/c9/b3/d4019a3c954f9b420072ad020da835d25e075324382f9d61edae509d9f0e/py-swf-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "907be5613ec3b6da68c44c44d5e76b3b", "sha256": "01e5e70def0766912b96c085dcfd7d45506ed7ecc77339b45205edc271f69a3d"}, "downloads": -1, "filename": "py_swf-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "907be5613ec3b6da68c44c44d5e76b3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12719, "upload_time": "2016-10-19T20:06:03", "upload_time_iso_8601": "2016-10-19T20:06:03.975752Z", "url": "https://files.pythonhosted.org/packages/71/44/91334e4cda81163faed9080fbcb9786eff6c7ed885e384ea0b865232a524/py_swf-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44e0e84794a327b3c25893110fe32f8f", "sha256": "0b389ecc5ca52e2b1e339c0818730a66570a315fe93b7a9a4943415050c3d47d"}, "downloads": -1, "filename": "py-swf-1.2.0.tar.gz", "has_sig": false, "md5_digest": "44e0e84794a327b3c25893110fe32f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9348, "upload_time": "2016-10-19T20:06:05", "upload_time_iso_8601": "2016-10-19T20:06:05.809035Z", "url": "https://files.pythonhosted.org/packages/bc/cf/7a894d0e067b7a6953404dd4bf4407ea0f3e159e9e49272ccc87dad31bd9/py-swf-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "f2b274fed799599d8c4a5f1af3e769f0", "sha256": "f91bbc4bead0392b7e4e9eb9eef495a55b06c90dcba33990cde04456720c1072"}, "downloads": -1, "filename": "py_swf-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f2b274fed799599d8c4a5f1af3e769f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14217, "upload_time": "2016-12-14T21:24:06", "upload_time_iso_8601": "2016-12-14T21:24:06.505813Z", "url": "https://files.pythonhosted.org/packages/e3/cf/aad367ed3c0c5de18eba8a75c2c66d70b6e0e0a00c96bc59da9174ef901b/py_swf-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbb7efd65ad461a1793837e6c461eec3", "sha256": "210a9879c268917ecc2431786790319c51875fba00652555ec9249e31690d48c"}, "downloads": -1, "filename": "py-swf-1.3.0.tar.gz", "has_sig": false, "md5_digest": "cbb7efd65ad461a1793837e6c461eec3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10687, "upload_time": "2016-12-14T21:24:09", "upload_time_iso_8601": "2016-12-14T21:24:09.055049Z", "url": "https://files.pythonhosted.org/packages/a0/58/2807b5bc6801b6b7c7cdfc2846e376cae67ab2649186c3eebb9bcbb704e6/py-swf-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f2b274fed799599d8c4a5f1af3e769f0", "sha256": "f91bbc4bead0392b7e4e9eb9eef495a55b06c90dcba33990cde04456720c1072"}, "downloads": -1, "filename": "py_swf-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f2b274fed799599d8c4a5f1af3e769f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14217, "upload_time": "2016-12-14T21:24:06", "upload_time_iso_8601": "2016-12-14T21:24:06.505813Z", "url": "https://files.pythonhosted.org/packages/e3/cf/aad367ed3c0c5de18eba8a75c2c66d70b6e0e0a00c96bc59da9174ef901b/py_swf-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbb7efd65ad461a1793837e6c461eec3", "sha256": "210a9879c268917ecc2431786790319c51875fba00652555ec9249e31690d48c"}, "downloads": -1, "filename": "py-swf-1.3.0.tar.gz", "has_sig": false, "md5_digest": "cbb7efd65ad461a1793837e6c461eec3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10687, "upload_time": "2016-12-14T21:24:09", "upload_time_iso_8601": "2016-12-14T21:24:09.055049Z", "url": "https://files.pythonhosted.org/packages/a0/58/2807b5bc6801b6b7c7cdfc2846e376cae67ab2649186c3eebb9bcbb704e6/py-swf-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:47 2020"}