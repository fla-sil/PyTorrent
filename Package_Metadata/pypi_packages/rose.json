{"info": {"author": "Daniel Lindsley", "author_email": "daniel@toastdriven.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "====\nrose\n====\n\n\"\"\"A version by any other name would be just as sweet.\"\"\"\n\nA small library for keeping your version up-to-date easily & everywhere.\n\nThe pain of having to update your ``setup.py``, your Sphinx ``conf.py``, your\n``__init__.py`` & everything else on every release of your Python package sucks.\nMake your life easier (& very semver_!)\n\n.. _semver: http://semver.org/\n\nBy putting your version number in a top-level VERSION file & using this library,\nyou can cut duplication & tedious manual work **without** having to lean on\ncrazy import hacks.\n\nInspired by crazy discussion with George Hickman (ghickman) at PyCon 2013.\n\n\nRequirements\n============\n\n* Python 2.5+\n\n\nUsage\n=====\n\nTo start, first install ``rose`` (see below). Then, push your version\nnumber into it's own file (typically called ``VERSION``)::\n\n    $ echo '1.0.0-beta' > VERSION\n\nUpdate your ``setup.py`` to look like::\n\n    # ...\n\n    import rose\n\n    setup(\n        name='your_package_name_here',\n        # UPDATE THIS LINE!\n        version=rose.load_version('VERSION'),\n        # The usual follows...\n\nThen update your ``__init__.py``::\n\n    # Whatever is there, then...\n\n    import os\n    import rose\n\n    # If you don't care about being cross-platform, you can just pass a simple\n    # path instead.\n    VERSION_FILE = os.path.join(os.path.dirname('VERSION'))\n    __version__ = rose.build_version('your_package_name_here', rose.load_version(VERSION_FILE))\n\nAnd if you're documenting with Sphinx, you can update your ``conf.py`` with::\n\n    # ADD THIS!\n    import rose\n    RELEASE_VERSION = rose.load_version('../VERSION')\n    SHORT_VERSION = RELEASE_VERSION.split('-')[0]\n\n    # The version info for the project you're documenting, acts as replacement for\n    # |version| and |release|, also used in various other places throughout the\n    # built documents.\n    #\n    # The short X.Y version.\n    version = SHORT_VERSION\n    # The full version, including alpha/beta/rc tags.\n    release = RELEASE_VERSION\n\n\nInstallation\n============\n\nUsing ``pip``, simply run::\n\n    pip install rose\n\n\nLicense\n=======\n\nNew BSD\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/toastdriven/rose", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "rose", "package_url": "https://pypi.org/project/rose/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rose/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/toastdriven/rose"}, "release_url": "https://pypi.org/project/rose/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A small library for keeping your version up-to-date easily & everywhere.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u201c\u201d\u201dA version by any other name would be just as sweet.\u201d\u201d\u201d</p>\n<p>A small library for keeping your version up-to-date easily &amp; everywhere.</p>\n<p>The pain of having to update your <tt>setup.py</tt>, your Sphinx <tt>conf.py</tt>, your\n<tt>__init__.py</tt> &amp; everything else on every release of your Python package sucks.\nMake your life easier (&amp; very <a href=\"http://semver.org/\" rel=\"nofollow\">semver</a>!)</p>\n<p>By putting your version number in a top-level VERSION file &amp; using this library,\nyou can cut duplication &amp; tedious manual work <strong>without</strong> having to lean on\ncrazy import hacks.</p>\n<p>Inspired by crazy discussion with George Hickman (ghickman) at PyCon 2013.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.5+</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To start, first install <tt>rose</tt> (see below). Then, push your version\nnumber into it\u2019s own file (typically called <tt>VERSION</tt>):</p>\n<pre>$ echo '1.0.0-beta' &gt; VERSION\n</pre>\n<p>Update your <tt>setup.py</tt> to look like:</p>\n<pre># ...\n\nimport rose\n\nsetup(\n    name='your_package_name_here',\n    # UPDATE THIS LINE!\n    version=rose.load_version('VERSION'),\n    # The usual follows...\n</pre>\n<p>Then update your <tt>__init__.py</tt>:</p>\n<pre># Whatever is there, then...\n\nimport os\nimport rose\n\n# If you don't care about being cross-platform, you can just pass a simple\n# path instead.\nVERSION_FILE = os.path.join(os.path.dirname('VERSION'))\n__version__ = rose.build_version('your_package_name_here', rose.load_version(VERSION_FILE))\n</pre>\n<p>And if you\u2019re documenting with Sphinx, you can update your <tt>conf.py</tt> with:</p>\n<pre># ADD THIS!\nimport rose\nRELEASE_VERSION = rose.load_version('../VERSION')\nSHORT_VERSION = RELEASE_VERSION.split('-')[0]\n\n# The version info for the project you're documenting, acts as replacement for\n# |version| and |release|, also used in various other places throughout the\n# built documents.\n#\n# The short X.Y version.\nversion = SHORT_VERSION\n# The full version, including alpha/beta/rc tags.\nrelease = RELEASE_VERSION\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using <tt>pip</tt>, simply run:</p>\n<pre>pip install rose\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>New BSD</p>\n</div>\n\n          </div>"}, "last_serial": 635642, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "de62849906d1d2c6b16b9c36f3d01ee4", "sha256": "52b532a79051c4abeaf8cc8b0248800dbbd7ceeddf91ee00e2a096f6f78a7d6b"}, "downloads": -1, "filename": "rose-1.0.0.tar.gz", "has_sig": false, "md5_digest": "de62849906d1d2c6b16b9c36f3d01ee4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3566, "upload_time": "2013-03-18T22:42:34", "upload_time_iso_8601": "2013-03-18T22:42:34.952973Z", "url": "https://files.pythonhosted.org/packages/0f/62/39518437e7ef4e4451f39640ee4f68b57551cd0cb36d3ce3c5d2db6e3282/rose-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de62849906d1d2c6b16b9c36f3d01ee4", "sha256": "52b532a79051c4abeaf8cc8b0248800dbbd7ceeddf91ee00e2a096f6f78a7d6b"}, "downloads": -1, "filename": "rose-1.0.0.tar.gz", "has_sig": false, "md5_digest": "de62849906d1d2c6b16b9c36f3d01ee4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3566, "upload_time": "2013-03-18T22:42:34", "upload_time_iso_8601": "2013-03-18T22:42:34.952973Z", "url": "https://files.pythonhosted.org/packages/0f/62/39518437e7ef4e4451f39640ee4f68b57551cd0cb36d3ce3c5d2db6e3282/rose-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:16 2020"}