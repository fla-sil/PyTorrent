{"info": {"author": "Ilya Baryshev", "author_email": "baryshev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Django 503\n==========\n\nAn app to show 503 error page, while your django site is on maintenance.\n\nSometimes you just need to temporarily stop your site to do some maintenance,\nmaybe to run migrations, update packages, or something like that. Quick and easy solution is to set up\na 503 error page for all requests. It should show human-friendly text for your site visitors,\nsaying that site will be back online very soon, while you're working on it at the moment.\nAfter maintenance is over you can promptly turn 503 error page off.\n\n``503 Service Unavailable`` is a valid http response:\n\n    The server is currently unable to handle the request due to a temporary overloading or maintenance of the server.\n    The implication is that this is a temporary condition which will be alleviated after some delay.\n\nIt works well with search engine crawlers, your page index will stay intact if your maintenance doesn't last far too long.\n\nInstallation\n------------\n\nDjango-503 works with python>=2.5 and django>=1.2\nRecommended way to install is pip::\n\n  pip install django-503\n\n\n* Add ``django_503`` to ``INSTALLED_APPS`` in settings.py::\n\n    INSTALLED_APPS = (...\n                      'django_503',\n                      ...\n                     )\n\n* Add ``'django_503.middleware.MaintenanceMiddleware'`` to your ``MIDDLEWARE_CLASSES``\nafter session and auth middlewares like this::\n\n    MIDDLEWARE_CLASSES = (\n        ...\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        ...\n        'django_503.middleware.MaintenanceMiddleware',\n    )\n\n* Run ``python manage.py syncdb``\n\n* Make sure you use ``admin.autodiscover()`` to enable project ``admin.py``.\n\nUsage\n-----\n\nYou can turn on maintenance mode by changing app config via django admin interface.\nIt's located at url ``/admin/django_503/config/`` relative your site URL .\nSetting `mainteneance` to True will turn 503 error page for regular users.\nAdmins will see a warning on top of every html page, stating site is on maintenance now,\nso that they can still access site and not forget to switch 503 mode off.\n\n\nTemplate overriding\n~~~~~~~~~~~~~~~~~~~\n* To change 503 error page looks you should override ``503.html`` template.\n* To change admin warning message you should override ``admin_warning.html`` template.\n\nTests\n-----\n\nTo run app testsuite use::\n\n  python setup.py test django-503", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coagulant/django-503", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-503", "package_url": "https://pypi.org/project/django-503/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-503/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/coagulant/django-503"}, "release_url": "https://pypi.org/project/django-503/0.1/", "requires_dist": null, "requires_python": null, "summary": "An app to show 503 error page, while your django site is on maintenance.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django 503<br>==========<br><br>An app to show 503 error page, while your django site is on maintenance.<br><br>Sometimes you just need to temporarily stop your site to do some maintenance,<br>maybe to run migrations, update packages, or something like that. Quick and easy solution is to set up<br>a 503 error page for all requests. It should show human-friendly text for your site visitors,<br>saying that site will be back online very soon, while you're working on it at the moment.<br>After maintenance is over you can promptly turn 503 error page off.<br><br>``503 Service Unavailable`` is a valid http response:<br><br>    The server is currently unable to handle the request due to a temporary overloading or maintenance of the server.<br>    The implication is that this is a temporary condition which will be alleviated after some delay.<br><br>It works well with search engine crawlers, your page index will stay intact if your maintenance doesn't last far too long.<br><br>Installation<br>------------<br><br>Django-503 works with python&gt;=2.5 and django&gt;=1.2<br>Recommended way to install is pip::<br><br>  pip install django-503<br><br><br>* Add ``django_503`` to ``INSTALLED_APPS`` in settings.py::<br><br>    INSTALLED_APPS = (...<br>                      'django_503',<br>                      ...<br>                     )<br><br>* Add ``'django_503.middleware.MaintenanceMiddleware'`` to your ``MIDDLEWARE_CLASSES``<br>after session and auth middlewares like this::<br><br>    MIDDLEWARE_CLASSES = (<br>        ...<br>        'django.contrib.sessions.middleware.SessionMiddleware',<br>        'django.contrib.auth.middleware.AuthenticationMiddleware',<br>        ...<br>        'django_503.middleware.MaintenanceMiddleware',<br>    )<br><br>* Run ``python manage.py syncdb``<br><br>* Make sure you use ``admin.autodiscover()`` to enable project ``admin.py``.<br><br>Usage<br>-----<br><br>You can turn on maintenance mode by changing app config via django admin interface.<br>It's located at url ``/admin/django_503/config/`` relative your site URL .<br>Setting `mainteneance` to True will turn 503 error page for regular users.<br>Admins will see a warning on top of every html page, stating site is on maintenance now,<br>so that they can still access site and not forget to switch 503 mode off.<br><br><br>Template overriding<br>~~~~~~~~~~~~~~~~~~~<br>* To change 503 error page looks you should override ``503.html`` template.<br>* To change admin warning message you should override ``admin_warning.html`` template.<br><br>Tests<br>-----<br><br>To run app testsuite use::<br><br>  python setup.py test django-503\n          </div>"}, "last_serial": 789019, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f470671ade66a6b73e4fe6ad5e123542", "sha256": "c39f5caed7559cff1ab9c0720c4cd18b86ea221de7dfeb5b886fed58f7bfef1d"}, "downloads": -1, "filename": "django-503-0.1.tar.gz", "has_sig": false, "md5_digest": "f470671ade66a6b73e4fe6ad5e123542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5387, "upload_time": "2011-10-03T21:23:32", "upload_time_iso_8601": "2011-10-03T21:23:32.821105Z", "url": "https://files.pythonhosted.org/packages/66/c2/b6d5278dcc8e2aff1f9ae48511a0b09e6ded253ec0e383773d285756a84e/django-503-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f470671ade66a6b73e4fe6ad5e123542", "sha256": "c39f5caed7559cff1ab9c0720c4cd18b86ea221de7dfeb5b886fed58f7bfef1d"}, "downloads": -1, "filename": "django-503-0.1.tar.gz", "has_sig": false, "md5_digest": "f470671ade66a6b73e4fe6ad5e123542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5387, "upload_time": "2011-10-03T21:23:32", "upload_time_iso_8601": "2011-10-03T21:23:32.821105Z", "url": "https://files.pythonhosted.org/packages/66/c2/b6d5278dcc8e2aff1f9ae48511a0b09e6ded253ec0e383773d285756a84e/django-503-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:54 2020"}