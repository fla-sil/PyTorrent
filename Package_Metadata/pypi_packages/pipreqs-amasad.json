{"info": {"author": "Amjad Masad", "author_email": "amjad.masad@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===============================\n``pipreqs`` - Generate requirements.txt file for any project based on imports\n===============================\n\n.. image:: https://img.shields.io/travis/bndr/pipreqs.svg\n        :target: https://travis-ci.org/bndr/pipreqs\n      \n        \n.. image:: https://img.shields.io/pypi/v/pipreqs.svg\n        :target: https://pypi.python.org/pypi/pipreqs\n\n        \n.. image:: https://img.shields.io/coveralls/bndr/pipreqs.svg \n        :target: https://coveralls.io/r/bndr/pipreqs\n  \n        \n.. image:: https://img.shields.io/pypi/l/pipreqs.svg \n        :target: https://pypi.python.org/pypi/pipreqs\n\n        \n\nInstallation\n------------\n\n::\n\n    pip install pipreqs\n\nUsage\n-----\n\n::\n\n    Usage:\n        pipreqs [options] <path>\n\n    Options:\n        --use-local           Use ONLY local package info instead of querying PyPI\n        --pypi-server <url>   Use custom PyPi server\n        --proxy <url>         Use Proxy, parameter will be passed to requests library. You can also just set the\n                              environments parameter in your terminal:\n                              $ export HTTP_PROXY=\"http://10.10.1.10:3128\"\n                              $ export HTTPS_PROXY=\"https://10.10.1.10:1080\"\n        --debug               Print debug information\n        --ignore <dirs>...    Ignore extra directories\n        --encoding <charset>  Use encoding parameter for file open\n        --savepath <file>     Save the list of requirements in the given file\n        --print               Output the list of requirements in the standard output\n        --force               Overwrite existing requirements.txt\n        --diff <file>         Compare modules in requirements.txt to project imports.\n        --clean <file>        Clean up requirements.txt by removing modules that are not imported in project.\nExample\n-------\n\n::\n\n    $ pipreqs /home/project/location\n    Successfully saved requirements file in /home/project/location/requirements.txt\n\nContents of requirements.txt\n\n::\n\n    wheel==0.23.0\n    Yarg==0.1.9\n    docopt==0.6.2\n    \nWhy not pip freeze?\n-------------------\n\n- ``pip freeze`` only saves the packages that are installed with ``pip install`` in your environment. \n- ``pip freeze`` saves all packages in the environment including those that you don't use in your current project. (if you don't have virtualenv)\n- and sometimes you just need to create requirements.txt for a new project without installing modules.\n\n\n\n\nHistory\n-------\n\n0.4.8 (2017-06-30)\n--------------------\n\n* Implement '--clean' and '--diff' (kxrd)\n* Exclude concurrent{,.futures} from stdlib if py2 (kxrd)\n\n0.4.7 (2017-04-20)\n--------------------\n\n* BUG: remove package/version duplicates\n* Style: pep8\n\n0.4.5 (2016-12-13)\n---------------------\n\n* Fixed the --pypi-server option\n\n0.4.4 (2016-07-14)\n---------------------\n\n* Remove Spaces in output\n* Add package to output even without version\n\n0.4.2 (2016-02-10)\n---------------------\n\n* Fix duplicated lines in requirements.txt (Dmitry Pribysh)\n\n0.4.1 (2016-02-05)\n---------------------\n\n* Added ignore option (Nick Rhinehart)\n\n0.4.0 (2016-01-28)\n---------------------\n\n* Walk Abstract Syntax Tree to find imports (Kay Sackey)\n\n0.3.9 (2016-01-20)\n---------------------\n\n* Fix regex for docstring comments (#35)\n\n0.3.8 (2016-01-12)\n---------------------\n\n* Add more package mapping\n* fix(pipreqs/mapping): remove pylab reference to matplotlib\n* Remove comments \"\"\" before going through imports\n* Update proxy documentation\n\n0.3.1 (2015-10-20)\n---------------------\n\n* fixed lint warnings (EJ Lee)\n* add --encoding parameter for open() (EJ Lee)\n* support windows directory separator (EJ Lee)\n\n0.3.0 (2015-09-29)\n---------------------\n\n* Add --proxy option\n* Add --pypi-server option\n\n0.2.9 (2015-09-24)\n---------------------\n\n* Ignore irreverent directory when generating requirement.txt (Lee Wei)\n* Modify logging level of \"Requirement.txt already exists\" to warning (Lee Wei)\n\n0.2.8 (2015-05-11)\n---------------------\n\n* Add --force option as a protection for overwrites\n\n0.2.6 (2015-05-11)\n---------------------\n\n* Fix exception when 'import' is used inside package name #17\n* Add more tests\n\n0.2.5 (2015-05-11)\n---------------------\n\n* Fix exception when 'import' is used in comments #17\n* Fix duplicate entries in requirements.txt\n\n0.2.4 (2015-05-10)\n---------------------\n\n* Refactoring\n* fix \"import as\"\n\n0.2.3 (2015-05-09)\n---------------------\n\n* Fix multiple alias imports on the same line (Tiago Costa)\n* More package mappings\n\n0.2.2 (2015-05-08)\n---------------------\n\n* Add ImportName -> PackageName mapping\n* More tests\n\n0.2.1 (2015-05-08)\n---------------------\n\n* Fix for TypeError for implicit conversion\n\n0.2.0 (2015-05-06)\n---------------------\n\n* Add --use-local option\n* Exclude relative imports. (Dongwon Shin)\n* Use \"latest_release_id\" instead of \"release_ids[-1]\" (Dongwon Shin)\n\n0.1.9 (2015-05-01)\n---------------------\n\n* Output tuning (Harri Berglund)\n* Use str.partition() to simplify the logic (cclaus)\n\n0.1.8 (2015-04-26)\n---------------------\n\n* Fixed problems with local imports (Dongwon Shin)\n* Fixed problems with imports with 'as' (Dongwon Shin)\n* Fix indentation, pep8 Styling. (Michael Borisov)\n* Optimize imports and adding missing import for sys module. (Michael Borisov)\n\n0.1.7 (2015-04-24)\n---------------------\n\n* Add more assertions in tests\n* Add more verbose output\n* Add recursive delete to Makefile clean\n* Update Readme\n\n0.1.6 (2015-04-22)\n---------------------\n\n* py3 print function\n\n0.1.5 (2015-04-22)\n---------------------\n\n* Add Readme, Add Examples\n* Add Stdlib into package\n\n0.1.1 (2015-04-22)\n---------------------\n\n* Fix regex matching for imports\n* Release on Pypi\n\n0.1.0 (2015-04-22)\n---------------------\n\n* First release on Github.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amasad/pipreqs", "keywords": "pip requirements imports", "license": "Apache License", "maintainer": "", "maintainer_email": "", "name": "pipreqs-amasad", "package_url": "https://pypi.org/project/pipreqs-amasad/", "platform": "", "project_url": "https://pypi.org/project/pipreqs-amasad/", "project_urls": {"Homepage": "https://github.com/amasad/pipreqs"}, "release_url": "https://pypi.org/project/pipreqs-amasad/0.4.10/", "requires_dist": null, "requires_python": "", "summary": "Pip requirements.txt generator based on imports in project", "version": "0.4.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            ===============================<br>``pipreqs`` - Generate requirements.txt file for any project based on imports<br>===============================<br><br>.. image:: https://img.shields.io/travis/bndr/pipreqs.svg<br>        :target: https://travis-ci.org/bndr/pipreqs<br>      <br>        <br>.. image:: https://img.shields.io/pypi/v/pipreqs.svg<br>        :target: https://pypi.python.org/pypi/pipreqs<br><br>        <br>.. image:: https://img.shields.io/coveralls/bndr/pipreqs.svg <br>        :target: https://coveralls.io/r/bndr/pipreqs<br>  <br>        <br>.. image:: https://img.shields.io/pypi/l/pipreqs.svg <br>        :target: https://pypi.python.org/pypi/pipreqs<br><br>        <br><br>Installation<br>------------<br><br>::<br><br>    pip install pipreqs<br><br>Usage<br>-----<br><br>::<br><br>    Usage:<br>        pipreqs [options] &lt;path&gt;<br><br>    Options:<br>        --use-local           Use ONLY local package info instead of querying PyPI<br>        --pypi-server &lt;url&gt;   Use custom PyPi server<br>        --proxy &lt;url&gt;         Use Proxy, parameter will be passed to requests library. You can also just set the<br>                              environments parameter in your terminal:<br>                              $ export HTTP_PROXY=\"http://10.10.1.10:3128\"<br>                              $ export HTTPS_PROXY=\"https://10.10.1.10:1080\"<br>        --debug               Print debug information<br>        --ignore &lt;dirs&gt;...    Ignore extra directories<br>        --encoding &lt;charset&gt;  Use encoding parameter for file open<br>        --savepath &lt;file&gt;     Save the list of requirements in the given file<br>        --print               Output the list of requirements in the standard output<br>        --force               Overwrite existing requirements.txt<br>        --diff &lt;file&gt;         Compare modules in requirements.txt to project imports.<br>        --clean &lt;file&gt;        Clean up requirements.txt by removing modules that are not imported in project.<br>Example<br>-------<br><br>::<br><br>    $ pipreqs /home/project/location<br>    Successfully saved requirements file in /home/project/location/requirements.txt<br><br>Contents of requirements.txt<br><br>::<br><br>    wheel==0.23.0<br>    Yarg==0.1.9<br>    docopt==0.6.2<br>    <br>Why not pip freeze?<br>-------------------<br><br>- ``pip freeze`` only saves the packages that are installed with ``pip install`` in your environment. <br>- ``pip freeze`` saves all packages in the environment including those that you don't use in your current project. (if you don't have virtualenv)<br>- and sometimes you just need to create requirements.txt for a new project without installing modules.<br><br><br><br><br>History<br>-------<br><br>0.4.8 (2017-06-30)<br>--------------------<br><br>* Implement '--clean' and '--diff' (kxrd)<br>* Exclude concurrent{,.futures} from stdlib if py2 (kxrd)<br><br>0.4.7 (2017-04-20)<br>--------------------<br><br>* BUG: remove package/version duplicates<br>* Style: pep8<br><br>0.4.5 (2016-12-13)<br>---------------------<br><br>* Fixed the --pypi-server option<br><br>0.4.4 (2016-07-14)<br>---------------------<br><br>* Remove Spaces in output<br>* Add package to output even without version<br><br>0.4.2 (2016-02-10)<br>---------------------<br><br>* Fix duplicated lines in requirements.txt (Dmitry Pribysh)<br><br>0.4.1 (2016-02-05)<br>---------------------<br><br>* Added ignore option (Nick Rhinehart)<br><br>0.4.0 (2016-01-28)<br>---------------------<br><br>* Walk Abstract Syntax Tree to find imports (Kay Sackey)<br><br>0.3.9 (2016-01-20)<br>---------------------<br><br>* Fix regex for docstring comments (#35)<br><br>0.3.8 (2016-01-12)<br>---------------------<br><br>* Add more package mapping<br>* fix(pipreqs/mapping): remove pylab reference to matplotlib<br>* Remove comments \"\"\" before going through imports<br>* Update proxy documentation<br><br>0.3.1 (2015-10-20)<br>---------------------<br><br>* fixed lint warnings (EJ Lee)<br>* add --encoding parameter for open() (EJ Lee)<br>* support windows directory separator (EJ Lee)<br><br>0.3.0 (2015-09-29)<br>---------------------<br><br>* Add --proxy option<br>* Add --pypi-server option<br><br>0.2.9 (2015-09-24)<br>---------------------<br><br>* Ignore irreverent directory when generating requirement.txt (Lee Wei)<br>* Modify logging level of \"Requirement.txt already exists\" to warning (Lee Wei)<br><br>0.2.8 (2015-05-11)<br>---------------------<br><br>* Add --force option as a protection for overwrites<br><br>0.2.6 (2015-05-11)<br>---------------------<br><br>* Fix exception when 'import' is used inside package name #17<br>* Add more tests<br><br>0.2.5 (2015-05-11)<br>---------------------<br><br>* Fix exception when 'import' is used in comments #17<br>* Fix duplicate entries in requirements.txt<br><br>0.2.4 (2015-05-10)<br>---------------------<br><br>* Refactoring<br>* fix \"import as\"<br><br>0.2.3 (2015-05-09)<br>---------------------<br><br>* Fix multiple alias imports on the same line (Tiago Costa)<br>* More package mappings<br><br>0.2.2 (2015-05-08)<br>---------------------<br><br>* Add ImportName -&gt; PackageName mapping<br>* More tests<br><br>0.2.1 (2015-05-08)<br>---------------------<br><br>* Fix for TypeError for implicit conversion<br><br>0.2.0 (2015-05-06)<br>---------------------<br><br>* Add --use-local option<br>* Exclude relative imports. (Dongwon Shin)<br>* Use \"latest_release_id\" instead of \"release_ids[-1]\" (Dongwon Shin)<br><br>0.1.9 (2015-05-01)<br>---------------------<br><br>* Output tuning (Harri Berglund)<br>* Use str.partition() to simplify the logic (cclaus)<br><br>0.1.8 (2015-04-26)<br>---------------------<br><br>* Fixed problems with local imports (Dongwon Shin)<br>* Fixed problems with imports with 'as' (Dongwon Shin)<br>* Fix indentation, pep8 Styling. (Michael Borisov)<br>* Optimize imports and adding missing import for sys module. (Michael Borisov)<br><br>0.1.7 (2015-04-24)<br>---------------------<br><br>* Add more assertions in tests<br>* Add more verbose output<br>* Add recursive delete to Makefile clean<br>* Update Readme<br><br>0.1.6 (2015-04-22)<br>---------------------<br><br>* py3 print function<br><br>0.1.5 (2015-04-22)<br>---------------------<br><br>* Add Readme, Add Examples<br>* Add Stdlib into package<br><br>0.1.1 (2015-04-22)<br>---------------------<br><br>* Fix regex matching for imports<br>* Release on Pypi<br><br>0.1.0 (2015-04-22)<br>---------------------<br><br>* First release on Github.\n          </div>"}, "last_serial": 3660001, "releases": {"0.4.10": [{"comment_text": "", "digests": {"md5": "0595c2f452fb9237281a6bc81e6b2103", "sha256": "5f9f916aa8d2c12dcf80c181625e3a12a87747febcd53872d4d85b55595d0be7"}, "downloads": -1, "filename": "pipreqs_amasad-0.4.10.tar.gz", "has_sig": false, "md5_digest": "0595c2f452fb9237281a6bc81e6b2103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39084, "upload_time": "2018-03-12T00:56:38", "upload_time_iso_8601": "2018-03-12T00:56:38.330816Z", "url": "https://files.pythonhosted.org/packages/e7/f4/c18a8b81e5aa2ac32c604f4fd382f862175bf3495b7889130d982447003d/pipreqs_amasad-0.4.10.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "b316bff3cfbdca1f31fad9c5ec0b5c8f", "sha256": "6418b4ea1850821ce59c7937c7280fd5293dc9901e78ef5d696894d8e5e8492e"}, "downloads": -1, "filename": "pipreqs_amasad-0.4.9.tar.gz", "has_sig": false, "md5_digest": "b316bff3cfbdca1f31fad9c5ec0b5c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39087, "upload_time": "2018-03-12T00:36:24", "upload_time_iso_8601": "2018-03-12T00:36:24.589746Z", "url": "https://files.pythonhosted.org/packages/93/d7/03830400ceefd9a5fd53881a15678c8fcf0e7654404c09d3c3fa8c848e0b/pipreqs_amasad-0.4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0595c2f452fb9237281a6bc81e6b2103", "sha256": "5f9f916aa8d2c12dcf80c181625e3a12a87747febcd53872d4d85b55595d0be7"}, "downloads": -1, "filename": "pipreqs_amasad-0.4.10.tar.gz", "has_sig": false, "md5_digest": "0595c2f452fb9237281a6bc81e6b2103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39084, "upload_time": "2018-03-12T00:56:38", "upload_time_iso_8601": "2018-03-12T00:56:38.330816Z", "url": "https://files.pythonhosted.org/packages/e7/f4/c18a8b81e5aa2ac32c604f4fd382f862175bf3495b7889130d982447003d/pipreqs_amasad-0.4.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:09 2020"}