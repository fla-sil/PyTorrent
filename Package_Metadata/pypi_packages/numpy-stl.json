{"info": {"author": "Rick van Hattem", "author_email": "Wolph@Wol.ph", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "numpy-stl\n==============================================================================\n\n\n.. image:: https://travis-ci.org/WoLpH/numpy-stl.svg?branch=master\n    :alt: numpy-stl test status \n    :target: https://travis-ci.org/WoLpH/numpy-stl\n\n.. image:: https://badge.fury.io/py/mt-940.svg\n    :alt: numpy-stl Pypi version \n    :target: https://pypi.python.org/pypi/mt-940\n\n.. image:: https://coveralls.io/repos/WoLpH/numpy-stl/badge.svg?branch=master\n    :alt: numpy-stl code coverage \n    :target: https://coveralls.io/r/WoLpH/numpy-stl?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/mt-940.svg\n\nSimple library to make working with STL files (and 3D objects in general) fast\nand easy.\n\nDue to all operations heavily relying on `numpy` this is one of the fastest\nSTL editing libraries for Python available.\n\nLinks\n-----\n\n - The source: https://github.com/WoLpH/numpy-stl\n - Project page: https://pypi.python.org/pypi/numpy-stl\n - Reporting bugs: https://github.com/WoLpH/numpy-stl/issues\n - Documentation: http://numpy-stl.readthedocs.org/en/latest/\n - My blog: https://wol.ph/\n\nRequirements for installing:\n------------------------------------------------------------------------------\n\n - `numpy`_ any recent version\n - `python-utils`_ version 1.6 or greater\n\nInstallation:\n------------------------------------------------------------------------------\n\n`pip install numpy-stl`\n\nInitial usage:\n------------------------------------------------------------------------------\n\n - `stl2bin your_ascii_stl_file.stl new_binary_stl_file.stl`\n - `stl2ascii your_binary_stl_file.stl new_ascii_stl_file.stl`\n - `stl your_ascii_stl_file.stl new_binary_stl_file.stl`\n\nContributing:\n------------------------------------------------------------------------------\n\nContributions are always welcome. Please view the guidelines to get started:\nhttps://github.com/WoLpH/numpy-stl/blob/develop/CONTRIBUTING.rst\n\nQuickstart\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import numpy\n    from stl import mesh\n\n    # Using an existing stl file:\n    your_mesh = mesh.Mesh.from_file('some_file.stl')\n\n    # Or creating a new mesh (make sure not to overwrite the `mesh` import by\n    # naming it `mesh`):\n    VERTICE_COUNT = 100\n    data = numpy.zeros(VERTICE_COUNT, dtype=mesh.Mesh.dtype)\n    your_mesh = mesh.Mesh(data, remove_empty_areas=False)\n\n    # The mesh normals (calculated automatically)\n    your_mesh.normals\n    # The mesh vectors\n    your_mesh.v0, your_mesh.v1, your_mesh.v2\n    # Accessing individual points (concatenation of v0, v1 and v2 in triplets)\n    assert (your_mesh.points[0][0:3] == your_mesh.v0[0]).all()\n    assert (your_mesh.points[0][3:6] == your_mesh.v1[0]).all()\n    assert (your_mesh.points[0][6:9] == your_mesh.v2[0]).all()\n    assert (your_mesh.points[1][0:3] == your_mesh.v0[1]).all()\n\n    your_mesh.save('new_stl_file.stl')\n\nPlotting using `matplotlib`_ is equally easy:\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from stl import mesh\n    from mpl_toolkits import mplot3d\n    from matplotlib import pyplot\n\n    # Create a new plot\n    figure = pyplot.figure()\n    axes = mplot3d.Axes3D(figure)\n\n    # Load the STL files and add the vectors to the plot\n    your_mesh = mesh.Mesh.from_file('tests/stl_binary/HalfDonut.stl')\n    axes.add_collection3d(mplot3d.art3d.Poly3DCollection(your_mesh.vectors))\n\n    # Auto scale to the mesh size\n    scale = your_mesh.points.flatten(-1)\n    axes.auto_scale_xyz(scale, scale, scale)\n\n    # Show the plot to the screen\n    pyplot.show()\n\n.. _numpy: http://numpy.org/\n.. _matplotlib: http://matplotlib.org/\n.. _python-utils: https://github.com/WoLpH/python-utils\n\nModifying Mesh objects\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from stl import mesh\n    import math\n    import numpy\n\n    # Create 3 faces of a cube\n    data = numpy.zeros(6, dtype=mesh.Mesh.dtype)\n\n    # Top of the cube\n    data['vectors'][0] = numpy.array([[0, 1, 1],\n                                      [1, 0, 1],\n                                      [0, 0, 1]])\n    data['vectors'][1] = numpy.array([[1, 0, 1],\n                                      [0, 1, 1],\n                                      [1, 1, 1]])\n    # Front face\n    data['vectors'][2] = numpy.array([[1, 0, 0],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    data['vectors'][3] = numpy.array([[1, 1, 1],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    # Left face\n    data['vectors'][4] = numpy.array([[0, 0, 0],\n                                      [1, 0, 0],\n                                      [1, 0, 1]])\n    data['vectors'][5] = numpy.array([[0, 0, 0],\n                                      [0, 0, 1],\n                                      [1, 0, 1]])\n\n    # Since the cube faces are from 0 to 1 we can move it to the middle by\n    # substracting .5\n    data['vectors'] -= .5\n\n    # Generate 4 different meshes so we can rotate them later\n    meshes = [mesh.Mesh(data.copy()) for _ in range(4)]\n\n    # Rotate 90 degrees over the Y axis\n    meshes[0].rotate([0.0, 0.5, 0.0], math.radians(90))\n\n    # Translate 2 points over the X axis\n    meshes[1].x += 2\n\n    # Rotate 90 degrees over the X axis\n    meshes[2].rotate([0.5, 0.0, 0.0], math.radians(90))\n    # Translate 2 points over the X and Y points\n    meshes[2].x += 2\n    meshes[2].y += 2\n\n    # Rotate 90 degrees over the X and Y axis\n    meshes[3].rotate([0.5, 0.0, 0.0], math.radians(90))\n    meshes[3].rotate([0.0, 0.5, 0.0], math.radians(90))\n    # Translate 2 points over the Y axis\n    meshes[3].y += 2\n\n\n    # Optionally render the rotated cube faces\n    from matplotlib import pyplot\n    from mpl_toolkits import mplot3d\n\n    # Create a new plot\n    figure = pyplot.figure()\n    axes = mplot3d.Axes3D(figure)\n\n    # Render the cube faces\n    for m in meshes:\n        axes.add_collection3d(mplot3d.art3d.Poly3DCollection(m.vectors))\n\n    # Auto scale to the mesh size\n    scale = numpy.concatenate([m.points for m in meshes]).flatten(-1)\n    axes.auto_scale_xyz(scale, scale, scale)\n\n    # Show the plot to the screen\n    pyplot.show()\n\nExtending Mesh objects\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from stl import mesh\n    import math\n    import numpy\n\n    # Create 3 faces of a cube\n    data = numpy.zeros(6, dtype=mesh.Mesh.dtype)\n\n    # Top of the cube\n    data['vectors'][0] = numpy.array([[0, 1, 1],\n                                      [1, 0, 1],\n                                      [0, 0, 1]])\n    data['vectors'][1] = numpy.array([[1, 0, 1],\n                                      [0, 1, 1],\n                                      [1, 1, 1]])\n    # Front face\n    data['vectors'][2] = numpy.array([[1, 0, 0],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    data['vectors'][3] = numpy.array([[1, 1, 1],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    # Left face\n    data['vectors'][4] = numpy.array([[0, 0, 0],\n                                      [1, 0, 0],\n                                      [1, 0, 1]])\n    data['vectors'][5] = numpy.array([[0, 0, 0],\n                                      [0, 0, 1],\n                                      [1, 0, 1]])\n\n    # Since the cube faces are from 0 to 1 we can move it to the middle by\n    # substracting .5\n    data['vectors'] -= .5\n\n    cube_back = mesh.Mesh(data.copy())\n    cube_front = mesh.Mesh(data.copy())\n\n    # Rotate 90 degrees over the X axis followed by the Y axis followed by the\n    # X axis\n    cube_back.rotate([0.5, 0.0, 0.0], math.radians(90))\n    cube_back.rotate([0.0, 0.5, 0.0], math.radians(90))\n    cube_back.rotate([0.5, 0.0, 0.0], math.radians(90))\n\n    cube = mesh.Mesh(numpy.concatenate([\n        cube_back.data.copy(),\n        cube_front.data.copy(),\n    ]))\n\n    # Optionally render the rotated cube faces\n    from matplotlib import pyplot\n    from mpl_toolkits import mplot3d\n\n    # Create a new plot\n    figure = pyplot.figure()\n    axes = mplot3d.Axes3D(figure)\n\n    # Render the cube\n    axes.add_collection3d(mplot3d.art3d.Poly3DCollection(cube.vectors))\n\n    # Auto scale to the mesh size\n    scale = cube_back.points.flatten(-1)\n    axes.auto_scale_xyz(scale, scale, scale)\n\n    # Show the plot to the screen\n    pyplot.show()\n\nCreating Mesh objects from a list of vertices and faces\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import numpy as np\n    from stl import mesh\n\n    # Define the 8 vertices of the cube\n    vertices = np.array([\\\n        [-1, -1, -1],\n        [+1, -1, -1],\n        [+1, +1, -1],\n        [-1, +1, -1],\n        [-1, -1, +1],\n        [+1, -1, +1],\n        [+1, +1, +1],\n        [-1, +1, +1]])\n    # Define the 12 triangles composing the cube\n    faces = np.array([\\\n        [0,3,1],\n        [1,3,2],\n        [0,4,7],\n        [0,7,3],\n        [4,5,6],\n        [4,6,7],\n        [5,1,2],\n        [5,2,6],\n        [2,3,6],\n        [3,7,6],\n        [0,1,5],\n        [0,5,4]])\n\n    # Create the mesh\n    cube = mesh.Mesh(np.zeros(faces.shape[0], dtype=mesh.Mesh.dtype))\n    for i, f in enumerate(faces):\n        for j in range(3):\n            cube.vectors[i][j] = vertices[f[j],:]\n\n    # Write the mesh to file \"cube.stl\"\n    cube.save('cube.stl')\n\n\nEvaluating Mesh properties (Volume, Center of gravity, Inertia)\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import numpy as np\n    from stl import mesh\n\n    # Using an existing closed stl file:\n    your_mesh = mesh.Mesh.from_file('some_file.stl')\n\n    volume, cog, inertia = your_mesh.get_mass_properties()\n    print(\"Volume                                  = {0}\".format(volume))\n    print(\"Position of the center of gravity (COG) = {0}\".format(cog))\n    print(\"Inertia matrix at expressed at the COG  = {0}\".format(inertia[0,:]))\n    print(\"                                          {0}\".format(inertia[1,:]))\n    print(\"                                          {0}\".format(inertia[2,:]))\n\nCombining multiple STL files\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import math\n    import stl\n    from stl import mesh\n    import numpy\n\n\n    # find the max dimensions, so we can know the bounding box, getting the height,\n    # width, length (because these are the step size)...\n    def find_mins_maxs(obj):\n        minx = obj.x.min()\n        maxx = obj.x.max()\n        miny = obj.y.min()\n        maxy = obj.y.max()\n        minz = obj.z.min()\n        maxz = obj.z.max()\n        return minx, maxx, miny, maxy, minz, maxz\n\n\n    def translate(_solid, step, padding, multiplier, axis):\n        if 'x' == axis:\n            items = 0, 3, 6\n        elif 'y' == axis:\n            items = 1, 4, 7\n        elif 'z' == axis:\n            items = 2, 5, 8\n        else:\n            raise RuntimeError('Unknown axis %r, expected x, y or z' % axis)\n\n        # _solid.points.shape == [:, ((x, y, z), (x, y, z), (x, y, z))]\n        _solid.points[:, items] += (step * multiplier) + (padding * multiplier)\n\n\n    def copy_obj(obj, dims, num_rows, num_cols, num_layers):\n        w, l, h = dims\n        copies = []\n        for layer in range(num_layers):\n            for row in range(num_rows):\n                for col in range(num_cols):\n                    # skip the position where original being copied is\n                    if row == 0 and col == 0 and layer == 0:\n                        continue\n                    _copy = mesh.Mesh(obj.data.copy())\n                    # pad the space between objects by 10% of the dimension being\n                    # translated\n                    if col != 0:\n                        translate(_copy, w, w / 10., col, 'x')\n                    if row != 0:\n                        translate(_copy, l, l / 10., row, 'y')\n                    if layer != 0:\n                        translate(_copy, h, h / 10., layer, 'z')\n                    copies.append(_copy)\n        return copies\n\n    # Using an existing stl file:\n    main_body = mesh.Mesh.from_file('ball_and_socket_simplified_-_main_body.stl')\n\n    # rotate along Y\n    main_body.rotate([0.0, 0.5, 0.0], math.radians(90))\n\n    minx, maxx, miny, maxy, minz, maxz = find_mins_maxs(main_body)\n    w1 = maxx - minx\n    l1 = maxy - miny\n    h1 = maxz - minz\n    copies = copy_obj(main_body, (w1, l1, h1), 2, 2, 1)\n\n    # I wanted to add another related STL to the final STL\n    twist_lock = mesh.Mesh.from_file('ball_and_socket_simplified_-_twist_lock.stl')\n    minx, maxx, miny, maxy, minz, maxz = find_mins_maxs(twist_lock)\n    w2 = maxx - minx\n    l2 = maxy - miny\n    h2 = maxz - minz\n    translate(twist_lock, w1, w1 / 10., 3, 'x')\n    copies2 = copy_obj(twist_lock, (w2, l2, h2), 2, 2, 1)\n    combined = mesh.Mesh(numpy.concatenate([main_body.data, twist_lock.data] +\n                                        [copy.data for copy in copies] +\n                                        [copy.data for copy in copies2]))\n\n    combined.save('combined.stl', mode=stl.Mode.ASCII)  # save as ASCII", "description_content_type": "", "docs_url": "https://pythonhosted.org/numpy-stl/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/WoLpH/numpy-stl/", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "numpy-stl", "package_url": "https://pypi.org/project/numpy-stl/", "platform": "", "project_url": "https://pypi.org/project/numpy-stl/", "project_urls": {"Homepage": "https://github.com/WoLpH/numpy-stl/"}, "release_url": "https://pypi.org/project/numpy-stl/2.11.2/", "requires_dist": null, "requires_python": "", "summary": "Library to make reading, writing and modifying both binary and ascii STL files easy.", "version": "2.11.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/WoLpH/numpy-stl\" rel=\"nofollow\"><img alt=\"numpy-stl test status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b281d5d7c83ac2498c119bef25595a26a284f6a/68747470733a2f2f7472617669732d63692e6f72672f576f4c70482f6e756d70792d73746c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/mt-940\" rel=\"nofollow\"><img alt=\"numpy-stl Pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/299db5679d9f73fb2f6a7fce1cd8e7c9280232e3/68747470733a2f2f62616467652e667572792e696f2f70792f6d742d3934302e737667\"></a>\n<a href=\"https://coveralls.io/r/WoLpH/numpy-stl?branch=master\" rel=\"nofollow\"><img alt=\"numpy-stl code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60d303272b2ac77f911ccc722448ea25cb902989/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f576f4c70482f6e756d70792d73746c2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"https://img.shields.io/pypi/pyversions/mt-940.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3237983b894399c6765b77cb8f251b2589560b0a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d742d3934302e737667\">\n<p>Simple library to make working with STL files (and 3D objects in general) fast\nand easy.</p>\n<p>Due to all operations heavily relying on <cite>numpy</cite> this is one of the fastest\nSTL editing libraries for Python available.</p>\n<div id=\"links\">\n<h2>Links</h2>\n<blockquote>\n<ul>\n<li>The source: <a href=\"https://github.com/WoLpH/numpy-stl\" rel=\"nofollow\">https://github.com/WoLpH/numpy-stl</a></li>\n<li>Project page: <a href=\"https://pypi.python.org/pypi/numpy-stl\" rel=\"nofollow\">https://pypi.python.org/pypi/numpy-stl</a></li>\n<li>Reporting bugs: <a href=\"https://github.com/WoLpH/numpy-stl/issues\" rel=\"nofollow\">https://github.com/WoLpH/numpy-stl/issues</a></li>\n<li>Documentation: <a href=\"http://numpy-stl.readthedocs.org/en/latest/\" rel=\"nofollow\">http://numpy-stl.readthedocs.org/en/latest/</a></li>\n<li>My blog: <a href=\"https://wol.ph/\" rel=\"nofollow\">https://wol.ph/</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"requirements-for-installing\">\n<h2>Requirements for installing:</h2>\n<blockquote>\n<ul>\n<li><a href=\"http://numpy.org/\" rel=\"nofollow\">numpy</a> any recent version</li>\n<li><a href=\"https://github.com/WoLpH/python-utils\" rel=\"nofollow\">python-utils</a> version 1.6 or greater</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p><cite>pip install numpy-stl</cite></p>\n</div>\n<div id=\"initial-usage\">\n<h2>Initial usage:</h2>\n<blockquote>\n<ul>\n<li><cite>stl2bin your_ascii_stl_file.stl new_binary_stl_file.stl</cite></li>\n<li><cite>stl2ascii your_binary_stl_file.stl new_ascii_stl_file.stl</cite></li>\n<li><cite>stl your_ascii_stl_file.stl new_binary_stl_file.stl</cite></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"contributing\">\n<h2>Contributing:</h2>\n<p>Contributions are always welcome. Please view the guidelines to get started:\n<a href=\"https://github.com/WoLpH/numpy-stl/blob/develop/CONTRIBUTING.rst\" rel=\"nofollow\">https://github.com/WoLpH/numpy-stl/blob/develop/CONTRIBUTING.rst</a></p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n\n<span class=\"c1\"># Using an existing stl file:</span>\n<span class=\"n\">your_mesh</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'some_file.stl'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or creating a new mesh (make sure not to overwrite the `mesh` import by</span>\n<span class=\"c1\"># naming it `mesh`):</span>\n<span class=\"n\">VERTICE_COUNT</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">VERTICE_COUNT</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"n\">your_mesh</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">remove_empty_areas</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The mesh normals (calculated automatically)</span>\n<span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">normals</span>\n<span class=\"c1\"># The mesh vectors</span>\n<span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v0</span><span class=\"p\">,</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v1</span><span class=\"p\">,</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v2</span>\n<span class=\"c1\"># Accessing individual points (concatenation of v0, v1 and v2 in triplets)</span>\n<span class=\"k\">assert</span> <span class=\"p\">(</span><span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v0</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"p\">(</span><span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"p\">(</span><span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"mi\">9</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"p\">(</span><span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">v0</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'new_stl_file.stl'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"plotting-using-matplotlib-is-equally-easy\">\n<h2>Plotting using <a href=\"http://matplotlib.org/\" rel=\"nofollow\">matplotlib</a> is equally easy:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits</span> <span class=\"kn\">import</span> <span class=\"n\">mplot3d</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span>\n\n<span class=\"c1\"># Create a new plot</span>\n<span class=\"n\">figure</span> <span class=\"o\">=</span> <span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">mplot3d</span><span class=\"o\">.</span><span class=\"n\">Axes3D</span><span class=\"p\">(</span><span class=\"n\">figure</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load the STL files and add the vectors to the plot</span>\n<span class=\"n\">your_mesh</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'tests/stl_binary/HalfDonut.stl'</span><span class=\"p\">)</span>\n<span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">add_collection3d</span><span class=\"p\">(</span><span class=\"n\">mplot3d</span><span class=\"o\">.</span><span class=\"n\">art3d</span><span class=\"o\">.</span><span class=\"n\">Poly3DCollection</span><span class=\"p\">(</span><span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">vectors</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Auto scale to the mesh size</span>\n<span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">auto_scale_xyz</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the plot to the screen</span>\n<span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"modifying-mesh-objects\">\n<h2>Modifying Mesh objects</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n\n<span class=\"c1\"># Create 3 faces of a cube</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Top of the cube</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"c1\"># Front face</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"c1\"># Left face</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n\n<span class=\"c1\"># Since the cube faces are from 0 to 1 we can move it to the middle by</span>\n<span class=\"c1\"># substracting .5</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"o\">.</span><span class=\"mi\">5</span>\n\n<span class=\"c1\"># Generate 4 different meshes so we can rotate them later</span>\n<span class=\"n\">meshes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)]</span>\n\n<span class=\"c1\"># Rotate 90 degrees over the Y axis</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Translate 2 points over the X axis</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># Rotate 90 degrees over the X axis</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"c1\"># Translate 2 points over the X and Y points</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># Rotate 90 degrees over the X and Y axis</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"c1\"># Translate 2 points over the Y axis</span>\n<span class=\"n\">meshes</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n\n\n<span class=\"c1\"># Optionally render the rotated cube faces</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits</span> <span class=\"kn\">import</span> <span class=\"n\">mplot3d</span>\n\n<span class=\"c1\"># Create a new plot</span>\n<span class=\"n\">figure</span> <span class=\"o\">=</span> <span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">mplot3d</span><span class=\"o\">.</span><span class=\"n\">Axes3D</span><span class=\"p\">(</span><span class=\"n\">figure</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Render the cube faces</span>\n<span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">meshes</span><span class=\"p\">:</span>\n    <span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">add_collection3d</span><span class=\"p\">(</span><span class=\"n\">mplot3d</span><span class=\"o\">.</span><span class=\"n\">art3d</span><span class=\"o\">.</span><span class=\"n\">Poly3DCollection</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">vectors</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Auto scale to the mesh size</span>\n<span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">points</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">meshes</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">auto_scale_xyz</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the plot to the screen</span>\n<span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"extending-mesh-objects\">\n<h2>Extending Mesh objects</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n\n<span class=\"c1\"># Create 3 faces of a cube</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Top of the cube</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"c1\"># Front face</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"c1\"># Left face</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n\n<span class=\"c1\"># Since the cube faces are from 0 to 1 we can move it to the middle by</span>\n<span class=\"c1\"># substracting .5</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'vectors'</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"o\">.</span><span class=\"mi\">5</span>\n\n<span class=\"n\">cube_back</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n<span class=\"n\">cube_front</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Rotate 90 degrees over the X axis followed by the Y axis followed by the</span>\n<span class=\"c1\"># X axis</span>\n<span class=\"n\">cube_back</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"n\">cube_back</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n<span class=\"n\">cube_back</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n\n<span class=\"n\">cube</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span>\n    <span class=\"n\">cube_back</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(),</span>\n    <span class=\"n\">cube_front</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(),</span>\n<span class=\"p\">]))</span>\n\n<span class=\"c1\"># Optionally render the rotated cube faces</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits</span> <span class=\"kn\">import</span> <span class=\"n\">mplot3d</span>\n\n<span class=\"c1\"># Create a new plot</span>\n<span class=\"n\">figure</span> <span class=\"o\">=</span> <span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">mplot3d</span><span class=\"o\">.</span><span class=\"n\">Axes3D</span><span class=\"p\">(</span><span class=\"n\">figure</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Render the cube</span>\n<span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">add_collection3d</span><span class=\"p\">(</span><span class=\"n\">mplot3d</span><span class=\"o\">.</span><span class=\"n\">art3d</span><span class=\"o\">.</span><span class=\"n\">Poly3DCollection</span><span class=\"p\">(</span><span class=\"n\">cube</span><span class=\"o\">.</span><span class=\"n\">vectors</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Auto scale to the mesh size</span>\n<span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">cube_back</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">auto_scale_xyz</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the plot to the screen</span>\n<span class=\"n\">pyplot</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"creating-mesh-objects-from-a-list-of-vertices-and-faces\">\n<h2>Creating Mesh objects from a list of vertices and faces</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n\n<span class=\"c1\"># Define the 8 vertices of the cube</span>\n<span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\\\n    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"c1\"># Define the 12 triangles composing the cube</span>\n<span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\\\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]])</span>\n\n<span class=\"c1\"># Create the mesh</span>\n<span class=\"n\">cube</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">faces</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"n\">cube</span><span class=\"o\">.</span><span class=\"n\">vectors</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],:]</span>\n\n<span class=\"c1\"># Write the mesh to file \"cube.stl\"</span>\n<span class=\"n\">cube</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'cube.stl'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"evaluating-mesh-properties-volume-center-of-gravity-inertia\">\n<h2>Evaluating Mesh properties (Volume, Center of gravity, Inertia)</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n\n<span class=\"c1\"># Using an existing closed stl file:</span>\n<span class=\"n\">your_mesh</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'some_file.stl'</span><span class=\"p\">)</span>\n\n<span class=\"n\">volume</span><span class=\"p\">,</span> <span class=\"n\">cog</span><span class=\"p\">,</span> <span class=\"n\">inertia</span> <span class=\"o\">=</span> <span class=\"n\">your_mesh</span><span class=\"o\">.</span><span class=\"n\">get_mass_properties</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Volume                                  = </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">volume</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Position of the center of gravity (COG) = </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cog</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Inertia matrix at expressed at the COG  = </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">inertia</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,:]))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"                                          </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">inertia</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,:]))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"                                          </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">inertia</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,:]))</span>\n</pre>\n</div>\n<div id=\"combining-multiple-stl-files\">\n<h2>Combining multiple STL files</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">stl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">stl</span> <span class=\"kn\">import</span> <span class=\"n\">mesh</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n\n\n<span class=\"c1\"># find the max dimensions, so we can know the bounding box, getting the height,</span>\n<span class=\"c1\"># width, length (because these are the step size)...</span>\n<span class=\"k\">def</span> <span class=\"nf\">find_mins_maxs</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"n\">minx</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">()</span>\n    <span class=\"n\">maxx</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n    <span class=\"n\">miny</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">()</span>\n    <span class=\"n\">maxy</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n    <span class=\"n\">minz</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">()</span>\n    <span class=\"n\">maxz</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">minx</span><span class=\"p\">,</span> <span class=\"n\">maxx</span><span class=\"p\">,</span> <span class=\"n\">miny</span><span class=\"p\">,</span> <span class=\"n\">maxy</span><span class=\"p\">,</span> <span class=\"n\">minz</span><span class=\"p\">,</span> <span class=\"n\">maxz</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">translate</span><span class=\"p\">(</span><span class=\"n\">_solid</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"p\">,</span> <span class=\"n\">multiplier</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'x'</span> <span class=\"o\">==</span> <span class=\"n\">axis</span><span class=\"p\">:</span>\n        <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span>\n    <span class=\"k\">elif</span> <span class=\"s1\">'y'</span> <span class=\"o\">==</span> <span class=\"n\">axis</span><span class=\"p\">:</span>\n        <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span>\n    <span class=\"k\">elif</span> <span class=\"s1\">'z'</span> <span class=\"o\">==</span> <span class=\"n\">axis</span><span class=\"p\">:</span>\n        <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s1\">'Unknown axis </span><span class=\"si\">%r</span><span class=\"s1\">, expected x, y or z'</span> <span class=\"o\">%</span> <span class=\"n\">axis</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># _solid.points.shape == [:, ((x, y, z), (x, y, z), (x, y, z))]</span>\n    <span class=\"n\">_solid</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"p\">[:,</span> <span class=\"n\">items</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">step</span> <span class=\"o\">*</span> <span class=\"n\">multiplier</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">padding</span> <span class=\"o\">*</span> <span class=\"n\">multiplier</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">copy_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">dims</span><span class=\"p\">,</span> <span class=\"n\">num_rows</span><span class=\"p\">,</span> <span class=\"n\">num_cols</span><span class=\"p\">,</span> <span class=\"n\">num_layers</span><span class=\"p\">):</span>\n    <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">dims</span>\n    <span class=\"n\">copies</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_layers</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_rows</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">col</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_cols</span><span class=\"p\">):</span>\n                <span class=\"c1\"># skip the position where original being copied is</span>\n                <span class=\"k\">if</span> <span class=\"n\">row</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">col</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">layer</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"n\">_copy</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n                <span class=\"c1\"># pad the space between objects by 10% of the dimension being</span>\n                <span class=\"c1\"># translated</span>\n                <span class=\"k\">if</span> <span class=\"n\">col</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">_copy</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">w</span> <span class=\"o\">/</span> <span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"p\">,</span> <span class=\"s1\">'x'</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">row</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">_copy</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">l</span> <span class=\"o\">/</span> <span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">layer</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">_copy</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">h</span> <span class=\"o\">/</span> <span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"s1\">'z'</span><span class=\"p\">)</span>\n                <span class=\"n\">copies</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">_copy</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">copies</span>\n\n<span class=\"c1\"># Using an existing stl file:</span>\n<span class=\"n\">main_body</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'ball_and_socket_simplified_-_main_body.stl'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># rotate along Y</span>\n<span class=\"n\">main_body</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">))</span>\n\n<span class=\"n\">minx</span><span class=\"p\">,</span> <span class=\"n\">maxx</span><span class=\"p\">,</span> <span class=\"n\">miny</span><span class=\"p\">,</span> <span class=\"n\">maxy</span><span class=\"p\">,</span> <span class=\"n\">minz</span><span class=\"p\">,</span> <span class=\"n\">maxz</span> <span class=\"o\">=</span> <span class=\"n\">find_mins_maxs</span><span class=\"p\">(</span><span class=\"n\">main_body</span><span class=\"p\">)</span>\n<span class=\"n\">w1</span> <span class=\"o\">=</span> <span class=\"n\">maxx</span> <span class=\"o\">-</span> <span class=\"n\">minx</span>\n<span class=\"n\">l1</span> <span class=\"o\">=</span> <span class=\"n\">maxy</span> <span class=\"o\">-</span> <span class=\"n\">miny</span>\n<span class=\"n\">h1</span> <span class=\"o\">=</span> <span class=\"n\">maxz</span> <span class=\"o\">-</span> <span class=\"n\">minz</span>\n<span class=\"n\">copies</span> <span class=\"o\">=</span> <span class=\"n\">copy_obj</span><span class=\"p\">(</span><span class=\"n\">main_body</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">w1</span><span class=\"p\">,</span> <span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">h1</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># I wanted to add another related STL to the final STL</span>\n<span class=\"n\">twist_lock</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'ball_and_socket_simplified_-_twist_lock.stl'</span><span class=\"p\">)</span>\n<span class=\"n\">minx</span><span class=\"p\">,</span> <span class=\"n\">maxx</span><span class=\"p\">,</span> <span class=\"n\">miny</span><span class=\"p\">,</span> <span class=\"n\">maxy</span><span class=\"p\">,</span> <span class=\"n\">minz</span><span class=\"p\">,</span> <span class=\"n\">maxz</span> <span class=\"o\">=</span> <span class=\"n\">find_mins_maxs</span><span class=\"p\">(</span><span class=\"n\">twist_lock</span><span class=\"p\">)</span>\n<span class=\"n\">w2</span> <span class=\"o\">=</span> <span class=\"n\">maxx</span> <span class=\"o\">-</span> <span class=\"n\">minx</span>\n<span class=\"n\">l2</span> <span class=\"o\">=</span> <span class=\"n\">maxy</span> <span class=\"o\">-</span> <span class=\"n\">miny</span>\n<span class=\"n\">h2</span> <span class=\"o\">=</span> <span class=\"n\">maxz</span> <span class=\"o\">-</span> <span class=\"n\">minz</span>\n<span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">twist_lock</span><span class=\"p\">,</span> <span class=\"n\">w1</span><span class=\"p\">,</span> <span class=\"n\">w1</span> <span class=\"o\">/</span> <span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'x'</span><span class=\"p\">)</span>\n<span class=\"n\">copies2</span> <span class=\"o\">=</span> <span class=\"n\">copy_obj</span><span class=\"p\">(</span><span class=\"n\">twist_lock</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">w2</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">,</span> <span class=\"n\">h2</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">combined</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">main_body</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">twist_lock</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">]</span> <span class=\"o\">+</span>\n                                    <span class=\"p\">[</span><span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"k\">for</span> <span class=\"n\">copy</span> <span class=\"ow\">in</span> <span class=\"n\">copies</span><span class=\"p\">]</span> <span class=\"o\">+</span>\n                                    <span class=\"p\">[</span><span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"k\">for</span> <span class=\"n\">copy</span> <span class=\"ow\">in</span> <span class=\"n\">copies2</span><span class=\"p\">]))</span>\n\n<span class=\"n\">combined</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'combined.stl'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">stl</span><span class=\"o\">.</span><span class=\"n\">Mode</span><span class=\"o\">.</span><span class=\"n\">ASCII</span><span class=\"p\">)</span>  <span class=\"c1\"># save as ASCII</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6926378, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ad7f8415bf64e849a505a1f62fc31916", "sha256": "cdb00b297313c255de3980e1f0a8ffa894ce70f9159de7257003a29e8a009e85"}, "downloads": -1, "filename": "numpy-stl-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ad7f8415bf64e849a505a1f62fc31916", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5615, "upload_time": "2014-10-16T16:15:43", "upload_time_iso_8601": "2014-10-16T16:15:43.950008Z", "url": "https://files.pythonhosted.org/packages/67/8a/050dd298e8b2fee35447246d429803352dd4a5e1c32c1eaeeb34574a6006/numpy-stl-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0795b4200f886ee6b667acaabdbbbaef", "sha256": "169f623e050e3649305b226fdaec956b511be87032bfa41541a1ef701d7de537"}, "downloads": -1, "filename": "numpy-stl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0795b4200f886ee6b667acaabdbbbaef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5710, "upload_time": "2014-10-16T20:06:57", "upload_time_iso_8601": "2014-10-16T20:06:57.455255Z", "url": "https://files.pythonhosted.org/packages/68/c1/d20042bd43535f6d0ed5cf8afab80bface3ebce4c9656a94e45b7af72c88/numpy-stl-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ae1a784c5fd9f8449cb625c26117424e", "sha256": "da9808a57889fae476e58b0d0f7b433fd479053caf37f9ebe31fe41707a0bfe6"}, "downloads": -1, "filename": "numpy-stl-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ae1a784c5fd9f8449cb625c26117424e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6123, "upload_time": "2014-10-16T22:32:57", "upload_time_iso_8601": "2014-10-16T22:32:57.393596Z", "url": "https://files.pythonhosted.org/packages/ca/f8/39e629466be332138e30c48791d3a6c05fbeac7f87c7da4ef08a27d72329/numpy-stl-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2d39890e39e6db159582a822afb309b2", "sha256": "a0b0dd20a8ffd566bba9136c076d8d4effa338b2769019f27e3f728ce435fd9f"}, "downloads": -1, "filename": "numpy-stl-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2d39890e39e6db159582a822afb309b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7476, "upload_time": "2014-10-20T10:53:45", "upload_time_iso_8601": "2014-10-20T10:53:45.940367Z", "url": "https://files.pythonhosted.org/packages/9f/3d/67ccd7f440f8ffed21bb71aebd69c4d6a42e900a0bfe7aea07d7f020c8f4/numpy-stl-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "55f4de5d5fcca395582c84d19be8f6f6", "sha256": "515f0192e4dd20c229122268ea4e2edacc967e252b6cb26161f636c8e5920c95"}, "downloads": -1, "filename": "numpy-stl-1.1.2.tar.gz", "has_sig": false, "md5_digest": "55f4de5d5fcca395582c84d19be8f6f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7472, "upload_time": "2014-10-20T14:38:32", "upload_time_iso_8601": "2014-10-20T14:38:32.310427Z", "url": "https://files.pythonhosted.org/packages/3d/ec/8b1ace0dd95f48a3bb886699458142ccaac613919d81f09e730447b051e2/numpy-stl-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "50ce83772b5b38743edb09d7b91a9123", "sha256": "ccfd898619d71f6f278a2344122289e0d8d4a652b86e993828406f03cb52b93e"}, "downloads": -1, "filename": "numpy-stl-1.2.0.tar.gz", "has_sig": false, "md5_digest": "50ce83772b5b38743edb09d7b91a9123", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7697, "upload_time": "2014-10-23T13:17:36", "upload_time_iso_8601": "2014-10-23T13:17:36.428365Z", "url": "https://files.pythonhosted.org/packages/83/1d/c06527b2ccb46eaa3322c5431b2843c286fe09cb6443d4e39a09a6734028/numpy-stl-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "708d6ba1f9f16c2ed2caf633c7d441a5", "sha256": "fffa71cb0de6b7499d285e1dfa1251e9beb3573eb1985112d38e6d8dc8562867"}, "downloads": -1, "filename": "numpy-stl-1.3.0.tar.gz", "has_sig": false, "md5_digest": "708d6ba1f9f16c2ed2caf633c7d441a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7887, "upload_time": "2014-10-23T13:55:31", "upload_time_iso_8601": "2014-10-23T13:55:31.404228Z", "url": "https://files.pythonhosted.org/packages/d1/e8/29d55f270cc3f91d306f9d7f2c16d50ca2fc22a3142a6d7c8996ada38972/numpy-stl-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "19c2da765f862b7a7eb8b4025ee96434", "sha256": "7782cea233aebc983d4647a19e5c3a7c1311b5c9542114dff82c5c669c1d2632"}, "downloads": -1, "filename": "numpy-stl-1.3.1.tar.gz", "has_sig": false, "md5_digest": "19c2da765f862b7a7eb8b4025ee96434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7898, "upload_time": "2014-10-23T16:31:29", "upload_time_iso_8601": "2014-10-23T16:31:29.335744Z", "url": "https://files.pythonhosted.org/packages/a7/a3/7e44ea61edd3cc80df0dd1dd7d2e3bc68e9620939e54dee41b860e80021a/numpy-stl-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "1d30b5d61e5398dc5728f22801bfd680", "sha256": "d11b80772d2f41f25868381a0b0690a7adbd63d02f2d8f3f352d38ed2792e6a9"}, "downloads": -1, "filename": "numpy-stl-1.3.2.tar.gz", "has_sig": false, "md5_digest": "1d30b5d61e5398dc5728f22801bfd680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7879, "upload_time": "2014-10-23T20:16:05", "upload_time_iso_8601": "2014-10-23T20:16:05.686490Z", "url": "https://files.pythonhosted.org/packages/e2/63/189199294eb09aaf8c1b4cc5e1d7bbe44da0799d27ee7c57fdf685fe3cf7/numpy-stl-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "3c30e18c77d5dfb7e61dde2ebc38bee8", "sha256": "95992e9aa213792ebd5df42ca7f3048dd668fb9c49640c03d340888cf6e67e58"}, "downloads": -1, "filename": "numpy-stl-1.3.3.tar.gz", "has_sig": false, "md5_digest": "3c30e18c77d5dfb7e61dde2ebc38bee8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7886, "upload_time": "2014-10-24T15:34:16", "upload_time_iso_8601": "2014-10-24T15:34:16.618948Z", "url": "https://files.pythonhosted.org/packages/27/1d/a8b319c29f1b8c028b6cdb464226eda1ddd9ce8e5a48a809e9eb5c7f18bf/numpy-stl-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "227a0ac10bac7ee639ca229e10033f4a", "sha256": "20c23365243cd7c2c3fd85f48364ffabbe3eab0117bfdd8a941abd75673f30f1"}, "downloads": -1, "filename": "numpy-stl-1.3.4.tar.gz", "has_sig": false, "md5_digest": "227a0ac10bac7ee639ca229e10033f4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8041, "upload_time": "2014-11-04T13:28:28", "upload_time_iso_8601": "2014-11-04T13:28:28.811610Z", "url": "https://files.pythonhosted.org/packages/02/fb/64496bd89dab27670c32137f0199cc2c0fa2040038ee4935e3f2d81223ed/numpy-stl-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "25ae1e1da6cc8a3188124dff6b749c4f", "sha256": "879514668a1ea52a202a685fbe30103b1de32b019f3ed61d23dc692d0603466d"}, "downloads": -1, "filename": "numpy-stl-1.3.5.tar.gz", "has_sig": false, "md5_digest": "25ae1e1da6cc8a3188124dff6b749c4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8324, "upload_time": "2014-11-27T21:38:54", "upload_time_iso_8601": "2014-11-27T21:38:54.461781Z", "url": "https://files.pythonhosted.org/packages/a8/0f/9bc7520894a2af5ef440c092e88e15f32df021ca021f6a50d39870440811/numpy-stl-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "5b1075af485f5ee1aee83ef4a0502145", "sha256": "04ee0574c775332e1674c973fd603747e2166b07398fd69d511a3c9a5eaf1103"}, "downloads": -1, "filename": "numpy-stl-1.3.6.tar.gz", "has_sig": false, "md5_digest": "5b1075af485f5ee1aee83ef4a0502145", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8370, "upload_time": "2014-12-10T17:05:14", "upload_time_iso_8601": "2014-12-10T17:05:14.101261Z", "url": "https://files.pythonhosted.org/packages/5c/a2/738abe42911e628831b2f732745b19616763f5dfe1992482099c2aae8fd5/numpy-stl-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "a8ebce2a5552bbeb226524efeaa94e58", "sha256": "771dc5e5eae0cf8188a6a4b29d51e45afbfe4d68812f878f0e450eb6a21298ee"}, "downloads": -1, "filename": "numpy-stl-1.3.7.tar.gz", "has_sig": false, "md5_digest": "a8ebce2a5552bbeb226524efeaa94e58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8520, "upload_time": "2014-12-15T15:26:38", "upload_time_iso_8601": "2014-12-15T15:26:38.988336Z", "url": "https://files.pythonhosted.org/packages/5d/7a/18497a594ad12d3ddeacb0870d71308b3049552623a42149deda424b4394/numpy-stl-1.3.7.tar.gz", "yanked": false}], "1.3.8": [{"comment_text": "", "digests": {"md5": "98b01c385226fac3a2e5148c534d9ae2", "sha256": "ac1d6751a5d74b8c3b15790fa253cdb7ed0941dcd23fa0f5f84862afda3a5b80"}, "downloads": -1, "filename": "numpy-stl-1.3.8.tar.gz", "has_sig": false, "md5_digest": "98b01c385226fac3a2e5148c534d9ae2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8736, "upload_time": "2015-01-29T16:03:40", "upload_time_iso_8601": "2015-01-29T16:03:40.269267Z", "url": "https://files.pythonhosted.org/packages/67/d7/01d936a04e826ccd2ae82c855ac7f3ffbf33896e9f8aa4175cd7cdd58cf8/numpy-stl-1.3.8.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "45f063495549ec453015647b18f8efde", "sha256": "d132ee62c1ef2c12c32c2f33bf57c84a86345a23feddfdf81418861de4006a1d"}, "downloads": -1, "filename": "numpy-stl-1.4.0.tar.gz", "has_sig": false, "md5_digest": "45f063495549ec453015647b18f8efde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8868, "upload_time": "2015-02-09T11:16:43", "upload_time_iso_8601": "2015-02-09T11:16:43.985240Z", "url": "https://files.pythonhosted.org/packages/3e/6d/a47fc4cf9c72d5286884b878d2936c7a1438b02c4233ec22b40b9927a87a/numpy-stl-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "7e46fb957941b336863d05dbe51ab3e1", "sha256": "fef1741c014a95ed07c1785f060ef2983ee61f610997a3244675e77eb7ff57e8"}, "downloads": -1, "filename": "numpy-stl-1.4.1.tar.gz", "has_sig": false, "md5_digest": "7e46fb957941b336863d05dbe51ab3e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9503, "upload_time": "2015-02-12T10:06:22", "upload_time_iso_8601": "2015-02-12T10:06:22.556881Z", "url": "https://files.pythonhosted.org/packages/ef/05/b31830d627b4f060b75da3edcbc82a70171bf342edd8bc8c7197ab733ab5/numpy-stl-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "6125c64b7b6998dfdab0406d8220eab3", "sha256": "12da3dcb1b1083b53e1e3a9886dca23dce77b3a2ecb7765e2d427c95010712ea"}, "downloads": -1, "filename": "numpy-stl-1.4.2.tar.gz", "has_sig": false, "md5_digest": "6125c64b7b6998dfdab0406d8220eab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9546, "upload_time": "2015-02-13T11:00:27", "upload_time_iso_8601": "2015-02-13T11:00:27.865676Z", "url": "https://files.pythonhosted.org/packages/a9/e1/04a722167e56007db2b5ed71215bd88b2ea9e79cb0d01048b5db08fa4bfd/numpy-stl-1.4.2.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "1b9c811ec9bb7b922f8b5e8771f3bd5a", "sha256": "7ee466296dadb5e960bf6e24fc808df78a3412d1e6f1b612aea2f035a5bec4c5"}, "downloads": -1, "filename": "numpy-stl-1.5.0.tar.gz", "has_sig": false, "md5_digest": "1b9c811ec9bb7b922f8b5e8771f3bd5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10536, "upload_time": "2015-06-26T22:31:36", "upload_time_iso_8601": "2015-06-26T22:31:36.822447Z", "url": "https://files.pythonhosted.org/packages/71/9b/41b8570fa9fefc45a589c3664f5439fbbbb375cde4424bb620a416ebfbbb/numpy-stl-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "7e150cc38553471c5611bad83563f62e", "sha256": "caba29b0807ccf61c3b8e57c6b7bbc8d8f506e94b1084c982bb2514823ffbad7"}, "downloads": -1, "filename": "numpy-stl-1.5.1.tar.gz", "has_sig": false, "md5_digest": "7e150cc38553471c5611bad83563f62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10527, "upload_time": "2015-07-10T17:03:10", "upload_time_iso_8601": "2015-07-10T17:03:10.601785Z", "url": "https://files.pythonhosted.org/packages/e0/b2/bf99092fcaa968b3a7c8d2f50d670ad3f19f66e51176d35c7ea203f65fdb/numpy-stl-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "11d9b89323ae76746d5191214617e37b", "sha256": "dc80eeed523327842b217a0a3bee413a5d55ca184c63d91bfd76a490f4fc2de4"}, "downloads": -1, "filename": "numpy-stl-1.5.2.tar.gz", "has_sig": false, "md5_digest": "11d9b89323ae76746d5191214617e37b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10522, "upload_time": "2015-07-23T20:13:06", "upload_time_iso_8601": "2015-07-23T20:13:06.303616Z", "url": "https://files.pythonhosted.org/packages/e4/4a/ea8d542266ec81ff2c719d3c1a06f049b2ee3c66f3fa6b530e521d8e3caa/numpy-stl-1.5.2.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "d68d83500390bffb05aa7e10af892541", "sha256": "e6949ccd7c394110ff5227317822b4984a4bb1ef18b6ed277260a424d31f9539"}, "downloads": -1, "filename": "numpy-stl-1.6.0.tar.gz", "has_sig": false, "md5_digest": "d68d83500390bffb05aa7e10af892541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12410, "upload_time": "2015-08-08T22:44:05", "upload_time_iso_8601": "2015-08-08T22:44:05.319242Z", "url": "https://files.pythonhosted.org/packages/1b/6a/5a736fdf967faee16074b55f5612355a16c8bfcc500546ad8b8e33d01992/numpy-stl-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "59bf104d989f0be33c80b17a0689bd3f", "sha256": "5438913994810c073fa214bcc74c67be1c7da4a18e8f720c25acc000deedd2a0"}, "downloads": -1, "filename": "numpy-stl-1.6.1.tar.gz", "has_sig": false, "md5_digest": "59bf104d989f0be33c80b17a0689bd3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13289, "upload_time": "2015-08-13T18:36:13", "upload_time_iso_8601": "2015-08-13T18:36:13.764613Z", "url": "https://files.pythonhosted.org/packages/26/ae/b216743f4bac58f0a38e643627ca90fdf8a56eaa6113bf94c323ce97c617/numpy-stl-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "f211f62cf79babd89bf305f9b0f1f77e", "sha256": "d20b57ce6ca8fe3e2c44ba723a6de86329b13b02137f8de44bc1a2fb59d39ab3"}, "downloads": -1, "filename": "numpy-stl-1.6.2.tar.gz", "has_sig": false, "md5_digest": "f211f62cf79babd89bf305f9b0f1f77e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12625, "upload_time": "2015-08-17T21:46:31", "upload_time_iso_8601": "2015-08-17T21:46:31.242210Z", "url": "https://files.pythonhosted.org/packages/6e/dc/259815d4257abf78df1d52f7b9439f9428d8e248f87407600f03bc57a75f/numpy-stl-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "5ee12ddb223d22030be0d5d646fc6f0e", "sha256": "5b68039ca98685413d5aa4e3a975c84fad3eb63d63de910f408955c2c3de0981"}, "downloads": -1, "filename": "numpy-stl-1.7.0.tar.gz", "has_sig": false, "md5_digest": "5ee12ddb223d22030be0d5d646fc6f0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13214, "upload_time": "2015-10-10T21:47:11", "upload_time_iso_8601": "2015-10-10T21:47:11.226201Z", "url": "https://files.pythonhosted.org/packages/e1/df/bd025c1d35e3965e98c0b0b5a50c2688a81cea4b2c3c378c093bc22acfed/numpy-stl-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "fa3a9324418b72a6827f266671198fe1", "sha256": "74c81182de21e2f0c75793618cb46a8b64da964df717adfb971c297b7b6908a9"}, "downloads": -1, "filename": "numpy-stl-1.7.1.tar.gz", "has_sig": false, "md5_digest": "fa3a9324418b72a6827f266671198fe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14132, "upload_time": "2015-10-30T07:25:59", "upload_time_iso_8601": "2015-10-30T07:25:59.830591Z", "url": "https://files.pythonhosted.org/packages/b3/91/6528cc96a120673663fbc0885c2c752da1d593f83f9fca808989a6bf67a2/numpy-stl-1.7.1.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "8503699f147276ac6f3719ea4e6fbd3b", "sha256": "099dc127ba701a264d52cd95d8864a493e2f39d754c232785f27b9ee312033f3"}, "downloads": -1, "filename": "numpy_stl-1.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8503699f147276ac6f3719ea4e6fbd3b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19653, "upload_time": "2016-03-26T11:49:12", "upload_time_iso_8601": "2016-03-26T11:49:12.854224Z", "url": "https://files.pythonhosted.org/packages/c1/24/71588ba0ac44ba7a16d3a4316e432cd9a9470d6022f70458db740fca8b75/numpy_stl-1.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "133f96bbe60430602dbe9999d6ee39c0", "sha256": "25739609586857ffa43e220ccb0dec939f8a3f4882c74bf2b42f6249ea293687"}, "downloads": -1, "filename": "numpy-stl-1.8.0.tar.gz", "has_sig": false, "md5_digest": "133f96bbe60430602dbe9999d6ee39c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41548, "upload_time": "2016-03-26T11:49:07", "upload_time_iso_8601": "2016-03-26T11:49:07.357808Z", "url": "https://files.pythonhosted.org/packages/a2/8c/1d19a515613e965b8b8f6e6d60e38522825404010492b0d27b30577e9431/numpy-stl-1.8.0.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "fc954a1231667fa185f75e102f6486ff", "sha256": "6a1c2a65e8aa7d4aeacdaa60a649d94fdb8bc2255c3f3c9ff696353be7d15460"}, "downloads": -1, "filename": "numpy_stl-1.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc954a1231667fa185f75e102f6486ff", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29432, "upload_time": "2016-05-27T12:08:17", "upload_time_iso_8601": "2016-05-27T12:08:17.990599Z", "url": "https://files.pythonhosted.org/packages/d5/fc/937ef2891517792e83116b4910be4beaa2ecab16a6488795c04e0f28b410/numpy_stl-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a73f72ab9197eeb04c3dc482b64898d0", "sha256": "dab0c8ded97dec1e0df2dfc4e2f3c7992afee447e9386a583e10679073818575"}, "downloads": -1, "filename": "numpy-stl-1.9.0.tar.gz", "has_sig": false, "md5_digest": "a73f72ab9197eeb04c3dc482b64898d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97960, "upload_time": "2016-05-27T12:08:13", "upload_time_iso_8601": "2016-05-27T12:08:13.357341Z", "url": "https://files.pythonhosted.org/packages/50/7c/19565f97703711ccf79143f7547b2a989844b72c2253ba3ea2745ecf8ddc/numpy-stl-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "bfd4d41af996fce329f5a53a8be80fc1", "sha256": "1785296566890fec9be528ac998d0f99abae30963bd72c14dc2e4474171af4f9"}, "downloads": -1, "filename": "numpy-stl-1.9.1.tar.gz", "has_sig": false, "md5_digest": "bfd4d41af996fce329f5a53a8be80fc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48732, "upload_time": "2016-07-11T23:07:23", "upload_time_iso_8601": "2016-07-11T23:07:23.894402Z", "url": "https://files.pythonhosted.org/packages/8c/8d/e742820cbba5ea1abea14431898b67f17788acb7f9ccc8eaa3caf34109d1/numpy-stl-1.9.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "53a25c22898aaa53d123fccf4079efc0", "sha256": "f4412af29c84056c9a792c3076762f4ba3a4246afcb1805a35362ec43f597a98"}, "downloads": -1, "filename": "numpy_stl-2.0.0-cp35-cp35m-macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "53a25c22898aaa53d123fccf4079efc0", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 42426, "upload_time": "2016-08-20T19:59:00", "upload_time_iso_8601": "2016-08-20T19:59:00.669542Z", "url": "https://files.pythonhosted.org/packages/f2/5f/5b1e7cefb805e8f7fb393716834520625943b26a1b8f7ab2dd0e8edb4a31/numpy_stl-2.0.0-cp35-cp35m-macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b365dfd840687cb2d65e5794272d096", "sha256": "4ebff3710b5159d439241779ec63f58226a35d3a9d80903deb04c723bed894b9"}, "downloads": -1, "filename": "numpy-stl-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4b365dfd840687cb2d65e5794272d096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 171210, "upload_time": "2016-08-20T19:58:57", "upload_time_iso_8601": "2016-08-20T19:58:57.653606Z", "url": "https://files.pythonhosted.org/packages/99/11/53fa63e0a3770d07fa265b67d6fd7dd32142c5158f54432557c4bce4cc9c/numpy-stl-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "157f5d947bb7f21e8e0d6c7db665a11e", "sha256": "a921c7bd8e7f9f8ee0f7e8a6d2f67950e4c28f6bc18af352d1d30182058ec710"}, "downloads": -1, "filename": "numpy_stl-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "157f5d947bb7f21e8e0d6c7db665a11e", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19290, "upload_time": "2016-12-28T18:21:55", "upload_time_iso_8601": "2016-12-28T18:21:55.852505Z", "url": "https://files.pythonhosted.org/packages/ce/a3/feba5b6cb78fd4731a7a4b1c0a1a4fc6ec8cb815937847d879983cac4b51/numpy_stl-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cccfe24496412945a9802fe00bf96092", "sha256": "fed423a057a2cb46a075049e3df1ede865ec7581bf788fe07354f547d751fc2a"}, "downloads": -1, "filename": "numpy-stl-2.1.0.tar.gz", "has_sig": false, "md5_digest": "cccfe24496412945a9802fe00bf96092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 172250, "upload_time": "2016-12-28T18:21:53", "upload_time_iso_8601": "2016-12-28T18:21:53.725957Z", "url": "https://files.pythonhosted.org/packages/d3/bc/2f99c23c28dc84322b1a2a70ff81619403afa701f509ede0b54ddc9aba03/numpy-stl-2.1.0.tar.gz", "yanked": false}], "2.10.0": [{"comment_text": "", "digests": {"md5": "b8b29430cc18e2f01b35de7767984dd0", "sha256": "7b27040d12934f425f9018cf127644c7b40408ade5ffd975208de41984a949c2"}, "downloads": -1, "filename": "numpy_stl-2.10.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "b8b29430cc18e2f01b35de7767984dd0", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 43467, "upload_time": "2019-02-17T10:25:48", "upload_time_iso_8601": "2019-02-17T10:25:48.367494Z", "url": "https://files.pythonhosted.org/packages/c9/3e/8540ce5d0271129c71d9fc77758a51545545c2dad3d53f16db3d33a3212e/numpy_stl-2.10.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b27940d9ac04adfc2c4576087e008b9a", "sha256": "92b18b6b4feb7ecb173bbf1e5824252a70d6d709cd97b7901e845b75982606e5"}, "downloads": -1, "filename": "numpy-stl-2.10.0.tar.gz", "has_sig": false, "md5_digest": "b27940d9ac04adfc2c4576087e008b9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 484190, "upload_time": "2019-02-17T10:25:45", "upload_time_iso_8601": "2019-02-17T10:25:45.777655Z", "url": "https://files.pythonhosted.org/packages/c5/ff/e633717ea5be71fda4b9befc487f3c6f9d1194f00162731348f3cedd1f7a/numpy-stl-2.10.0.tar.gz", "yanked": false}], "2.10.1": [{"comment_text": "", "digests": {"md5": "8e8b5083cf6b2603ae7e5f1ed0fae6b7", "sha256": "1c9f8209ba4fc9b5eb54740b375d6ab3c238ed3a1ce3f776d72e04f44c8b91fa"}, "downloads": -1, "filename": "numpy_stl-2.10.1-py2-none-any.whl", "has_sig": true, "md5_digest": "8e8b5083cf6b2603ae7e5f1ed0fae6b7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17493, "upload_time": "2019-03-29T11:57:47", "upload_time_iso_8601": "2019-03-29T11:57:47.699791Z", "url": "https://files.pythonhosted.org/packages/c9/5d/6cf10be944702c8b4c49ee339790ef1b575607cbc3b1e2b3e8f993135458/numpy_stl-2.10.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b850fa642d3c303e05e0ec8678bf7e71", "sha256": "f6b529b8a8112dfe456d4f7697c7aee0aca62be5a873879306afe4b26fca963c"}, "downloads": -1, "filename": "numpy-stl-2.10.1.tar.gz", "has_sig": true, "md5_digest": "b850fa642d3c303e05e0ec8678bf7e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 483874, "upload_time": "2019-03-29T11:57:39", "upload_time_iso_8601": "2019-03-29T11:57:39.729714Z", "url": "https://files.pythonhosted.org/packages/a2/08/19caa3c20fd9a486a0a603e329b22578aca7e6f184f0575fcd0980ba3ac5/numpy-stl-2.10.1.tar.gz", "yanked": false}], "2.11.0": [{"comment_text": "", "digests": {"md5": "2d0e8f158cff6157ceea7d9f51cd95e1", "sha256": "1cc5dec0b3cd2eb5ecb2cb197a7de973cfcd9e46291a55fc8edcc4dabc09832a"}, "downloads": -1, "filename": "numpy_stl-2.11.0-cp38-cp38-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "2d0e8f158cff6157ceea7d9f51cd95e1", "packagetype": "bdist_wheel", "python_version": "3.8", "requires_python": null, "size": 44371, "upload_time": "2020-03-24T23:47:35", "upload_time_iso_8601": "2020-03-24T23:47:35.207392Z", "url": "https://files.pythonhosted.org/packages/1e/f9/7f4c9e370b21bc73d9d56373aa9695b99241a9f2de9b22df1f8d3e20fc11/numpy_stl-2.11.0-cp38-cp38-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e16a849c903b88439aced8c1a41b363", "sha256": "de0f844e854f828f3501285aa31aebe6385e6112341d0ed77228cfeb0039cbfc"}, "downloads": -1, "filename": "numpy-stl-2.11.0.tar.gz", "has_sig": false, "md5_digest": "9e16a849c903b88439aced8c1a41b363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 486077, "upload_time": "2020-03-24T23:47:32", "upload_time_iso_8601": "2020-03-24T23:47:32.039209Z", "url": "https://files.pythonhosted.org/packages/92/5c/b99948ea825e821ba95ea3ded33ba03d73b2fd6db5b21e39ead8db3c5058/numpy-stl-2.11.0.tar.gz", "yanked": false}], "2.11.1": [{"comment_text": "", "digests": {"md5": "c58adb1b706cafbf7f63a320f6aaeda7", "sha256": "5afd2c93b37a9c0ba00277bb7622e21c0c59aff62872c917f32c230a5896e014"}, "downloads": -1, "filename": "numpy_stl-2.11.1-cp38-cp38-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "c58adb1b706cafbf7f63a320f6aaeda7", "packagetype": "bdist_wheel", "python_version": "3.8", "requires_python": null, "size": 44412, "upload_time": "2020-03-31T20:42:34", "upload_time_iso_8601": "2020-03-31T20:42:34.468662Z", "url": "https://files.pythonhosted.org/packages/b3/bb/7c5b1edd2d82c3246cbd3c1589bb325a3c6cb4f689231f6c758b7b375093/numpy_stl-2.11.1-cp38-cp38-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f29b6b9edf787cbe564cc167bd4d7044", "sha256": "f5955b0a447f63ab3a73ff8399aeeea5275a7a063ab3cb58381543cbbce8e48a"}, "downloads": -1, "filename": "numpy-stl-2.11.1.tar.gz", "has_sig": false, "md5_digest": "f29b6b9edf787cbe564cc167bd4d7044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 486216, "upload_time": "2020-03-31T20:42:31", "upload_time_iso_8601": "2020-03-31T20:42:31.754934Z", "url": "https://files.pythonhosted.org/packages/c7/eb/ad27dc4ab6e3789a4b023c255d6036357a18ae5ddbb627fd0b8f99ca0a35/numpy-stl-2.11.1.tar.gz", "yanked": false}], "2.11.2": [{"comment_text": "", "digests": {"md5": "d625e8c11a6cfb475d9c33781593e830", "sha256": "192556df794b9ef0c1333fd5f034e4a3905d63f52345a0cc1e359045670e34b6"}, "downloads": -1, "filename": "numpy-stl-2.11.2.tar.gz", "has_sig": false, "md5_digest": "d625e8c11a6cfb475d9c33781593e830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 484937, "upload_time": "2020-04-01T09:18:53", "upload_time_iso_8601": "2020-04-01T09:18:53.895154Z", "url": "https://files.pythonhosted.org/packages/ef/08/2d8533798a08e1878120a1bf4970eb8ee50f6860cd50db917c9defe5dda2/numpy-stl-2.11.2.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "1debe50ea9c5745c41b08557b0d08a91", "sha256": "65706fd43b5974dd0cf9fa3c7ce1e802b456a85d9676a04913a9ef3a5d6c6d5a"}, "downloads": -1, "filename": "numpy_stl-2.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1debe50ea9c5745c41b08557b0d08a91", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19337, "upload_time": "2017-01-02T17:33:09", "upload_time_iso_8601": "2017-01-02T17:33:09.480139Z", "url": "https://files.pythonhosted.org/packages/7d/50/ec01d5f25903f9db95c15d40f63e1469a43d96143ee91934b1995ad391f1/numpy_stl-2.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d37ff8dad3a69254248a125101c6e2d", "sha256": "a397eb5b7bc2d5d488a9ad4df42e0b812ea180ad17cfa77ab55ff623d7d4bbda"}, "downloads": -1, "filename": "numpy-stl-2.2.0.tar.gz", "has_sig": false, "md5_digest": "1d37ff8dad3a69254248a125101c6e2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 172399, "upload_time": "2017-01-02T17:33:06", "upload_time_iso_8601": "2017-01-02T17:33:06.429397Z", "url": "https://files.pythonhosted.org/packages/36/92/9ee360ee6bcc59ae5729ac79998e05c260eb5ba36f92c117e0a7c2d832d0/numpy-stl-2.2.0.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "721479ff82eb98405c1fd7218566144d", "sha256": "94bd9ea8487c6d7a25e9b74f99ea79e27e8931ed8c63d36c1dcf3cd0fc8e5db6"}, "downloads": -1, "filename": "numpy_stl-2.2.2-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "721479ff82eb98405c1fd7218566144d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 48961, "upload_time": "2017-05-03T20:50:45", "upload_time_iso_8601": "2017-05-03T20:50:45.518460Z", "url": "https://files.pythonhosted.org/packages/c5/b6/506090130b9cfa423cd4a579f07440caa98e4ec80ef2184ed7c518655b39/numpy_stl-2.2.2-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e49f30ea20c5c700f55dc0bb18bbfae6", "sha256": "6d1781d22975c292fa872e9998eff9a948f7fb1f7187ffee9102ff07d6ba96e0"}, "downloads": -1, "filename": "numpy-stl-2.2.2.tar.gz", "has_sig": false, "md5_digest": "e49f30ea20c5c700f55dc0bb18bbfae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 230820, "upload_time": "2017-05-03T20:50:41", "upload_time_iso_8601": "2017-05-03T20:50:41.451610Z", "url": "https://files.pythonhosted.org/packages/ed/d4/6eb6c0a36712c7aff5047b1fbf78d931138bb93305b568a7679b8cf7e36d/numpy-stl-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "4a3069ca04c0e43e0d40bc9c5dfb7165", "sha256": "5e2abc91a6cac1c2e91d047a71953a4e7d30ff7ac0b5e7551156acae775593b9"}, "downloads": -1, "filename": "numpy-stl-2.2.3.tar.gz", "has_sig": false, "md5_digest": "4a3069ca04c0e43e0d40bc9c5dfb7165", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105024, "upload_time": "2017-05-10T10:35:36", "upload_time_iso_8601": "2017-05-10T10:35:36.299623Z", "url": "https://files.pythonhosted.org/packages/bb/55/7b938b71397d69a669f683d497365934b7173c8b24369fd9ae4f12a74449/numpy-stl-2.2.3.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "45b27899fa79c4952d7cb37c07f75901", "sha256": "eabb6c35665f5072f5f3ad5c401ced3fd0e983016a81428ee7431c1f90157e54"}, "downloads": -1, "filename": "numpy_stl-2.3.0-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": true, "md5_digest": "45b27899fa79c4952d7cb37c07f75901", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 49211, "upload_time": "2017-07-25T22:23:51", "upload_time_iso_8601": "2017-07-25T22:23:51.009853Z", "url": "https://files.pythonhosted.org/packages/50/51/0bdfc5325c0f80409ee772b813cd82d3011e7317427ef8139927155372bc/numpy_stl-2.3.0-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80d1eb8c06883dff670a7c373cf446fb", "sha256": "3e1e7beac3645e4a2969356f6ea041a790bcb252fe85fadb01ba12dd14f0e1a3"}, "downloads": -1, "filename": "numpy-stl-2.3.0.tar.gz", "has_sig": true, "md5_digest": "80d1eb8c06883dff670a7c373cf446fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231528, "upload_time": "2017-07-25T22:23:47", "upload_time_iso_8601": "2017-07-25T22:23:47.557335Z", "url": "https://files.pythonhosted.org/packages/f9/08/577b2d039adf19e3fb3dc8c6360cf7802a66bfda69a94e979e9ed1163f81/numpy-stl-2.3.0.tar.gz", "yanked": false}], "2.3.1": [], "2.3.2": [{"comment_text": "", "digests": {"md5": "bdda822c9a7fcf9b931f4a4ff4c3aef7", "sha256": "63541e9f8ee7c0e8be317d6b8a61421c44244ddea61d2ae368c96d4c9508287e"}, "downloads": -1, "filename": "numpy_stl-2.3.2-py3-none-any.whl", "has_sig": true, "md5_digest": "bdda822c9a7fcf9b931f4a4ff4c3aef7", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 20148, "upload_time": "2017-07-26T00:06:02", "upload_time_iso_8601": "2017-07-26T00:06:02.766915Z", "url": "https://files.pythonhosted.org/packages/62/de/8362b69f9e0a13dfffd62a12e511bdeb2aa91c2d53b80017446eb561d3e2/numpy_stl-2.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10b731153ae7a857deb4cad3a135687e", "sha256": "628e044df1b9b88cb543368307c70d24f5d5b17a27588b7343e855c2a14f6e70"}, "downloads": -1, "filename": "numpy-stl-2.3.2.tar.gz", "has_sig": true, "md5_digest": "10b731153ae7a857deb4cad3a135687e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 232377, "upload_time": "2017-07-26T00:05:59", "upload_time_iso_8601": "2017-07-26T00:05:59.631611Z", "url": "https://files.pythonhosted.org/packages/61/a4/28e51753202f2a63293dfb96bd2d45fe4f065f7e47fbf677a3df0fec6913/numpy-stl-2.3.2.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "aacbcb85c83376b397aedb357628b3fc", "sha256": "8a4a1657e428d31e356e7dc0b00a115feeceb24720285a11a884465c448fe842"}, "downloads": -1, "filename": "numpy_stl-2.4.1-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": true, "md5_digest": "aacbcb85c83376b397aedb357628b3fc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 49287, "upload_time": "2018-03-10T03:26:48", "upload_time_iso_8601": "2018-03-10T03:26:48.568884Z", "url": "https://files.pythonhosted.org/packages/02/a4/78ffd04285962691adbe0bd8033e1eb973fd852eb45581cfa94a3a61a0b2/numpy_stl-2.4.1-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "708b108fc36612e1fc28513baee2ae26", "sha256": "33e88013ed2f4f9ec45598f0e0930a0d602ab3c49aa19e92703a867f37ffe520"}, "downloads": -1, "filename": "numpy-stl-2.4.1.tar.gz", "has_sig": true, "md5_digest": "708b108fc36612e1fc28513baee2ae26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102972, "upload_time": "2018-03-10T03:26:45", "upload_time_iso_8601": "2018-03-10T03:26:45.819212Z", "url": "https://files.pythonhosted.org/packages/32/56/19b5ad7fe8abecad7696e2b646c80c406c23eaf688f87c73ac2bcf6a6a26/numpy-stl-2.4.1.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "7c79bfe76194c6c3f2aeb5d42e3543e4", "sha256": "ed091c06649ccd92da3127d777817827089cd18456d386d7732349ec821a2b88"}, "downloads": -1, "filename": "numpy_stl-2.5.0-py3-none-any.whl", "has_sig": true, "md5_digest": "7c79bfe76194c6c3f2aeb5d42e3543e4", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 16057, "upload_time": "2018-05-11T14:36:04", "upload_time_iso_8601": "2018-05-11T14:36:04.855382Z", "url": "https://files.pythonhosted.org/packages/d7/71/a7bf9cb827ac8a032151cf508683430e9e3460648303ee62b94eaf414130/numpy_stl-2.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25de06aef8704bd5e277dcb388959347", "sha256": "9fcfd788247f55c1f0c6d938f02aa00df42925a07d62c8881d1b59eacaf1226e"}, "downloads": -1, "filename": "numpy-stl-2.5.0.tar.gz", "has_sig": true, "md5_digest": "25de06aef8704bd5e277dcb388959347", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103072, "upload_time": "2018-05-11T14:36:02", "upload_time_iso_8601": "2018-05-11T14:36:02.357448Z", "url": "https://files.pythonhosted.org/packages/46/ef/d61f4d3c6fd0ba9e9989a32944b88b74a718a04500852e46471bbc95a32f/numpy-stl-2.5.0.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "c42201a99685cbc28f7695b5d99b5e40", "sha256": "9705f665bf921d0c9a1cb9ece8b199fae30d4986cd570471615e62b091681853"}, "downloads": -1, "filename": "numpy_stl-2.6.0-cp36-cp36m-macosx_10_11_x86_64.whl", "has_sig": true, "md5_digest": "c42201a99685cbc28f7695b5d99b5e40", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 41346, "upload_time": "2018-06-02T13:55:39", "upload_time_iso_8601": "2018-06-02T13:55:39.357775Z", "url": "https://files.pythonhosted.org/packages/63/88/5aedaafc09fcf2520106a2d35b4a0a9adb4a60c430bfcb265ba89184fb38/numpy_stl-2.6.0-cp36-cp36m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77f523903053d262b1277a0ae0c0e520", "sha256": "53368944d2a3af2b7e313d7040448613a47e012e3284994a19163c3a4682fbbd"}, "downloads": -1, "filename": "numpy-stl-2.6.0.tar.gz", "has_sig": false, "md5_digest": "77f523903053d262b1277a0ae0c0e520", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 479779, "upload_time": "2018-06-25T15:05:54", "upload_time_iso_8601": "2018-06-25T15:05:54.892723Z", "url": "https://files.pythonhosted.org/packages/bc/13/afa053c6dda027869c7a9b2f3439d5c15fdbb26d9aaad07e6099582a7a6c/numpy-stl-2.6.0.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "2905ca068e0b4e62c6e05ede78c6b79a", "sha256": "25e03eb250e639e30312e51177525e46d6223c1a2a7e237ee6f0dac14c327f77"}, "downloads": -1, "filename": "numpy_stl-2.7.0-cp36-cp36m-macosx_10_11_x86_64.whl", "has_sig": true, "md5_digest": "2905ca068e0b4e62c6e05ede78c6b79a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 41469, "upload_time": "2018-06-25T15:09:08", "upload_time_iso_8601": "2018-06-25T15:09:08.793613Z", "url": "https://files.pythonhosted.org/packages/ee/52/fa4faa502e03ac825058403e8c0223653bb08a48b31ac8c9f60beb5b21ec/numpy_stl-2.7.0-cp36-cp36m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20f74913a5e0b07194589c6aadedcaf5", "sha256": "ede911118cfee5a8fd4c341b418fc55bfcd70a557686febc4efb6693297e3aa2"}, "downloads": -1, "filename": "numpy-stl-2.7.0.tar.gz", "has_sig": true, "md5_digest": "20f74913a5e0b07194589c6aadedcaf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 476706, "upload_time": "2018-06-25T15:09:12", "upload_time_iso_8601": "2018-06-25T15:09:12.044725Z", "url": "https://files.pythonhosted.org/packages/35/03/6a8503d9b4f04c54e46d463847112f5eb397bd1e4b32da60bcb529e81220/numpy-stl-2.7.0.tar.gz", "yanked": false}], "2.8.0": [{"comment_text": "", "digests": {"md5": "ef8a2c08bf6d48c746c3db7bea07d720", "sha256": "2a49bdbdd12ffbe943041330e216df135b7fbb7b8d052e0bd502ec615786ce8b"}, "downloads": -1, "filename": "numpy_stl-2.8.0-cp37-cp37m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "ef8a2c08bf6d48c746c3db7bea07d720", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 43793, "upload_time": "2018-11-23T03:13:09", "upload_time_iso_8601": "2018-11-23T03:13:09.238152Z", "url": "https://files.pythonhosted.org/packages/2a/fd/467a4dd836be6877f681e3d1a4272279fb5531f0a44db27a25d35af90e97/numpy_stl-2.8.0-cp37-cp37m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f1e5d7b4921b5f7776fabb557c2a9cc", "sha256": "7e0cda4354e7ac8d5aa3224818ab72c344f18b41158d180354dcb6918294c907"}, "downloads": -1, "filename": "numpy-stl-2.8.0.tar.gz", "has_sig": false, "md5_digest": "3f1e5d7b4921b5f7776fabb557c2a9cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 483229, "upload_time": "2018-11-23T03:13:06", "upload_time_iso_8601": "2018-11-23T03:13:06.115572Z", "url": "https://files.pythonhosted.org/packages/9e/66/f26856d973a86914cb46a270451560d82846468d1ff9e9affff8568c2da6/numpy-stl-2.8.0.tar.gz", "yanked": false}], "2.9.0": [{"comment_text": "", "digests": {"md5": "0604c9fb5b6ea52e1d378fbf8970e5bb", "sha256": "cf3e6aabcea949d1d030f185d357dd6c3a815a8cf497a65678db2188e51cd7d3"}, "downloads": -1, "filename": "numpy_stl-2.9.0-cp37-cp37m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "0604c9fb5b6ea52e1d378fbf8970e5bb", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 43660, "upload_time": "2018-12-17T01:42:40", "upload_time_iso_8601": "2018-12-17T01:42:40.315728Z", "url": "https://files.pythonhosted.org/packages/6d/3d/6f831c079a88567becf5867219106b7457f5ed2a416e84fc4acd25c1e2ce/numpy_stl-2.9.0-cp37-cp37m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b77911191e959ab3cdf14e030ef94f5", "sha256": "035ae1977c0ea0b17486bea9ed9b1bc0db62e9bb4146525a0300759853b80756"}, "downloads": -1, "filename": "numpy-stl-2.9.0.tar.gz", "has_sig": false, "md5_digest": "9b77911191e959ab3cdf14e030ef94f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 483117, "upload_time": "2018-12-17T01:42:37", "upload_time_iso_8601": "2018-12-17T01:42:37.498730Z", "url": "https://files.pythonhosted.org/packages/9b/c2/0af19d30c67e6e8cfe195634c1c482cbe3a268769154fdc47f5bb472443a/numpy-stl-2.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d625e8c11a6cfb475d9c33781593e830", "sha256": "192556df794b9ef0c1333fd5f034e4a3905d63f52345a0cc1e359045670e34b6"}, "downloads": -1, "filename": "numpy-stl-2.11.2.tar.gz", "has_sig": false, "md5_digest": "d625e8c11a6cfb475d9c33781593e830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 484937, "upload_time": "2020-04-01T09:18:53", "upload_time_iso_8601": "2020-04-01T09:18:53.895154Z", "url": "https://files.pythonhosted.org/packages/ef/08/2d8533798a08e1878120a1bf4970eb8ee50f6860cd50db917c9defe5dda2/numpy-stl-2.11.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:10 2020"}