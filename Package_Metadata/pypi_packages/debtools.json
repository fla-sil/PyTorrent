{"info": {"author": "Matthieu Gallet", "author_email": "gallet.matthieu@19pouces.net", "bugtrack_url": null, "classifiers": [], "description": "DebTools\n========\n\nCollection of two utilities for dealing with Debian packages:\n\n  * `deb-dep-tree` computes all dependencies of a package and download them,\n  * `multideb` generates several Debian packages at once from Python packages.\n  * `aptenv` creates a virtualenv using only package versions that are available in the official Ubuntu/Debian repositories\n\nDocumentation is available [here](https://debtools.readthedocs.org/en/latest/).\n\ninstallation\n------------\n\nThe simplest way is to use pip, like all Python packages.\n\n    pip install debtools\n    \n`aptenv`\n--------\n\nWhen your application is meant to be deployed using the official Ubuntu or Debian packages (like `python-django`).\n`aptenv` takes a list of Python packages (a standard requirements files, like the one produced by the `pip freeze command`) or the list of currently installed packages and fetch the list of available versions in the Ubuntu or Debian mirrors.\n  \n    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt\n\nBy default, the debianized name of a Python package starts by `python-` or `python3-`. Some packages have a specific name.\nFor example, the debian name of `ansible` is `ansible`.\nYou can specify a file with all your exceptions, and the mapping for a few well-known Python packages is provided, you can use it with `-M`. You can also use this system for excluding some packages:\n\n    $ echo \"PyYAML==3.12\" > requirements.txt\n    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt\n    Unable to find any version for PyYAML\n    $ echo \"PyYAML=python-yaml\" > map\n    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt -m map\n    PyYAML==3.11\n    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt -M\n    PyYAML==3.11\n    $ echo \"PyYAML=\" > map\n    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt -m map\n    \nThe `-P` only prints the Python version:\n\n    $ aptenv -u trusty -u trusty-updates --python 3 -P\n    python3.4\n    $ aptenv -u precise -u precise-updates --python 3 -P\n    python3.2\n    $ aptenv -u trusty -u trusty-updates --python 2 -P\n    python2.7\n\n\n\n`deb-dep-tree`\n--------------\n\nNote: this command requires the `apt-get` binary.\n \nDownload packages and show the dependencies of a given package:\n\n    $ deb-dep-tree libgcc1_4.7.2-5_amd64.deb \n    libgcc1\n    =======\n    \n      * multiarch-support \n      * gcc-4.7-base (= 4.7.2-5)\n      * libc6 (>= 2.2.5)\n\nOk, nothing new from the standard `dpkg -I libgcc1_4.7.2-5_amd64.deb` command, but you can provide either a package name or a .deb filename:\n\n    $ deb-dep-tree libgcc1 \n    R\u00e9ception de\u00a0: 1 T\u00e9l\u00e9chargement de libgcc1 1:4.7.2-5 [43,1 kB]\n    43,1 ko r\u00e9ceptionn\u00e9s en 0s (45,2 ko/s)            \n    libgcc1\n    =======\n    \n      * multiarch-support \n      * gcc-4.7-base (= 4.7.2-5)\n      * libc6 (>= 2.2.5)\n\nThe package will be downloaded in the current directory. You can recursively retrieve all dependencies.\n\n    $ deb-dep-tree libgcc1 -r\n    libgcc1\n    =======\n    \n      * multiarch-support \n      * gcc-4.7-base (= 4.7.2-5)\n      * libc6 (>= 2.2.5)\n    \n    multiarch-support\n    =================\n    \n      * libc6 (>= 2.3.6-2)\n    \n    libc-bin\n    ========\n    \n    \n    gcc-4.7-base\n    ============\n    \n    \n    libc6\n    =====\n    \n      * libc-bin (= 2.13-38+deb7u8)\n      * libgcc1 \n      \n    $ ls\n    gcc-4.7-base_4.7.2-5_amd64.deb  libc6_2.13-38+deb7u8_amd64.deb  libc-bin_2.13-38+deb7u8_amd64.deb  libgcc1_4.7.2-5_amd64.deb  multiarch-support_2.13-38+deb7u8_amd64.deb\n\n\n\nSometimes, there is a choice between several possibilities for a given dependency. These dependencies are ignored (since we cannot select one).\nHowever, you can use the `-l` flag to select choices which are currently installed on the system.\n\n    $ dpkg -I libssl1.0.0_1.0.1e-2+deb7u17_amd64.deb | grep Depends\n    Pre-Depends: multiarch-support\n    Depends: libc6 (>= 2.7), zlib1g (>= 1:1.1.4), debconf (>= 0.5) | debconf-2.0\n    \n    $ dpkg -l | grep debconf\n    ii  debconf                            1.5.49                        all          Debian configuration management system\n    ii  debconf-i18n                       1.5.49                        all          full internationalization support for debconf\n    ii  po-debconf                         1.0.16+nmu2                   all          tool for managing templates file translations with gettext\n\n    $ deb-dep-tree libssl1.0.0\n    libssl1.0.0\n    ===========\n    \n      * multiarch-support \n      * zlib1g (>= 1:1.1.4)\n      * libc6 (>= 2.7)\n    \n    $ deb-dep-tree libssl1.0.0 -l\n    libssl1.0.0\n    ===========\n    \n      * debconf \n      * multiarch-support \n      * zlib1g (>= 1:1.1.4)\n      * libc6 (>= 2.7)\n\nYou can also ignore some dependencies, by providing a file with a list of dependencies to ignore. Its format is the same as the output of the `dpkg -l` command.\n\n    $ dpkg -l | grep libc > /tmp/toignore\n    $ deb-dep-tree libgcc1 -r -i /tmp/toignore\n    libgcc1\n    =======\n    \n      * multiarch-support \n      * gcc-4.7-base (= 4.7.2-5)\n      * libc6 (>= 2.2.5)\n    \n    multiarch-support\n    =================\n    \n      * libc6 (>= 2.3.6-2)\n    \n    gcc-4.7-base\n    ============\n\n`multideb`\n==========\n\nNote: this command requires the `apt-get` binary.\n\nCreate several Debian packages at once.\nFetch the list of installed Python packages in the current virtualenv and package them as .deb packages using the standard `stdeb` tool.\nYou can also: \n\n  * define the packages to create in a configuration file,\n  * specify options for any of these packages,\n  * run Python commands after archive expansion and between the creation of Debian source and the creation of the Debian package.\n\nTo create Debian packages for all currently installed Python packages, use the following command:\n  \n    multideb --freeze\n  \nAll options must be defined in a `stdeb.cfg` configuration file. \nIn the [multideb-packages] section of `stdeb.cfg`, you can define extra packages to create: option name is the name of the package, option value is the required version.\nIn the [multideb] section of `stdeb.cfg`, you can exclude some packages from .deb creation:\n \n    [multideb]\n    exclude = celery\n        django\n        gunicorn\n\nYou can define specific options for a given package. In addition of standard `stdeb` options, you can also define `pre_source` and `post_source` options.\nValues must be an importable Python function, which will be called with the following arguments `my_callable(package_name, package_version, deb_src_dir)`.\n\nHere is the list of actions:\n\n  * download .tar.gz of the source code,\n  * expand this file,\n  * run the `pre_source` function (if defined),\n  * run `python setup.py sdist_dsc`,\n  * run the `post_source` function (if defined),\n  * create the package with `dpkg-buildpackage`.\n\nUsage:\n\n    multideb\n\nHere is a sample `stdeb.cfg` file:\n\n    [multideb-packages]\n    django = 1.8.3\n\n    [multideb]\n    exclude = funcsigs\n        django-allauth\n        gunicorn\n\n    [django]\n    pre_source = multideb.remove_tests_dir\n    \n    [celery]\n    post_source = multideb.fix_celery\n\n    ; list of standard stdeb options\n    [other_package]\n    Source = debian/control Source: (Default: <source-debianized-setup-name>)\n    Package = debian/control Package: (Default: python-<debianized-setup-name>)\n    Suite = suite (e.g. stable, lucid) in changelog (Default: unstable)\n    Maintainer = debian/control Maintainer: (Default: <setup-maintainer-or-author>)\n    Section = debian/control Section: (Default: python)\n    Epoc = version epoch\n    Depends = debian/control Depends:\n    Depends3 = debian/control Depends: for python3\n    Suggests = debian/control Suggests:\n    Suggests3 = debian/control Suggests: for python3\n    Recommends = debian/control Recommends:\n    Recommends3 = debian/control Recommends: for python3\n    Conflicts = debian/control Conflicts:\n    Uploaders = uploaders\n    Conflicts3 = debian/control Conflicts: for python3\n    Provides = debian/control Provides:\n    Provides3 = debian/control Provides: for python3\n    Replaces = debian/control Replaces:\n    Replaces3 = debian/control Replaces: for python3\n    Copyright-File = copyright file\n    Build-Conflicts = debian/control Build-Conflicts:\n    MIME-File = MIME file\n    Udev-Rules = file with rules to install to udev\n    Debian-Version = debian version (Default: 1)\n    Build-Depends = debian/control Build-Depends:\n    Forced-Upstream-Version = forced upstream version\n    Upstream-Version-Suffix = upstream version suffix\n    Stdeb-Patch-File = file containing patches for stdeb to apply\n    XS-Python-Version = debian/control XS-Python-Version:\n    Dpkg-Shlibdeps-Params = parameters passed to dpkg-shlibdeps\n    Stdeb-Patch-Level = patch level provided to patch command\n    Upstream-Version-Prefix = upstream version prefix\n    X-Python3-Version = debian/control X-Python3-Version:\n    MIME-Desktop-Files = MIME desktop files\n    Shared-MIME-File = shared MIME file\n    Setup-Env-Vars = environment variables passed to setup.py\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/d9pouces/DebTools", "keywords": "", "license": "CeCILL-B", "maintainer": "", "maintainer_email": "", "name": "debtools", "package_url": "https://pypi.org/project/debtools/", "platform": "", "project_url": "https://pypi.org/project/debtools/", "project_urls": {"Homepage": "https://github.com/d9pouces/DebTools"}, "release_url": "https://pypi.org/project/debtools/0.7.4/", "requires_dist": null, "requires_python": "", "summary": "Utilities for creating mutliple Debian packages.", "version": "0.7.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            DebTools<br>========<br><br>Collection of two utilities for dealing with Debian packages:<br><br>  * `deb-dep-tree` computes all dependencies of a package and download them,<br>  * `multideb` generates several Debian packages at once from Python packages.<br>  * `aptenv` creates a virtualenv using only package versions that are available in the official Ubuntu/Debian repositories<br><br>Documentation is available [here](https://debtools.readthedocs.org/en/latest/).<br><br>installation<br>------------<br><br>The simplest way is to use pip, like all Python packages.<br><br>    pip install debtools<br>    <br>`aptenv`<br>--------<br><br>When your application is meant to be deployed using the official Ubuntu or Debian packages (like `python-django`).<br>`aptenv` takes a list of Python packages (a standard requirements files, like the one produced by the `pip freeze command`) or the list of currently installed packages and fetch the list of available versions in the Ubuntu or Debian mirrors.<br>  <br>    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt<br><br>By default, the debianized name of a Python package starts by `python-` or `python3-`. Some packages have a specific name.<br>For example, the debian name of `ansible` is `ansible`.<br>You can specify a file with all your exceptions, and the mapping for a few well-known Python packages is provided, you can use it with `-M`. You can also use this system for excluding some packages:<br><br>    $ echo \"PyYAML==3.12\" &gt; requirements.txt<br>    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt<br>    Unable to find any version for PyYAML<br>    $ echo \"PyYAML=python-yaml\" &gt; map<br>    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt -m map<br>    PyYAML==3.11<br>    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt -M<br>    PyYAML==3.11<br>    $ echo \"PyYAML=\" &gt; map<br>    $ aptenv -u xenial -u xenial-updates --python 3 -r requirements.txt -m map<br>    <br>The `-P` only prints the Python version:<br><br>    $ aptenv -u trusty -u trusty-updates --python 3 -P<br>    python3.4<br>    $ aptenv -u precise -u precise-updates --python 3 -P<br>    python3.2<br>    $ aptenv -u trusty -u trusty-updates --python 2 -P<br>    python2.7<br><br><br><br>`deb-dep-tree`<br>--------------<br><br>Note: this command requires the `apt-get` binary.<br> <br>Download packages and show the dependencies of a given package:<br><br>    $ deb-dep-tree libgcc1_4.7.2-5_amd64.deb <br>    libgcc1<br>    =======<br>    <br>      * multiarch-support <br>      * gcc-4.7-base (= 4.7.2-5)<br>      * libc6 (&gt;= 2.2.5)<br><br>Ok, nothing new from the standard `dpkg -I libgcc1_4.7.2-5_amd64.deb` command, but you can provide either a package name or a .deb filename:<br><br>    $ deb-dep-tree libgcc1 <br>    R\u00e9ception de\u00a0: 1 T\u00e9l\u00e9chargement de libgcc1 1:4.7.2-5 [43,1 kB]<br>    43,1 ko r\u00e9ceptionn\u00e9s en 0s (45,2 ko/s)            <br>    libgcc1<br>    =======<br>    <br>      * multiarch-support <br>      * gcc-4.7-base (= 4.7.2-5)<br>      * libc6 (&gt;= 2.2.5)<br><br>The package will be downloaded in the current directory. You can recursively retrieve all dependencies.<br><br>    $ deb-dep-tree libgcc1 -r<br>    libgcc1<br>    =======<br>    <br>      * multiarch-support <br>      * gcc-4.7-base (= 4.7.2-5)<br>      * libc6 (&gt;= 2.2.5)<br>    <br>    multiarch-support<br>    =================<br>    <br>      * libc6 (&gt;= 2.3.6-2)<br>    <br>    libc-bin<br>    ========<br>    <br>    <br>    gcc-4.7-base<br>    ============<br>    <br>    <br>    libc6<br>    =====<br>    <br>      * libc-bin (= 2.13-38+deb7u8)<br>      * libgcc1 <br>      <br>    $ ls<br>    gcc-4.7-base_4.7.2-5_amd64.deb  libc6_2.13-38+deb7u8_amd64.deb  libc-bin_2.13-38+deb7u8_amd64.deb  libgcc1_4.7.2-5_amd64.deb  multiarch-support_2.13-38+deb7u8_amd64.deb<br><br><br><br>Sometimes, there is a choice between several possibilities for a given dependency. These dependencies are ignored (since we cannot select one).<br>However, you can use the `-l` flag to select choices which are currently installed on the system.<br><br>    $ dpkg -I libssl1.0.0_1.0.1e-2+deb7u17_amd64.deb | grep Depends<br>    Pre-Depends: multiarch-support<br>    Depends: libc6 (&gt;= 2.7), zlib1g (&gt;= 1:1.1.4), debconf (&gt;= 0.5) | debconf-2.0<br>    <br>    $ dpkg -l | grep debconf<br>    ii  debconf                            1.5.49                        all          Debian configuration management system<br>    ii  debconf-i18n                       1.5.49                        all          full internationalization support for debconf<br>    ii  po-debconf                         1.0.16+nmu2                   all          tool for managing templates file translations with gettext<br><br>    $ deb-dep-tree libssl1.0.0<br>    libssl1.0.0<br>    ===========<br>    <br>      * multiarch-support <br>      * zlib1g (&gt;= 1:1.1.4)<br>      * libc6 (&gt;= 2.7)<br>    <br>    $ deb-dep-tree libssl1.0.0 -l<br>    libssl1.0.0<br>    ===========<br>    <br>      * debconf <br>      * multiarch-support <br>      * zlib1g (&gt;= 1:1.1.4)<br>      * libc6 (&gt;= 2.7)<br><br>You can also ignore some dependencies, by providing a file with a list of dependencies to ignore. Its format is the same as the output of the `dpkg -l` command.<br><br>    $ dpkg -l | grep libc &gt; /tmp/toignore<br>    $ deb-dep-tree libgcc1 -r -i /tmp/toignore<br>    libgcc1<br>    =======<br>    <br>      * multiarch-support <br>      * gcc-4.7-base (= 4.7.2-5)<br>      * libc6 (&gt;= 2.2.5)<br>    <br>    multiarch-support<br>    =================<br>    <br>      * libc6 (&gt;= 2.3.6-2)<br>    <br>    gcc-4.7-base<br>    ============<br><br>`multideb`<br>==========<br><br>Note: this command requires the `apt-get` binary.<br><br>Create several Debian packages at once.<br>Fetch the list of installed Python packages in the current virtualenv and package them as .deb packages using the standard `stdeb` tool.<br>You can also: <br><br>  * define the packages to create in a configuration file,<br>  * specify options for any of these packages,<br>  * run Python commands after archive expansion and between the creation of Debian source and the creation of the Debian package.<br><br>To create Debian packages for all currently installed Python packages, use the following command:<br>  <br>    multideb --freeze<br>  <br>All options must be defined in a `stdeb.cfg` configuration file. <br>In the [multideb-packages] section of `stdeb.cfg`, you can define extra packages to create: option name is the name of the package, option value is the required version.<br>In the [multideb] section of `stdeb.cfg`, you can exclude some packages from .deb creation:<br> <br>    [multideb]<br>    exclude = celery<br>        django<br>        gunicorn<br><br>You can define specific options for a given package. In addition of standard `stdeb` options, you can also define `pre_source` and `post_source` options.<br>Values must be an importable Python function, which will be called with the following arguments `my_callable(package_name, package_version, deb_src_dir)`.<br><br>Here is the list of actions:<br><br>  * download .tar.gz of the source code,<br>  * expand this file,<br>  * run the `pre_source` function (if defined),<br>  * run `python setup.py sdist_dsc`,<br>  * run the `post_source` function (if defined),<br>  * create the package with `dpkg-buildpackage`.<br><br>Usage:<br><br>    multideb<br><br>Here is a sample `stdeb.cfg` file:<br><br>    [multideb-packages]<br>    django = 1.8.3<br><br>    [multideb]<br>    exclude = funcsigs<br>        django-allauth<br>        gunicorn<br><br>    [django]<br>    pre_source = multideb.remove_tests_dir<br>    <br>    [celery]<br>    post_source = multideb.fix_celery<br><br>    ; list of standard stdeb options<br>    [other_package]<br>    Source = debian/control Source: (Default: &lt;source-debianized-setup-name&gt;)<br>    Package = debian/control Package: (Default: python-&lt;debianized-setup-name&gt;)<br>    Suite = suite (e.g. stable, lucid) in changelog (Default: unstable)<br>    Maintainer = debian/control Maintainer: (Default: &lt;setup-maintainer-or-author&gt;)<br>    Section = debian/control Section: (Default: python)<br>    Epoc = version epoch<br>    Depends = debian/control Depends:<br>    Depends3 = debian/control Depends: for python3<br>    Suggests = debian/control Suggests:<br>    Suggests3 = debian/control Suggests: for python3<br>    Recommends = debian/control Recommends:<br>    Recommends3 = debian/control Recommends: for python3<br>    Conflicts = debian/control Conflicts:<br>    Uploaders = uploaders<br>    Conflicts3 = debian/control Conflicts: for python3<br>    Provides = debian/control Provides:<br>    Provides3 = debian/control Provides: for python3<br>    Replaces = debian/control Replaces:<br>    Replaces3 = debian/control Replaces: for python3<br>    Copyright-File = copyright file<br>    Build-Conflicts = debian/control Build-Conflicts:<br>    MIME-File = MIME file<br>    Udev-Rules = file with rules to install to udev<br>    Debian-Version = debian version (Default: 1)<br>    Build-Depends = debian/control Build-Depends:<br>    Forced-Upstream-Version = forced upstream version<br>    Upstream-Version-Suffix = upstream version suffix<br>    Stdeb-Patch-File = file containing patches for stdeb to apply<br>    XS-Python-Version = debian/control XS-Python-Version:<br>    Dpkg-Shlibdeps-Params = parameters passed to dpkg-shlibdeps<br>    Stdeb-Patch-Level = patch level provided to patch command<br>    Upstream-Version-Prefix = upstream version prefix<br>    X-Python3-Version = debian/control X-Python3-Version:<br>    MIME-Desktop-Files = MIME desktop files<br>    Shared-MIME-File = shared MIME file<br>    Setup-Env-Vars = environment variables passed to setup.py<br>\n          </div>"}, "last_serial": 2431925, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "8fb625c6b149a6c63a9efbc05107bb74", "sha256": "c31301effacac9833c06e91e3713bb354d4b7de30140c45775a4088795d76f7a"}, "downloads": -1, "filename": "debtools-0.3.tar.gz", "has_sig": false, "md5_digest": "8fb625c6b149a6c63a9efbc05107bb74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32384, "upload_time": "2015-07-27T19:05:05", "upload_time_iso_8601": "2015-07-27T19:05:05.508444Z", "url": "https://files.pythonhosted.org/packages/f0/92/fd16d22a524e896cfb1b119df4553df398f35b6053613cc8fbd66e1d661d/debtools-0.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "3f108c1b33c31239bd66eaca6b7c24a8", "sha256": "3d431e3f88ae3f9acc7c36658714d10bf893e1048fac374307b9d7119ec85a81"}, "downloads": -1, "filename": "debtools-0.4.0.tar.gz", "has_sig": false, "md5_digest": "3f108c1b33c31239bd66eaca6b7c24a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35118, "upload_time": "2015-07-27T19:27:06", "upload_time_iso_8601": "2015-07-27T19:27:06.689510Z", "url": "https://files.pythonhosted.org/packages/1f/5d/14caf5ac38965d61e9058bbc3497159a4ab117b202f8c8d67925d7a91069/debtools-0.4.0.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "85e90fe068273c746fb1d288996973b6", "sha256": "ea4e3504ebeebfb9297739bb1f252e0418931cf65e59f02a2ceca96509dd7713"}, "downloads": -1, "filename": "debtools-0.4.2.tar.gz", "has_sig": false, "md5_digest": "85e90fe068273c746fb1d288996973b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44984, "upload_time": "2015-07-29T11:33:54", "upload_time_iso_8601": "2015-07-29T11:33:54.304284Z", "url": "https://files.pythonhosted.org/packages/bd/89/9dce313cf7f01dd3a71435239915abf3c83ee27db50b4555bcfaa2ef5503/debtools-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "e32dacb9d24cc3ab8a46d00d27f98cf9", "sha256": "71972182554f7e7fc674ce7f51b440e0451c532cd7afd0a7ae69cad835c00f55"}, "downloads": -1, "filename": "debtools-0.4.3.tar.gz", "has_sig": false, "md5_digest": "e32dacb9d24cc3ab8a46d00d27f98cf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44998, "upload_time": "2015-07-29T12:27:22", "upload_time_iso_8601": "2015-07-29T12:27:22.100978Z", "url": "https://files.pythonhosted.org/packages/ed/d8/97aa6b67af76f3cc6269254d320f29ac19cf26cff90fc29f20ea34832a15/debtools-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "1726ca8e394edbe6d20cd419dad504b5", "sha256": "b398d6916f18cb0c7c812306983f473e2e3d27723b43d351e9e41371058578ac"}, "downloads": -1, "filename": "debtools-0.4.4.tar.gz", "has_sig": false, "md5_digest": "1726ca8e394edbe6d20cd419dad504b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45104, "upload_time": "2015-08-01T10:57:05", "upload_time_iso_8601": "2015-08-01T10:57:05.872435Z", "url": "https://files.pythonhosted.org/packages/85/84/b6e3cac89a1399eebae6297ffa0395121604fb61c11ad7056d227b2772f9/debtools-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "75cb3877064688e3a4f61816faca762d", "sha256": "9f0bf02a0ce5d56d0905651d7d6b2ab612054c54bc5e8c293a04436ebe24e6d2"}, "downloads": -1, "filename": "debtools-0.5.0.tar.gz", "has_sig": false, "md5_digest": "75cb3877064688e3a4f61816faca762d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45137, "upload_time": "2015-08-01T21:12:07", "upload_time_iso_8601": "2015-08-01T21:12:07.070576Z", "url": "https://files.pythonhosted.org/packages/b8/f9/8525b3eb6e173fd238a69264a7d9218a75711dc6b9723a4111c0a5791a6a/debtools-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "fab5f04da6a0885269fe5f68b2b807f9", "sha256": "b6e50b392efdd879cb731385352b5f8ce59944ffc2edbde766466f379720f888"}, "downloads": -1, "filename": "debtools-0.5.1.tar.gz", "has_sig": false, "md5_digest": "fab5f04da6a0885269fe5f68b2b807f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45166, "upload_time": "2015-08-01T21:59:22", "upload_time_iso_8601": "2015-08-01T21:59:22.238765Z", "url": "https://files.pythonhosted.org/packages/dd/80/2bca13ab2bbe3cdc2c750df5b3298a1a679de81b078aa4e52a1093ab40d4/debtools-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "92530b11c06a11b956091e092c74f320", "sha256": "1f85ab749e6fe9f7e68b4e1b20d4a3e830c976e0379d81d79493dbe8aea27030"}, "downloads": -1, "filename": "debtools-0.5.2.tar.gz", "has_sig": false, "md5_digest": "92530b11c06a11b956091e092c74f320", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45201, "upload_time": "2015-08-04T07:42:52", "upload_time_iso_8601": "2015-08-04T07:42:52.026372Z", "url": "https://files.pythonhosted.org/packages/b7/83/4a0ba1a27aaaf025820beb99677e36844f569cc55b393d34a65973943edf/debtools-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "cbd66bf16226af58433497ce7e1372a1", "sha256": "20fbf8c912e66543c48e8a9caafdf05f81ea3812fff82b62848fb059b5f3f557"}, "downloads": -1, "filename": "debtools-0.5.3.tar.gz", "has_sig": false, "md5_digest": "cbd66bf16226af58433497ce7e1372a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18953, "upload_time": "2016-01-19T11:17:54", "upload_time_iso_8601": "2016-01-19T11:17:54.407596Z", "url": "https://files.pythonhosted.org/packages/4e/e4/9a5d5745d3d92b98e12d2b035c76394941d0994d3afd19cf467fd02726a2/debtools-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "f929b0243e7b6f088a1e7526c31731dc", "sha256": "8f2484888528837281b576bf63c689f94b5c0f1c97c5a5f452d6492878e5f441"}, "downloads": -1, "filename": "debtools-0.5.4.tar.gz", "has_sig": false, "md5_digest": "f929b0243e7b6f088a1e7526c31731dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18977, "upload_time": "2016-02-24T10:29:11", "upload_time_iso_8601": "2016-02-24T10:29:11.576202Z", "url": "https://files.pythonhosted.org/packages/ea/73/f091caed18bd2d6ce635a53868d27cfe63aedc299e4489e4d6623f0e927a/debtools-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "bc3077befb20382d296c55df525fcefe", "sha256": "b38d46e3cd0abb410b6f0761cb5b6fde1b117525452f35716bf96fe18c398710"}, "downloads": -1, "filename": "debtools-0.5.5.tar.gz", "has_sig": false, "md5_digest": "bc3077befb20382d296c55df525fcefe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45857, "upload_time": "2016-04-17T15:51:43", "upload_time_iso_8601": "2016-04-17T15:51:43.331530Z", "url": "https://files.pythonhosted.org/packages/ab/4f/6ca5654482a41bb7b291ec3e81f686735fe192b4f2dd2e3435f853cd96e4/debtools-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "b4e63254cab205103ea1d340c568f48d", "sha256": "06ba2b7bc947caec06ae7b4e6e5faa079b7c3a782b92a448f5b8d90e2e889e19"}, "downloads": -1, "filename": "debtools-0.5.6.tar.gz", "has_sig": false, "md5_digest": "b4e63254cab205103ea1d340c568f48d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45871, "upload_time": "2016-04-17T15:52:59", "upload_time_iso_8601": "2016-04-17T15:52:59.620804Z", "url": "https://files.pythonhosted.org/packages/06/fc/f514fd7c231608f88f89471ac2092292c7a2676238ba0519052954660073/debtools-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "164983ba19408710a01614cd5404defa", "sha256": "3a68b99ee94714b2f167d8ce7e31377bf26f4facfc40cd5076a38779283231c2"}, "downloads": -1, "filename": "debtools-0.5.7.tar.gz", "has_sig": false, "md5_digest": "164983ba19408710a01614cd5404defa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46026, "upload_time": "2016-04-17T20:27:23", "upload_time_iso_8601": "2016-04-17T20:27:23.984906Z", "url": "https://files.pythonhosted.org/packages/cd/95/a14c641ddfea6a0dd95d994aa23316f8787b052b4da0ef2933c343b71a84/debtools-0.5.7.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "678773e065abcc05bdbc9b3b0a467774", "sha256": "06c91136a86a38cc5634bcfe733d8a6702179ed22d61feeb7f27dd55539dee16"}, "downloads": -1, "filename": "debtools-0.5.8.tar.gz", "has_sig": false, "md5_digest": "678773e065abcc05bdbc9b3b0a467774", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46049, "upload_time": "2016-04-17T20:45:30", "upload_time_iso_8601": "2016-04-17T20:45:30.294028Z", "url": "https://files.pythonhosted.org/packages/39/7c/e814c3079438376b4423454345cf35a9b4278e57491a587857bea12f364f/debtools-0.5.8.tar.gz", "yanked": false}], "0.5.9": [{"comment_text": "", "digests": {"md5": "59b7d8040af157a9e88b2e1ee97cdf65", "sha256": "943ca4bfeb8a43029e492624e49d5989a0c9415f5e909c3a9c82b136a4e5c321"}, "downloads": -1, "filename": "debtools-0.5.9.tar.gz", "has_sig": false, "md5_digest": "59b7d8040af157a9e88b2e1ee97cdf65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46045, "upload_time": "2016-04-17T21:03:06", "upload_time_iso_8601": "2016-04-17T21:03:06.394502Z", "url": "https://files.pythonhosted.org/packages/59/1a/942a353ce59d882ca08993876a62fafc43b1999d829725d78456ee0dc01a/debtools-0.5.9.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "c56f7f39b798bff35632ff80fb9779c2", "sha256": "c821b3afe928cfab9495609de9c9aae38df8e6666c510a29d55f6c24640ecb35"}, "downloads": -1, "filename": "debtools-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c56f7f39b798bff35632ff80fb9779c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46036, "upload_time": "2016-04-17T21:12:05", "upload_time_iso_8601": "2016-04-17T21:12:05.483182Z", "url": "https://files.pythonhosted.org/packages/27/7b/de1d9d03aa305b681c06fe20e9d770390302713050792157ed2ecc018bcb/debtools-0.6.0.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "911e0539a1d06f4ce092d992e4616c35", "sha256": "5028dcb49a98bfa903c31de8215843b84fc29db401a5ec4e72a8fc7c1c621d7f"}, "downloads": -1, "filename": "debtools-0.6.2.tar.gz", "has_sig": false, "md5_digest": "911e0539a1d06f4ce092d992e4616c35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19379, "upload_time": "2016-04-28T06:45:55", "upload_time_iso_8601": "2016-04-28T06:45:55.419224Z", "url": "https://files.pythonhosted.org/packages/d0/22/6869093a5d8f0de7f8c5575c86017827b2b25b98a7d0dd3d5fff076e083b/debtools-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "6ea8a57acc5c25fc39d2be17bae5267e", "sha256": "1d61a6e5bbb335ce19dc16d3c5c7f412df471b24fc0878df1459d5d952f053a0"}, "downloads": -1, "filename": "debtools-0.6.3.tar.gz", "has_sig": false, "md5_digest": "6ea8a57acc5c25fc39d2be17bae5267e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19377, "upload_time": "2016-04-28T06:53:31", "upload_time_iso_8601": "2016-04-28T06:53:31.947755Z", "url": "https://files.pythonhosted.org/packages/54/eb/ae456d8c16b673c9662601092133c72ae02b91b9a68e5f1cbd2b1c2e4753/debtools-0.6.3.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "15e7eeb17cc16b0a406f9c5d64f32c7e", "sha256": "35230bf8963c8592cd074dbd3e1daff4f6af409cf6f5817b4efd9c64a2a5434b"}, "downloads": -1, "filename": "debtools-0.7.3.tar.gz", "has_sig": false, "md5_digest": "15e7eeb17cc16b0a406f9c5d64f32c7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61171, "upload_time": "2016-09-11T13:04:20", "upload_time_iso_8601": "2016-09-11T13:04:20.672899Z", "url": "https://files.pythonhosted.org/packages/09/2c/bfdcd060b526e171d80470520e39cdee3599fda1fc76341f7bae922f935a/debtools-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "23339f313124314e8d82fa1339dc4ddf", "sha256": "68cbecc03ef5642a127a1b4fa71f5c6db389a13353472508f6912beda1ec5f1b"}, "downloads": -1, "filename": "debtools-0.7.4.tar.gz", "has_sig": false, "md5_digest": "23339f313124314e8d82fa1339dc4ddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61180, "upload_time": "2016-10-30T20:30:15", "upload_time_iso_8601": "2016-10-30T20:30:15.540764Z", "url": "https://files.pythonhosted.org/packages/c8/bc/b1f5735332cad8c5d601e4d02a2f2beba51b3122ce5d093e09b2a202248a/debtools-0.7.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23339f313124314e8d82fa1339dc4ddf", "sha256": "68cbecc03ef5642a127a1b4fa71f5c6db389a13353472508f6912beda1ec5f1b"}, "downloads": -1, "filename": "debtools-0.7.4.tar.gz", "has_sig": false, "md5_digest": "23339f313124314e8d82fa1339dc4ddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61180, "upload_time": "2016-10-30T20:30:15", "upload_time_iso_8601": "2016-10-30T20:30:15.540764Z", "url": "https://files.pythonhosted.org/packages/c8/bc/b1f5735332cad8c5d601e4d02a2f2beba51b3122ce5d093e09b2a202248a/debtools-0.7.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:39 2020"}