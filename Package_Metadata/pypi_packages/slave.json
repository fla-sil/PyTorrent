{"info": {"author": "Marco Halder", "author_email": "marco.halder@frm2.tum.de", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Communications", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Slave:\n======\n\nSlave is a micro framework designed to simplify instrument communication and\ncontrol and comes with a variety of ready to use device drivers.\n\nOverview\n--------\n\nSlave provides an intuitive way of creating instrument api's, inspired by\nobject relational mappers.\n\n::\n\n    from slave.iec60488 import IEC60488, PowerOn\n    from slave.driver import Command\n    from slave.types import Integer, Enum\n\n    class Device(IEC60488, PowerOn):\n        \"\"\"An iec60488 conforming device api with additional commands.\"\"\"\n        def __init__(self, transport):\n            super(Device, self).__init__(transport)\n            # A custom command\n            self.my_command = Command(\n                'QRY?', # query message header\n                'WRT',  # command message header\n                # response and command data type\n                [Integer, Enum('first', 'second')]\n            )\n\nCommands mimic instance attributes. Read access queries the device, parses and\nconverts the response and finally returns it. Write access parses and converts\nthe arguments and sends them to the device. This leads to very intuitive\ninterfaces.\n\nSeveral device drivers are already implemented, and many more are under\ndevelopment. A short usage example is given below::\n\n    import time\n    from slave.transport import Visa\n    from slave.srs import SR830\n\n    lockin = SR830(Visa('GPIB::08'))\n    # configure the lockin amplifier\n    lockin.reserve = 'high'\n    lockin.time_constant = 3\n    # take 60 measurements and print the result\n    for i in range(60):\n        print lockin.x\n        time.sleep(1)\n\nRequirements\n------------\n\n * Python 2.6 or higher\n * Sphinx (optional, to build the documentation)\n * sphinx_bootstrap_theme(optional, default theme used for the documentation)\n * distribute (Python 3.x)\n\nInstallation\n------------\n\nTo install Slave, simply type\n\n    python setup.py install\n\nDocumentation\n-------------\n\nSlave is fully documented. Both the latest `stable`_ as well as the `develop`_\ndocumentations are available online. To build the documentation manually, e.g.\nthe html documentation, navigate into the `/doc/` subfolder and execute\n`make html`. For a prettier theme, install sphinx_boostrap_theme first\n(`pip install sphinx_bootstrap_theme`).\n\n.. _stable: http://slave.readthedocs.org/en/latest/\n.. _develop: http://slave.readthedocs.org/en/develop/\n\nLicensing\n---------\n\nYou should have received a copy of the `GNU General Public License`_ along\nwith slave; see the file COPYING.\n\n.. _GNU General Public License: http://www.gnu.org/licenses/gpl.html", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/p3trus/slave", "keywords": "", "license": "GNU General Public License (GPL), Version 3", "maintainer": "", "maintainer_email": "", "name": "slave", "package_url": "https://pypi.org/project/slave/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/slave/", "project_urls": {"Homepage": "https://github.com/p3trus/slave"}, "release_url": "https://pypi.org/project/slave/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "A lightweight python package to simplify the communication with several scientific instruments.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Slave is a micro framework designed to simplify instrument communication and\ncontrol and comes with a variety of ready to use device drivers.</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Slave provides an intuitive way of creating instrument api\u2019s, inspired by\nobject relational mappers.</p>\n<pre>from slave.iec60488 import IEC60488, PowerOn\nfrom slave.driver import Command\nfrom slave.types import Integer, Enum\n\nclass Device(IEC60488, PowerOn):\n    \"\"\"An iec60488 conforming device api with additional commands.\"\"\"\n    def __init__(self, transport):\n        super(Device, self).__init__(transport)\n        # A custom command\n        self.my_command = Command(\n            'QRY?', # query message header\n            'WRT',  # command message header\n            # response and command data type\n            [Integer, Enum('first', 'second')]\n        )\n</pre>\n<p>Commands mimic instance attributes. Read access queries the device, parses and\nconverts the response and finally returns it. Write access parses and converts\nthe arguments and sends them to the device. This leads to very intuitive\ninterfaces.</p>\n<p>Several device drivers are already implemented, and many more are under\ndevelopment. A short usage example is given below:</p>\n<pre>import time\nfrom slave.transport import Visa\nfrom slave.srs import SR830\n\nlockin = SR830(Visa('GPIB::08'))\n# configure the lockin amplifier\nlockin.reserve = 'high'\nlockin.time_constant = 3\n# take 60 measurements and print the result\nfor i in range(60):\n    print lockin.x\n    time.sleep(1)\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<blockquote>\n<ul>\n<li>Python 2.6 or higher</li>\n<li>Sphinx (optional, to build the documentation)</li>\n<li>sphinx_bootstrap_theme(optional, default theme used for the documentation)</li>\n<li>distribute (Python 3.x)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install Slave, simply type</p>\n<blockquote>\npython setup.py install</blockquote>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Slave is fully documented. Both the latest <a href=\"http://slave.readthedocs.org/en/latest/\" rel=\"nofollow\">stable</a> as well as the <a href=\"http://slave.readthedocs.org/en/develop/\" rel=\"nofollow\">develop</a>\ndocumentations are available online. To build the documentation manually, e.g.\nthe html documentation, navigate into the <cite>/doc/</cite> subfolder and execute\n<cite>make html</cite>. For a prettier theme, install sphinx_boostrap_theme first\n(<cite>pip install sphinx_bootstrap_theme</cite>).</p>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>You should have received a copy of the <a href=\"http://www.gnu.org/licenses/gpl.html\" rel=\"nofollow\">GNU General Public License</a> along\nwith slave; see the file COPYING.</p>\n</div>\n\n          </div>"}, "last_serial": 1726344, "releases": {"0.3.2": [{"comment_text": "", "digests": {"md5": "4a8f5f470957224b4054ad18dc88a84e", "sha256": "b1d9f367bfb80d5c043864a90658b7459b9a980916e29f22f6c2ff5cf64aa573"}, "downloads": -1, "filename": "slave-0.3.2.tar.gz", "has_sig": false, "md5_digest": "4a8f5f470957224b4054ad18dc88a84e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169329, "upload_time": "2013-01-31T17:56:07", "upload_time_iso_8601": "2013-01-31T17:56:07.214541Z", "url": "https://files.pythonhosted.org/packages/c4/77/f2f4600ea867e35b3ec25a0d66dcded58a2cf8ae46193a1df4dfc11e7e90/slave-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "4ccb9f5b5b0f387a394daac54b3b881b", "sha256": "edbfb3bc8f9c797e2211151bb2bf4a3d89c6aa9821549604b34f49e09e31d46c"}, "downloads": -1, "filename": "slave-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4ccb9f5b5b0f387a394daac54b3b881b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 170305, "upload_time": "2013-05-22T08:27:40", "upload_time_iso_8601": "2013-05-22T08:27:40.630375Z", "url": "https://files.pythonhosted.org/packages/1a/da/87d2e50877c779d415c468814273f051a573fb3cda8f739920688d67250e/slave-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ec052dd7c3f4dda8a4bc16983f769a41", "sha256": "11717d87d7ef2d289a792ed71b64aa8ba074a810e3d61b0ae657bfe49f136a92"}, "downloads": -1, "filename": "slave-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ec052dd7c3f4dda8a4bc16983f769a41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136475, "upload_time": "2015-09-17T10:00:08", "upload_time_iso_8601": "2015-09-17T10:00:08.061245Z", "url": "https://files.pythonhosted.org/packages/b5/77/6830a81bad766034f34fbad9ae9543e1a905df60180a298ba287054f5bf5/slave-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec052dd7c3f4dda8a4bc16983f769a41", "sha256": "11717d87d7ef2d289a792ed71b64aa8ba074a810e3d61b0ae657bfe49f136a92"}, "downloads": -1, "filename": "slave-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ec052dd7c3f4dda8a4bc16983f769a41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136475, "upload_time": "2015-09-17T10:00:08", "upload_time_iso_8601": "2015-09-17T10:00:08.061245Z", "url": "https://files.pythonhosted.org/packages/b5/77/6830a81bad766034f34fbad9ae9543e1a905df60180a298ba287054f5bf5/slave-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:31 2020"}