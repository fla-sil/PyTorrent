{"info": {"author": "Maurits van Rees", "author_email": "m.van.rees@zestsoftware.nl", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Programming Language :: Python"], "description": ".. contents::\n\n\nDocumentation\n=============\n\n\nWhat is this?\n-------------\n\nThis package defines several browser views that do a redirect to\nrandom content.\n\n\nUse case\n--------\n\nThe main use case would be: a random header background image.  Use\n``@@randomimage`` as background image in a css file.  When the browser\nloads the css file and wants to apply the background image, it will\nget redirected to the image.\n\nExample css code for when you want a random background image on all\npages except the front page, is this::\n\n  #portal-header {\n    background: url(@@randomimage) no-repeat 0 0;\n  }\n  .section-front-page #portal-header {\n    background: #ee0;\n  }\n\n\nAlternative\n-----------\n\n`collective.randomheaderimage`_ achieves the same thing as using\n``@@randomimage`` in a css file.  It does this by overriding the\n``plone.header`` viewlet and adding some inline css to it.  This works\nfine.  It has one possible drawback: if you use caching, then you\nalways get the same image for a page, until the cache gets refreshed.\nThis may or may not be a problem for you.\n\n.. _`collective.randomheaderimage`: http://pypi.python.org/pypi/collective.randomheaderimage\n\n\nInstallation and configuration\n------------------------------\n\nAdd ``collective.randomcontent`` to the eggs of your buildout (zcml is\nnot explicitly needed), rerun buildout and start your zope instance.\n\nInstall ``collective.randomcontent`` in the Site Setup.  Go to its\ncontrol panel and choose a folder in your site where we take images\nfrom.\n\nNote that when you only want to use ``@@randomsiteimage`` or\n``@@randomsitecontent``, you do not need to install this package in\nthe site setup.\n\n\nDetails\n-------\n\nThe following views are available:\n\n- ``@@randomimage``: this picks a random image from your site and\n  redirects to this url.  The image must be in a specific folder, that\n  you set in the control panel.\n\n- ``@@randomsiteimage``: this picks a random image from your site and\n  redirects to this url.  The image can be anywhere in your site.\n\n- ``@@randomcontent``: this picks a random content item from your site\n  and redirects to this url.  The content must be in a specific\n  folder, that you set in the control panel.\n\n- ``@@randomsitecontent``: this picks a random content item from your\n  site and redirects to this url.  The content can be anywhere in your\n  site.\n\n\nCompatibility\n-------------\n\nThis is tested on Plone 4.2.  It will likely work on all 4.x versions.\n\nIt might work on Plone 3, but it uses ``plone.app.registry``, which is\nnot available by default, so you may need to take extra care about getting\nversions of packages that work for your Plone version.  This is untested.\n\n\nAuthors\n-------\n\n- Maurits van Rees\n\nChangelog\n=========\n\n\n1.0 (2012-07-19)\n----------------\n\n- Initial release\n  [maurits]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.randomcontent", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.randomcontent", "package_url": "https://pypi.org/project/collective.randomcontent/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.randomcontent/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.randomcontent"}, "release_url": "https://pypi.org/project/collective.randomcontent/1.0/", "requires_dist": null, "requires_python": null, "summary": "Redirect to random content, especially images.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#documentation\" id=\"id2\" rel=\"nofollow\">Documentation</a><ul>\n<li><a href=\"#what-is-this\" id=\"id3\" rel=\"nofollow\">What is this?</a></li>\n<li><a href=\"#use-case\" id=\"id4\" rel=\"nofollow\">Use case</a></li>\n<li><a href=\"#alternative\" id=\"id5\" rel=\"nofollow\">Alternative</a></li>\n<li><a href=\"#installation-and-configuration\" id=\"id6\" rel=\"nofollow\">Installation and configuration</a></li>\n<li><a href=\"#details\" id=\"id7\" rel=\"nofollow\">Details</a></li>\n<li><a href=\"#compatibility\" id=\"id8\" rel=\"nofollow\">Compatibility</a></li>\n<li><a href=\"#authors\" id=\"id9\" rel=\"nofollow\">Authors</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id10\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Documentation</a></h2>\n<div id=\"what-is-this\">\n<h3><a href=\"#id3\" rel=\"nofollow\">What is this?</a></h3>\n<p>This package defines several browser views that do a redirect to\nrandom content.</p>\n</div>\n<div id=\"use-case\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Use case</a></h3>\n<p>The main use case would be: a random header background image.  Use\n<tt>@@randomimage</tt> as background image in a css file.  When the browser\nloads the css file and wants to apply the background image, it will\nget redirected to the image.</p>\n<p>Example css code for when you want a random background image on all\npages except the front page, is this:</p>\n<pre>#portal-header {\n  background: url(@@randomimage) no-repeat 0 0;\n}\n.section-front-page #portal-header {\n  background: #ee0;\n}\n</pre>\n</div>\n<div id=\"alternative\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Alternative</a></h3>\n<p><a href=\"http://pypi.python.org/pypi/collective.randomheaderimage\" rel=\"nofollow\">collective.randomheaderimage</a> achieves the same thing as using\n<tt>@@randomimage</tt> in a css file.  It does this by overriding the\n<tt>plone.header</tt> viewlet and adding some inline css to it.  This works\nfine.  It has one possible drawback: if you use caching, then you\nalways get the same image for a page, until the cache gets refreshed.\nThis may or may not be a problem for you.</p>\n</div>\n<div id=\"installation-and-configuration\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Installation and configuration</a></h3>\n<p>Add <tt>collective.randomcontent</tt> to the eggs of your buildout (zcml is\nnot explicitly needed), rerun buildout and start your zope instance.</p>\n<p>Install <tt>collective.randomcontent</tt> in the Site Setup.  Go to its\ncontrol panel and choose a folder in your site where we take images\nfrom.</p>\n<p>Note that when you only want to use <tt>@@randomsiteimage</tt> or\n<tt>@@randomsitecontent</tt>, you do not need to install this package in\nthe site setup.</p>\n</div>\n<div id=\"details\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Details</a></h3>\n<p>The following views are available:</p>\n<ul>\n<li><tt>@@randomimage</tt>: this picks a random image from your site and\nredirects to this url.  The image must be in a specific folder, that\nyou set in the control panel.</li>\n<li><tt>@@randomsiteimage</tt>: this picks a random image from your site and\nredirects to this url.  The image can be anywhere in your site.</li>\n<li><tt>@@randomcontent</tt>: this picks a random content item from your site\nand redirects to this url.  The content must be in a specific\nfolder, that you set in the control panel.</li>\n<li><tt>@@randomsitecontent</tt>: this picks a random content item from your\nsite and redirects to this url.  The content can be anywhere in your\nsite.</li>\n</ul>\n</div>\n<div id=\"compatibility\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Compatibility</a></h3>\n<p>This is tested on Plone 4.2.  It will likely work on all 4.x versions.</p>\n<p>It might work on Plone 3, but it uses <tt>plone.app.registry</tt>, which is\nnot available by default, so you may need to take extra care about getting\nversions of packages that work for your Plone version.  This is untested.</p>\n</div>\n<div id=\"authors\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Authors</a></h3>\n<ul>\n<li>Maurits van Rees</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Changelog</a></h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">1.0 (2012-07-19)</span></h2>\n<ul>\n<li>Initial release\n[maurits]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 741541, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3e7dd31d392ffdc27200da16f07ace05", "sha256": "6643bda2742599bc64ab28c224a7a15401411d5b3e5925168516cd02733aed6c"}, "downloads": -1, "filename": "collective.randomcontent-1.0.zip", "has_sig": false, "md5_digest": "3e7dd31d392ffdc27200da16f07ace05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31676, "upload_time": "2012-07-19T19:26:13", "upload_time_iso_8601": "2012-07-19T19:26:13.921981Z", "url": "https://files.pythonhosted.org/packages/45/c5/e707bf811ec148bce47e89a3930eea7f49681f28017d3f3477f81cff98a3/collective.randomcontent-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3e7dd31d392ffdc27200da16f07ace05", "sha256": "6643bda2742599bc64ab28c224a7a15401411d5b3e5925168516cd02733aed6c"}, "downloads": -1, "filename": "collective.randomcontent-1.0.zip", "has_sig": false, "md5_digest": "3e7dd31d392ffdc27200da16f07ace05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31676, "upload_time": "2012-07-19T19:26:13", "upload_time_iso_8601": "2012-07-19T19:26:13.921981Z", "url": "https://files.pythonhosted.org/packages/45/c5/e707bf811ec148bce47e89a3930eea7f49681f28017d3f3477f81cff98a3/collective.randomcontent-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}