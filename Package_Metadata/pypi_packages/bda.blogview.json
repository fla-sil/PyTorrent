{"info": {"author": "BlueDynamics Alliance", "author_email": "dev@bluedynamics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope2", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "============\nbda.blogview\n============\n\nOverview\n========\n\nThis package contains a blog-like view. It allows you to use all Archtypes based\ncontent to be viewed as blog entries, as long as they follow the specs of\nbda.contentproxy.\n  \nIf commenting is allowed on an object, the comments are displayed as well. The\nview provides commenting controls for the displayed objects directly.\n \nTo make the blogview work, you have to provide an IBlogItemProvider implementing\nobject.\n\n\nExample::\n\n from zope.interface import implements\n from zope.component import getMultiAdapter\n\n from Acquisition import Explicit\n\n from Products.CMFPlone.utils import getToolByName\n\n from bda.blogview.interfaces import IBlogItemProvider\n from bda.blogview.interfaces import IBlogItemIterator\n from bda.blogview.atiterator import ATBlogItemQuery\n \n class BlogItemProvider(Explicit):\n    \n     implements(IBlogItemProvider)\n    \n     def __init__(self, context, request):\n         self.context = context\n         self.request = request\n    \n     @property\n     def items(self):\n         putils = getToolByName(self.context.context, 'plone_utils')\n         query = ATBlogItemQuery({\n             'portal_type': putils.getUserFriendlyTypes(),\n             'sort_on': 'modified',\n             'sort_order': 'reverse',\n         })\n         iterator = getMultiAdapter((self.context, query), IBlogItemIterator)\n         return [i for i in iterator]\n\n\nYou have to register this implementation as follows::\n\n <adapter\n   for=\"zope.interface.Interface\n        zope.publisher.interfaces.browser.IBrowserRequest\"\n   provides=\"bda.blogview.interfaces.IBlogItemProvider\"\n   factory=\".yourmodule.BlogItemProvider\"\n   name=\"blog\"\n  />\n\n\nDependencies\n============\n\n- plone 3\n \n- cornerstone.ui.core\n \n- cornerstone.ui.result\n \n- bda.contentproxy\n\n\nInstallation\n============\n\n1. Make the dependent eggs available in your instance,\n  \n2. Import extension profiles in your plone instance.\n\n\nCopyright\n=========\n\nCopyright 2008, BlueDynamics Alliance, Austria - \n`www.bluedynamics.com <http://www.bluedynamics.com>`_\n\n\nCredits\n=======\n\n- Written by `Robert Niederreiter <mailto:rnix@squarewave.at>`_\n  Squarewave Computing, BlueDynamics Alliance, Austria\n        \n\nLicence\n=======\n\n- GNU General Public Licence 2.0 or later", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "bda.blogview", "package_url": "https://pypi.org/project/bda.blogview/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bda.blogview/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/bda.blogview/1.0-beta1/", "requires_dist": null, "requires_python": null, "summary": "module providing a blog view for plone.", "version": "1.0-beta1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>This package contains a blog-like view. It allows you to use all Archtypes based\ncontent to be viewed as blog entries, as long as they follow the specs of\nbda.contentproxy.</p>\n<p>If commenting is allowed on an object, the comments are displayed as well. The\nview provides commenting controls for the displayed objects directly.</p>\n<p>To make the blogview work, you have to provide an IBlogItemProvider implementing\nobject.</p>\n<p>Example:</p>\n<pre>from zope.interface import implements\nfrom zope.component import getMultiAdapter\n\nfrom Acquisition import Explicit\n\nfrom Products.CMFPlone.utils import getToolByName\n\nfrom bda.blogview.interfaces import IBlogItemProvider\nfrom bda.blogview.interfaces import IBlogItemIterator\nfrom bda.blogview.atiterator import ATBlogItemQuery\n\nclass BlogItemProvider(Explicit):\n\n    implements(IBlogItemProvider)\n\n    def __init__(self, context, request):\n        self.context = context\n        self.request = request\n\n    @property\n    def items(self):\n        putils = getToolByName(self.context.context, 'plone_utils')\n        query = ATBlogItemQuery({\n            'portal_type': putils.getUserFriendlyTypes(),\n            'sort_on': 'modified',\n            'sort_order': 'reverse',\n        })\n        iterator = getMultiAdapter((self.context, query), IBlogItemIterator)\n        return [i for i in iterator]\n</pre>\n<p>You have to register this implementation as follows:</p>\n<pre>&lt;adapter\n  for=\"zope.interface.Interface\n       zope.publisher.interfaces.browser.IBrowserRequest\"\n  provides=\"bda.blogview.interfaces.IBlogItemProvider\"\n  factory=\".yourmodule.BlogItemProvider\"\n  name=\"blog\"\n /&gt;\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>plone 3</li>\n<li>cornerstone.ui.core</li>\n<li>cornerstone.ui.result</li>\n<li>bda.contentproxy</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Make the dependent eggs available in your instance,</li>\n<li>Import extension profiles in your plone instance.</li>\n</ol>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright 2008, BlueDynamics Alliance, Austria -\n<a href=\"http://www.bluedynamics.com\" rel=\"nofollow\">www.bluedynamics.com</a></p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Written by <a href=\"mailto:rnix%40squarewave.at\">Robert Niederreiter</a>\nSquarewave Computing, BlueDynamics Alliance, Austria</li>\n</ul>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<ul>\n<li>GNU General Public Licence 2.0 or later</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 786752, "releases": {"1.0-beta1": [{"comment_text": "", "digests": {"md5": "5c4371f88751b986290dff7ee0151ede", "sha256": "f4b7934f87a02d4e9bdee2e324a1da3401d69086e524379ac255bc4d0fc90a7f"}, "downloads": -1, "filename": "bda.blogview-1.0-beta1.tar.gz", "has_sig": false, "md5_digest": "5c4371f88751b986290dff7ee0151ede", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12870, "upload_time": "2008-03-11T16:44:11", "upload_time_iso_8601": "2008-03-11T16:44:11Z", "url": "https://files.pythonhosted.org/packages/18/2a/879a37b1f651194cdb91a62d956896a0df924ab8966bb102b67fd51b5c6c/bda.blogview-1.0-beta1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c4371f88751b986290dff7ee0151ede", "sha256": "f4b7934f87a02d4e9bdee2e324a1da3401d69086e524379ac255bc4d0fc90a7f"}, "downloads": -1, "filename": "bda.blogview-1.0-beta1.tar.gz", "has_sig": false, "md5_digest": "5c4371f88751b986290dff7ee0151ede", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12870, "upload_time": "2008-03-11T16:44:11", "upload_time_iso_8601": "2008-03-11T16:44:11Z", "url": "https://files.pythonhosted.org/packages/18/2a/879a37b1f651194cdb91a62d956896a0df924ab8966bb102b67fd51b5c6c/bda.blogview-1.0-beta1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:35 2020"}