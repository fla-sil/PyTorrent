{"info": {"author": "Jens Klein", "author_email": "jens@bluedynamics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Python Software Foundation License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development"], "description": "This is the `Python <http://www.python.org/>`_ client for Semantic \nEngine `Apache Stanbol FISE <http://incubator.apache.org/stanbol/>`_ (see also\nthe old `IKS-WIKI <http://wiki.iks-project.eu/index.php/FISE>`_). \nEdutainment:  Watch the `Video by Olivier Grisel <http://blogs.nuxeo.com/dev/2010/08/introducing-fise-the-restful-semantic-engine.html>`_\n \nFISE offers a RESTful API with basically three methods of interaction:\n\nengines\n    stateless interface, submit content to the fise engines and get the \n    resulting enhancements formatted as RDF at once without storing anything on \n    the server-side.\n\nstore\n    Upload content to the store and in a second step get the enhancements back.\n    \nsparql\n    access FISE as a SPARQL endpoint (W3C conform).\n    \nThis API covers ``engines`` and ``store``. Sparql queries are best done by using \nexisting library `SuRF <http://packages.python.org/SuRF/>`_ which is installed \nas a dependecy with this package.      \n    \nPython API\n==========\n\nInitialize::\n\n    >>> from fise.client import FISE\n    >>> fise = FISE('http://localhost:8080/')\n\nUse the engines::    \n    \n    >>> somedoc = u\"This is an example text.\"\n    >>> fise.engines(somedoc)\n    <xml...>\n    \n    >>> fise.engines(somedoc, format='rdfjson')\n    jsonresponse\n\nUse the store, first store content (only plain text is accepted for now)::\n    \n    >>> id = 'test123'\n    >>> fise.store.content[id] = payload\n\nNext get the text back::    \n    \n    >>> fise.store.content[id]\n    u\"This is an example text.\"\n\nThen get the metadata::\n    \n    >>> fise.store.metadata(id)\n    <RDF>\n    \nAnd FISE special feature: Get an HTML page about the content::    \n\n    >>> fise.store.page(id)\n    <HTML>\n\nInstall\n=======\n\nDemo Installation\n-----------------\n\nIf you want to try this package as is this is probably a good starting point.\n\nFetch the package sources and unpack them in a directory of your choice::\n\n    $ wget http://pypi.python.org/packages/source/f/fise.client/bda.cache-[VERSION].tar.gz\n    $ tar xzf bda.cache-[VERSION].tar.gz\n    $ cd bda.cache-[VERSION]\n\nPython 2.6 or 2.7 needs to be available. \n\nTo avoid collisions with packages already installed in your pre-installed python\nvirtualenv is used (instead of easy_install on Debian/Ubuntu \n``sudo apt-get install python-virtual`` works fine)::\n\n    $ easy_install virtualenv\n    $ python2.6 virtualenv  --no-site-packages py\n    \nBootstrap and run the contained buildout. This fetches FISE early adopter \nrelease and provides a start script for FISE. It installs all Python \ndependencies of fise.client and provides a script to run all tests and a Python \nshell with all packaged installed::  \n\n    $ ./py/bin/python bootstrap.py\n    $ ./bin/buildout\n\nStart the FISE semantic engine.\n\n    $ ./bin/fise-instance\n    \nNow connect with a webbrower to \n`http://localhost:8080/ <http://localhost:8080/>`_, the FISE web-frontend.\n\nRunning the tests shows if everything working as expected (needs a running \n``fise-instance``)::\n\n    $ ./bin/tests\n    \nStart a Python shell with fise.client included::\n\n    $ ./bin/py\n        \n    >>> from fise.client import FISE\n    >>>\n    \nInstallation within existing environment\n----------------------------------------     \n\nTo add this package to an existing environment do::\n\n    $ easy_install fise.client\n\nOr if your using ``zc.buildout`` add a line to the eggs in your \n``buildout.cfg`` and re-run buildout:: \n\n    [buildout]    \n    ...\n    eggs = \n    ...\n        fise.client\n    ...\n    \nOr if your'e writing an own python-package add it to the ``install_requires`` \nsection.\n\nChangelog\n=========\n\n1.1\n---\n\n- make it work with restkit 3.2.3 [jensens, 2011-06-07]\n\n1.0\n---\n- initial code, tests and documentation\n\nCopyright, License, Contributors\n================================\n\ncopyright BlueDynamics Alliance, 2010\n\nThis package is provided under the OSI-approved OpenSource License \n`Python Software Foundation License \n<http://opensource.org/licenses/PythonSoftFoundation.php>`_ (as Python itself \nis).\n\nContributors:\n\n- funded by `IKS-Project early adopters program \n  <http://wiki.iks-project.eu/index.php/About>`_\n  \n- Jens Klein <jens@bluedynamics.com>, Klein & Partner KG: initial code, tests, \n  documentation and first release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "Python Software Foundation License", "maintainer": null, "maintainer_email": null, "name": "fise.client", "package_url": "https://pypi.org/project/fise.client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fise.client/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/fise.client/1.1/", "requires_dist": null, "requires_python": null, "summary": "Apache Stanbol FISE: RESTful Python Client.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> client for Semantic\nEngine <a href=\"http://incubator.apache.org/stanbol/\" rel=\"nofollow\">Apache Stanbol FISE</a> (see also\nthe old <a href=\"http://wiki.iks-project.eu/index.php/FISE\" rel=\"nofollow\">IKS-WIKI</a>).\nEdutainment:  Watch the <a href=\"http://blogs.nuxeo.com/dev/2010/08/introducing-fise-the-restful-semantic-engine.html\" rel=\"nofollow\">Video by Olivier Grisel</a></p>\n<p>FISE offers a RESTful API with basically three methods of interaction:</p>\n<dl>\n<dt>engines</dt>\n<dd>stateless interface, submit content to the fise engines and get the\nresulting enhancements formatted as RDF at once without storing anything on\nthe server-side.</dd>\n<dt>store</dt>\n<dd>Upload content to the store and in a second step get the enhancements back.</dd>\n<dt>sparql</dt>\n<dd>access FISE as a SPARQL endpoint (W3C conform).</dd>\n</dl>\n<p>This API covers <tt>engines</tt> and <tt>store</tt>. Sparql queries are best done by using\nexisting library <a href=\"http://packages.python.org/SuRF/\" rel=\"nofollow\">SuRF</a> which is installed\nas a dependecy with this package.</p>\n<div id=\"python-api\">\n<h2>Python API</h2>\n<p>Initialize:</p>\n<pre>&gt;&gt;&gt; from fise.client import FISE\n&gt;&gt;&gt; fise = FISE('http://localhost:8080/')\n</pre>\n<p>Use the engines:</p>\n<pre>&gt;&gt;&gt; somedoc = u\"This is an example text.\"\n&gt;&gt;&gt; fise.engines(somedoc)\n&lt;xml...&gt;\n\n&gt;&gt;&gt; fise.engines(somedoc, format='rdfjson')\njsonresponse\n</pre>\n<p>Use the store, first store content (only plain text is accepted for now):</p>\n<pre>&gt;&gt;&gt; id = 'test123'\n&gt;&gt;&gt; fise.store.content[id] = payload\n</pre>\n<p>Next get the text back:</p>\n<pre>&gt;&gt;&gt; fise.store.content[id]\nu\"This is an example text.\"\n</pre>\n<p>Then get the metadata:</p>\n<pre>&gt;&gt;&gt; fise.store.metadata(id)\n&lt;RDF&gt;\n</pre>\n<p>And FISE special feature: Get an HTML page about the content:</p>\n<pre>&gt;&gt;&gt; fise.store.page(id)\n&lt;HTML&gt;\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<div id=\"demo-installation\">\n<h3>Demo Installation</h3>\n<p>If you want to try this package as is this is probably a good starting point.</p>\n<p>Fetch the package sources and unpack them in a directory of your choice:</p>\n<pre>$ wget http://pypi.python.org/packages/source/f/fise.client/bda.cache-[VERSION].tar.gz\n$ tar xzf bda.cache-[VERSION].tar.gz\n$ cd bda.cache-[VERSION]\n</pre>\n<p>Python 2.6 or 2.7 needs to be available.</p>\n<p>To avoid collisions with packages already installed in your pre-installed python\nvirtualenv is used (instead of easy_install on Debian/Ubuntu\n<tt>sudo <span class=\"pre\">apt-get</span> install <span class=\"pre\">python-virtual</span></tt> works fine):</p>\n<pre>$ easy_install virtualenv\n$ python2.6 virtualenv  --no-site-packages py\n</pre>\n<p>Bootstrap and run the contained buildout. This fetches FISE early adopter\nrelease and provides a start script for FISE. It installs all Python\ndependencies of fise.client and provides a script to run all tests and a Python\nshell with all packaged installed:</p>\n<pre>$ ./py/bin/python bootstrap.py\n$ ./bin/buildout\n</pre>\n<p>Start the FISE semantic engine.</p>\n<blockquote>\n$ ./bin/fise-instance</blockquote>\n<p>Now connect with a webbrower to\n<a href=\"http://localhost:8080/\" rel=\"nofollow\">http://localhost:8080/</a>, the FISE web-frontend.</p>\n<p>Running the tests shows if everything working as expected (needs a running\n<tt><span class=\"pre\">fise-instance</span></tt>):</p>\n<pre>$ ./bin/tests\n</pre>\n<p>Start a Python shell with fise.client included:</p>\n<pre>$ ./bin/py\n\n&gt;&gt;&gt; from fise.client import FISE\n&gt;&gt;&gt;\n</pre>\n</div>\n<div id=\"installation-within-existing-environment\">\n<h3>Installation within existing environment</h3>\n<p>To add this package to an existing environment do:</p>\n<pre>$ easy_install fise.client\n</pre>\n<p>Or if your using <tt>zc.buildout</tt> add a line to the eggs in your\n<tt>buildout.cfg</tt> and re-run buildout:</p>\n<pre>[buildout]\n...\neggs =\n...\n    fise.client\n...\n</pre>\n<p>Or if your\u2019e writing an own python-package add it to the <tt>install_requires</tt>\nsection.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.1</h3>\n<ul>\n<li>make it work with restkit 3.2.3 [jensens, 2011-06-07]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0</h3>\n<ul>\n<li>initial code, tests and documentation</li>\n</ul>\n</div>\n</div>\n<div id=\"copyright-license-contributors\">\n<h2>Copyright, License, Contributors</h2>\n<p>copyright BlueDynamics Alliance, 2010</p>\n<p>This package is provided under the OSI-approved OpenSource License\n<a href=\"http://opensource.org/licenses/PythonSoftFoundation.php\" rel=\"nofollow\">Python Software Foundation License</a> (as Python itself\nis).</p>\n<p>Contributors:</p>\n<ul>\n<li>funded by <a href=\"http://wiki.iks-project.eu/index.php/About\" rel=\"nofollow\">IKS-Project early adopters program</a></li>\n<li>Jens Klein &lt;<a href=\"mailto:jens%40bluedynamics.com\">jens<span>@</span>bluedynamics<span>.</span>com</a>&gt;, Klein &amp; Partner KG: initial code, tests,\ndocumentation and first release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 791994, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "91665b0345291bd77eb913f5c47608c2", "sha256": "511a4628db39ff8b04e315cef6e6aa32212abb0de2d921972704145c317affdc"}, "downloads": -1, "filename": "fise.client-1.0.tar.gz", "has_sig": false, "md5_digest": "91665b0345291bd77eb913f5c47608c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8926, "upload_time": "2010-12-23T12:15:37", "upload_time_iso_8601": "2010-12-23T12:15:37.090724Z", "url": "https://files.pythonhosted.org/packages/c6/78/3d3deddf3a2f52070e4718b13761aa43a75e3b3e6c325247b080e289d159/fise.client-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "31d1d44d26e41b56f23e124c28fd1355", "sha256": "ef47b881cc264c9efd773a9bdfad80d9482d627e3cbfe7cb1c7fbd259445091a"}, "downloads": -1, "filename": "fise.client-1.1.tar.gz", "has_sig": false, "md5_digest": "31d1d44d26e41b56f23e124c28fd1355", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8718, "upload_time": "2011-06-07T16:09:40", "upload_time_iso_8601": "2011-06-07T16:09:40.938882Z", "url": "https://files.pythonhosted.org/packages/ec/2d/6c920c40914571333000c543278e941cc2d3b48c42267d99750ffce3fb1f/fise.client-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31d1d44d26e41b56f23e124c28fd1355", "sha256": "ef47b881cc264c9efd773a9bdfad80d9482d627e3cbfe7cb1c7fbd259445091a"}, "downloads": -1, "filename": "fise.client-1.1.tar.gz", "has_sig": false, "md5_digest": "31d1d44d26e41b56f23e124c28fd1355", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8718, "upload_time": "2011-06-07T16:09:40", "upload_time_iso_8601": "2011-06-07T16:09:40.938882Z", "url": "https://files.pythonhosted.org/packages/ec/2d/6c920c40914571333000c543278e941cc2d3b48c42267d99750ffce3fb1f/fise.client-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:08 2020"}