{"info": {"author": "Jean-Tiare Le Bigot", "author_email": "jean-tiare.le-bigot@corp.ovh.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Archiving :: Packaging"], "description": ".. image:: https://github.com/ovh/python-ovh/raw/master/docs/img/logo.png\n           :alt: Python & OVH APIs\n           :target: https://pypi.python.org/pypi/ovh\n\nLightweight wrapper around OVH's APIs. Handles all the hard work including\ncredential creation and requests signing.\n\n.. image:: https://img.shields.io/pypi/v/ovh.svg\n           :alt: PyPi Version\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://img.shields.io/pypi/status/ovh.svg\n           :alt: PyPi repository status\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://img.shields.io/pypi/pyversions/ovh.svg\n           :alt: PyPi supported Python versions\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://img.shields.io/pypi/wheel/ovh.svg\n           :alt: PyPi Wheel status\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://travis-ci.org/ovh/python-ovh.svg?branch=master\n           :alt: Build Status\n           :target: https://travis-ci.org/ovh/python-ovh\n.. image:: https://coveralls.io/repos/github/ovh/python-ovh/badge.svg\n           :alt: Coverage Status\n           :target: https://coveralls.io/github/ovh/python-ovh\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n\n    # Instantiate. Visit https://api.ovh.com/createToken/?GET=/me\n    # to get your credentials\n    client = ovh.Client(\n        endpoint='ovh-eu',\n        application_key='<application key>',\n        application_secret='<application secret>',\n        consumer_key='<consumer key>',\n    )\n\n    # Print nice welcome message\n    print \"Welcome\", client.get('/me')['firstname']\n\nInstallation\n============\n\nThe python wrapper works with Python 2.7 and Python 3.4+.\n\nThe easiest way to get the latest stable release is to grab it from `pypi\n<https://pypi.python.org/pypi/ovh>`_ using ``pip``.\n\n.. code:: bash\n\n    pip install ovh\n\nAlternatively, you may get latest development version directly from Git.\n\n.. code:: bash\n\n    pip install -e git+https://github.com/ovh/python-ovh.git#egg=ovh\n\nExample Usage\n=============\n\nUse the API on behalf of a user\n-------------------------------\n\n1. Create an application\n************************\n\nTo interact with the APIs, the SDK needs to identify itself using an\n``application_key`` and an ``application_secret``. To get them, you need\nto register your application. Depending the API you plan to use, visit:\n\n- `OVH Europe <https://eu.api.ovh.com/createApp/>`_\n- `OVH US <https://api.ovhcloud.com/createApp/>`_\n- `OVH North-America <https://ca.api.ovh.com/createApp/>`_\n- `So you Start Europe <https://eu.api.soyoustart.com/createApp/>`_\n- `So you Start North America <https://ca.api.soyoustart.com/createApp/>`_\n- `Kimsufi Europe <https://eu.api.kimsufi.com/createApp/>`_\n- `Kimsufi North America <https://ca.api.kimsufi.com/createApp/>`_\n\nOnce created, you will obtain an **application key (AK)** and an **application\nsecret (AS)**.\n\n2. Configure your application\n*****************************\n\nThe easiest and safest way to use your application's credentials is to create an\n``ovh.conf`` configuration file in application's working directory. Here is how\nit looks like:\n\n.. code:: ini\n\n    [default]\n    ; general configuration: default endpoint\n    endpoint=ovh-eu\n\n    [ovh-eu]\n    ; configuration specific to 'ovh-eu' endpoint\n    application_key=my_app_key\n    application_secret=my_application_secret\n    ; uncomment following line when writing a script application\n    ; with a single consumer key.\n    ;consumer_key=my_consumer_key\n\nDepending on the API you want to use, you may set the ``endpoint`` to:\n\n* ``ovh-eu`` for OVH Europe API\n* ``ovh-us`` for OVH US API\n* ``ovh-ca`` for OVH North-America API\n* ``soyoustart-eu`` for So you Start Europe API\n* ``soyoustart-ca`` for So you Start North America API\n* ``kimsufi-eu`` for Kimsufi Europe API\n* ``kimsufi-ca`` for Kimsufi North America API\n\nSee Configuration_ for more information on available configuration mechanisms.\n\n.. note:: When using a versioning system, make sure to add ``ovh.conf`` to ignored\n          files. It contains confidential/security-sensitive information!\n\n3. Authorize your application to access a customer account\n**********************************************************\n\nTo allow your application to access a customer account using the API on your\nbehalf, you need a **consumer key (CK)**.\n\nHere is a sample code you can use to allow your application to access a\ncustomer's information:\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n\n    # create a client using configuration\n    client = ovh.Client()\n\n    # Request RO, /me API access\n    ck = client.new_consumer_key_request()\n    ck.add_rules(ovh.API_READ_ONLY, \"/me\")\n\n    # Request token\n    validation = ck.request()\n\n    print \"Please visit %s to authenticate\" % validation['validationUrl']\n    raw_input(\"and press Enter to continue...\")\n\n    # Print nice welcome message\n    print \"Welcome\", client.get('/me')['firstname']\n    print \"Btw, your 'consumerKey' is '%s'\" % validation['consumerKey']\n\n\nReturned ``consumerKey`` should then be kept to avoid re-authenticating your\nend-user on each use.\n\n.. note:: To request full and unlimited access to the API, you may use ``add_recursive_rules``:\n\n.. code:: python\n\n    # Allow all GET, POST, PUT, DELETE on /* (full API)\n    ck.add_recursive_rules(ovh.API_READ_WRITE, '/')\n\nInstall a new mail redirection\n------------------------------\n\ne-mail redirections may be freely configured on domains and DNS zones hosted by\nOVH to an arbitrary destination e-mail using API call\n``POST /email/domain/{domain}/redirection``.\n\nFor this call, the api specifies that the source address shall be given under the\n``from`` keyword. Which is a problem as this is also a reserved Python keyword.\nIn this case, simply prefix it with a '_', the wrapper will automatically detect\nit as being a prefixed reserved keyword and will substitute it. Such aliasing\nis only supported with reserved keywords.\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n\n    DOMAIN = \"example.com\"\n    SOURCE = \"sales@example.com\"\n    DESTINATION = \"contact@example.com\"\n\n    # create a client\n    client = ovh.Client()\n\n    # Create a new alias\n    client.post('/email/domain/%s/redirection' % DOMAIN,\n            _from=SOURCE,\n            to=DESTINATION,\n            localCopy=False\n        )\n    print \"Installed new mail redirection from %s to %s\" % (SOURCE, DESTINATION)\n\nGrab bill list\n--------------\n\nLet's say you want to integrate OVH bills into your own billing system, you\ncould just script around the ``/me/bills`` endpoints and even get the details\nof each bill lines using ``/me/bill/{billId}/details/{billDetailId}``.\n\nThis example assumes an existing Configuration_ with valid ``application_key``,\n``application_secret`` and ``consumer_key``.\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n\n    # create a client\n    client = ovh.Client()\n\n    # Grab bill list\n    bills = client.get('/me/bill')\n    for bill in bills:\n        details = client.get('/me/bill/%s' % bill)\n        print \"%12s (%s): %10s --> %s\" % (\n            bill,\n            details['date'],\n            details['priceWithTax']['text'],\n            details['pdfUrl'],\n        )\n\nEnable network burst in SBG1\n----------------------------\n\n'Network burst' is a free service but is opt-in. What if you have, say, 10\nservers in ``SBG-1`` datacenter? You certainely don't want to activate it\nmanually for each servers. You could take advantage of a code like this.\n\nThis example assumes an existing Configuration_ with valid ``application_key``,\n``application_secret`` and ``consumer_key``.\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n\n    # create a client\n    client = ovh.Client()\n\n    # get list of all server names\n    servers = client.get('/dedicated/server/')\n\n    # find all servers in SBG-1 datacenter\n    for server in servers:\n        details = client.get('/dedicated/server/%s' % server)\n        if details['datacenter'] == 'sbg1':\n            # enable burst on server\n            client.put('/dedicated/server/%s/burst' % server, status='active')\n            print \"Enabled burst for %s server located in SBG-1\" % server\n\nList application authorized to access your account\n--------------------------------------------------\n\nThanks to the application key / consumer key mechanism, it is possible to\nfinely track applications having access to your data and revoke this access.\nThis examples lists validated applications. It could easily be adapted to\nmanage revocation too.\n\nThis example assumes an existing Configuration_ with valid ``application_key``,\n``application_secret`` and ``consumer_key``.\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n    from tabulate import tabulate\n\n    # create a client\n    client = ovh.Client()\n\n    credentials = client.get('/me/api/credential', status='validated')\n\n    # pretty print credentials status\n    table = []\n    for credential_id in credentials:\n        credential_method = '/me/api/credential/'+str(credential_id)\n        credential = client.get(credential_method)\n        application = client.get(credential_method+'/application')\n\n        table.append([\n            credential_id,\n            '[%s] %s' % (application['status'], application['name']),\n            application['description'],\n            credential['creation'],\n            credential['expiration'],\n            credential['lastUse'],\n        ])\n    print tabulate(table, headers=['ID', 'App Name', 'Description',\n                                   'Token Creation', 'Token Expiration', 'Token Last Use'])\n\nBefore running this example, make sure you have the\n`tabulate <https://pypi.python.org/pypi/tabulate>`_ library installed. It's a\npretty cool library to pretty print tabular data in a clean and easy way.\n\n>>> pip install tabulate\n\n\nOpen a KVM (remote screen) on a dedicated server\n------------------------------------------------\n\nRecent dedicated servers come with an IPMI interface. A lightweight control board embedded\non the server. Using IPMI, it is possible to get a remote screen on a server. This is\nparticularly useful to tweak the BIOS or troubleshoot boot issues.\n\nHopefully, this can easily be automated using a simple script. It assumes Java Web Start is\nfully installed on the machine and a consumer key allowed on the server exists.\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n    import ovh\n    import sys\n    import time\n    import tempfile\n    import subprocess\n\n    # check arguments\n    if len(sys.argv) != 3:\n        print \"Usage: %s SERVER_NAME ALLOWED_IP_V4\" % sys.argv[0]\n        sys.exit(1)\n\n    server_name = sys.argv[1]\n    allowed_ip = sys.argv[2]\n\n    # create a client\n    client = ovh.Client()\n\n    # create a KVM\n    client.post('/dedicated/server/'+server_name+'/features/ipmi/access', ipToAllow=allowed_ip, ttl=15, type=\"kvmipJnlp\")\n\n    # open the KVM, when ready\n    while True:\n        try:\n            # use a named temfile and feed it to java web start\n            with tempfile.NamedTemporaryFile() as f:\n                f.write(client.get('/dedicated/server/ns6457228.ip-178-33-61.eu/features/ipmi/access?type=kvmipJnlp')['value'])\n                f.flush()\n                subprocess.call([\"javaws\", f.name])\n            break\n        except:\n            time.sleep(1)\n\nRunning is only a simple command line:\n\n.. code:: bash\n\n    # Basic\n    python open_kvm.py ns1234567.ip-178-42-42.eu $(curl ifconfig.ovh)\n\n    # Use a specific consumer key\n    OVH_CONSUMER_KEY=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA python open_kvm.py ns6457228.ip-178-33-61.eu $(curl -s ifconfig.ovh)\n\nConfiguration\n=============\n\nYou have 3 ways to provide configuration to the client:\n - write it directly in the application code\n - read environment variables or predefined configuration files\n - read it from a custom configuration file\n\nEmbed the configuration in the code\n-----------------------------------\n\nThe straightforward way to use OVH's API keys is to embed them directly in the\napplication code. While this is very convenient, it lacks of elegance and\nflexibility.\n\nExample usage:\n\n.. code:: python\n\n    client = ovh.Client(\n        endpoint='ovh-eu',\n        application_key='<application key>',\n        application_secret='<application secret>',\n        consumer_key='<consumer key>',\n    )\n\nEnvironment vars and predefined configuration files\n---------------------------------------------------\n\nAlternatively it is suggested to use configuration files or environment\nvariables so that the same code may run seamlessly in multiple environments.\nProduction and development for instance.\n\nThis wrapper will first look for direct instantiation parameters then\n``OVH_ENDPOINT``, ``OVH_APPLICATION_KEY``, ``OVH_APPLICATION_SECRET`` and\n``OVH_CONSUMER_KEY`` environment variables. If either of these parameter is not\nprovided, it will look for a configuration file of the form:\n\n.. code:: ini\n\n    [default]\n    ; general configuration: default endpoint\n    endpoint=ovh-eu\n\n    [ovh-eu]\n    ; configuration specific to 'ovh-eu' endpoint\n    application_key=my_app_key\n    application_secret=my_application_secret\n    consumer_key=my_consumer_key\n\nThe client will successively attempt to locate this configuration file in\n\n1. Current working directory: ``./ovh.conf``\n2. Current user's home directory ``~/.ovh.conf``\n3. System wide configuration ``/etc/ovh.conf``\n\nThis lookup mechanism makes it easy to overload credentials for a specific\nproject or user.\n\nExample usage:\n\n.. code:: python\n\n    client = ovh.Client()\n\nCustom configuration file\n-------------------------\n\nYou can also specify a custom configuration file. With this method, you won't be able to inherit values from environment.\n\nExample usage:\n\n.. code:: python\n\n    client = ovh.Client(config_file='/my/config.conf')\n\n\nPassing parameters\n==================\n\nYou can call all the methods of the API with the necessary arguments.\n\nIf an API needs an argument colliding with a Python reserved keyword, it\ncan be prefixed with an underscore. For example, ``from`` argument of\n``POST /email/domain/{domain}/redirection`` may be replaced by ``_from``.\n\nWith characters invalid in python argument name like a dot, you can:\n\n.. code:: python\n\n    # -*- encoding: utf-8 -*-\n\n    import ovh\n\n    params = {}\n    params['date.from'] = '2014-01-01'\n    params['date.to'] = '2015-01-01'\n\n    # create a client\n    client = ovh.Client()\n\n    # pass parameters using **\n    client.post('/me/bills', **params)\n\nAdvanced usage\n==============\n\nUn-authenticated calls\n----------------------\n\nIf the user has not authenticated yet (ie, there is no valid Consumer Key), you\nmay force ``python-ovh`` to issue the call by passing ``_need_auth=True`` to\nthe high level ``get()``, ``post()``, ``put()`` and ``delete()`` helpers or\n``need_auth=True`` to the low level method ``Client.call()`` and\n``Client.raw_call()``.\n\nThis is needed when calling ``POST /auth/credential`` and ``GET /auth/time``\nwhich are used internally for authentication and can optionally be done for\nmost of the ``/order`` calls.\n\nAccess the raw requests response objects\n----------------------------------------\n\nThe high level ``get()``, ``post()``, ``put()`` and ``delete()`` helpers as well\nas the lower level ``call()`` will returned a parsed json response or raise in\ncase of error.\n\nIn some rare scenario, advanced setups, you may need to perform customer\nprocessing on the raw request response. It may be accessed via ``raw_call()``.\nThis is the lowest level call in ``python-ovh``. See the source for more\ninformation.\n\nHacking\n=======\n\nThis wrapper uses standard Python tools, so you should feel at home with it.\nHere is a quick outline of what it may look like. A good practice is to run\nthis from a ``virtualenv``.\n\nGet the sources\n---------------\n\n.. code:: bash\n\n    git clone https://github.com/ovh/python-ovh.git\n    cd python-ovh\n    python setup.py develop\n\nYou've developed a new cool feature ? Fixed an annoying bug ? We'd be happy\nto hear from you !\n\nRun the tests\n-------------\n\nSimply run ``nosetests``. It will automatically load its configuration from\n``setup.cfg`` and output full coverage status. Since we all love quality, please\nnote that we do not accept contributions with test coverage under 100%.\n\n.. code:: bash\n\n    pip install -e .[dev]\n    nosetests # 100% coverage is a hard minimum\n\n\nBuild the documentation\n-----------------------\n\nDocumentation is managed using the excellent ``Sphinx`` system. For example, to\nbuild HTML documentation:\n\n.. code:: bash\n\n    cd python-ovh/docs\n    make html\n\nSupported APIs\n==============\n\nOVH Europe\n----------\n\n- **Documentation**: https://eu.api.ovh.com/\n- **Community support**: api-subscribe@ml.ovh.net\n- **Console**: https://eu.api.ovh.com/console\n- **Create application credentials**: https://eu.api.ovh.com/createApp/\n- **Create script credentials** (all keys at once): https://eu.api.ovh.com/createToken/\n\nOVH US\n----------\n\n- **Documentation**: https://api.us.ovhcloud.com/\n- **Console**: https://api.us.ovhcloud.com/console/\n- **Create application credentials**: https://api.us.ovhcloud.com/createApp/\n- **Create script credentials** (all keys at once): https://api.us.ovhcloud.com/createToken/\n\nOVH North America\n-----------------\n\n- **Documentation**: https://ca.api.ovh.com/\n- **Community support**: api-subscribe@ml.ovh.net\n- **Console**: https://ca.api.ovh.com/console\n- **Create application credentials**: https://ca.api.ovh.com/createApp/\n- **Create script credentials** (all keys at once): https://ca.api.ovh.com/createToken/\n\nSo you Start Europe\n-------------------\n\n- **Documentation**: https://eu.api.soyoustart.com/\n- **Community support**: api-subscribe@ml.ovh.net\n- **Console**: https://eu.api.soyoustart.com/console/\n- **Create application credentials**: https://eu.api.soyoustart.com/createApp/\n- **Create script credentials** (all keys at once): https://eu.api.soyoustart.com/createToken/\n\nSo you Start North America\n--------------------------\n\n- **Documentation**: https://ca.api.soyoustart.com/\n- **Community support**: api-subscribe@ml.ovh.net\n- **Console**: https://ca.api.soyoustart.com/console/\n- **Create application credentials**: https://ca.api.soyoustart.com/createApp/\n- **Create script credentials** (all keys at once): https://ca.api.soyoustart.com/createToken/\n\nKimsufi Europe\n--------------\n\n- **Documentation**: https://eu.api.kimsufi.com/\n- **Community support**: api-subscribe@ml.ovh.net\n- **Console**: https://eu.api.kimsufi.com/console/\n- **Create application credentials**: https://eu.api.kimsufi.com/createApp/\n- **Create script credentials** (all keys at once): https://eu.api.kimsufi.com/createToken/\n\nKimsufi North America\n---------------------\n\n- **Documentation**: https://ca.api.kimsufi.com/\n- **Community support**: api-subscribe@ml.ovh.net\n- **Console**: https://ca.api.kimsufi.com/console/\n- **Create application credentials**: https://ca.api.kimsufi.com/createApp/\n- **Create script credentials** (all keys at once): https://ca.api.kimsufi.com/createToken/\n\nRelated links\n=============\n\n- **Contribute**: https://github.com/ovh/python-ovh\n- **Report bugs**: https://github.com/ovh/python-ovh/issues\n- **Download**: http://pypi.python.org/pypi/ovh\n\nLicense\n=======\n\n3-Clause BSD\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://api.ovh.com", "keywords": "ovh,sdk,rest", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "ovh", "package_url": "https://pypi.org/project/ovh/", "platform": "", "project_url": "https://pypi.org/project/ovh/", "project_urls": {"Homepage": "http://api.ovh.com"}, "release_url": "https://pypi.org/project/ovh/0.5.0/", "requires_dist": ["coverage (==3.7.1) ; extra == 'dev'", "mock (==1.0.1) ; extra == 'dev'", "nose (==1.3.3) ; extra == 'dev'", "yanc (==0.2.4) ; extra == 'dev'", "Sphinx (==1.2.2) ; extra == 'dev'", "coveralls (==0.4.4) ; extra == 'dev'", "setuptools (>=30.3.0) ; extra == 'dev'", "wheel ; extra == 'dev'", "coverage (==3.7.1) ; extra == 'test'", "mock (==1.0.1) ; extra == 'test'", "nose (==1.3.3) ; extra == 'test'", "yanc (==0.2.4) ; extra == 'test'"], "requires_python": "", "summary": "\"Official OVH.com API wrapper\"", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/ovh\" rel=\"nofollow\"><img alt=\"Python &amp; OVH APIs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c94d01aff7a657acae5f95b082ac96f70aea2f05/68747470733a2f2f6769746875622e636f6d2f6f76682f707974686f6e2d6f76682f7261772f6d61737465722f646f63732f696d672f6c6f676f2e706e67\"></a>\n<p>Lightweight wrapper around OVH\u2019s APIs. Handles all the hard work including\ncredential creation and requests signing.</p>\n<a href=\"https://pypi.python.org/pypi/ovh\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ce67786d3fa6009ff7cfdb04f8d8b78d80378de/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f76682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/ovh\" rel=\"nofollow\"><img alt=\"PyPi repository status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/469a95b18d304fe2772dae0843c9183bd9d1fda1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6f76682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/ovh\" rel=\"nofollow\"><img alt=\"PyPi supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82056da60c8862ce3ee182b34b92302441baed53/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f76682e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/ovh\" rel=\"nofollow\"><img alt=\"PyPi Wheel status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/157067014438d885437a1272b3c9034c45a93ea1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6f76682e737667\"></a>\n<a href=\"https://travis-ci.org/ovh/python-ovh\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3adce48b6fe1fcae2b78540a1a331d0fa6f68999/68747470733a2f2f7472617669732d63692e6f72672f6f76682f707974686f6e2d6f76682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/ovh/python-ovh\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2413521397e114a25dce6082447e22aba203e8fa/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6f76682f707974686f6e2d6f76682f62616467652e737667\"></a>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n\n<span class=\"c1\"># Instantiate. Visit https://api.ovh.com/createToken/?GET=/me</span>\n<span class=\"c1\"># to get your credentials</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span>\n    <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s1\">'ovh-eu'</span><span class=\"p\">,</span>\n    <span class=\"n\">application_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;application key&gt;'</span><span class=\"p\">,</span>\n    <span class=\"n\">application_secret</span><span class=\"o\">=</span><span class=\"s1\">'&lt;application secret&gt;'</span><span class=\"p\">,</span>\n    <span class=\"n\">consumer_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;consumer key&gt;'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Print nice welcome message</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Welcome\"</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/me'</span><span class=\"p\">)[</span><span class=\"s1\">'firstname'</span><span class=\"p\">]</span>\n</pre>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The python wrapper works with Python 2.7 and Python 3.4+.</p>\n<p>The easiest way to get the latest stable release is to grab it from <a href=\"https://pypi.python.org/pypi/ovh\" rel=\"nofollow\">pypi</a> using <tt>pip</tt>.</p>\n<pre>pip install ovh\n</pre>\n<p>Alternatively, you may get latest development version directly from Git.</p>\n<pre>pip install -e git+https://github.com/ovh/python-ovh.git#egg<span class=\"o\">=</span>ovh\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<div id=\"use-the-api-on-behalf-of-a-user\">\n<h3>Use the API on behalf of a user</h3>\n<div id=\"create-an-application\">\n<h4>1. Create an application</h4>\n<p>To interact with the APIs, the SDK needs to identify itself using an\n<tt>application_key</tt> and an <tt>application_secret</tt>. To get them, you need\nto register your application. Depending the API you plan to use, visit:</p>\n<ul>\n<li><a href=\"https://eu.api.ovh.com/createApp/\" rel=\"nofollow\">OVH Europe</a></li>\n<li><a href=\"https://api.ovhcloud.com/createApp/\" rel=\"nofollow\">OVH US</a></li>\n<li><a href=\"https://ca.api.ovh.com/createApp/\" rel=\"nofollow\">OVH North-America</a></li>\n<li><a href=\"https://eu.api.soyoustart.com/createApp/\" rel=\"nofollow\">So you Start Europe</a></li>\n<li><a href=\"https://ca.api.soyoustart.com/createApp/\" rel=\"nofollow\">So you Start North America</a></li>\n<li><a href=\"https://eu.api.kimsufi.com/createApp/\" rel=\"nofollow\">Kimsufi Europe</a></li>\n<li><a href=\"https://ca.api.kimsufi.com/createApp/\" rel=\"nofollow\">Kimsufi North America</a></li>\n</ul>\n<p>Once created, you will obtain an <strong>application key (AK)</strong> and an <strong>application\nsecret (AS)</strong>.</p>\n</div>\n<div id=\"configure-your-application\">\n<h4>2. Configure your application</h4>\n<p>The easiest and safest way to use your application\u2019s credentials is to create an\n<tt>ovh.conf</tt> configuration file in application\u2019s working directory. Here is how\nit looks like:</p>\n<pre><span class=\"k\">[default]</span>\n<span class=\"c1\">; general configuration: default endpoint</span>\n<span class=\"na\">endpoint</span><span class=\"o\">=</span><span class=\"s\">ovh-eu</span>\n\n<span class=\"k\">[ovh-eu]</span>\n<span class=\"c1\">; configuration specific to 'ovh-eu' endpoint</span>\n<span class=\"na\">application_key</span><span class=\"o\">=</span><span class=\"s\">my_app_key</span>\n<span class=\"na\">application_secret</span><span class=\"o\">=</span><span class=\"s\">my_application_secret</span>\n<span class=\"c1\">; uncomment following line when writing a script application</span>\n<span class=\"c1\">; with a single consumer key.</span>\n<span class=\"c1\">;consumer_key=my_consumer_key</span>\n</pre>\n<p>Depending on the API you want to use, you may set the <tt>endpoint</tt> to:</p>\n<ul>\n<li><tt><span class=\"pre\">ovh-eu</span></tt> for OVH Europe API</li>\n<li><tt><span class=\"pre\">ovh-us</span></tt> for OVH US API</li>\n<li><tt><span class=\"pre\">ovh-ca</span></tt> for OVH North-America API</li>\n<li><tt><span class=\"pre\">soyoustart-eu</span></tt> for So you Start Europe API</li>\n<li><tt><span class=\"pre\">soyoustart-ca</span></tt> for So you Start North America API</li>\n<li><tt><span class=\"pre\">kimsufi-eu</span></tt> for Kimsufi Europe API</li>\n<li><tt><span class=\"pre\">kimsufi-ca</span></tt> for Kimsufi North America API</li>\n</ul>\n<p>See <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> for more information on available configuration mechanisms.</p>\n<div>\n<p>Note</p>\n<p>When using a versioning system, make sure to add <tt>ovh.conf</tt> to ignored\nfiles. It contains confidential/security-sensitive information!</p>\n</div>\n</div>\n<div id=\"authorize-your-application-to-access-a-customer-account\">\n<h4>3. Authorize your application to access a customer account</h4>\n<p>To allow your application to access a customer account using the API on your\nbehalf, you need a <strong>consumer key (CK)</strong>.</p>\n<p>Here is a sample code you can use to allow your application to access a\ncustomer\u2019s information:</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n\n<span class=\"c1\"># create a client using configuration</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Request RO, /me API access</span>\n<span class=\"n\">ck</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">new_consumer_key_request</span><span class=\"p\">()</span>\n<span class=\"n\">ck</span><span class=\"o\">.</span><span class=\"n\">add_rules</span><span class=\"p\">(</span><span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">API_READ_ONLY</span><span class=\"p\">,</span> <span class=\"s2\">\"/me\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Request token</span>\n<span class=\"n\">validation</span> <span class=\"o\">=</span> <span class=\"n\">ck</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span> <span class=\"s2\">\"Please visit </span><span class=\"si\">%s</span><span class=\"s2\"> to authenticate\"</span> <span class=\"o\">%</span> <span class=\"n\">validation</span><span class=\"p\">[</span><span class=\"s1\">'validationUrl'</span><span class=\"p\">]</span>\n<span class=\"n\">raw_input</span><span class=\"p\">(</span><span class=\"s2\">\"and press Enter to continue...\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print nice welcome message</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Welcome\"</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/me'</span><span class=\"p\">)[</span><span class=\"s1\">'firstname'</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Btw, your 'consumerKey' is '</span><span class=\"si\">%s</span><span class=\"s2\">'\"</span> <span class=\"o\">%</span> <span class=\"n\">validation</span><span class=\"p\">[</span><span class=\"s1\">'consumerKey'</span><span class=\"p\">]</span>\n</pre>\n<p>Returned <tt>consumerKey</tt> should then be kept to avoid re-authenticating your\nend-user on each use.</p>\n<div>\n<p>Note</p>\n<p>To request full and unlimited access to the API, you may use <tt>add_recursive_rules</tt>:</p>\n</div>\n<pre><span class=\"c1\"># Allow all GET, POST, PUT, DELETE on /* (full API)</span>\n<span class=\"n\">ck</span><span class=\"o\">.</span><span class=\"n\">add_recursive_rules</span><span class=\"p\">(</span><span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">API_READ_WRITE</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"install-a-new-mail-redirection\">\n<h3>Install a new mail redirection</h3>\n<p>e-mail redirections may be freely configured on domains and DNS zones hosted by\nOVH to an arbitrary destination e-mail using API call\n<tt>POST <span class=\"pre\">/email/domain/{domain}/redirection</span></tt>.</p>\n<p>For this call, the api specifies that the source address shall be given under the\n<tt>from</tt> keyword. Which is a problem as this is also a reserved Python keyword.\nIn this case, simply prefix it with a \u2018_\u2019, the wrapper will automatically detect\nit as being a prefixed reserved keyword and will substitute it. Such aliasing\nis only supported with reserved keywords.</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n\n<span class=\"n\">DOMAIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"example.com\"</span>\n<span class=\"n\">SOURCE</span> <span class=\"o\">=</span> <span class=\"s2\">\"sales@example.com\"</span>\n<span class=\"n\">DESTINATION</span> <span class=\"o\">=</span> <span class=\"s2\">\"contact@example.com\"</span>\n\n<span class=\"c1\"># create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a new alias</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'/email/domain/</span><span class=\"si\">%s</span><span class=\"s1\">/redirection'</span> <span class=\"o\">%</span> <span class=\"n\">DOMAIN</span><span class=\"p\">,</span>\n        <span class=\"n\">_from</span><span class=\"o\">=</span><span class=\"n\">SOURCE</span><span class=\"p\">,</span>\n        <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"n\">DESTINATION</span><span class=\"p\">,</span>\n        <span class=\"n\">localCopy</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Installed new mail redirection from </span><span class=\"si\">%s</span><span class=\"s2\"> to </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">SOURCE</span><span class=\"p\">,</span> <span class=\"n\">DESTINATION</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"grab-bill-list\">\n<h3>Grab bill list</h3>\n<p>Let\u2019s say you want to integrate OVH bills into your own billing system, you\ncould just script around the <tt>/me/bills</tt> endpoints and even get the details\nof each bill lines using <tt><span class=\"pre\">/me/bill/{billId}/details/{billDetailId}</span></tt>.</p>\n<p>This example assumes an existing <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> with valid <tt>application_key</tt>,\n<tt>application_secret</tt> and <tt>consumer_key</tt>.</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n\n<span class=\"c1\"># create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Grab bill list</span>\n<span class=\"n\">bills</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/me/bill'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">bill</span> <span class=\"ow\">in</span> <span class=\"n\">bills</span><span class=\"p\">:</span>\n    <span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/me/bill/</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">bill</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"</span><span class=\"si\">%12s</span><span class=\"s2\"> (</span><span class=\"si\">%s</span><span class=\"s2\">): </span><span class=\"si\">%10s</span><span class=\"s2\"> --&gt; </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n        <span class=\"n\">bill</span><span class=\"p\">,</span>\n        <span class=\"n\">details</span><span class=\"p\">[</span><span class=\"s1\">'date'</span><span class=\"p\">],</span>\n        <span class=\"n\">details</span><span class=\"p\">[</span><span class=\"s1\">'priceWithTax'</span><span class=\"p\">][</span><span class=\"s1\">'text'</span><span class=\"p\">],</span>\n        <span class=\"n\">details</span><span class=\"p\">[</span><span class=\"s1\">'pdfUrl'</span><span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"enable-network-burst-in-sbg1\">\n<h3>Enable network burst in SBG1</h3>\n<p>\u2018Network burst\u2019 is a free service but is opt-in. What if you have, say, 10\nservers in <tt><span class=\"pre\">SBG-1</span></tt> datacenter? You certainely don\u2019t want to activate it\nmanually for each servers. You could take advantage of a code like this.</p>\n<p>This example assumes an existing <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> with valid <tt>application_key</tt>,\n<tt>application_secret</tt> and <tt>consumer_key</tt>.</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n\n<span class=\"c1\"># create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># get list of all server names</span>\n<span class=\"n\">servers</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/dedicated/server/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># find all servers in SBG-1 datacenter</span>\n<span class=\"k\">for</span> <span class=\"n\">server</span> <span class=\"ow\">in</span> <span class=\"n\">servers</span><span class=\"p\">:</span>\n    <span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/dedicated/server/</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">server</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">details</span><span class=\"p\">[</span><span class=\"s1\">'datacenter'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'sbg1'</span><span class=\"p\">:</span>\n        <span class=\"c1\"># enable burst on server</span>\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s1\">'/dedicated/server/</span><span class=\"si\">%s</span><span class=\"s1\">/burst'</span> <span class=\"o\">%</span> <span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"s1\">'active'</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span> <span class=\"s2\">\"Enabled burst for </span><span class=\"si\">%s</span><span class=\"s2\"> server located in SBG-1\"</span> <span class=\"o\">%</span> <span class=\"n\">server</span>\n</pre>\n</div>\n<div id=\"list-application-authorized-to-access-your-account\">\n<h3>List application authorized to access your account</h3>\n<p>Thanks to the application key / consumer key mechanism, it is possible to\nfinely track applications having access to your data and revoke this access.\nThis examples lists validated applications. It could easily be adapted to\nmanage revocation too.</p>\n<p>This example assumes an existing <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> with valid <tt>application_key</tt>,\n<tt>application_secret</tt> and <tt>consumer_key</tt>.</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tabulate</span> <span class=\"kn\">import</span> <span class=\"n\">tabulate</span>\n\n<span class=\"c1\"># create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"n\">credentials</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/me/api/credential'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"s1\">'validated'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pretty print credentials status</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">credential_id</span> <span class=\"ow\">in</span> <span class=\"n\">credentials</span><span class=\"p\">:</span>\n    <span class=\"n\">credential_method</span> <span class=\"o\">=</span> <span class=\"s1\">'/me/api/credential/'</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">credential_id</span><span class=\"p\">)</span>\n    <span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">credential_method</span><span class=\"p\">)</span>\n    <span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">credential_method</span><span class=\"o\">+</span><span class=\"s1\">'/application'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span>\n        <span class=\"n\">credential_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'[</span><span class=\"si\">%s</span><span class=\"s1\">] </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">[</span><span class=\"s1\">'status'</span><span class=\"p\">],</span> <span class=\"n\">application</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]),</span>\n        <span class=\"n\">application</span><span class=\"p\">[</span><span class=\"s1\">'description'</span><span class=\"p\">],</span>\n        <span class=\"n\">credential</span><span class=\"p\">[</span><span class=\"s1\">'creation'</span><span class=\"p\">],</span>\n        <span class=\"n\">credential</span><span class=\"p\">[</span><span class=\"s1\">'expiration'</span><span class=\"p\">],</span>\n        <span class=\"n\">credential</span><span class=\"p\">[</span><span class=\"s1\">'lastUse'</span><span class=\"p\">],</span>\n    <span class=\"p\">])</span>\n<span class=\"nb\">print</span> <span class=\"n\">tabulate</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'ID'</span><span class=\"p\">,</span> <span class=\"s1\">'App Name'</span><span class=\"p\">,</span> <span class=\"s1\">'Description'</span><span class=\"p\">,</span>\n                               <span class=\"s1\">'Token Creation'</span><span class=\"p\">,</span> <span class=\"s1\">'Token Expiration'</span><span class=\"p\">,</span> <span class=\"s1\">'Token Last Use'</span><span class=\"p\">])</span>\n</pre>\n<p>Before running this example, make sure you have the\n<a href=\"https://pypi.python.org/pypi/tabulate\" rel=\"nofollow\">tabulate</a> library installed. It\u2019s a\npretty cool library to pretty print tabular data in a clean and easy way.</p>\n<pre>&gt;&gt;&gt; pip install tabulate\n</pre>\n</div>\n<div id=\"open-a-kvm-remote-screen-on-a-dedicated-server\">\n<h3>Open a KVM (remote screen) on a dedicated server</h3>\n<p>Recent dedicated servers come with an IPMI interface. A lightweight control board embedded\non the server. Using IPMI, it is possible to get a remote screen on a server. This is\nparticularly useful to tweak the BIOS or troubleshoot boot issues.</p>\n<p>Hopefully, this can easily be automated using a simple script. It assumes Java Web Start is\nfully installed on the machine and a consumer key allowed on the server exists.</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n\n<span class=\"c1\"># check arguments</span>\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Usage: </span><span class=\"si\">%s</span><span class=\"s2\"> SERVER_NAME ALLOWED_IP_V4\"</span> <span class=\"o\">%</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">server_name</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">allowed_ip</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># create a KVM</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'/dedicated/server/'</span><span class=\"o\">+</span><span class=\"n\">server_name</span><span class=\"o\">+</span><span class=\"s1\">'/features/ipmi/access'</span><span class=\"p\">,</span> <span class=\"n\">ipToAllow</span><span class=\"o\">=</span><span class=\"n\">allowed_ip</span><span class=\"p\">,</span> <span class=\"n\">ttl</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"kvmipJnlp\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># open the KVM, when ready</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># use a named temfile and feed it to java web start</span>\n        <span class=\"k\">with</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">NamedTemporaryFile</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/dedicated/server/ns6457228.ip-178-33-61.eu/features/ipmi/access?type=kvmipJnlp'</span><span class=\"p\">)[</span><span class=\"s1\">'value'</span><span class=\"p\">])</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">([</span><span class=\"s2\">\"javaws\"</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">])</span>\n        <span class=\"k\">break</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Running is only a simple command line:</p>\n<pre><span class=\"c1\"># Basic\n</span>python open_kvm.py ns1234567.ip-178-42-42.eu <span class=\"k\">$(</span>curl ifconfig.ovh<span class=\"k\">)</span>\n\n<span class=\"c1\"># Use a specific consumer key\n</span><span class=\"nv\">OVH_CONSUMER_KEY</span><span class=\"o\">=</span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA python open_kvm.py ns6457228.ip-178-33-61.eu <span class=\"k\">$(</span>curl -s ifconfig.ovh<span class=\"k\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<dl>\n<dt>You have 3 ways to provide configuration to the client:</dt>\n<dd><ul>\n<li>write it directly in the application code</li>\n<li>read environment variables or predefined configuration files</li>\n<li>read it from a custom configuration file</li>\n</ul>\n</dd>\n</dl>\n<div id=\"embed-the-configuration-in-the-code\">\n<h3>Embed the configuration in the code</h3>\n<p>The straightforward way to use OVH\u2019s API keys is to embed them directly in the\napplication code. While this is very convenient, it lacks of elegance and\nflexibility.</p>\n<p>Example usage:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span>\n    <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s1\">'ovh-eu'</span><span class=\"p\">,</span>\n    <span class=\"n\">application_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;application key&gt;'</span><span class=\"p\">,</span>\n    <span class=\"n\">application_secret</span><span class=\"o\">=</span><span class=\"s1\">'&lt;application secret&gt;'</span><span class=\"p\">,</span>\n    <span class=\"n\">consumer_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;consumer key&gt;'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"environment-vars-and-predefined-configuration-files\">\n<h3>Environment vars and predefined configuration files</h3>\n<p>Alternatively it is suggested to use configuration files or environment\nvariables so that the same code may run seamlessly in multiple environments.\nProduction and development for instance.</p>\n<p>This wrapper will first look for direct instantiation parameters then\n<tt>OVH_ENDPOINT</tt>, <tt>OVH_APPLICATION_KEY</tt>, <tt>OVH_APPLICATION_SECRET</tt> and\n<tt>OVH_CONSUMER_KEY</tt> environment variables. If either of these parameter is not\nprovided, it will look for a configuration file of the form:</p>\n<pre><span class=\"k\">[default]</span>\n<span class=\"c1\">; general configuration: default endpoint</span>\n<span class=\"na\">endpoint</span><span class=\"o\">=</span><span class=\"s\">ovh-eu</span>\n\n<span class=\"k\">[ovh-eu]</span>\n<span class=\"c1\">; configuration specific to 'ovh-eu' endpoint</span>\n<span class=\"na\">application_key</span><span class=\"o\">=</span><span class=\"s\">my_app_key</span>\n<span class=\"na\">application_secret</span><span class=\"o\">=</span><span class=\"s\">my_application_secret</span>\n<span class=\"na\">consumer_key</span><span class=\"o\">=</span><span class=\"s\">my_consumer_key</span>\n</pre>\n<p>The client will successively attempt to locate this configuration file in</p>\n<ol>\n<li>Current working directory: <tt>./ovh.conf</tt></li>\n<li>Current user\u2019s home directory <tt><span class=\"pre\">~/.ovh.conf</span></tt></li>\n<li>System wide configuration <tt>/etc/ovh.conf</tt></li>\n</ol>\n<p>This lookup mechanism makes it easy to overload credentials for a specific\nproject or user.</p>\n<p>Example usage:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"custom-configuration-file\">\n<h3>Custom configuration file</h3>\n<p>You can also specify a custom configuration file. With this method, you won\u2019t be able to inherit values from environment.</p>\n<p>Example usage:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s1\">'/my/config.conf'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"passing-parameters\">\n<h2>Passing parameters</h2>\n<p>You can call all the methods of the API with the necessary arguments.</p>\n<p>If an API needs an argument colliding with a Python reserved keyword, it\ncan be prefixed with an underscore. For example, <tt>from</tt> argument of\n<tt>POST <span class=\"pre\">/email/domain/{domain}/redirection</span></tt> may be replaced by <tt>_from</tt>.</p>\n<p>With characters invalid in python argument name like a dot, you can:</p>\n<pre><span class=\"c1\"># -*- encoding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">ovh</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'date.from'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'2014-01-01'</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'date.to'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'2015-01-01'</span>\n\n<span class=\"c1\"># create a client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ovh</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># pass parameters using **</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'/me/bills'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced usage</h2>\n<div id=\"un-authenticated-calls\">\n<h3>Un-authenticated calls</h3>\n<p>If the user has not authenticated yet (ie, there is no valid Consumer Key), you\nmay force <tt><span class=\"pre\">python-ovh</span></tt> to issue the call by passing <tt>_need_auth=True</tt> to\nthe high level <tt>get()</tt>, <tt>post()</tt>, <tt>put()</tt> and <tt>delete()</tt> helpers or\n<tt>need_auth=True</tt> to the low level method <tt>Client.call()</tt> and\n<tt>Client.raw_call()</tt>.</p>\n<p>This is needed when calling <tt>POST /auth/credential</tt> and <tt>GET /auth/time</tt>\nwhich are used internally for authentication and can optionally be done for\nmost of the <tt>/order</tt> calls.</p>\n</div>\n<div id=\"access-the-raw-requests-response-objects\">\n<h3>Access the raw requests response objects</h3>\n<p>The high level <tt>get()</tt>, <tt>post()</tt>, <tt>put()</tt> and <tt>delete()</tt> helpers as well\nas the lower level <tt>call()</tt> will returned a parsed json response or raise in\ncase of error.</p>\n<p>In some rare scenario, advanced setups, you may need to perform customer\nprocessing on the raw request response. It may be accessed via <tt>raw_call()</tt>.\nThis is the lowest level call in <tt><span class=\"pre\">python-ovh</span></tt>. See the source for more\ninformation.</p>\n</div>\n</div>\n<div id=\"hacking\">\n<h2>Hacking</h2>\n<p>This wrapper uses standard Python tools, so you should feel at home with it.\nHere is a quick outline of what it may look like. A good practice is to run\nthis from a <tt>virtualenv</tt>.</p>\n<div id=\"get-the-sources\">\n<h3>Get the sources</h3>\n<pre>git clone https://github.com/ovh/python-ovh.git\n<span class=\"nb\">cd</span> python-ovh\npython setup.py develop\n</pre>\n<p>You\u2019ve developed a new cool feature ? Fixed an annoying bug ? We\u2019d be happy\nto hear from you !</p>\n</div>\n<div id=\"run-the-tests\">\n<h3>Run the tests</h3>\n<p>Simply run <tt>nosetests</tt>. It will automatically load its configuration from\n<tt>setup.cfg</tt> and output full coverage status. Since we all love quality, please\nnote that we do not accept contributions with test coverage under 100%.</p>\n<pre>pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\nnosetests <span class=\"c1\"># 100% coverage is a hard minimum</span>\n</pre>\n</div>\n<div id=\"build-the-documentation\">\n<h3>Build the documentation</h3>\n<p>Documentation is managed using the excellent <tt>Sphinx</tt> system. For example, to\nbuild HTML documentation:</p>\n<pre><span class=\"nb\">cd</span> python-ovh/docs\nmake html\n</pre>\n</div>\n</div>\n<div id=\"supported-apis\">\n<h2>Supported APIs</h2>\n<div id=\"id1\">\n<h3>OVH Europe</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://eu.api.ovh.com/\" rel=\"nofollow\">https://eu.api.ovh.com/</a></li>\n<li><strong>Community support</strong>: <a href=\"mailto:api-subscribe%40ml.ovh.net\">api-subscribe<span>@</span>ml<span>.</span>ovh<span>.</span>net</a></li>\n<li><strong>Console</strong>: <a href=\"https://eu.api.ovh.com/console\" rel=\"nofollow\">https://eu.api.ovh.com/console</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://eu.api.ovh.com/createApp/\" rel=\"nofollow\">https://eu.api.ovh.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://eu.api.ovh.com/createToken/\" rel=\"nofollow\">https://eu.api.ovh.com/createToken/</a></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>OVH US</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://api.us.ovhcloud.com/\" rel=\"nofollow\">https://api.us.ovhcloud.com/</a></li>\n<li><strong>Console</strong>: <a href=\"https://api.us.ovhcloud.com/console/\" rel=\"nofollow\">https://api.us.ovhcloud.com/console/</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://api.us.ovhcloud.com/createApp/\" rel=\"nofollow\">https://api.us.ovhcloud.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://api.us.ovhcloud.com/createToken/\" rel=\"nofollow\">https://api.us.ovhcloud.com/createToken/</a></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>OVH North America</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://ca.api.ovh.com/\" rel=\"nofollow\">https://ca.api.ovh.com/</a></li>\n<li><strong>Community support</strong>: <a href=\"mailto:api-subscribe%40ml.ovh.net\">api-subscribe<span>@</span>ml<span>.</span>ovh<span>.</span>net</a></li>\n<li><strong>Console</strong>: <a href=\"https://ca.api.ovh.com/console\" rel=\"nofollow\">https://ca.api.ovh.com/console</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://ca.api.ovh.com/createApp/\" rel=\"nofollow\">https://ca.api.ovh.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://ca.api.ovh.com/createToken/\" rel=\"nofollow\">https://ca.api.ovh.com/createToken/</a></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>So you Start Europe</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://eu.api.soyoustart.com/\" rel=\"nofollow\">https://eu.api.soyoustart.com/</a></li>\n<li><strong>Community support</strong>: <a href=\"mailto:api-subscribe%40ml.ovh.net\">api-subscribe<span>@</span>ml<span>.</span>ovh<span>.</span>net</a></li>\n<li><strong>Console</strong>: <a href=\"https://eu.api.soyoustart.com/console/\" rel=\"nofollow\">https://eu.api.soyoustart.com/console/</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://eu.api.soyoustart.com/createApp/\" rel=\"nofollow\">https://eu.api.soyoustart.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://eu.api.soyoustart.com/createToken/\" rel=\"nofollow\">https://eu.api.soyoustart.com/createToken/</a></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>So you Start North America</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://ca.api.soyoustart.com/\" rel=\"nofollow\">https://ca.api.soyoustart.com/</a></li>\n<li><strong>Community support</strong>: <a href=\"mailto:api-subscribe%40ml.ovh.net\">api-subscribe<span>@</span>ml<span>.</span>ovh<span>.</span>net</a></li>\n<li><strong>Console</strong>: <a href=\"https://ca.api.soyoustart.com/console/\" rel=\"nofollow\">https://ca.api.soyoustart.com/console/</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://ca.api.soyoustart.com/createApp/\" rel=\"nofollow\">https://ca.api.soyoustart.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://ca.api.soyoustart.com/createToken/\" rel=\"nofollow\">https://ca.api.soyoustart.com/createToken/</a></li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>Kimsufi Europe</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://eu.api.kimsufi.com/\" rel=\"nofollow\">https://eu.api.kimsufi.com/</a></li>\n<li><strong>Community support</strong>: <a href=\"mailto:api-subscribe%40ml.ovh.net\">api-subscribe<span>@</span>ml<span>.</span>ovh<span>.</span>net</a></li>\n<li><strong>Console</strong>: <a href=\"https://eu.api.kimsufi.com/console/\" rel=\"nofollow\">https://eu.api.kimsufi.com/console/</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://eu.api.kimsufi.com/createApp/\" rel=\"nofollow\">https://eu.api.kimsufi.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://eu.api.kimsufi.com/createToken/\" rel=\"nofollow\">https://eu.api.kimsufi.com/createToken/</a></li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>Kimsufi North America</h3>\n<ul>\n<li><strong>Documentation</strong>: <a href=\"https://ca.api.kimsufi.com/\" rel=\"nofollow\">https://ca.api.kimsufi.com/</a></li>\n<li><strong>Community support</strong>: <a href=\"mailto:api-subscribe%40ml.ovh.net\">api-subscribe<span>@</span>ml<span>.</span>ovh<span>.</span>net</a></li>\n<li><strong>Console</strong>: <a href=\"https://ca.api.kimsufi.com/console/\" rel=\"nofollow\">https://ca.api.kimsufi.com/console/</a></li>\n<li><strong>Create application credentials</strong>: <a href=\"https://ca.api.kimsufi.com/createApp/\" rel=\"nofollow\">https://ca.api.kimsufi.com/createApp/</a></li>\n<li><strong>Create script credentials</strong> (all keys at once): <a href=\"https://ca.api.kimsufi.com/createToken/\" rel=\"nofollow\">https://ca.api.kimsufi.com/createToken/</a></li>\n</ul>\n</div>\n</div>\n<div id=\"related-links\">\n<h2>Related links</h2>\n<ul>\n<li><strong>Contribute</strong>: <a href=\"https://github.com/ovh/python-ovh\" rel=\"nofollow\">https://github.com/ovh/python-ovh</a></li>\n<li><strong>Report bugs</strong>: <a href=\"https://github.com/ovh/python-ovh/issues\" rel=\"nofollow\">https://github.com/ovh/python-ovh/issues</a></li>\n<li><strong>Download</strong>: <a href=\"http://pypi.python.org/pypi/ovh\" rel=\"nofollow\">http://pypi.python.org/pypi/ovh</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>3-Clause BSD</p>\n</div>\n\n          </div>"}, "last_serial": 4599113, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "43684ef47bb12d9d3da7b97505bda945", "sha256": "4e6d46e6c29edc02f5ee65a997869bbebdbd81b9184f3e1c4fbd9de3eb974905"}, "downloads": -1, "filename": "ovh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "43684ef47bb12d9d3da7b97505bda945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21159, "upload_time": "2014-09-09T09:50:42", "upload_time_iso_8601": "2014-09-09T09:50:42.567007Z", "url": "https://files.pythonhosted.org/packages/33/a0/c42757a092018b2c5372771eadfd644a4d6e921a37aeab5783a54065ffba/ovh-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "effe28661adc8a27c68d91d95dc8dd89", "sha256": "248bb5c5680285bc1e9ddfff14918b765103cca112e301b6530734c94603c1da"}, "downloads": -1, "filename": "ovh-0.2.0.tar.gz", "has_sig": false, "md5_digest": "effe28661adc8a27c68d91d95dc8dd89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75129, "upload_time": "2014-09-19T14:55:12", "upload_time_iso_8601": "2014-09-19T14:55:12.318787Z", "url": "https://files.pythonhosted.org/packages/93/93/2b324017748f057e0a7189cfb6c845c900e3e1a5f303d04c788a593b5a15/ovh-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "435e547f1a818a794c82843b3b5f6e2b", "sha256": "abf5bcaad180ce5370db3013c42ad5e2a578082ae974c275aeef8c8001112299"}, "downloads": -1, "filename": "ovh-0.2.1.tar.gz", "has_sig": false, "md5_digest": "435e547f1a818a794c82843b3b5f6e2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75964, "upload_time": "2014-09-24T14:44:21", "upload_time_iso_8601": "2014-09-24T14:44:21.365910Z", "url": "https://files.pythonhosted.org/packages/8d/82/996b2e2162cd150be96ccbe4f11141125fa3d8e477a7a612caf61facb38f/ovh-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "f4ef7983aa90e739cda5425dbe239cd9", "sha256": "0e006b7c469387c32e71c8f913099b1101390c75642092b0700e513588f333a7"}, "downloads": -1, "filename": "ovh-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f4ef7983aa90e739cda5425dbe239cd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109142, "upload_time": "2014-10-24T13:13:41", "upload_time_iso_8601": "2014-10-24T13:13:41.801716Z", "url": "https://files.pythonhosted.org/packages/24/30/c918e35b732da4a38ac434f23046ed41b5050fa975d13c0309a086afc668/ovh-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7c00a02dcb2ad012123d3706acc37b41", "sha256": "656ec47e675bdf516ffdab2031b67d0ee9cd8ea1fd687c944cc617448345f3ad"}, "downloads": -1, "filename": "ovh-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7c00a02dcb2ad012123d3706acc37b41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110966, "upload_time": "2015-02-16T18:37:21", "upload_time_iso_8601": "2015-02-16T18:37:21.285393Z", "url": "https://files.pythonhosted.org/packages/0d/04/4fa0dc99a50b7e29223876a2e344cc1ac8e9b04de5f2c7b00d9c84e4ab7e/ovh-0.3.1.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "3819bbc4dde34ac212bf5463088ecc20", "sha256": "64e3206a7469963a97dbec070417a3b45704c0dd890333bbcee4b6d6898d90bd"}, "downloads": -1, "filename": "ovh-0.3.3.tar.gz", "has_sig": false, "md5_digest": "3819bbc4dde34ac212bf5463088ecc20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111092, "upload_time": "2015-03-11T12:10:47", "upload_time_iso_8601": "2015-03-11T12:10:47.444183Z", "url": "https://files.pythonhosted.org/packages/d4/ed/56520336fb9feb9beb4fb20a8c9fd56118bcb12fdb977a3950916b4adc41/ovh-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "d08f19723d620b635630c507e147df8f", "sha256": "d4d3867af7fb914cad774a20aecb5f70e35e54244622db1dfbdd22e0c2149491"}, "downloads": -1, "filename": "ovh-0.3.4.tar.gz", "has_sig": false, "md5_digest": "d08f19723d620b635630c507e147df8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111445, "upload_time": "2015-06-10T12:57:14", "upload_time_iso_8601": "2015-06-10T12:57:14.564687Z", "url": "https://files.pythonhosted.org/packages/e7/33/d9d159f2dc75f92311819a998e80748d8145166d3c9f81ebd452832974c7/ovh-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "a499073f95d630bdf41fd944335545a3", "sha256": "b604529e0cc3b5090496cc1e935f0320ba1ae1b5fe68c5ab4167ad475ba6e4f8"}, "downloads": -1, "filename": "ovh-0.3.5.tar.gz", "has_sig": false, "md5_digest": "a499073f95d630bdf41fd944335545a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112497, "upload_time": "2015-07-30T16:50:54", "upload_time_iso_8601": "2015-07-30T16:50:54.311717Z", "url": "https://files.pythonhosted.org/packages/36/0a/0fbfa9dcf7bac91f35fe812d3a0c447c0e5b94ff965cbb42c40997e84936/ovh-0.3.5.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "474153a75733c99007efb7ae94143861", "sha256": "0191d851e746c741c93a2a5b84b21a138d7abb20df9c6ea00dfba7e9dbf40598"}, "downloads": -1, "filename": "ovh-0.4.0.tar.gz", "has_sig": false, "md5_digest": "474153a75733c99007efb7ae94143861", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 365303, "upload_time": "2016-04-07T12:16:02", "upload_time_iso_8601": "2016-04-07T12:16:02.959979Z", "url": "https://files.pythonhosted.org/packages/30/1a/077b8829bc18792cb865c294219f74e5ff6bf3cc4ef5d7a50050d531d53a/ovh-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "e7384cd3e38a5b8ed64b75d9a44fc5fb", "sha256": "667b3c6dd36119f5b900e862c3ca1d0162d6d6b97a33cc34b39f4f7b1a69abc1"}, "downloads": -1, "filename": "ovh-0.4.1.tar.gz", "has_sig": false, "md5_digest": "e7384cd3e38a5b8ed64b75d9a44fc5fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 365447, "upload_time": "2016-04-08T10:58:21", "upload_time_iso_8601": "2016-04-08T10:58:21.294380Z", "url": "https://files.pythonhosted.org/packages/c0/3b/17fb7a34734cd1acd79c98a84a4e495e647478b8bf71c9a1063fd12e3929/ovh-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "b9e78ed785cd483ecdc9b69721c1d64d", "sha256": "fbee6110048d05aa875cbb6b0fd2ad478be6f8a1da66e656738af0399c95d9ea"}, "downloads": -1, "filename": "ovh-0.4.2.tar.gz", "has_sig": false, "md5_digest": "b9e78ed785cd483ecdc9b69721c1d64d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 550274, "upload_time": "2016-04-11T09:15:27", "upload_time_iso_8601": "2016-04-11T09:15:27.601156Z", "url": "https://files.pythonhosted.org/packages/97/5a/190fa3a159e3592362787841072ffdc32e6598ed3e814b108f0db57bbaec/ovh-0.4.2.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "28198d4573c00e16e0aa6dba951d62fa", "sha256": "5df56cc64e5f8282b632e9db8e870bf246e68c11d2eea32195bf0c5a75677463"}, "downloads": -1, "filename": "ovh-0.4.4.tar.gz", "has_sig": false, "md5_digest": "28198d4573c00e16e0aa6dba951d62fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 551099, "upload_time": "2016-07-15T12:05:52", "upload_time_iso_8601": "2016-07-15T12:05:52.747651Z", "url": "https://files.pythonhosted.org/packages/63/8d/b4abee3a578962f70a11eb929ff88a47eaa0d9e4289183c595525e1bdca8/ovh-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "fe0f39c9c015144f1c22e76e0c91d617", "sha256": "4e898d05d86d6cd505dfc3e77c6905771b7953b7858f7c92bc928cb774b8c2f1"}, "downloads": -1, "filename": "ovh-0.4.5.tar.gz", "has_sig": false, "md5_digest": "fe0f39c9c015144f1c22e76e0c91d617", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 551128, "upload_time": "2016-07-18T08:23:48", "upload_time_iso_8601": "2016-07-18T08:23:48.342614Z", "url": "https://files.pythonhosted.org/packages/af/d0/777e972fbb00df4eabae40c41b379b5c6842952deb76f4d7c53c51e85026/ovh-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "af8cfc95022f10d85ea6185fd83bf446", "sha256": "2775fdb12257824dfa8a46c94ea97bd074ffb7d32f1ce8557bf15c453df9238c"}, "downloads": -1, "filename": "ovh-0.4.6.tar.gz", "has_sig": false, "md5_digest": "af8cfc95022f10d85ea6185fd83bf446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 550967, "upload_time": "2017-02-27T15:57:49", "upload_time_iso_8601": "2017-02-27T15:57:49.264911Z", "url": "https://files.pythonhosted.org/packages/91/1e/3ea7c3934405e18b396734f16669abac821a9a36eae914b92126f94f1eae/ovh-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "b986606158719bc362d8d0abf21561c3", "sha256": "12e24b67b08be1bed278638ded606bf49b093635eaa3964c9e3c4c6f6bf92432"}, "downloads": -1, "filename": "ovh-0.4.7.tar.gz", "has_sig": false, "md5_digest": "b986606158719bc362d8d0abf21561c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 552739, "upload_time": "2017-03-10T13:46:06", "upload_time_iso_8601": "2017-03-10T13:46:06.855250Z", "url": "https://files.pythonhosted.org/packages/3f/1a/398e7035520166f5d88434f2689ac40b0a4470d9a3ada1d5a7881dc7df0c/ovh-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "d57bafd6e779c525c027f73cb74af64f", "sha256": "79fa4bdc61b9953af867676a9558d9e792b9fde568c980efe848a40565a217cd"}, "downloads": -1, "filename": "ovh-0.4.8.tar.gz", "has_sig": false, "md5_digest": "d57bafd6e779c525c027f73cb74af64f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 545327, "upload_time": "2017-09-22T15:20:04", "upload_time_iso_8601": "2017-09-22T15:20:04.526649Z", "url": "https://files.pythonhosted.org/packages/a3/5b/2fe5d42d4613724af7968ed1b1435ca2910b75d97de490b81e1cfa87ccce/ovh-0.4.8.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "c950b15ba253ad7ce50a6ca30b69d95f", "sha256": "03c7a5e7a62e7bc09b899f7692c694360be7db93ebe44428d6605fccda244692"}, "downloads": -1, "filename": "ovh-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c950b15ba253ad7ce50a6ca30b69d95f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 496806, "upload_time": "2018-12-14T12:13:53", "upload_time_iso_8601": "2018-12-14T12:13:53.702726Z", "url": "https://files.pythonhosted.org/packages/58/92/db708f5a2e105ca48da1ac065c0168c7626685f9ab3667184dc2d9772bb1/ovh-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2864b3933c116be505310546de38e6c1", "sha256": "f74d190c4bff0953d76124cb8ed319a8a999138720e42957f0db481ef4746ae8"}, "downloads": -1, "filename": "ovh-0.5.0.tar.gz", "has_sig": false, "md5_digest": "2864b3933c116be505310546de38e6c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 553134, "upload_time": "2018-12-14T12:13:55", "upload_time_iso_8601": "2018-12-14T12:13:55.452219Z", "url": "https://files.pythonhosted.org/packages/df/29/cd1c5b212e48309f87c28488e8af6156f80c73950dcaecb9721ca38fdb00/ovh-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c950b15ba253ad7ce50a6ca30b69d95f", "sha256": "03c7a5e7a62e7bc09b899f7692c694360be7db93ebe44428d6605fccda244692"}, "downloads": -1, "filename": "ovh-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c950b15ba253ad7ce50a6ca30b69d95f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 496806, "upload_time": "2018-12-14T12:13:53", "upload_time_iso_8601": "2018-12-14T12:13:53.702726Z", "url": "https://files.pythonhosted.org/packages/58/92/db708f5a2e105ca48da1ac065c0168c7626685f9ab3667184dc2d9772bb1/ovh-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2864b3933c116be505310546de38e6c1", "sha256": "f74d190c4bff0953d76124cb8ed319a8a999138720e42957f0db481ef4746ae8"}, "downloads": -1, "filename": "ovh-0.5.0.tar.gz", "has_sig": false, "md5_digest": "2864b3933c116be505310546de38e6c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 553134, "upload_time": "2018-12-14T12:13:55", "upload_time_iso_8601": "2018-12-14T12:13:55.452219Z", "url": "https://files.pythonhosted.org/packages/df/29/cd1c5b212e48309f87c28488e8af6156f80c73950dcaecb9721ca38fdb00/ovh-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:35 2020"}