{"info": {"author": "Zoltan Fedor", "author_email": "zoltan.1.fedor@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "[![Build Status](https://travis-ci.com/zoltan-fedor/falcon-caching.svg?branch=master)](https://travis-ci.com/zoltan-fedor/falcon-caching)\n[![codecov](https://codecov.io/gh/zoltan-fedor/falcon-caching/branch/master/graph/badge.svg)](https://codecov.io/gh/zoltan-fedor/falcon-caching)\n[![Documentation Status](https://readthedocs.org/projects/falcon-caching/badge/?version=latest)](https://falcon-caching.readthedocs.io/en/latest/?badge=latest)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/zoltan-fedor/falcon-caching)\n\n# Falcon-Caching\n\nThis library provides cache support for the [Falcon web framework](https://github.com/falconry/falcon).\n\nIt is a port of the popular [Flask-Caching](https://github.com/sh4nks/flask-caching) library.\n\nThe library aims to be compatible with CPython 3.6+ and PyPy 3.5+.\n\n\n## Documentation\n\nYou can find the documentation of this library on [Read the Docs](https://falcon-caching.readthedocs.io/en/latest/).\n\n\n## Quickstart\n\n\nQuick example:\n```\nimport falcon\nfrom falcon_caching import Cache\n\n# setup the cache instance\ncache = Cache(\n    config=\n    {\n        'CACHE_EVICTION_STRATEGY': 'time-based',  # how records are evicted\n        'CACHE_TYPE': 'simple'  # what backend to use to store the cache\n    })\n\nclass ThingsResource:\n    # mark the method as cached\n    @cache.cached(timeout=600)\n    def on_get(self, req, resp):\n        pass\n\n# add the cache middleware to the Falcon app\napp = falcon.API(middleware=cache.middleware)\n\nthings = ThingsResource()\n\napp.add_route('/things', things)\n```\n\nAlternatively you could cache the whole resource:\n```\n# mark the whole resource - all its 'on_' methods as cached\n@cache.cached(timeout=600)\nclass ThingsResource:\n    def on_get(self, req, resp):\n        pass\n\n    def on_post(self, req, resp):\n        pass\n```\n\n> **NOTE:**  \n> Be careful with the order of middlewares. The `cache.middleware` will\nshort-circuit any further processing if a cached version of that resource is found.\nIt will skip any remaining `process_request` and `process_resource` methods,\nas well as the `responder` method that the request would have been routed to.\nHowever, any `process_response` middleware methods will still be called.\n>\n> This is why it is suggested that you add the `cache.middleware` **following** any\nauthentication / authorization middlewares to avoid unauthorized access of records\nserved from the cache.\n\n## Development\n\nFor the development environment we use `Pipenv` and for packaging we use `Flit`.\n\n### Documentation\n\nThe documentation is built via Sphinx following the \n[Google docstring style](https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html#example-google) \nand hosted on [Read the Docs](https://falcon-caching.readthedocs.io/en/latest/).\n\nTo review the documentation locally before committing:\n```\n$ cd docs\n$ python -m http.server 8088\n```\n\nNow you can access the documentation locally under `http://127.0.0.1:8088/_build/html/`\n\n### Development environment\n\nTo be able to test memcached the `pylibmc` library should be installed, which requires\nthe memcached source to compile, so you will need to install libmemcached-dev first:\n```\n$ sudo apt-get install libmemcached-dev\n```\n\nYou will also need Memcached, Redis and Redis Sentinel to be installed \nto be able to test against those locally:\n```\n$ sudo apt-get install memcached redis-server redis-sentinel\n```\n\nYou will also need Python 3.6-3.8 and PyPy3 and its source package installed to run\n`tox` in all environments.\n\nWe do use type hinting and run MyPy on those, but unfortunately MyPy currently breaks\nthe PyPy tests due to the `typed-ast` package's \"bug\" (see\nhttps://github.com/python/typed_ast/issues/97). Also with Pipenv you can't \nhave a second Pipfile. This is why for now we don't have `mypy` listed as a dev package\nin the Pipfile.\n\n## Credits\n\nAs this is a port of the popular [Flask-Caching](https://github.com/sh4nks/flask-caching) library\nonto the [Falcon web framework](https://github.com/falconry/falcon), parts of the code is copied\nfrom the [Flask-Caching](https://github.com/sh4nks/flask-caching) library.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zoltan-fedor/falcon-caching", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "falcon-caching", "package_url": "https://pypi.org/project/falcon-caching/", "platform": "", "project_url": "https://pypi.org/project/falcon-caching/", "project_urls": {"Documentation": "https://falcon-caching.readthedocs.io/en/latest/", "Homepage": "https://github.com/zoltan-fedor/falcon-caching"}, "release_url": "https://pypi.org/project/falcon-caching/0.2.0/", "requires_dist": ["falcon >=1.0.0", "msgpack", "flit ; extra == \"test\"", "pylibmc ; extra == \"test\"", "pytest >=4.0.0 ; extra == \"test\"", "pytest-cov ; extra == \"test\"", "pytest-pep8 ; extra == \"test\"", "pytest-xdist ; extra == \"test\"", "pytest-xprocess ; extra == \"test\"", "redis ; extra == \"test\"", "tox ; extra == \"test\"", "tox-pipenv-install ; extra == \"test\""], "requires_python": ">=3.6", "summary": "Falcon-Caching - a caching module for the Falcon web framework", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/zoltan-fedor/falcon-caching\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a75579e4d8d801d1d4212afd181f40e6a387c20a/68747470733a2f2f7472617669732d63692e636f6d2f7a6f6c74616e2d6665646f722f66616c636f6e2d63616368696e672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/zoltan-fedor/falcon-caching\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d203c447926b6466ccf467a394c99845f8ed4b40/68747470733a2f2f636f6465636f762e696f2f67682f7a6f6c74616e2d6665646f722f66616c636f6e2d63616368696e672f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://falcon-caching.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53fc64b9bdbf94000dad9cfbb66e9150ebf39ff8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66616c636f6e2d63616368696e672f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/zoltan-fedor/falcon-caching\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7db8d43223f55fabe102838639f47819829c1ca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667\"></a></p>\n<h1>Falcon-Caching</h1>\n<p>This library provides cache support for the <a href=\"https://github.com/falconry/falcon\" rel=\"nofollow\">Falcon web framework</a>.</p>\n<p>It is a port of the popular <a href=\"https://github.com/sh4nks/flask-caching\" rel=\"nofollow\">Flask-Caching</a> library.</p>\n<p>The library aims to be compatible with CPython 3.6+ and PyPy 3.5+.</p>\n<h2>Documentation</h2>\n<p>You can find the documentation of this library on <a href=\"https://falcon-caching.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the Docs</a>.</p>\n<h2>Quickstart</h2>\n<p>Quick example:</p>\n<pre><code>import falcon\nfrom falcon_caching import Cache\n\n# setup the cache instance\ncache = Cache(\n    config=\n    {\n        'CACHE_EVICTION_STRATEGY': 'time-based',  # how records are evicted\n        'CACHE_TYPE': 'simple'  # what backend to use to store the cache\n    })\n\nclass ThingsResource:\n    # mark the method as cached\n    @cache.cached(timeout=600)\n    def on_get(self, req, resp):\n        pass\n\n# add the cache middleware to the Falcon app\napp = falcon.API(middleware=cache.middleware)\n\nthings = ThingsResource()\n\napp.add_route('/things', things)\n</code></pre>\n<p>Alternatively you could cache the whole resource:</p>\n<pre><code># mark the whole resource - all its 'on_' methods as cached\n@cache.cached(timeout=600)\nclass ThingsResource:\n    def on_get(self, req, resp):\n        pass\n\n    def on_post(self, req, resp):\n        pass\n</code></pre>\n<blockquote>\n<p><strong>NOTE:</strong><br>\nBe careful with the order of middlewares. The <code>cache.middleware</code> will\nshort-circuit any further processing if a cached version of that resource is found.\nIt will skip any remaining <code>process_request</code> and <code>process_resource</code> methods,\nas well as the <code>responder</code> method that the request would have been routed to.\nHowever, any <code>process_response</code> middleware methods will still be called.</p>\n<p>This is why it is suggested that you add the <code>cache.middleware</code> <strong>following</strong> any\nauthentication / authorization middlewares to avoid unauthorized access of records\nserved from the cache.</p>\n</blockquote>\n<h2>Development</h2>\n<p>For the development environment we use <code>Pipenv</code> and for packaging we use <code>Flit</code>.</p>\n<h3>Documentation</h3>\n<p>The documentation is built via Sphinx following the\n<a href=\"https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html#example-google\" rel=\"nofollow\">Google docstring style</a>\nand hosted on <a href=\"https://falcon-caching.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the Docs</a>.</p>\n<p>To review the documentation locally before committing:</p>\n<pre><code>$ cd docs\n$ python -m http.server 8088\n</code></pre>\n<p>Now you can access the documentation locally under <code>http://127.0.0.1:8088/_build/html/</code></p>\n<h3>Development environment</h3>\n<p>To be able to test memcached the <code>pylibmc</code> library should be installed, which requires\nthe memcached source to compile, so you will need to install libmemcached-dev first:</p>\n<pre><code>$ sudo apt-get install libmemcached-dev\n</code></pre>\n<p>You will also need Memcached, Redis and Redis Sentinel to be installed\nto be able to test against those locally:</p>\n<pre><code>$ sudo apt-get install memcached redis-server redis-sentinel\n</code></pre>\n<p>You will also need Python 3.6-3.8 and PyPy3 and its source package installed to run\n<code>tox</code> in all environments.</p>\n<p>We do use type hinting and run MyPy on those, but unfortunately MyPy currently breaks\nthe PyPy tests due to the <code>typed-ast</code> package's \"bug\" (see\n<a href=\"https://github.com/python/typed_ast/issues/97\" rel=\"nofollow\">https://github.com/python/typed_ast/issues/97</a>). Also with Pipenv you can't\nhave a second Pipfile. This is why for now we don't have <code>mypy</code> listed as a dev package\nin the Pipfile.</p>\n<h2>Credits</h2>\n<p>As this is a port of the popular <a href=\"https://github.com/sh4nks/flask-caching\" rel=\"nofollow\">Flask-Caching</a> library\nonto the <a href=\"https://github.com/falconry/falcon\" rel=\"nofollow\">Falcon web framework</a>, parts of the code is copied\nfrom the <a href=\"https://github.com/sh4nks/flask-caching\" rel=\"nofollow\">Flask-Caching</a> library.</p>\n\n          </div>"}, "last_serial": 6362721, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "66dc48cf9716107f8daea8a85bbe3fda", "sha256": "ccc8e1adeaf034940459896d0a5133af7ed6e2095388730f04141ec70ce2bca2"}, "downloads": -1, "filename": "falcon_caching-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "66dc48cf9716107f8daea8a85bbe3fda", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23577, "upload_time": "2019-12-26T00:06:58", "upload_time_iso_8601": "2019-12-26T00:06:58.976569Z", "url": "https://files.pythonhosted.org/packages/26/92/333602a7d27fe8bb11d73a4876cb05d7f4c3a093a3dff07ee21cc2deb799/falcon_caching-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4de31983b6b96d36118031d070e700d0", "sha256": "7f9f8b8dc3abd4661864a5007980f963fdda8e8676dff2fac75e579ef84ef5aa"}, "downloads": -1, "filename": "falcon_caching-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4de31983b6b96d36118031d070e700d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34286, "upload_time": "2019-12-26T00:08:28", "upload_time_iso_8601": "2019-12-26T00:08:28.530248Z", "url": "https://files.pythonhosted.org/packages/d5/fb/65b093c0f84158d55ca763947904b227714bab72c3f77c2d604ad08773c1/falcon_caching-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5bd824af62a97a17203f9daf8c78a8c5", "sha256": "38a5a582fa94afc01431da0d02ba310e943118186069cbf1f1b3ae77ab910da7"}, "downloads": -1, "filename": "falcon_caching-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5bd824af62a97a17203f9daf8c78a8c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23570, "upload_time": "2019-12-26T00:32:17", "upload_time_iso_8601": "2019-12-26T00:32:17.009009Z", "url": "https://files.pythonhosted.org/packages/e6/95/55d18861e20272f8f77a42ca8f5642ae5bdaf2e9128c1bfbbf91c4010f98/falcon_caching-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9887816b505386fc3203a1c2fe67d13", "sha256": "00656348382e93894c47d56b61c97d1a5a0b0f1eb076d2bf45a72d2615f2974a"}, "downloads": -1, "filename": "falcon-caching-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9887816b505386fc3203a1c2fe67d13", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34291, "upload_time": "2019-12-26T00:32:27", "upload_time_iso_8601": "2019-12-26T00:32:27.256713Z", "url": "https://files.pythonhosted.org/packages/be/9e/7c5d52837c314e2e9ff57d145113a386638c9a3c679cac9a8a7cdc4ce2b4/falcon-caching-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e509314e07b66311f4de0827619ced42", "sha256": "a1f9f2bee623d2c3cc15d44c353edf768bee2ebaa67024b23609a31e6f343c3e"}, "downloads": -1, "filename": "falcon_caching-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e509314e07b66311f4de0827619ced42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23863, "upload_time": "2019-12-26T20:17:36", "upload_time_iso_8601": "2019-12-26T20:17:36.294113Z", "url": "https://files.pythonhosted.org/packages/a3/86/8a2644dd50cea0929d2a76e4801fd4d6e47d3e812b8710450006bde34e70/falcon_caching-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f431f1f4ad3e1a7dacc6d7bda278a1e9", "sha256": "6dfe0375eea4d91dfadb473645a5d0b3cf5a0a9e563260bef994321b84382ee1"}, "downloads": -1, "filename": "falcon-caching-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f431f1f4ad3e1a7dacc6d7bda278a1e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35932, "upload_time": "2019-12-26T20:17:44", "upload_time_iso_8601": "2019-12-26T20:17:44.794056Z", "url": "https://files.pythonhosted.org/packages/ba/2d/4ce4cb0404d70348c5a3fafc0140388afc93efa055d51bd799044df5f3f2/falcon-caching-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e509314e07b66311f4de0827619ced42", "sha256": "a1f9f2bee623d2c3cc15d44c353edf768bee2ebaa67024b23609a31e6f343c3e"}, "downloads": -1, "filename": "falcon_caching-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e509314e07b66311f4de0827619ced42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23863, "upload_time": "2019-12-26T20:17:36", "upload_time_iso_8601": "2019-12-26T20:17:36.294113Z", "url": "https://files.pythonhosted.org/packages/a3/86/8a2644dd50cea0929d2a76e4801fd4d6e47d3e812b8710450006bde34e70/falcon_caching-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f431f1f4ad3e1a7dacc6d7bda278a1e9", "sha256": "6dfe0375eea4d91dfadb473645a5d0b3cf5a0a9e563260bef994321b84382ee1"}, "downloads": -1, "filename": "falcon-caching-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f431f1f4ad3e1a7dacc6d7bda278a1e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35932, "upload_time": "2019-12-26T20:17:44", "upload_time_iso_8601": "2019-12-26T20:17:44.794056Z", "url": "https://files.pythonhosted.org/packages/ba/2d/4ce4cb0404d70348c5a3fafc0140388afc93efa055d51bd799044df5f3f2/falcon-caching-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:53 2020"}