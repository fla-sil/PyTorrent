{"info": {"author": "Eduardo Moguillansky", "author_email": "eduardo.moguillansky@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "configdict\n==========\n\nCheckedDict\n-----------\n\nA dictionary based on a default prototype. A CheckedDict can only define\nkey:value pairs which are already present in the default. It is possible to\ndefine a docstring for each key and different restrictions for the values\nregarding possible values, ranges and type. A CheckedDict is useful for\nconfiguration settings.\n\nConfigDict\n----------\n\nBased on CheckedDict, a ConfigDict is a persistent, unique dictionary. It is\nsaved under the config folder determined by the OS and it is updated with each\nmodification. It is useful for implementing configuration of a module / library\n/ app, where there is a default/initial state and the user needs to be able to\nconfigure global settings which must be persisted between sessions (similar to\nthe settings in an application)\n\nExample\n-------\n\n.. code-block:: python\n\n   config = ConfigDict(\"myapp\",\n       default = {\n           'font-size': 10.0,\n           'font-family': \"Monospace\",\n           'port' : 9100,\n       },\n       validator = {\n           'font-size::range' : (8, 24),\n           'port::range' : (9000, 65000),\n           'font-family::choices' : {'Roboto', 'Monospace'},\n       },\n       docs = {\n           'port': 'The port number to listen to',\n           'font-size': 'The size of the font, in pixels'\n       }\n   )\n\nThis will create the dictionary and load any persisted version. Any saved\nmodifications will override the default values. Whenever the user changes any\nvalue (via ``config[key] = newvalue``) the dictionary will be saved.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gesellkammer/configdict", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "configdict", "package_url": "https://pypi.org/project/configdict/", "platform": "", "project_url": "https://pypi.org/project/configdict/", "project_urls": {"Homepage": "https://github.com/gesellkammer/configdict"}, "release_url": "https://pypi.org/project/configdict/0.1.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "A persistent dict used as configuration", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"checkeddict\">\n<h2>CheckedDict</h2>\n<p>A dictionary based on a default prototype. A CheckedDict can only define\nkey:value pairs which are already present in the default. It is possible to\ndefine a docstring for each key and different restrictions for the values\nregarding possible values, ranges and type. A CheckedDict is useful for\nconfiguration settings.</p>\n</div>\n<div id=\"id1\">\n<h2>ConfigDict</h2>\n<p>Based on CheckedDict, a ConfigDict is a persistent, unique dictionary. It is\nsaved under the config folder determined by the OS and it is updated with each\nmodification. It is useful for implementing configuration of a module / library\n/ app, where there is a default/initial state and the user needs to be able to\nconfigure global settings which must be persisted between sessions (similar to\nthe settings in an application)</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigDict</span><span class=\"p\">(</span><span class=\"s2\">\"myapp\"</span><span class=\"p\">,</span>\n    <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'font-size'</span><span class=\"p\">:</span> <span class=\"mf\">10.0</span><span class=\"p\">,</span>\n        <span class=\"s1\">'font-family'</span><span class=\"p\">:</span> <span class=\"s2\">\"Monospace\"</span><span class=\"p\">,</span>\n        <span class=\"s1\">'port'</span> <span class=\"p\">:</span> <span class=\"mi\">9100</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'font-size::range'</span> <span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">),</span>\n        <span class=\"s1\">'port::range'</span> <span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">9000</span><span class=\"p\">,</span> <span class=\"mi\">65000</span><span class=\"p\">),</span>\n        <span class=\"s1\">'font-family::choices'</span> <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Roboto'</span><span class=\"p\">,</span> <span class=\"s1\">'Monospace'</span><span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">docs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'port'</span><span class=\"p\">:</span> <span class=\"s1\">'The port number to listen to'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'font-size'</span><span class=\"p\">:</span> <span class=\"s1\">'The size of the font, in pixels'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This will create the dictionary and load any persisted version. Any saved\nmodifications will override the default values. Whenever the user changes any\nvalue (via <tt>config[key] = newvalue</tt>) the dictionary will be saved.</p>\n</div>\n\n          </div>"}, "last_serial": 6517181, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6d38d56d6d546df792f7ab2a4105eb3c", "sha256": "bee9fdbe3981f1279455b13486af3846352e47807ba00a0cf17f18e87dc01763"}, "downloads": -1, "filename": "configdict-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6d38d56d6d546df792f7ab2a4105eb3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9567, "upload_time": "2020-01-24T23:34:07", "upload_time_iso_8601": "2020-01-24T23:34:07.633200Z", "url": "https://files.pythonhosted.org/packages/d0/b9/ffa73ec0bd927044688ef752787a708ef759f43c0c173342a859da1e31b1/configdict-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a50e32b67ff79b5f8bd193aaae56dfa6", "sha256": "85cc6c708bb6c068bc991721d4fedf3505a3d6d34fed151c5c6361666586eb94"}, "downloads": -1, "filename": "configdict-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a50e32b67ff79b5f8bd193aaae56dfa6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8521, "upload_time": "2020-01-25T01:47:13", "upload_time_iso_8601": "2020-01-25T01:47:13.554771Z", "url": "https://files.pythonhosted.org/packages/04/92/9e6bf308721540312149fb65ab62ddcdf0b9dede7e0ebb26d073217a2a73/configdict-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a50e32b67ff79b5f8bd193aaae56dfa6", "sha256": "85cc6c708bb6c068bc991721d4fedf3505a3d6d34fed151c5c6361666586eb94"}, "downloads": -1, "filename": "configdict-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a50e32b67ff79b5f8bd193aaae56dfa6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8521, "upload_time": "2020-01-25T01:47:13", "upload_time_iso_8601": "2020-01-25T01:47:13.554771Z", "url": "https://files.pythonhosted.org/packages/04/92/9e6bf308721540312149fb65ab62ddcdf0b9dede7e0ebb26d073217a2a73/configdict-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:57 2020"}