{"info": {"author": "Ralph Lepore", "author_email": "ralphlepore@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\nSticky Messages\n=====\n\nSticky Messages is a simple Django app to display \"sticky\" messages stored in\na message model that expire after a given time period. \n\nInspiration from:\nhttp://stackoverflow.com/questions/3076365/how-to-make-django-messages-stackoverflow-style\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"stickymessages\" to your INSTALLED_APPS setting like this::\n\n      INSTALLED_APPS = (\n          ...\n          'stickymessages',\n      )\n\n2. Add \"stickymessages\" to your TEMPLATE_CONTEXT_PROCESSORS setting like this::\n\n      TEMPLATE_CONTEXT_PROCESSORS = (\n          ...\n          'stickymessages.context_processors.latest_sticky_message',\n      )\n\n3. Run `python manage.py syncdb` to create the stickymessages models.\n\n4. Start the development server and visit http://127.0.0.1:8000/admin/\n  to create a message (you'll need the Admin app enabled).\n  \n5. To display a message simply add\n{% include \"stickymessages/display_latest_message.html\" %} to one of your\ntemplates.\n    NOTE: Template file uses bootstrap 'alert alert-block' classes for styling.\n    You may create your own styling by using the sticky-message style.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rlepore/django-sticky-messages", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-sticky-messages", "package_url": "https://pypi.org/project/django-sticky-messages/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-sticky-messages/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rlepore/django-sticky-messages"}, "release_url": "https://pypi.org/project/django-sticky-messages/0.1/", "requires_dist": null, "requires_python": null, "summary": "A simple Django app to display \"sticky\" messages that expire after a given time period.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>Sticky Messages<br>=====<br><br>Sticky Messages is a simple Django app to display \"sticky\" messages stored in<br>a message model that expire after a given time period. <br><br>Inspiration from:<br>http://stackoverflow.com/questions/3076365/how-to-make-django-messages-stackoverflow-style<br><br>Detailed documentation is in the \"docs\" directory.<br><br>Quick start<br>-----------<br><br>1. Add \"stickymessages\" to your INSTALLED_APPS setting like this::<br><br>      INSTALLED_APPS = (<br>          ...<br>          'stickymessages',<br>      )<br><br>2. Add \"stickymessages\" to your TEMPLATE_CONTEXT_PROCESSORS setting like this::<br><br>      TEMPLATE_CONTEXT_PROCESSORS = (<br>          ...<br>          'stickymessages.context_processors.latest_sticky_message',<br>      )<br><br>3. Run `python manage.py syncdb` to create the stickymessages models.<br><br>4. Start the development server and visit http://127.0.0.1:8000/admin/<br>  to create a message (you'll need the Admin app enabled).<br>  <br>5. To display a message simply add<br>{% include \"stickymessages/display_latest_message.html\" %} to one of your<br>templates.<br>    NOTE: Template file uses bootstrap 'alert alert-block' classes for styling.<br>    You may create your own styling by using the sticky-message style.\n          </div>"}, "last_serial": 790773, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d9f2f42f82b57d54c26a8c10b4c1f41c", "sha256": "28a588011a07bcbcbf7142d53f3b2cc709bc680b143e9eb1c7ac1d9211f7ca3a"}, "downloads": -1, "filename": "django-sticky-messages-0.1.tar.gz", "has_sig": false, "md5_digest": "d9f2f42f82b57d54c26a8c10b4c1f41c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3832, "upload_time": "2013-01-12T04:20:59", "upload_time_iso_8601": "2013-01-12T04:20:59.835917Z", "url": "https://files.pythonhosted.org/packages/ae/1c/3cc567d3adb2305829a697383db2ef1d6f6a3a1d0f57e2f20425f3bccc02/django-sticky-messages-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9f2f42f82b57d54c26a8c10b4c1f41c", "sha256": "28a588011a07bcbcbf7142d53f3b2cc709bc680b143e9eb1c7ac1d9211f7ca3a"}, "downloads": -1, "filename": "django-sticky-messages-0.1.tar.gz", "has_sig": false, "md5_digest": "d9f2f42f82b57d54c26a8c10b4c1f41c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3832, "upload_time": "2013-01-12T04:20:59", "upload_time_iso_8601": "2013-01-12T04:20:59.835917Z", "url": "https://files.pythonhosted.org/packages/ae/1c/3cc567d3adb2305829a697383db2ef1d6f6a3a1d0f57e2f20425f3bccc02/django-sticky-messages-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:54 2020"}