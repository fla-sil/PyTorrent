{"info": {"author": "Michael Penkov", "author_email": "m@penkov.dev", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# What?\n\nA wrapper around the standard [cat](https://en.wikipedia.org/wiki/Cat_%28Unix%29) utility that can read from:\n\n- HTTP and HTTPS\n- S3\n- SSH\n- HDFS and WebHDFS\n\nExample:\n\n```\n$ echo THIS | cat - https://example.com s3://silo-open-data/README -b | grep -i th.s\n     1  THIS\n    40      <p>This domain is for use in illustrative examples in documents. You may use this\n    52  These data are hosted under the AWS Public Data program, courtesy of Amazon Web Services Inc.\n```\n\n# Why?\n\nThe standard [cat](https://en.wikipedia.org/wiki/Cat_%28Unix%29) utility is very useful for writing [command pipelines](https://en.wikipedia.org/wiki/Pipeline_%28Unix%29).\nUnfortunately, it only reads from the local file system.\n\nWe frequently need to access files from a variety of sources.\nThe command syntax to achieve this differs for each source.\nFor example:\n\n```\ncat /some/local/file\naws s3 cp s3://bucket/key.txt -\ncurl https://example.com\nssh host cat /path/to/file\n```\n\nThis is inconvenient.\nWouldn't it be better if you could use a single command to do all these things?\n\nNow you can.\n\n```\nanycat /some/local/file\nanycat s3://bucket/key.txt -\nanycat https://example.com\nanycat host cat /path/to/file\n```\n\n# How?\n\nTo install:\n\n    pip install -U anycat\n\nand `anycat` from your shell.\n\nYou can save yourself some typing and make a bash [alias](http://tldp.org/LDP/abs/html/aliases.html):\n\n    alias cat=anycat\n\nIf you suspect something is broken, you can temporarily revert to the actual `cat` binary by prefixing with a backslash:\n\n    \\cat /path/to/file\n\nor remove the alias completely:\n\n    unalias cat", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mpenkov/anycat", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "anycat", "package_url": "https://pypi.org/project/anycat/", "platform": "", "project_url": "https://pypi.org/project/anycat/", "project_urls": {"Homepage": "https://github.com/mpenkov/anycat"}, "release_url": "https://pypi.org/project/anycat/0.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "UNIX cat with read support for S3, SSH, etc.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>What?</h1>\n<p>A wrapper around the standard <a href=\"https://en.wikipedia.org/wiki/Cat_%28Unix%29\" rel=\"nofollow\">cat</a> utility that can read from:</p>\n<ul>\n<li>HTTP and HTTPS</li>\n<li>S3</li>\n<li>SSH</li>\n<li>HDFS and WebHDFS</li>\n</ul>\n<p>Example:</p>\n<pre><code>$ echo THIS | cat - https://example.com s3://silo-open-data/README -b | grep -i th.s\n     1  THIS\n    40      &lt;p&gt;This domain is for use in illustrative examples in documents. You may use this\n    52  These data are hosted under the AWS Public Data program, courtesy of Amazon Web Services Inc.\n</code></pre>\n<h1>Why?</h1>\n<p>The standard <a href=\"https://en.wikipedia.org/wiki/Cat_%28Unix%29\" rel=\"nofollow\">cat</a> utility is very useful for writing <a href=\"https://en.wikipedia.org/wiki/Pipeline_%28Unix%29\" rel=\"nofollow\">command pipelines</a>.\nUnfortunately, it only reads from the local file system.</p>\n<p>We frequently need to access files from a variety of sources.\nThe command syntax to achieve this differs for each source.\nFor example:</p>\n<pre><code>cat /some/local/file\naws s3 cp s3://bucket/key.txt -\ncurl https://example.com\nssh host cat /path/to/file\n</code></pre>\n<p>This is inconvenient.\nWouldn't it be better if you could use a single command to do all these things?</p>\n<p>Now you can.</p>\n<pre><code>anycat /some/local/file\nanycat s3://bucket/key.txt -\nanycat https://example.com\nanycat host cat /path/to/file\n</code></pre>\n<h1>How?</h1>\n<p>To install:</p>\n<pre><code>pip install -U anycat\n</code></pre>\n<p>and <code>anycat</code> from your shell.</p>\n<p>You can save yourself some typing and make a bash <a href=\"http://tldp.org/LDP/abs/html/aliases.html\" rel=\"nofollow\">alias</a>:</p>\n<pre><code>alias cat=anycat\n</code></pre>\n<p>If you suspect something is broken, you can temporarily revert to the actual <code>cat</code> binary by prefixing with a backslash:</p>\n<pre><code>\\cat /path/to/file\n</code></pre>\n<p>or remove the alias completely:</p>\n<pre><code>unalias cat\n</code></pre>\n\n          </div>"}, "last_serial": 6449413, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "645173ed5a76a4548960bc74034a26dd", "sha256": "fbe7942b1c442e7087a05190f06f0f924b02cde129378641b2326a427218ca58"}, "downloads": -1, "filename": "anycat-0.0.1.tar.gz", "has_sig": false, "md5_digest": "645173ed5a76a4548960bc74034a26dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3661, "upload_time": "2020-01-14T06:44:31", "upload_time_iso_8601": "2020-01-14T06:44:31.178680Z", "url": "https://files.pythonhosted.org/packages/90/86/1cfeb8b8d3ed2212248c3441523fa6b836623e63d3c7a986e5fc1a5a3277/anycat-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "645173ed5a76a4548960bc74034a26dd", "sha256": "fbe7942b1c442e7087a05190f06f0f924b02cde129378641b2326a427218ca58"}, "downloads": -1, "filename": "anycat-0.0.1.tar.gz", "has_sig": false, "md5_digest": "645173ed5a76a4548960bc74034a26dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3661, "upload_time": "2020-01-14T06:44:31", "upload_time_iso_8601": "2020-01-14T06:44:31.178680Z", "url": "https://files.pythonhosted.org/packages/90/86/1cfeb8b8d3ed2212248c3441523fa6b836623e63d3c7a986e5fc1a5a3277/anycat-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:57 2020"}