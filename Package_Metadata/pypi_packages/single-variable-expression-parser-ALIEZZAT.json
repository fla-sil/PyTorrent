{"info": {"author": "ALIEZZAT ODEH", "author_email": "aliezzat1993@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# SingleVariableExpressionParser [![Build Status](https://travis-ci.com/AliEzzatOdeh/SingleVariableExpressionParser.svg?branch=master)](https://travis-ci.com/AliEzzatOdeh/SingleVariableExpressionParser)\n\nPython package for parsing single variable mathmatical expressions.\n\nTable of supported math operations:\n\n| Operation      | Syntax        | # of operands   |\n| -------------  |:-------------:| ---------------:|\n| Addition       |     +         |       2         |\n| Subtraction    |     sub       |       2         |\n| Multiplication |     *         |       2         |\n| Division       |     /         |       2         |\n| L.Parantheses  |     (         |       >=1       |\n| R.Parantheses  |     )         |       >=1       |\n| sin            |     sin       |       1         |\n| cos            |     cos       |       1         |\n| tan            |     tan       |       1         |\n| seq            |     seq       |       1         |\n| csc            |     csc       |       1         |\n| cot            |     cot       |       1         |\n| power          |     ^         |       2         |\n| square root    |     sqr       |       1         |\n| minus          |     -         |       1         |\n\n\n## Install\n\nTo install the package using `pip`:\n\n`pip install single-variable-expression-parser-ALIEZZAT`\n\n## Usage\n\nImport the module as the following:\n\n```\nfrom math_expression_parser.single_variable_parser import SingleVariableParser\n```\nThen it should be used as:\n\n```\nparser = SingleVariableParser()\nparser.set_math_function_text('sqr(16)+1') # For constant expression\nresult = parser.compute_function_at_value(0) # Here input has no effect on result since it is constant\nprint(result) # 5 will be printer \n\nparser = SingleVariableParser()\nparser.set_math_function_text('x*2+x^2+5')\nresult = parser.compute_function_at_value(4) # Value of x will be 4\nprint(result) # 29 will be printed\n```\n\n## Running unit tests\n\nRun `python3 -m unittest discover` to execute the unit tests via `unittest`.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AliEzzatOdeh/SingleVariableExpressionParser", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "single-variable-expression-parser-ALIEZZAT", "package_url": "https://pypi.org/project/single-variable-expression-parser-ALIEZZAT/", "platform": "", "project_url": "https://pypi.org/project/single-variable-expression-parser-ALIEZZAT/", "project_urls": {"Homepage": "https://github.com/AliEzzatOdeh/SingleVariableExpressionParser"}, "release_url": "https://pypi.org/project/single-variable-expression-parser-ALIEZZAT/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package for parsing mathmatical expressions", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SingleVariableExpressionParser <a href=\"https://travis-ci.com/AliEzzatOdeh/SingleVariableExpressionParser\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/191a804b1b32b274ad2bfd6faa5e7b718ed0d788/68747470733a2f2f7472617669732d63692e636f6d2f416c69457a7a61744f6465682f53696e676c655661726961626c6545787072657373696f6e5061727365722e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>Python package for parsing single variable mathmatical expressions.</p>\n<p>Table of supported math operations:</p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th align=\"center\">Syntax</th>\n<th align=\"right\"># of operands</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Addition</td>\n<td align=\"center\">+</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>Subtraction</td>\n<td align=\"center\">sub</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>Multiplication</td>\n<td align=\"center\">*</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>Division</td>\n<td align=\"center\">/</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>L.Parantheses</td>\n<td align=\"center\">(</td>\n<td align=\"right\">&gt;=1</td>\n</tr>\n<tr>\n<td>R.Parantheses</td>\n<td align=\"center\">)</td>\n<td align=\"right\">&gt;=1</td>\n</tr>\n<tr>\n<td>sin</td>\n<td align=\"center\">sin</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>cos</td>\n<td align=\"center\">cos</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>tan</td>\n<td align=\"center\">tan</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>seq</td>\n<td align=\"center\">seq</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>csc</td>\n<td align=\"center\">csc</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>cot</td>\n<td align=\"center\">cot</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>power</td>\n<td align=\"center\">^</td>\n<td align=\"right\">2</td>\n</tr>\n<tr>\n<td>square root</td>\n<td align=\"center\">sqr</td>\n<td align=\"right\">1</td>\n</tr>\n<tr>\n<td>minus</td>\n<td align=\"center\">-</td>\n<td align=\"right\">1</td>\n</tr></tbody></table>\n<h2>Install</h2>\n<p>To install the package using <code>pip</code>:</p>\n<p><code>pip install single-variable-expression-parser-ALIEZZAT</code></p>\n<h2>Usage</h2>\n<p>Import the module as the following:</p>\n<pre><code>from math_expression_parser.single_variable_parser import SingleVariableParser\n</code></pre>\n<p>Then it should be used as:</p>\n<pre><code>parser = SingleVariableParser()\nparser.set_math_function_text('sqr(16)+1') # For constant expression\nresult = parser.compute_function_at_value(0) # Here input has no effect on result since it is constant\nprint(result) # 5 will be printer \n\nparser = SingleVariableParser()\nparser.set_math_function_text('x*2+x^2+5')\nresult = parser.compute_function_at_value(4) # Value of x will be 4\nprint(result) # 29 will be printed\n</code></pre>\n<h2>Running unit tests</h2>\n<p>Run <code>python3 -m unittest discover</code> to execute the unit tests via <code>unittest</code>.</p>\n\n          </div>"}, "last_serial": 6073909, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e3bd08d6edbb1ed4e852c1a352a6ddce", "sha256": "0a1fc4153e2bb83abe93dfa067db6baa24f1b4c0ca9b9e914c04eee535c79ec8"}, "downloads": -1, "filename": "single-variable-expression-parser-ALIEZZAT-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e3bd08d6edbb1ed4e852c1a352a6ddce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4806, "upload_time": "2019-11-04T08:57:44", "upload_time_iso_8601": "2019-11-04T08:57:44.484135Z", "url": "https://files.pythonhosted.org/packages/ea/70/58bcb796efbced96a8dc32c10162771d9ff9854d5659246c1a135d6e2596/single-variable-expression-parser-ALIEZZAT-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fd1de2940885241e0b8237ece1167ea9", "sha256": "e6c846731e2b020add24e0c12fca32bf963e85a58579e56d8539bd41e14a9ce7"}, "downloads": -1, "filename": "single-variable-expression-parser-ALIEZZAT-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fd1de2940885241e0b8237ece1167ea9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4831, "upload_time": "2019-11-04T09:20:39", "upload_time_iso_8601": "2019-11-04T09:20:39.834045Z", "url": "https://files.pythonhosted.org/packages/d1/de/bbb5cf246467afffebc80418ac66867ac15df88dce86c2135c37107ea154/single-variable-expression-parser-ALIEZZAT-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd1de2940885241e0b8237ece1167ea9", "sha256": "e6c846731e2b020add24e0c12fca32bf963e85a58579e56d8539bd41e14a9ce7"}, "downloads": -1, "filename": "single-variable-expression-parser-ALIEZZAT-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fd1de2940885241e0b8237ece1167ea9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4831, "upload_time": "2019-11-04T09:20:39", "upload_time_iso_8601": "2019-11-04T09:20:39.834045Z", "url": "https://files.pythonhosted.org/packages/d1/de/bbb5cf246467afffebc80418ac66867ac15df88dce86c2135c37107ea154/single-variable-expression-parser-ALIEZZAT-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:29 2020"}