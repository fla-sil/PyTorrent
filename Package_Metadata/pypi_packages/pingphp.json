{"info": {"author": "zxylvlp", "author_email": "937141576@qq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Code Generators"], "description": "#PingPHP \n[![Build Status](https://travis-ci.org/zxylvlp/PingPHP.svg?branch=master)](https://travis-ci.org/zxylvlp/PingPHP)\n###A PHP code generator which use Python Like grammar\n\n\n\n##Introduction\n\n- PingPHP essentially is a PHP code generator, similar to CoffeeScript(CS). However there is a big difference between this code and CS. \n- This library is in order to efficiently write Ping code with Python like grammar, and generate the PHP code which is not different from manual code. So it can improve the production efficiency, and the generated code is easy to maintain. \n- The purpose of the CS is to maintain the CS code, with a lot of syntax sugar, it improved the efficiency of the code but loss the readability of the code. \n- For the most of PHPer, such a large number of syntax sugar is very hard to accept. \n- Moreover, when we work with other developers, maintaining the Ping or CS code directly would impede communication.\n\n- Ping is my wife's name. And one of the purposes of writen this library is help PHPer to improve the work efficiency. Help us to spend more time with our family and friends.\n\n##Installation\n\nTo install PingPHP, simply:\n\n`$ sudo pip install redis`\n\nor from source:\n\n`$ sudo python setup.py install`\n\n##Getting Started\n\nGenerate PingPHP.conf.json file.\n\n```\n$ pinginit\n```\n\nThen edit the config file with Wildcard.\n\n```\n{\n    \"ignoreFiles\": [\n        \"test1/*\"\n    ], \n    \"transFiles\": [\n        \"test/**/*.ping\"\n    ], \n    \"destDir\": \"dest\"\n}\n```\n\nGenerate files:\n\n```\n$ pingrun\n```\nGenerate files and observe their changes:\n\n```\n$ pingsee\n```\n\n##CodeSample\n\nInput file: part of typeHinting.ping\n\n```\n''''''\n#\u5982\u4e0b\u9762\u7684\u7c7b\nclass MyClass:\n\n    '''\n     * \u6d4b\u8bd5\u51fd\u6570\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a OtherClass \u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\n    '''\n    public test(otherclass:OtherClass):\n        echo otherclass.var\n    \n\n\n    '''\n     * \u53e6\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6570\u7ec4 \n    ''' \n    public test_array(input_array:array):\n        print_r(input_array)\n    \n\n\n    '''\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u9012\u5f52\u7c7b\u578b\n    '''\n    public test_interface(iterator:Traversable):\n        echo get_class(iterator)\n    \n    \n    '''\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u56de\u8c03\u7c7b\u578b\n    '''\n    public test_callable(callback:callable, data):\n        call_user_func(callback, data)\n    \nmyclass = new MyClass()\n\n```\n\nOutput file: part of typeHinting.php\n\n```\n<?php\n/****/\n//\u5982\u4e0b\u9762\u7684\u7c7b\nclass MyClass { \n    \n    /**\n     * \u6d4b\u8bd5\u51fd\u6570\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a OtherClass \u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\n    **/\n    public function test(OtherClass $otherclass) { \n        echo $otherclass->var; \n    }\n    \n    \n    \n    /**\n     * \u53e6\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6570\u7ec4 \n    **/\n    public function test_array(array $input_array) { \n        print_r($input_array); \n    }\n    \n    \n    \n    /**\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u9012\u5f52\u7c7b\u578b\n    **/\n    public function test_interface(Traversable $iterator) { \n        echo get_class($iterator); \n    }\n    \n    \n    /**\n     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u56de\u8c03\u7c7b\u578b\n    **/\n    public function test_callable(callable $callback, $data) { \n        call_user_func($callback, $data); \n    }\n}\n\n$myclass = new MyClass(); \n```\n\n## Related\n\n* Vim Syntax highlighting plugin: [vim-PingPHP](https://github.com/PingPHP/Vim-PingPHP)\n* Sublime Text Syntax highlighting plugin: (Temporarily not supported)\n\n##Author\n\n* [Weibo http://weibo.com/zxylvlp](http://weibo.com/zxylvlp)\n\n* [Mail 937141576@qq.com](mailto:937141576@qq.com)\n\n##License (MIT)\n\nCopyright (c) 2015 zxylvlp\n\n[MIT](https://github.com/zxylvlp/PingPHP/blob/master/LICENSE)", "description_content_type": null, "docs_url": "https://pythonhosted.org/pingphp/", "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zxylvlp/PingPHP", "keywords": "PHP code generator", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pingphp", "package_url": "https://pypi.org/project/pingphp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pingphp/", "project_urls": {"Homepage": "https://github.com/zxylvlp/PingPHP"}, "release_url": "https://pypi.org/project/pingphp/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A PHP code generator which use Python Like grammar", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            #PingPHP <br>[![Build Status](https://travis-ci.org/zxylvlp/PingPHP.svg?branch=master)](https://travis-ci.org/zxylvlp/PingPHP)<br>###A PHP code generator which use Python Like grammar<br><br><br><br>##Introduction<br><br>- PingPHP essentially is a PHP code generator, similar to CoffeeScript(CS). However there is a big difference between this code and CS. <br>- This library is in order to efficiently write Ping code with Python like grammar, and generate the PHP code which is not different from manual code. So it can improve the production efficiency, and the generated code is easy to maintain. <br>- The purpose of the CS is to maintain the CS code, with a lot of syntax sugar, it improved the efficiency of the code but loss the readability of the code. <br>- For the most of PHPer, such a large number of syntax sugar is very hard to accept. <br>- Moreover, when we work with other developers, maintaining the Ping or CS code directly would impede communication.<br><br>- Ping is my wife's name. And one of the purposes of writen this library is help PHPer to improve the work efficiency. Help us to spend more time with our family and friends.<br><br>##Installation<br><br>To install PingPHP, simply:<br><br>`$ sudo pip install redis`<br><br>or from source:<br><br>`$ sudo python setup.py install`<br><br>##Getting Started<br><br>Generate PingPHP.conf.json file.<br><br>```<br>$ pinginit<br>```<br><br>Then edit the config file with Wildcard.<br><br>```<br>{<br>    \"ignoreFiles\": [<br>        \"test1/*\"<br>    ], <br>    \"transFiles\": [<br>        \"test/**/*.ping\"<br>    ], <br>    \"destDir\": \"dest\"<br>}<br>```<br><br>Generate files:<br><br>```<br>$ pingrun<br>```<br>Generate files and observe their changes:<br><br>```<br>$ pingsee<br>```<br><br>##CodeSample<br><br>Input file: part of typeHinting.ping<br><br>```<br>''''''<br>#\u5982\u4e0b\u9762\u7684\u7c7b<br>class MyClass:<br><br>    '''<br>     * \u6d4b\u8bd5\u51fd\u6570<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a OtherClass \u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61<br>    '''<br>    public test(otherclass:OtherClass):<br>        echo otherclass.var<br>    <br><br><br>    '''<br>     * \u53e6\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6570\u7ec4 <br>    ''' <br>    public test_array(input_array:array):<br>        print_r(input_array)<br>    <br><br><br>    '''<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u9012\u5f52\u7c7b\u578b<br>    '''<br>    public test_interface(iterator:Traversable):<br>        echo get_class(iterator)<br>    <br>    <br>    '''<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u56de\u8c03\u7c7b\u578b<br>    '''<br>    public test_callable(callback:callable, data):<br>        call_user_func(callback, data)<br>    <br>myclass = new MyClass()<br><br>```<br><br>Output file: part of typeHinting.php<br><br>```<br>&lt;?php<br>/****/<br>//\u5982\u4e0b\u9762\u7684\u7c7b<br>class MyClass { <br>    <br>    /**<br>     * \u6d4b\u8bd5\u51fd\u6570<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a OtherClass \u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61<br>    **/<br>    public function test(OtherClass $otherclass) { <br>        echo $otherclass-&gt;var; <br>    }<br>    <br>    <br>    <br>    /**<br>     * \u53e6\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u6570\u7ec4 <br>    **/<br>    public function test_array(array $input_array) { <br>        print_r($input_array); <br>    }<br>    <br>    <br>    <br>    /**<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u9012\u5f52\u7c7b\u578b<br>    **/<br>    public function test_interface(Traversable $iterator) { <br>        echo get_class($iterator); <br>    }<br>    <br>    <br>    /**<br>     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u56de\u8c03\u7c7b\u578b<br>    **/<br>    public function test_callable(callable $callback, $data) { <br>        call_user_func($callback, $data); <br>    }<br>}<br><br>$myclass = new MyClass(); <br>```<br><br>## Related<br><br>* Vim Syntax highlighting plugin: [vim-PingPHP](https://github.com/PingPHP/Vim-PingPHP)<br>* Sublime Text Syntax highlighting plugin: (Temporarily not supported)<br><br>##Author<br><br>* [Weibo http://weibo.com/zxylvlp](http://weibo.com/zxylvlp)<br><br>* [Mail 937141576@qq.com](mailto:937141576@qq.com)<br><br>##License (MIT)<br><br>Copyright (c) 2015 zxylvlp<br><br>[MIT](https://github.com/zxylvlp/PingPHP/blob/master/LICENSE)\n          </div>"}, "last_serial": 1722299, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Fri May  8 02:54:30 2020"}