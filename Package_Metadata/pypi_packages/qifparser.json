{"info": {"author": "Stanislaw Bogatkin, Giacomo Spettoli", "author_email": "sbog@sbog.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "QIF Parser\n============\n\n.. image:: https://travis-ci.org/giacomos/qifparse.png?branch=master   \n    :target: https://travis-ci.org/giacomos/qifparse\n\nqifparse is a parser for Quicken interchange format files (.qif).\n\nEven if the qif format is:\n\n* quite old now\n* not supported for import by Quicken any more,\n* ambiguous in some data management (notably on dates)\n\nit's still quite commonly used by many personal finance managers.\n\n\nUsage\n======\n\nHere's a sample parsing::\n\n   >>> from qifparse.parser import QifParser\n   >>> qif = QifParser.parse(file('file.qif'))\n   >>> qif.get_accounts()\n   (<qifparse.qif.Account object at 0x16148d0>, <qifparse.qif.Account object at 0x1614850>)\n   >>> qif.accounts[0].name\n   'My Cash'\n   >>> qif.get_categories()\n   (<qifparse.qif.Category object at 0x15b3d10>, <qifparse.qif.Category object at 0x15b3450>)\n   >>> qif.accounts[0].get_transactions()\n   (<Transaction units=-6.5>, <Transaction units=-6.0>)\n   >>> str(qif)\n   '!Type:Cat\\nNfood\\nE\\n^\\nNfood:lunch\\nE\\n^\\n!Account\\nNMy Cash\\nTCash\\n^\\n!Type:Cash...\n   ...\n\nHere's a sample of a structure creation::\n\n\n   >>> qif_obj = qif.Qif()\n   >>> acc = qif.Account(name='My Cc', account_type='Bank')\n   >>> qif_obj.add_account(acc)\n   >>> cat = qif.Category(name='food')\n   >>> qif_obj.add_category(cat)\n   >>> tr1 = qif.Transaction(amount=0.55)\n   >>> acc.add_transaction(tr1, header='!Type:Bank')\n\n   >>> tr2 = qif.Transaction()\n   >>> tr2.amount = -6.55\n   >>> tr2.to_account = 'Cash'\n   >>> acc.add_transaction(tr2)\n   >>> acc.add(tr2)\n   >>> str(qif_obj)\n   '!Type:Cat\\nNfood\\nE\\n^\\n!Account\\nNMy Cc\\nTBank\\n^\\n!Type:Bank\\nD02/11/2013\\nT...\n   ...\n\nMore infos\n============\nFor more informations about qif format:\n\n* http://en.wikipedia.org/wiki/Quicken_Interchange_Format\n* http://svn.gnucash.org/trac/browser/gnucash/trunk/src/import-export/qif-import/file-format.txt\n\nChangelog\n===========\n\n0.6 (unreleased)\n----------------\n* fixed typo in account types\n\n0.5 (2013-11-03)\n----------------\n* now transactions can also be outside accounts\n* moved properties to method in order to accept filters\n\n0.4 (2013-11-02)\n----------------\n* address can be multilines\n* split can have the address attribute\n* add support for Classes\n* add support for MemorizedTransaction\n\n0.3 (2013-11-02)\n----------------\n* more refactoring, now the lib is much more simple and engineered\n* improved fields validation\n\n0.2 (2013-11-02)\n----------------\n* huge refactor, now the structure can be create and modified programmatically\n\n0.1 (2013-11-01)\n----------------\n* first release on Pypi", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sorrowless/qifparse.git", "keywords": "qif,Quicken interchange format,file format", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "qifparser", "package_url": "https://pypi.org/project/qifparser/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/qifparser/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sorrowless/qifparse.git"}, "release_url": "https://pypi.org/project/qifparser/0.6/", "requires_dist": null, "requires_python": null, "summary": "a parser for Quicken interchange format files (.qif).", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"qif-parser\">\n<h2>QIF Parser</h2>\n<a href=\"https://travis-ci.org/giacomos/qifparse\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/giacomos/qifparse.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98a21cb2f65bc980621815cbcaa710f9f1ffae3d/68747470733a2f2f7472617669732d63692e6f72672f676961636f6d6f732f71696670617273652e706e673f6272616e63683d6d6173746572\"></a>\n<p>qifparse is a parser for Quicken interchange format files (.qif).</p>\n<p>Even if the qif format is:</p>\n<ul>\n<li>quite old now</li>\n<li>not supported for import by Quicken any more,</li>\n<li>ambiguous in some data management (notably on dates)</li>\n</ul>\n<p>it\u2019s still quite commonly used by many personal finance managers.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Here\u2019s a sample parsing:</p>\n<pre>&gt;&gt;&gt; from qifparse.parser import QifParser\n&gt;&gt;&gt; qif = QifParser.parse(file('file.qif'))\n&gt;&gt;&gt; qif.get_accounts()\n(&lt;qifparse.qif.Account object at 0x16148d0&gt;, &lt;qifparse.qif.Account object at 0x1614850&gt;)\n&gt;&gt;&gt; qif.accounts[0].name\n'My Cash'\n&gt;&gt;&gt; qif.get_categories()\n(&lt;qifparse.qif.Category object at 0x15b3d10&gt;, &lt;qifparse.qif.Category object at 0x15b3450&gt;)\n&gt;&gt;&gt; qif.accounts[0].get_transactions()\n(&lt;Transaction units=-6.5&gt;, &lt;Transaction units=-6.0&gt;)\n&gt;&gt;&gt; str(qif)\n'!Type:Cat\\nNfood\\nE\\n^\\nNfood:lunch\\nE\\n^\\n!Account\\nNMy Cash\\nTCash\\n^\\n!Type:Cash...\n...\n</pre>\n<p>Here\u2019s a sample of a structure creation:</p>\n<pre>&gt;&gt;&gt; qif_obj = qif.Qif()\n&gt;&gt;&gt; acc = qif.Account(name='My Cc', account_type='Bank')\n&gt;&gt;&gt; qif_obj.add_account(acc)\n&gt;&gt;&gt; cat = qif.Category(name='food')\n&gt;&gt;&gt; qif_obj.add_category(cat)\n&gt;&gt;&gt; tr1 = qif.Transaction(amount=0.55)\n&gt;&gt;&gt; acc.add_transaction(tr1, header='!Type:Bank')\n\n&gt;&gt;&gt; tr2 = qif.Transaction()\n&gt;&gt;&gt; tr2.amount = -6.55\n&gt;&gt;&gt; tr2.to_account = 'Cash'\n&gt;&gt;&gt; acc.add_transaction(tr2)\n&gt;&gt;&gt; acc.add(tr2)\n&gt;&gt;&gt; str(qif_obj)\n'!Type:Cat\\nNfood\\nE\\n^\\n!Account\\nNMy Cc\\nTBank\\n^\\n!Type:Bank\\nD02/11/2013\\nT...\n...\n</pre>\n</div>\n<div id=\"more-infos\">\n<h2>More infos</h2>\n<p>For more informations about qif format:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Quicken_Interchange_Format\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Quicken_Interchange_Format</a></li>\n<li><a href=\"http://svn.gnucash.org/trac/browser/gnucash/trunk/src/import-export/qif-import/file-format.txt\" rel=\"nofollow\">http://svn.gnucash.org/trac/browser/gnucash/trunk/src/import-export/qif-import/file-format.txt</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"unreleased\">\n<h3>0.6 (unreleased)</h3>\n<ul>\n<li>fixed typo in account types</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3>0.5 (2013-11-03)</h3>\n<ul>\n<li>now transactions can also be outside accounts</li>\n<li>moved properties to method in order to accept filters</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4 (2013-11-02)</h3>\n<ul>\n<li>address can be multilines</li>\n<li>split can have the address attribute</li>\n<li>add support for Classes</li>\n<li>add support for MemorizedTransaction</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3 (2013-11-02)</h3>\n<ul>\n<li>more refactoring, now the lib is much more simple and engineered</li>\n<li>improved fields validation</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2 (2013-11-02)</h3>\n<ul>\n<li>huge refactor, now the structure can be create and modified programmatically</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1 (2013-11-01)</h3>\n<ul>\n<li>first release on Pypi</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2181518, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "56e0f3744efb7f4330a251cadf7b1461", "sha256": "ea42c49729cf327c8df1be94d363868ecafb6f23914e42001a6bce444f038727"}, "downloads": -1, "filename": "qifparser-0.6.tar.gz", "has_sig": false, "md5_digest": "56e0f3744efb7f4330a251cadf7b1461", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9281, "upload_time": "2016-06-22T15:52:39", "upload_time_iso_8601": "2016-06-22T15:52:39.625441Z", "url": "https://files.pythonhosted.org/packages/84/81/ba95f7ba9be66ef372c24896f80a2bae4ab1359e0ca81d6bdb2c042777e9/qifparser-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56e0f3744efb7f4330a251cadf7b1461", "sha256": "ea42c49729cf327c8df1be94d363868ecafb6f23914e42001a6bce444f038727"}, "downloads": -1, "filename": "qifparser-0.6.tar.gz", "has_sig": false, "md5_digest": "56e0f3744efb7f4330a251cadf7b1461", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9281, "upload_time": "2016-06-22T15:52:39", "upload_time_iso_8601": "2016-06-22T15:52:39.625441Z", "url": "https://files.pythonhosted.org/packages/84/81/ba95f7ba9be66ef372c24896f80a2bae4ab1359e0ca81d6bdb2c042777e9/qifparser-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:37 2020"}