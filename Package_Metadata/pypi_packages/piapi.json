{"info": {"author": "maximumG", "author_email": "mgerges@stubbynet.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "piapi module stands for (Cisco) Prime Infrastructure API.\nThe module implements the PIAPI class which helps interacting with the Cisco Prime Infrastructure REST API using\nsimple methods that can either request data or request an action.\n\nThe Cisco Prime Infrastructure API is a REST API which exposes several resources that can be of 2 types:\n    * Data resources: expose some data collected by the software which can be retrieved (e.g: client summary).\n    * Service resources: expose some service that can modify the configuration of the software (e.g: modify/update an Access Point)\n\nThe REST API is applying request rate limiting to avoid server's overloading. To bypass this limitation, especially\nwhen requesting data resources, the PIAPI uses multithreading requests (grequests library) with an hold time between\nchunk of requests. Please check the documentation to knowns more about rate limiting.\n\nAlso note that the piapi module only works with the JSON structure exposed by the REST API. The module doesn't support\nthe default XML structure.\n\nPlease check your Cisco Prime REST API available at https://{server-name}/webacs/api/v1/", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/maximumG/piapi/tarball/0.1.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maximumG/piapi", "keywords": "Cisco,Prime,API,REST,request", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "piapi", "package_url": "https://pypi.org/project/piapi/", "platform": "any", "project_url": "https://pypi.org/project/piapi/", "project_urls": {"Download": "https://github.com/maximumG/piapi/tarball/0.1.3", "Homepage": "https://github.com/maximumG/piapi"}, "release_url": "https://pypi.org/project/piapi/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Cisco Prime Infrastructure REST API for python", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>piapi module stands for (Cisco) Prime Infrastructure API.\nThe module implements the PIAPI class which helps interacting with the Cisco Prime Infrastructure REST API using\nsimple methods that can either request data or request an action.</p>\n<dl>\n<dt>The Cisco Prime Infrastructure API is a REST API which exposes several resources that can be of 2 types:</dt>\n<dd><ul>\n<li>Data resources: expose some data collected by the software which can be retrieved (e.g: client summary).</li>\n<li>Service resources: expose some service that can modify the configuration of the software (e.g: modify/update an Access Point)</li>\n</ul>\n</dd>\n</dl>\n<p>The REST API is applying request rate limiting to avoid server\u2019s overloading. To bypass this limitation, especially\nwhen requesting data resources, the PIAPI uses multithreading requests (grequests library) with an hold time between\nchunk of requests. Please check the documentation to knowns more about rate limiting.</p>\n<p>Also note that the piapi module only works with the JSON structure exposed by the REST API. The module doesn\u2019t support\nthe default XML structure.</p>\n<p>Please check your Cisco Prime REST API available at <a href=\"https:/\" rel=\"nofollow\">https:/</a>/{server-name}/webacs/api/v1/</p>\n\n          </div>"}, "last_serial": 1843806, "releases": {"0.1.3": []}, "urls": [], "timestamp": "Fri May  8 02:55:09 2020"}