{"info": {"author": "Yezy Ilomo", "author_email": "yezileliilomo@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# drf-guard\n\nFlexible and simple to use permissions for Django REST Framework(DRF). Works with both class based DRF permissions, Django permissions and Django groups.\n\n## Requirements\n- Python >= 3.5\n- Django >= 1.11\n- Django REST Framework >= 3.5\n\n## Installing\n```py\npip install drf-guard\n```\n\n## Getting started\nUsing `drf-guard` is very simple, below is an example\n```py\n# views.py\n\n# Import operators & permissions from drf_guard\nfrom drf_guard.operators import And, Or, Not\nfrom drf_guard.permissions import HasRequiredGroups, HasRequiredPermissions\n\n\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n\n    # Use drf_guard permissions here\n    permission_classes = (HasRequiredGroups, HasRequiredPermissions)\n\n    # Now guard your API with groups and permissions as you wish\n    groups_and_permissions = {\n         'GET': {\n             'list': {\n                 # To access this the user must belongs to admin or client group\n                 'groups': ['admin', Or, 'client'],\n                 'permissions': [IsAuthenticated]  # Also the user must be authenticated\n             },\n             'retrieve': {\n                 'groups': [Not, 'admin'],  # The user must not be in admin group\n                 'permissions': [IsAuthenticated, And, IsAllowedUser]  # MUst be authenticated and allowed\n             },\n         },\n\n         'PUT': {\n             'groups': ['__all__'],  # Belongs to any group\n             'permissions': [IsAuthenticated, And, IsAdmin]  # By now this should be obvious\n         },\n\n         'PATCH': {\n             'groups': ['client', And, Not, 'admin'],  # User belongs to client and not admin group\n             'permissions': [IsAuthenticated, IsAllowedUser]  # This is = [IsAuthenticated, And, IsAllowedUser]\n         },\n\n         'DELETE': {\n             'groups': ['client', Or, [Not, 'client', And, 'admin']],  # You can basically do any combination\n             'permissions': [IsAuthenticated]\n         }\n    }\n```\n\nWhat's important here is to know what goes into groups and permissions\n- Groups takes group names and Django group objects, so you can use those operators however you want with these two, you can even mix the two types together, e.g\n```py\n'groups': [Group.objects.get(name='admin'), Or, 'client']\n```\n\n- Permissions takes DRF permissions(class based), Django permission objects and Django permission names(codenames), so you can use those operators however you want with these three, you can even use all three types together, e.g\n```py\n'permissions': [IsAuthenticated, And, Permissions.objects.get('view_user'), Or, 'change_user']\n```\n\n### Note:\n- `And`, `Or` & `Not` are the equvalent operators for `and`, `or` & `not` respectively \n- Unlike `and`, `or` & `not` the operators `And`, `Or` & `Not` have no precedence they are evaluated from left to right, if you want precedence use list or tuple to make one i.e `[IsAuthenticated, And, [IsAdmin, Or, IsClient]]`\n- The `'__all__'` on groups stands for any group(or allow all groups)\n- The GET-list stands for permission & groups in `GET: /users/` route\n- The GET-retrieve stands for groups & permissions in `GET: /users/{id}/` routes\n- The POST stands for groups & permissions in `POST: /users/` route\n- The PUT stands for groups & permissions in `PUT: /users/{id}/` routes\n- The PATCH stands for groups & permissions in `PATCH: /users/{id}/` routes\n- The DELETE stands for groups & permissions in `DELETE: /users/{id}/` routes\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yezyilomo/drf-guard", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drf-guard", "package_url": "https://pypi.org/project/drf-guard/", "platform": "", "project_url": "https://pypi.org/project/drf-guard/", "project_urls": {"Homepage": "https://github.com/yezyilomo/drf-guard"}, "release_url": "https://pypi.org/project/drf-guard/0.1.2/", "requires_dist": ["django (>=1.11)", "djangorestframework (>=3.5)"], "requires_python": ">=3.5", "summary": "Flexible permissions for Django REST Framework", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>drf-guard</h1>\n<p>Flexible and simple to use permissions for Django REST Framework(DRF). Works with both class based DRF permissions, Django permissions and Django groups.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 3.5</li>\n<li>Django &gt;= 1.11</li>\n<li>Django REST Framework &gt;= 3.5</li>\n</ul>\n<h2>Installing</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">drf</span><span class=\"o\">-</span><span class=\"n\">guard</span>\n</pre>\n<h2>Getting started</h2>\n<p>Using <code>drf-guard</code> is very simple, below is an example</p>\n<pre><span class=\"c1\"># views.py</span>\n\n<span class=\"c1\"># Import operators &amp; permissions from drf_guard</span>\n<span class=\"kn\">from</span> <span class=\"nn\">drf_guard.operators</span> <span class=\"kn\">import</span> <span class=\"n\">And</span><span class=\"p\">,</span> <span class=\"n\">Or</span><span class=\"p\">,</span> <span class=\"n\">Not</span>\n<span class=\"kn\">from</span> <span class=\"nn\">drf_guard.permissions</span> <span class=\"kn\">import</span> <span class=\"n\">HasRequiredGroups</span><span class=\"p\">,</span> <span class=\"n\">HasRequiredPermissions</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserViewSet</span><span class=\"p\">(</span><span class=\"n\">viewsets</span><span class=\"o\">.</span><span class=\"n\">ModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">UserSerializer</span>\n\n    <span class=\"c1\"># Use drf_guard permissions here</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">HasRequiredGroups</span><span class=\"p\">,</span> <span class=\"n\">HasRequiredPermissions</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Now guard your API with groups and permissions as you wish</span>\n    <span class=\"n\">groups_and_permissions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n         <span class=\"s1\">'GET'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s1\">'list'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                 <span class=\"c1\"># To access this the user must belongs to admin or client group</span>\n                 <span class=\"s1\">'groups'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span> <span class=\"n\">Or</span><span class=\"p\">,</span> <span class=\"s1\">'client'</span><span class=\"p\">],</span>\n                 <span class=\"s1\">'permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">IsAuthenticated</span><span class=\"p\">]</span>  <span class=\"c1\"># Also the user must be authenticated</span>\n             <span class=\"p\">},</span>\n             <span class=\"s1\">'retrieve'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                 <span class=\"s1\">'groups'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Not</span><span class=\"p\">,</span> <span class=\"s1\">'admin'</span><span class=\"p\">],</span>  <span class=\"c1\"># The user must not be in admin group</span>\n                 <span class=\"s1\">'permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">IsAuthenticated</span><span class=\"p\">,</span> <span class=\"n\">And</span><span class=\"p\">,</span> <span class=\"n\">IsAllowedUser</span><span class=\"p\">]</span>  <span class=\"c1\"># MUst be authenticated and allowed</span>\n             <span class=\"p\">},</span>\n         <span class=\"p\">},</span>\n\n         <span class=\"s1\">'PUT'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s1\">'groups'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'__all__'</span><span class=\"p\">],</span>  <span class=\"c1\"># Belongs to any group</span>\n             <span class=\"s1\">'permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">IsAuthenticated</span><span class=\"p\">,</span> <span class=\"n\">And</span><span class=\"p\">,</span> <span class=\"n\">IsAdmin</span><span class=\"p\">]</span>  <span class=\"c1\"># By now this should be obvious</span>\n         <span class=\"p\">},</span>\n\n         <span class=\"s1\">'PATCH'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s1\">'groups'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'client'</span><span class=\"p\">,</span> <span class=\"n\">And</span><span class=\"p\">,</span> <span class=\"n\">Not</span><span class=\"p\">,</span> <span class=\"s1\">'admin'</span><span class=\"p\">],</span>  <span class=\"c1\"># User belongs to client and not admin group</span>\n             <span class=\"s1\">'permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">IsAuthenticated</span><span class=\"p\">,</span> <span class=\"n\">IsAllowedUser</span><span class=\"p\">]</span>  <span class=\"c1\"># This is = [IsAuthenticated, And, IsAllowedUser]</span>\n         <span class=\"p\">},</span>\n\n         <span class=\"s1\">'DELETE'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s1\">'groups'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'client'</span><span class=\"p\">,</span> <span class=\"n\">Or</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Not</span><span class=\"p\">,</span> <span class=\"s1\">'client'</span><span class=\"p\">,</span> <span class=\"n\">And</span><span class=\"p\">,</span> <span class=\"s1\">'admin'</span><span class=\"p\">]],</span>  <span class=\"c1\"># You can basically do any combination</span>\n             <span class=\"s1\">'permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">IsAuthenticated</span><span class=\"p\">]</span>\n         <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>What's important here is to know what goes into groups and permissions</p>\n<ul>\n<li>Groups takes group names and Django group objects, so you can use those operators however you want with these two, you can even mix the two types together, e.g</li>\n</ul>\n<pre><span class=\"s1\">'groups'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Group</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">),</span> <span class=\"n\">Or</span><span class=\"p\">,</span> <span class=\"s1\">'client'</span><span class=\"p\">]</span>\n</pre>\n<ul>\n<li>Permissions takes DRF permissions(class based), Django permission objects and Django permission names(codenames), so you can use those operators however you want with these three, you can even use all three types together, e.g</li>\n</ul>\n<pre><span class=\"s1\">'permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">IsAuthenticated</span><span class=\"p\">,</span> <span class=\"n\">And</span><span class=\"p\">,</span> <span class=\"n\">Permissions</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'view_user'</span><span class=\"p\">),</span> <span class=\"n\">Or</span><span class=\"p\">,</span> <span class=\"s1\">'change_user'</span><span class=\"p\">]</span>\n</pre>\n<h3>Note:</h3>\n<ul>\n<li><code>And</code>, <code>Or</code> &amp; <code>Not</code> are the equvalent operators for <code>and</code>, <code>or</code> &amp; <code>not</code> respectively</li>\n<li>Unlike <code>and</code>, <code>or</code> &amp; <code>not</code> the operators <code>And</code>, <code>Or</code> &amp; <code>Not</code> have no precedence they are evaluated from left to right, if you want precedence use list or tuple to make one i.e <code>[IsAuthenticated, And, [IsAdmin, Or, IsClient]]</code></li>\n<li>The <code>'__all__'</code> on groups stands for any group(or allow all groups)</li>\n<li>The GET-list stands for permission &amp; groups in <code>GET: /users/</code> route</li>\n<li>The GET-retrieve stands for groups &amp; permissions in <code>GET: /users/{id}/</code> routes</li>\n<li>The POST stands for groups &amp; permissions in <code>POST: /users/</code> route</li>\n<li>The PUT stands for groups &amp; permissions in <code>PUT: /users/{id}/</code> routes</li>\n<li>The PATCH stands for groups &amp; permissions in <code>PATCH: /users/{id}/</code> routes</li>\n<li>The DELETE stands for groups &amp; permissions in <code>DELETE: /users/{id}/</code> routes</li>\n</ul>\n\n          </div>"}, "last_serial": 6991489, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fcb32dcfd312c169eb9e2f54ac2d4194", "sha256": "5043961cf3123c88e1c4a8425aebc30528002d9faa7d83521372809a11e5c51a"}, "downloads": -1, "filename": "drf_guard-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fcb32dcfd312c169eb9e2f54ac2d4194", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4408, "upload_time": "2020-04-03T22:23:46", "upload_time_iso_8601": "2020-04-03T22:23:46.877023Z", "url": "https://files.pythonhosted.org/packages/4f/3f/c34b1738ec8c788d2f2adbb5e666ca5ea024b0e4b618494dedc577e55a19/drf_guard-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "112bf1d04b48d85ba3dcab621111bce7", "sha256": "959696ba207eb7e871184f79eb00f0587e23f272cb18db09e474b9285fdf1dce"}, "downloads": -1, "filename": "drf-guard-0.1.0.tar.gz", "has_sig": false, "md5_digest": "112bf1d04b48d85ba3dcab621111bce7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4242, "upload_time": "2020-04-03T22:23:49", "upload_time_iso_8601": "2020-04-03T22:23:49.332698Z", "url": "https://files.pythonhosted.org/packages/4f/f2/42b1c8e957f992384e1857f4d499aae46d900dd78dfb2206a636f43a0ab5/drf-guard-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "09cb1bfdd22b932c9867d8656e1f6dd9", "sha256": "2b1128192dc009b7d82cb4e0f18dfd6b0509e7c1e838a0263a435fdf08773fce"}, "downloads": -1, "filename": "drf_guard-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "09cb1bfdd22b932c9867d8656e1f6dd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8337, "upload_time": "2020-04-05T02:27:43", "upload_time_iso_8601": "2020-04-05T02:27:43.403983Z", "url": "https://files.pythonhosted.org/packages/87/35/e926c90d1634a937c6e5b2b59e1b39f148c3c81b01c36e05375dc014ec34/drf_guard-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb32ed3f892fe580365385343f6a241d", "sha256": "c0d2962aa3779b371262c2ca66f089ae2fe233e55db8406aa391a94302c90b8f"}, "downloads": -1, "filename": "drf-guard-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fb32ed3f892fe580365385343f6a241d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6306, "upload_time": "2020-04-05T02:27:45", "upload_time_iso_8601": "2020-04-05T02:27:45.274593Z", "url": "https://files.pythonhosted.org/packages/6a/0b/6e2e7c9b9fc942983fc435cf06a06fcbff9c7b09ab94680d01efed09e964/drf-guard-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "22697044a2b28fdc90a852a6a94b9dc9", "sha256": "681b2f9d98cdad7a6462c0009ab0df72f99e7501af0bf1c53f1af6f2922cfb88"}, "downloads": -1, "filename": "drf_guard-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "22697044a2b28fdc90a852a6a94b9dc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8430, "upload_time": "2020-04-10T07:47:17", "upload_time_iso_8601": "2020-04-10T07:47:17.859742Z", "url": "https://files.pythonhosted.org/packages/bd/9b/248062d4b0ac14d7a5e9d415ae1bfa1561464664c9025b63ae2ef0180f5e/drf_guard-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ef88b102375caf449976789c18ff037", "sha256": "fd715c7c19cf79291b074df8e6232c4caabdb13d2b8e255798da4c783e60203a"}, "downloads": -1, "filename": "drf-guard-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4ef88b102375caf449976789c18ff037", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6407, "upload_time": "2020-04-10T07:47:20", "upload_time_iso_8601": "2020-04-10T07:47:20.565289Z", "url": "https://files.pythonhosted.org/packages/d5/70/e2d3ff68155b88eb2976341234f7b713110799d5bd98cb7fcffa17cca142/drf-guard-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "22697044a2b28fdc90a852a6a94b9dc9", "sha256": "681b2f9d98cdad7a6462c0009ab0df72f99e7501af0bf1c53f1af6f2922cfb88"}, "downloads": -1, "filename": "drf_guard-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "22697044a2b28fdc90a852a6a94b9dc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8430, "upload_time": "2020-04-10T07:47:17", "upload_time_iso_8601": "2020-04-10T07:47:17.859742Z", "url": "https://files.pythonhosted.org/packages/bd/9b/248062d4b0ac14d7a5e9d415ae1bfa1561464664c9025b63ae2ef0180f5e/drf_guard-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ef88b102375caf449976789c18ff037", "sha256": "fd715c7c19cf79291b074df8e6232c4caabdb13d2b8e255798da4c783e60203a"}, "downloads": -1, "filename": "drf-guard-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4ef88b102375caf449976789c18ff037", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6407, "upload_time": "2020-04-10T07:47:20", "upload_time_iso_8601": "2020-04-10T07:47:20.565289Z", "url": "https://files.pythonhosted.org/packages/d5/70/e2d3ff68155b88eb2976341234f7b713110799d5bd98cb7fcffa17cca142/drf-guard-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:45 2020"}