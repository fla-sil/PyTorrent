{"info": {"author": "pyLHC", "author_email": "pylhc@github.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Generic Parser\n[![Travis (.com)](https://img.shields.io/travis/com/pylhc/generic_parser.svg?style=popout)](https://travis-ci.com/pylhc/generic_parser/)\n[![Code Climate coverage](https://img.shields.io/codeclimate/coverage/pylhc/generic_parser.svg?style=popout)](https://codeclimate.com/github/pylhc/generic_parser)\n[![Code Climate maintainability (percentage)](https://img.shields.io/codeclimate/maintainability-percentage/pylhc/generic_parser.svg?style=popout)](https://codeclimate.com/github/pylhc/generic_parser)\n[![GitHub last commit](https://img.shields.io/github/last-commit/pylhc/generic_parser.svg?style=popout)](https://github.com/pylhc/generic_parser/)\n[![GitHub release](https://img.shields.io/github/release/pylhc/generic_parser.svg?style=popout)](https://github.com/pylhc/generic_parser/)\n\nA parser for arguments and config-files that also allows direct python input.\n\n## Getting Started\n\n### Installing\n\nInstallation is easily done via `pip`. The package is then used as `generic_parser`.\n\n```\npip install generic-parser\n```\n\n### Example Usage:\n\nContent of `myscript.py`\n```python\nfrom generic_parser import entrypoint, EntryPointParameters\n\n\ndef get_arguments():\n    args = EntryPointParameters()\n    args.add_parameter(name=\"first\",\n                       flags=[\"-f\", \"--first\"],\n                       help=\"First Parameter, an int\",\n                       choices=[1, 2, 3],\n                       type=int,\n                       required=True,\n                       )\n    args.add_parameter(name=\"second\",\n                       flags=[\"-s\", \"--second\"],\n                       help=\"Second Parameter, a string\",\n                       type=str,\n                       default=\"default\",\n                       required=False,\n                       )\n    return args\n\n\n@entrypoint(get_arguments())\ndef main(opt, unknown):\n    print(opt.first == 1)\n    print(opt.second == \"default\")\n\n\nif __name__ == '__main__':\n    main()\n```\n\n#### Commandline\nCalling that script with ``python myscript.py -f 1 -s \"test\"`` will result in \n```\nTrue\nFalse\n```\n\nIt is assumed, that this is the standard mode of operation for your functions.\n\n#### Config File\nFurther, one can also use a config file `config.ini` containing:\n```\n[Section]\nfirst = 2\nsecond = \"Hello\"\n```\nand run the script with `python myscript.py --entry_cfg config.ini` leading to\n```\nFalse\nFalse\n```\n\nConfig files are very useful if you want to rerun your code with the same or similar parameters.\nEspecially the declaration of a `[DEFAULT]` section can be helpful.\nFor further information about config files, check the python\n[Config Parser](https://docs.python.org/3/library/configparser.html).\n\n\n#### Python\nOr call the function directly from python code\n\n```python\nif __name__ == '__main__':\n    main(first=1, second=\"World\")   \n```\n\n```\nTrue\nFalse\n```\n\nThis is incredibly helpful if one wants to write python-wrappers around entrypoint-functions, \nand does not want to resort to commandline calls from python.\n\nNote that also in this case all variables are validated, courtesy of the `dict_parser`.\n`dict_parser` provides even multi-level dictionary checking functionality, \nwhich is not used in the `Entrypoint`, but can be handy in other use-cases.\n\n## Description\n\nThe package provides an all-around parser for arguments and config-files.\nThe creation of the arguments is similar to the ones from argparse, but the input\ncan then be either from command line, a config file or directly from python.\n\nFor a detailed description check [the documentation](https://pylhc.github.io/generic_parser).\n\n\n## Authors\n\n* **Josch** - [JoschD](https://github.com/JoschD)\n* **pyLHC/OMC-Team** - *Working Group* - [pyLHC](https://github.com/orgs/pylhc/teams/omc-team)\n\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pylhc/generic_parser", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "generic-parser", "package_url": "https://pypi.org/project/generic-parser/", "platform": "", "project_url": "https://pypi.org/project/generic-parser/", "project_urls": {"Homepage": "https://github.com/pylhc/generic_parser"}, "release_url": "https://pypi.org/project/generic-parser/1.0.6/", "requires_dist": ["sphinx ; extra == 'doc'", "travis-sphinx ; extra == 'doc'", "sphinx-rtd-theme ; extra == 'doc'"], "requires_python": "", "summary": "A parser for arguments and config-files that also allows direct python input.", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Generic Parser</h1>\n<p><a href=\"https://travis-ci.com/pylhc/generic_parser/\" rel=\"nofollow\"><img alt=\"Travis (.com)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f648cdc94ea6836ac15171b6890ce23839454212/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f70796c68632f67656e657269635f7061727365722e7376673f7374796c653d706f706f7574\"></a>\n<a href=\"https://codeclimate.com/github/pylhc/generic_parser\" rel=\"nofollow\"><img alt=\"Code Climate coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9df80ec5147258cfd86c70eb9c91d3cd1d95bbef/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f636f7665726167652f70796c68632f67656e657269635f7061727365722e7376673f7374796c653d706f706f7574\"></a>\n<a href=\"https://codeclimate.com/github/pylhc/generic_parser\" rel=\"nofollow\"><img alt=\"Code Climate maintainability (percentage)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c7606614498995ad3fe1f6f6bee3c16ff50f59f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f6d61696e7461696e6162696c6974792d70657263656e746167652f70796c68632f67656e657269635f7061727365722e7376673f7374796c653d706f706f7574\"></a>\n<a href=\"https://github.com/pylhc/generic_parser/\" rel=\"nofollow\"><img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91be26befa064dcaefb30c53e824307a160978b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f70796c68632f67656e657269635f7061727365722e7376673f7374796c653d706f706f7574\"></a>\n<a href=\"https://github.com/pylhc/generic_parser/\" rel=\"nofollow\"><img alt=\"GitHub release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81f8aac76db416d6907531811a4fe911d254db9c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f70796c68632f67656e657269635f7061727365722e7376673f7374796c653d706f706f7574\"></a></p>\n<p>A parser for arguments and config-files that also allows direct python input.</p>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<p>Installation is easily done via <code>pip</code>. The package is then used as <code>generic_parser</code>.</p>\n<pre><code>pip install generic-parser\n</code></pre>\n<h3>Example Usage:</h3>\n<p>Content of <code>myscript.py</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">generic_parser</span> <span class=\"kn\">import</span> <span class=\"n\">entrypoint</span><span class=\"p\">,</span> <span class=\"n\">EntryPointParameters</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_arguments</span><span class=\"p\">():</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">EntryPointParameters</span><span class=\"p\">()</span>\n    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">add_parameter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"first\"</span><span class=\"p\">,</span>\n                       <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"-f\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--first\"</span><span class=\"p\">],</span>\n                       <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"First Parameter, an int\"</span><span class=\"p\">,</span>\n                       <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n                       <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span>\n                       <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                       <span class=\"p\">)</span>\n    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">add_parameter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"second\"</span><span class=\"p\">,</span>\n                       <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"-s\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--second\"</span><span class=\"p\">],</span>\n                       <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"Second Parameter, a string\"</span><span class=\"p\">,</span>\n                       <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span>\n                       <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">\"default\"</span><span class=\"p\">,</span>\n                       <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                       <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">args</span>\n\n\n<span class=\"nd\">@entrypoint</span><span class=\"p\">(</span><span class=\"n\">get_arguments</span><span class=\"p\">())</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">opt</span><span class=\"p\">,</span> <span class=\"n\">unknown</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">first</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">second</span> <span class=\"o\">==</span> <span class=\"s2\">\"default\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h4>Commandline</h4>\n<p>Calling that script with <code>python myscript.py -f 1 -s \"test\"</code> will result in</p>\n<pre><code>True\nFalse\n</code></pre>\n<p>It is assumed, that this is the standard mode of operation for your functions.</p>\n<h4>Config File</h4>\n<p>Further, one can also use a config file <code>config.ini</code> containing:</p>\n<pre><code>[Section]\nfirst = 2\nsecond = \"Hello\"\n</code></pre>\n<p>and run the script with <code>python myscript.py --entry_cfg config.ini</code> leading to</p>\n<pre><code>False\nFalse\n</code></pre>\n<p>Config files are very useful if you want to rerun your code with the same or similar parameters.\nEspecially the declaration of a <code>[DEFAULT]</code> section can be helpful.\nFor further information about config files, check the python\n<a href=\"https://docs.python.org/3/library/configparser.html\" rel=\"nofollow\">Config Parser</a>.</p>\n<h4>Python</h4>\n<p>Or call the function directly from python code</p>\n<pre><span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">first</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"s2\">\"World\"</span><span class=\"p\">)</span>   \n</pre>\n<pre><code>True\nFalse\n</code></pre>\n<p>This is incredibly helpful if one wants to write python-wrappers around entrypoint-functions,\nand does not want to resort to commandline calls from python.</p>\n<p>Note that also in this case all variables are validated, courtesy of the <code>dict_parser</code>.\n<code>dict_parser</code> provides even multi-level dictionary checking functionality,\nwhich is not used in the <code>Entrypoint</code>, but can be handy in other use-cases.</p>\n<h2>Description</h2>\n<p>The package provides an all-around parser for arguments and config-files.\nThe creation of the arguments is similar to the ones from argparse, but the input\ncan then be either from command line, a config file or directly from python.</p>\n<p>For a detailed description check <a href=\"https://pylhc.github.io/generic_parser\" rel=\"nofollow\">the documentation</a>.</p>\n<h2>Authors</h2>\n<ul>\n<li><strong>Josch</strong> - <a href=\"https://github.com/JoschD\" rel=\"nofollow\">JoschD</a></li>\n<li><strong>pyLHC/OMC-Team</strong> - <em>Working Group</em> - <a href=\"https://github.com/orgs/pylhc/teams/omc-team\" rel=\"nofollow\">pyLHC</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n\n          </div>"}, "last_serial": 6208642, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "771b2d95cd18f0a658996abb7f90fbf4", "sha256": "adefbce258d6b1753db7d582f7aa6b6951b46d3656d35483be0fb0c7a9fd7a9f"}, "downloads": -1, "filename": "generic_parser-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "771b2d95cd18f0a658996abb7f90fbf4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17601, "upload_time": "2019-08-08T14:25:49", "upload_time_iso_8601": "2019-08-08T14:25:49.520988Z", "url": "https://files.pythonhosted.org/packages/61/5b/f84b7fde3f904bed34c25a6756e2e8bf79377fc7ca3240afde107a5714b2/generic_parser-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff0c2fbd2af1bb944647aa9866a99122", "sha256": "0755ee43911bdb1d0e5d2815363cca6a073d33868e8fed22cc7eeed8b0a0e462"}, "downloads": -1, "filename": "generic-parser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ff0c2fbd2af1bb944647aa9866a99122", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16447, "upload_time": "2019-08-08T14:25:51", "upload_time_iso_8601": "2019-08-08T14:25:51.870979Z", "url": "https://files.pythonhosted.org/packages/c6/51/469bce8091d4eb236f0ebd025fc4496b01e63d29df56b631febf2a5e4059/generic-parser-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f974dc06494fe379e92f63d1b9416d77", "sha256": "bcb28d83929501669591dedced7adaa5e6de4a4380223f4e136d3be72b0bafb6"}, "downloads": -1, "filename": "generic_parser-1.0.1-py3.7.egg", "has_sig": false, "md5_digest": "f974dc06494fe379e92f63d1b9416d77", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 36870, "upload_time": "2019-08-08T15:09:49", "upload_time_iso_8601": "2019-08-08T15:09:49.742892Z", "url": "https://files.pythonhosted.org/packages/79/27/55cbfc3248ee701731777368cb59b4562514baebfc23619311523a73e4e1/generic_parser-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5ff00f470c5e3e06872eeb99e827ddc", "sha256": "8250faaad723fd28177b5d3cb73f9222ecee4eeabaa9c6ca2d1da540858fd4af"}, "downloads": -1, "filename": "generic_parser-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5ff00f470c5e3e06872eeb99e827ddc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17608, "upload_time": "2019-08-08T14:33:31", "upload_time_iso_8601": "2019-08-08T14:33:31.947251Z", "url": "https://files.pythonhosted.org/packages/92/7f/849c636039e867814325b15028d8fead2104d5e4049b756f7db4b14485ec/generic_parser-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecbdb00f57b4d4d1af8f9b62d77163ae", "sha256": "1b958e4b707080a2a7f6bbfbd54e2cddc7c51b8874145052ff6cd92e91718a12"}, "downloads": -1, "filename": "generic-parser-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ecbdb00f57b4d4d1af8f9b62d77163ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16455, "upload_time": "2019-08-08T14:33:33", "upload_time_iso_8601": "2019-08-08T14:33:33.951865Z", "url": "https://files.pythonhosted.org/packages/a8/89/6c52870aa0c5465872e43e931a6c2179ea6ea9a86d703489a3cccd6e8df5/generic-parser-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "794a7c20089b0ad6d095aa610ec79dac", "sha256": "04b52a6227efb050f7a168f0d77881d48a60041e73a3ecb14da24b81b8354464"}, "downloads": -1, "filename": "generic_parser-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "794a7c20089b0ad6d095aa610ec79dac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17620, "upload_time": "2019-08-08T15:09:47", "upload_time_iso_8601": "2019-08-08T15:09:47.642152Z", "url": "https://files.pythonhosted.org/packages/9e/75/a18bd8a71b7e931fe0ce3a48a9781a79526636c694f8b3af70dc1abb7368/generic_parser-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba8d56326d31206738ad6d5245a3c16c", "sha256": "99dae6220eea83cd8cff7e84d8d3e95415a2db634f3ebff96d6755da512ce5bb"}, "downloads": -1, "filename": "generic-parser-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ba8d56326d31206738ad6d5245a3c16c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16470, "upload_time": "2019-08-08T15:09:51", "upload_time_iso_8601": "2019-08-08T15:09:51.758246Z", "url": "https://files.pythonhosted.org/packages/65/65/1c77b113a4192930e0dbe4238b3b8e4cea78c5b7767ea19b27940a0a9d1d/generic-parser-1.0.2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "a6b014ebcb67a64737585734ec33d112", "sha256": "0d39b70781965fece1f39cf430a494c3deaa69fe773fe9d7128017cee343a01c"}, "downloads": -1, "filename": "generic_parser-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a6b014ebcb67a64737585734ec33d112", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17682, "upload_time": "2019-10-11T15:35:39", "upload_time_iso_8601": "2019-10-11T15:35:39.691800Z", "url": "https://files.pythonhosted.org/packages/97/4b/0ecab3daa0307d4f93636bb29ff124f0e469ec420ea5868899fc02435db9/generic_parser-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd18c583c2f2f12c1e0a4563a26f51e9", "sha256": "49740f03cccf88cecc16a9add22e2f8c7c81bbd8d67b154f715b0139bc723950"}, "downloads": -1, "filename": "generic-parser-1.0.4.tar.gz", "has_sig": false, "md5_digest": "fd18c583c2f2f12c1e0a4563a26f51e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16592, "upload_time": "2019-10-11T15:35:41", "upload_time_iso_8601": "2019-10-11T15:35:41.299396Z", "url": "https://files.pythonhosted.org/packages/b5/27/748c9a5606258e0ccc4b6d514f5170597b53a53c41ba65e4cdd2756d2c4c/generic-parser-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "31eb30762b905c1b75e919aec9a56612", "sha256": "c5c4042f59e52ae4abd8fadad1057550ada2d0c00b894910f06e62ed21ede4b4"}, "downloads": -1, "filename": "generic_parser-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "31eb30762b905c1b75e919aec9a56612", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17680, "upload_time": "2019-10-15T12:55:09", "upload_time_iso_8601": "2019-10-15T12:55:09.458776Z", "url": "https://files.pythonhosted.org/packages/ed/68/2931986fdfca01ef3aa48a90cc61e35d60c52d1e3710e1e6f7ebcecaca72/generic_parser-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d165d57c7f5a86f4061725352c21d81", "sha256": "14b345551c3d66a126263763163998a692e7100820eb546fa915da179f636b53"}, "downloads": -1, "filename": "generic-parser-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7d165d57c7f5a86f4061725352c21d81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15101, "upload_time": "2019-10-15T12:55:11", "upload_time_iso_8601": "2019-10-15T12:55:11.258781Z", "url": "https://files.pythonhosted.org/packages/2c/77/a2c7d26533c4d5266ce983a2531654ca9b6bc888233a672c6c07bd07ec6a/generic-parser-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "ac185f8b725fb820d8c0adf81b496cbd", "sha256": "4ce6184e62ffd52197a86cb1a10e35e21460b4edce946f40d0f21680472505e0"}, "downloads": -1, "filename": "generic_parser-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "ac185f8b725fb820d8c0adf81b496cbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17757, "upload_time": "2019-11-27T15:39:47", "upload_time_iso_8601": "2019-11-27T15:39:47.271618Z", "url": "https://files.pythonhosted.org/packages/2a/4b/0234f89ef0749feddefd8cbb8fa5bf632cd42f0ebc9ccdeebe8194a58fd4/generic_parser-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dbd17f86a85e1631367c90e9abc3c76", "sha256": "2873c947ed30173654362ff8a55de38b4470d3df744030c5c9862c563e7705e0"}, "downloads": -1, "filename": "generic-parser-1.0.6.tar.gz", "has_sig": false, "md5_digest": "6dbd17f86a85e1631367c90e9abc3c76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15724, "upload_time": "2019-11-27T15:39:49", "upload_time_iso_8601": "2019-11-27T15:39:49.198587Z", "url": "https://files.pythonhosted.org/packages/cb/d9/39a63899fbaed81624ccd06f7a0588301c42a3f120e8df92c6fce392519f/generic-parser-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac185f8b725fb820d8c0adf81b496cbd", "sha256": "4ce6184e62ffd52197a86cb1a10e35e21460b4edce946f40d0f21680472505e0"}, "downloads": -1, "filename": "generic_parser-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "ac185f8b725fb820d8c0adf81b496cbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17757, "upload_time": "2019-11-27T15:39:47", "upload_time_iso_8601": "2019-11-27T15:39:47.271618Z", "url": "https://files.pythonhosted.org/packages/2a/4b/0234f89ef0749feddefd8cbb8fa5bf632cd42f0ebc9ccdeebe8194a58fd4/generic_parser-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dbd17f86a85e1631367c90e9abc3c76", "sha256": "2873c947ed30173654362ff8a55de38b4470d3df744030c5c9862c563e7705e0"}, "downloads": -1, "filename": "generic-parser-1.0.6.tar.gz", "has_sig": false, "md5_digest": "6dbd17f86a85e1631367c90e9abc3c76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15724, "upload_time": "2019-11-27T15:39:49", "upload_time_iso_8601": "2019-11-27T15:39:49.198587Z", "url": "https://files.pythonhosted.org/packages/cb/d9/39a63899fbaed81624ccd06f7a0588301c42a3f120e8df92c6fce392519f/generic-parser-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:23 2020"}