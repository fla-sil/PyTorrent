{"info": {"author": "MEEO s.r.l.", "author_email": "info@meeo.it", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "\n# Documentation for Adampy\n\n## Description\n\nAdampy allows to retrieve, analyze and download data hosted within the ADAM environment.\n\n## Installation Procedure\n```\nvirtualenv -p `which python3` venv\nsource venv/bin/activate\npython3 -m pip install --upgrade pip\npip install adampy\n```\n**********\n\n## Functions\n\n***********\n\n### getCollections\n\nThe getCollections function returns all available collections in the selected endpoint.\n\n```\nadam.getCollections(endpoint).get_data()\n```\n#### Parameters\n\n* endpoint (str) - The name of the endpoint to get the collections from.\n\n#### Returns\n\n* List with name of all collections\n\n#### Examples\n\nTo get the list of collections:\n\n```python\nimport adampy as adam\n\ncollections = adam.getCollections('wcs-eo4sdcr.adamplatform.eu').get_data()\n\nprint(collections)\n\n```\n\n------------------------------------------------------------------\n\n### getImage\n\nThe getImage function returns a numpy array containing the requested image. The image can be saved using Rasterio.\n```\nadam.getImage(endpoint, collection, time_t, min_lat = -90, max_lat = 90, min_long = -180, max_long = 180, token = 'None', geometry = 'None', masking = False, fname = 'image.tif').get_data()\n```\n\n#### Parameters\n\n* endpoint (str) - The name of the endpoint to get the collections from.\n* collection (str) - The name of the collection\n* time_t (str) - The time or time range in the format yyyy-mm-ddThh:mm:ss\n* min_lat (int or float; optional) - Minimum latitude of the bounding box (range -90 to 90)\n* max_lat (int or float; optional) - Maximum latitude of the bounding box (range -90 to 90)\n* min_long (int or float; optional) - Minimum longitude of the bounding box (range -180 to 180)\n* max_long (int or float; optional) - Maximum longitude of the bounding box (range -180 to 180)\n* token (str; optional) - Token to access restricted collections\n* geometry (shp, geojson or kml file; optional) - Geometry to mask the output image\n* masking (True or False; Default False ; optional) - Activate the masking option\n* fname (str; optional) - Name for the output file, if not stated fname = image.tif\n\n#### Returns\n\n* Numpy array with the requested image and Metadata information for the image\n\n#### Examples\n\nGet a global image for a particular time\n\n```python\nimport adampy as adam\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nimage, out_meta = adam.getImage('wcs-eo4sdcr.adamplatform.eu', 'Z_CAMS_C_ECMF_PM10_4326_04','2019-03-26T00:00:00').get_data()\n\nplt.subplots(figsize=(13,13))\nplt.imshow(image)\n\n\n```\n\nGet a bounding box for a particular time\n\n```python\nimport adampy as adam\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nimage, out_meta = adam.getImage('wcs-eo4sdcr.adamplatform.eu', 'Z_CAMS_C_ECMF_PM10_4326_04','2019-03-26T00:00:00',10,20,-10,50).get_data()\n\nplt.subplots(figsize=(13,13))\nplt.imshow(image)\n\n```\n\nGet a bounding box for a time range\n\n```python\nimport adampy as adam\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nimage, out_meta = adam.getImage('wcs-eo4sdcr.adamplatform.eu', 'Z_CAMS_C_ECMF_PM10_4326_04','2019-03-26T00:00:00,2019-03-27T23:59:59',10,20,-10,50).get_data()\n\nplt.subplots(figsize=(13,13))\nplt.imshow(image)\n\n```\n\nGet a masked image for a time range\n\n```python\nimport adampy as adam\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nimage, out_meta = adam.getImage('wcs-eo4sdcr.adamplatform.eu', 'Z_CAMS_C_ECMF_PM10_4326_04','2019-03-26T00:00:00,2019-03-27T23:59:59', geometry = 'polygon.shp', masking = True).get_data()\n\nplt.subplots(figsize=(13,13))\nplt.imshow(image)\n\n```\n-----------\n\n### getTimeSeries\n\nThe getTimeSeries function returns two arrays containing the values and time stamps for the request Latitude and Longitude location.\n```\nadam.getTimeSeries(endpoint, collection, time_t, lat, long, token = 'None').get_data()\n```\n\n#### Parameters\n\n* endpoint (str) - The name of the endpoint to get the collections from.\n* collection (str) - The name of the collection\n* time_t (str) - The time or time range in the format yyyy-mm-ddThh:mm:ss\n* lat (int or float; optional) - Minimum latitude of the bounding box (range -90 to 90)\n* long (int or float; optional) - Minimum longitude of the bounding box (range -180 to 180)\n* token (str; optional) - Token to access restricted collections\n\n#### Returns\n\n* Two arrays containing the values and time stamps for the request Latitude and Longitude location\n\n#### Examples\n\n```python\nimport adampy as adam\n\ndata, times = adam.getTimeSeries('wcs-eo4sdcr.adamplatform.eu', 'ERA-Interim_temp2m_4326_05','2014-03-26T00:00:00,2014-03-30T23:59:59', 25, 60).get_data()\n\n```\n\n-----------\n\n### getAnimation\n\nThe getAnimation function crates an animated gif of a dataset given a start and end date.\n```\nadam.getTimeSeries(endpoint, collection, start_date, end_date, min_lat = -90, max_lat = 90, min_long = -180, max_long = 180, token = 'None', frame_duration = 0.1, legend = False).get_data()\n```\n\n#### Parameters\n\n* endpoint (str) - The name of the endpoint to get the collections from.\n* collection (str) - The name of the collection\n* start_date (date object) - The start date of the animation\n* end_date (date object) - The end date of the animation\n* min_lat (int or float; optional) - Minimum latitude of the bounding box (range -90 to 90)\n* max_lat (int or float; optional) - Maximum latitude of the bounding box (range -90 to 90)\n* min_long (int or float; optional) - Minimum longitude of the bounding box (range -180 to 180)\n* max_long (int or float; optional) - Maximum longitude of the bounding box (range -180 to 180)\n* token (str; optional) - Token to access restricted collections\n* frame_duration (float or int; optional) - Frame duration in seconds\n* legend (True or False; optional) - Add legend to the animation\n\n\n#### Returns\n\n* An animated GIF of the dataset for a given start and end date.\n\n#### Examples\n\n```python\nimport adampy as adam\nfrom datetime import datetime, timedelta, date\n\nstart_date = date(2014,3,1)\nend_date = date(2014,3,5)\n\ngif_fname = adam.getAnimation('wcs-eo4sdcr.adamplatform.eu', 'NEXGDDP-pr_4326_025',start_date = start_date, end_date=end_date, frame_duration = 0.3, legend = False).get_data()\n\n```\n\n\n```python\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.services.meeo.it/sistema/adampy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "adampy", "package_url": "https://pypi.org/project/adampy/", "platform": "", "project_url": "https://pypi.org/project/adampy/", "project_urls": {"Homepage": "https://git.services.meeo.it/sistema/adampy"}, "release_url": "https://pypi.org/project/adampy/0.0.10/", "requires_dist": ["numpy (>=1.17.2)", "requests (>=2.18.4)", "fiona (>=1.8.6)", "imageio (>=2.5.0)", "matplotlib (>=3.1.1)", "geopandas (>=0.5.0)", "xarray (>=0.13.0)", "datetime (>=4.0)", "rasterio (>=1.0.23)"], "requires_python": ">=3.6", "summary": "Python Adam API", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Documentation for Adampy</h1>\n<h2>Description</h2>\n<p>Adampy allows to retrieve, analyze and download data hosted within the ADAM environment.</p>\n<h2>Installation Procedure</h2>\n<pre><code>virtualenv -p `which python3` venv\nsource venv/bin/activate\npython3 -m pip install --upgrade pip\npip install adampy\n</code></pre>\n<hr>\n<h2>Functions</h2>\n<hr>\n<h3>getCollections</h3>\n<p>The getCollections function returns all available collections in the selected endpoint.</p>\n<pre><code>adam.getCollections(endpoint).get_data()\n</code></pre>\n<h4>Parameters</h4>\n<ul>\n<li>endpoint (str) - The name of the endpoint to get the collections from.</li>\n</ul>\n<h4>Returns</h4>\n<ul>\n<li>List with name of all collections</li>\n</ul>\n<h4>Examples</h4>\n<p>To get the list of collections:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n\n<span class=\"n\">collections</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getCollections</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">collections</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h3>getImage</h3>\n<p>The getImage function returns a numpy array containing the requested image. The image can be saved using Rasterio.</p>\n<pre><code>adam.getImage(endpoint, collection, time_t, min_lat = -90, max_lat = 90, min_long = -180, max_long = 180, token = 'None', geometry = 'None', masking = False, fname = 'image.tif').get_data()\n</code></pre>\n<h4>Parameters</h4>\n<ul>\n<li>endpoint (str) - The name of the endpoint to get the collections from.</li>\n<li>collection (str) - The name of the collection</li>\n<li>time_t (str) - The time or time range in the format yyyy-mm-ddThh:mm:ss</li>\n<li>min_lat (int or float; optional) - Minimum latitude of the bounding box (range -90 to 90)</li>\n<li>max_lat (int or float; optional) - Maximum latitude of the bounding box (range -90 to 90)</li>\n<li>min_long (int or float; optional) - Minimum longitude of the bounding box (range -180 to 180)</li>\n<li>max_long (int or float; optional) - Maximum longitude of the bounding box (range -180 to 180)</li>\n<li>token (str; optional) - Token to access restricted collections</li>\n<li>geometry (shp, geojson or kml file; optional) - Geometry to mask the output image</li>\n<li>masking (True or False; Default False ; optional) - Activate the masking option</li>\n<li>fname (str; optional) - Name for the output file, if not stated fname = image.tif</li>\n</ul>\n<h4>Returns</h4>\n<ul>\n<li>Numpy array with the requested image and Metadata information for the image</li>\n</ul>\n<h4>Examples</h4>\n<p>Get a global image for a particular time</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">out_meta</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getImage</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">,</span> <span class=\"s1\">'Z_CAMS_C_ECMF_PM10_4326_04'</span><span class=\"p\">,</span><span class=\"s1\">'2019-03-26T00:00:00'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n</pre>\n<p>Get a bounding box for a particular time</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">out_meta</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getImage</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">,</span> <span class=\"s1\">'Z_CAMS_C_ECMF_PM10_4326_04'</span><span class=\"p\">,</span><span class=\"s1\">'2019-03-26T00:00:00'</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n</pre>\n<p>Get a bounding box for a time range</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">out_meta</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getImage</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">,</span> <span class=\"s1\">'Z_CAMS_C_ECMF_PM10_4326_04'</span><span class=\"p\">,</span><span class=\"s1\">'2019-03-26T00:00:00,2019-03-27T23:59:59'</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">50</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n</pre>\n<p>Get a masked image for a time range</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">out_meta</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getImage</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">,</span> <span class=\"s1\">'Z_CAMS_C_ECMF_PM10_4326_04'</span><span class=\"p\">,</span><span class=\"s1\">'2019-03-26T00:00:00,2019-03-27T23:59:59'</span><span class=\"p\">,</span> <span class=\"n\">geometry</span> <span class=\"o\">=</span> <span class=\"s1\">'polygon.shp'</span><span class=\"p\">,</span> <span class=\"n\">masking</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h3>getTimeSeries</h3>\n<p>The getTimeSeries function returns two arrays containing the values and time stamps for the request Latitude and Longitude location.</p>\n<pre><code>adam.getTimeSeries(endpoint, collection, time_t, lat, long, token = 'None').get_data()\n</code></pre>\n<h4>Parameters</h4>\n<ul>\n<li>endpoint (str) - The name of the endpoint to get the collections from.</li>\n<li>collection (str) - The name of the collection</li>\n<li>time_t (str) - The time or time range in the format yyyy-mm-ddThh:mm:ss</li>\n<li>lat (int or float; optional) - Minimum latitude of the bounding box (range -90 to 90)</li>\n<li>long (int or float; optional) - Minimum longitude of the bounding box (range -180 to 180)</li>\n<li>token (str; optional) - Token to access restricted collections</li>\n</ul>\n<h4>Returns</h4>\n<ul>\n<li>Two arrays containing the values and time stamps for the request Latitude and Longitude location</li>\n</ul>\n<h4>Examples</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getTimeSeries</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">,</span> <span class=\"s1\">'ERA-Interim_temp2m_4326_05'</span><span class=\"p\">,</span><span class=\"s1\">'2014-03-26T00:00:00,2014-03-30T23:59:59'</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre>\n<hr>\n<h3>getAnimation</h3>\n<p>The getAnimation function crates an animated gif of a dataset given a start and end date.</p>\n<pre><code>adam.getTimeSeries(endpoint, collection, start_date, end_date, min_lat = -90, max_lat = 90, min_long = -180, max_long = 180, token = 'None', frame_duration = 0.1, legend = False).get_data()\n</code></pre>\n<h4>Parameters</h4>\n<ul>\n<li>endpoint (str) - The name of the endpoint to get the collections from.</li>\n<li>collection (str) - The name of the collection</li>\n<li>start_date (date object) - The start date of the animation</li>\n<li>end_date (date object) - The end date of the animation</li>\n<li>min_lat (int or float; optional) - Minimum latitude of the bounding box (range -90 to 90)</li>\n<li>max_lat (int or float; optional) - Maximum latitude of the bounding box (range -90 to 90)</li>\n<li>min_long (int or float; optional) - Minimum longitude of the bounding box (range -180 to 180)</li>\n<li>max_long (int or float; optional) - Maximum longitude of the bounding box (range -180 to 180)</li>\n<li>token (str; optional) - Token to access restricted collections</li>\n<li>frame_duration (float or int; optional) - Frame duration in seconds</li>\n<li>legend (True or False; optional) - Add legend to the animation</li>\n</ul>\n<h4>Returns</h4>\n<ul>\n<li>An animated GIF of the dataset for a given start and end date.</li>\n</ul>\n<h4>Examples</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">adampy</span> <span class=\"k\">as</span> <span class=\"nn\">adam</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span><span class=\"p\">,</span> <span class=\"n\">date</span>\n\n<span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"n\">gif_fname</span> <span class=\"o\">=</span> <span class=\"n\">adam</span><span class=\"o\">.</span><span class=\"n\">getAnimation</span><span class=\"p\">(</span><span class=\"s1\">'wcs-eo4sdcr.adamplatform.eu'</span><span class=\"p\">,</span> <span class=\"s1\">'NEXGDDP-pr_4326_025'</span><span class=\"p\">,</span><span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">end_date</span><span class=\"p\">,</span> <span class=\"n\">frame_duration</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"n\">legend</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre>\n<pre></pre>\n\n          </div>"}, "last_serial": 6505475, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "74c2760a41ebe3200aae38e7ea34f9c7", "sha256": "d6682d2e5451f1fc1337e18b59517d42644703ef82c0519963dd5c26d2d526d9"}, "downloads": -1, "filename": "adampy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "74c2760a41ebe3200aae38e7ea34f9c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8295, "upload_time": "2019-10-16T12:20:58", "upload_time_iso_8601": "2019-10-16T12:20:58.612759Z", "url": "https://files.pythonhosted.org/packages/82/38/ef1e1586c0253ccf471c58dcb947a20ae07f7de712f51a8afdf15668ce3b/adampy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c8a38810f3a4deb36d9f6b5521cc0cc", "sha256": "bb9563e90d4ecc61003232f7be286fe06d23ecae8bd0736bbbedbb2ec76ca15a"}, "downloads": -1, "filename": "adampy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6c8a38810f3a4deb36d9f6b5521cc0cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8769, "upload_time": "2019-10-16T12:21:01", "upload_time_iso_8601": "2019-10-16T12:21:01.858669Z", "url": "https://files.pythonhosted.org/packages/89/d4/bc3dcceb11232b1da09bf9a905cb20d0c683f1bd25969343b9b747d17a79/adampy-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "2057c7e3205ef08a519d3644f7e4ff02", "sha256": "1fdf065e6ec4095cef527c4613febbfb833bd42075e1de4a6696b1f48f736966"}, "downloads": -1, "filename": "adampy-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "2057c7e3205ef08a519d3644f7e4ff02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8577, "upload_time": "2020-01-23T09:48:20", "upload_time_iso_8601": "2020-01-23T09:48:20.632623Z", "url": "https://files.pythonhosted.org/packages/fe/16/4792ebf5188d869161797e0cd19f344b976d17a05dfb8f9e98495abad02f/adampy-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4371b7ffca31e3a1e3441688da5da52a", "sha256": "a0bb5de82697796a3dfb0a82c88a31b24392fc4b8c2559950424dbae8eaa9bfa"}, "downloads": -1, "filename": "adampy-0.0.10.tar.gz", "has_sig": false, "md5_digest": "4371b7ffca31e3a1e3441688da5da52a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9030, "upload_time": "2020-01-23T09:48:22", "upload_time_iso_8601": "2020-01-23T09:48:22.276802Z", "url": "https://files.pythonhosted.org/packages/77/6b/2b20aaee2e0a39b57bbab296e62bf30e4cd7427bb9113c54641dc09b6113/adampy-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9f8da2840497aa285c1f1a4eb97d8e32", "sha256": "16ae42e976feb60fca1ce0364b18b44aa9debb7d815abf4543716c8af9e4b25e"}, "downloads": -1, "filename": "adampy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9f8da2840497aa285c1f1a4eb97d8e32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8378, "upload_time": "2019-11-07T13:12:36", "upload_time_iso_8601": "2019-11-07T13:12:36.014259Z", "url": "https://files.pythonhosted.org/packages/3d/b5/7fe2f17a066746bc6d3b3b0b3b9ea6515b74fa4e44dfb2676d5b2f9d4cbd/adampy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5426bf167d6f6c83335c8fe6cd3ed699", "sha256": "7bf331d060003db8ba879368f765629a3df065ecf1cfaf8cec172cac541cd081"}, "downloads": -1, "filename": "adampy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5426bf167d6f6c83335c8fe6cd3ed699", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8837, "upload_time": "2019-11-07T13:12:37", "upload_time_iso_8601": "2019-11-07T13:12:37.382776Z", "url": "https://files.pythonhosted.org/packages/c6/83/0206e6ac7827aef31a374d386afeae56242ebccf2387f618e8d01873da64/adampy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f0e92bc4d66c99d7dbbd8409c6988606", "sha256": "1b2c54c15cd79205e7c58232251b162d5fa3a3bc77d4168f1f5a04e99853ebe6"}, "downloads": -1, "filename": "adampy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f0e92bc4d66c99d7dbbd8409c6988606", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8573, "upload_time": "2019-11-13T14:18:22", "upload_time_iso_8601": "2019-11-13T14:18:22.210711Z", "url": "https://files.pythonhosted.org/packages/a4/d2/ee3538519fc0a6a4a080008eb7967f2c3e58195cb541086367b9eb141102/adampy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63ef3f0c7cf79b2af3002e8efba38d30", "sha256": "7d754fe49e33349207fff8309a010ac2af655622c25853a7e7d2022c5be92fd8"}, "downloads": -1, "filename": "adampy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "63ef3f0c7cf79b2af3002e8efba38d30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9053, "upload_time": "2019-11-13T14:18:23", "upload_time_iso_8601": "2019-11-13T14:18:23.875396Z", "url": "https://files.pythonhosted.org/packages/22/4e/da42a623bae02232e6617687edd40d74f00a8ae0e50fe20ccd189753e72a/adampy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fd3ceeb20588c78c13118ff951cb3e5b", "sha256": "4cdde875db019e8dd027e71b9c81770a43bbc2c9fd846782810469c544695a30"}, "downloads": -1, "filename": "adampy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fd3ceeb20588c78c13118ff951cb3e5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8571, "upload_time": "2019-11-13T15:03:02", "upload_time_iso_8601": "2019-11-13T15:03:02.416587Z", "url": "https://files.pythonhosted.org/packages/bc/2c/bc416daf802b17989985b7aa2a0dad27979802ed004d63731488af2312e7/adampy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b50d74071f30f429119eb61a1179a00", "sha256": "362c76b298cf30069324ddd3423347169ee692164f2896a91bf0c66d29f39703"}, "downloads": -1, "filename": "adampy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3b50d74071f30f429119eb61a1179a00", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9051, "upload_time": "2019-11-13T15:03:04", "upload_time_iso_8601": "2019-11-13T15:03:04.226841Z", "url": "https://files.pythonhosted.org/packages/d8/1c/134841b356d17d8d9399c950c358f178141c4771e66582c216bab4caec21/adampy-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2057c7e3205ef08a519d3644f7e4ff02", "sha256": "1fdf065e6ec4095cef527c4613febbfb833bd42075e1de4a6696b1f48f736966"}, "downloads": -1, "filename": "adampy-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "2057c7e3205ef08a519d3644f7e4ff02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8577, "upload_time": "2020-01-23T09:48:20", "upload_time_iso_8601": "2020-01-23T09:48:20.632623Z", "url": "https://files.pythonhosted.org/packages/fe/16/4792ebf5188d869161797e0cd19f344b976d17a05dfb8f9e98495abad02f/adampy-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4371b7ffca31e3a1e3441688da5da52a", "sha256": "a0bb5de82697796a3dfb0a82c88a31b24392fc4b8c2559950424dbae8eaa9bfa"}, "downloads": -1, "filename": "adampy-0.0.10.tar.gz", "has_sig": false, "md5_digest": "4371b7ffca31e3a1e3441688da5da52a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9030, "upload_time": "2020-01-23T09:48:22", "upload_time_iso_8601": "2020-01-23T09:48:22.276802Z", "url": "https://files.pythonhosted.org/packages/77/6b/2b20aaee2e0a39b57bbab296e62bf30e4cd7427bb9113c54641dc09b6113/adampy-0.0.10.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:39 2020"}