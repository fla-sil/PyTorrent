{"info": {"author": "Ryan Brown", "author_email": "sb@ryansb.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "# Disque-py\n\nA [disque](https://github.com/antirez/disque) Python client.\n\nUnder the hood, this used redis-py's HiRedis implementation and switches out\nRedis commands with the disque ones.\n\n## Usage\n\n```\nfrom disque import DisqueAlpha\n\nc = DisqueAlpha()\nc.addjob('queuename', 'body') # takes all ADDJOB arguments\n# b'DI... job id ...SQ'\nc.getjob('queuename')\n# [[b'queue', b'DI3971f14a850d9e5b3ca5c881e3dd1ba2a34277b505a0SQ', b'body']]\n```\n\n## Status\n\n- [x] Server commands (slowlog, clients, etc)\n- [x] ADDJOB\n- [x] GETJOB\n- [ ] ACKJOB\n- [ ] FASTACK", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "disque\nredis", "license": "ASL2.0", "maintainer": null, "maintainer_email": null, "name": "disque-py", "package_url": "https://pypi.org/project/disque-py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/disque-py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/disque-py/0.0.0.post1/", "requires_dist": null, "requires_python": null, "summary": "Python Disque client (very very alpha, as is Disque itself)", "version": "0.0.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Disque-py<br><br>A [disque](https://github.com/antirez/disque) Python client.<br><br>Under the hood, this used redis-py's HiRedis implementation and switches out<br>Redis commands with the disque ones.<br><br>## Usage<br><br>```<br>from disque import DisqueAlpha<br><br>c = DisqueAlpha()<br>c.addjob('queuename', 'body') # takes all ADDJOB arguments<br># b'DI... job id ...SQ'<br>c.getjob('queuename')<br># [[b'queue', b'DI3971f14a850d9e5b3ca5c881e3dd1ba2a34277b505a0SQ', b'body']]<br>```<br><br>## Status<br><br>- [x] Server commands (slowlog, clients, etc)<br>- [x] ADDJOB<br>- [x] GETJOB<br>- [ ] ACKJOB<br>- [ ] FASTACK\n          </div>"}, "last_serial": 1524796, "releases": {"0.0.0.post1": []}, "urls": [], "timestamp": "Fri May  8 00:38:06 2020"}