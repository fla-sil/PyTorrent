{"info": {"author": "Illia Polosukhin", "author_email": "ilblackdragon@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "django-voter\n##############\n\nApplication for Django framework that contains generic rating\\vote system. Requires modifications in the model, that will be used for voting, to optimize number of database queries.\n\n.. contents::\n\nQuick overview\n==============\n\nMore later.\n\nRequirements\n==============\n\n- python >= 2.5\n- pip >= 0.8\n- django >= 1.2\n- django-misc (https://github.com/ilblackdragon/django-misc)\n\nInstallation\n=============\n\n**Django voter** should be installed using pip: ::\n\n    pip install git+git://github.com/ilblackdragon/django-voter.git\n\n\nSetup\n============\n\n- Add 'blog' to INSTALLED_APPS ::\n\n    INSTALLED_APPS += ( 'ratings', )\n\n- Add RatingField to models you want to allow voting for: ::\n\n\n    from ratings.models import RatingField\n    \n    class SomeModle(models.Model):\n       ...\n       rating = RatingField()\n    \n\nConfigure django-voter\n===============\n\nWill be later.\n\nContributing\n============\n\nDevelopment of django-voter happens at github: https://github.com/ilblackdragon/django-voter\nPlease, if you have any insight how to patch existing models - let me know. At this point, having a rating field at model that this field will be required at is the best solution I see from point of number database queries.\n\nLicense\n============\n\nCopyright (C) 2013 Illia Polosukhin\nThis program is licensed under the MIT License (see LICENSE)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ilblackdragon/django-voter.git", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-voter", "package_url": "https://pypi.org/project/django-voter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-voter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/ilblackdragon/django-voter.git"}, "release_url": "https://pypi.org/project/django-voter/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Application for Django framework that contains generic rating\\vote system. Requires modifications in the model, that will be used for voting, to optimize number of database queries.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-voter<br>##############<br><br>Application for Django framework that contains generic rating\\vote system. Requires modifications in the model, that will be used for voting, to optimize number of database queries.<br><br>.. contents::<br><br>Quick overview<br>==============<br><br>More later.<br><br>Requirements<br>==============<br><br>- python &gt;= 2.5<br>- pip &gt;= 0.8<br>- django &gt;= 1.2<br>- django-misc (https://github.com/ilblackdragon/django-misc)<br><br>Installation<br>=============<br><br>**Django voter** should be installed using pip: ::<br><br>    pip install git+git://github.com/ilblackdragon/django-voter.git<br><br><br>Setup<br>============<br><br>- Add 'blog' to INSTALLED_APPS ::<br><br>    INSTALLED_APPS += ( 'ratings', )<br><br>- Add RatingField to models you want to allow voting for: ::<br><br><br>    from ratings.models import RatingField<br>    <br>    class SomeModle(models.Model):<br>       ...<br>       rating = RatingField()<br>    <br><br>Configure django-voter<br>===============<br><br>Will be later.<br><br>Contributing<br>============<br><br>Development of django-voter happens at github: https://github.com/ilblackdragon/django-voter<br>Please, if you have any insight how to patch existing models - let me know. At this point, having a rating field at model that this field will be required at is the best solution I see from point of number database queries.<br><br>License<br>============<br><br>Copyright (C) 2013 Illia Polosukhin<br>This program is licensed under the MIT License (see LICENSE)\n          </div>"}, "last_serial": 791011, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dc0cea7c6530e9b54e6b957e48c1cefb", "sha256": "c900d5b49825b242edcfe8c31cec53e0b65871be8efdecf1478537913c72cedb"}, "downloads": -1, "filename": "django-voter-0.1.0.zip", "has_sig": false, "md5_digest": "dc0cea7c6530e9b54e6b957e48c1cefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23643, "upload_time": "2012-11-18T07:10:39", "upload_time_iso_8601": "2012-11-18T07:10:39.901449Z", "url": "https://files.pythonhosted.org/packages/50/4c/a01a9cb89f5d7a9e3736e27b6bcf95242f3f096a178a69a52281297ead03/django-voter-0.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc0cea7c6530e9b54e6b957e48c1cefb", "sha256": "c900d5b49825b242edcfe8c31cec53e0b65871be8efdecf1478537913c72cedb"}, "downloads": -1, "filename": "django-voter-0.1.0.zip", "has_sig": false, "md5_digest": "dc0cea7c6530e9b54e6b957e48c1cefb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23643, "upload_time": "2012-11-18T07:10:39", "upload_time_iso_8601": "2012-11-18T07:10:39.901449Z", "url": "https://files.pythonhosted.org/packages/50/4c/a01a9cb89f5d7a9e3736e27b6bcf95242f3f096a178a69a52281297ead03/django-voter-0.1.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:51:59 2020"}