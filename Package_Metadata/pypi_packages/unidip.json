{"info": {"author": "Benjamin Doran", "author_email": "benadoran@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# UniDip Python Port\n\nSee reference paper:  http://www.kdd.org/kdd2016/subtopic/view/skinny-dip-clustering-in-a-sea-of-noise\n\nUniDip is a noise robust clustering algorithm for 1 dimensional numeric data. It recursively extracts peaks of density in the data utilizing the Hartigan Dip-test of Unimodality.\n\n## Install\n\ncoming soon...\n```\npip3.6 install unidip\n```\n\n## Examples\n\n### Basic Usage\n\n```python\nfrom unidip import UniDip\n\n# create bi-modal distribution\ndat = np.concatenate([np.random.randn(200)-3, np.random.randn(200)+3])\n\n# sort data so returned indices are meaningful\ndat = np.msort(dat)\n\n# get start and stop indices of peaks \nintervals = UniDip(dat).run()\n```\n\n### Advanced Options\n\n* **alpha**: control sensitivity as p-value. Default is 0.05. increase to isolate more peaks with less confidence. Or, decrease to isolate only peaks that are least likely to be noise.\n* **mrg_dst**: Defines how close intervals must be before they are merged.\n* **ntrials**: how many trials are run in Hartigan Dip Test more trials adds confidance but takes longer.\n\n```python\nintervals = UniDip(dat, alpha=0.001, ntrials=1000, mrg_dst=5).run()\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/BenjaminDoran/unidip", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "unidip", "package_url": "https://pypi.org/project/unidip/", "platform": "", "project_url": "https://pypi.org/project/unidip/", "project_urls": {"Homepage": "http://github.com/BenjaminDoran/unidip"}, "release_url": "https://pypi.org/project/unidip/0.1.1/", "requires_dist": ["numpy", "matplotlib"], "requires_python": "", "summary": "Python port of the UniDip clustering algorithm", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>UniDip Python Port</h1>\n<p>See reference paper:  <a href=\"http://www.kdd.org/kdd2016/subtopic/view/skinny-dip-clustering-in-a-sea-of-noise\" rel=\"nofollow\">http://www.kdd.org/kdd2016/subtopic/view/skinny-dip-clustering-in-a-sea-of-noise</a></p>\n<p>UniDip is a noise robust clustering algorithm for 1 dimensional numeric data. It recursively extracts peaks of density in the data utilizing the Hartigan Dip-test of Unimodality.</p>\n<h2>Install</h2>\n<p>coming soon...</p>\n<pre><code>pip3.6 install unidip\n</code></pre>\n<h2>Examples</h2>\n<h3>Basic Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">unidip</span> <span class=\"kn\">import</span> <span class=\"n\">UniDip</span>\n\n<span class=\"c1\"># create bi-modal distribution</span>\n<span class=\"n\">dat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># sort data so returned indices are meaningful</span>\n<span class=\"n\">dat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">msort</span><span class=\"p\">(</span><span class=\"n\">dat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get start and stop indices of peaks </span>\n<span class=\"n\">intervals</span> <span class=\"o\">=</span> <span class=\"n\">UniDip</span><span class=\"p\">(</span><span class=\"n\">dat</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Advanced Options</h3>\n<ul>\n<li><strong>alpha</strong>: control sensitivity as p-value. Default is 0.05. increase to isolate more peaks with less confidence. Or, decrease to isolate only peaks that are least likely to be noise.</li>\n<li><strong>mrg_dst</strong>: Defines how close intervals must be before they are merged.</li>\n<li><strong>ntrials</strong>: how many trials are run in Hartigan Dip Test more trials adds confidance but takes longer.</li>\n</ul>\n<pre><span class=\"n\">intervals</span> <span class=\"o\">=</span> <span class=\"n\">UniDip</span><span class=\"p\">(</span><span class=\"n\">dat</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"n\">ntrials</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">mrg_dst</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 4004704, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "01d3bac76ad32d74aa046d74075eea8d", "sha256": "4cd76b9ff9924efade07108798d50ed5dcca2a92bf9ab4c8bf1170fb4caf780d"}, "downloads": -1, "filename": "unidip-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01d3bac76ad32d74aa046d74075eea8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6758, "upload_time": "2018-06-26T19:02:03", "upload_time_iso_8601": "2018-06-26T19:02:03.189305Z", "url": "https://files.pythonhosted.org/packages/79/37/51df0a51cfb715bbee7f0a3a51f0414bfd5e47ff0052cf4d86f7cf4c9d5a/unidip-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60ad20fe47f0c29ab7c8dea1c843f617", "sha256": "ec62dd0f753923e89bcb870e63ce7d3c4c92eb2ebbd91c84f658ef4358fd1d01"}, "downloads": -1, "filename": "unidip-0.1.1.tar.gz", "has_sig": false, "md5_digest": "60ad20fe47f0c29ab7c8dea1c843f617", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6100, "upload_time": "2018-06-26T19:02:06", "upload_time_iso_8601": "2018-06-26T19:02:06.511647Z", "url": "https://files.pythonhosted.org/packages/1c/22/e2b39fd524297ecc6c439748c4e20d56a97a8829f2b2b1897365a0f23a19/unidip-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "01d3bac76ad32d74aa046d74075eea8d", "sha256": "4cd76b9ff9924efade07108798d50ed5dcca2a92bf9ab4c8bf1170fb4caf780d"}, "downloads": -1, "filename": "unidip-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01d3bac76ad32d74aa046d74075eea8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6758, "upload_time": "2018-06-26T19:02:03", "upload_time_iso_8601": "2018-06-26T19:02:03.189305Z", "url": "https://files.pythonhosted.org/packages/79/37/51df0a51cfb715bbee7f0a3a51f0414bfd5e47ff0052cf4d86f7cf4c9d5a/unidip-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60ad20fe47f0c29ab7c8dea1c843f617", "sha256": "ec62dd0f753923e89bcb870e63ce7d3c4c92eb2ebbd91c84f658ef4358fd1d01"}, "downloads": -1, "filename": "unidip-0.1.1.tar.gz", "has_sig": false, "md5_digest": "60ad20fe47f0c29ab7c8dea1c843f617", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6100, "upload_time": "2018-06-26T19:02:06", "upload_time_iso_8601": "2018-06-26T19:02:06.511647Z", "url": "https://files.pythonhosted.org/packages/1c/22/e2b39fd524297ecc6c439748c4e20d56a97a8829f2b2b1897365a0f23a19/unidip-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:36 2020"}