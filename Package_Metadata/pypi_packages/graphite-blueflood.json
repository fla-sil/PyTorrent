{"info": {"author": "Rackspace Metrics", "author_email": "cloudMetrics-dev@lists.rackspace.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Description\r\n\r\nGraphite _'backend'_. Twisted-based server accepts graphite source metrics and forward them to [blueflood][blueflood-git].\r\n\r\nServer accepts only pickle protocols metrics (as it's the only protocol used by graphite `carbon-relay`.)\r\n\r\nIt does very primitive _'caching'_: aggregates all metrics and flushes them in regular intervals.\r\n\r\nThe subsequent version of package is renamed to blueflood-carbon-forwarder.\r\n\r\n# Dependencies\r\n\r\n * twisted\r\n * mock\r\n * pytest\r\n * txKeystone\r\n\r\n# Installation\r\n\r\n```\r\n    git clone https://github.com/rackerlabs/blueflood-carbon-forwarder.git\r\n    cd blueflood-carbon-forwarder\r\n    python setup.py install\r\n```\r\n\r\n# Running\r\n\r\n```\r\n    twistd blueflood-forward\r\n```\r\n| Switch | Description | default |\r\n| ----- | ------- | --------- |\r\n| -e | Endpoint to listen on for pickle protocol metrics | tcp:2004 |\r\n| -i | Metrics send interval, sec | 30.0 |\r\n| -b | Blueflood address | http://localhost:19000 |\r\n| -t | Tenant ID | tenant |\r\n| -p | Prefix to be prepended to metrics name | metric_prefix |\r\n| --ttl | TimeToLive value for metrics, sec | 86400 |\r\n| -u | Keystone user | |\r\n| -k | Keystone key | |\r\n| --auth-url | Keystone token URL | |\r\n\r\nIn case you need no authentication leave `-u`/`--user` command line argument empty (default value).\r\n\r\n\r\n# Sending metrics\r\n\r\nTo send a test metric to the twistd server you started above, you can run the following:\r\n```\r\n    python tests/scripts/sendPickle.py\r\n```\r\nModify the script accordingly for your local testing\r\n\r\n# Configuration\r\n\r\nConfiguration is done with command line arguments passed to twistd daemon when running:\r\n```\r\n    twistd -n -l - blueflood-forward --help\r\n\r\n```\r\n\r\n#Logging \r\n\r\nLogging can be controlled using LogObserver provided along or you can use your own LogObserver\r\n\r\n```\r\n    twistd --logger carbonforwarderlogging.forwarder_log_observer.get_log_observer blueflood-forward\r\n```\r\n \r\n[blueflood-git]: https://github.com/rackerlabs/blueflood \"blueflood\"\r\n\r\n# Running unit tests\r\n```\r\npy.test\r\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rackerlabs/blueflood-carbon-forwarder", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "graphite-blueflood", "package_url": "https://pypi.org/project/graphite-blueflood/", "platform": "any", "project_url": "https://pypi.org/project/graphite-blueflood/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rackerlabs/blueflood-carbon-forwarder"}, "release_url": "https://pypi.org/project/graphite-blueflood/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Add optional -p option to prepend metrics before forwarding to blueflood", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Description\n<br>\n<br>Graphite _'backend'_. Twisted-based server accepts graphite source metrics and forward them to [blueflood][blueflood-git].\n<br>\n<br>Server accepts only pickle protocols metrics (as it's the only protocol used by graphite `carbon-relay`.)\n<br>\n<br>It does very primitive _'caching'_: aggregates all metrics and flushes them in regular intervals.\n<br>\n<br>The subsequent version of package is renamed to blueflood-carbon-forwarder.\n<br>\n<br># Dependencies\n<br>\n<br> * twisted\n<br> * mock\n<br> * pytest\n<br> * txKeystone\n<br>\n<br># Installation\n<br>\n<br>```\n<br>    git clone https://github.com/rackerlabs/blueflood-carbon-forwarder.git\n<br>    cd blueflood-carbon-forwarder\n<br>    python setup.py install\n<br>```\n<br>\n<br># Running\n<br>\n<br>```\n<br>    twistd blueflood-forward\n<br>```\n<br>| Switch | Description | default |\n<br>| ----- | ------- | --------- |\n<br>| -e | Endpoint to listen on for pickle protocol metrics | tcp:2004 |\n<br>| -i | Metrics send interval, sec | 30.0 |\n<br>| -b | Blueflood address | http://localhost:19000 |\n<br>| -t | Tenant ID | tenant |\n<br>| -p | Prefix to be prepended to metrics name | metric_prefix |\n<br>| --ttl | TimeToLive value for metrics, sec | 86400 |\n<br>| -u | Keystone user | |\n<br>| -k | Keystone key | |\n<br>| --auth-url | Keystone token URL | |\n<br>\n<br>In case you need no authentication leave `-u`/`--user` command line argument empty (default value).\n<br>\n<br>\n<br># Sending metrics\n<br>\n<br>To send a test metric to the twistd server you started above, you can run the following:\n<br>```\n<br>    python tests/scripts/sendPickle.py\n<br>```\n<br>Modify the script accordingly for your local testing\n<br>\n<br># Configuration\n<br>\n<br>Configuration is done with command line arguments passed to twistd daemon when running:\n<br>```\n<br>    twistd -n -l - blueflood-forward --help\n<br>\n<br>```\n<br>\n<br>#Logging \n<br>\n<br>Logging can be controlled using LogObserver provided along or you can use your own LogObserver\n<br>\n<br>```\n<br>    twistd --logger carbonforwarderlogging.forwarder_log_observer.get_log_observer blueflood-forward\n<br>```\n<br> \n<br>[blueflood-git]: https://github.com/rackerlabs/blueflood \"blueflood\"\n<br>\n<br># Running unit tests\n<br>```\n<br>py.test\n<br>```\n          </div>"}, "last_serial": 1976466, "releases": {"0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "bf6c2481612ff0d2d7dd003ab14a93f1", "sha256": "044bcf3506568a53ffcd84e07e462210c8935403c45af23ac455c252966f8b46"}, "downloads": -1, "filename": "graphite-blueflood-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bf6c2481612ff0d2d7dd003ab14a93f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6437, "upload_time": "2015-05-19T20:58:22", "upload_time_iso_8601": "2015-05-19T20:58:22.589259Z", "url": "https://files.pythonhosted.org/packages/c5/1b/bb558450524f0355d4aae56ec5a18f9ffcf5f03e0ce7ddcb86cdd22a4fbf/graphite-blueflood-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "93eed8a5e09c3e3f90932aa95309746f", "sha256": "5a5e769d1a500a89e01a6175a4eaa77804dea05f14ed5b1c929240ac5b861f8a"}, "downloads": -1, "filename": "graphite-blueflood-0.0.4.tar.gz", "has_sig": false, "md5_digest": "93eed8a5e09c3e3f90932aa95309746f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6462, "upload_time": "2015-05-20T16:46:48", "upload_time_iso_8601": "2015-05-20T16:46:48.538418Z", "url": "https://files.pythonhosted.org/packages/98/0e/da29ffd53f149eb76a848d1c8957b0e39c676435104e5530e0a40c8894be/graphite-blueflood-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "ac4cea4dba5a1748fb97176c30364282", "sha256": "344c8b4d5586e3102472b0726ad2fa92485d04ac926f2e3d6329fed2d7f495e1"}, "downloads": -1, "filename": "graphite-blueflood-0.0.6.tar.gz", "has_sig": false, "md5_digest": "ac4cea4dba5a1748fb97176c30364282", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13822, "upload_time": "2015-07-29T18:25:55", "upload_time_iso_8601": "2015-07-29T18:25:55.871051Z", "url": "https://files.pythonhosted.org/packages/93/89/b442e6edfdd5a722dd0cd6c1772e8b308164d1438d7ec99fd375024adc17/graphite-blueflood-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "cedd50a83c039d2d960a5fcf4cdc48bd", "sha256": "0d52dad929feafbbed7978da7172b2988ea3f02d7d1c31503ede3b906c9e1b93"}, "downloads": -1, "filename": "graphite-blueflood-0.0.7.tar.gz", "has_sig": false, "md5_digest": "cedd50a83c039d2d960a5fcf4cdc48bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14128, "upload_time": "2015-07-29T21:47:15", "upload_time_iso_8601": "2015-07-29T21:47:15.615230Z", "url": "https://files.pythonhosted.org/packages/dd/3a/665c2a61e8793726176a4d73b6b94fb52f5b103e52671a39d4f8b6b27f5e/graphite-blueflood-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "66f79a9b7a10e63c922d675f4f647ddb", "sha256": "dc642907458de340dff3c84c9d759a0c25b37b57caab26dc7d234add1b8bc9b2"}, "downloads": -1, "filename": "graphite-blueflood-0.0.8.tar.gz", "has_sig": false, "md5_digest": "66f79a9b7a10e63c922d675f4f647ddb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14154, "upload_time": "2015-07-29T22:51:50", "upload_time_iso_8601": "2015-07-29T22:51:50.870731Z", "url": "https://files.pythonhosted.org/packages/cb/07/bc8182f941a23b9b8607a578cf5525057f6c2551323eaefc8a6c7d70c29d/graphite-blueflood-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "6823d0fa60233965dc771e755bfc87dc", "sha256": "595b80b01aa1844c924fb61757e30e27e77464e979ba746bcd8e009f559779b1"}, "downloads": -1, "filename": "graphite-blueflood-0.0.9.tar.gz", "has_sig": false, "md5_digest": "6823d0fa60233965dc771e755bfc87dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11249, "upload_time": "2015-11-05T19:04:31", "upload_time_iso_8601": "2015-11-05T19:04:31.014916Z", "url": "https://files.pythonhosted.org/packages/74/5e/6848f6eb4fec535e95ea12d363261a06710bff9795e49f6b33440faf61d4/graphite-blueflood-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "dcd65846ad4d81380b21fc7bebb0aa51", "sha256": "50efa8cce338da3137801a809e994fd30012e06bf40c77eeb8f07581abd92785"}, "downloads": -1, "filename": "graphite-blueflood-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dcd65846ad4d81380b21fc7bebb0aa51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11251, "upload_time": "2015-11-05T19:08:49", "upload_time_iso_8601": "2015-11-05T19:08:49.938097Z", "url": "https://files.pythonhosted.org/packages/1e/2e/b9f429678f887b7492c17eb4fca8263421a5a56e81496eb4873a08ba7c2d/graphite-blueflood-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b6b2bd9cd6783d3014672d49e564a3ba", "sha256": "b8342edbecef9a182019a883f52bcbc7331e505ce238f6401fc4a4a95c8d7392"}, "downloads": -1, "filename": "graphite-blueflood-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b6b2bd9cd6783d3014672d49e564a3ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38977, "upload_time": "2016-01-29T19:45:32", "upload_time_iso_8601": "2016-01-29T19:45:32.942678Z", "url": "https://files.pythonhosted.org/packages/b3/8c/9afc0b969b98010252b88724f4f23a24659d92893fd4e55a5de76def7aa5/graphite-blueflood-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6b2bd9cd6783d3014672d49e564a3ba", "sha256": "b8342edbecef9a182019a883f52bcbc7331e505ce238f6401fc4a4a95c8d7392"}, "downloads": -1, "filename": "graphite-blueflood-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b6b2bd9cd6783d3014672d49e564a3ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38977, "upload_time": "2016-01-29T19:45:32", "upload_time_iso_8601": "2016-01-29T19:45:32.942678Z", "url": "https://files.pythonhosted.org/packages/b3/8c/9afc0b969b98010252b88724f4f23a24659d92893fd4e55a5de76def7aa5/graphite-blueflood-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:38 2020"}