{"info": {"author": "Dominik Gresch", "author_email": "greschd@gmx.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Framework :: AiiDA", "Framework :: Pytest", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Testing"], "description": "# aiida-pytest\n\nThis is a helper to enable testing AiiDA plugins with ``pytest``. The main purpose is to create a fixture which sets up a temporary AiiDA database and user, and simplify setting up the computers and calculations.\n\nTo get started, create a ``tests`` folder where your ``pytest`` tests will be located. In ``conftests.py``, you need to write\n\n```python\nfrom aiida_pytest import *\n```\n\nThis defines the ``configure`` and ``configure_with_daemon`` fixtures. To set up computers and codes for the test run, you need a ``config.yml`` file in the ``tests`` folder (and run ``pytest`` from there). The following example config file sets up ``localhost`` and the ``bands-inspect`` code:\n\n```\ncomputers:\n  localhost:\n    hostname: localhost\n    description: localhost\n    transport: local\n    scheduler: direct\n    work_directory: /tmp/test_aiida\n    prepend_text: 'unset PYTHONPATH'\n\ncodes:\n  bands_inspect:\n    description: bands_inspect code\n    default_plugin: bands_inspect.difference\n    remote_computer: localhost\n    remote_abspath: /home/a-dogres/.virtualenvs/bands-inspect/bin/bands-inspect\n```\n\n**Note:** ``aiida-pytest`` is not compatible with the ``aiida-xdist`` plugin, since the fixtures with ``scope=session`` are then called for each running worker.\n\n## Defining and running tests\n\nTests with ``aiida-pytest`` are defined and run exactly like \"regular\" ``pytest`` tests. If a test needs the AiiDA database, it should use the ``configure`` fixture. If the test also requires the Daemon to run, it should use the ``configure_with_daemon`` fixture. Note that, since certain AiiDA import statements require the database backend to be set, these imports should be done **inside** the test function.\n\nAfter the tests have run, the code will wait for you to press ``Enter`` before deleting the testing database and repository. This gives you the opportunity to manually inspect the final state. If you want to avoid this step (for example in a CI system), pass the ``--quiet-wipe`` flag to ``py.test``.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "pytest aiida workflows", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "aiida-pytest", "package_url": "https://pypi.org/project/aiida-pytest/", "platform": "", "project_url": "https://pypi.org/project/aiida-pytest/", "project_urls": null, "release_url": "https://pypi.org/project/aiida-pytest/0.1.0a6/", "requires_dist": null, "requires_python": "", "summary": "A module to simplify using pytest for AiiDA plugins.", "version": "0.1.0a6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aiida-pytest</h1>\n<p>This is a helper to enable testing AiiDA plugins with <code>pytest</code>. The main purpose is to create a fixture which sets up a temporary AiiDA database and user, and simplify setting up the computers and calculations.</p>\n<p>To get started, create a <code>tests</code> folder where your <code>pytest</code> tests will be located. In <code>conftests.py</code>, you need to write</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiida_pytest</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>This defines the <code>configure</code> and <code>configure_with_daemon</code> fixtures. To set up computers and codes for the test run, you need a <code>config.yml</code> file in the <code>tests</code> folder (and run <code>pytest</code> from there). The following example config file sets up <code>localhost</code> and the <code>bands-inspect</code> code:</p>\n<pre><code>computers:\n  localhost:\n    hostname: localhost\n    description: localhost\n    transport: local\n    scheduler: direct\n    work_directory: /tmp/test_aiida\n    prepend_text: 'unset PYTHONPATH'\n\ncodes:\n  bands_inspect:\n    description: bands_inspect code\n    default_plugin: bands_inspect.difference\n    remote_computer: localhost\n    remote_abspath: /home/a-dogres/.virtualenvs/bands-inspect/bin/bands-inspect\n</code></pre>\n<p><strong>Note:</strong> <code>aiida-pytest</code> is not compatible with the <code>aiida-xdist</code> plugin, since the fixtures with <code>scope=session</code> are then called for each running worker.</p>\n<h2>Defining and running tests</h2>\n<p>Tests with <code>aiida-pytest</code> are defined and run exactly like \"regular\" <code>pytest</code> tests. If a test needs the AiiDA database, it should use the <code>configure</code> fixture. If the test also requires the Daemon to run, it should use the <code>configure_with_daemon</code> fixture. Note that, since certain AiiDA import statements require the database backend to be set, these imports should be done <strong>inside</strong> the test function.</p>\n<p>After the tests have run, the code will wait for you to press <code>Enter</code> before deleting the testing database and repository. This gives you the opportunity to manually inspect the final state. If you want to avoid this step (for example in a CI system), pass the <code>--quiet-wipe</code> flag to <code>py.test</code>.</p>\n\n          </div>"}, "last_serial": 6063661, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "8f4ac786d2bc7374d26191acf0added1", "sha256": "d08e17e5f8e78e3081621d531253a4a15ca3c0059acda8e5d9d830a72989c70d"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "8f4ac786d2bc7374d26191acf0added1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6189, "upload_time": "2019-01-21T10:10:42", "upload_time_iso_8601": "2019-01-21T10:10:42.303590Z", "url": "https://files.pythonhosted.org/packages/fe/fb/f527da8929bfa810ed5ac19d5fb81a299e1de49650ce4a4e66ca0ade0bee/aiida-pytest-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "20ecd2415eb86d6b872771f8e5f6d655", "sha256": "1e08b1aec57d50e2f19017fbecf63cd482e5f82d99fc14c7c730ed3c770a9a6e"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "20ecd2415eb86d6b872771f8e5f6d655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6242, "upload_time": "2019-01-21T19:43:26", "upload_time_iso_8601": "2019-01-21T19:43:26.340622Z", "url": "https://files.pythonhosted.org/packages/cf/ab/8aac14a977e9cd6348fa74c86eedb0fe5d9753caf25ca5983a1129be56e3/aiida-pytest-0.1.0a2.tar.gz", "yanked": false}], "0.1.0a3": [{"comment_text": "", "digests": {"md5": "5c7207638d7ddab189021027b8db20e3", "sha256": "69eee617bf85b1ad8df90c7dfeeab45992b6f0eaca8556f23583351d4f8be7a7"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a3.tar.gz", "has_sig": false, "md5_digest": "5c7207638d7ddab189021027b8db20e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6252, "upload_time": "2019-01-21T21:51:38", "upload_time_iso_8601": "2019-01-21T21:51:38.940720Z", "url": "https://files.pythonhosted.org/packages/a1/3f/0dc67c8bb054c4c39f0d4b9fe1a77cd4433b4c8a0c203dd09c387f1c11a1/aiida-pytest-0.1.0a3.tar.gz", "yanked": false}], "0.1.0a4": [{"comment_text": "", "digests": {"md5": "069b0b3060167a1acb9fd77b71f89222", "sha256": "a3fc8299b1b29305b22b45e0fbcee4fe920e5fe5f20a9aaf8d703597c156b857"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a4.tar.gz", "has_sig": false, "md5_digest": "069b0b3060167a1acb9fd77b71f89222", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6601, "upload_time": "2019-09-27T09:23:21", "upload_time_iso_8601": "2019-09-27T09:23:21.410783Z", "url": "https://files.pythonhosted.org/packages/05/fd/e930e2f17456c5fff91a9a26aa198df9530a40cb29e9c078e2185dbcd904/aiida-pytest-0.1.0a4.tar.gz", "yanked": false}], "0.1.0a5": [{"comment_text": "", "digests": {"md5": "40827b10131f9b4998c815fb3f51bb94", "sha256": "380f84b5daaf55467e9934a48002bd6d5b427e578b551afa2c206914f63ebdff"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a5.tar.gz", "has_sig": false, "md5_digest": "40827b10131f9b4998c815fb3f51bb94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6630, "upload_time": "2019-10-28T16:05:43", "upload_time_iso_8601": "2019-10-28T16:05:43.812667Z", "url": "https://files.pythonhosted.org/packages/90/7c/59017b51e747648081a507b4b55ee93a1897a4705c5ec0045bb122cc4ee4/aiida-pytest-0.1.0a5.tar.gz", "yanked": false}], "0.1.0a6": [{"comment_text": "", "digests": {"md5": "d484544a2f531d2b8e2c429503ad0d6f", "sha256": "d7f7866272aa8b7580fa96238644f30cf904e9f131c22e82c44a4a53f1adc5ec"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a6.tar.gz", "has_sig": false, "md5_digest": "d484544a2f531d2b8e2c429503ad0d6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6622, "upload_time": "2019-11-01T13:23:15", "upload_time_iso_8601": "2019-11-01T13:23:15.806163Z", "url": "https://files.pythonhosted.org/packages/86/5c/c676f932bea1527128a297beda742f22c4aa8d95cc7bee294b4f2319dc56/aiida-pytest-0.1.0a6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d484544a2f531d2b8e2c429503ad0d6f", "sha256": "d7f7866272aa8b7580fa96238644f30cf904e9f131c22e82c44a4a53f1adc5ec"}, "downloads": -1, "filename": "aiida-pytest-0.1.0a6.tar.gz", "has_sig": false, "md5_digest": "d484544a2f531d2b8e2c429503ad0d6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6622, "upload_time": "2019-11-01T13:23:15", "upload_time_iso_8601": "2019-11-01T13:23:15.806163Z", "url": "https://files.pythonhosted.org/packages/86/5c/c676f932bea1527128a297beda742f22c4aa8d95cc7bee294b4f2319dc56/aiida-pytest-0.1.0a6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:00 2020"}