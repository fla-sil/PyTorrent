{"info": {"author": "Alessandro Pisa", "author_email": "alessandro.pisa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "[![image](https://travis-ci.org/collective/zpretty.svg?branch=master)](https://travis-ci.org/collective/zpretty/)\n\n[![image](https://coveralls.io/repos/github/collective/zpretty/badge.svg?branch=master)](https://coveralls.io/github/collective/zpretty?branch=master)\n\nA tool to format in a **very opinionated** way HTML, XML and text\ncontaining XML snippets.\n\nIt satisfies a primary need: decrease the pain of diffing HTML/XML.\n\nFor this reason `zpretty` formats the markup following these rules of\nthumb:\n\n- maximize the vertical space/decrease the line length\n- attributes should be sorted consistently\n- attribute sorting is first semantic and then alphabetic\n\nThis tool understands the [TAL\nlanguage](https://en.wikipedia.org/wiki/Template_Attribute_Language) and\nhas some features dedicated to it.\n\nThis tool is not a linter! If you are looking for linters safe bets are\n[Tidy](http://www.html-tidy.org/) and\n[xmllint](http://xmlsoft.org/xmllint.html).\n\nYou may have parsing problems! `zpretty` will close for you some known\nself closing tags, like `input` and `img`, that are allowed to be open\nin HTML.\n\n`zpretty` is not clever enough to understand correctly valueless\nattributes! Some work is ongoing, but it works best with \\\"normal\\\"\nattributes.\n\nLack of feature/slowness are a known issue. For the moment the\ndevelopment focused in having a working tool. So it works fast enough:\nless than a second to format a \\~100k file. New features are planned and\nalso huge perfomance boost can be easily obtained. Anyway `zpretty` is\nnot your option for formatting large files (\\> 1 MB).\n\nSee [TODO section](#todo_section) to know what is forecast for the\nfuture.\n\nThe source code and the issue tracker are hosted on\n[GitHub](https://github.com/collective/zpretty).\n\n# INSTALL\n\nThe suggested instal method is using\n[pip](https://pypi.python.org/pypi/pip/):\n\n    $ pip install zpretty\n\nThe latest release of `zpretty` requires Python3. If you need to use\nPython2.7 use `zpretty` 0.9.x.\n\n# USAGE\n\nBasic usage:\n\n    zpretty [-h] [--encoding ENCODING] [-i] [-x] [-z] [file [file ...]]\n\n    positional arguments:\n      file                 The list of files to prettify (defaults to stdin)\n\n    optional arguments:\n      -h, --help           show this help message and exit\n      --encoding ENCODING  The file encoding (defaults to utf8)\n      -i, --inplace        Format files in place (overwrite existing file)\n      -x, --xml            Threat the input file(s) as XML\n      -z, --zcml           Threat the input file(s) as XML. Follow the ZCML\n                           styleguide\n\nWithout parameters constraining the file type (e.g. [-x]{.title-ref},\n[-z]{.title-ref}, \\...) `zpretty` will try to guess the right options\nfor you.\n\nExample:\n\n    zpretty hello_world.html\n\n# DEVELOP\n\n    $ git clone ...\n    $ cd zpretty\n    $ make\n\n# RUNNING TESTS\n\n    $ make test\n\n# TODO\n\n- [ ] Valueless attributes are not allowed in XML\n- [ ] Attributes are aligned in a strange way if previous sibling has no spaces\n- [ ] TBD: Style attributes should be multiline\n\n# Changelog\n\n## 1.0.2 (2019-11-03)\n\n- In Python3.8 quotes in attributes were escaped\n- Fix output again on file and stdout [ale-rt]\n\n## 1.0.1 (2019-10-28)\n\n- Fix output on file [ale-rt]\n\n## 1.0.0 (2019-10-27)\n\n- Support Python3 only [ale-rt]\n\n## 0.9.3 (2017-05-06)\n\n- Last release that supports Python2.7\n- Fix text method\n- Preserve entities in text\n- Added an `--encoding` parameter\n- Added an `--xml` parameter to force xml parsing\n- Choose the better parser according to the given filename if no parser is forced\n- Process stdin if `-` is in the arguments or no arguments are passed [ale-rt]\n\n## 0.9.2 (2017-02-27)\n\n- Small modification for the order of the zcml attributes\n- Auto add a new line to the end of the prettified files\n- Self heal open self closing tag. [ale-rt]\n\n## 0.9.1.1 (2017-02-18)\n\n- Fixed bad release. [ale-rt]\n\n## 0.9.1 (2017-02-18)\n\n- Initial support for zcml style guide (\\#3). [ale-rt]\n\n## 0.9.0 (2017-02-11)\n\n- Initial release. [ale-rt]", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/zpretty", "keywords": "Formatter,HTML,Prettifier,Pretty print,TAL,XML,ZPT", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "zpretty", "package_url": "https://pypi.org/project/zpretty/", "platform": "", "project_url": "https://pypi.org/project/zpretty/", "project_urls": {"Homepage": "https://github.com/collective/zpretty"}, "release_url": "https://pypi.org/project/zpretty/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "An opinionated HTML/XML soup formatter", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/collective/zpretty/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5ce4594c96437fda6f8f681c87a1a748c2b72fe/68747470733a2f2f7472617669732d63692e6f72672f636f6c6c6563746976652f7a7072657474792e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><a href=\"https://coveralls.io/github/collective/zpretty?branch=master\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac85e05302ccf6f0f764d692f6ae7a88d9c27a93/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f636f6c6c6563746976652f7a7072657474792f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A tool to format in a <strong>very opinionated</strong> way HTML, XML and text\ncontaining XML snippets.</p>\n<p>It satisfies a primary need: decrease the pain of diffing HTML/XML.</p>\n<p>For this reason <code>zpretty</code> formats the markup following these rules of\nthumb:</p>\n<ul>\n<li>maximize the vertical space/decrease the line length</li>\n<li>attributes should be sorted consistently</li>\n<li>attribute sorting is first semantic and then alphabetic</li>\n</ul>\n<p>This tool understands the <a href=\"https://en.wikipedia.org/wiki/Template_Attribute_Language\" rel=\"nofollow\">TAL\nlanguage</a> and\nhas some features dedicated to it.</p>\n<p>This tool is not a linter! If you are looking for linters safe bets are\n<a href=\"http://www.html-tidy.org/\" rel=\"nofollow\">Tidy</a> and\n<a href=\"http://xmlsoft.org/xmllint.html\" rel=\"nofollow\">xmllint</a>.</p>\n<p>You may have parsing problems! <code>zpretty</code> will close for you some known\nself closing tags, like <code>input</code> and <code>img</code>, that are allowed to be open\nin HTML.</p>\n<p><code>zpretty</code> is not clever enough to understand correctly valueless\nattributes! Some work is ongoing, but it works best with \"normal\"\nattributes.</p>\n<p>Lack of feature/slowness are a known issue. For the moment the\ndevelopment focused in having a working tool. So it works fast enough:\nless than a second to format a ~100k file. New features are planned and\nalso huge perfomance boost can be easily obtained. Anyway <code>zpretty</code> is\nnot your option for formatting large files (&gt; 1 MB).</p>\n<p>See <a href=\"#todo_section\" rel=\"nofollow\">TODO section</a> to know what is forecast for the\nfuture.</p>\n<p>The source code and the issue tracker are hosted on\n<a href=\"https://github.com/collective/zpretty\" rel=\"nofollow\">GitHub</a>.</p>\n<h1>INSTALL</h1>\n<p>The suggested instal method is using\n<a href=\"https://pypi.python.org/pypi/pip/\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>$ pip install zpretty\n</code></pre>\n<p>The latest release of <code>zpretty</code> requires Python3. If you need to use\nPython2.7 use <code>zpretty</code> 0.9.x.</p>\n<h1>USAGE</h1>\n<p>Basic usage:</p>\n<pre><code>zpretty [-h] [--encoding ENCODING] [-i] [-x] [-z] [file [file ...]]\n\npositional arguments:\n  file                 The list of files to prettify (defaults to stdin)\n\noptional arguments:\n  -h, --help           show this help message and exit\n  --encoding ENCODING  The file encoding (defaults to utf8)\n  -i, --inplace        Format files in place (overwrite existing file)\n  -x, --xml            Threat the input file(s) as XML\n  -z, --zcml           Threat the input file(s) as XML. Follow the ZCML\n                       styleguide\n</code></pre>\n<p>Without parameters constraining the file type (e.g. [-x]{.title-ref},\n[-z]{.title-ref}, ...) <code>zpretty</code> will try to guess the right options\nfor you.</p>\n<p>Example:</p>\n<pre><code>zpretty hello_world.html\n</code></pre>\n<h1>DEVELOP</h1>\n<pre><code>$ git clone ...\n$ cd zpretty\n$ make\n</code></pre>\n<h1>RUNNING TESTS</h1>\n<pre><code>$ make test\n</code></pre>\n<h1>TODO</h1>\n<ul>\n<li>[ ] Valueless attributes are not allowed in XML</li>\n<li>[ ] Attributes are aligned in a strange way if previous sibling has no spaces</li>\n<li>[ ] TBD: Style attributes should be multiline</li>\n</ul>\n<h1>Changelog</h1>\n<h2>1.0.2 (2019-11-03)</h2>\n<ul>\n<li>In Python3.8 quotes in attributes were escaped</li>\n<li>Fix output again on file and stdout [ale-rt]</li>\n</ul>\n<h2>1.0.1 (2019-10-28)</h2>\n<ul>\n<li>Fix output on file [ale-rt]</li>\n</ul>\n<h2>1.0.0 (2019-10-27)</h2>\n<ul>\n<li>Support Python3 only [ale-rt]</li>\n</ul>\n<h2>0.9.3 (2017-05-06)</h2>\n<ul>\n<li>Last release that supports Python2.7</li>\n<li>Fix text method</li>\n<li>Preserve entities in text</li>\n<li>Added an <code>--encoding</code> parameter</li>\n<li>Added an <code>--xml</code> parameter to force xml parsing</li>\n<li>Choose the better parser according to the given filename if no parser is forced</li>\n<li>Process stdin if <code>-</code> is in the arguments or no arguments are passed [ale-rt]</li>\n</ul>\n<h2>0.9.2 (2017-02-27)</h2>\n<ul>\n<li>Small modification for the order of the zcml attributes</li>\n<li>Auto add a new line to the end of the prettified files</li>\n<li>Self heal open self closing tag. [ale-rt]</li>\n</ul>\n<h2>0.9.1.1 (2017-02-18)</h2>\n<ul>\n<li>Fixed bad release. [ale-rt]</li>\n</ul>\n<h2>0.9.1 (2017-02-18)</h2>\n<ul>\n<li>Initial support for zcml style guide (#3). [ale-rt]</li>\n</ul>\n<h2>0.9.0 (2017-02-11)</h2>\n<ul>\n<li>Initial release. [ale-rt]</li>\n</ul>\n\n          </div>"}, "last_serial": 6070504, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "902af4cf73881901362e860b8c71be8e", "sha256": "8f79bf0453e9865ff764e687597c78261a25e3c202344c5c188cc2b9efa4cb15"}, "downloads": -1, "filename": "zpretty-0.9.0.tar.gz", "has_sig": false, "md5_digest": "902af4cf73881901362e860b8c71be8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22262, "upload_time": "2017-02-11T13:50:24", "upload_time_iso_8601": "2017-02-11T13:50:24.487398Z", "url": "https://files.pythonhosted.org/packages/42/46/23873aac8c26b8a9c2ae69ad595a2e5b5a8fbeccc05de669e6dbea06030b/zpretty-0.9.0.tar.gz", "yanked": false}], "0.9.1": [], "0.9.1.1": [{"comment_text": "", "digests": {"md5": "886e23c1917443dc4713111201b31ac1", "sha256": "4518d8732c879e92ec41c9667910cdea9b8e8f81ab19dad50848480749fb75b4"}, "downloads": -1, "filename": "zpretty-0.9.1.1.tar.gz", "has_sig": false, "md5_digest": "886e23c1917443dc4713111201b31ac1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14783, "upload_time": "2017-02-18T11:07:48", "upload_time_iso_8601": "2017-02-18T11:07:48.457420Z", "url": "https://files.pythonhosted.org/packages/a2/22/24045b2a260bfdfb4bf76116dbe1300456daa8b8c4ce1f6f0569931118bd/zpretty-0.9.1.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "9431747f7172b2e118fad7855f05948f", "sha256": "9809e96485a5e3ff3fe87ba3a88b510cf3e9e3e6c186e78f00317e152f2a5537"}, "downloads": -1, "filename": "zpretty-0.9.2.tar.gz", "has_sig": false, "md5_digest": "9431747f7172b2e118fad7855f05948f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15166, "upload_time": "2017-02-27T21:35:17", "upload_time_iso_8601": "2017-02-27T21:35:17.152111Z", "url": "https://files.pythonhosted.org/packages/7b/d6/03f973043950d5ee78ab01ff80bb52cf42737a3048c0cc03a7855301d375/zpretty-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "5a9acf5e746b4e2e0d50a55c9601f15e", "sha256": "13cdf47b36b6a66207a2a730f737565480f94324a54281f2dbaf88da368276d8"}, "downloads": -1, "filename": "zpretty-0.9.3.tar.gz", "has_sig": false, "md5_digest": "5a9acf5e746b4e2e0d50a55c9601f15e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17160, "upload_time": "2017-05-06T14:01:39", "upload_time_iso_8601": "2017-05-06T14:01:39.826007Z", "url": "https://files.pythonhosted.org/packages/48/18/012d58a0eaae8dd2bbf4c3352034e244ca9bd7552bded3b7c5e4e6d0ddd5/zpretty-0.9.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "fe1622aa2dccf2bf829ba55e241ff66e", "sha256": "2c15c457e4b2ebb7902fa8716542266564a24472275c8a24f9088efeb9d6e464"}, "downloads": -1, "filename": "zpretty-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fe1622aa2dccf2bf829ba55e241ff66e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17566, "upload_time": "2019-10-27T14:21:54", "upload_time_iso_8601": "2019-10-27T14:21:54.960426Z", "url": "https://files.pythonhosted.org/packages/38/be/73a3fe2c2f2d406e078ec8eaae33c7fa70fdaa275ef8617ecc47cdc3c311/zpretty-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "85ce3f1f43972131e64db0dab1162df5", "sha256": "ff792685987ae18adae3b61343f2c0e4072dce85051b4a890dde3030d6df1ef5"}, "downloads": -1, "filename": "zpretty-1.0.1.tar.gz", "has_sig": false, "md5_digest": "85ce3f1f43972131e64db0dab1162df5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17590, "upload_time": "2019-10-28T13:34:50", "upload_time_iso_8601": "2019-10-28T13:34:50.908658Z", "url": "https://files.pythonhosted.org/packages/3a/12/42cac0b6327b00b1dd74ebfaa34ae3e6dd00d1c2575fc5e3cf5529ce455e/zpretty-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "77c1d107ffd9b325a6a18a67f2aa0dc9", "sha256": "209b5411c0624a63090027b34086c014f9f0384697892657527d5c19ed0bfba8"}, "downloads": -1, "filename": "zpretty-1.0.2.tar.gz", "has_sig": false, "md5_digest": "77c1d107ffd9b325a6a18a67f2aa0dc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17869, "upload_time": "2019-11-03T09:40:13", "upload_time_iso_8601": "2019-11-03T09:40:13.393996Z", "url": "https://files.pythonhosted.org/packages/db/79/7cfb3c0b2a8e6a06e972532a2f0386f0fdd1679d903d30c18c65bd8d6d43/zpretty-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77c1d107ffd9b325a6a18a67f2aa0dc9", "sha256": "209b5411c0624a63090027b34086c014f9f0384697892657527d5c19ed0bfba8"}, "downloads": -1, "filename": "zpretty-1.0.2.tar.gz", "has_sig": false, "md5_digest": "77c1d107ffd9b325a6a18a67f2aa0dc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17869, "upload_time": "2019-11-03T09:40:13", "upload_time_iso_8601": "2019-11-03T09:40:13.393996Z", "url": "https://files.pythonhosted.org/packages/db/79/7cfb3c0b2a8e6a06e972532a2f0386f0fdd1679d903d30c18c65bd8d6d43/zpretty-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:23 2020"}