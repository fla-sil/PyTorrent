{"info": {"author": "Eva Charlotte Mayer, Hendrik Roehm", "author_email": "eva-charlotte.mayer@posteo.de, git@roehm.ws", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "STLInspector\n============\n\nSystematic validation of Signal Temporal Logic (STL) specifications\nagainst informal textual requirements.\n\n--------------\n\nThe goal of\n`STLInspector <http://github.com/STLInspector/STLInspector>`__ is to\nidentify typical faults that occur in the process of formalizing\nrequirements by mutating a candidate specification.\n`STLInspector <http://github.com/STLInspector/STLInspector>`__ computes\na series of representative signals that enables a requirements engineer\nto validate a candidate specification against all its mutated variants,\nthus achieving full mutation coverage. By visual inspection of the\nsignals via a web-based GUI, an engineer can obtain high confidence in\nthe correctness of the formalization - even if she is not familiar with\nSTL. `STLInspector <http://github.com/STLInspector/STLInspector>`__\nmakes the assessment of formal specifications accessible to a wide range\nof developers, hence contributes to leveraging the use of formal\nspecifications and computer-aided verification in practice.\n\nInstallation\n------------\n\n`STLInspector <http://github.com/STLInspector/STLInspector>`__ depends\non `Python 2 <http://www.python.org>`__, `ANTLR\nv4 <http://github.com/antlr/antlr4>`__, the theorem prover\n`Z3 <http://github.com/Z3Prover/z3>`__ with Python bindings and the\nPython packages `Flask <http://flask.pocoo.org/>`__ and\n`Flask-Assets <https://flask-assets.readthedocs.io/en/latest/>`__.\nAdditionally, the GUI depends on\n`Bootstrap <http://getbootstrap.com/>`__,\n`jQuery <https://jquery.com/>`__, `jQuery UI <https://jqueryui.com/>`__,\n`Chart.js <http://www.chartjs.org/>`__, and\n`handlebars <http://handlebarsjs.com/>`__.\n\nInstall the Python 2 >= 2.7.9 using your package manager or download it\nfrom http://www.python.org/downloads. This also provides the Python\npackage manager pip.\n`STLInspector <http://github.com/STLInspector/STLInspector>`__ is\nprovided as an `python\npackage <https://pypi.python.org/pypi/STLInspector>`__ and can be\ninstalled using pip:\n\n.. code:: bash\n\n   pip install STLInspector\n\nNote that the required javascript frameworks are not installed locally,\nbut loaded over an internet connection. This comes with the restriction\nthat you can used the GUI with an internet connection only. Due to\nsafety reasons, network access to the GUI is forbidden and the GUI is\nonly available via localhost.\n\nTutorial\n--------\n\nThis is a tutorial that demonstrates how to use\n`STLInspector <http://github.com/STLInspector/STLInspector>`__. It shows\nthe standard workflow of the program with an example requirement. For a\ndeeper understanding consider reading the\n`documentation <https://github.com/STLInspector/STLInspector/tree/master/STLInspector/doc>`__.\n\n1.  Start the server by executing ``stlinspector .``.\n2.  Open a browser and go to http://localhost:5000.\n3.  Press the *new requirements project* button, input the title\n    *tutorial requirements project* and press the *add* button. The\n    project overview opens.\n4.  In the *textual requirements* block press the *edit* button and\n    input:\n\n       The velocity should be higher than 5km/h from second 1 to second\n       3.\n\n5.  In the *current STL candidate* block press the *edit* button and\n    input:\n\n       F[1,3] velocity > 5\n\n6.  Under *visual inspection results* replace *Name* with *Test User*\n    and press *new visual inspection*.\n7.  The textual requirement and a test signal is shown. Evaluate the\n    textual requirement on the test signal and press the *yes* or *no*\n    button. Do this until no test signals are shown any more. Then press\n    *go back to project overview*.\n8.  To see the evaluation results, press the *show results* button.\n    Since in our example the STL candidate is wrong, some of your\n    evaluation results should differ from the STL candidate results.\n9.  Change the STL candidate to:\n\n       G[1,3] velocity > 5\n\n10. Redo the visual inspection on the new STL candidate.\n11. You should not get conflicting evaluation results for the STL\n    candidate now.\n12. Press the save button and the project is saved to\n    ``tutorial_requirements_project.stlinspector`` in the current\n    directory. Congratulations, you validated the STL candidate against\n    the textual requirement!\n\nDocumentation\n-------------\n\nFurther information can be found in the\n`documentation <https://github.com/STLInspector/STLInspector/tree/master/STLInspector/doc>`__\nthat details the use of the web-based GUI, the parser and the mutation\noperators. The GUI provides a html version of the documentation.\n\nContributing\n------------\n\nWe greatly appreciate fixes and new features for\n`STLInspector <http://github.com/STLInspector/STLInspector>`__. All\ncontributions to this project should be sent as pull requests on github.\n`STLInspector <http://github.com/STLInspector/STLInspector>`__ uses\n*semantic versioning* as described in\n`packaging.python.org <https://packaging.python.org/distributing/#choosing-a-versioning-scheme>`__.\nPlease run test suite ``python setup.py test`` before requesting a pull.\n\nLicence\n-------\n\n`STLInspector <http://github.com/STLInspector/STLInspector>`__ is\nreleased under the `Apache Licence\n2.0 <https://github.com/STLInspector/STLInspector/blob/master/LICENSE>`__.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/STLInspector/STLInspector", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "STLInspector", "package_url": "https://pypi.org/project/STLInspector/", "platform": "", "project_url": "https://pypi.org/project/STLInspector/", "project_urls": {"Homepage": "https://github.com/STLInspector/STLInspector"}, "release_url": "https://pypi.org/project/STLInspector/1.1.4/", "requires_dist": null, "requires_python": "", "summary": "Systematic validation of Signal Temporal Logic (STL) specifications against informal textual requirements.", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Systematic validation of Signal Temporal Logic (STL) specifications\nagainst informal textual requirements.</p>\n<hr class=\"docutils\">\n<p>The goal of\n<a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a> is to\nidentify typical faults that occur in the process of formalizing\nrequirements by mutating a candidate specification.\n<a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a> computes\na series of representative signals that enables a requirements engineer\nto validate a candidate specification against all its mutated variants,\nthus achieving full mutation coverage. By visual inspection of the\nsignals via a web-based GUI, an engineer can obtain high confidence in\nthe correctness of the formalization - even if she is not familiar with\nSTL. <a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a>\nmakes the assessment of formal specifications accessible to a wide range\nof developers, hence contributes to leveraging the use of formal\nspecifications and computer-aided verification in practice.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a> depends\non <a href=\"http://www.python.org\" rel=\"nofollow\">Python 2</a>, <a href=\"http://github.com/antlr/antlr4\" rel=\"nofollow\">ANTLR\nv4</a>, the theorem prover\n<a href=\"http://github.com/Z3Prover/z3\" rel=\"nofollow\">Z3</a> with Python bindings and the\nPython packages <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> and\n<a href=\"https://flask-assets.readthedocs.io/en/latest/\" rel=\"nofollow\">Flask-Assets</a>.\nAdditionally, the GUI depends on\n<a href=\"http://getbootstrap.com/\" rel=\"nofollow\">Bootstrap</a>,\n<a href=\"https://jquery.com/\" rel=\"nofollow\">jQuery</a>, <a href=\"https://jqueryui.com/\" rel=\"nofollow\">jQuery UI</a>,\n<a href=\"http://www.chartjs.org/\" rel=\"nofollow\">Chart.js</a>, and\n<a href=\"http://handlebarsjs.com/\" rel=\"nofollow\">handlebars</a>.</p>\n<p>Install the Python 2 &gt;= 2.7.9 using your package manager or download it\nfrom <a href=\"http://www.python.org/downloads\" rel=\"nofollow\">http://www.python.org/downloads</a>. This also provides the Python\npackage manager pip.\n<a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a> is\nprovided as an <a href=\"https://pypi.python.org/pypi/STLInspector\" rel=\"nofollow\">python\npackage</a> and can be\ninstalled using pip:</p>\n<pre>pip install STLInspector\n</pre>\n<p>Note that the required javascript frameworks are not installed locally,\nbut loaded over an internet connection. This comes with the restriction\nthat you can used the GUI with an internet connection only. Due to\nsafety reasons, network access to the GUI is forbidden and the GUI is\nonly available via localhost.</p>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<p>This is a tutorial that demonstrates how to use\n<a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a>. It shows\nthe standard workflow of the program with an example requirement. For a\ndeeper understanding consider reading the\n<a href=\"https://github.com/STLInspector/STLInspector/tree/master/STLInspector/doc\" rel=\"nofollow\">documentation</a>.</p>\n<ol>\n<li><p>Start the server by executing <tt>stlinspector .</tt>.</p>\n</li>\n<li><p>Open a browser and go to <a href=\"http://localhost:5000\" rel=\"nofollow\">http://localhost:5000</a>.</p>\n</li>\n<li><p>Press the <em>new requirements project</em> button, input the title\n<em>tutorial requirements project</em> and press the <em>add</em> button. The\nproject overview opens.</p>\n</li>\n<li><p>In the <em>textual requirements</em> block press the <em>edit</em> button and\ninput:</p>\n<blockquote>\n<p>The velocity should be higher than 5km/h from second 1 to second\n3.</p>\n</blockquote>\n</li>\n<li><p>In the <em>current STL candidate</em> block press the <em>edit</em> button and\ninput:</p>\n<blockquote>\n<p>F[1,3] velocity &gt; 5</p>\n</blockquote>\n</li>\n<li><p>Under <em>visual inspection results</em> replace <em>Name</em> with <em>Test User</em>\nand press <em>new visual inspection</em>.</p>\n</li>\n<li><p>The textual requirement and a test signal is shown. Evaluate the\ntextual requirement on the test signal and press the <em>yes</em> or <em>no</em>\nbutton. Do this until no test signals are shown any more. Then press\n<em>go back to project overview</em>.</p>\n</li>\n<li><p>To see the evaluation results, press the <em>show results</em> button.\nSince in our example the STL candidate is wrong, some of your\nevaluation results should differ from the STL candidate results.</p>\n</li>\n<li><p>Change the STL candidate to:</p>\n<blockquote>\n<p>G[1,3] velocity &gt; 5</p>\n</blockquote>\n</li>\n<li><p>Redo the visual inspection on the new STL candidate.</p>\n</li>\n<li><p>You should not get conflicting evaluation results for the STL\ncandidate now.</p>\n</li>\n<li><p>Press the save button and the project is saved to\n<tt>tutorial_requirements_project.stlinspector</tt> in the current\ndirectory. Congratulations, you validated the STL candidate against\nthe textual requirement!</p>\n</li>\n</ol>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Further information can be found in the\n<a href=\"https://github.com/STLInspector/STLInspector/tree/master/STLInspector/doc\" rel=\"nofollow\">documentation</a>\nthat details the use of the web-based GUI, the parser and the mutation\noperators. The GUI provides a html version of the documentation.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>We greatly appreciate fixes and new features for\n<a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a>. All\ncontributions to this project should be sent as pull requests on github.\n<a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a> uses\n<em>semantic versioning</em> as described in\n<a href=\"https://packaging.python.org/distributing/#choosing-a-versioning-scheme\" rel=\"nofollow\">packaging.python.org</a>.\nPlease run test suite <tt>python setup.py test</tt> before requesting a pull.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p><a href=\"http://github.com/STLInspector/STLInspector\" rel=\"nofollow\">STLInspector</a> is\nreleased under the <a href=\"https://github.com/STLInspector/STLInspector/blob/master/LICENSE\" rel=\"nofollow\">Apache Licence\n2.0</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 5908798, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "02887c9dbc813488671c359deee11680", "sha256": "9796978a17ca12b87c4dca576493fed353388365bbe067c819b46091c6ffadf5"}, "downloads": -1, "filename": "STLInspector-1.0.0.tar.gz", "has_sig": false, "md5_digest": "02887c9dbc813488671c359deee11680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135563, "upload_time": "2017-04-04T14:49:07", "upload_time_iso_8601": "2017-04-04T14:49:07.315201Z", "url": "https://files.pythonhosted.org/packages/ef/e9/8d0e5fa9049a9f9bf441242a535735331ac7286757dfeb8895de5bff1058/STLInspector-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1e0ffb9ac77643b307ad040f0233164b", "sha256": "163b78c65e874f7de25c5746512df01918b188608f2e280c43b2d00e5afb1efa"}, "downloads": -1, "filename": "STLInspector-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1e0ffb9ac77643b307ad040f0233164b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135602, "upload_time": "2017-04-04T15:11:08", "upload_time_iso_8601": "2017-04-04T15:11:08.754719Z", "url": "https://files.pythonhosted.org/packages/87/d8/4dc83457465bafb556a4ca0b9be2a4f00ec9b484eba124b920773de760dd/STLInspector-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b9ab416a28eefdd71c15818f12ccadab", "sha256": "87c755d98f474ec69f492a3318a4dfcfa7325b4c10084d686904be765d392970"}, "downloads": -1, "filename": "STLInspector-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b9ab416a28eefdd71c15818f12ccadab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137686, "upload_time": "2017-05-14T15:26:57", "upload_time_iso_8601": "2017-05-14T15:26:57.019946Z", "url": "https://files.pythonhosted.org/packages/58/7f/d44b207d296c680782baadf73a504ed8c40795da0ddd33f1b8ef4cff40a9/STLInspector-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "79056491c36a0c73f0c2d9115905ec5c", "sha256": "979f8c9e2c8c3481874102f40bb6f3a60d80461f0b3d40b40651004115d493db"}, "downloads": -1, "filename": "STLInspector-1.1.1.tar.gz", "has_sig": false, "md5_digest": "79056491c36a0c73f0c2d9115905ec5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139013, "upload_time": "2017-05-14T16:02:51", "upload_time_iso_8601": "2017-05-14T16:02:51.314691Z", "url": "https://files.pythonhosted.org/packages/3d/32/6bf06ffc71aef73f859deb73a420b1c6d8148d608b5e4a3d5815180bf34c/STLInspector-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "154fe2f5d06262bd68cdbb0b04cf949e", "sha256": "2a4c691fe186d0431c0c5b2b9730625809021cf66583e53f001474dff84c36ff"}, "downloads": -1, "filename": "STLInspector-1.1.2.tar.gz", "has_sig": false, "md5_digest": "154fe2f5d06262bd68cdbb0b04cf949e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139021, "upload_time": "2017-05-14T21:38:34", "upload_time_iso_8601": "2017-05-14T21:38:34.939875Z", "url": "https://files.pythonhosted.org/packages/23/b6/e6b554b9af1d56bf6b59569557db76305689109f71b6c8d09f5cc4b37ce7/STLInspector-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "3e62c9fe421fbe89428fc93020305882", "sha256": "df066cb45008f25c57766235a6ad266c67096891ad60aa25af4ec89a96bf755c"}, "downloads": -1, "filename": "STLInspector-1.1.3.tar.gz", "has_sig": false, "md5_digest": "3e62c9fe421fbe89428fc93020305882", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104472, "upload_time": "2019-02-03T18:56:00", "upload_time_iso_8601": "2019-02-03T18:56:00.608756Z", "url": "https://files.pythonhosted.org/packages/c7/25/6cd5e210760d642e1a8cbd9185f738839377926ed1bb7aaa402ef44c7738/STLInspector-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "f973ab2a335dc7334bbdbe0527817d05", "sha256": "10b69fcb4f2a2a7ecebd6515893fc55a3fb651a4f0b7e21a96a6b85eddbf275c"}, "downloads": -1, "filename": "STLInspector-1.1.4.tar.gz", "has_sig": false, "md5_digest": "f973ab2a335dc7334bbdbe0527817d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130047, "upload_time": "2019-09-30T20:25:43", "upload_time_iso_8601": "2019-09-30T20:25:43.399079Z", "url": "https://files.pythonhosted.org/packages/ff/3f/4e4cf7664947fadcb5656d3cb8b747022bc3065cbe5a736583a9e48dc560/STLInspector-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f973ab2a335dc7334bbdbe0527817d05", "sha256": "10b69fcb4f2a2a7ecebd6515893fc55a3fb651a4f0b7e21a96a6b85eddbf275c"}, "downloads": -1, "filename": "STLInspector-1.1.4.tar.gz", "has_sig": false, "md5_digest": "f973ab2a335dc7334bbdbe0527817d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130047, "upload_time": "2019-09-30T20:25:43", "upload_time_iso_8601": "2019-09-30T20:25:43.399079Z", "url": "https://files.pythonhosted.org/packages/ff/3f/4e4cf7664947fadcb5656d3cb8b747022bc3065cbe5a736583a9e48dc560/STLInspector-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:51 2020"}