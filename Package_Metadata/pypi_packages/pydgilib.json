{"info": {"author": "Erik Wouters", "author_email": "ehwo@kth.se", "bugtrack_url": null, "classifiers": [], "description": "Pydgilib provides python bindings for Atmel\u00c2\u00ae Data Gateway Interface (DGI) devices.\nSee the `Data Gateway Interface user guide <http://ww1.microchip.com/downloads/en/DeviceDoc/40001905B.pdf>`_\nfor further details. This package works best if you have `Atmel Studio 7.0 <https://www.microchip.com/mplab/avr-support/atmel-studio-7>`_\ninstalled. If you do it will automatically make use of the installed files it requires. Otherwise you can\ndownload the required DLL from Atmel `here <https://www.microchip.com/developmenttools/ProductDetails/ATPOWERDEBUGGER>`_\nand point pydgilib to the location where you downloaded the file.\n\nFeatures\n========\n\nThe main features of this library are:\n\n* It wraps the C functions of DGILib in python `functions <source/pydgilib.html#pydgilib.dgilib.DGILib>`_\n\n* It provides a `class <source/pydgilib_extra.html#module-pydgilib_extra.dgilib_extra>`_ to easily log data from the power and gpio interfaces to a `.csv` file or a plot (using `matplotlib <https://matplotlib.org/>`_)\n\n* It provides a `function <source/atprogram.html#atprogram-package>`_ that wraps `atprogram.exe` and `make.exe` so it can compile projects and flash them to a board\n\nThe documentation of all the functions can be found in this `overview <py-modindex.html>`_ or this `list <genindex.html>`_.\n\nInstallation\n============\n\nYou will need to install pydgilib in a **32-bit Python** environment on Windows because `DGILib.dll` is compiled for 32-bit. Other operating systems are not supported.\n\nInstallation via pip\n--------------------\n\nNormal installation::\n\n    $ pip install pydgilib\n\nStatic Installation\n-------------------\n\nIf you want to install a static copy of the master you can run::\n\n    $ pip install git+https://github.com/EWouters/pydgilib\n\nDevelopment Installation\n------------------------\n\n1. Clone the repo::\n\n    $ git clone https://github.com/EWouters/pydgilib.git\n\n2. Install symlinked to repo::\n\n    $ pip install -e .\n\n If you want to be able to run the tests or compile the docs run instead::\n\n    $ pip install -e .[test,docs]\n\nGetting Started\n===============\n\n1. Connect your device that supports DGI\n\n2. Print the serial number of your device::\n\n    >>> from pydgilib import DGILib\n    >>> with DGILib() as dgilib:\n    ...     print(dgilib.device_sn)\n    ...\n    b'ATML3138061800001604'\n\n3. Log the current of the board and the states of the gpio pins for one second and write the results to `.csv` files::\n\n    >>> from pydgilib_extra import DGILibExtra\n    >>> with DGILibExtra() as dgilib:\n    ...     dgilib.logger.log(1)\n    ...\n\n4. Log the current of the board and the states of the gpio pins for one second and show a plot of the results::\n\n    >>> from pydgilib_extra import DGILibExtra, LOGGER_PLOT\n    >>> with DGILibExtra(loggers=[LOGGER_PLOT]) as dgilib:\n    ...     dgilib.logger.log(1)\n    ...\n    {48: <pydgilib_extra.dgilib_data.InterfaceData object at 0x00F22A90>, 256: <pydgilib_extra.dgilib_data.InterfaceData object at 0x00F229F0>}\n\n .. figure:: source/images/plot_example.png\n    :alt: plot example\n\n    Plot of a SAML11 board running the unit test project.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EWouters/pydgilib", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "pydgilib", "package_url": "https://pypi.org/project/pydgilib/", "platform": "", "project_url": "https://pypi.org/project/pydgilib/", "project_urls": {"Homepage": "https://github.com/EWouters/pydgilib"}, "release_url": "https://pypi.org/project/pydgilib/0.2.3/", "requires_dist": ["Sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "pytest-runner ; extra == 'test'", "pytest-benchmark ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": "", "summary": "This module provides Python bindings for DGILib.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pydgilib provides python bindings for Atmel\u00c2\u00ae Data Gateway Interface (DGI) devices.\nSee the <a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/40001905B.pdf\" rel=\"nofollow\">Data Gateway Interface user guide</a>\nfor further details. This package works best if you have <a href=\"https://www.microchip.com/mplab/avr-support/atmel-studio-7\" rel=\"nofollow\">Atmel Studio 7.0</a>\ninstalled. If you do it will automatically make use of the installed files it requires. Otherwise you can\ndownload the required DLL from Atmel <a href=\"https://www.microchip.com/developmenttools/ProductDetails/ATPOWERDEBUGGER\" rel=\"nofollow\">here</a>\nand point pydgilib to the location where you downloaded the file.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<p>The main features of this library are:</p>\n<ul>\n<li>It wraps the C functions of DGILib in python <a href=\"source/pydgilib.html#pydgilib.dgilib.DGILib\" rel=\"nofollow\">functions</a></li>\n<li>It provides a <a href=\"source/pydgilib_extra.html#module-pydgilib_extra.dgilib_extra\" rel=\"nofollow\">class</a> to easily log data from the power and gpio interfaces to a <cite>.csv</cite> file or a plot (using <a href=\"https://matplotlib.org/\" rel=\"nofollow\">matplotlib</a>)</li>\n<li>It provides a <a href=\"source/atprogram.html#atprogram-package\" rel=\"nofollow\">function</a> that wraps <cite>atprogram.exe</cite> and <cite>make.exe</cite> so it can compile projects and flash them to a board</li>\n</ul>\n<p>The documentation of all the functions can be found in this <a href=\"py-modindex.html\" rel=\"nofollow\">overview</a> or this <a href=\"genindex.html\" rel=\"nofollow\">list</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You will need to install pydgilib in a <strong>32-bit Python</strong> environment on Windows because <cite>DGILib.dll</cite> is compiled for 32-bit. Other operating systems are not supported.</p>\n<div id=\"installation-via-pip\">\n<h3>Installation via pip</h3>\n<p>Normal installation:</p>\n<pre>$ pip install pydgilib\n</pre>\n</div>\n<div id=\"static-installation\">\n<h3>Static Installation</h3>\n<p>If you want to install a static copy of the master you can run:</p>\n<pre>$ pip install git+https://github.com/EWouters/pydgilib\n</pre>\n</div>\n<div id=\"development-installation\">\n<h3>Development Installation</h3>\n<ol>\n<li><p>Clone the repo:</p>\n<pre>$ git clone https://github.com/EWouters/pydgilib.git\n</pre>\n</li>\n<li><p>Install symlinked to repo:</p>\n<pre>$ pip install -e .\n</pre>\n</li>\n</ol>\n<blockquote>\n<p>If you want to be able to run the tests or compile the docs run instead:</p>\n<pre>$ pip install -e .[test,docs]\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<ol>\n<li><p>Connect your device that supports DGI</p>\n</li>\n<li><p>Print the serial number of your device:</p>\n<pre>&gt;&gt;&gt; from pydgilib import DGILib\n&gt;&gt;&gt; with DGILib() as dgilib:\n...     print(dgilib.device_sn)\n...\nb'ATML3138061800001604'\n</pre>\n</li>\n<li><p>Log the current of the board and the states of the gpio pins for one second and write the results to <cite>.csv</cite> files:</p>\n<pre>&gt;&gt;&gt; from pydgilib_extra import DGILibExtra\n&gt;&gt;&gt; with DGILibExtra() as dgilib:\n...     dgilib.logger.log(1)\n...\n</pre>\n</li>\n<li><p>Log the current of the board and the states of the gpio pins for one second and show a plot of the results:</p>\n<pre>&gt;&gt;&gt; from pydgilib_extra import DGILibExtra, LOGGER_PLOT\n&gt;&gt;&gt; with DGILibExtra(loggers=[LOGGER_PLOT]) as dgilib:\n...     dgilib.logger.log(1)\n...\n{48: &lt;pydgilib_extra.dgilib_data.InterfaceData object at 0x00F22A90&gt;, 256: &lt;pydgilib_extra.dgilib_data.InterfaceData object at 0x00F229F0&gt;}\n</pre>\n</li>\n</ol>\n<blockquote>\n<div>\n<img alt=\"plot example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62e0d5fec063e8d4df7748611e2d69276c9b8710/736f757263652f696d616765732f706c6f745f6578616d706c652e706e67\">\n<p>Plot of a SAML11 board running the unit test project.</p>\n</div>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 5097460, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "490ec7798738d592b1411c704a5b6adb", "sha256": "d8ade417d3d4a5dc103b89f2c9c8c07c2e51d6faec3eebe27e192008b94b219f"}, "downloads": -1, "filename": "pydgilib-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "490ec7798738d592b1411c704a5b6adb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48917, "upload_time": "2019-04-04T13:30:25", "upload_time_iso_8601": "2019-04-04T13:30:25.560478Z", "url": "https://files.pythonhosted.org/packages/e2/87/1de5e7fa50bb10944689dfabd482ebfa2a91f0c3c8653a0a5bb5ac3ba9da/pydgilib-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c20b6f52434d315b602a3dc46bec7e1d", "sha256": "4cf093fca7e84d6586afc9f0d470347f04cbcb24ed25f8fabb81c8c1f0291548"}, "downloads": -1, "filename": "pydgilib-0.2.3.tar.gz", "has_sig": false, "md5_digest": "c20b6f52434d315b602a3dc46bec7e1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39283, "upload_time": "2019-04-04T13:30:26", "upload_time_iso_8601": "2019-04-04T13:30:26.760948Z", "url": "https://files.pythonhosted.org/packages/49/d3/529e84df3e70febcff2d38dd8c15069da0a66a33efb34112b727a4953edd/pydgilib-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "490ec7798738d592b1411c704a5b6adb", "sha256": "d8ade417d3d4a5dc103b89f2c9c8c07c2e51d6faec3eebe27e192008b94b219f"}, "downloads": -1, "filename": "pydgilib-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "490ec7798738d592b1411c704a5b6adb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48917, "upload_time": "2019-04-04T13:30:25", "upload_time_iso_8601": "2019-04-04T13:30:25.560478Z", "url": "https://files.pythonhosted.org/packages/e2/87/1de5e7fa50bb10944689dfabd482ebfa2a91f0c3c8653a0a5bb5ac3ba9da/pydgilib-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c20b6f52434d315b602a3dc46bec7e1d", "sha256": "4cf093fca7e84d6586afc9f0d470347f04cbcb24ed25f8fabb81c8c1f0291548"}, "downloads": -1, "filename": "pydgilib-0.2.3.tar.gz", "has_sig": false, "md5_digest": "c20b6f52434d315b602a3dc46bec7e1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39283, "upload_time": "2019-04-04T13:30:26", "upload_time_iso_8601": "2019-04-04T13:30:26.760948Z", "url": "https://files.pythonhosted.org/packages/49/d3/529e84df3e70febcff2d38dd8c15069da0a66a33efb34112b727a4953edd/pydgilib-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:05 2020"}