{"info": {"author": "Martin O'Hanlon, Peter Zagubisalo", "author_email": "peter.zagubisalo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: MacOS X", "Environment :: Win32 (MS Windows)", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Desktop Environment"], "description": "# Shortcutter\n\nShortcutter is a cross platform API for creating shortcuts for python applications meant to be used in setup.py script or as a command line application (fork of the Shortcut).\n\nShortcutter creates shortcucts that activate python environment prior launching the app. It supports virtual environments, Anaconda/Miniconda, conda environments, `sudo pip install`, `pip install --user`. Shortcutter will do its best to find your app, searching for the usual suspects in the usual places (i.e. those in the PATH), or you can give it a full path.\n\nAdditioanlly special command/method can create shortcut to the terminal at activated environment (plus terminal shortcut at conda root). In case of Windows special env vars `%u%` and `%a%` defined that switch encodings and `%b%` var that sets UTF-8 encoding and starts Bash.\n\nTo create desktop and menu shortcuts for `python`:\n\n* Using the app:\n\n```\nshortcutter python\nshortcutter --terminal\n```\n\n* Using the Python API for example in `setup.py`:\n\n```py\nfrom shortcutter import ShortCutter\nsc = ShortCutter()\nsc.create_desktop_shortcut(\"python\")\nsc.create_menu_shortcut(\"python\")\nsc.create_shortcut_to_env_terminal()\n```\n\nIt was created to solve a simple problem - if you install a python package using `pip` there is no simple way of creating a shortcut to the program it installs.\n\n\n## Shortcuts without entry points (for GUI)\n\nThe default use-case for Shortcutter is to create shortcuts for entry-points executables auto created by setup.py or conda. But sometimes such entry-points do not work (like when using pythonw on macOS with python.app package). See example how to work-around this: [Enaml video app](https://github.com/kiwi0fruit/enaml-video-app) (the main idea is in [bash](https://github.com/kiwi0fruit/enaml-video-app/blob/master/enaml-video-app/scripts/enaml-video-appw) script).\n\n\n# Table of contents\n\n* [Shortcutter](#shortcutter)\n  * [Shortcuts without entry points (for GUI)](#shortcuts-without-entry-points-for-gui)\n* [Install](#install)\n* [Command line interface](#command-line-interface)\n* [Python API](#python-api)\n* [Operating Systems](#operating-systems)\n* [Status](#status)\n* [Change log](#change-log)\n\n\n# Install\n\nShortcut is available on [pypi](https://pypi.python.org/pypi/shortcutter) and can be installed using `pip`:\n\n* Using Anaconda/Miniconda:\n\n```bat\nconda install -c defaults -c conda-forge shortcutter\n```\n\n* Using pip:\n\n```\npip install shortcutter\n```\n\n* System Python 3 on macOS or Linux:\n\n```\npip3 install shortcutter\n```\n\nNote: if `pip3 install --user` (simply `pip3 install` on Ubuntu) then you might need to add `%APPDATA%\\Python\\Python36\\Scripts` (on Windows) / `~/.local/bin` (on Linux) to the PATH.\n\nShortcutter should work on Python 2 or can easily be bugfixed if you post an issue.\n\n\n# Command line interface\n\nThe `-h` or `--help` option will display the help:\n\n```\nshortcutter --help\n```\n\n```\nusage: shortcutter [-h] [-d] [-m] [-n [NAME]] [-s] [-t] [target]\n\nAutomatic shortcut creator. Shortcuts auto-activate their environments by \ndefault.\n\npositional arguments:\n  target                The target executable to create Desktop and Menu\n                        shortcuts.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --desktop         Only create a desktop shortcut.\n  -m, --menu            Only create a menu shortcut.\n  -n [NAME], --name [NAME]\n                        Name of the shortcut without extension (autoname\n                        otherwise).\n  -s, --simple          Create simple shortcut without activate wrapper.\n  -t, --terminal        Create shortcut to environment with shortcutter (plus\n                        shortcut to root environment in case of conda).\n```\n\n\n# Python API\n\n[Python API](https://github.com/kiwi0fruit/shortcutter/blob/master/api.rst).\n\n\n# Operating Systems\n\nShortcut support Windows, macOS and Linux.\n\nThe way shortcuts are provide and applications launched depends on the operating system.\n\n### Windows \n\n`.lnk` files pointing directly to the application paths are created in the User Desktop and Programs folders.\n\n### macOS\n\nmacOS applications are created which run the application via a terminal and copied to the User Desktop (`~/Desktop`) and Launchpad (`/Applications`).\n\n### Linux\n\n`.desktop` files are created which start the application via the shell and created in the User Desktop and applications menu (`~/.local/share/applications`).\n\n\n# Status\n\nAlpha - tested and works but\n[issues](https://github.com/kiwi0fruit/shortcutter/issues) maybe\nexperienced and API changes are possible.\n\n\n# Change log\n\n[Change log](https://github.com/kiwi0fruit/shortcutter/blob/master/CHANGE_LOG.md).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kiwi0fruit/shortcutter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "shortcutter", "package_url": "https://pypi.org/project/shortcutter/", "platform": "", "project_url": "https://pypi.org/project/shortcutter/", "project_urls": {"Homepage": "https://github.com/kiwi0fruit/shortcutter"}, "release_url": "https://pypi.org/project/shortcutter/0.1.20/", "requires_dist": null, "requires_python": "", "summary": "Easy cross-platform creation of shortcuts supporting virtual and Anaconda environments (fork of Shortcut)", "version": "0.1.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Shortcutter</h1>\n<p>Shortcutter is a cross platform API for creating shortcuts for python applications meant to be used in setup.py script or as a command line application (fork of the Shortcut).</p>\n<p>Shortcutter creates shortcucts that activate python environment prior launching the app. It supports virtual environments, Anaconda/Miniconda, conda environments, <code>sudo pip install</code>, <code>pip install --user</code>. Shortcutter will do its best to find your app, searching for the usual suspects in the usual places (i.e. those in the PATH), or you can give it a full path.</p>\n<p>Additioanlly special command/method can create shortcut to the terminal at activated environment (plus terminal shortcut at conda root). In case of Windows special env vars <code>%u%</code> and <code>%a%</code> defined that switch encodings and <code>%b%</code> var that sets UTF-8 encoding and starts Bash.</p>\n<p>To create desktop and menu shortcuts for <code>python</code>:</p>\n<ul>\n<li>Using the app:</li>\n</ul>\n<pre><code>shortcutter python\nshortcutter --terminal\n</code></pre>\n<ul>\n<li>Using the Python API for example in <code>setup.py</code>:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">shortcutter</span> <span class=\"kn\">import</span> <span class=\"n\">ShortCutter</span>\n<span class=\"n\">sc</span> <span class=\"o\">=</span> <span class=\"n\">ShortCutter</span><span class=\"p\">()</span>\n<span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">create_desktop_shortcut</span><span class=\"p\">(</span><span class=\"s2\">\"python\"</span><span class=\"p\">)</span>\n<span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">create_menu_shortcut</span><span class=\"p\">(</span><span class=\"s2\">\"python\"</span><span class=\"p\">)</span>\n<span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">create_shortcut_to_env_terminal</span><span class=\"p\">()</span>\n</pre>\n<p>It was created to solve a simple problem - if you install a python package using <code>pip</code> there is no simple way of creating a shortcut to the program it installs.</p>\n<h2>Shortcuts without entry points (for GUI)</h2>\n<p>The default use-case for Shortcutter is to create shortcuts for entry-points executables auto created by setup.py or conda. But sometimes such entry-points do not work (like when using pythonw on macOS with python.app package). See example how to work-around this: <a href=\"https://github.com/kiwi0fruit/enaml-video-app\" rel=\"nofollow\">Enaml video app</a> (the main idea is in <a href=\"https://github.com/kiwi0fruit/enaml-video-app/blob/master/enaml-video-app/scripts/enaml-video-appw\" rel=\"nofollow\">bash</a> script).</p>\n<h1>Table of contents</h1>\n<ul>\n<li><a href=\"#shortcutter\" rel=\"nofollow\">Shortcutter</a>\n<ul>\n<li><a href=\"#shortcuts-without-entry-points-for-gui\" rel=\"nofollow\">Shortcuts without entry points (for GUI)</a></li>\n</ul>\n</li>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#command-line-interface\" rel=\"nofollow\">Command line interface</a></li>\n<li><a href=\"#python-api\" rel=\"nofollow\">Python API</a></li>\n<li><a href=\"#operating-systems\" rel=\"nofollow\">Operating Systems</a></li>\n<li><a href=\"#status\" rel=\"nofollow\">Status</a></li>\n<li><a href=\"#change-log\" rel=\"nofollow\">Change log</a></li>\n</ul>\n<h1>Install</h1>\n<p>Shortcut is available on <a href=\"https://pypi.python.org/pypi/shortcutter\" rel=\"nofollow\">pypi</a> and can be installed using <code>pip</code>:</p>\n<ul>\n<li>Using Anaconda/Miniconda:</li>\n</ul>\n<pre>conda install -c defaults -c conda-forge shortcutter\n</pre>\n<ul>\n<li>Using pip:</li>\n</ul>\n<pre><code>pip install shortcutter\n</code></pre>\n<ul>\n<li>System Python 3 on macOS or Linux:</li>\n</ul>\n<pre><code>pip3 install shortcutter\n</code></pre>\n<p>Note: if <code>pip3 install --user</code> (simply <code>pip3 install</code> on Ubuntu) then you might need to add <code>%APPDATA%\\Python\\Python36\\Scripts</code> (on Windows) / <code>~/.local/bin</code> (on Linux) to the PATH.</p>\n<p>Shortcutter should work on Python 2 or can easily be bugfixed if you post an issue.</p>\n<h1>Command line interface</h1>\n<p>The <code>-h</code> or <code>--help</code> option will display the help:</p>\n<pre><code>shortcutter --help\n</code></pre>\n<pre><code>usage: shortcutter [-h] [-d] [-m] [-n [NAME]] [-s] [-t] [target]\n\nAutomatic shortcut creator. Shortcuts auto-activate their environments by \ndefault.\n\npositional arguments:\n  target                The target executable to create Desktop and Menu\n                        shortcuts.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --desktop         Only create a desktop shortcut.\n  -m, --menu            Only create a menu shortcut.\n  -n [NAME], --name [NAME]\n                        Name of the shortcut without extension (autoname\n                        otherwise).\n  -s, --simple          Create simple shortcut without activate wrapper.\n  -t, --terminal        Create shortcut to environment with shortcutter (plus\n                        shortcut to root environment in case of conda).\n</code></pre>\n<h1>Python API</h1>\n<p><a href=\"https://github.com/kiwi0fruit/shortcutter/blob/master/api.rst\" rel=\"nofollow\">Python API</a>.</p>\n<h1>Operating Systems</h1>\n<p>Shortcut support Windows, macOS and Linux.</p>\n<p>The way shortcuts are provide and applications launched depends on the operating system.</p>\n<h3>Windows</h3>\n<p><code>.lnk</code> files pointing directly to the application paths are created in the User Desktop and Programs folders.</p>\n<h3>macOS</h3>\n<p>macOS applications are created which run the application via a terminal and copied to the User Desktop (<code>~/Desktop</code>) and Launchpad (<code>/Applications</code>).</p>\n<h3>Linux</h3>\n<p><code>.desktop</code> files are created which start the application via the shell and created in the User Desktop and applications menu (<code>~/.local/share/applications</code>).</p>\n<h1>Status</h1>\n<p>Alpha - tested and works but\n<a href=\"https://github.com/kiwi0fruit/shortcutter/issues\" rel=\"nofollow\">issues</a> maybe\nexperienced and API changes are possible.</p>\n<h1>Change log</h1>\n<p><a href=\"https://github.com/kiwi0fruit/shortcutter/blob/master/CHANGE_LOG.md\" rel=\"nofollow\">Change log</a>.</p>\n\n          </div>"}, "last_serial": 4868378, "releases": {"0.1.14": [{"comment_text": "", "digests": {"md5": "6ba0d2db9a50ab8960c8be9edb22f5a8", "sha256": "e64094efc94ce050ec0919fc949aeb7c89c669d63ae3e79b9c3503d31a914564"}, "downloads": -1, "filename": "shortcutter-0.1.14.tar.gz", "has_sig": false, "md5_digest": "6ba0d2db9a50ab8960c8be9edb22f5a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30494, "upload_time": "2019-01-21T09:03:02", "upload_time_iso_8601": "2019-01-21T09:03:02.709797Z", "url": "https://files.pythonhosted.org/packages/20/39/047e797b891b93a1a328a5e2df28972c5ce7d3343d83dc30b59a3558255d/shortcutter-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "abbed8ca7139f87e43ff8b3281b4c06e", "sha256": "675a27fec61a223a26efd5473ddb5a869252d015af6f252692b1c3c6f8400c7b"}, "downloads": -1, "filename": "shortcutter-0.1.15.tar.gz", "has_sig": false, "md5_digest": "abbed8ca7139f87e43ff8b3281b4c06e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30478, "upload_time": "2019-01-21T09:26:27", "upload_time_iso_8601": "2019-01-21T09:26:27.957881Z", "url": "https://files.pythonhosted.org/packages/e6/86/6951214135a91c5f93ad2bc5213ecaedbab16c0341bdbe86faa538fa867d/shortcutter-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "2de3b2c89006f16b84595b35ed54d4f8", "sha256": "5f162af5c59ccb50bf5a2b88c74832778267aaca6bc7b8c31b0772464b384f83"}, "downloads": -1, "filename": "shortcutter-0.1.16.tar.gz", "has_sig": false, "md5_digest": "2de3b2c89006f16b84595b35ed54d4f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30366, "upload_time": "2019-01-21T17:11:36", "upload_time_iso_8601": "2019-01-21T17:11:36.310065Z", "url": "https://files.pythonhosted.org/packages/f9/67/1e649a6d9804ab19a34995e5944cff45d50fcb2752876443062d5e883e20/shortcutter-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "ddf0716142c75331664adeb207f8588b", "sha256": "7ae5644e05fbe093b097b3c425230bc14c9c053ef9f51f68767d6bc6cc24c01e"}, "downloads": -1, "filename": "shortcutter-0.1.17.tar.gz", "has_sig": false, "md5_digest": "ddf0716142c75331664adeb207f8588b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30385, "upload_time": "2019-01-21T18:02:01", "upload_time_iso_8601": "2019-01-21T18:02:01.606078Z", "url": "https://files.pythonhosted.org/packages/91/59/4ee97d7133fa2c59da42f65e0092fb21c12ab4db3f8c6d312d254e54f113/shortcutter-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "3343015959e4f3b53fb14c8a777c0ac3", "sha256": "f4134959965af5ef0118f78fee89ed8839e803bdaa70ee70a1f0e8007dc3ddfa"}, "downloads": -1, "filename": "shortcutter-0.1.18.tar.gz", "has_sig": false, "md5_digest": "3343015959e4f3b53fb14c8a777c0ac3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30469, "upload_time": "2019-02-21T11:30:11", "upload_time_iso_8601": "2019-02-21T11:30:11.486801Z", "url": "https://files.pythonhosted.org/packages/a8/33/661f9b74e1074cdf4d508bbabfd71b49026b7c512002d3e78ad86918d463/shortcutter-0.1.18.tar.gz", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "8cd3175bf274c255e018dd3100592b7d", "sha256": "ff7841092e9cf2df0bf6ea51913b69c6c20fddde29e086b752817e07f58310a5"}, "downloads": -1, "filename": "shortcutter-0.1.19.tar.gz", "has_sig": false, "md5_digest": "8cd3175bf274c255e018dd3100592b7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30456, "upload_time": "2019-02-21T14:03:41", "upload_time_iso_8601": "2019-02-21T14:03:41.224929Z", "url": "https://files.pythonhosted.org/packages/bd/ad/7eaf053cc0331fc2bd08299205a91e105a137f7f2455260c3daaa1bcf4aa/shortcutter-0.1.19.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "bdfa96e951fbab27f87bcbeaccb26723", "sha256": "1221ee4297fa46127cc66d7d908b1f3715c27b0da172711c00244e0260988bbe"}, "downloads": -1, "filename": "shortcutter-0.1.20.tar.gz", "has_sig": false, "md5_digest": "bdfa96e951fbab27f87bcbeaccb26723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30503, "upload_time": "2019-02-26T06:21:55", "upload_time_iso_8601": "2019-02-26T06:21:55.694825Z", "url": "https://files.pythonhosted.org/packages/f8/40/d6e32081c0cf2885eef26b993809d4fa9eae69d95afec033a24b524bd99a/shortcutter-0.1.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bdfa96e951fbab27f87bcbeaccb26723", "sha256": "1221ee4297fa46127cc66d7d908b1f3715c27b0da172711c00244e0260988bbe"}, "downloads": -1, "filename": "shortcutter-0.1.20.tar.gz", "has_sig": false, "md5_digest": "bdfa96e951fbab27f87bcbeaccb26723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30503, "upload_time": "2019-02-26T06:21:55", "upload_time_iso_8601": "2019-02-26T06:21:55.694825Z", "url": "https://files.pythonhosted.org/packages/f8/40/d6e32081c0cf2885eef26b993809d4fa9eae69d95afec033a24b524bd99a/shortcutter-0.1.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:42 2020"}