{"info": {"author": "Jose Ortiz", "author_email": "csjortizco@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Htpbs\n\nHtpbs is a Python library that creates horizontal progress bars to keep \ntrack of the progress of threaded jobs. Bars in htpbs are completely customizable. \n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install htpbs.\n\n```bash\npip install htpbs\n```\n\n## Usage\n\nThe following are examples about how to use this library for threaded and non threaded bars\n\n### Threaded horizontal bars\n\n```python\nfrom htpbs import ProgressBars, Work\nimport time # required for demonstration purposes only\n\n\n# Note: users can create any configuration or function to be passed to the Work object below.\ndef work(progressbars, bar_index, work_value, work_name):\n    \"\"\"\n\n    :param progressbars: the progressbar obkect\n    :param bar_index: a integer representing the index of the bae\n    :param work_value: a value for time.sleep() to simulate different progress bars rates\n    :param work_name: the name of the work\n    :return: VOID\n    \"\"\"\n    progressbars.set_bar_prefix(bar_index=bar_index, prefix=work_name)\n    for i in range(101):\n             # your work here. we use the time.sleep() as example\n             # Real work could be downloading a file and show progress\n             time.sleep(work_value)\n             progressbars.update(bar_index=bar_index, value=i)\n    progressbars.finish()\n\n# start with 3 bars\nprogressbars = ProgressBars(num_bars=3)\n# set bar #3 to be the total progress\nprogressbars.set_last_bar_as_total_progress(prefix=\"Total: \")\n\n# start all the threaded works\nWork.start(work, (progressbars, 0, 0.1, \"w1: \"))\nWork.start(work, (progressbars, 1, 0.01, \"w2: \"))\n\n# output after works finished\n# w1: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100% completed   w2: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100% completed    Total: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100% completed\n\n```\n\n### Using the same thread\n\n```python\nfrom htpbs import ProgressBars\nimport time # required for demostration purposes only\n\nprogressbars = ProgressBars(num_bars=5)\nprogressbars.set_last_bar_as_total_progress(prefix=\"Total Progress: \")\n\n# set total progress bar at any index \n# progressbars.set_total_bar(index=3, prefix=\"total: \")\n\n# using the same thread \nfor i in range(101):\n    time.sleep(0.1)\n    values = [i, i+5, i+10, i+15, 0] # zero for init total progress \n    progressbars.update_all(values) # update bars in the same thread\nprogressbars.finish_all() # avoid memory leaks. \n```\n### Remove bars when job is done and init the next bar\n```python\n# clearing and initializing new progress bars:\nfrom htpbs import ProgressBars\nimport time # required for demostration purposes only\n\nprogressbars = ProgressBars(num_bars=3)\nprogressbars.set_last_bar_as_total_progress(prefix=\"Total Progress: \")\n\n# hide the bars that are not being used at the moment\n# multiple bars can be hidden at the same time\nprogressbars.set_hidden_bars([1]) \n\n# non threaded work 1 starts\nfor i in range(101):\n    time.sleep(0.1)\n    progressbars.update(bar_index=0, value=i)\nprogressbars.finish()\n\n# clears the bar that was completed from screen\nprogressbars.clear_bar(bar_index=0) \n# resets the new bar that will appear in screen\nprogressbars.reset_bar(index=1, prefix=\"new bar: \")   \n\n# non threaded work 2 starts\nfor i in range(101):\n    time.sleep(0.1)\n    progressbars.update(bar_index=1, value=i)\nprogressbars.finish()\n\n```\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://github.com/joseortizcostadev/hprogressbars/blob/master/LICENSE.txt)\n\n# htpbs\n## version: 0.0.4\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/htpbs/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jortizcostadev/htpbs", "keywords": "Bars,Horizontal,Progress Bars,Threaded", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "htpbs", "package_url": "https://pypi.org/project/htpbs/", "platform": "", "project_url": "https://pypi.org/project/htpbs/", "project_urls": {"Download": "https://pypi.org/project/htpbs/", "Homepage": "https://github.com/jortizcostadev/htpbs"}, "release_url": "https://pypi.org/project/htpbs/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A Python module that creates horizontal progress bars to keep track of the progress of threaded jobs. Progress Bars in this module are totally customizable", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Htpbs</h1>\n<p>Htpbs is a Python library that creates horizontal progress bars to keep\ntrack of the progress of threaded jobs. Bars in htpbs are completely customizable.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install htpbs.</p>\n<pre>pip install htpbs\n</pre>\n<h2>Usage</h2>\n<p>The following are examples about how to use this library for threaded and non threaded bars</p>\n<h3>Threaded horizontal bars</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">htpbs</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBars</span><span class=\"p\">,</span> <span class=\"n\">Work</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span> <span class=\"c1\"># required for demonstration purposes only</span>\n\n\n<span class=\"c1\"># Note: users can create any configuration or function to be passed to the Work object below.</span>\n<span class=\"k\">def</span> <span class=\"nf\">work</span><span class=\"p\">(</span><span class=\"n\">progressbars</span><span class=\"p\">,</span> <span class=\"n\">bar_index</span><span class=\"p\">,</span> <span class=\"n\">work_value</span><span class=\"p\">,</span> <span class=\"n\">work_name</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n\n<span class=\"sd\">    :param progressbars: the progressbar obkect</span>\n<span class=\"sd\">    :param bar_index: a integer representing the index of the bae</span>\n<span class=\"sd\">    :param work_value: a value for time.sleep() to simulate different progress bars rates</span>\n<span class=\"sd\">    :param work_name: the name of the work</span>\n<span class=\"sd\">    :return: VOID</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">set_bar_prefix</span><span class=\"p\">(</span><span class=\"n\">bar_index</span><span class=\"o\">=</span><span class=\"n\">bar_index</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"n\">work_name</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">):</span>\n             <span class=\"c1\"># your work here. we use the time.sleep() as example</span>\n             <span class=\"c1\"># Real work could be downloading a file and show progress</span>\n             <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">work_value</span><span class=\"p\">)</span>\n             <span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">bar_index</span><span class=\"o\">=</span><span class=\"n\">bar_index</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># start with 3 bars</span>\n<span class=\"n\">progressbars</span> <span class=\"o\">=</span> <span class=\"n\">ProgressBars</span><span class=\"p\">(</span><span class=\"n\">num_bars</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># set bar #3 to be the total progress</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">set_last_bar_as_total_progress</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"Total: \"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># start all the threaded works</span>\n<span class=\"n\">Work</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">work</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">progressbars</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"s2\">\"w1: \"</span><span class=\"p\">))</span>\n<span class=\"n\">Work</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">work</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">progressbars</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"s2\">\"w2: \"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># output after works finished</span>\n<span class=\"c1\"># w1: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100% completed   w2: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100% completed    Total: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100% completed</span>\n</pre>\n<h3>Using the same thread</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">htpbs</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBars</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span> <span class=\"c1\"># required for demostration purposes only</span>\n\n<span class=\"n\">progressbars</span> <span class=\"o\">=</span> <span class=\"n\">ProgressBars</span><span class=\"p\">(</span><span class=\"n\">num_bars</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">set_last_bar_as_total_progress</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"Total Progress: \"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set total progress bar at any index </span>\n<span class=\"c1\"># progressbars.set_total_bar(index=3, prefix=\"total: \")</span>\n\n<span class=\"c1\"># using the same thread </span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># zero for init total progress </span>\n    <span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">update_all</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span> <span class=\"c1\"># update bars in the same thread</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">finish_all</span><span class=\"p\">()</span> <span class=\"c1\"># avoid memory leaks. </span>\n</pre>\n<h3>Remove bars when job is done and init the next bar</h3>\n<pre><span class=\"c1\"># clearing and initializing new progress bars:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">htpbs</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBars</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span> <span class=\"c1\"># required for demostration purposes only</span>\n\n<span class=\"n\">progressbars</span> <span class=\"o\">=</span> <span class=\"n\">ProgressBars</span><span class=\"p\">(</span><span class=\"n\">num_bars</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">set_last_bar_as_total_progress</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"Total Progress: \"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># hide the bars that are not being used at the moment</span>\n<span class=\"c1\"># multiple bars can be hidden at the same time</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">set_hidden_bars</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">])</span> \n\n<span class=\"c1\"># non threaded work 1 starts</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">bar_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># clears the bar that was completed from screen</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">clear_bar</span><span class=\"p\">(</span><span class=\"n\">bar_index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span> \n<span class=\"c1\"># resets the new bar that will appear in screen</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">reset_bar</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"new bar: \"</span><span class=\"p\">)</span>   \n\n<span class=\"c1\"># non threaded work 2 starts</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">bar_index</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"n\">progressbars</span><span class=\"o\">.</span><span class=\"n\">finish</span><span class=\"p\">()</span>\n</pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/joseortizcostadev/hprogressbars/blob/master/LICENSE.txt\" rel=\"nofollow\">MIT</a></p>\n<h1>htpbs</h1>\n<h2>version: 0.0.4</h2>\n\n          </div>"}, "last_serial": 7002087, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6c77c3b04306e885f20fe4bafce0ad9c", "sha256": "47246aaa03da60597ad6d77d3bbfd61313b6b131cd723183b52e0578c506239a"}, "downloads": -1, "filename": "htpbs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c77c3b04306e885f20fe4bafce0ad9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8042, "upload_time": "2020-04-11T23:17:04", "upload_time_iso_8601": "2020-04-11T23:17:04.930639Z", "url": "https://files.pythonhosted.org/packages/bd/b3/37271a96568a150d5cb08af29dbbf8d0fe2482e74f9fe232abfcb1e5be0b/htpbs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2902c70dd94704c9dd54147e4798423", "sha256": "75f58d5fe7c44c48971aa0118e9ba63c0936e7bd9f4ebd63d3c23d68f4be8959"}, "downloads": -1, "filename": "htpbs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b2902c70dd94704c9dd54147e4798423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7282, "upload_time": "2020-04-11T23:17:09", "upload_time_iso_8601": "2020-04-11T23:17:09.029884Z", "url": "https://files.pythonhosted.org/packages/66/0c/94dc0cb48d2f29daddf64f3968ba78a7f6f84ab3307c1780ef78dca63af7/htpbs-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "10c0acefbf2c376e075ae5c7c1f9f8fd", "sha256": "949b0a96adb2ad41cca775616f4a97a97fd0ba66653aee33ea7dc4db29cf4f93"}, "downloads": -1, "filename": "htpbs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "10c0acefbf2c376e075ae5c7c1f9f8fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8031, "upload_time": "2020-04-11T23:17:07", "upload_time_iso_8601": "2020-04-11T23:17:07.053186Z", "url": "https://files.pythonhosted.org/packages/5a/ce/c7425e74748eb5c0d478d2fd08cbee64a17abff78171ef3408d7fe2ee605/htpbs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28d72b81f16c59aae488c37b6e81b11b", "sha256": "5f263cf5c2b9e8503d6a5d84a97786fb4e054ad9614341aaf8d04ea34d728534"}, "downloads": -1, "filename": "htpbs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "28d72b81f16c59aae488c37b6e81b11b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7259, "upload_time": "2020-04-11T23:17:10", "upload_time_iso_8601": "2020-04-11T23:17:10.158542Z", "url": "https://files.pythonhosted.org/packages/12/65/d7aabe2e94555524eb1c9fcb1805c8a6b1b52a029ee23290d244e57f9b32/htpbs-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b4cb6951f7675c8c48636b23b45b4ae7", "sha256": "644fb3ebf5a93e857758e5371d2415e3b32a5e4222b74f769b75bcafb6ad24af"}, "downloads": -1, "filename": "htpbs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b4cb6951f7675c8c48636b23b45b4ae7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8044, "upload_time": "2020-04-11T23:25:51", "upload_time_iso_8601": "2020-04-11T23:25:51.190859Z", "url": "https://files.pythonhosted.org/packages/59/a0/dae0d58faef40a7d47696d521175e5491f08da369a834e5efa62fe8864b6/htpbs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9360770144a2b9f1fd32dfd619afef92", "sha256": "4e1cc4bc66ea5f21cd1a2b21a9725e026794d016fb047f0368f1b72eca5f6549"}, "downloads": -1, "filename": "htpbs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9360770144a2b9f1fd32dfd619afef92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7284, "upload_time": "2020-04-11T23:25:54", "upload_time_iso_8601": "2020-04-11T23:25:54.531657Z", "url": "https://files.pythonhosted.org/packages/8d/7d/a3308b492eafaefef24375884c9cf765a44fc7617d0af1d6bc59dd1d7279/htpbs-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4cb6951f7675c8c48636b23b45b4ae7", "sha256": "644fb3ebf5a93e857758e5371d2415e3b32a5e4222b74f769b75bcafb6ad24af"}, "downloads": -1, "filename": "htpbs-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b4cb6951f7675c8c48636b23b45b4ae7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8044, "upload_time": "2020-04-11T23:25:51", "upload_time_iso_8601": "2020-04-11T23:25:51.190859Z", "url": "https://files.pythonhosted.org/packages/59/a0/dae0d58faef40a7d47696d521175e5491f08da369a834e5efa62fe8864b6/htpbs-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9360770144a2b9f1fd32dfd619afef92", "sha256": "4e1cc4bc66ea5f21cd1a2b21a9725e026794d016fb047f0368f1b72eca5f6549"}, "downloads": -1, "filename": "htpbs-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9360770144a2b9f1fd32dfd619afef92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7284, "upload_time": "2020-04-11T23:25:54", "upload_time_iso_8601": "2020-04-11T23:25:54.531657Z", "url": "https://files.pythonhosted.org/packages/8d/7d/a3308b492eafaefef24375884c9cf765a44fc7617d0af1d6bc59dd1d7279/htpbs-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:13 2020"}