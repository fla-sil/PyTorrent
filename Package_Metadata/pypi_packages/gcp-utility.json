{"info": {"author": "Manojkumar vadivel", "author_email": "manojkumar.vsj@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# GCP Utility tool\n\nWe can backfill any kind of bigquery sql to specific destination table with powerful python jinja templating feature. By default it can support date templates in your query. It will automatically convert to date template to date value in your query while executing.\n\nFollowing are the available date templates you can use it in your query.\n\n```bash\n{{ds}} - YYYY-DD-MM date string \n{{ds_nodash}} - YYYYDDMM date string \n{{ds_yesterday}} - YYYY-DD-MM yesterday date string \n{{ds_yesterday_nodash}} - YYYYDDMM yesterday date string \n{{ds_tomorrow}} - YYYY-DD-MM tomorrow date string \n{{ds_tomorrow_nodash}} - YYYYDDMM tomorrow date string \n\n``` \n\n## Getting Started\n\n\n### Prerequisites\n\nWhat things you need to install the software and how to install them\n\n```\npython 2.7\ngoogle-cloud==0.32.0\nJinja2==2.10\n```\n\n### Installing\n\nUse virtualenv to Install the dependancy packages \n\n```\ngit clone https://gitlab.com/manojnuk50/GCPUtility\ncd GCPUtility\nvirtualenv venv\nactivate venv/bin/activate\npip install -e .\n```\n\n-h command will return the help content which contains all the available  options\n```\nbq_client -h\n```\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n## Available option\n\n```bash\nusage: bq_client.py [-h] [-q QUERY] [-f] [-p PROJECT] [-ssql] [-dml]\n                    [-d DESTINATION_TABLE] [-w WRITE_DESPOSITION]\n                    [-qf QUERY_FILE] [-t TEMPLATE] [-tf TEMPLATE_FILE]\n                    [-s START_DATE] [-e END_DATE] [-sf SERVICE_ACCOUNT_PATH]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -q QUERY, --query QUERY\n                        provide valid bigquery sql\n  -f, --no-flattern     Flattern results\n  -p PROJECT, --project_id PROJECT\n                        provide valid project id\n  -ssql, --standard-sql\n                        Mention if using Standard sql\n  -dml, --dml-statement\n                        Mention if using DML statements in your query\n  -d DESTINATION_TABLE, --destination-table DESTINATION_TABLE\n                        <projectname>:<datasetid>.<tableid> provide valid\n                        destination project-id\n  -w WRITE_DESPOSITION, --write-desposition WRITE_DESPOSITION\n                        Write disposition value\n  -qf QUERY_FILE, --query-file QUERY_FILE\n                        provide bigquery sql filepath\n  -t TEMPLATE, --template TEMPLATE\n                        provide template values\n  -tf TEMPLATE_FILE, --template-file TEMPLATE_FILE\n                        provide template file path\n  -s START_DATE, --start-date START_DATE\n                        Provide valid startdate (YYYY-MM-DD)\n  -e END_DATE, --end-date END_DATE\n                        Provide valid end date (YYYY-MM-DD)\n  -sf SERVICE_ACCOUNT_PATH, --service-account-file-path SERVICE_ACCOUNT_PATH\n                        provide valid path of service account json file```\n\n```\n\n### passing raw query\n\nyou can pass the raw query to script that need to be execute\n\n```\nbq_client -q \"select * from [sample_proj:datasetid.tableid]\" -p destination_projectid -d dest_datasetid.tableid\n```\n\n### Using sql file\n\nif your query is quite long, you can save it to text file and pass the path of it\n\n```\nbq_client --query-file \"/path/sample.sql\" -p destination_projectid -d dest_datasetid.tableid```\n\n```\n\n### Passing date parameter\n\nIn default it will substitute current date into template fields. but if you want to change the date value you can pass manually using start date parameter\n\n```\nbq_client --query-file sample.sql -p projectid -d dest_datasetid.tableid -s 2018-02-02\n\n```\n\n### Backfill\n\nPass start-date and end-date to script, it will backfill the data.\n\n```\nbq_client --query-file sample.sql -p projectid -d dest_datasetid.tableid -s 2018-02-02 -e 2018-02-10\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pypa/sampleproject", "keywords": "sample setuptools development", "license": "", "maintainer": "", "maintainer_email": "", "name": "gcp-utility", "package_url": "https://pypi.org/project/gcp-utility/", "platform": "", "project_url": "https://pypi.org/project/gcp-utility/", "project_urls": {"Bug Reports": "https://github.com/pypa/sampleproject/issues", "Funding": "https://donate.pypi.org", "Homepage": "https://github.com/pypa/sampleproject", "Say Thanks!": "http://saythanks.io/to/example", "Source": "https://github.com/pypa/sampleproject/"}, "release_url": "https://pypi.org/project/gcp-utility/2.0.3/", "requires_dist": ["google-cloud-bigquery (==1.24.0)", "Jinja2 (==2.11.2)", "check-manifest ; extra == 'dev'", "coverage ; extra == 'test'"], "requires_python": ">=3", "summary": "GCP utility will give additional custom features over gcs", "version": "2.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GCP Utility tool</h1>\n<p>We can backfill any kind of bigquery sql to specific destination table with powerful python jinja templating feature. By default it can support date templates in your query. It will automatically convert to date template to date value in your query while executing.</p>\n<p>Following are the available date templates you can use it in your query.</p>\n<pre><span class=\"o\">{{</span>ds<span class=\"o\">}}</span> - YYYY-DD-MM date string \n<span class=\"o\">{{</span>ds_nodash<span class=\"o\">}}</span> - YYYYDDMM date string \n<span class=\"o\">{{</span>ds_yesterday<span class=\"o\">}}</span> - YYYY-DD-MM yesterday date string \n<span class=\"o\">{{</span>ds_yesterday_nodash<span class=\"o\">}}</span> - YYYYDDMM yesterday date string \n<span class=\"o\">{{</span>ds_tomorrow<span class=\"o\">}}</span> - YYYY-DD-MM tomorrow date string \n<span class=\"o\">{{</span>ds_tomorrow_nodash<span class=\"o\">}}</span> - YYYYDDMM tomorrow date string \n</pre>\n<h2>Getting Started</h2>\n<h3>Prerequisites</h3>\n<p>What things you need to install the software and how to install them</p>\n<pre><code>python 2.7\ngoogle-cloud==0.32.0\nJinja2==2.10\n</code></pre>\n<h3>Installing</h3>\n<p>Use virtualenv to Install the dependancy packages</p>\n<pre><code>git clone https://gitlab.com/manojnuk50/GCPUtility\ncd GCPUtility\nvirtualenv venv\nactivate venv/bin/activate\npip install -e .\n</code></pre>\n<p>-h command will return the help content which contains all the available  options</p>\n<pre><code>bq_client -h\n</code></pre>\n<p>End with an example of getting some data out of the system or using it for a little demo</p>\n<h2>Available option</h2>\n<pre>usage: bq_client.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-q QUERY<span class=\"o\">]</span> <span class=\"o\">[</span>-f<span class=\"o\">]</span> <span class=\"o\">[</span>-p PROJECT<span class=\"o\">]</span> <span class=\"o\">[</span>-ssql<span class=\"o\">]</span> <span class=\"o\">[</span>-dml<span class=\"o\">]</span>\n                    <span class=\"o\">[</span>-d DESTINATION_TABLE<span class=\"o\">]</span> <span class=\"o\">[</span>-w WRITE_DESPOSITION<span class=\"o\">]</span>\n                    <span class=\"o\">[</span>-qf QUERY_FILE<span class=\"o\">]</span> <span class=\"o\">[</span>-t TEMPLATE<span class=\"o\">]</span> <span class=\"o\">[</span>-tf TEMPLATE_FILE<span class=\"o\">]</span>\n                    <span class=\"o\">[</span>-s START_DATE<span class=\"o\">]</span> <span class=\"o\">[</span>-e END_DATE<span class=\"o\">]</span> <span class=\"o\">[</span>-sf SERVICE_ACCOUNT_PATH<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -q QUERY, --query QUERY\n                        provide valid bigquery sql\n  -f, --no-flattern     Flattern results\n  -p PROJECT, --project_id PROJECT\n                        provide valid project id\n  -ssql, --standard-sql\n                        Mention <span class=\"k\">if</span> using Standard sql\n  -dml, --dml-statement\n                        Mention <span class=\"k\">if</span> using DML statements in your query\n  -d DESTINATION_TABLE, --destination-table DESTINATION_TABLE\n                        &lt;projectname&gt;:&lt;datasetid&gt;.&lt;tableid&gt; provide valid\n                        destination project-id\n  -w WRITE_DESPOSITION, --write-desposition WRITE_DESPOSITION\n                        Write disposition value\n  -qf QUERY_FILE, --query-file QUERY_FILE\n                        provide bigquery sql filepath\n  -t TEMPLATE, --template TEMPLATE\n                        provide template values\n  -tf TEMPLATE_FILE, --template-file TEMPLATE_FILE\n                        provide template file path\n  -s START_DATE, --start-date START_DATE\n                        Provide valid startdate <span class=\"o\">(</span>YYYY-MM-DD<span class=\"o\">)</span>\n  -e END_DATE, --end-date END_DATE\n                        Provide valid end date <span class=\"o\">(</span>YYYY-MM-DD<span class=\"o\">)</span>\n  -sf SERVICE_ACCOUNT_PATH, --service-account-file-path SERVICE_ACCOUNT_PATH\n                        provide valid path of service account json file<span class=\"sb\">```</span>\n</pre>\n<h3>passing raw query</h3>\n<p>you can pass the raw query to script that need to be execute</p>\n<pre><code>bq_client -q \"select * from [sample_proj:datasetid.tableid]\" -p destination_projectid -d dest_datasetid.tableid\n</code></pre>\n<h3>Using sql file</h3>\n<p>if your query is quite long, you can save it to text file and pass the path of it</p>\n<pre><code>bq_client --query-file \"/path/sample.sql\" -p destination_projectid -d dest_datasetid.tableid```\n\n</code></pre>\n<h3>Passing date parameter</h3>\n<p>In default it will substitute current date into template fields. but if you want to change the date value you can pass manually using start date parameter</p>\n<pre><code>bq_client --query-file sample.sql -p projectid -d dest_datasetid.tableid -s 2018-02-02\n\n</code></pre>\n<h3>Backfill</h3>\n<p>Pass start-date and end-date to script, it will backfill the data.</p>\n<pre><code>bq_client --query-file sample.sql -p projectid -d dest_datasetid.tableid -s 2018-02-02 -e 2018-02-10\n\n</code></pre>\n\n          </div>"}, "last_serial": 7166599, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "0112f6e31171df6349bf0776c317369f", "sha256": "bf10623121745750ba9c9dbf7deac151763ecfa260bca6f4480ebe6b1a098330"}, "downloads": -1, "filename": "gcp_utility-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0112f6e31171df6349bf0776c317369f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8423, "upload_time": "2018-10-27T16:09:16", "upload_time_iso_8601": "2018-10-27T16:09:16.434812Z", "url": "https://files.pythonhosted.org/packages/b8/7f/398ed48ea0a764f7189ffd3fe3853c4859c424057d458faa724f2d68e02f/gcp_utility-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "0852cbb682154228560a02e0646b79c4", "sha256": "aa0d52b82aa498cadd5abe6cea4d832fd11c8cdcca8e951cc15fc706a7e52e58"}, "downloads": -1, "filename": "gcp_utility-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0852cbb682154228560a02e0646b79c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8421, "upload_time": "2018-11-16T18:21:43", "upload_time_iso_8601": "2018-11-16T18:21:43.055404Z", "url": "https://files.pythonhosted.org/packages/bd/c3/d556fdd04be2b05570c4eab66695ddc539cae453e35978c61ca9e09d9d07/gcp_utility-1.1.1-py2.py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "789aaa213a49536ec959d536f042f1f1", "sha256": "19b632f64bf174bb46c1570c90a2203c6edef1676a5d02ce43a3fcd2c289d4bc"}, "downloads": -1, "filename": "gcp_utility-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "789aaa213a49536ec959d536f042f1f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8716, "upload_time": "2018-11-22T12:35:14", "upload_time_iso_8601": "2018-11-22T12:35:14.760311Z", "url": "https://files.pythonhosted.org/packages/22/0d/701592613e9bee8d56a164a70fc9660ca3cf81aabd2042a5d4d1496483f8/gcp_utility-1.1.2-py2.py3-none-any.whl", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "c24c0c206ad0270b1385392a9ff05fd9", "sha256": "c32a2b8171feb943cc162932e13c588e493f2408fd3661fbacf884eadf5883ca"}, "downloads": -1, "filename": "gcp_utility-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c24c0c206ad0270b1385392a9ff05fd9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8793, "upload_time": "2018-12-19T08:16:07", "upload_time_iso_8601": "2018-12-19T08:16:07.178161Z", "url": "https://files.pythonhosted.org/packages/48/84/30a0aea81d94470dc26ea4e2a8b7066210a510356a3d49cf9548ef7caeca/gcp_utility-1.1.3-py2.py3-none-any.whl", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "8e2c5f02e574880f3a652998639af5c5", "sha256": "7fdee6d3941ce733518fa9dd6f732b1af38dd8ae707a888a5098a4b7cd552a66"}, "downloads": -1, "filename": "gcp_utility-1.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e2c5f02e574880f3a652998639af5c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8630, "upload_time": "2020-05-04T18:07:20", "upload_time_iso_8601": "2020-05-04T18:07:20.572976Z", "url": "https://files.pythonhosted.org/packages/88/e7/fa18aca623996c86e1fa86a003ce89946a077dc8e9071067478a9b78e256/gcp_utility-1.1.5-py2.py3-none-any.whl", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "2adcd7884052a42c642d36ded48a7cf4", "sha256": "3ffb44ecf2104b9b5d62e4500641d9f210b28eebc7d3d10066f1d08f10b0fa6d"}, "downloads": -1, "filename": "gcp_utility-1.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2adcd7884052a42c642d36ded48a7cf4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6,<3", "size": 8643, "upload_time": "2020-05-04T18:21:52", "upload_time_iso_8601": "2020-05-04T18:21:52.964873Z", "url": "https://files.pythonhosted.org/packages/c2/87/3dad2908cc01f44234c5b0e284dcc39e5d6da865da5f6acafc2159ac3101/gcp_utility-1.1.6-py2.py3-none-any.whl", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "5c44eec4c7509e04ae0b68eb750da41f", "sha256": "a53631a62939241050b7856f7eb81470c6f903c37b7cc4bd9f7af0304367df2c"}, "downloads": -1, "filename": "gcp_utility-1.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c44eec4c7509e04ae0b68eb750da41f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6,<3", "size": 8645, "upload_time": "2020-05-04T18:57:34", "upload_time_iso_8601": "2020-05-04T18:57:34.145612Z", "url": "https://files.pythonhosted.org/packages/ca/5d/03982ef2c04796e7cad4da7563ad8670f59107b74bf6aac42305f66ccea7/gcp_utility-1.1.7-py2.py3-none-any.whl", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "3b09da758d08c29b13e44fa2e36f646b", "sha256": "d0d36acc0d8da18d1e5878ef38360877deadc5535693f588ceece7618d5005cb"}, "downloads": -1, "filename": "gcp_utility-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3b09da758d08c29b13e44fa2e36f646b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 8633, "upload_time": "2020-05-04T18:24:29", "upload_time_iso_8601": "2020-05-04T18:24:29.239299Z", "url": "https://files.pythonhosted.org/packages/6e/62/41b374dde6cbafad03cf41cbf023cd850efcd42103bf8a01ea5809740e3e/gcp_utility-2.0.1-py2.py3-none-any.whl", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "c0ac9c3baa935131a41709fa6df76d98", "sha256": "5518fc76dcef253dabb5fc7117c8e890ab3349262b82e68d0a7f6db3e82c840c"}, "downloads": -1, "filename": "gcp_utility-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0ac9c3baa935131a41709fa6df76d98", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 8640, "upload_time": "2020-05-04T18:56:02", "upload_time_iso_8601": "2020-05-04T18:56:02.071086Z", "url": "https://files.pythonhosted.org/packages/ed/f2/f10b1398f63da8e01e7e3ecba4ce004cbd257c9c08212296234a9257ecd7/gcp_utility-2.0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0ac9c3baa935131a41709fa6df76d98", "sha256": "5518fc76dcef253dabb5fc7117c8e890ab3349262b82e68d0a7f6db3e82c840c"}, "downloads": -1, "filename": "gcp_utility-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0ac9c3baa935131a41709fa6df76d98", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 8640, "upload_time": "2020-05-04T18:56:02", "upload_time_iso_8601": "2020-05-04T18:56:02.071086Z", "url": "https://files.pythonhosted.org/packages/ed/f2/f10b1398f63da8e01e7e3ecba4ce004cbd257c9c08212296234a9257ecd7/gcp_utility-2.0.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:58:45 2020"}