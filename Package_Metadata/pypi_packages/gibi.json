{"info": {"author": "R\u00e9my Sanchez", "author_email": "remy.sanchez@hyperthese.net", "bugtrack_url": null, "classifiers": [], "description": "Gibi\n====\n\nGibi is a random word generator, based on Markov chains.\n\nIt analyzes a text in order to deduce the probability of transition from one\ncharacter to another, and then generates a completely random word that will look\nalike what you have feeded it as input.\n\nBuild status\n------------\n\n.. |build-develop| image:: https://travis-ci.org/Xowap/gibi.png?branch=develop\n.. _build-develop: https://travis-ci.org/Xowap/gibi\n\n.. |build-master| image:: https://travis-ci.org/Xowap/gibi.png?branch=master\n.. _build-master: https://travis-ci.org/Xowap/gibi\n\n:develop: |build-develop|_\n:master: |build-master|_\n\nUsage\n-----\n\nGibi can be used either as a CLI tool, either as a library.\n\nCLI\n~~~\n\nA tool named `gibi` helps you to generate a matrix file, and then use it to generate words. It is\nself-documented using the `--help` switch, however here is a typical workflow.\n\n.. code-block::\n\n   $ gibi analyze corpus.txt matrix.gibi\n   $ gibi generate matrix.gibi\n\nThis will analyze the `corpus.txt` file into the `matrix.gibi` file, and then produce 10 random\nwords.\n\nAPI\n~~~\n\nBasic usage\n...........\n\nIn its simplest form, using the API looks like:\n\n.. code-block:: python\n\n   with codecs.open(path, 'r', encoding='utf-8') as f:\n       n = FrenchNormalizer(f)\n       m = Matrix()\n\n       m.feed(n)\n\n   print(m.make_word())\n\nYou can also make something deterministic by providing a seed to `make_word()`.\nGiven the same `Matrix` and the same seed, you will always get the same result.\nThe provided seed is anything that `Python's random <http://docs.python.org/3.3/library/random.html#random.seed>`_\nwould accept. See the following example:\n\n.. code-block:: python\n\n   assert m.make_word(42) == m.make_word(42)\n\nUsing matrix files\n..................\n\nYou will probably pre-generate a matrix file using `gibi analyze`, and then load the resulting file\nlike this\n\n.. code-block:: python\n\n   m = Matrix()\n   with open('matrix.gibi', 'rb') as f:\n       m.load(f)\n\n   print(m.make_word())\n\nThis is much more performant, as generating the matrix can be time-consuming if the corpus is big.\n\nLegal terms\n-----------\n\nThis project is written and copyrighted by its authors, as the Git log can\ntestify.\n\nIt is released under the terms of the WTFPL. Please refer to the COPYING file\nfor more information.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Xowap/gibi", "keywords": null, "license": "COPYING.txt", "maintainer": null, "maintainer_email": null, "name": "gibi", "package_url": "https://pypi.org/project/gibi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gibi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Xowap/gibi"}, "release_url": "https://pypi.org/project/gibi/0.2.3-1/", "requires_dist": null, "requires_python": null, "summary": "Generate random words based on Markov chains", "version": "0.2.3-1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Gibi is a random word generator, based on Markov chains.</p>\n<p>It analyzes a text in order to deduce the probability of transition from one\ncharacter to another, and then generates a completely random word that will look\nalike what you have feeded it as input.</p>\n<div id=\"build-status\">\n<h2>Build status</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>develop:</th><td><a href=\"https://travis-ci.org/Xowap/gibi\" rel=\"nofollow\"><img alt=\"build-develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed190ceecd8d52389ed42a165b5015dfe1c80e24/68747470733a2f2f7472617669732d63692e6f72672f586f7761702f676962692e706e673f6272616e63683d646576656c6f70\"></a></td>\n</tr>\n<tr><th>master:</th><td><a href=\"https://travis-ci.org/Xowap/gibi\" rel=\"nofollow\"><img alt=\"build-master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc0195c85e01897477af889dd1f7c05aeb593045/68747470733a2f2f7472617669732d63692e6f72672f586f7761702f676962692e706e673f6272616e63683d6d6173746572\"></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Gibi can be used either as a CLI tool, either as a library.</p>\n<div id=\"cli\">\n<h3>CLI</h3>\n<p>A tool named <cite>gibi</cite> helps you to generate a matrix file, and then use it to generate words. It is\nself-documented using the <cite>\u2013help</cite> switch, however here is a typical workflow.</p>\n<pre>$ gibi analyze corpus.txt matrix.gibi\n$ gibi generate matrix.gibi\n</pre>\n<p>This will analyze the <cite>corpus.txt</cite> file into the <cite>matrix.gibi</cite> file, and then produce 10 random\nwords.</p>\n</div>\n<div id=\"api\">\n<h3>API</h3>\n<div id=\"basic-usage\">\n<h4>Basic usage</h4>\n<p>In its simplest form, using the API looks like:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">codecs</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">FrenchNormalizer</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Matrix</span><span class=\"p\">()</span>\n\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">feed</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">make_word</span><span class=\"p\">())</span>\n</pre>\n<p>You can also make something deterministic by providing a seed to <cite>make_word()</cite>.\nGiven the same <cite>Matrix</cite> and the same seed, you will always get the same result.\nThe provided seed is anything that <a href=\"http://docs.python.org/3.3/library/random.html#random.seed\" rel=\"nofollow\">Python\u2019s random</a>\nwould accept. See the following example:</p>\n<pre><span class=\"k\">assert</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">make_word</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">make_word</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"using-matrix-files\">\n<h4>Using matrix files</h4>\n<p>You will probably pre-generate a matrix file using <cite>gibi analyze</cite>, and then load the resulting file\nlike this</p>\n<pre><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Matrix</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'matrix.gibi'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">make_word</span><span class=\"p\">())</span>\n</pre>\n<p>This is much more performant, as generating the matrix can be time-consuming if the corpus is big.</p>\n</div>\n</div>\n</div>\n<div id=\"legal-terms\">\n<h2>Legal terms</h2>\n<p>This project is written and copyrighted by its authors, as the Git log can\ntestify.</p>\n<p>It is released under the terms of the WTFPL. Please refer to the COPYING file\nfor more information.</p>\n</div>\n\n          </div>"}, "last_serial": 1021652, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "81c3cf86b6a597193e779d5d91e70e60", "sha256": "e72044b5397d56fef0e645e063ef04da94d2fd20f226d79b7648e18ba0a51101"}, "downloads": -1, "filename": "gibi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "81c3cf86b6a597193e779d5d91e70e60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4872, "upload_time": "2014-03-02T22:59:11", "upload_time_iso_8601": "2014-03-02T22:59:11.331864Z", "url": "https://files.pythonhosted.org/packages/55/ec/35be722110cc7e6ccb963a7c8f6bdfcba0fde47fb09032c25b8051bb3bbb/gibi-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "815efc5817af4a63962c3ca9f9943994", "sha256": "a9beffa2d6de92b38340b542d99fd82ab6140a2f7ef96ffef09255645223562b"}, "downloads": -1, "filename": "gibi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "815efc5817af4a63962c3ca9f9943994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6580, "upload_time": "2014-03-03T04:02:53", "upload_time_iso_8601": "2014-03-03T04:02:53.103390Z", "url": "https://files.pythonhosted.org/packages/e2/01/43a589038512e8794bc209d912697f9f754dea1f74a89059e48562af19cd/gibi-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4cdca11f39ebc8c5b0f226d372475d2d", "sha256": "582ffc5c458d16bd83e287a3940d53a12ffd465b959783df066873195fa6a856"}, "downloads": -1, "filename": "gibi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4cdca11f39ebc8c5b0f226d372475d2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6636, "upload_time": "2014-03-03T04:25:37", "upload_time_iso_8601": "2014-03-03T04:25:37.077381Z", "url": "https://files.pythonhosted.org/packages/82/43/0c90b432acd7dd77fec1c92c5b2c07083d4393f039a050da87d87128c184/gibi-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b5b090272acaa2861ba4b2a3648b88aa", "sha256": "e8b53434c8a095305aac6819529deed6770fad4927d4d13fc706c75c2b9c7ae9"}, "downloads": -1, "filename": "gibi-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b5b090272acaa2861ba4b2a3648b88aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2014-03-03T15:13:17", "upload_time_iso_8601": "2014-03-03T15:13:17.702587Z", "url": "https://files.pythonhosted.org/packages/0d/fb/cc1ef30a72fddd3ea019b395823d0a35e84707e547dfa321311e5ee83c93/gibi-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "33a427505c2852f8cbf898d52a399139", "sha256": "0b869aec92dc080e0bad70e0b5de291509297e60f61417b1ef80d03bf005d5c0"}, "downloads": -1, "filename": "gibi-0.2.3.tar.gz", "has_sig": false, "md5_digest": "33a427505c2852f8cbf898d52a399139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7062, "upload_time": "2014-03-06T22:48:35", "upload_time_iso_8601": "2014-03-06T22:48:35.577452Z", "url": "https://files.pythonhosted.org/packages/3c/b9/45b94ffcc61b7a1fd3e3a6bf773dc1e5f2b18e953e1251df2dbeae4a4684/gibi-0.2.3.tar.gz", "yanked": false}], "0.2.3-1": [{"comment_text": "", "digests": {"md5": "287543e9ef6029a80438042510ffc32d", "sha256": "29bbbc6a9859767663144c78d94421630fadc4cfed0149752aa43cace90783ff"}, "downloads": -1, "filename": "gibi-0.2.3-1.tar.gz", "has_sig": false, "md5_digest": "287543e9ef6029a80438042510ffc32d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7082, "upload_time": "2014-03-06T22:49:32", "upload_time_iso_8601": "2014-03-06T22:49:32.110458Z", "url": "https://files.pythonhosted.org/packages/6f/86/cbf52f728adb39b544f856f16c5b6160134253089770433083f4a89503d8/gibi-0.2.3-1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "287543e9ef6029a80438042510ffc32d", "sha256": "29bbbc6a9859767663144c78d94421630fadc4cfed0149752aa43cace90783ff"}, "downloads": -1, "filename": "gibi-0.2.3-1.tar.gz", "has_sig": false, "md5_digest": "287543e9ef6029a80438042510ffc32d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7082, "upload_time": "2014-03-06T22:49:32", "upload_time_iso_8601": "2014-03-06T22:49:32.110458Z", "url": "https://files.pythonhosted.org/packages/6f/86/cbf52f728adb39b544f856f16c5b6160134253089770433083f4a89503d8/gibi-0.2.3-1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:30 2020"}