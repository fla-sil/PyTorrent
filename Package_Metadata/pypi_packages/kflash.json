{"info": {"author": "https://github.com/vowstar/kflash.py/graphs/contributors", "author_email": "vowstar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation", "Topic :: Software Development :: Embedded Systems"], "description": "kflash, A Python-based Kendryte K210 UART ISP Utility\n=====================================================\n\nUsage\n-----\n\n.. code:: bash\n\n    # kflash --help\n    usage: kflash [-h] [-p PORT] [-f FLASH] [-b BAUDRATE] [-l BOOTLOADER]\n                    [-k KEY] [-v] [-t] [-n] [-s] [-B BOARD] [-S SLOW]\n                    firmware\n\n    positional arguments:\n    firmware              firmware bin path\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -p PORT, --port PORT  COM Port\n    -f FLASH, --flash FLASH\n                            SPI Flash type, 0 for SPI3, 1 for SPI0\n    -b BAUDRATE, --baudrate BAUDRATE\n                            UART baudrate for uploading firmware\n    -l BOOTLOADER, --bootloader BOOTLOADER\n                            bootloader bin path\n    -k KEY, --key KEY     AES key in hex, if you need encrypt your firmware.\n    -v, --verbose         increase output verbosity\n    -t, --terminal        Start a terminal after finish (Python miniterm)\n    -n, --noansi          Do not use ANSI colors, recommended in Windows CMD\n    -s, --sram            Download firmware to SRAM and boot\n    -B BOARD, --Board BOARD\n                            Select dev board, e.g. kd233, dan, bit, goD, goE or\n                            trainer\n    -S SLOW, --Slow SLOW  Slow download mode\n\nAttention\n---------\n\nMaixgo with openec firmware, BOARD must choose ``-B goE``, and should choose\nsencond com port.\n\nWith cmsis-dap firmware(before 2019.02.21), BOARD must use ``-B goD``.\n\nYou can update `new cmsis-dap firmware <http://blog.sipeed.com/p/352.html>`__, it is same as openec.\n\nFor K210 Trainer V0.01b, BOARD must choose ``-B trainer``.\n\nFor KD233, BOARD must choose ``-B kd233``, and the jumper for kd233 automatic\ndownload circuit must be set.\n\nInstallation\n------------\n\n.. code:: bash\n\n    sudo pip3 install kflash\n\nIf you receive an error, please try\n\n.. code:: bash\n\n    sudo python -m pip install kflash\n    sudo python3 -m pip install kflash\n    sudo pip install kflash\n    sudo pip2 install kflash\n\nFor linux users, first of all, you must add yourself to dialout group.\nOr you have to use root permission every time.\n\n.. code:: bash\n\n    sudo usermod -a -G dialout $(whoami)\n\nSample Usage\n------------\n\n.. code:: bash\n\n    # Linux or macOS\n    # Using pip\n    kflash -B dan firmware.bin\n    kflash -B dan -t firmware.bin # Open a Serial Terminal After Finish\n    # Using source code\n    python3 kflash.py -B dan firmware.bin\n    python3 kflash.py -B dan -t firmware.bin # Open a Serial Terminal After Finish\n\n    # Windows CMD or PowerShell\n    # Using pip\n    kflash -B dan firmware.bin\n    kflash -B dan -t firmware.bin # Open a Serial Terminal After Finish\n    kflash -B dan -n -t firmware.bin # Open a Serial Terminal After Finish, do not use ANSI colors\n    # Using source code\n    python kflash.py -B dan firmware.bin\n    python kflash.py -B dan -t firmware.bin # Open a Serial Terminal After Finish\n    python kflash.py -B dan -n -t firmware.bin # Open a Serial Terminal After Finish, do not use ANSI colors\n\n    # Windows Subsystem for Linux\n    # Using pip\n    sudo kflash -B dan -p /dev/ttyS13 firmware.bin # ttyS13 Stands for the COM13 in Device Manager\n    sudo kflash -B dan -p /dev/ttyS13 -t firmware.bin # Open a Serial Terminal After Finish\n    # Using source code\n    sudo python3 kflash.py -B dan -p /dev/ttyS13 firmware.bin # ttyS13 Stands for the COM13 in Device Manager\n    sudo python3 kflash.py -B dan -p /dev/ttyS13 -t firmware.bin # Open a Serial Terminal After Finish\n\nFor fast programming,\n\n.. code:: bash\n\n    # Using pip\n    # This will enable opoenec super-baudrate!\n    kflash -b 4500000 -B goE firmware.bin\n    # Trainer could use 8000000 baudrate!\n    kflash -b 8000000 -B trainer firmware.bin\n    # Dan could use 3000000 baudrate!\n    kflash -b 3000000 -B dan firmware.bin\n\n    # Using source code\n    # This will enable opoenec super-baudrate!\n    python3 kflash.py -b 4500000 -B goE firmware.bin\n    # Trainer could use 8000000 baudrate!\n    python3 kflash.py -b 8000000 -B trainer firmware.bin\n    # Dan could use 3000000 baudrate!\n    python3 kflash.py -b 3000000 -B dan firmware.bin\n\nExecute user code directly in SRAM and view in serial terminal,\n\n.. code:: bash\n\n    # Using pip\n    # For `.elf` file\n    kflash -b 115200 -B goE -s -t hello_world\n    # For `.bin` file\n    kflash -b 115200 -B goE -s -t hello_world.bin\n\n    # Using source code\n    # For `.elf` file\n    python3 kflash.py -b 115200 -B goE -s -t hello_world\n    # For `.bin` file\n    python3 kflash.py -b 115200 -B goE -s -t hello_world.bin\n\nRequirements\n------------\n\n-  python>=3 or python=2.7\n-  pyserial>=3.4\n-  pyelftools>=0.25\n\n    Python3 is recommended.\n\nIf your python version below python3.4, you need:\n\n-  enum34>=1.1.6\n\nWindows Requirements\n~~~~~~~~~~~~~~~~~~~~\n\n-  Download and Install `Python3 at python.org <https://www.python.org/downloads/release/python-367/>`__\n-  Download the `get-pip.py at https://bootstrap.pypa.io/get-pip.py <https://bootstrap.pypa.io/get-pip.py>`__\n-  Start CMD or PowerShell Terminal and run the following command\n\n.. code:: bash\n\n    python get-pip.py\n    python -m pip install pyserial\n    python -m pip install pyelftools\n    # When you python version below python3.4\n    python -m pip install enum34\n\n--------------\n\nmacOS Requirements\n~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    # Install Homebrew, an awesome package manager for macOS\n    /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n    brew install python\n    python3 -m pip3 install pyserial\n    python3 -m pip3 install pyelftools\n\n--------------\n\nUbuntu, Debian Requirements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    sudo apt update\n    sudo apt install python3 python3-pip\n    sudo pip3 install pyserial\n    sudo pip3 install pyelftools\n\n--------------\n\nFedora\n~~~~~~\n\n.. code:: bash\n\n    sudo dnf install python3\n    sudo python3 -m pip install pyserial\n    sudo python3 -m pip install pyelftools\n\n--------------\n\nCentOS\n~~~~~~\n\n.. code:: bash\n\n    sudo yum -y install epel-release\n    sudo yum -y install python36u python36u-pip\n    sudo ln -s /bin/python3.6 /usr/bin/python3\n    sudo ln -s /bin/pip3.6 /usr/bin/pip3\n    sudo pip3 install pyserial\n    sudo pip3 install pyelftools\n\nTrouble Shooting\n----------------\n\nCould not open port /dev/tty*: [Errno 13] Permission denied: '/dev/tty*'\n------------------------------------------------------------------------\n\n    For Windows Subsystem for Linux, you may have to use sudo due to its docker\n    like feature\n\n-  Add your self to a dialout group to use usb-to-uart devices by\n\n.. code:: bash\n\n    sudo usermod -a -G dialout $(whoami)\n\n-  Logout, and log in.\n\n--------------\n\nUART Auto Detecting is Not Working, or Select the Wrong UART Port\n-----------------------------------------------------------------\n\nWindows\n~~~~~~~\n\n-  Check the COM Number for your device at the Device Manager, such as\n   **USB-SERIAL CH340(COM13)**.\n\n.. code:: bash\n\n    # Using pip, only need once when you install\n    pip install kflash\n    kflash -p COM13 firmware.bin\n    # Or\n    kflash.exe -p COM13 firmware.bin\n    # Using source code\n    python kflash.py -p COM13 firmware.bin\n\nWindows Subsystem For Linux(WSL)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Check the COM Number for your device at the Device Manager, such as\n   **USB-SERIAL CH340(COM13)**.\n\n.. code:: bash\n\n    # Using pip, only need once when you install\n    sudo pip3 install kflash\n    sudo kflash -p /dev/ttyS13 firmware.bin # You have to use *sudo* here\n    # Using source code\n    sudo python3 kflash.py -p /dev/ttyS13 firmware.bin # You have to use *sudo* here\n\nLinux\n~~~~~\n\n-  Check the USB Device Name, Usually presented as ttyUSB\\*\n\n.. code:: bash\n\n    ls /dev/ttyUSB*\n\n-  It will print :\n\n.. code:: bash\n\n    $ ls /dev/ttyUSB*\n    /dev/ttyUSB0\n    /dev/ttyUSB2\n    /dev/ttyUSB13\n\n-  Choose the one you think belongs to your device, or you may try multimule\n   names.\n\n.. code:: bash\n\n    # Using pip\n    python3 kflash.py -p /dev/ttyUSB13 firmware.bin\n    # Using source code\n    kflash -p /dev/ttyUSB13 firmware.bin\n\nmacOS\n~~~~~\n\n-  Check the USB Device Name, Usually presented as cu.\\*\n\n.. code:: bash\n\n    ls /dev/cu.*\n\n-  It will print :\n\n.. code:: bash\n\n    $ ls /dev/ttyUSB*\n    /dev/cu.wchusbserial1410\n    /dev/cu.wchusbserial1437\n    /dev/cu.SLAB_USBtoUART2333\n\n-  Choose the one you think belongs to your device, or you may try multimule\n   names.\n\n.. code:: bash\n\n    # Using pip\n    kflash -p /dev/cu.wchusbserial1410 firmware.bin\n    # Using source code\n    python3 kflash.py -p /dev/cu.wchusbserial1410 firmware.bin\n\nYou may unable to find the device even in the /dev, check the link below for\ndrivers\n\n-  For K210 and Sipeed Dan -> `WCH CH34x USB2UART Chip <https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver>`__\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vowstar/kflash.py", "keywords": "", "license": "MIT License", "maintainer": "Huang Rui", "maintainer_email": "vowstar@gmail.com", "name": "kflash", "package_url": "https://pypi.org/project/kflash/", "platform": "all", "project_url": "https://pypi.org/project/kflash/", "project_urls": {"Homepage": "https://github.com/vowstar/kflash.py"}, "release_url": "https://pypi.org/project/kflash/0.8.5/", "requires_dist": ["pyserial (>=3.4)", "pyelftools (>=0.25)", "enum34 (>=1.1.6)"], "requires_python": "", "summary": "Kendryte UART ISP Utility - programming code to k210", "version": "0.8.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"c1\"># kflash --help\n</span>usage: kflash <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-p PORT<span class=\"o\">]</span> <span class=\"o\">[</span>-f FLASH<span class=\"o\">]</span> <span class=\"o\">[</span>-b BAUDRATE<span class=\"o\">]</span> <span class=\"o\">[</span>-l BOOTLOADER<span class=\"o\">]</span>\n                <span class=\"o\">[</span>-k KEY<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>-t<span class=\"o\">]</span> <span class=\"o\">[</span>-n<span class=\"o\">]</span> <span class=\"o\">[</span>-s<span class=\"o\">]</span> <span class=\"o\">[</span>-B BOARD<span class=\"o\">]</span> <span class=\"o\">[</span>-S SLOW<span class=\"o\">]</span>\n                firmware\n\npositional arguments:\nfirmware              firmware bin path\n\noptional arguments:\n-h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n-p PORT, --port PORT  COM Port\n-f FLASH, --flash FLASH\n                        SPI Flash type, <span class=\"m\">0</span> <span class=\"k\">for</span> SPI3, <span class=\"m\">1</span> <span class=\"k\">for</span> SPI0\n-b BAUDRATE, --baudrate BAUDRATE\n                        UART baudrate <span class=\"k\">for</span> uploading firmware\n-l BOOTLOADER, --bootloader BOOTLOADER\n                        bootloader bin path\n-k KEY, --key KEY     AES key in hex, <span class=\"k\">if</span> you need encrypt your firmware.\n-v, --verbose         increase output verbosity\n-t, --terminal        Start a terminal after finish <span class=\"o\">(</span>Python miniterm<span class=\"o\">)</span>\n-n, --noansi          Do not use ANSI colors, recommended in Windows CMD\n-s, --sram            Download firmware to SRAM and boot\n-B BOARD, --Board BOARD\n                        Select dev board, e.g. kd233, dan, bit, goD, goE or\n                        trainer\n-S SLOW, --Slow SLOW  Slow download mode\n</pre>\n</div>\n<div id=\"attention\">\n<h2>Attention</h2>\n<p>Maixgo with openec firmware, BOARD must choose <tt><span class=\"pre\">-B</span> goE</tt>, and should choose\nsencond com port.</p>\n<p>With cmsis-dap firmware(before 2019.02.21), BOARD must use <tt><span class=\"pre\">-B</span> goD</tt>.</p>\n<p>You can update <a href=\"http://blog.sipeed.com/p/352.html\" rel=\"nofollow\">new cmsis-dap firmware</a>, it is same as openec.</p>\n<p>For K210 Trainer V0.01b, BOARD must choose <tt><span class=\"pre\">-B</span> trainer</tt>.</p>\n<p>For KD233, BOARD must choose <tt><span class=\"pre\">-B</span> kd233</tt>, and the jumper for kd233 automatic\ndownload circuit must be set.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>sudo pip3 install kflash\n</pre>\n<p>If you receive an error, please try</p>\n<pre>sudo python -m pip install kflash\nsudo python3 -m pip install kflash\nsudo pip install kflash\nsudo pip2 install kflash\n</pre>\n<p>For linux users, first of all, you must add yourself to dialout group.\nOr you have to use root permission every time.</p>\n<pre>sudo usermod -a -G dialout <span class=\"k\">$(</span>whoami<span class=\"k\">)</span>\n</pre>\n</div>\n<div id=\"sample-usage\">\n<h2>Sample Usage</h2>\n<pre><span class=\"c1\"># Linux or macOS\n# Using pip\n</span>kflash -B dan firmware.bin\nkflash -B dan -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish\n# Using source code\n</span>python3 kflash.py -B dan firmware.bin\npython3 kflash.py -B dan -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish\n</span>\n<span class=\"c1\"># Windows CMD or PowerShell\n# Using pip\n</span>kflash -B dan firmware.bin\nkflash -B dan -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish\n</span>kflash -B dan -n -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish, do not use ANSI colors\n# Using source code\n</span>python kflash.py -B dan firmware.bin\npython kflash.py -B dan -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish\n</span>python kflash.py -B dan -n -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish, do not use ANSI colors\n</span>\n<span class=\"c1\"># Windows Subsystem for Linux\n# Using pip\n</span>sudo kflash -B dan -p /dev/ttyS13 firmware.bin <span class=\"c1\"># ttyS13 Stands for the COM13 in Device Manager\n</span>sudo kflash -B dan -p /dev/ttyS13 -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish\n# Using source code\n</span>sudo python3 kflash.py -B dan -p /dev/ttyS13 firmware.bin <span class=\"c1\"># ttyS13 Stands for the COM13 in Device Manager\n</span>sudo python3 kflash.py -B dan -p /dev/ttyS13 -t firmware.bin <span class=\"c1\"># Open a Serial Terminal After Finish</span>\n</pre>\n<p>For fast programming,</p>\n<pre><span class=\"c1\"># Using pip\n# This will enable opoenec super-baudrate!\n</span>kflash -b <span class=\"m\">4500000</span> -B goE firmware.bin\n<span class=\"c1\"># Trainer could use 8000000 baudrate!\n</span>kflash -b <span class=\"m\">8000000</span> -B trainer firmware.bin\n<span class=\"c1\"># Dan could use 3000000 baudrate!\n</span>kflash -b <span class=\"m\">3000000</span> -B dan firmware.bin\n\n<span class=\"c1\"># Using source code\n# This will enable opoenec super-baudrate!\n</span>python3 kflash.py -b <span class=\"m\">4500000</span> -B goE firmware.bin\n<span class=\"c1\"># Trainer could use 8000000 baudrate!\n</span>python3 kflash.py -b <span class=\"m\">8000000</span> -B trainer firmware.bin\n<span class=\"c1\"># Dan could use 3000000 baudrate!\n</span>python3 kflash.py -b <span class=\"m\">3000000</span> -B dan firmware.bin\n</pre>\n<p>Execute user code directly in SRAM and view in serial terminal,</p>\n<pre><span class=\"c1\"># Using pip\n# For `.elf` file\n</span>kflash -b <span class=\"m\">115200</span> -B goE -s -t hello_world\n<span class=\"c1\"># For `.bin` file\n</span>kflash -b <span class=\"m\">115200</span> -B goE -s -t hello_world.bin\n\n<span class=\"c1\"># Using source code\n# For `.elf` file\n</span>python3 kflash.py -b <span class=\"m\">115200</span> -B goE -s -t hello_world\n<span class=\"c1\"># For `.bin` file\n</span>python3 kflash.py -b <span class=\"m\">115200</span> -B goE -s -t hello_world.bin\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><p>python&gt;=3 or python=2.7</p>\n</li>\n<li><p>pyserial&gt;=3.4</p>\n</li>\n<li><p>pyelftools&gt;=0.25</p>\n<blockquote>\n<p>Python3 is recommended.</p>\n</blockquote>\n</li>\n</ul>\n<p>If your python version below python3.4, you need:</p>\n<ul>\n<li>enum34&gt;=1.1.6</li>\n</ul>\n<div id=\"windows-requirements\">\n<h3>Windows Requirements</h3>\n<ul>\n<li>Download and Install <a href=\"https://www.python.org/downloads/release/python-367/\" rel=\"nofollow\">Python3 at python.org</a></li>\n<li>Download the <a href=\"https://bootstrap.pypa.io/get-pip.py\" rel=\"nofollow\">get-pip.py at https://bootstrap.pypa.io/get-pip.py</a></li>\n<li>Start CMD or PowerShell Terminal and run the following command</li>\n</ul>\n<pre>python get-pip.py\npython -m pip install pyserial\npython -m pip install pyelftools\n<span class=\"c1\"># When you python version below python3.4\n</span>python -m pip install enum34\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"macos-requirements\">\n<h3>macOS Requirements</h3>\n<pre><span class=\"c1\"># Install Homebrew, an awesome package manager for macOS\n</span>/usr/bin/ruby -e <span class=\"s2\">\"</span><span class=\"k\">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"k\">)</span><span class=\"s2\">\"</span>\nbrew install python\npython3 -m pip3 install pyserial\npython3 -m pip3 install pyelftools\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"ubuntu-debian-requirements\">\n<h3>Ubuntu, Debian Requirements</h3>\n<pre>sudo apt update\nsudo apt install python3 python3-pip\nsudo pip3 install pyserial\nsudo pip3 install pyelftools\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"fedora\">\n<h3>Fedora</h3>\n<pre>sudo dnf install python3\nsudo python3 -m pip install pyserial\nsudo python3 -m pip install pyelftools\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"centos\">\n<h3>CentOS</h3>\n<pre>sudo yum -y install epel-release\nsudo yum -y install python36u python36u-pip\nsudo ln -s /bin/python3.6 /usr/bin/python3\nsudo ln -s /bin/pip3.6 /usr/bin/pip3\nsudo pip3 install pyserial\nsudo pip3 install pyelftools\n</pre>\n</div>\n</div>\n<div id=\"trouble-shooting\">\n<h2>Trouble Shooting</h2>\n</div>\n<div id=\"could-not-open-port-dev-tty-errno-13-permission-denied-dev-tty\">\n<h2>Could not open port /dev/tty*: [Errno 13] Permission denied: \u2018/dev/tty*\u2019</h2>\n<blockquote>\nFor Windows Subsystem for Linux, you may have to use sudo due to its docker\nlike feature</blockquote>\n<ul>\n<li>Add your self to a dialout group to use usb-to-uart devices by</li>\n</ul>\n<pre>sudo usermod -a -G dialout <span class=\"k\">$(</span>whoami<span class=\"k\">)</span>\n</pre>\n<ul>\n<li>Logout, and log in.</li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"uart-auto-detecting-is-not-working-or-select-the-wrong-uart-port\">\n<h2>UART Auto Detecting is Not Working, or Select the Wrong UART Port</h2>\n<div id=\"windows\">\n<h3>Windows</h3>\n<ul>\n<li>Check the COM Number for your device at the Device Manager, such as\n<strong>USB-SERIAL CH340(COM13)</strong>.</li>\n</ul>\n<pre><span class=\"c1\"># Using pip, only need once when you install\n</span>pip install kflash\nkflash -p COM13 firmware.bin\n<span class=\"c1\"># Or\n</span>kflash.exe -p COM13 firmware.bin\n<span class=\"c1\"># Using source code\n</span>python kflash.py -p COM13 firmware.bin\n</pre>\n</div>\n<div id=\"windows-subsystem-for-linux-wsl\">\n<h3>Windows Subsystem For Linux(WSL)</h3>\n<ul>\n<li>Check the COM Number for your device at the Device Manager, such as\n<strong>USB-SERIAL CH340(COM13)</strong>.</li>\n</ul>\n<pre><span class=\"c1\"># Using pip, only need once when you install\n</span>sudo pip3 install kflash\nsudo kflash -p /dev/ttyS13 firmware.bin <span class=\"c1\"># You have to use *sudo* here\n# Using source code\n</span>sudo python3 kflash.py -p /dev/ttyS13 firmware.bin <span class=\"c1\"># You have to use *sudo* here</span>\n</pre>\n</div>\n<div id=\"linux\">\n<h3>Linux</h3>\n<ul>\n<li>Check the USB Device Name, Usually presented as ttyUSB*</li>\n</ul>\n<pre>ls /dev/ttyUSB*\n</pre>\n<ul>\n<li>It will print :</li>\n</ul>\n<pre>$ ls /dev/ttyUSB*\n/dev/ttyUSB0\n/dev/ttyUSB2\n/dev/ttyUSB13\n</pre>\n<ul>\n<li>Choose the one you think belongs to your device, or you may try multimule\nnames.</li>\n</ul>\n<pre><span class=\"c1\"># Using pip\n</span>python3 kflash.py -p /dev/ttyUSB13 firmware.bin\n<span class=\"c1\"># Using source code\n</span>kflash -p /dev/ttyUSB13 firmware.bin\n</pre>\n</div>\n<div id=\"macos\">\n<h3>macOS</h3>\n<ul>\n<li>Check the USB Device Name, Usually presented as cu.*</li>\n</ul>\n<pre>ls /dev/cu.*\n</pre>\n<ul>\n<li>It will print :</li>\n</ul>\n<pre>$ ls /dev/ttyUSB*\n/dev/cu.wchusbserial1410\n/dev/cu.wchusbserial1437\n/dev/cu.SLAB_USBtoUART2333\n</pre>\n<ul>\n<li>Choose the one you think belongs to your device, or you may try multimule\nnames.</li>\n</ul>\n<pre><span class=\"c1\"># Using pip\n</span>kflash -p /dev/cu.wchusbserial1410 firmware.bin\n<span class=\"c1\"># Using source code\n</span>python3 kflash.py -p /dev/cu.wchusbserial1410 firmware.bin\n</pre>\n<p>You may unable to find the device even in the /dev, check the link below for\ndrivers</p>\n<ul>\n<li>For K210 and Sipeed Dan -&gt; <a href=\"https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver\" rel=\"nofollow\">WCH CH34x USB2UART Chip</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7022101, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "ffa44487d9810a805a4a06e0f4f84638", "sha256": "4b02b361049ce22c1802feafd55b1dd854f43f0b52f5940c49d10ed58166df9d"}, "downloads": -1, "filename": "kflash-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ffa44487d9810a805a4a06e0f4f84638", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 75719, "upload_time": "2019-04-29T16:00:32", "upload_time_iso_8601": "2019-04-29T16:00:32.208196Z", "url": "https://files.pythonhosted.org/packages/4d/35/509cf6fe832f4cb58e8ccf6e8b698f02701f583917e23191ef6acab543bb/kflash-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e384d0f2cb577b6768a017ffa9179ea", "sha256": "18ed183fd624dc073db354dc92b5fcea033661fd45c9b0ed996c528824a88dab"}, "downloads": -1, "filename": "kflash-0.8.0.tar.gz", "has_sig": false, "md5_digest": "6e384d0f2cb577b6768a017ffa9179ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75308, "upload_time": "2019-04-29T16:01:00", "upload_time_iso_8601": "2019-04-29T16:01:00.070782Z", "url": "https://files.pythonhosted.org/packages/1e/f6/ea7ee6926af1b1070f3f3787be1bfa298013b11008108afb4fab9ef3e000/kflash-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "af0eb3dc369f44ffe727d761656407bd", "sha256": "e342100347e10f3ff8e0fe91d754f8114d10a4b4d795cd3c57292f9c7970bb15"}, "downloads": -1, "filename": "kflash-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "af0eb3dc369f44ffe727d761656407bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 75902, "upload_time": "2019-05-03T10:51:30", "upload_time_iso_8601": "2019-05-03T10:51:30.477524Z", "url": "https://files.pythonhosted.org/packages/12/37/e9707d73d4887f5319ac95af2f836f4c9eb426888dfc8a71325d72ce412d/kflash-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73ea21b44b755b4959ddd1a52de7819d", "sha256": "89d1c5cf308e9e891cf181f0cd39539a51840dc4ab1430ea24b60e7da1bba0dc"}, "downloads": -1, "filename": "kflash-0.8.1.tar.gz", "has_sig": false, "md5_digest": "73ea21b44b755b4959ddd1a52de7819d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75580, "upload_time": "2019-05-03T10:51:32", "upload_time_iso_8601": "2019-05-03T10:51:32.318360Z", "url": "https://files.pythonhosted.org/packages/f2/85/701b16fc2c0f653ca52c0de62bc699cfcc900ca87fe0d5e2229d0adad8c7/kflash-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "c15f76db692924be1e3d8db7096e4ab2", "sha256": "ab292d12d5e66b9e56251f81170ecec5a3e9feee1f0f60c89a991493588c7e10"}, "downloads": -1, "filename": "kflash-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c15f76db692924be1e3d8db7096e4ab2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 75907, "upload_time": "2019-05-03T12:52:57", "upload_time_iso_8601": "2019-05-03T12:52:57.568745Z", "url": "https://files.pythonhosted.org/packages/a0/42/c79ed7a9bd176be0632e7b767a48c9e337bbe843bf324aefb16dc13733f1/kflash-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f63b9f3865758ea509e3415a90e6eabe", "sha256": "3b8aa71e3013c45866215b1ec5ef3d5a1460e34584d6677d282060e80efeff61"}, "downloads": -1, "filename": "kflash-0.8.2.tar.gz", "has_sig": false, "md5_digest": "f63b9f3865758ea509e3415a90e6eabe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75581, "upload_time": "2019-05-03T12:52:59", "upload_time_iso_8601": "2019-05-03T12:52:59.504457Z", "url": "https://files.pythonhosted.org/packages/8d/87/872b9e50a17362e43c394f852c596a286e735269938d9aa31b0bae03d144/kflash-0.8.2.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "0e15dd491e44f850be26e9c19a542b5c", "sha256": "18571a9ee6a02be3cac9b9d7ec0b8c288615449b6330b7934d9b1695b0c0f349"}, "downloads": -1, "filename": "kflash-0.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0e15dd491e44f850be26e9c19a542b5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77029, "upload_time": "2020-04-15T04:44:44", "upload_time_iso_8601": "2020-04-15T04:44:44.834544Z", "url": "https://files.pythonhosted.org/packages/b2/7c/62858234aa44a4d2b3cecc57436eff4580acca8a1147493acdf91d981e9e/kflash-0.8.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca914d3154f2cfaeb70ccbc0e1437b29", "sha256": "d9383c59515ba43f9e45882b9c035b9ec1fefee294b0f1ca643c096471e792b4"}, "downloads": -1, "filename": "kflash-0.8.5.tar.gz", "has_sig": false, "md5_digest": "ca914d3154f2cfaeb70ccbc0e1437b29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76892, "upload_time": "2020-04-15T04:44:48", "upload_time_iso_8601": "2020-04-15T04:44:48.827281Z", "url": "https://files.pythonhosted.org/packages/a6/04/41234b27217bab6a4b01ea8e6fe6e0d83ced8c6a0069d7920ee596309d5d/kflash-0.8.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e15dd491e44f850be26e9c19a542b5c", "sha256": "18571a9ee6a02be3cac9b9d7ec0b8c288615449b6330b7934d9b1695b0c0f349"}, "downloads": -1, "filename": "kflash-0.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0e15dd491e44f850be26e9c19a542b5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77029, "upload_time": "2020-04-15T04:44:44", "upload_time_iso_8601": "2020-04-15T04:44:44.834544Z", "url": "https://files.pythonhosted.org/packages/b2/7c/62858234aa44a4d2b3cecc57436eff4580acca8a1147493acdf91d981e9e/kflash-0.8.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca914d3154f2cfaeb70ccbc0e1437b29", "sha256": "d9383c59515ba43f9e45882b9c035b9ec1fefee294b0f1ca643c096471e792b4"}, "downloads": -1, "filename": "kflash-0.8.5.tar.gz", "has_sig": false, "md5_digest": "ca914d3154f2cfaeb70ccbc0e1437b29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76892, "upload_time": "2020-04-15T04:44:48", "upload_time_iso_8601": "2020-04-15T04:44:48.827281Z", "url": "https://files.pythonhosted.org/packages/a6/04/41234b27217bab6a4b01ea8e6fe6e0d83ced8c6a0069d7920ee596309d5d/kflash-0.8.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:53 2020"}