{"info": {"author": "@bincyber", "author_email": "bincyber@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: System :: Systems Administration"], "description": "# Pulumi Integration Test Framework\n\n[![License](https://img.shields.io/badge/License-Apache-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n[![Python](https://img.shields.io/badge/Python-3.7+-blue.svg)](#)\n[![Version](https://img.shields.io/badge/Pypi-v0.0.4-orange.svg)](#)\n[![Status](https://img.shields.io/badge/Status-alpha-yellow.svg)](#)\n[![Coverage Status](https://coveralls.io/repos/github/bincyber/pitfall/badge.svg?branch=master)](https://coveralls.io/github/bincyber/pitfall?branch=master)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=bincyber_pitfall&metric=alert_status)](https://sonarcloud.io/dashboard?id=bincyber_pitfall)\n[![CircleCI](https://circleci.com/gh/bincyber/pitfall.svg?style=svg)](https://circleci.com/gh/bincyber/pitfall)\n\n_pitfall_ is a Python integration testing framework for [Pulumi](https://github.com/pulumi/pulumi) Infrastructure as Code. It enables and encourages end to end testing to avoid errors, assumptions, and other pitfalls.\n\n## Installation\n\n_pitfall_ can be installed via pip:\n\n\t$ pip install pitfall\n\n## Compatibility\n\n_pitfall_ has been tested against versions 1.2.0 - 1.4.0 of Pulumi and will strive to work with the latest Pulumi release.\n\n**Warning**: this is alpha software. There are no guarantees of backwards compatibility.\n\n## Usage\n\n_pitfall_ is intended to be used in integration tests to verify the desired state of infrastructure provisioned by Pulumi.\n\nIt will do the following:\n\n* create a temp directory to store Pulumi code and state\n* copy the contents of the current directory (and all subdirectories) to the temp directory\n* move into the temp directory\n* create a new Pulumi project file: `Pulumi.yaml`\n* create a new Pulumi stack file: `Pulumi.<stack name>.yaml`\n* initialize a new Pulumi state file in `.pulumi/`\n* install Pulumi plugins\n* execute `pulumi preview`\n* execute `pulumi up`\n* execute `pulumi destroy`\n* delete the temp directory\n\n_pitfall_ supports a [context manager](https://docs.python.org/3/reference/datamodel.html#context-managers) to automatically do the above.\n\n_pitfall_ does not use the Pulumi Service backend.\n\n### Examples\n\n1. [Basic S3 Example](https://github.com/bincyber/pitfall/blob/master/examples/basic-s3/README.md) - provision a AWS S3 bucket and verify that required tags have been set on it\n2. [Advanced S3 Example](https://github.com/bincyber/pitfall/blob/master/examples/advanced-s3/README.md) - provision a AWS S3 bucket to host a static website and verify that it's functional\n3. [AWS VPC ComponentResource Example](https://github.com/bincyber/pitfall/blob/master/examples/aws-vpc/README.md) - provision a AWS VPC using a ComponentResource\n\n### Features\n\n#### Context Manager\n\n_pitfall_ includes a context manager to automatically setup a test and execute the Pulumi workflow:\n\n```python\nfrom pitfall import PulumiConfigurationKey, PulumiIntegrationTest\n\ndirectory = '/path/to/pulumi/code'\nopts      = PulumiIntegrationTestOptions(cleanup=True, preview=True, up=True, destroy=True)\n\nwith PulumiIntegrationTest(directory=directory, opts=opts) as t:\n    pass\n```\n\nThe context manager will create a temporary directory for the test, copy the entire contents of `directory` to the temporary directory, generate the Pulumi Project and Stack files, initialize a new Pulumi local state file, install Pulumi plugins, and execute `pulumi preview`, `pulumi up`, and `pulumi destroy`. Upon exit, the context manager will delete the temporary directory.\n\nTo control automatic execution of Pulumi commands, temporary directory deletion, and verbosity, set desired options with [PulumiIntegrationTestOptions](https://github.com/bincyber/pitfall/blob/master/pitfall/core.py#L36).\n\n#### Configuration and Secrets\n\n_pitfall_ supports Pulumi [Configuration and Secrets](https://www.pulumi.com/docs/intro/concepts/config/):\n\n```python\nfrom pitfall import PulumiConfigurationKey, PulumiIntegrationTest\nimport os\n\ndbpassword = os.urandom(32)\n\nconfig = [\n    PulumiConfigurationKey(name='aws:region', value=\"us-east-1\"),\n    PulumiConfigurationKey(name='dbpassword', value=dbpassword, encrypted=True)\n]\n\nt = PulumiIntegrationTest(config=config)\n\nt.setup()\n```\n\nWhen `t.setup()` is called, the Pulumi stack file (`Pulumi.<stack name>.yaml`) will automatically be created with the supplied configuration. Configuration keys are automatically namespaced with the name of the Pulumi Project and Secrets are encryped using the password set by the environment variable `PULUMI_CONFIG_PASSPHRASE`:\n\n```\n$ cat Pulumi.pitf-stack-91c13928d11648be.yaml\n\nconfig:\n  aws:region: us-east-1\n  pitf-project-99c24db7cc324cf9:dbpassword:\n    secure: v1:6UEXewJReYiPCgrg:fOFTB4ODFyZB0bvHA2lhoZJ3khCOQCkX8n5OhLXjgSECbu+WrcIQ+wl0HaZhZ/4v\nencryptionsalt: v1:GEHe83S30O0=:v1:s8vb7cVFSz64pUmv:Ff5AbbcbTSim8cBwDCQCwraGHEQQ/A==\n```\n\n#### Pulumi State\n\n_pitfall_ exposes the Pulumi state as a Python object [PulumiState](https://github.com/bincyber/pitfall/blob/master/pitfall/state.py#L39). Both the current and previous state are accessible as Class properties. The resources in the current state file can be viewed and searched:\n\n```python\nt = PulumiIntegrationTest()\n\nresources = t.state.resources\n\nfor i in resources:\n    print(i.urn, i.id, i.type)\n\nresources.providers  # {\"pulumi:providers:aws\": 1}\n\nresources.types  # {\"aws:s3/bucket:Bucket\": 1, \"pulumi:pulumi:Stack\": 1}\n\nresults = resources.lookup(key=\"type\", value=\"aws:s3/bucket:Bucket\")\n\ns3_bucket = results[0]\n\nprint(s3_bucket.id)  # pitfall-basic-example-649ce5f\n\nprint(s3_bucket.outputs[\"arn\"])  # arn:aws:s3:::pitfall-basic-example-649ce5f\n```\n\n#### Stack Outputs\n\n_pitfall_ collects Pulumi [Stack outputs](https://www.pulumi.com/docs/intro/concepts/programming-model/#stack-outputs), so that they can be accessed in tests:\n\n```python\nwith PulumiIntegrationTest(directory=directory, opts=opts) as t:\n    outputs = t.get_stack_outputs()\n\n    s3_bucket_arn = outputs[\"s3_bucket\"][\"arn\"]\n```\n\n#### Resources Graph\n\n_pitfall_ can export the resources in the Pulumi state file as a DOT file:\n\n```python\nwith PulumiIntegrationTest(directory=directory, opts=opts) as t:\n    resources = t.state.resources\n    resources.export_dotfile(filename='~/graph.dot')\n```\n\nView the DOT file:\n```\n$ cat ~/graph.dot\n\ndigraph tree {\n    \"pulumi:pulumi:Stack\";\n    \"aws:s3/bucket:Bucket (pitfall-basic-example-649ce5f)\";\n    \"pulumi:pulumi:Stack\" -> \"aws:s3/bucket:Bucket (pitfall-basic-example-649ce5f)\";\n}\n```\n\nThis DOT file can then be viewed using the `dot` command or online at [webgraphviz.com](http://www.webgraphviz.com/).\n\n#### Test Helpers\n\n_pitfall_ includes useful helper classes and functions that can be used in integration tests. These can be found under [pitfall/helpers](https://github.com/bincyber/pitfall/tree/master/pitfall/helpers).\n\n\n### Environment Variables\n\nThe following environment variables are supported:\n\n| Environment Variable | Default Value | Description\n| -------- | -------- | --------\n| PULUMI_HOME | `~/.pulumi` | the location of Pulumi's home directory\n| PULUMI_CONFIG_PASSPHRASE | `pulumi` | the password for encrypting secrets\n\nIf they are set, they will be inherited by _pitfall_.\n\n\n## Documentation\n\nTODO\n\n## Testing\n\n[nose2](http://nose2.readthedocs.io/en/latest/) is used for unit and integration testing.\n\n`pulumi` must be installed for tests to pass.\n\n### Unit Tests\n\nUnit tests are located in `/tests`.\n\nTo run the unit tests:\n\n    $ make test\n\n### End to End Tests\n\nEnd to end tests are located in `e2e/`.\n\n1. testing using [localstack](https://github.com/localstack/localstack)\n\ne2e tests that use localstack are located in `e2e/localstack`. These tests require localstack running locally in a container.\n\nTo run localstack:\n\n    $ make run-localstack\n\nRun the e2e tests:\n\n    $ make e2e-test-localstack\n\n\n2. testing using [AWS](https://aws.amazon.com/)\n\ne2e tests that use AWS are located in `e2e/aws`. These tests require an AWS account and valid AWS API keys.\n\nRun the e2e tests:\n\n    $ make e2e-test-aws\n\n\n## Contributing\n\nWe encourage the following contributions at this time: user feedback, documentation, bug reports, and feature requests.\n\n## Acknowledgement\n\n_pitfall_ was built upon the Python libraries listed in its [Pipfile](https://github.com/bincyber/pitfall/blob/master/Pipfile).\n\n## License\n\nCopyright 2019 Ali (@bincyber)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bincyber/pitfall", "keywords": "infrastructure-as-code testing devops pulumi", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "pitfall", "package_url": "https://pypi.org/project/pitfall/", "platform": "any", "project_url": "https://pypi.org/project/pitfall/", "project_urls": {"Homepage": "http://github.com/bincyber/pitfall"}, "release_url": "https://pypi.org/project/pitfall/0.0.4/", "requires_dist": ["anytree (==2.7.2)", "boto3 (==1.10.9)", "pycryptodomex (==3.9.0)", "PyYAML (==5.1.2)"], "requires_python": ">=3.7", "summary": "An integration testing framework for Pulumi Infrastructure as Code", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pulumi Integration Test Framework</h1>\n<p><a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a79943855aa19b5a3aa09fd729dfca0f36a477c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4170616368652d626c75652e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/065147d1ac8699bb82f07cdbe420d7b300378065/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e372b2d626c75652e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11de35697ff384e963cb338b7d85654c64f14849/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507970692d76302e302e342d6f72616e67652e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/807bec4b41b173c1f71c5e8deb3c3f32d677ab4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5374617475732d616c7068612d79656c6c6f772e737667\"></a>\n<a href=\"https://coveralls.io/github/bincyber/pitfall?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/978624a0f097f21f25be6198131d9e98f8a21443/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f62696e63796265722f70697466616c6c2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=bincyber_pitfall\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f4c7afb524f1611b50bed291c84b357229752f8/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d62696e63796265725f70697466616c6c266d65747269633d616c6572745f737461747573\"></a>\n<a href=\"https://circleci.com/gh/bincyber/pitfall\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7954ecf6793fed4b6d2f21626fa96a7fb28351c4/68747470733a2f2f636972636c6563692e636f6d2f67682f62696e63796265722f70697466616c6c2e7376673f7374796c653d737667\"></a></p>\n<p><em>pitfall</em> is a Python integration testing framework for <a href=\"https://github.com/pulumi/pulumi\" rel=\"nofollow\">Pulumi</a> Infrastructure as Code. It enables and encourages end to end testing to avoid errors, assumptions, and other pitfalls.</p>\n<h2>Installation</h2>\n<p><em>pitfall</em> can be installed via pip:</p>\n<pre><code>$ pip install pitfall\n</code></pre>\n<h2>Compatibility</h2>\n<p><em>pitfall</em> has been tested against versions 1.2.0 - 1.4.0 of Pulumi and will strive to work with the latest Pulumi release.</p>\n<p><strong>Warning</strong>: this is alpha software. There are no guarantees of backwards compatibility.</p>\n<h2>Usage</h2>\n<p><em>pitfall</em> is intended to be used in integration tests to verify the desired state of infrastructure provisioned by Pulumi.</p>\n<p>It will do the following:</p>\n<ul>\n<li>create a temp directory to store Pulumi code and state</li>\n<li>copy the contents of the current directory (and all subdirectories) to the temp directory</li>\n<li>move into the temp directory</li>\n<li>create a new Pulumi project file: <code>Pulumi.yaml</code></li>\n<li>create a new Pulumi stack file: <code>Pulumi.&lt;stack name&gt;.yaml</code></li>\n<li>initialize a new Pulumi state file in <code>.pulumi/</code></li>\n<li>install Pulumi plugins</li>\n<li>execute <code>pulumi preview</code></li>\n<li>execute <code>pulumi up</code></li>\n<li>execute <code>pulumi destroy</code></li>\n<li>delete the temp directory</li>\n</ul>\n<p><em>pitfall</em> supports a <a href=\"https://docs.python.org/3/reference/datamodel.html#context-managers\" rel=\"nofollow\">context manager</a> to automatically do the above.</p>\n<p><em>pitfall</em> does not use the Pulumi Service backend.</p>\n<h3>Examples</h3>\n<ol>\n<li><a href=\"https://github.com/bincyber/pitfall/blob/master/examples/basic-s3/README.md\" rel=\"nofollow\">Basic S3 Example</a> - provision a AWS S3 bucket and verify that required tags have been set on it</li>\n<li><a href=\"https://github.com/bincyber/pitfall/blob/master/examples/advanced-s3/README.md\" rel=\"nofollow\">Advanced S3 Example</a> - provision a AWS S3 bucket to host a static website and verify that it's functional</li>\n<li><a href=\"https://github.com/bincyber/pitfall/blob/master/examples/aws-vpc/README.md\" rel=\"nofollow\">AWS VPC ComponentResource Example</a> - provision a AWS VPC using a ComponentResource</li>\n</ol>\n<h3>Features</h3>\n<h4>Context Manager</h4>\n<p><em>pitfall</em> includes a context manager to automatically setup a test and execute the Pulumi workflow:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pitfall</span> <span class=\"kn\">import</span> <span class=\"n\">PulumiConfigurationKey</span><span class=\"p\">,</span> <span class=\"n\">PulumiIntegrationTest</span>\n\n<span class=\"n\">directory</span> <span class=\"o\">=</span> <span class=\"s1\">'/path/to/pulumi/code'</span>\n<span class=\"n\">opts</span>      <span class=\"o\">=</span> <span class=\"n\">PulumiIntegrationTestOptions</span><span class=\"p\">(</span><span class=\"n\">cleanup</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">preview</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">destroy</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">PulumiIntegrationTest</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"o\">=</span><span class=\"n\">opts</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>The context manager will create a temporary directory for the test, copy the entire contents of <code>directory</code> to the temporary directory, generate the Pulumi Project and Stack files, initialize a new Pulumi local state file, install Pulumi plugins, and execute <code>pulumi preview</code>, <code>pulumi up</code>, and <code>pulumi destroy</code>. Upon exit, the context manager will delete the temporary directory.</p>\n<p>To control automatic execution of Pulumi commands, temporary directory deletion, and verbosity, set desired options with <a href=\"https://github.com/bincyber/pitfall/blob/master/pitfall/core.py#L36\" rel=\"nofollow\">PulumiIntegrationTestOptions</a>.</p>\n<h4>Configuration and Secrets</h4>\n<p><em>pitfall</em> supports Pulumi <a href=\"https://www.pulumi.com/docs/intro/concepts/config/\" rel=\"nofollow\">Configuration and Secrets</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pitfall</span> <span class=\"kn\">import</span> <span class=\"n\">PulumiConfigurationKey</span><span class=\"p\">,</span> <span class=\"n\">PulumiIntegrationTest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">dbpassword</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">urandom</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">PulumiConfigurationKey</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'aws:region'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"us-east-1\"</span><span class=\"p\">),</span>\n    <span class=\"n\">PulumiConfigurationKey</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dbpassword'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">dbpassword</span><span class=\"p\">,</span> <span class=\"n\">encrypted</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">PulumiIntegrationTest</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n</pre>\n<p>When <code>t.setup()</code> is called, the Pulumi stack file (<code>Pulumi.&lt;stack name&gt;.yaml</code>) will automatically be created with the supplied configuration. Configuration keys are automatically namespaced with the name of the Pulumi Project and Secrets are encryped using the password set by the environment variable <code>PULUMI_CONFIG_PASSPHRASE</code>:</p>\n<pre><code>$ cat Pulumi.pitf-stack-91c13928d11648be.yaml\n\nconfig:\n  aws:region: us-east-1\n  pitf-project-99c24db7cc324cf9:dbpassword:\n    secure: v1:6UEXewJReYiPCgrg:fOFTB4ODFyZB0bvHA2lhoZJ3khCOQCkX8n5OhLXjgSECbu+WrcIQ+wl0HaZhZ/4v\nencryptionsalt: v1:GEHe83S30O0=:v1:s8vb7cVFSz64pUmv:Ff5AbbcbTSim8cBwDCQCwraGHEQQ/A==\n</code></pre>\n<h4>Pulumi State</h4>\n<p><em>pitfall</em> exposes the Pulumi state as a Python object <a href=\"https://github.com/bincyber/pitfall/blob/master/pitfall/state.py#L39\" rel=\"nofollow\">PulumiState</a>. Both the current and previous state are accessible as Class properties. The resources in the current state file can be viewed and searched:</p>\n<pre><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">PulumiIntegrationTest</span><span class=\"p\">()</span>\n\n<span class=\"n\">resources</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">resources</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">resources</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">urn</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">)</span>\n\n<span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">providers</span>  <span class=\"c1\"># {\"pulumi:providers:aws\": 1}</span>\n\n<span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">types</span>  <span class=\"c1\"># {\"aws:s3/bucket:Bucket\": 1, \"pulumi:pulumi:Stack\": 1}</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"type\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"aws:s3/bucket:Bucket\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">s3_bucket</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s3_bucket</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>  <span class=\"c1\"># pitfall-basic-example-649ce5f</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s3_bucket</span><span class=\"o\">.</span><span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"arn\"</span><span class=\"p\">])</span>  <span class=\"c1\"># arn:aws:s3:::pitfall-basic-example-649ce5f</span>\n</pre>\n<h4>Stack Outputs</h4>\n<p><em>pitfall</em> collects Pulumi <a href=\"https://www.pulumi.com/docs/intro/concepts/programming-model/#stack-outputs\" rel=\"nofollow\">Stack outputs</a>, so that they can be accessed in tests:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">PulumiIntegrationTest</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"o\">=</span><span class=\"n\">opts</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n    <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">get_stack_outputs</span><span class=\"p\">()</span>\n\n    <span class=\"n\">s3_bucket_arn</span> <span class=\"o\">=</span> <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"s3_bucket\"</span><span class=\"p\">][</span><span class=\"s2\">\"arn\"</span><span class=\"p\">]</span>\n</pre>\n<h4>Resources Graph</h4>\n<p><em>pitfall</em> can export the resources in the Pulumi state file as a DOT file:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">PulumiIntegrationTest</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"o\">=</span><span class=\"n\">opts</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n    <span class=\"n\">resources</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">resources</span>\n    <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">export_dotfile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'~/graph.dot'</span><span class=\"p\">)</span>\n</pre>\n<p>View the DOT file:</p>\n<pre><code>$ cat ~/graph.dot\n\ndigraph tree {\n    \"pulumi:pulumi:Stack\";\n    \"aws:s3/bucket:Bucket (pitfall-basic-example-649ce5f)\";\n    \"pulumi:pulumi:Stack\" -&gt; \"aws:s3/bucket:Bucket (pitfall-basic-example-649ce5f)\";\n}\n</code></pre>\n<p>This DOT file can then be viewed using the <code>dot</code> command or online at <a href=\"http://www.webgraphviz.com/\" rel=\"nofollow\">webgraphviz.com</a>.</p>\n<h4>Test Helpers</h4>\n<p><em>pitfall</em> includes useful helper classes and functions that can be used in integration tests. These can be found under <a href=\"https://github.com/bincyber/pitfall/tree/master/pitfall/helpers\" rel=\"nofollow\">pitfall/helpers</a>.</p>\n<h3>Environment Variables</h3>\n<p>The following environment variables are supported:</p>\n<table>\n<thead>\n<tr>\n<th>Environment Variable</th>\n<th>Default Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PULUMI_HOME</td>\n<td><code>~/.pulumi</code></td>\n<td>the location of Pulumi's home directory</td>\n</tr>\n<tr>\n<td>PULUMI_CONFIG_PASSPHRASE</td>\n<td><code>pulumi</code></td>\n<td>the password for encrypting secrets</td>\n</tr></tbody></table>\n<p>If they are set, they will be inherited by <em>pitfall</em>.</p>\n<h2>Documentation</h2>\n<p>TODO</p>\n<h2>Testing</h2>\n<p><a href=\"http://nose2.readthedocs.io/en/latest/\" rel=\"nofollow\">nose2</a> is used for unit and integration testing.</p>\n<p><code>pulumi</code> must be installed for tests to pass.</p>\n<h3>Unit Tests</h3>\n<p>Unit tests are located in <code>/tests</code>.</p>\n<p>To run the unit tests:</p>\n<pre><code>$ make test\n</code></pre>\n<h3>End to End Tests</h3>\n<p>End to end tests are located in <code>e2e/</code>.</p>\n<ol>\n<li>testing using <a href=\"https://github.com/localstack/localstack\" rel=\"nofollow\">localstack</a></li>\n</ol>\n<p>e2e tests that use localstack are located in <code>e2e/localstack</code>. These tests require localstack running locally in a container.</p>\n<p>To run localstack:</p>\n<pre><code>$ make run-localstack\n</code></pre>\n<p>Run the e2e tests:</p>\n<pre><code>$ make e2e-test-localstack\n</code></pre>\n<ol>\n<li>testing using <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">AWS</a></li>\n</ol>\n<p>e2e tests that use AWS are located in <code>e2e/aws</code>. These tests require an AWS account and valid AWS API keys.</p>\n<p>Run the e2e tests:</p>\n<pre><code>$ make e2e-test-aws\n</code></pre>\n<h2>Contributing</h2>\n<p>We encourage the following contributions at this time: user feedback, documentation, bug reports, and feature requests.</p>\n<h2>Acknowledgement</h2>\n<p><em>pitfall</em> was built upon the Python libraries listed in its <a href=\"https://github.com/bincyber/pitfall/blob/master/Pipfile\" rel=\"nofollow\">Pipfile</a>.</p>\n<h2>License</h2>\n<p>Copyright 2019 Ali (@bincyber)</p>\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<p><a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n\n          </div>"}, "last_serial": 6166653, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3c8bb69b24ae9e4a5a862a51fa0ae0aa", "sha256": "a9688b2daeffa82baf1b35c022736023ff4cd68b170e57b858d43111a60bfe10"}, "downloads": -1, "filename": "pitfall-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3c8bb69b24ae9e4a5a862a51fa0ae0aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22304, "upload_time": "2019-10-28T10:45:56", "upload_time_iso_8601": "2019-10-28T10:45:56.888466Z", "url": "https://files.pythonhosted.org/packages/27/df/7866d0d33b55a52b2a6113103ca74e3ade5ee8f87eb7b00c55076c81660e/pitfall-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78cdcd136aa84210e38fd44d136c586b", "sha256": "99a9344ea92563cfca5c30e1b7c509645a8be230e3c304b0fd2e892ac9e82051"}, "downloads": -1, "filename": "pitfall-0.0.1.tar.gz", "has_sig": false, "md5_digest": "78cdcd136aa84210e38fd44d136c586b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16382, "upload_time": "2019-10-28T10:45:59", "upload_time_iso_8601": "2019-10-28T10:45:59.065388Z", "url": "https://files.pythonhosted.org/packages/73/1b/40cc95bd97080526cb4219dceae8acc6103c415bec24306f1a07dbe6e06b/pitfall-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8a823d527f7474d7915ba1ce27d6826f", "sha256": "7a1529b23427d8af4b6cbc7c71bb2fecbb26e3d7fee69b00873826c4a427dafd"}, "downloads": -1, "filename": "pitfall-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8a823d527f7474d7915ba1ce27d6826f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 24321, "upload_time": "2019-11-05T15:52:05", "upload_time_iso_8601": "2019-11-05T15:52:05.155028Z", "url": "https://files.pythonhosted.org/packages/1e/6b/5e0e99927bde549fdfc8ae30a13eda38ea503029d4c54ee47f6626879961/pitfall-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd339cfc084244398bc0f5905a37b46", "sha256": "0d3b2a85c9e6cd9e69cfc5e3ad9c2088a232c40d59171ab19fa5c36f2c2bec30"}, "downloads": -1, "filename": "pitfall-0.0.2.tar.gz", "has_sig": false, "md5_digest": "abd339cfc084244398bc0f5905a37b46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 19794, "upload_time": "2019-11-05T15:52:07", "upload_time_iso_8601": "2019-11-05T15:52:07.377542Z", "url": "https://files.pythonhosted.org/packages/58/a5/08927e6467642225378c5f681526cb48a236d29bd087c7ffb862f857c476/pitfall-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "39a3727df62e08325e924d89d866da30", "sha256": "91398d5f4c08a2b15f74f640533108b4aa1a644110c61dedb6ff2326ca39dcb6"}, "downloads": -1, "filename": "pitfall-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "39a3727df62e08325e924d89d866da30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 23004, "upload_time": "2019-11-19T22:50:57", "upload_time_iso_8601": "2019-11-19T22:50:57.796482Z", "url": "https://files.pythonhosted.org/packages/f8/4a/2d65a5e771b2efac8207d1fb9f17e8dcfd5d4ef03ee8f8c7064e7c89b085/pitfall-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c9fd41f6a5a9ed034cb303701c386d0", "sha256": "2cfe3918361c12594499d32c954d84a621bd80e7f87a760deef8837c95e29e76"}, "downloads": -1, "filename": "pitfall-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0c9fd41f6a5a9ed034cb303701c386d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16511, "upload_time": "2019-11-19T22:50:59", "upload_time_iso_8601": "2019-11-19T22:50:59.679442Z", "url": "https://files.pythonhosted.org/packages/04/4b/b2c7d41a27ca899785d217399672c1218c4355092390198f3fe127a54965/pitfall-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "1750ca65e0ba46befc8842b9d387215b", "sha256": "80c439d122a12060ddddb08d8d012a1802bccb69d3d36f43b1db4f31c3f231cd"}, "downloads": -1, "filename": "pitfall-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1750ca65e0ba46befc8842b9d387215b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26683, "upload_time": "2019-11-20T04:35:06", "upload_time_iso_8601": "2019-11-20T04:35:06.745748Z", "url": "https://files.pythonhosted.org/packages/ac/26/7ab9d36f678377fd4912f511d6fdfc13c8e0caac450f255e9df50fdf2385/pitfall-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dee4b3d10403071c43d0b2bafd4550b1", "sha256": "378254db04d528b7ea1464e41a8987bdf94aac4952c21d45ba7464d9fd78785b"}, "downloads": -1, "filename": "pitfall-0.0.4.tar.gz", "has_sig": false, "md5_digest": "dee4b3d10403071c43d0b2bafd4550b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18160, "upload_time": "2019-11-20T04:35:08", "upload_time_iso_8601": "2019-11-20T04:35:08.369527Z", "url": "https://files.pythonhosted.org/packages/fb/5f/007984ed04c0acdd8f1128ce1a3d15ab8d55ac03ff755ef56f7518cf7e3f/pitfall-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1750ca65e0ba46befc8842b9d387215b", "sha256": "80c439d122a12060ddddb08d8d012a1802bccb69d3d36f43b1db4f31c3f231cd"}, "downloads": -1, "filename": "pitfall-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1750ca65e0ba46befc8842b9d387215b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26683, "upload_time": "2019-11-20T04:35:06", "upload_time_iso_8601": "2019-11-20T04:35:06.745748Z", "url": "https://files.pythonhosted.org/packages/ac/26/7ab9d36f678377fd4912f511d6fdfc13c8e0caac450f255e9df50fdf2385/pitfall-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dee4b3d10403071c43d0b2bafd4550b1", "sha256": "378254db04d528b7ea1464e41a8987bdf94aac4952c21d45ba7464d9fd78785b"}, "downloads": -1, "filename": "pitfall-0.0.4.tar.gz", "has_sig": false, "md5_digest": "dee4b3d10403071c43d0b2bafd4550b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18160, "upload_time": "2019-11-20T04:35:08", "upload_time_iso_8601": "2019-11-20T04:35:08.369527Z", "url": "https://files.pythonhosted.org/packages/fb/5f/007984ed04c0acdd8f1128ce1a3d15ab8d55ac03ff755ef56f7518cf7e3f/pitfall-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:59 2020"}