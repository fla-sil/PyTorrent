{"info": {"author": "Mathieu Leplatre", "author_email": "mathieu.leplatre@makina-corpus.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "*django-leaflet* allows you to use `Leaflet <http://leafletjs.com>`_\nin your `Django <https://www.djangoproject.com>`_ projects.\n\nIt embeds Leaflet version *1.0.3*.\n\n.. image:: https://img.shields.io/pypi/v/django-leaflet.svg\n        :target: https://pypi.python.org/pypi/django-leaflet\n\n.. image:: https://img.shields.io/pypi/dm/django-leaflet.svg\n        :target: https://pypi.python.org/pypi/django-leaflet\n\n.. image:: https://travis-ci.org/makinacorpus/django-leaflet.png\n    :target: https://travis-ci.org/makinacorpus/django-leaflet\n\n.. image:: https://coveralls.io/repos/makinacorpus/django-leaflet/badge.png\n    :target: https://coveralls.io/r/makinacorpus/django-leaflet\n\n\nMain purposes of having a python package for the Leaflet Javascript library :\n\n* Install and enjoy ;\n* Do not embed Leaflet assets in every Django project ;\n* Enjoy geometry edition with Leaflet form widget ;\n* Control apparence and settings of maps from Django settings (e.g. at deployment) ;\n* Reuse Leaflet map initialization code (e.g. local projections) ;\n\n:note:\n\n    *django-leaflet* is compatible with `django-geojson <https://github.com/makinacorpus/django-geojson.git>`_ fields, which\n    allow handling geographic data without spatial database.\n\n=======\nINSTALL\n=======\n\nLast stable version:\n\n::\n\n    pip install django-leaflet\n\n\nLast development version (master branch):\n\n::\n\n    pip install -e git+https://github.com/makinacorpus/django-leaflet.git#egg=django-leaflet\n\n\n=====\nUSAGE\n=====\n\n* Add ``leaflet`` to your ``INSTALLED_APPS``\n\n* Make sure ``django.contrib.staticfiles`` is also in your ``INSTALLED_APPS``; Django >= 1.3 `includes this contrib app by default <https://docs.djangoproject.com/en/1.3/intro/tutorial01/#database-setup>`_\n\n* Add the HTML header::\n\n    {% load leaflet_tags %}\n\n    <head>\n        ...\n        {% leaflet_js %}\n        {% leaflet_css %}\n    </head>\n\n* Add the map in your page, providing a name::\n\n    ...\n    <body>\n        ...\n        {% leaflet_map \"yourmap\" %}\n        ...\n    </body>\n\n* Your map shows up!\n\nExample\n-------\n\nCheck out the `example project <https://github.com/makinacorpus/django-leaflet/tree/master/example>`_\nifor a complete integration!\n\nUse Leaflet API\n---------------\n\nYou can use the *Leaflet* API as usual. There are two ways to\ngrab a reference on the just initialized map and options.\n\n\n**Using Javascript callback function**\n\nThe easy way :\n\n::\n\n    <script type=\"text/javascript\">\n        function map_init_basic (map, options) {\n            ...\n            L.marker([50.5, 30.5]).addTo(map);\n            ...\n        }\n    </script>\n\n    {% leaflet_map \"yourmap\" callback=\"window.map_init_basic\" %}\n\n\n**Using events**\n\nIf you don't want to expose global callbacks :\n\n::\n\n    <script type=\"text/javascript\">\n        window.addEventListener(\"map:init\", function (e) {\n            var detail = e.detail;\n            ...\n            L.marker([50.5, 30.5]).addTo(detail.map);\n            ...\n        }, false);\n    </script>\n\nEvent object has two properties : ``map`` and ``options`` (initialization).\n\nFor Internet Explorer support, we fallback on jQuery if available ::\n\n    $(window).on('map:init', function (e) {\n        var detail = e.originalEvent ?\n                     e.originalEvent.detail : e.detail;\n        ...\n        L.marker([50.5, 30.5]).addTo(detail.map);\n        ...\n    });\n\nIf you want to support archaic browsers **and** still avoid jQuery,\n*django-leaflet* comes with a minimalist polyfill for events.\nAdd it in ``<head>`` this way ::\n\n    <!--[if IE 8]><script src=\"{% static \"leaflet/eventlister.ie8.js\" %}\"></script><!--<![endif]-->\n    <!--[if lt IE 8]><script src=\"{% static \"leaflet/eventlister.ie6-7.js\" %}\"></script><!--<![endif]-->\n\n\nCustomize map size\n------------------\n\nCSS is your friend:\n\n::\n\n    <style>\n\n        .leaflet-container {  /* all maps */\n            width:  600px;\n            height: 400px;\n        }\n\n        #specialbigmap {\n            height: 800px;\n        }\n\n    </style>\n\n\n\nConfiguration\n-------------\n\nIn order to configure *django-leaflet*, just add a new section in your\nsettings::\n\n    LEAFLET_CONFIG = {\n        # conf here\n    }\n\nAnd add some of the following entries.\n\n\nSpatial extent\n~~~~~~~~~~~~~~\n\nYou can configure a global spatial extent for your maps, that will\nautomatically center your maps, restrict panning and add reset view and scale\ncontrols. (*See advanced usage to tweak that.*)::\n\n    'SPATIAL_EXTENT': (5.0, 44.0, 7.5, 46)\n\n\nInitial map center and zoom level\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn addition to limiting your maps with ``SPATIAL_EXTENT``, you can also specify\ninitial map center, default, min and max zoom level::\n\n    'DEFAULT_CENTER': (6.0, 45.0),\n    'DEFAULT_ZOOM': 16,\n    'MIN_ZOOM': 3,\n    'MAX_ZOOM': 18,\n\nThe tuple/list must contain (lat,lng) coords.\n\n\nDefault tiles layer\n~~~~~~~~~~~~~~~~~~~\n\nTo globally add a tiles layer to your maps::\n\n    'TILES': 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n\nThis setting can also be a list of tuples ``(name, url, options)``.\nThe python dict ``options`` accepts all the Leaflet tileLayers options.\n\nIf it contains several layers, a layer switcher will then be added automatically.\n\n::\n\n    'TILES': [('Satellite', 'http://server/a/...', {'attribution': '&copy; Big eye', 'maxZoom': 16}),\n              ('Streets', 'http://server/b/...', {'attribution': '&copy; Contributors'})]\n\n\nIf you omit this setting, a default OpenSTreetMap layer will be created for your convenience. If you do not want\na default layers (perhaps to add them in your own JavaScript code on map initialization), set the value to an empty\nlist, as shown below.\n\n::\n\n    'TILES': []\n\nNote that this will also prevent any overlays defined in settings from being displayed.\n\n\nOverlay layers\n~~~~~~~~~~~~~~\n\nTo globally add an overlay layer, use the same syntax as tiles::\n\n    'OVERLAYS': [('Cadastral', 'http://server/a/{z}/{x}/{y}.png', {'attribution': '&copy; IGN'})]\n\nCurrently, overlay layers from settings are limited to tiles. For vectorial overlays, you\nwill have to add them via JavaScript (see events).\n\n\nAttribution prefix\n~~~~~~~~~~~~~~~~~~\n\nTo globally add an attribution prefix on maps (most likely an empty string) ::\n\n    'ATTRIBUTION_PREFIX': 'Powered by django-leaflet'\n\nDefault is ``None``, which leaves the value to `Leaflet's default <http://leafletjs.com/reference.html#control-attribution>`_.\n\n\nScale control\n~~~~~~~~~~~~~\n\nScale control may be set to show 'metric' (m/km), or 'imperial' (mi/ft) scale\nlines, or 'both'.  Default is 'metric'.\n\nEnable metric and imperial scale control::\n\n    'SCALE': 'both'\n\nDisable scale control::\n\n    'SCALE': None\n\n\nMinimap control\n~~~~~~~~~~~~~~~\n\nShows a small map in the corner which shows the same as the main map with a\nset zoom offset::\n\n    'MINIMAP': True\n\nBy default it shows the tiles of the first layer in the list.\n\n(`More info... <https://github.com/Norkart/Leaflet-MiniMap>`_)\n\nReset view button\n~~~~~~~~~~~~~~~~~\nBy default, a button appears below the zoom controls and, when clicked, shows the entire map.\nTo remove this button, set::\n\n    'RESET_VIEW': False\n\n\nGlobal initialization functions and ``window.maps``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSince 0.7.0, the ``leaflet_map`` template tag no longer registers initialization functions in global scope,\nand no longer adds map objects into ``window.maps`` array by default. To restore these features, use::\n\n    'NO_GLOBALS' = False\n\nForce Leaflet image path\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf you are using staticfiles compression libraries such as django_compressor,\nwhich can do any of compressing, concatenating or renaming javascript files,\nthis may break Leaflet's own ability to determine its installed path, and in\nturn break the method ``L.Icon.Default.imagePath()``.\n\nTo use Django's own knowledge of its static files to force this value\nexplicitly, use::\n\n    'FORCE_IMAGE_PATH': True\n\nPlugins\n~~~~~~~\n\nTo ease the usage of plugins, django-leaflet allows specifying a set of plugins, that can\nlater be referred to from the template tags by name::\n\n    'PLUGINS': {\n        'name-of-plugin': {\n            'css': ['relative/path/to/stylesheet.css', '/root/path/to/stylesheet.css'],\n            'js': 'http://absolute-url.example.com/path/to/script.js',\n            'auto-include': True,\n        },\n        . . .\n    }\n\nBoth 'css' and 'js' support identical features for specifying resource URLs:\n\n* can be either a plain string or a list of URLs\n* each string can be:\n\n  * absolute URL - will be included as-is; **example**: ``http://absolute-url.example.com/path/to/script.js``\n  * a URL beginning from the root - will be included as-is;  **example**: ``/root/path/to/stylesheet.css``\n  * a relative URL - settings.STATIC_URL will be prepended; **example**: ``relative/path/to/stylesheet.css`` will be included as **/static/relative/path/to/stylesheet.css** (depending on your setting for STATIC_URL)\n\nNow, use ``leaflet_js`` and ``leaflet_css`` tags to load CSS and JS resources of\nconfigured Leaflet plugins.\n\nBy default only plugins with ``'auto-include'`` as True will be included.\n\nTo include specific plugins in the page, specify plugin names, comma separated::\n\n    {% load leaflet_tags %}\n\n    <head>\n        ...\n        {% leaflet_js  plugins=\"bouncemarker,draw\" %}\n        {% leaflet_css plugins=\"bouncemarker,draw\" %}\n    </head>\n\nTo include all plugins configured in ``LEAFLET_CONFIG['PLUGINS']``, use::\n\n    {% leaflet_js plugins=\"ALL\" %}\n    {% leaflet_css plugins=\"ALL\" %}\n\n\n\nLeaflet map forms widgets\n-------------------------\n\nA Leaflet widget is provided to edit geometry fields.\nIt embeds *Leaflet.draw* in version *0.4.0*.\n\n\n.. image :: https://f.cloud.github.com/assets/546692/1048836/78b6ad94-1094-11e3-86d8-c3e88626a31d.png\n\n\nIn Adminsite\n~~~~~~~~~~~~\n\n::\n\n    from django.contrib import admin\n    from leaflet.admin import LeafletGeoAdmin\n\n    from .models import WeatherStation\n\n\n    admin.site.register(WeatherStation, LeafletGeoAdmin)\n\n\nA mixin is also available for inline forms:\n\n::\n\n    from django.contrib import admin\n    from leaflet.admin import LeafletGeoAdminMixin\n\n    class PoiLocationInline(LeafletGeoAdminMixin, admin.StackedInline):\n        model = PoiLocation\n\n\nIn forms\n~~~~~~~~\n\nWith *Django* >= 1.6:\n\n::\n\n    from django import forms\n\n    from leaflet.forms.widgets import LeafletWidget\n\n\n    class WeatherStationForm(forms.ModelForm):\n\n        class Meta:\n            model = WeatherStation\n            fields = ('name', 'geom')\n            widgets = {'geom': LeafletWidget()}\n\nWith all *Django* versions:\n\n::\n\n    from django import forms\n\n    from leaflet.forms.fields import PointField\n\n\n    class WeatherStationForm(forms.ModelForm):\n        geom = PointField()\n\n        class Meta:\n            model = WeatherStation\n            fields = ('name', 'geom')\n\nThe related template would look like this:\n\n::\n\n    {% load leaflet_tags %}\n    <html>\n      <head>\n       {% leaflet_js plugins=\"forms\" %}\n       {% leaflet_css plugins=\"forms\" %}\n      </head>\n      <body>\n        <h1>Edit {{ object }}</h1>\n        <form action=\"POST\">\n            {{ form }}\n            <input type=\"submit\"/>\n        </form>\n      </body>\n    </html>\n\n\nEvery map field will trigger an event you can use to add your custom machinery :\n\n::\n\n    map.on('map:loadfield', function (e) {\n        ...\n        // Customize map for field\n        console.log(e.field, e.fieldid);\n        ...\n    });\n\n\nIf you need a reusable customization of widgets maps, first override the JavaScript field behaviour by extending ``L.GeometryField``, then in Django subclass the ``LeafletWidget`` to specify the custom ``geometry_field_class``.\n\n::\n\n    YourGeometryField = L.GeometryField.extend({\n        addTo: function (map) {\n            L.GeometryField.prototype.addTo.call(this, map);\n            // Customize map for field\n            console.log(this);\n        },\n        // See GeometryField source (static/leaflet/leaflet.forms.js) to override more stuff...\n    });\n\n::\n\n    class YourMapWidget(LeafletWidget):\n        geometry_field_class = 'YourGeometryField'\n\n    class YourForm(forms.ModelForm):\n        class Meta:\n            model = YourModel\n            fields = ('name', 'geom')\n            widgets = {'geom': YourMapWidget()}\n\nPlugins\n~~~~~~~\n\nIt's possible to add extras JS/CSS or auto-include *forms* plugins\neverywhere: ::\n\n    LEAFLET_CONFIG = {\n        'PLUGINS': {\n            'forms': {\n                'auto-include': True\n            }\n        }\n    }\n\n( *It will be merged over default minimal set required for edition* )\n\n\nDetails\n~~~~~~~\n\n* It relies on global settings for map initialization.\n* It works with local map projections. But SRID is specified globally\n  through ``LEAFLET_CONFIG['SRID']`` as described below.\n* Javascript component for de/serializing fields value is pluggable.\n* Javascript component for Leaflet.draw behaviour initialization is pluggable.\n\n\n\nAdvanced usage\n--------------\n\n\n``{% leaflet_map %}`` tag parameters\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* ``callback``: javascript function name for initialization callback.\n  (Default: None).\n\n* ``fitextent``: control if map initial view shoud be set to extent setting.\n  (Default: ``True``). Setting fixextent to ``False`` will prevent view reset\n  and scale controls to be added.\n\n* ``creatediv``: control if the leaflet map tags creates a new div or not.\n  (Default: ``True``).\n  Useful to put the javascript code in the header or footer instead of the\n  body of the html document. If used, do not forget to create the div manually.\n\n* ``loadevent``: One or more space-separated *window* events that trigger map initialization.\n  (Default: ``load``, i.e. all page resources loaded).\n  If empty values is provided, then map initialization is immediate.\n  And with a wrong value, the map is never initialized. :)\n\n* ``settings_overrides``: Map with overrides to the default LEAFLET_CONFIG settings.\n  (Default: {}).\n\nConfig overrides\n~~~~~~~~~~~~~~~~\n\nIt is possible to dynamically override settings in ``LeafletWidget`` init:\n\n::\n\n    from leaflet.forms.widgets import LeafletWidget\n\n\n    class WeatherStationForm(forms.ModelForm):\n\n        class Meta:\n            model = WeatherStation\n            fields = ('name', 'geom')\n            widgets = {'geom': LeafletWidget(attrs={\n                'settings_overrides': {\n                    'DEFAULT_CENTER': (6.0, 45.0),\n                }\n            })}\n\nFor overriding the settings in ``LeafletGeoAdmin``, use set the appropriate property:\n\n::\n\n    class WeatherStationAdminAdmin(LeafletGeoAdmin):\n        settings_overrides = {\n           'DEFAULT_CENTER': (6.0, 45.0),\n        }\n\n\nProjection\n~~~~~~~~~~\n\nIt is possible to setup the map spatial reference in ``LEAFLET_CONFIG``::\n\n    'SRID': 2154  # See http://spatialreference.org\n\nAdditional parameter is required to compute scale levels : the tiles extent in\nlocal projection::\n\n    'TILES_EXTENT': [924861,6375196,985649,6448688],\n\nFor more information, `have a look at this example <http://blog.mathieu-leplatre.info/leaflet-tiles-in-lambert-93-projection-2154.html>`_.\n\nExample of TileCache configuration compatible with Leaflet:\n\n::\n\n    [scan-portrait]\n    type=WMSLayer\n    layers=scan100,scan25\n    url=http://server/wms?\n    extension=jpg\n    tms_type=google\n    srs=EPSG:2154\n    bbox=924861,6375196,985649,6448688\n\n    [cache]\n    type=GoogleDisk\n    expire=2592000\n    base=/tmp/tiles\n\n\nBy default, *django-leaflet* will try to load the spatial reference from your static\nfiles at \"proj4js/{{ srid }}.js\". If it fails, it will eventually rely on\n`<spatialreference.org>`_.\n\n\n=========\nTUTORIALS\n=========\n\n* `GeoDjango maps with Leaflet <http://blog.mathieu-leplatre.info/geodjango-maps-with-leaflet.html>`_\n\n\n=======\nAUTHORS\n=======\n\n* `Mathieu Leplatre <http://mathieu-leplatre.info>`_\n* `Ariel N\u00fa\u00f1ez <http://ingenieroariel.com>`_\n* `Boris Chervenkov <https://github.com/boris-chervenkov>`_\n* `Marco Badan <https://github.com/itbabu>`_\n* `Bruno Reni\u00e9 <https://github.com/brutasse>`_\n* `Simon Th\u00e9pot <https://github.com/djcoin>`_\n* `Thibault Jouannic <https://github.com/thibault>`_\n* `jnm <https://github.com/jnm>`_\n* `Manel Clos <https://github.com/manelclos>`_\n* `Ga\u00ebl Utard <https://github.com/gutard>`_\n* `Alex Marandon <https://github.com/amarandon>`_\n* `ollb <https://github.com/ollb>`_\n* `smcoll <https://github.com/smcoll>`_\n* `jnm <https://github.com/jnm>`_\n* `OKso <https://github.com/oksome>`_\n* `Florent Lebreton <https://github.com/fle/>`_\n* `rgreenemun <https://github.com/rgreenemun>`_\n* `Marco Badan <https://github.com/itbabu>`_\n* David Martinez Morata\n* `NotSqrt <https://github.com/NotSqrt>`_\n* `Dylan Verheul <https://github.com/dyve>`_\n* `Mactory <https://github.com/Mactory>`_\n* `Petr Dlouhy <https://github.com/PetrDlouhy>`_\n* `Kostya Esmukov <https://github.com/KostyaEsmukov>`_\n\n|makinacom|_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\n=======\nLICENSE\n=======\n\n* Lesser GNU Public License\n* Leaflet Copyright - 2010-2011 CloudMade, Vladimir Agafonkin\n\n\n=========\nCHANGELOG\n=========\n\n\n0.21.0 (unreleased)\n-------------------\n\n- Nothing changed yet.\n\n\n0.20.0 (2017-01-27)\n-------------------\n\n**New features**\n\n- Update Leaflet to 1.0.3 (#169)\n- Update Leaflet-draw to 0.4.0 (#169)\n- Update Proj4Leaflet to 1.0.0 (#169)\n- Made `static` calls lazy, to fix issues with non-default STATICFILES_STORAGE (#149)\n- Add example application (#168)\n\n**Bug fixes**\n\n- Use SpatiaLite library path from environment variable for running test (#173)\n- Fix max zoom level (#165)\n- Add SPATIAL_EXTENT default value to the default settings (#167)\n\nMany thanks to @KostyaEsmukov, @cleder, @sikmir and @seav for their contributions!\n\n\n0.19.0 (2016-08-22)\n-------------------\n\n**New features**\n\n- Added ``leaflet.admin.LeafletGeoAdminMixin``, useful for stacked or tabular\n  inline forms (thanks @KostyaEsmukov, @Xowap)\n\n\n0.18.2 (2016-08-16)\n-------------------\n\n- Fix compatibility with Django <= 1.7\n\n\n0.18.1 (2016-04-07)\n-------------------\n\n- If the TILES setting contains an empty list, no default tiles layer is generated (thanks @dyve).\n- Fix to allow multipoints saving (fixes #130, thanks @rukayaj)\n- Fix settings override (#142, thanks @ndufrane)\n- Fix for templatetags.leflet_js debug setting (#148, thanks @arctelix)\n- Fixes for Django 1.10 compatibility (#138, thanks @PetrDiouhy)\n\n\n0.18.0 (2016-01-04)\n-------------------\n\n**New features**\n\n* Use a LazyEncoder to allow lazy translations in settings (#132, thanks @Mactory)\n* Enable settings_overrides also for admin (fixes #120, thanks @PetrDiouhy)\n* Add tests for Django 1.9 and Python 3.5 (thanks @itbabu)\n\n**Bug fixes**\n\n* Fix LeafletWidget behaviour on GeometryCollectionField (fixes #135)\n\n\n0.17.1 (2015-12-16)\n-------------------\n\n* Update Leaflet to 0.7.7\n* Update Leaflet-draw to 0.2.4\n* Fix rendering of leaflet widget when initial value is an empty string\n\n\n0.17.0 (2015-11-11)\n-------------------\n\n**New features**\n\n* Pass relative URLs for static files through django.contrib.staticfiles (thanks @dyve, fixes #111)\n* Allow to override settings at the template tag level (thanks @PetrDiouhy, fixes #59)\n* Update Leaflet to 0.7.5 (@dyve)\n* Add Czech locale (thanks @PetrDiouhy)\n\n**Bug fixes**\n\n* Fix interaction with django-geojson (#106, thanks @batisteo)\n* Use protocol independant URLs in default OSM tiles (thanks @NotSqrt)\n* Fix deprecated TEMPLATE_DEBUG (#121, thanks @josenaka)\n* Fix errors with multi-word field names (#123, thanks @josemazo)\n* Fix loadevent not being taken into account in forms (#127, thanks @josemazo)\n\n\n0.16.0 (2015-04-17)\n-------------------\n\n**New features**\n\n* Add setting ``FORCE_IMAGE_PATH`` to bypass Leaflet guess on image paths\n  (*useful when using django-compressor*) (thanks @nimasmi)\n* Add Hebrew translations (thanks @nonZero)\n* Map attribution can be translated using ugettext_lazy\n\n**Bug fixes**\n\n* Fix widgets hanging forever with points (thanks @Azimkhan, fixes #90)\n* Remove setTimeout when calling setView() (thanks @manelclos, fixes #89)\n* Fix minZoom/maxZoom when undefined in settings (thanks Manel Clos)\n\n\n0.15.2 (2014-12-22)\n-------------------\n\n* Allow to set any leaflet tileLayer option in ``TILES`` and ``OVERLAYS`` settings (fixes #70).\n\n\n0.15.1 (2014-12-04)\n-------------------\n\n* Remove special characters in README (fixes #82)\n* Fix translation in French (fixes #86)\n* Fix es localization\n\n\n0.15.0 (2014-10-24)\n-------------------\n\n* Add ability to add overlay tile layers via new setting ``OVERLAYS``.\n\n0.14.2 (2014-10-24)\n-------------------\n\n* Fix Django 1.7 support in tests (thanks Marco Badan)\n* Add spanish translations (thanks David Martinez)\n\n0.14.1 (2014-07-30)\n-------------------\n\n* Fix draw events being received for each draw control on the map.\n  (**Caution**: ``map.drawControl`` attribute is not set anymore)\n\n\n0.14.0 (2014-07-29)\n-------------------\n\n* Fix GeoJSON serialization when creating new MultiPoint records\n* Make the only layer match the map max/min_zoom (fixes #67) (thanks Manel Clos)\n* Added widget attribute to edit several fields on the same map\n\n\n0.13.7 (2014-06-26)\n-------------------\n\n* Fix typo in default proj4js path (ref #71)\n\n\n0.13.6 (2014-06-26)\n-------------------\n\n* Setup Projection machinery in Leaflet forms if necessary\n* Django Leaflet forms fiels without libgeos installed (thanks Florent Lebreton)\n\n\n0.13.5 (2014-06-18)\n-------------------\n\n* Prevent SRID download when default is used\n\n\n0.13.4 (2014-06-13)\n-------------------\n\n* Fix SRID projection file not being loaded\n\n\n0.13.3 (2014-06-10)\n-------------------\n\n* Upgrade to Leaflet 0.7.3\n\n\n0.13.2 (2014-04-15)\n-------------------\n\n* Fix regression where maps have null as max zoom\n\n\n0.13.1 (2014-04-10)\n-------------------\n\n* Fix GEOS dependency, back as optional for geometry edition only (fixes #65)\n* Add minZoom and maxZoom to map initialization\n* Add support of advanced static files locations, like S3 (thanks @jnm)\n\n\n0.13.0 (2014-03-26)\n-------------------\n\n* Add support of Leaflet form fields on Django >= 1.4.2 (thanks Ga\u00c4\u0082\u0139\u00a4l Utard)\n\n\n0.12 (2014-03-22)\n-----------------\n\n* Add support of GeoJSON fields\n\n\n0.11.1 (2014-02-12)\n-------------------\n\n* Do not complain about tile extent if SRID is 3857\n\n\n0.11.0 (2014-02-07)\n-------------------\n\n* Add control of `metric` and `imperial` in `SCALE` option (thanks @smcoll)\n* Upgrade to Leaflet.draw 0.2.3\n\n\n0.10.1 (2014-02-03)\n-------------------\n\n* Upgrade to Leaflet 0.7.2\n\n\n0.10.0 (2014-01-22)\n-------------------\n\n* Python 3 support (thanks @itbabu)\n* Added JavaScript test using Mocha\n\n0.9.0 (2013-12-11)\n------------------\n\n* Upgrade to Leaflet 0.7.1\n* Fix unsaved warning being always triggered on Internet Explorer.\n* Added DE locale (thanks @rosscdh)\n* Fix installation with python 2.6 (thanks @ollb)\n\n\n0.8.5 (2013-11-05)\n------------------\n\n* Fix name collision.\n\n\n0.8.4 (2013-11-05)\n------------------\n\n* Fix regression in Django leaflet options serialization.\n\n\n0.8.3 (2013-11-05)\n------------------\n\n* Switch to lazy gettext in leaflet module init.\n\n\n0.8.2 (2013-10-31)\n------------------\n\n* Fix drawing of multi-polygon (fixes #37)\n* Fix attached data for events with jQuery fallback (fixes #38)\n* Fix Javascript syntax errors when using form prefixes (fixes #40)\n\n0.8.1 (2013-09-30)\n------------------\n\n* Fix Leaflet library inclusion with \"plugins=ALL\" outside Admin.\n* Do not include translations in every widgets outside Admin.\n* Fix syntax error if form widget translations contains quotes.\n* Fix dependency error if Leaflet is loaded after the form widget in the DOM.\n* Respect plugins declaration order using OrderedDicts\n* Prepend forms assets (instead of extend) if PLUGINS['forms'] already exists.\n\n0.8.0 (2013-09-18)\n------------------\n\n* Renamed Leaflet map fragment template\n* Leaflet map geometry widgets for adminsite and forms (requires Django 1.6)\n* Fix geometry type restriction in form fields (fixes #32)\n* Use jQuery for triggering events, only if CustomEvent constructor is not available (fixes #27, fixes #34)\n\n0.7.4 (2013-08-28)\n------------------\n\n* Fix projection download error if not available\n* Compute resolutions the same way TileCache does it, and provide\n  example of TileCache configuration.\n* Raise ImproperlyConfigured if TILES_EXTENT is not portrait (since not supported)\n\n0.7.3 (2013-08-23)\n------------------\n\n* Do not use console() to warn about deprecated stuff if not available (<IE9)\n* Fix apparence of Reset view control for Leaflet 0.6\n* Add French and Italian locales\n\n0.7.2 (2013-08-23)\n------------------\n\n* Fix JS error when no callback value is provided.\n\n\n0.7.1 (2013-08-21)\n------------------\n\n* Fix map initialization with default tiles setting\n* Fix map ``fitBounds()`` to ``SPATIAL_EXTENT`` in settings\n\n\n0.7.0 (2013-08-21)\n------------------\n\n**Breaking changes**\n\n* The ``leaflet_map`` template tag no longer registers initialization\n  functions in global scope, and no longer adds map objects into ``window.maps``\n  array by default. Use ``LEAFLET_CONFIG['NO_GLOBALS'] = False`` to\n  restore these features.\n\n* Initialization callback function no longer receives the map ``bounds`` in second\n  argument, but the map options object.\n\n**Deprecated**\n\n* JS default callback function ( *<name>Init()* ) for map initialization is **deprecated**.\n  Use explicit ``callback`` parameter in template tag,  or listen to window event ``map:init`` instead.\n  (See *Use Leaflet API* section in README.)\n\n* ``TILES_URL`` entry in ``LEAFLET_CONFIG`` is **deprecated**.\n  Use ``TILES`` instead.\n\n* Settings lookup is restricted to ``LEAFLET_CONFIG`` dict. Most notably,\n  ``SRID``, ``MAP_SRID`` and ``SPATIAL_EXTENT`` at global Django settings level\n  are discouraged.\n\n**New features**\n\n* Add ability to associate layers attributions from settings\n* Add ``auto-include`` key for entries in ``PLUGINS`` setting, in order\n  to implicity load plugins with ``leaflet_css`` and ``leaflet_js`` tags.\n* Rewrote map initialization, into less flexible and obstruvise way.\n* Use plugin system for Leaflet.MiniMap.\n* Add ``loadevent`` parameter to ``leaflet_map`` tag.\n* Map initialization is now idempotent, does nothing if map is already initialized.\n* Add ``ATTRIBUTION_PREFIX`` setting to control prefix globally.\n\n\n0.6.0 (2013-08-08)\n------------------\n\n* Upgrade to Leaflet 0.6.4\n\n0.6.0a (2013-07-05)\n-------------------\n\n* Upgrade to Leaflet 0.6.2\n* Upgrade Leaflet.Minimap (rev 3cd58f7)\n* Upgrade Proj4Leaflet (rev f4f5b6d)\n\n0.5.1 (2013-04-08)\n------------------\n\n* Add minimap support\n* Drop Leaflet version switching\n* Update Leaflet to 0.5.1\n* Update Leaflet.Minimap\n* Fix apparence of Reset view button\n\n0.4.1 (2012-11-05)\n------------------\n\n* Fix div creation test in template.\n\n0.4.0 (2012-11-05)\n------------------\n\n* Remove imperial scale.\n* Add ``create_div`` parameter\n\n0.3.0 (2012-10-26)\n------------------\n\n* Remove max resolution setting since it can be computed\n* Allow scale control even if view is not set\n* Upgrade Leaflet to 0.4.5\n\n0.2.0 (2012-09-22)\n------------------\n\n* Fix packaging of templates\n* Use template for <head> fragment\n* Do not rely on spatialreference.org by default\n* Default settings for SRID\n* Default settings for map extent\n* Default map height\n* Default tiles base layer\n* map variable is not global anymore\n\n0.1.0 (2012-08-13)\n------------------\n\n* Initial support for map projection\n* Show zoom scale by default\n* Spatial extent configuration\n* Initialization callback instead of global JS variable\n* Leaflet version switching\n* Global layers configuration\n\n0.0.2 (2012-03-22)\n------------------\n\n* Add IE conditional CSS\n\n\n0.0.1 (2012-03-16)\n------------------\n\n* Initial working version\n", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/django-leaflet-cadasta/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Cadasta/django-leaflet", "keywords": "", "license": "LPGL, see LICENSE file.", "maintainer": "", "maintainer_email": "", "name": "django-leaflet-cadasta", "package_url": "https://pypi.org/project/django-leaflet-cadasta/", "platform": "", "project_url": "https://pypi.org/project/django-leaflet-cadasta/", "project_urls": {"Download": "http://pypi.python.org/pypi/django-leaflet-cadasta/", "Homepage": "https://github.com/Cadasta/django-leaflet"}, "release_url": "https://pypi.org/project/django-leaflet-cadasta/0.21.0/", "requires_dist": null, "requires_python": "", "summary": "Use Leaflet in your django projects", "version": "0.21.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>django-leaflet</em> allows you to use <a href=\"http://leafletjs.com\" rel=\"nofollow\">Leaflet</a>\nin your <a href=\"https://www.djangoproject.com\" rel=\"nofollow\">Django</a> projects.</p>\n<p>It embeds Leaflet version <em>1.0.3</em>.</p>\n<a href=\"https://pypi.python.org/pypi/django-leaflet\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-leaflet.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70c34cd80363b646e733e431c473e4a068188f86/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d6c6561666c65742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-leaflet\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/django-leaflet.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72fad7b067d024769a8bcd657a93b28c65711c7e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d6c6561666c65742e737667\"></a>\n<a href=\"https://travis-ci.org/makinacorpus/django-leaflet\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/makinacorpus/django-leaflet.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f072a0acb20b819f0e51fee4881eeffd5b685a4d/68747470733a2f2f7472617669732d63692e6f72672f6d616b696e61636f727075732f646a616e676f2d6c6561666c65742e706e67\"></a>\n<a href=\"https://coveralls.io/r/makinacorpus/django-leaflet\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/makinacorpus/django-leaflet/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d9495cc7c5e20a1916d3450d25b6f7c4198a584/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d616b696e61636f727075732f646a616e676f2d6c6561666c65742f62616467652e706e67\"></a>\n<p>Main purposes of having a python package for the Leaflet Javascript library :</p>\n<ul>\n<li>Install and enjoy ;</li>\n<li>Do not embed Leaflet assets in every Django project ;</li>\n<li>Enjoy geometry edition with Leaflet form widget ;</li>\n<li>Control apparence and settings of maps from Django settings (e.g. at deployment) ;</li>\n<li>Reuse Leaflet map initialization code (e.g. local projections) ;</li>\n</ul>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>note:</th><td><em>django-leaflet</em> is compatible with <a href=\"https://github.com/makinacorpus/django-geojson.git\" rel=\"nofollow\">django-geojson</a> fields, which\nallow handling geographic data without spatial database.</td>\n</tr>\n</tbody>\n</table>\n<div id=\"install\">\n<h2>INSTALL</h2>\n<p>Last stable version:</p>\n<pre>pip install django-leaflet\n</pre>\n<p>Last development version (master branch):</p>\n<pre>pip install -e git+https://github.com/makinacorpus/django-leaflet.git#egg=django-leaflet\n</pre>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<ul>\n<li><p>Add <tt>leaflet</tt> to your <tt>INSTALLED_APPS</tt></p>\n</li>\n<li><p>Make sure <tt>django.contrib.staticfiles</tt> is also in your <tt>INSTALLED_APPS</tt>; Django &gt;= 1.3 <a href=\"https://docs.djangoproject.com/en/1.3/intro/tutorial01/#database-setup\" rel=\"nofollow\">includes this contrib app by default</a></p>\n</li>\n<li><p>Add the HTML header:</p>\n<pre>{% load leaflet_tags %}\n\n&lt;head&gt;\n    ...\n    {% leaflet_js %}\n    {% leaflet_css %}\n&lt;/head&gt;\n</pre>\n</li>\n<li><p>Add the map in your page, providing a name:</p>\n<pre>...\n&lt;body&gt;\n    ...\n    {% leaflet_map \"yourmap\" %}\n    ...\n&lt;/body&gt;\n</pre>\n</li>\n<li><p>Your map shows up!</p>\n</li>\n</ul>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Check out the <a href=\"https://github.com/makinacorpus/django-leaflet/tree/master/example\" rel=\"nofollow\">example project</a>\nifor a complete integration!</p>\n</div>\n<div id=\"use-leaflet-api\">\n<h3>Use Leaflet API</h3>\n<p>You can use the <em>Leaflet</em> API as usual. There are two ways to\ngrab a reference on the just initialized map and options.</p>\n<p><strong>Using Javascript callback function</strong></p>\n<p>The easy way :</p>\n<pre>&lt;script type=\"text/javascript\"&gt;\n    function map_init_basic (map, options) {\n        ...\n        L.marker([50.5, 30.5]).addTo(map);\n        ...\n    }\n&lt;/script&gt;\n\n{% leaflet_map \"yourmap\" callback=\"window.map_init_basic\" %}\n</pre>\n<p><strong>Using events</strong></p>\n<p>If you don\u2019t want to expose global callbacks :</p>\n<pre>&lt;script type=\"text/javascript\"&gt;\n    window.addEventListener(\"map:init\", function (e) {\n        var detail = e.detail;\n        ...\n        L.marker([50.5, 30.5]).addTo(detail.map);\n        ...\n    }, false);\n&lt;/script&gt;\n</pre>\n<p>Event object has two properties : <tt>map</tt> and <tt>options</tt> (initialization).</p>\n<p>For Internet Explorer support, we fallback on jQuery if available</p>\n<pre>$(window).on('map:init', function (e) {\n    var detail = e.originalEvent ?\n                 e.originalEvent.detail : e.detail;\n    ...\n    L.marker([50.5, 30.5]).addTo(detail.map);\n    ...\n});\n</pre>\n<p>If you want to support archaic browsers <strong>and</strong> still avoid jQuery,\n<em>django-leaflet</em> comes with a minimalist polyfill for events.\nAdd it in <tt>&lt;head&gt;</tt> this way</p>\n<pre>&lt;!--[if IE 8]&gt;&lt;script src=\"{% static \"leaflet/eventlister.ie8.js\" %}\"&gt;&lt;/script&gt;&lt;!--&lt;![endif]--&gt;\n&lt;!--[if lt IE 8]&gt;&lt;script src=\"{% static \"leaflet/eventlister.ie6-7.js\" %}\"&gt;&lt;/script&gt;&lt;!--&lt;![endif]--&gt;\n</pre>\n</div>\n<div id=\"customize-map-size\">\n<h3>Customize map size</h3>\n<p>CSS is your friend:</p>\n<pre>&lt;style&gt;\n\n    .leaflet-container {  /* all maps */\n        width:  600px;\n        height: 400px;\n    }\n\n    #specialbigmap {\n        height: 800px;\n    }\n\n&lt;/style&gt;\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>In order to configure <em>django-leaflet</em>, just add a new section in your\nsettings:</p>\n<pre>LEAFLET_CONFIG = {\n    # conf here\n}\n</pre>\n<p>And add some of the following entries.</p>\n<div id=\"spatial-extent\">\n<h4>Spatial extent</h4>\n<p>You can configure a global spatial extent for your maps, that will\nautomatically center your maps, restrict panning and add reset view and scale\ncontrols. (<em>See advanced usage to tweak that.</em>):</p>\n<pre>'SPATIAL_EXTENT': (5.0, 44.0, 7.5, 46)\n</pre>\n</div>\n<div id=\"initial-map-center-and-zoom-level\">\n<h4>Initial map center and zoom level</h4>\n<p>In addition to limiting your maps with <tt>SPATIAL_EXTENT</tt>, you can also specify\ninitial map center, default, min and max zoom level:</p>\n<pre>'DEFAULT_CENTER': (6.0, 45.0),\n'DEFAULT_ZOOM': 16,\n'MIN_ZOOM': 3,\n'MAX_ZOOM': 18,\n</pre>\n<p>The tuple/list must contain (lat,lng) coords.</p>\n</div>\n<div id=\"default-tiles-layer\">\n<h4>Default tiles layer</h4>\n<p>To globally add a tiles layer to your maps:</p>\n<pre>'TILES': 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n</pre>\n<p>This setting can also be a list of tuples <tt>(name, url, options)</tt>.\nThe python dict <tt>options</tt> accepts all the Leaflet tileLayers options.</p>\n<p>If it contains several layers, a layer switcher will then be added automatically.</p>\n<pre>'TILES': [('Satellite', 'http://server/a/...', {'attribution': '&amp;copy; Big eye', 'maxZoom': 16}),\n          ('Streets', 'http://server/b/...', {'attribution': '&amp;copy; Contributors'})]\n</pre>\n<p>If you omit this setting, a default OpenSTreetMap layer will be created for your convenience. If you do not want\na default layers (perhaps to add them in your own JavaScript code on map initialization), set the value to an empty\nlist, as shown below.</p>\n<pre>'TILES': []\n</pre>\n<p>Note that this will also prevent any overlays defined in settings from being displayed.</p>\n</div>\n<div id=\"overlay-layers\">\n<h4>Overlay layers</h4>\n<p>To globally add an overlay layer, use the same syntax as tiles:</p>\n<pre>'OVERLAYS': [('Cadastral', 'http://server/a/{z}/{x}/{y}.png', {'attribution': '&amp;copy; IGN'})]\n</pre>\n<p>Currently, overlay layers from settings are limited to tiles. For vectorial overlays, you\nwill have to add them via JavaScript (see events).</p>\n</div>\n<div id=\"attribution-prefix\">\n<h4>Attribution prefix</h4>\n<p>To globally add an attribution prefix on maps (most likely an empty string)</p>\n<pre>'ATTRIBUTION_PREFIX': 'Powered by django-leaflet'\n</pre>\n<p>Default is <tt>None</tt>, which leaves the value to <a href=\"http://leafletjs.com/reference.html#control-attribution\" rel=\"nofollow\">Leaflet\u2019s default</a>.</p>\n</div>\n<div id=\"scale-control\">\n<h4>Scale control</h4>\n<p>Scale control may be set to show \u2018metric\u2019 (m/km), or \u2018imperial\u2019 (mi/ft) scale\nlines, or \u2018both\u2019.  Default is \u2018metric\u2019.</p>\n<p>Enable metric and imperial scale control:</p>\n<pre>'SCALE': 'both'\n</pre>\n<p>Disable scale control:</p>\n<pre>'SCALE': None\n</pre>\n</div>\n<div id=\"minimap-control\">\n<h4>Minimap control</h4>\n<p>Shows a small map in the corner which shows the same as the main map with a\nset zoom offset:</p>\n<pre>'MINIMAP': True\n</pre>\n<p>By default it shows the tiles of the first layer in the list.</p>\n<p>(<a href=\"https://github.com/Norkart/Leaflet-MiniMap\" rel=\"nofollow\">More info\u2026</a>)</p>\n</div>\n<div id=\"reset-view-button\">\n<h4>Reset view button</h4>\n<p>By default, a button appears below the zoom controls and, when clicked, shows the entire map.\nTo remove this button, set:</p>\n<pre>'RESET_VIEW': False\n</pre>\n</div>\n<div id=\"global-initialization-functions-and-window-maps\">\n<h4>Global initialization functions and <tt>window.maps</tt></h4>\n<p>Since 0.7.0, the <tt>leaflet_map</tt> template tag no longer registers initialization functions in global scope,\nand no longer adds map objects into <tt>window.maps</tt> array by default. To restore these features, use:</p>\n<pre>'NO_GLOBALS' = False\n</pre>\n</div>\n<div id=\"force-leaflet-image-path\">\n<h4>Force Leaflet image path</h4>\n<p>If you are using staticfiles compression libraries such as django_compressor,\nwhich can do any of compressing, concatenating or renaming javascript files,\nthis may break Leaflet\u2019s own ability to determine its installed path, and in\nturn break the method <tt>L.Icon.Default.imagePath()</tt>.</p>\n<p>To use Django\u2019s own knowledge of its static files to force this value\nexplicitly, use:</p>\n<pre>'FORCE_IMAGE_PATH': True\n</pre>\n</div>\n<div id=\"plugins\">\n<h4>Plugins</h4>\n<p>To ease the usage of plugins, django-leaflet allows specifying a set of plugins, that can\nlater be referred to from the template tags by name:</p>\n<pre>'PLUGINS': {\n    'name-of-plugin': {\n        'css': ['relative/path/to/stylesheet.css', '/root/path/to/stylesheet.css'],\n        'js': 'http://absolute-url.example.com/path/to/script.js',\n        'auto-include': True,\n    },\n    . . .\n}\n</pre>\n<p>Both \u2018css\u2019 and \u2018js\u2019 support identical features for specifying resource URLs:</p>\n<ul>\n<li>can be either a plain string or a list of URLs</li>\n<li>each string can be:<ul>\n<li>absolute URL - will be included as-is; <strong>example</strong>: <tt><span class=\"pre\">http://absolute-url.example.com/path/to/script.js</span></tt></li>\n<li>a URL beginning from the root - will be included as-is;  <strong>example</strong>: <tt>/root/path/to/stylesheet.css</tt></li>\n<li>a relative URL - settings.STATIC_URL will be prepended; <strong>example</strong>: <tt>relative/path/to/stylesheet.css</tt> will be included as <strong>/static/relative/path/to/stylesheet.css</strong> (depending on your setting for STATIC_URL)</li>\n</ul>\n</li>\n</ul>\n<p>Now, use <tt>leaflet_js</tt> and <tt>leaflet_css</tt> tags to load CSS and JS resources of\nconfigured Leaflet plugins.</p>\n<p>By default only plugins with <tt><span class=\"pre\">'auto-include'</span></tt> as True will be included.</p>\n<p>To include specific plugins in the page, specify plugin names, comma separated:</p>\n<pre>{% load leaflet_tags %}\n\n&lt;head&gt;\n    ...\n    {% leaflet_js  plugins=\"bouncemarker,draw\" %}\n    {% leaflet_css plugins=\"bouncemarker,draw\" %}\n&lt;/head&gt;\n</pre>\n<p>To include all plugins configured in <tt><span class=\"pre\">LEAFLET_CONFIG['PLUGINS']</span></tt>, use:</p>\n<pre>{% leaflet_js plugins=\"ALL\" %}\n{% leaflet_css plugins=\"ALL\" %}\n</pre>\n</div>\n</div>\n<div id=\"leaflet-map-forms-widgets\">\n<h3>Leaflet map forms widgets</h3>\n<p>A Leaflet widget is provided to edit geometry fields.\nIt embeds <em>Leaflet.draw</em> in version <em>0.4.0</em>.</p>\n<img alt=\"https://f.cloud.github.com/assets/546692/1048836/78b6ad94-1094-11e3-86d8-c3e88626a31d.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/296e8c795f7f5515b3faefc6f8c3da34a341425e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f3534363639322f313034383833362f37386236616439342d313039342d313165332d383664382d6333653838363236613331642e706e67\">\n<div id=\"in-adminsite\">\n<h4>In Adminsite</h4>\n<pre>from django.contrib import admin\nfrom leaflet.admin import LeafletGeoAdmin\n\nfrom .models import WeatherStation\n\n\nadmin.site.register(WeatherStation, LeafletGeoAdmin)\n</pre>\n<p>A mixin is also available for inline forms:</p>\n<pre>from django.contrib import admin\nfrom leaflet.admin import LeafletGeoAdminMixin\n\nclass PoiLocationInline(LeafletGeoAdminMixin, admin.StackedInline):\n    model = PoiLocation\n</pre>\n</div>\n<div id=\"in-forms\">\n<h4>In forms</h4>\n<p>With <em>Django</em> &gt;= 1.6:</p>\n<pre>from django import forms\n\nfrom leaflet.forms.widgets import LeafletWidget\n\n\nclass WeatherStationForm(forms.ModelForm):\n\n    class Meta:\n        model = WeatherStation\n        fields = ('name', 'geom')\n        widgets = {'geom': LeafletWidget()}\n</pre>\n<p>With all <em>Django</em> versions:</p>\n<pre>from django import forms\n\nfrom leaflet.forms.fields import PointField\n\n\nclass WeatherStationForm(forms.ModelForm):\n    geom = PointField()\n\n    class Meta:\n        model = WeatherStation\n        fields = ('name', 'geom')\n</pre>\n<p>The related template would look like this:</p>\n<pre>{% load leaflet_tags %}\n&lt;html&gt;\n  &lt;head&gt;\n   {% leaflet_js plugins=\"forms\" %}\n   {% leaflet_css plugins=\"forms\" %}\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Edit {{ object }}&lt;/h1&gt;\n    &lt;form action=\"POST\"&gt;\n        {{ form }}\n        &lt;input type=\"submit\"/&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>Every map field will trigger an event you can use to add your custom machinery :</p>\n<pre>map.on('map:loadfield', function (e) {\n    ...\n    // Customize map for field\n    console.log(e.field, e.fieldid);\n    ...\n});\n</pre>\n<p>If you need a reusable customization of widgets maps, first override the JavaScript field behaviour by extending <tt>L.GeometryField</tt>, then in Django subclass the <tt>LeafletWidget</tt> to specify the custom <tt>geometry_field_class</tt>.</p>\n<pre>YourGeometryField = L.GeometryField.extend({\n    addTo: function (map) {\n        L.GeometryField.prototype.addTo.call(this, map);\n        // Customize map for field\n        console.log(this);\n    },\n    // See GeometryField source (static/leaflet/leaflet.forms.js) to override more stuff...\n});\n</pre>\n<pre>class YourMapWidget(LeafletWidget):\n    geometry_field_class = 'YourGeometryField'\n\nclass YourForm(forms.ModelForm):\n    class Meta:\n        model = YourModel\n        fields = ('name', 'geom')\n        widgets = {'geom': YourMapWidget()}\n</pre>\n</div>\n<div id=\"id1\">\n<h4>Plugins</h4>\n<p>It\u2019s possible to add extras JS/CSS or auto-include <em>forms</em> plugins\neverywhere:</p>\n<pre>LEAFLET_CONFIG = {\n    'PLUGINS': {\n        'forms': {\n            'auto-include': True\n        }\n    }\n}\n</pre>\n<p>( <em>It will be merged over default minimal set required for edition</em> )</p>\n</div>\n<div id=\"details\">\n<h4>Details</h4>\n<ul>\n<li>It relies on global settings for map initialization.</li>\n<li>It works with local map projections. But SRID is specified globally\nthrough <tt><span class=\"pre\">LEAFLET_CONFIG['SRID']</span></tt> as described below.</li>\n<li>Javascript component for de/serializing fields value is pluggable.</li>\n<li>Javascript component for Leaflet.draw behaviour initialization is pluggable.</li>\n</ul>\n</div>\n</div>\n<div id=\"advanced-usage\">\n<h3>Advanced usage</h3>\n<div id=\"leaflet-map-tag-parameters\">\n<h4><tt>{% leaflet_map %}</tt> tag parameters</h4>\n<ul>\n<li><tt>callback</tt>: javascript function name for initialization callback.\n(Default: None).</li>\n<li><tt>fitextent</tt>: control if map initial view shoud be set to extent setting.\n(Default: <tt>True</tt>). Setting fixextent to <tt>False</tt> will prevent view reset\nand scale controls to be added.</li>\n<li><tt>creatediv</tt>: control if the leaflet map tags creates a new div or not.\n(Default: <tt>True</tt>).\nUseful to put the javascript code in the header or footer instead of the\nbody of the html document. If used, do not forget to create the div manually.</li>\n<li><tt>loadevent</tt>: One or more space-separated <em>window</em> events that trigger map initialization.\n(Default: <tt>load</tt>, i.e. all page resources loaded).\nIf empty values is provided, then map initialization is immediate.\nAnd with a wrong value, the map is never initialized. :)</li>\n<li><tt>settings_overrides</tt>: Map with overrides to the default LEAFLET_CONFIG settings.\n(Default: {}).</li>\n</ul>\n</div>\n<div id=\"config-overrides\">\n<h4>Config overrides</h4>\n<p>It is possible to dynamically override settings in <tt>LeafletWidget</tt> init:</p>\n<pre>from leaflet.forms.widgets import LeafletWidget\n\n\nclass WeatherStationForm(forms.ModelForm):\n\n    class Meta:\n        model = WeatherStation\n        fields = ('name', 'geom')\n        widgets = {'geom': LeafletWidget(attrs={\n            'settings_overrides': {\n                'DEFAULT_CENTER': (6.0, 45.0),\n            }\n        })}\n</pre>\n<p>For overriding the settings in <tt>LeafletGeoAdmin</tt>, use set the appropriate property:</p>\n<pre>class WeatherStationAdminAdmin(LeafletGeoAdmin):\n    settings_overrides = {\n       'DEFAULT_CENTER': (6.0, 45.0),\n    }\n</pre>\n</div>\n<div id=\"projection\">\n<h4>Projection</h4>\n<p>It is possible to setup the map spatial reference in <tt>LEAFLET_CONFIG</tt>:</p>\n<pre>'SRID': 2154  # See http://spatialreference.org\n</pre>\n<p>Additional parameter is required to compute scale levels : the tiles extent in\nlocal projection:</p>\n<pre>'TILES_EXTENT': [924861,6375196,985649,6448688],\n</pre>\n<p>For more information, <a href=\"http://blog.mathieu-leplatre.info/leaflet-tiles-in-lambert-93-projection-2154.html\" rel=\"nofollow\">have a look at this example</a>.</p>\n<p>Example of TileCache configuration compatible with Leaflet:</p>\n<pre>[scan-portrait]\ntype=WMSLayer\nlayers=scan100,scan25\nurl=http://server/wms?\nextension=jpg\ntms_type=google\nsrs=EPSG:2154\nbbox=924861,6375196,985649,6448688\n\n[cache]\ntype=GoogleDisk\nexpire=2592000\nbase=/tmp/tiles\n</pre>\n<p>By default, <em>django-leaflet</em> will try to load the spatial reference from your static\nfiles at \u201cproj4js/{{ srid }}.js\u201d. If it fails, it will eventually rely on\n<a href=\"spatialreference.org\" rel=\"nofollow\">spatialreference.org</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"tutorials\">\n<h2>TUTORIALS</h2>\n<ul>\n<li><a href=\"http://blog.mathieu-leplatre.info/geodjango-maps-with-leaflet.html\" rel=\"nofollow\">GeoDjango maps with Leaflet</a></li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>AUTHORS</h2>\n<ul>\n<li><a href=\"http://mathieu-leplatre.info\" rel=\"nofollow\">Mathieu Leplatre</a></li>\n<li><a href=\"http://ingenieroariel.com\" rel=\"nofollow\">Ariel N\u00fa\u00f1ez</a></li>\n<li><a href=\"https://github.com/boris-chervenkov\" rel=\"nofollow\">Boris Chervenkov</a></li>\n<li><a href=\"https://github.com/itbabu\" rel=\"nofollow\">Marco Badan</a></li>\n<li><a href=\"https://github.com/brutasse\" rel=\"nofollow\">Bruno Reni\u00e9</a></li>\n<li><a href=\"https://github.com/djcoin\" rel=\"nofollow\">Simon Th\u00e9pot</a></li>\n<li><a href=\"https://github.com/thibault\" rel=\"nofollow\">Thibault Jouannic</a></li>\n<li><a href=\"https://github.com/jnm\" rel=\"nofollow\">jnm</a></li>\n<li><a href=\"https://github.com/manelclos\" rel=\"nofollow\">Manel Clos</a></li>\n<li><a href=\"https://github.com/gutard\" rel=\"nofollow\">Ga\u00ebl Utard</a></li>\n<li><a href=\"https://github.com/amarandon\" rel=\"nofollow\">Alex Marandon</a></li>\n<li><a href=\"https://github.com/ollb\" rel=\"nofollow\">ollb</a></li>\n<li><a href=\"https://github.com/smcoll\" rel=\"nofollow\">smcoll</a></li>\n<li><a href=\"https://github.com/jnm\" rel=\"nofollow\">jnm</a></li>\n<li><a href=\"https://github.com/oksome\" rel=\"nofollow\">OKso</a></li>\n<li><a href=\"https://github.com/fle/\" rel=\"nofollow\">Florent Lebreton</a></li>\n<li><a href=\"https://github.com/rgreenemun\" rel=\"nofollow\">rgreenemun</a></li>\n<li><a href=\"https://github.com/itbabu\" rel=\"nofollow\">Marco Badan</a></li>\n<li>David Martinez Morata</li>\n<li><a href=\"https://github.com/NotSqrt\" rel=\"nofollow\">NotSqrt</a></li>\n<li><a href=\"https://github.com/dyve\" rel=\"nofollow\">Dylan Verheul</a></li>\n<li><a href=\"https://github.com/Mactory\" rel=\"nofollow\">Mactory</a></li>\n<li><a href=\"https://github.com/PetrDlouhy\" rel=\"nofollow\">Petr Dlouhy</a></li>\n<li><a href=\"https://github.com/KostyaEsmukov\" rel=\"nofollow\">Kostya Esmukov</a></li>\n</ul>\n<p><a href=\"http://www.makina-corpus.com\" rel=\"nofollow\"><img alt=\"makinacom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a7ff2c6fc5ab8cd2f425946f19dbfbf0aa4c1d7/687474703a2f2f6465706f742e6d616b696e612d636f727075732e6f72672f7075626c69632f6c6f676f2e676966\"></a></p>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<ul>\n<li>Lesser GNU Public License</li>\n<li>Leaflet Copyright - 2010-2011 CloudMade, Vladimir Agafonkin</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<div id=\"unreleased\">\n<h3>0.21.0 (unreleased)</h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.20.0 (2017-01-27)</h3>\n<p><strong>New features</strong></p>\n<ul>\n<li>Update Leaflet to 1.0.3 (#169)</li>\n<li>Update Leaflet-draw to 0.4.0 (#169)</li>\n<li>Update Proj4Leaflet to 1.0.0 (#169)</li>\n<li>Made <cite>static</cite> calls lazy, to fix issues with non-default STATICFILES_STORAGE (#149)</li>\n<li>Add example application (#168)</li>\n</ul>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>Use SpatiaLite library path from environment variable for running test (#173)</li>\n<li>Fix max zoom level (#165)</li>\n<li>Add SPATIAL_EXTENT default value to the default settings (#167)</li>\n</ul>\n<p>Many thanks to @KostyaEsmukov, @cleder, @sikmir and @seav for their contributions!</p>\n</div>\n<div id=\"id5\">\n<h3>0.19.0 (2016-08-22)</h3>\n<p><strong>New features</strong></p>\n<ul>\n<li>Added <tt>leaflet.admin.LeafletGeoAdminMixin</tt>, useful for stacked or tabular\ninline forms (thanks @KostyaEsmukov, @Xowap)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.18.2 (2016-08-16)</h3>\n<ul>\n<li>Fix compatibility with Django &lt;= 1.7</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.18.1 (2016-04-07)</h3>\n<ul>\n<li>If the TILES setting contains an empty list, no default tiles layer is generated (thanks @dyve).</li>\n<li>Fix to allow multipoints saving (fixes #130, thanks @rukayaj)</li>\n<li>Fix settings override (#142, thanks @ndufrane)</li>\n<li>Fix for templatetags.leflet_js debug setting (#148, thanks @arctelix)</li>\n<li>Fixes for Django 1.10 compatibility (#138, thanks @PetrDiouhy)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.18.0 (2016-01-04)</h3>\n<p><strong>New features</strong></p>\n<ul>\n<li>Use a LazyEncoder to allow lazy translations in settings (#132, thanks @Mactory)</li>\n<li>Enable settings_overrides also for admin (fixes #120, thanks @PetrDiouhy)</li>\n<li>Add tests for Django 1.9 and Python 3.5 (thanks @itbabu)</li>\n</ul>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>Fix LeafletWidget behaviour on GeometryCollectionField (fixes #135)</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.17.1 (2015-12-16)</h3>\n<ul>\n<li>Update Leaflet to 0.7.7</li>\n<li>Update Leaflet-draw to 0.2.4</li>\n<li>Fix rendering of leaflet widget when initial value is an empty string</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.17.0 (2015-11-11)</h3>\n<p><strong>New features</strong></p>\n<ul>\n<li>Pass relative URLs for static files through django.contrib.staticfiles (thanks @dyve, fixes #111)</li>\n<li>Allow to override settings at the template tag level (thanks @PetrDiouhy, fixes #59)</li>\n<li>Update Leaflet to 0.7.5 (@dyve)</li>\n<li>Add Czech locale (thanks @PetrDiouhy)</li>\n</ul>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>Fix interaction with django-geojson (#106, thanks @batisteo)</li>\n<li>Use protocol independant URLs in default OSM tiles (thanks @NotSqrt)</li>\n<li>Fix deprecated TEMPLATE_DEBUG (#121, thanks @josenaka)</li>\n<li>Fix errors with multi-word field names (#123, thanks @josemazo)</li>\n<li>Fix loadevent not being taken into account in forms (#127, thanks @josemazo)</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.16.0 (2015-04-17)</h3>\n<p><strong>New features</strong></p>\n<ul>\n<li>Add setting <tt>FORCE_IMAGE_PATH</tt> to bypass Leaflet guess on image paths\n(<em>useful when using django-compressor</em>) (thanks @nimasmi)</li>\n<li>Add Hebrew translations (thanks @nonZero)</li>\n<li>Map attribution can be translated using ugettext_lazy</li>\n</ul>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>Fix widgets hanging forever with points (thanks @Azimkhan, fixes #90)</li>\n<li>Remove setTimeout when calling setView() (thanks @manelclos, fixes #89)</li>\n<li>Fix minZoom/maxZoom when undefined in settings (thanks Manel Clos)</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.15.2 (2014-12-22)</h3>\n<ul>\n<li>Allow to set any leaflet tileLayer option in <tt>TILES</tt> and <tt>OVERLAYS</tt> settings (fixes #70).</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.15.1 (2014-12-04)</h3>\n<ul>\n<li>Remove special characters in README (fixes #82)</li>\n<li>Fix translation in French (fixes #86)</li>\n<li>Fix es localization</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.15.0 (2014-10-24)</h3>\n<ul>\n<li>Add ability to add overlay tile layers via new setting <tt>OVERLAYS</tt>.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.14.2 (2014-10-24)</h3>\n<ul>\n<li>Fix Django 1.7 support in tests (thanks Marco Badan)</li>\n<li>Add spanish translations (thanks David Martinez)</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.14.1 (2014-07-30)</h3>\n<ul>\n<li>Fix draw events being received for each draw control on the map.\n(<strong>Caution</strong>: <tt>map.drawControl</tt> attribute is not set anymore)</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.14.0 (2014-07-29)</h3>\n<ul>\n<li>Fix GeoJSON serialization when creating new MultiPoint records</li>\n<li>Make the only layer match the map max/min_zoom (fixes #67) (thanks Manel Clos)</li>\n<li>Added widget attribute to edit several fields on the same map</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.13.7 (2014-06-26)</h3>\n<ul>\n<li>Fix typo in default proj4js path (ref #71)</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.13.6 (2014-06-26)</h3>\n<ul>\n<li>Setup Projection machinery in Leaflet forms if necessary</li>\n<li>Django Leaflet forms fiels without libgeos installed (thanks Florent Lebreton)</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.13.5 (2014-06-18)</h3>\n<ul>\n<li>Prevent SRID download when default is used</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.13.4 (2014-06-13)</h3>\n<ul>\n<li>Fix SRID projection file not being loaded</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>0.13.3 (2014-06-10)</h3>\n<ul>\n<li>Upgrade to Leaflet 0.7.3</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>0.13.2 (2014-04-15)</h3>\n<ul>\n<li>Fix regression where maps have null as max zoom</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>0.13.1 (2014-04-10)</h3>\n<ul>\n<li>Fix GEOS dependency, back as optional for geometry edition only (fixes #65)</li>\n<li>Add minZoom and maxZoom to map initialization</li>\n<li>Add support of advanced static files locations, like S3 (thanks @jnm)</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>0.13.0 (2014-03-26)</h3>\n<ul>\n<li>Add support of Leaflet form fields on Django &gt;= 1.4.2 (thanks Ga\u00c4\u0082\u0139\u00a4l Utard)</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>0.12 (2014-03-22)</h3>\n<ul>\n<li>Add support of GeoJSON fields</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>0.11.1 (2014-02-12)</h3>\n<ul>\n<li>Do not complain about tile extent if SRID is 3857</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>0.11.0 (2014-02-07)</h3>\n<ul>\n<li>Add control of <cite>metric</cite> and <cite>imperial</cite> in <cite>SCALE</cite> option (thanks @smcoll)</li>\n<li>Upgrade to Leaflet.draw 0.2.3</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>0.10.1 (2014-02-03)</h3>\n<ul>\n<li>Upgrade to Leaflet 0.7.2</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>0.10.0 (2014-01-22)</h3>\n<ul>\n<li>Python 3 support (thanks @itbabu)</li>\n<li>Added JavaScript test using Mocha</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>0.9.0 (2013-12-11)</h3>\n<ul>\n<li>Upgrade to Leaflet 0.7.1</li>\n<li>Fix unsaved warning being always triggered on Internet Explorer.</li>\n<li>Added DE locale (thanks @rosscdh)</li>\n<li>Fix installation with python 2.6 (thanks @ollb)</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3>0.8.5 (2013-11-05)</h3>\n<ul>\n<li>Fix name collision.</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>0.8.4 (2013-11-05)</h3>\n<ul>\n<li>Fix regression in Django leaflet options serialization.</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>0.8.3 (2013-11-05)</h3>\n<ul>\n<li>Switch to lazy gettext in leaflet module init.</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3>0.8.2 (2013-10-31)</h3>\n<ul>\n<li>Fix drawing of multi-polygon (fixes #37)</li>\n<li>Fix attached data for events with jQuery fallback (fixes #38)</li>\n<li>Fix Javascript syntax errors when using form prefixes (fixes #40)</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h3>0.8.1 (2013-09-30)</h3>\n<ul>\n<li>Fix Leaflet library inclusion with \u201cplugins=ALL\u201d outside Admin.</li>\n<li>Do not include translations in every widgets outside Admin.</li>\n<li>Fix syntax error if form widget translations contains quotes.</li>\n<li>Fix dependency error if Leaflet is loaded after the form widget in the DOM.</li>\n<li>Respect plugins declaration order using OrderedDicts</li>\n<li>Prepend forms assets (instead of extend) if PLUGINS[\u2018forms\u2019] already exists.</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h3>0.8.0 (2013-09-18)</h3>\n<ul>\n<li>Renamed Leaflet map fragment template</li>\n<li>Leaflet map geometry widgets for adminsite and forms (requires Django 1.6)</li>\n<li>Fix geometry type restriction in form fields (fixes #32)</li>\n<li>Use jQuery for triggering events, only if CustomEvent constructor is not available (fixes #27, fixes #34)</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h3>0.7.4 (2013-08-28)</h3>\n<ul>\n<li>Fix projection download error if not available</li>\n<li>Compute resolutions the same way TileCache does it, and provide\nexample of TileCache configuration.</li>\n<li>Raise ImproperlyConfigured if TILES_EXTENT is not portrait (since not supported)</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h3>0.7.3 (2013-08-23)</h3>\n<ul>\n<li>Do not use console() to warn about deprecated stuff if not available (&lt;IE9)</li>\n<li>Fix apparence of Reset view control for Leaflet 0.6</li>\n<li>Add French and Italian locales</li>\n</ul>\n</div>\n<div id=\"id40\">\n<h3>0.7.2 (2013-08-23)</h3>\n<ul>\n<li>Fix JS error when no callback value is provided.</li>\n</ul>\n</div>\n<div id=\"id41\">\n<h3>0.7.1 (2013-08-21)</h3>\n<ul>\n<li>Fix map initialization with default tiles setting</li>\n<li>Fix map <tt>fitBounds()</tt> to <tt>SPATIAL_EXTENT</tt> in settings</li>\n</ul>\n</div>\n<div id=\"id42\">\n<h3>0.7.0 (2013-08-21)</h3>\n<p><strong>Breaking changes</strong></p>\n<ul>\n<li>The <tt>leaflet_map</tt> template tag no longer registers initialization\nfunctions in global scope, and no longer adds map objects into <tt>window.maps</tt>\narray by default. Use <tt><span class=\"pre\">LEAFLET_CONFIG['NO_GLOBALS']</span> = False</tt> to\nrestore these features.</li>\n<li>Initialization callback function no longer receives the map <tt>bounds</tt> in second\nargument, but the map options object.</li>\n</ul>\n<p><strong>Deprecated</strong></p>\n<ul>\n<li>JS default callback function ( <em>&lt;name&gt;Init()</em> ) for map initialization is <strong>deprecated</strong>.\nUse explicit <tt>callback</tt> parameter in template tag,  or listen to window event <tt>map:init</tt> instead.\n(See <em>Use Leaflet API</em> section in README.)</li>\n<li><tt>TILES_URL</tt> entry in <tt>LEAFLET_CONFIG</tt> is <strong>deprecated</strong>.\nUse <tt>TILES</tt> instead.</li>\n<li>Settings lookup is restricted to <tt>LEAFLET_CONFIG</tt> dict. Most notably,\n<tt>SRID</tt>, <tt>MAP_SRID</tt> and <tt>SPATIAL_EXTENT</tt> at global Django settings level\nare discouraged.</li>\n</ul>\n<p><strong>New features</strong></p>\n<ul>\n<li>Add ability to associate layers attributions from settings</li>\n<li>Add <tt><span class=\"pre\">auto-include</span></tt> key for entries in <tt>PLUGINS</tt> setting, in order\nto implicity load plugins with <tt>leaflet_css</tt> and <tt>leaflet_js</tt> tags.</li>\n<li>Rewrote map initialization, into less flexible and obstruvise way.</li>\n<li>Use plugin system for Leaflet.MiniMap.</li>\n<li>Add <tt>loadevent</tt> parameter to <tt>leaflet_map</tt> tag.</li>\n<li>Map initialization is now idempotent, does nothing if map is already initialized.</li>\n<li>Add <tt>ATTRIBUTION_PREFIX</tt> setting to control prefix globally.</li>\n</ul>\n</div>\n<div id=\"id43\">\n<h3>0.6.0 (2013-08-08)</h3>\n<ul>\n<li>Upgrade to Leaflet 0.6.4</li>\n</ul>\n</div>\n<div id=\"a-2013-07-05\">\n<h3>0.6.0a (2013-07-05)</h3>\n<ul>\n<li>Upgrade to Leaflet 0.6.2</li>\n<li>Upgrade Leaflet.Minimap (rev 3cd58f7)</li>\n<li>Upgrade Proj4Leaflet (rev f4f5b6d)</li>\n</ul>\n</div>\n<div id=\"id44\">\n<h3>0.5.1 (2013-04-08)</h3>\n<ul>\n<li>Add minimap support</li>\n<li>Drop Leaflet version switching</li>\n<li>Update Leaflet to 0.5.1</li>\n<li>Update Leaflet.Minimap</li>\n<li>Fix apparence of Reset view button</li>\n</ul>\n</div>\n<div id=\"id45\">\n<h3>0.4.1 (2012-11-05)</h3>\n<ul>\n<li>Fix div creation test in template.</li>\n</ul>\n</div>\n<div id=\"id46\">\n<h3>0.4.0 (2012-11-05)</h3>\n<ul>\n<li>Remove imperial scale.</li>\n<li>Add <tt>create_div</tt> parameter</li>\n</ul>\n</div>\n<div id=\"id47\">\n<h3>0.3.0 (2012-10-26)</h3>\n<ul>\n<li>Remove max resolution setting since it can be computed</li>\n<li>Allow scale control even if view is not set</li>\n<li>Upgrade Leaflet to 0.4.5</li>\n</ul>\n</div>\n<div id=\"id48\">\n<h3>0.2.0 (2012-09-22)</h3>\n<ul>\n<li>Fix packaging of templates</li>\n<li>Use template for &lt;head&gt; fragment</li>\n<li>Do not rely on spatialreference.org by default</li>\n<li>Default settings for SRID</li>\n<li>Default settings for map extent</li>\n<li>Default map height</li>\n<li>Default tiles base layer</li>\n<li>map variable is not global anymore</li>\n</ul>\n</div>\n<div id=\"id49\">\n<h3>0.1.0 (2012-08-13)</h3>\n<ul>\n<li>Initial support for map projection</li>\n<li>Show zoom scale by default</li>\n<li>Spatial extent configuration</li>\n<li>Initialization callback instead of global JS variable</li>\n<li>Leaflet version switching</li>\n<li>Global layers configuration</li>\n</ul>\n</div>\n<div id=\"id50\">\n<h3>0.0.2 (2012-03-22)</h3>\n<ul>\n<li>Add IE conditional CSS</li>\n</ul>\n</div>\n<div id=\"id51\">\n<h3>0.0.1 (2012-03-16)</h3>\n<ul>\n<li>Initial working version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2649142, "releases": {"0.21.0": [{"comment_text": "", "digests": {"md5": "1672ba544950945fe6e00b00b3c45764", "sha256": "c858f80fe8b8b76a501642b5cf1a4079cc12fa63f1d1cf34720331016a9f10d6"}, "downloads": -1, "filename": "django-leaflet-cadasta-0.21.0.tar.gz", "has_sig": false, "md5_digest": "1672ba544950945fe6e00b00b3c45764", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 284278, "upload_time": "2017-02-17T09:42:59", "upload_time_iso_8601": "2017-02-17T09:42:59.695058Z", "url": "https://files.pythonhosted.org/packages/cb/24/0519fc3920ee557c38e3de0af6abac59e4101997354b5ae01bbcd010ce79/django-leaflet-cadasta-0.21.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1672ba544950945fe6e00b00b3c45764", "sha256": "c858f80fe8b8b76a501642b5cf1a4079cc12fa63f1d1cf34720331016a9f10d6"}, "downloads": -1, "filename": "django-leaflet-cadasta-0.21.0.tar.gz", "has_sig": false, "md5_digest": "1672ba544950945fe6e00b00b3c45764", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 284278, "upload_time": "2017-02-17T09:42:59", "upload_time_iso_8601": "2017-02-17T09:42:59.695058Z", "url": "https://files.pythonhosted.org/packages/cb/24/0519fc3920ee557c38e3de0af6abac59e4101997354b5ae01bbcd010ce79/django-leaflet-cadasta-0.21.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:22 2020"}