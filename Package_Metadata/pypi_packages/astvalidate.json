{"info": {"author": "isidentical", "author_email": "isidentical@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# ASTValidate\n\nA series of AST validators for validating the integrity of the tree.\n\n## Interface\nThe stable interface is `validate`, which comes directly from the root of\nthe package. It takes the tree, and the validation level. Validation level\nspecifies the strictness degree; for an example if it is 1, tree will be only\nchecked by some basic checks that is similiar to `PyAST_Validate` interface in\n`Python/ast.c`. Increasing levels means increasing checks and strictness.\n\n```py\nimport ast\nfrom astvalidate import validate\n\ntree = ast.parse(\"def x(): raise X from Y\")\nassert validate(tree)\n```\n\nIf the validator encounters with anything that shouldn't be, it raises a `SyntaxError`\nwith the node's line number and column offset. Also the original node that caused the\nerror is attached to the exception's `node` attribute.\n\n```py\ntree.body[0].body[0].exc = None\nassert validate(tree)\n```\n\n```\nSyntaxError: Raise's cause can't be used without setting an exception\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isidentical/astvalidate", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "astvalidate", "package_url": "https://pypi.org/project/astvalidate/", "platform": "", "project_url": "https://pypi.org/project/astvalidate/", "project_urls": {"Homepage": "https://github.com/isidentical/astvalidate"}, "release_url": "https://pypi.org/project/astvalidate/0.1.0/", "requires_dist": null, "requires_python": ">=3.8", "summary": "Easy AST validation", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ASTValidate</h1>\n<p>A series of AST validators for validating the integrity of the tree.</p>\n<h2>Interface</h2>\n<p>The stable interface is <code>validate</code>, which comes directly from the root of\nthe package. It takes the tree, and the validation level. Validation level\nspecifies the strictness degree; for an example if it is 1, tree will be only\nchecked by some basic checks that is similiar to <code>PyAST_Validate</code> interface in\n<code>Python/ast.c</code>. Increasing levels means increasing checks and strictness.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">astvalidate</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n\n<span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"def x(): raise X from Y\"</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span>\n</pre>\n<p>If the validator encounters with anything that shouldn't be, it raises a <code>SyntaxError</code>\nwith the node's line number and column offset. Also the original node that caused the\nerror is attached to the exception's <code>node</code> attribute.</p>\n<pre><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">exc</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span>\n</pre>\n<pre><code>SyntaxError: Raise's cause can't be used without setting an exception\n</code></pre>\n\n          </div>"}, "last_serial": 6881217, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "116921c8235f876a61c94d715023af57", "sha256": "5d6368ed68cd2ace176feb84f53f61d8cc49e6aa47a5a3c9624e52765b2c1444"}, "downloads": -1, "filename": "astvalidate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "116921c8235f876a61c94d715023af57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 6375, "upload_time": "2020-03-25T14:59:50", "upload_time_iso_8601": "2020-03-25T14:59:50.869323Z", "url": "https://files.pythonhosted.org/packages/63/d2/a5c3759e447c140fdf70fda8349fd58164b884a123946b4ada2c3ff4b52e/astvalidate-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "116921c8235f876a61c94d715023af57", "sha256": "5d6368ed68cd2ace176feb84f53f61d8cc49e6aa47a5a3c9624e52765b2c1444"}, "downloads": -1, "filename": "astvalidate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "116921c8235f876a61c94d715023af57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 6375, "upload_time": "2020-03-25T14:59:50", "upload_time_iso_8601": "2020-03-25T14:59:50.869323Z", "url": "https://files.pythonhosted.org/packages/63/d2/a5c3759e447c140fdf70fda8349fd58164b884a123946b4ada2c3ff4b52e/astvalidate-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:47 2020"}