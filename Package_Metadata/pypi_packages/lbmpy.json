{"info": {"author": "Martin Bauer", "author_email": "martin.bauer@fau.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Jupyter", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Code Generators"], "description": "lbmpy\n=====\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mabau/lbmpy/master?filepath=doc%2Fnotebooks)\n[![Docs](https://img.shields.io/badge/read-the_docs-brightgreen.svg)](http://pycodegen.pages.walberla.net/lbmpy)\n[![pipeline status](https://i10git.cs.fau.de/pycodegen/lbmpy/badges/master/pipeline.svg)](https://i10git.cs.fau.de/pycodegen/lbmpy/commits/master)\n[![coverage report](https://i10git.cs.fau.de/pycodegen/lbmpy/badges/master/coverage.svg)](http://pycodegen.pages.walberla.net/lbmpy/coverage_report)\n\n\nRun fast fluid simulations based on the lattice Boltzmann method in Python on CPUs and GPUs.\nlbmpy creates highly optimized LB compute kernels in C or CUDA, for a wide variety of different collision operators, including MRT,\nentropic, and cumulant schemes.\n\nAll collision operators can be easily adapted, for example, to integrate turbulence models, custom force terms, or multi-phase models. \nIt even comes with an integrated Chapman Enskog analysis based on sympy!\n\nCommon test scenarios can be set up quickly:\n```python\nch = create_channel(domain_size=(300,100, 100), force=1e-7, method=\"trt\",\n                    equilibrium_order=2, compressible=True,\n                    relaxation_rates=[1.97, 1.6], optimization={'target': 'gpu'})\n```\n\nTo find out more, check out the interactive [tutorial notebooks online with binder](https://mybinder.org/v2/gh/mabau/lbmpy/master?filepath=doc%2Fnotebooks).\n\n\nInstallation\n------------\n\nFor local installation use pip:\n\n```bash\npip install lbmpy[interactive]\n```\n\n\nWithout `[interactive]` you get a minimal version with very little dependencies.\n\nAll options:\n-  `gpu`: use this if nVidia GPU is available and CUDA is installed\n- `alltrafos`: pulls in additional dependencies for loop simplification e.g. libisl\n- `interactive`: installs dependencies to work in Jupyter including image I/O, plotting etc.\n\nOptions can be combined e.g.\n```bash\npip install lbmpy[interactive,gpu,doc]\n```\n\n\nDocumentation\n-------------\n\nRead the docs [here](http://pycodegen.pages.walberla.net/lbmpy) and\ncheck out the Jupyter notebooks in `doc/notebooks`.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://i10git.cs.fau.de/pycodegen/lbmpy/", "keywords": "", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "lbmpy", "package_url": "https://pypi.org/project/lbmpy/", "platform": "", "project_url": "https://pypi.org/project/lbmpy/", "project_urls": {"Homepage": "https://i10git.cs.fau.de/pycodegen/lbmpy/"}, "release_url": "https://pypi.org/project/lbmpy/0.2.11/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Code Generation for Lattice Boltzmann Methods", "version": "0.2.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lbmpy</h1>\n<p><a href=\"https://mybinder.org/v2/gh/mabau/lbmpy/master?filepath=doc%2Fnotebooks\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<a href=\"http://pycodegen.pages.walberla.net/lbmpy\" rel=\"nofollow\"><img alt=\"Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a919ec5d073bbf57fa6e5b62f0c6a502da7a9ddf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f726561642d7468655f646f63732d627269676874677265656e2e737667\"></a>\n<a href=\"https://i10git.cs.fau.de/pycodegen/lbmpy/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c8294c5e29bf75923f1294e6002b7a5986ec7ae/68747470733a2f2f6931306769742e63732e6661752e64652f7079636f646567656e2f6c626d70792f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"http://pycodegen.pages.walberla.net/lbmpy/coverage_report\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bce3fd5b6fb512ec8092c73706d760e631694c1/68747470733a2f2f6931306769742e63732e6661752e64652f7079636f646567656e2f6c626d70792f6261646765732f6d61737465722f636f7665726167652e737667\"></a></p>\n<p>Run fast fluid simulations based on the lattice Boltzmann method in Python on CPUs and GPUs.\nlbmpy creates highly optimized LB compute kernels in C or CUDA, for a wide variety of different collision operators, including MRT,\nentropic, and cumulant schemes.</p>\n<p>All collision operators can be easily adapted, for example, to integrate turbulence models, custom force terms, or multi-phase models.\nIt even comes with an integrated Chapman Enskog analysis based on sympy!</p>\n<p>Common test scenarios can be set up quickly:</p>\n<pre><span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"n\">create_channel</span><span class=\"p\">(</span><span class=\"n\">domain_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"mf\">1e-7</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"trt\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">equilibrium_order</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">compressible</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">relaxation_rates</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">1.97</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">],</span> <span class=\"n\">optimization</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'target'</span><span class=\"p\">:</span> <span class=\"s1\">'gpu'</span><span class=\"p\">})</span>\n</pre>\n<p>To find out more, check out the interactive <a href=\"https://mybinder.org/v2/gh/mabau/lbmpy/master?filepath=doc%2Fnotebooks\" rel=\"nofollow\">tutorial notebooks online with binder</a>.</p>\n<h2>Installation</h2>\n<p>For local installation use pip:</p>\n<pre>pip install lbmpy<span class=\"o\">[</span>interactive<span class=\"o\">]</span>\n</pre>\n<p>Without <code>[interactive]</code> you get a minimal version with very little dependencies.</p>\n<p>All options:</p>\n<ul>\n<li><code>gpu</code>: use this if nVidia GPU is available and CUDA is installed</li>\n<li><code>alltrafos</code>: pulls in additional dependencies for loop simplification e.g. libisl</li>\n<li><code>interactive</code>: installs dependencies to work in Jupyter including image I/O, plotting etc.</li>\n</ul>\n<p>Options can be combined e.g.</p>\n<pre>pip install lbmpy<span class=\"o\">[</span>interactive,gpu,doc<span class=\"o\">]</span>\n</pre>\n<h2>Documentation</h2>\n<p>Read the docs <a href=\"http://pycodegen.pages.walberla.net/lbmpy\" rel=\"nofollow\">here</a> and\ncheck out the Jupyter notebooks in <code>doc/notebooks</code>.</p>\n\n          </div>"}, "last_serial": 6712573, "releases": {"0.2.10": [{"comment_text": "", "digests": {"md5": "8f16f4da7857ce643336262fb36200a3", "sha256": "75984d64b769bb9a7db0933ce17b070dbc95984e4f635417997af4efebc5f599"}, "downloads": -1, "filename": "lbmpy-0.2.10.tar.gz", "has_sig": false, "md5_digest": "8f16f4da7857ce643336262fb36200a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 135242, "upload_time": "2020-02-22T14:58:51", "upload_time_iso_8601": "2020-02-22T14:58:51.480024Z", "url": "https://files.pythonhosted.org/packages/db/5c/54cb5215ea107021bc7ed9ce93c649cdddab5cbe0fca4f902a1540b5c2e2/lbmpy-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "a6326b8f0820a2005e65f34bfaca614c", "sha256": "dc796a684ec9dcd7dae5cd9ec42af0fea30b4ae9106e645b17dc88f064354322"}, "downloads": -1, "filename": "lbmpy-0.2.11.tar.gz", "has_sig": false, "md5_digest": "a6326b8f0820a2005e65f34bfaca614c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 136489, "upload_time": "2020-02-27T18:23:40", "upload_time_iso_8601": "2020-02-27T18:23:40.279890Z", "url": "https://files.pythonhosted.org/packages/d2/73/05fd9d9a1546408dd1d7d12cc72f40d0d84a610344c3b89c9c393c97dfa7/lbmpy-0.2.11.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "c0055bb02b7d1f54b97dabc30fe9e997", "sha256": "e2d65f58ed7c62785f3261838695cc5990046a64811f9e54f051ca08aa7862e9"}, "downloads": -1, "filename": "lbmpy-0.2.8.tar.gz", "has_sig": false, "md5_digest": "c0055bb02b7d1f54b97dabc30fe9e997", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 135076, "upload_time": "2020-01-31T13:23:47", "upload_time_iso_8601": "2020-01-31T13:23:47.706646Z", "url": "https://files.pythonhosted.org/packages/72/cb/991190cf5753df02e31b4cf9a42f0a852cd7117aa4cd6f46eb6946d23896/lbmpy-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "248d8cb97f695eb240eb3c42d669b2ea", "sha256": "ee9bea35f2dae6791b59bc8e3942a04185907c5e4b9675807bae04a70cf51ccf"}, "downloads": -1, "filename": "lbmpy-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "248d8cb97f695eb240eb3c42d669b2ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 163432, "upload_time": "2020-01-31T13:59:11", "upload_time_iso_8601": "2020-01-31T13:59:11.874241Z", "url": "https://files.pythonhosted.org/packages/5b/0c/696e65b9826f5bf1dad44b25dc1aac10958fa9cb58c153cc0d2f4f1e3eff/lbmpy-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73ac5e3b16fe0975a3c52c594d858f53", "sha256": "24a0f67a90b5bd4b1ff6efc2003a804f974a771f3976299ad0aab80532d5837b"}, "downloads": -1, "filename": "lbmpy-0.2.9.tar.gz", "has_sig": false, "md5_digest": "73ac5e3b16fe0975a3c52c594d858f53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 135856, "upload_time": "2020-01-31T13:59:13", "upload_time_iso_8601": "2020-01-31T13:59:13.626821Z", "url": "https://files.pythonhosted.org/packages/1d/db/986830c56452b057fe0294f79b5cd2249e9291894fd979f943a24608d2a3/lbmpy-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6326b8f0820a2005e65f34bfaca614c", "sha256": "dc796a684ec9dcd7dae5cd9ec42af0fea30b4ae9106e645b17dc88f064354322"}, "downloads": -1, "filename": "lbmpy-0.2.11.tar.gz", "has_sig": false, "md5_digest": "a6326b8f0820a2005e65f34bfaca614c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 136489, "upload_time": "2020-02-27T18:23:40", "upload_time_iso_8601": "2020-02-27T18:23:40.279890Z", "url": "https://files.pythonhosted.org/packages/d2/73/05fd9d9a1546408dd1d7d12cc72f40d0d84a610344c3b89c9c393c97dfa7/lbmpy-0.2.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:33 2020"}