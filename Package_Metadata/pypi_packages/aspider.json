{"info": {"author": "gxtrobot", "author_email": "gxtrobot@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "## aspider\n    \u4e00\u4e2a\u7b80\u5355\u597d\u7528\u7684Python \u5f02\u6b65\u722c\u866b\n\n## \u7b80\u4ecb\n\n    aspider \u662f\u4e00\u4e2a\u57fa\u4e8ePython asyncio \u5f00\u53d1\u7684\u722c\u866b\u5de5\u5177, \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u4f7f\u7528, \u4e0d\u7528\u5199\u4efb\u4f55\u4ee3\u7801, \u4e5f\u53ef\u4ee5\u8c03\u7528api, \u81ea\u5b9a\u4e49\u5177\u4f53\u722c\u53d6\u7684\u89c4\u5219.\n    aspider\u7684\u8bbe\u8ba1\u539f\u5219\u662f\u4e13\u6ce8\u4e8e\u722c\u53d6\u7f51\u9875, \u672c\u8eab\u4e0d\u5305\u542b\u5982\u89e3\u6790\u6587\u672c, \u6570\u636e\u5b58\u50a8\u7b49\u5185\u5bb9, \u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5229\u7528\u5f88\u591a\u5df2\u6709\u7684\u5de5\u5177\u6846\u67b6\u81ea\u884c\u52a0\u4e0a. aspider \u53c2\u8003\u4e86\n    \u7c7b\u4f3cflask\u7684\u8def\u7531\u88c5\u9970\u5668\u7684\u65b9\u6cd5, \u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u65b9\u6cd5, \u6bcf\u4e2a\u65b9\u6cd5\u7528\u4e8e\u722c\u53d6\u4e00\u4e2a\u76f8\u5e94\u7684\u6b63\u5219\u8def\u5f84.\n\n    author: gxtrobot\n\n## \u7cfb\u7edf\u8bbe\u8ba1\u539f\u7406\n- \u7cfb\u7edf\u4f7f\u7528\u5e38\u7528\u7684\u751f\u4ea7\u8005, \u6d88\u8d39\u8005\u6a21\u5f0f, \u751f\u4ea7\u8005\u4ea7\u751f\u9700\u8981\u722c\u53d6\u7684\u94fe\u63a5\u5e76\u52a0\u5165\u961f\u5217, \u6d88\u8d39\u8005\u4ece\u961f\u5217\u83b7\u53d6\u94fe\u63a5\u8fdb\u884c\u722c\u53d6, \u5e76\u89e3\u6790\u5176\u5185\u5bb9\u548c\u94fe\u63a5, \u8c03\u7528\u76f8\u5173\u7684\u65b9\u6cd5, \u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5, \u7b26\u5408\u8981\u6c42\u7684\u94fe\u63a5\u4f1a\u52a0\u5230\u961f\u5217, \u8fd9\u6837\u53ea\u901a\u8fc7\u4e00\u4e2a\u6839\u8def\u5f84\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5168\u7ad9\u722c\u53d6\n- \u7cfb\u7edf\u624d\u7528asyncio\u7684\u5e76\u53d1\u534f\u7a0b, \u6bcf\u4e2a\u5e76\u53d1\u534f\u7a0b\u540c\u65f6\u62c5\u4efb\u6d88\u8d39\u8005\u548c\u751f\u4ea7\u8005\u7684\u6307\u8d23, \u901a\u8fc7\u4e00\u4e2aqueue(\u961f\u5217)\u8fdb\u884c\u4ea4\u4e92\n- \u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u7531(Router), \u4f5c\u4e3a\u7528\u6237\u552f\u4e00\u9700\u8981\u4f7f\u7528\u7684\u5bf9\u8c61, \u8def\u7531\u4e0d\u9700\u8981\u65b0\u5efa, \u7cfb\u7edf\u53ea\u6709\u4e00\u4e2aRouter\u5bf9\u8c61, \u76f4\u63a5\u83b7\u53d6\u5c31\u53ef\u4ee5\u4f7f\u7528\n- \u7528\u6237\u6240\u6709\u81ea\u5b9a\u4e49\u65b9\u6cd5, \u90fd\u901a\u8fc7\u8def\u7531\u63d0\u4f9b\u7684\u88c5\u9970\u5668\u6765\u5b9e\u73b0, \u4f8b\u5982route, \u65e0\u9700\u521b\u5efaclass\u6216\u5176\u4ed6\u590d\u6742\u7684\u903b\u8f91\n\n\n## \u5b89\u88c5\n\nTo install use pip:\n\n    $ pip install aspider\n\nOr clone the repo:\n\n    $ git clone https://github.com/gxtrobot/aspider.git\n    $ python setup.py install\n\n## \u5f00\u59cb\u4f7f\u7528\n\n### \u547d\u4ee4\u884c\u65b9\u5f0f\naspider \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4 ```aspider``` \u4f7f\u7528, \u6216 ```python -m aspider```\n```\n aspider --help\nusage: aspider [-h] [--max_redirect N] [--max_tries N] [--max_tasks N]\n               [-p PROXY] [-i INCLUDE_REGEX] [-e EXCLUDE_REGEX] [-o OUTPUT]\n               [-c COUNT] [--nostrict] [--no_parse_links] [-v] [-q]\n               [roots [roots ...]]\n\nAn Asyncio Web crawler, version: 0.1.0\n\npositional arguments:\n  roots                 \u8981\u722c\u53d6\u7684\u7f51\u9875\u8def\u5f84(\u4e00\u822c\u4e3a\u8ddf\u8def\u5f84), \u53ef\u4ee5\u6709\u591a\u4e2a\n\noptional arguments:\n  -h, --help            \u663e\u793a\u5e2e\u52a9\u4fe1\u606f\n  --max_tasks N         \u5e76\u53d1\u4efb\u52a1\u6570, \u9ed8\u8ba4\u4e3a5\u4e2a, \u5982\u9700\u8981\u53ef\u4ee5\u63d0\u9ad8\n  -p PROXY, --proxy PROXY\n                        \u4ee3\u7406\u4f7f\u7528, \u4f8b\u5982 http://localhost:1080\n  -i INCLUDE_REGEX, --include INCLUDE_REGEX\n                        \u9700\u8981\u5339\u914d\u722c\u53d6\u7684\u7f51\u9875\u8def\u5f84\u6b63\u5219, \u5339\u914d\u7684\u7f51\u9875\u94fe\u63a5\u5c06\u88ab\u52a0\u5165\u722c\u53d6\u961f\u5217\n  -o OUTPUT, --output OUTPUT\n                        \u8f93\u51fa\u7684\u65b9\u6cd5, \u76ee\u524d\u652f\u6301\u8fd9\u51e0\u79cd[txt, json, stream], stream\u4e3a\u547d\u4ee4\u884c\u8f93\u51fa\n  -c COUNT, --count COUNT\n                        \u9650\u5236\u722c\u53d6\u7684\u6570\u91cf, \u5982\u6307\u5b9a, \u5230\u9650\u989d\u540e\u722c\u866b\u81ea\u52a8\u9000\u51fa, \u961f\u5217\u672a\u5b8c\u6210\u7684\u4f1a\u53d6\u6d88\n  --no_parse_links      \u7981\u6b62\u89e3\u6790\u94fe\u63a5, \u6307\u5b9a\u540e, \u53ea\u722c\u53d6\u547d\u4ee4\u884c\u7ed9\u5b9a\u7684roots\u94fe\u63a5, \u4e0d\u4f1a\u8ddf\u8e2a\u89e3\n                        \u9875\u9762\u5305\u542b\u7684\u94fe\u63a5\n  -v, --verbose         debug \u6d88\u606f\u6570\u636e, \u53ef\u4ee5\u6709\u591a\u4e2av (-v , -vv)\n  -q, --quiet           \u9759\u9ed8\u8f93\u51fa, \u53ea\u6253\u5370\u9519\u8bef\u6d88\u606f\n```\n### \u547d\u4ee4\u884c\u4f7f\u7528\u4f8b\u5b50\n- \u8c46\u74e3250\u7535\u5f71\u6293\u53d6\n\n\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4, \u5c06\u4f1a\u722c\u53d6top250\u768410\u9875html, \u5e76\u5b58\u5230json\u6587\u4ef6\u4e2d\n\n```\naspider https://movie.douban.com/top250 --include /top250.* --out json\n```\n\u4e0d\u8fc7\u8fd9\u901a\u5e38\u5e76\u6ca1\u592a\u5927\u7528\u5904, \u56e0\u4e3a\u8fd9\u6837\u53ea\u662f\u6293\u53d6\u5b8c\u6574\u7684html, \u53ea\u9002\u5408\u6709\u65f6\u5019\u9700\u8981\u6293\u53d6\u6574\u4e2a\u7f51\u9875, \u7136\u540e\u7528\u5176\u4ed6\u5de5\u5177\u5904\u7406, \u6216\u8005\u4e0d\u61c2python \u5f00\u53d1, \u53ef\u4ee5\u5148\u7528\u8fd9\u4e2a\u6293\u53d6\u7f51\u9875, \u7136\u540e\u7528\u5176\u4ed6\u5de5\u5177\u5904\u7406\n\n\u4fdd\u5b58\u7684json\u6587\u4ef6\u662fjson line\u683c\u5f0f, \u5c31\u662f\u8bf4\u6bcf\u884c\u662f\u4e00\u4e2ajson\u5bf9\u8c61, \u8bfb\u53d6\u65f6\u5019\u8981\u76f8\u5e94\u5904\u7406, \u6bcf\u8bfb\u53d6\u4e00\u884c, \u5c06\u8be5\u884c\u5185\u5bb9\u8f6c\u4e3ajson\u5bf9\u8c61, python \u4ee3\u7801\u5982\u4e0b\n```\ndef read_json_lines():\n    file = 'top250.json'\n    with open(file) as f:\n        for line in f:\n            d = json.loads(line)\n            print(d.keys()\n```\n\n## API \u4ecb\u7ecd\n\n### routing \u6a21\u5757 - Router \u5bf9\u8c61\n\n- route(rule, verify_func=None, no_parse_links=False)\n```\n\u88c5\u9970\u5668, \u5728\u7528\u6237\u81ea\u5b9a\u4e49\u89e3\u6790\u65b9\u6cd5\u4f7f\u7528\n\nArgs:\n  rule: \u5904\u7406path\u7684\u6b63\u5219\u8868\u8fbe\u5f0f, \u53ef\u4ee5\u5305\u542b\u53c2\u6570, \u4f7f\u7528'<>'\u5305\u4f4f\u53c2\u6570\u540d\u5c31\u53ef\u4ee5, \u4f8b\u5982 '/page/<no>', \u8fd9\u6837\u7528\u6237\u81ea\u5b9a\u4e49\u65b9\u6cd5\u53ef\u4ee5\u63a5\u6536no\u53c2\u6570\n\n  verify_func: \u53ef\u9009, \u7528\u6237\u8def\u5f84\u9a8c\u8bc1\u65b9\u6cd5, \u5982\u679c\u63d0\u4f9b\u53ef\u4ee5\u81ea\u5b9a\u4e49\u662f\u5426\u5904\u7406\u8be5\u8def\u5f84, \u65b9\u6cd5\u7b7e\u540d\u4e3a verify_url(path), return True or False\n\n  no_parse_links: \u53ef\u9009, \u662f\u5426\u5904\u7406\u8be5\u9875\u9762\u4e0a\u7684\u5176\u4ed6\u94fe\u63a5, \u5982\u679c\u9700\u8981\u5173\u95ed\u89e3\u6790\u8be5\u9875\u9762\u94fe\u63a5, \u53ef\u4ee5\u8bbe\u7f6e\u4e3aTrue\n\n\u7528\u6237\u88ab\u88c5\u9970\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b:\n\n@router.route('/page/<no>', verify_page_path)\ndef process_page(text, path, no):\n\nArgs:\n    text: \u5f53\u524d\u8981\u89e3\u6790\u9875\u9762\u7684html\u4ee3\u7801, \u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6846\u67b6\u5982lxml, request_html, BeautifulSoup\n    path: \u53ef\u9009, \u5982\u679c\u6709\u8be5\u53c2\u6570, \u7cfb\u7edf\u4f1a\u81ea\u52a8\u4f20\u9012\u8be5path\u53c2\u6570\u4f9b\u4f7f\u7528\n    \u5176\u4ed6\u53c2\u6570, \u88c5\u9970\u5668\u7684\u81ea\u5b9a\u4e49\u53c2\u6570\n\n    \u6ce8\u610f: \u524d\u4e24\u4e2a\u53c2\u6570\u4e3a\u7cfb\u7edf\u81ea\u52a8\u63d0\u4f9b, \u987a\u5e8f\u4e0d\u80fd\u9519, \u7528\u6237\u81ea\u5b9a\u4e49\u53c2\u6570\u5728\u524d\u4e24\u4e2a\u4e4b\u540e\n```\n\n### aspider \u6a21\u5757\n\u8be5\u6a21\u5757\u63d0\u4f9bdownload\u65b9\u6cd5\u542f\u52a8\u722c\u866b\n\n- download(loop=None, extra_args=None):\n```\nArgs:\n  loop - \u7528\u6237\u63d0\u4f9basyncio loop\u5bf9\u8c61, \u4e00\u822c\u4e0d\u9700\u8981, \u9664\u975e\u662f\u5728\u7f16\u5199\u5b9a\u65f6\u4efb\u52a1, \u591a\u7ebf\u7a0b\u4f7f\u7528, \u8fd9\u65f6\u5019\u7528\u6237\u751f\u6210\u4e00\u4e2aloop\u5bf9\u8c61\u5e76\u4f20\u5165\n  extra_args - \u5176\u4ed6\u53c2\u6570, aspider \u547d\u4ee4\u884c\u4f7f\u7528\u7684\u53c2\u6570\u53ef\u4ee5\u7528\u8be5dict\u5bf9\u8c61\u4f20\u5165\n  \u5176\u4e2d, \u5fc5\u987b\u7684\u662froots key, \u5bf9\u5e94\u4e3a\u6293\u53d6\u8ddf\u8def\u5f84, \u662f\u4e00\u4e2alist\n\nReturns:\n  stats - \u6293\u53d6\u8fc7\u7a0b\u7edf\u8ba1\u5bf9\u8c61, \u5305\u542b\u6293\u53d6\u7684\u7f51\u9875\u6570\u91cf, \u5b8c\u6210\u65f6\u95f4\u7b49\u6570\u636e\n\nexample:\n\n  options = {\n        'roots': ['https://movie.douban.com/top250']\n    }\n  stats = aspider.download(extra_args=options)\n\n```\n\n### reporting \u6a21\u5757\n\n- Stats \u5bf9\u8c61\n\u8be5\u5bf9\u8c61\u8bb0\u5f55\u6293\u53d6\u8fc7\u7a0b\u7684\u7edf\u8ba1\u6570\u636e, \u5982\u6293\u53d6\u7f51\u9875\u6570\u91cf, \u5b8c\u6210\u65f6\u95f4, \u901f\u5ea6\u7b49\n\n- report()\n\u8be5\u65b9\u6cd5\u6253\u5370\u8fd9\u6b21\u6293\u53d6\u7684\u8bb0\u5f55\u62a5\u544a\n\n### API \u8c03\u7528\u722c\u866b\u4f8b\u5b50\n\n#### douban top250 \u7535\u5f71\u6293\u53d6(\u4ee3\u7801\u5728example \u4e0b))\n1. \u5148\u53d6\u5f97router\u5bf9\u8c61\n2. \u5b9a\u4e49\u89e3\u6790\u65b9\u6cd5, \u4f7f\u7528router.route\u88c5\u9970\u5668, \u63d0\u4f9b\u4e00\u4e2a\u53c2\u6570\u4e3a\u8981\u89e3\u6790\u7684path\u6b63\u5219\u8868\u8fbe\u5f0f\n3. \u5b9a\u4e49\u4e00\u4e2amain\u65b9\u6cd5\u542f\u52a8\u722c\u866b\u5c31\u53ef\u4ee5\n\n```\n'''\n\u4f8b\u5b50: douban top 250 \u7535\u5f71\u540d\u5355\u722c\u53d6\n'''\nfrom collections import namedtuple\nfrom aspider.routeing import get_router\nfrom aspider import aspider\nfrom requests_html import HTML\n\nMovie = namedtuple('Movie', ['rank', 'score', 'title'])\n\nrouter = get_router()\n\nroot_url = 'https://movie.douban.com/top250'\n\nmovies_250 = []\n\n\n@router.route('/top250\\?start.+')\ndef process_page(text):\n    html = HTML(html=text)\n    item_css = '#content  ol.grid_view > li'\n    items = html.find(item_css)\n    rank_css = 'em'\n    title_css = '.info  span.title'\n    score_css = '.info  .rating_num'\n    for item in items:\n        rank = int(item.find(rank_css, first=True).text)\n        title = item.find(title_css, first=True).text\n        score = float(item.find(score_css, first=True).text)\n        movies_250.append(Movie(rank, score, title))\n\n\ndef main():\n    options = {\n        'roots': [root_url]\n    }\n    stats = aspider.download(extra_args=options)\n    stats.report()\n    fname = 'top250.txt'\n    sorted_movies_250 = sorted(movies_250, key=lambda m: m.rank)\n    with open(fname, 'w') as f:\n        for movie in sorted_movies_250:\n            print(f'#{movie.rank:<10} {movie.score:<10.2f} - {movie.title}')\n            print(f'#{movie.rank:<10} {movie.score:<10.2f} - {movie.title}', file=f)\n\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/gxtrobot/aspider/tarball/0.1.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gxtrobot/aspider", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "aspider", "package_url": "https://pypi.org/project/aspider/", "platform": "", "project_url": "https://pypi.org/project/aspider/", "project_urls": {"Download": "https://github.com/gxtrobot/aspider/tarball/0.1.2", "Homepage": "https://github.com/gxtrobot/aspider"}, "release_url": "https://pypi.org/project/aspider/0.1.2/", "requires_dist": ["aiohttp", "requests-html"], "requires_python": ">=3.6", "summary": "a spider using asyncio", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>aspider</h2>\n<pre><code>\u4e00\u4e2a\u7b80\u5355\u597d\u7528\u7684Python \u5f02\u6b65\u722c\u866b\n</code></pre>\n<h2>\u7b80\u4ecb</h2>\n<pre><code>aspider \u662f\u4e00\u4e2a\u57fa\u4e8ePython asyncio \u5f00\u53d1\u7684\u722c\u866b\u5de5\u5177, \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u4f7f\u7528, \u4e0d\u7528\u5199\u4efb\u4f55\u4ee3\u7801, \u4e5f\u53ef\u4ee5\u8c03\u7528api, \u81ea\u5b9a\u4e49\u5177\u4f53\u722c\u53d6\u7684\u89c4\u5219.\naspider\u7684\u8bbe\u8ba1\u539f\u5219\u662f\u4e13\u6ce8\u4e8e\u722c\u53d6\u7f51\u9875, \u672c\u8eab\u4e0d\u5305\u542b\u5982\u89e3\u6790\u6587\u672c, \u6570\u636e\u5b58\u50a8\u7b49\u5185\u5bb9, \u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5229\u7528\u5f88\u591a\u5df2\u6709\u7684\u5de5\u5177\u6846\u67b6\u81ea\u884c\u52a0\u4e0a. aspider \u53c2\u8003\u4e86\n\u7c7b\u4f3cflask\u7684\u8def\u7531\u88c5\u9970\u5668\u7684\u65b9\u6cd5, \u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u65b9\u6cd5, \u6bcf\u4e2a\u65b9\u6cd5\u7528\u4e8e\u722c\u53d6\u4e00\u4e2a\u76f8\u5e94\u7684\u6b63\u5219\u8def\u5f84.\n\nauthor: gxtrobot\n</code></pre>\n<h2>\u7cfb\u7edf\u8bbe\u8ba1\u539f\u7406</h2>\n<ul>\n<li>\u7cfb\u7edf\u4f7f\u7528\u5e38\u7528\u7684\u751f\u4ea7\u8005, \u6d88\u8d39\u8005\u6a21\u5f0f, \u751f\u4ea7\u8005\u4ea7\u751f\u9700\u8981\u722c\u53d6\u7684\u94fe\u63a5\u5e76\u52a0\u5165\u961f\u5217, \u6d88\u8d39\u8005\u4ece\u961f\u5217\u83b7\u53d6\u94fe\u63a5\u8fdb\u884c\u722c\u53d6, \u5e76\u89e3\u6790\u5176\u5185\u5bb9\u548c\u94fe\u63a5, \u8c03\u7528\u76f8\u5173\u7684\u65b9\u6cd5, \u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5, \u7b26\u5408\u8981\u6c42\u7684\u94fe\u63a5\u4f1a\u52a0\u5230\u961f\u5217, \u8fd9\u6837\u53ea\u901a\u8fc7\u4e00\u4e2a\u6839\u8def\u5f84\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5168\u7ad9\u722c\u53d6</li>\n<li>\u7cfb\u7edf\u624d\u7528asyncio\u7684\u5e76\u53d1\u534f\u7a0b, \u6bcf\u4e2a\u5e76\u53d1\u534f\u7a0b\u540c\u65f6\u62c5\u4efb\u6d88\u8d39\u8005\u548c\u751f\u4ea7\u8005\u7684\u6307\u8d23, \u901a\u8fc7\u4e00\u4e2aqueue(\u961f\u5217)\u8fdb\u884c\u4ea4\u4e92</li>\n<li>\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u7531(Router), \u4f5c\u4e3a\u7528\u6237\u552f\u4e00\u9700\u8981\u4f7f\u7528\u7684\u5bf9\u8c61, \u8def\u7531\u4e0d\u9700\u8981\u65b0\u5efa, \u7cfb\u7edf\u53ea\u6709\u4e00\u4e2aRouter\u5bf9\u8c61, \u76f4\u63a5\u83b7\u53d6\u5c31\u53ef\u4ee5\u4f7f\u7528</li>\n<li>\u7528\u6237\u6240\u6709\u81ea\u5b9a\u4e49\u65b9\u6cd5, \u90fd\u901a\u8fc7\u8def\u7531\u63d0\u4f9b\u7684\u88c5\u9970\u5668\u6765\u5b9e\u73b0, \u4f8b\u5982route, \u65e0\u9700\u521b\u5efaclass\u6216\u5176\u4ed6\u590d\u6742\u7684\u903b\u8f91</li>\n</ul>\n<h2>\u5b89\u88c5</h2>\n<p>To install use pip:</p>\n<pre><code>$ pip install aspider\n</code></pre>\n<p>Or clone the repo:</p>\n<pre><code>$ git clone https://github.com/gxtrobot/aspider.git\n$ python setup.py install\n</code></pre>\n<h2>\u5f00\u59cb\u4f7f\u7528</h2>\n<h3>\u547d\u4ee4\u884c\u65b9\u5f0f</h3>\n<p>aspider \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4 <code>aspider</code> \u4f7f\u7528, \u6216 <code>python -m aspider</code></p>\n<pre><code> aspider --help\nusage: aspider [-h] [--max_redirect N] [--max_tries N] [--max_tasks N]\n               [-p PROXY] [-i INCLUDE_REGEX] [-e EXCLUDE_REGEX] [-o OUTPUT]\n               [-c COUNT] [--nostrict] [--no_parse_links] [-v] [-q]\n               [roots [roots ...]]\n\nAn Asyncio Web crawler, version: 0.1.0\n\npositional arguments:\n  roots                 \u8981\u722c\u53d6\u7684\u7f51\u9875\u8def\u5f84(\u4e00\u822c\u4e3a\u8ddf\u8def\u5f84), \u53ef\u4ee5\u6709\u591a\u4e2a\n\noptional arguments:\n  -h, --help            \u663e\u793a\u5e2e\u52a9\u4fe1\u606f\n  --max_tasks N         \u5e76\u53d1\u4efb\u52a1\u6570, \u9ed8\u8ba4\u4e3a5\u4e2a, \u5982\u9700\u8981\u53ef\u4ee5\u63d0\u9ad8\n  -p PROXY, --proxy PROXY\n                        \u4ee3\u7406\u4f7f\u7528, \u4f8b\u5982 http://localhost:1080\n  -i INCLUDE_REGEX, --include INCLUDE_REGEX\n                        \u9700\u8981\u5339\u914d\u722c\u53d6\u7684\u7f51\u9875\u8def\u5f84\u6b63\u5219, \u5339\u914d\u7684\u7f51\u9875\u94fe\u63a5\u5c06\u88ab\u52a0\u5165\u722c\u53d6\u961f\u5217\n  -o OUTPUT, --output OUTPUT\n                        \u8f93\u51fa\u7684\u65b9\u6cd5, \u76ee\u524d\u652f\u6301\u8fd9\u51e0\u79cd[txt, json, stream], stream\u4e3a\u547d\u4ee4\u884c\u8f93\u51fa\n  -c COUNT, --count COUNT\n                        \u9650\u5236\u722c\u53d6\u7684\u6570\u91cf, \u5982\u6307\u5b9a, \u5230\u9650\u989d\u540e\u722c\u866b\u81ea\u52a8\u9000\u51fa, \u961f\u5217\u672a\u5b8c\u6210\u7684\u4f1a\u53d6\u6d88\n  --no_parse_links      \u7981\u6b62\u89e3\u6790\u94fe\u63a5, \u6307\u5b9a\u540e, \u53ea\u722c\u53d6\u547d\u4ee4\u884c\u7ed9\u5b9a\u7684roots\u94fe\u63a5, \u4e0d\u4f1a\u8ddf\u8e2a\u89e3\n                        \u9875\u9762\u5305\u542b\u7684\u94fe\u63a5\n  -v, --verbose         debug \u6d88\u606f\u6570\u636e, \u53ef\u4ee5\u6709\u591a\u4e2av (-v , -vv)\n  -q, --quiet           \u9759\u9ed8\u8f93\u51fa, \u53ea\u6253\u5370\u9519\u8bef\u6d88\u606f\n</code></pre>\n<h3>\u547d\u4ee4\u884c\u4f7f\u7528\u4f8b\u5b50</h3>\n<ul>\n<li>\u8c46\u74e3250\u7535\u5f71\u6293\u53d6</li>\n</ul>\n<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4, \u5c06\u4f1a\u722c\u53d6top250\u768410\u9875html, \u5e76\u5b58\u5230json\u6587\u4ef6\u4e2d</p>\n<pre><code>aspider https://movie.douban.com/top250 --include /top250.* --out json\n</code></pre>\n<p>\u4e0d\u8fc7\u8fd9\u901a\u5e38\u5e76\u6ca1\u592a\u5927\u7528\u5904, \u56e0\u4e3a\u8fd9\u6837\u53ea\u662f\u6293\u53d6\u5b8c\u6574\u7684html, \u53ea\u9002\u5408\u6709\u65f6\u5019\u9700\u8981\u6293\u53d6\u6574\u4e2a\u7f51\u9875, \u7136\u540e\u7528\u5176\u4ed6\u5de5\u5177\u5904\u7406, \u6216\u8005\u4e0d\u61c2python \u5f00\u53d1, \u53ef\u4ee5\u5148\u7528\u8fd9\u4e2a\u6293\u53d6\u7f51\u9875, \u7136\u540e\u7528\u5176\u4ed6\u5de5\u5177\u5904\u7406</p>\n<p>\u4fdd\u5b58\u7684json\u6587\u4ef6\u662fjson line\u683c\u5f0f, \u5c31\u662f\u8bf4\u6bcf\u884c\u662f\u4e00\u4e2ajson\u5bf9\u8c61, \u8bfb\u53d6\u65f6\u5019\u8981\u76f8\u5e94\u5904\u7406, \u6bcf\u8bfb\u53d6\u4e00\u884c, \u5c06\u8be5\u884c\u5185\u5bb9\u8f6c\u4e3ajson\u5bf9\u8c61, python \u4ee3\u7801\u5982\u4e0b</p>\n<pre><code>def read_json_lines():\n    file = 'top250.json'\n    with open(file) as f:\n        for line in f:\n            d = json.loads(line)\n            print(d.keys()\n</code></pre>\n<h2>API \u4ecb\u7ecd</h2>\n<h3>routing \u6a21\u5757 - Router \u5bf9\u8c61</h3>\n<ul>\n<li>route(rule, verify_func=None, no_parse_links=False)</li>\n</ul>\n<pre><code>\u88c5\u9970\u5668, \u5728\u7528\u6237\u81ea\u5b9a\u4e49\u89e3\u6790\u65b9\u6cd5\u4f7f\u7528\n\nArgs:\n  rule: \u5904\u7406path\u7684\u6b63\u5219\u8868\u8fbe\u5f0f, \u53ef\u4ee5\u5305\u542b\u53c2\u6570, \u4f7f\u7528'&lt;&gt;'\u5305\u4f4f\u53c2\u6570\u540d\u5c31\u53ef\u4ee5, \u4f8b\u5982 '/page/&lt;no&gt;', \u8fd9\u6837\u7528\u6237\u81ea\u5b9a\u4e49\u65b9\u6cd5\u53ef\u4ee5\u63a5\u6536no\u53c2\u6570\n\n  verify_func: \u53ef\u9009, \u7528\u6237\u8def\u5f84\u9a8c\u8bc1\u65b9\u6cd5, \u5982\u679c\u63d0\u4f9b\u53ef\u4ee5\u81ea\u5b9a\u4e49\u662f\u5426\u5904\u7406\u8be5\u8def\u5f84, \u65b9\u6cd5\u7b7e\u540d\u4e3a verify_url(path), return True or False\n\n  no_parse_links: \u53ef\u9009, \u662f\u5426\u5904\u7406\u8be5\u9875\u9762\u4e0a\u7684\u5176\u4ed6\u94fe\u63a5, \u5982\u679c\u9700\u8981\u5173\u95ed\u89e3\u6790\u8be5\u9875\u9762\u94fe\u63a5, \u53ef\u4ee5\u8bbe\u7f6e\u4e3aTrue\n\n\u7528\u6237\u88ab\u88c5\u9970\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b:\n\n@router.route('/page/&lt;no&gt;', verify_page_path)\ndef process_page(text, path, no):\n\nArgs:\n    text: \u5f53\u524d\u8981\u89e3\u6790\u9875\u9762\u7684html\u4ee3\u7801, \u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6846\u67b6\u5982lxml, request_html, BeautifulSoup\n    path: \u53ef\u9009, \u5982\u679c\u6709\u8be5\u53c2\u6570, \u7cfb\u7edf\u4f1a\u81ea\u52a8\u4f20\u9012\u8be5path\u53c2\u6570\u4f9b\u4f7f\u7528\n    \u5176\u4ed6\u53c2\u6570, \u88c5\u9970\u5668\u7684\u81ea\u5b9a\u4e49\u53c2\u6570\n\n    \u6ce8\u610f: \u524d\u4e24\u4e2a\u53c2\u6570\u4e3a\u7cfb\u7edf\u81ea\u52a8\u63d0\u4f9b, \u987a\u5e8f\u4e0d\u80fd\u9519, \u7528\u6237\u81ea\u5b9a\u4e49\u53c2\u6570\u5728\u524d\u4e24\u4e2a\u4e4b\u540e\n</code></pre>\n<h3>aspider \u6a21\u5757</h3>\n<p>\u8be5\u6a21\u5757\u63d0\u4f9bdownload\u65b9\u6cd5\u542f\u52a8\u722c\u866b</p>\n<ul>\n<li>download(loop=None, extra_args=None):</li>\n</ul>\n<pre><code>Args:\n  loop - \u7528\u6237\u63d0\u4f9basyncio loop\u5bf9\u8c61, \u4e00\u822c\u4e0d\u9700\u8981, \u9664\u975e\u662f\u5728\u7f16\u5199\u5b9a\u65f6\u4efb\u52a1, \u591a\u7ebf\u7a0b\u4f7f\u7528, \u8fd9\u65f6\u5019\u7528\u6237\u751f\u6210\u4e00\u4e2aloop\u5bf9\u8c61\u5e76\u4f20\u5165\n  extra_args - \u5176\u4ed6\u53c2\u6570, aspider \u547d\u4ee4\u884c\u4f7f\u7528\u7684\u53c2\u6570\u53ef\u4ee5\u7528\u8be5dict\u5bf9\u8c61\u4f20\u5165\n  \u5176\u4e2d, \u5fc5\u987b\u7684\u662froots key, \u5bf9\u5e94\u4e3a\u6293\u53d6\u8ddf\u8def\u5f84, \u662f\u4e00\u4e2alist\n\nReturns:\n  stats - \u6293\u53d6\u8fc7\u7a0b\u7edf\u8ba1\u5bf9\u8c61, \u5305\u542b\u6293\u53d6\u7684\u7f51\u9875\u6570\u91cf, \u5b8c\u6210\u65f6\u95f4\u7b49\u6570\u636e\n\nexample:\n\n  options = {\n        'roots': ['https://movie.douban.com/top250']\n    }\n  stats = aspider.download(extra_args=options)\n\n</code></pre>\n<h3>reporting \u6a21\u5757</h3>\n<ul>\n<li>\n<p>Stats \u5bf9\u8c61\n\u8be5\u5bf9\u8c61\u8bb0\u5f55\u6293\u53d6\u8fc7\u7a0b\u7684\u7edf\u8ba1\u6570\u636e, \u5982\u6293\u53d6\u7f51\u9875\u6570\u91cf, \u5b8c\u6210\u65f6\u95f4, \u901f\u5ea6\u7b49</p>\n</li>\n<li>\n<p>report()\n\u8be5\u65b9\u6cd5\u6253\u5370\u8fd9\u6b21\u6293\u53d6\u7684\u8bb0\u5f55\u62a5\u544a</p>\n</li>\n</ul>\n<h3>API \u8c03\u7528\u722c\u866b\u4f8b\u5b50</h3>\n<h4>douban top250 \u7535\u5f71\u6293\u53d6(\u4ee3\u7801\u5728example \u4e0b))</h4>\n<ol>\n<li>\u5148\u53d6\u5f97router\u5bf9\u8c61</li>\n<li>\u5b9a\u4e49\u89e3\u6790\u65b9\u6cd5, \u4f7f\u7528router.route\u88c5\u9970\u5668, \u63d0\u4f9b\u4e00\u4e2a\u53c2\u6570\u4e3a\u8981\u89e3\u6790\u7684path\u6b63\u5219\u8868\u8fbe\u5f0f</li>\n<li>\u5b9a\u4e49\u4e00\u4e2amain\u65b9\u6cd5\u542f\u52a8\u722c\u866b\u5c31\u53ef\u4ee5</li>\n</ol>\n<pre><code>'''\n\u4f8b\u5b50: douban top 250 \u7535\u5f71\u540d\u5355\u722c\u53d6\n'''\nfrom collections import namedtuple\nfrom aspider.routeing import get_router\nfrom aspider import aspider\nfrom requests_html import HTML\n\nMovie = namedtuple('Movie', ['rank', 'score', 'title'])\n\nrouter = get_router()\n\nroot_url = 'https://movie.douban.com/top250'\n\nmovies_250 = []\n\n\n@router.route('/top250\\?start.+')\ndef process_page(text):\n    html = HTML(html=text)\n    item_css = '#content  ol.grid_view &gt; li'\n    items = html.find(item_css)\n    rank_css = 'em'\n    title_css = '.info  span.title'\n    score_css = '.info  .rating_num'\n    for item in items:\n        rank = int(item.find(rank_css, first=True).text)\n        title = item.find(title_css, first=True).text\n        score = float(item.find(score_css, first=True).text)\n        movies_250.append(Movie(rank, score, title))\n\n\ndef main():\n    options = {\n        'roots': [root_url]\n    }\n    stats = aspider.download(extra_args=options)\n    stats.report()\n    fname = 'top250.txt'\n    sorted_movies_250 = sorted(movies_250, key=lambda m: m.rank)\n    with open(fname, 'w') as f:\n        for movie in sorted_movies_250:\n            print(f'#{movie.rank:&lt;10} {movie.score:&lt;10.2f} - {movie.title}')\n            print(f'#{movie.rank:&lt;10} {movie.score:&lt;10.2f} - {movie.title}', file=f)\n\n\nif __name__ == \"__main__\":\n    main()\n\n</code></pre>\n\n          </div>"}, "last_serial": 5963526, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2f5b525c5c37688142eae79e2d0c27e7", "sha256": "7da03f9baec45e210efc4e7715b86f97ad6a59742bfb18cfb0eb927b42e27861"}, "downloads": -1, "filename": "aspider-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2f5b525c5c37688142eae79e2d0c27e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9425, "upload_time": "2019-07-16T15:48:31", "upload_time_iso_8601": "2019-07-16T15:48:31.251262Z", "url": "https://files.pythonhosted.org/packages/ac/49/ac01de870212630d33e498e043aa995edeb665f47bfac1f6c90331814f20/aspider-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "164550a5f00be2b8510bbd5fc6f5d78d", "sha256": "0b230f9503d1612bf02100940f52ba34d933211e5d89cef4a43f87657f91686b"}, "downloads": -1, "filename": "aspider-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "164550a5f00be2b8510bbd5fc6f5d78d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13321, "upload_time": "2019-09-05T16:14:19", "upload_time_iso_8601": "2019-09-05T16:14:19.212963Z", "url": "https://files.pythonhosted.org/packages/b7/b9/e894c0d2ffa0dc9b47b5184be2a7bcf90778a7a0fce6ffcf9911e51ea667/aspider-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "2405a3427f0e126d4758c86719703a29", "sha256": "5e368666ded69bbfac8e667fdce9dc6a014971cdc0cc1f247be03d933bc23f1b"}, "downloads": -1, "filename": "aspider-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2405a3427f0e126d4758c86719703a29", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 15845, "upload_time": "2019-10-07T08:03:59", "upload_time_iso_8601": "2019-10-07T08:03:59.531931Z", "url": "https://files.pythonhosted.org/packages/06/a1/4b3aa88e3224e1982d73da964ac5df489b27c2d24df3d86f0d5543d9ad4a/aspider-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5c927816dd5ef50eeab61cbc0eb74268", "sha256": "313bc2a44aa139c73e8c209196444385f0a2d3e3aef895751165c2c41ad1084f"}, "downloads": -1, "filename": "aspider-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c927816dd5ef50eeab61cbc0eb74268", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 19292, "upload_time": "2019-10-09T03:09:51", "upload_time_iso_8601": "2019-10-09T03:09:51.537092Z", "url": "https://files.pythonhosted.org/packages/1d/70/badeb7f219d9d9f0b78242c14fc7f3d6aacf2bef75fce3e373ad4703e70a/aspider-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "54fd01fb79ce781aed916c5c4ccce52b", "sha256": "d0123f018f4f4c46c7e0faa10d39ae480da5d4ad1783743e731df2bbed518c2f"}, "downloads": -1, "filename": "aspider-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "54fd01fb79ce781aed916c5c4ccce52b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 19307, "upload_time": "2019-10-12T08:27:02", "upload_time_iso_8601": "2019-10-12T08:27:02.528975Z", "url": "https://files.pythonhosted.org/packages/d1/85/0682b9dbd9427fefcae98aa1ebeacdc2cd8fc3532f4146534eaea5808a50/aspider-0.1.2-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "54fd01fb79ce781aed916c5c4ccce52b", "sha256": "d0123f018f4f4c46c7e0faa10d39ae480da5d4ad1783743e731df2bbed518c2f"}, "downloads": -1, "filename": "aspider-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "54fd01fb79ce781aed916c5c4ccce52b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 19307, "upload_time": "2019-10-12T08:27:02", "upload_time_iso_8601": "2019-10-12T08:27:02.528975Z", "url": "https://files.pythonhosted.org/packages/d1/85/0682b9dbd9427fefcae98aa1ebeacdc2cd8fc3532f4146534eaea5808a50/aspider-0.1.2-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:16:56 2020"}