{"info": {"author": "Ryan Olson", "author_email": "rmolson@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# luda\n\nludicrously awesome [w]rapper for nvidia-docker\n\n\n* Free software: MIT license\n* Documentation: [coming shortly]\n\n```\npip install luda\n```\n\n\n## Features\n\n* Opinionated wrapper for `docker`/`nvidia-docker` designed to provide\n  Singularity-like functionality to Docker images.\n\n* Best used for container images that run DL/HPC-like jobs, not suited\n  for long-running daemons or services that require root.\n\n* Volume mounts a /bootstrap volume and overrides the container image\n  `ENTRYPOINT` to map the host USER, UID and GID [future work] into the\n  container.  Current the docker commandline is echo'ed to the terminal on\n  container startup.\n\n* Automounts the current working directory on the host to `/work` inside\n  the container.  `/work` becomes the current working directory inside the\n  running container. `--work` can be used to specify an alternative default\n  working directory for use inside the container; it will be mounted to `/work`.\n\n* Automounts `$HOME` on the host to `/home/$USER` inside the container.\n  `--home` option.\n\n\n## Quickstart\n\n```\nluda nvidia/cuda:8.0-devel\n```\n\nThis the equivalent of the following docker command:\n\n```\nnvidia-docker run --rm -t -i  \\\n  -v /Users/ryan/Projects/luda/luda/bootstrap:/bootstrap:ro \\\n  --entrypoint /bootstrap/init.sh \\\n  --env HOST_USER_ID=501 \\\n  --env HOST_GROUP_ID=20 \\\n  --env HOST_USER=ryan \\\n  --env HOST_GROUP=staff \\\n  -v /Users/ryan:/home/ryan \\\n  -v /Users/ryan/Projects/luda:/work \\\n  --workdir /work \\\n  nvidia/cuda:8.0-devel /bin/bash\n```\n\nThis launches a new container based on the `nvidia/cuda:8.0-devel`\nimage; however, the magic happens in the bootstrapping, where the host\nuser that launched the container is created inside the container on\nlaunch (entrypoint).\n\nThis is exceptional convenient for development as your current working\ndirectory is mapped into `/work` which then becomes the active working\ndirectory inside the contanier.  Edits made inside the container are\nwritten as the USER/UID of the host user.\n\n### Volumes\n\nluda intercepts the `-v/--volume` option and provides convenience methods similar to\n`docker-compose` in that relative paths are supported.  If no\n\n```\n# absolute path readonly\n--volume /path/data:/data:ro\n\n# relative path readonly\n--volume /path/data:/data:ro\n\n# relative path, no internal path --> mount internal at `/{{ basename(hostpath) }}`\n# mounts $PWD/data --> /data inside the container\n# --volume data\n\n# same as above, but readonly\n# --volume data::ro\n```\n\n#### Home Directory\n\nThe user's home directory is a special case which mounts the user's home directory on the host\nto `/home/$USER` in the container.  This option is enabled by default, but can be disabled by\npassing `--no-home` on the commandline.\n\n#### Current Working Directory\n\nluda will map the current working directory from which the `luda` command was executed on the host\nto `/work` in the container and override the container's working directory to `/work`.  This behavior\ncan be overridden by passing a volume mount or disabled by passing `None` to to the `--work` option.\n\nExamples:\n```\n# mounts the current working directory on the host to `/my-working-dir`\n# in the container; `/my-working-dir` become the default working directory\n--work .:/my-working-dir\n\n# mounts `~/other-dir` to `/other-dir` in the container; `/other-dir`\n# becomes the default working directory in the container\n--work ~/other-dir\n\n# use the working directory as specified by the container image\n--work None\n--work none\n```\n\n### Abbreviations\n\nYou can set up abbreviations for commonly used URLs by including an `abbreviations` key in the yaml config file. By default,\nluda includes the `nv:` which expands to `nvcr.io/nvidia/{0}`, where `{0}` is the remainding portion of the image name after\nthe abbreviation.\n\nin `config.yml`\n```\nabbreviations:\n  nv: nvcr.io/nvidia/{1}\n```\n\nUsage `nv:tensorflow:17.04` expands to `nvcr.io/nvidia/tensorflow:17.04`:\n```\nluda nv:tensorflow:17.04\n```\n\n### Displays\n\n```\nluda --with-display nvidia/cuda:8.0-devel\n```\n\ntodo: show opengl containers\n\n### Docker\n\n```\nluda --with-docker nvidia/cuda:8.0-devel\n```\n\n### Templates\n\nTemplates provide an easy way to extend container images with pre-defined content.\nAssume I have the following `Dockerfile` defined in `~/.config/luda/templates/dev`.\n\n```\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        vim sudo python-dev python-pip && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip install luda\n```\n\nThe developer option `--dev` is a special case of `--template dev`.  Running the following commands performs a one-time\nextensions of the `nvidia/cuda:8.0-devel` image with the `Dockerfile` above.  The new images generated will be\n`luda/nvidia-cuda-8.0-devel:dev` or `luda/{{ base_image }}:{{ template }}` where `base_image` has all `/` and `:` replaced\nwith `-`.\n\n\n```\nluda --dev nvidia/cuda:8.0-devel\n```\n\n```\nluda --template dev nvidia/cuda:8.0-devel\n```\n\nThe first time this command is invoked `luda/nvidia-cuda-8.0-devel:dev` will be created.  Subsequent invocation will\neither update the image if either the base image (`nvidia/cuda:8.0-devel`) or the template directory\n(`~/.config/luda/templates/dev`) has detected changes.\n\n\n## Acknowledgements\n\nThanks to [Deni Bertovic's\nblog](https://denibertovic.com/posts/handling-permissions-with-docker-volumes/).\n`luda` provides very similar functionality but does not require specially\ncrafted base images and wraps the details of the docker command-line.\n\nThe project contains a copy of [`su-exec`](https://github.com/ncopa/su-exec).\nCopyright reproduced below.\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2015 ncopa\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-03-07)\n------------------\n\n* First release on PyPI.\n\n0.4.0 (2017-06-01)\n------------------\n\n* Added configurable abbreviations to simply long image names\n* Added templates to extend images from reusable templated Dockerfiles\n* Added entrypoint and command inspection on the base_image to ensure the correct scripts/commands\n  executed on container launch\n* Removed --docker_run_args and replaced with luda managed `--rm`, `-d`, `-t`, `-i` options which map\n  directly to the docker equivalents\n* Improved landing page documentation (still more needs to be done)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ryanolson/luda", "keywords": "luda", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "luda", "package_url": "https://pypi.org/project/luda/", "platform": "", "project_url": "https://pypi.org/project/luda/", "project_urls": {"Homepage": "https://github.com/ryanolson/luda"}, "release_url": "https://pypi.org/project/luda/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "ludicrously awesome [w]rapper for nvidia-docker", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # luda<br><br>ludicrously awesome [w]rapper for nvidia-docker<br><br><br>* Free software: MIT license<br>* Documentation: [coming shortly]<br><br>```<br>pip install luda<br>```<br><br><br>## Features<br><br>* Opinionated wrapper for `docker`/`nvidia-docker` designed to provide<br>  Singularity-like functionality to Docker images.<br><br>* Best used for container images that run DL/HPC-like jobs, not suited<br>  for long-running daemons or services that require root.<br><br>* Volume mounts a /bootstrap volume and overrides the container image<br>  `ENTRYPOINT` to map the host USER, UID and GID [future work] into the<br>  container.  Current the docker commandline is echo'ed to the terminal on<br>  container startup.<br><br>* Automounts the current working directory on the host to `/work` inside<br>  the container.  `/work` becomes the current working directory inside the<br>  running container. `--work` can be used to specify an alternative default<br>  working directory for use inside the container; it will be mounted to `/work`.<br><br>* Automounts `$HOME` on the host to `/home/$USER` inside the container.<br>  `--home` option.<br><br><br>## Quickstart<br><br>```<br>luda nvidia/cuda:8.0-devel<br>```<br><br>This the equivalent of the following docker command:<br><br>```<br>nvidia-docker run --rm -t -i  \\<br>  -v /Users/ryan/Projects/luda/luda/bootstrap:/bootstrap:ro \\<br>  --entrypoint /bootstrap/init.sh \\<br>  --env HOST_USER_ID=501 \\<br>  --env HOST_GROUP_ID=20 \\<br>  --env HOST_USER=ryan \\<br>  --env HOST_GROUP=staff \\<br>  -v /Users/ryan:/home/ryan \\<br>  -v /Users/ryan/Projects/luda:/work \\<br>  --workdir /work \\<br>  nvidia/cuda:8.0-devel /bin/bash<br>```<br><br>This launches a new container based on the `nvidia/cuda:8.0-devel`<br>image; however, the magic happens in the bootstrapping, where the host<br>user that launched the container is created inside the container on<br>launch (entrypoint).<br><br>This is exceptional convenient for development as your current working<br>directory is mapped into `/work` which then becomes the active working<br>directory inside the contanier.  Edits made inside the container are<br>written as the USER/UID of the host user.<br><br>### Volumes<br><br>luda intercepts the `-v/--volume` option and provides convenience methods similar to<br>`docker-compose` in that relative paths are supported.  If no<br><br>```<br># absolute path readonly<br>--volume /path/data:/data:ro<br><br># relative path readonly<br>--volume /path/data:/data:ro<br><br># relative path, no internal path --&gt; mount internal at `/{{ basename(hostpath) }}`<br># mounts $PWD/data --&gt; /data inside the container<br># --volume data<br><br># same as above, but readonly<br># --volume data::ro<br>```<br><br>#### Home Directory<br><br>The user's home directory is a special case which mounts the user's home directory on the host<br>to `/home/$USER` in the container.  This option is enabled by default, but can be disabled by<br>passing `--no-home` on the commandline.<br><br>#### Current Working Directory<br><br>luda will map the current working directory from which the `luda` command was executed on the host<br>to `/work` in the container and override the container's working directory to `/work`.  This behavior<br>can be overridden by passing a volume mount or disabled by passing `None` to to the `--work` option.<br><br>Examples:<br>```<br># mounts the current working directory on the host to `/my-working-dir`<br># in the container; `/my-working-dir` become the default working directory<br>--work .:/my-working-dir<br><br># mounts `~/other-dir` to `/other-dir` in the container; `/other-dir`<br># becomes the default working directory in the container<br>--work ~/other-dir<br><br># use the working directory as specified by the container image<br>--work None<br>--work none<br>```<br><br>### Abbreviations<br><br>You can set up abbreviations for commonly used URLs by including an `abbreviations` key in the yaml config file. By default,<br>luda includes the `nv:` which expands to `nvcr.io/nvidia/{0}`, where `{0}` is the remainding portion of the image name after<br>the abbreviation.<br><br>in `config.yml`<br>```<br>abbreviations:<br>  nv: nvcr.io/nvidia/{1}<br>```<br><br>Usage `nv:tensorflow:17.04` expands to `nvcr.io/nvidia/tensorflow:17.04`:<br>```<br>luda nv:tensorflow:17.04<br>```<br><br>### Displays<br><br>```<br>luda --with-display nvidia/cuda:8.0-devel<br>```<br><br>todo: show opengl containers<br><br>### Docker<br><br>```<br>luda --with-docker nvidia/cuda:8.0-devel<br>```<br><br>### Templates<br><br>Templates provide an easy way to extend container images with pre-defined content.<br>Assume I have the following `Dockerfile` defined in `~/.config/luda/templates/dev`.<br><br>```<br>RUN apt-get update &amp;&amp; apt-get install -y --no-install-recommends \\<br>        vim sudo python-dev python-pip &amp;&amp; \\<br>    rm -rf /var/lib/apt/lists/*<br><br>RUN pip install luda<br>```<br><br>The developer option `--dev` is a special case of `--template dev`.  Running the following commands performs a one-time<br>extensions of the `nvidia/cuda:8.0-devel` image with the `Dockerfile` above.  The new images generated will be<br>`luda/nvidia-cuda-8.0-devel:dev` or `luda/{{ base_image }}:{{ template }}` where `base_image` has all `/` and `:` replaced<br>with `-`.<br><br><br>```<br>luda --dev nvidia/cuda:8.0-devel<br>```<br><br>```<br>luda --template dev nvidia/cuda:8.0-devel<br>```<br><br>The first time this command is invoked `luda/nvidia-cuda-8.0-devel:dev` will be created.  Subsequent invocation will<br>either update the image if either the base image (`nvidia/cuda:8.0-devel`) or the template directory<br>(`~/.config/luda/templates/dev`) has detected changes.<br><br><br>## Acknowledgements<br><br>Thanks to [Deni Bertovic's<br>blog](https://denibertovic.com/posts/handling-permissions-with-docker-volumes/).<br>`luda` provides very similar functionality but does not require specially<br>crafted base images and wraps the details of the docker command-line.<br><br>The project contains a copy of [`su-exec`](https://github.com/ncopa/su-exec).<br>Copyright reproduced below.<br><br>```<br>The MIT License (MIT)<br><br>Copyright (c) 2015 ncopa<br><br>Permission is hereby granted, free of charge, to any person obtaining a copy<br>of this software and associated documentation files (the \"Software\"), to deal<br>in the Software without restriction, including without limitation the rights<br>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>copies of the Software, and to permit persons to whom the Software is<br>furnished to do so, subject to the following conditions:<br><br>The above copyright notice and this permission notice shall be included in all<br>copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<br>SOFTWARE.<br>```<br><br><br><br>=======<br>History<br>=======<br><br>0.1.0 (2017-03-07)<br>------------------<br><br>* First release on PyPI.<br><br>0.4.0 (2017-06-01)<br>------------------<br><br>* Added configurable abbreviations to simply long image names<br>* Added templates to extend images from reusable templated Dockerfiles<br>* Added entrypoint and command inspection on the base_image to ensure the correct scripts/commands<br>  executed on container launch<br>* Removed --docker_run_args and replaced with luda managed `--rm`, `-d`, `-t`, `-i` options which map<br>  directly to the docker equivalents<br>* Improved landing page documentation (still more needs to be done)\n          </div>"}, "last_serial": 3578901, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b4bcf2a0b0ac70f30e1b828f70be35f2", "sha256": "392d7216e4229d012d9dd596e0be931b0e3e0ccda899a4412aa6499185acaedf"}, "downloads": -1, "filename": "luda-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b4bcf2a0b0ac70f30e1b828f70be35f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19370, "upload_time": "2017-03-08T20:55:20", "upload_time_iso_8601": "2017-03-08T20:55:20.910212Z", "url": "https://files.pythonhosted.org/packages/08/35/db0c7e03eb1f5bf675afb668e2794262e4a17fad840110fc16e09b113e51/luda-0.1.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7d17d92c666eb8087792df24eca85a8c", "sha256": "bf93990501f9e1ed6bf5088b57c8d55f17f8075f43bcb99d62024ef5c056c290"}, "downloads": -1, "filename": "luda-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d17d92c666eb8087792df24eca85a8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13322, "upload_time": "2017-04-04T22:03:04", "upload_time_iso_8601": "2017-04-04T22:03:04.500010Z", "url": "https://files.pythonhosted.org/packages/c6/a2/f578ce16b66049750b88551219fb281de220e5271e47f679212713783894/luda-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4ee2f19dd5c0130b1a8b43472d10f4f", "sha256": "3d6c36a9d7d2f5e2374b549a1556524753c325eb155d43e33b315764bc880402"}, "downloads": -1, "filename": "luda-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d4ee2f19dd5c0130b1a8b43472d10f4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20046, "upload_time": "2017-04-04T22:03:06", "upload_time_iso_8601": "2017-04-04T22:03:06.711256Z", "url": "https://files.pythonhosted.org/packages/5d/21/7106a6700ad658b5236a9b44fd8683445f8d0f4a30724b43dd3905e0007e/luda-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "24e8f1fe577fa7afc7b269c6ff153132", "sha256": "1061f89b186347b4610680fd3c30303acd510fdc120894022ece6799531ce319"}, "downloads": -1, "filename": "luda-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "24e8f1fe577fa7afc7b269c6ff153132", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13321, "upload_time": "2017-04-04T22:29:25", "upload_time_iso_8601": "2017-04-04T22:29:25.934461Z", "url": "https://files.pythonhosted.org/packages/d7/6c/94f0ae753b6ae9d04d1e2ebce446af8f3709a4c1b162115f097bb8fb87a0/luda-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61d0c8e5d3498de297e72dbaaebbdf7e", "sha256": "ff93b67edce913990e7c44ac2ef8111ed3cfa83826ab9f71a355f4bb541421ec"}, "downloads": -1, "filename": "luda-0.3.1.tar.gz", "has_sig": false, "md5_digest": "61d0c8e5d3498de297e72dbaaebbdf7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20038, "upload_time": "2017-04-04T22:29:27", "upload_time_iso_8601": "2017-04-04T22:29:27.950562Z", "url": "https://files.pythonhosted.org/packages/80/9d/b02eb4bc628fbe02d7e30596994777f01b2953974cccc5ce8537416b256b/luda-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d11b573b9407a5e5b2e0db11a335b1e2", "sha256": "ddb9df07bb620909dc2a991c74d29259a7a8914fd0406c739f255a89c3af599b"}, "downloads": -1, "filename": "luda-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d11b573b9407a5e5b2e0db11a335b1e2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19714, "upload_time": "2017-06-01T03:37:54", "upload_time_iso_8601": "2017-06-01T03:37:54.462002Z", "url": "https://files.pythonhosted.org/packages/2c/20/038eb1a79a30a0345a767e240065bfc5e89edb870903f3a2308ac44a4a9d/luda-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b42801192d4c6ee9c2c38e63b7b047b", "sha256": "6fe4daf60327e7265b72c0f0136f1c78715e9aab7229e6b7dad83df3b12f61e8"}, "downloads": -1, "filename": "luda-0.4.0.tar.gz", "has_sig": false, "md5_digest": "9b42801192d4c6ee9c2c38e63b7b047b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24741, "upload_time": "2017-06-01T03:37:56", "upload_time_iso_8601": "2017-06-01T03:37:56.664304Z", "url": "https://files.pythonhosted.org/packages/b1/10/7f982e5c63f9131469b537b8df912187ebb0284190dcf6ae9ebcef6367f4/luda-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "1f441f20d4fc8b628a112d29c89c6cb3", "sha256": "51890e751f135d38c59cdaa31443d9a28e62cd25ab154dbeb7f067fa9ab37e13"}, "downloads": -1, "filename": "luda-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1f441f20d4fc8b628a112d29c89c6cb3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19739, "upload_time": "2017-06-01T03:42:36", "upload_time_iso_8601": "2017-06-01T03:42:36.400673Z", "url": "https://files.pythonhosted.org/packages/3b/6b/d59c07e48eabc1a0b54ffa9b74594c4d6602b81b0cd54398d9c90eb35a2a/luda-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2937fa228cbcc3ed813460401bd6f474", "sha256": "ca530da5732ea6c2fc9d0af02b8cda457d23c7b5664896b91e92844d8ef9446c"}, "downloads": -1, "filename": "luda-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2937fa228cbcc3ed813460401bd6f474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24762, "upload_time": "2017-06-01T03:42:39", "upload_time_iso_8601": "2017-06-01T03:42:39.081827Z", "url": "https://files.pythonhosted.org/packages/79/03/e0a0a38f553dacb8e51a62388264d13ea2bd03bfe9b95c6666865ac09ddd/luda-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "089ea86bc8a0dfc1e5fd1530909c8c29", "sha256": "d6d229dc014f9778310cb6e9c23ece22dd265cb4096a564eefa3e5d404cbfb26"}, "downloads": -1, "filename": "luda-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "089ea86bc8a0dfc1e5fd1530909c8c29", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19738, "upload_time": "2017-06-01T03:48:37", "upload_time_iso_8601": "2017-06-01T03:48:37.210773Z", "url": "https://files.pythonhosted.org/packages/58/d2/79094a92e41b9a9ebc67f16e6560ea7e2afd7afe22ce6d37b19fb33a8810/luda-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fce39ad7ed1728cfe5ebc819d7a9c90f", "sha256": "6218d9a3a81ffa866e9901db2d898e1e205328bdfccf4b5d6bba58e0210ac902"}, "downloads": -1, "filename": "luda-0.4.2.tar.gz", "has_sig": false, "md5_digest": "fce39ad7ed1728cfe5ebc819d7a9c90f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24758, "upload_time": "2017-06-01T03:48:39", "upload_time_iso_8601": "2017-06-01T03:48:39.006932Z", "url": "https://files.pythonhosted.org/packages/8c/1c/656494d59eb605f480d8ca4fabb4d66e40452dba320d673ea6b88e6ac616/luda-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "a0234bccbe2644be9b3782858582b2e1", "sha256": "de0c8650e1456a51669e35bd9adf419108daa70cd460f5c2179250e9d5ae0b1b"}, "downloads": -1, "filename": "luda-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a0234bccbe2644be9b3782858582b2e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19741, "upload_time": "2017-06-04T23:23:01", "upload_time_iso_8601": "2017-06-04T23:23:01.290984Z", "url": "https://files.pythonhosted.org/packages/af/3e/1746d1d3cd342f8629b5248f9795b12c543cc420c71ccf4ffb3dbb160b89/luda-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d1b08265f4d1445a86e8eb4e4181930", "sha256": "c4f4f81dab4585121485fc5dd986952d0239d501d287f9f1edb7b93a16f6e926"}, "downloads": -1, "filename": "luda-0.4.3.tar.gz", "has_sig": false, "md5_digest": "3d1b08265f4d1445a86e8eb4e4181930", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24773, "upload_time": "2017-06-04T23:23:03", "upload_time_iso_8601": "2017-06-04T23:23:03.223232Z", "url": "https://files.pythonhosted.org/packages/6e/fe/f2a8bf6353559dac7d04d92203a8b74d31a4b12c652a4f75e33fa533f394/luda-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "7b36cf98b10ae97d7986a5e61a3a6703", "sha256": "ffb6db716e4f2f121283737bcb543955a0eabff1b98daf90e542f694018b2b66"}, "downloads": -1, "filename": "luda-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b36cf98b10ae97d7986a5e61a3a6703", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19741, "upload_time": "2017-06-04T23:29:59", "upload_time_iso_8601": "2017-06-04T23:29:59.751905Z", "url": "https://files.pythonhosted.org/packages/57/f2/54b30c794d230356c668596a64d4a43bd99725364c2220173cb7268b42de/luda-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "217963561418c97638d9ff039512846b", "sha256": "83d3e258b5738a453157ed57a932d001a0705e19018c5649d04cac4802f64364"}, "downloads": -1, "filename": "luda-0.4.4.tar.gz", "has_sig": false, "md5_digest": "217963561418c97638d9ff039512846b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24755, "upload_time": "2017-06-04T23:30:01", "upload_time_iso_8601": "2017-06-04T23:30:01.841421Z", "url": "https://files.pythonhosted.org/packages/fa/fb/56b712f67f27f9163b62eba85c802e76985f21b4180878974b59533eefd6/luda-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "4340fa28528c8167fbe9a181a117f7f4", "sha256": "3c1696ed347f4212448c863103c2221d096176769900e3049c2a34de2b3e47b9"}, "downloads": -1, "filename": "luda-0.5.0.tar.gz", "has_sig": false, "md5_digest": "4340fa28528c8167fbe9a181a117f7f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28074, "upload_time": "2018-02-13T16:29:55", "upload_time_iso_8601": "2018-02-13T16:29:55.089354Z", "url": "https://files.pythonhosted.org/packages/6c/52/4f270db24d8c7f9448cfd82c7d5249ec1931852a909227235dc109922d07/luda-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4340fa28528c8167fbe9a181a117f7f4", "sha256": "3c1696ed347f4212448c863103c2221d096176769900e3049c2a34de2b3e47b9"}, "downloads": -1, "filename": "luda-0.5.0.tar.gz", "has_sig": false, "md5_digest": "4340fa28528c8167fbe9a181a117f7f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28074, "upload_time": "2018-02-13T16:29:55", "upload_time_iso_8601": "2018-02-13T16:29:55.089354Z", "url": "https://files.pythonhosted.org/packages/6c/52/4f270db24d8c7f9448cfd82c7d5249ec1931852a909227235dc109922d07/luda-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:16 2020"}