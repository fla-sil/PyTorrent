{"info": {"author": "Dmitry Pershin", "author_email": "dapper91@mail.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Public Domain", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "====\npaxb\n====\n\n.. image:: https://travis-ci.org/dapper91/paxb.svg?branch=master\n    :target: https://travis-ci.org/dapper91/paxb\n    :alt: Build status\n.. image:: https://img.shields.io/pypi/l/paxb.svg\n    :target: https://pypi.org/project/paxb\n    :alt: License\n.. image:: https://img.shields.io/pypi/pyversions/paxb.svg\n    :target: https://pypi.org/project/paxb\n    :alt: Supported Python versions\n.. image:: https://codecov.io/gh/dapper91/paxb/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/dapper91/paxb\n    :alt: Code coverage\n\n\nPython Architecture for XML Binding\n-----------------------------------\n\n``paxb`` is a library that provides an API for mapping between XML documents and Python objects.\n\n``paxb`` library implements the following functionality:\n\n- Deserialize XML documents to Python objects\n- Validate deserialized data\n- Access and update Python object fields\n- Serialize Python objects to XML documents\n\n``paxb`` provides an efficient way of mapping between an XML document and a Python object. Using ``paxb``\ndevelopers can write less boilerplate code emphasizing on application domain logic.\n\nSince ``paxb`` based on `attrs <https://www.attrs.org/en/stable/index.html>`_ library ``paxb`` and ``attrs``\nAPI can be mixed together.\n\n\nInstallation\n------------\n\nYou can install paxb with pip:\n\n.. code-block:: console\n\n    $ pip install paxb\n\n\nRequirements\n------------\n\n- `attrs <https://www.attrs.org/en/stable/index.html>`_\n\n\nDocumentation\n-------------\n\nDocumentation is available at `Read the Docs <https://paxb.readthedocs.io/en/latest/>`_.\n\n\nQuick start\n===========\n\nSuppose you have an xml document ``user.xml``:\n\n.. code-block:: xml\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <doc:envelope xmlns=\"http://www.test.org\"\n                  xmlns:doc=\"http://www.test1.org\">\n        <doc:user name=\"Alex\" surname=\"Ivanov\" age=\"26\">\n\n            <doc:birthdate year=\"1992\" month=\"06\" day=\"14\"/>\n\n            <doc:contacts>\n                <doc:phone>+79204563539</doc:phone>\n                <doc:email>alex@gmail.com</doc:email>\n                <doc:email>alex@mail.ru</doc:email>\n            </doc:contacts>\n\n            <doc:documents>\n                <doc:passport series=\"3127\" number=\"836815\"/>\n            </doc:documents>\n\n            <data:occupations xmlns:data=\"http://www.test2.org\">\n                <data:occupation title=\"yandex\">\n                    <data:address>Moscow</data:address>\n                    <data:employees>8854</data:employees>\n                </data:occupation>\n                <data:occupation title=\"skbkontur\">\n                    <data:address>Yekaterinburg</data:address>\n                    <data:employees>7742</data:employees>\n                </data:occupation>\n            </data:occupations>\n\n        </doc:user>\n    </doc:envelope>\n\n\nTo deserialize the document you could use `xml <https://docs.python.org/3/library/xml.html>`_ library api to parse\nthe document and then access and modify the parsed xml DOM manually. Such an imperative code has a lot of boilerplate\noperations that takes a lot of time and can lead to bugs. Instead you can use ``paxb`` api to write a declarative\nstyle code. All you need to describe field mappings and types, ``paxb`` will serialize and deserialize data for you:\n\n.. code-block:: python\n\n    import json\n    import re\n    from datetime import date\n\n    import attr\n    import paxb as pb\n\n\n    @pb.model(name='occupation', ns='data', ns_map={'data': 'http://www.test2.org'})\n    class Occupation:\n        title = pb.attr()\n        address = pb.field()\n        employees = pb.field(converter=int)\n\n\n    @pb.model(name='user', ns='doc', ns_map={'doc': 'http://www.test1.org'})\n    class User:\n        name = pb.attr()\n        surname = pb.attr()\n        age = pb.attr(converter=int)\n\n        birth_year = pb.wrap('birthdate', pb.attr('year', converter=int))\n        birth_month = pb.wrap('birthdate', pb.attr('month', converter=int))\n        birth_day = pb.wrap('birthdate', pb.attr('day', converter=int))\n\n        @property\n        def birthdate(self):\n            return date(year=self.birth_year, month=self.birth_month, day=self.birth_day)\n\n        @birthdate.setter\n        def birthdate(self, value):\n            self.birth_year = value.year\n            self.birth_month = value.month\n            self.birth_day = value.day\n\n        phone = pb.wrap('contacts', pb.field())\n        emails = pb.wrap('contacts', pb.as_list(pb.field(name='email')))\n\n        passport_series = pb.wrap('documents/passport', pb.attr('series'))\n        passport_number = pb.wrap('documents/passport', pb.attr('number'))\n\n        occupations = pb.wrap(\n            'occupations', pb.lst(pb.nested(Occupation)), ns='data', ns_map={'data': 'http://www.test2.org'}\n        )\n\n        citizenship = pb.field(default='RU')\n\n        @phone.validator\n        def check(self, attribute, value):\n            if not re.match(r'\\+\\d{11,13}', value):\n                raise ValueError(\"phone number is incorrect\")\n\n\n    with open('user.xml') as file:\n        xml = file.read()\n\n\nThen the deserialized object can be modified and serialized back to xml document or converted to json format:\n\n.. code-block:: python\n\n    try:\n        user = pb.from_xml(User, xml, envelope='doc:envelope', ns_map={'doc': 'http://www.test1.org'})\n        user.birthdate = user.birthdate.replace(year=1993)\n\n        with open('user.json') as file:\n            json.dump(attr.asdict(user), file)\n\n    except (pb.exc.DeserializationError, ValueError) as e:\n        print(f\"deserialization error: {e}\")\n\n\n``user.json``:\n\n.. code-block:: json\n\n    {\n        \"age\": 26,\n        \"birth_day\": 14,\n        \"birth_month\": 6,\n        \"birth_year\": 1993,\n        \"citizenship\": \"RU\",\n        \"emails\": [\"alex@gmail.com\", \"alex@mail.ru\"],\n        \"name\": \"Alexey\",\n        \"occupations\": [\n            {\n                \"address\": \"Moscow\",\n                \"employees\": 8854,\n                \"title\": \"yandex\"\n            },\n            {\n                \"address\": \"Yekaterinburg\",\n                \"employees\": 7742,\n                \"title\": \"skbkontur\"\n            }\n        ],\n        \"passport_number\": \"836815\",\n        \"passport_series\": \"3127\",\n        \"phone\": \"+79204563539\",\n        \"surname\": \"Ivanov\"\n    }", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dapper91/paxb", "keywords": "xml,binding,mapping,serialization,deserialization", "license": "Public Domain License", "maintainer": "", "maintainer_email": "", "name": "paxb", "package_url": "https://pypi.org/project/paxb/", "platform": "", "project_url": "https://pypi.org/project/paxb/", "project_urls": {"Homepage": "https://github.com/dapper91/paxb"}, "release_url": "https://pypi.org/project/paxb/0.3.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Python Architecture for XML Binding", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/dapper91/paxb\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/820f94fc65b91e43b095c260ad3422bd87bc7675/68747470733a2f2f7472617669732d63692e6f72672f64617070657239312f706178622e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/paxb\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12e43a5205b76067315cacb9ec3fb9ead7709ed9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f706178622e737667\"></a>\n<a href=\"https://pypi.org/project/paxb\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/652ef4409707f417043d3d31e7b3a3d19f002ce1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706178622e737667\"></a>\n<a href=\"https://codecov.io/gh/dapper91/paxb\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2012a2964e323c910195d83995cecbb64d64c6da/68747470733a2f2f636f6465636f762e696f2f67682f64617070657239312f706178622f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div id=\"python-architecture-for-xml-binding\">\n<h2>Python Architecture for XML Binding</h2>\n<p><tt>paxb</tt> is a library that provides an API for mapping between XML documents and Python objects.</p>\n<p><tt>paxb</tt> library implements the following functionality:</p>\n<ul>\n<li>Deserialize XML documents to Python objects</li>\n<li>Validate deserialized data</li>\n<li>Access and update Python object fields</li>\n<li>Serialize Python objects to XML documents</li>\n</ul>\n<p><tt>paxb</tt> provides an efficient way of mapping between an XML document and a Python object. Using <tt>paxb</tt>\ndevelopers can write less boilerplate code emphasizing on application domain logic.</p>\n<p>Since <tt>paxb</tt> based on <a href=\"https://www.attrs.org/en/stable/index.html\" rel=\"nofollow\">attrs</a> library <tt>paxb</tt> and <tt>attrs</tt>\nAPI can be mixed together.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install paxb with pip:</p>\n<pre><span class=\"gp\">$</span> pip install paxb\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.attrs.org/en/stable/index.html\" rel=\"nofollow\">attrs</a></li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation is available at <a href=\"https://paxb.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the Docs</a>.</p>\n<div id=\"quick-start\">\n<h3>Quick start</h3>\n<p>Suppose you have an xml document <tt>user.xml</tt>:</p>\n<pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"nt\">&lt;doc:envelope</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.test.org\"</span>\n              <span class=\"na\">xmlns:doc=</span><span class=\"s\">\"http://www.test1.org\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;doc:user</span> <span class=\"na\">name=</span><span class=\"s\">\"Alex\"</span> <span class=\"na\">surname=</span><span class=\"s\">\"Ivanov\"</span> <span class=\"na\">age=</span><span class=\"s\">\"26\"</span><span class=\"nt\">&gt;</span>\n\n        <span class=\"nt\">&lt;doc:birthdate</span> <span class=\"na\">year=</span><span class=\"s\">\"1992\"</span> <span class=\"na\">month=</span><span class=\"s\">\"06\"</span> <span class=\"na\">day=</span><span class=\"s\">\"14\"</span><span class=\"nt\">/&gt;</span>\n\n        <span class=\"nt\">&lt;doc:contacts&gt;</span>\n            <span class=\"nt\">&lt;doc:phone&gt;</span>+79204563539<span class=\"nt\">&lt;/doc:phone&gt;</span>\n            <span class=\"nt\">&lt;doc:email&gt;</span>alex@gmail.com<span class=\"nt\">&lt;/doc:email&gt;</span>\n            <span class=\"nt\">&lt;doc:email&gt;</span>alex@mail.ru<span class=\"nt\">&lt;/doc:email&gt;</span>\n        <span class=\"nt\">&lt;/doc:contacts&gt;</span>\n\n        <span class=\"nt\">&lt;doc:documents&gt;</span>\n            <span class=\"nt\">&lt;doc:passport</span> <span class=\"na\">series=</span><span class=\"s\">\"3127\"</span> <span class=\"na\">number=</span><span class=\"s\">\"836815\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/doc:documents&gt;</span>\n\n        <span class=\"nt\">&lt;data:occupations</span> <span class=\"na\">xmlns:data=</span><span class=\"s\">\"http://www.test2.org\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;data:occupation</span> <span class=\"na\">title=</span><span class=\"s\">\"yandex\"</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;data:address&gt;</span>Moscow<span class=\"nt\">&lt;/data:address&gt;</span>\n                <span class=\"nt\">&lt;data:employees&gt;</span>8854<span class=\"nt\">&lt;/data:employees&gt;</span>\n            <span class=\"nt\">&lt;/data:occupation&gt;</span>\n            <span class=\"nt\">&lt;data:occupation</span> <span class=\"na\">title=</span><span class=\"s\">\"skbkontur\"</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;data:address&gt;</span>Yekaterinburg<span class=\"nt\">&lt;/data:address&gt;</span>\n                <span class=\"nt\">&lt;data:employees&gt;</span>7742<span class=\"nt\">&lt;/data:employees&gt;</span>\n            <span class=\"nt\">&lt;/data:occupation&gt;</span>\n        <span class=\"nt\">&lt;/data:occupations&gt;</span>\n\n    <span class=\"nt\">&lt;/doc:user&gt;</span>\n<span class=\"nt\">&lt;/doc:envelope&gt;</span>\n</pre>\n<p>To deserialize the document you could use <a href=\"https://docs.python.org/3/library/xml.html\" rel=\"nofollow\">xml</a> library api to parse\nthe document and then access and modify the parsed xml DOM manually. Such an imperative code has a lot of boilerplate\noperations that takes a lot of time and can lead to bugs. Instead you can use <tt>paxb</tt> api to write a declarative\nstyle code. All you need to describe field mappings and types, <tt>paxb</tt> will serialize and deserialize data for you:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">attr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">paxb</span> <span class=\"k\">as</span> <span class=\"nn\">pb</span>\n\n\n<span class=\"nd\">@pb</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'occupation'</span><span class=\"p\">,</span> <span class=\"n\">ns</span><span class=\"o\">=</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"n\">ns_map</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.test2.org'</span><span class=\"p\">})</span>\n<span class=\"k\">class</span> <span class=\"nc\">Occupation</span><span class=\"p\">:</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">()</span>\n    <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">()</span>\n    <span class=\"n\">employees</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">converter</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@pb</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"n\">ns</span><span class=\"o\">=</span><span class=\"s1\">'doc'</span><span class=\"p\">,</span> <span class=\"n\">ns_map</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'doc'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.test1.org'</span><span class=\"p\">})</span>\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">()</span>\n    <span class=\"n\">surname</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">()</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"n\">converter</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n    <span class=\"n\">birth_year</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'birthdate'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"s1\">'year'</span><span class=\"p\">,</span> <span class=\"n\">converter</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">))</span>\n    <span class=\"n\">birth_month</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'birthdate'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"s1\">'month'</span><span class=\"p\">,</span> <span class=\"n\">converter</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">))</span>\n    <span class=\"n\">birth_day</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'birthdate'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"s1\">'day'</span><span class=\"p\">,</span> <span class=\"n\">converter</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">birthdate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_year</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_month</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_day</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@birthdate</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">birthdate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_year</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">year</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_month</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">month</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_day</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">day</span>\n\n    <span class=\"n\">phone</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'contacts'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">())</span>\n    <span class=\"n\">emails</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'contacts'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">as_list</span><span class=\"p\">(</span><span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'email'</span><span class=\"p\">)))</span>\n\n    <span class=\"n\">passport_series</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'documents/passport'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"s1\">'series'</span><span class=\"p\">))</span>\n    <span class=\"n\">passport_number</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span><span class=\"s1\">'documents/passport'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"s1\">'number'</span><span class=\"p\">))</span>\n\n    <span class=\"n\">occupations</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">wrap</span><span class=\"p\">(</span>\n        <span class=\"s1\">'occupations'</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">lst</span><span class=\"p\">(</span><span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">nested</span><span class=\"p\">(</span><span class=\"n\">Occupation</span><span class=\"p\">)),</span> <span class=\"n\">ns</span><span class=\"o\">=</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"n\">ns_map</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.test2.org'</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">citizenship</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'RU'</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@phone</span><span class=\"o\">.</span><span class=\"n\">validator</span>\n    <span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">attribute</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'\\+\\d{11,13}'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">\"phone number is incorrect\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'user.xml'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n    <span class=\"n\">xml</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n</pre>\n<p>Then the deserialized object can be modified and serialized back to xml document or converted to json format:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">from_xml</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">xml</span><span class=\"p\">,</span> <span class=\"n\">envelope</span><span class=\"o\">=</span><span class=\"s1\">'doc:envelope'</span><span class=\"p\">,</span> <span class=\"n\">ns_map</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'doc'</span><span class=\"p\">:</span> <span class=\"s1\">'http://www.test1.org'</span><span class=\"p\">})</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">birthdate</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">birthdate</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"mi\">1993</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'user.json'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n        <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">attr</span><span class=\"o\">.</span><span class=\"n\">asdict</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">),</span> <span class=\"n\">file</span><span class=\"p\">)</span>\n\n<span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">exc</span><span class=\"o\">.</span><span class=\"n\">DeserializationError</span><span class=\"p\">,</span> <span class=\"ne\">ValueError</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"deserialization error: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p><tt>user.json</tt>:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">26</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"birth_day\"</span><span class=\"p\">:</span> <span class=\"mi\">14</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"birth_month\"</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"birth_year\"</span><span class=\"p\">:</span> <span class=\"mi\">1993</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"citizenship\"</span><span class=\"p\">:</span> <span class=\"s2\">\"RU\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"emails\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"alex@gmail.com\"</span><span class=\"p\">,</span> <span class=\"s2\">\"alex@mail.ru\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Alexey\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"occupations\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"address\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Moscow\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"employees\"</span><span class=\"p\">:</span> <span class=\"mi\">8854</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yandex\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"address\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Yekaterinburg\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"employees\"</span><span class=\"p\">:</span> <span class=\"mi\">7742</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"skbkontur\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"passport_number\"</span><span class=\"p\">:</span> <span class=\"s2\">\"836815\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"passport_series\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3127\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"phone\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+79204563539\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"surname\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Ivanov\"</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5919041, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7b2ee9652153972d0c0743df04d2d95c", "sha256": "bf218dee6fba2daf65f5c49a440f88ba40dd0f3241be4f426deb9a94f20bba82"}, "downloads": -1, "filename": "paxb-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "7b2ee9652153972d0c0743df04d2d95c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.5", "size": 18651, "upload_time": "2019-08-14T14:46:10", "upload_time_iso_8601": "2019-08-14T14:46:10.409369Z", "url": "https://files.pythonhosted.org/packages/00/3c/61e8c6595db47b7b30030b2ac4ddde4ff681efa02b9d5f603d03d57e5424/paxb-0.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ccc738b4bae6d2694df7f9c66f3d376", "sha256": "f6dd89db21c24747e3a56b6f2620a46ecfd286637730aa2f42dbe4824016b817"}, "downloads": -1, "filename": "paxb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3ccc738b4bae6d2694df7f9c66f3d376", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9471, "upload_time": "2019-08-14T14:46:13", "upload_time_iso_8601": "2019-08-14T14:46:13.406095Z", "url": "https://files.pythonhosted.org/packages/e7/e2/26f922f1b80dcaf63a32a30deedf6cced718cd03a13ce28e39491fda2036/paxb-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c8b76f3910043dca66f3f9c2d1d3cf2a", "sha256": "88d8fd7181107956e78669561e1a592c88a2b942d6820632e9f9b8ced6213310"}, "downloads": -1, "filename": "paxb-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c8b76f3910043dca66f3f9c2d1d3cf2a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11020, "upload_time": "2019-08-25T10:36:19", "upload_time_iso_8601": "2019-08-25T10:36:19.699795Z", "url": "https://files.pythonhosted.org/packages/08/6b/4ab8615654abc9c1da9746a0cf0fa61cb3445b45eed193a7027ee256dc20/paxb-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "faac90830c67eb40d3635b39c6318252", "sha256": "6784b3863187b3f1add6b7f9f3ac6476d0a890e1fb8b53d189a08ec74fc7dfe2"}, "downloads": -1, "filename": "paxb-0.2.1.tar.gz", "has_sig": false, "md5_digest": "faac90830c67eb40d3635b39c6318252", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11109, "upload_time": "2019-08-25T20:03:23", "upload_time_iso_8601": "2019-08-25T20:03:23.580676Z", "url": "https://files.pythonhosted.org/packages/7b/13/7e00cbe50b63053e91e944108eab9697538ac0e15e48368c7b2e7f536055/paxb-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c0d51ffb6cca021161e6c0b94d929749", "sha256": "34acf150551443711b6431a856e9b1c938c83ba91e24f0f6ea9f445f92b809a7"}, "downloads": -1, "filename": "paxb-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c0d51ffb6cca021161e6c0b94d929749", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11210, "upload_time": "2019-09-24T18:05:08", "upload_time_iso_8601": "2019-09-24T18:05:08.998541Z", "url": "https://files.pythonhosted.org/packages/68/f4/5cdb42cf418beded79e40b6de5251a7cbf150e15dd8fb2bd80d052b03122/paxb-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "18e23acb7ba0f1a62be41fb07b3668b0", "sha256": "86c9e124d5c2411d2cf655903821b8e140737ffb67e27f4b62b4661ae75fe796"}, "downloads": -1, "filename": "paxb-0.3.0.tar.gz", "has_sig": false, "md5_digest": "18e23acb7ba0f1a62be41fb07b3668b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11215, "upload_time": "2019-10-02T17:04:38", "upload_time_iso_8601": "2019-10-02T17:04:38.671155Z", "url": "https://files.pythonhosted.org/packages/2e/c1/0fccf86e1d7d0ba69c325628fdea3ea206539985b255fd9279195968a1c4/paxb-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18e23acb7ba0f1a62be41fb07b3668b0", "sha256": "86c9e124d5c2411d2cf655903821b8e140737ffb67e27f4b62b4661ae75fe796"}, "downloads": -1, "filename": "paxb-0.3.0.tar.gz", "has_sig": false, "md5_digest": "18e23acb7ba0f1a62be41fb07b3668b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11215, "upload_time": "2019-10-02T17:04:38", "upload_time_iso_8601": "2019-10-02T17:04:38.671155Z", "url": "https://files.pythonhosted.org/packages/2e/c1/0fccf86e1d7d0ba69c325628fdea3ea206539985b255fd9279195968a1c4/paxb-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:43 2020"}