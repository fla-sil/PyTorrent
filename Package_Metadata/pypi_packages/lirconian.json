{"info": {"author": "Bengt Martensson", "author_email": "barf@bengt-martensson.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Hardware"], "description": "Lirconian (previously PythonLircClient)\n=======================================\n\nThis is a new and independent implementation of the Lirc ``irsend(1)``\nprogram. It offers a Python API and a command line interface. The\ncommand line interface is almost, but not quite, compatible with\n``irsend``. Instead, it is organized as a program with subcommands.\n\nThere are some other subtile differences from irsend:\n\n-  subcommands have been renamed, and must be lower case,\n-  send-once has been renamed to ``send``; only takes one command\n   (irsend takes several),\n-  send-stop (renamed to ``stop``) without arguments uses the remote and\n   the command from the last send-start command (API only; not from the\n   command line),\n-  list has been replaced by the two subcommands ``remotes`` (listing\n   remotes), and ``commands``, listing the commands in a given remote,\n-  no need to give dummy empty arguments for some commands,\n-  The ``--count`` argument to send is argument to the subcommand.\n-  the code in commands (previously list remote) is suppressed, unless\n   ``-c`` is given,\n-  port number must be given with the ``--port`` (``-p``) argument;\n   ``hostip:portnumber`` is not recognized,\n-  verbose option ``--verbose`` (``-v``); echos all communication with\n   the Lirc server,\n-  selectable timeout with ``--timeout`` (``-t``) option,\n-  better error messages\n\nIt does not depend on anything but standard Python libraries.\n\nBoth Python2 and Python3 are supported.\nIt does not depend on anything but standard\nPython libraries.\n(The minimal versions are believed to be 2.7 and 3.2 respectively;\nhowever, this has not been tested.)\n\nFor a GUI Lirc client, look at\n`IrScrutinizer <https://github.com/bengtmartensson/harctoolboxbundle>`__.\nFor a Java version, look at\n`JavaLircClient <https://github.com/bengtmartensson/JavaLircClient>`__.\n\nUsage:\n------\n\n::\n\n    usage: lirconian [-h] [-a host] [-d path] [-p port] [-t s] [-V] [-v]\n               sub-commands ...\n\n    Program to send IR codes and commands to a Lirc server.\n\n    positional arguments:\n      sub-commands\n    send                Send one command\n    start               Start sending one command until stopped\n    stop                Stop sending the command from send-start\n    remotes             Inquire the list of remotes\n    commands            Inquire the list of commands in a remote\n    input-log           Set input logging\n    driver-option       Set driver option\n    simulate            Fake the reception of IR signals\n    transmitters        Set transmitters\n    version             Inquire version of the Lirc server. (Use \"--version\"\n                for the version of this program.)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -a host, --address host\n                IP name or address of lircd host. Takes preference\n                over --device.\n      -d path, --device path\n                Path name of the lircd socket\n      -p port, --port port  Port of lircd, default 8765\n      -t s, --timeout s     Timeout in seconds\n      -V, --version         Display version information for this program\n      -v, --verbose         Have the communication with the Lirc server echoed\n\nDifference to the \"Python bindings for Lirc\"\n--------------------------------------------\n\nThe current Lirc release contains `\"Python\nbindings\" <http://lirc.org/api-docs/html/group__python__bindings.html>`__.\nIt \"requires lirc, including header files, installed\". It is not pure\nPython, requiring a C module to be installed. Its use is thus mainly to\nallow the use of the Lirc programs from a Python environment.\n\nIn contrast, the program and API presented here are pure Python. It runs\non every host supporting Python, regardless of the presence of Lirc.\n(The possibly exception (depending on the Python implementation), is the\nthe Unix Domain Socket version.)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bengtmartensson/Lirconian", "keywords": "lirc irsend API", "license": "GPLv2+", "maintainer": "", "maintainer_email": "", "name": "lirconian", "package_url": "https://pypi.org/project/lirconian/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lirconian/", "project_urls": {"Homepage": "https://github.com/bengtmartensson/Lirconian"}, "release_url": "https://pypi.org/project/lirconian/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Pure Python implementation of the Lirc irsend program.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a new and independent implementation of the Lirc <tt>irsend(1)</tt>\nprogram. It offers a Python API and a command line interface. The\ncommand line interface is almost, but not quite, compatible with\n<tt>irsend</tt>. Instead, it is organized as a program with subcommands.</p>\n<p>There are some other subtile differences from irsend:</p>\n<ul>\n<li>subcommands have been renamed, and must be lower case,</li>\n<li>send-once has been renamed to <tt>send</tt>; only takes one command\n(irsend takes several),</li>\n<li>send-stop (renamed to <tt>stop</tt>) without arguments uses the remote and\nthe command from the last send-start command (API only; not from the\ncommand line),</li>\n<li>list has been replaced by the two subcommands <tt>remotes</tt> (listing\nremotes), and <tt>commands</tt>, listing the commands in a given remote,</li>\n<li>no need to give dummy empty arguments for some commands,</li>\n<li>The <tt><span class=\"pre\">--count</span></tt> argument to send is argument to the subcommand.</li>\n<li>the code in commands (previously list remote) is suppressed, unless\n<tt><span class=\"pre\">-c</span></tt> is given,</li>\n<li>port number must be given with the <tt><span class=\"pre\">--port</span></tt> (<tt><span class=\"pre\">-p</span></tt>) argument;\n<tt>hostip:portnumber</tt> is not recognized,</li>\n<li>verbose option <tt><span class=\"pre\">--verbose</span></tt> (<tt><span class=\"pre\">-v</span></tt>); echos all communication with\nthe Lirc server,</li>\n<li>selectable timeout with <tt><span class=\"pre\">--timeout</span></tt> (<tt><span class=\"pre\">-t</span></tt>) option,</li>\n<li>better error messages</li>\n</ul>\n<p>It does not depend on anything but standard Python libraries.</p>\n<p>Both Python2 and Python3 are supported.\nIt does not depend on anything but standard\nPython libraries.\n(The minimal versions are believed to be 2.7 and 3.2 respectively;\nhowever, this has not been tested.)</p>\n<p>For a GUI Lirc client, look at\n<a href=\"https://github.com/bengtmartensson/harctoolboxbundle\" rel=\"nofollow\">IrScrutinizer</a>.\nFor a Java version, look at\n<a href=\"https://github.com/bengtmartensson/JavaLircClient\" rel=\"nofollow\">JavaLircClient</a>.</p>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<pre>usage: lirconian [-h] [-a host] [-d path] [-p port] [-t s] [-V] [-v]\n           sub-commands ...\n\nProgram to send IR codes and commands to a Lirc server.\n\npositional arguments:\n  sub-commands\nsend                Send one command\nstart               Start sending one command until stopped\nstop                Stop sending the command from send-start\nremotes             Inquire the list of remotes\ncommands            Inquire the list of commands in a remote\ninput-log           Set input logging\ndriver-option       Set driver option\nsimulate            Fake the reception of IR signals\ntransmitters        Set transmitters\nversion             Inquire version of the Lirc server. (Use \"--version\"\n            for the version of this program.)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a host, --address host\n            IP name or address of lircd host. Takes preference\n            over --device.\n  -d path, --device path\n            Path name of the lircd socket\n  -p port, --port port  Port of lircd, default 8765\n  -t s, --timeout s     Timeout in seconds\n  -V, --version         Display version information for this program\n  -v, --verbose         Have the communication with the Lirc server echoed\n</pre>\n</div>\n<div id=\"difference-to-the-python-bindings-for-lirc\">\n<h2>Difference to the \u201cPython bindings for Lirc\u201d</h2>\n<p>The current Lirc release contains <a href=\"http://lirc.org/api-docs/html/group__python__bindings.html\" rel=\"nofollow\">\u201cPython\nbindings\u201d</a>.\nIt \u201crequires lirc, including header files, installed\u201d. It is not pure\nPython, requiring a C module to be installed. Its use is thus mainly to\nallow the use of the Lirc programs from a Python environment.</p>\n<p>In contrast, the program and API presented here are pure Python. It runs\non every host supporting Python, regardless of the presence of Lirc.\n(The possibly exception (depending on the Python implementation), is the\nthe Unix Domain Socket version.)</p>\n</div>\n\n          </div>"}, "last_serial": 2987812, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "e21b95758a15e01852462ab949e872f0", "sha256": "4439b94a7a4ee2fe69c9d5394193d64c27c593c869565c8e5d7784def863955c"}, "downloads": -1, "filename": "lirconian-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e21b95758a15e01852462ab949e872f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17037, "upload_time": "2017-06-29T15:39:43", "upload_time_iso_8601": "2017-06-29T15:39:43.189815Z", "url": "https://files.pythonhosted.org/packages/ff/5e/51362ca7eeeef7d20d690c9cf2a5377ebd129e005c15403a2b9b01ebf04a/lirconian-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e21b95758a15e01852462ab949e872f0", "sha256": "4439b94a7a4ee2fe69c9d5394193d64c27c593c869565c8e5d7784def863955c"}, "downloads": -1, "filename": "lirconian-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e21b95758a15e01852462ab949e872f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17037, "upload_time": "2017-06-29T15:39:43", "upload_time_iso_8601": "2017-06-29T15:39:43.189815Z", "url": "https://files.pythonhosted.org/packages/ff/5e/51362ca7eeeef7d20d690c9cf2a5377ebd129e005c15403a2b9b01ebf04a/lirconian-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:21 2020"}