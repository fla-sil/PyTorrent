{"info": {"author": "Lior P. Abitbol", "author_email": "liorabitbol@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "vmwvro\r\n======\r\n\r\nA simple api library to interface with VMware vRealize Orchestrator (vRO).\r\n\r\nFeatures\r\n--------\r\n\r\nWhat you can do with ``vmwvro``:\r\n\r\n* get workflow information\r\n* start a workflow\r\n* monitor a workflow run\r\n\r\nDependencies\r\n------------\r\n\r\n* Python 3.x\r\n* `requests v2.14.2 <http://docs.python-requests.org/en/master/>`_\r\n\r\nInstallation\r\n------------\r\n\r\n``vmwvro`` is available on the\r\n`Python Package Index <http://pypi.python.org/pypi/vmwvro/>`_\r\n\r\n.. code-block:: python\r\n\r\n    $ pip install vmwvro\r\n\r\nUsage\r\n-----\r\n\r\nCreate a Session object. Session object contains the Url and authentication information for the VMware vRealize Orchestrator appliance.\r\n\r\n.. code-block:: python\r\n\r\n    from vmwvro import Session\r\n\r\n    vro_url = 'https://some_vro_server:8281'\r\n    vro_usr = 'some_user'\r\n    vro_pwd = 'some_password'\r\n\r\n    session = Session(url=vro_url, username=vro_usr, password=vro_pwd)\r\n\r\nCreate a Client object and pass in the session object. Client object exposes methods to interact with VMware vRealize Orchestrator.\r\n\r\n.. code-block:: python\r\n\r\n    from vmwvro import Client\r\n\r\n    client = Client(session)\r\n\r\nStart a workflow - without any parameters.\r\n\r\n.. code-block:: python\r\n\r\n    wf = client.get_workflow(workflow_id)\r\n\r\n    wf_run = wf.start()\r\n    print(\"Workflow state: %s\" % wf_run.state)\r\n\r\nStart a workflow - with parameters.\r\n\r\n.. code-block:: python\r\n\r\n    from vmwvro.workflows import WorkflowParameters\r\n\r\n    param = WorkflowParameters()\r\n    param.add(name=\"vmname\", value=\"some_vm_name\", _type=\"VC:VirtualMachine\")\r\n    param.add(name=\"user\", \"some_user\")\r\n\r\n    wf_run = wf.start(param)\r\n    print(\"Workflow state: %s\" % wf_run.state)\r\n\r\nWait for a workflow to complete.\r\n\r\n.. code-block:: python\r\n\r\n    wf_run.wait_until_complete()\r\n    print(\"Workflow completed with state: %s\" % wf_run.state)", "description_content_type": null, "docs_url": "https://pythonhosted.org/vmwvro/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/vmwvro", "keywords": "vmware vro vrealize orchestrator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vmwvro", "package_url": "https://pypi.org/project/vmwvro/", "platform": "", "project_url": "https://pypi.org/project/vmwvro/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/vmwvro"}, "release_url": "https://pypi.org/project/vmwvro/1.0.1b1/", "requires_dist": null, "requires_python": "", "summary": "A simple Python library to interface with VMware vRealize Orchestrator", "version": "1.0.1b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple api library to interface with VMware vRealize Orchestrator (vRO).</p>\n<div id=\"features\">\n<h2>Features</h2>\n<p>What you can do with <tt>vmwvro</tt>:</p>\n<ul>\n<li>get workflow information</li>\n<li>start a workflow</li>\n<li>monitor a workflow run</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Python 3.x</li>\n<li><a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests v2.14.2</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>vmwvro</tt> is available on the\n<a href=\"http://pypi.python.org/pypi/vmwvro/\" rel=\"nofollow\">Python Package Index</a></p>\n<pre><span class=\"err\">$</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">vmwvro</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a Session object. Session object contains the Url and authentication information for the VMware vRealize Orchestrator appliance.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vmwvro</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n<span class=\"n\">vro_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://some_vro_server:8281'</span>\n<span class=\"n\">vro_usr</span> <span class=\"o\">=</span> <span class=\"s1\">'some_user'</span>\n<span class=\"n\">vro_pwd</span> <span class=\"o\">=</span> <span class=\"s1\">'some_password'</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">vro_url</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">vro_usr</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">vro_pwd</span><span class=\"p\">)</span>\n</pre>\n<p>Create a Client object and pass in the session object. Client object exposes methods to interact with VMware vRealize Orchestrator.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vmwvro</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">)</span>\n</pre>\n<p>Start a workflow - without any parameters.</p>\n<pre><span class=\"n\">wf</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_workflow</span><span class=\"p\">(</span><span class=\"n\">workflow_id</span><span class=\"p\">)</span>\n\n<span class=\"n\">wf_run</span> <span class=\"o\">=</span> <span class=\"n\">wf</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Workflow state: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">wf_run</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">)</span>\n</pre>\n<p>Start a workflow - with parameters.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vmwvro.workflows</span> <span class=\"kn\">import</span> <span class=\"n\">WorkflowParameters</span>\n\n<span class=\"n\">param</span> <span class=\"o\">=</span> <span class=\"n\">WorkflowParameters</span><span class=\"p\">()</span>\n<span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"vmname\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"some_vm_name\"</span><span class=\"p\">,</span> <span class=\"n\">_type</span><span class=\"o\">=</span><span class=\"s2\">\"VC:VirtualMachine\"</span><span class=\"p\">)</span>\n<span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"user\"</span><span class=\"p\">,</span> <span class=\"s2\">\"some_user\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">wf_run</span> <span class=\"o\">=</span> <span class=\"n\">wf</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Workflow state: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">wf_run</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">)</span>\n</pre>\n<p>Wait for a workflow to complete.</p>\n<pre><span class=\"n\">wf_run</span><span class=\"o\">.</span><span class=\"n\">wait_until_complete</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Workflow completed with state: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">wf_run</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2897113, "releases": {"1.0.0b1": [{"comment_text": "", "digests": {"md5": "8ff85348557125a77741bbd276b1e7cf", "sha256": "047f2662c6ea45ba52baee155426fdc440e01f4bcbd94318dd69c2c340e0dfb2"}, "downloads": -1, "filename": "vmwvro-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "8ff85348557125a77741bbd276b1e7cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8196, "upload_time": "2017-05-24T17:58:07", "upload_time_iso_8601": "2017-05-24T17:58:07.133147Z", "url": "https://files.pythonhosted.org/packages/f3/97/3e061a55146846e94de682d8a9aab369b516057a298d7c3ce9af49d3c8c9/vmwvro-1.0.0b1.tar.gz", "yanked": false}], "1.0.1b1": [{"comment_text": "", "digests": {"md5": "d8b80b5a1c4830e2d0e73128304d5a77", "sha256": "d9d8a75390458e273d0ebc9f93b8c25d804ec9adf29b7875ee6e2ce7483c28e5"}, "downloads": -1, "filename": "vmwvro-1.0.1b1.tar.gz", "has_sig": false, "md5_digest": "d8b80b5a1c4830e2d0e73128304d5a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8183, "upload_time": "2017-05-24T18:20:30", "upload_time_iso_8601": "2017-05-24T18:20:30.853751Z", "url": "https://files.pythonhosted.org/packages/3f/10/fd2a3cb09acfd13c4ee7860829c059d377272f105cac8fce3ab1e0e8af82/vmwvro-1.0.1b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8b80b5a1c4830e2d0e73128304d5a77", "sha256": "d9d8a75390458e273d0ebc9f93b8c25d804ec9adf29b7875ee6e2ce7483c28e5"}, "downloads": -1, "filename": "vmwvro-1.0.1b1.tar.gz", "has_sig": false, "md5_digest": "d8b80b5a1c4830e2d0e73128304d5a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8183, "upload_time": "2017-05-24T18:20:30", "upload_time_iso_8601": "2017-05-24T18:20:30.853751Z", "url": "https://files.pythonhosted.org/packages/3f/10/fd2a3cb09acfd13c4ee7860829c059d377272f105cac8fce3ab1e0e8af82/vmwvro-1.0.1b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:41 2020"}