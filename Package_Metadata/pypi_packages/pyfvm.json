{"info": {"author": "Nico Schl\u00f6mer", "author_email": "nico.schloemer@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Mathematics"], "description": "# pyfvm\n\n[![CircleCI](https://img.shields.io/circleci/project/github/nschloe/pyfvm.svg?style=flat-square)](https://circleci.com/gh/nschloe/pyfvm)\n[![codecov](https://img.shields.io/codecov/c/github/nschloe/pyfvm.svg?style=flat-square)](https://codecov.io/gh/nschloe/pyfvm)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pyfvm.svg?style=flat-square)](https://pypi.org/pypi/pyfvm/)\n[![PyPi Version](https://img.shields.io/pypi/v/pyfvm.svg?style=flat-square)](https://pypi.org/project/pyfvm)\n[![GitHub stars](https://img.shields.io/github/stars/nschloe/pyfvm.svg?style=flat-square&logo=github&label=Stars)](https://github.com/nschloe/pyfvm)\n[![PyPi downloads](https://img.shields.io/pypi/dm/pyfvm.svg?style=flat-square)](https://pypistats.org/packages/pyfvm)\n\nCreating finite volume equation systems with ease.\n\npyfvm provides everything that is needed for setting up finite volume equation systems.\nThe user needs to specify the finite volume formulation in a configuration file, and\npyfvm will create the matrix/right-hand side or the nonlinear system for it. This\npackage is for everyone who wants to quickly construct FVM systems.\n\n### Examples\n\n#### Linear equation systems\n\npyfvm works by specifying the residuals, so for solving Poisson's equation with\nDirichlet boundary conditions, simply do\n```python,test\nimport pyfvm\nfrom pyfvm.form_language import *\nimport meshzoo\nfrom scipy.sparse import linalg\nimport meshplex\n\nclass Poisson(object):\n    def apply(self, u):\n        return integrate(lambda x: -n_dot_grad(u(x)), dS) \\\n             - integrate(lambda x: 1.0, dV)\n\n    def dirichlet(self, u):\n        return [(lambda x: u(x) - 0.0, Boundary())]\n\n# Create mesh using meshzoo\nvertices, cells = meshzoo.rectangle(0.0, 2.0, 0.0, 1.0, 401, 201)\nmesh = meshplex.MeshTri(vertices, cells)\n\nmatrix, rhs = pyfvm.discretize_linear(Poisson(), mesh)\n\nu = linalg.spsolve(matrix, rhs)\n\nmesh.write('out.vtk', point_data={'u': u})\n```\nThis example uses [meshzoo](https://pypi.org/project/meshzoo) for creating a simple\nmesh, but anything else that provides vertices and cells works as well. For example,\nreading from a wide variety of mesh files is supported (via\n[meshio](https://pypi.org/project/meshio)):\n```python\nmesh = meshplex.read(\"pacman.e\")\n```\nLikewise, [PyAMG](https://github.com/pyamg/pyamg) is a much faster solver\nfor this problem\n```\nimport pyamg\nml = pyamg.smoothed_aggregation_solver(linear_system.matrix)\nu = ml.solve(linear_system.rhs, tol=1e-10)\n```\n\nMore examples are contained in the [examples directory](examples/).\n\n#### Nonlinear equation systems\nNonlinear systems are treated almost equally; only the discretization and\nobviously the solver call is different. For Bratu's problem:\n```python,test\nimport pyfvm\nfrom pyfvm.form_language import *\nimport meshzoo\nimport numpy\nfrom sympy import exp\nimport meshplex\n\nclass Bratu(object):\n    def apply(self, u):\n        return integrate(lambda x: -n_dot_grad(u(x)), dS) \\\n             - integrate(lambda x: 2.0 * exp(u(x)), dV)\n\n    def dirichlet(self, u):\n        return [(u, Boundary())]\n\nvertices, cells = meshzoo.rectangle(0.0, 2.0, 0.0, 1.0, 101, 51)\nmesh = meshplex.MeshTri(vertices, cells)\n\nf, jacobian = pyfvm.discretize(Bratu(), mesh)\n\ndef jacobian_solver(u0, rhs):\n    from scipy.sparse import linalg\n    jac = jacobian.get_linear_operator(u0)\n    return linalg.spsolve(jac, rhs)\n\nu0 = numpy.zeros(len(vertices))\nu = pyfvm.newton(f.eval, jacobian_solver, u0)\n\nmesh.write('out.vtk', point_data={'u': u})\n```\nNote that the Jacobian is computed symbolically from the `Bratu` class.\n\nInstead of `pyfvm.newton`, you can use any solver that accepts the residual\ncomputation `f.eval`, e.g.,\n```\nimport scipy.optimize\nu = scipy.optimize.newton_krylov(f.eval, u0)\n```\n\n### Installation\n\npyfvm is [available from the Python Package\nIndex](https://pypi.org/project/pyfvm/), so simply type\n```\npip install pyfvm\n```\nto install.\n\n### Testing\n\nTo run the tests, check out this repository and type\n```\npytest\n```\n\n### License\n\npyfvm is published under the [MIT license](https://en.wikipedia.org/wiki/MIT_License).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nschloe/pyfvm", "keywords": "", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "pyfvm", "package_url": "https://pypi.org/project/pyfvm/", "platform": "any", "project_url": "https://pypi.org/project/pyfvm/", "project_urls": {"Homepage": "https://github.com/nschloe/pyfvm"}, "release_url": "https://pypi.org/project/pyfvm/0.3.1/", "requires_dist": ["sphinxcontrib-bibtex", "meshplex", "numpy", "scipy", "sympy"], "requires_python": ">=3.6", "summary": "Finite volume discretizations for Python", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyfvm</h1>\n<p><a href=\"https://circleci.com/gh/nschloe/pyfvm\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9e0b9d8198c85ce66a5cb609580f428275281a8/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6e7363686c6f652f707966766d2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://codecov.io/gh/nschloe/pyfvm\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8439607f7e788a8f82caa8068cb762a0eec74b99/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6e7363686c6f652f707966766d2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c326c58e924b9f3508f32a8ac6b3ee91f40b090/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/pypi/pyfvm/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c0273d64b65704640e4f49b39fdf2d8d799182d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707966766d2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/pyfvm\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69b751509c216de8f907ec8956368a74eb9f09a3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707966766d2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/nschloe/pyfvm\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a3f36e3e232195af9662fda7a4c4300b8f8ee90/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6e7363686c6f652f707966766d2e7376673f7374796c653d666c61742d737175617265266c6f676f3d676974687562266c6162656c3d5374617273\"></a>\n<a href=\"https://pypistats.org/packages/pyfvm\" rel=\"nofollow\"><img alt=\"PyPi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ff0bcb2f8c7044f88cb8c121c1958c7fb307c49/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707966766d2e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>Creating finite volume equation systems with ease.</p>\n<p>pyfvm provides everything that is needed for setting up finite volume equation systems.\nThe user needs to specify the finite volume formulation in a configuration file, and\npyfvm will create the matrix/right-hand side or the nonlinear system for it. This\npackage is for everyone who wants to quickly construct FVM systems.</p>\n<h3>Examples</h3>\n<h4>Linear equation systems</h4>\n<p>pyfvm works by specifying the residuals, so for solving Poisson's equation with\nDirichlet boundary conditions, simply do</p>\n<pre>import pyfvm\nfrom pyfvm.form_language import *\nimport meshzoo\nfrom scipy.sparse import linalg\nimport meshplex\n\nclass Poisson(object):\n    def apply(self, u):\n        return integrate(lambda x: -n_dot_grad(u(x)), dS) \\\n             - integrate(lambda x: 1.0, dV)\n\n    def dirichlet(self, u):\n        return [(lambda x: u(x) - 0.0, Boundary())]\n\n# Create mesh using meshzoo\nvertices, cells = meshzoo.rectangle(0.0, 2.0, 0.0, 1.0, 401, 201)\nmesh = meshplex.MeshTri(vertices, cells)\n\nmatrix, rhs = pyfvm.discretize_linear(Poisson(), mesh)\n\nu = linalg.spsolve(matrix, rhs)\n\nmesh.write('out.vtk', point_data={'u': u})\n</pre>\n<p>This example uses <a href=\"https://pypi.org/project/meshzoo\" rel=\"nofollow\">meshzoo</a> for creating a simple\nmesh, but anything else that provides vertices and cells works as well. For example,\nreading from a wide variety of mesh files is supported (via\n<a href=\"https://pypi.org/project/meshio\" rel=\"nofollow\">meshio</a>):</p>\n<pre><span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"n\">meshplex</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s2\">\"pacman.e\"</span><span class=\"p\">)</span>\n</pre>\n<p>Likewise, <a href=\"https://github.com/pyamg/pyamg\" rel=\"nofollow\">PyAMG</a> is a much faster solver\nfor this problem</p>\n<pre><code>import pyamg\nml = pyamg.smoothed_aggregation_solver(linear_system.matrix)\nu = ml.solve(linear_system.rhs, tol=1e-10)\n</code></pre>\n<p>More examples are contained in the <a href=\"examples/\" rel=\"nofollow\">examples directory</a>.</p>\n<h4>Nonlinear equation systems</h4>\n<p>Nonlinear systems are treated almost equally; only the discretization and\nobviously the solver call is different. For Bratu's problem:</p>\n<pre>import pyfvm\nfrom pyfvm.form_language import *\nimport meshzoo\nimport numpy\nfrom sympy import exp\nimport meshplex\n\nclass Bratu(object):\n    def apply(self, u):\n        return integrate(lambda x: -n_dot_grad(u(x)), dS) \\\n             - integrate(lambda x: 2.0 * exp(u(x)), dV)\n\n    def dirichlet(self, u):\n        return [(u, Boundary())]\n\nvertices, cells = meshzoo.rectangle(0.0, 2.0, 0.0, 1.0, 101, 51)\nmesh = meshplex.MeshTri(vertices, cells)\n\nf, jacobian = pyfvm.discretize(Bratu(), mesh)\n\ndef jacobian_solver(u0, rhs):\n    from scipy.sparse import linalg\n    jac = jacobian.get_linear_operator(u0)\n    return linalg.spsolve(jac, rhs)\n\nu0 = numpy.zeros(len(vertices))\nu = pyfvm.newton(f.eval, jacobian_solver, u0)\n\nmesh.write('out.vtk', point_data={'u': u})\n</pre>\n<p>Note that the Jacobian is computed symbolically from the <code>Bratu</code> class.</p>\n<p>Instead of <code>pyfvm.newton</code>, you can use any solver that accepts the residual\ncomputation <code>f.eval</code>, e.g.,</p>\n<pre><code>import scipy.optimize\nu = scipy.optimize.newton_krylov(f.eval, u0)\n</code></pre>\n<h3>Installation</h3>\n<p>pyfvm is <a href=\"https://pypi.org/project/pyfvm/\" rel=\"nofollow\">available from the Python Package\nIndex</a>, so simply type</p>\n<pre><code>pip install pyfvm\n</code></pre>\n<p>to install.</p>\n<h3>Testing</h3>\n<p>To run the tests, check out this repository and type</p>\n<pre><code>pytest\n</code></pre>\n<h3>License</h3>\n<p>pyfvm is published under the <a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6689319, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "27b9e9ce4e058ce146671e106f9e749b", "sha256": "5b63aea33ca6b81b0c03e9034b25701d9dfaa6def5aa58a5a12eddce3b35d18b"}, "downloads": -1, "filename": "pyfvm-0.1.0.tar.gz", "has_sig": true, "md5_digest": "27b9e9ce4e058ce146671e106f9e749b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23275, "upload_time": "2016-06-20T13:53:13", "upload_time_iso_8601": "2016-06-20T13:53:13.427408Z", "url": "https://files.pythonhosted.org/packages/93/94/455f7d914eb0e7a48dc7101dc908a5090cd6dbd78c25b0943bf710d58bff/pyfvm-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0a211b18882582a23a5132fc1cb78979", "sha256": "8c9e4115986359754b0a1b2b23f84328fc882c7ec89e540ca39aa084d1fd7a9b"}, "downloads": -1, "filename": "PyFVM-0.2.0.tar.gz", "has_sig": true, "md5_digest": "0a211b18882582a23a5132fc1cb78979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13945, "upload_time": "2017-05-26T11:13:42", "upload_time_iso_8601": "2017-05-26T11:13:42.401821Z", "url": "https://files.pythonhosted.org/packages/ca/5c/8d2ec311b199202641931e045fc3cc02578e8cf0974dec1f7ea2d360bc58/PyFVM-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "faa874b3ab6060cc38bc35708a968dbe", "sha256": "8001cba3467058ddc1f81e114dcc90e0a8081a1bf64f87e0381f0e5cfb7fe35b"}, "downloads": -1, "filename": "PyFVM-0.2.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "faa874b3ab6060cc38bc35708a968dbe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17983, "upload_time": "2017-05-26T13:01:51", "upload_time_iso_8601": "2017-05-26T13:01:51.871577Z", "url": "https://files.pythonhosted.org/packages/90/73/f7db62ed4ecb311d2bcdb26cec4c4c20ed113799e51f3daf47b5569a42f5/PyFVM-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "a0e0666b0ecd733e44e12eae9ee9966d", "sha256": "f722b6dbb6e73aeb2e4490752da0f3e7cbc8c13fe7332ff19fe636ddec9f0dac"}, "downloads": -1, "filename": "PyFVM-0.2.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "a0e0666b0ecd733e44e12eae9ee9966d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17793, "upload_time": "2017-05-27T21:23:54", "upload_time_iso_8601": "2017-05-27T21:23:54.532023Z", "url": "https://files.pythonhosted.org/packages/05/75/ccd101fd4ce8234bb22ab9a6d93a03ff11d08cd608303a50e126f8b8041d/PyFVM-0.2.2-py2.py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "70e4773763d2e71671ee75040113051c", "sha256": "45b887465c9f0d68fc750599f72301c6ef3157b47875f2b5d309d39fb5bfbc04"}, "downloads": -1, "filename": "PyFVM-0.2.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "70e4773763d2e71671ee75040113051c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17547, "upload_time": "2017-05-29T21:12:10", "upload_time_iso_8601": "2017-05-29T21:12:10.738851Z", "url": "https://files.pythonhosted.org/packages/c4/12/d15678b973cfde5e4fad57abba9023400f82091cd62a0ae3daf0fb43534f/PyFVM-0.2.3-py2.py3-none-any.whl", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "a365f6c94f81324566bf47f2978c1250", "sha256": "26ff181ae0dde28098b12c98e6312a97ea067d4a84b932465c6bed949296c60f"}, "downloads": -1, "filename": "pyfvm-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a365f6c94f81324566bf47f2978c1250", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17615, "upload_time": "2018-06-25T20:55:46", "upload_time_iso_8601": "2018-06-25T20:55:46.048046Z", "url": "https://files.pythonhosted.org/packages/8d/67/91286780a7ac46bbb7c6ae87f21e5b7114f22d8e13efed8b847ac3c4a382/pyfvm-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f43f7a5c29917324a0a8ede78cbc1c40", "sha256": "3690628a88fa4b22590f73f462443c1713611ea13fd8df3d462999fb922b671c"}, "downloads": -1, "filename": "pyfvm-0.2.4.tar.gz", "has_sig": false, "md5_digest": "f43f7a5c29917324a0a8ede78cbc1c40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13757, "upload_time": "2018-06-25T20:55:47", "upload_time_iso_8601": "2018-06-25T20:55:47.309920Z", "url": "https://files.pythonhosted.org/packages/84/3c/3fd813944cdc49c9f7d46949c73f7d6a1ef68e478e551b21f60a9cec38d8/pyfvm-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "0ba108ec73e4153127a45d007d84c29e", "sha256": "f026061192c51ba4baf6054604a64ef41215c6894baea8283fab2dda3dc194de"}, "downloads": -1, "filename": "pyfvm-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ba108ec73e4153127a45d007d84c29e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17362, "upload_time": "2018-09-01T08:52:59", "upload_time_iso_8601": "2018-09-01T08:52:59.001758Z", "url": "https://files.pythonhosted.org/packages/64/b0/d1a30037d99cc0176771d65a196062161646360872b6af3b687c29ff8b9c/pyfvm-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "644f62bf657ad377b6647e90540fa000", "sha256": "76a1de6ae09585ae20f96ba9c71f3d0e0304213c207ab01fdbe1d7f2e44903e5"}, "downloads": -1, "filename": "pyfvm-0.2.5.tar.gz", "has_sig": false, "md5_digest": "644f62bf657ad377b6647e90540fa000", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16629, "upload_time": "2018-09-01T08:53:00", "upload_time_iso_8601": "2018-09-01T08:53:00.533770Z", "url": "https://files.pythonhosted.org/packages/d4/19/5244898207c9dcd58fb45d7fc6d8413efd7eadd9c1276a76780c7ab5e277/pyfvm-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a705cc2cb320b1eab289385ab308f412", "sha256": "1145da9593ab7b83f5a2415cafc96b8cb1b586f7f2a4f8a9a3231b9a31b0a994"}, "downloads": -1, "filename": "pyfvm-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a705cc2cb320b1eab289385ab308f412", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 16055, "upload_time": "2020-01-17T15:06:41", "upload_time_iso_8601": "2020-01-17T15:06:41.931424Z", "url": "https://files.pythonhosted.org/packages/a2/55/539abebe7886607671042124939a7167f436432f9c0baade5ddb6cd997e2/pyfvm-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fcfe63634af3775c2138bbb5d752b51", "sha256": "0af42b220ac341c501235500f5974c386dcca627386ac01f9a19e75702c46879"}, "downloads": -1, "filename": "pyfvm-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3fcfe63634af3775c2138bbb5d752b51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16064, "upload_time": "2020-02-24T15:46:01", "upload_time_iso_8601": "2020-02-24T15:46:01.429792Z", "url": "https://files.pythonhosted.org/packages/62/39/8953967656155136da1093f275e034bddf6d0afac3a5664ee30d868195fe/pyfvm-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a19cd2d4f1a56f0908e55061a708bef", "sha256": "8fc1a395fd46a1de3683d70e163a902f7c45b8e85a1dffa0f98b3c4906f078a6"}, "downloads": -1, "filename": "pyfvm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8a19cd2d4f1a56f0908e55061a708bef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17885, "upload_time": "2020-01-17T15:06:43", "upload_time_iso_8601": "2020-01-17T15:06:43.683765Z", "url": "https://files.pythonhosted.org/packages/54/c4/edb1df017bdf200d236d19902145a245ca3ae09b98505efcc5fe80d8ff09/pyfvm-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "4ed18b533b73821c623f8a92bde176b2", "sha256": "ed664acac4edbcb1959ab3dff7bf6bdcdd08bef8ca1bd0db4ca5728fcc0f593a"}, "downloads": -1, "filename": "pyfvm-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4ed18b533b73821c623f8a92bde176b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16062, "upload_time": "2020-02-24T15:46:32", "upload_time_iso_8601": "2020-02-24T15:46:32.687805Z", "url": "https://files.pythonhosted.org/packages/96/44/2cbc867ee6793d23441d5ce684ff291b4c4b97059c37a17f69b4496872db/pyfvm-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e3a05abf39e602e2d30e1907476ee61", "sha256": "b2c293ba18eb502e9411ff0ad0af1c24561eda40415f972f6e2767b70662a36c"}, "downloads": -1, "filename": "pyfvm-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0e3a05abf39e602e2d30e1907476ee61", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18595, "upload_time": "2020-02-24T15:46:34", "upload_time_iso_8601": "2020-02-24T15:46:34.363106Z", "url": "https://files.pythonhosted.org/packages/a7/4f/bcfb102e2b26e9bf07062d3afacf5f0378e5f01d88df79bfea0120d43366/pyfvm-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ed18b533b73821c623f8a92bde176b2", "sha256": "ed664acac4edbcb1959ab3dff7bf6bdcdd08bef8ca1bd0db4ca5728fcc0f593a"}, "downloads": -1, "filename": "pyfvm-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4ed18b533b73821c623f8a92bde176b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16062, "upload_time": "2020-02-24T15:46:32", "upload_time_iso_8601": "2020-02-24T15:46:32.687805Z", "url": "https://files.pythonhosted.org/packages/96/44/2cbc867ee6793d23441d5ce684ff291b4c4b97059c37a17f69b4496872db/pyfvm-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e3a05abf39e602e2d30e1907476ee61", "sha256": "b2c293ba18eb502e9411ff0ad0af1c24561eda40415f972f6e2767b70662a36c"}, "downloads": -1, "filename": "pyfvm-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0e3a05abf39e602e2d30e1907476ee61", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18595, "upload_time": "2020-02-24T15:46:34", "upload_time_iso_8601": "2020-02-24T15:46:34.363106Z", "url": "https://files.pythonhosted.org/packages/a7/4f/bcfb102e2b26e9bf07062d3afacf5f0378e5f01d88df79bfea0120d43366/pyfvm-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:24 2020"}