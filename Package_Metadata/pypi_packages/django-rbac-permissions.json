{"info": {"author": "Can Arsoy", "author_email": "can@voltlines.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# Django RBAC Permissions\n\nA Django package which enables RBAC with hierarchy and constraints enabled.\n\nQuick Start\n-----------\n\n1. Add ```django_rbac_permissions``` to your INSTALLED_APPS setting like this:\n   ```python\n   INSTALLED_APPS = [\n        ...\n        'django_rbac_permissions',\n        'django_json_widget'  # Optional\n   ]\n\t  ```\n  \n   If you want to see your JSONFields in a pretty widget, include \n   ```django_json_widget``` in your INSTALLED_APPS as well.\n\n2. Run ```python manage.py migrate``` to create the models.\n\n3. If you want to define your modules (applications) in which you have\n   resources which should check for role authorization, you must define\n   a module configuration model. Ex:\n   ```python\n   class RoleModuleConfiguration(models.Model):\n         posts = models.BooleanField(default=True)\n         users = models.BooleanField(default=True)\n         role_name = models.CharField(max_length=255)\n   ```\n   \n   Each BooleanField symbolizes a module (application) and decides whether\n   the given role_name is authorized to access it.\n\n   You must also set ```MODULE_CONFIGURATION_PATH``` as the path, in which your model is residing.\n\n4. If you also want to control the authorization in your admin page, you must\n   add the middleware class ```CheckAdminRoleAuthorizationMiddleware``` to your\n   MIDDLEWARE configuration in your Django settings file:\n   ```python\n    MIDDLEWARE = [\n    ...\n    'rbac_permissions.middleware.CheckAdminRoleAuthorizationMiddleware'\n    ]\n   ```\n\n5. There are some optional configuration parameters that you can set in your settings.py file.\n- ```GRANT_NONEXISTENT_PATH_ACCESS``` decides whether you want to grant access to a nonexistent resource (in this case, this means either the url does not exist or the url is not added to any Transaction yet.) The default is ```False```.\n- ```PERMISSION_DENIED_URL``` sets the url name of your view, which returns a HTTP_FORBIDDEN_403 status code. This will be the view, which will be redirected by the decorator ```user_groups_required```, if the user is denied access. The default is ```permission-denied```.\n- ```HTTP_FORBIDDEN_MESSAGE``` is the default message when the user is denied access. Completely optional.\n- ```ROLE_RULE_DENIED_ACCESS_MESSAGE``` is the message returned by the view, when the required role matches one of the user's roles, but the current rule set of the Transaction denies access to this user's role or roles. Completely optional.\n\n6. Start the development server and visit http://127.0.0.1:8000/admin/\n   to create a Role or Transaction.\n\nNotes\n-----\n\nIf you internally route your views to other views in your application, there seems \nto be a bug related to Django's authentication backends, which results in removing the current user from the request context.\nSo if you are using this pattern often in your code, make sure you pass 'rbac_user={current_user_id}' as a query parameter, so that the current authenticated user is fetched from the database instead from the request object.\n\nThis is a temporary solution, will be trying to find a more suitable solution.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD-3-Clause  # Example license", "maintainer": "", "maintainer_email": "", "name": "django-rbac-permissions", "package_url": "https://pypi.org/project/django-rbac-permissions/", "platform": "", "project_url": "https://pypi.org/project/django-rbac-permissions/", "project_urls": null, "release_url": "https://pypi.org/project/django-rbac-permissions/0.4/", "requires_dist": null, "requires_python": "", "summary": "A Django app which enables RBAC authorization.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django RBAC Permissions</h1>\n<p>A Django package which enables RBAC with hierarchy and constraints enabled.</p>\n<h2>Quick Start</h2>\n<ol>\n<li>\n<p>Add <code>django_rbac_permissions</code> to your INSTALLED_APPS setting like this:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n     <span class=\"o\">...</span>\n     <span class=\"s1\">'django_rbac_permissions'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'django_json_widget'</span>  <span class=\"c1\"># Optional</span>\n<span class=\"p\">]</span>\n</pre>\n<p>If you want to see your JSONFields in a pretty widget, include\n<code>django_json_widget</code> in your INSTALLED_APPS as well.</p>\n</li>\n<li>\n<p>Run <code>python manage.py migrate</code> to create the models.</p>\n</li>\n<li>\n<p>If you want to define your modules (applications) in which you have\nresources which should check for role authorization, you must define\na module configuration model. Ex:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">RoleModuleConfiguration</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n      <span class=\"n\">posts</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n      <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n      <span class=\"n\">role_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n</pre>\n<p>Each BooleanField symbolizes a module (application) and decides whether\nthe given role_name is authorized to access it.</p>\n<p>You must also set <code>MODULE_CONFIGURATION_PATH</code> as the path, in which your model is residing.</p>\n</li>\n<li>\n<p>If you also want to control the authorization in your admin page, you must\nadd the middleware class <code>CheckAdminRoleAuthorizationMiddleware</code> to your\nMIDDLEWARE configuration in your Django settings file:</p>\n<pre> <span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n <span class=\"o\">...</span>\n <span class=\"s1\">'rbac_permissions.middleware.CheckAdminRoleAuthorizationMiddleware'</span>\n <span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>There are some optional configuration parameters that you can set in your settings.py file.</p>\n</li>\n</ol>\n<ul>\n<li><code>GRANT_NONEXISTENT_PATH_ACCESS</code> decides whether you want to grant access to a nonexistent resource (in this case, this means either the url does not exist or the url is not added to any Transaction yet.) The default is <code>False</code>.</li>\n<li><code>PERMISSION_DENIED_URL</code> sets the url name of your view, which returns a HTTP_FORBIDDEN_403 status code. This will be the view, which will be redirected by the decorator <code>user_groups_required</code>, if the user is denied access. The default is <code>permission-denied</code>.</li>\n<li><code>HTTP_FORBIDDEN_MESSAGE</code> is the default message when the user is denied access. Completely optional.</li>\n<li><code>ROLE_RULE_DENIED_ACCESS_MESSAGE</code> is the message returned by the view, when the required role matches one of the user's roles, but the current rule set of the Transaction denies access to this user's role or roles. Completely optional.</li>\n</ul>\n<ol>\n<li>Start the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nto create a Role or Transaction.</li>\n</ol>\n<h2>Notes</h2>\n<p>If you internally route your views to other views in your application, there seems\nto be a bug related to Django's authentication backends, which results in removing the current user from the request context.\nSo if you are using this pattern often in your code, make sure you pass 'rbac_user={current_user_id}' as a query parameter, so that the current authenticated user is fetched from the database instead from the request object.</p>\n<p>This is a temporary solution, will be trying to find a more suitable solution.</p>\n\n          </div>"}, "last_serial": 7016242, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "12735c415854f749ed8a24b9a72cf3a3", "sha256": "0aaad8b9372eecd160536758e5a148f66e775418c056b030d414179ffbff316d"}, "downloads": -1, "filename": "django_rbac_permissions-0.1.tar.gz", "has_sig": false, "md5_digest": "12735c415854f749ed8a24b9a72cf3a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9906, "upload_time": "2020-04-03T12:47:10", "upload_time_iso_8601": "2020-04-03T12:47:10.826645Z", "url": "https://files.pythonhosted.org/packages/fa/35/270b0ecff21f4f92454e9c87709ec10fdc2f213b48d524914028f69d2ea5/django_rbac_permissions-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b034771df6444a8f70eeec2f75dd07fc", "sha256": "da6660032765132436b7be4612416239e66793c9b66707af45dfffd679c43a61"}, "downloads": -1, "filename": "django_rbac_permissions-0.2.tar.gz", "has_sig": false, "md5_digest": "b034771df6444a8f70eeec2f75dd07fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10139, "upload_time": "2020-04-06T13:30:31", "upload_time_iso_8601": "2020-04-06T13:30:31.844079Z", "url": "https://files.pythonhosted.org/packages/53/e5/9acfbfd3ed15f21f92ce0cf6570a9721b8839eb20a9862ec21053db81d6c/django_rbac_permissions-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "58be6c70441e2f863fbbf130d6abd2a2", "sha256": "6e1151eb4db8eac5bde105fcedd2df26aa9d7f8b166e8a5cc434451622ddb932"}, "downloads": -1, "filename": "django_rbac_permissions-0.3.tar.gz", "has_sig": false, "md5_digest": "58be6c70441e2f863fbbf130d6abd2a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10273, "upload_time": "2020-04-09T21:16:34", "upload_time_iso_8601": "2020-04-09T21:16:34.136810Z", "url": "https://files.pythonhosted.org/packages/f0/89/b03c4aa8dc08f0ebde4e688d6b1ba56cb03c6ef617f3109ca275f5541923/django_rbac_permissions-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "bad1634e1d819ac06d8484882ebe03e7", "sha256": "9e7abc69fe6b12f43397b09111261eb4254e028f9ead6199609b890c0347654f"}, "downloads": -1, "filename": "django_rbac_permissions-0.4.tar.gz", "has_sig": false, "md5_digest": "bad1634e1d819ac06d8484882ebe03e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10641, "upload_time": "2020-04-14T10:49:42", "upload_time_iso_8601": "2020-04-14T10:49:42.152592Z", "url": "https://files.pythonhosted.org/packages/be/89/f008ed59b4fb4a29e88ef7bc330cc1e57ed7f12caeac5131223144b85292/django_rbac_permissions-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bad1634e1d819ac06d8484882ebe03e7", "sha256": "9e7abc69fe6b12f43397b09111261eb4254e028f9ead6199609b890c0347654f"}, "downloads": -1, "filename": "django_rbac_permissions-0.4.tar.gz", "has_sig": false, "md5_digest": "bad1634e1d819ac06d8484882ebe03e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10641, "upload_time": "2020-04-14T10:49:42", "upload_time_iso_8601": "2020-04-14T10:49:42.152592Z", "url": "https://files.pythonhosted.org/packages/be/89/f008ed59b4fb4a29e88ef7bc330cc1e57ed7f12caeac5131223144b85292/django_rbac_permissions-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:25 2020"}