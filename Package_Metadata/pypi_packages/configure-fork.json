{"info": {"author": "Andrey Popp, Alexander Solovyov, Alfred Santacatalina", "author_email": "Andrey Popp <8mayday@gmail.com>, Alexander Solovyov <alexander@solovyov.net>, Alfred Santacatalina <alfred82santa@gmail.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3.6"], "description": "=========\nConfigure\n=========\n\n**FORK** from https://github.com/andreypopp/configure\n\n**ORGINAL AUTHOR** Andrey Popp @andreypopp\n\nYAML configuration library which provides:\n\n* interpolation for string configuration values\n\n* configuration inheritance\n\n* configuration composition\n\n* object level configuration (like construct this object by calling some\n  function with some arguments)\n\n---------\nChangelog\n---------\n\n0.6.0\n-----\n\n* Added ENVVAR resolver in order to allow to use environment variables.\n\n    .. code-block:: yaml\n\n        config_field:!envvar PYTHON_PATH\n\n* Added implicit resover for ENVVAR resolver:\n\n    .. code-block:: yaml\n\n        config_field: ENV:PYTHON_PATH\n\n* Modified concat resolver to allow to use environment variables:\n\n    .. code-block:: yaml\n\n        config_field: ENV:HOME \"/app/\" ENV:OTHER_VAR var.in.python\n\n* Changed name in order to allow to publish on pypi\n\n0.5.1\n-----\n\n* Python3 (Python2 no compatible any more).\n\n* Concatenate variables on configuration:\n\n    .. code-block:: yaml\n\n        config_field:!concat var.in.python \"/relative/path\"\n\n\n* Support for implicit resolvers from PyYaml.\n\n* Added concat implicit resolver:\n\n    .. code-block:: yaml\n\n        config_field: var.in.python \"/relative/path\"\n\n0.5\n---\n\n* constructors and multi constructors now can be registered via\n  Configuration.add_constructor and Configuration.add_multi_constructor\n  decorators\n\n* fix serious bug with factory and obj directives: previously they dropped away\n  nested objects such as lists and/or mappings\n\n* configure_logging call now can be made inside config via !logging constructor\n\n* Configuration.configure() now called inside\n  Configuration.{from_file,from_string,from_dict}() class methods, controlled\n  via configure=True keyword argument\n\n0.4.8\n-----\n\n* handle kwargs in factory directive\n\n0.4.7\n-----\n\n* coerce filename to abs path\n* directory \u2014 check if it exists and create if not\n* interpolate config before YAML parsing\n\n0.4.6\n-----\n\n* bytesize\n\n0.4.5\n-----\n\n* bugfix release\n\n0.4.4\n-----\n\n* add PyYAML to requirements\n\n0.4.3\n-----\n\n* fix factories w/o args\n\n0.4.2\n-----\n\n* fix configuration of values inside sequences (lists)\n\n0.4.1\n-----\n\n* fix ``configure_logging`` formatters configuration\n\n0.4\n---\n\n* remove ``configure.module`` -- it was a bad idea to synthesize new Python\n  modules on a fly\n\n0.3.4\n-----\n\n* added ``configure.module`` module which allows exposing configuration as\n  synthesized Python module.\n\n\nDevelopment takes place at https://github.com/alfred82santa/configure\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alfred82santa/configure", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "configure-fork", "package_url": "https://pypi.org/project/configure-fork/", "platform": "", "project_url": "https://pypi.org/project/configure-fork/", "project_urls": {"Homepage": "https://github.com/alfred82santa/configure"}, "release_url": "https://pypi.org/project/configure-fork/0.6.0/", "requires_dist": ["pyyaml"], "requires_python": "", "summary": "configuration toolkit based on YAML", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>FORK</strong> from <a href=\"https://github.com/andreypopp/configure\" rel=\"nofollow\">https://github.com/andreypopp/configure</a></p>\n<p><strong>ORGINAL AUTHOR</strong> Andrey Popp @andreypopp</p>\n<p>YAML configuration library which provides:</p>\n<ul>\n<li>interpolation for string configuration values</li>\n<li>configuration inheritance</li>\n<li>configuration composition</li>\n<li>object level configuration (like construct this object by calling some\nfunction with some arguments)</li>\n</ul>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.6.0</h3>\n<ul>\n<li><p>Added ENVVAR resolver in order to allow to use environment variables.</p>\n<blockquote>\n<pre><span class=\"l-Scalar-Plain\">config_field:!envvar PYTHON_PATH</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Added implicit resover for ENVVAR resolver:</p>\n<blockquote>\n<pre><span class=\"nt\">config_field</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">ENV:PYTHON_PATH</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Modified concat resolver to allow to use environment variables:</p>\n<blockquote>\n<pre><span class=\"nt\">config_field</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">ENV:HOME \"/app/\" ENV:OTHER_VAR var.in.python</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Changed name in order to allow to publish on pypi</p>\n</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.5.1</h3>\n<ul>\n<li><p>Python3 (Python2 no compatible any more).</p>\n</li>\n<li><p>Concatenate variables on configuration:</p>\n<blockquote>\n<pre><span class=\"l-Scalar-Plain\">config_field:!concat var.in.python \"/relative/path\"</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Support for implicit resolvers from PyYaml.</p>\n</li>\n<li><p>Added concat implicit resolver:</p>\n<blockquote>\n<pre><span class=\"nt\">config_field</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">var.in.python \"/relative/path\"</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.5</h3>\n<ul>\n<li>constructors and multi constructors now can be registered via\nConfiguration.add_constructor and Configuration.add_multi_constructor\ndecorators</li>\n<li>fix serious bug with factory and obj directives: previously they dropped away\nnested objects such as lists and/or mappings</li>\n<li>configure_logging call now can be made inside config via !logging constructor</li>\n<li>Configuration.configure() now called inside\nConfiguration.{from_file,from_string,from_dict}() class methods, controlled\nvia configure=True keyword argument</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.4.8</h3>\n<ul>\n<li>handle kwargs in factory directive</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.4.7</h3>\n<ul>\n<li>coerce filename to abs path</li>\n<li>directory \u2014 check if it exists and create if not</li>\n<li>interpolate config before YAML parsing</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.4.6</h3>\n<ul>\n<li>bytesize</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.4.5</h3>\n<ul>\n<li>bugfix release</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.4.4</h3>\n<ul>\n<li>add PyYAML to requirements</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.4.3</h3>\n<ul>\n<li>fix factories w/o args</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.4.2</h3>\n<ul>\n<li>fix configuration of values inside sequences (lists)</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.4.1</h3>\n<ul>\n<li>fix <tt>configure_logging</tt> formatters configuration</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.4</h3>\n<ul>\n<li>remove <tt>configure.module</tt> \u2013 it was a bad idea to synthesize new Python\nmodules on a fly</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.3.4</h3>\n<ul>\n<li>added <tt>configure.module</tt> module which allows exposing configuration as\nsynthesized Python module.</li>\n</ul>\n<p>Development takes place at <a href=\"https://github.com/alfred82santa/configure\" rel=\"nofollow\">https://github.com/alfred82santa/configure</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4214317, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "d4976ac42d1bb426b3502fc9e0aabafb", "sha256": "5215672a9e0596b728d1bced0a1fd4bdcadf2bb517ad3dad265ba157e63b3dbe"}, "downloads": -1, "filename": "configure_fork-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4976ac42d1bb426b3502fc9e0aabafb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8046, "upload_time": "2018-08-28T10:05:36", "upload_time_iso_8601": "2018-08-28T10:05:36.820810Z", "url": "https://files.pythonhosted.org/packages/50/1b/59ab8c190e4e97ed36e4b05d580d734174ca5b64923fe12cc6b7d0980549/configure_fork-0.6.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4976ac42d1bb426b3502fc9e0aabafb", "sha256": "5215672a9e0596b728d1bced0a1fd4bdcadf2bb517ad3dad265ba157e63b3dbe"}, "downloads": -1, "filename": "configure_fork-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4976ac42d1bb426b3502fc9e0aabafb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8046, "upload_time": "2018-08-28T10:05:36", "upload_time_iso_8601": "2018-08-28T10:05:36.820810Z", "url": "https://files.pythonhosted.org/packages/50/1b/59ab8c190e4e97ed36e4b05d580d734174ca5b64923fe12cc6b7d0980549/configure_fork-0.6.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:43:52 2020"}