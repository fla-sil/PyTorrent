{"info": {"author": "Dilan Ozkaynak", "author_email": "DilanJames10@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PyColorPalette\n\nPyColorPalette is a Python 3 tool capable of pulling a list of the top colors, or the color at a specific index, from a given image through the process of K-means clustering. Images can be provided either through a direct path or from a URL. Along with the RGB/Hex color value, you have the option to also retreive the percentage of the image that specific color takes up. \n\n_**See examples below!**_\n\n## Usage\n\nPyColorPalette derives a color palette using K-means clustering to create a cluster map. To see the cluster map use ```show_clustering=True```. (Thank you, ZeevG)\n\n```python\nfrom PyColorPalette import ColorPalette\n\npal = ColorPalette(r\"/Users/user/Pictures/my_image.png\", show_clustering=False)\n#Use a raw string for Windows paths.\n\nprint(pal.get_top_colors(n=5, ratio=False, rounded=True))\n# [(251, 243, 230), (101, 50, 81), (59, 18, 48), (58, 17, 47), (60, 19, 49)]\n\nprint(pal.get_color(index=3, ratio=True, rounded=True))\n# ((58, 17, 47), 14)\n\n'''\nRetrieve values in hex.\n'''\nprint(pal.get_color(index=3, ratio=True, to_hex=True, rounded=False))\n# ('#3a112f', 14.1953125)\n```\n\n## Examples\n\n![Alt text](/examples/example1.jpg)\n![Alt text](/examples/ex_1_1.png?raw=true  \"\")\n![Alt text](/examples/ex_1_2.png?raw=true  \"\")\n![Alt text](/examples/ex_1_3.png?raw=true  \"\")\n![Alt text](/examples/ex_1_4.png?raw=true  \"\")\n![Alt text](/examples/ex_1_5.png?raw=true  \"\")\n\n![Alt text](/examples/example3.jpg)\n![Alt text](/examples/ex_3_1.png?raw=true  \"\")\n![Alt text](/examples/ex_3_2.png?raw=true  \"\")\n![Alt text](/examples/ex_3_3.png?raw=true  \"\")\n![Alt text](/examples/ex_3_4.png?raw=true  \"\")\n![Alt text](/examples/ex_3_5.png?raw=true  \"\")\n\n![Alt text](/examples/example2.png)\n![Alt text](/examples/ex_2_1.png?raw=true  \"\")\n![Alt text](/examples/ex_2_2.png?raw=true  \"\")\n![Alt text](/examples/ex_2_3.png?raw=true  \"\")\n\n## Dependencies\n\nPyColorPalette uses the Python Imaging Library (PIL) and numpy.\nTo Install:\n```\npip install Pillow \npip install numpy\n```\n(Pillow and PIL cannot co-exist in the same environment. Before installing Pillow, please uninstall PIL if previosuly installed.)\n\n## Installation\n\n```pip install PyColorPalette```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dilan1020/PyColorPalette", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PyColorPalette", "package_url": "https://pypi.org/project/PyColorPalette/", "platform": "", "project_url": "https://pypi.org/project/PyColorPalette/", "project_urls": {"Homepage": "https://github.com/Dilan1020/PyColorPalette"}, "release_url": "https://pypi.org/project/PyColorPalette/1.2.3/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyColorPalette</h1>\n<p>PyColorPalette is a Python 3 tool capable of pulling a list of the top colors, or the color at a specific index, from a given image through the process of K-means clustering. Images can be provided either through a direct path or from a URL. Along with the RGB/Hex color value, you have the option to also retreive the percentage of the image that specific color takes up.</p>\n<p><em><strong>See examples below!</strong></em></p>\n<h2>Usage</h2>\n<p>PyColorPalette derives a color palette using K-means clustering to create a cluster map. To see the cluster map use <code>show_clustering=True</code>. (Thank you, ZeevG)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyColorPalette</span> <span class=\"kn\">import</span> <span class=\"n\">ColorPalette</span>\n\n<span class=\"n\">pal</span> <span class=\"o\">=</span> <span class=\"n\">ColorPalette</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"/Users/user/Pictures/my_image.png\"</span><span class=\"p\">,</span> <span class=\"n\">show_clustering</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\">#Use a raw string for Windows paths.</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pal</span><span class=\"o\">.</span><span class=\"n\">get_top_colors</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">rounded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"c1\"># [(251, 243, 230), (101, 50, 81), (59, 18, 48), (58, 17, 47), (60, 19, 49)]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pal</span><span class=\"o\">.</span><span class=\"n\">get_color</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">rounded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"c1\"># ((58, 17, 47), 14)</span>\n\n<span class=\"sd\">'''</span>\n<span class=\"sd\">Retrieve values in hex.</span>\n<span class=\"sd\">'''</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pal</span><span class=\"o\">.</span><span class=\"n\">get_color</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">to_hex</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">rounded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span>\n<span class=\"c1\"># ('#3a112f', 14.1953125)</span>\n</pre>\n<h2>Examples</h2>\n<p><img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f64adc7b7c5be1da5866ef6483e796673c8d50d4/2f6578616d706c65732f6578616d706c65312e6a7067\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80919cb7f27c72498129e72ff61435f6a6785eb4/2f6578616d706c65732f65785f315f312e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8a4e8bcddf6f32375a7f2f3fe01560215d4837f/2f6578616d706c65732f65785f315f322e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/617f05a2222ce7bd1be2297f964a9db2c5685661/2f6578616d706c65732f65785f315f332e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ebb12ef9c978cd1a1915804285e97f3e5905608/2f6578616d706c65732f65785f315f342e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c845850f5f832a2a5231500cae5c5ae7843d46be/2f6578616d706c65732f65785f315f352e706e673f7261773d74727565\"></p>\n<p><img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c71e9403a16808b71f522a50433cfbc7228b3256/2f6578616d706c65732f6578616d706c65332e6a7067\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e1c275651bf092915b83d63205f9eb4bf6ca6f0/2f6578616d706c65732f65785f335f312e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/982abcf27b05bd74392c25da143af083e7338cf6/2f6578616d706c65732f65785f335f322e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/573b9a4b013d1f12130e424a9f967fa1ece3a542/2f6578616d706c65732f65785f335f332e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9591103a1f72d1f52b2521ac0b4c96d52e3b066/2f6578616d706c65732f65785f335f342e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3949f93a2697e160079f8293963ffe96b6573c0b/2f6578616d706c65732f65785f335f352e706e673f7261773d74727565\"></p>\n<p><img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b977023b362e40baf9bff88258e3c54a4734eadd/2f6578616d706c65732f6578616d706c65322e706e67\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4575bde9fe5c243911432366493f67bd34cc0ee3/2f6578616d706c65732f65785f325f312e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95bdaef749371011362b95fe3ce18c87f4f82d15/2f6578616d706c65732f65785f325f322e706e673f7261773d74727565\">\n<img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6392996a8d892dc23babc5bd54c351bae894b1ca/2f6578616d706c65732f65785f325f332e706e673f7261773d74727565\"></p>\n<h2>Dependencies</h2>\n<p>PyColorPalette uses the Python Imaging Library (PIL) and numpy.\nTo Install:</p>\n<pre><code>pip install Pillow \npip install numpy\n</code></pre>\n<p>(Pillow and PIL cannot co-exist in the same environment. Before installing Pillow, please uninstall PIL if previosuly installed.)</p>\n<h2>Installation</h2>\n<p><code>pip install PyColorPalette</code></p>\n\n          </div>"}, "last_serial": 4293866, "releases": {"1.2.2": [{"comment_text": "", "digests": {"md5": "9522735cc767032073f6107e37ec915d", "sha256": "89462eb54ecc356fc64af44cf53d5d4644da921c5c0d8f28028d2e5c6392f2f3"}, "downloads": -1, "filename": "PyColorPalette-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9522735cc767032073f6107e37ec915d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5701, "upload_time": "2018-06-29T15:07:20", "upload_time_iso_8601": "2018-06-29T15:07:20.862410Z", "url": "https://files.pythonhosted.org/packages/16/5d/8986172b29a319de1e123d2b29a5f31e7aa5328d89851cc85625fc6bba06/PyColorPalette-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "744a2b2d88cb60a0fc498baac23176cd", "sha256": "5ec6a475009b7c6e937923b785f7a21863d3b2757fb77965b83df54a1e8c8f20"}, "downloads": -1, "filename": "PyColorPalette-1.2.2.tar.gz", "has_sig": false, "md5_digest": "744a2b2d88cb60a0fc498baac23176cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4894, "upload_time": "2018-06-29T15:07:21", "upload_time_iso_8601": "2018-06-29T15:07:21.933910Z", "url": "https://files.pythonhosted.org/packages/ef/5a/fddea484d774e01f21902bc311798bfa5cd4fbcbed2d433adbc7efb08f3f/PyColorPalette-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "915aa48b3e65a998737ad667eb749941", "sha256": "4a3f35dfdf94e99afd046efdc04b399338ef2132165c386a2a6191780999690a"}, "downloads": -1, "filename": "PyColorPalette-1.2.3.tar.gz", "has_sig": false, "md5_digest": "915aa48b3e65a998737ad667eb749941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4848, "upload_time": "2018-09-20T19:04:01", "upload_time_iso_8601": "2018-09-20T19:04:01.978574Z", "url": "https://files.pythonhosted.org/packages/26/f8/59d9fb4e9a0102c8dd602589fdb9e930c2381eced8fe904d44221f134d61/PyColorPalette-1.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "915aa48b3e65a998737ad667eb749941", "sha256": "4a3f35dfdf94e99afd046efdc04b399338ef2132165c386a2a6191780999690a"}, "downloads": -1, "filename": "PyColorPalette-1.2.3.tar.gz", "has_sig": false, "md5_digest": "915aa48b3e65a998737ad667eb749941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4848, "upload_time": "2018-09-20T19:04:01", "upload_time_iso_8601": "2018-09-20T19:04:01.978574Z", "url": "https://files.pythonhosted.org/packages/26/f8/59d9fb4e9a0102c8dd602589fdb9e930c2381eced8fe904d44221f134d61/PyColorPalette-1.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:13 2020"}