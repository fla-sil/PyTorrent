{"info": {"author": "dakc", "author_email": "dakc@outlook.jp", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python"], "description": "[![Build Status](https://travis-ci.com/dakc/cronpi.svg?branch=master)](https://travis-ci.com/dakc/cronpi)\n[![pypi](https://img.shields.io/pypi/dm/cronpi)](https://pypi.org/project/cronpi/)\u00a0\n[![GitHub license](https://img.shields.io/github/license/dakc/majidai.svg?style=popout)](https://raw.githubusercontent.com/dakc/cronpi/master/LICENSE)\u00a0\n\n# cronpi\nA small tool for deploying crontab jobs into a unix-like system, eg. Linux/Mac from python.\n> cronpi makes jobs more ***human readable*** and works on both 2.X and 3.X version.\n\n\n## Installation\n```bash\npip install cronpi\n```\n\n## Usage\ncronpi has following functions\n\n| SN  |      Name       |                                    Description                                    |\n| --- | --------------- | --------------------------------------------------------------------------------- |\n| 1.  | run_by_date     | job that runs just by setting date in format YYYY-MM-DD HH:mm                |\n| 2.  | run_every_day   | job that runs every day at given time HH:mm                                       |\n| 3.  | run_every_week  | job that runs every week at the given time of given weekdays                      |\n| 4.  | run_every_month | job that runs every month at the given time of given days of a month              |\n| 5.  | run_every_year  | job that runs  at the given time of given days of given months                    |\n| 6.  | run_custom      | command will be exactly similar to single line which we write during \"crontab -e\" |\n\nEach functions take two parameters\n###### &lt;command to execute&gt;, &lt;isOverwrite=bool&gt;?\n\n|  parameter  |  type  |                                       description                                        |\n| ----------- | ------ | ---------------------------------------------------------------------------------------- |\n| command     | string | This command will be executed as scheduled                                               |\n| isOverwrite | bool   | It is optional and default value is false, which means cronpi will always insert new job |\n\n>cronpi will always install a new cron job if only command is passed as parameter or isOverwrite is set to False.\nIf command passed as first parameter already exists in cronjon and \"isOverwrite=True\" is passed as second parameter ,then it will update the time of running the job instead of adding new job.\n```python\ncronpi.XXXX(\"/some/command\", isOverwrite=True)\n```\n\nTime used as parameter can contain or may not contain AM|PM prefix.\nFor eg, following two parameters represent same time.\n```\n5:30pm = 17:30\n```\n\n\n\n\n#### Use Case 1 - Run By Date\n1. Run a job at 20th october 2020 at 5:30PM\n```python\nimport cronpi\ncronpi.run_by_date(\"/some/command\").on(\"2020-10-20 5:30pm\")\n```\n\u203b This command will run every year after if the command is not deleted from crontab manually.\n\n#### Use Case 2 - Run every day\n1. Run a job daily at 5:30PM\n```python\nimport cronpi\ncronpi.run_every_day(\"/some/command\").on(\"5:30pm\")\n```\n\n#### Use Case 3 - Run every week\n1. Run a job at every sunday at 5:30PM\n```python\nimport cronpi\ncronpi.run_every_week(\"/some/command\").on(\"sunday\", time=\"17:30\")\n```\n\n2. Run a job at every saturday and sunday at 5:30PM\n```python\nimport cronpi\ncronpi.run_every_week(\"/some/command\").on([\"sat\", \"sun\"], time=\"5:30PM\")\n```\n\n#### Use Case 4 - Run every month\n1. Run a job at every 10th of a month at 5:30PM\n```python\nimport cronpi\ncronpi.run_every_month(\"/some/command\").on(10, time=\"17:30\")\n```\n\n2. Run a job at every 10th and 20th of a month at 5:30PM\n```python\nimport cronpi\ncronpi.run_every_month(\"/some/command\").on([10,20], time=\"17:30\")\n```\n\n\n#### Use Case 5 - Run every year\n1. Run a job at every 10th january at 5:30am\n```python\nimport cronpi\ncronpi.run_every_year(\"/some/command\").on(\"january\", day=10, time=\"5:30am\")\n```\n\n2. Run a job at every 10th of january, april and october at 5:30AM\n```python\nimport cronpi\ncronpi.run_every_year(\"/some/command\").on([\"jan\", \"oct\"], day=10, time=\"5:30\")\n```\n\n#### Use Case 6 - run like crontab\nAdd a job to crontab by passing the command that we input to \"crontab -e\" command. \n1. Run a job that runs at every minute\n```python\nimport cronpi\ncronpi.run_custom(\"* * * * * /some/command\")\n```\n\n```bash\n# \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\n# \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n# \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the month (1 - 31)\n# \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n# \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the week (0 - 6) (Sunday to Saturday;\n# \u2502 \u2502 \u2502 \u2502 \u2502                                   7 is also Sunday on some systems)\n# \u2502 \u2502 \u2502 \u2502 \u2502\n# \u2502 \u2502 \u2502 \u2502 \u2502\n# * * * * * command to execut\n```\n\n#### Helper Function - Get list of current jobs\ncronpi has a helper function named \"get_job_list\" which will retrive the the job items in list.\n```python\nimport cronpi\ncronpi.get_job_list()\n```\n\n\n\n## Release information\n### Nov 12th, 2019 (ver@2.0.0)\n* restructured the library format so that it is more human readable.\n```python\n    cronpi.run_every_month(\"/some/command\")\n        .on([10,20], time=\"1:30AM\")\n```\n\n### Nov 7th, 2019 (ver@1.0.0)\n* released first version\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dakc/cronpi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cronpi", "package_url": "https://pypi.org/project/cronpi/", "platform": "", "project_url": "https://pypi.org/project/cronpi/", "project_urls": {"Homepage": "https://github.com/dakc/cronpi"}, "release_url": "https://pypi.org/project/cronpi/2.0.1/", "requires_dist": null, "requires_python": "", "summary": "a small crontab deploying package for python", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/dakc/cronpi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a33c0b499a344418604fe9b4121bbc209f78d7e/68747470733a2f2f7472617669732d63692e636f6d2f64616b632f63726f6e70692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/cronpi/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c78b6a012f94e40b9d6d39d8b41b1fe861113384/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f63726f6e7069\"></a>\u00a0\n<a href=\"https://raw.githubusercontent.com/dakc/cronpi/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/866a43b0d3edadc4c85a1ade1b7233ad26cf07de/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f64616b632f6d616a696461692e7376673f7374796c653d706f706f7574\"></a>\u00a0</p>\n<h1>cronpi</h1>\n<p>A small tool for deploying crontab jobs into a unix-like system, eg. Linux/Mac from python.</p>\n<blockquote>\n<p>cronpi makes jobs more <em><strong>human readable</strong></em> and works on both 2.X and 3.X version.</p>\n</blockquote>\n<h2>Installation</h2>\n<pre>pip install cronpi\n</pre>\n<h2>Usage</h2>\n<p>cronpi has following functions</p>\n<table>\n<thead>\n<tr>\n<th>SN</th>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1.</td>\n<td>run_by_date</td>\n<td>job that runs just by setting date in format YYYY-MM-DD HH:mm</td>\n</tr>\n<tr>\n<td>2.</td>\n<td>run_every_day</td>\n<td>job that runs every day at given time HH:mm</td>\n</tr>\n<tr>\n<td>3.</td>\n<td>run_every_week</td>\n<td>job that runs every week at the given time of given weekdays</td>\n</tr>\n<tr>\n<td>4.</td>\n<td>run_every_month</td>\n<td>job that runs every month at the given time of given days of a month</td>\n</tr>\n<tr>\n<td>5.</td>\n<td>run_every_year</td>\n<td>job that runs  at the given time of given days of given months</td>\n</tr>\n<tr>\n<td>6.</td>\n<td>run_custom</td>\n<td>command will be exactly similar to single line which we write during \"crontab -e\"</td>\n</tr></tbody></table>\n<p>Each functions take two parameters</p>\n<h6>&lt;command to execute&gt;, &lt;isOverwrite=bool&gt;?</h6>\n<table>\n<thead>\n<tr>\n<th>parameter</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>command</td>\n<td>string</td>\n<td>This command will be executed as scheduled</td>\n</tr>\n<tr>\n<td>isOverwrite</td>\n<td>bool</td>\n<td>It is optional and default value is false, which means cronpi will always insert new job</td>\n</tr></tbody></table>\n<blockquote>\n<p>cronpi will always install a new cron job if only command is passed as parameter or isOverwrite is set to False.\nIf command passed as first parameter already exists in cronjon and \"isOverwrite=True\" is passed as second parameter ,then it will update the time of running the job instead of adding new job.</p>\n</blockquote>\n<pre><span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">XXXX</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">,</span> <span class=\"n\">isOverwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Time used as parameter can contain or may not contain AM|PM prefix.\nFor eg, following two parameters represent same time.</p>\n<pre><code>5:30pm = 17:30\n</code></pre>\n<h4>Use Case 1 - Run By Date</h4>\n<ol>\n<li>Run a job at 20th october 2020 at 5:30PM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_by_date</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"2020-10-20 5:30pm\"</span><span class=\"p\">)</span>\n</pre>\n<p>\u203b This command will run every year after if the command is not deleted from crontab manually.</p>\n<h4>Use Case 2 - Run every day</h4>\n<ol>\n<li>Run a job daily at 5:30PM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_day</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"5:30pm\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Use Case 3 - Run every week</h4>\n<ol>\n<li>Run a job at every sunday at 5:30PM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_week</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"sunday\"</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"17:30\"</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Run a job at every saturday and sunday at 5:30PM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_week</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">([</span><span class=\"s2\">\"sat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sun\"</span><span class=\"p\">],</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"5:30PM\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Use Case 4 - Run every month</h4>\n<ol>\n<li>Run a job at every 10th of a month at 5:30PM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_month</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"17:30\"</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Run a job at every 10th and 20th of a month at 5:30PM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_month</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">],</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"17:30\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Use Case 5 - Run every year</h4>\n<ol>\n<li>Run a job at every 10th january at 5:30am</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_year</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"january\"</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"5:30am\"</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Run a job at every 10th of january, april and october at 5:30AM</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_year</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">([</span><span class=\"s2\">\"jan\"</span><span class=\"p\">,</span> <span class=\"s2\">\"oct\"</span><span class=\"p\">],</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"5:30\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Use Case 6 - run like crontab</h4>\n<p>Add a job to crontab by passing the command that we input to \"crontab -e\" command.</p>\n<ol>\n<li>Run a job that runs at every minute</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_custom</span><span class=\"p\">(</span><span class=\"s2\">\"* * * * * /some/command\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)</span>\n<span class=\"c1\"># \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)</span>\n<span class=\"c1\"># \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the month (1 - 31)</span>\n<span class=\"c1\"># \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)</span>\n<span class=\"c1\"># \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of the week (0 - 6) (Sunday to Saturday;</span>\n<span class=\"c1\"># \u2502 \u2502 \u2502 \u2502 \u2502                                   7 is also Sunday on some systems)</span>\n<span class=\"c1\"># \u2502 \u2502 \u2502 \u2502 \u2502</span>\n<span class=\"c1\"># \u2502 \u2502 \u2502 \u2502 \u2502</span>\n<span class=\"c1\"># * * * * * command to execut</span>\n</pre>\n<h4>Helper Function - Get list of current jobs</h4>\n<p>cronpi has a helper function named \"get_job_list\" which will retrive the the job items in list.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cronpi</span>\n<span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">get_job_list</span><span class=\"p\">()</span>\n</pre>\n<h2>Release information</h2>\n<h3>Nov 12th, 2019 (ver@2.0.0)</h3>\n<ul>\n<li>restructured the library format so that it is more human readable.</li>\n</ul>\n<pre>    <span class=\"n\">cronpi</span><span class=\"o\">.</span><span class=\"n\">run_every_month</span><span class=\"p\">(</span><span class=\"s2\">\"/some/command\"</span><span class=\"p\">)</span>\n        <span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">],</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s2\">\"1:30AM\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Nov 7th, 2019 (ver@1.0.0)</h3>\n<ul>\n<li>released first version</li>\n</ul>\n\n          </div>"}, "last_serial": 6160507, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b7b719d046990b773f85d7627cc6658d", "sha256": "321eef2150ed35f26e6ac2cdc54a33521de28e85597fdc7f1e01ab145372fd77"}, "downloads": -1, "filename": "cronpi-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b7b719d046990b773f85d7627cc6658d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 9490, "upload_time": "2019-11-07T15:54:45", "upload_time_iso_8601": "2019-11-07T15:54:45.482787Z", "url": "https://files.pythonhosted.org/packages/34/83/71c4acb7cc82bbc41cd4dd60c2c2074c1caa3ee48f57809b30127c9ef09e/cronpi-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57ad1a7d3d1a17c7732869751f1822a5", "sha256": "db7cfe8c903bc0bbeebe094cc4b6e16b65a7a91f2dfff88d30c64484e4397abd"}, "downloads": -1, "filename": "cronpi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "57ad1a7d3d1a17c7732869751f1822a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 7301, "upload_time": "2019-11-07T15:54:47", "upload_time_iso_8601": "2019-11-07T15:54:47.760071Z", "url": "https://files.pythonhosted.org/packages/22/a9/0352312f94b66815e33219b6431e8ddc73fcb0c7e27c2735b0b97f3ac839/cronpi-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "1d611d65e7ab3e79135a2bb7992b9954", "sha256": "1477176ef9d1f7604c0e0b14ad974e9e3e6f67ed0ad071675288c765ffe885e7"}, "downloads": -1, "filename": "cronpi-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1d611d65e7ab3e79135a2bb7992b9954", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10362, "upload_time": "2019-11-12T15:23:19", "upload_time_iso_8601": "2019-11-12T15:23:19.758365Z", "url": "https://files.pythonhosted.org/packages/47/91/bcef091a00de0b2cf43b6b748c07f16dc819231a0b9cecf2cab4fcacfb9a/cronpi-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bd93de6af8878d44d4b320b736fb6a8", "sha256": "5851934e860a6ee6fd76cff81d78557476cebf413ff318d8d6c00b178bcc41ca"}, "downloads": -1, "filename": "cronpi-2.0.0.tar.gz", "has_sig": false, "md5_digest": "8bd93de6af8878d44d4b320b736fb6a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7924, "upload_time": "2019-11-12T15:23:21", "upload_time_iso_8601": "2019-11-12T15:23:21.345263Z", "url": "https://files.pythonhosted.org/packages/84/33/20b53ffb6d8c82b61f82d16cce290724228b0d3d5d60ad6779d08b254c73/cronpi-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "e8219fc1a440d5cbc15a6d7e5bd0dacd", "sha256": "ca766233216e00937cd1a6d5cc18cb5c3cea80c80024f71bcbc1b02f57259b68"}, "downloads": -1, "filename": "cronpi-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8219fc1a440d5cbc15a6d7e5bd0dacd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10457, "upload_time": "2019-11-19T08:08:46", "upload_time_iso_8601": "2019-11-19T08:08:46.418258Z", "url": "https://files.pythonhosted.org/packages/9a/2d/f52de2a6f6f9f675aa01e8be66c925c855deaf57d955fd23de1e60556251/cronpi-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c35c20aa653eb041f0701ab905996654", "sha256": "f01553594e3bdf3f2f2750d84a4a7ef9e6d801e861abeb2e5857d69aed67f6b0"}, "downloads": -1, "filename": "cronpi-2.0.1.tar.gz", "has_sig": false, "md5_digest": "c35c20aa653eb041f0701ab905996654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8068, "upload_time": "2019-11-19T08:08:48", "upload_time_iso_8601": "2019-11-19T08:08:48.252655Z", "url": "https://files.pythonhosted.org/packages/e4/72/31171460dbf78323582f7ad4e1c8f2e426c69bb1e7306d80d04b462bac9c/cronpi-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8219fc1a440d5cbc15a6d7e5bd0dacd", "sha256": "ca766233216e00937cd1a6d5cc18cb5c3cea80c80024f71bcbc1b02f57259b68"}, "downloads": -1, "filename": "cronpi-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8219fc1a440d5cbc15a6d7e5bd0dacd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10457, "upload_time": "2019-11-19T08:08:46", "upload_time_iso_8601": "2019-11-19T08:08:46.418258Z", "url": "https://files.pythonhosted.org/packages/9a/2d/f52de2a6f6f9f675aa01e8be66c925c855deaf57d955fd23de1e60556251/cronpi-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c35c20aa653eb041f0701ab905996654", "sha256": "f01553594e3bdf3f2f2750d84a4a7ef9e6d801e861abeb2e5857d69aed67f6b0"}, "downloads": -1, "filename": "cronpi-2.0.1.tar.gz", "has_sig": false, "md5_digest": "c35c20aa653eb041f0701ab905996654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8068, "upload_time": "2019-11-19T08:08:48", "upload_time_iso_8601": "2019-11-19T08:08:48.252655Z", "url": "https://files.pythonhosted.org/packages/e4/72/31171460dbf78323582f7ad4e1c8f2e426c69bb1e7306d80d04b462bac9c/cronpi-2.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:14 2020"}