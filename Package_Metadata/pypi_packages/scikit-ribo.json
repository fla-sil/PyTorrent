{"info": {"author": "Han Fang", "author_email": "hanfang.cshl@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "Getting Started\n###############\n\nThis document will show you how to install and run Scikit-ribo.\n\nWhat is Scikit-ribo\n-------------------\n\nScikit-ribo is an open-source software for accurate genome-wide A-site prediction and translation efficiency\ninference from Riboseq and RNAseq data.\n\nSource Code: https://github.com/hanfang/scikit-ribo\n\nIntroduction\n------------\n\nScikit-ribo has two major modules:\n\n- **Ribosome A-site location prediction** using random forest with recursive feature selection\n\n- **Translation efficiency inference** using a codon-lvel generalized linear model with ridge penalty\n\nA complete analysis with scikit-ribo has two major procedures:\n\n- The data pre-processing step to prepare the ORFs, codons for a genome: ``scikit-ribo-build.py``\n\n- The actual model training and fitting: ``scikit-ribo-run.py``\n\nDetailed workflow\n-----------------\n.. image:: /images/methods.png\n   :align: center\n   :scale: 75%\n\nInputs\n------\n- The alignment of Riboseq reads (bam)\n- Gene-level quantification of RNA-seq reads (from either Salmon or Kallisto)\n- A gene annotation file (gtf)\n- A reference genome for the model organism of interest (fasta)\n\n\nOutput\n------\n- Translation efficiency estimates for the genes\n- Translation elongation rate for 61 sense codons\n- Ribosome profile plots for each gene\n- Diagnostic plots of the models\n\n\nCite\n----\n\nFang et al, \"Scikit-ribo: Accurate inference and robust modelling of translation dynamics at codon resolution\" (Preprint coming up)\n\nContact\n-------\n\nHan Fang\n\nStony Brook University & Cold Spring Harbor Laboratory\n\nEmail: hanfang.cshl@gmail.comRequirement\n###########\n\nEnvironment\n-----------\n\n- Python3\n- Linux\n- Recommend setting up your environment with `Conda <https://conda.io/docs/index.html>`_\n\nDependencies\n------------\n\n- Command-line pacakges:\n\n+----------------+------------+\n| Python package | Version >= |\n+================+============+\n| bedtools       | 2.26.0     |\n+----------------+------------+\n\n- Python package:\n\n+----------------+------------+\n| Python package | Version >= |\n+================+============+\n| colorama       | 0.3.7      |\n+----------------+------------+\n| glmnet_py      |0.1.0b      |\n+----------------+------------+\n| gffutils       | 0.8.7.1    |\n+----------------+------------+\n| matplotlib     | 1.5.1      |\n+----------------+------------+\n| numpy          | 1.11.2     |\n+----------------+------------+\n| pandas         | 0.19.2     |\n+----------------+------------+\n| pybedtools     | 0.7.8      |\n+----------------+------------+\n| pyfiglet       | 0.7.5      |\n+----------------+------------+\n| pysam          | 0.9.1.4    |\n+----------------+------------+\n| scikit_learn   | 0.18       |\n+----------------+------------+\n| scipy          | 0.18.1     |\n+----------------+------------+\n| seaborn        | 0.7.0      |\n+----------------+------------+\n| termcolor      | 1.1.0      |\n+----------------+------------+\n\nNote: When using pip install scikit-ribo, all the following dependencies will be pulled and installed automatically.\n\nInstallation\n############\n\nOptions\n-------\nThere are three options to install Scikit-ribo.\n\n\n1. Install Scikit-ribo with pip::\n\n    pip install scikit-ribo\n\n2. Install Scikit-ribo with conda/biocodon::\n\n    Coming up\n\n3. Compile from source::\n\n    git clone https://github.com/hanfang/scikit-ribo.git\n    cd scikit-ribo\n    python setup.py install\n\nTest whether the installation is successful\n-------------------------------------------\nOnce the installation is successful, you should expect the below if you type::\n\n    scikit-ribo-run.py\n\n.. image:: /images/successful_installation.png\n   :align: center\n   :scale: 75%\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hanfang/scikit-ribo", "keywords": "bioinformatics genomics glm glmnet ridge riboseq", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "scikit-ribo", "package_url": "https://pypi.org/project/scikit-ribo/", "platform": "", "project_url": "https://pypi.org/project/scikit-ribo/", "project_urls": {"Homepage": "https://github.com/hanfang/scikit-ribo"}, "release_url": "https://pypi.org/project/scikit-ribo/0.2.4b1/", "requires_dist": ["colorama (>=0.3.7)", "gffutils (>=0.8.7.1)", "glmnet-py (>=0.1.0b2)", "joblib (>=0.10.3)", "matplotlib (>=1.5.1)", "numpy (>=1.11.2)", "pandas (>=0.19.2)", "pybedtools (>=0.7.8)", "pyfiglet (>=0.7.5)", "pysam (>=0.9.1.4)", "scikit-learn (>=0.18)", "scipy (>=0.18.1)", "seaborn (>=0.7.0)", "termcolor (>=1.1.0)"], "requires_python": "", "summary": "A scikit framework for joint analysis of Riboseq and RNAseq data", "version": "0.2.4b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Getting Started<br>###############<br><br>This document will show you how to install and run Scikit-ribo.<br><br>What is Scikit-ribo<br>-------------------<br><br>Scikit-ribo is an open-source software for accurate genome-wide A-site prediction and translation efficiency<br>inference from Riboseq and RNAseq data.<br><br>Source Code: https://github.com/hanfang/scikit-ribo<br><br>Introduction<br>------------<br><br>Scikit-ribo has two major modules:<br><br>- **Ribosome A-site location prediction** using random forest with recursive feature selection<br><br>- **Translation efficiency inference** using a codon-lvel generalized linear model with ridge penalty<br><br>A complete analysis with scikit-ribo has two major procedures:<br><br>- The data pre-processing step to prepare the ORFs, codons for a genome: ``scikit-ribo-build.py``<br><br>- The actual model training and fitting: ``scikit-ribo-run.py``<br><br>Detailed workflow<br>-----------------<br>.. image:: /images/methods.png<br>   :align: center<br>   :scale: 75%<br><br>Inputs<br>------<br>- The alignment of Riboseq reads (bam)<br>- Gene-level quantification of RNA-seq reads (from either Salmon or Kallisto)<br>- A gene annotation file (gtf)<br>- A reference genome for the model organism of interest (fasta)<br><br><br>Output<br>------<br>- Translation efficiency estimates for the genes<br>- Translation elongation rate for 61 sense codons<br>- Ribosome profile plots for each gene<br>- Diagnostic plots of the models<br><br><br>Cite<br>----<br><br>Fang et al, \"Scikit-ribo: Accurate inference and robust modelling of translation dynamics at codon resolution\" (Preprint coming up)<br><br>Contact<br>-------<br><br>Han Fang<br><br>Stony Brook University &amp; Cold Spring Harbor Laboratory<br><br>Email: hanfang.cshl@gmail.comRequirement<br>###########<br><br>Environment<br>-----------<br><br>- Python3<br>- Linux<br>- Recommend setting up your environment with `Conda &lt;https://conda.io/docs/index.html&gt;`_<br><br>Dependencies<br>------------<br><br>- Command-line pacakges:<br><br>+----------------+------------+<br>| Python package | Version &gt;= |<br>+================+============+<br>| bedtools       | 2.26.0     |<br>+----------------+------------+<br><br>- Python package:<br><br>+----------------+------------+<br>| Python package | Version &gt;= |<br>+================+============+<br>| colorama       | 0.3.7      |<br>+----------------+------------+<br>| glmnet_py      |0.1.0b      |<br>+----------------+------------+<br>| gffutils       | 0.8.7.1    |<br>+----------------+------------+<br>| matplotlib     | 1.5.1      |<br>+----------------+------------+<br>| numpy          | 1.11.2     |<br>+----------------+------------+<br>| pandas         | 0.19.2     |<br>+----------------+------------+<br>| pybedtools     | 0.7.8      |<br>+----------------+------------+<br>| pyfiglet       | 0.7.5      |<br>+----------------+------------+<br>| pysam          | 0.9.1.4    |<br>+----------------+------------+<br>| scikit_learn   | 0.18       |<br>+----------------+------------+<br>| scipy          | 0.18.1     |<br>+----------------+------------+<br>| seaborn        | 0.7.0      |<br>+----------------+------------+<br>| termcolor      | 1.1.0      |<br>+----------------+------------+<br><br>Note: When using pip install scikit-ribo, all the following dependencies will be pulled and installed automatically.<br><br>Installation<br>############<br><br>Options<br>-------<br>There are three options to install Scikit-ribo.<br><br><br>1. Install Scikit-ribo with pip::<br><br>    pip install scikit-ribo<br><br>2. Install Scikit-ribo with conda/biocodon::<br><br>    Coming up<br><br>3. Compile from source::<br><br>    git clone https://github.com/hanfang/scikit-ribo.git<br>    cd scikit-ribo<br>    python setup.py install<br><br>Test whether the installation is successful<br>-------------------------------------------<br>Once the installation is successful, you should expect the below if you type::<br><br>    scikit-ribo-run.py<br><br>.. image:: /images/successful_installation.png<br>   :align: center<br>   :scale: 75%<br><br>\n          </div>"}, "last_serial": 2982765, "releases": {"0.2.4b1": [{"comment_text": "", "digests": {"md5": "3a5edf06aa99fb9a6a0b84ee3c2b4b48", "sha256": "2211fdf92e4b065035d2328268e9e5d03944b8ce70a78339d0404a96b55f91a4"}, "downloads": -1, "filename": "scikit_ribo-0.2.4b1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a5edf06aa99fb9a6a0b84ee3c2b4b48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73162, "upload_time": "2017-06-27T18:39:27", "upload_time_iso_8601": "2017-06-27T18:39:27.445170Z", "url": "https://files.pythonhosted.org/packages/ae/8c/0600c4f9e2f37d58c6e2489afdce9f20cf5be67d855e450c6621ca9b9d20/scikit_ribo-0.2.4b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92ebae61da481b767989120dd1e4b3ae", "sha256": "529a3542bb3d761e0950b311802b730e071621db639d5e2ac5eda5eaad442845"}, "downloads": -1, "filename": "scikit_ribo-0.2.4b1.tar.gz", "has_sig": false, "md5_digest": "92ebae61da481b767989120dd1e4b3ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23775, "upload_time": "2017-06-27T18:39:29", "upload_time_iso_8601": "2017-06-27T18:39:29.366055Z", "url": "https://files.pythonhosted.org/packages/16/08/1a1c7182aa3f6d6dfa6595156beabe6e24229eb63bf9c1051d34874bf636/scikit_ribo-0.2.4b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a5edf06aa99fb9a6a0b84ee3c2b4b48", "sha256": "2211fdf92e4b065035d2328268e9e5d03944b8ce70a78339d0404a96b55f91a4"}, "downloads": -1, "filename": "scikit_ribo-0.2.4b1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a5edf06aa99fb9a6a0b84ee3c2b4b48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73162, "upload_time": "2017-06-27T18:39:27", "upload_time_iso_8601": "2017-06-27T18:39:27.445170Z", "url": "https://files.pythonhosted.org/packages/ae/8c/0600c4f9e2f37d58c6e2489afdce9f20cf5be67d855e450c6621ca9b9d20/scikit_ribo-0.2.4b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92ebae61da481b767989120dd1e4b3ae", "sha256": "529a3542bb3d761e0950b311802b730e071621db639d5e2ac5eda5eaad442845"}, "downloads": -1, "filename": "scikit_ribo-0.2.4b1.tar.gz", "has_sig": false, "md5_digest": "92ebae61da481b767989120dd1e4b3ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23775, "upload_time": "2017-06-27T18:39:29", "upload_time_iso_8601": "2017-06-27T18:39:29.366055Z", "url": "https://files.pythonhosted.org/packages/16/08/1a1c7182aa3f6d6dfa6595156beabe6e24229eb63bf9c1051d34874bf636/scikit_ribo-0.2.4b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:26 2020"}