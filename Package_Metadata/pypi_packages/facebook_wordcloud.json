{"info": {"author": "Michael Meli", "author_email": "facebook_wordcloud@michaelmeli.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: Multimedia :: Graphics :: Presentation"], "description": "facebook-chat-word-cloud\n========================\n.. image:: https://travis-ci.org/mjmeli/facebook-chat-word-cloud.svg?branch=master\n    :target: https://travis-ci.org/mjmeli/facebook-chat-word-cloud\n\nA Python tool for generating a word cloud for a Facebook chat conversation.\n\nRequirements\n------------\nThis uses `lxml` to parse the messages file provided by Facebook. This requires `libxml2` and `libxslt` to be installed.\n\nFor Debian/Ubuntu:\n\n    sudo apt-get install libxml2-dev libxslt-dev python-dev\n\nThis also uses `Pillow` to handle image manipulation. This requires `libjpeg`, `zlib`, and `libfreetype`:\n\n    sudo apt-get install libjpeg-dev zlib1g-dev libfreetype6-dev\n\nInstallation\n------------\n    pip install facebook_wordcloud\n\nDevelopment\n-----------\n\n    git clone https://github.com/mjmeli/facebook-chat-word-cloud.git\n    \n    pip install -e .\n\nTesting\n-------\n    python setup.py test\n\nQuick Example Usage\n-------------------\nRequest your Facebook data archive and get the messages.htm file.\n\nGenerate default word cloud:\n\n    facebook_wordcloud examples/messages_sample.htm \"Foo Bar\"\n\nUse a configuration file for customization:\n\n    facebook_wordcloud examples/messages_sample.htm \"Foo Bar\" -c config.json\n\nUse the sample conversation file for quick testing:\n\n    facebook_wordcloud examples/messages_sample.htm \"Foo Bar\" -sample\n\nOutput the word cloud to an image\n\n    facebook_wordcloud examples/messages_sample.htm \"Foo Bar\" -o output.png\n\nDetailed Usage\n--------------\nThis is essentially a command line wrapper around the `Andreas Muller's <https://github.com/amueller>`_ (amueller) `word_cloud Python library <https://github.com/amueller/word_cloud>`_ . This simply parses Facebook messages and passes data to that library.\n\nFirst step is to get your Facebook messages archive:\n\n1. Go to Facebook Settings: https://www.facebook.com/settings\n2. Click the link at the bottom (\"Download a copy of your Facebook data\")\n3. Click \"Start My Archive\" and wait for the download to be ready\n4. Download and extract\n5. Pull out or remember the location of the **messages.htm** file\n\nThe script is easy to use:\n\n    facebook_wordcloud [messages_file] [users] {optional arguments}\n\nWhere,\n\n- [message_file] is the relative path of your **messages.html** file\n- [users] is a comma separated list of the users involved in the conversation (i.e., if you want the conversation with your friend John Smith, [users] should be \"John Smith\"). You can specify multiple people for group conversations (i.e. \"John Smith, Bob Bobby\")\n\nThere are a few important optional arguments:\n\n- the \"-c\" or \"--config-file\" arguments allow you to specify a json configuration file. There is an example of one in the root of this directory (**config.json**), and some more examples in the examples/ folder. **I highly recommend using such a file if you want non-default settings**!\n- the \"-o\" or \"--out\" option allows you to specify where you want the image to output to\n- the \"-sample\" or \"--sample\" option allows you to use an internal sample conversation (same as in examples/messages_sample.htm). **Your messages file will likely be large and will take a long time to parse, so when you are customizing, you may find this option helpful.**\n- the \"-h\" or \"--help\" option shows help\n\nThere are many more arguments that mainly allow you to change the configuration of the word cloud. However, *all of these arguments can be specified in the json configuration file*. It will be much easier to use a config file! If you are stubborn, use the \"-h\" or \"--help\" option to see all the arguments.\n\n**IMPORTANT: Command line arguments override config files!**\n\nHelpful Hints\n-------------\nThe messages file downloaded from Facebook will probably be quite large (mine was 60 MB). It may take a while to parse, which can get annoying when you are making small changes to get a nice looking word cloud. I highly recommend using the sample conversation I provide as this will parse in seconds and has very high word density. You can either directly reference this file (examples/messages_sample.htm with user \"Foo Bar\") or just use the \"-sample\" option with the command\n\nExamples\n--------\nSee the **examples** directory for some great examples of what you can do and some more description on the topic of customization.\n\n.. image:: http://i.imgur.com/cKP4nJB.png\n\n.. image:: http://i.imgur.com/7Q4bjdY.png\n\n.. image:: http://i.imgur.com/2E9HRF5.png\n\n.. image:: http://i.imgur.com/JDYoVxm.png\n\n.. image:: http://i.imgur.com/UXIGvLW.png\n\nParser Choice\n-------------\nI originally used BeautifulSoup and then switched to the lxml parser. This is slightly annoying because it requires system libraries, but the performance is significantly better. See the benchmarks below from attempting to analyze a 60 MB file:\n\n+---------------+-------------------------+-------------------+\n| Parser        | Build Tree Runtime (ms) | Max Memory Usage  |\n+===============+=========================+===================+\n| BeautifulSoup | 90750                   | 3450 MB (3.45 GB) |\n+---------------+-------------------------+-------------------+\n| lxml          | 1945                    | 910 MB (0.91 GB)  |\n+---------------+-------------------------+-------------------+\n\nIssues\n------\n**ImportError: The _imagingft C module is not installed**\nThis means you don't have `libfreetype` installed. See the Requirements section. If installing it does not work, you may have to uninstall and reinstall `Pillow` via `pip`.\n\n**IOError: Couldn't locate mask file...did you make sure to specify the URL relative to where you are running the script?**\nThis error is self-explanatory. In `masked/config.json`, the mask file is specified with a relative URL. This URL is *relative to where you are running the script*. I wrote the config file assuming that you were running the `facebook_wordcloud` in the `/examples` directory. If this is not the case, then either `cd` into that directory, or adjust the path in `masked/config.json`.\n\n**The mask doesn't seem to be working?**\nI ran into this issue a few times. Make sure the mask is either in RGB or grayscale. Note that only parts that are pure white (#FFFFFF) will be removed.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mjmeli/facebook-chat-word-cloud", "keywords": "facebook chat word cloud generate", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "facebook_wordcloud", "package_url": "https://pypi.org/project/facebook_wordcloud/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/facebook_wordcloud/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mjmeli/facebook-chat-word-cloud"}, "release_url": "https://pypi.org/project/facebook_wordcloud/1.021/", "requires_dist": null, "requires_python": null, "summary": "A Python tool for generating a word cloud for a Facebook chat conversation.", "version": "1.021", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/mjmeli/facebook-chat-word-cloud\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mjmeli/facebook-chat-word-cloud.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f404dc5ae4cd9cfcf6607984bc05630bf01aacc/68747470733a2f2f7472617669732d63692e6f72672f6d6a6d656c692f66616365626f6f6b2d636861742d776f72642d636c6f75642e7376673f6272616e63683d6d6173746572\"></a>\n<p>A Python tool for generating a word cloud for a Facebook chat conversation.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>This uses <cite>lxml</cite> to parse the messages file provided by Facebook. This requires <cite>libxml2</cite> and <cite>libxslt</cite> to be installed.</p>\n<p>For Debian/Ubuntu:</p>\n<blockquote>\nsudo apt-get install libxml2-dev libxslt-dev python-dev</blockquote>\n<p>This also uses <cite>Pillow</cite> to handle image manipulation. This requires <cite>libjpeg</cite>, <cite>zlib</cite>, and <cite>libfreetype</cite>:</p>\n<blockquote>\nsudo apt-get install libjpeg-dev zlib1g-dev libfreetype6-dev</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\npip install facebook_wordcloud</blockquote>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<blockquote>\n<p>git clone <a href=\"https://github.com/mjmeli/facebook-chat-word-cloud.git\" rel=\"nofollow\">https://github.com/mjmeli/facebook-chat-word-cloud.git</a></p>\n<p>pip install -e .</p>\n</blockquote>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<blockquote>\npython setup.py test</blockquote>\n</div>\n<div id=\"quick-example-usage\">\n<h2>Quick Example Usage</h2>\n<p>Request your Facebook data archive and get the messages.htm file.</p>\n<p>Generate default word cloud:</p>\n<blockquote>\nfacebook_wordcloud examples/messages_sample.htm \u201cFoo Bar\u201d</blockquote>\n<p>Use a configuration file for customization:</p>\n<blockquote>\nfacebook_wordcloud examples/messages_sample.htm \u201cFoo Bar\u201d -c config.json</blockquote>\n<p>Use the sample conversation file for quick testing:</p>\n<blockquote>\nfacebook_wordcloud examples/messages_sample.htm \u201cFoo Bar\u201d -sample</blockquote>\n<p>Output the word cloud to an image</p>\n<blockquote>\nfacebook_wordcloud examples/messages_sample.htm \u201cFoo Bar\u201d -o output.png</blockquote>\n</div>\n<div id=\"detailed-usage\">\n<h2>Detailed Usage</h2>\n<p>This is essentially a command line wrapper around the <a href=\"https://github.com/amueller\" rel=\"nofollow\">Andreas Muller\u2019s</a> (amueller) <a href=\"https://github.com/amueller/word_cloud\" rel=\"nofollow\">word_cloud Python library</a> . This simply parses Facebook messages and passes data to that library.</p>\n<p>First step is to get your Facebook messages archive:</p>\n<ol>\n<li>Go to Facebook Settings: <a href=\"https://www.facebook.com/settings\" rel=\"nofollow\">https://www.facebook.com/settings</a></li>\n<li>Click the link at the bottom (\u201cDownload a copy of your Facebook data\u201d)</li>\n<li>Click \u201cStart My Archive\u201d and wait for the download to be ready</li>\n<li>Download and extract</li>\n<li>Pull out or remember the location of the <strong>messages.htm</strong> file</li>\n</ol>\n<p>The script is easy to use:</p>\n<blockquote>\nfacebook_wordcloud [messages_file] [users] {optional arguments}</blockquote>\n<p>Where,</p>\n<ul>\n<li>[message_file] is the relative path of your <strong>messages.html</strong> file</li>\n<li>[users] is a comma separated list of the users involved in the conversation (i.e., if you want the conversation with your friend John Smith, [users] should be \u201cJohn Smith\u201d). You can specify multiple people for group conversations (i.e. \u201cJohn Smith, Bob Bobby\u201d)</li>\n</ul>\n<p>There are a few important optional arguments:</p>\n<ul>\n<li>the \u201c-c\u201d or \u201c\u2013config-file\u201d arguments allow you to specify a json configuration file. There is an example of one in the root of this directory (<strong>config.json</strong>), and some more examples in the examples/ folder. <strong>I highly recommend using such a file if you want non-default settings</strong>!</li>\n<li>the \u201c-o\u201d or \u201c\u2013out\u201d option allows you to specify where you want the image to output to</li>\n<li>the \u201c-sample\u201d or \u201c\u2013sample\u201d option allows you to use an internal sample conversation (same as in examples/messages_sample.htm). <strong>Your messages file will likely be large and will take a long time to parse, so when you are customizing, you may find this option helpful.</strong></li>\n<li>the \u201c-h\u201d or \u201c\u2013help\u201d option shows help</li>\n</ul>\n<p>There are many more arguments that mainly allow you to change the configuration of the word cloud. However, <em>all of these arguments can be specified in the json configuration file</em>. It will be much easier to use a config file! If you are stubborn, use the \u201c-h\u201d or \u201c\u2013help\u201d option to see all the arguments.</p>\n<p><strong>IMPORTANT: Command line arguments override config files!</strong></p>\n</div>\n<div id=\"helpful-hints\">\n<h2>Helpful Hints</h2>\n<p>The messages file downloaded from Facebook will probably be quite large (mine was 60 MB). It may take a while to parse, which can get annoying when you are making small changes to get a nice looking word cloud. I highly recommend using the sample conversation I provide as this will parse in seconds and has very high word density. You can either directly reference this file (examples/messages_sample.htm with user \u201cFoo Bar\u201d) or just use the \u201c-sample\u201d option with the command</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>See the <strong>examples</strong> directory for some great examples of what you can do and some more description on the topic of customization.</p>\n<img alt=\"http://i.imgur.com/cKP4nJB.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9086e5c58d2cbd0e7d3ae797e4c2be7dd8a171f/687474703a2f2f692e696d6775722e636f6d2f634b50346e4a422e706e67\">\n<img alt=\"http://i.imgur.com/7Q4bjdY.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3f285d83b55ceaa00090a984d10e9f5355a970f0/687474703a2f2f692e696d6775722e636f6d2f375134626a64592e706e67\">\n<img alt=\"http://i.imgur.com/2E9HRF5.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c256ee07e923125947e98b0c163c7c08d3177fee/687474703a2f2f692e696d6775722e636f6d2f324539485246352e706e67\">\n<img alt=\"http://i.imgur.com/JDYoVxm.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76191b4b0ffa38726f564bec67db7584a09c6673/687474703a2f2f692e696d6775722e636f6d2f4a44596f56786d2e706e67\">\n<img alt=\"http://i.imgur.com/UXIGvLW.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4064c535712b3ccbd99375dcea12c63ff382c504/687474703a2f2f692e696d6775722e636f6d2f55584947764c572e706e67\">\n</div>\n<div id=\"parser-choice\">\n<h2>Parser Choice</h2>\n<p>I originally used BeautifulSoup and then switched to the lxml parser. This is slightly annoying because it requires system libraries, but the performance is significantly better. See the benchmarks below from attempting to analyze a 60 MB file:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Parser</th>\n<th>Build Tree Runtime (ms)</th>\n<th>Max Memory Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>BeautifulSoup</td>\n<td>90750</td>\n<td>3450 MB (3.45 GB)</td>\n</tr>\n<tr><td>lxml</td>\n<td>1945</td>\n<td>910 MB (0.91 GB)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p><strong>ImportError: The _imagingft C module is not installed</strong>\nThis means you don\u2019t have <cite>libfreetype</cite> installed. See the Requirements section. If installing it does not work, you may have to uninstall and reinstall <cite>Pillow</cite> via <cite>pip</cite>.</p>\n<p><strong>IOError: Couldn\u2019t locate mask file\u2026did you make sure to specify the URL relative to where you are running the script?</strong>\nThis error is self-explanatory. In <cite>masked/config.json</cite>, the mask file is specified with a relative URL. This URL is <em>relative to where you are running the script</em>. I wrote the config file assuming that you were running the <cite>facebook_wordcloud</cite> in the <cite>/examples</cite> directory. If this is not the case, then either <cite>cd</cite> into that directory, or adjust the path in <cite>masked/config.json</cite>.</p>\n<p><strong>The mask doesn\u2019t seem to be working?</strong>\nI ran into this issue a few times. Make sure the mask is either in RGB or grayscale. Note that only parts that are pure white (#FFFFFF) will be removed.</p>\n</div>\n\n          </div>"}, "last_serial": 2737410, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e6a4e5127453d518c179e60e068444dc", "sha256": "7c27e6116cbedd371a0d7eb900065c1391dc31817fff9ca931d4ba8bb70640a2"}, "downloads": -1, "filename": "facebook_wordcloud-0.1.tar.gz", "has_sig": false, "md5_digest": "e6a4e5127453d518c179e60e068444dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9371, "upload_time": "2016-08-24T01:27:54", "upload_time_iso_8601": "2016-08-24T01:27:54.756977Z", "url": "https://files.pythonhosted.org/packages/5a/37/8daf4f963ecfcddd8543ceeb22af59218220487eeab755205473ad75bbfd/facebook_wordcloud-0.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "c039d1a4bbe74d39f5db837b798eaf38", "sha256": "a2d25b6575861f125882c9bd7e00602c17f72ff3cb398dbbd55dc9d0b766b9a9"}, "downloads": -1, "filename": "facebook_wordcloud-1.0.tar.gz", "has_sig": false, "md5_digest": "c039d1a4bbe74d39f5db837b798eaf38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9412, "upload_time": "2016-08-24T01:42:21", "upload_time_iso_8601": "2016-08-24T01:42:21.282269Z", "url": "https://files.pythonhosted.org/packages/88/41/caac31a7b330f51a02421f3e9d89938d69d2d43aa1b21eb73135affa05cb/facebook_wordcloud-1.0.tar.gz", "yanked": false}], "1.01": [{"comment_text": "", "digests": {"md5": "236b9d60ab7d317c5ab8bf16dcaa0c89", "sha256": "ab6309b1dc20069492ac01f96a836c385bb4806a8df465d9e3e4822be6db0e00"}, "downloads": -1, "filename": "facebook_wordcloud-1.01.tar.gz", "has_sig": false, "md5_digest": "236b9d60ab7d317c5ab8bf16dcaa0c89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9898, "upload_time": "2016-08-24T01:49:08", "upload_time_iso_8601": "2016-08-24T01:49:08.664144Z", "url": "https://files.pythonhosted.org/packages/12/38/6939e2f8ae28f82bf5ac43520e64dba8a90263d0f165aabb4474a3683d1f/facebook_wordcloud-1.01.tar.gz", "yanked": false}], "1.01b": [{"comment_text": "", "digests": {"md5": "828d5b102c5051e6be6a15b69064837b", "sha256": "6a84de077f0007879980f4850a9cf9270fa3b96d6a4cc3377946acaa8d0ee47f"}, "downloads": -1, "filename": "facebook_wordcloud-1.01b.tar.gz", "has_sig": false, "md5_digest": "828d5b102c5051e6be6a15b69064837b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140153, "upload_time": "2016-08-24T01:50:56", "upload_time_iso_8601": "2016-08-24T01:50:56.139831Z", "url": "https://files.pythonhosted.org/packages/e2/2e/c548119ad4ad6ad4ff8eed5daa8c173896ceb2fbe6cf5c126e77d9fbcac6/facebook_wordcloud-1.01b.tar.gz", "yanked": false}], "1.02": [{"comment_text": "", "digests": {"md5": "a417d260738bba27ccbfa88fee1c7db3", "sha256": "70277313c269bec293cbb4658e2e2b0d73881be4804be2222721b4492603c41a"}, "downloads": -1, "filename": "facebook_wordcloud-1.02.tar.gz", "has_sig": false, "md5_digest": "a417d260738bba27ccbfa88fee1c7db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140153, "upload_time": "2016-08-24T01:53:33", "upload_time_iso_8601": "2016-08-24T01:53:33.141901Z", "url": "https://files.pythonhosted.org/packages/26/b1/6f375770b35b0dba64759f4535144a0345e5d6b1e4c155885c65766d7ad6/facebook_wordcloud-1.02.tar.gz", "yanked": false}], "1.021": [{"comment_text": "", "digests": {"md5": "6b3373bd7eab7f2e12507c765c8b386d", "sha256": "0a4534de09f3dc8afe97f9886440a3390af09b3a4fb9165866f7f7580f74133a"}, "downloads": -1, "filename": "facebook_wordcloud-1.021.tar.gz", "has_sig": false, "md5_digest": "6b3373bd7eab7f2e12507c765c8b386d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140158, "upload_time": "2016-08-24T01:59:20", "upload_time_iso_8601": "2016-08-24T01:59:20.152198Z", "url": "https://files.pythonhosted.org/packages/32/e6/9c975df11f08ddc21bff4487f38f0a360cb8544a79a71d68d776a59b4889/facebook_wordcloud-1.021.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "cbee09572b35ee7b20ab22b79dcd1f9a", "sha256": "c82346c2f83a35a84a9f96c28e20d89a21555677ba20e6422e7de96d325da792"}, "downloads": -1, "filename": "facebook_wordcloud-1.1.tar.gz", "has_sig": false, "md5_digest": "cbee09572b35ee7b20ab22b79dcd1f9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140640, "upload_time": "2017-03-28T23:44:33", "upload_time_iso_8601": "2017-03-28T23:44:33.922843Z", "url": "https://files.pythonhosted.org/packages/13/d3/48b1888db38ca64ec89d2b8e448ded71c068ae8ef8498ceb587c917c7bf5/facebook_wordcloud-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b3373bd7eab7f2e12507c765c8b386d", "sha256": "0a4534de09f3dc8afe97f9886440a3390af09b3a4fb9165866f7f7580f74133a"}, "downloads": -1, "filename": "facebook_wordcloud-1.021.tar.gz", "has_sig": false, "md5_digest": "6b3373bd7eab7f2e12507c765c8b386d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140158, "upload_time": "2016-08-24T01:59:20", "upload_time_iso_8601": "2016-08-24T01:59:20.152198Z", "url": "https://files.pythonhosted.org/packages/32/e6/9c975df11f08ddc21bff4487f38f0a360cb8544a79a71d68d776a59b4889/facebook_wordcloud-1.021.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:07 2020"}