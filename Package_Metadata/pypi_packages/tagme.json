{"info": {"author": "Marco Cornolti", "author_email": "cornolti@di.unipi.it", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Linguistic"], "description": "============\ntagme-python\n============\n\nOfficial TagMe API wrapper for Python.\n\nInstallation and setup\n----------------------\n\nThis library is hosted by PyPI. You can install it with:\n\n``pip install tagme``\n\nTo access the TagMe API you have to register (for free!) at the D4Science platform and obtain an authorization *token*.\n\n- Register to the `D4Science TagMe VRE <https://services.d4science.org/group/tagme/>`_.\n- After login, click the *show* button on the left panel to get your authorization token.\n\nUsing TagMe\n-----------\n\nBefore making any call to the web service, you will need to set the module-wise ``GCUBE_TOKEN`` variable. You can do so with:\n\n.. code-block:: python\n\n import tagme\n # Set the authorization token for subsequent calls.\n tagme.GCUBE_TOKEN = \"<Your token goes here>\"\n\nAs an alternative to setting the module-wise variable, you can pass the token at each call with the optional ``gcube_token`` parameter.\n\nAnnotation\n----------\nThe annotation service lets you find entities mentioned in a text and link them to Wikipedia.\nThis is the so-called Sa2KB problem. You can annotate a text with:\n\n.. code-block:: python\n\n lunch_annotations = tagme.annotate(\"My favourite meal is Mexican burritos.\")\n\n # Print annotations with a score higher than 0.1\n for ann in lunch_annotations.get_annotations(0.1):\n     print ann\n\nThe ``annotate`` method accepts parameters to set the language (parameter ``lang``, that defaults to ``en``) and other stuff.\nSee the code for more information.\nAnnotations are associated a rho-score indicating the likelihood of an annotation being correct. In the example, we discard\nannotations with a score lower than 0.1.\n\nMention finding\n---------------\n\nThe mention finding service lets you find what parts of text may be a mention of an entity, without linking them to any entity.\n\n.. code-block:: python\n\n tomatoes_mentions = tagme.mentions(\"I definitely like ice cream better than tomatoes.\")\n\n for mention in tomatoes_mentions.mentions:\n     print mention\n\nThe ``mentions`` parameter accepts an optional language parameter ``lang`` that defaults to ``en``.\n\nEntity relatedness\n------------------\n\nTagme also gives you the semantic relatedness among pairs of entities. Entities can be either specified as Wikipedia titles\n(like ``Barack Obama``) or as Wikipedia IDs (like ``534366``, the ID of the entity Barack Obama).\nThe two methods for obtaining the relatedness among entities are ``relatedness_title`` (that accepts titles) and\n``relatedness_wid`` (that accepts Wikipedia IDs). Both methods accept either a single pair of entities or a list of pairs.\nYou can submit a list of pairs of any size, but the TagMe web service will be issued one query every 100 pairs.\nIf one entity does not exist, the result will be ``None``.\n\n.. code-block:: python\n\n # Get relatedness between a pair of entities specified by title.\n rels = tagme.relatedness_title((\"Barack Obama\", \"Italy\"))\n print \"Obama and italy have a semantic relation of\", rels.relatedness[0].rel\n\n # Get relatedness between a pair of entities specified by Wikipedia ID.\n rels = tagme.relatedness_wid((31717, 534366))\n print \"IDs 31717 and 534366 have a semantic relation of \", rels.relatedness[0].rel\n\n # Get relatedness between three pairs of entities specified by title.\n # The last entity does not exist, hence the value for that pair will be None.\n rels = tagme.relatedness_title([(\"Barack_Obama\", \"Italy\"),\n                                 (\"Italy\", \"Germany\"),\n                                 (\"Italy\", \"BAD ENTITY NAME\")])\n for rel in rels.relatedness:\n     print rel\n\n # You can also build a dictionary\n rels_dict = dict(rels)\n print rels_dict[(\"Barack Obama\", \"Italy\")]\n\nChangelog\n---------\n\nSee the `Changelog`_.\n\n.. _Changelog: CHANGELOG.rst", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marcocor/tagme-python", "keywords": "entity-linking nlp tagme api", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "tagme", "package_url": "https://pypi.org/project/tagme/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tagme/", "project_urls": {"Homepage": "https://github.com/marcocor/tagme-python"}, "release_url": "https://pypi.org/project/tagme/0.1.3/", "requires_dist": ["future", "python-dateutil", "requests", "six"], "requires_python": "", "summary": "Official TagMe API wrapper for Python", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Official TagMe API wrapper for Python.</p>\n<div id=\"installation-and-setup\">\n<h2>Installation and setup</h2>\n<p>This library is hosted by PyPI. You can install it with:</p>\n<p><tt>pip install tagme</tt></p>\n<p>To access the TagMe API you have to register (for free!) at the D4Science platform and obtain an authorization <em>token</em>.</p>\n<ul>\n<li>Register to the <a href=\"https://services.d4science.org/group/tagme/\" rel=\"nofollow\">D4Science TagMe VRE</a>.</li>\n<li>After login, click the <em>show</em> button on the left panel to get your authorization token.</li>\n</ul>\n</div>\n<div id=\"using-tagme\">\n<h2>Using TagMe</h2>\n<p>Before making any call to the web service, you will need to set the module-wise <tt>GCUBE_TOKEN</tt> variable. You can do so with:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tagme</span>\n<span class=\"c1\"># Set the authorization token for subsequent calls.</span>\n<span class=\"n\">tagme</span><span class=\"o\">.</span><span class=\"n\">GCUBE_TOKEN</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;Your token goes here&gt;\"</span>\n</pre>\n<p>As an alternative to setting the module-wise variable, you can pass the token at each call with the optional <tt>gcube_token</tt> parameter.</p>\n</div>\n<div id=\"annotation\">\n<h2>Annotation</h2>\n<p>The annotation service lets you find entities mentioned in a text and link them to Wikipedia.\nThis is the so-called Sa2KB problem. You can annotate a text with:</p>\n<pre><span class=\"n\">lunch_annotations</span> <span class=\"o\">=</span> <span class=\"n\">tagme</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"My favourite meal is Mexican burritos.\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print annotations with a score higher than 0.1</span>\n<span class=\"k\">for</span> <span class=\"n\">ann</span> <span class=\"ow\">in</span> <span class=\"n\">lunch_annotations</span><span class=\"o\">.</span><span class=\"n\">get_annotations</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"n\">ann</span>\n</pre>\n<p>The <tt>annotate</tt> method accepts parameters to set the language (parameter <tt>lang</tt>, that defaults to <tt>en</tt>) and other stuff.\nSee the code for more information.\nAnnotations are associated a rho-score indicating the likelihood of an annotation being correct. In the example, we discard\nannotations with a score lower than 0.1.</p>\n</div>\n<div id=\"mention-finding\">\n<h2>Mention finding</h2>\n<p>The mention finding service lets you find what parts of text may be a mention of an entity, without linking them to any entity.</p>\n<pre><span class=\"n\">tomatoes_mentions</span> <span class=\"o\">=</span> <span class=\"n\">tagme</span><span class=\"o\">.</span><span class=\"n\">mentions</span><span class=\"p\">(</span><span class=\"s2\">\"I definitely like ice cream better than tomatoes.\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">mention</span> <span class=\"ow\">in</span> <span class=\"n\">tomatoes_mentions</span><span class=\"o\">.</span><span class=\"n\">mentions</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">mention</span>\n</pre>\n<p>The <tt>mentions</tt> parameter accepts an optional language parameter <tt>lang</tt> that defaults to <tt>en</tt>.</p>\n</div>\n<div id=\"entity-relatedness\">\n<h2>Entity relatedness</h2>\n<p>Tagme also gives you the semantic relatedness among pairs of entities. Entities can be either specified as Wikipedia titles\n(like <tt>Barack Obama</tt>) or as Wikipedia IDs (like <tt>534366</tt>, the ID of the entity Barack Obama).\nThe two methods for obtaining the relatedness among entities are <tt>relatedness_title</tt> (that accepts titles) and\n<tt>relatedness_wid</tt> (that accepts Wikipedia IDs). Both methods accept either a single pair of entities or a list of pairs.\nYou can submit a list of pairs of any size, but the TagMe web service will be issued one query every 100 pairs.\nIf one entity does not exist, the result will be <tt>None</tt>.</p>\n<pre><span class=\"c1\"># Get relatedness between a pair of entities specified by title.</span>\n<span class=\"n\">rels</span> <span class=\"o\">=</span> <span class=\"n\">tagme</span><span class=\"o\">.</span><span class=\"n\">relatedness_title</span><span class=\"p\">((</span><span class=\"s2\">\"Barack Obama\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Italy\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Obama and italy have a semantic relation of\"</span><span class=\"p\">,</span> <span class=\"n\">rels</span><span class=\"o\">.</span><span class=\"n\">relatedness</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rel</span>\n\n<span class=\"c1\"># Get relatedness between a pair of entities specified by Wikipedia ID.</span>\n<span class=\"n\">rels</span> <span class=\"o\">=</span> <span class=\"n\">tagme</span><span class=\"o\">.</span><span class=\"n\">relatedness_wid</span><span class=\"p\">((</span><span class=\"mi\">31717</span><span class=\"p\">,</span> <span class=\"mi\">534366</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"IDs 31717 and 534366 have a semantic relation of \"</span><span class=\"p\">,</span> <span class=\"n\">rels</span><span class=\"o\">.</span><span class=\"n\">relatedness</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rel</span>\n\n<span class=\"c1\"># Get relatedness between three pairs of entities specified by title.</span>\n<span class=\"c1\"># The last entity does not exist, hence the value for that pair will be None.</span>\n<span class=\"n\">rels</span> <span class=\"o\">=</span> <span class=\"n\">tagme</span><span class=\"o\">.</span><span class=\"n\">relatedness_title</span><span class=\"p\">([(</span><span class=\"s2\">\"Barack_Obama\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Italy\"</span><span class=\"p\">),</span>\n                                <span class=\"p\">(</span><span class=\"s2\">\"Italy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Germany\"</span><span class=\"p\">),</span>\n                                <span class=\"p\">(</span><span class=\"s2\">\"Italy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"BAD ENTITY NAME\"</span><span class=\"p\">)])</span>\n<span class=\"k\">for</span> <span class=\"n\">rel</span> <span class=\"ow\">in</span> <span class=\"n\">rels</span><span class=\"o\">.</span><span class=\"n\">relatedness</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">rel</span>\n\n<span class=\"c1\"># You can also build a dictionary</span>\n<span class=\"n\">rels_dict</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">rels</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">rels_dict</span><span class=\"p\">[(</span><span class=\"s2\">\"Barack Obama\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Italy\"</span><span class=\"p\">)]</span>\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See the <a href=\"CHANGELOG.rst\" rel=\"nofollow\">Changelog</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2757719, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "c6de4a344f0085b56cef4f0d7f545d34", "sha256": "403dbcad8b9150d10da72f5d401ee91cf4c2b2fadd55ef840f23c8ccedaf369d"}, "downloads": -1, "filename": "tagme-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "c6de4a344f0085b56cef4f0d7f545d34", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5122, "upload_time": "2016-11-25T14:10:43", "upload_time_iso_8601": "2016-11-25T14:10:43.513959Z", "url": "https://files.pythonhosted.org/packages/4d/df/ee401a0c8a8da9172e330d62429722973af97a9f497fa71aa8186c7105c9/tagme-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca4d11eef42d4e70bd554f83c3dc727d", "sha256": "de42df17deab979840d142dacf65a080fd538d1b72e3fddf7797982f161009e2"}, "downloads": -1, "filename": "tagme-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ca4d11eef42d4e70bd554f83c3dc727d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3908, "upload_time": "2016-11-25T14:10:45", "upload_time_iso_8601": "2016-11-25T14:10:45.922632Z", "url": "https://files.pythonhosted.org/packages/13/6b/adafc6afdebc0003a006d3a73c6562e1d8646867b8e164d0e8cffc0f55c8/tagme-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "38b8c85f7a9884f2cea12305d9e50e36", "sha256": "ca0e54058e050c1d48f6a0a90b2b5e9916c60cd51d1b70e0a4418ce439c27dab"}, "downloads": -1, "filename": "tagme-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38b8c85f7a9884f2cea12305d9e50e36", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8196, "upload_time": "2017-04-06T13:48:03", "upload_time_iso_8601": "2017-04-06T13:48:03.544128Z", "url": "https://files.pythonhosted.org/packages/7b/ea/bbdb46fec64423ea0b28fd508ab8ee8b59a918db090d5e073dd6f3bf227f/tagme-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ae8de16430f024158f9d1fa37b88067", "sha256": "1cf4fc57bc5443ab595ba6c82178f42cedac07ab6b068e5ba1a4242b147b0df6"}, "downloads": -1, "filename": "tagme-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7ae8de16430f024158f9d1fa37b88067", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5719, "upload_time": "2017-04-06T13:48:09", "upload_time_iso_8601": "2017-04-06T13:48:09.769080Z", "url": "https://files.pythonhosted.org/packages/22/84/1b2700d452518ebec12161289b4e67df2fc1769f11bcde323d654e374029/tagme-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38b8c85f7a9884f2cea12305d9e50e36", "sha256": "ca0e54058e050c1d48f6a0a90b2b5e9916c60cd51d1b70e0a4418ce439c27dab"}, "downloads": -1, "filename": "tagme-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38b8c85f7a9884f2cea12305d9e50e36", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8196, "upload_time": "2017-04-06T13:48:03", "upload_time_iso_8601": "2017-04-06T13:48:03.544128Z", "url": "https://files.pythonhosted.org/packages/7b/ea/bbdb46fec64423ea0b28fd508ab8ee8b59a918db090d5e073dd6f3bf227f/tagme-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ae8de16430f024158f9d1fa37b88067", "sha256": "1cf4fc57bc5443ab595ba6c82178f42cedac07ab6b068e5ba1a4242b147b0df6"}, "downloads": -1, "filename": "tagme-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7ae8de16430f024158f9d1fa37b88067", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5719, "upload_time": "2017-04-06T13:48:09", "upload_time_iso_8601": "2017-04-06T13:48:09.769080Z", "url": "https://files.pythonhosted.org/packages/22/84/1b2700d452518ebec12161289b4e67df2fc1769f11bcde323d654e374029/tagme-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:28 2020"}