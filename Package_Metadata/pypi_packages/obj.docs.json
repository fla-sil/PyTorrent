{"info": {"author": "Bart Thate", "author_email": "bthate@dds.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "\n\nOBJ is a pure python package that provides an object class that can save/load objects in JSON format to disk, thus providing persistence to objects.\nFiles are saved with a timestamp in their filename, so that searching in a time related manner becomes possible.\n\nOBJ has a \"no-clause MIT license\" that should be the most liberal license you can get at the year 2018.\n\nsource code is available with:\n\n::\n\n hg clone http://bitbucket.org/bthate/obj\n\nOBJ is on pypi, see https://pypi.org/project/obj\n\nyou can install it with:\n\n::\n\n  pip3 install obj\n\nconfiguration\n=============\n\nto edit config options use the ed command:\n\n::\n\n obj ed obj.shell.Cfg channel \\#obbot\n ok channel=\"#obbot\"\n\nprogramming\n===========\n\nProgramming your own commands is easy, your can load your own module with the -m option.\nA command is a function with one argument, the event that was generated on the bot.\n\n::\n\n def mycommand(event):\n\n     <<< your code here >>>\n\nYou can use event.reply() to send response back to the user.\n\nmodules\n=======\n\nThe following modules can be loaded from the ob package space:\n\n::\n\n base\t\t- the base module containing the Object class providing load/save to JSON functionality.\n event\t\t- the Event class generated on bots when data is read from the socket.\n fleet\t\t- list of registered bots managed in the Fleet class.\n handler\t- the event handler of the bot.\n loader\t\t- Loader class to load modules from ob space into the program.\n shell\t\t- shell related startup, cli arguments parsing and logging.\n store\t\t- database functionality that can search through objects stored on disk.\n task\t\t- thread module to launch, kill Tasks.\n  \n    ", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bthate/obj.docs", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "obj.docs", "package_url": "https://pypi.org/project/obj.docs/", "platform": "", "project_url": "https://pypi.org/project/obj.docs/", "project_urls": {"Homepage": "https://bitbucket.org/bthate/obj.docs"}, "release_url": "https://pypi.org/project/obj.docs/4/", "requires_dist": null, "requires_python": "", "summary": "documentation for OBJ programs", "version": "4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>OBJ is a pure python package that provides an object class that can save/load objects in JSON format to disk, thus providing persistence to objects.\nFiles are saved with a timestamp in their filename, so that searching in a time related manner becomes possible.</p>\n<p>OBJ has a \u201cno-clause MIT license\u201d that should be the most liberal license you can get at the year 2018.</p>\n<p>source code is available with:</p>\n<pre>hg clone http://bitbucket.org/bthate/obj\n</pre>\n<p>OBJ is on pypi, see <a href=\"https://pypi.org/project/obj\" rel=\"nofollow\">https://pypi.org/project/obj</a></p>\n<p>you can install it with:</p>\n<pre>pip3 install obj\n</pre>\n<div id=\"configuration\">\n<h2>configuration</h2>\n<p>to edit config options use the ed command:</p>\n<pre>obj ed obj.shell.Cfg channel \\#obbot\nok channel=\"#obbot\"\n</pre>\n</div>\n<div id=\"programming\">\n<h2>programming</h2>\n<p>Programming your own commands is easy, your can load your own module with the -m option.\nA command is a function with one argument, the event that was generated on the bot.</p>\n<pre>def mycommand(event):\n\n    &lt;&lt;&lt; your code here &gt;&gt;&gt;\n</pre>\n<p>You can use event.reply() to send response back to the user.</p>\n</div>\n<div id=\"modules\">\n<h2>modules</h2>\n<p>The following modules can be loaded from the ob package space:</p>\n<pre>base           - the base module containing the Object class providing load/save to JSON functionality.\nevent          - the Event class generated on bots when data is read from the socket.\nfleet          - list of registered bots managed in the Fleet class.\nhandler        - the event handler of the bot.\nloader         - Loader class to load modules from ob space into the program.\nshell          - shell related startup, cli arguments parsing and logging.\nstore          - database functionality that can search through objects stored on disk.\ntask           - thread module to launch, kill Tasks.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4368349, "releases": {"1": [{"comment_text": "", "digests": {"md5": "b2c32de1b07127b1553741a0620c6d16", "sha256": "16967f13d23eca20a7c273b98084fc6b921e95210c7e2735c77c84634e8ea798"}, "downloads": -1, "filename": "obj.docs-1.tar.gz", "has_sig": false, "md5_digest": "b2c32de1b07127b1553741a0620c6d16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81617, "upload_time": "2018-09-26T13:35:24", "upload_time_iso_8601": "2018-09-26T13:35:24.320744Z", "url": "https://files.pythonhosted.org/packages/7e/19/63b9dc7f0ff0b5770e18b39513161f1ba7b886643a049c2cc52833b9209d/obj.docs-1.tar.gz", "yanked": false}], "2": [{"comment_text": "", "digests": {"md5": "b981106976a592a63fcb29988003f829", "sha256": "8052ad584b186a0cd6e9b1b32ed6497e93fcc1c0c3306fe663e8a72fc1e77d1b"}, "downloads": -1, "filename": "obj.docs-2.tar.gz", "has_sig": false, "md5_digest": "b981106976a592a63fcb29988003f829", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81620, "upload_time": "2018-10-09T11:07:34", "upload_time_iso_8601": "2018-10-09T11:07:34.916034Z", "url": "https://files.pythonhosted.org/packages/ec/ea/9beb56fe192fd8eb1af720d9b70243262062a4ca40d5019fa75018b210be/obj.docs-2.tar.gz", "yanked": false}], "3": [{"comment_text": "", "digests": {"md5": "d5c1865fe3eb34e8a660bca6595adc88", "sha256": "d0665e2ee5a9f9328e290e9b47eae56e2fde5aba31ebf69bf6127918f065091c"}, "downloads": -1, "filename": "obj.docs-3.tar.gz", "has_sig": false, "md5_digest": "d5c1865fe3eb34e8a660bca6595adc88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83297, "upload_time": "2018-10-12T11:44:52", "upload_time_iso_8601": "2018-10-12T11:44:52.512057Z", "url": "https://files.pythonhosted.org/packages/ed/10/96e20bbc0517c34709875c13270c5089ab38c39433c8b7f54c14a197149a/obj.docs-3.tar.gz", "yanked": false}], "4": [{"comment_text": "", "digests": {"md5": "7326e474b61dbd4f2b4d020c6eaaec89", "sha256": "8ef7602af4ba2ca62791474b5214006704e1e88df57b59bc117691aed6980c4b"}, "downloads": -1, "filename": "obj.docs-4.tar.gz", "has_sig": false, "md5_digest": "7326e474b61dbd4f2b4d020c6eaaec89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83283, "upload_time": "2018-10-12T11:53:26", "upload_time_iso_8601": "2018-10-12T11:53:26.731679Z", "url": "https://files.pythonhosted.org/packages/85/5a/ade8a9491bbbde666bc1aea202c00a53802e3f7688a8409cf808bdc15930/obj.docs-4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7326e474b61dbd4f2b4d020c6eaaec89", "sha256": "8ef7602af4ba2ca62791474b5214006704e1e88df57b59bc117691aed6980c4b"}, "downloads": -1, "filename": "obj.docs-4.tar.gz", "has_sig": false, "md5_digest": "7326e474b61dbd4f2b4d020c6eaaec89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83283, "upload_time": "2018-10-12T11:53:26", "upload_time_iso_8601": "2018-10-12T11:53:26.731679Z", "url": "https://files.pythonhosted.org/packages/85/5a/ade8a9491bbbde666bc1aea202c00a53802e3f7688a8409cf808bdc15930/obj.docs-4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}