{"info": {"author": "Konstantin Stepanov", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "IPRPC\n=====\n\n\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043e\u0440\u0430 json-rpc \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u0445 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0438 \u0432\u044b\u0437\u043e\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u043e\u0432.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f::\n\n    from iprpc import method, MethodExecutor\n\n    class Handler:\n        @method()\n        async def sum(self, a: int, b: int) -> int:\n            return a + b\n\n    executor = MethodExecutor(Handler())\n    res = await executor.call(b'{\"method\":\"sum\",\"params\":{\"a\":1,\"b\":2}}')\n    assert res.result == 3\n    assert res.error is None\n\n    res = await executor.call(b'{\"method\":\"sum\",\"params\":{\"a\":\"NaN\",\"b\":2}}')\n    assert res.result is None\n    assert res.error is not None\n    print(res.error)\n    >> InvalidArguments(Exception('value is not a valid integer in a',),)\n\niprpc.MethodExecutor \u0432\u0438\u0434\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u043c\u0435\u0442\u043e\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043c\u0435\u0447\u0435\u043d\u044b \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043e\u043c iprpc.method.\n\u0415\u0441\u043b\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u0430\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u043e\u0435 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430(\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438),\n\u0442\u043e \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 name \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430::\n\n    class Handler:\n        @method(name=\"math.sum\")\n        async def sum(self, a: int, b: int) -> int:\n            return a + b\n\n\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0432 \u043d\u0435\u0433\u043e \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\npython \u0443\u0436\u0435 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f. \u0422.\u0435., \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0432\u044b\u0448\u0435, \u0432\u044b\u0437\u043e\u0432\n`{\"method\":\"sum\",\"params\":{\"a\":1,\"b\":2}`\n\u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u043e\u0439.\n\u041d\u0443\u0436\u043d\u043e^ `{\"method\":\"math.sum\",\"params\":{\"a\":1,\"b\":2}`\n\n\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n-----------------\n\n\u041f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 JSON \u0441\u0445\u0435\u043c\u0435::\n\n    {\n        \"type\": \"object\",\n        \"required\": [ \"method\" ],\n        \"properties\": {\n            \"method\": {\n                \"type\": \"string\"\n            },\n            \"params\": {\n                \"type\": \"object\"\n            }\n        }\n    }\n\n\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430. \u041a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430 \u0438\u043b\u0438/\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n\u043c\u043e\u0433\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0432 MethodExecutor \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 method_key \u0438\u043b\u0438/\u0438 params_key::\n\n    executor = iprpc.MethodExecutor(TestHandler(), method_key='name', params_key='args')\n    await executor.call(b'{\"name\":\"sum\",\"args\":{\"a\":1,\"b\":2}}')\n\n\u0422\u0430\u043a\u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043c\u0435\u0442\u043e\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u043a\u043e\u0440\u043d\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e params_key \u0434\u043e\u043b\u0436\u0435\u043d\n\u0431\u044b\u0442\u044c \u0440\u0430\u0432\u0435\u043d None::\n\n    executor = iprpc.MethodExecutor(TestHandler(), params_key=None)\n    await executor.call(b'{\"method\":\"sum\",\"a\":1,\"b\":2}')\n\n\n\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e JSON Schema\n-------------------------------\n\n\u0414\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u0430\u0432\u0438\u043b \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0430\u0432\u0438\u043b.\n\u041f\u0440\u0430\u0432\u0438\u043b\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447 - \u044d\u0442\u043e \u0438\u043c\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u044d\u0442\u043e\njson \u0441\u0445\u0435\u043c\u0430.\n\u041f\u0440\u0438\u043c\u0435\u0440::\n\n    class Handler:\n\n        @method(validators={\"a\": {\"type\": \"integer\"},\"b\": {\"type\": \"integer\"}})\n        async def sum(self, a, b):\n            return a + b\n\n\n\n\u0412\u0430\u043b\u0438\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e pydantinc\n----------------------------\n\n\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u043e\u0432 \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438 \u043c\u0435\u0442\u043e\u0434\u0430.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440::\n\n    class Handler:\n        @method()\n        async def sum(self, a: int, b: int):\n            return a + b\n\n\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0433\u043e\n\u0442\u0438\u043f\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e(\u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e).\n\n\n\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n-----------------------\n\n\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d \u043a \u043f\u0440\u043e\u0441\u0442\u044b\u043c \u0442\u0438\u043f\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f\n\u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432 JSON.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 datetime, \u0442\u043e \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 iso \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n\u0414\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441\u043c. \u0444\u0443\u043d\u043a\u0446\u0438\u044e `pydantic.json.pydantic_encoder`\n\n\u0421\u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440::\n\n    from pydantic import BaseModel\n\n    class User(BaseModel):\n        id: int\n        name: str\n\n    class Handler:\n        @method()\n        async def rename(self, model: User, name: str) -> User:\n            model.name = name\n            return model\n\n    executor = MethodExecutor(Handler())\n    r = await executor.call(b'{\"method\":\"rename\",\"params\":{\"model\": {\"id\": 1, \"name\": \"Jhon Snow\"},\"name\": \"Jon Snow\"}}'\n    print(r.result)\n    >> {'id': 1, 'name': 'Jon Snow'}\n\n\nJSON-RPC 2.0\n------------\n\n\u041f\u0440\u0438\u043c\u0435\u0440::\n\n    from iprpc import method, JsonRpcError, JsonRpcExecutor\n\n    class Handler:\n        @method()\n        async def do_something(self, arg1: str):\n            return arg1\n\n    executor = JsonRpcExecutor(Handler())\n\n    request = (\n        b'{\"jsonrpc\": \"2.0\", \"id\": 1, '\n        b'\"method\": \"do_something\", \"params\": {\"arg1\": 123}}'\n    )\n    resp = await executor.execute(request)\n\n    print('<< %s' % resp)\n    << b'{\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"123\"}'", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.app.ipl/inplat/iprpc/", "keywords": "iprpc", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "iprpc", "package_url": "https://pypi.org/project/iprpc/", "platform": "", "project_url": "https://pypi.org/project/iprpc/", "project_urls": {"Homepage": "https://gitlab.app.ipl/inplat/iprpc/"}, "release_url": "https://pypi.org/project/iprpc/0.2.1/", "requires_dist": null, "requires_python": "~=3.6", "summary": "InPlat JSON RPC library", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043e\u0440\u0430 json-rpc \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0438\u0445 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0438 \u0432\u044b\u0437\u043e\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u043e\u0432.</p>\n<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p>\n<pre>from iprpc import method, MethodExecutor\n\nclass Handler:\n    @method()\n    async def sum(self, a: int, b: int) -&gt; int:\n        return a + b\n\nexecutor = MethodExecutor(Handler())\nres = await executor.call(b'{\"method\":\"sum\",\"params\":{\"a\":1,\"b\":2}}')\nassert res.result == 3\nassert res.error is None\n\nres = await executor.call(b'{\"method\":\"sum\",\"params\":{\"a\":\"NaN\",\"b\":2}}')\nassert res.result is None\nassert res.error is not None\nprint(res.error)\n&gt;&gt; InvalidArguments(Exception('value is not a valid integer in a',),)\n</pre>\n<p>iprpc.MethodExecutor \u0432\u0438\u0434\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u043c\u0435\u0442\u043e\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043c\u0435\u0447\u0435\u043d\u044b \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043e\u043c iprpc.method.\n\u0415\u0441\u043b\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u0430\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u043e\u0435 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430(\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438),\n\u0442\u043e \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 name \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430:</p>\n<pre>class Handler:\n    @method(name=\"math.sum\")\n    async def sum(self, a: int, b: int) -&gt; int:\n        return a + b\n</pre>\n<p>\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0432 \u043d\u0435\u0433\u043e \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\npython \u0443\u0436\u0435 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f. \u0422.\u0435., \u0432 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0432\u044b\u0448\u0435, \u0432\u044b\u0437\u043e\u0432\n<cite>{\u201cmethod\u201d:\u201dsum\u201d,\u201dparams\u201d:{\u201ca\u201d:1,\u201db\u201d:2}</cite>\n\u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u043e\u0439.\n\u041d\u0443\u0436\u043d\u043e^ <cite>{\u201cmethod\u201d:\u201dmath.sum\u201d,\u201dparams\u201d:{\u201ca\u201d:1,\u201db\u201d:2}</cite></p>\n<div id=\"id1\">\n<h2>\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430</h2>\n<p>\u041f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 JSON \u0441\u0445\u0435\u043c\u0435:</p>\n<pre>{\n    \"type\": \"object\",\n    \"required\": [ \"method\" ],\n    \"properties\": {\n        \"method\": {\n            \"type\": \"string\"\n        },\n        \"params\": {\n            \"type\": \"object\"\n        }\n    }\n}\n</pre>\n<p>\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0430. \u041a\u043b\u044e\u0447\u0438 \u043e\u0431\u044a\u0435\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430 \u0438\u043b\u0438/\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n\u043c\u043e\u0433\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0432 MethodExecutor \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 method_key \u0438\u043b\u0438/\u0438 params_key:</p>\n<pre>executor = iprpc.MethodExecutor(TestHandler(), method_key='name', params_key='args')\nawait executor.call(b'{\"name\":\"sum\",\"args\":{\"a\":1,\"b\":2}}')\n</pre>\n<p>\u0422\u0430\u043a\u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043c\u0435\u0442\u043e\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u043a\u043e\u0440\u043d\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e params_key \u0434\u043e\u043b\u0436\u0435\u043d\n\u0431\u044b\u0442\u044c \u0440\u0430\u0432\u0435\u043d None:</p>\n<pre>executor = iprpc.MethodExecutor(TestHandler(), params_key=None)\nawait executor.call(b'{\"method\":\"sum\",\"a\":1,\"b\":2}')\n</pre>\n</div>\n<div id=\"json-schema\">\n<h2>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e JSON Schema</h2>\n<p>\u0414\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u0430\u0432\u0438\u043b \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0430\u0432\u0438\u043b.\n\u041f\u0440\u0430\u0432\u0438\u043b\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0433\u0434\u0435 \u043a\u043b\u044e\u0447 - \u044d\u0442\u043e \u0438\u043c\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430, \u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u044d\u0442\u043e\njson \u0441\u0445\u0435\u043c\u0430.\n\u041f\u0440\u0438\u043c\u0435\u0440:</p>\n<pre>class Handler:\n\n    @method(validators={\"a\": {\"type\": \"integer\"},\"b\": {\"type\": \"integer\"}})\n    async def sum(self, a, b):\n        return a + b\n</pre>\n</div>\n<div id=\"pydantinc\">\n<h2>\u0412\u0430\u043b\u0438\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e pydantinc</h2>\n<p>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u043e\u0432 \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438 \u043c\u0435\u0442\u043e\u0434\u0430.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:</p>\n<pre>class Handler:\n    @method()\n    async def sum(self, a: int, b: int):\n        return a + b\n</pre>\n<p>\u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0433\u043e\n\u0442\u0438\u043f\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043e(\u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e).</p>\n</div>\n<div id=\"id2\">\n<h2>\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430</h2>\n<p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d \u043a \u043f\u0440\u043e\u0441\u0442\u044b\u043c \u0442\u0438\u043f\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f\n\u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432 JSON.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 datetime, \u0442\u043e \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 iso \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n\u0414\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441\u043c. \u0444\u0443\u043d\u043a\u0446\u0438\u044e <cite>pydantic.json.pydantic_encoder</cite></p>\n<p>\u0421\u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440:</p>\n<pre>from pydantic import BaseModel\n\nclass User(BaseModel):\n    id: int\n    name: str\n\nclass Handler:\n    @method()\n    async def rename(self, model: User, name: str) -&gt; User:\n        model.name = name\n        return model\n\nexecutor = MethodExecutor(Handler())\nr = await executor.call(b'{\"method\":\"rename\",\"params\":{\"model\": {\"id\": 1, \"name\": \"Jhon Snow\"},\"name\": \"Jon Snow\"}}'\nprint(r.result)\n&gt;&gt; {'id': 1, 'name': 'Jon Snow'}\n</pre>\n</div>\n<div id=\"json-rpc-2-0\">\n<h2>JSON-RPC 2.0</h2>\n<p>\u041f\u0440\u0438\u043c\u0435\u0440:</p>\n<pre>from iprpc import method, JsonRpcError, JsonRpcExecutor\n\nclass Handler:\n    @method()\n    async def do_something(self, arg1: str):\n        return arg1\n\nexecutor = JsonRpcExecutor(Handler())\n\nrequest = (\n    b'{\"jsonrpc\": \"2.0\", \"id\": 1, '\n    b'\"method\": \"do_something\", \"params\": {\"arg1\": 123}}'\n)\nresp = await executor.execute(request)\n\nprint('&lt;&lt; %s' % resp)\n&lt;&lt; b'{\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"123\"}'\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6993394, "releases": {"0": [{"comment_text": "", "digests": {"md5": "01127a7cc0df9a0db80828365f3df538", "sha256": "6cc9848dd86747f8d4248bd6ae043958d1c8be5088902ebd8384b8da41ff75dc"}, "downloads": -1, "filename": "iprpc-0-py3.6.egg", "has_sig": false, "md5_digest": "01127a7cc0df9a0db80828365f3df538", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": "~=3.6", "size": 20085, "upload_time": "2020-04-10T12:34:07", "upload_time_iso_8601": "2020-04-10T12:34:07.793850Z", "url": "https://files.pythonhosted.org/packages/31/0b/157f9f3b11c212ac054a435d68a6eb1d5d5eb26c05d45f6e4cf2bf00d45a/iprpc-0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebaad7af23d62f48a5f2fcd594a9f3c3", "sha256": "eae77163db9b3a714038e1cc52fc5c23d145e38fe558076c25b47677ac3b0eac"}, "downloads": -1, "filename": "iprpc-0.tar.gz", "has_sig": false, "md5_digest": "ebaad7af23d62f48a5f2fcd594a9f3c3", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 12697, "upload_time": "2020-04-10T12:34:10", "upload_time_iso_8601": "2020-04-10T12:34:10.157206Z", "url": "https://files.pythonhosted.org/packages/59/47/1ddf75df2a917ef3d425429f684c0de899746ae918ca8b802c78c7397e20/iprpc-0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "964b093918fc92252441f9264d6463f7", "sha256": "1b0350ad6506a9e0fddefccd051762b90458b23dca8406299f0224634ce611ad"}, "downloads": -1, "filename": "iprpc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "964b093918fc92252441f9264d6463f7", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 14879, "upload_time": "2020-04-10T13:51:40", "upload_time_iso_8601": "2020-04-10T13:51:40.624526Z", "url": "https://files.pythonhosted.org/packages/46/75/23f727dcdb0de5051f2f81dcf39911169e130ffae5ce8e5180c565759fb5/iprpc-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "964b093918fc92252441f9264d6463f7", "sha256": "1b0350ad6506a9e0fddefccd051762b90458b23dca8406299f0224634ce611ad"}, "downloads": -1, "filename": "iprpc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "964b093918fc92252441f9264d6463f7", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 14879, "upload_time": "2020-04-10T13:51:40", "upload_time_iso_8601": "2020-04-10T13:51:40.624526Z", "url": "https://files.pythonhosted.org/packages/46/75/23f727dcdb0de5051f2f81dcf39911169e130ffae5ce8e5180c565759fb5/iprpc-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:34 2020"}