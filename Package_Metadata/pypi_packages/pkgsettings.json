{"info": {"author": "Niels Lensink", "author_email": "niels.lenssink@kpn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "pkgsettings\n===========\n\n.. image:: https://secure.travis-ci.org/kpn-digital/py-pkgsettings.svg?branch=master\n    :target:  http://travis-ci.org/kpn-digital/py-pkgsettings?branch=master\n\n.. image:: https://img.shields.io/codecov/c/github/kpn-digital/py-pkgsettings/master.svg\n    :target: http://codecov.io/github/kpn-digital/py-pkgsettings?branch=master\n\n.. image:: https://img.shields.io/pypi/v/pkgsettings.svg\n    :target: https://pypi.python.org/pypi/pkgsettings\n\n.. image:: https://readthedocs.org/projects/py-pkgsettings/badge/?version=latest\n    :target: http://py-pkgsettings.readthedocs.org/en/latest/?badge=latest\n\n\nGoal\n----\n\nThe goal of this package is to offer an easy, generic and extendable way\nof configuring a package.\n\nInstallation\n------------\n.. start_installation\n\n.. code-block:: bash\n\n    $ pip install pkgsettings\n\n.. end_installation\n\nUsage\n-----\n.. start_usage\n.. code-block:: python\n\n    from pkgsettings import Settings\n\n    # Create the settings object for your package to use\n    settings = Settings()\n\n    # Now let's define the default settings\n    settings.configure(hello='World', debug=False)\n\nBy calling the configure you actually inject a ``layer`` of settings.\nWhen requesting a setting it will go through all layers until it finds the\nrequested key.\n\nNow if someone starts using your package it can easily modify the active\nsettings of your package by calling the configure again.\n\n.. code-block:: python\n\n    from my_awesome_package.conf import settings\n\n    # Lets change the configuration here\n    settings.configure(debug=True)\n\n\nNow from within your package you can work with the settings like so:\n\n.. code-block:: python\n\n    from conf import settings\n\n    print(settings.debug) # This will print: True\n    print(settings.hello) # This will print: World\n\nIt is also possible to pass an object instead of kwargs.\nThe settings object will call ``getattr(ur_object, key)``\nAn example below:\n\n.. code-block:: python\n\n    class MySettings(object):\n        def __init__(self):\n            self.debug = True\n\n    settings = Settings()\n    settings.configure(MySettings())\n    print(settings.debug) # This will print: True\n\nMore advanced usage\n-------------------\n\nThe settings object can also be used as context manager:\n\n.. code-block:: python\n\n    with settings(debug=True):\n        print(settings.debug) # This will print: True\n\n    print(settings.debug) # This will print: False\n\nAdditionally you can also use this as a decorator:\n\n.. code-block:: python\n\n    @settings(debug=True)\n    def go()\n        print(settings.debug) # This will print: True\n\n    go()\n\n    print(settings.debug) # This will print: False\n\nPrefixed Settings\n-----------------\n\nIf a group of settings share a common prefix, you can make\nuse of the ``PrefixedSettings`` class and pass the desired\nprefix as an argument, together with the main settings instance.\nAll attributes will be automatically prefixed when accessed.\n\n.. code-block:: python\n\n    from pkgsettings import PrefixedSettings, Settings\n\n    # First create the settings object for your package to use\n    settings = Settings()\n\n    # Suppose some of your settings are all prefixed with 'FOO'\n    settings.configure(FOO_a='a', FOO_b='b', c='c', debug=False)\n\n    # Create a PrefixedSettings instance with the desired prefix\n    foo_settings = PrefixedSettings(settings, 'FOO_')\n\n    foo_settings.a # This will print: a\n    foo_settings.b # This will print: b\n\n    foo_settings.c # This will raise an AttributeError\n\n.. end_usage", "description_content_type": null, "docs_url": "https://pythonhosted.org/pkgsettings/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kpn-digital/py-pkgsettings.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pkgsettings", "package_url": "https://pypi.org/project/pkgsettings/", "platform": "", "project_url": "https://pypi.org/project/pkgsettings/", "project_urls": {"Homepage": "https://github.com/kpn-digital/py-pkgsettings.git"}, "release_url": "https://pypi.org/project/pkgsettings/0.12.0/", "requires_dist": null, "requires_python": "", "summary": "Python package to ease the configuration of packages", "version": "0.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/kpn-digital/py-pkgsettings?branch=master\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/kpn-digital/py-pkgsettings.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01d4c36d2bb7331309d26fbe17b2ca96192e93af/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6b706e2d6469676974616c2f70792d706b6773657474696e67732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://codecov.io/github/kpn-digital/py-pkgsettings?branch=master\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/github/kpn-digital/py-pkgsettings/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/312d6c3d18fd9012326e79a64c1fb3e825bffcaf/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6b706e2d6469676974616c2f70792d706b6773657474696e67732f6d61737465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pkgsettings\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pkgsettings.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65d331c77d3dc553b829f3c245137d97e0bf51b6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706b6773657474696e67732e737667\"></a>\n<a href=\"http://py-pkgsettings.readthedocs.org/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/py-pkgsettings/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fae5c34585795f9b460cc8ffc3177cddbf1affe1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70792d706b6773657474696e67732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<div id=\"goal\">\n<h2>Goal</h2>\n<p>The goal of this package is to offer an easy, generic and extendable way\nof configuring a package.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install pkgsettings\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pkgsettings</span> <span class=\"kn\">import</span> <span class=\"n\">Settings</span>\n\n<span class=\"c1\"># Create the settings object for your package to use</span>\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">Settings</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Now let's define the default settings</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">hello</span><span class=\"o\">=</span><span class=\"s1\">'World'</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>By calling the configure you actually inject a <tt>layer</tt> of settings.\nWhen requesting a setting it will go through all layers until it finds the\nrequested key.</p>\n<p>Now if someone starts using your package it can easily modify the active\nsettings of your package by calling the configure again.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">my_awesome_package.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"c1\"># Lets change the configuration here</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Now from within your package you can work with the settings like so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: True</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">hello</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: World</span>\n</pre>\n<p>It is also possible to pass an object instead of kwargs.\nThe settings object will call <tt>getattr(ur_object, key)</tt>\nAn example below:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MySettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">Settings</span><span class=\"p\">()</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">MySettings</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: True</span>\n</pre>\n</div>\n<div id=\"more-advanced-usage\">\n<h2>More advanced usage</h2>\n<p>The settings object can also be used as context manager:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">settings</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: True</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: False</span>\n</pre>\n<p>Additionally you can also use this as a decorator:</p>\n<pre><span class=\"nd\">@settings</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">go</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: True</span>\n\n<span class=\"n\">go</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span> <span class=\"c1\"># This will print: False</span>\n</pre>\n</div>\n<div id=\"prefixed-settings\">\n<h2>Prefixed Settings</h2>\n<p>If a group of settings share a common prefix, you can make\nuse of the <tt>PrefixedSettings</tt> class and pass the desired\nprefix as an argument, together with the main settings instance.\nAll attributes will be automatically prefixed when accessed.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pkgsettings</span> <span class=\"kn\">import</span> <span class=\"n\">PrefixedSettings</span><span class=\"p\">,</span> <span class=\"n\">Settings</span>\n\n<span class=\"c1\"># First create the settings object for your package to use</span>\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">Settings</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Suppose some of your settings are all prefixed with 'FOO'</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">FOO_a</span><span class=\"o\">=</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">FOO_b</span><span class=\"o\">=</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a PrefixedSettings instance with the desired prefix</span>\n<span class=\"n\">foo_settings</span> <span class=\"o\">=</span> <span class=\"n\">PrefixedSettings</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s1\">'FOO_'</span><span class=\"p\">)</span>\n\n<span class=\"n\">foo_settings</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"c1\"># This will print: a</span>\n<span class=\"n\">foo_settings</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"c1\"># This will print: b</span>\n\n<span class=\"n\">foo_settings</span><span class=\"o\">.</span><span class=\"n\">c</span> <span class=\"c1\"># This will raise an AttributeError</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3098048, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "bbf7bb32b75ddc6071a945dc555a5e81", "sha256": "96f1f1e6bb21fac63e77174eb33e8b5a821d8ccb040b204f8a0fcb44c150f9ba"}, "downloads": -1, "filename": "pkgsettings-0.10.0.tar.gz", "has_sig": false, "md5_digest": "bbf7bb32b75ddc6071a945dc555a5e81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12743, "upload_time": "2016-07-15T06:52:35", "upload_time_iso_8601": "2016-07-15T06:52:35.412409Z", "url": "https://files.pythonhosted.org/packages/0d/bc/2c3f5ce4f35cae4f1109dd7e20c0a9d2891ee313d16c123878fc0d3cb2cb/pkgsettings-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "cd350a2f12288d6dcb0488945863e8d5", "sha256": "4480a451ac4a69501c63e5e6ff059a7d87d54494979532088a6dee2caa79c87e"}, "downloads": -1, "filename": "pkgsettings-0.10.1.tar.gz", "has_sig": false, "md5_digest": "cd350a2f12288d6dcb0488945863e8d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12175, "upload_time": "2017-06-23T13:22:24", "upload_time_iso_8601": "2017-06-23T13:22:24.692505Z", "url": "https://files.pythonhosted.org/packages/fb/c3/d0daf57a4ee165d45f78f02a54c54799d01106bb13992e2b1f7a7cbdc45a/pkgsettings-0.10.1.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "637b0c7e4951998edd06398e8e999ca2", "sha256": "44dae2cdfa3fb4cf435779160cf650a90500f8b0ccbb817b57487f05f864d167"}, "downloads": -1, "filename": "pkgsettings-0.11.0.tar.gz", "has_sig": false, "md5_digest": "637b0c7e4951998edd06398e8e999ca2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12858, "upload_time": "2017-07-12T09:31:58", "upload_time_iso_8601": "2017-07-12T09:31:58.629151Z", "url": "https://files.pythonhosted.org/packages/c8/34/395b02d2014cc6c726a7f174eef87c5a2adca84f63a5313fc2ec94d36d7a/pkgsettings-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "ef4e23eefed2f1dfcc352534f00f4c06", "sha256": "149102d1c3d2179140eaa8acd94b085aaa6ae30605d425b84aa83a3bb1536658"}, "downloads": -1, "filename": "pkgsettings-0.12.0.tar.gz", "has_sig": false, "md5_digest": "ef4e23eefed2f1dfcc352534f00f4c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12987, "upload_time": "2017-08-15T12:55:01", "upload_time_iso_8601": "2017-08-15T12:55:01.726768Z", "url": "https://files.pythonhosted.org/packages/ea/b7/1366a939081169480df4fb93309b6ba0a6ed7007a99ec684afccc7dc5a87/pkgsettings-0.12.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "d4de9c7b1787d13b1a927debf0d1dcd9", "sha256": "88ccbed245fe1253a04b825b58e03730964da30844a9a07300455e6234fa9906"}, "downloads": -1, "filename": "pkgsettings-0.9.0.tar.gz", "has_sig": false, "md5_digest": "d4de9c7b1787d13b1a927debf0d1dcd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11469, "upload_time": "2016-03-09T16:55:48", "upload_time_iso_8601": "2016-03-09T16:55:48.880046Z", "url": "https://files.pythonhosted.org/packages/f0/88/1eecfa355831b7a4f255a013509c04535dc7a4acd8a7107f7967b887aae7/pkgsettings-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "14e45b107c6f4059b629eb8b18c27b6f", "sha256": "6d23ebea0fabfb895596dcec91f51fb6c6105bf5a192f1d22fdfe17321a7ebbf"}, "downloads": -1, "filename": "pkgsettings-0.9.1.tar.gz", "has_sig": false, "md5_digest": "14e45b107c6f4059b629eb8b18c27b6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11460, "upload_time": "2016-03-09T16:56:38", "upload_time_iso_8601": "2016-03-09T16:56:38.202704Z", "url": "https://files.pythonhosted.org/packages/35/14/d22a4b19806b89a79035bc5d045a0a70a885d3e8e4ddf121ffd5b1c28e2d/pkgsettings-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "d698fa7d4dac91deb0749c6cb51eaca0", "sha256": "c4c2b90c3ce85e807a6991fe005b3211fd1fbb58158dd30409cd7823d0c54646"}, "downloads": -1, "filename": "pkgsettings-0.9.2.tar.gz", "has_sig": false, "md5_digest": "d698fa7d4dac91deb0749c6cb51eaca0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12090, "upload_time": "2016-03-09T18:09:24", "upload_time_iso_8601": "2016-03-09T18:09:24.195262Z", "url": "https://files.pythonhosted.org/packages/73/11/26551422b34e475ef49fae81eaeeef38080f0431b69a416065d77503de0d/pkgsettings-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "3c1615c4b4066c1f3a2d14b31fe46cc5", "sha256": "26e057892583755bc344bc2869f1f459e0f2a59dcee146338e05c7bb49de791a"}, "downloads": -1, "filename": "pkgsettings-0.9.3.tar.gz", "has_sig": false, "md5_digest": "3c1615c4b4066c1f3a2d14b31fe46cc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12142, "upload_time": "2016-04-08T12:27:57", "upload_time_iso_8601": "2016-04-08T12:27:57.526314Z", "url": "https://files.pythonhosted.org/packages/a9/e5/f235e7d34febae00e7b1ebf6a33be489fd757d3bb8f6e67566e06859a469/pkgsettings-0.9.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef4e23eefed2f1dfcc352534f00f4c06", "sha256": "149102d1c3d2179140eaa8acd94b085aaa6ae30605d425b84aa83a3bb1536658"}, "downloads": -1, "filename": "pkgsettings-0.12.0.tar.gz", "has_sig": false, "md5_digest": "ef4e23eefed2f1dfcc352534f00f4c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12987, "upload_time": "2017-08-15T12:55:01", "upload_time_iso_8601": "2017-08-15T12:55:01.726768Z", "url": "https://files.pythonhosted.org/packages/ea/b7/1366a939081169480df4fb93309b6ba0a6ed7007a99ec684afccc7dc5a87/pkgsettings-0.12.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:48 2020"}