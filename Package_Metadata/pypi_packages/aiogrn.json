{"info": {"author": "Hideo Hattori", "author_email": "hhatto.jp@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "aiogrn\n======\n\nasyncio Groonga_ Client.\n\n.. _Groonga: http://groonga.org/\n\nRequirements\n------------\n* Python3.5+\n\nUsage\n-----\n\nGQTP\n~~~~\n\n.. code-block:: python\n\n    import asyncio\n    from aiogrn.client import GroongaClient\n\n    async def fetch(grn, cmd, **kwargs):\n        ret = await grn.call(cmd, **kwargs)\n        print(ret)\n\n    loop = asyncio.get_event_loop()\n    grn = GroongaClient(host='localhost', port=10043, protocol='gqtp', loop=loop)\n    tasks = [\n            asyncio.ensure_future(fetch(grn, 'status')),\n            asyncio.ensure_future(fetch(grn, 'select', table='Foo')),\n            asyncio.ensure_future(fetch(grn, 'status'))]\n    loop.run_until_complete(asyncio.gather(*tasks))\n    loop.close()\n\n\nHTTP\n~~~~\n\n.. code-block:: python\n\n    import asyncio\n    from aiogrn.client import GroongaClient\n\n    async def fetch(grn, cmd, **kwargs):\n        ret = await grn.call(cmd, **kwargs)\n        print(ret)\n\n    loop = asyncio.get_event_loop()\n    grn = GroongaClient(loop=loop)\n    tasks = [\n            asyncio.ensure_future(fetch(grn, 'status')),\n            asyncio.ensure_future(fetch(grn, 'select', table='Foo')),\n            asyncio.ensure_future(fetch(grn, 'status'))]\n    loop.run_until_complete(asyncio.gather(*tasks))\n    loop.close()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hhatto/aiogrn", "keywords": "asyncio groonga http gqtp", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "aiogrn", "package_url": "https://pypi.org/project/aiogrn/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aiogrn/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hhatto/aiogrn"}, "release_url": "https://pypi.org/project/aiogrn/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "asyncio Groonga Client library", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>asyncio <a href=\"http://groonga.org/\" rel=\"nofollow\">Groonga</a> Client.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python3.5+</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"gqtp\">\n<h3>GQTP</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiogrn.client</span> <span class=\"kn\">import</span> <span class=\"n\">GroongaClient</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">grn</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">grn</span> <span class=\"o\">=</span> <span class=\"n\">GroongaClient</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">10043</span><span class=\"p\">,</span> <span class=\"n\">protocol</span><span class=\"o\">=</span><span class=\"s1\">'gqtp'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n<span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"s1\">'status'</span><span class=\"p\">)),</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"s1\">'select'</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s1\">'Foo'</span><span class=\"p\">)),</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"s1\">'status'</span><span class=\"p\">))]</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tasks</span><span class=\"p\">))</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"http\">\n<h3>HTTP</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiogrn.client</span> <span class=\"kn\">import</span> <span class=\"n\">GroongaClient</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">grn</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">grn</span> <span class=\"o\">=</span> <span class=\"n\">GroongaClient</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n<span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"s1\">'status'</span><span class=\"p\">)),</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"s1\">'select'</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s1\">'Foo'</span><span class=\"p\">)),</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">grn</span><span class=\"p\">,</span> <span class=\"s1\">'status'</span><span class=\"p\">))]</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tasks</span><span class=\"p\">))</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2426144, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "504d83f0597cdc229662350e730ebad4", "sha256": "61a8ae0ba54105c11fdcb1b448afdbcf1e1d11887a0f3f8e61b10b2605d216d6"}, "downloads": -1, "filename": "aiogrn-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "504d83f0597cdc229662350e730ebad4", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 4101, "upload_time": "2016-10-27T12:54:11", "upload_time_iso_8601": "2016-10-27T12:54:11.938071Z", "url": "https://files.pythonhosted.org/packages/fe/2c/e2bf5e83d38945947ccbbe83b19beb1575c89bec2abd0c5213237505c69c/aiogrn-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9dcee6e79046ad406c48a45d9ffa89", "sha256": "a7a28adcf423f7e6f18a87ecf0a2b7cf5861a1136be2e1adb11e3bbfe8fc21ea"}, "downloads": -1, "filename": "aiogrn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ec9dcee6e79046ad406c48a45d9ffa89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3232, "upload_time": "2016-10-27T12:54:08", "upload_time_iso_8601": "2016-10-27T12:54:08.609150Z", "url": "https://files.pythonhosted.org/packages/17/75/da60c5155df0ec2e736eb65e0eddcadf01c2f40a649510d4ebbe2fab4023/aiogrn-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "504d83f0597cdc229662350e730ebad4", "sha256": "61a8ae0ba54105c11fdcb1b448afdbcf1e1d11887a0f3f8e61b10b2605d216d6"}, "downloads": -1, "filename": "aiogrn-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "504d83f0597cdc229662350e730ebad4", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 4101, "upload_time": "2016-10-27T12:54:11", "upload_time_iso_8601": "2016-10-27T12:54:11.938071Z", "url": "https://files.pythonhosted.org/packages/fe/2c/e2bf5e83d38945947ccbbe83b19beb1575c89bec2abd0c5213237505c69c/aiogrn-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9dcee6e79046ad406c48a45d9ffa89", "sha256": "a7a28adcf423f7e6f18a87ecf0a2b7cf5861a1136be2e1adb11e3bbfe8fc21ea"}, "downloads": -1, "filename": "aiogrn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ec9dcee6e79046ad406c48a45d9ffa89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3232, "upload_time": "2016-10-27T12:54:08", "upload_time_iso_8601": "2016-10-27T12:54:08.609150Z", "url": "https://files.pythonhosted.org/packages/17/75/da60c5155df0ec2e736eb65e0eddcadf01c2f40a649510d4ebbe2fab4023/aiogrn-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:30 2020"}