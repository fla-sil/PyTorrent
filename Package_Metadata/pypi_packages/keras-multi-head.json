{"info": {"author": "CyberZHG", "author_email": "CyberZHG@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Keras Multi-Head\n\n[![Travis](https://travis-ci.org/CyberZHG/keras-multi-head.svg)](https://travis-ci.org/CyberZHG/keras-multi-head)\n[![Coverage](https://coveralls.io/repos/github/CyberZHG/keras-multi-head/badge.svg?branch=master)](https://coveralls.io/github/CyberZHG/keras-multi-head)\n[![Version](https://img.shields.io/pypi/v/keras-multi-head.svg)](https://pypi.org/project/keras-multi-head/)\n![Downloads](https://img.shields.io/pypi/dm/keras-multi-head.svg)\n![License](https://img.shields.io/pypi/l/keras-multi-head.svg)\n\nA wrapper layer for stacking layers horizontally.\n\n![](https://user-images.githubusercontent.com/853842/45797517-867b8580-bcd8-11e8-9ec6-39d6508cf438.png)\n\n## Install\n\n```bash\npip install keras-multi-head\n```\n\n## Usage\n\n### Duplicate Layers\n\nThe layer will be duplicated if only a single layer is provided. The `layer_num` argument controls how many layers will be duplicated eventually.\n\n```python\nimport keras\nfrom keras_multi_head import MultiHead\n\n\nmodel = keras.models.Sequential()\nmodel.add(keras.layers.Embedding(input_dim=100, output_dim=20, name='Embedding'))\nmodel.add(MultiHead(keras.layers.LSTM(units=32), layer_num=5, name='Multi-LSTMs'))\nmodel.add(keras.layers.Flatten(name='Flatten'))\nmodel.add(keras.layers.Dense(units=4, activation='softmax', name='Dense'))\nmodel.build()\nmodel.summary()\n```\n\n### Use Multiple-Layers\n\nThe first argument could also be a list of layers with different configurations, however, they must have the same output shapes.\n\n```python\nimport keras\nfrom keras_multi_head import MultiHead\n\n\nmodel = keras.models.Sequential()\nmodel.add(keras.layers.Embedding(input_dim=100, output_dim=20, name='Embedding'))\nmodel.add(MultiHead([\n    keras.layers.Conv1D(filters=32, kernel_size=3, padding='same'),\n    keras.layers.Conv1D(filters=32, kernel_size=5, padding='same'),\n    keras.layers.Conv1D(filters=32, kernel_size=7, padding='same'),\n], name='Multi-CNNs'))\nmodel.build()\nmodel.summary()\n```\n\n### Linear Transformation\n\nThe input data will be mapped to different values of the same shape for each layer when `hidden_dim` is given.\n\n### Regularization\n\n![](https://user-images.githubusercontent.com/853842/45857922-8b4e4100-bd8d-11e8-905a-4eb07da31418.png)\n\nThe regularization is used when you expect to extract different features from the parallel layers. You can customize the indices of weights in the layers, the intervals represent the parts of the weights and the factor of the regularization.\n\nFor example, the bidirectional LSTM layer has 6 weights by default, and the first 3s belong to the forward layer. The 2nd weight (recurrent kernel) in the forward layer controls the computation of gates for recurrent connections. The kernel for computing cell states lays in units x 2 to units x 3 of the recurrent kernel. We can used the regularization for the kernels:\n\n```python\nimport keras\nfrom keras_multi_head import MultiHead\n\n\nmodel = keras.models.Sequential()\nmodel.add(keras.layers.Embedding(input_dim=5, output_dim=3, name='Embed'))\nmodel.add(MultiHead(\n    layer=keras.layers.Bidirectional(keras.layers.LSTM(units=16), name='LSTM'),\n    layer_num=5,\n    reg_index=[1, 4],\n    reg_slice=(slice(None, None), slice(32, 48)),\n    reg_factor=0.1,\n    name='Multi-Head-Attention',\n))\nmodel.add(keras.layers.Flatten(name='Flatten'))\nmodel.add(keras.layers.Dense(units=2, activation='softmax', name='Dense'))\nmodel.build()\n```\n\n* `reg_index`: The indices of `layer.get_weights()`, a single integer or a list of integers.\n* `reg_slice`: `slice`s or a tuple of `slice`s or a list of the previous choices. If multiple indices are provided in `reg_index` and `reg_slice` is not a list, then `reg_slice` is assumed to be equal for all the indices. The whole array will be used if you leave this argument to `None`.\n* `reg_factor`: The factor of the regularization, a float or a list of floats.\n\n### Multi-Head Attention\n\nA more specific multi-head layer is provided (since the general one is harder to use). The layer uses scaled dot product attention layers as its sub-layers and only `head_num` is required:\n\n```python\nimport keras\nfrom keras_multi_head import MultiHeadAttention\n\ninput_layer = keras.layers.Input(\n    shape=(2, 3),\n    name='Input',\n)\natt_layer = MultiHeadAttention(\n    head_num=3,\n    name='Multi-Head',\n)(input_layer)\nmodel = keras.models.Model(inputs=input_layer, outputs=att_layer)\nmodel.compile(\n    optimizer='adam',\n    loss='mse',\n    metrics={},\n)\nmodel.summary()\n```\n\nThe shapes of input and output tensors would be the same if only one layer is presented as input. The input layers will be considered as query, key and value when a list is given:\n\n```python\nimport keras\nfrom keras_multi_head import MultiHeadAttention\n\ninput_query = keras.layers.Input(\n    shape=(2, 3),\n    name='Input-Q',\n)\ninput_key = keras.layers.Input(\n    shape=(4, 5),\n    name='Input-K',\n)\ninput_value = keras.layers.Input(\n    shape=(4, 6),\n    name='Input-V',\n)\natt_layer = MultiHeadAttention(\n    head_num=3,\n    name='Multi-Head',\n)([input_query, input_key, input_value])\nmodel = keras.models.Model(inputs=[input_query, input_key, input_value], outputs=att_layer)\nmodel.compile(\n    optimizer='adam',\n    loss='mse',\n    metrics={},\n)\nmodel.summary()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CyberZHG/keras-multi-head", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "keras-multi-head", "package_url": "https://pypi.org/project/keras-multi-head/", "platform": "", "project_url": "https://pypi.org/project/keras-multi-head/", "project_urls": {"Homepage": "https://github.com/CyberZHG/keras-multi-head"}, "release_url": "https://pypi.org/project/keras-multi-head/0.22.0/", "requires_dist": null, "requires_python": "", "summary": "A wrapper layer for stacking layers horizontally", "version": "0.22.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Keras Multi-Head</h1>\n<p><a href=\"https://travis-ci.org/CyberZHG/keras-multi-head\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/55b569515079fc761472a36a7cae508d3aae2004/68747470733a2f2f7472617669732d63692e6f72672f43796265725a48472f6b657261732d6d756c74692d686561642e737667\"></a>\n<a href=\"https://coveralls.io/github/CyberZHG/keras-multi-head\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6b9257f2513c66a1c33a3afbe66c779a041c15f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f43796265725a48472f6b657261732d6d756c74692d686561642f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/keras-multi-head/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ed50bc05812367b7a4326cdf69008716b5bb8dc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b657261732d6d756c74692d686561642e737667\"></a>\n<img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3972677728ee06990994bfc81933e4861b35f2b0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6b657261732d6d756c74692d686561642e737667\">\n<img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f52fd89d9172c25f0593ebcf1c229e51d2b7f2c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6b657261732d6d756c74692d686561642e737667\"></p>\n<p>A wrapper layer for stacking layers horizontally.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43eca1c13130c6561a6c48ff3fac2cb8b6a547f2/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3835333834322f34353739373531372d38363762383538302d626364382d313165382d396563362d3339643635303863663433382e706e67\"></p>\n<h2>Install</h2>\n<pre>pip install keras-multi-head\n</pre>\n<h2>Usage</h2>\n<h3>Duplicate Layers</h3>\n<p>The layer will be duplicated if only a single layer is provided. The <code>layer_num</code> argument controls how many layers will be duplicated eventually.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_multi_head</span> <span class=\"kn\">import</span> <span class=\"n\">MultiHead</span>\n\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Embedding</span><span class=\"p\">(</span><span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">output_dim</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Embedding'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">MultiHead</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">LSTM</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">),</span> <span class=\"n\">layer_num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Multi-LSTMs'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Flatten</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Flatten'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Dense'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n<h3>Use Multiple-Layers</h3>\n<p>The first argument could also be a list of layers with different configurations, however, they must have the same output shapes.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_multi_head</span> <span class=\"kn\">import</span> <span class=\"n\">MultiHead</span>\n\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Embedding</span><span class=\"p\">(</span><span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">output_dim</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Embedding'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">MultiHead</span><span class=\"p\">([</span>\n    <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv1D</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">'same'</span><span class=\"p\">),</span>\n    <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv1D</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">'same'</span><span class=\"p\">),</span>\n    <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv1D</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">'same'</span><span class=\"p\">),</span>\n<span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Multi-CNNs'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n<h3>Linear Transformation</h3>\n<p>The input data will be mapped to different values of the same shape for each layer when <code>hidden_dim</code> is given.</p>\n<h3>Regularization</h3>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/276a0bff01b5c9b5cfb520a35a26f0579db6c649/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3835333834322f34353835373932322d38623465343130302d626438642d313165382d393035612d3465623037646133313431382e706e67\"></p>\n<p>The regularization is used when you expect to extract different features from the parallel layers. You can customize the indices of weights in the layers, the intervals represent the parts of the weights and the factor of the regularization.</p>\n<p>For example, the bidirectional LSTM layer has 6 weights by default, and the first 3s belong to the forward layer. The 2nd weight (recurrent kernel) in the forward layer controls the computation of gates for recurrent connections. The kernel for computing cell states lays in units x 2 to units x 3 of the recurrent kernel. We can used the regularization for the kernels:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_multi_head</span> <span class=\"kn\">import</span> <span class=\"n\">MultiHead</span>\n\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Embedding</span><span class=\"p\">(</span><span class=\"n\">input_dim</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">output_dim</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Embed'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">MultiHead</span><span class=\"p\">(</span>\n    <span class=\"n\">layer</span><span class=\"o\">=</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Bidirectional</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">LSTM</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'LSTM'</span><span class=\"p\">),</span>\n    <span class=\"n\">layer_num</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">reg_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n    <span class=\"n\">reg_slice</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"nb\">slice</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">48</span><span class=\"p\">)),</span>\n    <span class=\"n\">reg_factor</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Multi-Head-Attention'</span><span class=\"p\">,</span>\n<span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Flatten</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Flatten'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s1\">'softmax'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Dense'</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><code>reg_index</code>: The indices of <code>layer.get_weights()</code>, a single integer or a list of integers.</li>\n<li><code>reg_slice</code>: <code>slice</code>s or a tuple of <code>slice</code>s or a list of the previous choices. If multiple indices are provided in <code>reg_index</code> and <code>reg_slice</code> is not a list, then <code>reg_slice</code> is assumed to be equal for all the indices. The whole array will be used if you leave this argument to <code>None</code>.</li>\n<li><code>reg_factor</code>: The factor of the regularization, a float or a list of floats.</li>\n</ul>\n<h3>Multi-Head Attention</h3>\n<p>A more specific multi-head layer is provided (since the general one is harder to use). The layer uses scaled dot product attention layers as its sub-layers and only <code>head_num</code> is required:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_multi_head</span> <span class=\"kn\">import</span> <span class=\"n\">MultiHeadAttention</span>\n\n<span class=\"n\">input_layer</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span>\n    <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Input'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">att_layer</span> <span class=\"o\">=</span> <span class=\"n\">MultiHeadAttention</span><span class=\"p\">(</span>\n    <span class=\"n\">head_num</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Multi-Head'</span><span class=\"p\">,</span>\n<span class=\"p\">)(</span><span class=\"n\">input_layer</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"n\">input_layer</span><span class=\"p\">,</span> <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"n\">att_layer</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'adam'</span><span class=\"p\">,</span>\n    <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">'mse'</span><span class=\"p\">,</span>\n    <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n<span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n<p>The shapes of input and output tensors would be the same if only one layer is presented as input. The input layers will be considered as query, key and value when a list is given:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">keras</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras_multi_head</span> <span class=\"kn\">import</span> <span class=\"n\">MultiHeadAttention</span>\n\n<span class=\"n\">input_query</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span>\n    <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Input-Q'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">input_key</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span>\n    <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Input-K'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">input_value</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span>\n    <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Input-V'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">att_layer</span> <span class=\"o\">=</span> <span class=\"n\">MultiHeadAttention</span><span class=\"p\">(</span>\n    <span class=\"n\">head_num</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Multi-Head'</span><span class=\"p\">,</span>\n<span class=\"p\">)([</span><span class=\"n\">input_query</span><span class=\"p\">,</span> <span class=\"n\">input_key</span><span class=\"p\">,</span> <span class=\"n\">input_value</span><span class=\"p\">])</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">input_query</span><span class=\"p\">,</span> <span class=\"n\">input_key</span><span class=\"p\">,</span> <span class=\"n\">input_value</span><span class=\"p\">],</span> <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"n\">att_layer</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'adam'</span><span class=\"p\">,</span>\n    <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">'mse'</span><span class=\"p\">,</span>\n    <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n<span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 5718862, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "520349d7da205b589324d1de4dd4abab", "sha256": "2a940a2fc85262ceb6292dcab998d396cca11f938cee12f62a4d7064cc539b6f"}, "downloads": -1, "filename": "keras-multi-head-0.1.tar.gz", "has_sig": false, "md5_digest": "520349d7da205b589324d1de4dd4abab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1941, "upload_time": "2018-09-20T02:59:09", "upload_time_iso_8601": "2018-09-20T02:59:09.613332Z", "url": "https://files.pythonhosted.org/packages/b6/89/138e4c1c440f470f5c4eb4f18733a671097f37534b90ad754a83e7987ccd/keras-multi-head-0.1.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "38d78b08f7e6e7674500329af36510d3", "sha256": "c242189663626020465d7436e7792b2dd963d45a64ed35b56257670fafa8a0db"}, "downloads": -1, "filename": "keras-multi-head-0.10.0.tar.gz", "has_sig": false, "md5_digest": "38d78b08f7e6e7674500329af36510d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6688, "upload_time": "2018-11-09T05:16:20", "upload_time_iso_8601": "2018-11-09T05:16:20.812814Z", "url": "https://files.pythonhosted.org/packages/65/fb/ae3f3835915c725010233eb175a47af0b4f06f12b7f5cff1a3daf362cff1/keras-multi-head-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "dd29971421ff29419e73c709687399b4", "sha256": "c88bc9c5f5e4406e7de80fc59c960a109565c4ee1547f8ce560150f00017a9b1"}, "downloads": -1, "filename": "keras-multi-head-0.11.0.tar.gz", "has_sig": false, "md5_digest": "dd29971421ff29419e73c709687399b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6739, "upload_time": "2018-11-12T06:12:32", "upload_time_iso_8601": "2018-11-12T06:12:32.900969Z", "url": "https://files.pythonhosted.org/packages/05/a8/9800d6fa5fc9bbd56cde02831d0b393ca3d9bf42e3d375ace5b819d694fb/keras-multi-head-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "7823a29507e2d4989e5edfc403910fd5", "sha256": "632801ad744438fd5d86bca52074170ff04ea2153cab4b05ac812c432724a1ea"}, "downloads": -1, "filename": "keras-multi-head-0.12.0.tar.gz", "has_sig": false, "md5_digest": "7823a29507e2d4989e5edfc403910fd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6742, "upload_time": "2018-11-12T06:45:10", "upload_time_iso_8601": "2018-11-12T06:45:10.848673Z", "url": "https://files.pythonhosted.org/packages/64/af/ce3744a0813334b1e351f86dee0a8909b4ef7042d154afba878b6e31588d/keras-multi-head-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "60541b313842e7ee43f16461b3dc33b5", "sha256": "c0d613e2f0ca1a810d29ce3264d546ed8fc05d8c5abe53e5c0f0bd30abd568ac"}, "downloads": -1, "filename": "keras-multi-head-0.13.0.tar.gz", "has_sig": false, "md5_digest": "60541b313842e7ee43f16461b3dc33b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7006, "upload_time": "2018-11-12T09:43:29", "upload_time_iso_8601": "2018-11-12T09:43:29.140132Z", "url": "https://files.pythonhosted.org/packages/08/1d/efd262bb9ee8b3c67b34e63eb2ac7821f88d866e1c72638136789e096a14/keras-multi-head-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "d1d3edecd0d1e4b68dcc7e5cde19465f", "sha256": "d3dcfbbe06b29846d04c2912ebdccf5080d5de8da9b0da7543a426415a443161"}, "downloads": -1, "filename": "keras-multi-head-0.14.0.tar.gz", "has_sig": false, "md5_digest": "d1d3edecd0d1e4b68dcc7e5cde19465f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7194, "upload_time": "2018-11-13T02:50:59", "upload_time_iso_8601": "2018-11-13T02:50:59.131869Z", "url": "https://files.pythonhosted.org/packages/86/95/3c5dea5a63beb60985a9a29fb883c8849ebfb5a8f20a790bfd22df24543c/keras-multi-head-0.14.0.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "00ae1bb3f1d9caf0a74e0c104ac8bd88", "sha256": "ea9ebe2297666ea8cf004369b179fe607a331026ba76158d99761a3e5a1417ed"}, "downloads": -1, "filename": "keras-multi-head-0.15.0.tar.gz", "has_sig": false, "md5_digest": "00ae1bb3f1d9caf0a74e0c104ac8bd88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11971, "upload_time": "2019-02-01T03:10:16", "upload_time_iso_8601": "2019-02-01T03:10:16.535402Z", "url": "https://files.pythonhosted.org/packages/c0/31/240d4e125e4a96a40c490e861679c2821992f0836fc193c1765b353eaf07/keras-multi-head-0.15.0.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "87a7be09644d9a92586f8cb04f2b2203", "sha256": "e5ee5c10c32eeaa9a3688103cc91f3ef36973eff66d14b21c6ffcf72227a3b04"}, "downloads": -1, "filename": "keras-multi-head-0.16.0.tar.gz", "has_sig": false, "md5_digest": "87a7be09644d9a92586f8cb04f2b2203", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11965, "upload_time": "2019-03-11T06:17:25", "upload_time_iso_8601": "2019-03-11T06:17:25.014134Z", "url": "https://files.pythonhosted.org/packages/7e/c9/7811e06a523c743d1a7449e8647d2ef1c7713248e27ea6f6b23772d38881/keras-multi-head-0.16.0.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "2c472820d555012cb23ec39e96c93db9", "sha256": "da5f8383ffb6a4528bbb9f5c5b32bac704e0cb24e6178b95b35eaf3d6543f139"}, "downloads": -1, "filename": "keras-multi-head-0.17.0.tar.gz", "has_sig": false, "md5_digest": "2c472820d555012cb23ec39e96c93db9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11946, "upload_time": "2019-04-16T07:31:29", "upload_time_iso_8601": "2019-04-16T07:31:29.595256Z", "url": "https://files.pythonhosted.org/packages/c0/1d/9299152cf06956dd825404ba6361500f2b0642e98336f802fd89d8dab80f/keras-multi-head-0.17.0.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "38dde214879b7f512ff716946f1d924c", "sha256": "6adc3c743f6c45e287f2a96d491220fc13da9a8c0a497d9428a54a531c70e4d7"}, "downloads": -1, "filename": "keras-multi-head-0.18.0.tar.gz", "has_sig": false, "md5_digest": "38dde214879b7f512ff716946f1d924c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11955, "upload_time": "2019-04-16T08:34:03", "upload_time_iso_8601": "2019-04-16T08:34:03.886725Z", "url": "https://files.pythonhosted.org/packages/d7/5d/8156def9ca75c55bb87819618e9a3e1f8e587c722570e2e93ad616b9269d/keras-multi-head-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "02cc93e51b0ad34e8711af6404347676", "sha256": "fc0e5906b198c402217e1c1926bff9355e42235d8fd5e48c857d28a253e11e2b"}, "downloads": -1, "filename": "keras-multi-head-0.19.0.tar.gz", "has_sig": false, "md5_digest": "02cc93e51b0ad34e8711af6404347676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10685, "upload_time": "2019-05-11T14:15:12", "upload_time_iso_8601": "2019-05-11T14:15:12.221460Z", "url": "https://files.pythonhosted.org/packages/80/63/f242f120b5b0a35d5e2601f35c7578440fe06f5d3821308093080cb50907/keras-multi-head-0.19.0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "18bdc65019101c6a6154266f3d6cc7f6", "sha256": "89b45db4f69febf1e44421831083af142380b469b24badb41081cdc5412196b2"}, "downloads": -1, "filename": "keras-multi-head-0.2.tar.gz", "has_sig": false, "md5_digest": "18bdc65019101c6a6154266f3d6cc7f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2558, "upload_time": "2018-09-20T04:41:37", "upload_time_iso_8601": "2018-09-20T04:41:37.016595Z", "url": "https://files.pythonhosted.org/packages/74/7a/856577d2dc34cd5ee5d6b2839f6f409ab4940aae9616005bed2bc3a57fa4/keras-multi-head-0.2.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "3e104089199ec25832b164659281ee70", "sha256": "5ce199e9a075b14956e714420a7f36baaa66397a9c85e62d6c342cf9afe9c265"}, "downloads": -1, "filename": "keras-multi-head-0.20.0.tar.gz", "has_sig": false, "md5_digest": "3e104089199ec25832b164659281ee70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13790, "upload_time": "2019-05-21T10:04:24", "upload_time_iso_8601": "2019-05-21T10:04:24.536061Z", "url": "https://files.pythonhosted.org/packages/3b/0f/f1a66974db9c328ba675c1df63f8a68c5c0f3e181f1e74db4f3b1a72a6df/keras-multi-head-0.20.0.tar.gz", "yanked": false}], "0.22.0": [{"comment_text": "", "digests": {"md5": "8739cd467ad673ac60e6eae6aed36c7c", "sha256": "bce7e10ee2b5f58a6c0c493dfae3b08ed6c1771ac48e68cb466d6871b610427d"}, "downloads": -1, "filename": "keras-multi-head-0.22.0.tar.gz", "has_sig": false, "md5_digest": "8739cd467ad673ac60e6eae6aed36c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12139, "upload_time": "2019-08-23T05:01:22", "upload_time_iso_8601": "2019-08-23T05:01:22.621762Z", "url": "https://files.pythonhosted.org/packages/40/3e/d0a64bb2ac5217928effe4507c26bbd19b86145d16a1948bc2d4f4c6338a/keras-multi-head-0.22.0.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b6b681aa4d634bf0812ec5542e06e573", "sha256": "5f9eb9dfcf04f13b394e93f86750d80befe0ae1180b6043ab08315c052ec3457"}, "downloads": -1, "filename": "keras-multi-head-0.3.tar.gz", "has_sig": false, "md5_digest": "b6b681aa4d634bf0812ec5542e06e573", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3182, "upload_time": "2018-09-20T05:50:35", "upload_time_iso_8601": "2018-09-20T05:50:35.673854Z", "url": "https://files.pythonhosted.org/packages/20/97/0c4c1b161cfdd73618e19b84b82cfa02b3b88e3e7980c1b034b7a8598dcd/keras-multi-head-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "bbfc04c8b6eab135cbe6f20f5b30c2f3", "sha256": "ce72e4197ed8292d76d6bd230259336bb2b35898604ff748186ad167a41cd622"}, "downloads": -1, "filename": "keras-multi-head-0.4.tar.gz", "has_sig": false, "md5_digest": "bbfc04c8b6eab135cbe6f20f5b30c2f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4467, "upload_time": "2018-09-21T04:09:26", "upload_time_iso_8601": "2018-09-21T04:09:26.275309Z", "url": "https://files.pythonhosted.org/packages/79/a3/d354bec0da95d4ef79c0a1de8372bc9508df948cda8063830dba4e4d3645/keras-multi-head-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "2b75ea19834b8803e64cbb4c36031015", "sha256": "197202e9acef8b720655bb9ed3616280933454790df03390c04459bc052b0cf3"}, "downloads": -1, "filename": "keras-multi-head-0.5.tar.gz", "has_sig": false, "md5_digest": "2b75ea19834b8803e64cbb4c36031015", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4849, "upload_time": "2018-10-19T10:56:10", "upload_time_iso_8601": "2018-10-19T10:56:10.070319Z", "url": "https://files.pythonhosted.org/packages/8b/fc/b404907b804d38ebb02ce14ceae6636e1ebbe372dbd13e6070b3a63a1d2e/keras-multi-head-0.5.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "caad572ea9ce146ba249f3be763dedbc", "sha256": "e8c9c133ac82c59917cf9610d609f4549ff14b32f835c78fa18ed545fad05a7b"}, "downloads": -1, "filename": "keras-multi-head-0.6.0.tar.gz", "has_sig": false, "md5_digest": "caad572ea9ce146ba249f3be763dedbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5914, "upload_time": "2018-11-07T08:20:39", "upload_time_iso_8601": "2018-11-07T08:20:39.739103Z", "url": "https://files.pythonhosted.org/packages/22/a2/aa4f7574a3c585ad836b145a66c14ae13959d543809795482452a304e0d0/keras-multi-head-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "2d9d74a0ad561daad173c2c6e3b04681", "sha256": "13586ac8b4ebe760df25d9f71edafcc00b8537b1112b8e8c5e86fc14d32da1f1"}, "downloads": -1, "filename": "keras-multi-head-0.7.0.tar.gz", "has_sig": false, "md5_digest": "2d9d74a0ad561daad173c2c6e3b04681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5925, "upload_time": "2018-11-07T09:07:24", "upload_time_iso_8601": "2018-11-07T09:07:24.713866Z", "url": "https://files.pythonhosted.org/packages/2c/7f/ea395f42a284363ad027fa2ad07727c216eb62d87db4b88f4c948d6a80c5/keras-multi-head-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "2ecaed81a2140f8dfc794f7b8b0e6d9b", "sha256": "86437cde6ea31c89d7bf52b84d8ff75e52b39f0216df20794e6bddbc957e9400"}, "downloads": -1, "filename": "keras-multi-head-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2ecaed81a2140f8dfc794f7b8b0e6d9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5965, "upload_time": "2018-11-08T08:28:18", "upload_time_iso_8601": "2018-11-08T08:28:18.788228Z", "url": "https://files.pythonhosted.org/packages/96/29/7104b2b1d03a4e1e92d4cb9086f45b8acd0b05206a5188f652689b17897b/keras-multi-head-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "91058449f517b841da88e8a41c1a5592", "sha256": "71068b5e369eb105427c9ebc1f4740926ad2d29df66260d253b952eca1bc2c4d"}, "downloads": -1, "filename": "keras-multi-head-0.9.0.tar.gz", "has_sig": false, "md5_digest": "91058449f517b841da88e8a41c1a5592", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6645, "upload_time": "2018-11-08T11:13:00", "upload_time_iso_8601": "2018-11-08T11:13:00.283382Z", "url": "https://files.pythonhosted.org/packages/e3/7c/6cbb64f969a44ade973adbed5b7419e49f35a04ab66a4f049a4c4484d6ec/keras-multi-head-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8739cd467ad673ac60e6eae6aed36c7c", "sha256": "bce7e10ee2b5f58a6c0c493dfae3b08ed6c1771ac48e68cb466d6871b610427d"}, "downloads": -1, "filename": "keras-multi-head-0.22.0.tar.gz", "has_sig": false, "md5_digest": "8739cd467ad673ac60e6eae6aed36c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12139, "upload_time": "2019-08-23T05:01:22", "upload_time_iso_8601": "2019-08-23T05:01:22.621762Z", "url": "https://files.pythonhosted.org/packages/40/3e/d0a64bb2ac5217928effe4507c26bbd19b86145d16a1948bc2d4f4c6338a/keras-multi-head-0.22.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:10 2020"}