{"info": {"author": "Renzo Nuccitelli", "author_email": "renzo@python.pro.br", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.7"], "description": "# django_pagarme\nApp Django para Automatizar Integra\u00e7\u00e3o com Gateway de Pagamento Pagarme\n\n\n\n[![codecov](https://codecov.io/gh/renzon/django_pagarme/branch/master/graph/badge.svg)](https://codecov.io/gh/renzon/django_pagarme)\n\n\n\n## Instala\u00e7\u00e3o\n\nInstale via pip\n\n```python\npip install django_pagarme\n```\n\n## Configure o Django\n\nConfigure seu settings.py\n\n```\nINSTALLED_APPS = [\n    'django_pagarme',\n    'phonenumber_field',\n    ...\n]\n\n# Dados para integra\u00e7\u00e3o com Pagarme\nCHAVE_PAGARME_API_PRIVADA = 'CHAVE_PAGARME_API_PRIVADA'\nCHAVE_PAGARME_CRIPTOGRAFIA_PUBLICA = 'CHAVE_PAGARME_CRIPTOGRAFIA_PUBLICA'\n\n# Para validar telefones no Brasil\nPHONENUMBER_DEFAULT_REGION = 'BR'\n\n```\n\nRode as migra\u00e7\u00f5es\n\n```\npython manage.py migrate\n```\n\nConfigure as urls:\n\n```python\nfrom django.urls import include, path\n...\n\nurlpatterns = [\n    path('checkout/', include('django_pagarme.urls')),\n    ...\n]\n```\n\n## Personalize seus formul\u00e1rios\n\nCria uma app e no diret\u00f3rio de templates, crie suas p\u00e1ginas como descrito abaixo.\n\n### Dados de Contato\n\nFormul\u00e1rio para obter dados de contato do usu\u00e1rio \n\nTemplate `django_pagarme/contact_form.html`\n\nEx:\n```html\n<body>\n<form action=\"{% url 'django_pagarme:contact_info' slug=slug %}\" method=\"post\">\n    {% csrf_token %}\n    {{ contact_form.as_p }}\n    <button type=\"submit\">Comprar</button>\n</form>\n</body>\n```\n\n### Formul\u00e1rio de erros\n\nFormul\u00e1rio de erros de dados de contato do usu\u00e1rio.\n\nTemplate `django_pagarme/contact_form_errors.html`\n\nPode herdar de `contact_form.html` no caso de vc decidir que quer usar a mesma p\u00e1gina com formul\u00e1rio\n\nEx:\n```html\n{% extends 'django_pagarme/contact_form.html' %}\n```\n\n### P\u00e1gina de Checkout do Pagarme\n\nP\u00e1gina onde o usu\u00e1rio preenche os dados de pagamento.\n\nTemplate `django_pagarme/pagarme.html`\n\nDeve ter um elemento clic\u00e1vel com classe css `pay-button`.\nAo clicar nesse elemento, o checkout \u00e9 iniciado.\n\nEx:\n```html\n{% load django_pagarme %}\n<html>\n<head>\n    <!-- SCRIPT PAGAR.ME -->\n    <title>{{ payment_item.name }}</title>\n    <script src=\"//assets.pagar.me/checkout/1.1.0/checkout.js\"></script>\n</head>\n<body>\n<h1>{{ payment_item.name }}</h1>\n<h2>Planos</h2>\n<ul>\n    {% for installments, amount, installment_amount in payment_item.payment_plans %}\n        {% if installments == 1 %}\n            <li>{{ amount|cents_to_brl }} a vista</li>\n        {% else %}\n            <li>{{ amount|cents_to_brl }} em {{ installments }} parcelas de {{ installment_amount|cents_to_brl }}</li>\n        {% endif %}\n    {% endfor %}\n</ul>\n<button class=\"pay-button\">Abrir modal de pagamento</button>\n{% show_pagarme payment_item customer open_modal %}\n\n</body>\n</html>\n```\n\n### P\u00e1gina de visualiza\u00e7\u00e3o de Boleto\n\nP\u00e1gina onde o usu\u00e1rio acessa os dados do boleto para pagamento\n\nTemplate `django_pagarme/show_boleto_data.html`\n\nEx:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Dados do Boleto</title>\n</head>\n<body>\n    <h1>Dados do Boleto</h1>\n    <p>C\u00f3digo de Barras: {{ payment.boleto_barcode }}</p>\n    <iframe src=\"{{ payment.boleto_url }}\"></iframe>\n</body>\n</html>\n```\n\n### P\u00e1gina de obrigado\n\nP\u00e1gina onde o usu\u00e1rio \u00e9 levado ao finalizar o pagamento\n\nTemplate `django_pagarme/thanks.html`\n\nEx:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Obrigado por Comprar</title>\n</head>\n<body>\n<h1> Obrigado por comprar {{ payment_item_config.name }}</h1>\n</body>\n</html>\n```\n\n\n\n## Listeners\n\nO biblioteca dispo de 2 listener para ouvir eventos e tamb\u00e9m da configura\u00e7\u00e3o de cria\u00e7\u00e3o de usu\u00e1rio.\n\n### Listener de Contato de usu\u00e1rio\n\nCham\u00e1vel utilizado para receber os dados do usu\u00e1rio\n\nEx:\n```python\nfrom django_pagarme import facade\ndef print_contact_info(name, email, phone, payment_item_slug, user=None):\n    print('Contact Data:', name, email, phone, payment_item_slug, user)\n\n\nfacade.add_contact_info_listener(print_contact_info)\n```\n\nEssa fun\u00e7\u00e3o pode ser usada para armazenar os dados em banco, ou chamar uma api depois que o usu\u00e1rio preenche os dados de contato.\n\n### F\u00e1brica de usu\u00e1rio\n\nCham\u00e1vel utilizado para gerar um usu\u00e1rio para ser conectado ao pedido.\nS\u00f3 \u00e9 chamado se n\u00e3o houver usu\u00e1rio logado. Se n\u00e3o for setado, pedidos ainda ser\u00e3o\nfeitos corretamente, mas sem link com qualquer usu\u00e1rio do sistema.\n\nEx:\n```python\nfrom django_pagarme import facade\nfrom django.contrib.auth import get_user_model\n\n\ndef user_factory(pagarme_transaction):\n    User = get_user_model()\n    customer = pagarme_transaction['customer']\n    try:\n        return User.objects.get(email=customer['email'])\n    except User.DoesNotExist:\n        return User.objects.create(\n            first_name=customer['name'],\n            email=customer['email']\n        )\n\n\nfacade.set_user_factory(user_factory)\n\n```\n\n### Listener de mudan\u00e7as de status\n\nToda vez que o sistema recebe notifica\u00e7\u00e3o de mudan\u00e7a de status, esse cham\u00e1vel\n\u00e9 executado e recebe o id do respectivo pagamento.\n\nPode ser utilizado para ativa um usu\u00e1rio na base, ou enviar o produto, de acordo\ncom o status.\n\nEx:\n```python\nfrom django_pagarme import facade\n\n\ndef print_payment_id(payment_id):\n    payment = facade.find_payment(payment_id)\n    print(payment, payment.status())\n\n\nfacade.add_payment_status_changed(print_payment_id)\n```\n\nOs status existentes est\u00e3o dispon\u00edveis via fachada (facade):\n\n```python\nPROCESSING = 'processing'\nAUTHORIZED = 'authorized'\nPAID = 'paid'\nREFUNDED = 'refunded'\nPENDING_REFUND = 'pending_refund'\nWAITING_PAYMENT = 'waiting_payment'\nREFUSED = 'refused'\n```\n\n\n\n### Configura\u00e7\u00e3o de Pagamento\n\nAs configura\u00e7\u00f5es ficam dispon\u00edveis via admin do django. Voc\u00ea pode criar v\u00e1rias.\nCada uma deve conter as configura\u00e7\u00f5es b\u00e1sicas de pagamento:\n\nUm nome para identificar a op\u00e7\u00e3o\nN\u00famero m\u00e1ximo de parcelas\nEscolha padr\u00e3o do n\u00famero parcelas que vai aparecer no formul\u00e1rio\nN\u00famero m\u00e1ximo de parcelas sem juros\nTaxa de juros\nM\u00e9todo de pagamento: Cart\u00e3o, Boleto ou ambos.\n\nSegue exemplo:\n\n![Admin de Op\u00e7\u00f5es de Pagamento](./documentation/imgs/PaymentFormConfig.png?raw=true)\n\n### Configura\u00e7\u00e3o de Item de Pagamento\n\nAqui vc configura os produtos que vai vender. Propriedades:\n\nNome do pagarme\nPre\u00e7o em Centavos\nSe o pagarme \u00e9 f\u00edsico ou n\u00e3o\nOp\u00e7\u00e3o padr\u00e3o de pagamento\n\nSegue exemplo de um curso chamado Pytools custando R$ 97.00\n\n![Admin de Produto](./documentation/imgs/PaymentFormItemConfig.png?raw=true)\n\nUma Configura\u00e7\u00e3o geral serve como configura\u00e7\u00e3o padr\u00e3o de um item\n\n### Outras classes de interesse\n\nNo admin ainda existem 4 classes de interesse:\n\n1. PagarmePayment : reprensenta um pagamento (transction) do pagarme\n1. PagarmeNotification: representa uma notificac\u00e3o do pagarme. Um pagamento pode possuir m\u00faltiplas notifica\u00e7\u00f5es  \n1. UserPaymentProfile: representa dados gerais preenchidos no \u00faltimo checkout feito no pagarme. \u00c9 usado para preencher os dados em um pr\u00f3ximo pagamento e est\u00e1 relacioando com o usu\u00e1rio Django.\n1.    \n\n\nUm exemplo completo de aplica\u00e7\u00e3o se encontra no diret\u00f3rio `exemplo`\n\n\n## Contribuidores\n\n@renzon\n\n## Como Contribuir\n\nSeguimos a conven\u00e7\u00e3o de c\u00f3digo da [PEP8](https://www.python.org/dev/peps/pep-0008/), com excess\u00e3o do tamanho m\u00e1ximo de\nlinha que pode ter 120 caracteres.\n\nFa\u00e7a um fork do projeto e mande um pull request. PR sem testes ser\u00e3o rejeitados.\n\nPara rodar o projeto de exemplo:\n\nInstale o docker\nRode o Banco de Dados: `docker-compose -f docker-compose.yml up -d`\nCrie um arquivo `.env` dentro da pasta `exemplo`:\n\n```\nCHAVE_PAGARME_CRIPTOGRAFIA_PUBLICA=coloque_sua_chave_publica_aqui\nCHAVE_PAGARME_API_PRIVADA=coloque_sua_chave_privada_aqui\nPHONENUMBER_DEFAULT_REGION=BR\nDATABASE_URL=postgres://postgres:postgres@localhost:5432/django_pagarme\n``` \nObs: Troque as chaves do pagarme pelas suas chaves do [ambiente de teste](https://docs.pagar.me/docs/api-key-e-encryption-key) para testar localmente.\n\nSe for rodar em computador local, use um servi\u00e7o como o [ngrok](https://ngrok.com/) para mapear suas portas locais na internet\n\nInstale o pipenv:\n\n```\npython -m pip install pipenv\n``` \n\nNavegue at\u00e9 a pasta exemplo e rode:\n\n```\npipenv sync\n```\n\nRode o servidor local:\n```\npipenv run python manage.py runserver\n```\n\nPara rodar os testes:\n```\nexemplo $ pipenv run pytest .\nLoading .env environment variables\u2026\n======================================================= test session starts ========================================================\nplatform darwin -- Python 3.8.0, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\ndjango: settings: base.settings (from ini)\nrootdir: /Users/renzo/PycharmProjects/django_pagarme, inifile: setup.cfg\nplugins: mock-2.0.0, cov-2.8.1, django-3.8.0\ncollected 85 items                                                                                                                 \n\nbase/tests/test_home.py .                                                                                                    [  1%]\npagamentos/tests/test_captura_boleto.py ............                                                                         [ 15%]\npagamentos/tests/test_captura_credit_card.py ..............                                                                  [ 31%]\npagamentos/tests/test_dados_usuario.py ........                                                                              [ 41%]\npagamentos/tests/test_pagarme_notification_transitions.py ................                                                   [ 60%]\npagamentos/tests/test_pagarme_notifications.py ....                                                                          [ 64%]\npagamentos/tests/test_pagina_pagamento.py ..................                                                                 [ 85%]\npagamentos/tests/test_thanks.py ..                                                                                           [ 88%]\nbase/tests/test_contact_info.py ........                                                                                     [ 97%]\nbase/tests/test_facade.py ..                                                                                                 [100%]\n\n======================================================== 85 passed in 9.26s ======================================================== \n```\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/renzon/django_pagarme", "keywords": "", "license": "GNU Affero General Public License v3 or later (AGPLv3+)", "maintainer": "", "maintainer_email": "", "name": "django-pagarme", "package_url": "https://pypi.org/project/django-pagarme/", "platform": "", "project_url": "https://pypi.org/project/django-pagarme/", "project_urls": {"Homepage": "https://github.com/renzon/django_pagarme"}, "release_url": "https://pypi.org/project/django-pagarme/0.8/", "requires_dist": ["django (>=2.0)", "django-phonenumber-field[phonenumberslite]"], "requires_python": "", "summary": "App Django para Automatizar Integra\u00e7\u00e3o com Gateway de Pagamento Pagarme", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django_pagarme</h1>\n<p>App Django para Automatizar Integra\u00e7\u00e3o com Gateway de Pagamento Pagarme</p>\n<p><a href=\"https://codecov.io/gh/renzon/django_pagarme\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2910d0b2a863c9cf863e50173a6c2b81a0e6177b/68747470733a2f2f636f6465636f762e696f2f67682f72656e7a6f6e2f646a616e676f5f70616761726d652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h2>Instala\u00e7\u00e3o</h2>\n<p>Instale via pip</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">django_pagarme</span>\n</pre>\n<h2>Configure o Django</h2>\n<p>Configure seu settings.py</p>\n<pre><code>INSTALLED_APPS = [\n    'django_pagarme',\n    'phonenumber_field',\n    ...\n]\n\n# Dados para integra\u00e7\u00e3o com Pagarme\nCHAVE_PAGARME_API_PRIVADA = 'CHAVE_PAGARME_API_PRIVADA'\nCHAVE_PAGARME_CRIPTOGRAFIA_PUBLICA = 'CHAVE_PAGARME_CRIPTOGRAFIA_PUBLICA'\n\n# Para validar telefones no Brasil\nPHONENUMBER_DEFAULT_REGION = 'BR'\n\n</code></pre>\n<p>Rode as migra\u00e7\u00f5es</p>\n<pre><code>python manage.py migrate\n</code></pre>\n<p>Configure as urls:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">include</span><span class=\"p\">,</span> <span class=\"n\">path</span>\n<span class=\"o\">...</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'checkout/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'django_pagarme.urls'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<h2>Personalize seus formul\u00e1rios</h2>\n<p>Cria uma app e no diret\u00f3rio de templates, crie suas p\u00e1ginas como descrito abaixo.</p>\n<h3>Dados de Contato</h3>\n<p>Formul\u00e1rio para obter dados de contato do usu\u00e1rio</p>\n<p>Template <code>django_pagarme/contact_form.html</code></p>\n<p>Ex:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">action</span><span class=\"o\">=</span><span class=\"s\">\"{% url 'django_pagarme:contact_info' slug=slug %}\"</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">\"post\"</span><span class=\"p\">&gt;</span>\n    {% csrf_token %}\n    {{ contact_form.as_p }}\n    <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"submit\"</span><span class=\"p\">&gt;</span>Comprar<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n</pre>\n<h3>Formul\u00e1rio de erros</h3>\n<p>Formul\u00e1rio de erros de dados de contato do usu\u00e1rio.</p>\n<p>Template <code>django_pagarme/contact_form_errors.html</code></p>\n<p>Pode herdar de <code>contact_form.html</code> no caso de vc decidir que quer usar a mesma p\u00e1gina com formul\u00e1rio</p>\n<p>Ex:</p>\n<pre>{% extends 'django_pagarme/contact_form.html' %}\n</pre>\n<h3>P\u00e1gina de Checkout do Pagarme</h3>\n<p>P\u00e1gina onde o usu\u00e1rio preenche os dados de pagamento.</p>\n<p>Template <code>django_pagarme/pagarme.html</code></p>\n<p>Deve ter um elemento clic\u00e1vel com classe css <code>pay-button</code>.\nAo clicar nesse elemento, o checkout \u00e9 iniciado.</p>\n<p>Ex:</p>\n<pre>{% load django_pagarme %}\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"c\">&lt;!-- SCRIPT PAGAR.ME --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>{{ payment_item.name }}<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"//assets.pagar.me/checkout/1.1.0/checkout.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>{{ payment_item.name }}<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>Planos<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n    {% for installments, amount, installment_amount in payment_item.payment_plans %}\n        {% if installments == 1 %}\n            <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>{{ amount|cents_to_brl }} a vista<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        {% else %}\n            <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>{{ amount|cents_to_brl }} em {{ installments }} parcelas de {{ installment_amount|cents_to_brl }}<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        {% endif %}\n    {% endfor %}\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"pay-button\"</span><span class=\"p\">&gt;</span>Abrir modal de pagamento<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n{% show_pagarme payment_item customer open_modal %}\n\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h3>P\u00e1gina de visualiza\u00e7\u00e3o de Boleto</h3>\n<p>P\u00e1gina onde o usu\u00e1rio acessa os dados do boleto para pagamento</p>\n<p>Template <code>django_pagarme/show_boleto_data.html</code></p>\n<p>Ex:</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">lang</span><span class=\"o\">=</span><span class=\"s\">\"en\"</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">\"UTF-8\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Dados do Boleto<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Dados do Boleto<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>C\u00f3digo de Barras: {{ payment.boleto_barcode }}<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">iframe</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{{ payment.boleto_url }}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">iframe</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h3>P\u00e1gina de obrigado</h3>\n<p>P\u00e1gina onde o usu\u00e1rio \u00e9 levado ao finalizar o pagamento</p>\n<p>Template <code>django_pagarme/thanks.html</code></p>\n<p>Ex:</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">lang</span><span class=\"o\">=</span><span class=\"s\">\"en\"</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">\"UTF-8\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Obrigado por Comprar<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span> Obrigado por comprar {{ payment_item_config.name }}<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h2>Listeners</h2>\n<p>O biblioteca dispo de 2 listener para ouvir eventos e tamb\u00e9m da configura\u00e7\u00e3o de cria\u00e7\u00e3o de usu\u00e1rio.</p>\n<h3>Listener de Contato de usu\u00e1rio</h3>\n<p>Cham\u00e1vel utilizado para receber os dados do usu\u00e1rio</p>\n<p>Ex:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_pagarme</span> <span class=\"kn\">import</span> <span class=\"n\">facade</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_contact_info</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"p\">,</span> <span class=\"n\">payment_item_slug</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Contact Data:'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"p\">,</span> <span class=\"n\">payment_item_slug</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">facade</span><span class=\"o\">.</span><span class=\"n\">add_contact_info_listener</span><span class=\"p\">(</span><span class=\"n\">print_contact_info</span><span class=\"p\">)</span>\n</pre>\n<p>Essa fun\u00e7\u00e3o pode ser usada para armazenar os dados em banco, ou chamar uma api depois que o usu\u00e1rio preenche os dados de contato.</p>\n<h3>F\u00e1brica de usu\u00e1rio</h3>\n<p>Cham\u00e1vel utilizado para gerar um usu\u00e1rio para ser conectado ao pedido.\nS\u00f3 \u00e9 chamado se n\u00e3o houver usu\u00e1rio logado. Se n\u00e3o for setado, pedidos ainda ser\u00e3o\nfeitos corretamente, mas sem link com qualquer usu\u00e1rio do sistema.</p>\n<p>Ex:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_pagarme</span> <span class=\"kn\">import</span> <span class=\"n\">facade</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">get_user_model</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">user_factory</span><span class=\"p\">(</span><span class=\"n\">pagarme_transaction</span><span class=\"p\">):</span>\n    <span class=\"n\">User</span> <span class=\"o\">=</span> <span class=\"n\">get_user_model</span><span class=\"p\">()</span>\n    <span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"n\">pagarme_transaction</span><span class=\"p\">[</span><span class=\"s1\">'customer'</span><span class=\"p\">]</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">customer</span><span class=\"p\">[</span><span class=\"s1\">'email'</span><span class=\"p\">])</span>\n    <span class=\"k\">except</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">DoesNotExist</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"n\">customer</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span>\n            <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"n\">customer</span><span class=\"p\">[</span><span class=\"s1\">'email'</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">facade</span><span class=\"o\">.</span><span class=\"n\">set_user_factory</span><span class=\"p\">(</span><span class=\"n\">user_factory</span><span class=\"p\">)</span>\n</pre>\n<h3>Listener de mudan\u00e7as de status</h3>\n<p>Toda vez que o sistema recebe notifica\u00e7\u00e3o de mudan\u00e7a de status, esse cham\u00e1vel\n\u00e9 executado e recebe o id do respectivo pagamento.</p>\n<p>Pode ser utilizado para ativa um usu\u00e1rio na base, ou enviar o produto, de acordo\ncom o status.</p>\n<p>Ex:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_pagarme</span> <span class=\"kn\">import</span> <span class=\"n\">facade</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">print_payment_id</span><span class=\"p\">(</span><span class=\"n\">payment_id</span><span class=\"p\">):</span>\n    <span class=\"n\">payment</span> <span class=\"o\">=</span> <span class=\"n\">facade</span><span class=\"o\">.</span><span class=\"n\">find_payment</span><span class=\"p\">(</span><span class=\"n\">payment_id</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">payment</span><span class=\"p\">,</span> <span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">())</span>\n\n\n<span class=\"n\">facade</span><span class=\"o\">.</span><span class=\"n\">add_payment_status_changed</span><span class=\"p\">(</span><span class=\"n\">print_payment_id</span><span class=\"p\">)</span>\n</pre>\n<p>Os status existentes est\u00e3o dispon\u00edveis via fachada (facade):</p>\n<pre><span class=\"n\">PROCESSING</span> <span class=\"o\">=</span> <span class=\"s1\">'processing'</span>\n<span class=\"n\">AUTHORIZED</span> <span class=\"o\">=</span> <span class=\"s1\">'authorized'</span>\n<span class=\"n\">PAID</span> <span class=\"o\">=</span> <span class=\"s1\">'paid'</span>\n<span class=\"n\">REFUNDED</span> <span class=\"o\">=</span> <span class=\"s1\">'refunded'</span>\n<span class=\"n\">PENDING_REFUND</span> <span class=\"o\">=</span> <span class=\"s1\">'pending_refund'</span>\n<span class=\"n\">WAITING_PAYMENT</span> <span class=\"o\">=</span> <span class=\"s1\">'waiting_payment'</span>\n<span class=\"n\">REFUSED</span> <span class=\"o\">=</span> <span class=\"s1\">'refused'</span>\n</pre>\n<h3>Configura\u00e7\u00e3o de Pagamento</h3>\n<p>As configura\u00e7\u00f5es ficam dispon\u00edveis via admin do django. Voc\u00ea pode criar v\u00e1rias.\nCada uma deve conter as configura\u00e7\u00f5es b\u00e1sicas de pagamento:</p>\n<p>Um nome para identificar a op\u00e7\u00e3o\nN\u00famero m\u00e1ximo de parcelas\nEscolha padr\u00e3o do n\u00famero parcelas que vai aparecer no formul\u00e1rio\nN\u00famero m\u00e1ximo de parcelas sem juros\nTaxa de juros\nM\u00e9todo de pagamento: Cart\u00e3o, Boleto ou ambos.</p>\n<p>Segue exemplo:</p>\n<p><img alt=\"Admin de Op\u00e7\u00f5es de Pagamento\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82bdc6dcb09957064b84f28e6722205c34c7a289/2e2f646f63756d656e746174696f6e2f696d67732f5061796d656e74466f726d436f6e6669672e706e673f7261773d74727565\"></p>\n<h3>Configura\u00e7\u00e3o de Item de Pagamento</h3>\n<p>Aqui vc configura os produtos que vai vender. Propriedades:</p>\n<p>Nome do pagarme\nPre\u00e7o em Centavos\nSe o pagarme \u00e9 f\u00edsico ou n\u00e3o\nOp\u00e7\u00e3o padr\u00e3o de pagamento</p>\n<p>Segue exemplo de um curso chamado Pytools custando R$ 97.00</p>\n<p><img alt=\"Admin de Produto\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edb43f0b08257fd53f11d4bfd95c15eb9e287bbe/2e2f646f63756d656e746174696f6e2f696d67732f5061796d656e74466f726d4974656d436f6e6669672e706e673f7261773d74727565\"></p>\n<p>Uma Configura\u00e7\u00e3o geral serve como configura\u00e7\u00e3o padr\u00e3o de um item</p>\n<h3>Outras classes de interesse</h3>\n<p>No admin ainda existem 4 classes de interesse:</p>\n<ol>\n<li>PagarmePayment : reprensenta um pagamento (transction) do pagarme</li>\n<li>PagarmeNotification: representa uma notificac\u00e3o do pagarme. Um pagamento pode possuir m\u00faltiplas notifica\u00e7\u00f5es</li>\n<li>UserPaymentProfile: representa dados gerais preenchidos no \u00faltimo checkout feito no pagarme. \u00c9 usado para preencher os dados em um pr\u00f3ximo pagamento e est\u00e1 relacioando com o usu\u00e1rio Django.</li>\n<li>\n</ol>\n<p>Um exemplo completo de aplica\u00e7\u00e3o se encontra no diret\u00f3rio <code>exemplo</code></p>\n<h2>Contribuidores</h2>\n<p>@renzon</p>\n<h2>Como Contribuir</h2>\n<p>Seguimos a conven\u00e7\u00e3o de c\u00f3digo da <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a>, com excess\u00e3o do tamanho m\u00e1ximo de\nlinha que pode ter 120 caracteres.</p>\n<p>Fa\u00e7a um fork do projeto e mande um pull request. PR sem testes ser\u00e3o rejeitados.</p>\n<p>Para rodar o projeto de exemplo:</p>\n<p>Instale o docker\nRode o Banco de Dados: <code>docker-compose -f docker-compose.yml up -d</code>\nCrie um arquivo <code>.env</code> dentro da pasta <code>exemplo</code>:</p>\n<pre><code>CHAVE_PAGARME_CRIPTOGRAFIA_PUBLICA=coloque_sua_chave_publica_aqui\nCHAVE_PAGARME_API_PRIVADA=coloque_sua_chave_privada_aqui\nPHONENUMBER_DEFAULT_REGION=BR\nDATABASE_URL=postgres://postgres:postgres@localhost:5432/django_pagarme\n</code></pre>\n<p>Obs: Troque as chaves do pagarme pelas suas chaves do <a href=\"https://docs.pagar.me/docs/api-key-e-encryption-key\" rel=\"nofollow\">ambiente de teste</a> para testar localmente.</p>\n<p>Se for rodar em computador local, use um servi\u00e7o como o <a href=\"https://ngrok.com/\" rel=\"nofollow\">ngrok</a> para mapear suas portas locais na internet</p>\n<p>Instale o pipenv:</p>\n<pre><code>python -m pip install pipenv\n</code></pre>\n<p>Navegue at\u00e9 a pasta exemplo e rode:</p>\n<pre><code>pipenv sync\n</code></pre>\n<p>Rode o servidor local:</p>\n<pre><code>pipenv run python manage.py runserver\n</code></pre>\n<p>Para rodar os testes:</p>\n<pre><code>exemplo $ pipenv run pytest .\nLoading .env environment variables\u2026\n======================================================= test session starts ========================================================\nplatform darwin -- Python 3.8.0, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\ndjango: settings: base.settings (from ini)\nrootdir: /Users/renzo/PycharmProjects/django_pagarme, inifile: setup.cfg\nplugins: mock-2.0.0, cov-2.8.1, django-3.8.0\ncollected 85 items                                                                                                                 \n\nbase/tests/test_home.py .                                                                                                    [  1%]\npagamentos/tests/test_captura_boleto.py ............                                                                         [ 15%]\npagamentos/tests/test_captura_credit_card.py ..............                                                                  [ 31%]\npagamentos/tests/test_dados_usuario.py ........                                                                              [ 41%]\npagamentos/tests/test_pagarme_notification_transitions.py ................                                                   [ 60%]\npagamentos/tests/test_pagarme_notifications.py ....                                                                          [ 64%]\npagamentos/tests/test_pagina_pagamento.py ..................                                                                 [ 85%]\npagamentos/tests/test_thanks.py ..                                                                                           [ 88%]\nbase/tests/test_contact_info.py ........                                                                                     [ 97%]\nbase/tests/test_facade.py ..                                                                                                 [100%]\n\n======================================================== 85 passed in 9.26s ======================================================== \n</code></pre>\n\n          </div>"}, "last_serial": 7092187, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cf020c71bc1e8f68fbbe715d1d058e1c", "sha256": "79f84b7510a30ebc42a446eb4747dc302c105e94b8c339f9759891b6fc390bbb"}, "downloads": -1, "filename": "django_pagarme-0.1.tar.gz", "has_sig": false, "md5_digest": "cf020c71bc1e8f68fbbe715d1d058e1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3173, "upload_time": "2019-11-11T19:12:03", "upload_time_iso_8601": "2019-11-11T19:12:03.668083Z", "url": "https://files.pythonhosted.org/packages/29/68/12facdb27606536551200480d3e2b1cb641eb5747c70452e0e1854c8f1fb/django_pagarme-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "9bcc65c60b549f6d1f2b8ba51bb18597", "sha256": "e910310aacb0218fc0c134337ab0e1d87cfac449cba5322c4865247df5616b07"}, "downloads": -1, "filename": "django_pagarme-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9bcc65c60b549f6d1f2b8ba51bb18597", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27771, "upload_time": "2020-03-16T19:31:48", "upload_time_iso_8601": "2020-03-16T19:31:48.281341Z", "url": "https://files.pythonhosted.org/packages/c8/e2/c6987a5117747547dfe044bc9d35b4229989c4da670b5f60a7b115ac903f/django_pagarme-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d4e21b09bd1bdfb093b8c494e3bc805", "sha256": "09f5524fbaf6353d97df0b38be86ff74bb36a7076609de0a2f910619707824c6"}, "downloads": -1, "filename": "django_pagarme-0.2.tar.gz", "has_sig": false, "md5_digest": "2d4e21b09bd1bdfb093b8c494e3bc805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16086, "upload_time": "2020-03-16T19:31:49", "upload_time_iso_8601": "2020-03-16T19:31:49.935316Z", "url": "https://files.pythonhosted.org/packages/79/45/70ce7d78a2f6ec54506067e11d0bd7672f4afe3c55cc984f315294e89c94/django_pagarme-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "63cf4998ea9a165e101547386a277b01", "sha256": "fec385a79c36e3172500f8e714c234f5562207116a936d7024afebf2645c42e5"}, "downloads": -1, "filename": "django_pagarme-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "63cf4998ea9a165e101547386a277b01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28084, "upload_time": "2020-03-17T02:33:09", "upload_time_iso_8601": "2020-03-17T02:33:09.519381Z", "url": "https://files.pythonhosted.org/packages/9d/64/8b9b3a602b5003fe64c4c3b8471c98f0d382247c20cc8ba4fca8a9d308ef/django_pagarme-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e85a76da13ab07249ec724debe99638", "sha256": "2afdc7a515bde810b625dab6f5a19b2a90c428e71b1be882e8485b06d36386d1"}, "downloads": -1, "filename": "django_pagarme-0.3.tar.gz", "has_sig": false, "md5_digest": "9e85a76da13ab07249ec724debe99638", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16790, "upload_time": "2020-03-17T02:33:11", "upload_time_iso_8601": "2020-03-17T02:33:11.642006Z", "url": "https://files.pythonhosted.org/packages/98/18/553d6abaddc621de2993fd4c0e92338f777d2a5ebcafe4baef0652d47ec2/django_pagarme-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "88e5df593f95ddd02ce217f98c4b98c8", "sha256": "0db3dd97fbca1a2abf286bd2bce3933f5ee6471a5233b6beabab061778072a01"}, "downloads": -1, "filename": "django_pagarme-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "88e5df593f95ddd02ce217f98c4b98c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28397, "upload_time": "2020-03-17T08:32:22", "upload_time_iso_8601": "2020-03-17T08:32:22.050861Z", "url": "https://files.pythonhosted.org/packages/0a/c7/253b54fc152aa29242e3f4a4bdf95f90915b701de618a650a0537a7a7217/django_pagarme-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9f12f0dccd77039b2003145a630c80d", "sha256": "adff29f3fc8cece4d07ca0eae27a7454273876dd6a7531c889c0db95eacfddb1"}, "downloads": -1, "filename": "django_pagarme-0.4.tar.gz", "has_sig": false, "md5_digest": "c9f12f0dccd77039b2003145a630c80d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17442, "upload_time": "2020-03-17T08:32:23", "upload_time_iso_8601": "2020-03-17T08:32:23.127359Z", "url": "https://files.pythonhosted.org/packages/d1/24/4c2eb415bbe8bd9c298d7ef452775f56f454339c2222bcd355b45890488e/django_pagarme-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "140bff03ecaf35806052760d3c48e8dc", "sha256": "85e63ca95a836d636ef2ccfcc05a3a2fe09d9a27f59ed207f246ab96ce893ece"}, "downloads": -1, "filename": "django_pagarme-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "140bff03ecaf35806052760d3c48e8dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30729, "upload_time": "2020-03-18T12:14:56", "upload_time_iso_8601": "2020-03-18T12:14:56.209196Z", "url": "https://files.pythonhosted.org/packages/13/74/2399f573363b6ca40258166c020b1e0fb7b29db6c6734cf1379ef4069bdf/django_pagarme-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2199374bc7c7123e58b138c48cfee406", "sha256": "faa5028a033894446810321e3902b2bb754ad56023e4c9ec3a49a939d12ec257"}, "downloads": -1, "filename": "django_pagarme-0.5.tar.gz", "has_sig": false, "md5_digest": "2199374bc7c7123e58b138c48cfee406", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21868, "upload_time": "2020-03-18T12:14:57", "upload_time_iso_8601": "2020-03-18T12:14:57.911692Z", "url": "https://files.pythonhosted.org/packages/7c/89/61f083826cb9e961eb94c7876e32a5f19afb9fdbbb08c0a5bf9f612456b1/django_pagarme-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "5e792a07fa3f083f030304c49fd3b680", "sha256": "3afe6b8cecb9f491b65c51948a21fdbc8ec3cd82e3f48f73986edbadf0b59961"}, "downloads": -1, "filename": "django_pagarme-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5e792a07fa3f083f030304c49fd3b680", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30747, "upload_time": "2020-03-22T11:48:40", "upload_time_iso_8601": "2020-03-22T11:48:40.865129Z", "url": "https://files.pythonhosted.org/packages/ce/b5/be38f07c103447b0a8bfcd9023f27aecbbbd23f13ea0f59325445615c1bb/django_pagarme-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f472e4b00f72fc2db16c74028c3561d", "sha256": "ae48618ab12209d755fd41ac9cc41a3cdc34b4144dabed407e0f66ded9b52b53"}, "downloads": -1, "filename": "django_pagarme-0.6.tar.gz", "has_sig": false, "md5_digest": "5f472e4b00f72fc2db16c74028c3561d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21756, "upload_time": "2020-03-22T11:48:42", "upload_time_iso_8601": "2020-03-22T11:48:42.295466Z", "url": "https://files.pythonhosted.org/packages/11/7d/ac39f88c8a9b7fbfad78feebc6f218523ba5c91af35e11224739d0150718/django_pagarme-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "2fff8dd8df62240a1331fbb90f439691", "sha256": "27a7d63050127d73f1ed35eb1ed5792d2efe534277a653dfa9e38a798e0530e9"}, "downloads": -1, "filename": "django_pagarme-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2fff8dd8df62240a1331fbb90f439691", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30749, "upload_time": "2020-03-25T16:00:29", "upload_time_iso_8601": "2020-03-25T16:00:29.834784Z", "url": "https://files.pythonhosted.org/packages/f7/5f/b99af750ac9217a3ee1f5d7bdcfd13c67e46c4ff51a343fca5136ec4371f/django_pagarme-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72ab34a680843b1f3a73744f483445a7", "sha256": "eaf18ded26f80ce4c08227602fc3055acba244717d935f2ee4cf763be7c2d899"}, "downloads": -1, "filename": "django_pagarme-0.7.tar.gz", "has_sig": false, "md5_digest": "72ab34a680843b1f3a73744f483445a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21772, "upload_time": "2020-03-25T16:00:32", "upload_time_iso_8601": "2020-03-25T16:00:32.568193Z", "url": "https://files.pythonhosted.org/packages/8c/ee/750859bf28622a9b052e8e94a3d0f8fb524cf8cc86f866f7072e469700e5/django_pagarme-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "c1c33b15e6ee897d9bca34668a7b8dab", "sha256": "e514fd6e77104d93131c6b90ef9613c91b375eae707270668d991539069e372f"}, "downloads": -1, "filename": "django_pagarme-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "c1c33b15e6ee897d9bca34668a7b8dab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30745, "upload_time": "2020-04-24T12:11:33", "upload_time_iso_8601": "2020-04-24T12:11:33.479009Z", "url": "https://files.pythonhosted.org/packages/90/af/0347b3fb808c30f279d951ae306b3dd0b89a77e918d31879d90c9489cad1/django_pagarme-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "826322d73f779e34f16209231b80cbec", "sha256": "e524286c921baf352780308fba900d1e4d2f8932a3083cc411f5f757c1e4b60b"}, "downloads": -1, "filename": "django_pagarme-0.8.tar.gz", "has_sig": false, "md5_digest": "826322d73f779e34f16209231b80cbec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21727, "upload_time": "2020-04-24T12:11:34", "upload_time_iso_8601": "2020-04-24T12:11:34.740729Z", "url": "https://files.pythonhosted.org/packages/08/c6/66623e6b6ab8c9dc2dddff3e98681e4ea0dc34ebd5ee538667f26f17635f/django_pagarme-0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1c33b15e6ee897d9bca34668a7b8dab", "sha256": "e514fd6e77104d93131c6b90ef9613c91b375eae707270668d991539069e372f"}, "downloads": -1, "filename": "django_pagarme-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "c1c33b15e6ee897d9bca34668a7b8dab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30745, "upload_time": "2020-04-24T12:11:33", "upload_time_iso_8601": "2020-04-24T12:11:33.479009Z", "url": "https://files.pythonhosted.org/packages/90/af/0347b3fb808c30f279d951ae306b3dd0b89a77e918d31879d90c9489cad1/django_pagarme-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "826322d73f779e34f16209231b80cbec", "sha256": "e524286c921baf352780308fba900d1e4d2f8932a3083cc411f5f757c1e4b60b"}, "downloads": -1, "filename": "django_pagarme-0.8.tar.gz", "has_sig": false, "md5_digest": "826322d73f779e34f16209231b80cbec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21727, "upload_time": "2020-04-24T12:11:34", "upload_time_iso_8601": "2020-04-24T12:11:34.740729Z", "url": "https://files.pythonhosted.org/packages/08/c6/66623e6b6ab8c9dc2dddff3e98681e4ea0dc34ebd5ee538667f26f17635f/django_pagarme-0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:19 2020"}