{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# plAI\n\nPlai is a programming language to create machine learning pipelines \nwith focus on data treatment, validation, and generation of integration tests to ensure more confiability to machine learning systems on production.\n\n## Examples \n\n```\n# This is a commnt\n\n# Import statements\nimport math\nfrom math import cos \n\n# To get a specific column of the main dataset on\n# a pipeline call:\n# .colname or .\"colname\"\n\n# Function definition\ndef fn(x: int):\n    return 2 * x + 1\n\n# Inline function definition\nfn(x: int) = 2 * x + 1\n\n# Specifing columns type of a dataset\n#\n# Expression can be used to specify a certain type\n# to all columns that match the pattern\ntype T = {\n    timestamp: datetime,\n    name: str,\n    num*: float64,    \n}\n\n# Pipeline definition\n# \n# Output of each expression became the input of the next\npipeline alt(df: T):\n    foo(.name)\n    bar(.timestamp)\n\n    # Operation that must be applied term a term on a dataset\n    # must use the operator `$` when calling the column\n    # if there is no specification of target column \n    # the result will be loaded to the column being used on the operation\n    # if there is more than one column being used a target column must be specified\n    $.name + 'foo'\n\n    # To specify a column as target of an operation use the operator `as`\n    $.name + 'bar' as barname\n\n\n# Exemple of pipeline\n#\npipeline main(df: T, df2): \n    # Drop timestamp column\n    drop(.timestamp)         \n\n    bar($.name + '-foo') as name\n\n    # Create new column \n    $.name + '-' + $.country + df2.x as id\n\n    # Copy column\n    $.id as id2\n\n    fn(.name)\n\n    dropna(.foo)\n\n    merge df2 on x\n\n    # Calling another pipeline\n    alt\n```\n\n## Development \n\n1. Install the dependencies by running the command on the root folder of the project:\n```\npip install -r requirements.txt\n```\n\n2. To run all the tests execute:\n```\npytest tests\n```\n\nTo run a specific test execute:\n```\n# For a specific test file\npytest tests/test_grammar.py\n\n# For a specific test class\npytest tests/test_grammar.py::TestBasicTokens\n\n# For a specific tests method\npytest tests/test_grammar.py::TestBasicTokens::test_token_number\n```\n\n3. To run the interactive terminal execute on the root folder:\n```\npython -m plai\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matheusbsilva/plai", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "plAI", "package_url": "https://pypi.org/project/plAI/", "platform": "", "project_url": "https://pypi.org/project/plAI/", "project_urls": {"Homepage": "https://github.com/matheusbsilva/plai"}, "release_url": "https://pypi.org/project/plAI/0.0.0/", "requires_dist": ["lark-parser (==0.7.8)", "pandas (==0.25.3)"], "requires_python": ">=3.6", "summary": "Programming language to create machine learning pipelines.", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>plAI</h1>\n<p>Plai is a programming language to create machine learning pipelines\nwith focus on data treatment, validation, and generation of integration tests to ensure more confiability to machine learning systems on production.</p>\n<h2>Examples</h2>\n<pre><code># This is a commnt\n\n# Import statements\nimport math\nfrom math import cos \n\n# To get a specific column of the main dataset on\n# a pipeline call:\n# .colname or .\"colname\"\n\n# Function definition\ndef fn(x: int):\n    return 2 * x + 1\n\n# Inline function definition\nfn(x: int) = 2 * x + 1\n\n# Specifing columns type of a dataset\n#\n# Expression can be used to specify a certain type\n# to all columns that match the pattern\ntype T = {\n    timestamp: datetime,\n    name: str,\n    num*: float64,    \n}\n\n# Pipeline definition\n# \n# Output of each expression became the input of the next\npipeline alt(df: T):\n    foo(.name)\n    bar(.timestamp)\n\n    # Operation that must be applied term a term on a dataset\n    # must use the operator `$` when calling the column\n    # if there is no specification of target column \n    # the result will be loaded to the column being used on the operation\n    # if there is more than one column being used a target column must be specified\n    $.name + 'foo'\n\n    # To specify a column as target of an operation use the operator `as`\n    $.name + 'bar' as barname\n\n\n# Exemple of pipeline\n#\npipeline main(df: T, df2): \n    # Drop timestamp column\n    drop(.timestamp)         \n\n    bar($.name + '-foo') as name\n\n    # Create new column \n    $.name + '-' + $.country + df2.x as id\n\n    # Copy column\n    $.id as id2\n\n    fn(.name)\n\n    dropna(.foo)\n\n    merge df2 on x\n\n    # Calling another pipeline\n    alt\n</code></pre>\n<h2>Development</h2>\n<ol>\n<li>Install the dependencies by running the command on the root folder of the project:</li>\n</ol>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<ol>\n<li>To run all the tests execute:</li>\n</ol>\n<pre><code>pytest tests\n</code></pre>\n<p>To run a specific test execute:</p>\n<pre><code># For a specific test file\npytest tests/test_grammar.py\n\n# For a specific test class\npytest tests/test_grammar.py::TestBasicTokens\n\n# For a specific tests method\npytest tests/test_grammar.py::TestBasicTokens::test_token_number\n</code></pre>\n<ol>\n<li>To run the interactive terminal execute on the root folder:</li>\n</ol>\n<pre><code>python -m plai\n</code></pre>\n\n          </div>"}, "last_serial": 6289115, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "2798e949d407c33c216ac6c517a47520", "sha256": "d4b2f32a2d31fd3be5a31fcb3c655312a3b32ddb13603c2c88f4558e1f4dbf97"}, "downloads": -1, "filename": "plAI-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2798e949d407c33c216ac6c517a47520", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11924, "upload_time": "2019-12-12T22:13:11", "upload_time_iso_8601": "2019-12-12T22:13:11.551938Z", "url": "https://files.pythonhosted.org/packages/0b/52/b24a1fd29b54631007f7642489e005c2abf91bd2429bee96100fa79e83a2/plAI-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bae25ca08f29508447984d79d0c0c077", "sha256": "1b3914699f7d05ca039802a937c910bb07a2d263f5d549ff8e84b6ffa16ac776"}, "downloads": -1, "filename": "plAI-0.0.0.tar.gz", "has_sig": false, "md5_digest": "bae25ca08f29508447984d79d0c0c077", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8346, "upload_time": "2019-12-12T22:13:14", "upload_time_iso_8601": "2019-12-12T22:13:14.885458Z", "url": "https://files.pythonhosted.org/packages/d7/e8/3d454a95acc7e0bf319913204af91b1a9ddb3bf30547d95eae643c0f67f4/plAI-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2798e949d407c33c216ac6c517a47520", "sha256": "d4b2f32a2d31fd3be5a31fcb3c655312a3b32ddb13603c2c88f4558e1f4dbf97"}, "downloads": -1, "filename": "plAI-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2798e949d407c33c216ac6c517a47520", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11924, "upload_time": "2019-12-12T22:13:11", "upload_time_iso_8601": "2019-12-12T22:13:11.551938Z", "url": "https://files.pythonhosted.org/packages/0b/52/b24a1fd29b54631007f7642489e005c2abf91bd2429bee96100fa79e83a2/plAI-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bae25ca08f29508447984d79d0c0c077", "sha256": "1b3914699f7d05ca039802a937c910bb07a2d263f5d549ff8e84b6ffa16ac776"}, "downloads": -1, "filename": "plAI-0.0.0.tar.gz", "has_sig": false, "md5_digest": "bae25ca08f29508447984d79d0c0c077", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8346, "upload_time": "2019-12-12T22:13:14", "upload_time_iso_8601": "2019-12-12T22:13:14.885458Z", "url": "https://files.pythonhosted.org/packages/d7/e8/3d454a95acc7e0bf319913204af91b1a9ddb3bf30547d95eae643c0f67f4/plAI-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:45 2020"}