{"info": {"author": "Giacomo Spettoli", "author_email": "giacomo.spettoli@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Zope2", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\r\n============\r\n\r\nby Giacomo Spettoli<giacomo.spettoli@gmail.com> and `Regione Emilia-Romagna\r\n<http://ermes.regione.emilia-romagna.it>`_\r\n\r\nThis product is a user interface for migrate content based on framework `Products.contentmigration\r\n<http://pypi.python.org/pypi/Products.contentmigration>`_.\r\n\r\nThe wizard will guide the site administrator with 3 step:\r\n\r\n1. select the desired migration from a list\r\n2. select in which contents apply the migration from a filtered site map\r\n3. confirm the migration. \r\n\r\nThis product also provide an easy way to register new migration. In \"allmigration\" folder you can\r\nfind some example.\r\nHere the folderToLargeFolder migration::\r\n\r\n    class FolderToLargePloneFolder(object, ATFolderMigrator):\r\n        \"\"\"Migrate the old item type to the new item type\r\n        \"\"\"\r\n        implements(IContentMigrator)\r\n    \r\n        walker = CustomQueryWalker\r\n        src_meta_type = \"ATFolder\"\r\n        src_portal_type = \"Folder\"\r\n        dst_meta_type = \"ATBTreeFolder\"\r\n        dst_portal_type = \"Large Plone Folder\"\r\n        description = \"Document to Document\"\r\n        safeMigration = True\r\n    \r\n        def __init__(self, *args, **kwargs):\r\n            ATFolderMigrator.__init__(self, *args, **kwargs)\r\n            self.fields_map = BASE_AT_PROPERTIES\r\n\r\n    FolderToLargePloneFolderMigrator = FolderToLargePloneFolder\r\n\r\nIn order to create your own migration you must create a class that extend ATFolderMigrator or ATItemMigrator::\r\n\r\n    from Products.contentmigration.archetypes import ATFolderMigrator,ATItemMigrator\r\n\r\nThis new class must implements IContentMigrator interface::\r\n\r\n    implements(IContentMigrator)\r\n\r\nNext you insert source and destination portal_type and meta_type (you can find these values in zmi/portal_types)::\r\n\r\n    src_meta_type = \"ATFolder\"\r\n    src_portal_type = \"Folder\"\r\n    dst_meta_type = \"ATBTreeFolder\"\r\n    dst_portal_type = \"Large Plone Folder\"\r\n\r\nYou can set the migration as \"safe\" or \"unsafe\". A \"safe\" migration is a migration where\r\nthe destination content type has equal/more fields than origin content type. You can also insert a warning message in description::\r\n\r\n    safeMigration = True\r\n    description = \"Document to Document\"\r\n\r\nAnd than,in the __init__ method you must map source fields in destination fields. Basic archetypes fields are already mapped in BASE_AT_PROPERTIES::\r\n\r\n    self.fields_map = BASE_AT_PROPERTIES\r\n\r\nAt last insert this line to create a named utility::\r\n    <class name>Migrator = <class name>\r\n\r\nIn a zcml file register the new utility::\r\n\r\n    <utility\r\n        component=\".basemigrations.FolderToLargePloneFolderMigrator\"\r\n        provides=\"..interfaces.IContentMigrator\"\r\n        name=\"collective.contentmigrationui.FolderToLargePloneFolderMigrator\"\r\n    />\r\n \r\nChangelog\r\n=========\r\n\r\n0.1\r\n---------------------\r\n\r\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.contentmigrationui", "keywords": "web zope plone content migration", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.contentmigrationui", "package_url": "https://pypi.org/project/collective.contentmigrationui/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.contentmigrationui/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.contentmigrationui"}, "release_url": "https://pypi.org/project/collective.contentmigrationui/0.1/", "requires_dist": null, "requires_python": null, "summary": "A content migration wizard based on Products.contentmigration", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>by Giacomo Spettoli&lt;<a href=\"mailto:giacomo.spettoli%40gmail.com\">giacomo<span>.</span>spettoli<span>@</span>gmail<span>.</span>com</a>&gt; and <a href=\"http://ermes.regione.emilia-romagna.it\" rel=\"nofollow\">Regione Emilia-Romagna</a></p>\n<p>This product is a user interface for migrate content based on framework <a href=\"http://pypi.python.org/pypi/Products.contentmigration\" rel=\"nofollow\">Products.contentmigration</a>.</p>\n<p>The wizard will guide the site administrator with 3 step:</p>\n<ol>\n<li>select the desired migration from a list</li>\n<li>select in which contents apply the migration from a filtered site map</li>\n<li>confirm the migration.</li>\n</ol>\n<p>This product also provide an easy way to register new migration. In \u201callmigration\u201d folder you can\nfind some example.\nHere the folderToLargeFolder migration:</p>\n<pre>class FolderToLargePloneFolder(object, ATFolderMigrator):\n    \"\"\"Migrate the old item type to the new item type\n    \"\"\"\n    implements(IContentMigrator)\n\n    walker = CustomQueryWalker\n    src_meta_type = \"ATFolder\"\n    src_portal_type = \"Folder\"\n    dst_meta_type = \"ATBTreeFolder\"\n    dst_portal_type = \"Large Plone Folder\"\n    description = \"Document to Document\"\n    safeMigration = True\n\n    def __init__(self, *args, **kwargs):\n        ATFolderMigrator.__init__(self, *args, **kwargs)\n        self.fields_map = BASE_AT_PROPERTIES\n\nFolderToLargePloneFolderMigrator = FolderToLargePloneFolder\n</pre>\n<p>In order to create your own migration you must create a class that extend ATFolderMigrator or ATItemMigrator:</p>\n<pre>from Products.contentmigration.archetypes import ATFolderMigrator,ATItemMigrator\n</pre>\n<p>This new class must implements IContentMigrator interface:</p>\n<pre>implements(IContentMigrator)\n</pre>\n<p>Next you insert source and destination portal_type and meta_type (you can find these values in zmi/portal_types):</p>\n<pre>src_meta_type = \"ATFolder\"\nsrc_portal_type = \"Folder\"\ndst_meta_type = \"ATBTreeFolder\"\ndst_portal_type = \"Large Plone Folder\"\n</pre>\n<p>You can set the migration as \u201csafe\u201d or \u201cunsafe\u201d. A \u201csafe\u201d migration is a migration where\nthe destination content type has equal/more fields than origin content type. You can also insert a warning message in description:</p>\n<pre>safeMigration = True\ndescription = \"Document to Document\"\n</pre>\n<p>And than,in the __init__ method you must map source fields in destination fields. Basic archetypes fields are already mapped in BASE_AT_PROPERTIES:</p>\n<pre>self.fields_map = BASE_AT_PROPERTIES\n</pre>\n<dl>\n<dt>At last insert this line to create a named utility::</dt>\n<dd>&lt;class name&gt;Migrator = &lt;class name&gt;</dd>\n</dl>\n<p>In a zcml file register the new utility:</p>\n<pre>&lt;utility\n    component=\".basemigrations.FolderToLargePloneFolderMigrator\"\n    provides=\"..interfaces.IContentMigrator\"\n    name=\"collective.contentmigrationui.FolderToLargePloneFolderMigrator\"\n/&gt;\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 787715, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4b3b0183b51acc7e6d7cc3ea0741abfd", "sha256": "d3e239e841cff097d7e825c34bc8b44951812663afe7527731f559142bc8e89b"}, "downloads": -1, "filename": "collective.contentmigrationui-0.1-py2.4.egg", "has_sig": false, "md5_digest": "4b3b0183b51acc7e6d7cc3ea0741abfd", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 52140, "upload_time": "2010-08-19T16:35:57", "upload_time_iso_8601": "2010-08-19T16:35:57.142712Z", "url": "https://files.pythonhosted.org/packages/f3/e1/76da27b1ef6f74b01b51b37e99679c31164bc642fcfa81611694f516e8be/collective.contentmigrationui-0.1-py2.4.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b3b0183b51acc7e6d7cc3ea0741abfd", "sha256": "d3e239e841cff097d7e825c34bc8b44951812663afe7527731f559142bc8e89b"}, "downloads": -1, "filename": "collective.contentmigrationui-0.1-py2.4.egg", "has_sig": false, "md5_digest": "4b3b0183b51acc7e6d7cc3ea0741abfd", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 52140, "upload_time": "2010-08-19T16:35:57", "upload_time_iso_8601": "2010-08-19T16:35:57.142712Z", "url": "https://files.pythonhosted.org/packages/f3/e1/76da27b1ef6f74b01b51b37e99679c31164bc642fcfa81611694f516e8be/collective.contentmigrationui-0.1-py2.4.egg", "yanked": false}], "timestamp": "Thu May  7 22:17:58 2020"}