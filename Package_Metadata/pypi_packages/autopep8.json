{"info": {"author": "Hideo Hattori", "author_email": "hhatto.jp@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance"], "description": "========\nautopep8\n========\n\n.. image:: https://img.shields.io/pypi/v/autopep8.svg\n    :target: https://pypi.org/project/autopep8/\n    :alt: PyPI Version\n\n.. image:: https://travis-ci.org/hhatto/autopep8.svg?branch=master\n    :target: https://travis-ci.org/hhatto/autopep8\n    :alt: Build status\n\nautopep8 automatically formats Python code to conform to the `PEP 8`_ style\nguide. It uses the pycodestyle_ utility to determine what parts of the code\nneeds to be formatted. autopep8 is capable of fixing most of the formatting\nissues_ that can be reported by pycodestyle.\n\n.. _PEP 8: https://www.python.org/dev/peps/pep-0008/\n.. _issues: https://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes\n\n.. contents::\n\n\nInstallation\n============\n\nFrom pip::\n\n    $ pip install --upgrade autopep8\n\nConsider using the ``--user`` option_.\n\n.. _option: https://pip.pypa.io/en/latest/user_guide/#user-installs\n\n\nRequirements\n============\n\nautopep8 requires pycodestyle_.\n\n.. _pycodestyle: https://github.com/PyCQA/pycodestyle\n\n\nUsage\n=====\n\nTo modify a file in place (with aggressive level 2)::\n\n    $ autopep8 --in-place --aggressive --aggressive <filename>\n\nBefore running autopep8.\n\n.. code-block:: python\n\n    import math, sys;\n\n    def example1():\n        ####This is a long comment. This should be wrapped to fit within 72 characters.\n        some_tuple=(   1,2, 3,'a'  );\n        some_variable={'long':'Long code lines should be wrapped within 79 characters.',\n        'other':[math.pi, 100,200,300,9876543210,'This is a long string that goes on'],\n        'more':{'inner':'This whole logical line should be wrapped.',some_tuple:[1,\n        20,300,40000,500000000,60000000000000000]}}\n        return (some_tuple, some_variable)\n    def example2(): return {'has_key() is deprecated':True}.has_key({'f':2}.has_key(''));\n    class Example3(   object ):\n        def __init__    ( self, bar ):\n         #Comments should have a space after the hash.\n         if bar : bar+=1;  bar=bar* bar   ; return bar\n         else:\n                        some_string = \"\"\"\n    \t\t           Indentation in multiline strings should not be touched.\n    Only actual code should be reindented.\n    \"\"\"\n                        return (sys.path, some_string)\n\nAfter running autopep8.\n\n.. code-block:: python\n\n    import math\n    import sys\n\n\n    def example1():\n        # This is a long comment. This should be wrapped to fit within 72\n        # characters.\n        some_tuple = (1, 2, 3, 'a')\n        some_variable = {\n            'long': 'Long code lines should be wrapped within 79 characters.',\n            'other': [\n                math.pi,\n                100,\n                200,\n                300,\n                9876543210,\n                'This is a long string that goes on'],\n            'more': {\n                'inner': 'This whole logical line should be wrapped.',\n                some_tuple: [\n                    1,\n                    20,\n                    300,\n                    40000,\n                    500000000,\n                    60000000000000000]}}\n        return (some_tuple, some_variable)\n\n\n    def example2(): return ('' in {'f': 2}) in {'has_key() is deprecated': True}\n\n\n    class Example3(object):\n        def __init__(self, bar):\n            # Comments should have a space after the hash.\n            if bar:\n                bar += 1\n                bar = bar * bar\n                return bar\n            else:\n                some_string = \"\"\"\n    \t\t           Indentation in multiline strings should not be touched.\n    Only actual code should be reindented.\n    \"\"\"\n                return (sys.path, some_string)\n\nOptions::\n\n    usage: autopep8 [-h] [--version] [-v] [-d] [-i] [--global-config filename]\n                    [--ignore-local-config] [-r] [-j n] [-p n] [-a]\n                    [--experimental] [--exclude globs] [--list-fixes]\n                    [--ignore errors] [--select errors] [--max-line-length n]\n                    [--line-range line line] [--hang-closing] [--exit-code]\n                    [files [files ...]]\n\n    Automatically formats Python code to conform to the PEP 8 style guide.\n\n    positional arguments:\n      files                 files to format or '-' for standard in\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             show program's version number and exit\n      -v, --verbose         print verbose messages; multiple -v result in more\n                            verbose messages\n      -d, --diff            print the diff for the fixed source\n      -i, --in-place        make changes to files in place\n      --global-config filename\n                            path to a global pep8 config file; if this file does\n                            not exist then this is ignored (default:\n                            ~/.config/pep8)\n      --ignore-local-config\n                            don't look for and apply local config files; if not\n                            passed, defaults are updated with any config files in\n                            the project's root directory\n      -r, --recursive       run recursively over directories; must be used with\n                            --in-place or --diff\n      -j n, --jobs n        number of parallel jobs; match CPU count if value is\n                            less than 1\n      -p n, --pep8-passes n\n                            maximum number of additional pep8 passes (default:\n                            infinite)\n      -a, --aggressive      enable non-whitespace changes; multiple -a result in\n                            more aggressive changes\n      --experimental        enable experimental fixes\n      --exclude globs       exclude file/directory names that match these comma-\n                            separated globs\n      --list-fixes          list codes for fixes; used by --ignore and --select\n      --ignore errors       do not fix these errors/warnings (default:\n                            E226,E24,W50,W690)\n      --select errors       fix only these errors/warnings (e.g. E4,W)\n      --max-line-length n   set maximum allowed line length (default: 79)\n      --line-range line line, --range line line\n                            only fix errors found within this inclusive range of\n                            line numbers (e.g. 1 99); line numbers are indexed at\n                            1\n      --hang-closing        hang-closing option passed to pycodestyle\n      --exit-code           change to behavior of exit code. default behavior of\n                            return value, 0 is no differences, 1 is error exit.\n                            return 2 when add this option. 2 is exists\n                            differences.\n\n\nFeatures\n========\n\nautopep8 fixes the following issues_ reported by pycodestyle_::\n\n    E101 - Reindent all lines.\n    E11  - Fix indentation.\n    E121 - Fix indentation to be a multiple of four.\n    E122 - Add absent indentation for hanging indentation.\n    E123 - Align closing bracket to match opening bracket.\n    E124 - Align closing bracket to match visual indentation.\n    E125 - Indent to distinguish line from next logical line.\n    E126 - Fix over-indented hanging indentation.\n    E127 - Fix visual indentation.\n    E128 - Fix visual indentation.\n    E129 - Fix visual indentation.\n    E131 - Fix hanging indent for unaligned continuation line.\n    E133 - Fix missing indentation for closing bracket.\n    E20  - Remove extraneous whitespace.\n    E211 - Remove extraneous whitespace.\n    E22  - Fix extraneous whitespace around keywords.\n    E224 - Remove extraneous whitespace around operator.\n    E225 - Fix missing whitespace around operator.\n    E226 - Fix missing whitespace around arithmetic operator.\n    E227 - Fix missing whitespace around bitwise/shift operator.\n    E228 - Fix missing whitespace around modulo operator.\n    E231 - Add missing whitespace.\n    E241 - Fix extraneous whitespace around keywords.\n    E242 - Remove extraneous whitespace around operator.\n    E251 - Remove whitespace around parameter '=' sign.\n    E252 - Missing whitespace around parameter equals.\n    E26  - Fix spacing after comment hash for inline comments.\n    E265 - Fix spacing after comment hash for block comments.\n    E266 - Fix too many leading '#' for block comments.\n    E27  - Fix extraneous whitespace around keywords.\n    E301 - Add missing blank line.\n    E302 - Add missing 2 blank lines.\n    E303 - Remove extra blank lines.\n    E304 - Remove blank line following function decorator.\n    E305 - Expected 2 blank lines after end of function or class.\n    E306 - Expected 1 blank line before a nested definition.\n    E401 - Put imports on separate lines.\n    E402 - Fix module level import not at top of file\n    E501 - Try to make lines fit within --max-line-length characters.\n    E502 - Remove extraneous escape of newline.\n    E701 - Put colon-separated compound statement on separate lines.\n    E70  - Put semicolon-separated compound statement on separate lines.\n    E711 - Fix comparison with None.\n    E712 - Fix comparison with boolean.\n    E713 - Use 'not in' for test for membership.\n    E714 - Use 'is not' test for object identity.\n    E721 - Use \"isinstance()\" instead of comparing types directly.\n    E722 - Fix bare except.\n    E731 - Use a def when use do not assign a lambda expression.\n    W291 - Remove trailing whitespace.\n    W292 - Add a single newline at the end of the file.\n    W293 - Remove trailing whitespace on blank line.\n    W391 - Remove trailing blank lines.\n    W503 - Fix line break before binary operator.\n    W504 - Fix line break after binary operator.\n    W601 - Use \"in\" rather than \"has_key()\".\n    W602 - Fix deprecated form of raising exception.\n    W603 - Use \"!=\" instead of \"<>\"\n    W604 - Use \"repr()\" instead of backticks.\n    W605 - Fix invalid escape sequence 'x'.\n    W690 - Fix various deprecated code (via lib2to3).\n\nautopep8 also fixes some issues not found by pycodestyle_.\n\n- Correct deprecated or non-idiomatic Python code (via ``lib2to3``). Use this\n  for making Python 2.7 code more compatible with Python 3. (This is triggered\n  if ``W690`` is enabled.)\n- Normalize files with mixed line endings.\n- Put a blank line between a class docstring and its first method\n  declaration. (Enabled with ``E301``.)\n- Remove blank lines between a function declaration and its docstring. (Enabled\n  with ``E303``.)\n\nautopep8 avoids fixing some issues found by pycodestyle_.\n\n- ``E112``/``E113`` for non comments are reports of bad indentation that break\n  syntax rules. These should not be modified at all.\n- ``E265``, which refers to spacing after comment hash, is ignored if the\n  comment looks like code. autopep8 avoids modifying these since they are not\n  real comments. If you really want to get rid of the pycodestyle_ warning,\n  consider just removing the commented-out code. (This can be automated via\n  eradicate_.)\n\n.. _eradicate: https://github.com/myint/eradicate\n\n\nMore advanced usage\n===================\n\nBy default autopep8 only makes whitespace changes. Thus, by default, it does\nnot fix ``E711`` and ``E712``. (Changing ``x == None`` to ``x is None`` may\nchange the meaning of the program if ``x`` has its ``__eq__`` method\noverridden.) Nor does it correct deprecated code ``W6``. To enable these\nmore aggressive fixes, use the ``--aggressive`` option::\n\n    $ autopep8 --aggressive <filename>\n\nUse multiple ``--aggressive`` to increase the aggressiveness level. For\nexample, ``E712`` requires aggressiveness level 2 (since ``x == True`` could be\nchanged to either ``x`` or ``x is True``, but autopep8 chooses the former).\n\n``--aggressive`` will also shorten lines more aggressively. It will also remove\ntrailing whitespace more aggressively. (Usually, we don't touch trailing\nwhitespace in docstrings and other multiline strings. And to do even more\naggressive changes to docstrings, use docformatter_.)\n\n.. _docformatter: https://github.com/myint/docformatter\n\nTo enable only a subset of the fixes, use the ``--select`` option. For example,\nto fix various types of indentation issues::\n\n    $ autopep8 --select=E1,W1 <filename>\n\nSimilarly, to just fix deprecated code::\n\n    $ autopep8 --aggressive --select=W6 <filename>\n\nThe above is useful when trying to port a single code base to work with both\nPython 2 and Python 3 at the same time.\n\nIf the file being fixed is large, you may want to enable verbose progress\nmessages::\n\n    $ autopep8 -v <filename>\n\nPassing in ``--experimental`` enables the following functionality:\n\n- Shortens code lines by taking its length into account\n\n::\n\n$ autopep8 --experimental <filename>\n\nUse as a module\n===============\n\nThe simplest way of using autopep8 as a module is via the ``fix_code()``\nfunction:\n\n    >>> import autopep8\n    >>> autopep8.fix_code('x=       123\\n')\n    'x = 123\\n'\n\nOr with options:\n\n    >>> import autopep8\n    >>> autopep8.fix_code('x.has_key(y)\\n',\n    ...                   options={'aggressive': 1})\n    'y in x\\n'\n    >>> autopep8.fix_code('print( 123 )\\n',\n    ...                   options={'ignore': ['E']})\n    'print( 123 )\\n'\n\n\nConfiguration\n=============\n\nBy default, if ``$HOME/.config/pycodestyle`` (``~\\.pycodestyle`` in Windows\nenvironment) exists, it will be used as global configuration file.\nAlternatively, you can specify the global configuration file with the\n``--global-config`` option.\n\nAlso, if ``setup.cfg``, ``tox.ini``, ``.pep8`` and ``.flake8`` files exist\nin the directory where the target file exists, it will be used as the\nconfiguration file.\n\n``pep8``, ``pycodestyle``, and ``flake8`` can be used as a section.\n\nconfiguration file example::\n\n    [pycodestyle]\n    max_line_length = 120\n    ignore = E501\n\npyproject.toml\n--------------\n\nautopep8 can also use ``pyproject.toml``.\nsection must use ``[tool.autopep8]``, and ``pyproject.toml`` takes precedence\nover any other configuration files.\n\nconfiguration file example::\n\n    [tool.autopep8]\n    max_line_length = 120\n    ignore = E501\n\n\nTesting\n=======\n\nTest cases are in ``test/test_autopep8.py``. They can be run directly via\n``python test/test_autopep8.py`` or via tox_. The latter is useful for\ntesting against multiple Python interpreters. (We currently test against\nCPython versions 2.7, 3.4, 3.5, 3.6 and 3.7. We also test against PyPy.)\n\n.. _`tox`: https://pypi.org/project/tox/\n\nBroad spectrum testing is available via ``test/acid.py``. This script runs\nautopep8 against Python code and checks for correctness and completeness of the\ncode fixes. It can check that the bytecode remains identical.\n``test/acid_pypi.py`` makes use of ``acid.py`` to test against the latest\nreleased packages on PyPI.\n\n\nTroubleshooting\n===============\n\n``pkg_resources.DistributionNotFound``\n--------------------------------------\n\nIf you are using an ancient version of ``setuptools``, you might encounter\n``pkg_resources.DistributionNotFound`` when trying to run ``autopep8``. Try\nupgrading ``setuptools`` to workaround this ``setuptools`` problem::\n\n    $ pip install --upgrade setuptools\n\nUse ``sudo`` if you are installing to the system.\n\n\nLinks\n=====\n\n* PyPI_\n* GitHub_\n* `Travis CI`_\n* Coveralls_\n\n.. _PyPI: https://pypi.org/project/autopep8/\n.. _GitHub: https://github.com/hhatto/autopep8\n.. _`Travis CI`: https://travis-ci.org/hhatto/autopep8\n.. _`Coveralls`: https://coveralls.io/r/hhatto/autopep8\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hhatto/autopep8", "keywords": "automation", "license": "Expat License", "maintainer": "", "maintainer_email": "", "name": "autopep8", "package_url": "https://pypi.org/project/autopep8/", "platform": "", "project_url": "https://pypi.org/project/autopep8/", "project_urls": {"Homepage": "https://github.com/hhatto/autopep8"}, "release_url": "https://pypi.org/project/autopep8/1.5.2/", "requires_dist": null, "requires_python": "", "summary": "A tool that automatically formats Python code to conform to the PEP 8 style guide", "version": "1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/autopep8/\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de2d976dc35330a8bcb0ea60aac0d455efcb09b0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6175746f706570382e737667\"></a>\n<a href=\"https://travis-ci.org/hhatto/autopep8\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f09578978283d9abb0282fc8354220d7182a427c/68747470733a2f2f7472617669732d63692e6f72672f68686174746f2f6175746f706570382e7376673f6272616e63683d6d6173746572\"></a>\n<p>autopep8 automatically formats Python code to conform to the <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP 8</a> style\nguide. It uses the <a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a> utility to determine what parts of the code\nneeds to be formatted. autopep8 is capable of fixing most of the formatting\n<a href=\"https://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes\" rel=\"nofollow\">issues</a> that can be reported by pycodestyle.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#requirements\" id=\"id2\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#usage\" id=\"id3\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#features\" id=\"id4\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#more-advanced-usage\" id=\"id5\" rel=\"nofollow\">More advanced usage</a></li>\n<li><a href=\"#use-as-a-module\" id=\"id6\" rel=\"nofollow\">Use as a module</a></li>\n<li><a href=\"#configuration\" id=\"id7\" rel=\"nofollow\">Configuration</a><ul>\n<li><a href=\"#pyproject-toml\" id=\"id8\" rel=\"nofollow\">pyproject.toml</a></li>\n</ul>\n</li>\n<li><a href=\"#testing\" id=\"id9\" rel=\"nofollow\">Testing</a></li>\n<li><a href=\"#troubleshooting\" id=\"id10\" rel=\"nofollow\">Troubleshooting</a></li>\n<li><a href=\"#links\" id=\"id11\" rel=\"nofollow\">Links</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<p>From pip:</p>\n<pre>$ pip install --upgrade autopep8\n</pre>\n<p>Consider using the <tt><span class=\"pre\">--user</span></tt> <a href=\"https://pip.pypa.io/en/latest/user_guide/#user-installs\" rel=\"nofollow\">option</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Requirements</a></h2>\n<p>autopep8 requires <a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a>.</p>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Usage</a></h2>\n<p>To modify a file in place (with aggressive level 2):</p>\n<pre>$ autopep8 --in-place --aggressive --aggressive &lt;filename&gt;\n</pre>\n<p>Before running autopep8.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">math</span><span class=\"o\">,</span> <span class=\"nn\">sys</span><span class=\"p\">;</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">example1</span><span class=\"p\">():</span>\n    <span class=\"c1\">####This is a long comment. This should be wrapped to fit within 72 characters.</span>\n    <span class=\"n\">some_tuple</span><span class=\"o\">=</span><span class=\"p\">(</span>   <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"s1\">'a'</span>  <span class=\"p\">);</span>\n    <span class=\"n\">some_variable</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'long'</span><span class=\"p\">:</span><span class=\"s1\">'Long code lines should be wrapped within 79 characters.'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'other'</span><span class=\"p\">:[</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">200</span><span class=\"p\">,</span><span class=\"mi\">300</span><span class=\"p\">,</span><span class=\"mi\">9876543210</span><span class=\"p\">,</span><span class=\"s1\">'This is a long string that goes on'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'more'</span><span class=\"p\">:{</span><span class=\"s1\">'inner'</span><span class=\"p\">:</span><span class=\"s1\">'This whole logical line should be wrapped.'</span><span class=\"p\">,</span><span class=\"n\">some_tuple</span><span class=\"p\">:[</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">300</span><span class=\"p\">,</span><span class=\"mi\">40000</span><span class=\"p\">,</span><span class=\"mi\">500000000</span><span class=\"p\">,</span><span class=\"mi\">60000000000000000</span><span class=\"p\">]}}</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">some_tuple</span><span class=\"p\">,</span> <span class=\"n\">some_variable</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">example2</span><span class=\"p\">():</span> <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'has_key() is deprecated'</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">}</span><span class=\"o\">.</span><span class=\"n\">has_key</span><span class=\"p\">({</span><span class=\"s1\">'f'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">}</span><span class=\"o\">.</span><span class=\"n\">has_key</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">));</span>\n<span class=\"k\">class</span> <span class=\"nc\">Example3</span><span class=\"p\">(</span>   <span class=\"nb\">object</span> <span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span>    <span class=\"p\">(</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bar</span> <span class=\"p\">):</span>\n     <span class=\"c1\">#Comments should have a space after the hash.</span>\n     <span class=\"k\">if</span> <span class=\"n\">bar</span> <span class=\"p\">:</span> <span class=\"n\">bar</span><span class=\"o\">+=</span><span class=\"mi\">1</span><span class=\"p\">;</span>  <span class=\"n\">bar</span><span class=\"o\">=</span><span class=\"n\">bar</span><span class=\"o\">*</span> <span class=\"n\">bar</span>   <span class=\"p\">;</span> <span class=\"k\">return</span> <span class=\"n\">bar</span>\n     <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">some_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n                       Indentation in multiline strings should not be touched.\nOnly actual code should be reindented.\n\"\"\"</span>\n                    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">some_string</span><span class=\"p\">)</span>\n</pre>\n<p>After running autopep8.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">example1</span><span class=\"p\">():</span>\n    <span class=\"c1\"># This is a long comment. This should be wrapped to fit within 72</span>\n    <span class=\"c1\"># characters.</span>\n    <span class=\"n\">some_tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">)</span>\n    <span class=\"n\">some_variable</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'Long code lines should be wrapped within 79 characters.'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'other'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span>\n            <span class=\"mi\">100</span><span class=\"p\">,</span>\n            <span class=\"mi\">200</span><span class=\"p\">,</span>\n            <span class=\"mi\">300</span><span class=\"p\">,</span>\n            <span class=\"mi\">9876543210</span><span class=\"p\">,</span>\n            <span class=\"s1\">'This is a long string that goes on'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'more'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'inner'</span><span class=\"p\">:</span> <span class=\"s1\">'This whole logical line should be wrapped.'</span><span class=\"p\">,</span>\n            <span class=\"n\">some_tuple</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"mi\">20</span><span class=\"p\">,</span>\n                <span class=\"mi\">300</span><span class=\"p\">,</span>\n                <span class=\"mi\">40000</span><span class=\"p\">,</span>\n                <span class=\"mi\">500000000</span><span class=\"p\">,</span>\n                <span class=\"mi\">60000000000000000</span><span class=\"p\">]}}</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">some_tuple</span><span class=\"p\">,</span> <span class=\"n\">some_variable</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">example2</span><span class=\"p\">():</span> <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">''</span> <span class=\"ow\">in</span> <span class=\"p\">{</span><span class=\"s1\">'f'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span> <span class=\"ow\">in</span> <span class=\"p\">{</span><span class=\"s1\">'has_key() is deprecated'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Example3</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bar</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Comments should have a space after the hash.</span>\n        <span class=\"k\">if</span> <span class=\"n\">bar</span><span class=\"p\">:</span>\n            <span class=\"n\">bar</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">bar</span> <span class=\"o\">*</span> <span class=\"n\">bar</span>\n            <span class=\"k\">return</span> <span class=\"n\">bar</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">some_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n                       Indentation in multiline strings should not be touched.\nOnly actual code should be reindented.\n\"\"\"</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">some_string</span><span class=\"p\">)</span>\n</pre>\n<p>Options:</p>\n<pre>usage: autopep8 [-h] [--version] [-v] [-d] [-i] [--global-config filename]\n                [--ignore-local-config] [-r] [-j n] [-p n] [-a]\n                [--experimental] [--exclude globs] [--list-fixes]\n                [--ignore errors] [--select errors] [--max-line-length n]\n                [--line-range line line] [--hang-closing] [--exit-code]\n                [files [files ...]]\n\nAutomatically formats Python code to conform to the PEP 8 style guide.\n\npositional arguments:\n  files                 files to format or '-' for standard in\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -v, --verbose         print verbose messages; multiple -v result in more\n                        verbose messages\n  -d, --diff            print the diff for the fixed source\n  -i, --in-place        make changes to files in place\n  --global-config filename\n                        path to a global pep8 config file; if this file does\n                        not exist then this is ignored (default:\n                        ~/.config/pep8)\n  --ignore-local-config\n                        don't look for and apply local config files; if not\n                        passed, defaults are updated with any config files in\n                        the project's root directory\n  -r, --recursive       run recursively over directories; must be used with\n                        --in-place or --diff\n  -j n, --jobs n        number of parallel jobs; match CPU count if value is\n                        less than 1\n  -p n, --pep8-passes n\n                        maximum number of additional pep8 passes (default:\n                        infinite)\n  -a, --aggressive      enable non-whitespace changes; multiple -a result in\n                        more aggressive changes\n  --experimental        enable experimental fixes\n  --exclude globs       exclude file/directory names that match these comma-\n                        separated globs\n  --list-fixes          list codes for fixes; used by --ignore and --select\n  --ignore errors       do not fix these errors/warnings (default:\n                        E226,E24,W50,W690)\n  --select errors       fix only these errors/warnings (e.g. E4,W)\n  --max-line-length n   set maximum allowed line length (default: 79)\n  --line-range line line, --range line line\n                        only fix errors found within this inclusive range of\n                        line numbers (e.g. 1 99); line numbers are indexed at\n                        1\n  --hang-closing        hang-closing option passed to pycodestyle\n  --exit-code           change to behavior of exit code. default behavior of\n                        return value, 0 is no differences, 1 is error exit.\n                        return 2 when add this option. 2 is exists\n                        differences.\n</pre>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Features</a></h2>\n<p>autopep8 fixes the following <a href=\"https://pycodestyle.readthedocs.org/en/latest/intro.html#error-codes\" rel=\"nofollow\">issues</a> reported by <a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a>:</p>\n<pre>E101 - Reindent all lines.\nE11  - Fix indentation.\nE121 - Fix indentation to be a multiple of four.\nE122 - Add absent indentation for hanging indentation.\nE123 - Align closing bracket to match opening bracket.\nE124 - Align closing bracket to match visual indentation.\nE125 - Indent to distinguish line from next logical line.\nE126 - Fix over-indented hanging indentation.\nE127 - Fix visual indentation.\nE128 - Fix visual indentation.\nE129 - Fix visual indentation.\nE131 - Fix hanging indent for unaligned continuation line.\nE133 - Fix missing indentation for closing bracket.\nE20  - Remove extraneous whitespace.\nE211 - Remove extraneous whitespace.\nE22  - Fix extraneous whitespace around keywords.\nE224 - Remove extraneous whitespace around operator.\nE225 - Fix missing whitespace around operator.\nE226 - Fix missing whitespace around arithmetic operator.\nE227 - Fix missing whitespace around bitwise/shift operator.\nE228 - Fix missing whitespace around modulo operator.\nE231 - Add missing whitespace.\nE241 - Fix extraneous whitespace around keywords.\nE242 - Remove extraneous whitespace around operator.\nE251 - Remove whitespace around parameter '=' sign.\nE252 - Missing whitespace around parameter equals.\nE26  - Fix spacing after comment hash for inline comments.\nE265 - Fix spacing after comment hash for block comments.\nE266 - Fix too many leading '#' for block comments.\nE27  - Fix extraneous whitespace around keywords.\nE301 - Add missing blank line.\nE302 - Add missing 2 blank lines.\nE303 - Remove extra blank lines.\nE304 - Remove blank line following function decorator.\nE305 - Expected 2 blank lines after end of function or class.\nE306 - Expected 1 blank line before a nested definition.\nE401 - Put imports on separate lines.\nE402 - Fix module level import not at top of file\nE501 - Try to make lines fit within --max-line-length characters.\nE502 - Remove extraneous escape of newline.\nE701 - Put colon-separated compound statement on separate lines.\nE70  - Put semicolon-separated compound statement on separate lines.\nE711 - Fix comparison with None.\nE712 - Fix comparison with boolean.\nE713 - Use 'not in' for test for membership.\nE714 - Use 'is not' test for object identity.\nE721 - Use \"isinstance()\" instead of comparing types directly.\nE722 - Fix bare except.\nE731 - Use a def when use do not assign a lambda expression.\nW291 - Remove trailing whitespace.\nW292 - Add a single newline at the end of the file.\nW293 - Remove trailing whitespace on blank line.\nW391 - Remove trailing blank lines.\nW503 - Fix line break before binary operator.\nW504 - Fix line break after binary operator.\nW601 - Use \"in\" rather than \"has_key()\".\nW602 - Fix deprecated form of raising exception.\nW603 - Use \"!=\" instead of \"&lt;&gt;\"\nW604 - Use \"repr()\" instead of backticks.\nW605 - Fix invalid escape sequence 'x'.\nW690 - Fix various deprecated code (via lib2to3).\n</pre>\n<p>autopep8 also fixes some issues not found by <a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a>.</p>\n<ul>\n<li>Correct deprecated or non-idiomatic Python code (via <tt>lib2to3</tt>). Use this\nfor making Python 2.7 code more compatible with Python 3. (This is triggered\nif <tt>W690</tt> is enabled.)</li>\n<li>Normalize files with mixed line endings.</li>\n<li>Put a blank line between a class docstring and its first method\ndeclaration. (Enabled with <tt>E301</tt>.)</li>\n<li>Remove blank lines between a function declaration and its docstring. (Enabled\nwith <tt>E303</tt>.)</li>\n</ul>\n<p>autopep8 avoids fixing some issues found by <a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a>.</p>\n<ul>\n<li><tt>E112</tt>/<tt>E113</tt> for non comments are reports of bad indentation that break\nsyntax rules. These should not be modified at all.</li>\n<li><tt>E265</tt>, which refers to spacing after comment hash, is ignored if the\ncomment looks like code. autopep8 avoids modifying these since they are not\nreal comments. If you really want to get rid of the <a href=\"https://github.com/PyCQA/pycodestyle\" rel=\"nofollow\">pycodestyle</a> warning,\nconsider just removing the commented-out code. (This can be automated via\n<a href=\"https://github.com/myint/eradicate\" rel=\"nofollow\">eradicate</a>.)</li>\n</ul>\n</div>\n<div id=\"more-advanced-usage\">\n<h2><a href=\"#id5\" rel=\"nofollow\">More advanced usage</a></h2>\n<p>By default autopep8 only makes whitespace changes. Thus, by default, it does\nnot fix <tt>E711</tt> and <tt>E712</tt>. (Changing <tt>x == None</tt> to <tt>x is None</tt> may\nchange the meaning of the program if <tt>x</tt> has its <tt>__eq__</tt> method\noverridden.) Nor does it correct deprecated code <tt>W6</tt>. To enable these\nmore aggressive fixes, use the <tt><span class=\"pre\">--aggressive</span></tt> option:</p>\n<pre>$ autopep8 --aggressive &lt;filename&gt;\n</pre>\n<p>Use multiple <tt><span class=\"pre\">--aggressive</span></tt> to increase the aggressiveness level. For\nexample, <tt>E712</tt> requires aggressiveness level 2 (since <tt>x == True</tt> could be\nchanged to either <tt>x</tt> or <tt>x is True</tt>, but autopep8 chooses the former).</p>\n<p><tt><span class=\"pre\">--aggressive</span></tt> will also shorten lines more aggressively. It will also remove\ntrailing whitespace more aggressively. (Usually, we don\u2019t touch trailing\nwhitespace in docstrings and other multiline strings. And to do even more\naggressive changes to docstrings, use <a href=\"https://github.com/myint/docformatter\" rel=\"nofollow\">docformatter</a>.)</p>\n<p>To enable only a subset of the fixes, use the <tt><span class=\"pre\">--select</span></tt> option. For example,\nto fix various types of indentation issues:</p>\n<pre>$ autopep8 --select=E1,W1 &lt;filename&gt;\n</pre>\n<p>Similarly, to just fix deprecated code:</p>\n<pre>$ autopep8 --aggressive --select=W6 &lt;filename&gt;\n</pre>\n<p>The above is useful when trying to port a single code base to work with both\nPython 2 and Python 3 at the same time.</p>\n<p>If the file being fixed is large, you may want to enable verbose progress\nmessages:</p>\n<pre>$ autopep8 -v &lt;filename&gt;\n</pre>\n<p>Passing in <tt><span class=\"pre\">--experimental</span></tt> enables the following functionality:</p>\n<ul>\n<li>Shortens code lines by taking its length into account</li>\n</ul>\n<pre>$ autopep8 --experimental &lt;filename&gt;\n</pre>\n</div>\n<div id=\"use-as-a-module\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Use as a module</a></h2>\n<p>The simplest way of using autopep8 as a module is via the <tt>fix_code()</tt>\nfunction:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import autopep8\n&gt;&gt;&gt; autopep8.fix_code('x=       123\\n')\n'x = 123\\n'\n</pre>\n</blockquote>\n<p>Or with options:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import autopep8\n&gt;&gt;&gt; autopep8.fix_code('x.has_key(y)\\n',\n...                   options={'aggressive': 1})\n'y in x\\n'\n&gt;&gt;&gt; autopep8.fix_code('print( 123 )\\n',\n...                   options={'ignore': ['E']})\n'print( 123 )\\n'\n</pre>\n</blockquote>\n</div>\n<div id=\"configuration\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Configuration</a></h2>\n<p>By default, if <tt><span class=\"pre\">$HOME/.config/pycodestyle</span></tt> (<tt><span class=\"pre\">~\\.pycodestyle</span></tt> in Windows\nenvironment) exists, it will be used as global configuration file.\nAlternatively, you can specify the global configuration file with the\n<tt><span class=\"pre\">--global-config</span></tt> option.</p>\n<p>Also, if <tt>setup.cfg</tt>, <tt>tox.ini</tt>, <tt>.pep8</tt> and <tt>.flake8</tt> files exist\nin the directory where the target file exists, it will be used as the\nconfiguration file.</p>\n<p><tt>pep8</tt>, <tt>pycodestyle</tt>, and <tt>flake8</tt> can be used as a section.</p>\n<p>configuration file example:</p>\n<pre>[pycodestyle]\nmax_line_length = 120\nignore = E501\n</pre>\n<div id=\"pyproject-toml\">\n<h3><a href=\"#id8\" rel=\"nofollow\">pyproject.toml</a></h3>\n<p>autopep8 can also use <tt>pyproject.toml</tt>.\nsection must use <tt>[tool.autopep8]</tt>, and <tt>pyproject.toml</tt> takes precedence\nover any other configuration files.</p>\n<p>configuration file example:</p>\n<pre>[tool.autopep8]\nmax_line_length = 120\nignore = E501\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Testing</a></h2>\n<p>Test cases are in <tt>test/test_autopep8.py</tt>. They can be run directly via\n<tt>python test/test_autopep8.py</tt> or via <a href=\"https://pypi.org/project/tox/\" rel=\"nofollow\">tox</a>. The latter is useful for\ntesting against multiple Python interpreters. (We currently test against\nCPython versions 2.7, 3.4, 3.5, 3.6 and 3.7. We also test against PyPy.)</p>\n<p>Broad spectrum testing is available via <tt>test/acid.py</tt>. This script runs\nautopep8 against Python code and checks for correctness and completeness of the\ncode fixes. It can check that the bytecode remains identical.\n<tt>test/acid_pypi.py</tt> makes use of <tt>acid.py</tt> to test against the latest\nreleased packages on PyPI.</p>\n</div>\n<div id=\"troubleshooting\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Troubleshooting</a></h2>\n<h2 id=\"pkg-resources-distributionnotfound\"><span class=\"section-subtitle\"><tt>pkg_resources.DistributionNotFound</tt></span></h2>\n<p>If you are using an ancient version of <tt>setuptools</tt>, you might encounter\n<tt>pkg_resources.DistributionNotFound</tt> when trying to run <tt>autopep8</tt>. Try\nupgrading <tt>setuptools</tt> to workaround this <tt>setuptools</tt> problem:</p>\n<pre>$ pip install --upgrade setuptools\n</pre>\n<p>Use <tt>sudo</tt> if you are installing to the system.</p>\n</div>\n<div id=\"links\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Links</a></h2>\n<ul>\n<li><a href=\"https://pypi.org/project/autopep8/\" rel=\"nofollow\">PyPI</a></li>\n<li><a href=\"https://github.com/hhatto/autopep8\" rel=\"nofollow\">GitHub</a></li>\n<li><a href=\"https://travis-ci.org/hhatto/autopep8\" rel=\"nofollow\">Travis CI</a></li>\n<li><a href=\"https://coveralls.io/r/hhatto/autopep8\" rel=\"nofollow\">Coveralls</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7059538, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a3d544b886cc65c32aca79c412a54a53", "sha256": "9cef3bb01d0c48ce1bee5918922d4a7db6d33342966aa61dd1266c15292d4c2d"}, "downloads": -1, "filename": "autopep8-0.1.tar.gz", "has_sig": false, "md5_digest": "a3d544b886cc65c32aca79c412a54a53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3142, "upload_time": "2011-01-02T14:39:52", "upload_time_iso_8601": "2011-01-02T14:39:52.805231Z", "url": "https://files.pythonhosted.org/packages/e6/ed/0c570555b6d785fd53aed92f55d947ca74cf5f43676da98741e86c6e9f2f/autopep8-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7a5fd332c3bf2a15207edce00483e1f7", "sha256": "7b2c60adf3805ec8e114c3ad84f787e74f595c9fa00da6f2c5a8b52d451579e9"}, "downloads": -1, "filename": "autopep8-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7a5fd332c3bf2a15207edce00483e1f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3740, "upload_time": "2011-01-20T17:53:12", "upload_time_iso_8601": "2011-01-20T17:53:12.660172Z", "url": "https://files.pythonhosted.org/packages/15/e0/a315407b16b2ffa69a9efb07c61172bb22fd9bf12bf7910c1a00478a4149/autopep8-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dd96513b27d3fbdb41688a46524a176a", "sha256": "7d86de327c02d775d50caba261b8646acc84c5dc41446a0835d622b1b04430ab"}, "downloads": -1, "filename": "autopep8-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dd96513b27d3fbdb41688a46524a176a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3968, "upload_time": "2011-01-28T16:54:20", "upload_time_iso_8601": "2011-01-28T16:54:20.111398Z", "url": "https://files.pythonhosted.org/packages/92/15/db4d0b21984f7a40e78619a9b4310b5e7f6ce6ca900b143999674cf39b80/autopep8-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8c31efd2610086905e60b69eb42b3a49", "sha256": "b9e3fad744002d33132687cbb4ea00ceeac027d591b672e7fe0763cefd763575"}, "downloads": -1, "filename": "autopep8-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8c31efd2610086905e60b69eb42b3a49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4160, "upload_time": "2011-09-10T07:56:49", "upload_time_iso_8601": "2011-09-10T07:56:49.397703Z", "url": "https://files.pythonhosted.org/packages/bf/76/5940b44afeba712dfaaa3b34182f17ac233e5ac4faf058763db8c64eff5b/autopep8-0.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f2f448a472cb7c7585b5eda2e71cb93c", "sha256": "9702cec613d3e16af064646a17f029e544339b17ec9d040542948e12c934b79f"}, "downloads": -1, "filename": "autopep8-0.2.tar.gz", "has_sig": false, "md5_digest": "f2f448a472cb7c7585b5eda2e71cb93c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4541, "upload_time": "2011-12-04T17:25:56", "upload_time_iso_8601": "2011-12-04T17:25:56.871215Z", "url": "https://files.pythonhosted.org/packages/79/5b/1ecd62cb06d1c15d65f2886f60e37dd282ff2d8a3a57496fd8d07ad0ab7d/autopep8-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b1feea2eff393c1637a13c22e16f41b4", "sha256": "3efb4a175d744642531d36ad37054fa94886fb32374e258748cb0ff35d78f7b4"}, "downloads": -1, "filename": "autopep8-0.3.tar.gz", "has_sig": false, "md5_digest": "b1feea2eff393c1637a13c22e16f41b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5034, "upload_time": "2011-12-05T16:37:42", "upload_time_iso_8601": "2011-12-05T16:37:42.055437Z", "url": "https://files.pythonhosted.org/packages/46/b3/a2b300c02c6011bb1e7342322b4a7f0f846b38dc821918ac13e1e284677a/autopep8-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "2719845a66eeca9f639ce216a648bd35", "sha256": "14410111ea790f8ba21f2cfa4570739041e01e93a16fd004d12da3ff12321e55"}, "downloads": -1, "filename": "autopep8-0.4.tar.gz", "has_sig": false, "md5_digest": "2719845a66eeca9f639ce216a648bd35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6846, "upload_time": "2011-12-18T13:17:14", "upload_time_iso_8601": "2011-12-18T13:17:14.581605Z", "url": "https://files.pythonhosted.org/packages/f6/9a/73dfa3014af76983437ec2b6e19533c220ba26bc28fc70ff7eb9cf88ec87/autopep8-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9b34990325bf7880e3cd20fff3500800", "sha256": "2e724c71b67639695fcc1dc8ef5cb941856a729fcea0b09442be65dbd68af8a6"}, "downloads": -1, "filename": "autopep8-0.5.tar.gz", "has_sig": false, "md5_digest": "9b34990325bf7880e3cd20fff3500800", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9123, "upload_time": "2012-01-09T10:18:41", "upload_time_iso_8601": "2012-01-09T10:18:41.086088Z", "url": "https://files.pythonhosted.org/packages/a5/4d/391d23e3423fdbb71ff5a19ac376f11f9900f2063dc80fcbbf040b83a084/autopep8-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "ac365688b4c7c92b864f8bd8e4923894", "sha256": "0a45bf872f45c521ebf0486bbbf0bedf7b4a8c4b14631c0d5b4d9a1d9e031329"}, "downloads": -1, "filename": "autopep8-0.5.1.tar.gz", "has_sig": false, "md5_digest": "ac365688b4c7c92b864f8bd8e4923894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9818, "upload_time": "2012-02-14T13:44:37", "upload_time_iso_8601": "2012-02-14T13:44:37.148086Z", "url": "https://files.pythonhosted.org/packages/57/80/764208a5e7caac5c7317ba354a5325d8bea8499d3d66e64f33a85ff303ee/autopep8-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "cd75688b0aa86dd00da92113bfbc4461", "sha256": "a9a808bac49605036bdeaa4bf5b50a9bbf87088a54b9a2e54e18c85abcecb70f"}, "downloads": -1, "filename": "autopep8-0.5.2.tar.gz", "has_sig": false, "md5_digest": "cd75688b0aa86dd00da92113bfbc4461", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10049, "upload_time": "2012-03-11T23:38:19", "upload_time_iso_8601": "2012-03-11T23:38:19.861622Z", "url": "https://files.pythonhosted.org/packages/af/1a/2f8f9681961527a9500f3ea6283a93aae32b891fc8bec29d3e07abf39c16/autopep8-0.5.2.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "9da420b330e034ca36e1838698f8f79b", "sha256": "5fac8242161b5cf991fda32872c2163918993e64d432414a801da9de28176992"}, "downloads": -1, "filename": "autopep8-0.6.tar.gz", "has_sig": false, "md5_digest": "9da420b330e034ca36e1838698f8f79b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12730, "upload_time": "2012-05-07T19:58:52", "upload_time_iso_8601": "2012-05-07T19:58:52.766624Z", "url": "https://files.pythonhosted.org/packages/9c/45/9a3958b69062662b71db460f8150b1b3b63c4ff01c735d99eca5dcac2f38/autopep8-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "cc119a3e507a4f5ea02b467278e85b1e", "sha256": "eae5724099d70b73a160bf2c6c83085c7bf6f558352d7e1d841b9fcc61054832"}, "downloads": -1, "filename": "autopep8-0.6.1.tar.gz", "has_sig": false, "md5_digest": "cc119a3e507a4f5ea02b467278e85b1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14588, "upload_time": "2012-05-25T17:38:42", "upload_time_iso_8601": "2012-05-25T17:38:42.872540Z", "url": "https://files.pythonhosted.org/packages/38/62/d17a63a267f64875735fd81da3729e626860ddd0a3f18360897db41b0fde/autopep8-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "625e0a0212275cbac79e07dd58c644b2", "sha256": "b6dc5bd386dfc858d34b9dedde7641b59c7694461049e190ff52f7f6a02f0efe"}, "downloads": -1, "filename": "autopep8-0.6.2.tar.gz", "has_sig": false, "md5_digest": "625e0a0212275cbac79e07dd58c644b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14974, "upload_time": "2012-05-28T18:11:23", "upload_time_iso_8601": "2012-05-28T18:11:23.939797Z", "url": "https://files.pythonhosted.org/packages/8d/28/0252a0f76c6e914cd001cdc0af87cb04abd593e745db96fc28dc551716c5/autopep8-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "3cb53a13c0b8bf54dbfff734d3e9860a", "sha256": "f78d281017ccd91682294b0af55441353bca7acfa867f287846f3479b6ddde7b"}, "downloads": -1, "filename": "autopep8-0.6.3.tar.gz", "has_sig": false, "md5_digest": "3cb53a13c0b8bf54dbfff734d3e9860a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15910, "upload_time": "2012-06-01T20:24:41", "upload_time_iso_8601": "2012-06-01T20:24:41.669533Z", "url": "https://files.pythonhosted.org/packages/7e/d7/59ba03ff9b773e64122d250c230423c34f1078558bf01c8b1ae7ac7d952e/autopep8-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "efbd65833febd6591da25e5a01e15ff9", "sha256": "a21765e01995e1cfbde97055ddc82ca7472e19cf088317b4cdab5049f0f27c88"}, "downloads": -1, "filename": "autopep8-0.6.4.tar.gz", "has_sig": false, "md5_digest": "efbd65833febd6591da25e5a01e15ff9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17161, "upload_time": "2012-06-08T14:46:18", "upload_time_iso_8601": "2012-06-08T14:46:18.812993Z", "url": "https://files.pythonhosted.org/packages/13/64/d28039effe0a2b0aa86307bbab04a4504ab34c5ff2c41449eb55a8e12ac8/autopep8-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "ee0ab85425748ebbbdc076edfc9879d3", "sha256": "da77ff1d82fff772144d79cce844711b540c0e7a2610430dda93e729f8398880"}, "downloads": -1, "filename": "autopep8-0.6.5.tar.gz", "has_sig": false, "md5_digest": "ee0ab85425748ebbbdc076edfc9879d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17192, "upload_time": "2012-06-10T15:28:23", "upload_time_iso_8601": "2012-06-10T15:28:23.355254Z", "url": "https://files.pythonhosted.org/packages/38/5c/a88f47ba644b6a93d99ba6f2c7e68e5d5836c05e71012ab9f4b915803cb8/autopep8-0.6.5.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "9473f6a686abcb84a6a6edc8087b060f", "sha256": "bc58cffdaae31c6c63b73ce10ca078fd5dfa157514ab1f7fa5a7e900cb12e9d0"}, "downloads": -1, "filename": "autopep8-0.7.tar.gz", "has_sig": false, "md5_digest": "9473f6a686abcb84a6a6edc8087b060f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17669, "upload_time": "2012-06-15T16:57:40", "upload_time_iso_8601": "2012-06-15T16:57:40.188813Z", "url": "https://files.pythonhosted.org/packages/e0/10/9b0199b7beaf7cd7072aea621c2712ca3c1e282f516669c250f044828dd1/autopep8-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "56e95f5c8c702b3f5df42084031d8f92", "sha256": "83c2dbd1d51151e6183a4e463635ae1da7f8f1f645f821aeba61a2397e6e2a7d"}, "downloads": -1, "filename": "autopep8-0.7.1.tar.gz", "has_sig": false, "md5_digest": "56e95f5c8c702b3f5df42084031d8f92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23307, "upload_time": "2012-06-30T20:09:22", "upload_time_iso_8601": "2012-06-30T20:09:22.442394Z", "url": "https://files.pythonhosted.org/packages/3e/5b/8777e0c5102d65ef86433e5a8363257dfaa2797789d867e6457c199a385d/autopep8-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "05aab37496d6352d69f67c0d8b4c4d8b", "sha256": "d38edaf8b28af179d83cd52b04faaf1feb48a59745b468562a1d782ae6da3b18"}, "downloads": -1, "filename": "autopep8-0.7.2.tar.gz", "has_sig": false, "md5_digest": "05aab37496d6352d69f67c0d8b4c4d8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23660, "upload_time": "2012-07-03T17:04:35", "upload_time_iso_8601": "2012-07-03T17:04:35.421639Z", "url": "https://files.pythonhosted.org/packages/50/fe/bc7b4840d32c75e6984f73fe0507e09fef7bcadff9b41bfcafee94f40e92/autopep8-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "974b27a7817e9f4f5986e0a188d15924", "sha256": "6c89ebbc8bc46e175bbaf308566fe094465b320c84964f90aede9800d65729b9"}, "downloads": -1, "filename": "autopep8-0.7.3.tar.gz", "has_sig": false, "md5_digest": "974b27a7817e9f4f5986e0a188d15924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25115, "upload_time": "2012-07-29T10:32:25", "upload_time_iso_8601": "2012-07-29T10:32:25.813271Z", "url": "https://files.pythonhosted.org/packages/0c/48/48a093bc5a8478ed4b7783b72642e272ed0d2c0db32bd5412d829c16f89a/autopep8-0.7.3.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "968f7749aa6c8d65489b81b56ad57dea", "sha256": "b363982590c9f764c1614464a13b1820421e72ddf6d32bb0bbbc5bc3bf14d1a8"}, "downloads": -1, "filename": "autopep8-0.8.tar.gz", "has_sig": false, "md5_digest": "968f7749aa6c8d65489b81b56ad57dea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26314, "upload_time": "2012-09-02T12:38:05", "upload_time_iso_8601": "2012-09-02T12:38:05.503746Z", "url": "https://files.pythonhosted.org/packages/54/9b/cd2418767c9ac4f70b35ffe886c4849328c35215c62d69177b8fc8da2ab3/autopep8-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "cab655ab2c8bec40827bbd83232cf137", "sha256": "ebf3ab97fcf710cc5a03a2d5692b376b30b61b92fbd6b3f8072b9c441ab6db49"}, "downloads": -1, "filename": "autopep8-0.8.1.tar.gz", "has_sig": false, "md5_digest": "cab655ab2c8bec40827bbd83232cf137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26890, "upload_time": "2012-09-19T16:50:04", "upload_time_iso_8601": "2012-09-19T16:50:04.492791Z", "url": "https://files.pythonhosted.org/packages/98/84/cac6a42d25f63df51e32ffd0d9a41bed0336bfe4784b7febbc8e87f10017/autopep8-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "e8047935ced3cf3ca48d1517410f067d", "sha256": "bdc93e16bfc54a6cc1cbf18cf400e8a95ceb4612389242ab081f9c9494850904"}, "downloads": -1, "filename": "autopep8-0.8.2.tar.gz", "has_sig": false, "md5_digest": "e8047935ced3cf3ca48d1517410f067d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41471, "upload_time": "2012-11-02T05:36:08", "upload_time_iso_8601": "2012-11-02T05:36:08.304732Z", "url": "https://files.pythonhosted.org/packages/5b/fa/4ca9cae50294b2d77bc6e09d5eb095798f7c82cc88ff907cbb15ab97f653/autopep8-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "92d481fcc24e081b3cc36d89f2bef711", "sha256": "daa13bc6c04ddeb0e29cda430a645c9b26fded96a80516d8a5b5ba2814486bae"}, "downloads": -1, "filename": "autopep8-0.8.3.tar.gz", "has_sig": false, "md5_digest": "92d481fcc24e081b3cc36d89f2bef711", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40982, "upload_time": "2012-11-23T13:10:01", "upload_time_iso_8601": "2012-11-23T13:10:01.357191Z", "url": "https://files.pythonhosted.org/packages/8a/7b/d02ccf0307010ff3e2f2a9cc3d1d1f23434563025e261e37b8625cfad4b2/autopep8-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "6fe6802ad084ba2540160f06effc930f", "sha256": "c50e264d66c873eb0416ec8b539b2a47f2e7be85779eadebe7be1d60d517f82e"}, "downloads": -1, "filename": "autopep8-0.8.4.tar.gz", "has_sig": false, "md5_digest": "6fe6802ad084ba2540160f06effc930f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42825, "upload_time": "2012-12-05T16:31:09", "upload_time_iso_8601": "2012-12-05T16:31:09.666305Z", "url": "https://files.pythonhosted.org/packages/5e/92/bc1f86c88caa7857f4a77a777ef3ba419baa0f36b581a86542e1dd70e23e/autopep8-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "42aa711fde8fef1b40b2f65e50296729", "sha256": "e6eeb7c97d53c9013aaab6cfb2f0223c8d85492b37b29006d4cfa312b2cd6b97"}, "downloads": -1, "filename": "autopep8-0.8.5.tar.gz", "has_sig": false, "md5_digest": "42aa711fde8fef1b40b2f65e50296729", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42985, "upload_time": "2012-12-23T12:04:37", "upload_time_iso_8601": "2012-12-23T12:04:37.102504Z", "url": "https://files.pythonhosted.org/packages/5c/05/84f921b1b284e80b5ff2bdb7b5c7f7c58fac86b17ac408783d3e433925bb/autopep8-0.8.5.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "23c7336d3ed5e3fdd3be6f88216f4235", "sha256": "c1729874a46d5fb89a530f72812aedaa06bc42998196355eaba7142165253360"}, "downloads": -1, "filename": "autopep8-0.8.6.tar.gz", "has_sig": false, "md5_digest": "23c7336d3ed5e3fdd3be6f88216f4235", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44862, "upload_time": "2013-01-27T14:52:47", "upload_time_iso_8601": "2013-01-27T14:52:47.978713Z", "url": "https://files.pythonhosted.org/packages/7d/32/436f91f2593ec8a4476db6b815a1f5724def3ae6d9f5b81eb6b433b5c7c9/autopep8-0.8.6.tar.gz", "yanked": false}], "0.8.7": [{"comment_text": "", "digests": {"md5": "720fbe319482ed78532c7572f574964e", "sha256": "9fe2d00e5e103f379c2992181690b3e877d2c9ef2daff01029c626ccdcfe69ea"}, "downloads": -1, "filename": "autopep8-0.8.7.tar.gz", "has_sig": false, "md5_digest": "720fbe319482ed78532c7572f574964e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45699, "upload_time": "2013-03-02T17:56:27", "upload_time_iso_8601": "2013-03-02T17:56:27.739886Z", "url": "https://files.pythonhosted.org/packages/35/66/f7ffa2d65c625eadb53438196e5abd255811608af6cab0b4cd20707e17e5/autopep8-0.8.7.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "3851af451be5c1db18966039831aa667", "sha256": "62633f1113cf4809abf45388c2529041a173e791b6e73d1c8a8861a880a15d44"}, "downloads": -1, "filename": "autopep8-0.9.tar.gz", "has_sig": false, "md5_digest": "3851af451be5c1db18966039831aa667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49053, "upload_time": "2013-05-09T12:59:51", "upload_time_iso_8601": "2013-05-09T12:59:51.854540Z", "url": "https://files.pythonhosted.org/packages/3c/d6/02be9df46044e9b15b62b33949f190a707732922f742626817a20e69beac/autopep8-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "1c03b9d34ebef2f56b8abd636f801dcf", "sha256": "c387af9a0b95857a94671beda0e1821a1514cb48dc30f8e7b1483e74c1b97140"}, "downloads": -1, "filename": "autopep8-0.9.1.tar.gz", "has_sig": false, "md5_digest": "1c03b9d34ebef2f56b8abd636f801dcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49269, "upload_time": "2013-06-04T16:07:34", "upload_time_iso_8601": "2013-06-04T16:07:34.857776Z", "url": "https://files.pythonhosted.org/packages/5c/fa/69468a7674b7e23df2eafc1c5e4a8cbae644643d35235acc978d697d3ae3/autopep8-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "f73c95950ab1c3e5d14e058175fff9c5", "sha256": "1e044e29ed4a00ea7fd896d8ef6fc09df5f725c01215dda5bdf9d7f6bf6b499f"}, "downloads": -1, "filename": "autopep8-0.9.2.tar.gz", "has_sig": false, "md5_digest": "f73c95950ab1c3e5d14e058175fff9c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51037, "upload_time": "2013-07-13T04:06:55", "upload_time_iso_8601": "2013-07-13T04:06:55.020540Z", "url": "https://files.pythonhosted.org/packages/5d/e6/78618df05ed1f6321dbaff2b1512a76e0365500e109f7e1bfcb718156ede/autopep8-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "bf2e647f11e9661c69b168f0d6fd5680", "sha256": "54bee10a8c1627284b1a4d828e162a92a6167d987ea369b0afc7caa6cbefcad2"}, "downloads": -1, "filename": "autopep8-0.9.3.tar.gz", "has_sig": false, "md5_digest": "bf2e647f11e9661c69b168f0d6fd5680", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52262, "upload_time": "2013-08-16T15:26:53", "upload_time_iso_8601": "2013-08-16T15:26:53.534562Z", "url": "https://files.pythonhosted.org/packages/c5/4a/c9d36add169a819184d8de6864947b68c4163bb88f8198f40a5936c1911b/autopep8-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "2cd57a14a1ac6ccef8af0ef0e3ef6593", "sha256": "dcd877abb5aaaa5e630891a81c1646cbefccbd5daac92c715e1748f5330d25e7"}, "downloads": -1, "filename": "autopep8-0.9.4.tar.gz", "has_sig": false, "md5_digest": "2cd57a14a1ac6ccef8af0ef0e3ef6593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51831, "upload_time": "2013-09-08T16:35:24", "upload_time_iso_8601": "2013-09-08T16:35:24.115049Z", "url": "https://files.pythonhosted.org/packages/c9/8c/c2981c9a0b318ab8c111e670a40eb0b206378438fa5f0e167f217dd5a579/autopep8-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "fe8f4ad1489bc5de9a3df0f72a977e64", "sha256": "f24af8a1a72c73a2ac5779ab8c1f508849e2398468b3c7c7b67a8dcaeb1e9360"}, "downloads": -1, "filename": "autopep8-0.9.5.tar.gz", "has_sig": false, "md5_digest": "fe8f4ad1489bc5de9a3df0f72a977e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52266, "upload_time": "2013-10-09T02:32:06", "upload_time_iso_8601": "2013-10-09T02:32:06.402151Z", "url": "https://files.pythonhosted.org/packages/7a/1c/c965cbf4177844e597c26e3613ddadf20f453ac139cd14104bf50cea608a/autopep8-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "700e23d10057c3b6309d9f002d47665d", "sha256": "d239a3bda6421ce681669862a17e3b4234252495ec3d18b2e030b5baed8909e9"}, "downloads": -1, "filename": "autopep8-0.9.6.tar.gz", "has_sig": false, "md5_digest": "700e23d10057c3b6309d9f002d47665d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52959, "upload_time": "2013-11-05T16:21:12", "upload_time_iso_8601": "2013-11-05T16:21:12.121576Z", "url": "https://files.pythonhosted.org/packages/b4/80/12a35afe10c2531bccac3fb54cffc77e022fdb218c7fefd4d60797ef27d2/autopep8-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "97d49d9107958d20e67f317b5d3e65c1", "sha256": "9071ef91a9cd5fdacca64d92fbb82feaa8552d2f01ceed85fb6f8a914f742038"}, "downloads": -1, "filename": "autopep8-0.9.7.tar.gz", "has_sig": false, "md5_digest": "97d49d9107958d20e67f317b5d3e65c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53685, "upload_time": "2013-11-27T18:11:36", "upload_time_iso_8601": "2013-11-27T18:11:36.732464Z", "url": "https://files.pythonhosted.org/packages/86/4a/d4c5a67366a92a57187f43a06c448bff5d9342eaf969b432d2656f3d3095/autopep8-0.9.7.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "41782e66efcbaf9d761bb45a2d2929bb", "sha256": "c05d523b59c5b47c47d6c8b2c41a71117211866788e27853a29a480f137cde1a"}, "downloads": -1, "filename": "autopep8-1.0.tar.gz", "has_sig": false, "md5_digest": "41782e66efcbaf9d761bb45a2d2929bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96917, "upload_time": "2014-02-22T10:55:56", "upload_time_iso_8601": "2014-02-22T10:55:56.919899Z", "url": "https://files.pythonhosted.org/packages/42/c4/7569706d4a6787975bb0505e82cdbcaea55be74dab42613480194e7b6022/autopep8-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4faf82e289ed261db687c5cd56e0275e", "sha256": "c5e3d56fa747ec5a30f8e68f5bae895da3536d3be0e3d45df3a4210b46246896"}, "downloads": -1, "filename": "autopep8-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4faf82e289ed261db687c5cd56e0275e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103585, "upload_time": "2014-04-18T03:28:33", "upload_time_iso_8601": "2014-04-18T03:28:33.836406Z", "url": "https://files.pythonhosted.org/packages/b3/73/f7934c3a16189bb3fb0cceed6e1d8f49f6a89e375a31ac2701052666276f/autopep8-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "87d1d1bb5869865c723b761ba3fc3a5e", "sha256": "856d0d88240f1ecba78a209d5d5af277ef26dc7398a3d9ae4c5c37c443e80472"}, "downloads": -1, "filename": "autopep8-1.0.2.tar.gz", "has_sig": false, "md5_digest": "87d1d1bb5869865c723b761ba3fc3a5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103862, "upload_time": "2014-05-08T14:31:56", "upload_time_iso_8601": "2014-05-08T14:31:56.032542Z", "url": "https://files.pythonhosted.org/packages/08/4a/010950ecfef8e5c56f0563b59bc9e47e942575ddb9199b22909f5e89b476/autopep8-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "7c16d385cf9ad7c1d7fbcfcea2588a56", "sha256": "28cd7bd8f369e2a71c44f08027d4123acd45f3d49124051af29035399aaa1e2f"}, "downloads": -1, "filename": "autopep8-1.0.3.tar.gz", "has_sig": false, "md5_digest": "7c16d385cf9ad7c1d7fbcfcea2588a56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104124, "upload_time": "2014-06-10T12:47:46", "upload_time_iso_8601": "2014-06-10T12:47:46.344938Z", "url": "https://files.pythonhosted.org/packages/e2/c7/51bcafe861cffe5632ef6839de3c5418937a128dc2d578d7aa964c01b68f/autopep8-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b247975abcc035285212cacab2d3585e", "sha256": "c122aefa57d05fe982c7c5f61db24b0fac5a56ee2e46739bc245258f2a6e9e9e"}, "downloads": -1, "filename": "autopep8-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b247975abcc035285212cacab2d3585e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104389, "upload_time": "2014-09-09T17:07:41", "upload_time_iso_8601": "2014-09-09T17:07:41.456476Z", "url": "https://files.pythonhosted.org/packages/c4/71/da2fd74830ed6fc936e2903ba39e09cc9ad3e647fa7562717cee50ac9450/autopep8-1.0.4.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "b6b624c0e3dc302f7c4c58376c24e201", "sha256": "845750a2be9403e4d4c054d7970ef656d587c0852bbb8dfb01fc3c4b8d51337d"}, "downloads": -1, "filename": "autopep8-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b6b624c0e3dc302f7c4c58376c24e201", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 42038, "upload_time": "2014-12-16T02:18:40", "upload_time_iso_8601": "2014-12-16T02:18:40.035792Z", "url": "https://files.pythonhosted.org/packages/dc/f0/93c851e56a8c0ea8f34f0235c2a44559ad86ed3ba6377c0800ac7749d7eb/autopep8-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7998358d8f0efd77dcb2cc8e34e3cb5c", "sha256": "4d97ef7ee8db336f0707beb8d09680d692ff0963462cde15d5eed336f5001d1f"}, "downloads": -1, "filename": "autopep8-1.1.tar.gz", "has_sig": false, "md5_digest": "7998358d8f0efd77dcb2cc8e34e3cb5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106672, "upload_time": "2014-12-15T08:53:29", "upload_time_iso_8601": "2014-12-15T08:53:29.932333Z", "url": "https://files.pythonhosted.org/packages/bc/c5/5d48bf007334d863068f8638a8baa403425f8c57d8191ef8b6f53cdea5c5/autopep8-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "dca09f28cc6ca245546ef686f62cc85d", "sha256": "6e943c7ead5e82e699590e54879e75475440e1b4e4da07ec1e4ca2342753e1bc"}, "downloads": -1, "filename": "autopep8-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dca09f28cc6ca245546ef686f62cc85d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 42093, "upload_time": "2015-02-26T05:58:38", "upload_time_iso_8601": "2015-02-26T05:58:38.122503Z", "url": "https://files.pythonhosted.org/packages/fe/bf/eaf8cf2c51c07e1e901a84a6c0b702970fc7e277d2aaaac6933bbb5f596a/autopep8-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e52f1a9a3df04d7706451a80345cf3ec", "sha256": "d4844c9420f0b5ec3cfc1a3cf264f139c16eb891aba55884a601edeb11c40adc"}, "downloads": -1, "filename": "autopep8-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e52f1a9a3df04d7706451a80345cf3ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106855, "upload_time": "2015-02-26T05:58:34", "upload_time_iso_8601": "2015-02-26T05:58:34.502917Z", "url": "https://files.pythonhosted.org/packages/21/7f/7e576ded0f0c6adad2598144ad5b8db57ede458faf18281bfe122b2795db/autopep8-1.1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "6cfbc826e46e3a4c7fb18b6b784ebfb9", "sha256": "b1c8560706e9327b64a71c7b08c6db1abbdbac9247fa6e0d47baac7db0a12028"}, "downloads": -1, "filename": "autopep8-1.2.tar.gz", "has_sig": false, "md5_digest": "6cfbc826e46e3a4c7fb18b6b784ebfb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104985, "upload_time": "2015-07-27T04:41:09", "upload_time_iso_8601": "2015-07-27T04:41:09.802362Z", "url": "https://files.pythonhosted.org/packages/ab/61/e53d68499d2f4e4b4d119ec82d12d0b468756c531d2ac9d135dd23ede6e8/autopep8-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "4167555f521ddd69b66f13819604f3db", "sha256": "d0a7cdc397e46be0d91a968acb3f561cc1b9244f5df94a2514cf32acfc8a2e94"}, "downloads": -1, "filename": "autopep8-1.2.1.tar.gz", "has_sig": false, "md5_digest": "4167555f521ddd69b66f13819604f3db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105142, "upload_time": "2015-09-20T01:30:36", "upload_time_iso_8601": "2015-09-20T01:30:36.379121Z", "url": "https://files.pythonhosted.org/packages/92/4e/d0359b76abeeb1d24f13b43428f7cfcd4ed8ea26a79d893007c926c64b89/autopep8-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "3d97f9c89d14a0975bffd32a2c61c36c", "sha256": "ecc51614755c7f697e83478f87eb6bbd009075a397c15080f0311aaecbbdfca8"}, "downloads": -1, "filename": "autopep8-1.2.2.tar.gz", "has_sig": false, "md5_digest": "3d97f9c89d14a0975bffd32a2c61c36c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105084, "upload_time": "2016-02-25T06:28:00", "upload_time_iso_8601": "2016-02-25T06:28:00.319163Z", "url": "https://files.pythonhosted.org/packages/4e/5d/dc21d2f2c5cab564feb8879d2474dfddf4181a34b07624cce05774244b71/autopep8-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "265a112c4a3c6e1e67eb3c33b78a923d", "sha256": "dc1a155da545affd4c862b628ab2e0109bb0896fc7b0c76fa3450e315eb828fd"}, "downloads": -1, "filename": "autopep8-1.2.3.tar.gz", "has_sig": false, "md5_digest": "265a112c4a3c6e1e67eb3c33b78a923d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105269, "upload_time": "2016-05-21T00:37:34", "upload_time_iso_8601": "2016-05-21T00:37:34.431971Z", "url": "https://files.pythonhosted.org/packages/64/ed/64dcd01fbf2f22414d79f8306a625531eb4ada211c6c750144d36c272503/autopep8-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "78bd647bcf8e3604e02c173301e9bde7", "sha256": "a2ab1a03a58c8d664ee875ca73d5b96b7135c13863e9aad4b64b888acdeb619b"}, "downloads": -1, "filename": "autopep8-1.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "78bd647bcf8e3604e02c173301e9bde7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41204, "upload_time": "2016-05-21T00:38:51", "upload_time_iso_8601": "2016-05-21T00:38:51.457449Z", "url": "https://files.pythonhosted.org/packages/cc/37/669e64656240d1cbcf375731abc52440ff77ae7184f702aae031e381c8ea/autopep8-1.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcea19c0c5e505b425e2a78afb771f5c", "sha256": "38e31e266e29808e8a65a307778ed8e402e1f0d87472009420d6d18146cdeaa2"}, "downloads": -1, "filename": "autopep8-1.2.4.tar.gz", "has_sig": false, "md5_digest": "fcea19c0c5e505b425e2a78afb771f5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105273, "upload_time": "2016-05-21T00:38:57", "upload_time_iso_8601": "2016-05-21T00:38:57.410842Z", "url": "https://files.pythonhosted.org/packages/98/ac/d447a958abd0d0f80424eafd1f1e2d96380305bd5dfb0df1f7fd5e4bcc56/autopep8-1.2.4.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "d33d0b1db7c552f96dc176e6085e3054", "sha256": "c44b3ad59992b41303a249689753d0261eee0572cce16844bcd352e457f2aabd"}, "downloads": -1, "filename": "autopep8-1.3.tar.gz", "has_sig": false, "md5_digest": "d33d0b1db7c552f96dc176e6085e3054", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107362, "upload_time": "2017-03-04T11:35:05", "upload_time_iso_8601": "2017-03-04T11:35:05.746895Z", "url": "https://files.pythonhosted.org/packages/94/90/1d1b88ea986636b3b64f4d1fcf8dbbd550c62b4b6f928d47aa27749c8719/autopep8-1.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "389403c1d606c6d9b5ec0dbec50dae9a", "sha256": "405eaa5199c74a0570125916e6af44d39343c1fcaaafee117fc329a3f86048c4"}, "downloads": -1, "filename": "autopep8-1.3.1.tar.gz", "has_sig": false, "md5_digest": "389403c1d606c6d9b5ec0dbec50dae9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107541, "upload_time": "2017-03-13T13:59:54", "upload_time_iso_8601": "2017-03-13T13:59:54.665580Z", "url": "https://files.pythonhosted.org/packages/8e/15/eff7372840d20506afacfb4550e1dc69668d7540c2c6729a70d0448d48cb/autopep8-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "d0f993b52398634a9e9a56666b1a85a5", "sha256": "eb1685527355809967a0363572289303dc05f4b05edbeee4c9051762103e0ee6"}, "downloads": -1, "filename": "autopep8-1.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d0f993b52398634a9e9a56666b1a85a5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 42651, "upload_time": "2017-05-27T15:23:13", "upload_time_iso_8601": "2017-05-27T15:23:13.574300Z", "url": "https://files.pythonhosted.org/packages/f1/31/75b31ea8e2507822a49fca925887da7071bd6bc870852d5de896c772500a/autopep8-1.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aa2ab9ff4ac0f9ac143229f7c3fed7b", "sha256": "7e82590bf366b4d891ac5c1535554c46a5f79e4400a190a8493e92e75c5037dd"}, "downloads": -1, "filename": "autopep8-1.3.2.tar.gz", "has_sig": false, "md5_digest": "5aa2ab9ff4ac0f9ac143229f7c3fed7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107915, "upload_time": "2017-05-27T15:23:15", "upload_time_iso_8601": "2017-05-27T15:23:15.261652Z", "url": "https://files.pythonhosted.org/packages/0a/fc/c541b2fa1b244e0484216076b95468dc011ae90016b8f37333a24a11e468/autopep8-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "8951f43748406015b663a54ab05d891a", "sha256": "ff787bffb812818c3071784b5ce9a35f8c481a0de7ea0ce4f8b68b8788a12f30"}, "downloads": -1, "filename": "autopep8-1.3.3.tar.gz", "has_sig": false, "md5_digest": "8951f43748406015b663a54ab05d891a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108639, "upload_time": "2017-10-11T08:18:31", "upload_time_iso_8601": "2017-10-11T08:18:31.045828Z", "url": "https://files.pythonhosted.org/packages/24/67/1b62431c8529b3e6e9cc377b9c0d1cfd69fdc8342bc821c4908d15757758/autopep8-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "94ef9cc19b13cdbefaa90656f5493b79", "sha256": "c7be71ab0cb2f50c9c22c82f0c9acaafc6f57492c3fbfee9790c415005c2b9a5"}, "downloads": -1, "filename": "autopep8-1.3.4.tar.gz", "has_sig": false, "md5_digest": "94ef9cc19b13cdbefaa90656f5493b79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109361, "upload_time": "2018-01-24T13:46:36", "upload_time_iso_8601": "2018-01-24T13:46:36.870089Z", "url": "https://files.pythonhosted.org/packages/4b/b1/a9a682067584ef35682240c3815b94f36b87d2f3bc274e12e51cc006c182/autopep8-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "9d0dfe251d003edb8f6a95dc4929b7b7", "sha256": "2284d4ae2052fedb9f466c09728e30d2e231cfded5ffd7b1a20c34123fdc4ba4"}, "downloads": -1, "filename": "autopep8-1.3.5.tar.gz", "has_sig": false, "md5_digest": "9d0dfe251d003edb8f6a95dc4929b7b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109415, "upload_time": "2018-03-30T07:32:41", "upload_time_iso_8601": "2018-03-30T07:32:41.513806Z", "url": "https://files.pythonhosted.org/packages/b7/0c/20cf0a438d5273bfd2d607ada3a7a782845ab3776c1c83c1d3baca05535e/autopep8-1.3.5.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "0cb541c5d62eb7cfda1102d62f07d6d5", "sha256": "655e3ee8b4545be6cfed18985f581ee9ecc74a232550ee46e9797b6fbf4f336d"}, "downloads": -1, "filename": "autopep8-1.4.tar.gz", "has_sig": false, "md5_digest": "0cb541c5d62eb7cfda1102d62f07d6d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107925, "upload_time": "2018-09-01T16:03:16", "upload_time_iso_8601": "2018-09-01T16:03:16.113677Z", "url": "https://files.pythonhosted.org/packages/cf/30/9efc988f92f41e2ba51211e3d317ee82260d563ae84dceb53f7021a1bdfe/autopep8-1.4.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "5abd07b0e99525f2e64b9713bda06fe3", "sha256": "096426ef4b489784c08395d7fc7f8cbf38a107b806984513e4c2d9070b0dc1d8"}, "downloads": -1, "filename": "autopep8-1.4.1.tar.gz", "has_sig": false, "md5_digest": "5abd07b0e99525f2e64b9713bda06fe3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113238, "upload_time": "2018-10-17T14:00:27", "upload_time_iso_8601": "2018-10-17T14:00:27.025767Z", "url": "https://files.pythonhosted.org/packages/d7/33/86a857db9c5081b0e8241568e64c1cb1acc03a869448729fbb6d9822bbee/autopep8-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "7fa1fb54a8143c594cea0371b62282e6", "sha256": "1b8d42ebba751a91090d3adb5c06840b1151d71ed43e1c7a9ed6911bfe8ebe6c"}, "downloads": -1, "filename": "autopep8-1.4.2.tar.gz", "has_sig": false, "md5_digest": "7fa1fb54a8143c594cea0371b62282e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113510, "upload_time": "2018-10-23T15:09:36", "upload_time_iso_8601": "2018-10-23T15:09:36.324346Z", "url": "https://files.pythonhosted.org/packages/dd/35/85dc65305bd86ad78aefdb6247bd786ec85e3cb7d86357c5c7ba2e6ae099/autopep8-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "887b161ced57b86a7ca68cc4fbb04ae8", "sha256": "33d2b5325b7e1afb4240814fe982eea3a92ebea712869bfd08b3c0393404248c"}, "downloads": -1, "filename": "autopep8-1.4.3.tar.gz", "has_sig": false, "md5_digest": "887b161ced57b86a7ca68cc4fbb04ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113940, "upload_time": "2018-11-12T13:55:56", "upload_time_iso_8601": "2018-11-12T13:55:56.735500Z", "url": "https://files.pythonhosted.org/packages/5b/ba/37d30e4263c51ee5a655118ac8c331e96a4e45fd4cea876a74b87af9ffc1/autopep8-1.4.3.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "d068bbcf243c25dfe2b3ace0024583bd", "sha256": "4d8eec30cc81bc5617dbf1218201d770dc35629363547f17577c61683ccfb3ee"}, "downloads": -1, "filename": "autopep8-1.4.4.tar.gz", "has_sig": false, "md5_digest": "d068bbcf243c25dfe2b3ace0024583bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114796, "upload_time": "2019-04-14T08:29:37", "upload_time_iso_8601": "2019-04-14T08:29:37.190178Z", "url": "https://files.pythonhosted.org/packages/45/f3/24b437da561b6af4840c871fbbda32889ca304fc1f7b6cc3ada8b09f394a/autopep8-1.4.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "1917e31c8caaa5d3c2f1687de5d3c51e", "sha256": "0f592a0447acea0c2b0a9602be1e4e3d86db52badd2e3c84f0193bfd89fd3a43"}, "downloads": -1, "filename": "autopep8-1.5.tar.gz", "has_sig": false, "md5_digest": "1917e31c8caaa5d3c2f1687de5d3c51e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116639, "upload_time": "2020-01-20T14:08:08", "upload_time_iso_8601": "2020-01-20T14:08:08.252446Z", "url": "https://files.pythonhosted.org/packages/12/55/7b07585ca0c30e5b216e4d627f82f96f1a7e82d2dd727b1f926cb3f3d58b/autopep8-1.5.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "f1c3c52cd9aa1d31373a5f0f79ac4211", "sha256": "cc6be1dfd46f2c7fa00e84a357f1a269683985b09eaffb47654ed551194399eb"}, "downloads": -1, "filename": "autopep8-1.5.1.tar.gz", "has_sig": false, "md5_digest": "f1c3c52cd9aa1d31373a5f0f79ac4211", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117134, "upload_time": "2020-04-05T23:19:29", "upload_time_iso_8601": "2020-04-05T23:19:29.195763Z", "url": "https://files.pythonhosted.org/packages/ca/d3/bb1c5781415b2a4f7d48bcd4c62e735d5ebf40d4f8c325d654870bedb7a6/autopep8-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "63b8f91cf52d8b10780608d855e4fce9", "sha256": "152fd8fe47d02082be86e05001ec23d6f420086db56b17fc883f3f965fb34954"}, "downloads": -1, "filename": "autopep8-1.5.2.tar.gz", "has_sig": false, "md5_digest": "63b8f91cf52d8b10780608d855e4fce9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117909, "upload_time": "2020-04-20T11:59:20", "upload_time_iso_8601": "2020-04-20T11:59:20.382455Z", "url": "https://files.pythonhosted.org/packages/41/5b/3bd26811d311ae0b819487a3d97557ca0181de1c49a8dca1ab2c8dfac4f6/autopep8-1.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63b8f91cf52d8b10780608d855e4fce9", "sha256": "152fd8fe47d02082be86e05001ec23d6f420086db56b17fc883f3f965fb34954"}, "downloads": -1, "filename": "autopep8-1.5.2.tar.gz", "has_sig": false, "md5_digest": "63b8f91cf52d8b10780608d855e4fce9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117909, "upload_time": "2020-04-20T11:59:20", "upload_time_iso_8601": "2020-04-20T11:59:20.382455Z", "url": "https://files.pythonhosted.org/packages/41/5b/3bd26811d311ae0b819487a3d97557ca0181de1c49a8dca1ab2c8dfac4f6/autopep8-1.5.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:11 2020"}