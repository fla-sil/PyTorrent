{"info": {"author": "Gordon Ball", "author_email": "gordon@chronitis.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Framework :: IPython", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Utilities"], "description": "ipyrmd\n======\n\nConvert between IPython/Jupyter notebooks and R Markdown documents\n------------------------------------------------------------------\n\nThis script provides conversion in both directions between the [IPython](https://github.com/ipython/ipython) [notebook format](https://ipython.org/ipython-doc/3/notebook/nbformat.html) (JSON with separate markdown and code) and the [R Markdown](https://github.com/rstudio/rmarkdown) [format](http://rmarkdown.rstudio.com) (markdown text with annotated code blocks). Conversion to and from plain R files with markdown embedded in [knitr](http://yihui.name/knitr/)-style comments (`#' markdown`) is also supported.\n\nIt only really makes sense to use it with IPython notebooks using the IPython [R kernel](http://github.com/IRkernel/IRkernel), but will work with any type of code if you insist.\n\nConversion should produce useful output, but is not completely lossless:\n\n * Inline code blocks in R Markdown (`r somecode`) are currently ignored (they remain as markdown text). Inserting code blocks for them would be a possible extension but since the main use for such blocks is to display an output value I assume ignoring them should not usually change program flow.\n * The YAML header used in R Markdown does not have a functional equivalent in IPython. The contents of the header are stored in the IPython notebook metadata dictionary (as `Rmd_header`) for round-trip conversion, but are not otherwise used.\n * Chunk options for R Markdown (```` ```{r, foo=bar}````) also do not (currently) have any functional equivalent in the IPython notebook. The option string (as text) is stored in the cell metadata (as `Rmd_chunk_options`) for round-trip conversion.\n * Since whitespace is significant in markdown, we attempt to maintain blank lines within code and markdown blocks, but the boundaries between code and markdown may not be exactly reproduced (you may get extra blank lines).\n * The IPython notebook may contain both text and rich output, but there is no way to keep this for R Markdown - you will need to re-knit the document.\n\nUsage\n-----\n\n`python3`, `nbformat` and `pyyaml` are required.\n\n    ipyrmd [--to R|Rmd|ipynb] [--from R|Rmd|ipynb] [-y] [-o outfile] infile\n\nBy default the output filename and mode of conversion is determined from the input filename. Notebooks are converted by default to RMarkdown unless you specify R output.\n\nInstall\n-------\n\n    pip3 install [--user] [--upgrade] ipyrmd\n\nAlternatives, it can be installed manually by downloading the archive, extracting it then running `python3 setup.py install --user`. This should install the `ipyrmd` script in your local bin directory (probably `~/.local/bin`).\n\nTODO\n----\n\n * Options for how to handle inline R blocks\n * Consider using nbconvert machinery for ipynb -> Rmd conversion\n * Consider whether any chunk options can be emulated with IRdisplay calls\n * Check IPython API compatibility between IPython and Jupyter\n * De-duplicate code between R and Rmd methods\n\nHistory\n-------\n\n *  0.1 (2015-05-27) Initial release\n *  0.2 (2015-05-29) Re-structure as a python library providing script `ipyrmd`\n *  0.3 (2015-06-09) Add support for R files with markdown embedded in #' comments\n *  0.4 (2016-06-01) Added a test suite and fixed a number of round-trip bugs\n *  0.4.2 (2016-06-29) Fix missing README causing setup errors (ipyrmd#3)\n *  0.4.3 (2017-10-09) Fix installation using requirements.txt (ipyrmd#4)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chronitis/ipyrmd", "keywords": "ipython jupyter irkernel rmarkdown ipynb", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ipyrmd", "package_url": "https://pypi.org/project/ipyrmd/", "platform": "", "project_url": "https://pypi.org/project/ipyrmd/", "project_urls": {"Homepage": "https://github.com/chronitis/ipyrmd"}, "release_url": "https://pypi.org/project/ipyrmd/0.4.3/", "requires_dist": null, "requires_python": "", "summary": "Convert between IPython/Jupyter notebooks and RMarkdown", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ipyrmd<br>======<br><br>Convert between IPython/Jupyter notebooks and R Markdown documents<br>------------------------------------------------------------------<br><br>This script provides conversion in both directions between the [IPython](https://github.com/ipython/ipython) [notebook format](https://ipython.org/ipython-doc/3/notebook/nbformat.html) (JSON with separate markdown and code) and the [R Markdown](https://github.com/rstudio/rmarkdown) [format](http://rmarkdown.rstudio.com) (markdown text with annotated code blocks). Conversion to and from plain R files with markdown embedded in [knitr](http://yihui.name/knitr/)-style comments (`#' markdown`) is also supported.<br><br>It only really makes sense to use it with IPython notebooks using the IPython [R kernel](http://github.com/IRkernel/IRkernel), but will work with any type of code if you insist.<br><br>Conversion should produce useful output, but is not completely lossless:<br><br> * Inline code blocks in R Markdown (`r somecode`) are currently ignored (they remain as markdown text). Inserting code blocks for them would be a possible extension but since the main use for such blocks is to display an output value I assume ignoring them should not usually change program flow.<br> * The YAML header used in R Markdown does not have a functional equivalent in IPython. The contents of the header are stored in the IPython notebook metadata dictionary (as `Rmd_header`) for round-trip conversion, but are not otherwise used.<br> * Chunk options for R Markdown (```` ```{r, foo=bar}````) also do not (currently) have any functional equivalent in the IPython notebook. The option string (as text) is stored in the cell metadata (as `Rmd_chunk_options`) for round-trip conversion.<br> * Since whitespace is significant in markdown, we attempt to maintain blank lines within code and markdown blocks, but the boundaries between code and markdown may not be exactly reproduced (you may get extra blank lines).<br> * The IPython notebook may contain both text and rich output, but there is no way to keep this for R Markdown - you will need to re-knit the document.<br><br>Usage<br>-----<br><br>`python3`, `nbformat` and `pyyaml` are required.<br><br>    ipyrmd [--to R|Rmd|ipynb] [--from R|Rmd|ipynb] [-y] [-o outfile] infile<br><br>By default the output filename and mode of conversion is determined from the input filename. Notebooks are converted by default to RMarkdown unless you specify R output.<br><br>Install<br>-------<br><br>    pip3 install [--user] [--upgrade] ipyrmd<br><br>Alternatives, it can be installed manually by downloading the archive, extracting it then running `python3 setup.py install --user`. This should install the `ipyrmd` script in your local bin directory (probably `~/.local/bin`).<br><br>TODO<br>----<br><br> * Options for how to handle inline R blocks<br> * Consider using nbconvert machinery for ipynb -&gt; Rmd conversion<br> * Consider whether any chunk options can be emulated with IRdisplay calls<br> * Check IPython API compatibility between IPython and Jupyter<br> * De-duplicate code between R and Rmd methods<br><br>History<br>-------<br><br> *  0.1 (2015-05-27) Initial release<br> *  0.2 (2015-05-29) Re-structure as a python library providing script `ipyrmd`<br> *  0.3 (2015-06-09) Add support for R files with markdown embedded in #' comments<br> *  0.4 (2016-06-01) Added a test suite and fixed a number of round-trip bugs<br> *  0.4.2 (2016-06-29) Fix missing README causing setup errors (ipyrmd#3)<br> *  0.4.3 (2017-10-09) Fix installation using requirements.txt (ipyrmd#4)\n          </div>"}, "last_serial": 3237222, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "cc5256b5d66a7d0d817901dfd1041672", "sha256": "adec1985acd71f7ad21350625f7e729da90cf57fe1ed419bfb4d0345f58fd430"}, "downloads": -1, "filename": "ipyrmd-0.3.tar.gz", "has_sig": false, "md5_digest": "cc5256b5d66a7d0d817901dfd1041672", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6299, "upload_time": "2016-05-10T15:14:29", "upload_time_iso_8601": "2016-05-10T15:14:29.636812Z", "url": "https://files.pythonhosted.org/packages/96/1b/1c2040f7214af74f9a140defecb2115d6a8974b095223fa9986b11669ba8/ipyrmd-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "213777cf08f62a879596a381cfde573a", "sha256": "5b775893a90d0a27ee08d69170db0498907947de12abb981a228db5f7a68b71a"}, "downloads": -1, "filename": "ipyrmd-0.4.tar.gz", "has_sig": false, "md5_digest": "213777cf08f62a879596a381cfde573a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6464, "upload_time": "2016-06-02T12:34:24", "upload_time_iso_8601": "2016-06-02T12:34:24.146370Z", "url": "https://files.pythonhosted.org/packages/cd/1c/e10937f9c2414ee45830162bd2c8d2d88cca449aefb138cc1824b685db29/ipyrmd-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "3d41add1086a79fbc8112a66a22ffba0", "sha256": "75dcaad8e994bf5885912eb9f1b6339eb3a5bde7087df2b7f47a005bdb027cad"}, "downloads": -1, "filename": "ipyrmd-0.4.1.tar.gz", "has_sig": false, "md5_digest": "3d41add1086a79fbc8112a66a22ffba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6520, "upload_time": "2016-06-29T08:58:35", "upload_time_iso_8601": "2016-06-29T08:58:35.345491Z", "url": "https://files.pythonhosted.org/packages/cc/02/41d745efb5ce82810943376131dbeed8d7bd5d6871bf18ebc73b4717c139/ipyrmd-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "5cedea276af678b69ac1fecc7e437141", "sha256": "59c8584efe5ae4b5e6bf160b26ed57bbe3bce5c154718b0b7f14227b96d3b775"}, "downloads": -1, "filename": "ipyrmd-0.4.2.tar.gz", "has_sig": false, "md5_digest": "5cedea276af678b69ac1fecc7e437141", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6783, "upload_time": "2016-06-29T09:10:25", "upload_time_iso_8601": "2016-06-29T09:10:25.149350Z", "url": "https://files.pythonhosted.org/packages/76/35/328a2c250e75fa3ce0890bdaf3d3eebc4a5d7f45ea0f146bdf0e9ccee783/ipyrmd-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "28da1eb2b367f9413b5634672fc4a42e", "sha256": "5e9fa7682b43f6a1cef9ac34209cd0fb97949926cc4873193a5ce8ffb3503e23"}, "downloads": -1, "filename": "ipyrmd-0.4.3.tar.gz", "has_sig": true, "md5_digest": "28da1eb2b367f9413b5634672fc4a42e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6846, "upload_time": "2017-10-09T19:44:02", "upload_time_iso_8601": "2017-10-09T19:44:02.652933Z", "url": "https://files.pythonhosted.org/packages/5a/17/a80f6023af94849954fb053f9a65e530dc84845a3f498c28ee250e5a4561/ipyrmd-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28da1eb2b367f9413b5634672fc4a42e", "sha256": "5e9fa7682b43f6a1cef9ac34209cd0fb97949926cc4873193a5ce8ffb3503e23"}, "downloads": -1, "filename": "ipyrmd-0.4.3.tar.gz", "has_sig": true, "md5_digest": "28da1eb2b367f9413b5634672fc4a42e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6846, "upload_time": "2017-10-09T19:44:02", "upload_time_iso_8601": "2017-10-09T19:44:02.652933Z", "url": "https://files.pythonhosted.org/packages/5a/17/a80f6023af94849954fb053f9a65e530dc84845a3f498c28ee250e5a4561/ipyrmd-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:27 2020"}