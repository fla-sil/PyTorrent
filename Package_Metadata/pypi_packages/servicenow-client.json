{"info": {"author": "Parul Neeraj", "author_email": "parulneeraj007@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Installation\r\n------------\r\npip install servicenow_client\r\n\r\n\r\nUsage examples::\r\n--------------\r\n\r\nimport servicenow_client\r\n\r\n# Create object\r\n# if empty_error is True, exception will be raised if query result is empty\r\nobj = servicenow_client.servNow(instance='myinstance', user='myuser', password='mypassword', empty_error=True)\r\n\r\n# Create a new record\r\nobj.create(table='incident', data={'short_description':'My Incident Ticket'})\r\n\r\n# Update record(s) based on search condition\r\n# searchList=['field', 'operator', 'value']\r\nobj.update(table='incident', searchList=[['short_description','is','My Incident Ticket'], ['number','is not','INC0010022']], data={'state': '1'})\r\n\r\n# Search for record(s) and display only 'number' and 'sys_id' from the results\r\n# if fields is not defined it will return all fiels in response\r\nobj.search(table='incident', searchList=['short_description','is not empty'], fields='number,sys_id')\r\n\r\n# Delete record(s) based on search condition\r\nobj.delete(table='problem', searchList=['short_description','is','Problem Ticket'])\r\n\r\n# Change state of record(s) based on search condition\r\nobj.changeState(table='incident', searchList=['short_description','is','ISAN Problem 2'], state='In progress')\r\n\r\n# Download a specific attachement or particular type of attachement related to record(s) based on search condition\r\nobj.getFile(table='incident', searchList=['short_description','is','test123'], type='.jpg')\r\n\r\n# Upload an attachement to record(s) that satisfy the search condition\r\nobj.uploadFile(table='incident', searchList=['short_description', 'is', 'test'], filename='D:\\Tulips.jpg')\r\n\r\n# Delete an attachement from record(s) that satisfy the search condition\r\nobj.deleteFile(table='incident', searchList=['short_description', 'is', 'Upload 4'], filename='Riddles Treasure Hunt.pdf')\r\n\r\n# Send email related to a particular record\r\n# To send email not related to any specific record skip 'table' and 'sysId' fields\r\nobj.sendEmail(table='incident', subject='Hello', message='hi', to='abc@example.com, xyz@example.com', sysId='33434f713200e1e0b5e18110c75b')\r\n\r\n# Read email, where sysId is sysId of email\r\nobj.readEmail(sysId='33434f713200e1e0b5e18110c75b')\r\n\r\n\r\nCompatibility\r\n-------------\r\nPython 2 Tested: Python 2.6+\r\nServiceNow Tested: Istanbul, Geneva\r\n\r\n\r\nAuthor\r\n------\r\nCreated by Parul Neeraj <parulneeraj007@gmail.com> in 2017", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/servicenow_client", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/servicenow_client", "keywords": "servicenow,rest,api,service,client,service now,servicenow_client", "license": "GPLv2", "maintainer": "Parul Neeraj", "maintainer_email": "servicenowclient@gmail.com", "name": "servicenow-client", "package_url": "https://pypi.org/project/servicenow-client/", "platform": "", "project_url": "https://pypi.org/project/servicenow-client/", "project_urls": {"Download": "http://pypi.python.org/pypi/servicenow_client", "Homepage": "http://pypi.python.org/pypi/servicenow_client"}, "release_url": "https://pypi.org/project/servicenow-client/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A python module to access ServiceNow REST API", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Installation\n<br>------------\n<br>pip install servicenow_client\n<br>\n<br>\n<br>Usage examples::\n<br>--------------\n<br>\n<br>import servicenow_client\n<br>\n<br># Create object\n<br># if empty_error is True, exception will be raised if query result is empty\n<br>obj = servicenow_client.servNow(instance='myinstance', user='myuser', password='mypassword', empty_error=True)\n<br>\n<br># Create a new record\n<br>obj.create(table='incident', data={'short_description':'My Incident Ticket'})\n<br>\n<br># Update record(s) based on search condition\n<br># searchList=['field', 'operator', 'value']\n<br>obj.update(table='incident', searchList=[['short_description','is','My Incident Ticket'], ['number','is not','INC0010022']], data={'state': '1'})\n<br>\n<br># Search for record(s) and display only 'number' and 'sys_id' from the results\n<br># if fields is not defined it will return all fiels in response\n<br>obj.search(table='incident', searchList=['short_description','is not empty'], fields='number,sys_id')\n<br>\n<br># Delete record(s) based on search condition\n<br>obj.delete(table='problem', searchList=['short_description','is','Problem Ticket'])\n<br>\n<br># Change state of record(s) based on search condition\n<br>obj.changeState(table='incident', searchList=['short_description','is','ISAN Problem 2'], state='In progress')\n<br>\n<br># Download a specific attachement or particular type of attachement related to record(s) based on search condition\n<br>obj.getFile(table='incident', searchList=['short_description','is','test123'], type='.jpg')\n<br>\n<br># Upload an attachement to record(s) that satisfy the search condition\n<br>obj.uploadFile(table='incident', searchList=['short_description', 'is', 'test'], filename='D:\\Tulips.jpg')\n<br>\n<br># Delete an attachement from record(s) that satisfy the search condition\n<br>obj.deleteFile(table='incident', searchList=['short_description', 'is', 'Upload 4'], filename='Riddles Treasure Hunt.pdf')\n<br>\n<br># Send email related to a particular record\n<br># To send email not related to any specific record skip 'table' and 'sysId' fields\n<br>obj.sendEmail(table='incident', subject='Hello', message='hi', to='abc@example.com, xyz@example.com', sysId='33434f713200e1e0b5e18110c75b')\n<br>\n<br># Read email, where sysId is sysId of email\n<br>obj.readEmail(sysId='33434f713200e1e0b5e18110c75b')\n<br>\n<br>\n<br>Compatibility\n<br>-------------\n<br>Python 2 Tested: Python 2.6+\n<br>ServiceNow Tested: Istanbul, Geneva\n<br>\n<br>\n<br>Author\n<br>------\n<br>Created by Parul Neeraj &lt;parulneeraj007@gmail.com&gt; in 2017\n          </div>"}, "last_serial": 2850971, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d6676d0689588d763769d85d0d078e0e", "sha256": "bbc5aedc4810537e35198c0ae24c908abd8ba9f6798c4e3b8645f9499b786db7"}, "downloads": -1, "filename": "servicenow_client-0.1.0.zip", "has_sig": false, "md5_digest": "d6676d0689588d763769d85d0d078e0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8032, "upload_time": "2017-05-02T06:05:55", "upload_time_iso_8601": "2017-05-02T06:05:55.281261Z", "url": "https://files.pythonhosted.org/packages/e7/ed/9af8af3820c69fcad019d641c6f128ce8347669cbc37bbbcfc376205fa8d/servicenow_client-0.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6676d0689588d763769d85d0d078e0e", "sha256": "bbc5aedc4810537e35198c0ae24c908abd8ba9f6798c4e3b8645f9499b786db7"}, "downloads": -1, "filename": "servicenow_client-0.1.0.zip", "has_sig": false, "md5_digest": "d6676d0689588d763769d85d0d078e0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8032, "upload_time": "2017-05-02T06:05:55", "upload_time_iso_8601": "2017-05-02T06:05:55.281261Z", "url": "https://files.pythonhosted.org/packages/e7/ed/9af8af3820c69fcad019d641c6f128ce8347669cbc37bbbcfc376205fa8d/servicenow_client-0.1.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:14:56 2020"}