{"info": {"author": "Victor Titor", "author_email": "vtitor.edumix@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6"], "description": "# caller\n\n[![Build Status](https://travis-ci.org/vtitor/caller.svg?branch=master)](https://travis-ci.org/vtitor/caller)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nCaller is a little library for calling a property as a regular function.\n\nInstallation\n------------\n\nInstall using pip:\n\n    $ pip install caller\n\nUsage\n-----\n\n```python\nfrom caller import property\n\nclass Foo(object):\n    def __init__(self, bar):\n        self._bar = bar\n\n    @property\n    def bar(self):\n        return self._bar\n\n    @bar.setter\n    def bar(self, new_bar):\n        self._bar = new_bar\n\nfoo = Foo('bar')\nfoo.bar('new bar')\n\nprint(foo.bar)\n```\n\nPrints\n\n```\nnew bar\n```\n\nOr with a separate caller\n\n```python\nclass Foo(object):\n    ...\n    @bar.caller\n    def bar(self, new_bar):\n        self._bar = new_bar[::-1]\n        print(self._bar)\n\nFoo('bar').bar('new bar')\n```\n\nPrints\n\n```\nrab wen\n```\n\nThat's all.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vtitor/caller", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "caller", "package_url": "https://pypi.org/project/caller/", "platform": "", "project_url": "https://pypi.org/project/caller/", "project_urls": {"Homepage": "https://github.com/vtitor/caller"}, "release_url": "https://pypi.org/project/caller/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Set a Python property using a function call", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>caller</h1>\n<p><a href=\"https://travis-ci.org/vtitor/caller\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b7f21ee16461cf98adc0ce3610a716c8f0b9f9a/68747470733a2f2f7472617669732d63692e6f72672f767469746f722f63616c6c65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>Caller is a little library for calling a property as a regular function.</p>\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre><code>$ pip install caller\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">caller</span> <span class=\"kn\">import</span> <span class=\"nb\">property</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bar</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bar</span> <span class=\"o\">=</span> <span class=\"n\">bar</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bar</span>\n\n    <span class=\"nd\">@bar</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_bar</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bar</span> <span class=\"o\">=</span> <span class=\"n\">new_bar</span>\n\n<span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">Foo</span><span class=\"p\">(</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n<span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"s1\">'new bar'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">bar</span><span class=\"p\">)</span>\n</pre>\n<p>Prints</p>\n<pre><code>new bar\n</code></pre>\n<p>Or with a separate caller</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@bar</span><span class=\"o\">.</span><span class=\"n\">caller</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_bar</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bar</span> <span class=\"o\">=</span> <span class=\"n\">new_bar</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bar</span><span class=\"p\">)</span>\n\n<span class=\"n\">Foo</span><span class=\"p\">(</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"s1\">'new bar'</span><span class=\"p\">)</span>\n</pre>\n<p>Prints</p>\n<pre><code>rab wen\n</code></pre>\n<p>That's all.</p>\n\n          </div>"}, "last_serial": 4077893, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dbf5abd2b4dc2c114260965f4e18cd93", "sha256": "a664959bc9a7aed20d7815c1323cd1c1ed3898a9d9bb1282d5946b9bf771cb51"}, "downloads": -1, "filename": "caller-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dbf5abd2b4dc2c114260965f4e18cd93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2032, "upload_time": "2018-04-25T18:08:10", "upload_time_iso_8601": "2018-04-25T18:08:10.203334Z", "url": "https://files.pythonhosted.org/packages/ea/5d/db76160c7406a76065804827b7e7f5d82c81c04dd9eec45e821676ba0e93/caller-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "facb7ed868fd9aa9589371a1a6b86451", "sha256": "4dd3b5bf814c0faba5bc580c8969a6ac81b6af918499ce5a157e0157a6775456"}, "downloads": -1, "filename": "caller-0.0.2.tar.gz", "has_sig": false, "md5_digest": "facb7ed868fd9aa9589371a1a6b86451", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2489, "upload_time": "2018-07-18T12:58:26", "upload_time_iso_8601": "2018-07-18T12:58:26.554628Z", "url": "https://files.pythonhosted.org/packages/82/a4/7a32694a0ad44f7f210ceaee3829e739e87f3e8e1e0e4595da371dd32f16/caller-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "facb7ed868fd9aa9589371a1a6b86451", "sha256": "4dd3b5bf814c0faba5bc580c8969a6ac81b6af918499ce5a157e0157a6775456"}, "downloads": -1, "filename": "caller-0.0.2.tar.gz", "has_sig": false, "md5_digest": "facb7ed868fd9aa9589371a1a6b86451", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2489, "upload_time": "2018-07-18T12:58:26", "upload_time_iso_8601": "2018-07-18T12:58:26.554628Z", "url": "https://files.pythonhosted.org/packages/82/a4/7a32694a0ad44f7f210ceaee3829e739e87f3e8e1e0e4595da371dd32f16/caller-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:37 2020"}