{"info": {"author": "Michal Kaczmarczyk", "author_email": "michal.s.kaczmarczyk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database :: Front-Ends", "Topic :: Documentation", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Browsers", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Code Generators", "Topic :: Utilities"], "description": "XPLANT\n======\n\nPure pythonic tree structure builder and markup language translator.\nNo dependencies, quite fast, pretty syntax, no templates.\n\n- Enter tree nodes with python's context managers.\n- Cast the tree to given markup, just by calling ``str`` on it.\n- Enjoy 1:1 translation from python to given markup.\n\nBasically it's suited for XML and similar markups (SVG, HTML) but it can be used\nfor probably any structured markup.\n\nXML Example\n-----------\n\n.. code:: python\n\n    from xplant import xml_plant\n\n    x = xml_plant()\n    with x.node(\"section_a\", attribute_1=1):\n        with x.node(\"nested_1\", empty=True):\n            pass\n        with x.node(\"nested_2\"):\n            x.comment(\"Can handle also comments.\")\n            for number in range(3):\n                x.leaf(\"a_number_{:02}\".format(number), num=number)\n\n\nWill give:\n\n.. code:: xml\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <section_a attribute_1=\"1\">\n      <nested_1 empty=\"true\"></nested_1>\n      <nested_2>\n        <!-- Can handle also comments. -->\n        <a_number_00 num=\"0\" />\n        <a_number_01 num=\"1\" />\n        <a_number_02 num=\"2\" />\n      </nested_2>\n    </section_a>\n\n\nHTML generation Example\n-----------------------\n.. code:: python\n\n    css = \"\"\"\n        ul.navigation {\n            list-style-type: none;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            background-color: #f2fff5;\n        }\n        li {\n          float: left;\n        }\n        li a {\n          display: block;\n          color: white;\n          text-align: center;\n          padding: 14px 16px;\n          text-decoration: none;\n        }\n        code {\n            background-color: #ded;\n            padding: 4px;\n            border-radius: 3px;\n        }\n    \"\"\"\n    navigation = [\n        (\"Home\", \"../home.html\", \"red\"),\n        (\"Things\", \"stuff.html\", \"green\"),\n        (\"About\", \"../about.html\", \"blue\"),\n    ]\n    text = [\n        \"This page has ben generated with python's <code> xplant.html.html5_plant </code>.\",\n        \"Enjoy pure pythonic <code>1:1 python -> xml</code> translation.\",\n        \"break\",\n        \"Did you ever had hard times with learning <code>HTML template language</code>? \",\n        \"It's a crude way to mix HTML with any logics like iterators, classes, conditions.\",\n        \"break\",\n        \"You know what? You already have all of it (and much more) in <code>python</code>! \",\n        \"HTML templates is a blind alley. HTML does not miss server-side scripting.\",\n        \"The python miss a good HTML generator not vice versa.\",\n    ]\n\n    from xplant import html5_plant\n\n    x = html5_plant()\n\n    with x.html():\n        with x.head():\n            x.meta(charset=\"utf-8\")\n            x.meta(http_equiv=\"Content-Security-Policy\")\n            x.line(\"title\", \"no templates, no headache\")\n            # line is a helper for creating text in a xml tag\n            with x.style():\n                x.text(css)\n\n        with x.body(style=\"margin:28px;\"):\n            with x.header():\n                x.line(\"h2\", \"XPLANT\", id=\"title\")\n                x.line(\"h4\", \"It makes good things for you\")\n\n            x.comment(\"HERE COMES THE NAVIGATION\")\n            with x.ul(id=\"navigation\"):\n                x.comment(\"CHECK OUT THIS LIST\")\n                for name, link_url, link_color in navigation:\n                    with x.li():\n                        with x.a(href=link_url, style=\"color:%s;\" % link_color):\n                            x.text(\"%s in %s\" % (name, link_color))\n\n            x.comment(\"HERE COMES MAIN SECTION\")\n            with x.main(style=\"margin:20px;\"):\n                for paragraph in text:\n                    with x.p():\n                        if paragraph == \"break\":\n                            x.br()\n                        else:\n                            x.text(paragraph)\n    print(p)\n\nGives such a string:\n\n.. code:: html\n\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\" />\n        <meta http-equiv=\"Content-Security-Policy\" />\n        <title>no templates, no headache</title>\n        <style>\n            ul.navigation {\n                list-style-type: none;\n                margin: 0;\n                padding: 0;\n                overflow: hidden;\n                background-color: #f2fff5;\n            }\n            li {\n              float: left;\n            }\n            li a {\n              display: block;\n              color: white;\n              text-align: center;\n              padding: 14px 16px;\n              text-decoration: none;\n            }\n            code {\n                background-color: #ded;\n                padding: 4px;\n                border-radius: 3px;\n            }\n        </style>\n      </head>\n      <body style=\"margin:28px;\">\n        <header>\n          <h2 id=\"title\">XPLANT</h2>\n          <h4>It makes good things for you</h4>\n        </header>\n        <!-- HERE COMES THE NAVIGATION -->\n        <ul id=\"navigation\">\n          <!-- CHECK OUT THIS LIST -->\n          <li><a href=\"../home.html\" style=\"color:red;\">Home in red</a></li>\n          <li><a href=\"stuff.html\" style=\"color:green;\">Things in green</a></li>\n          <li><a href=\"../about.html\" style=\"color:blue;\">About in blue</a></li>\n        </ul>\n        <!-- HERE COMES MAIN SECTION -->\n        <main style=\"margin:20px;\">\n          <p>This page has ben generated with python's <code> xplant.html.html5_plant </code>.</p>\n          <p>Enjoy pure pythonic <code>1:1 python -> xml</code> translation.</p>\n          <p><br /></p>\n          <p>Did you ever had hard times with learning <code>HTML template language</code>? </p>\n          <p>It's a crude way to mix HTML with any logics like iterators, classes, conditions.</p>\n          <p><br /></p>\n          <p>You know what? You already have all of it (and much more) in <code>python</code>! </p>\n          <p>HTML templates is a blind alley. HTML does not miss server-side scripting.</p>\n          <p>The python miss a good HTML generator not vice versa.</p>\n        </main>\n      </body>\n    </html>\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/kamichal/xplant", "keywords": "pythonic xml builder generator markup yaml", "license": "MIT license", "maintainer": "Michal Kaczmarczyk", "maintainer_email": "michal.s.kaczmarczyk@gmail.com", "name": "xplant", "package_url": "https://pypi.org/project/xplant/", "platform": "", "project_url": "https://pypi.org/project/xplant/", "project_urls": {"Homepage": "https://gitlab.com/kamichal/xplant"}, "release_url": "https://pypi.org/project/xplant/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "Tree model markup builder.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pure pythonic tree structure builder and markup language translator.\nNo dependencies, quite fast, pretty syntax, no templates.</p>\n<ul>\n<li>Enter tree nodes with python\u2019s context managers.</li>\n<li>Cast the tree to given markup, just by calling <tt>str</tt> on it.</li>\n<li>Enjoy 1:1 translation from python to given markup.</li>\n</ul>\n<p>Basically it\u2019s suited for XML and similar markups (SVG, HTML) but it can be used\nfor probably any structured markup.</p>\n<div id=\"xml-example\">\n<h2>XML Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xplant</span> <span class=\"kn\">import</span> <span class=\"n\">xml_plant</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">xml_plant</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"s2\">\"section_a\"</span><span class=\"p\">,</span> <span class=\"n\">attribute_1</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"s2\">\"nested_1\"</span><span class=\"p\">,</span> <span class=\"n\">empty</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"s2\">\"nested_2\"</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">(</span><span class=\"s2\">\"Can handle also comments.\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">number</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">leaf</span><span class=\"p\">(</span><span class=\"s2\">\"a_number_</span><span class=\"si\">{:02}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">),</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"n\">number</span><span class=\"p\">)</span>\n</pre>\n<p>Will give:</p>\n<pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"nt\">&lt;section_a</span> <span class=\"na\">attribute_1=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;nested_1</span> <span class=\"na\">empty=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;&lt;/nested_1&gt;</span>\n  <span class=\"nt\">&lt;nested_2&gt;</span>\n    <span class=\"c\">&lt;!-- Can handle also comments. --&gt;</span>\n    <span class=\"nt\">&lt;a_number_00</span> <span class=\"na\">num=</span><span class=\"s\">\"0\"</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;a_number_01</span> <span class=\"na\">num=</span><span class=\"s\">\"1\"</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;a_number_02</span> <span class=\"na\">num=</span><span class=\"s\">\"2\"</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/nested_2&gt;</span>\n<span class=\"nt\">&lt;/section_a&gt;</span>\n</pre>\n</div>\n<div id=\"html-generation-example\">\n<h2>HTML generation Example</h2>\n<pre><span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n    ul.navigation {\n        list-style-type: none;\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        background-color: #f2fff5;\n    }\n    li {\n      float: left;\n    }\n    li a {\n      display: block;\n      color: white;\n      text-align: center;\n      padding: 14px 16px;\n      text-decoration: none;\n    }\n    code {\n        background-color: #ded;\n        padding: 4px;\n        border-radius: 3px;\n    }\n\"\"\"</span>\n<span class=\"n\">navigation</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"Home\"</span><span class=\"p\">,</span> <span class=\"s2\">\"../home.html\"</span><span class=\"p\">,</span> <span class=\"s2\">\"red\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"Things\"</span><span class=\"p\">,</span> <span class=\"s2\">\"stuff.html\"</span><span class=\"p\">,</span> <span class=\"s2\">\"green\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"About\"</span><span class=\"p\">,</span> <span class=\"s2\">\"../about.html\"</span><span class=\"p\">,</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"This page has ben generated with python's &lt;code&gt; xplant.html.html5_plant &lt;/code&gt;.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Enjoy pure pythonic &lt;code&gt;1:1 python -&gt; xml&lt;/code&gt; translation.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"break\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Did you ever had hard times with learning &lt;code&gt;HTML template language&lt;/code&gt;? \"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"It's a crude way to mix HTML with any logics like iterators, classes, conditions.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"break\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"You know what? You already have all of it (and much more) in &lt;code&gt;python&lt;/code&gt;! \"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"HTML templates is a blind alley. HTML does not miss server-side scripting.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"The python miss a good HTML generator not vice versa.\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">xplant</span> <span class=\"kn\">import</span> <span class=\"n\">html5_plant</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">html5_plant</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">():</span>\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">(</span><span class=\"n\">charset</span><span class=\"o\">=</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">(</span><span class=\"n\">http_equiv</span><span class=\"o\">=</span><span class=\"s2\">\"Content-Security-Policy\"</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"s2\">\"title\"</span><span class=\"p\">,</span> <span class=\"s2\">\"no templates, no headache\"</span><span class=\"p\">)</span>\n        <span class=\"c1\"># line is a helper for creating text in a xml tag</span>\n        <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"p\">():</span>\n            <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"n\">css</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">(</span><span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"margin:28px;\"</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">():</span>\n            <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"s2\">\"h2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"XPLANT\"</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"title\"</span><span class=\"p\">)</span>\n            <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"s2\">\"h4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"It makes good things for you\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">(</span><span class=\"s2\">\"HERE COMES THE NAVIGATION\"</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ul</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"navigation\"</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">(</span><span class=\"s2\">\"CHECK OUT THIS LIST\"</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">link_url</span><span class=\"p\">,</span> <span class=\"n\">link_color</span> <span class=\"ow\">in</span> <span class=\"n\">navigation</span><span class=\"p\">:</span>\n                <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">li</span><span class=\"p\">():</span>\n                    <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">href</span><span class=\"o\">=</span><span class=\"n\">link_url</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"color:</span><span class=\"si\">%s</span><span class=\"s2\">;\"</span> <span class=\"o\">%</span> <span class=\"n\">link_color</span><span class=\"p\">):</span>\n                        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> in </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">link_color</span><span class=\"p\">))</span>\n\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">(</span><span class=\"s2\">\"HERE COMES MAIN SECTION\"</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">\"margin:20px;\"</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">paragraph</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"p\">:</span>\n                <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">p</span><span class=\"p\">():</span>\n                    <span class=\"k\">if</span> <span class=\"n\">paragraph</span> <span class=\"o\">==</span> <span class=\"s2\">\"break\"</span><span class=\"p\">:</span>\n                        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">br</span><span class=\"p\">()</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"n\">paragraph</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n</pre>\n<p>Gives such a string:</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">\"utf-8\"</span> <span class=\"p\">/&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">http-equiv</span><span class=\"o\">=</span><span class=\"s\">\"Content-Security-Policy\"</span> <span class=\"p\">/&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>no templates, no headache<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n        <span class=\"nt\">ul</span><span class=\"p\">.</span><span class=\"nc\">navigation</span> <span class=\"p\">{</span>\n            <span class=\"k\">list-style-type</span><span class=\"p\">:</span> <span class=\"kc\">none</span><span class=\"p\">;</span>\n            <span class=\"k\">margin</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n            <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n            <span class=\"k\">overflow</span><span class=\"p\">:</span> <span class=\"kc\">hidden</span><span class=\"p\">;</span>\n            <span class=\"k\">background-color</span><span class=\"p\">:</span> <span class=\"mh\">#f2fff5</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"nt\">li</span> <span class=\"p\">{</span>\n          <span class=\"k\">float</span><span class=\"p\">:</span> <span class=\"kc\">left</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"nt\">li</span> <span class=\"nt\">a</span> <span class=\"p\">{</span>\n          <span class=\"k\">display</span><span class=\"p\">:</span> <span class=\"kc\">block</span><span class=\"p\">;</span>\n          <span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">white</span><span class=\"p\">;</span>\n          <span class=\"k\">text-align</span><span class=\"p\">:</span> <span class=\"kc\">center</span><span class=\"p\">;</span>\n          <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">14</span><span class=\"kt\">px</span> <span class=\"mi\">16</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n          <span class=\"k\">text-decoration</span><span class=\"p\">:</span> <span class=\"kc\">none</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"nt\">code</span> <span class=\"p\">{</span>\n            <span class=\"k\">background-color</span><span class=\"p\">:</span> <span class=\"mh\">#ded</span><span class=\"p\">;</span>\n            <span class=\"k\">padding</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n            <span class=\"k\">border-radius</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"kt\">px</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"margin:28px;\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">header</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">h2</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"title\"</span><span class=\"p\">&gt;</span>XPLANT<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>It makes good things for you<span class=\"p\">&lt;/</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">header</span><span class=\"p\">&gt;</span>\n    <span class=\"c\">&lt;!-- HERE COMES THE NAVIGATION --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">ul</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"navigation\"</span><span class=\"p\">&gt;</span>\n      <span class=\"c\">&lt;!-- CHECK OUT THIS LIST --&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"../home.html\"</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"color:red;\"</span><span class=\"p\">&gt;</span>Home in red<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"stuff.html\"</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"color:green;\"</span><span class=\"p\">&gt;</span>Things in green<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"../about.html\"</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"color:blue;\"</span><span class=\"p\">&gt;</span>About in blue<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n    <span class=\"c\">&lt;!-- HERE COMES MAIN SECTION --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">main</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"margin:20px;\"</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>This page has ben generated with python's <span class=\"p\">&lt;</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span> xplant.html.html5_plant <span class=\"p\">&lt;/</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span>.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Enjoy pure pythonic <span class=\"p\">&lt;</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span>1:1 python -&gt; xml<span class=\"p\">&lt;/</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span> translation.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">br</span> <span class=\"p\">/&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Did you ever had hard times with learning <span class=\"p\">&lt;</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span>HTML template language<span class=\"p\">&lt;/</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span>? <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>It's a crude way to mix HTML with any logics like iterators, classes, conditions.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">br</span> <span class=\"p\">/&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>You know what? You already have all of it (and much more) in <span class=\"p\">&lt;</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span>python<span class=\"p\">&lt;/</span><span class=\"nt\">code</span><span class=\"p\">&gt;</span>! <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>HTML templates is a blind alley. HTML does not miss server-side scripting.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>The python miss a good HTML generator not vice versa.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">main</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4981838, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "42e5dd5949f2f70a32d53722e1a7fc54", "sha256": "f170db5730eaa8a47c797691700a09b2257708ec8e59529a1a351fe6bbbe8a99"}, "downloads": -1, "filename": "xplant-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42e5dd5949f2f70a32d53722e1a7fc54", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3393, "upload_time": "2018-10-10T12:55:46", "upload_time_iso_8601": "2018-10-10T12:55:46.061204Z", "url": "https://files.pythonhosted.org/packages/0c/85/96d7b8f5fd8328a66e1adb622f2b01c117cb0f091bbccd2a31d8c722fa2f/xplant-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1238c2094d0cf6addc436a2307d1fed8", "sha256": "627ea6f009858c49c767f710e816c40c2d7841dea7c0e53a673e6e1797c4d5f5"}, "downloads": -1, "filename": "xplant-0.1.tar.gz", "has_sig": false, "md5_digest": "1238c2094d0cf6addc436a2307d1fed8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4640, "upload_time": "2018-10-10T12:55:30", "upload_time_iso_8601": "2018-10-10T12:55:30.335920Z", "url": "https://files.pythonhosted.org/packages/97/48/759b002a00726212aea54923dd5cdc367a19f042132825f0793fbd430cee/xplant-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "31e055bd8a6c86dd0a2f5c35fcac68d5", "sha256": "40194352b459b74737373f83c7be3b91d4a655ebce29be5dbeb2519bc705a733"}, "downloads": -1, "filename": "xplant-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "31e055bd8a6c86dd0a2f5c35fcac68d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8889, "upload_time": "2018-11-27T16:43:35", "upload_time_iso_8601": "2018-11-27T16:43:35.781215Z", "url": "https://files.pythonhosted.org/packages/84/c1/1b4ce2850f7e735488eb2c881d77a4e0d205d53ce48ae3d3d43ad493ae30/xplant-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "781bb62a6bbe2bd08eeb585d4c45abce", "sha256": "c900c5ee71f1dbec7f629b44e2c7d3a20189fa8fd3ee0a1b3d5593d8a0f398b9"}, "downloads": -1, "filename": "xplant-0.1.1.tar.gz", "has_sig": false, "md5_digest": "781bb62a6bbe2bd08eeb585d4c45abce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5958, "upload_time": "2018-11-27T16:43:15", "upload_time_iso_8601": "2018-11-27T16:43:15.182533Z", "url": "https://files.pythonhosted.org/packages/da/47/8ea5aaefbac886bfb8e32bd29d273cf2e0628c9ddf5d711e951a1f3bafa0/xplant-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7a60b860c7ed40de979843aab5695e04", "sha256": "a102990ef147c0e19a2bed3532ffd7b78d9876fca9d3ebbff53e8133f5559941"}, "downloads": -1, "filename": "xplant-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a60b860c7ed40de979843aab5695e04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9237, "upload_time": "2018-12-07T15:22:04", "upload_time_iso_8601": "2018-12-07T15:22:04.045380Z", "url": "https://files.pythonhosted.org/packages/f1/16/a35e7eee65d7a67b3f97ed6cf4a8f36223aaacccfb5b93bc6614244d9dcd/xplant-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1910457d9e2ba1bef67f33ed3f409915", "sha256": "a87360ce2d12077589e09afa3c67515831d3b55dacfa0c77718ce4113c36f41e"}, "downloads": -1, "filename": "xplant-0.2.tar.gz", "has_sig": false, "md5_digest": "1910457d9e2ba1bef67f33ed3f409915", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6299, "upload_time": "2018-12-07T15:21:54", "upload_time_iso_8601": "2018-12-07T15:21:54.488541Z", "url": "https://files.pythonhosted.org/packages/d8/97/ab1a08d9b42f254f24d4e9355ce2ac5a4a8b2a80ffff6a093d486273c103/xplant-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d6b83dd4531301211188c914a9f11e4e", "sha256": "65a6e6846ff0a59ae41e8bd71b7107f39ac43e83f122d6ec75a6d94b67fda14d"}, "downloads": -1, "filename": "xplant-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d6b83dd4531301211188c914a9f11e4e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13927, "upload_time": "2018-12-10T22:57:19", "upload_time_iso_8601": "2018-12-10T22:57:19.200576Z", "url": "https://files.pythonhosted.org/packages/72/cd/aba124ac953808e225dcade8182a9571085100a81163749350a0b9b59abb/xplant-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fcfdb2031079fa66937e789472821a1d", "sha256": "0c99a5d098c5219eae80d8a3902960c1232efd328a0bc7613387454f709df41c"}, "downloads": -1, "filename": "xplant-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fcfdb2031079fa66937e789472821a1d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17335, "upload_time": "2018-12-12T21:46:15", "upload_time_iso_8601": "2018-12-12T21:46:15.877842Z", "url": "https://files.pythonhosted.org/packages/39/20/a411d958fc97e0734f76c7c443158a1c3a44ce91b976da0cd178e3698604/xplant-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56dae13abb86ac49e56fd7e6e902ba3f", "sha256": "a7eac6ff3c0a795788731c6ae8244db30ee293d8bdf993ee129fe23176727721"}, "downloads": -1, "filename": "xplant-0.3.0.tar.gz", "has_sig": false, "md5_digest": "56dae13abb86ac49e56fd7e6e902ba3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15226, "upload_time": "2018-12-12T21:46:12", "upload_time_iso_8601": "2018-12-12T21:46:12.091156Z", "url": "https://files.pythonhosted.org/packages/a7/55/312ae92a218871a3cf108623c60a148170f1c8132f7de361329d79f9eac3/xplant-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e1e3ca5c0fb9ceddcac8f72a39b58c47", "sha256": "2a57ccaa2b8396cf930e097373933e2c94ab38f019abf8ee85e53cf6f84473ec"}, "downloads": -1, "filename": "xplant-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1e3ca5c0fb9ceddcac8f72a39b58c47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17701, "upload_time": "2018-12-14T09:09:59", "upload_time_iso_8601": "2018-12-14T09:09:59.722006Z", "url": "https://files.pythonhosted.org/packages/2d/c2/ba1f83b57712bb593251a64c82abe83039796afbf5d3a18fe544e3a31ced/xplant-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a61eee1acc473c62ba3faba6a0e28984", "sha256": "3624d95fe2a4b3c6bfd693cd0b54a21787589b04bca09075f01e93b881dc1901"}, "downloads": -1, "filename": "xplant-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a61eee1acc473c62ba3faba6a0e28984", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16277, "upload_time": "2018-12-14T09:09:55", "upload_time_iso_8601": "2018-12-14T09:09:55.713121Z", "url": "https://files.pythonhosted.org/packages/1b/d8/85ae773e7ed18de69160da0a6f5b09f2d896ba346dc081d21373ab1b4b37/xplant-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0c0d0c192c583e41ed1f4ae6068ba4b5", "sha256": "61e6aadfcd2c32ffed3ff34b725ed785c814ff4ec68fabc6cb193d7b52eb0986"}, "downloads": -1, "filename": "xplant-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c0d0c192c583e41ed1f4ae6068ba4b5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17791, "upload_time": "2019-03-25T10:34:37", "upload_time_iso_8601": "2019-03-25T10:34:37.852221Z", "url": "https://files.pythonhosted.org/packages/c3/19/0af9ca40a9a2b2d4a9406d8fe2336f23d605834bd0d465186dfc5de50bbe/xplant-0.3.2-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c0d0c192c583e41ed1f4ae6068ba4b5", "sha256": "61e6aadfcd2c32ffed3ff34b725ed785c814ff4ec68fabc6cb193d7b52eb0986"}, "downloads": -1, "filename": "xplant-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c0d0c192c583e41ed1f4ae6068ba4b5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17791, "upload_time": "2019-03-25T10:34:37", "upload_time_iso_8601": "2019-03-25T10:34:37.852221Z", "url": "https://files.pythonhosted.org/packages/c3/19/0af9ca40a9a2b2d4a9406d8fe2336f23d605834bd0d465186dfc5de50bbe/xplant-0.3.2-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:24:36 2020"}