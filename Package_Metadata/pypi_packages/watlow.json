{"info": {"author": "Patrick Fuller", "author_email": "pat@numat-tech.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)", "Topic :: Scientific/Engineering :: Human Machine Interfaces"], "description": "# watlow\nPython driver and command-line tool for [Watlow EZ-Zone temperature controllers](https://www.watlow.com/en/products/controllers/temperature-and-process-controllers/ez-zone-pm-controller).\n\n<p align=\"center\">\n  <img src=\"https://www.watlow.com/-/media/images/products/new--controllers/integrated-multi-function/tp_pm_480.ashx\" />\n</p>\n\nInstallation\n============\n\n```\npip install watlow\n```\n\nUsage\n=====\n\n### Command Line\n\n```\n$ watlow /dev/ttyUSB0\n```\n\nThis returns a simple data structure.\n\n```\n{\n  \"actual\": 21.66,\n  \"setpoint\": 20.0\n}\n```\n\nYou can additionally use the `--set-setpoint` option to set a temperature setpoint.\n\nIf interacting with a Watlow RUI Gateway, the zone to get or set should be passed as a flag\n```\n$ watlow -z 1 192.168.1.101\n```\n\nSee `watlow --help` for more.\n\n### Python\n\n#### Single Controller\n\nFor a single temperature controller, the python interface is basic synchronous serial communication.\n\n```python\nimport watlow\n\ntc = watlow.TemperatureController('/dev/ttyUSB0')\n\ntc.set(30)\nprint(tc.get())\n```\n\nThe driver is designed to be fault tolerant over long polling, and should\nappropriately reconnect if its `IOError`s are managed. Here's an implementation\nwith standard long-poll exception handling. This should run until interrupted and\nthen exit cleanly.\n\n```python\nfrom time import sleep\nimport watlow\n\ntc = watlow.TemperatureController('/dev/ttyUSB0')\ntry:\n    while True:\n        try:\n            print(tc.get())\n        except IOError:\n            print('disconnected')\n        sleep(1)\nexcept KeyboardInterrupt:\n    pass\nfinally:\n    tc.close()\n```\n\n#### Gateway\n\nThe Gateway driver uses Python \u22653.5's async/await syntax to asynchronously communicate with\nthe gateway over ModBus-TCP.\n\n```python\nimport asyncio\nimport watlow\n\nasync def run():\n    async with watlow.Gateway('192.168.1.101') as gateway:\n        print(await gateway.get(1))\n\nasyncio.run(run())\n```\n\nAdditionally, there is a mock for the Gateway driver available at `watlow.mock.Gateway` for testing.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/numat/watlow/", "keywords": "", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "watlow", "package_url": "https://pypi.org/project/watlow/", "platform": "", "project_url": "https://pypi.org/project/watlow/", "project_urls": {"Homepage": "http://github.com/numat/watlow/"}, "release_url": "https://pypi.org/project/watlow/0.2.1/", "requires_dist": ["pymodbus (==2.2.0rc1)", "pyserial", "crcmod"], "requires_python": "", "summary": "Python driver for Watlow EZ-Zone temperature controllers.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>watlow</h1>\n<p>Python driver and command-line tool for <a href=\"https://www.watlow.com/en/products/controllers/temperature-and-process-controllers/ez-zone-pm-controller\" rel=\"nofollow\">Watlow EZ-Zone temperature controllers</a>.</p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1155ad0c3fb40f31cfd63827facd7e249f182122/68747470733a2f2f7777772e7761746c6f772e636f6d2f2d2f6d656469612f696d616765732f70726f64756374732f6e65772d2d636f6e74726f6c6c6572732f696e74656772617465642d6d756c74692d66756e6374696f6e2f74705f706d5f3438302e61736878\">\n</p>\n<h1>Installation</h1>\n<pre><code>pip install watlow\n</code></pre>\n<h1>Usage</h1>\n<h3>Command Line</h3>\n<pre><code>$ watlow /dev/ttyUSB0\n</code></pre>\n<p>This returns a simple data structure.</p>\n<pre><code>{\n  \"actual\": 21.66,\n  \"setpoint\": 20.0\n}\n</code></pre>\n<p>You can additionally use the <code>--set-setpoint</code> option to set a temperature setpoint.</p>\n<p>If interacting with a Watlow RUI Gateway, the zone to get or set should be passed as a flag</p>\n<pre><code>$ watlow -z 1 192.168.1.101\n</code></pre>\n<p>See <code>watlow --help</code> for more.</p>\n<h3>Python</h3>\n<h4>Single Controller</h4>\n<p>For a single temperature controller, the python interface is basic synchronous serial communication.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">watlow</span>\n\n<span class=\"n\">tc</span> <span class=\"o\">=</span> <span class=\"n\">watlow</span><span class=\"o\">.</span><span class=\"n\">TemperatureController</span><span class=\"p\">(</span><span class=\"s1\">'/dev/ttyUSB0'</span><span class=\"p\">)</span>\n\n<span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n</pre>\n<p>The driver is designed to be fault tolerant over long polling, and should\nappropriately reconnect if its <code>IOError</code>s are managed. Here's an implementation\nwith standard long-poll exception handling. This should run until interrupted and\nthen exit cleanly.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">import</span> <span class=\"nn\">watlow</span>\n\n<span class=\"n\">tc</span> <span class=\"o\">=</span> <span class=\"n\">watlow</span><span class=\"o\">.</span><span class=\"n\">TemperatureController</span><span class=\"p\">(</span><span class=\"s1\">'/dev/ttyUSB0'</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n        <span class=\"k\">except</span> <span class=\"ne\">IOError</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'disconnected'</span><span class=\"p\">)</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n    <span class=\"n\">tc</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h4>Gateway</h4>\n<p>The Gateway driver uses Python \u22653.5's async/await syntax to asynchronously communicate with\nthe gateway over ModBus-TCP.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">watlow</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">watlow</span><span class=\"o\">.</span><span class=\"n\">Gateway</span><span class=\"p\">(</span><span class=\"s1\">'192.168.1.101'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">gateway</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">gateway</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">())</span>\n</pre>\n<p>Additionally, there is a mock for the Gateway driver available at <code>watlow.mock.Gateway</code> for testing.</p>\n\n          </div>"}, "last_serial": 6670792, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d89749533069861225d64c65a5041910", "sha256": "f2e0d1027b7445ebdb3487238547ce21a6c219804e08dff51ba55e10b3d1b0ac"}, "downloads": -1, "filename": "watlow-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d89749533069861225d64c65a5041910", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12254, "upload_time": "2019-06-20T13:31:28", "upload_time_iso_8601": "2019-06-20T13:31:28.847796Z", "url": "https://files.pythonhosted.org/packages/3b/a4/6d1f03cadb0180e75a5ea8d15238284c22dd7e569e3f1efd38292754d687/watlow-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fadecae96824db66afcfe6402c175c6", "sha256": "d0f281eddccd75f3dd47f13cbd35bd022bc731e4d68ee0cc0832da263e3f21c6"}, "downloads": -1, "filename": "watlow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1fadecae96824db66afcfe6402c175c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4731, "upload_time": "2019-06-20T13:31:31", "upload_time_iso_8601": "2019-06-20T13:31:31.489150Z", "url": "https://files.pythonhosted.org/packages/e5/eb/72f306e61d8d64be427dec2423533de677c67b4083df139a2dd9095249df/watlow-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e97a5abb8e28dc84084152d3b0ef85a2", "sha256": "1f3078a389d4f624646f015e617fa8ff6dea7364835390a9eb0a7385e543dcc4"}, "downloads": -1, "filename": "watlow-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e97a5abb8e28dc84084152d3b0ef85a2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12260, "upload_time": "2019-06-25T22:17:10", "upload_time_iso_8601": "2019-06-25T22:17:10.926674Z", "url": "https://files.pythonhosted.org/packages/bf/72/3864576b9d675bde08685afe7399e46aa2bd9e44448664a625504040aabd/watlow-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4634c41f09007ba01c77794b369a592b", "sha256": "c191409aacaa22ec3bb586bfdedbd505f5bbc8a180ebd28f061f1136cafa0ef1"}, "downloads": -1, "filename": "watlow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4634c41f09007ba01c77794b369a592b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4736, "upload_time": "2019-06-25T22:17:12", "upload_time_iso_8601": "2019-06-25T22:17:12.142792Z", "url": "https://files.pythonhosted.org/packages/72/38/508260517d49f57bb8a8eb035527ddd34de4103a9e310fc0d817cc1d7da8/watlow-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "caa434e09a8f2956fe2168721ec295fc", "sha256": "c2db56dee16653700b1d9e864b1a72f4dbb90df28378efe67be0a78700feec2a"}, "downloads": -1, "filename": "watlow-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "caa434e09a8f2956fe2168721ec295fc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15321, "upload_time": "2020-02-20T21:14:32", "upload_time_iso_8601": "2020-02-20T21:14:32.085272Z", "url": "https://files.pythonhosted.org/packages/ac/28/25997056d55eec088f593553d4bd33a96da2afbf81b353f70efbde9c7eee/watlow-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a8224b7b801367cf574057395cf7761", "sha256": "ab4f95af08aaa2f90cae0e7617e76126248fca02773373d930a55667b9dd89e1"}, "downloads": -1, "filename": "watlow-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9a8224b7b801367cf574057395cf7761", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7100, "upload_time": "2020-02-20T21:14:33", "upload_time_iso_8601": "2020-02-20T21:14:33.591841Z", "url": "https://files.pythonhosted.org/packages/c8/91/73f363b36fd9ee2e6c5d3c86b6f8725d7733bbaf964f1990c94c5e5293e0/watlow-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fe4fd3a7cb2b94760b7909ae58bf60a4", "sha256": "e2db426a6b73b245c8deb9fba82c5a141e1e0cc81ecb75d74fc61f4ac7449cf6"}, "downloads": -1, "filename": "watlow-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fe4fd3a7cb2b94760b7909ae58bf60a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24661, "upload_time": "2020-02-20T21:32:23", "upload_time_iso_8601": "2020-02-20T21:32:23.822119Z", "url": "https://files.pythonhosted.org/packages/ba/f7/9b06183ff43e49b84414e1542efc793d56d4754af459eceee2f5954bfabf/watlow-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c282076019dd6038a0fd7b948ea80042", "sha256": "46a1811107a1499d2350c3674a90d79b8fcb37ddbf8d7e3c9371034884ebd66d"}, "downloads": -1, "filename": "watlow-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c282076019dd6038a0fd7b948ea80042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2020-02-20T21:32:25", "upload_time_iso_8601": "2020-02-20T21:32:25.303992Z", "url": "https://files.pythonhosted.org/packages/ef/4f/1a9ade682f321f81efbc20eb01ddc2c8b1d5c0f8e358dc19fb95aacc3aab/watlow-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe4fd3a7cb2b94760b7909ae58bf60a4", "sha256": "e2db426a6b73b245c8deb9fba82c5a141e1e0cc81ecb75d74fc61f4ac7449cf6"}, "downloads": -1, "filename": "watlow-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fe4fd3a7cb2b94760b7909ae58bf60a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24661, "upload_time": "2020-02-20T21:32:23", "upload_time_iso_8601": "2020-02-20T21:32:23.822119Z", "url": "https://files.pythonhosted.org/packages/ba/f7/9b06183ff43e49b84414e1542efc793d56d4754af459eceee2f5954bfabf/watlow-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c282076019dd6038a0fd7b948ea80042", "sha256": "46a1811107a1499d2350c3674a90d79b8fcb37ddbf8d7e3c9371034884ebd66d"}, "downloads": -1, "filename": "watlow-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c282076019dd6038a0fd7b948ea80042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2020-02-20T21:32:25", "upload_time_iso_8601": "2020-02-20T21:32:25.303992Z", "url": "https://files.pythonhosted.org/packages/ef/4f/1a9ade682f321f81efbc20eb01ddc2c8b1d5c0f8e358dc19fb95aacc3aab/watlow-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:05 2020"}