{"info": {"author": "Scott Sievert", "author_email": "dev@stsievert.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Mathematics"], "description": "\n## objopt\nThis library provides object oriented optimization. This allows...\n\n1. using theoretic values (such as the strong convexity parameter)\n2. object-oriented definitions, both for models and optimization algorithms. This allows...\n    * interacting with the optimization as an object. Want to compute some\n      value partway through? Want to change the values as time goes on?\n    * getting results intermediately (or in the presence of a keyboard\n      interrept)\n    * having callbacks, etc\n\nA typical example:\n\n``` python\ndef get_stats():\n    # ...\n\nmodel = Model()\nopt = SGD(model.loss)\n\ndata = []\nfor _ in range(10):\n    opt.step(steps=10)\n    data += [get_stats(model)]\n```\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stsievert/objopt", "keywords": "optimization", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "objopt", "package_url": "https://pypi.org/project/objopt/", "platform": "", "project_url": "https://pypi.org/project/objopt/", "project_urls": {"Homepage": "https://github.com/stsievert/objopt"}, "release_url": "https://pypi.org/project/objopt/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Object oriented optimization", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>## objopt<br>This library provides object oriented optimization. This allows...<br><br>1. using theoretic values (such as the strong convexity parameter)<br>2. object-oriented definitions, both for models and optimization algorithms. This allows...<br>    * interacting with the optimization as an object. Want to compute some<br>      value partway through? Want to change the values as time goes on?<br>    * getting results intermediately (or in the presence of a keyboard<br>      interrept)<br>    * having callbacks, etc<br><br>A typical example:<br><br>``` python<br>def get_stats():<br>    # ...<br><br>model = Model()<br>opt = SGD(model.loss)<br><br>data = []<br>for _ in range(10):<br>    opt.step(steps=10)<br>    data += [get_stats(model)]<br>```<br><br>\n          </div>"}, "last_serial": 4404497, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "c4008fb5021cfd0857c0fc318b287f08", "sha256": "00c6633602306f6b1d5a18ac5db6282cc9a4e46a500789409d5ef22f7234bfb3"}, "downloads": -1, "filename": "objopt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c4008fb5021cfd0857c0fc318b287f08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4256, "upload_time": "2018-10-23T01:56:50", "upload_time_iso_8601": "2018-10-23T01:56:50.323206Z", "url": "https://files.pythonhosted.org/packages/07/f4/7e53dc1550cdfc463cd3f5cc5fb862dd0ac35e57009018b16964815911e7/objopt-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4008fb5021cfd0857c0fc318b287f08", "sha256": "00c6633602306f6b1d5a18ac5db6282cc9a4e46a500789409d5ef22f7234bfb3"}, "downloads": -1, "filename": "objopt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c4008fb5021cfd0857c0fc318b287f08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4256, "upload_time": "2018-10-23T01:56:50", "upload_time_iso_8601": "2018-10-23T01:56:50.323206Z", "url": "https://files.pythonhosted.org/packages/07/f4/7e53dc1550cdfc463cd3f5cc5fb862dd0ac35e57009018b16964815911e7/objopt-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:47 2020"}