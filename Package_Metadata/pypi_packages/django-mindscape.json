{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: Implementation :: CPython"], "description": "django-mindscape\n========================================\n\n- (todo: gentle introduction)\n- (todo: add information about use case)\n\nfeatures\n----------------------------------------\n\n- collecting information about dependencies of models (model -> parent)\n- collecting information about reverse dependencies of models (model -> [children])\n- listing model with dependencies-considered order.\n\n(`dependencies-considered order` means, when i < j, models[i] doesn't depends on models[j])\n\nhow to use\n----------------------------------------\n\n.. code-block:: python\n\n    from django_mindscape import ModelMapProvider, Walker, Brain\n    from django.apps import apps\n\n    walker = Walker(apps.get_models(), brain=Brain())\n    p = ModelMapProvider(walker)\n\n    \"\"\"\n    when ParentModel : YourModel = 1 : N\n    and OtherModel is existed.\n    \"\"\"\n\n    # model dependencies (bottom up)\n    for relation in p.dependencies[YourModel].dependencies:\n        print(relation.from_.model)  # <YourModel>\n        print(relation.to.model)  # <ParentModel>\n        print(relation.type)  # relation type (candidates: 11, 1M, MM)\n\n    # reverse dependencies (top down)\n    for rnode in p.reverse_dependencies[ParentModel].dependencies:\n        print(rnode.node.model)  # <YourModel>\n\n    # clustered model list\n    for cluster in p.cluster_models:  # [[ParentModel, YourModel], [OtherModel]]\n        for model in cluster:\n            print(model)\n\n    # ordered model list\n    for model in p.ordered_models:  # [ParentModel, YourModel, OtherModel]\n        print(model)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/podhmo/django-mindscape", "keywords": "", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-mindscape", "package_url": "https://pypi.org/project/django-mindscape/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-mindscape/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/podhmo/django-mindscape"}, "release_url": "https://pypi.org/project/django-mindscape/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "a library traversing django models", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <ul>\n<li>(todo: gentle introduction)</li>\n<li>(todo: add information about use case)</li>\n</ul>\n<div id=\"features\">\n<h2>features</h2>\n<ul>\n<li>collecting information about dependencies of models (model -&gt; parent)</li>\n<li>collecting information about reverse dependencies of models (model -&gt; [children])</li>\n<li>listing model with dependencies-considered order.</li>\n</ul>\n<p>(<cite>dependencies-considered order</cite> means, when i &lt; j, models[i] doesn\u2019t depends on models[j])</p>\n</div>\n<div id=\"how-to-use\">\n<h2>how to use</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_mindscape</span> <span class=\"kn\">import</span> <span class=\"n\">ModelMapProvider</span><span class=\"p\">,</span> <span class=\"n\">Walker</span><span class=\"p\">,</span> <span class=\"n\">Brain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.apps</span> <span class=\"kn\">import</span> <span class=\"n\">apps</span>\n\n<span class=\"n\">walker</span> <span class=\"o\">=</span> <span class=\"n\">Walker</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_models</span><span class=\"p\">(),</span> <span class=\"n\">brain</span><span class=\"o\">=</span><span class=\"n\">Brain</span><span class=\"p\">())</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">ModelMapProvider</span><span class=\"p\">(</span><span class=\"n\">walker</span><span class=\"p\">)</span>\n\n<span class=\"sd\">\"\"\"\nwhen ParentModel : YourModel = 1 : N\nand OtherModel is existed.\n\"\"\"</span>\n\n<span class=\"c1\"># model dependencies (bottom up)</span>\n<span class=\"k\">for</span> <span class=\"n\">relation</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"p\">[</span><span class=\"n\">YourModel</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">relation</span><span class=\"o\">.</span><span class=\"n\">from_</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;YourModel&gt;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">relation</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;ParentModel&gt;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">relation</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">)</span>  <span class=\"c1\"># relation type (candidates: 11, 1M, MM)</span>\n\n<span class=\"c1\"># reverse dependencies (top down)</span>\n<span class=\"k\">for</span> <span class=\"n\">rnode</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">reverse_dependencies</span><span class=\"p\">[</span><span class=\"n\">ParentModel</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rnode</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;YourModel&gt;</span>\n\n<span class=\"c1\"># clustered model list</span>\n<span class=\"k\">for</span> <span class=\"n\">cluster</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">cluster_models</span><span class=\"p\">:</span>  <span class=\"c1\"># [[ParentModel, YourModel], [OtherModel]]</span>\n    <span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">cluster</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ordered model list</span>\n<span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">ordered_models</span><span class=\"p\">:</span>  <span class=\"c1\"># [ParentModel, YourModel, OtherModel]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1452959, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "41b065058f14961dab1304699271a574", "sha256": "dca4f8eb79d19c0beaf6c3461163360284faf3424e4d14050c621cfe574b1c7d"}, "downloads": -1, "filename": "django-mindscape-0.1.tar.gz", "has_sig": false, "md5_digest": "41b065058f14961dab1304699271a574", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4150, "upload_time": "2015-02-28T14:05:39", "upload_time_iso_8601": "2015-02-28T14:05:39.600826Z", "url": "https://files.pythonhosted.org/packages/e7/f8/71b9169c1b5deb32b08d7d1e64a225eece2fb5cb125d23434de36bcd7a81/django-mindscape-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "83311279051c3c428969007b1e46d66d", "sha256": "8b48834849d6ee6fc6a582a09c7edc8a954b185d7a3009658f044998eea304f5"}, "downloads": -1, "filename": "django-mindscape-0.1.1.tar.gz", "has_sig": false, "md5_digest": "83311279051c3c428969007b1e46d66d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4750, "upload_time": "2015-02-28T14:39:55", "upload_time_iso_8601": "2015-02-28T14:39:55.697878Z", "url": "https://files.pythonhosted.org/packages/c5/c8/d5ae733ed503ad019ac34ace36f2cf4e1806fa8d3fc93d85e04015550df4/django-mindscape-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d1beddde08a5f0e3e1f68a3864ab554f", "sha256": "19c0eefc1bbd7aaa7534e0a82a1e467541ba290a3e1501fac36b10b5f900fbbd"}, "downloads": -1, "filename": "django-mindscape-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d1beddde08a5f0e3e1f68a3864ab554f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4770, "upload_time": "2015-02-28T14:43:28", "upload_time_iso_8601": "2015-02-28T14:43:28.253702Z", "url": "https://files.pythonhosted.org/packages/91/91/ecb85e587ecf3eb2bb987ecc2676165a975f49cdc3befb3d7aa7f89916c0/django-mindscape-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b64c5fa16481994d328de89de322d7db", "sha256": "7919e25cc1cfed88cd36fe59ff709ed1d1ebb76094f61f1a9dfc046e3f8758f2"}, "downloads": -1, "filename": "django-mindscape-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b64c5fa16481994d328de89de322d7db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5119, "upload_time": "2015-03-01T14:43:40", "upload_time_iso_8601": "2015-03-01T14:43:40.240720Z", "url": "https://files.pythonhosted.org/packages/35/77/53c0056325213fcf565ace14c82438f7e7c715e2088ea7166a7b30cee7b4/django-mindscape-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "57d1e496bcfc91b969c0bb167a40737d", "sha256": "4c35ac243140792a9bdb8b6f8702dc3e1863db7d6b7ab2f64a31fde98aeed9b9"}, "downloads": -1, "filename": "django-mindscape-0.2.1.tar.gz", "has_sig": false, "md5_digest": "57d1e496bcfc91b969c0bb167a40737d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5121, "upload_time": "2015-03-01T15:46:46", "upload_time_iso_8601": "2015-03-01T15:46:46.917987Z", "url": "https://files.pythonhosted.org/packages/97/8e/fab55772efab4a36a9ce6d5302c46cd546db30d31d7543ec91db27fe0d2c/django-mindscape-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4912982418af949d849cb330f5d6c405", "sha256": "4d9606e91db131c53efbe0bf13b91d0debdfcde447f26ae484a1ed3d40c46f4b"}, "downloads": -1, "filename": "django-mindscape-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4912982418af949d849cb330f5d6c405", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7113, "upload_time": "2015-03-08T11:17:19", "upload_time_iso_8601": "2015-03-08T11:17:19.589795Z", "url": "https://files.pythonhosted.org/packages/5d/74/abe1a5716922feaab61d59d592c6cfe011c3bdebfcb2cf4abac3b3d69d5a/django-mindscape-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4912982418af949d849cb330f5d6c405", "sha256": "4d9606e91db131c53efbe0bf13b91d0debdfcde447f26ae484a1ed3d40c46f4b"}, "downloads": -1, "filename": "django-mindscape-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4912982418af949d849cb330f5d6c405", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7113, "upload_time": "2015-03-08T11:17:19", "upload_time_iso_8601": "2015-03-08T11:17:19.589795Z", "url": "https://files.pythonhosted.org/packages/5d/74/abe1a5716922feaab61d59d592c6cfe011c3bdebfcb2cf4abac3b3d69d5a/django-mindscape-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:04 2020"}