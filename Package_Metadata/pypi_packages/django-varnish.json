{"info": {"author": "Justin Quick", "author_email": "justquick@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Django Varnish\n================\n\nVarnish is a state-of-the-art, high-performance HTTP accelerator.\nFor more information checkout `Varnish Site <http://varnish.projects.linpro.no/>`_\n\nDjango Varnish works with Varnish server(s) to manage caching of object pages.\nIt allows you to monitor certain models and when they are updated,\nDjango Varnish will purge the model's absolute_url on your frontend(s).\nThis ensures that object detail pages are served blazingly fast and are always up to date.\nYou may also go in and manually tweak things (such as your VCL configuration) using a management command. \n\nDjango Varnish requires the `varnish python bindings <http://github.com/justquick/python-varnish>`_\n\nPut ``varnishapp`` in your ``INSTALLED_APPS`` then set a few more settings.\n\n``VARNISH_WATCHED_MODELS`` is a list of installed models whose absolute_urls you want to purge from your\nVarnish cache upon saving. Example: ``('auth.user','profiles.profile')``\n\n``VARNISH_MANAGMENT_ADDRS`` is a list of Varnish cache addresses (containing their management ports).\nExample ``('server1:6082','server2:6082')``\n\n\nThe management command ``varnishmgt`` is also now available and just blindly executes passes commands and prints the results.\nExample ``$ ./manage.py varnishmgt purge_url \"/\"``", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://opensource.washingtontimes.com/projects/django-varnish/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-varnish", "package_url": "https://pypi.org/project/django-varnish/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-varnish/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://opensource.washingtontimes.com/projects/django-varnish/"}, "release_url": "https://pypi.org/project/django-varnish/0.1/", "requires_dist": null, "requires_python": null, "summary": "Integration between Django and the Varnish HTTP accelerator using the management port using telnet", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Varnish is a state-of-the-art, high-performance HTTP accelerator.\nFor more information checkout <a href=\"http://varnish.projects.linpro.no/\" rel=\"nofollow\">Varnish Site</a></p>\n<p>Django Varnish works with Varnish server(s) to manage caching of object pages.\nIt allows you to monitor certain models and when they are updated,\nDjango Varnish will purge the model\u2019s absolute_url on your frontend(s).\nThis ensures that object detail pages are served blazingly fast and are always up to date.\nYou may also go in and manually tweak things (such as your VCL configuration) using a management command.</p>\n<p>Django Varnish requires the <a href=\"http://github.com/justquick/python-varnish\" rel=\"nofollow\">varnish python bindings</a></p>\n<p>Put <tt>varnishapp</tt> in your <tt>INSTALLED_APPS</tt> then set a few more settings.</p>\n<p><tt>VARNISH_WATCHED_MODELS</tt> is a list of installed models whose absolute_urls you want to purge from your\nVarnish cache upon saving. Example: <tt><span class=\"pre\">('auth.user','profiles.profile')</span></tt></p>\n<p><tt>VARNISH_MANAGMENT_ADDRS</tt> is a list of Varnish cache addresses (containing their management ports).\nExample <tt><span class=\"pre\">('server1:6082','server2:6082')</span></tt></p>\n<p>The management command <tt>varnishmgt</tt> is also now available and just blindly executes passes commands and prints the results.\nExample <tt>$ ./manage.py varnishmgt purge_url \"/\"</tt></p>\n\n          </div>"}, "last_serial": 140830, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 00:52:04 2020"}