{"info": {"author": "Djangonauts Organization", "author_email": "django-hstore@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=============\ndjango-hstore\n=============\n\n.. image:: https://travis-ci.org/djangonauts/django-hstore.png\n   :target: https://travis-ci.org/djangonauts/django-hstore\n\n.. image:: https://coveralls.io/repos/djangonauts/django-hstore/badge.png\n  :target: https://coveralls.io/r/djangonauts/django-hstore\n\n.. image:: https://landscape.io/github/djangonauts/django-hstore/master/landscape.png\n   :target: https://landscape.io/github/djangonauts/django-hstore/master\n   :alt: Code Health\n\n.. image:: https://requires.io/github/djangonauts/django-hstore/requirements.png?branch=master\n   :target: https://requires.io/github/djangonauts/django-hstore/requirements/?branch=master\n   :alt: Requirements Status\n\n.. image:: https://badge.fury.io/py/django-hstore.png\n    :target: https://pypi.python.org/pypi/django-hstore\n\n.. image:: https://pypip.in/d/django-hstore/badge.png\n   :target: https://pypi.python.org/pypi/django-hstore\n\n------------\n\nYou need **dynamic columns** in your tables. What do you do?\n\n- Create lots of tables to handle it. Nice, now you\u2019ll need more models and lots of additional sqls. Insertion and selection will be slow as hell.\n- Use a **noSQL** database just for this issue. **Good luck**.\n- Create a serialized column. Nice, insertion will be fine, and reading data from a record too. But, what if you have a condition in your select that includes serialized data? Yeah, regular expressions.\n\n------------\n\nDocumentation_ - `Mailing List`_\n\n.. _Documentation: http://djangonauts.github.io/django-hstore/\n.. _`Mailing List`: https://groups.google.com/forum/#!forum/django-hstore\n\n------------\n\nProjects using this package\n---------------------------\n\n- `django-rest-framework-hstore <https://github.com/djangonauts/django-rest-framework-hstore>`__: **django-rest-framework** tools for **django-hstore**\n- `Nodeshot <https://github.com/ninuxorg/nodeshot>`__: extensible django web application for management of community-led georeferenced data - some features of **django-hstore**, like the ``schema-mode`` have been developed for this project", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/djangonauts/django-hstore/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/djangonauts/django-hstore", "keywords": "django,hstore,schemaless", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "amitu-hstore", "package_url": "https://pypi.org/project/amitu-hstore/", "platform": "Platform Indipendent", "project_url": "https://pypi.org/project/amitu-hstore/", "project_urls": {"Download": "https://github.com/djangonauts/django-hstore/releases", "Homepage": "https://github.com/djangonauts/django-hstore"}, "release_url": "https://pypi.org/project/amitu-hstore/1.3.5/", "requires_dist": null, "requires_python": null, "summary": "Bring schemaless PostgreSQL (HStore) in Django", "version": "1.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/djangonauts/django-hstore\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/djangonauts/django-hstore.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5115369920bb8664b58c9a32d0470052590b604/68747470733a2f2f7472617669732d63692e6f72672f646a616e676f6e617574732f646a616e676f2d6873746f72652e706e67\"></a>\n<a href=\"https://coveralls.io/r/djangonauts/django-hstore\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/djangonauts/django-hstore/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ded7ecab812d45fd0cd0017f38210b0eedcb4e6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f646a616e676f6e617574732f646a616e676f2d6873746f72652f62616467652e706e67\"></a>\n<a href=\"https://landscape.io/github/djangonauts/django-hstore/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d2096b3d2833e11a28f32aa3eca74e91ab474a4/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f646a616e676f6e617574732f646a616e676f2d6873746f72652f6d61737465722f6c616e6473636170652e706e67\"></a>\n<a href=\"https://requires.io/github/djangonauts/django-hstore/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cba049a2673568d718e9876c0062bcef274bf69f/68747470733a2f2f72657175697265732e696f2f6769746875622f646a616e676f6e617574732f646a616e676f2d6873746f72652f726571756972656d656e74732e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/django-hstore\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-hstore.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0efed8249b17376ce58dbdfc7ca008daa62fc95a/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d6873746f72652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/django-hstore\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/django-hstore/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f2fae67fa7c17e8db343faf65121575b7adb428/68747470733a2f2f70797069702e696e2f642f646a616e676f2d6873746f72652f62616467652e706e67\"></a>\n<hr class=\"docutils\">\n<p>You need <strong>dynamic columns</strong> in your tables. What do you do?</p>\n<ul>\n<li>Create lots of tables to handle it. Nice, now you\u2019ll need more models and lots of additional sqls. Insertion and selection will be slow as hell.</li>\n<li>Use a <strong>noSQL</strong> database just for this issue. <strong>Good luck</strong>.</li>\n<li>Create a serialized column. Nice, insertion will be fine, and reading data from a record too. But, what if you have a condition in your select that includes serialized data? Yeah, regular expressions.</li>\n</ul>\n<hr class=\"docutils\">\n<p><a href=\"http://djangonauts.github.io/django-hstore/\" rel=\"nofollow\">Documentation</a> - <a href=\"https://groups.google.com/forum/#!forum/django-hstore\" rel=\"nofollow\">Mailing List</a></p>\n<hr class=\"docutils\">\n<div id=\"projects-using-this-package\">\n<h2>Projects using this package</h2>\n<ul>\n<li><a href=\"https://github.com/djangonauts/django-rest-framework-hstore\" rel=\"nofollow\">django-rest-framework-hstore</a>: <strong>django-rest-framework</strong> tools for <strong>django-hstore</strong></li>\n<li><a href=\"https://github.com/ninuxorg/nodeshot\" rel=\"nofollow\">Nodeshot</a>: extensible django web application for management of community-led georeferenced data - some features of <strong>django-hstore</strong>, like the <tt><span class=\"pre\">schema-mode</span></tt> have been developed for this project</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1401642, "releases": {"1.3.5": [{"comment_text": "", "digests": {"md5": "2aad172492cc979ffd31b36c1dc92e48", "sha256": "43b81e9ee69e1c0c0a865483fb8dd38fce38e897b72470c012e3ba4423ce2575"}, "downloads": -1, "filename": "amitu-hstore-1.3.5.tar.gz", "has_sig": false, "md5_digest": "2aad172492cc979ffd31b36c1dc92e48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29671, "upload_time": "2015-01-29T14:52:14", "upload_time_iso_8601": "2015-01-29T14:52:14.474777Z", "url": "https://files.pythonhosted.org/packages/e2/51/bdc211e4adfda5ad62f88436007c70618f360887d0a04df077935e65fc80/amitu-hstore-1.3.5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6f4d7ebfaea01886da21aa5da93291f", "sha256": "11e0331155d37e351ff24bb0bac14b4a0d5256a7e0ef40c90e0613c6d7a75010"}, "downloads": -1, "filename": "amitu-hstore-1.3.5.zip", "has_sig": false, "md5_digest": "e6f4d7ebfaea01886da21aa5da93291f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42218, "upload_time": "2015-01-29T14:52:18", "upload_time_iso_8601": "2015-01-29T14:52:18.431797Z", "url": "https://files.pythonhosted.org/packages/6c/c8/a4e91e52304f5e77822137f1b0b83b154b7fe1a89c671e9cc613c30159a2/amitu-hstore-1.3.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2aad172492cc979ffd31b36c1dc92e48", "sha256": "43b81e9ee69e1c0c0a865483fb8dd38fce38e897b72470c012e3ba4423ce2575"}, "downloads": -1, "filename": "amitu-hstore-1.3.5.tar.gz", "has_sig": false, "md5_digest": "2aad172492cc979ffd31b36c1dc92e48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29671, "upload_time": "2015-01-29T14:52:14", "upload_time_iso_8601": "2015-01-29T14:52:14.474777Z", "url": "https://files.pythonhosted.org/packages/e2/51/bdc211e4adfda5ad62f88436007c70618f360887d0a04df077935e65fc80/amitu-hstore-1.3.5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6f4d7ebfaea01886da21aa5da93291f", "sha256": "11e0331155d37e351ff24bb0bac14b4a0d5256a7e0ef40c90e0613c6d7a75010"}, "downloads": -1, "filename": "amitu-hstore-1.3.5.zip", "has_sig": false, "md5_digest": "e6f4d7ebfaea01886da21aa5da93291f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42218, "upload_time": "2015-01-29T14:52:18", "upload_time_iso_8601": "2015-01-29T14:52:18.431797Z", "url": "https://files.pythonhosted.org/packages/6c/c8/a4e91e52304f5e77822137f1b0b83b154b7fe1a89c671e9cc613c30159a2/amitu-hstore-1.3.5.zip", "yanked": false}], "timestamp": "Thu May  7 18:18:21 2020"}