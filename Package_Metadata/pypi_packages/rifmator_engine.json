{"info": {"author": "AlexanderMamaev", "author_email": "alxmamaev@mail.ru", "bugtrack_url": null, "classifiers": [], "description": "===============\r\nRifmator Engine\r\n===============\r\n\r\nThis is a small module for Python that allows you to find the rhyme to established Russian word.\r\n\r\nWorking with module\r\n===================\r\n1) Search rhyme the word\r\n------------------------\r\n Search rhymes is the method of find_rhyme class Rifmator. To search, simply call this method an instance of the class Rifmator, and pass as a parameter remueve word. If the rhyme is not found will return None, otherwise return a list of rhymes. \r\n **P. S:** If the rhyme is not found poprobute to indicate the emphasis in the word upper case the stressed vowel, because the word is not found in the dictionary and it was not possible to calculate the stress machine.\r\n\r\n2) Adding words to the dictionary\r\n---------------------------------\r\n If you need to add a new word to the dictionary, use the add_word method in class Rifmator. In the entered word must include the indication of stress of the upper register of the stressed vowel. After calling the function it will return True or False depending on success or failure adding to the dictionary, respectively.\r\n\r\n3) Save a dynamic dictionary in a file\r\n---------------------------------------------\r\n All actions happen with a dictionary in memory, then there is work with a dynamic dictionary. If you want something to change in the dictionary had acted upon the next startup use the method save_dicts class Rifmator.\r\n\r\n5) configuration Module\r\n-----------------------\r\n All module settings are in the file config.py. The following changes are available:\r\n\r\n* rhymes_dict - Path to head points rhyming dictionary\r\n* ling_dict - Path to file-linguistic dictionary\r\n* use_wiki - whether to Use linguistical studies in the analysis of the word Wiktionary (requires Internet connection)\r\n* learning - Auto-learning of words for the introduction\r\n\r\nThe full version of the documentation read: https://github.com/alxmamaev/Rifmator_Engine", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "rifmator_engine", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "rifmator_engine", "package_url": "https://pypi.org/project/rifmator_engine/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rifmator_engine/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/rifmator_engine/1.0/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a small module for Python that allows you to find the rhyme to established Russian word.</p>\n<div id=\"working-with-module\">\n<h2>Working with module</h2>\n<div id=\"search-rhyme-the-word\">\n<h3>1) Search rhyme the word</h3>\n<blockquote>\nSearch rhymes is the method of find_rhyme class Rifmator. To search, simply call this method an instance of the class Rifmator, and pass as a parameter remueve word. If the rhyme is not found will return None, otherwise return a list of rhymes.\n<strong>P. S:</strong> If the rhyme is not found poprobute to indicate the emphasis in the word upper case the stressed vowel, because the word is not found in the dictionary and it was not possible to calculate the stress machine.</blockquote>\n</div>\n<div id=\"adding-words-to-the-dictionary\">\n<h3>2) Adding words to the dictionary</h3>\n<blockquote>\nIf you need to add a new word to the dictionary, use the add_word method in class Rifmator. In the entered word must include the indication of stress of the upper register of the stressed vowel. After calling the function it will return True or False depending on success or failure adding to the dictionary, respectively.</blockquote>\n</div>\n<div id=\"save-a-dynamic-dictionary-in-a-file\">\n<h3>3) Save a dynamic dictionary in a file</h3>\n<blockquote>\nAll actions happen with a dictionary in memory, then there is work with a dynamic dictionary. If you want something to change in the dictionary had acted upon the next startup use the method save_dicts class Rifmator.</blockquote>\n</div>\n<div id=\"configuration-module\">\n<h3>5) configuration Module</h3>\n<blockquote>\nAll module settings are in the file config.py. The following changes are available:</blockquote>\n<ul>\n<li>rhymes_dict - Path to head points rhyming dictionary</li>\n<li>ling_dict - Path to file-linguistic dictionary</li>\n<li>use_wiki - whether to Use linguistical studies in the analysis of the word Wiktionary (requires Internet connection)</li>\n<li>learning - Auto-learning of words for the introduction</li>\n</ul>\n<p>The full version of the documentation read: <a href=\"https://github.com/alxmamaev/Rifmator_Engine\" rel=\"nofollow\">https://github.com/alxmamaev/Rifmator_Engine</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2181716, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "10573fafcfcce6ce0f919b808586cfc4", "sha256": "9ae5404f730d7c557601200e42a5f39b76afe04882efe6a630f5c11b5bedb81f"}, "downloads": -1, "filename": "rifmator_engine-1.0.zip", "has_sig": false, "md5_digest": "10573fafcfcce6ce0f919b808586cfc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3115, "upload_time": "2016-06-22T17:44:38", "upload_time_iso_8601": "2016-06-22T17:44:38.024048Z", "url": "https://files.pythonhosted.org/packages/bc/f7/193b96e9239d4bf9144c3d76e1729c2b6d20c9947d7f3a5aecd67c759e60/rifmator_engine-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10573fafcfcce6ce0f919b808586cfc4", "sha256": "9ae5404f730d7c557601200e42a5f39b76afe04882efe6a630f5c11b5bedb81f"}, "downloads": -1, "filename": "rifmator_engine-1.0.zip", "has_sig": false, "md5_digest": "10573fafcfcce6ce0f919b808586cfc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3115, "upload_time": "2016-06-22T17:44:38", "upload_time_iso_8601": "2016-06-22T17:44:38.024048Z", "url": "https://files.pythonhosted.org/packages/bc/f7/193b96e9239d4bf9144c3d76e1729c2b6d20c9947d7f3a5aecd67c759e60/rifmator_engine-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:02:42 2020"}