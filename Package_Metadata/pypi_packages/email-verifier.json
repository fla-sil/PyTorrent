{"info": {"author": "Whois API, Inc.", "author_email": "support@whoisxmlapi.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Utilities"], "description": "python-email-verifier\n===================\n\nThe simplest possible way to verify an email address in Python.\n\nMeta\n----\n\n- Author: WHOIS API, Inc.\n- Email: support@whoisxmlapi.com\n- Site: https://emailverification.whoisxmlapi.com/\n\n\nPrerequisites\n-------------\n\nTo use this library, you'll need to create a free Email Verification API account:\nhttps://emailverification.whoisxmlapi.com/\n\nIf you haven't done this yet, please do so now.\n\n\nDocumentation\n-------------\n\nDocumentation available `here <https://emailverification.whoisxmlapi.com/docs>`_.\n\nInstallation\n------------\n\nTo install ``email-verifier`` using `pypi <https://pypi.org/>`_, simply run:\n\n.. code-block:: console\n\n    $ pip install email-verifier\n\nIn the root of your project directory.\n\n\nUsage\n-----\n\nOnce you have `email-verified` installed, you can use it to easily verify any\nemail address.\n\n\n.. code-block:: python\n\n    from emailverifier import Client\n    from emailverifier import exceptions\n\n    client = Client('Your-api-key')\n\n    try:\n        data = client.get(\"support@whoisxmlapi.com\")\n    except exceptions.HttpException:\n        # If you get here, it means service returned HTTP error code\n        pass\n    except exceptions.GeneralException:\n        # If you get here, it means you cannot connect to the service\n        pass\n    except exceptions.UndefinedVariableException:\n        # If you get here, it means you forgot to specify the API key\n        pass\n    except exceptions.InvalidArgumentException:\n        # If you get here, it means you specified invalid argument\n        # (options should be a dictionary)\n        pass\n    except:\n        pass\n        # Something else happened related. Maybe you hit CTRL-C\n        # while the program was running, the kernel is killing your process, or\n        # something else all together.\n\n    print(data)\n\n    # Use data.json_string to get raw data in JSON.\n    # You can access any response field as a class property\n    # by converting field name from \"camelCase\" to \"snake_case\"\n    print(\"Email address: \" + data.email_address)\n    print(\"Format: \" + str(data.format_check))\n    print(\"DNS: \" + str(data.dns_check))\n    print(\"SMTP: \" + str(data.smtp_check))\n    print(\"Catch all: \" + str(data.catch_all_check))\n    print(\"Disposable: \" + str(data.disposable_check))\n    print(\"Free: \" + str(data.free_check))\n    print(\"Last audit date: \" + str(data.audit.audit_updated_date))\n\nHere's the sort of data you might get back when performing a email verification\nrequest:\n\n.. code-block:: json\n\n    {\n      \"emailAddress\": \"support@whoisxmlapi.com\",\n      \"formatCheck\": \"true\",\n      \"smtpCheck\": \"true\",\n      \"dnsCheck\": \"true\",\n      \"freeCheck\": \"false\",\n      \"disposableCheck\": \"false\",\n      \"catchAllCheck\": \"true\",\n      \"mxRecords\": [\n        \"ALT1.ASPMX.L.GOOGLE.com\",\n        \"ALT2.ASPMX.L.GOOGLE.com\",\n        \"ASPMX.L.GOOGLE.com\",\n        \"ASPMX2.GOOGLEMAIL.com\",\n        \"ASPMX3.GOOGLEMAIL.com\",\n        \"mx.yandex.net\"\n      ],\n      \"audit\": {\n        \"auditCreatedDate\": \"2018-04-19 18:12:45.000 UTC\",\n        \"auditUpdatedDate\": \"2018-04-19 18:12:45.000 UTC\"\n      }\n    }\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/whois-api-llc/python-email-verifier", "keywords": "email,verification,email verifier,api,email verification api", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "email-verifier", "package_url": "https://pypi.org/project/email-verifier/", "platform": "", "project_url": "https://pypi.org/project/email-verifier/", "project_urls": {"Homepage": "https://github.com/whois-api-llc/python-email-verifier"}, "release_url": "https://pypi.org/project/email-verifier/1.0.0/", "requires_dist": ["future", "python-dateutil", "requests", "mock; extra == 'dev'", "tox; extra == 'dev'", "pytest; extra == 'dev'"], "requires_python": "", "summary": "Python client library for Email Verification API.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            python-email-verifier<br>===================<br><br>The simplest possible way to verify an email address in Python.<br><br>Meta<br>----<br><br>- Author: WHOIS API, Inc.<br>- Email: support@whoisxmlapi.com<br>- Site: https://emailverification.whoisxmlapi.com/<br><br><br>Prerequisites<br>-------------<br><br>To use this library, you'll need to create a free Email Verification API account:<br>https://emailverification.whoisxmlapi.com/<br><br>If you haven't done this yet, please do so now.<br><br><br>Documentation<br>-------------<br><br>Documentation available `here &lt;https://emailverification.whoisxmlapi.com/docs&gt;`_.<br><br>Installation<br>------------<br><br>To install ``email-verifier`` using `pypi &lt;https://pypi.org/&gt;`_, simply run:<br><br>.. code-block:: console<br><br>    $ pip install email-verifier<br><br>In the root of your project directory.<br><br><br>Usage<br>-----<br><br>Once you have `email-verified` installed, you can use it to easily verify any<br>email address.<br><br><br>.. code-block:: python<br><br>    from emailverifier import Client<br>    from emailverifier import exceptions<br><br>    client = Client('Your-api-key')<br><br>    try:<br>        data = client.get(\"support@whoisxmlapi.com\")<br>    except exceptions.HttpException:<br>        # If you get here, it means service returned HTTP error code<br>        pass<br>    except exceptions.GeneralException:<br>        # If you get here, it means you cannot connect to the service<br>        pass<br>    except exceptions.UndefinedVariableException:<br>        # If you get here, it means you forgot to specify the API key<br>        pass<br>    except exceptions.InvalidArgumentException:<br>        # If you get here, it means you specified invalid argument<br>        # (options should be a dictionary)<br>        pass<br>    except:<br>        pass<br>        # Something else happened related. Maybe you hit CTRL-C<br>        # while the program was running, the kernel is killing your process, or<br>        # something else all together.<br><br>    print(data)<br><br>    # Use data.json_string to get raw data in JSON.<br>    # You can access any response field as a class property<br>    # by converting field name from \"camelCase\" to \"snake_case\"<br>    print(\"Email address: \" + data.email_address)<br>    print(\"Format: \" + str(data.format_check))<br>    print(\"DNS: \" + str(data.dns_check))<br>    print(\"SMTP: \" + str(data.smtp_check))<br>    print(\"Catch all: \" + str(data.catch_all_check))<br>    print(\"Disposable: \" + str(data.disposable_check))<br>    print(\"Free: \" + str(data.free_check))<br>    print(\"Last audit date: \" + str(data.audit.audit_updated_date))<br><br>Here's the sort of data you might get back when performing a email verification<br>request:<br><br>.. code-block:: json<br><br>    {<br>      \"emailAddress\": \"support@whoisxmlapi.com\",<br>      \"formatCheck\": \"true\",<br>      \"smtpCheck\": \"true\",<br>      \"dnsCheck\": \"true\",<br>      \"freeCheck\": \"false\",<br>      \"disposableCheck\": \"false\",<br>      \"catchAllCheck\": \"true\",<br>      \"mxRecords\": [<br>        \"ALT1.ASPMX.L.GOOGLE.com\",<br>        \"ALT2.ASPMX.L.GOOGLE.com\",<br>        \"ASPMX.L.GOOGLE.com\",<br>        \"ASPMX2.GOOGLEMAIL.com\",<br>        \"ASPMX3.GOOGLEMAIL.com\",<br>        \"mx.yandex.net\"<br>      ],<br>      \"audit\": {<br>        \"auditCreatedDate\": \"2018-04-19 18:12:45.000 UTC\",<br>        \"auditUpdatedDate\": \"2018-04-19 18:12:45.000 UTC\"<br>      }<br>    }<br><br>\n          </div>"}, "last_serial": 4364859, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "789e7c7fa9d82bec868c98ca0d0cb57d", "sha256": "0551fd28178736371db3dcaaf6ea44c937951734980f6e35418912050e6c6e03"}, "downloads": -1, "filename": "email_verifier-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "789e7c7fa9d82bec868c98ca0d0cb57d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8226, "upload_time": "2018-10-11T15:28:04", "upload_time_iso_8601": "2018-10-11T15:28:04.987858Z", "url": "https://files.pythonhosted.org/packages/d3/f4/8789196ceecf7347ff7175c88f99b389538259ec7e06627c5d7319952286/email_verifier-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcf40008323cf22186ebfb1a10133195", "sha256": "39444abcd17aa637cfd0cc34c175c935e316ed834b1827825c14df44b9c308e6"}, "downloads": -1, "filename": "email-verifier-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fcf40008323cf22186ebfb1a10133195", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5316, "upload_time": "2018-10-11T15:28:06", "upload_time_iso_8601": "2018-10-11T15:28:06.462403Z", "url": "https://files.pythonhosted.org/packages/fc/af/89e492c11e755120ecbe3ed318f89cb39b56b2576fe6e69baa3601e1f360/email-verifier-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "789e7c7fa9d82bec868c98ca0d0cb57d", "sha256": "0551fd28178736371db3dcaaf6ea44c937951734980f6e35418912050e6c6e03"}, "downloads": -1, "filename": "email_verifier-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "789e7c7fa9d82bec868c98ca0d0cb57d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8226, "upload_time": "2018-10-11T15:28:04", "upload_time_iso_8601": "2018-10-11T15:28:04.987858Z", "url": "https://files.pythonhosted.org/packages/d3/f4/8789196ceecf7347ff7175c88f99b389538259ec7e06627c5d7319952286/email_verifier-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcf40008323cf22186ebfb1a10133195", "sha256": "39444abcd17aa637cfd0cc34c175c935e316ed834b1827825c14df44b9c308e6"}, "downloads": -1, "filename": "email-verifier-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fcf40008323cf22186ebfb1a10133195", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5316, "upload_time": "2018-10-11T15:28:06", "upload_time_iso_8601": "2018-10-11T15:28:06.462403Z", "url": "https://files.pythonhosted.org/packages/fc/af/89e492c11e755120ecbe3ed318f89cb39b56b2576fe6e69baa3601e1f360/email-verifier-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:42 2020"}