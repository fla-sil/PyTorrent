{"info": {"author": "Trond Hindenes", "author_email": "trond@hindenes.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# AWS Helper\n\n<https://pypi.org/project/awshelper/>   \nA utility that lets you use AWS SSO credentials when running existing commands.\n\n## Rationale\nAWS CLI v2 and AWS SSO use a completely new and different way to persist aws credentials.\nThis is likely to break compatability with a lot of existing tools that use AWS apis such as\nterraform, awslogs and probably thousands more.\n\nAWS Helper reads the \"new and modern\" credentials stored by aws cli v2, \nand extracts \"old-school\" environment variables from them. It then executes the specified command, within this environment.\n\n## Prereqs:\n- awshelper requires python 3.x (tested on 3.8) and pip\n- aws cli v2 installed (make sure you run a recent build)\n- your org is set up with AWS SSO so that you can run `aws configure sso --profile myprofile` (a named profile is needed)\nIf all this works, you're good to go.\n\n## How to use awshelper \ninstall it:   \n`pip install awshelper` or `pip3 install awshelper` depending on your setup. \nYou should use a root/sudo user to install it globally\n\nyou can either use env vars to specify your profile:\n`AWS_PROFILE=mytest awshelper <command>` or   \n`awshelper --profile mytest <command>` or   \n`awshelper --profile=mytest <command>`.   \nIn any case, a named profile IS required (at least for now)\n\nIn some cases, you may have an SSO session, but not a valid aws cli credentials cache file, \nsince these are generated when you run the first aws cli command after refreshing sso credentials.\nawshelper tries to be smart about this, and run aws cli commands if needed, to refresh the cache.\nIt attemps to print clearly what is happening and, in case of errors, what you need to do. \n\nIf you're a fan of `awslogs` you can now run it using `awshelper`:   \n`AWS_PROFILE=mytest awshelper awslogs groups --aws-region eu-central-1`     \n...or `eksctl`:   \n`AWS_PROFILE=mytest awshelper eksctl create cluster -f eksfargate.yml`   \n\n\n## Integration with External Process-based credentials\nSome AWS tools such as the aws cli, supports \"Sourcing Credentials with an External Process\", \ndescribed here: <https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sourcing-external.html>.\nawshelper can function as the external process. In this mode, instead of injecting environment variables to a wrapped process, \nit will instead output the necessary json structure to std when called. To use this mode, run awshelper like this:\n`AWS_PROFILE=mytest EXTERNAL_PROCESS_MODE=true awshelper`\nThe recommended way to use this, is to add the following to your `/.aws/config` file:\n```\n[profile myprofile]\nregion = eu-central-1\ncredential_process = /home/trond/bin/awshelper_prochelper.sh\n```\n\nand then that bash file could look something like this:\n```bash\n\u2570\u2500 cat awshelper_prochelper.sh \n#!/usr/bin/env bash\n\nEXTERNAL_PROCESS_MODE=true AWS_PROFILE=someprofile awshelper\n```\n\nI'm not quite sure how aws cli deals with the potential \"circular dependency\" of \ncalling `aws configure sso` with a profile where a `credential_process` statement is added, \nso use this at your own peril! You might also have problems using this with various tools - \nI tested quickly with the `serverless` tools which are javascript-based and it seems to NOT work there. \nYour mileage may vary\n\n\n## Limitations\n- an AWS profile name IS needed - either specified using environment variables or parameters. If both are specified, the parameter \"wins\".\n- it will only work with profiles configured with `aws configure sso`. If you point to a profile with regular access key/secret, it won't work.\n\n## Test using docker:\n`docker run -it -v ~/.aws:/root/.aws:ro ubuntu`\nthen run\n```\napt-get update && apt-get install python3-pip\npip3 install awshelper \nAWS_PROFILE=mytest awshelper <my command>\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/trondhindenes/awshelper", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "awshelper", "package_url": "https://pypi.org/project/awshelper/", "platform": "", "project_url": "https://pypi.org/project/awshelper/", "project_urls": {"Homepage": "https://github.com/trondhindenes/awshelper"}, "release_url": "https://pypi.org/project/awshelper/1.2/", "requires_dist": null, "requires_python": "", "summary": "helps you run aws commands with sso-based credentials", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AWS Helper</h1>\n<p><a href=\"https://pypi.org/project/awshelper/\" rel=\"nofollow\">https://pypi.org/project/awshelper/</a><br>\nA utility that lets you use AWS SSO credentials when running existing commands.</p>\n<h2>Rationale</h2>\n<p>AWS CLI v2 and AWS SSO use a completely new and different way to persist aws credentials.\nThis is likely to break compatability with a lot of existing tools that use AWS apis such as\nterraform, awslogs and probably thousands more.</p>\n<p>AWS Helper reads the \"new and modern\" credentials stored by aws cli v2,\nand extracts \"old-school\" environment variables from them. It then executes the specified command, within this environment.</p>\n<h2>Prereqs:</h2>\n<ul>\n<li>awshelper requires python 3.x (tested on 3.8) and pip</li>\n<li>aws cli v2 installed (make sure you run a recent build)</li>\n<li>your org is set up with AWS SSO so that you can run <code>aws configure sso --profile myprofile</code> (a named profile is needed)\nIf all this works, you're good to go.</li>\n</ul>\n<h2>How to use awshelper</h2>\n<p>install it:<br>\n<code>pip install awshelper</code> or <code>pip3 install awshelper</code> depending on your setup.\nYou should use a root/sudo user to install it globally</p>\n<p>you can either use env vars to specify your profile:\n<code>AWS_PROFILE=mytest awshelper &lt;command&gt;</code> or<br>\n<code>awshelper --profile mytest &lt;command&gt;</code> or<br>\n<code>awshelper --profile=mytest &lt;command&gt;</code>.<br>\nIn any case, a named profile IS required (at least for now)</p>\n<p>In some cases, you may have an SSO session, but not a valid aws cli credentials cache file,\nsince these are generated when you run the first aws cli command after refreshing sso credentials.\nawshelper tries to be smart about this, and run aws cli commands if needed, to refresh the cache.\nIt attemps to print clearly what is happening and, in case of errors, what you need to do.</p>\n<p>If you're a fan of <code>awslogs</code> you can now run it using <code>awshelper</code>:<br>\n<code>AWS_PROFILE=mytest awshelper awslogs groups --aws-region eu-central-1</code><br>\n...or <code>eksctl</code>:<br>\n<code>AWS_PROFILE=mytest awshelper eksctl create cluster -f eksfargate.yml</code></p>\n<h2>Integration with External Process-based credentials</h2>\n<p>Some AWS tools such as the aws cli, supports \"Sourcing Credentials with an External Process\",\ndescribed here: <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sourcing-external.html\" rel=\"nofollow\">https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sourcing-external.html</a>.\nawshelper can function as the external process. In this mode, instead of injecting environment variables to a wrapped process,\nit will instead output the necessary json structure to std when called. To use this mode, run awshelper like this:\n<code>AWS_PROFILE=mytest EXTERNAL_PROCESS_MODE=true awshelper</code>\nThe recommended way to use this, is to add the following to your <code>/.aws/config</code> file:</p>\n<pre><code>[profile myprofile]\nregion = eu-central-1\ncredential_process = /home/trond/bin/awshelper_prochelper.sh\n</code></pre>\n<p>and then that bash file could look something like this:</p>\n<pre>\u2570\u2500 cat awshelper_prochelper.sh \n<span class=\"c1\">#!/usr/bin/env bash</span>\n\n<span class=\"nv\">EXTERNAL_PROCESS_MODE</span><span class=\"o\">=</span><span class=\"nb\">true</span> <span class=\"nv\">AWS_PROFILE</span><span class=\"o\">=</span>someprofile awshelper\n</pre>\n<p>I'm not quite sure how aws cli deals with the potential \"circular dependency\" of\ncalling <code>aws configure sso</code> with a profile where a <code>credential_process</code> statement is added,\nso use this at your own peril! You might also have problems using this with various tools -\nI tested quickly with the <code>serverless</code> tools which are javascript-based and it seems to NOT work there.\nYour mileage may vary</p>\n<h2>Limitations</h2>\n<ul>\n<li>an AWS profile name IS needed - either specified using environment variables or parameters. If both are specified, the parameter \"wins\".</li>\n<li>it will only work with profiles configured with <code>aws configure sso</code>. If you point to a profile with regular access key/secret, it won't work.</li>\n</ul>\n<h2>Test using docker:</h2>\n<p><code>docker run -it -v ~/.aws:/root/.aws:ro ubuntu</code>\nthen run</p>\n<pre><code>apt-get update &amp;&amp; apt-get install python3-pip\npip3 install awshelper \nAWS_PROFILE=mytest awshelper &lt;my command&gt;\n</code></pre>\n\n          </div>"}, "last_serial": 6933434, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9b84e8579a73f37d60d6aef63a84a24e", "sha256": "412d8ff8c63262c8d42cac33d09e4dcf80d013350db631a5bb11f73bc098720d"}, "downloads": -1, "filename": "awshelper-0.1.tar.gz", "has_sig": false, "md5_digest": "9b84e8579a73f37d60d6aef63a84a24e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3411, "upload_time": "2020-03-13T08:07:21", "upload_time_iso_8601": "2020-03-13T08:07:21.262770Z", "url": "https://files.pythonhosted.org/packages/d5/d2/555d3789ddf705baf2539b83d9e3949b4d6d731674fb0f5b5e3f22f726d7/awshelper-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e4e5b5430240a6a9f81fcd8b8db78496", "sha256": "e6a3a69385859ea0822ef322e57aa37faef2625a731111bef7f878aa6ae3a3cf"}, "downloads": -1, "filename": "awshelper-0.2.tar.gz", "has_sig": false, "md5_digest": "e4e5b5430240a6a9f81fcd8b8db78496", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3418, "upload_time": "2020-03-13T08:09:23", "upload_time_iso_8601": "2020-03-13T08:09:23.421886Z", "url": "https://files.pythonhosted.org/packages/76/fb/e7fd179e0d80b59dce78eb2b1b9fa922229128d74ed65573fcbabd70ffbf/awshelper-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "aa31eb0acb89f3c689ed94aea96c2cf7", "sha256": "2f59b0e1271b1fd7ce4504ba64840e3bd41ec03e4eb0826da0047720721f4e63"}, "downloads": -1, "filename": "awshelper-0.3.tar.gz", "has_sig": false, "md5_digest": "aa31eb0acb89f3c689ed94aea96c2cf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3308, "upload_time": "2020-03-13T08:16:00", "upload_time_iso_8601": "2020-03-13T08:16:00.880182Z", "url": "https://files.pythonhosted.org/packages/5c/71/ec82bfe80978a3a18a05ba35609522ebadf6f5d17f09e14287dcb4fd6041/awshelper-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1625b4726992629a162abe8fcbe9e6bd", "sha256": "f148bbec4da8e9fe9c832396e999ae5a86ad5cc9a6767cd0baedf079ea4b3108"}, "downloads": -1, "filename": "awshelper-0.4.tar.gz", "has_sig": false, "md5_digest": "1625b4726992629a162abe8fcbe9e6bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3359, "upload_time": "2020-03-13T08:18:27", "upload_time_iso_8601": "2020-03-13T08:18:27.729121Z", "url": "https://files.pythonhosted.org/packages/6b/f8/59cc58e04c3741c85374b0016cc3ab975330422ca09171b0c94d280eafe7/awshelper-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "5c59fde52f0b859273861c21978bb87c", "sha256": "e8096fdc0e09e9429e8a8992e9f5089eb1be69b812658aa92698668df2f3a136"}, "downloads": -1, "filename": "awshelper-0.5.tar.gz", "has_sig": false, "md5_digest": "5c59fde52f0b859273861c21978bb87c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4340, "upload_time": "2020-03-18T23:06:51", "upload_time_iso_8601": "2020-03-18T23:06:51.657012Z", "url": "https://files.pythonhosted.org/packages/c7/35/78b21a59d076d12caa91df060e7850aa504f868d01182d52f58c336a3caf/awshelper-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "55c85bde760cbd15fa8b7f049d240b86", "sha256": "883eaa97b5dac2c64192c2077a2096090190813291da6e196672b3a88c616fa0"}, "downloads": -1, "filename": "awshelper-0.6.tar.gz", "has_sig": false, "md5_digest": "55c85bde760cbd15fa8b7f049d240b86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4354, "upload_time": "2020-03-23T16:46:48", "upload_time_iso_8601": "2020-03-23T16:46:48.496050Z", "url": "https://files.pythonhosted.org/packages/2c/fe/ed84fc3f2b2d75c41ccbe2a9544083324c7ca632f5c011c763f2b7bfecd5/awshelper-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "73b83ed74c6c8502397ffea62851e226", "sha256": "1521d22a71a8584904c44cc50fc3d6241510f5da9ad05b22d93eec9e23f304ce"}, "downloads": -1, "filename": "awshelper-0.7.tar.gz", "has_sig": false, "md5_digest": "73b83ed74c6c8502397ffea62851e226", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4636, "upload_time": "2020-03-23T17:26:30", "upload_time_iso_8601": "2020-03-23T17:26:30.965331Z", "url": "https://files.pythonhosted.org/packages/9e/ee/337150c25743b2ffffd5ff75ba345aeaee905d670b6a4360a102601b2e08/awshelper-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "25841164ac00ddb8c0458cef460530f5", "sha256": "d0e3c9b98c8bd865486194b818e575768e6404fbaa53a8c4be37324bfeaeabe2"}, "downloads": -1, "filename": "awshelper-0.8.tar.gz", "has_sig": false, "md5_digest": "25841164ac00ddb8c0458cef460530f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4867, "upload_time": "2020-03-23T19:17:02", "upload_time_iso_8601": "2020-03-23T19:17:02.375762Z", "url": "https://files.pythonhosted.org/packages/64/b4/deb6f4cc5a5552491839f2081545f11a6022cb549b8810652957c119543b/awshelper-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "7d3e4ceb1e25e9d2c703dd501c5ec61b", "sha256": "0fac0f39b49a6d53adcae66e64ab4dccba7e205d56d6070284a5b52a1a6193cb"}, "downloads": -1, "filename": "awshelper-0.9.tar.gz", "has_sig": false, "md5_digest": "7d3e4ceb1e25e9d2c703dd501c5ec61b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4875, "upload_time": "2020-03-26T20:44:32", "upload_time_iso_8601": "2020-03-26T20:44:32.295106Z", "url": "https://files.pythonhosted.org/packages/b2/47/90fd671f3084c5a13eaa052d98c47331632f3ecb729269d3e71d6e21a436/awshelper-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "4eb5b2f999b5aa33b8d5f0cb895b6bfb", "sha256": "fd244b0b2fb5f12deee908c3f2c38ac0c9a450df98f616d22ca0557a61cedd3c"}, "downloads": -1, "filename": "awshelper-1.0.tar.gz", "has_sig": false, "md5_digest": "4eb5b2f999b5aa33b8d5f0cb895b6bfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5282, "upload_time": "2020-03-26T20:48:49", "upload_time_iso_8601": "2020-03-26T20:48:49.234645Z", "url": "https://files.pythonhosted.org/packages/93/3a/e3b809cd2a5220751d8f2322066252737483c7324d898ed19d76ffbc6618/awshelper-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "02f075dc2df778094c78edb45ab47f5f", "sha256": "73480a9a46392c016230951a1c55d795a901a8c1431e9bf958b0c9fb24ad028e"}, "downloads": -1, "filename": "awshelper-1.1.tar.gz", "has_sig": false, "md5_digest": "02f075dc2df778094c78edb45ab47f5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5559, "upload_time": "2020-04-02T06:01:13", "upload_time_iso_8601": "2020-04-02T06:01:13.814310Z", "url": "https://files.pythonhosted.org/packages/9d/2e/ebd47e767b1133f74b023daf6219f3fc6f1e04ddd629170c0cd6daa8c292/awshelper-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "bbdc2619e0137e33a5984b8285b1a07f", "sha256": "e2ab77789a5b22c8bbb5a27b8523c57bc53a0fb6389476ebdd7be6d249d1d63b"}, "downloads": -1, "filename": "awshelper-1.2.tar.gz", "has_sig": false, "md5_digest": "bbdc2619e0137e33a5984b8285b1a07f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5298, "upload_time": "2020-04-02T06:14:33", "upload_time_iso_8601": "2020-04-02T06:14:33.856393Z", "url": "https://files.pythonhosted.org/packages/3f/66/c5c81a319c42622ddde4a945e7f44b065eb5381680d3337ecdf4e3fcc2f7/awshelper-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bbdc2619e0137e33a5984b8285b1a07f", "sha256": "e2ab77789a5b22c8bbb5a27b8523c57bc53a0fb6389476ebdd7be6d249d1d63b"}, "downloads": -1, "filename": "awshelper-1.2.tar.gz", "has_sig": false, "md5_digest": "bbdc2619e0137e33a5984b8285b1a07f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5298, "upload_time": "2020-04-02T06:14:33", "upload_time_iso_8601": "2020-04-02T06:14:33.856393Z", "url": "https://files.pythonhosted.org/packages/3f/66/c5c81a319c42622ddde4a945e7f44b065eb5381680d3337ecdf4e3fcc2f7/awshelper-1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:40 2020"}