{"info": {"author": "Chao-Ming Wang", "author_email": "oujago@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "\n.. image:: https://readthedocs.org/projects/numpydl/badge/\n    :target: http://numpydl.readthedocs.org/en/latest/\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://github.com/oujago/NumpyDL/blob/master/LICENSE\n\n.. image:: https://api.travis-ci.org/oujago/NumpyDL.svg\n    :target: https://travis-ci.org/oujago/NumpyDL\n\n.. image:: https://coveralls.io/repos/github/oujago/NumpyDL/badge.svg\n    :target: https://coveralls.io/github/oujago/NumpyDL\n\n.. image:: https://badge.fury.io/py/npdl.svg\n    :target: https://badge.fury.io/py/npdl\n\n.. image:: https://img.shields.io/badge/python-3.5-blue.svg\n    :target: https://pypi.python.org/pypi/npdl\n\n.. image:: https://img.shields.io/badge/python-3.6-blue.svg\n    :target: https://pypi.python.org/pypi/npdl\n\n.. https://codeclimate.com/github/oujago/NumpyDL/badges/gpa.svg\n   :target: https://codeclimate.com/github/oujago/NumpyDL\n\n.. image:: https://codeclimate.com/github/oujago/NumpyDL/badges/issue_count.svg\n   :target: https://codeclimate.com/github/oujago/NumpyDL\n\n.. image:: https://img.shields.io/github/issues/oujago/NumpyDL.svg\n   :target: https://github.com/oujago/NumpyDL\n\n.. image:: https://zenodo.org/badge/83100910.svg\n   :target: https://zenodo.org/badge/latestdoi/83100910\n\n\n\nNumpyDL: Numpy Deep Learning Library\n====================================\n\nDescriptions\n============\n\n``NumpyDL`` is:\n\n1. Based on Pure Numpy/Python\n2. For DL Education\n3. And for My Homework\n\n\nFeatures\n========\n\nIts main features are:\n\n1. *Pure* in Numpy\n2. *Native* to Python\n3. *Automatic differentiations* are basically supported\n4. *Commonly used models* are provided: MLP, RNNs, LSTMs and CNNs\n5. *API* like ``Keras`` library\n6. *Examples* for several AI tasks\n7. *Application* for a toy chatbot\n8. *Mobile friendly* documents\n\n\nDocumentation\n=============\n\nAvailable online documents:\n\n1. `latest docs <http://numpydl.readthedocs.io/en/latest>`_\n2. `development docs <http://numpydl.readthedocs.io/en/develop/>`_\n3. `stable docs <http://numpydl.readthedocs.io/en/stable/>`_\n\nAvailable offline PDF:\n\n1. `latest PDF <http://readthedocs.org/projects/numpydl/downloads/pdf/latest>`_\n\n\nInstallation\n============\n\nInstall NumpyDL using pip:\n\n.. code-block:: bash\n\n    $> pip install npdl\n\nInstall from source code:\n\n.. code-block:: bash\n\n    $> python setup.py install\n\n\nExamples\n========\n\n``NumpyDL`` provides several examples of AI tasks:\n\n* sentence classification\n    * LSTM in *examples/lstm_sentence_classification.py*\n    * CNN in *examples/cnn_sentence_classification.py*\n* mnist handwritten recognition\n    * MLP in *examples/mlp-mnist.py*\n    * MLP in *examples/mlp-digits.py*\n    * CNN in *examples/cnn-minist.py*\n* language modeling\n    * RNN in *examples/rnn-character-lm.py*\n    * LSTM in *examples/lstm-character-lm.py*\n\nOne concrete code example in *examples/mlp-digits.py*:\n\n.. code-block:: python\n\n    import numpy as np\n    from sklearn.datasets import load_digits\n    import npdl\n\n    # prepare\n    npdl.utils.random.set_seed(1234)\n\n    # data\n    digits = load_digits()\n    X_train = digits.data\n    X_train /= np.max(X_train)\n    Y_train = digits.target\n    n_classes = np.unique(Y_train).size\n\n    # model\n    model = npdl.model.Model()\n    model.add(npdl.layers.Dense(n_out=500, n_in=64, activation=npdl.activation.ReLU()))\n    model.add(npdl.layers.Dense(n_out=n_classes, activation=npdl.activation.Softmax()))\n    model.compile(loss=npdl.objectives.SCCE(), optimizer=npdl.optimizers.SGD(lr=0.005))\n\n    # train\n    model.fit(X_train, npdl.utils.data.one_hot(Y_train), max_iter=150, validation_split=0.1)\n\n\n\nApplications\n============\n\n``NumpyDL`` provides one toy application:\n\n* Chatbot\n    * seq2seq in *applications/chatbot/model.py*\n\n\nAnd its final result:\n\n.. figure:: applications/chatbot/pics/chatbot.png\n    :width: 80%\n\n\nSupports\n========\n\n``NumpyDL`` supports following deep learning techniques:\n\n* Layers\n    * Linear\n    * Dense\n    * Softmax\n    * Dropout\n    * Convolution\n    * Embedding\n    * BatchNormal\n    * MeanPooling\n    * MaxPooling\n    * SimpleRNN\n    * GRU\n    * LSTM\n    * Flatten\n    * DimShuffle\n* Optimizers\n    * SGD\n    * Momentum\n    * NesterovMomentum\n    * Adagrad\n    * RMSprop\n    * Adadelta\n    * Adam\n    * Adamax\n* Objectives\n    * MeanSquaredError\n    * HellingerDistance\n    * BinaryCrossEntropy\n    * SoftmaxCategoricalCrossEntropy\n* Initializations\n    * Zero\n    * One\n    * Uniform\n    * Normal\n    * LecunUniform\n    * GlorotUniform\n    * GlorotNormal\n    * HeNormal\n    * HeUniform\n    * Orthogonal\n* Activations\n    * Sigmoid\n    * Tanh\n    * ReLU\n    * Linear\n    * Softmax\n    * Elliot\n    * SymmetricElliot\n    * SoftPlus\n    * SoftSign\n\n\n\nChangelog\n---------\n\n\n0.4.0 (2017.-06-18)\n~~~~~~~~~~~~~~~~~~~\n\nVersion 0.4.0.\n\n* Embedding backward\n* Momentum\n* NesterovMomentum\n* Adagrad\n* RMSprop\n* Adadelta\n* Adam\n* Adamax\n\n\n\n0.3.0 (2017-06-15)\n~~~~~~~~~~~~~~~~~~\n\nVersion 0.3.0.\n\n* Add chatbot application.\n* Add more examples.\n* Support LSTM.\n* Support GRU.\n\n\n0.2.5 (2017-05-30)\n~~~~~~~~~~~~~~~~~~\n\nVersion 0.2.5.\n\nAdd almost all test.\n\n\n\n0.2 (2017-05-10)\n~~~~~~~~~~~~~~~~\n\nSecond release.\n\nSupport Layers:\n\n* Batch Normalization Layer\n* Embedding Layer\n* MeanPooling Layer\n* Flatten Layer\n\nSupport Activations:\n\n* SymmetricElliot\n* LReLU\n* SoftPlus\n* SoftSign\n\nSupport Initializations:\n\n* HeNormal\n* HeUniform\n* Orthogonal\n\nAdd more tutorials.\n\nAdd more API comments.\n\n\n\n0.1 (2017-04-11)\n~~~~~~~~~~~~~~~~\n\nFirst release.\n\nSupport layers:\n\n* Dense (perceptron) Layer\n* Softmax Layer\n* Dropout Layer\n* Convolution Layer\n* MaxPooling Layer\n* SimpleRNN Layer\n\n\nSupport Activations:\n\n* Sigmoid\n* Tanh\n* ReLU\n* Softmax\n* Elliot\n\n\nSupport Initializations:\n\n* Uniform\n* Normal\n* LecunUniform\n* GlorotUniform\n* GlorotNormal\n\n\nSupport Objectives:\n\n* MeanSquaredError\n* HellingerDistance\n* BinaryCrossEntropy\n* SoftmaxCategoricalCrossEntropy\n\n\nSupport Optimizers:\n\n* SGD\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/oujago/NumpyDL", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://numpydl.readthedocs.io", "keywords": "deep learning library", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "npdl", "package_url": "https://pypi.org/project/npdl/", "platform": "", "project_url": "https://pypi.org/project/npdl/", "project_urls": {"Download": "https://github.com/oujago/NumpyDL", "Homepage": "http://numpydl.readthedocs.io"}, "release_url": "https://pypi.org/project/npdl/0.4.0.1/", "requires_dist": null, "requires_python": "", "summary": "Deep Learning Library based on pure Numpy", "version": "0.4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://numpydl.readthedocs.org/en/latest/\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/numpydl/badge/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c8b879a3231ccb97841719b20ffa771705b6921/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e756d7079646c2f62616467652f\"></a>\n<a href=\"https://github.com/oujago/NumpyDL/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://travis-ci.org/oujago/NumpyDL\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/oujago/NumpyDL.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d26c49a7d49e734bfe8122ff6461bb22cf505ad9/68747470733a2f2f6170692e7472617669732d63692e6f72672f6f756a61676f2f4e756d7079444c2e737667\"></a>\n<a href=\"https://coveralls.io/github/oujago/NumpyDL\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/oujago/NumpyDL/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f90a92f3ab20d817a5e781ea8dae9e416853a39/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6f756a61676f2f4e756d7079444c2f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/npdl\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/npdl.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/808ed6611d0da488fbade9ac5281f947735657ae/68747470733a2f2f62616467652e667572792e696f2f70792f6e70646c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/npdl\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8963091336cb0312d5fefe404229cb9ec0fb8b25/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/npdl\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.6-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"></a>\n<a href=\"https://codeclimate.com/github/oujago/NumpyDL\" rel=\"nofollow\"><img alt=\"https://codeclimate.com/github/oujago/NumpyDL/badges/issue_count.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70a468769d1e785dafe1de1a99b7de163e91da75/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f6f756a61676f2f4e756d7079444c2f6261646765732f69737375655f636f756e742e737667\"></a>\n<a href=\"https://github.com/oujago/NumpyDL\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/issues/oujago/NumpyDL.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4fad761a2bbef9ff5d2919d66173820a0dc3874/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6f756a61676f2f4e756d7079444c2e737667\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/83100910\" rel=\"nofollow\"><img alt=\"https://zenodo.org/badge/83100910.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/323d6f8f325c7ae3ad856172d9cf2fe9aaa3fc21/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f38333130303931302e737667\"></a>\n<div id=\"numpydl-numpy-deep-learning-library\">\n<h2>NumpyDL: Numpy Deep Learning Library</h2>\n</div>\n<div id=\"descriptions\">\n<h2>Descriptions</h2>\n<p><tt>NumpyDL</tt> is:</p>\n<ol>\n<li>Based on Pure Numpy/Python</li>\n<li>For DL Education</li>\n<li>And for My Homework</li>\n</ol>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Its main features are:</p>\n<ol>\n<li><em>Pure</em> in Numpy</li>\n<li><em>Native</em> to Python</li>\n<li><em>Automatic differentiations</em> are basically supported</li>\n<li><em>Commonly used models</em> are provided: MLP, RNNs, LSTMs and CNNs</li>\n<li><em>API</em> like <tt>Keras</tt> library</li>\n<li><em>Examples</em> for several AI tasks</li>\n<li><em>Application</em> for a toy chatbot</li>\n<li><em>Mobile friendly</em> documents</li>\n</ol>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Available online documents:</p>\n<ol>\n<li><a href=\"http://numpydl.readthedocs.io/en/latest\" rel=\"nofollow\">latest docs</a></li>\n<li><a href=\"http://numpydl.readthedocs.io/en/develop/\" rel=\"nofollow\">development docs</a></li>\n<li><a href=\"http://numpydl.readthedocs.io/en/stable/\" rel=\"nofollow\">stable docs</a></li>\n</ol>\n<p>Available offline PDF:</p>\n<ol>\n<li><a href=\"http://readthedocs.org/projects/numpydl/downloads/pdf/latest\" rel=\"nofollow\">latest PDF</a></li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install NumpyDL using pip:</p>\n<pre>$&gt; pip install npdl\n</pre>\n<p>Install from source code:</p>\n<pre>$&gt; python setup.py install\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p><tt>NumpyDL</tt> provides several examples of AI tasks:</p>\n<ul>\n<li><dl>\n<dt>sentence classification</dt>\n<dd><ul>\n<li>LSTM in <em>examples/lstm_sentence_classification.py</em></li>\n<li>CNN in <em>examples/cnn_sentence_classification.py</em></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>mnist handwritten recognition</dt>\n<dd><ul>\n<li>MLP in <em>examples/mlp-mnist.py</em></li>\n<li>MLP in <em>examples/mlp-digits.py</em></li>\n<li>CNN in <em>examples/cnn-minist.py</em></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>language modeling</dt>\n<dd><ul>\n<li>RNN in <em>examples/rnn-character-lm.py</em></li>\n<li>LSTM in <em>examples/lstm-character-lm.py</em></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>One concrete code example in <em>examples/mlp-digits.py</em>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_digits</span>\n<span class=\"kn\">import</span> <span class=\"nn\">npdl</span>\n\n<span class=\"c1\"># prepare</span>\n<span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">set_seed</span><span class=\"p\">(</span><span class=\"mi\">1234</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># data</span>\n<span class=\"n\">digits</span> <span class=\"o\">=</span> <span class=\"n\">load_digits</span><span class=\"p\">()</span>\n<span class=\"n\">X_train</span> <span class=\"o\">=</span> <span class=\"n\">digits</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"n\">X_train</span> <span class=\"o\">/=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>\n<span class=\"n\">Y_train</span> <span class=\"o\">=</span> <span class=\"n\">digits</span><span class=\"o\">.</span><span class=\"n\">target</span>\n<span class=\"n\">n_classes</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">Y_train</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">size</span>\n\n<span class=\"c1\"># model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"n\">n_out</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">n_in</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">activation</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">()))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"n\">n_out</span><span class=\"o\">=</span><span class=\"n\">n_classes</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">activation</span><span class=\"o\">.</span><span class=\"n\">Softmax</span><span class=\"p\">()))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">objectives</span><span class=\"o\">.</span><span class=\"n\">SCCE</span><span class=\"p\">(),</span> <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">optimizers</span><span class=\"o\">.</span><span class=\"n\">SGD</span><span class=\"p\">(</span><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.005</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># train</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">npdl</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">one_hot</span><span class=\"p\">(</span><span class=\"n\">Y_train</span><span class=\"p\">),</span> <span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">validation_split</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"applications\">\n<h2>Applications</h2>\n<p><tt>NumpyDL</tt> provides one toy application:</p>\n<ul>\n<li><dl>\n<dt>Chatbot</dt>\n<dd><ul>\n<li>seq2seq in <em>applications/chatbot/model.py</em></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>And its final result:</p>\n<div>\n<img alt=\"applications/chatbot/pics/chatbot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/909ba23867e35198093c7797757694dfa8f36699/6170706c69636174696f6e732f63686174626f742f706963732f63686174626f742e706e67\" width=\"80%\">\n</div>\n</div>\n<div id=\"supports\">\n<h2>Supports</h2>\n<p><tt>NumpyDL</tt> supports following deep learning techniques:</p>\n<ul>\n<li><dl>\n<dt>Layers</dt>\n<dd><ul>\n<li>Linear</li>\n<li>Dense</li>\n<li>Softmax</li>\n<li>Dropout</li>\n<li>Convolution</li>\n<li>Embedding</li>\n<li>BatchNormal</li>\n<li>MeanPooling</li>\n<li>MaxPooling</li>\n<li>SimpleRNN</li>\n<li>GRU</li>\n<li>LSTM</li>\n<li>Flatten</li>\n<li>DimShuffle</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Optimizers</dt>\n<dd><ul>\n<li>SGD</li>\n<li>Momentum</li>\n<li>NesterovMomentum</li>\n<li>Adagrad</li>\n<li>RMSprop</li>\n<li>Adadelta</li>\n<li>Adam</li>\n<li>Adamax</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Objectives</dt>\n<dd><ul>\n<li>MeanSquaredError</li>\n<li>HellingerDistance</li>\n<li>BinaryCrossEntropy</li>\n<li>SoftmaxCategoricalCrossEntropy</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Initializations</dt>\n<dd><ul>\n<li>Zero</li>\n<li>One</li>\n<li>Uniform</li>\n<li>Normal</li>\n<li>LecunUniform</li>\n<li>GlorotUniform</li>\n<li>GlorotNormal</li>\n<li>HeNormal</li>\n<li>HeUniform</li>\n<li>Orthogonal</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Activations</dt>\n<dd><ul>\n<li>Sigmoid</li>\n<li>Tanh</li>\n<li>ReLU</li>\n<li>Linear</li>\n<li>Softmax</li>\n<li>Elliot</li>\n<li>SymmetricElliot</li>\n<li>SoftPlus</li>\n<li>SoftSign</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<div id=\"id1\">\n<h4>0.4.0 (2017.-06-18)</h4>\n<p>Version 0.4.0.</p>\n<ul>\n<li>Embedding backward</li>\n<li>Momentum</li>\n<li>NesterovMomentum</li>\n<li>Adagrad</li>\n<li>RMSprop</li>\n<li>Adadelta</li>\n<li>Adam</li>\n<li>Adamax</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>0.3.0 (2017-06-15)</h4>\n<p>Version 0.3.0.</p>\n<ul>\n<li>Add chatbot application.</li>\n<li>Add more examples.</li>\n<li>Support LSTM.</li>\n<li>Support GRU.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>0.2.5 (2017-05-30)</h4>\n<p>Version 0.2.5.</p>\n<p>Add almost all test.</p>\n</div>\n<div id=\"id4\">\n<h4>0.2 (2017-05-10)</h4>\n<p>Second release.</p>\n<p>Support Layers:</p>\n<ul>\n<li>Batch Normalization Layer</li>\n<li>Embedding Layer</li>\n<li>MeanPooling Layer</li>\n<li>Flatten Layer</li>\n</ul>\n<p>Support Activations:</p>\n<ul>\n<li>SymmetricElliot</li>\n<li>LReLU</li>\n<li>SoftPlus</li>\n<li>SoftSign</li>\n</ul>\n<p>Support Initializations:</p>\n<ul>\n<li>HeNormal</li>\n<li>HeUniform</li>\n<li>Orthogonal</li>\n</ul>\n<p>Add more tutorials.</p>\n<p>Add more API comments.</p>\n</div>\n<div id=\"id5\">\n<h4>0.1 (2017-04-11)</h4>\n<p>First release.</p>\n<p>Support layers:</p>\n<ul>\n<li>Dense (perceptron) Layer</li>\n<li>Softmax Layer</li>\n<li>Dropout Layer</li>\n<li>Convolution Layer</li>\n<li>MaxPooling Layer</li>\n<li>SimpleRNN Layer</li>\n</ul>\n<p>Support Activations:</p>\n<ul>\n<li>Sigmoid</li>\n<li>Tanh</li>\n<li>ReLU</li>\n<li>Softmax</li>\n<li>Elliot</li>\n</ul>\n<p>Support Initializations:</p>\n<ul>\n<li>Uniform</li>\n<li>Normal</li>\n<li>LecunUniform</li>\n<li>GlorotUniform</li>\n<li>GlorotNormal</li>\n</ul>\n<p>Support Objectives:</p>\n<ul>\n<li>MeanSquaredError</li>\n<li>HellingerDistance</li>\n<li>BinaryCrossEntropy</li>\n<li>SoftmaxCategoricalCrossEntropy</li>\n</ul>\n<p>Support Optimizers:</p>\n<ul>\n<li>SGD</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2957244, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "415b621cd0d03e0e5b8696f84ce8e070", "sha256": "cf3036e1188108cee44e071885fb56688f6d8529573de43793878ec18e1800cd"}, "downloads": -1, "filename": "npdl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "415b621cd0d03e0e5b8696f84ce8e070", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19754, "upload_time": "2017-04-11T13:46:20", "upload_time_iso_8601": "2017-04-11T13:46:20.497235Z", "url": "https://files.pythonhosted.org/packages/59/e1/4f4620b07a8e4fa0d0d958e37538e0a7a8ee547898905b3736eac9654586/npdl-0.1.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b83a33852cb77b22a940eb9ad2222269", "sha256": "8442a7b219b1e7e1936859c5102bef29fb2bf20f1fe99788c62eccd22743abf0"}, "downloads": -1, "filename": "npdl-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b83a33852cb77b22a940eb9ad2222269", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112020, "upload_time": "2017-06-13T05:46:55", "upload_time_iso_8601": "2017-06-13T05:46:55.486066Z", "url": "https://files.pythonhosted.org/packages/81/4c/0a8107d35c9a203c98efd165e6cbf3f595afb192fecc6443bf035b0ef31a/npdl-0.3.0.tar.gz", "yanked": false}], "0.4.0.1": [{"comment_text": "", "digests": {"md5": "a6e011dc2c0f17c3bf6d0dab088d7a97", "sha256": "48062c5e4c7e7156b520d6ffbf07d3877da4561022d771f7472a71a8999561e4"}, "downloads": -1, "filename": "npdl-0.4.0.1.tar.gz", "has_sig": false, "md5_digest": "a6e011dc2c0f17c3bf6d0dab088d7a97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 567220, "upload_time": "2017-06-18T05:43:52", "upload_time_iso_8601": "2017-06-18T05:43:52.093649Z", "url": "https://files.pythonhosted.org/packages/7e/01/2fa5f83cf02891f29a3c077db15e002cd49d08cc986a6d6d8b87dfa56733/npdl-0.4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6e011dc2c0f17c3bf6d0dab088d7a97", "sha256": "48062c5e4c7e7156b520d6ffbf07d3877da4561022d771f7472a71a8999561e4"}, "downloads": -1, "filename": "npdl-0.4.0.1.tar.gz", "has_sig": false, "md5_digest": "a6e011dc2c0f17c3bf6d0dab088d7a97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 567220, "upload_time": "2017-06-18T05:43:52", "upload_time_iso_8601": "2017-06-18T05:43:52.093649Z", "url": "https://files.pythonhosted.org/packages/7e/01/2fa5f83cf02891f29a3c077db15e002cd49d08cc986a6d6d8b87dfa56733/npdl-0.4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:32 2020"}