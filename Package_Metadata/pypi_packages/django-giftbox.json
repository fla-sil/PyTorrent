{"info": {"author": "Benjamin Hicks", "author_email": "benajmin.w.hicks@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "==============\ndjango-giftbox\n==============\n\n.. image:: https://www.travis-ci.org/bwhicks/django-giftbox.svg?branch=master\n    :target: https://www.travis-ci.org/bwhicks/django-giftbox\n    :alt: Travis-CI badge\n\n.. image:: https://codecov.io/gh/bwhicks/django-giftbox/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/bwhicks/django-giftbox\n    :alt: Codecov.io badge\n\n\nDescription\n-----------\n\ndjango-giftbox is an app for the Django web framework that provides an easy\nwrapper for X-Sendfile functionality in Apache.\n\nThis lets users protect files by not allowing them to be downloaded\ndirectly, but allows Django to programmatically send a redirect and let the\nwebserver handle the transaction.\n\nThe current implementation is compatible with Django 1.11+ (tested against LTS\nreleases including 2.2) and py2/3 compatible.\n\nThe only required dependency is Django itself and mod_xsendfile_ installed for \nApache.\n\n.. _mod_xsendfile: https://tn123.org/mod_xsendfile/\n\nInstallation\n------------\n\nYou can simply download from PyPi using pip::\n\n  pip install django-giftbox\n\nTo install extra ``python-magic`` functionality::\n\n  pip install django-giftbox[magic]\n\nYou'll need to have ``libmagic`` (or ``libmagic-dev`` on many Linux distributions) \ninstalled to use this, otherwise ``python-magic`` will break.\n\nOr feel free to clone from the ``master`` branch::\n\n    pip install git+https://github.com/bwhicks/django-giftbox.git@master#egg=giftbox\n\nThat's it.\n\nConfiguration\n-------------\n\nThere are two 'modes' for giftbox. One of them is ``dev``, and this is the\ndefault when running using the Django development server. Giftbox should auto-detect\nthis and run accordingly.\n\nThe other is ``prod``, which assumes you are routing your Django appplication through\na web server like Apache\n\nIn Django ``settings.py``, define a dictionary called ``GIFTBOX_SETTINGS``.\nYou must define ``doc_root``, which is the directory\nwhere the files you wish t\nUsageo serve via Giftbox are located. This can be a relative\npath under your vhost's doc root or an absolute file path.\n\nYou can also specify these at run time, but you must least have ``GIFTBOX_SETTINGS``\nwith some sane defaults for one of those settings::\n\n  GIFTBOX_SETTINGS = {\n    'type': 'prod',  # will still detect dev server locally\n    'doc_root': '/path/to/protected/files',\n  }\n\nA corresponding Apache entry in a Vhost or other configuration would be::\n\n  XSendFile on\n  XSendFilePath /path/to/protected/files\n\nThe major advantage of this is that you can block regular access to this path\nor leave it out of Apache's docroot.\n\n\nOptional python-magic\n=====================\n\nIf ``libmagic`` and ``python-magic`` are installed, Giftbox will set the\n``Content-Type`` header when passing information to your HTTP server. If you\ndon't want this functionality (serving many files quickly or large ones), you can\ndisable it and your HTTP server's mime handling will apply::\n\n  GIFTBOX_SETTINGS = {\n    # other settings...\n    'use_magic': False,\n  }\n\n\n=====\n\nIn a view or view function, create an instance as follows::\n\n  from gitfbox import GiftBox\n\n  def my_view_func(request):\n    box = GiftBox(request)\n    return box.send('filename')\n\n\n``box`` in this case is an instance of ``GiftBox``, which can have its ``self.kwargs``\ndict modified in any way, as well as having ``kwargs`` passed via its constructor.\nBy default it looks to ``settings.py`` for its defaults.\n\n``box.send()`` returns an instance of ``django.httpd.HttpReponse``\n(or ``FileResponse``) with\nappropriate headers set and ``Content-Type`` cleared so that your web server\ncan use its own MIME handling to set the type appropriately (unless you use\nthe optional ``python-magic`` functionality). You can manually\nspecify this before returning the ``HttpResponse`` object, too.\n\nAll of this depends on a correct server setup for Apache that\nproperly creates a protected url that allows sendfile type requests.\n\nThe object allows flexible settings of virtually every kwarg at any point. If\nyou need to set the  `doc_root`` dynamically, either when you\ninstantiate the box or when you call ``Giftbox.send()``, you can do that.\n\nTests\n=====\n\nAll tests can be run using ``tox`` or ``python setup.py pytest``.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bwhicks/django-giftbox", "keywords": "sendfile,apache", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-giftbox", "package_url": "https://pypi.org/project/django-giftbox/", "platform": "", "project_url": "https://pypi.org/project/django-giftbox/", "project_urls": {"Homepage": "https://github.com/bwhicks/django-giftbox"}, "release_url": "https://pypi.org/project/django-giftbox/0.1.1/", "requires_dist": ["django (>=1.8)", "pytest; extra == 'develop'", "pytest-django; extra == 'develop'", "pytest-cov; extra == 'develop'", "mock; extra == 'develop'", "python-magic; extra == 'develop'", "tox; extra == 'develop'", "tox-travis; extra == 'develop'", "twine; extra == 'develop'", "python-magic; extra == 'magic'", "pytest; extra == 'test'", "pytest-django; extra == 'test'", "pytest-cov; extra == 'test'", "mock; extra == 'test'", "python-magic; extra == 'test'", "tox; extra == 'test'", "tox-travis; extra == 'test'"], "requires_python": "", "summary": "A package that includes xsendfile capabilities for Django", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://www.travis-ci.org/bwhicks/django-giftbox\" rel=\"nofollow\"><img alt=\"Travis-CI badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c50ff98c50c0659035bc21e7d939001e5fcdc71/68747470733a2f2f7777772e7472617669732d63692e6f72672f62776869636b732f646a616e676f2d67696674626f782e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/bwhicks/django-giftbox\" rel=\"nofollow\"><img alt=\"Codecov.io badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c5066006b772dd7b4db462fd700e68a33adbdc1/68747470733a2f2f636f6465636f762e696f2f67682f62776869636b732f646a616e676f2d67696674626f782f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div id=\"description\">\n<h2>Description</h2>\n<p>django-giftbox is an app for the Django web framework that provides an easy\nwrapper for X-Sendfile functionality in Apache.</p>\n<p>This lets users protect files by not allowing them to be downloaded\ndirectly, but allows Django to programmatically send a redirect and let the\nwebserver handle the transaction.</p>\n<p>The current implementation is compatible with Django 1.11+ (tested against LTS\nreleases including 2.2) and py2/3 compatible.</p>\n<p>The only required dependency is Django itself and <a href=\"https://tn123.org/mod_xsendfile/\" rel=\"nofollow\">mod_xsendfile</a> installed for\nApache.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can simply download from PyPi using pip:</p>\n<pre>pip install django-giftbox\n</pre>\n<p>To install extra <tt><span class=\"pre\">python-magic</span></tt> functionality:</p>\n<pre>pip install django-giftbox[magic]\n</pre>\n<p>You\u2019ll need to have <tt>libmagic</tt> (or <tt><span class=\"pre\">libmagic-dev</span></tt> on many Linux distributions)\ninstalled to use this, otherwise <tt><span class=\"pre\">python-magic</span></tt> will break.</p>\n<p>Or feel free to clone from the <tt>master</tt> branch:</p>\n<pre>pip install git+https://github.com/bwhicks/django-giftbox.git@master#egg=giftbox\n</pre>\n<p>That\u2019s it.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>There are two \u2018modes\u2019 for giftbox. One of them is <tt>dev</tt>, and this is the\ndefault when running using the Django development server. Giftbox should auto-detect\nthis and run accordingly.</p>\n<p>The other is <tt>prod</tt>, which assumes you are routing your Django appplication through\na web server like Apache</p>\n<p>In Django <tt>settings.py</tt>, define a dictionary called <tt>GIFTBOX_SETTINGS</tt>.\nYou must define <tt>doc_root</tt>, which is the directory\nwhere the files you wish t\nUsageo serve via Giftbox are located. This can be a relative\npath under your vhost\u2019s doc root or an absolute file path.</p>\n<p>You can also specify these at run time, but you must least have <tt>GIFTBOX_SETTINGS</tt>\nwith some sane defaults for one of those settings:</p>\n<pre>GIFTBOX_SETTINGS = {\n  'type': 'prod',  # will still detect dev server locally\n  'doc_root': '/path/to/protected/files',\n}\n</pre>\n<p>A corresponding Apache entry in a Vhost or other configuration would be:</p>\n<pre>XSendFile on\nXSendFilePath /path/to/protected/files\n</pre>\n<p>The major advantage of this is that you can block regular access to this path\nor leave it out of Apache\u2019s docroot.</p>\n<div id=\"optional-python-magic\">\n<h3>Optional python-magic</h3>\n<p>If <tt>libmagic</tt> and <tt><span class=\"pre\">python-magic</span></tt> are installed, Giftbox will set the\n<tt><span class=\"pre\">Content-Type</span></tt> header when passing information to your HTTP server. If you\ndon\u2019t want this functionality (serving many files quickly or large ones), you can\ndisable it and your HTTP server\u2019s mime handling will apply:</p>\n<pre>GIFTBOX_SETTINGS = {\n  # other settings...\n  'use_magic': False,\n}\n</pre>\n<hr class=\"docutils\">\n<p>In a view or view function, create an instance as follows:</p>\n<pre>from gitfbox import GiftBox\n\ndef my_view_func(request):\n  box = GiftBox(request)\n  return box.send('filename')\n</pre>\n<p><tt>box</tt> in this case is an instance of <tt>GiftBox</tt>, which can have its <tt>self.kwargs</tt>\ndict modified in any way, as well as having <tt>kwargs</tt> passed via its constructor.\nBy default it looks to <tt>settings.py</tt> for its defaults.</p>\n<p><tt>box.send()</tt> returns an instance of <tt>django.httpd.HttpReponse</tt>\n(or <tt>FileResponse</tt>) with\nappropriate headers set and <tt><span class=\"pre\">Content-Type</span></tt> cleared so that your web server\ncan use its own MIME handling to set the type appropriately (unless you use\nthe optional <tt><span class=\"pre\">python-magic</span></tt> functionality). You can manually\nspecify this before returning the <tt>HttpResponse</tt> object, too.</p>\n<p>All of this depends on a correct server setup for Apache that\nproperly creates a protected url that allows sendfile type requests.</p>\n<p>The object allows flexible settings of virtually every kwarg at any point. If\nyou need to set the  <cite>doc_root`</cite> dynamically, either when you\ninstantiate the box or when you call <tt>Giftbox.send()</tt>, you can do that.</p>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>All tests can be run using <tt>tox</tt> or <tt>python setup.py pytest</tt>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5580547, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "37480071cb398f6a253de389ae49f67d", "sha256": "4f805f7daeee4bf277c58e50c23295a9b358a8df8d7ae0cbe4722620e35a3836"}, "downloads": -1, "filename": "django_giftbox-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "37480071cb398f6a253de389ae49f67d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10551, "upload_time": "2019-07-25T00:29:00", "upload_time_iso_8601": "2019-07-25T00:29:00.793256Z", "url": "https://files.pythonhosted.org/packages/f5/32/6840b96ec307c96d453826d6afbebb592fcfaae914895d6c0a2200774b6f/django_giftbox-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aae2176c8038cb93d03ea497782ba896", "sha256": "0f590edd2fdbbc02ede0867e0fe5c5c84806611e75c15f5bc914f8844f1e7bf1"}, "downloads": -1, "filename": "django-giftbox-0.1.tar.gz", "has_sig": false, "md5_digest": "aae2176c8038cb93d03ea497782ba896", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6848, "upload_time": "2019-07-25T00:29:03", "upload_time_iso_8601": "2019-07-25T00:29:03.319983Z", "url": "https://files.pythonhosted.org/packages/c6/f1/0906ceb3dfb55f2ad29be04919ec3eef596c3f9cadbf0363f8551ff861ad/django-giftbox-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a3ff9dc3e53071cd85db1cacb6674f39", "sha256": "cdd8ea2b8de95eaf26e75251bfe5b303cdd2117b4ccf1db53e56a7a447ee211b"}, "downloads": -1, "filename": "django_giftbox-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3ff9dc3e53071cd85db1cacb6674f39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10708, "upload_time": "2019-07-25T00:35:11", "upload_time_iso_8601": "2019-07-25T00:35:11.825544Z", "url": "https://files.pythonhosted.org/packages/fa/7b/ba12fcfa9a8ea3285235881ca62494b3923673ae0f059e5036560cd69d24/django_giftbox-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74141d6de405eb9a400bd94319ccf7dc", "sha256": "dd3243e43e1d082d450721f44363bb699f93eadf76423f5aea8cb0cf73afc088"}, "downloads": -1, "filename": "django-giftbox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "74141d6de405eb9a400bd94319ccf7dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6955, "upload_time": "2019-07-25T00:35:13", "upload_time_iso_8601": "2019-07-25T00:35:13.424264Z", "url": "https://files.pythonhosted.org/packages/de/74/f3258fe5827ef9574ba4e8964d37d13379d611273d0868990a1b472b8f40/django-giftbox-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3ff9dc3e53071cd85db1cacb6674f39", "sha256": "cdd8ea2b8de95eaf26e75251bfe5b303cdd2117b4ccf1db53e56a7a447ee211b"}, "downloads": -1, "filename": "django_giftbox-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3ff9dc3e53071cd85db1cacb6674f39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10708, "upload_time": "2019-07-25T00:35:11", "upload_time_iso_8601": "2019-07-25T00:35:11.825544Z", "url": "https://files.pythonhosted.org/packages/fa/7b/ba12fcfa9a8ea3285235881ca62494b3923673ae0f059e5036560cd69d24/django_giftbox-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74141d6de405eb9a400bd94319ccf7dc", "sha256": "dd3243e43e1d082d450721f44363bb699f93eadf76423f5aea8cb0cf73afc088"}, "downloads": -1, "filename": "django-giftbox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "74141d6de405eb9a400bd94319ccf7dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6955, "upload_time": "2019-07-25T00:35:13", "upload_time_iso_8601": "2019-07-25T00:35:13.424264Z", "url": "https://files.pythonhosted.org/packages/de/74/f3258fe5827ef9574ba4e8964d37d13379d611273d0868990a1b472b8f40/django-giftbox-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:52 2020"}