{"info": {"author": "Oliver Tonnhofer", "author_email": "olt@bogosoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Embedded Systems"], "description": "arduino-sketch\n==============\n\n`arduino-sketch` lets you compile and upload Arduino Sketches without the IDE. Just use your favorite editor to write the Arduino `.ino` files and call `arduino-sketch my.ino -u`.\n\n\nUsage\n-----\n\n`arduino-sketch my.ino` will compile the `my.ino` file. It remembers the name of your sketch, so you can just call `arduino-sketch` the next time. \n\nSee `arduino-sketch --help` for more info.\n\n\nConfiguration\n-------------\n\n`arduino-sketch` uses local configuration (`.arduino_sketch`) and a user configuration (`~/.arduino_sketch`). Some configuration options are:\n\n`arduino_dir`:\n    Path to the Arduino core directory. Should contain the `hardware` and `tools` directory.\n\n`avr_tools_path`:\n    Path to `avr-xxx` binaries.\n\n`arduino_port`:\n    The Arduino serial device.\n    Defaults to `/dev/ttyUSB*`, but this will only work if you have a single USB serial device attached.\n\n`board_tag`:\n    The name/type of the Arduino. See `--list-boards` and `--board` options.\n\n\nInstall\n-------\n\narduino-sketch is [registered at the Python Package Index (PyPi)](http://pypi.python.org/pypi/arduino-sketch), so you can install it with `pip` or `easy_install`.\n\nYou will still need the core components of *Arduino 1.0 or higher*. Note that `arduino-core` on Debian 6.0 is <1.0. [See here on how to install a package from Debian testing.](\nhttp://serverfault.com/questions/22414/how-can-i-run-debian-stable-but-install-some-packages-from-testing)\n\nFor example on Debian:\n\n    sudo aptitude install arduino-core python-pip libyaml-perl\n    sudo pip install arduino-sketch\n\n\nTo uninstall:\n\n    sudo pip uninstall arduino-sketch\n\nLicense\n-------\n\narduino-sketch is licensed under the MIT license.\nIt ships with Arduino.mk and ard-parse-boards which are licensed under LGPL 2.1.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ktt-ol/arduino-sketch", "keywords": "arduino", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "arduino-sketch", "package_url": "https://pypi.org/project/arduino-sketch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/arduino-sketch/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ktt-ol/arduino-sketch"}, "release_url": "https://pypi.org/project/arduino-sketch/0.2/", "requires_dist": null, "requires_python": null, "summary": "Compile and upload Arduino sketches from command line", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>arduino-sketch</cite> lets you compile and upload Arduino Sketches without the IDE. Just use your favorite editor to write the Arduino <cite>.ino</cite> files and call <cite>arduino-sketch my.ino -u</cite>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><cite>arduino-sketch my.ino</cite> will compile the <cite>my.ino</cite> file. It remembers the name of your sketch, so you can just call <cite>arduino-sketch</cite> the next time.</p>\n<p>See <cite>arduino-sketch \u2013help</cite> for more info.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p><cite>arduino-sketch</cite> uses local configuration (<cite>.arduino_sketch</cite>) and a user configuration (<cite>~/.arduino_sketch</cite>). Some configuration options are:</p>\n<dl>\n<dt><cite>arduino_dir</cite>:</dt>\n<dd>Path to the Arduino core directory. Should contain the <cite>hardware</cite> and <cite>tools</cite> directory.</dd>\n<dt><cite>avr_tools_path</cite>:</dt>\n<dd>Path to <cite>avr-xxx</cite> binaries.</dd>\n<dt><cite>arduino_port</cite>:</dt>\n<dd>The Arduino serial device.\nDefaults to <cite>/dev/ttyUSB*</cite>, but this will only work if you have a single USB serial device attached.</dd>\n<dt><cite>board_tag</cite>:</dt>\n<dd>The name/type of the Arduino. See <cite>\u2013list-boards</cite> and <cite>\u2013board</cite> options.</dd>\n</dl>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>arduino-sketch is [registered at the Python Package Index (PyPi)](<a href=\"http://pypi.python.org/pypi/arduino-sketch\" rel=\"nofollow\">http://pypi.python.org/pypi/arduino-sketch</a>), so you can install it with <cite>pip</cite> or <cite>easy_install</cite>.</p>\n<p>You will still need the core components of <em>Arduino 1.0 or higher</em>. Note that <cite>arduino-core</cite> on Debian 6.0 is &lt;1.0. [See here on how to install a package from Debian testing.](\n<a href=\"http://serverfault.com/questions/22414/how-can-i-run-debian-stable-but-install-some-packages-from-testing\" rel=\"nofollow\">http://serverfault.com/questions/22414/how-can-i-run-debian-stable-but-install-some-packages-from-testing</a>)</p>\n<p>For example on Debian:</p>\n<blockquote>\nsudo aptitude install arduino-core python-pip libyaml-perl\nsudo pip install arduino-sketch</blockquote>\n<p>To uninstall:</p>\n<blockquote>\nsudo pip uninstall arduino-sketch</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>arduino-sketch is licensed under the MIT license.\nIt ships with Arduino.mk and ard-parse-boards which are licensed under LGPL 2.1.</p>\n</div>\n\n          </div>"}, "last_serial": 786412, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "57f0409cdd508b02a812ead087c899e6", "sha256": "2f87e57cc4b27a630fb243f6f0ec96517d497656fa524bfc2621bd0c7351a4f7"}, "downloads": -1, "filename": "arduino-sketch-0.1.tar.gz", "has_sig": false, "md5_digest": "57f0409cdd508b02a812ead087c899e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11350, "upload_time": "2012-05-19T17:05:17", "upload_time_iso_8601": "2012-05-19T17:05:17.372726Z", "url": "https://files.pythonhosted.org/packages/c9/a0/82377a53e3a9f87d0550c3419cc8b0c50bf710a920b9d7e2f1143383edc6/arduino-sketch-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "506901d9a6ac9e4c1231e0586f0dc0d8", "sha256": "7e64066c8ddc50c72a4e68b63179068ddcb1f92b04ade6ca6156e83a0fd2dc2c"}, "downloads": -1, "filename": "arduino-sketch-0.2.tar.gz", "has_sig": false, "md5_digest": "506901d9a6ac9e4c1231e0586f0dc0d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11630, "upload_time": "2013-03-02T14:29:41", "upload_time_iso_8601": "2013-03-02T14:29:41.421266Z", "url": "https://files.pythonhosted.org/packages/13/99/3cf0471e2113755a659a04819d218651a6c3d74e0c165e88892fef2609f0/arduino-sketch-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "506901d9a6ac9e4c1231e0586f0dc0d8", "sha256": "7e64066c8ddc50c72a4e68b63179068ddcb1f92b04ade6ca6156e83a0fd2dc2c"}, "downloads": -1, "filename": "arduino-sketch-0.2.tar.gz", "has_sig": false, "md5_digest": "506901d9a6ac9e4c1231e0586f0dc0d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11630, "upload_time": "2013-03-02T14:29:41", "upload_time_iso_8601": "2013-03-02T14:29:41.421266Z", "url": "https://files.pythonhosted.org/packages/13/99/3cf0471e2113755a659a04819d218651a6c3d74e0c165e88892fef2609f0/arduino-sketch-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:20 2020"}