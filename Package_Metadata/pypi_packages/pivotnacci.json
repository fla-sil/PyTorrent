{"info": {"author": "Eloy Perez", "author_email": "eloy.perez@tarlogic.com", "bugtrack_url": null, "classifiers": ["License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pivotnacci\n\n[![](https://img.shields.io/badge/Category-Lateral%20Movement-E5A505?style=flat-square)]() [![](https://img.shields.io/badge/Language-.NET%20%2f%20PHP%20%2f%20Java%20%2f%20Python-E5A505?style=flat-square)]()\n\n\nPivot into the internal network by deploying HTTP agents. **Pivotnacci** allows you to create a socks server which communicates with HTTP `agents`. The architecture looks like the following:\n\n<p align=\"center\">\n  <img src=\"pivotnacci.png\" width=\"720\" >\n</p>\n\nThis tool was inspired by the great [reGeorg](https://github.com/sensepost/reGeorg). However, it includes some improvements:\n- Support for **balanced servers**\n- Customizable polling interval, useful to reduce **detection rates**\n- Auto drop connections closed by a server\n- Modular and cleaner code\n- Installation through pip\n- Password-protected agents\n\nSupported socks protocols\n------------\n\n- [X] Socks 4\n- [X] Socks 5\n  + [X] No authentication\n  + [ ] User password\n  + [ ] GSSAPI\n\nInstallation\n------------\n\nFrom python packages:\n```shell\npip3 install pivotnacci\n```\n\nFrom repository:\n```shell\ngit clone https://github.com/blackarrowsec/pivotnacci.git\ncd pivotnacci/\npip3 install -r requirements.txt # to avoid installing on the OS\npython3 setup.py install # to install on the OS\n```\n\nUsage\n------------\n\n1. Upload the required agent (php, jsp or aspx) to a webserver\n2. Start the socks server once the agent is deployed\n3. Configure proxychains or any other proxy client (the default listening port for pivotnacci socks server is 1080)\n\n```shell\n$ pivotnacci -h\nusage: pivotnacci [-h] [-s addr] [-p port] [--verbose] [--ack-message message]\n                  [--password password] [--user-agent user_agent]\n                  [--header header] [--proxy [protocol://]host[:port]]\n                  [--type type] [--polling-interval milliseconds]\n                  [--request-tries number] [--retry-interval milliseconds]\n                  url\n\nSocks server for HTTP agents\n\npositional arguments:\n  url                   The url of the agent\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s addr, --source addr\n                        The default listening address (default: 127.0.0.1)\n  -p port, --port port  The default listening port (default: 1080)\n  --verbose, -v\n  --ack-message message, -a message\n                        Message returned by the agent web page (default:\n                        Server Error 500 (Internal Error))\n  --password password   Password to communicate with the agent (default: )\n  --user-agent user_agent, -A user_agent\n                        The User-Agent header sent to the agent (default:\n                        pivotnacci/0.0.1)\n  --header header, -H header\n                        Send custom header. Specify in the form 'Name: Value'\n                        (default: None)\n  --proxy [protocol://]host[:port], -x [protocol://]host[:port]\n                        Set the HTTP proxy to use.(Environment variables\n                        HTTP_PROXY and HTTPS_PROXY are also supported)\n                        (default: None)\n  --type type, -t type  To specify agent type in case is not automatically\n                        detected. Options are ['php', 'jsp', 'aspx'] (default:\n                        None)\n  --polling-interval milliseconds\n                        Interval to poll the agents (for recv operations)\n                        (default: 100)\n  --request-tries number\n                        The number of retries for each request to an agent. To\n                        use in case of balanced servers (default: 50)\n  --retry-interval milliseconds\n                        Interval to retry a failure request (due a balanced\n                        server) (default: 100)\n```\n\nExamples\n------------\n\nUsing an agent with password `s3cr3t` (`AGENT_PASSWORD` variable must be modified at the agent side as well):\n```shell\npivotnacci  https://domain.com/agent.php --password \"s3cr3t\"\n```\n\nUsing a custom HTTP `Host` header and a custom `CustomAgent` User-Agent:\n```shell\npivotnacci  https://domain.com/agent.jsp -H 'Host: vhost.domain.com' -A 'CustomAgent'\n```\n\nSetting a different agent message `418 I'm a teapot` (`ACK_MESSAGE` variable must be modified at the agent side as well):\n```shell\npivotnacci https://domain.com/agent.aspx --ack-message \"418 I'm a teapot\"\n```\n\nReduce detection rate (e.g. WAF) by setting the polling interval to `2` seconds:\n```shell\npivotnacci  https://domain.com/agent.php --polling-interval 2000\n```\n\nAuthor\n---------------\nEloy P\u00e9rez ([@Zer1t0](https://github.com/Zer1t0)) [ [www.blackarrow.net](http://blackarrow.net/) - [www.tarlogic.com](https://www.tarlogic.com/en/) ]\n\n\nLicense\n-------\nAll the code included in this project is licensed under the terms of the CC BY-NC-SA 4.0 license.\n\n#\n\n[![](https://img.shields.io/badge/www-blackarrow.net-E5A505?style=flat-square)](https://www.blackarrow.net) [![](https://img.shields.io/badge/twitter-@BlackArrowSec-00aced?style=flat-square&logo=twitter&logoColor=white)](https://twitter.com/BlackArrowSec) [![](https://img.shields.io/badge/linkedin-@BlackArrowSec-0084b4?style=flat-square&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/blackarrowsec/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/blackarrowsec/pivotnacci", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pivotnacci", "package_url": "https://pypi.org/project/pivotnacci/", "platform": "", "project_url": "https://pypi.org/project/pivotnacci/", "project_urls": {"Homepage": "https://github.com/blackarrowsec/pivotnacci"}, "release_url": "https://pypi.org/project/pivotnacci/0.0.1/", "requires_dist": ["construct", "requests"], "requires_python": "", "summary": "A tool to make socks connections through HTTP agents", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pivotnacci</h1>\n<p><a href=\"\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e53c8776f2ad48219a87a92566d17a3c89eb550d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617465676f72792d4c61746572616c2532304d6f76656d656e742d4535413530353f7374796c653d666c61742d737175617265\"></a> <a href=\"\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb6699d2d8f1ed31b45a2c29b2ff698b798a8f77/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c616e67756167652d2e4e45542532302532662532305048502532302532662532304a617661253230253266253230507974686f6e2d4535413530353f7374796c653d666c61742d737175617265\"></a></p>\n<p>Pivot into the internal network by deploying HTTP agents. <strong>Pivotnacci</strong> allows you to create a socks server which communicates with HTTP <code>agents</code>. The architecture looks like the following:</p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f8bab38054e9ed3aa82e08462c16b009f7051a0/7069766f746e616363692e706e67\" width=\"720\">\n</p>\n<p>This tool was inspired by the great <a href=\"https://github.com/sensepost/reGeorg\" rel=\"nofollow\">reGeorg</a>. However, it includes some improvements:</p>\n<ul>\n<li>Support for <strong>balanced servers</strong></li>\n<li>Customizable polling interval, useful to reduce <strong>detection rates</strong></li>\n<li>Auto drop connections closed by a server</li>\n<li>Modular and cleaner code</li>\n<li>Installation through pip</li>\n<li>Password-protected agents</li>\n</ul>\n<h2>Supported socks protocols</h2>\n<ul>\n<li>[X] Socks 4</li>\n<li>[X] Socks 5\n<ul>\n<li>[X] No authentication</li>\n<li>[ ] User password</li>\n<li>[ ] GSSAPI</li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>From python packages:</p>\n<pre>pip3 install pivotnacci\n</pre>\n<p>From repository:</p>\n<pre>git clone https://github.com/blackarrowsec/pivotnacci.git\n<span class=\"nb\">cd</span> pivotnacci/\npip3 install -r requirements.txt <span class=\"c1\"># to avoid installing on the OS</span>\npython3 setup.py install <span class=\"c1\"># to install on the OS</span>\n</pre>\n<h2>Usage</h2>\n<ol>\n<li>Upload the required agent (php, jsp or aspx) to a webserver</li>\n<li>Start the socks server once the agent is deployed</li>\n<li>Configure proxychains or any other proxy client (the default listening port for pivotnacci socks server is 1080)</li>\n</ol>\n<pre>$ pivotnacci -h\nusage: pivotnacci <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-s addr<span class=\"o\">]</span> <span class=\"o\">[</span>-p port<span class=\"o\">]</span> <span class=\"o\">[</span>--verbose<span class=\"o\">]</span> <span class=\"o\">[</span>--ack-message message<span class=\"o\">]</span>\n                  <span class=\"o\">[</span>--password password<span class=\"o\">]</span> <span class=\"o\">[</span>--user-agent user_agent<span class=\"o\">]</span>\n                  <span class=\"o\">[</span>--header header<span class=\"o\">]</span> <span class=\"o\">[</span>--proxy <span class=\"o\">[</span>protocol://<span class=\"o\">]</span>host<span class=\"o\">[</span>:port<span class=\"o\">]]</span>\n                  <span class=\"o\">[</span>--type type<span class=\"o\">]</span> <span class=\"o\">[</span>--polling-interval milliseconds<span class=\"o\">]</span>\n                  <span class=\"o\">[</span>--request-tries number<span class=\"o\">]</span> <span class=\"o\">[</span>--retry-interval milliseconds<span class=\"o\">]</span>\n                  url\n\nSocks server <span class=\"k\">for</span> HTTP agents\n\npositional arguments:\n  url                   The url of the agent\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -s addr, --source addr\n                        The default listening address <span class=\"o\">(</span>default: <span class=\"m\">127</span>.0.0.1<span class=\"o\">)</span>\n  -p port, --port port  The default listening port <span class=\"o\">(</span>default: <span class=\"m\">1080</span><span class=\"o\">)</span>\n  --verbose, -v\n  --ack-message message, -a message\n                        Message returned by the agent web page <span class=\"o\">(</span>default:\n                        Server Error <span class=\"m\">500</span> <span class=\"o\">(</span>Internal Error<span class=\"o\">))</span>\n  --password password   Password to communicate with the agent <span class=\"o\">(</span>default: <span class=\"o\">)</span>\n  --user-agent user_agent, -A user_agent\n                        The User-Agent header sent to the agent <span class=\"o\">(</span>default:\n                        pivotnacci/0.0.1<span class=\"o\">)</span>\n  --header header, -H header\n                        Send custom header. Specify in the form <span class=\"s1\">'Name: Value'</span>\n                        <span class=\"o\">(</span>default: None<span class=\"o\">)</span>\n  --proxy <span class=\"o\">[</span>protocol://<span class=\"o\">]</span>host<span class=\"o\">[</span>:port<span class=\"o\">]</span>, -x <span class=\"o\">[</span>protocol://<span class=\"o\">]</span>host<span class=\"o\">[</span>:port<span class=\"o\">]</span>\n                        Set the HTTP proxy to use.<span class=\"o\">(</span>Environment variables\n                        HTTP_PROXY and HTTPS_PROXY are also supported<span class=\"o\">)</span>\n                        <span class=\"o\">(</span>default: None<span class=\"o\">)</span>\n  --type type, -t <span class=\"nb\">type</span>  To specify agent <span class=\"nb\">type</span> in <span class=\"k\">case</span> is not automatically\n                        detected. Options are <span class=\"o\">[</span><span class=\"s1\">'php'</span>, <span class=\"s1\">'jsp'</span>, <span class=\"s1\">'aspx'</span><span class=\"o\">]</span> <span class=\"o\">(</span>default:\n                        None<span class=\"o\">)</span>\n  --polling-interval milliseconds\n                        Interval to poll the agents <span class=\"o\">(</span><span class=\"k\">for</span> recv operations<span class=\"o\">)</span>\n                        <span class=\"o\">(</span>default: <span class=\"m\">100</span><span class=\"o\">)</span>\n  --request-tries number\n                        The number of retries <span class=\"k\">for</span> each request to an agent. To\n                        use in <span class=\"k\">case</span> of balanced servers <span class=\"o\">(</span>default: <span class=\"m\">50</span><span class=\"o\">)</span>\n  --retry-interval milliseconds\n                        Interval to retry a failure request <span class=\"o\">(</span>due a balanced\n                        server<span class=\"o\">)</span> <span class=\"o\">(</span>default: <span class=\"m\">100</span><span class=\"o\">)</span>\n</pre>\n<h2>Examples</h2>\n<p>Using an agent with password <code>s3cr3t</code> (<code>AGENT_PASSWORD</code> variable must be modified at the agent side as well):</p>\n<pre>pivotnacci  https://domain.com/agent.php --password <span class=\"s2\">\"s3cr3t\"</span>\n</pre>\n<p>Using a custom HTTP <code>Host</code> header and a custom <code>CustomAgent</code> User-Agent:</p>\n<pre>pivotnacci  https://domain.com/agent.jsp -H <span class=\"s1\">'Host: vhost.domain.com'</span> -A <span class=\"s1\">'CustomAgent'</span>\n</pre>\n<p>Setting a different agent message <code>418 I'm a teapot</code> (<code>ACK_MESSAGE</code> variable must be modified at the agent side as well):</p>\n<pre>pivotnacci https://domain.com/agent.aspx --ack-message <span class=\"s2\">\"418 I'm a teapot\"</span>\n</pre>\n<p>Reduce detection rate (e.g. WAF) by setting the polling interval to <code>2</code> seconds:</p>\n<pre>pivotnacci  https://domain.com/agent.php --polling-interval <span class=\"m\">2000</span>\n</pre>\n<h2>Author</h2>\n<p>Eloy P\u00e9rez (<a href=\"https://github.com/Zer1t0\" rel=\"nofollow\">@Zer1t0</a>) [ <a href=\"http://blackarrow.net/\" rel=\"nofollow\">www.blackarrow.net</a> - <a href=\"https://www.tarlogic.com/en/\" rel=\"nofollow\">www.tarlogic.com</a> ]</p>\n<h2>License</h2>\n<p>All the code included in this project is licensed under the terms of the CC BY-NC-SA 4.0 license.</p>\n<h1></h1>\n<p><a href=\"https://www.blackarrow.net\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4de4b351da19c3d638f8e727837565c5114e6fc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7777772d626c61636b6172726f772e6e65742d4535413530353f7374796c653d666c61742d737175617265\"></a> <a href=\"https://twitter.com/BlackArrowSec\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9f7624b4b06206dc0d1e4477465ba589361d467/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40426c61636b4172726f775365632d3030616365643f7374796c653d666c61742d737175617265266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465\"></a> <a href=\"https://www.linkedin.com/company/blackarrowsec/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/894e956602a213bc42262fff6251011515d9dd15/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c696e6b6564696e2d40426c61636b4172726f775365632d3030383462343f7374796c653d666c61742d737175617265266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d7768697465\"></a></p>\n\n          </div>"}, "last_serial": 7119462, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7f2c3213f13b2b3cb6e45857c6e0e9d8", "sha256": "ad18babd8094c3fc32643b41ab9a97f4c7296b0e0129a290cc23f63d9aa68f4e"}, "downloads": -1, "filename": "pivotnacci-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f2c3213f13b2b3cb6e45857c6e0e9d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19105, "upload_time": "2020-04-28T11:49:59", "upload_time_iso_8601": "2020-04-28T11:49:59.629836Z", "url": "https://files.pythonhosted.org/packages/b5/82/0fe2b081469fccdc87b3e7d71bd57ecc20b0a69d3b323491b774133d1169/pivotnacci-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d8f3fb3e87bceaf642a62f965d77030", "sha256": "fd613d58ca6c750c85e057764ba32d1678edb75f35e09a46404d182734d3a94b"}, "downloads": -1, "filename": "pivotnacci-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1d8f3fb3e87bceaf642a62f965d77030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12564, "upload_time": "2020-04-28T11:50:01", "upload_time_iso_8601": "2020-04-28T11:50:01.640295Z", "url": "https://files.pythonhosted.org/packages/6c/38/52952279d9f8c96ecb06fd74059ef11586c8dfd505abb084a2ef7cdf8c4f/pivotnacci-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f2c3213f13b2b3cb6e45857c6e0e9d8", "sha256": "ad18babd8094c3fc32643b41ab9a97f4c7296b0e0129a290cc23f63d9aa68f4e"}, "downloads": -1, "filename": "pivotnacci-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f2c3213f13b2b3cb6e45857c6e0e9d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19105, "upload_time": "2020-04-28T11:49:59", "upload_time_iso_8601": "2020-04-28T11:49:59.629836Z", "url": "https://files.pythonhosted.org/packages/b5/82/0fe2b081469fccdc87b3e7d71bd57ecc20b0a69d3b323491b774133d1169/pivotnacci-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d8f3fb3e87bceaf642a62f965d77030", "sha256": "fd613d58ca6c750c85e057764ba32d1678edb75f35e09a46404d182734d3a94b"}, "downloads": -1, "filename": "pivotnacci-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1d8f3fb3e87bceaf642a62f965d77030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12564, "upload_time": "2020-04-28T11:50:01", "upload_time_iso_8601": "2020-04-28T11:50:01.640295Z", "url": "https://files.pythonhosted.org/packages/6c/38/52952279d9f8c96ecb06fd74059ef11586c8dfd505abb084a2ef7cdf8c4f/pivotnacci-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:58 2020"}