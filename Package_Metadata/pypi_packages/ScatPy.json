{"info": {"author": "Andrew G. Mark", "author_email": "mark@is.mpg.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering"], "description": "**************************************\r\nScatPy -- A Python interface to DDSCAT\r\n**************************************\r\n\r\n\r\nScatPy is a Python package for interfacing to the popular scattering simulator\r\n`DDSCAT <http://www.astro.princeton.edu/~draine/DDSCAT.html>`_. ScatPy provides a rich toolset to:\r\n\r\n* Create standard DDSCAT scattering targets based on physical (rather than dipole) dimensions\r\n* Construct and visualize complex custom scattering targets\r\n* Manage the job parameters found in the ddscat.par file\r\n* Organize iterative jobs requiring multiple targets or input parameters\r\n* Script job submission to cluster queue managers\r\n* Maintain profiles and defaults for deployment on platforms other than the local machine\r\n* Load, plot and manipulate DDSCAT output tables\r\n* Manage the output from multiple jobs through results collections\r\n* Work with and visualize nearfield results as multidimensional numpy arrays\r\n* Suitable for interactive or scripted use\r\n\r\nDocumentation\r\n=============\r\n\r\nComplete documentation can be found at:\r\n    http://pythonhosted.org/ScatPy\r\n\r\n\r\nDownload\r\n========\r\n\r\nThe package can be downloaded for installation via easy_install at\r\n    https://pypi.python.org/pypi/ScatPy\r\n\r\n\r\nExample\r\n=======\r\n\r\n.. code:: python\r\n\r\n    from ScatPy import *\r\n\r\n    # Establish target geometry (in um)\r\n    length = 0.100\r\n    radius = 0.020\r\n    target = targets.CYLNDRCAP(length, radius, d=0.005, material='Au_Palik.txt')\r\n\r\n    # Create a job to be run in the subdirectory tmp/\r\n    job = DDscat(folder = './tmp', target=target)\r\n\r\n    # Change the range of calculated wavelengths and ambient index\r\n    job.settings.wavelengths = ranges.How_Range(0.300, 0.600, 15)\r\n    job.settings.NAMBIENT = 1.0\r\n\r\n    # Run the job locally\r\n    job.calculate()\r\n\r\n    # Open the results qtable, plot Q_sca, and Q_abs, and add a legend\r\n    ans = results.QTable(folder = './tmp')\r\n    ax = ans.plot(['Q_sca', 'Q_abs'])\r\n    ax.legend(loc=0)", "description_content_type": null, "docs_url": "https://pythonhosted.org/ScatPy/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hohlraum/ScatPy", "keywords": null, "license": "GNU GPLv3", "maintainer": null, "maintainer_email": null, "name": "ScatPy", "package_url": "https://pypi.org/project/ScatPy/", "platform": "All", "project_url": "https://pypi.org/project/ScatPy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hohlraum/ScatPy"}, "release_url": "https://pypi.org/project/ScatPy/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A Python package for setting up DDSCAT jobs and analysing the results.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ScatPy is a Python package for interfacing to the popular scattering simulator\n<a href=\"http://www.astro.princeton.edu/~draine/DDSCAT.html\" rel=\"nofollow\">DDSCAT</a>. ScatPy provides a rich toolset to:</p>\n<ul>\n<li>Create standard DDSCAT scattering targets based on physical (rather than dipole) dimensions</li>\n<li>Construct and visualize complex custom scattering targets</li>\n<li>Manage the job parameters found in the ddscat.par file</li>\n<li>Organize iterative jobs requiring multiple targets or input parameters</li>\n<li>Script job submission to cluster queue managers</li>\n<li>Maintain profiles and defaults for deployment on platforms other than the local machine</li>\n<li>Load, plot and manipulate DDSCAT output tables</li>\n<li>Manage the output from multiple jobs through results collections</li>\n<li>Work with and visualize nearfield results as multidimensional numpy arrays</li>\n<li>Suitable for interactive or scripted use</li>\n</ul>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<dl>\n<dt>Complete documentation can be found at:</dt>\n<dd><a href=\"http://pythonhosted.org/ScatPy\" rel=\"nofollow\">http://pythonhosted.org/ScatPy</a></dd>\n</dl>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n<dl>\n<dt>The package can be downloaded for installation via easy_install at</dt>\n<dd><a href=\"https://pypi.python.org/pypi/ScatPy\" rel=\"nofollow\">https://pypi.python.org/pypi/ScatPy</a></dd>\n</dl>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ScatPy</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># Establish target geometry (in um)</span>\n<span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"mf\">0.100</span>\n<span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"mf\">0.020</span>\n<span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">targets</span><span class=\"o\">.</span><span class=\"n\">CYLNDRCAP</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mf\">0.005</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s1\">'Au_Palik.txt'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a job to be run in the subdirectory tmp/</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">DDscat</span><span class=\"p\">(</span><span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"s1\">'./tmp'</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Change the range of calculated wavelengths and ambient index</span>\n<span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">wavelengths</span> <span class=\"o\">=</span> <span class=\"n\">ranges</span><span class=\"o\">.</span><span class=\"n\">How_Range</span><span class=\"p\">(</span><span class=\"mf\">0.300</span><span class=\"p\">,</span> <span class=\"mf\">0.600</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">NAMBIENT</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n<span class=\"c1\"># Run the job locally</span>\n<span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">calculate</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Open the results qtable, plot Q_sca, and Q_abs, and add a legend</span>\n<span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">QTable</span><span class=\"p\">(</span><span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"s1\">'./tmp'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">ans</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">([</span><span class=\"s1\">'Q_sca'</span><span class=\"p\">,</span> <span class=\"s1\">'Q_abs'</span><span class=\"p\">])</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1196318, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9609680f8aec35ac86fadf040507b8d1", "sha256": "34215e50aa921b6f1265dfb603112680df06e0dab5c61ed9ed009aecf0ec8602"}, "downloads": -1, "filename": "ScatPy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9609680f8aec35ac86fadf040507b8d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 379762, "upload_time": "2014-08-19T16:48:44", "upload_time_iso_8601": "2014-08-19T16:48:44.017259Z", "url": "https://files.pythonhosted.org/packages/50/79/1a90189fc99b6d254e92471f57d62ee0658fbfeb90a4f9c1ade4ed30bcac/ScatPy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c1a1b076018175920b841b175ed5708c", "sha256": "ad93caa0808eab2ae6096ba6882dd70fa09f4a3c93344914c5d0f22b54ebbd6f"}, "downloads": -1, "filename": "ScatPy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c1a1b076018175920b841b175ed5708c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 380936, "upload_time": "2014-08-20T08:44:27", "upload_time_iso_8601": "2014-08-20T08:44:27.379455Z", "url": "https://files.pythonhosted.org/packages/ba/a2/3c60f03368a1e55571e486c179c6b184a968857a945c18ba80e73605fb75/ScatPy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1a1b076018175920b841b175ed5708c", "sha256": "ad93caa0808eab2ae6096ba6882dd70fa09f4a3c93344914c5d0f22b54ebbd6f"}, "downloads": -1, "filename": "ScatPy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c1a1b076018175920b841b175ed5708c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 380936, "upload_time": "2014-08-20T08:44:27", "upload_time_iso_8601": "2014-08-20T08:44:27.379455Z", "url": "https://files.pythonhosted.org/packages/ba/a2/3c60f03368a1e55571e486c179c6b184a968857a945c18ba80e73605fb75/ScatPy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:01 2020"}