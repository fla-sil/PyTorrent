{"info": {"author": "Cykooz", "author_email": "cykooz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Testing"], "description": "**************\ncykooz.testing\n**************\n\ncykooz.testing is collection of helper utilities for testing.\n\nUtilities\n*********\n\nDict\n====\n\nA dict object that can be compared with other dict object\nwithout regard to keys that did not presents in the ``Dict`` instance.\n\n.. code-block:: python\n\n    >>> from cykooz.testing import Dict\n    >>> d1 = Dict(a=1, b='foo')\n    >>> d2 = {'a': 1, 'b': 'foo', 'c': True}\n    >>> d1 == d2\n    True\n    >>> d2 == d1\n    True\n    >>> d1 != d2\n    False\n    >>> d3 = {'a': 1, 'c': True}\n    >>> d1 == d3\n    False\n    >>> d3 == d1\n    False\n    >>> d1 != d3\n    True\n    >>> Dict({'a': 1})\n    Dict({'a': 1})\n\nShort alias:\n\n.. code-block:: python\n\n    >>> from cykooz.testing import D\n    >>> {'a': 1, 'b': 'foo'} == D({'a': 1})\n    True\n\nList\n====\n\nA list object that can be compared with other list object\nwithout regard to extra items contains in the other list object.\n\n.. code-block:: python\n\n    >>> from cykooz.testing import List\n    >>> l1 = List([1, 'foo'])\n    >>> l2 = [1, 'foo', True]\n    >>> l1 == l2\n    True\n    >>> l2 == l1\n    True\n    >>> l1 != l2\n    False\n    >>> l3 = [1, True]\n    >>> l1 == l3\n    False\n    >>> l3 == l1\n    False\n    >>> l1 != l3\n    True\n    >>> l1 == [1]\n    False\n    >>> List([1, 'foo', True])\n    List([1, 'foo', True])\n    >>> List([Dict(), Dict()]) == [{'a': 1}, {'b': 2}]\n    True\n\nShort alias:\n\n.. code-block:: python\n\n    >>> from cykooz.testing import L\n    >>> [1, 'foo', True] == L([1, 'foo'])\n    True\n\nAnyValue\n========\n\nInstance of this class is equal to any other values.\n\n.. code-block:: python\n\n    >>> from cykooz.testing import AnyValue\n    >>> v = AnyValue()\n    >>> v == 1\n    True\n    >>> 1 == v\n    True\n    >>> v != 1\n    False\n    >>> v == {'a': 1, 'b': 'foo'}\n    True\n    >>> v == [1, 2, 3, 'b']\n    True\n    >>> v == AnyValue()\n    True\n    >>> v\n    <any value>\n    >>> {v: 1}\n    Traceback (most recent call last):\n    ...\n    TypeError: unhashable type: 'AnyValue'\n    >>> [v, v, v] == [1, 2, 'foo']\n    True\n    >>> [v, v, 1] == [1, 2, 'foo']\n    False\n    >>> [v, v] == [1, 2, 'foo']\n    False\n    >>> {'a': v, 'b': 2} == {'a': 1, 'b': 2}\n    True\n\nShort alias:\n\n.. code-block:: python\n\n    >>> from cykooz.testing import ANY\n    >>> 1 == ANY\n    True\n\nRegExpString\n============\n\nInstance of this class is equal to any other values if it is matched\nto give regexp pattern.\n\n.. code-block:: python\n\n    >>> from cykooz.testing import RegExpString\n    >>> v = RegExpString('first.*')\n    >>> v == 1\n    False\n    >>> 1 == v\n    False\n    >>> v != 1\n    True\n    >>> v == 'first class'\n    True\n    >>> 'first class' == v\n    True\n    >>> v != 'first class'\n    False\n    >>> v\n    <RegExpString: first.*>\n    >>> {v: 1}\n    Traceback (most recent call last):\n    ...\n    TypeError: unhashable type: 'RegExpString'\n    >>> [v, v, v] == [1, 2, 'first class']\n    False\n    >>> [v, v, v] == ['first class', 'first bus', 'first time']\n    True\n\nShort alias:\n\n.. code-block:: python\n\n    >>> from cykooz.testing import R\n    >>> 'first class' == R('first.*')\n    True\n\nUrl\n===\n\nA url object that can be compared with other url objects\nwithout regard to the vagaries of encoding, escaping, and ordering\nof parameters in query strings.\n\n.. code-block:: python\n\n    >>> from cykooz.testing import Url\n    >>> url1 = Url('http://domain.com/container?limit=6&offset=0')\n    >>> url2 = Url('http://domain.com/container?offset=0&limit=6')\n    >>> url1 == url2\n    True\n    >>> url2 = Url('http://domain.com/container?limit=6')\n    >>> url1 == url2\n    False\n    >>> url1 == 'http://domain.com/container?offset=0&limit=6'\n    True\n    >>> 'http://domain.com/container?offset=0&limit=6' == url1\n    True\n    >>> {'key': 'http://domain.com/container?offset=0&limit=6'} == {'key': url1}\n    True\n\nJson\n====\n\nAn instance of this class will be equal to any 'bytes' or 'str' value\nif object decoded by JSON-decoder from this value is equal to the first\nargument of this class.\n\n.. code-block:: python\n\n    >>> from cykooz.testing import Json\n    >>> v = Json({'foo': 1, 'bar': 'hello'})\n    >>> other = '{\"bar\": \"hello\", \"foo\": 1}'\n    >>> v == other\n    True\n    >>> other == v\n    True\n    >>> other != v\n    False\n    >>> v == 1\n    False\n    >>> 1 == v\n    False\n    >>> v != 1\n    True\n    >>> v == 'not json'\n    False\n    >>> 'not json' == v\n    False\n    >>> v != 'not json'\n    True\n    >>> v\n    <Json: {'foo': 1, 'bar': 'hello'}>\n    >>> {v: 1}\n    Traceback (most recent call last):\n    ...\n    TypeError: unhashable type: 'Json'\n    >>> [v, v, v] == [other, 2, 'first class']\n    False\n    >>> [v, v, v] == [other, other, other]\n    True\n    >>> '\"json str\"' == Json('json str')\n    True\n\nComplex example\n***************\n\n.. code-block:: python\n\n    >>> from cykooz.testing import D, L, R, J, Url, ANY\n    >>> some_value = {\n    ...     'created': '2020-04-14T12:34:00.002000+00:00',\n    ...     'is_active': True,\n    ...     'items': [\n    ...         {'key': 'a', 'value': 1},\n    ...         {'key': 'b', 'value': 2},\n    ...         {'key': 'c', 'value': 3},\n    ...     ],\n    ...     'source': 'https://domain.com/item?p=0&t=total',\n    ...     'response': '{\"status\": 200, \"body\": \"OK\"}',\n    ...     'size': 1024,\n    ... }\n    >>> some_value == D({\n    ...     'created': R('^2020-04.*'),\n    ...     'is_active': True,\n    ...     'items': L([\n    ...         {'key': 'a', 'value': 1},\n    ...         D({'value': ANY}),\n    ...     ]),\n    ...     'source': Url('https://domain.com/item?t=total&p=0'),\n    ...     'response': J({'status': 200, 'body': ANY}),\n    ... })\n    True\n\n\n..  Changelog format guide.\n    - Before make new release of core egg you MUST add here a header for new version with name \"Next release\".\n    - After all headers and paragraphs you MUST add only ONE empty line.\n    - At the end of sentence which describes some changes SHOULD be identifier of task from our task manager.\n      This identifier MUST be placed in brackets. If a hot fix has not the task identifier then you\n      can use the word \"HOTFIX\" instead of it.\n    - At the end of sentence MUST stand a point.\n    - List of changes in the one version MUST be grouped in the next sections:\n        - Features\n        - Changes\n        - Bug Fixes\n        - Docs\n\nCHANGELOG\n*********\n\n1.1.2 (2020-04-14)\n==================\n\nBug Fixes\n---------\n\n- Added new helper into ``__all__``.\n\n1.1 (2020-04-14)\n================\n\nFeatures\n--------\n\n- Added new helper ``Json``.\n\n1.0.3 (2020-03-20)\n==================\n\nBug Fixes\n---------\n\n- Fixed namespace declaration.\n\n1.0.1 (2019-07-12)\n==================\n\nBug Fixes\n---------\n\n- Fixed \"Development Status\" of package.\n\n1.0 (2019-07-12)\n================\n\nFeatures\n--------\n\n- Initial release.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Cykooz/cykooz.testing", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cykooz.testing", "package_url": "https://pypi.org/project/cykooz.testing/", "platform": "", "project_url": "https://pypi.org/project/cykooz.testing/", "project_urls": {"Homepage": "https://github.com/Cykooz/cykooz.testing"}, "release_url": "https://pypi.org/project/cykooz.testing/1.1.2/", "requires_dist": ["setuptools", "six", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Collection of helper utilities for testing.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>cykooz.testing is collection of helper utilities for testing.</p>\n<div id=\"utilities\">\n<h2>Utilities</h2>\n<div id=\"dict\">\n<h3>Dict</h3>\n<p>A dict object that can be compared with other dict object\nwithout regard to keys that did not presents in the <tt>Dict</tt> instance.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">Dict</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">==</span> <span class=\"n\">d2</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d2</span> <span class=\"o\">==</span> <span class=\"n\">d1</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">!=</span> <span class=\"n\">d2</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d3</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">==</span> <span class=\"n\">d3</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d3</span> <span class=\"o\">==</span> <span class=\"n\">d1</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d1</span> <span class=\"o\">!=</span> <span class=\"n\">d3</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"n\">Dict</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n</pre>\n<p>Short alias:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">D</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">}</span> <span class=\"o\">==</span> <span class=\"n\">D</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"list\">\n<h3>List</h3>\n<p>A list object that can be compared with other list object\nwithout regard to extra items contains in the other list object.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l1</span> <span class=\"o\">=</span> <span class=\"n\">List</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l1</span> <span class=\"o\">==</span> <span class=\"n\">l2</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l2</span> <span class=\"o\">==</span> <span class=\"n\">l1</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l1</span> <span class=\"o\">!=</span> <span class=\"n\">l2</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l1</span> <span class=\"o\">==</span> <span class=\"n\">l3</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l3</span> <span class=\"o\">==</span> <span class=\"n\">l1</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l1</span> <span class=\"o\">!=</span> <span class=\"n\">l3</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l1</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">List</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">])</span>\n<span class=\"n\">List</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">List</span><span class=\"p\">([</span><span class=\"n\">Dict</span><span class=\"p\">(),</span> <span class=\"n\">Dict</span><span class=\"p\">()])</span> <span class=\"o\">==</span> <span class=\"p\">[{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}]</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Short alias:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">L</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">L</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">])</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"anyvalue\">\n<h3>AnyValue</h3>\n<p>Instance of this class is equal to any other values.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">AnyValue</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">AnyValue</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"n\">v</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">}</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">]</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"n\">AnyValue</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span>\n<span class=\"o\">&lt;</span><span class=\"nb\">any</span> <span class=\"n\">value</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">unhashable</span> <span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"s1\">'AnyValue'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Short alias:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">ANY</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"n\">ANY</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"regexpstring\">\n<h3>RegExpString</h3>\n<p>Instance of this class is equal to any other values if it is matched\nto give regexp pattern.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">RegExpString</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">RegExpString</span><span class=\"p\">(</span><span class=\"s1\">'first.*'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"n\">v</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"s1\">'first class'</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'first class'</span> <span class=\"o\">==</span> <span class=\"n\">v</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">!=</span> <span class=\"s1\">'first class'</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span>\n<span class=\"o\">&lt;</span><span class=\"n\">RegExpString</span><span class=\"p\">:</span> <span class=\"n\">first</span><span class=\"o\">.*&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">unhashable</span> <span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"s1\">'RegExpString'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'first class'</span><span class=\"p\">]</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'first class'</span><span class=\"p\">,</span> <span class=\"s1\">'first bus'</span><span class=\"p\">,</span> <span class=\"s1\">'first time'</span><span class=\"p\">]</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Short alias:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">R</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'first class'</span> <span class=\"o\">==</span> <span class=\"n\">R</span><span class=\"p\">(</span><span class=\"s1\">'first.*'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"url\">\n<h3>Url</h3>\n<p>A url object that can be compared with other url objects\nwithout regard to the vagaries of encoding, escaping, and ordering\nof parameters in query strings.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">Url</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url1</span> <span class=\"o\">=</span> <span class=\"n\">Url</span><span class=\"p\">(</span><span class=\"s1\">'http://domain.com/container?limit=6&amp;offset=0'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url2</span> <span class=\"o\">=</span> <span class=\"n\">Url</span><span class=\"p\">(</span><span class=\"s1\">'http://domain.com/container?offset=0&amp;limit=6'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url1</span> <span class=\"o\">==</span> <span class=\"n\">url2</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url2</span> <span class=\"o\">=</span> <span class=\"n\">Url</span><span class=\"p\">(</span><span class=\"s1\">'http://domain.com/container?limit=6'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url1</span> <span class=\"o\">==</span> <span class=\"n\">url2</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url1</span> <span class=\"o\">==</span> <span class=\"s1\">'http://domain.com/container?offset=0&amp;limit=6'</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'http://domain.com/container?offset=0&amp;limit=6'</span> <span class=\"o\">==</span> <span class=\"n\">url1</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'http://domain.com/container?offset=0&amp;limit=6'</span><span class=\"p\">}</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"n\">url1</span><span class=\"p\">}</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"json\">\n<h3>Json</h3>\n<p>An instance of this class will be equal to any \u2018bytes\u2019 or \u2018str\u2019 value\nif object decoded by JSON-decoder from this value is equal to the first\nargument of this class.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">Json</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">Json</span><span class=\"p\">({</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"s1\">'{\"bar\": \"hello\", \"foo\": 1}'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"n\">other</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">other</span> <span class=\"o\">==</span> <span class=\"n\">v</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">other</span> <span class=\"o\">!=</span> <span class=\"n\">v</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"n\">v</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"s1\">'not json'</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'not json'</span> <span class=\"o\">==</span> <span class=\"n\">v</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span> <span class=\"o\">!=</span> <span class=\"s1\">'not json'</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">v</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Json</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">unhashable</span> <span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"s1\">'Json'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'first class'</span><span class=\"p\">]</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">]</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'\"json str\"'</span> <span class=\"o\">==</span> <span class=\"n\">Json</span><span class=\"p\">(</span><span class=\"s1\">'json str'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n</div>\n<div id=\"complex-example\">\n<h2>Complex example</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cykooz.testing</span> <span class=\"kn\">import</span> <span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">J</span><span class=\"p\">,</span> <span class=\"n\">Url</span><span class=\"p\">,</span> <span class=\"n\">ANY</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">some_value</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'created'</span><span class=\"p\">:</span> <span class=\"s1\">'2020-04-14T12:34:00.002000+00:00'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'is_active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'items'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>         <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>         <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>         <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">],</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'source'</span><span class=\"p\">:</span> <span class=\"s1\">'https://domain.com/item?p=0&amp;t=total'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'response'</span><span class=\"p\">:</span> <span class=\"s1\">'{\"status\": 200, \"body\": \"OK\"}'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'size'</span><span class=\"p\">:</span> <span class=\"mi\">1024</span><span class=\"p\">,</span>\n<span class=\"o\">...</span> <span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">some_value</span> <span class=\"o\">==</span> <span class=\"n\">D</span><span class=\"p\">({</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'created'</span><span class=\"p\">:</span> <span class=\"n\">R</span><span class=\"p\">(</span><span class=\"s1\">'^2020-04.*'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'is_active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'items'</span><span class=\"p\">:</span> <span class=\"n\">L</span><span class=\"p\">([</span>\n<span class=\"o\">...</span>         <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>         <span class=\"n\">D</span><span class=\"p\">({</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"n\">ANY</span><span class=\"p\">}),</span>\n<span class=\"o\">...</span>     <span class=\"p\">]),</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'source'</span><span class=\"p\">:</span> <span class=\"n\">Url</span><span class=\"p\">(</span><span class=\"s1\">'https://domain.com/item?t=total&amp;p=0'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'response'</span><span class=\"p\">:</span> <span class=\"n\">J</span><span class=\"p\">({</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s1\">'body'</span><span class=\"p\">:</span> <span class=\"n\">ANY</span><span class=\"p\">}),</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<div id=\"id1\">\n<h3>1.1.2 (2020-04-14)</h3>\n<h3 id=\"bug-fixes\"><span class=\"section-subtitle\">Bug Fixes</span></h3>\n<ul>\n<li>Added new helper into <tt>__all__</tt>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1 (2020-04-14)</h3>\n<h3 id=\"features\"><span class=\"section-subtitle\">Features</span></h3>\n<ul>\n<li>Added new helper <tt>Json</tt>.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.3 (2020-03-20)</h3>\n<h3 id=\"id4\"><span class=\"section-subtitle\">Bug Fixes</span></h3>\n<ul>\n<li>Fixed namespace declaration.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.1 (2019-07-12)</h3>\n<h3 id=\"id6\"><span class=\"section-subtitle\">Bug Fixes</span></h3>\n<ul>\n<li>Fixed \u201cDevelopment Status\u201d of package.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0 (2019-07-12)</h3>\n<h3 id=\"id8\"><span class=\"section-subtitle\">Features</span></h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7018813, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8708a8b2a9cac6d99a23af91c82d762d", "sha256": "bc712fe81a1b54062239c160fc14944b03679d0331c7901d64151d53062675e8"}, "downloads": -1, "filename": "cykooz.testing-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8708a8b2a9cac6d99a23af91c82d762d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5756, "upload_time": "2019-07-12T08:11:27", "upload_time_iso_8601": "2019-07-12T08:11:27.828098Z", "url": "https://files.pythonhosted.org/packages/ec/97/b059d21d58d1e4d5662039daf35e710e8621af07a4f6398a479687b2bb2d/cykooz.testing-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fb2f7aad7f4dc29f6e9620421952d5a", "sha256": "88ec5a01bd6391ecafe1905c8831411ebf7f1a9e55750da1e6b7ffd97669ddb7"}, "downloads": -1, "filename": "cykooz.testing-1.0.tar.gz", "has_sig": false, "md5_digest": "5fb2f7aad7f4dc29f6e9620421952d5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7594, "upload_time": "2019-07-12T08:11:29", "upload_time_iso_8601": "2019-07-12T08:11:29.838777Z", "url": "https://files.pythonhosted.org/packages/21/fb/6114eb892a683a26df0c29d0014180e64b10031046cf308a6fced17f7f59/cykooz.testing-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d481bae0396708910adb1f988c0dda57", "sha256": "bb967838bdf41915f4b745c57480e18f83bb5af38b3770428ee2f2e0c4b2fbd4"}, "downloads": -1, "filename": "cykooz.testing-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d481bae0396708910adb1f988c0dda57", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5819, "upload_time": "2019-07-12T08:23:15", "upload_time_iso_8601": "2019-07-12T08:23:15.392759Z", "url": "https://files.pythonhosted.org/packages/f1/04/7a4bf2c0cd33f534ae03c0d08d49b80ae2913d7b4e49365cc811b5bf7f2c/cykooz.testing-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69d43a5d64dc423831e702cd89c117c7", "sha256": "eba0aa36a8c2e7dc26b6f1e3848cb313f58af51a84bd083224dd7f92c19226b9"}, "downloads": -1, "filename": "cykooz.testing-1.0.1.tar.gz", "has_sig": false, "md5_digest": "69d43a5d64dc423831e702cd89c117c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7639, "upload_time": "2019-07-12T08:23:17", "upload_time_iso_8601": "2019-07-12T08:23:17.529158Z", "url": "https://files.pythonhosted.org/packages/95/3c/4e79d116cceb8b5927f2d690732d54490dc1a29cbe9d8c32ba1f4e014e90/cykooz.testing-1.0.1.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f135f4e1ac5880794d7a68c7c645cd62", "sha256": "06abdf6f9cf0af5a39c9af25cb56c9c76cb61c0ecf5c04a53bbb16d9970b486f"}, "downloads": -1, "filename": "cykooz.testing-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f135f4e1ac5880794d7a68c7c645cd62", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5367, "upload_time": "2020-03-20T13:34:46", "upload_time_iso_8601": "2020-03-20T13:34:46.358778Z", "url": "https://files.pythonhosted.org/packages/e3/a6/7e7ee45dc4a2fdfceb11eca1da1e15b24b37407b864346fed47afff8731f/cykooz.testing-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a118562bfa670b36747f4824c6e08f3b", "sha256": "0661a532cd882af234b2fbb42b381dfd5c45dc286c117a8c56644335d60a8b4c"}, "downloads": -1, "filename": "cykooz.testing-1.0.3.tar.gz", "has_sig": false, "md5_digest": "a118562bfa670b36747f4824c6e08f3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8895, "upload_time": "2020-03-20T13:34:49", "upload_time_iso_8601": "2020-03-20T13:34:49.090869Z", "url": "https://files.pythonhosted.org/packages/38/97/e5034fbe59824ef7151157835a3849fe4df6e6685b862188f15c92eef51b/cykooz.testing-1.0.3.tar.gz", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "91bb59007f84698bfd588ea85be422f9", "sha256": "36778f88a8f90e1bee5d00065fea6bda6584d876aeb2a103b0c525ea1117fb30"}, "downloads": -1, "filename": "cykooz.testing-1.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "91bb59007f84698bfd588ea85be422f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5788, "upload_time": "2019-05-13T13:51:43", "upload_time_iso_8601": "2019-05-13T13:51:43.209121Z", "url": "https://files.pythonhosted.org/packages/5a/14/5f25aa778847275ccd58b2ef01674b71b629258e61e0dd6e5a2a4601f97b/cykooz.testing-1.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12d8a3f1117e9932a88190cba706642d", "sha256": "b8caab4c02fe472a7816ca142f96d4b4768c246a5b70efc689b86c33576ce8df"}, "downloads": -1, "filename": "cykooz.testing-1.0b1.tar.gz", "has_sig": false, "md5_digest": "12d8a3f1117e9932a88190cba706642d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7592, "upload_time": "2019-05-13T13:51:45", "upload_time_iso_8601": "2019-05-13T13:51:45.269959Z", "url": "https://files.pythonhosted.org/packages/ba/fc/7687d06995afdaf6651dbd3e90738c55e86afae4c8a1ee09d839be209810/cykooz.testing-1.0b1.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "abea0accb0183a9918cd332de22c4957", "sha256": "ac2f8213545bec9c0b6117384f47e3f3f21ba8d995c121867ab52d606e53aa95"}, "downloads": -1, "filename": "cykooz.testing-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "abea0accb0183a9918cd332de22c4957", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6124, "upload_time": "2020-04-14T17:21:25", "upload_time_iso_8601": "2020-04-14T17:21:25.582931Z", "url": "https://files.pythonhosted.org/packages/84/70/9578e6f4cf7f399310040d68d004729612e6e3a74adaa7e733b9fcd01b3f/cykooz.testing-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "437d7d809f39e500c16850360acd1a73", "sha256": "a5838477a6b7272e14a1cd3f757a8a87d7129cc91b423d89fcf86caaca6f659d"}, "downloads": -1, "filename": "cykooz.testing-1.1.tar.gz", "has_sig": false, "md5_digest": "437d7d809f39e500c16850360acd1a73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10038, "upload_time": "2020-04-14T17:21:27", "upload_time_iso_8601": "2020-04-14T17:21:27.373085Z", "url": "https://files.pythonhosted.org/packages/d1/f7/8c1d538cde63c0cf561c80230adad94123cdb88f1d3fcb9ccc4304a91822/cykooz.testing-1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "9074d6c3b2b93ec8a3c9ad3f2dc181f8", "sha256": "bc15d8076440e02987b4324b27606cd97bc1cadcdafd054a566acc787b709d32"}, "downloads": -1, "filename": "cykooz.testing-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9074d6c3b2b93ec8a3c9ad3f2dc181f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6170, "upload_time": "2020-04-14T17:35:11", "upload_time_iso_8601": "2020-04-14T17:35:11.528192Z", "url": "https://files.pythonhosted.org/packages/ce/15/447df2ef24221b8e1d91a294740bd1c4dad95d23fef23d0620b65ef4fe8c/cykooz.testing-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8d32a1144ad32e607c7a5256e867bbc", "sha256": "5908d3db68824eed67dc58b20104c66b85883c3faf276eca5c3920b6d143c41e"}, "downloads": -1, "filename": "cykooz.testing-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e8d32a1144ad32e607c7a5256e867bbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10110, "upload_time": "2020-04-14T17:35:13", "upload_time_iso_8601": "2020-04-14T17:35:13.102907Z", "url": "https://files.pythonhosted.org/packages/35/c7/c125b883bddb21fdaba4e5bfe1b4b3dc702a2b6643558c471e10072a1f95/cykooz.testing-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9074d6c3b2b93ec8a3c9ad3f2dc181f8", "sha256": "bc15d8076440e02987b4324b27606cd97bc1cadcdafd054a566acc787b709d32"}, "downloads": -1, "filename": "cykooz.testing-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9074d6c3b2b93ec8a3c9ad3f2dc181f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6170, "upload_time": "2020-04-14T17:35:11", "upload_time_iso_8601": "2020-04-14T17:35:11.528192Z", "url": "https://files.pythonhosted.org/packages/ce/15/447df2ef24221b8e1d91a294740bd1c4dad95d23fef23d0620b65ef4fe8c/cykooz.testing-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8d32a1144ad32e607c7a5256e867bbc", "sha256": "5908d3db68824eed67dc58b20104c66b85883c3faf276eca5c3920b6d143c41e"}, "downloads": -1, "filename": "cykooz.testing-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e8d32a1144ad32e607c7a5256e867bbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10110, "upload_time": "2020-04-14T17:35:13", "upload_time_iso_8601": "2020-04-14T17:35:13.102907Z", "url": "https://files.pythonhosted.org/packages/35/c7/c125b883bddb21fdaba4e5bfe1b4b3dc702a2b6643558c471e10072a1f95/cykooz.testing-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:06 2020"}