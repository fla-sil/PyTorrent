{"info": {"author": "Matthew Laue", "author_email": "matt@zuar.com", "bugtrack_url": null, "classifiers": [], "description": "# APIToolbox\nFull-stack, asynchronous Python3 framework.\n\n## Design goals\n* Fast, full-service framework\n* Modular approach that does not force any design decisions\n\n## Getting started\n\n```python\nfrom fastapi import FastAPI, Request\n\nfrom apitoolbox import crud, db_registry\nfrom apitoolbox.middleware import SessionMiddleware\nfrom apitoolbox.models import BASE, Session, User\n\nDATABASE_URL = \"sqlite:///sqlite.db?check_same_thread=False\"\n\n\n# Define our model\nclass MyUser(User):\n    pass\n\n\n# Instantiate the application\napp = FastAPI()\napp.add_middleware(SessionMiddleware, bind=DATABASE_URL)\n\n# Create all tables\nbind = db_registry.get_or_create(DATABASE_URL)\nBASE.metadata.create_all(bind=bind)\n\n# Load some data\nsession = Session()\nfor name in [\"alice\", \"bob\", \"charlie\", \"david\"]:\n    user = MyUser.get_by_username(session, name)\n    if user is None:\n        user = MyUser(username=name)\n        session.add(user)\nsession.commit()\n\n# Add an endpoint\n@app.get(\"/users\")\nasync def list_users(\n        request: Request\n):\n    return await crud.list_instances(MyUser, request.state.session)\n```\n\nAssuming the above code is stored in the file `main.py`, then run it via:\n```bash\nuvicorn main:app --reload\n```\n\nCall the endpoint:\n```bash\ncurl -s localhost:8000/users | jq .\n```\n\nThe output should contain a list of 4 users,\neach with the attributes `id`, `username`, `updated_at` and `created_at`.\n \n<aside class=\"warning\">\nNOTE: Sqlite3 really doesn't like multiple threads using the same connection (hence <i>check_same_thread=False</i>).\nIn this case, it's safe but in production a different database should be used.\n</aside>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/zuarbase/apitoolbox/archive/v0.10.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zuarbase/apitoolbox", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "apitoolbox", "package_url": "https://pypi.org/project/apitoolbox/", "platform": "", "project_url": "https://pypi.org/project/apitoolbox/", "project_urls": {"Download": "https://github.com/zuarbase/apitoolbox/archive/v0.10.0.tar.gz", "Homepage": "https://github.com/zuarbase/apitoolbox"}, "release_url": "https://pypi.org/project/apitoolbox/0.10.0/", "requires_dist": null, "requires_python": "", "summary": "Full-stack async framework for Python.", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>APIToolbox</h1>\n<p>Full-stack, asynchronous Python3 framework.</p>\n<h2>Design goals</h2>\n<ul>\n<li>Fast, full-service framework</li>\n<li>Modular approach that does not force any design decisions</li>\n</ul>\n<h2>Getting started</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPI</span><span class=\"p\">,</span> <span class=\"n\">Request</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">apitoolbox</span> <span class=\"kn\">import</span> <span class=\"n\">crud</span><span class=\"p\">,</span> <span class=\"n\">db_registry</span>\n<span class=\"kn\">from</span> <span class=\"nn\">apitoolbox.middleware</span> <span class=\"kn\">import</span> <span class=\"n\">SessionMiddleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">apitoolbox.models</span> <span class=\"kn\">import</span> <span class=\"n\">BASE</span><span class=\"p\">,</span> <span class=\"n\">Session</span><span class=\"p\">,</span> <span class=\"n\">User</span>\n\n<span class=\"n\">DATABASE_URL</span> <span class=\"o\">=</span> <span class=\"s2\">\"sqlite:///sqlite.db?check_same_thread=False\"</span>\n\n\n<span class=\"c1\"># Define our model</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyUser</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"c1\"># Instantiate the application</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">()</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_middleware</span><span class=\"p\">(</span><span class=\"n\">SessionMiddleware</span><span class=\"p\">,</span> <span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">DATABASE_URL</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create all tables</span>\n<span class=\"n\">bind</span> <span class=\"o\">=</span> <span class=\"n\">db_registry</span><span class=\"o\">.</span><span class=\"n\">get_or_create</span><span class=\"p\">(</span><span class=\"n\">DATABASE_URL</span><span class=\"p\">)</span>\n<span class=\"n\">BASE</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">create_all</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">bind</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load some data</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">\"alice\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"charlie\"</span><span class=\"p\">,</span> <span class=\"s2\">\"david\"</span><span class=\"p\">]:</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">MyUser</span><span class=\"o\">.</span><span class=\"n\">get_by_username</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">MyUser</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add an endpoint</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/users\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">list_users</span><span class=\"p\">(</span>\n        <span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Request</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">crud</span><span class=\"o\">.</span><span class=\"n\">list_instances</span><span class=\"p\">(</span><span class=\"n\">MyUser</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">)</span>\n</pre>\n<p>Assuming the above code is stored in the file <code>main.py</code>, then run it via:</p>\n<pre>uvicorn main:app --reload\n</pre>\n<p>Call the endpoint:</p>\n<pre>curl -s localhost:8000/users <span class=\"p\">|</span> jq .\n</pre>\n<p>The output should contain a list of 4 users,\neach with the attributes <code>id</code>, <code>username</code>, <code>updated_at</code> and <code>created_at</code>.</p>\n&lt;aside class=\"warning\"&gt;\nNOTE: Sqlite3 really doesn't like multiple threads using the same connection (hence <i>check_same_thread=False</i>).\nIn this case, it's safe but in production a different database should be used.\n&lt;/aside&gt;\n\n          </div>"}, "last_serial": 7078775, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "d754b1ec9c94d11c7eb9e0c3ae4fad7b", "sha256": "f5fcd30fd774ffcd8ff862b0bdbfbc06444b5bc6c618ce45290f4e231af6ea71"}, "downloads": -1, "filename": "apitoolbox-0.10.0.tar.gz", "has_sig": false, "md5_digest": "d754b1ec9c94d11c7eb9e0c3ae4fad7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24515, "upload_time": "2020-04-22T18:45:18", "upload_time_iso_8601": "2020-04-22T18:45:18.635876Z", "url": "https://files.pythonhosted.org/packages/c5/c5/3aec702d19fee2f55f4ac6d2abee4ba54cd9cf2b9339e153433c6ae08da6/apitoolbox-0.10.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "fdee1f2ef112d63ef80330f0fb23d663", "sha256": "55fd5a5a435b38202069a7cbc973709e043d4df2c9e0cf70aff2ec2454663c6c"}, "downloads": -1, "filename": "apitoolbox-0.9.1.tar.gz", "has_sig": false, "md5_digest": "fdee1f2ef112d63ef80330f0fb23d663", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22344, "upload_time": "2020-03-28T20:57:42", "upload_time_iso_8601": "2020-03-28T20:57:42.309948Z", "url": "https://files.pythonhosted.org/packages/34/d7/88a9fee10c7641eb6e71e6d698e628663ec8a8091006d056b499887bfa2f/apitoolbox-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d754b1ec9c94d11c7eb9e0c3ae4fad7b", "sha256": "f5fcd30fd774ffcd8ff862b0bdbfbc06444b5bc6c618ce45290f4e231af6ea71"}, "downloads": -1, "filename": "apitoolbox-0.10.0.tar.gz", "has_sig": false, "md5_digest": "d754b1ec9c94d11c7eb9e0c3ae4fad7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24515, "upload_time": "2020-04-22T18:45:18", "upload_time_iso_8601": "2020-04-22T18:45:18.635876Z", "url": "https://files.pythonhosted.org/packages/c5/c5/3aec702d19fee2f55f4ac6d2abee4ba54cd9cf2b9339e153433c6ae08da6/apitoolbox-0.10.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:44 2020"}