{"info": {"author": "onpositive", "author_email": "vasily@onpositive.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Workspace Puller\n\n**A cli tool for building your python workspace and upload results to the Google Drive or Kaggle.com**\n\n## Description\n\nThis tools allows to:  \n * download workspace files or archives and extract(bztar, gztar, tar, xztar, zip) it if needed.\n * clone git repos\n * execute a python files\n * upload result to the Google Drive\n * upload result to the Kaggle.com\n\n## Installation:\n\n`pip install workspace-puller`\n\n## Usage\n\n`workspace-puller --config_url {url to the config file} --bot_token {telegram bot token}`\n\n**config_url** parameter specifies the URL to the configuration file (Required). Enclose the value in quotes (Recomended).\n\n**bot_token** parameter sets the Telegram bot token (Optional). [See: Creating a new bot](https://core.telegram.org/bots#6-botfather)\n\n#### Authorization\n\nThe `workspace-puller` has two Google Drive authorization methods:\n\n* local CLI. Just add [Google Drive folders IDs](#Google-drive-uploading) in config. .\n\n* remote via telegram chat bot. You need to add [Google Drive folders IDs](#Google-drive-uploading) in config, [telegram chat IDs](#Telegram-channels) and specify CLI param `--bot_token`.\nThe Telegram bot will send a authorization link, the user must visit link and send the Google token in the response message.\n\nKaggle credentials should be set inside configuration file in the [Kaggle](#Kaggle-uploading) settings section.\n\nAfter successful authorization Workspace Puller saves credentials inside workspace.\n\n## Configuartion\n\nConfiguration file has a YAML format. The file must be accessible through HTTP. \n\n#### Dataset list\n\nList of files to download. \nBztar, gztar, tar, xztar, zip files are unzipped by default. If it is not necessary, specify the node `extract_archives:` with a value `false`. (Default value: true)\n\n*Example:*\n```\ndataset_list:\n  - https://tlk.s3.yandex.net/dataset/TlkAgg2.zip\n  - https://tlk.s3.yandex.net/dataset/TlkPersonaChatRus.zip\n  - https://tlk.s3.yandex.net/dataset/TlkAgg5.zip\n  - https://tlk.s3.yandex.net/dataset/LRWC.zip\n  - https://tlk.s3.yandex.net/dataset/WordSenseRus.zip\nextract_archives: false    \n```\n\n#### Git repos\n\nRepos list for cloning. The repository will clone into a folder with the name specified as the record key.\nTo add a repository, add a record key with a child node `url: {repo url}`. \n\nIf you need a specific branch, specify its name in the child node `branch:` (Optional).\n\n*Example:*\n\n```\nrepos:\n  downloader: \n    url: https://github.com/bantonj/downloader\n  pyreadstat: \n    url: https://github.com/Roche/pyreadstat\n    branch: dev\n```\n\n#### Executing python code\n\nTo run the code, specify a list of files in the root node `script_file:` \n\n*Example:*\n```\nscript_file:\n  - example_file.py\n```\n\n#### Output folders\n\nList of folders to upload.\n\n*Example:*\n```\noutput_folder:\n  - ./results\n  - ./example\n```\n\n#### Google drive uploading\n\nList of google drive folder IDs to load results into.\n\n*Example:*\n```\ngoogle_drive:\n  - 1MOUoYor2N2TEbJFDKg-4HDKqF-a9AKRq\n  - 1MmhIYor2N2CVRJFDKg-4QACKF-a9AUGq\n  - 1ATAGart2N2TEbJFDKg-4QfACN-a9NRGq\n```\n\n#### Kaggle uploading\n\nKaggle new dataset settings\n\n- `username:` Kaggle user name (Required)\n- `key:` Kaggel api token (Required). See: https://github.com/Kaggle/kaggle-api#api-credentials\n- `slug:` The URL slug of the dataset you want to create. (Default value: `unknown_slug`)\n- `license:` \n    You can specify the following licenses for your dataset (Optional. Default value: `CC0-1.0`):\n\n    * `CC0-1.0:` CC0 Public Domain\n    * `CC-BY-SA-3.0:` CC BY-SA 3.0\n    * `CC-BY-SA-4.0:` CC BY-SA 4.0\n    * `CC-BY-NC-SA-4.0:` CC BY-NC-SA 4.0\n    * `GPL-2.0:` GPL 2\n    * `ODbL-1.0:` Database: Open Database, Contents: \u00a9 Original Authors\n    * `DbCL-1.0:` Database: Open Database, Contents: Database Contents\n    * `copyright-authors:` Data files \u00a9 Original Authors\n    * `other:` Other (specified in description)\n    * `unknown:` Unknown\n\n- `dataset_title:` Dataset title (Default value: `Unknown title`)\n- `isPrivate:` Create publicly (Optional. Default value: `true`)\n- `convertToCsv:` Convert tabular files to CSV  (Optional. Default value: `true`)\n- `dirmode:` What to do with directories: \"skip\" - ignore; \"zip\" - compressed upload; \"tar\" - uncompressed upload (Optional. Default value: `skip`)\n\n*Example:*\n\n```\nkaggle:\n  username: user_name\n  key: api_key\n  slug: slg_value  \n  license: CC0-1.0\n  dataset_title: dataset_title\n  isPrivate: true\n  convertToCsv: true\n  dirmode: tar\n```\n\n#### Telegram channels\n\nTelegram chats list for remote Google Drive authorization. The tool sends a message to these chats after the end of work.\n\n*Example:*\n\n```\ntelegram_channels:\n  - 750423741\n  - 750423742\n  - 750423743\n``` \n\n### Config example:\n\n```\ndataset_list:\n  - https://tlk.s3.yandex.net/dataset/TlkAgg2.zip\n  - https://tlk.s3.yandex.net/dataset/TlkPersonaChatRus.zip\n  - https://tlk.s3.yandex.net/dataset/TlkAgg5.zip\n  - https://tlk.s3.yandex.net/dataset/LRWC.zip\n  - https://tlk.s3.yandex.net/dataset/WordSenseRus.zip\nextract_archives: false  \nrepos:\n  downloader: \n    url: https://github.com/bantonj/downloader\n  pyreadstat: \n    url: https://github.com/Roche/pyreadstat\n    branch: dev\nscript_file:\n  - file.py\noutput_folder:\n  - ./results \ngoogle_drive:\n  - NTHDIXBMWNCGFIXBM-NTbmTHD-TGFIT\nkaggle:\n  username: OEKOIXBT\n  key: THDIDHTR4209YDHTR4209ydhcDHT\n  slug: wp_test_slg  \n  license: CC0-1.0\n  dataset_title: wsp_test_dataset\n  isPrivate: true\n  convertToCsv: true\n  dirmode: tar\ntelegram_channels:\n  - 750423741\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VasiliyLysokobylko/workspace-puller", "keywords": "workspace,pull,puller", "license": "", "maintainer": "", "maintainer_email": "", "name": "workspace-puller", "package_url": "https://pypi.org/project/workspace-puller/", "platform": "", "project_url": "https://pypi.org/project/workspace-puller/", "project_urls": {"Homepage": "https://github.com/VasiliyLysokobylko/workspace-puller"}, "release_url": "https://pypi.org/project/workspace-puller/0.0.22/", "requires_dist": null, "requires_python": "", "summary": "Workspace build tool.", "version": "0.0.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Workspace Puller</h1>\n<p><strong>A cli tool for building your python workspace and upload results to the Google Drive or Kaggle.com</strong></p>\n<h2>Description</h2>\n<p>This tools allows to:</p>\n<ul>\n<li>download workspace files or archives and extract(bztar, gztar, tar, xztar, zip) it if needed.</li>\n<li>clone git repos</li>\n<li>execute a python files</li>\n<li>upload result to the Google Drive</li>\n<li>upload result to the Kaggle.com</li>\n</ul>\n<h2>Installation:</h2>\n<p><code>pip install workspace-puller</code></p>\n<h2>Usage</h2>\n<p><code>workspace-puller --config_url {url to the config file} --bot_token {telegram bot token}</code></p>\n<p><strong>config_url</strong> parameter specifies the URL to the configuration file (Required). Enclose the value in quotes (Recomended).</p>\n<p><strong>bot_token</strong> parameter sets the Telegram bot token (Optional). <a href=\"https://core.telegram.org/bots#6-botfather\" rel=\"nofollow\">See: Creating a new bot</a></p>\n<h4>Authorization</h4>\n<p>The <code>workspace-puller</code> has two Google Drive authorization methods:</p>\n<ul>\n<li>\n<p>local CLI. Just add <a href=\"#Google-drive-uploading\" rel=\"nofollow\">Google Drive folders IDs</a> in config. .</p>\n</li>\n<li>\n<p>remote via telegram chat bot. You need to add <a href=\"#Google-drive-uploading\" rel=\"nofollow\">Google Drive folders IDs</a> in config, <a href=\"#Telegram-channels\" rel=\"nofollow\">telegram chat IDs</a> and specify CLI param <code>--bot_token</code>.\nThe Telegram bot will send a authorization link, the user must visit link and send the Google token in the response message.</p>\n</li>\n</ul>\n<p>Kaggle credentials should be set inside configuration file in the <a href=\"#Kaggle-uploading\" rel=\"nofollow\">Kaggle</a> settings section.</p>\n<p>After successful authorization Workspace Puller saves credentials inside workspace.</p>\n<h2>Configuartion</h2>\n<p>Configuration file has a YAML format. The file must be accessible through HTTP.</p>\n<h4>Dataset list</h4>\n<p>List of files to download.\nBztar, gztar, tar, xztar, zip files are unzipped by default. If it is not necessary, specify the node <code>extract_archives:</code> with a value <code>false</code>. (Default value: true)</p>\n<p><em>Example:</em></p>\n<pre><code>dataset_list:\n  - https://tlk.s3.yandex.net/dataset/TlkAgg2.zip\n  - https://tlk.s3.yandex.net/dataset/TlkPersonaChatRus.zip\n  - https://tlk.s3.yandex.net/dataset/TlkAgg5.zip\n  - https://tlk.s3.yandex.net/dataset/LRWC.zip\n  - https://tlk.s3.yandex.net/dataset/WordSenseRus.zip\nextract_archives: false    \n</code></pre>\n<h4>Git repos</h4>\n<p>Repos list for cloning. The repository will clone into a folder with the name specified as the record key.\nTo add a repository, add a record key with a child node <code>url: {repo url}</code>.</p>\n<p>If you need a specific branch, specify its name in the child node <code>branch:</code> (Optional).</p>\n<p><em>Example:</em></p>\n<pre><code>repos:\n  downloader: \n    url: https://github.com/bantonj/downloader\n  pyreadstat: \n    url: https://github.com/Roche/pyreadstat\n    branch: dev\n</code></pre>\n<h4>Executing python code</h4>\n<p>To run the code, specify a list of files in the root node <code>script_file:</code></p>\n<p><em>Example:</em></p>\n<pre><code>script_file:\n  - example_file.py\n</code></pre>\n<h4>Output folders</h4>\n<p>List of folders to upload.</p>\n<p><em>Example:</em></p>\n<pre><code>output_folder:\n  - ./results\n  - ./example\n</code></pre>\n<h4>Google drive uploading</h4>\n<p>List of google drive folder IDs to load results into.</p>\n<p><em>Example:</em></p>\n<pre><code>google_drive:\n  - 1MOUoYor2N2TEbJFDKg-4HDKqF-a9AKRq\n  - 1MmhIYor2N2CVRJFDKg-4QACKF-a9AUGq\n  - 1ATAGart2N2TEbJFDKg-4QfACN-a9NRGq\n</code></pre>\n<h4>Kaggle uploading</h4>\n<p>Kaggle new dataset settings</p>\n<ul>\n<li>\n<p><code>username:</code> Kaggle user name (Required)</p>\n</li>\n<li>\n<p><code>key:</code> Kaggel api token (Required). See: <a href=\"https://github.com/Kaggle/kaggle-api#api-credentials\" rel=\"nofollow\">https://github.com/Kaggle/kaggle-api#api-credentials</a></p>\n</li>\n<li>\n<p><code>slug:</code> The URL slug of the dataset you want to create. (Default value: <code>unknown_slug</code>)</p>\n</li>\n<li>\n<p><code>license:</code>\nYou can specify the following licenses for your dataset (Optional. Default value: <code>CC0-1.0</code>):</p>\n<ul>\n<li><code>CC0-1.0:</code> CC0 Public Domain</li>\n<li><code>CC-BY-SA-3.0:</code> CC BY-SA 3.0</li>\n<li><code>CC-BY-SA-4.0:</code> CC BY-SA 4.0</li>\n<li><code>CC-BY-NC-SA-4.0:</code> CC BY-NC-SA 4.0</li>\n<li><code>GPL-2.0:</code> GPL 2</li>\n<li><code>ODbL-1.0:</code> Database: Open Database, Contents: \u00a9 Original Authors</li>\n<li><code>DbCL-1.0:</code> Database: Open Database, Contents: Database Contents</li>\n<li><code>copyright-authors:</code> Data files \u00a9 Original Authors</li>\n<li><code>other:</code> Other (specified in description)</li>\n<li><code>unknown:</code> Unknown</li>\n</ul>\n</li>\n<li>\n<p><code>dataset_title:</code> Dataset title (Default value: <code>Unknown title</code>)</p>\n</li>\n<li>\n<p><code>isPrivate:</code> Create publicly (Optional. Default value: <code>true</code>)</p>\n</li>\n<li>\n<p><code>convertToCsv:</code> Convert tabular files to CSV  (Optional. Default value: <code>true</code>)</p>\n</li>\n<li>\n<p><code>dirmode:</code> What to do with directories: \"skip\" - ignore; \"zip\" - compressed upload; \"tar\" - uncompressed upload (Optional. Default value: <code>skip</code>)</p>\n</li>\n</ul>\n<p><em>Example:</em></p>\n<pre><code>kaggle:\n  username: user_name\n  key: api_key\n  slug: slg_value  \n  license: CC0-1.0\n  dataset_title: dataset_title\n  isPrivate: true\n  convertToCsv: true\n  dirmode: tar\n</code></pre>\n<h4>Telegram channels</h4>\n<p>Telegram chats list for remote Google Drive authorization. The tool sends a message to these chats after the end of work.</p>\n<p><em>Example:</em></p>\n<pre><code>telegram_channels:\n  - 750423741\n  - 750423742\n  - 750423743\n</code></pre>\n<h3>Config example:</h3>\n<pre><code>dataset_list:\n  - https://tlk.s3.yandex.net/dataset/TlkAgg2.zip\n  - https://tlk.s3.yandex.net/dataset/TlkPersonaChatRus.zip\n  - https://tlk.s3.yandex.net/dataset/TlkAgg5.zip\n  - https://tlk.s3.yandex.net/dataset/LRWC.zip\n  - https://tlk.s3.yandex.net/dataset/WordSenseRus.zip\nextract_archives: false  \nrepos:\n  downloader: \n    url: https://github.com/bantonj/downloader\n  pyreadstat: \n    url: https://github.com/Roche/pyreadstat\n    branch: dev\nscript_file:\n  - file.py\noutput_folder:\n  - ./results \ngoogle_drive:\n  - NTHDIXBMWNCGFIXBM-NTbmTHD-TGFIT\nkaggle:\n  username: OEKOIXBT\n  key: THDIDHTR4209YDHTR4209ydhcDHT\n  slug: wp_test_slg  \n  license: CC0-1.0\n  dataset_title: wsp_test_dataset\n  isPrivate: true\n  convertToCsv: true\n  dirmode: tar\ntelegram_channels:\n  - 750423741\n</code></pre>\n\n          </div>"}, "last_serial": 5735482, "releases": {"0.0.22": [{"comment_text": "", "digests": {"md5": "5c175db0ebc6b343354ae3ff0a2143ed", "sha256": "aee82b8b2405cbd03e509e75fc36c9c2eff19c9ff4c141b0f33aedde9a3a6d86"}, "downloads": -1, "filename": "workspace-puller-0.0.22.tar.gz", "has_sig": false, "md5_digest": "5c175db0ebc6b343354ae3ff0a2143ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10354, "upload_time": "2019-08-27T08:31:01", "upload_time_iso_8601": "2019-08-27T08:31:01.382035Z", "url": "https://files.pythonhosted.org/packages/4e/c6/e84cc9a6ff5901563a5c17b47b088a11cbdde3e6aebad073fb48335ab0e2/workspace-puller-0.0.22.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c175db0ebc6b343354ae3ff0a2143ed", "sha256": "aee82b8b2405cbd03e509e75fc36c9c2eff19c9ff4c141b0f33aedde9a3a6d86"}, "downloads": -1, "filename": "workspace-puller-0.0.22.tar.gz", "has_sig": false, "md5_digest": "5c175db0ebc6b343354ae3ff0a2143ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10354, "upload_time": "2019-08-27T08:31:01", "upload_time_iso_8601": "2019-08-27T08:31:01.382035Z", "url": "https://files.pythonhosted.org/packages/4e/c6/e84cc9a6ff5901563a5c17b47b088a11cbdde3e6aebad073fb48335ab0e2/workspace-puller-0.0.22.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:49 2020"}