{"info": {"author": "Kevin Funk", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django CMS", "Framework :: Django CMS :: 3.5", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: Libraries"], "description": "djangocms-scrape-google-photos-album\n=====================================\n\n**djangocms-scrape-google-photos-album** is a plugin for [django CMS](<http://django-cms.org>) that\nallows you to include a public google photo album in your site by way of scraping their html.\n\n---\n\n**WARNING: This is implementation is likely to break due to the nature of scraping. The regex will\nneed to be updated whenever google changes the structure of that page.**\n\n---\n\n\nRequirements\n------------\n* python 3.5+\n* django 1.11 (other versions may work, but this is the only one that has been tested)\n* django-cms 3.5 (other versions may work, but this is the only one that has been tested)\n\n\nInstallation\n------------\n```\npip install djangocms-scrape-google-photos-album\n```\n\n\nUsage\n-----\n\nNote: Results are cached for **30 minutes**. If this doesn't serve your needs,\n[make an issue](https://github.com/k-funk/djangocms-scrape-google-photos-album/issues/new).\n\n#### `settings.py`:\n```\nINSTALLED_APPS = (\n    ...\n    'djangocms_scrape_google_photos_album',\n    ....\n)\n```\n\n[Override the template](https://docs.djangoproject.com/en/3.0/howto/overriding-templates/)\nincluded, as it's likely to not be the html that you want. Below is an example of how you could use\nit with [Bootstrap 3](https://getbootstrap.com/docs/3.3/) and\n[featherlight.js](https://noelboss.github.io/featherlight/).\n\n#### `/my_project/templates/djangocms_scrape_google_photos_album/album.html`\n```\n{% if photo_urls %}\n  <div class=\"container-fluid\">\n    <div class=\"row\" data-featherlight-gallery data-featherlight-filter=\"a\" data-featherlight-type=\"image\">\n      {% for photo_url in photo_urls %}\n        <div class=\"col-xs-6 col-sm-4 col-md-3\">\n          <a href=\"{{ photo_url }}=w1200-h1200\">\n            <img src=\"{{ photo_url }}=w300-h300-c\" class=\"img-responsive\" />\n          </a>\n        </div>\n      {% endfor %}\n    </div>\n  </div>\n{% endif %}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/k-funk/djangocms-scrape-google-photos-album", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "djangocms-scrape-google-photos-album", "package_url": "https://pypi.org/project/djangocms-scrape-google-photos-album/", "platform": "", "project_url": "https://pypi.org/project/djangocms-scrape-google-photos-album/", "project_urls": {"Homepage": "https://github.com/k-funk/djangocms-scrape-google-photos-album"}, "release_url": "https://pypi.org/project/djangocms-scrape-google-photos-album/0.0.2/", "requires_dist": ["Django (>=1.11)", "django-cms (>=3.5)", "requests (>=2.0)"], "requires_python": "", "summary": "django-cms plugin to scrape a Google Photos public album link for photo urls.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>djangocms-scrape-google-photos-album</h1>\n<p><strong>djangocms-scrape-google-photos-album</strong> is a plugin for <a href=\"http://django-cms.org\" rel=\"nofollow\">django CMS</a> that\nallows you to include a public google photo album in your site by way of scraping their html.</p>\n<hr>\n<p><strong>WARNING: This is implementation is likely to break due to the nature of scraping. The regex will\nneed to be updated whenever google changes the structure of that page.</strong></p>\n<hr>\n<h2>Requirements</h2>\n<ul>\n<li>python 3.5+</li>\n<li>django 1.11 (other versions may work, but this is the only one that has been tested)</li>\n<li>django-cms 3.5 (other versions may work, but this is the only one that has been tested)</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install djangocms-scrape-google-photos-album\n</code></pre>\n<h2>Usage</h2>\n<p>Note: Results are cached for <strong>30 minutes</strong>. If this doesn't serve your needs,\n<a href=\"https://github.com/k-funk/djangocms-scrape-google-photos-album/issues/new\" rel=\"nofollow\">make an issue</a>.</p>\n<h4><code>settings.py</code>:</h4>\n<pre><code>INSTALLED_APPS = (\n    ...\n    'djangocms_scrape_google_photos_album',\n    ....\n)\n</code></pre>\n<p><a href=\"https://docs.djangoproject.com/en/3.0/howto/overriding-templates/\" rel=\"nofollow\">Override the template</a>\nincluded, as it's likely to not be the html that you want. Below is an example of how you could use\nit with <a href=\"https://getbootstrap.com/docs/3.3/\" rel=\"nofollow\">Bootstrap 3</a> and\n<a href=\"https://noelboss.github.io/featherlight/\" rel=\"nofollow\">featherlight.js</a>.</p>\n<h4><code>/my_project/templates/djangocms_scrape_google_photos_album/album.html</code></h4>\n<pre><code>{% if photo_urls %}\n  &lt;div class=\"container-fluid\"&gt;\n    &lt;div class=\"row\" data-featherlight-gallery data-featherlight-filter=\"a\" data-featherlight-type=\"image\"&gt;\n      {% for photo_url in photo_urls %}\n        &lt;div class=\"col-xs-6 col-sm-4 col-md-3\"&gt;\n          &lt;a href=\"{{ photo_url }}=w1200-h1200\"&gt;\n            &lt;img src=\"{{ photo_url }}=w300-h300-c\" class=\"img-responsive\" /&gt;\n          &lt;/a&gt;\n        &lt;/div&gt;\n      {% endfor %}\n    &lt;/div&gt;\n  &lt;/div&gt;\n{% endif %}\n</code></pre>\n\n          </div>"}, "last_serial": 6324337, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "48be2a3b179db51fe0235c736768ab4f", "sha256": "9b493b2987ed31e1832b0e3891b9bf4c8e8ba86eed79dbd241fc67d7bdd6284d"}, "downloads": -1, "filename": "djangocms_scrape_google_photos_album-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "48be2a3b179db51fe0235c736768ab4f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 19198, "upload_time": "2019-12-18T09:07:12", "upload_time_iso_8601": "2019-12-18T09:07:12.459048Z", "url": "https://files.pythonhosted.org/packages/f5/ca/62a1bca6a66acbde82c6f88ffc19d6a31cf4b645be605dd55f634f2a5079/djangocms_scrape_google_photos_album-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21acb15df8acd12115d755f360e69ef1", "sha256": "4ee7badde0a2f67ee096741b213f817fb515a2618d193f9c30268ac82c0d64b5"}, "downloads": -1, "filename": "djangocms-scrape-google-photos-album-0.0.1.tar.gz", "has_sig": false, "md5_digest": "21acb15df8acd12115d755f360e69ef1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17869, "upload_time": "2019-12-18T09:07:15", "upload_time_iso_8601": "2019-12-18T09:07:15.170146Z", "url": "https://files.pythonhosted.org/packages/b5/9d/8c6041a978de1100d3c8c6327c630c6727f8fb0cf266d61e51db41c18215/djangocms-scrape-google-photos-album-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "92651a8b9954d7b5e04710f057ea20fb", "sha256": "e594ea23cf64406ef5f52a60d0d0ffbdcf32cd6a1a594d373ce406f2cf1d003c"}, "downloads": -1, "filename": "djangocms_scrape_google_photos_album-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "92651a8b9954d7b5e04710f057ea20fb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 19206, "upload_time": "2019-12-18T09:13:55", "upload_time_iso_8601": "2019-12-18T09:13:55.291310Z", "url": "https://files.pythonhosted.org/packages/e9/ad/aed2b07ccbfd5a27b4b6ee8a3e8d8d193369ab5e3426fae5c518bb63ff70/djangocms_scrape_google_photos_album-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "914398108e3689f9f38817147f8f1760", "sha256": "9d011b406da8ac39db78522e636bbc6dd0ddcbaa0f2ea1ea7166cf52a72d7d2f"}, "downloads": -1, "filename": "djangocms-scrape-google-photos-album-0.0.2.tar.gz", "has_sig": false, "md5_digest": "914398108e3689f9f38817147f8f1760", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17873, "upload_time": "2019-12-18T09:13:57", "upload_time_iso_8601": "2019-12-18T09:13:57.816452Z", "url": "https://files.pythonhosted.org/packages/31/78/baeddc5b9ac039f53ec2e71f95f005e8e16e484f7d87893337a09cbc5714/djangocms-scrape-google-photos-album-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92651a8b9954d7b5e04710f057ea20fb", "sha256": "e594ea23cf64406ef5f52a60d0d0ffbdcf32cd6a1a594d373ce406f2cf1d003c"}, "downloads": -1, "filename": "djangocms_scrape_google_photos_album-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "92651a8b9954d7b5e04710f057ea20fb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 19206, "upload_time": "2019-12-18T09:13:55", "upload_time_iso_8601": "2019-12-18T09:13:55.291310Z", "url": "https://files.pythonhosted.org/packages/e9/ad/aed2b07ccbfd5a27b4b6ee8a3e8d8d193369ab5e3426fae5c518bb63ff70/djangocms_scrape_google_photos_album-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "914398108e3689f9f38817147f8f1760", "sha256": "9d011b406da8ac39db78522e636bbc6dd0ddcbaa0f2ea1ea7166cf52a72d7d2f"}, "downloads": -1, "filename": "djangocms-scrape-google-photos-album-0.0.2.tar.gz", "has_sig": false, "md5_digest": "914398108e3689f9f38817147f8f1760", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17873, "upload_time": "2019-12-18T09:13:57", "upload_time_iso_8601": "2019-12-18T09:13:57.816452Z", "url": "https://files.pythonhosted.org/packages/31/78/baeddc5b9ac039f53ec2e71f95f005e8e16e484f7d87893337a09cbc5714/djangocms-scrape-google-photos-album-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:01 2020"}