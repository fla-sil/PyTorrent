{"info": {"author": "Etienne Ackermann", "author_email": "era3@rice.edu", "bugtrack_url": null, "classifiers": [], "description": "======\nSnarky\n======\n\nSnarky is a useless Python package that makes it easy to add a ``jk`` (just kidding!) keyword argument to any function. Moreover, snarky defines several default behaviors for reacting whenever jk==True.\n\nQuick examples\n==============\n\nUsing snarky is really easy. Suppose we have a function:\n\n.. code-block:: python\n\n    def my_fun(a, b):\n        \"\"\"Sample function with arguments.\"\"\"\n        return a*b\n\nThen calling our function might look like this:\n\n.. code-block::\n\n    >>> my_func(4, 5)\n    20\n\n    >>> my_func(a=3, b=7)\n    21\n\n    >>> my_func(a=3, b=7, jk=True)\n    ---------------------------------------------------------------------------\n    TypeError                                 Traceback (most recent call last)\n    <ipython-input-143-231ea24720af> in <module>()\n    ----> 1 my_func(a=3, b=7, jk=True)\n\n    TypeError: my_func() got an unexpected keyword argument 'jk'\n\nBut that's lame! What function doesn't give you the option to say 'just kidding!', right?\n\nThat's where ``snarky`` shines!\n\nSimply add one of several default behaviors, or even define your own! Here, we will apply the default snarky behavior to our function:\n\n.. code-block:: python\n\n    from snarky import *\n\n    @snarky\n    def my_fun(a, b):\n        \"\"\"Sample function with arguments.\"\"\"\n        return a*b\n\nNow calling our function might look like this:\n\n.. code-block::\n\n    >>> my_func(4, 5)\n    20\n\n    >>> my_func(a=3, b=7)\n    21\n\n    >>> my_func(a=3, b=7, jk=True)\n    LOL! Then why are you asking me to run 'my_func'? Unbelievable!\n    21\n\nAnd the day is saved.\n\nInstallation\n============\n\nThe easiest way to install snarky is to use ``pip``. From the terminal, run:\n\n.. code-block:: bash\n\n    $ pip install snarky\n\nAlternatively, you can install the latest version of snarky by running the following commands:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/eackermann/snarky.git\n    $ cd snarky\n    $ python setup.py install\n\nLicense\n=======\n\nSnarky is distributed under the MIT license. See the `LICENSE <https://github.com/eackermann/snarky/blob/master/LICENSE>`_ file for details.\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/eackermann/snarky/tarball/0.0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eackermann/snarky/", "keywords": "useless kidding", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "snarky", "package_url": "https://pypi.org/project/snarky/", "platform": "any", "project_url": "https://pypi.org/project/snarky/", "project_urls": {"Download": "https://github.com/eackermann/snarky/tarball/0.0.1", "Homepage": "https://github.com/eackermann/snarky/"}, "release_url": "https://pypi.org/project/snarky/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Snarky adds a 'jk' (just kidding!) keyword argument to any function.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Snarky is a useless Python package that makes it easy to add a <tt>jk</tt> (just kidding!) keyword argument to any function. Moreover, snarky defines several default behaviors for reacting whenever jk==True.</p>\n<div id=\"quick-examples\">\n<h2>Quick examples</h2>\n<p>Using snarky is really easy. Suppose we have a function:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">my_fun</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Sample function with arguments.\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span>\n</pre>\n<p>Then calling our function might look like this:</p>\n<pre>&gt;&gt;&gt; my_func(4, 5)\n20\n\n&gt;&gt;&gt; my_func(a=3, b=7)\n21\n\n&gt;&gt;&gt; my_func(a=3, b=7, jk=True)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-143-231ea24720af&gt; in &lt;module&gt;()\n----&gt; 1 my_func(a=3, b=7, jk=True)\n\nTypeError: my_func() got an unexpected keyword argument 'jk'\n</pre>\n<p>But that\u2019s lame! What function doesn\u2019t give you the option to say \u2018just kidding!\u2019, right?</p>\n<p>That\u2019s where <tt>snarky</tt> shines!</p>\n<p>Simply add one of several default behaviors, or even define your own! Here, we will apply the default snarky behavior to our function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">snarky</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"nd\">@snarky</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_fun</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Sample function with arguments.\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">b</span>\n</pre>\n<p>Now calling our function might look like this:</p>\n<pre>&gt;&gt;&gt; my_func(4, 5)\n20\n\n&gt;&gt;&gt; my_func(a=3, b=7)\n21\n\n&gt;&gt;&gt; my_func(a=3, b=7, jk=True)\nLOL! Then why are you asking me to run 'my_func'? Unbelievable!\n21\n</pre>\n<p>And the day is saved.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to install snarky is to use <tt>pip</tt>. From the terminal, run:</p>\n<pre>$ pip install snarky\n</pre>\n<p>Alternatively, you can install the latest version of snarky by running the following commands:</p>\n<pre>$ git clone https://github.com/eackermann/snarky.git\n$ <span class=\"nb\">cd</span> snarky\n$ python setup.py install\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Snarky is distributed under the MIT license. See the <a href=\"https://github.com/eackermann/snarky/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 3738776, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4c25a97a3ab31190d371737bf2958a54", "sha256": "30540663941b845d5cbd5dd3afc156ecd10fb5dc7b276694d98f2e7dbda1fb83"}, "downloads": -1, "filename": "snarky-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4c25a97a3ab31190d371737bf2958a54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3163, "upload_time": "2018-04-05T19:40:59", "upload_time_iso_8601": "2018-04-05T19:40:59.341970Z", "url": "https://files.pythonhosted.org/packages/07/1d/a3b11a1e7e9d70faeb9ec44369cb1fd8ec613da66a02345eb8666f471452/snarky-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c25a97a3ab31190d371737bf2958a54", "sha256": "30540663941b845d5cbd5dd3afc156ecd10fb5dc7b276694d98f2e7dbda1fb83"}, "downloads": -1, "filename": "snarky-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4c25a97a3ab31190d371737bf2958a54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3163, "upload_time": "2018-04-05T19:40:59", "upload_time_iso_8601": "2018-04-05T19:40:59.341970Z", "url": "https://files.pythonhosted.org/packages/07/1d/a3b11a1e7e9d70faeb9ec44369cb1fd8ec613da66a02345eb8666f471452/snarky-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:31 2020"}