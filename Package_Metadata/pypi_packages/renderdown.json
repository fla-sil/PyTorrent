{"info": {"author": "Jeff Hung", "author_email": "jeff.cc.hung@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Topic :: Utilities"], "description": "# RenderDown\n\n[![Build Status](https://travis-ci.com/jeffhung/RenderDown.svg?branch=master)](https://travis-ci.com/jeffhung/RenderDown)\n\nGenerate Markdown text from templates; that is, the result of\nrendering is Markdown text, not HTML. This is useful for\ngenerating documents published on a Markdown platform like\n[GitHub Wikis](https://help.github.com/articles/about-github-wikis/).\n\n## Usage\n\nThe simplest way to use RenderDown is to invoke it from the\ncommandline:\n\n    renderdown.py TEMPLATE [--assign KEY=VALUE] [--outdir OUTDIR]\n\nThe required *TEMPLATE* argument is the path to a template file.\nSimple variables may be passed to the template with the `--assign`\noption. If the `--outdir` option is set, multi-file documents can be\ncreated, written to files in the output directory; if unset, the\nmultiple pages are appended together and printed to stdout.\n\nRenderDown can also be used as a library. The [API.md](API.md) file\n(generated using RenderDown and [CartogrAPI][]) is a reference of\nRenderDown's API.\n\n## Templates\n\nTemplates are rendered with [Mako][]. A `doc` variable is added to the\nnamespace of all templates (see [API.md](API.md#renderdown-DocManager)\nfor a description of the functions on `doc`). For example, if\n`mytemp.mako` is a template defined as follows:\n\n```\n# ${title}\n\nHere are two bullet points:\n${ doc.listitem(\"the first point\") }\n${ doc.listitem(\"note how wrapped lines\\nare indented\") }\n\n${ doc.blockquote(\n    \"the same is true for blockquotes, except the > character is\\n\"\n    \"repeated on the wrapped lines.\")\n}\n```\n\nThe the following call the RenderDown will render the template:\n\n```\n$ python renderdown.py example.md --assign title=\"Hello World\"\n# Hello World\n\nHere are two bullet points:\n* the first point\n* note how wrapped lines\n  are indented\n\n> the same is true for blockquotes, except the > character is\n> repeated on the wrapped lines.\n```\n\nThe original use case for rendering Markdown is for publishing Python\nAPI documentation on GitHub Wikis, so the default\n[templates](templates) target that platform.\n\nThe [templates](../../tree/master/templates) are defined for rendering\npackages, modules, classes, methods, and functions in a fairly\ngeneric way (inspired by  documentation), but they\ncan be reconfigured and specialized for individual projects.\n\n## Requirements\n\n- Python 3.3+\n- [Mako][]\n\n## How to Test\n\nRun the following command to test:\n\n```console\n$ pip install -r requirements.txt   # install dependencies\n$ pip install -e .                  # to import in tests\n$ python setup.py test              # run the test cases\n```\n\n## License\n\nMIT; see [LICENSE](LICENSE) for more information.\n\n## Project History\n\nThis project was created by Michael Wayne Goodman\n([@goodmami](https://github.com/goodmami)) and is now owned and maintained by\nJeff Hung ([@jeffhung](https://github.com/jeffhung)).\n\n## Links\n\n- [Mako](http://makotemplates.org/) - templating engine\n- [D3.js][]'s [wiki](https://github.com/mbostock/d3/wiki) - provided\n  aesthetic inspiration for the wiki organization\n- [CartogrAPI][] - used to map out Python APIs\n- Related Software:\n    + [doc2md](https://github.com/coldfix/doc2md)\n    + [pdoc](https://github.com/BurntSushi/pdoc)\n    + [Sphinx AutoAPI](https://github.com/rtfd/sphinx-autoapi)\n\n[Mako]: http://makotemplates.org/\n[D3.js]: https://d3js.org/\n[CartogrAPI]: https://github.com/goodmami/cartograpi", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeffhung/RenderDown", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "renderdown", "package_url": "https://pypi.org/project/renderdown/", "platform": "", "project_url": "https://pypi.org/project/renderdown/", "project_urls": {"Homepage": "https://github.com/jeffhung/RenderDown"}, "release_url": "https://pypi.org/project/renderdown/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Generate Markdown text from templates.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RenderDown</h1>\n<p><a href=\"https://travis-ci.com/jeffhung/RenderDown\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af03bf9805ff137f0129aef9807f16f2b88ef253/68747470733a2f2f7472617669732d63692e636f6d2f6a65666668756e672f52656e646572446f776e2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Generate Markdown text from templates; that is, the result of\nrendering is Markdown text, not HTML. This is useful for\ngenerating documents published on a Markdown platform like\n<a href=\"https://help.github.com/articles/about-github-wikis/\" rel=\"nofollow\">GitHub Wikis</a>.</p>\n<h2>Usage</h2>\n<p>The simplest way to use RenderDown is to invoke it from the\ncommandline:</p>\n<pre><code>renderdown.py TEMPLATE [--assign KEY=VALUE] [--outdir OUTDIR]\n</code></pre>\n<p>The required <em>TEMPLATE</em> argument is the path to a template file.\nSimple variables may be passed to the template with the <code>--assign</code>\noption. If the <code>--outdir</code> option is set, multi-file documents can be\ncreated, written to files in the output directory; if unset, the\nmultiple pages are appended together and printed to stdout.</p>\n<p>RenderDown can also be used as a library. The <a href=\"API.md\" rel=\"nofollow\">API.md</a> file\n(generated using RenderDown and <a href=\"https://github.com/goodmami/cartograpi\" rel=\"nofollow\">CartogrAPI</a>) is a reference of\nRenderDown's API.</p>\n<h2>Templates</h2>\n<p>Templates are rendered with <a href=\"http://makotemplates.org/\" rel=\"nofollow\">Mako</a>. A <code>doc</code> variable is added to the\nnamespace of all templates (see <a href=\"API.md#renderdown-DocManager\" rel=\"nofollow\">API.md</a>\nfor a description of the functions on <code>doc</code>). For example, if\n<code>mytemp.mako</code> is a template defined as follows:</p>\n<pre><code># ${title}\n\nHere are two bullet points:\n${ doc.listitem(\"the first point\") }\n${ doc.listitem(\"note how wrapped lines\\nare indented\") }\n\n${ doc.blockquote(\n    \"the same is true for blockquotes, except the &gt; character is\\n\"\n    \"repeated on the wrapped lines.\")\n}\n</code></pre>\n<p>The the following call the RenderDown will render the template:</p>\n<pre><code>$ python renderdown.py example.md --assign title=\"Hello World\"\n# Hello World\n\nHere are two bullet points:\n* the first point\n* note how wrapped lines\n  are indented\n\n&gt; the same is true for blockquotes, except the &gt; character is\n&gt; repeated on the wrapped lines.\n</code></pre>\n<p>The original use case for rendering Markdown is for publishing Python\nAPI documentation on GitHub Wikis, so the default\n<a href=\"templates\" rel=\"nofollow\">templates</a> target that platform.</p>\n<p>The <a href=\"../../tree/master/templates\" rel=\"nofollow\">templates</a> are defined for rendering\npackages, modules, classes, methods, and functions in a fairly\ngeneric way (inspired by  documentation), but they\ncan be reconfigured and specialized for individual projects.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.3+</li>\n<li><a href=\"http://makotemplates.org/\" rel=\"nofollow\">Mako</a></li>\n</ul>\n<h2>How to Test</h2>\n<p>Run the following command to test:</p>\n<pre><span class=\"gp\">$</span> pip install -r requirements.txt   <span class=\"c1\"># install dependencies</span>\n<span class=\"gp\">$</span> pip install -e .                  <span class=\"c1\"># to import in tests</span>\n<span class=\"gp\">$</span> python setup.py <span class=\"nb\">test</span>              <span class=\"c1\"># run the test cases</span>\n</pre>\n<h2>License</h2>\n<p>MIT; see <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> for more information.</p>\n<h2>Project History</h2>\n<p>This project was created by Michael Wayne Goodman\n(<a href=\"https://github.com/goodmami\" rel=\"nofollow\">@goodmami</a>) and is now owned and maintained by\nJeff Hung (<a href=\"https://github.com/jeffhung\" rel=\"nofollow\">@jeffhung</a>).</p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"http://makotemplates.org/\" rel=\"nofollow\">Mako</a> - templating engine</li>\n<li><a href=\"https://d3js.org/\" rel=\"nofollow\">D3.js</a>'s <a href=\"https://github.com/mbostock/d3/wiki\" rel=\"nofollow\">wiki</a> - provided\naesthetic inspiration for the wiki organization</li>\n<li><a href=\"https://github.com/goodmami/cartograpi\" rel=\"nofollow\">CartogrAPI</a> - used to map out Python APIs</li>\n<li>Related Software:\n<ul>\n<li><a href=\"https://github.com/coldfix/doc2md\" rel=\"nofollow\">doc2md</a></li>\n<li><a href=\"https://github.com/BurntSushi/pdoc\" rel=\"nofollow\">pdoc</a></li>\n<li><a href=\"https://github.com/rtfd/sphinx-autoapi\" rel=\"nofollow\">Sphinx AutoAPI</a></li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6061603, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "c4ba462306cb8b9005ebc8e856741520", "sha256": "15c3f5166040bf7d192c4cf6eacd5b0df917a2ec7376d899bdf79056db26f2f4"}, "downloads": -1, "filename": "renderdown-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c4ba462306cb8b9005ebc8e856741520", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6458, "upload_time": "2019-11-01T02:43:48", "upload_time_iso_8601": "2019-11-01T02:43:48.533932Z", "url": "https://files.pythonhosted.org/packages/1e/93/9198f747d9656bfecb9f6d87d8b2c950e17b06677567f38afda856b04794/renderdown-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4ba462306cb8b9005ebc8e856741520", "sha256": "15c3f5166040bf7d192c4cf6eacd5b0df917a2ec7376d899bdf79056db26f2f4"}, "downloads": -1, "filename": "renderdown-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c4ba462306cb8b9005ebc8e856741520", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6458, "upload_time": "2019-11-01T02:43:48", "upload_time_iso_8601": "2019-11-01T02:43:48.533932Z", "url": "https://files.pythonhosted.org/packages/1e/93/9198f747d9656bfecb9f6d87d8b2c950e17b06677567f38afda856b04794/renderdown-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:47 2020"}