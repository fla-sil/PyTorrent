{"info": {"author": "Douglas Kastle", "author_email": "douglas.kastle@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: MIT License", "Topic :: Artistic Software"], "description": "[![Travis Build Status](https://travis-ci.org/nangtani/blender-addon-tester.svg?branch=master)](https://travis-ci.org/nangtani/blender-addon-tester)\n![Github Actions pypi.org nightly tests](https://github.com/nangtani/blender-addon-tester/workflows/test-fake-addon-example-from-github-pip-nightly/badge.svg)\n![Github Actions local Python wheel tests](https://github.com/nangtani/blender-addon-tester/workflows/test-fake-addon-example-from-local-wheel/badge.svg)\n[![codecov](https://codecov.io/gh/nangtani/blender-addon-tester/branch/master/graph/badge.svg)](https://codecov.io/gh/nangtani/blender-addon-tester)\n\n# blender-addon-tester\n\n## Background\n\nThe 3D tool, [Blender](https://blender.org), allows its functionality to be extended, using python.  These are called addons. \n\nTypically an addon will be released and it will be working with the version of blender that is on release at that time. However as time pass the, blender releases new versions, adding to and deprecrating parts of the exposed API.  After a while it is not uncommon for an addon to stop working.\n\nThis was seen a lot when blender made a upgrade move from 2.79 to 2.80.  Some parts of the exposed API were radically different and it broke a lot of addons.  \n\nA major effort was put into rework thes addons to get them working again, but the exercise merely highlighted that there is no native testing environment that:\n\n* Allows an addon to be tested against multiple versions of blender and multiple OSs (ubuntu, windows and macosx)\n* Used an industry standard of testing, i.e. `pytest`\n* Plugs into a continuous integration tool, i.e. Github Actions, Travis CI\n* Ability to test a passing addon against the nightly builds, to catch API breaks as close to when they happen\n* Code coverage of the addon. Used to assess comprehensivness of the tests.\n\n## What does it do\n\nThis python module allows command line `pytest`ing to be performed on different versions of blender. \n\nIt will download and maintain different versions of blender locally.  \n\nIt will install the addon under test into a location accessible by the respective version of blender. \n\nIt will execute a series of tests, by default, located in the `tests` directory. These tests are written in the `pytest` format.\n\nOnce the addon has been completed and the tests have been written, they are checked in to github. They can be run against a continous integration tool.  There is currently support for both Github Actions and Travis CI.\n\n## Usage\n\nIt can be confusing with blender as it has an internal version of python that is different from the system python.  `blender-addon-tester` is install to the system python and is used to call different versions of blender.  It is inside this instance of blender that the addon under test gets installed.\n\n`blender-addon-tester` can be install from pypi:\n\n`pip install blender-addon-tester`\n\nThen it can be called from any script:\n\n```\n    import blender_addon_tester as BAT\n    BAT.test_blender_addon(addon_path=addon, blender_revision=blender_rev)\n```\nOnce called, it will\n\n* Check to see if the version of blender is presnet in the cache location, if not it will download that version of blender and install it to the cache location, installing all the extra python modules required to enable pytest-ing and coverage.\n* It will install the addon to the version of blender\n* It will run all the tests, default `tests` directory, but this can be explictly set. \\it will report a pass or failure.  This result is written to be capturable by CI tools.\n* It will also report to coverage of the test.  This coverage can be almalgamated across all versions to get a full idea of testing.\n\nOnline continuous integration and code coverage need to be setup explictly. \n\n## pytest\n\nExample output of a successful `pytest`.\n\n```\n============================= test session starts =============================\nplatform win32 -- Python 3.7.4, pytest-5.4.1, py-1.8.1, pluggy-0.13.1 -- C:\\blender\\blender-2.82\\blender.exe\ncachedir: .pytest_cache\nrootdir: C:\\blender\\blender-fake-addon\nplugins: cov-2.8.1\ncollected 2 items\n\ntests/test_version.py::test_versionID_pass PASSED                         [ 50%]\ntests/test_version.py::test_versionID_fail PASSED                         [100%]\n\n========================== 2 passed in 0.20 seconds ===========================\n```\n\nExample of a failing `pytest`.\n\n```\n_____________________________ test_versionID_pass ______________________________\nbpy_module = 'fake_addon'\n    def test_versionID_pass(bpy_module):\n        expect_version = (1, 0, 1)\n        return_version = get_version(bpy_module)\n>       assert  expect_version == return_version\nE       assert (1, 0, 1) == (0, 0, 1)\nE         At index 0 diff: 1 != 0\nE         Use -v to get the full diff\ntests/test_pytest.py:11: AssertionError\n====================== 1 failed, 1 passed in 0.08 seconds ======================\n```\n\n## Operational\n\nTo see a working addon environment checkout this repo.  In the sub directory `examples\\testing-fake-addon`, it contains a dummy addon that that can be sued to verify that the whole enviroment is setup correctly.\n```\ncd examples\\testing-fake-addon\ntest_addon_blender.py fake_addon 2.82\n```\nHowever it is better to use this modile with an addon in a different repo.  Check out this repo for that example, [fake_addon](https://github.com/nangtani/blender-fake-addon)\n\n## Projects using `blender-addon-tester`\n\n[fake_addon](https://github.com/nangtani/blender-fake-addon)\n\n[blender-import-lwo](https://github.com/nangtani/blender-import-lwo)\n\n[ba_io_scene_obj](https://github.com/nangtani/ba_io_scene_obj)\n\n[gmic-blender](https://github.com/myselfhimself/gmic-blender)\n\n## Releases\n\n### v0.6\nAdded PYTEST_ARGS on the config option\nNeed a separate PYTHONPATH for the scripts directory that the addon uses for helper scripts:\n    `addon_helper = os.environ.get(\"ADDON_TEST_HELPER\", None)`\n\n### v0.5\nFix blender rev edit bug\n\n### v0.4\nIntroduce per blender rev addons support\n\n### v0.3\nNew release required to to repo migration\n\n### v0.2\n\nAdded default cache location if not specified\nDeleted built in addon from reference blender, if testing new version of addon\nUpdated setup.py to remove unnecessary modules needed for blender-addon-tester to work.\nUpdated documentation\n\n### v0.1\nInitial checkin to pypi\nWorking against github actions\nWorking against Travis CI\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nangtani/blender-addon-tester", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "blender-addon-tester", "package_url": "https://pypi.org/project/blender-addon-tester/", "platform": "", "project_url": "https://pypi.org/project/blender-addon-tester/", "project_urls": {"Homepage": "https://github.com/nangtani/blender-addon-tester"}, "release_url": "https://pypi.org/project/blender-addon-tester/0.6.2/", "requires_dist": ["bs4", "requests", "flake8", "dmglib"], "requires_python": ">=3.7", "summary": "Add-On Tester for Blender using Pytest", "version": "0.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/nangtani/blender-addon-tester\" rel=\"nofollow\"><img alt=\"Travis Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40eb1e87155aeeaf33ed00572fd7d06cc7fe81a3/68747470733a2f2f7472617669732d63692e6f72672f6e616e6774616e692f626c656e6465722d6164646f6e2d7465737465722e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"Github Actions pypi.org nightly tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fa58c58bdcf86ae64606b872756f3349c19f578/68747470733a2f2f6769746875622e636f6d2f6e616e6774616e692f626c656e6465722d6164646f6e2d7465737465722f776f726b666c6f77732f746573742d66616b652d6164646f6e2d6578616d706c652d66726f6d2d6769746875622d7069702d6e696768746c792f62616467652e737667\">\n<img alt=\"Github Actions local Python wheel tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f83ae3b687481c8af5f3b959343ae18d52b46ce/68747470733a2f2f6769746875622e636f6d2f6e616e6774616e692f626c656e6465722d6164646f6e2d7465737465722f776f726b666c6f77732f746573742d66616b652d6164646f6e2d6578616d706c652d66726f6d2d6c6f63616c2d776865656c2f62616467652e737667\">\n<a href=\"https://codecov.io/gh/nangtani/blender-addon-tester\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9b5a3b048630bd214df3ee64e42c6155b208a3b/68747470733a2f2f636f6465636f762e696f2f67682f6e616e6774616e692f626c656e6465722d6164646f6e2d7465737465722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>blender-addon-tester</h1>\n<h2>Background</h2>\n<p>The 3D tool, <a href=\"https://blender.org\" rel=\"nofollow\">Blender</a>, allows its functionality to be extended, using python.  These are called addons.</p>\n<p>Typically an addon will be released and it will be working with the version of blender that is on release at that time. However as time pass the, blender releases new versions, adding to and deprecrating parts of the exposed API.  After a while it is not uncommon for an addon to stop working.</p>\n<p>This was seen a lot when blender made a upgrade move from 2.79 to 2.80.  Some parts of the exposed API were radically different and it broke a lot of addons.</p>\n<p>A major effort was put into rework thes addons to get them working again, but the exercise merely highlighted that there is no native testing environment that:</p>\n<ul>\n<li>Allows an addon to be tested against multiple versions of blender and multiple OSs (ubuntu, windows and macosx)</li>\n<li>Used an industry standard of testing, i.e. <code>pytest</code></li>\n<li>Plugs into a continuous integration tool, i.e. Github Actions, Travis CI</li>\n<li>Ability to test a passing addon against the nightly builds, to catch API breaks as close to when they happen</li>\n<li>Code coverage of the addon. Used to assess comprehensivness of the tests.</li>\n</ul>\n<h2>What does it do</h2>\n<p>This python module allows command line <code>pytest</code>ing to be performed on different versions of blender.</p>\n<p>It will download and maintain different versions of blender locally.</p>\n<p>It will install the addon under test into a location accessible by the respective version of blender.</p>\n<p>It will execute a series of tests, by default, located in the <code>tests</code> directory. These tests are written in the <code>pytest</code> format.</p>\n<p>Once the addon has been completed and the tests have been written, they are checked in to github. They can be run against a continous integration tool.  There is currently support for both Github Actions and Travis CI.</p>\n<h2>Usage</h2>\n<p>It can be confusing with blender as it has an internal version of python that is different from the system python.  <code>blender-addon-tester</code> is install to the system python and is used to call different versions of blender.  It is inside this instance of blender that the addon under test gets installed.</p>\n<p><code>blender-addon-tester</code> can be install from pypi:</p>\n<p><code>pip install blender-addon-tester</code></p>\n<p>Then it can be called from any script:</p>\n<pre><code>    import blender_addon_tester as BAT\n    BAT.test_blender_addon(addon_path=addon, blender_revision=blender_rev)\n</code></pre>\n<p>Once called, it will</p>\n<ul>\n<li>Check to see if the version of blender is presnet in the cache location, if not it will download that version of blender and install it to the cache location, installing all the extra python modules required to enable pytest-ing and coverage.</li>\n<li>It will install the addon to the version of blender</li>\n<li>It will run all the tests, default <code>tests</code> directory, but this can be explictly set. \\it will report a pass or failure.  This result is written to be capturable by CI tools.</li>\n<li>It will also report to coverage of the test.  This coverage can be almalgamated across all versions to get a full idea of testing.</li>\n</ul>\n<p>Online continuous integration and code coverage need to be setup explictly.</p>\n<h2>pytest</h2>\n<p>Example output of a successful <code>pytest</code>.</p>\n<pre><code>============================= test session starts =============================\nplatform win32 -- Python 3.7.4, pytest-5.4.1, py-1.8.1, pluggy-0.13.1 -- C:\\blender\\blender-2.82\\blender.exe\ncachedir: .pytest_cache\nrootdir: C:\\blender\\blender-fake-addon\nplugins: cov-2.8.1\ncollected 2 items\n\ntests/test_version.py::test_versionID_pass PASSED                         [ 50%]\ntests/test_version.py::test_versionID_fail PASSED                         [100%]\n\n========================== 2 passed in 0.20 seconds ===========================\n</code></pre>\n<p>Example of a failing <code>pytest</code>.</p>\n<pre><code>_____________________________ test_versionID_pass ______________________________\nbpy_module = 'fake_addon'\n    def test_versionID_pass(bpy_module):\n        expect_version = (1, 0, 1)\n        return_version = get_version(bpy_module)\n&gt;       assert  expect_version == return_version\nE       assert (1, 0, 1) == (0, 0, 1)\nE         At index 0 diff: 1 != 0\nE         Use -v to get the full diff\ntests/test_pytest.py:11: AssertionError\n====================== 1 failed, 1 passed in 0.08 seconds ======================\n</code></pre>\n<h2>Operational</h2>\n<p>To see a working addon environment checkout this repo.  In the sub directory <code>examples\\testing-fake-addon</code>, it contains a dummy addon that that can be sued to verify that the whole enviroment is setup correctly.</p>\n<pre><code>cd examples\\testing-fake-addon\ntest_addon_blender.py fake_addon 2.82\n</code></pre>\n<p>However it is better to use this modile with an addon in a different repo.  Check out this repo for that example, <a href=\"https://github.com/nangtani/blender-fake-addon\" rel=\"nofollow\">fake_addon</a></p>\n<h2>Projects using <code>blender-addon-tester</code></h2>\n<p><a href=\"https://github.com/nangtani/blender-fake-addon\" rel=\"nofollow\">fake_addon</a></p>\n<p><a href=\"https://github.com/nangtani/blender-import-lwo\" rel=\"nofollow\">blender-import-lwo</a></p>\n<p><a href=\"https://github.com/nangtani/ba_io_scene_obj\" rel=\"nofollow\">ba_io_scene_obj</a></p>\n<p><a href=\"https://github.com/myselfhimself/gmic-blender\" rel=\"nofollow\">gmic-blender</a></p>\n<h2>Releases</h2>\n<h3>v0.6</h3>\n<p>Added PYTEST_ARGS on the config option\nNeed a separate PYTHONPATH for the scripts directory that the addon uses for helper scripts:\n<code>addon_helper = os.environ.get(\"ADDON_TEST_HELPER\", None)</code></p>\n<h3>v0.5</h3>\n<p>Fix blender rev edit bug</p>\n<h3>v0.4</h3>\n<p>Introduce per blender rev addons support</p>\n<h3>v0.3</h3>\n<p>New release required to to repo migration</p>\n<h3>v0.2</h3>\n<p>Added default cache location if not specified\nDeleted built in addon from reference blender, if testing new version of addon\nUpdated setup.py to remove unnecessary modules needed for blender-addon-tester to work.\nUpdated documentation</p>\n<h3>v0.1</h3>\n<p>Initial checkin to pypi\nWorking against github actions\nWorking against Travis CI</p>\n\n          </div>"}, "last_serial": 7040027, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fd029b25f03da8ab2e7a5456c0030365", "sha256": "d117ac89c7ccd10c42728bd9ffddd4c2b62846fceaffbe8cc015d56aed72dafe"}, "downloads": -1, "filename": "blender_addon_tester-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fd029b25f03da8ab2e7a5456c0030365", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 13659, "upload_time": "2020-03-31T22:59:39", "upload_time_iso_8601": "2020-03-31T22:59:39.239625Z", "url": "https://files.pythonhosted.org/packages/03/3c/f3d5bb5223f2f73556bcdb4a63d55124a0118a240afc3bdea0d45e31294c/blender_addon_tester-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "243c91a68191e7616b20e55eb33bea04", "sha256": "4cce19cb6a9dccb488349e400673c87d02fe77af5c6e9966ba1a3ecd97ea5a57"}, "downloads": -1, "filename": "blender_addon_tester-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "243c91a68191e7616b20e55eb33bea04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12855, "upload_time": "2020-04-03T17:46:02", "upload_time_iso_8601": "2020-04-03T17:46:02.476992Z", "url": "https://files.pythonhosted.org/packages/e7/8d/a91dc6f48909c5e8d981bdfcdbe96603981dece7e65bb2e916649c09e0a9/blender_addon_tester-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "cf5db3bff63c5f9dec2e7b06cbb7d655", "sha256": "eef804fabc1356014180ce42eaf5c358b24d7730aab884ac481a619fda9e75e5"}, "downloads": -1, "filename": "blender_addon_tester-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cf5db3bff63c5f9dec2e7b06cbb7d655", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12924, "upload_time": "2020-04-03T18:01:41", "upload_time_iso_8601": "2020-04-03T18:01:41.975529Z", "url": "https://files.pythonhosted.org/packages/43/bc/da9e58470da49677525995301dab812199868fa6fff1597b9d3c972b7c5f/blender_addon_tester-0.3-py3-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "a16453fcd3f3b0d9a5dfef6d3d715da0", "sha256": "1c819f1b498372734fd6a0c5b14fe31652aac907618d3a86d764960ecd6dd268"}, "downloads": -1, "filename": "blender_addon_tester-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a16453fcd3f3b0d9a5dfef6d3d715da0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13433, "upload_time": "2020-04-14T23:16:34", "upload_time_iso_8601": "2020-04-14T23:16:34.142914Z", "url": "https://files.pythonhosted.org/packages/ad/49/26e258f08cbd587680e9450d4f557ebcaa38bd702c2b82498cef860c8e6d/blender_addon_tester-0.4-py3-none-any.whl", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "4cfe068b8ca8181e6cc7672160de6288", "sha256": "cd76487fef88218abde9bfb5da651d9cc71af7bf1c734b7b55afa16131ed48d3"}, "downloads": -1, "filename": "blender_addon_tester-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4cfe068b8ca8181e6cc7672160de6288", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13621, "upload_time": "2020-04-15T21:22:30", "upload_time_iso_8601": "2020-04-15T21:22:30.608261Z", "url": "https://files.pythonhosted.org/packages/fd/4e/1581631b9cf0eb7025f37668fea4d47a95b92c33a6fbcd95e3556f1eea41/blender_addon_tester-0.5-py3-none-any.whl", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "d59cbfd6b6484ab3a59268909e77dbb3", "sha256": "409c905b77487a01bb9a82f421d18e7d215fe45c3acca5a2290e6d091de41ea2"}, "downloads": -1, "filename": "blender_addon_tester-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d59cbfd6b6484ab3a59268909e77dbb3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13729, "upload_time": "2020-04-15T23:05:09", "upload_time_iso_8601": "2020-04-15T23:05:09.713539Z", "url": "https://files.pythonhosted.org/packages/00/4b/ecf137fc14451ee9d2832ea13a8b49041d406bbb2eb7c6604b82df4b5d43/blender_addon_tester-0.6-py3-none-any.whl", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "d3622af59acb833d8a5b16a665cd4e8f", "sha256": "bf5d1cde1e4d4562245186fc08a8116132b96b8a78d20feb89e548003dffec23"}, "downloads": -1, "filename": "blender_addon_tester-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d3622af59acb833d8a5b16a665cd4e8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 14023, "upload_time": "2020-04-16T19:31:09", "upload_time_iso_8601": "2020-04-16T19:31:09.863373Z", "url": "https://files.pythonhosted.org/packages/df/76/b4f3becb33d4cfc405d61180c9dd82b141e4d6dbcbd7765acca0cacac129/blender_addon_tester-0.6.1-py3-none-any.whl", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "71bf450261f731ec8d107ebe89bd35a7", "sha256": "eb0c586ae1da21f881dd0a02d2f99d82c3bcf54ef498f282110bd932e5688098"}, "downloads": -1, "filename": "blender_addon_tester-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "71bf450261f731ec8d107ebe89bd35a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 14033, "upload_time": "2020-04-17T12:51:12", "upload_time_iso_8601": "2020-04-17T12:51:12.673903Z", "url": "https://files.pythonhosted.org/packages/89/3e/2cde9d71904bd6f6283960b332fa2a19d8a082ad5d9733f8f1e19332790c/blender_addon_tester-0.6.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71bf450261f731ec8d107ebe89bd35a7", "sha256": "eb0c586ae1da21f881dd0a02d2f99d82c3bcf54ef498f282110bd932e5688098"}, "downloads": -1, "filename": "blender_addon_tester-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "71bf450261f731ec8d107ebe89bd35a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 14033, "upload_time": "2020-04-17T12:51:12", "upload_time_iso_8601": "2020-04-17T12:51:12.673903Z", "url": "https://files.pythonhosted.org/packages/89/3e/2cde9d71904bd6f6283960b332fa2a19d8a082ad5d9733f8f1e19332790c/blender_addon_tester-0.6.2-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:37:07 2020"}