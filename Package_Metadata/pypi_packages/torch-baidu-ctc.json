{"info": {"author": "Joan Puigcerver", "author_email": "joapuipe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# torch-baidu-ctc\n\n[![Build Status](https://travis-ci.org/jpuigcerver/pytorch-baidu-ctc.svg?branch=master)](https://travis-ci.org/jpuigcerver/pytorch-baidu-ctc)\n\nPytorch bindings for Baidu's Warp-CTC. These bindings were inspired by\n[SeanNaren's](https://github.com/SeanNaren/warp-ctc) but these include some bug fixes,\nand offer some additional features.\n\n```python\nimport torch\nfrom torch_baidu_ctc import ctc_loss, CTCLoss\n\n# Activations. Shape T x N x D.\n# T -> max number of frames/timesteps\n# N -> minibatch size\n# D -> number of output labels (including the CTC blank)\nx = torch.rand(10, 3, 6)\n# Target labels\ny = torch.tensor(\n  [\n    # 1st sample\n    1, 1, 2, 5, 2,\n    # 2nd\n    1, 5, 2,\n    # 3rd\n    4, 4, 2, 3,\n  ],\n  dtype=torch.int,\n)\n# Activations lengths\nxs = torch.tensor([10, 6, 9], dtype=torch.int)\n# Target lengths\nys = torch.tensor([5, 3, 4], dtype=torch.int)\n\n# By default, the costs (negative log-likelihood) of all samples are summed.\n# This is equivalent to:\n#   ctc_loss(x, y, xs, ys, average_frames=False, reduction=\"sum\")\nloss1 = ctc_loss(x, y, xs, ys)\n\n# You can also average the cost of each sample among the number of frames.\n# The averaged costs are then summed.\nloss2 = ctc_loss(x, y, xs, ys, average_frames=True)\n\n# Instead of summing the costs of each sample, you can perform\n# other `reductions`: \"none\", \"sum\", or \"mean\"\n#\n# Return an array with the loss of each individual sample\nlosses = ctc_loss(x, y, xs, ys, reduction=\"none\")\n#\n# Compute the mean of the individual losses\nloss3 = ctc_loss(x, y, xs, ys, reduction=\"mean\")\n#\n# First, normalize loss by number of frames, later average losses\nloss4 = ctc_loss(x, y, xs, ys, average_frames=True, reduction=\"mean\")\n\n\n# Finally, there's also a nn.Module to use this loss.\nctc = CTCLoss(average_frames=True, reduction=\"mean\", blank=0)\nloss4_2 = ctc(x, y, xs, ys)\n\n# Note: the `blank` option is also available for `ctc_loss`.\n# By default it is 0.\n```\n\n## Requirements\n\n- C++11 compiler (tested with GCC 4.9).\n- Python: 2.7, 3.5, 3.6, 3.7 (tested with versions 2.7, 3.5 and 3.6).\n- [PyTorch](http://pytorch.org/) >= 1.1.0 (tested with version 1.1.0).\n- For GPU support: [CUDA Toolkit](https://developer.nvidia.com/cuda-zone).\n\n## Installation\n\nThe installation process should be pretty straightforward assuming that you\nhave correctly installed the required libraries and tools.\n\nThe setup process compiles the package from source, and will compile with\nCUDA support if this is available for PyTorch.\n\n### From Pypi (recommended)\n\n```bash\npip install torch-baidu-ctc\n```\n\n### From GitHub\n\n```bash\ngit clone --recursive https://github.com/jpuigcerver/pytorch-baidu-ctc.git\ncd pytorch-baidu-ctc\npython setup.py build\npython setup.py install\n```\n\n### AVX512 related issues\n\nSome compiling problems may arise when using CUDA and newer host compilers\nwith AVX512 instructions. Please, install GCC 4.9 and use it as the host\ncompiler for NVCC. You can simply set the `CC` and `CXX` environment variables\nbefore the build/install commands:\n\n```bash\nCC=gcc-4.9 CXX=g++-4.9 pip install torch-baidu-ctc\n```\n\nor (if you are using the GitHub source code):\n\n```bash\nCC=gcc-4.9 CXX=g++-4.9 python setup.py build\n```\n\n## Testing\n\nYou can test the library once installed using `unittest`. In particular,\nrun the following commands:\n\n```bash\npython -m unittest torch_baidu_ctc.test\n```\n\nAll tests should pass (CUDA tests are only executed if supported).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jpuigcerver/pytorch-baidu-ctc", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "torch-baidu-ctc", "package_url": "https://pypi.org/project/torch-baidu-ctc/", "platform": "", "project_url": "https://pypi.org/project/torch-baidu-ctc/", "project_urls": {"Homepage": "https://github.com/jpuigcerver/pytorch-baidu-ctc"}, "release_url": "https://pypi.org/project/torch-baidu-ctc/0.3.0/", "requires_dist": ["pybind11", "numpy", "torch (>=1.1.0)"], "requires_python": "", "summary": "PyTorch bindings for Baidu Warp-CTC", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>torch-baidu-ctc</h1>\n<p><a href=\"https://travis-ci.org/jpuigcerver/pytorch-baidu-ctc\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ac766029f73ddd46cab897276eef66e15ba3a54/68747470733a2f2f7472617669732d63692e6f72672f6a707569676365727665722f7079746f7263682d62616964752d6374632e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Pytorch bindings for Baidu's Warp-CTC. These bindings were inspired by\n<a href=\"https://github.com/SeanNaren/warp-ctc\" rel=\"nofollow\">SeanNaren's</a> but these include some bug fixes,\nand offer some additional features.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torch_baidu_ctc</span> <span class=\"kn\">import</span> <span class=\"n\">ctc_loss</span><span class=\"p\">,</span> <span class=\"n\">CTCLoss</span>\n\n<span class=\"c1\"># Activations. Shape T x N x D.</span>\n<span class=\"c1\"># T -&gt; max number of frames/timesteps</span>\n<span class=\"c1\"># N -&gt; minibatch size</span>\n<span class=\"c1\"># D -&gt; number of output labels (including the CTC blank)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"c1\"># Target labels</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">(</span>\n  <span class=\"p\">[</span>\n    <span class=\"c1\"># 1st sample</span>\n    <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"c1\"># 2nd</span>\n    <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"c1\"># 3rd</span>\n    <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n  <span class=\"p\">],</span>\n  <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Activations lengths</span>\n<span class=\"n\">xs</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">)</span>\n<span class=\"c1\"># Target lengths</span>\n<span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># By default, the costs (negative log-likelihood) of all samples are summed.</span>\n<span class=\"c1\"># This is equivalent to:</span>\n<span class=\"c1\">#   ctc_loss(x, y, xs, ys, average_frames=False, reduction=\"sum\")</span>\n<span class=\"n\">loss1</span> <span class=\"o\">=</span> <span class=\"n\">ctc_loss</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">ys</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can also average the cost of each sample among the number of frames.</span>\n<span class=\"c1\"># The averaged costs are then summed.</span>\n<span class=\"n\">loss2</span> <span class=\"o\">=</span> <span class=\"n\">ctc_loss</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">ys</span><span class=\"p\">,</span> <span class=\"n\">average_frames</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Instead of summing the costs of each sample, you can perform</span>\n<span class=\"c1\"># other `reductions`: \"none\", \"sum\", or \"mean\"</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Return an array with the loss of each individual sample</span>\n<span class=\"n\">losses</span> <span class=\"o\">=</span> <span class=\"n\">ctc_loss</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">ys</span><span class=\"p\">,</span> <span class=\"n\">reduction</span><span class=\"o\">=</span><span class=\"s2\">\"none\"</span><span class=\"p\">)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Compute the mean of the individual losses</span>\n<span class=\"n\">loss3</span> <span class=\"o\">=</span> <span class=\"n\">ctc_loss</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">ys</span><span class=\"p\">,</span> <span class=\"n\">reduction</span><span class=\"o\">=</span><span class=\"s2\">\"mean\"</span><span class=\"p\">)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># First, normalize loss by number of frames, later average losses</span>\n<span class=\"n\">loss4</span> <span class=\"o\">=</span> <span class=\"n\">ctc_loss</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">ys</span><span class=\"p\">,</span> <span class=\"n\">average_frames</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">reduction</span><span class=\"o\">=</span><span class=\"s2\">\"mean\"</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Finally, there's also a nn.Module to use this loss.</span>\n<span class=\"n\">ctc</span> <span class=\"o\">=</span> <span class=\"n\">CTCLoss</span><span class=\"p\">(</span><span class=\"n\">average_frames</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">reduction</span><span class=\"o\">=</span><span class=\"s2\">\"mean\"</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">loss4_2</span> <span class=\"o\">=</span> <span class=\"n\">ctc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">ys</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Note: the `blank` option is also available for `ctc_loss`.</span>\n<span class=\"c1\"># By default it is 0.</span>\n</pre>\n<h2>Requirements</h2>\n<ul>\n<li>C++11 compiler (tested with GCC 4.9).</li>\n<li>Python: 2.7, 3.5, 3.6, 3.7 (tested with versions 2.7, 3.5 and 3.6).</li>\n<li><a href=\"http://pytorch.org/\" rel=\"nofollow\">PyTorch</a> &gt;= 1.1.0 (tested with version 1.1.0).</li>\n<li>For GPU support: <a href=\"https://developer.nvidia.com/cuda-zone\" rel=\"nofollow\">CUDA Toolkit</a>.</li>\n</ul>\n<h2>Installation</h2>\n<p>The installation process should be pretty straightforward assuming that you\nhave correctly installed the required libraries and tools.</p>\n<p>The setup process compiles the package from source, and will compile with\nCUDA support if this is available for PyTorch.</p>\n<h3>From Pypi (recommended)</h3>\n<pre>pip install torch-baidu-ctc\n</pre>\n<h3>From GitHub</h3>\n<pre>git clone --recursive https://github.com/jpuigcerver/pytorch-baidu-ctc.git\n<span class=\"nb\">cd</span> pytorch-baidu-ctc\npython setup.py build\npython setup.py install\n</pre>\n<h3>AVX512 related issues</h3>\n<p>Some compiling problems may arise when using CUDA and newer host compilers\nwith AVX512 instructions. Please, install GCC 4.9 and use it as the host\ncompiler for NVCC. You can simply set the <code>CC</code> and <code>CXX</code> environment variables\nbefore the build/install commands:</p>\n<pre><span class=\"nv\">CC</span><span class=\"o\">=</span>gcc-4.9 <span class=\"nv\">CXX</span><span class=\"o\">=</span>g++-4.9 pip install torch-baidu-ctc\n</pre>\n<p>or (if you are using the GitHub source code):</p>\n<pre><span class=\"nv\">CC</span><span class=\"o\">=</span>gcc-4.9 <span class=\"nv\">CXX</span><span class=\"o\">=</span>g++-4.9 python setup.py build\n</pre>\n<h2>Testing</h2>\n<p>You can test the library once installed using <code>unittest</code>. In particular,\nrun the following commands:</p>\n<pre>python -m unittest torch_baidu_ctc.test\n</pre>\n<p>All tests should pass (CUDA tests are only executed if supported).</p>\n\n          </div>"}, "last_serial": 5375546, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b6d7b609f0a8a17c4257d7863c3350e2", "sha256": "0b7a4b88b662dbec78ffcd8e796f7f701d380c66faab2e0844e1d93e880ef769"}, "downloads": -1, "filename": "torch-baidu-ctc-0.1.tar.gz", "has_sig": false, "md5_digest": "b6d7b609f0a8a17c4257d7863c3350e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53078, "upload_time": "2018-09-30T11:38:09", "upload_time_iso_8601": "2018-09-30T11:38:09.644280Z", "url": "https://files.pythonhosted.org/packages/5f/a0/a4ac76559887e39c78c4f06cb223a7e3fbc0a5bbdc795418bcd2b3708383/torch-baidu-ctc-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "03df9cabb594d900ef5b2df35c8f9c7d", "sha256": "e7050905a75aebc9c0e5df74c6ddc60091a89b4583facaafa3f735bececa9f95"}, "downloads": -1, "filename": "torch_baidu_ctc-0.1.1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "03df9cabb594d900ef5b2df35c8f9c7d", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 2023431, "upload_time": "2018-10-10T21:39:49", "upload_time_iso_8601": "2018-10-10T21:39:49.403452Z", "url": "https://files.pythonhosted.org/packages/e9/32/fc644d5f3f21277f24cc582f21c5a691caf6d08501d52e11597363d57921/torch_baidu_ctc-0.1.1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "031d16b1c61693df69b4930d31f313e3", "sha256": "3ad8f0103ac0f394a870238955cc43b6fffb54d6ded91175eab1f0c88d951084"}, "downloads": -1, "filename": "torch_baidu_ctc-0.1.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "031d16b1c61693df69b4930d31f313e3", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 2023457, "upload_time": "2018-10-10T21:39:51", "upload_time_iso_8601": "2018-10-10T21:39:51.806875Z", "url": "https://files.pythonhosted.org/packages/8a/ea/415a20b7589e760644f2dedfea3b920d790a8121e28475e67bee1d920d6d/torch_baidu_ctc-0.1.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "341a64f3bf83316fdd532fcacc788a6a", "sha256": "101d10bbf6c128cbff4f478965db2723b7329cf09aba19543beed3ab7f5a3709"}, "downloads": -1, "filename": "torch_baidu_ctc-0.1.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "341a64f3bf83316fdd532fcacc788a6a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2023550, "upload_time": "2018-10-10T21:39:54", "upload_time_iso_8601": "2018-10-10T21:39:54.228388Z", "url": "https://files.pythonhosted.org/packages/35/f4/0f193254208023b68e5a950b8db9ec2f29438d7263a14ebe8c7baa490098/torch_baidu_ctc-0.1.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2475bcacb37e5edd51a07c212af102a5", "sha256": "4ee88fee5dfe0ee26872d5ead2b8a2ab6511073577608d7b6e9f3d9637847177"}, "downloads": -1, "filename": "torch_baidu_ctc-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2475bcacb37e5edd51a07c212af102a5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 2024808, "upload_time": "2018-10-10T21:39:56", "upload_time_iso_8601": "2018-10-10T21:39:56.559054Z", "url": "https://files.pythonhosted.org/packages/b8/d8/862285e98e21aa94aac6a64d8da8155f388390208a25149dd4e175d563fe/torch_baidu_ctc-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bddefd6dee1ce99f267e8caecd70011", "sha256": "0c84199ef911dba94dd4545718828c1b8e61239905e1e282d9b44d94a4b044e5"}, "downloads": -1, "filename": "torch-baidu-ctc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9bddefd6dee1ce99f267e8caecd70011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53529, "upload_time": "2018-10-10T20:48:37", "upload_time_iso_8601": "2018-10-10T20:48:37.995656Z", "url": "https://files.pythonhosted.org/packages/ce/ac/25bd66451c9d87dcbe213bf90db05dcbf38e117be0b9b3989a61ba11f704/torch-baidu-ctc-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8035e2a1fd5ab26802f71355fd05aaca", "sha256": "5235f9c79d27958b0e4d3b06ec7fd35b0332966feb399e68e93f1f1913ad08e7"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8035e2a1fd5ab26802f71355fd05aaca", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 2546849, "upload_time": "2019-01-01T21:08:03", "upload_time_iso_8601": "2019-01-01T21:08:03.987183Z", "url": "https://files.pythonhosted.org/packages/34/1a/745a910c3934b57eec055bc47d15cc6e9c85dc1aff93bbd4a32743d1e221/torch_baidu_ctc-0.2.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf7e062dc5d3821298736b3e6931f6d0", "sha256": "6a24a5209a49e3402aeafec4860cdd4b0c83ce4b1528796fa3cfd479763acc84"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "bf7e062dc5d3821298736b3e6931f6d0", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 2547575, "upload_time": "2019-01-01T21:08:06", "upload_time_iso_8601": "2019-01-01T21:08:06.943701Z", "url": "https://files.pythonhosted.org/packages/92/f5/879c03f7e9c702915c0a442296ffeb492b9a152d874e66cbe9a4bf0e4e20/torch_baidu_ctc-0.2.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08588a5643956ebfdedd92d5d483aeeb", "sha256": "8236c6d76a8ee08e0d5320ad30cf70ae082637c92cdeb847c66eee7ce20a3ccb"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "08588a5643956ebfdedd92d5d483aeeb", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2547782, "upload_time": "2019-01-01T21:08:09", "upload_time_iso_8601": "2019-01-01T21:08:09.750098Z", "url": "https://files.pythonhosted.org/packages/f5/8a/fbe75d3e7bf655e21ec9bf7c00e03fdf28e52bfb39bf3ce84316ab015bfa/torch_baidu_ctc-0.2.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e542bd85b30a5f54830496810fa0aa3", "sha256": "acbf0178c362d554718cc9a2aac374dd328e8ed250dd1b9ad4e8dd16c47db9d8"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3e542bd85b30a5f54830496810fa0aa3", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 2548559, "upload_time": "2019-01-01T21:08:12", "upload_time_iso_8601": "2019-01-01T21:08:12.232147Z", "url": "https://files.pythonhosted.org/packages/c9/8a/39ae3d6d406eb2ce69784ef18b7ac3105d0d25cf59e41d160d328050cdad/torch_baidu_ctc-0.2.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7682386d0c6b4b9803bf8b5974193af", "sha256": "c04dfdf8cf57c912f4564a9f2381d29c9228c1275b4951d37c8f359aa4161d90"}, "downloads": -1, "filename": "torch-baidu-ctc-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b7682386d0c6b4b9803bf8b5974193af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53621, "upload_time": "2019-01-01T21:07:28", "upload_time_iso_8601": "2019-01-01T21:07:28.750450Z", "url": "https://files.pythonhosted.org/packages/64/ec/d7bf79425b9b2ea9bbc23cefa5daeb6ec010fe5f7ddbf8336506e6f3300c/torch-baidu-ctc-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "43155f8055cb4f1b7702ef574ee75ed0", "sha256": "a956dc910c4b2abb3c4946ab22d7089931f8736e687d0a493e6e75831fea5c8d"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "43155f8055cb4f1b7702ef574ee75ed0", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 2551149, "upload_time": "2019-02-17T01:55:18", "upload_time_iso_8601": "2019-02-17T01:55:18.776155Z", "url": "https://files.pythonhosted.org/packages/f9/44/e67225a05fb1e2a0f7dbc4783ba6fa67e5068c9264011f6bdec6c87a263e/torch_baidu_ctc-0.2.1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e0e6ec0984d5381c251e679bb650074", "sha256": "132a2d4269eb1a99f8d507a14ff7d97b1c4bcc6cd9ce6a0d1d58dfc7d5160f6a"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3e0e6ec0984d5381c251e679bb650074", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 2551565, "upload_time": "2019-02-17T01:55:22", "upload_time_iso_8601": "2019-02-17T01:55:22.169676Z", "url": "https://files.pythonhosted.org/packages/00/14/9984200f58f74dc63298bd372fe482ac9c371f536a58573e212d22ccb833/torch_baidu_ctc-0.2.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "665716ed1d9c82dcb025eef116264193", "sha256": "500b9aeefde20ce9a3b50cbb03b50af41dba517b4a1e6d9b26b73da5d1fb484f"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "665716ed1d9c82dcb025eef116264193", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2547276, "upload_time": "2019-02-17T01:55:25", "upload_time_iso_8601": "2019-02-17T01:55:25.466240Z", "url": "https://files.pythonhosted.org/packages/0e/1f/c9b02b86e80f75d292abd8fc3b44b5773df4eaa6bdce388f58d863452bc4/torch_baidu_ctc-0.2.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50e4d4e4144704caa2776f1dd1ce1bca", "sha256": "57d6dd0bad4bbe1f72900e3c0585c0b09bf1588cc7d061563ae6f675c57f85c6"}, "downloads": -1, "filename": "torch_baidu_ctc-0.2.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "50e4d4e4144704caa2776f1dd1ce1bca", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 2552314, "upload_time": "2019-02-17T01:55:28", "upload_time_iso_8601": "2019-02-17T01:55:28.981421Z", "url": "https://files.pythonhosted.org/packages/de/2e/f037820d6d21e32ec7e207e14144624b4de41042a08b902bcf722f446056/torch_baidu_ctc-0.2.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f99aedc5002321149690694e29d071a", "sha256": "d5211e79514be0288ce88f9db776a69764d7c2052943852cb2a2b158ff6ad6c2"}, "downloads": -1, "filename": "torch-baidu-ctc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4f99aedc5002321149690694e29d071a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54859, "upload_time": "2019-02-17T01:54:48", "upload_time_iso_8601": "2019-02-17T01:54:48.367236Z", "url": "https://files.pythonhosted.org/packages/1e/a0/842b7dabd14cb4dececc1a5e38d9946aab9530b1d0c7291fee0899ef2d9c/torch-baidu-ctc-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "87ff4f047aaf83cb9a779798c4d7e4e1", "sha256": "db81e32f5e630ae91586328333222a9127eee747c9b72f3cca79c8b57729381b"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "87ff4f047aaf83cb9a779798c4d7e4e1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 2679065, "upload_time": "2019-06-05T22:39:59", "upload_time_iso_8601": "2019-06-05T22:39:59.851085Z", "url": "https://files.pythonhosted.org/packages/7d/89/0275e493bcf97542363dba7481dd4e979a39a01753a605bd3de2b940516a/torch_baidu_ctc-0.3.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d379789ed013493635c9292ed3728fe1", "sha256": "7a0e4da260d6d6e84351095ae00a8e333bf9a579d3825b200d7c9de383364edc"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d379789ed013493635c9292ed3728fe1", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 2678963, "upload_time": "2019-06-08T14:46:04", "upload_time_iso_8601": "2019-06-08T14:46:04.042141Z", "url": "https://files.pythonhosted.org/packages/58/36/989ef546ae94e276f4f31ec55d1ffa7d3b790b6f8d69cbe8d63aec137e5a/torch_baidu_ctc-0.3.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd7e267da5ab8537f6f3f6b67e693881", "sha256": "84cfdcc044f044a1c71a120eac84e58f0e7a67d636433c2295bc0f15f3c2a97a"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fd7e267da5ab8537f6f3f6b67e693881", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2674794, "upload_time": "2019-06-05T22:54:54", "upload_time_iso_8601": "2019-06-05T22:54:54.942923Z", "url": "https://files.pythonhosted.org/packages/54/7f/eadf62c7e541430ecb7dab16adabb7bdb757dafcbfc584e61c20187ed407/torch_baidu_ctc-0.3.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54f1892e8f7e3a7874645085379f29b6", "sha256": "2518a0a5d651f474e817e88d1b20093499e701067290d445154693b31c3dfeec"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "54f1892e8f7e3a7874645085379f29b6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 2680365, "upload_time": "2019-06-05T22:55:16", "upload_time_iso_8601": "2019-06-05T22:55:16.080316Z", "url": "https://files.pythonhosted.org/packages/18/27/17d47d7eded8cfcbf6fc75b9281d5a0c5a6cb6da43161be539cd16eca154/torch_baidu_ctc-0.3.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "438a84138d42b063fb2e0468e346255b", "sha256": "1675682ca93d0915bfd54591b978bdd4bb78f12f73b9190326be29825b5e6e36"}, "downloads": -1, "filename": "torch-baidu-ctc-0.3.0.tar.gz", "has_sig": false, "md5_digest": "438a84138d42b063fb2e0468e346255b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54861, "upload_time": "2019-06-05T22:58:54", "upload_time_iso_8601": "2019-06-05T22:58:54.249645Z", "url": "https://files.pythonhosted.org/packages/46/aa/b9a7c86f1fae5754f8fe108e05e9f4340a5aec1ff0d5afefcc55c91a6ff4/torch-baidu-ctc-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87ff4f047aaf83cb9a779798c4d7e4e1", "sha256": "db81e32f5e630ae91586328333222a9127eee747c9b72f3cca79c8b57729381b"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "87ff4f047aaf83cb9a779798c4d7e4e1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 2679065, "upload_time": "2019-06-05T22:39:59", "upload_time_iso_8601": "2019-06-05T22:39:59.851085Z", "url": "https://files.pythonhosted.org/packages/7d/89/0275e493bcf97542363dba7481dd4e979a39a01753a605bd3de2b940516a/torch_baidu_ctc-0.3.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d379789ed013493635c9292ed3728fe1", "sha256": "7a0e4da260d6d6e84351095ae00a8e333bf9a579d3825b200d7c9de383364edc"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d379789ed013493635c9292ed3728fe1", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 2678963, "upload_time": "2019-06-08T14:46:04", "upload_time_iso_8601": "2019-06-08T14:46:04.042141Z", "url": "https://files.pythonhosted.org/packages/58/36/989ef546ae94e276f4f31ec55d1ffa7d3b790b6f8d69cbe8d63aec137e5a/torch_baidu_ctc-0.3.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd7e267da5ab8537f6f3f6b67e693881", "sha256": "84cfdcc044f044a1c71a120eac84e58f0e7a67d636433c2295bc0f15f3c2a97a"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fd7e267da5ab8537f6f3f6b67e693881", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2674794, "upload_time": "2019-06-05T22:54:54", "upload_time_iso_8601": "2019-06-05T22:54:54.942923Z", "url": "https://files.pythonhosted.org/packages/54/7f/eadf62c7e541430ecb7dab16adabb7bdb757dafcbfc584e61c20187ed407/torch_baidu_ctc-0.3.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54f1892e8f7e3a7874645085379f29b6", "sha256": "2518a0a5d651f474e817e88d1b20093499e701067290d445154693b31c3dfeec"}, "downloads": -1, "filename": "torch_baidu_ctc-0.3.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "54f1892e8f7e3a7874645085379f29b6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 2680365, "upload_time": "2019-06-05T22:55:16", "upload_time_iso_8601": "2019-06-05T22:55:16.080316Z", "url": "https://files.pythonhosted.org/packages/18/27/17d47d7eded8cfcbf6fc75b9281d5a0c5a6cb6da43161be539cd16eca154/torch_baidu_ctc-0.3.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "438a84138d42b063fb2e0468e346255b", "sha256": "1675682ca93d0915bfd54591b978bdd4bb78f12f73b9190326be29825b5e6e36"}, "downloads": -1, "filename": "torch-baidu-ctc-0.3.0.tar.gz", "has_sig": false, "md5_digest": "438a84138d42b063fb2e0468e346255b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54861, "upload_time": "2019-06-05T22:58:54", "upload_time_iso_8601": "2019-06-05T22:58:54.249645Z", "url": "https://files.pythonhosted.org/packages/46/aa/b9a7c86f1fae5754f8fe108e05e9f4340a5aec1ff0d5afefcc55c91a6ff4/torch-baidu-ctc-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:37 2020"}