{"info": {"author": "Getpaid Community", "author_email": "getpaid-dev@googlegroups.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries"], "description": "This package contains google checkout payment functionality for the\ngetpaid framework.\n\nSee src/getpaid/googlecheckout/README.txt for more details.\n\n=======\nCHANGES\n=======\n\n\n0.3 (2008-12-30)\n----------------\n\n* Remove code not needed now with gchecky 0.2.1. And update tests to suit.\n* Override the cart portlet to use Google Checkout.\n\n\n0.2 (2008-08-29)\n----------------\n\n* Eggified package\n* Added buildout files and general text documents to project root.\n* removed setup.cfg\n\nDetailed Documentation\n**********************\n\nIntroduction\n============\n\n`Google Checkout`_ integration with GetPaid.\n\n\nStatus\n======\n\nWorking integration with Google Checkout using both the Checkout API\nand the Notification API:\n\n- The GetPaid checkout wizard is completely replaced with Google\n  Checkout.\n\n- Includes integration with the Google Checkout Notification API. So\n  far this is just used to improve the user experience during the\n  checkout process. A shopper can still edit the cart after commencing\n  the google checkout process - an \"edit cart\" link is available from\n  the checkout. And the cart is cleared after completing the checkout.\n\n- The GetPaid order manager is not integrated with Google Checkout.\n  Google Checkout includes its own order management functionality.\n  Although Google Checkout does have a rich enough API that these two\n  could be integrated with each other. And there is already working\n  integration with the Google Checkout Notification API.\n\n- Makes use of zcml overrides to integrate with GetPaid. This is a\n  sign that GetPaid is not yet sufficiently plugable to support this\n  kind of processor.\n\n- Includes integration with Google Analytics.\n\n- Works with gchecky 0.2.1.\n\n\nTodo\n====\n\n- Update locales.\n\n\nDemo\n====\n\nGoogle provides a sandbox service that can be used to create a working\ndemonstration.\n\nBuildout\n--------\n\nUse getpaid.buildout to create your own demo of this integration.\nUncomment the various googlecheckout variable substitutions throughout\nbuildout.cfg::\n\n    ${googlecheckout:develop}\n    ${googlecheckout:eggs}\n\nNote - during development, if you're developing locally, make sure to\naccess your site via 127.0.0.1:8080/my-plone-instance instead of\nlocalhost:8080/my-plone-instance as the latter is considered an\ninvalid URL by gchecky.\n\n\nGoogle Merchant Account\n-----------------------\n\nCreate a merchant account in the Google Checkout Sandbox service. See\nstep 1 of `Getting Started with Google Checkout`.\n\nConfigure the notification handshake for this merchant account. Set\nthe API callback URL and enable checking serial numbers for\nnotification acknowledgments:\n\n1. Log in to your merchant account.\n\n2. Click on the *Settings* tab.\n\n3. Click the *Integration* link on the left side of the page.\n\n4. Make sure \"My company will only post digitally signed carts.\" is\n   checked.\n\n5. Enter a URL for the notification callback for your site into *API\n   callback URL*. This will look something like::\n\n     http://demo.my.site/google-checkout-notification\n\n   And select \"XML\" for the \"Callback method\".\n\n   (This URL can be HTTP for merchant accounts created in the sandbox\n   service. However needs to be HTTPS with suitable certificate for\n   production.)\n\n6. Expand the list of advanced settings and check the box next to the\n   setting that says, \"Require notification acknowledgments to specify\n   the serial number of the notification.\"\n\n7. Click the *Save* button to update your settings.\n\n\nGetPaid Configuration\n---------------------\n\nConfigure the Google Checkout processor in GetPaid with the Merchant\nID and Merchant Key for the sandbox. You'll find these in \"Settings\"\n-> \"Integration\" of the `Google Checkout Manager`_.\n\n\nGoogle Buyer Account\n--------------------\n\nTo put through some test purchases you will need a sandbox buyer\naccount. Google Checkout will not permit you to complete a purchase\nfrom your Google Checkout merchant account while logged in with the\nemail address associated with your merchant account. In other words,\nyou cannot buy from yourself, even in sandbox.\n\nTo create a new sandbox buyer account,\nvisit http://sandbox.google.com/checkout\n\n\nGoogle Analytics\n----------------\n\nIf you want to use this with along with Google Analytics then copy the\nfollowing snippet to your Plone site by editing \"Site Setup\" -> \"Site\nSettings\" -> \"JavaScript for web statistics support\"::\n\n    <script src=\"http://www.google-analytics.com/ga.js\" type=\"text/javascript\"></script>\n    <script src=\"http://checkout.google.com/files/digital/ga_post.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\">\n    <!--\n      var pageTracker = _gat._getTracker(\"UA-XXXXXXX-X\");\n      pageTracker._initData();\n      pageTracker._trackPageview();\n      var checkout_forms = cssQuery('form.googlecheckout');\n      for (var i=0; i < checkout_forms.length; i++) {\n        checkout_forms[i].onsubmit = function(e) {\n          setUrchinInputCode(pageTracker);\n        };\n      };\n    //-->\n    </script>\n\nYou will need to replace ``UA-XXXXXXX-X`` with your own Google\nAnalytics account number.\n\n\n.. _Google Checkout:\n   http://code.google.com/apis/checkout/developer/index.html\n\n.. _Getting Started with Google Checkout:\n   http://code.google.com/apis/checkout/developer/index.html#integration_overview\n\n.. _Google Checkout Manager:\n   http://sandbox.google.com/checkout/sell\n\nDownload\n**********************", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/getpaid", "keywords": null, "license": "ZPL2.1", "maintainer": null, "maintainer_email": null, "name": "getpaid.googlecheckout", "package_url": "https://pypi.org/project/getpaid.googlecheckout/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/getpaid.googlecheckout/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/getpaid"}, "release_url": "https://pypi.org/project/getpaid.googlecheckout/0.3/", "requires_dist": null, "requires_python": null, "summary": "Getpaid google checkout payment functionality", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package contains google checkout payment functionality for the\ngetpaid framework.</p>\n<p>See src/getpaid/googlecheckout/README.txt for more details.</p>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.3 (2008-12-30)</h3>\n<ul>\n<li>Remove code not needed now with gchecky 0.2.1. And update tests to suit.</li>\n<li>Override the cart portlet to use Google Checkout.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2 (2008-08-29)</h3>\n<ul>\n<li>Eggified package</li>\n<li>Added buildout files and general text documents to project root.</li>\n<li>removed setup.cfg</li>\n</ul>\n<div id=\"detailed-documentation\">\n<h4>Detailed Documentation</h4>\n<div id=\"introduction\">\n<h5>Introduction</h5>\n<p><a href=\"http://code.google.com/apis/checkout/developer/index.html\" rel=\"nofollow\">Google Checkout</a> integration with GetPaid.</p>\n</div>\n<div id=\"status\">\n<h5>Status</h5>\n<p>Working integration with Google Checkout using both the Checkout API\nand the Notification API:</p>\n<ul>\n<li>The GetPaid checkout wizard is completely replaced with Google\nCheckout.</li>\n<li>Includes integration with the Google Checkout Notification API. So\nfar this is just used to improve the user experience during the\ncheckout process. A shopper can still edit the cart after commencing\nthe google checkout process - an \u201cedit cart\u201d link is available from\nthe checkout. And the cart is cleared after completing the checkout.</li>\n<li>The GetPaid order manager is not integrated with Google Checkout.\nGoogle Checkout includes its own order management functionality.\nAlthough Google Checkout does have a rich enough API that these two\ncould be integrated with each other. And there is already working\nintegration with the Google Checkout Notification API.</li>\n<li>Makes use of zcml overrides to integrate with GetPaid. This is a\nsign that GetPaid is not yet sufficiently plugable to support this\nkind of processor.</li>\n<li>Includes integration with Google Analytics.</li>\n<li>Works with gchecky 0.2.1.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h5>Todo</h5>\n<ul>\n<li>Update locales.</li>\n</ul>\n</div>\n<div id=\"demo\">\n<h5>Demo</h5>\n<p>Google provides a sandbox service that can be used to create a working\ndemonstration.</p>\n</div>\n</div>\n</div>\n<div id=\"buildout\">\n<h3>Buildout</h3>\n<p>Use getpaid.buildout to create your own demo of this integration.\nUncomment the various googlecheckout variable substitutions throughout\nbuildout.cfg:</p>\n<pre>${googlecheckout:develop}\n${googlecheckout:eggs}\n</pre>\n<p>Note - during development, if you\u2019re developing locally, make sure to\naccess your site via 127.0.0.1:8080/my-plone-instance instead of\nlocalhost:8080/my-plone-instance as the latter is considered an\ninvalid URL by gchecky.</p>\n</div>\n<div id=\"google-merchant-account\">\n<h3>Google Merchant Account</h3>\n<p>Create a merchant account in the Google Checkout Sandbox service. See\nstep 1 of <cite>Getting Started with Google Checkout</cite>.</p>\n<p>Configure the notification handshake for this merchant account. Set\nthe API callback URL and enable checking serial numbers for\nnotification acknowledgments:</p>\n<ol>\n<li><p>Log in to your merchant account.</p>\n</li>\n<li><p>Click on the <em>Settings</em> tab.</p>\n</li>\n<li><p>Click the <em>Integration</em> link on the left side of the page.</p>\n</li>\n<li><p>Make sure \u201cMy company will only post digitally signed carts.\u201d is\nchecked.</p>\n</li>\n<li><p>Enter a URL for the notification callback for your site into <em>API\ncallback URL</em>. This will look something like:</p>\n<pre>http://demo.my.site/google-checkout-notification\n</pre>\n<p>And select \u201cXML\u201d for the \u201cCallback method\u201d.</p>\n<p>(This URL can be HTTP for merchant accounts created in the sandbox\nservice. However needs to be HTTPS with suitable certificate for\nproduction.)</p>\n</li>\n<li><p>Expand the list of advanced settings and check the box next to the\nsetting that says, \u201cRequire notification acknowledgments to specify\nthe serial number of the notification.\u201d</p>\n</li>\n<li><p>Click the <em>Save</em> button to update your settings.</p>\n</li>\n</ol>\n</div>\n<div id=\"getpaid-configuration\">\n<h3>GetPaid Configuration</h3>\n<p>Configure the Google Checkout processor in GetPaid with the Merchant\nID and Merchant Key for the sandbox. You\u2019ll find these in \u201cSettings\u201d\n-&gt; \u201cIntegration\u201d of the <a href=\"http://sandbox.google.com/checkout/sell\" rel=\"nofollow\">Google Checkout Manager</a>.</p>\n</div>\n<div id=\"google-buyer-account\">\n<h3>Google Buyer Account</h3>\n<p>To put through some test purchases you will need a sandbox buyer\naccount. Google Checkout will not permit you to complete a purchase\nfrom your Google Checkout merchant account while logged in with the\nemail address associated with your merchant account. In other words,\nyou cannot buy from yourself, even in sandbox.</p>\n<p>To create a new sandbox buyer account,\nvisit <a href=\"http://sandbox.google.com/checkout\" rel=\"nofollow\">http://sandbox.google.com/checkout</a></p>\n</div>\n<div id=\"google-analytics\">\n<h3>Google Analytics</h3>\n<p>If you want to use this with along with Google Analytics then copy the\nfollowing snippet to your Plone site by editing \u201cSite Setup\u201d -&gt; \u201cSite\nSettings\u201d -&gt; \u201cJavaScript for web statistics support\u201d:</p>\n<pre>&lt;script src=\"http://www.google-analytics.com/ga.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"http://checkout.google.com/files/digital/ga_post.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n&lt;!--\n  var pageTracker = _gat._getTracker(\"UA-XXXXXXX-X\");\n  pageTracker._initData();\n  pageTracker._trackPageview();\n  var checkout_forms = cssQuery('form.googlecheckout');\n  for (var i=0; i &lt; checkout_forms.length; i++) {\n    checkout_forms[i].onsubmit = function(e) {\n      setUrchinInputCode(pageTracker);\n    };\n  };\n//--&gt;\n&lt;/script&gt;\n</pre>\n<p>You will need to replace <tt><span class=\"pre\">UA-XXXXXXX-X</span></tt> with your own Google\nAnalytics account number.</p>\n<div id=\"download\">\n<h4>Download</h4>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 792361, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "06cf2cc1b99bec5c2dece1b317679c37", "sha256": "3c3c79f7275ee8664f3f1c6a3d88b9d19694419688980718e8107adc7048786c"}, "downloads": -1, "filename": "getpaid.googlecheckout-0.2.tar.gz", "has_sig": false, "md5_digest": "06cf2cc1b99bec5c2dece1b317679c37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18161, "upload_time": "2008-08-29T21:58:02", "upload_time_iso_8601": "2008-08-29T21:58:02Z", "url": "https://files.pythonhosted.org/packages/13/bc/85035e9b879ddc12b5b407e88851b34d61e716cb372b80db70f389f23301/getpaid.googlecheckout-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c69ae9cac857759aca590973f45fca3f", "sha256": "ff8a4a8de9e3cbdb511c6b1b9ea1ad5849830578b620ec7bae925d22d6735d39"}, "downloads": -1, "filename": "getpaid.googlecheckout-0.3.tar.gz", "has_sig": false, "md5_digest": "c69ae9cac857759aca590973f45fca3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18933, "upload_time": "2008-12-30T23:09:03", "upload_time_iso_8601": "2008-12-30T23:09:03Z", "url": "https://files.pythonhosted.org/packages/2f/eb/45ef2161ad18bac14f39f6859de1dfea048c6e2e753d36be4c8ca6bc94bc/getpaid.googlecheckout-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c69ae9cac857759aca590973f45fca3f", "sha256": "ff8a4a8de9e3cbdb511c6b1b9ea1ad5849830578b620ec7bae925d22d6735d39"}, "downloads": -1, "filename": "getpaid.googlecheckout-0.3.tar.gz", "has_sig": false, "md5_digest": "c69ae9cac857759aca590973f45fca3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18933, "upload_time": "2008-12-30T23:09:03", "upload_time_iso_8601": "2008-12-30T23:09:03Z", "url": "https://files.pythonhosted.org/packages/2f/eb/45ef2161ad18bac14f39f6859de1dfea048c6e2e753d36be4c8ca6bc94bc/getpaid.googlecheckout-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:44 2020"}