{"info": {"author": "Alexey Minakov", "author_email": "a@spb.host", "bugtrack_url": null, "classifiers": [], "description": "## Flask-Threads\n[![Actions Status](https://github.com/sintezcs/flask-threads/workflows/GitHub%20Build/badge.svg)](https://github.com/sintezcs/flask-threads/actions)\n\nA helper library to work with threads within Flask applications.\n\nThe main problem that you face trying to spin a background thread or running a \nfuture in Flask app - is loosing the application context. The most common \nscenario is to try to access `flask.g` object. Application context \nis a thread local so you can not access it from another thread and Flask will \nraise an exception if you would try to. \n\nThis library provides helper classes that allows you accessing the current \napplication context from another thread.\n\n**Warning! Alpha-version, use at your own risk.**\n\n### Installation\n```bash\n$ pip install Flask-Threads\n```\n\n### Examples\n\n#### Threads\n\n```python\nfrom flask import request\nfrom flask import Flask\nfrom flaskthreads import AppContextThread\n\napp = Flask('my_app')\n\n\n@app.route('/user')\ndef get_user():\n    g.user_id = request.headers.get('user-id')\n    t = AppContextThread(target=do_some_user_work_in_another_thread)\n    t.start()\n    t.join()\n    return 'ok'\n\n\ndef do_some_user_work_in_another_thread():\n    id = g.user_id\n    print(id)\n\n```\n\n#### Concurrent futures\n\n```python\nfrom flask import request\nfrom flask import Flask\nfrom flaskthreads import ThreadPoolWithAppContextExecutor\n\napp = Flask('my_app')\n\n\n@app.route('/user')\ndef get_user():\n    g.user_id = request.headers.get('user-id')\n    with ThreadPoolWithAppContextExecutor(max_workers=2) as pool:\n        future = pool.submit(do_some_user_work_in_another_thread)\n        future.result()\n    return 'ok'\n\n\ndef do_some_user_work_in_another_thread():\n    id = g.user_id\n    print(id)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sintezcs/flask-threads.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Flask-Threads", "package_url": "https://pypi.org/project/Flask-Threads/", "platform": "", "project_url": "https://pypi.org/project/Flask-Threads/", "project_urls": {"Homepage": "https://github.com/sintezcs/flask-threads.git"}, "release_url": "https://pypi.org/project/Flask-Threads/0.0.1a0/", "requires_dist": null, "requires_python": "", "summary": "A helper library to work with threads within Flask applications.", "version": "0.0.1a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Flask-Threads</h2>\n<p><a href=\"https://github.com/sintezcs/flask-threads/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/737cdb1a71d2c407b031af542c931aed5e328bd8/68747470733a2f2f6769746875622e636f6d2f73696e74657a63732f666c61736b2d746872656164732f776f726b666c6f77732f4769744875622532304275696c642f62616467652e737667\"></a></p>\n<p>A helper library to work with threads within Flask applications.</p>\n<p>The main problem that you face trying to spin a background thread or running a\nfuture in Flask app - is loosing the application context. The most common\nscenario is to try to access <code>flask.g</code> object. Application context\nis a thread local so you can not access it from another thread and Flask will\nraise an exception if you would try to.</p>\n<p>This library provides helper classes that allows you accessing the current\napplication context from another thread.</p>\n<p><strong>Warning! Alpha-version, use at your own risk.</strong></p>\n<h3>Installation</h3>\n<pre>$ pip install Flask-Threads\n</pre>\n<h3>Examples</h3>\n<h4>Threads</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flaskthreads</span> <span class=\"kn\">import</span> <span class=\"n\">AppContextThread</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"s1\">'my_app'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/user'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_user</span><span class=\"p\">():</span>\n    <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'user-id'</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">AppContextThread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">do_some_user_work_in_another_thread</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'ok'</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">do_some_user_work_in_another_thread</span><span class=\"p\">():</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">user_id</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n<h4>Concurrent futures</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flaskthreads</span> <span class=\"kn\">import</span> <span class=\"n\">ThreadPoolWithAppContextExecutor</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"s1\">'my_app'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/user'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_user</span><span class=\"p\">():</span>\n    <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'user-id'</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">ThreadPoolWithAppContextExecutor</span><span class=\"p\">(</span><span class=\"n\">max_workers</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">pool</span><span class=\"p\">:</span>\n        <span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"n\">do_some_user_work_in_another_thread</span><span class=\"p\">)</span>\n        <span class=\"n\">future</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'ok'</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">do_some_user_work_in_another_thread</span><span class=\"p\">():</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">user_id</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5781789, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "2aaf3f1d0cc7cacdb1c52f23029d55d8", "sha256": "0409180fcde8dceab28d8dbfd4564c03359090dbb64d945b6b269673e55d80a8"}, "downloads": -1, "filename": "Flask_Threads-0.0.1a0-py3.6.egg", "has_sig": false, "md5_digest": "2aaf3f1d0cc7cacdb1c52f23029d55d8", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 7496, "upload_time": "2019-09-04T15:00:45", "upload_time_iso_8601": "2019-09-04T15:00:45.940930Z", "url": "https://files.pythonhosted.org/packages/02/93/808402f79bca0abbfc8586e32954326a0249a58ebfb8e6bcb37f30675d36/Flask_Threads-0.0.1a0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dfaaab1b6de406e038e7b1159f9554c", "sha256": "388e1146be5ad6b051e13c282d34cac98a2db84ca16120d21759c7f395d67f3a"}, "downloads": -1, "filename": "Flask-Threads-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "6dfaaab1b6de406e038e7b1159f9554c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4076, "upload_time": "2019-09-04T15:00:43", "upload_time_iso_8601": "2019-09-04T15:00:43.972029Z", "url": "https://files.pythonhosted.org/packages/72/97/30531b963968308f7b119588a2cefa0cf33d90c41850dfbccb1f791a7090/Flask-Threads-0.0.1a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2aaf3f1d0cc7cacdb1c52f23029d55d8", "sha256": "0409180fcde8dceab28d8dbfd4564c03359090dbb64d945b6b269673e55d80a8"}, "downloads": -1, "filename": "Flask_Threads-0.0.1a0-py3.6.egg", "has_sig": false, "md5_digest": "2aaf3f1d0cc7cacdb1c52f23029d55d8", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 7496, "upload_time": "2019-09-04T15:00:45", "upload_time_iso_8601": "2019-09-04T15:00:45.940930Z", "url": "https://files.pythonhosted.org/packages/02/93/808402f79bca0abbfc8586e32954326a0249a58ebfb8e6bcb37f30675d36/Flask_Threads-0.0.1a0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dfaaab1b6de406e038e7b1159f9554c", "sha256": "388e1146be5ad6b051e13c282d34cac98a2db84ca16120d21759c7f395d67f3a"}, "downloads": -1, "filename": "Flask-Threads-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "6dfaaab1b6de406e038e7b1159f9554c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4076, "upload_time": "2019-09-04T15:00:43", "upload_time_iso_8601": "2019-09-04T15:00:43.972029Z", "url": "https://files.pythonhosted.org/packages/72/97/30531b963968308f7b119588a2cefa0cf33d90c41850dfbccb1f791a7090/Flask-Threads-0.0.1a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:12 2020"}