{"info": {"author": "Joona Hoikkala", "author_email": "joona@kuori.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "pyacmedns \n=========\n\nA client library to handle `acme-dns <https://github.com/joohoi/acme-dns>`_ client communication and persistent account storage. \n\nInstallation\n------------\n\nInstall from PyPI\n\n.. code-block:: bash\n\n  $ pip install pyacmedns\n\nUsage\n-----\n\nThe following is a complete example of handling the validation using this library.\n\n.. code-block:: python\n\n    #!/usr/bin/env python\n    \n    from pyacmedns import Client, Storage\n\n    whitelisted_networks = [\"192.168.11.0/24\", \"[::1]/128\"]\u00a0\n    domain = \"your.example.org\"\n\n    # Initialize the client. Point it towards your acme-dns instance.\n    client = Client(\"https://auth.acme-dns.io\")\n    # Initialize the storage. If the file does not exist, it will be \n    # automatically created.\n    storage = Storage(\"/path/to/storage.json\")\n\n    # Check if credentials were previously saved for your domain\n    account = storage.fetch(\"your.example.org\")\n    if not account:\n        # Account did not exist. Let's create a new one\n        # The whitelisted networks parameter is optional\n        account = client.register_account(whitelisted_networks) \n        # Save it\n        storage.put(domain, account)\n        storage.save()\n    \n    # Update the acme-dns TXT record.\n    client.update_txt_record(account, \"___validation_token_recieved_from_the_ca___\") \n    \n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/joohoi/pyacmedns/archive/0.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joohoi/pyacmedns", "keywords": "acme tls x509 acmedns letsencrypt", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyacmedns", "package_url": "https://pypi.org/project/pyacmedns/", "platform": "", "project_url": "https://pypi.org/project/pyacmedns/", "project_urls": {"Download": "https://github.com/joohoi/pyacmedns/archive/0.4.tar.gz", "Homepage": "https://github.com/joohoi/pyacmedns"}, "release_url": "https://pypi.org/project/pyacmedns/0.4/", "requires_dist": null, "requires_python": "", "summary": "Library that implements the acme-dns client communication and persistent account storage on the client host", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A client library to handle <a href=\"https://github.com/joohoi/acme-dns\" rel=\"nofollow\">acme-dns</a> client communication and persistent account storage.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPI</p>\n<pre>$ pip install pyacmedns\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The following is a complete example of handling the validation using this library.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyacmedns</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">Storage</span>\n\n<span class=\"n\">whitelisted_networks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"192.168.11.0/24\"</span><span class=\"p\">,</span> <span class=\"s2\">\"[::1]/128\"</span><span class=\"p\">]</span>\n<span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"s2\">\"your.example.org\"</span>\n\n<span class=\"c1\"># Initialize the client. Point it towards your acme-dns instance.</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"https://auth.acme-dns.io\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Initialize the storage. If the file does not exist, it will be</span>\n<span class=\"c1\"># automatically created.</span>\n<span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/storage.json\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Check if credentials were previously saved for your domain</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s2\">\"your.example.org\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">account</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Account did not exist. Let's create a new one</span>\n    <span class=\"c1\"># The whitelisted networks parameter is optional</span>\n    <span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">register_account</span><span class=\"p\">(</span><span class=\"n\">whitelisted_networks</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Save it</span>\n    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"p\">,</span> <span class=\"n\">account</span><span class=\"p\">)</span>\n    <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Update the acme-dns TXT record.</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_txt_record</span><span class=\"p\">(</span><span class=\"n\">account</span><span class=\"p\">,</span> <span class=\"s2\">\"___validation_token_recieved_from_the_ca___\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3680881, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "c5fc7ec7052f4dd78db31ec4e6bda212", "sha256": "b1833997faa57f4ec370c200388cb0ab527b9268bfb204bed1842f0d68cf6d7a"}, "downloads": -1, "filename": "pyacmedns-0.3.tar.gz", "has_sig": false, "md5_digest": "c5fc7ec7052f4dd78db31ec4e6bda212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3912, "upload_time": "2018-03-18T13:41:57", "upload_time_iso_8601": "2018-03-18T13:41:57.660823Z", "url": "https://files.pythonhosted.org/packages/36/a6/7d4325c93189f4f3d795ce838d050d1580b6247d337ea31b02bbf7f5f588/pyacmedns-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c997dee9aa077b05020955f5ddc46ca6", "sha256": "c609c301deb045045b2eb7749f3f306900d579c3bf304dccdd969dcf016281c3"}, "downloads": -1, "filename": "pyacmedns-0.4.tar.gz", "has_sig": false, "md5_digest": "c997dee9aa077b05020955f5ddc46ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3902, "upload_time": "2018-03-18T13:52:50", "upload_time_iso_8601": "2018-03-18T13:52:50.252116Z", "url": "https://files.pythonhosted.org/packages/a8/7f/fae68cdf1af35aead9a5189a735a373bac3d03a3155b976678c1f420ad03/pyacmedns-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c997dee9aa077b05020955f5ddc46ca6", "sha256": "c609c301deb045045b2eb7749f3f306900d579c3bf304dccdd969dcf016281c3"}, "downloads": -1, "filename": "pyacmedns-0.4.tar.gz", "has_sig": false, "md5_digest": "c997dee9aa077b05020955f5ddc46ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3902, "upload_time": "2018-03-18T13:52:50", "upload_time_iso_8601": "2018-03-18T13:52:50.252116Z", "url": "https://files.pythonhosted.org/packages/a8/7f/fae68cdf1af35aead9a5189a735a373bac3d03a3155b976678c1f420ad03/pyacmedns-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:04 2020"}