{"info": {"author": "Nic Wolff", "author_email": "nwolff@hearst.com", "bugtrack_url": null, "classifiers": [], "description": "py-sqs-queue\n============\n\nSimple Python AWS SQS queue consumer and publisher\n\nInstallation\n------------\n\n``python setup.py install``\n\nExamples\n--------\n\n::\n\n    from sqs_queue import Queue\n\n    my_queue = Queue('YOUR_QUEUE_NAME')\n    for message in my_queue:\n        process(message)\n\nOr, if you'd like to leave unprocessable messages in the queue to be\nretried again later:\n\n::\n\n    for message in my_queue:\n        try:\n            process(message)\n        except RetryableError:\n            message.defer()\n        except Exception as e:\n            logger.warn(e)\n\nAnd, you can publish to the queue as well:\n\n::\n\n    queue.publish('This is the body of my message.')\n\nParameters\n----------\n\nBehind the scenes, the generator is polling SQS for new messages. When\nthe queue is empty, that call will wait up to 20 seconds for new\nmessages, and if it times out\u00a0before any arrive it will sleep for 40\nseconds before trying again. Those time intervals are configurable:\n\n::\n\n    queue = Queue('YOUR_QUEUE_NAME', poll_wait=20, poll_sleep=40)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/HearstCorp/py-sqs-queue", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "sqs_queue", "package_url": "https://pypi.org/project/sqs_queue/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sqs_queue/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/HearstCorp/py-sqs-queue"}, "release_url": "https://pypi.org/project/sqs_queue/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "AWS SQS queue consumer/publisher", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple Python AWS SQS queue consumer and publisher</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>python setup.py install</tt></p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre>from sqs_queue import Queue\n\nmy_queue = Queue('YOUR_QUEUE_NAME')\nfor message in my_queue:\n    process(message)\n</pre>\n<p>Or, if you\u2019d like to leave unprocessable messages in the queue to be\nretried again later:</p>\n<pre>for message in my_queue:\n    try:\n        process(message)\n    except RetryableError:\n        message.defer()\n    except Exception as e:\n        logger.warn(e)\n</pre>\n<p>And, you can publish to the queue as well:</p>\n<pre>queue.publish('This is the body of my message.')\n</pre>\n</div>\n<div id=\"parameters\">\n<h2>Parameters</h2>\n<p>Behind the scenes, the generator is polling SQS for new messages. When\nthe queue is empty, that call will wait up to 20 seconds for new\nmessages, and if it times out\u00a0before any arrive it will sleep for 40\nseconds before trying again. Those time intervals are configurable:</p>\n<pre>queue = Queue('YOUR_QUEUE_NAME', poll_wait=20, poll_sleep=40)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2583264, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "70e7d9ec68fa870d9d1188b0b77e3cb4", "sha256": "2090630bd23d0c6c7b655e37f97b67f84e9931fff41550bd375e4ad476cc83d0"}, "downloads": -1, "filename": "sqs_queue-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70e7d9ec68fa870d9d1188b0b77e3cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1408, "upload_time": "2017-01-17T23:37:06", "upload_time_iso_8601": "2017-01-17T23:37:06.201198Z", "url": "https://files.pythonhosted.org/packages/66/81/2b102fe908608faefa571bfe0b437796f7f3d12e79055e9af370edfcf0f3/sqs_queue-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d039a5f3f9400f3e1fcb399422c76b67", "sha256": "219926f89c6392cc18c80b5e6b07929689a9043b4e11cd3401aec63ef4543cf2"}, "downloads": -1, "filename": "sqs_queue-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d039a5f3f9400f3e1fcb399422c76b67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1789, "upload_time": "2017-01-17T23:47:17", "upload_time_iso_8601": "2017-01-17T23:47:17.867804Z", "url": "https://files.pythonhosted.org/packages/00/38/358350602ae3479d03276d740af760441c04220bfe7405f5d8684555146b/sqs_queue-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7d3de31bb5b504d9a4bea7afd4dcf6bb", "sha256": "c647110a6f403ee842ea1511b4b28293e5d4646d2e745f17601aa9bc25d406ed"}, "downloads": -1, "filename": "sqs_queue-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7d3de31bb5b504d9a4bea7afd4dcf6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1960, "upload_time": "2017-01-18T20:23:36", "upload_time_iso_8601": "2017-01-18T20:23:36.273375Z", "url": "https://files.pythonhosted.org/packages/ca/3a/8f76481118a5e7094ce86555e727b7dc32997b893d9d3a13f94f354eb47e/sqs_queue-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d3de31bb5b504d9a4bea7afd4dcf6bb", "sha256": "c647110a6f403ee842ea1511b4b28293e5d4646d2e745f17601aa9bc25d406ed"}, "downloads": -1, "filename": "sqs_queue-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7d3de31bb5b504d9a4bea7afd4dcf6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1960, "upload_time": "2017-01-18T20:23:36", "upload_time_iso_8601": "2017-01-18T20:23:36.273375Z", "url": "https://files.pythonhosted.org/packages/ca/3a/8f76481118a5e7094ce86555e727b7dc32997b893d9d3a13f94f354eb47e/sqs_queue-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:28 2020"}