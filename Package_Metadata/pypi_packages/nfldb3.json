{"info": {"author": "Nick Zeak", "author_email": "nczeak@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Other Audience", "License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 3.8", "Topic :: Database"], "description": "Module nfldb provides command line tools and a library for maintaining\nand querying a relational database of play-by-play NFL data. The data is\nimported from `nflgame <https://github.com/BurntSushi/nflgame>`__, which\nin turn gets its data from a JSON feed on NFL.com's live GameCenter\npages. This data includes, but is not limited to, game schedules,\nscores, rosters and play-by-play data for every preseason, regular\nseason and postseason game dating back to 2009.\n\nHere is a small teaser that shows how to use nfldb to find the top five\npassers in the 2012 regular season:\n\n::\n\n    #!python\n    import nfldb\n\n    db = nfldb.connect()\n    q = nfldb.Query(db)\n\n    q.game(season_year=2012, season_type='Regular')\n    for pp in q.sort('passing_yds').limit(5).as_aggregate():\n        print pp.player, pp.passing_yds\n\nAnd the output is:\n\n::\n\n    [andrew@Liger ~] python2 top-five.py\n    Drew Brees (NO, QB) 5177\n    Matthew Stafford (DET, QB) 4965\n    Tony Romo (DAL, QB) 4903\n    Tom Brady (NE, QB) 4799\n    Matt Ryan (ATL, QB) 4719\n\nIn theory, both ``nfldb`` and ``nflgame`` provide access to the same\ndata. The difference is in the execution. In order to search data in\nnflgame, a large JSON file needs to be read from disk and loaded into\nPython data structures for each game. Conversely, nfldb's data is stored\nin a relational database, which can be searched and retrieved faster\nthan nflgame by a few orders of magnitude. Moreover, the relational\norganization of data in nfldb allows for a convenient `query\ninterface <http://goo.gl/Sd6MN2>`__ to search NFL play data.\n\nThe database can be updated with real time data from active games by\nrunning the ``nfldb-update`` script included with this module as often\nas you're comfortable pinging NFL.com. (N.B. The JSON data itself only\nupdates every 15 seconds, so running ``nfldb-update`` faster than that\nwould be wasteful.) Roster updates are done automatically at a minimum\ninterval of 12 hours.\n\nnfldb has `comprehensive API\ndocumentation <http://pdoc.burntsushi.net/nfldb>`__ and a `wiki with\nexamples <https://github.com/BurntSushi/nfldb/wiki>`__.\n\nnfldb can be used in conjunction with\n`nflvid <https://pypi.python.org/pypi/nflvid>`__ to `search and watch\nNFL game footage <http://goo.gl/Mckaf0>`__.\n\nIf you need help, please join us at our IRC channel ``#nflgame`` on\nFreeNode.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BurntSushi/nfldb", "keywords": "", "license": "UNLICENSE", "maintainer": "", "maintainer_email": "", "name": "nfldb3", "package_url": "https://pypi.org/project/nfldb3/", "platform": "ANY", "project_url": "https://pypi.org/project/nfldb3/", "project_urls": {"Homepage": "https://github.com/BurntSushi/nfldb"}, "release_url": "https://pypi.org/project/nfldb3/0.0.1/", "requires_dist": ["nflgame (>=1.2.20)", "psycopg2", "enum34", "pytz"], "requires_python": "", "summary": "A library to manage and update NFL data in a Postgres database updated for Python 3.8. Based on code written byAndrew Gallant.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Module nfldb provides command line tools and a library for maintaining\nand querying a relational database of play-by-play NFL data. The data is\nimported from <a href=\"https://github.com/BurntSushi/nflgame\" rel=\"nofollow\">nflgame</a>, which\nin turn gets its data from a JSON feed on NFL.com\u2019s live GameCenter\npages. This data includes, but is not limited to, game schedules,\nscores, rosters and play-by-play data for every preseason, regular\nseason and postseason game dating back to 2009.</p>\n<p>Here is a small teaser that shows how to use nfldb to find the top five\npassers in the 2012 regular season:</p>\n<pre>#!python\nimport nfldb\n\ndb = nfldb.connect()\nq = nfldb.Query(db)\n\nq.game(season_year=2012, season_type='Regular')\nfor pp in q.sort('passing_yds').limit(5).as_aggregate():\n    print pp.player, pp.passing_yds\n</pre>\n<p>And the output is:</p>\n<pre>[andrew@Liger ~] python2 top-five.py\nDrew Brees (NO, QB) 5177\nMatthew Stafford (DET, QB) 4965\nTony Romo (DAL, QB) 4903\nTom Brady (NE, QB) 4799\nMatt Ryan (ATL, QB) 4719\n</pre>\n<p>In theory, both <tt>nfldb</tt> and <tt>nflgame</tt> provide access to the same\ndata. The difference is in the execution. In order to search data in\nnflgame, a large JSON file needs to be read from disk and loaded into\nPython data structures for each game. Conversely, nfldb\u2019s data is stored\nin a relational database, which can be searched and retrieved faster\nthan nflgame by a few orders of magnitude. Moreover, the relational\norganization of data in nfldb allows for a convenient <a href=\"http://goo.gl/Sd6MN2\" rel=\"nofollow\">query\ninterface</a> to search NFL play data.</p>\n<p>The database can be updated with real time data from active games by\nrunning the <tt><span class=\"pre\">nfldb-update</span></tt> script included with this module as often\nas you\u2019re comfortable pinging NFL.com. (N.B. The JSON data itself only\nupdates every 15 seconds, so running <tt><span class=\"pre\">nfldb-update</span></tt> faster than that\nwould be wasteful.) Roster updates are done automatically at a minimum\ninterval of 12 hours.</p>\n<p>nfldb has <a href=\"http://pdoc.burntsushi.net/nfldb\" rel=\"nofollow\">comprehensive API\ndocumentation</a> and a <a href=\"https://github.com/BurntSushi/nfldb/wiki\" rel=\"nofollow\">wiki with\nexamples</a>.</p>\n<p>nfldb can be used in conjunction with\n<a href=\"https://pypi.python.org/pypi/nflvid\" rel=\"nofollow\">nflvid</a> to <a href=\"http://goo.gl/Mckaf0\" rel=\"nofollow\">search and watch\nNFL game footage</a>.</p>\n<p>If you need help, please join us at our IRC channel <tt>#nflgame</tt> on\nFreeNode.</p>\n\n          </div>"}, "last_serial": 6676611, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "16f83b8bded919376724ed4e7ae8b34e", "sha256": "296c1ba24341290908a9450b487bb0b798a091975d09176d652f5d9dcbb1c4d5"}, "downloads": -1, "filename": "nfldb3-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "16f83b8bded919376724ed4e7ae8b34e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 66591, "upload_time": "2020-02-21T16:56:41", "upload_time_iso_8601": "2020-02-21T16:56:41.858996Z", "url": "https://files.pythonhosted.org/packages/7b/a7/560a1613a3fe812faa8107c064fd5d9af946c6febc2f60e28ddf2429cdc2/nfldb3-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7b9ba78d4025fdf879a6da19a995dfd", "sha256": "c773e4ee634170065ad2f7676911ac3b695754db5e8b91847822ab570b3d502a"}, "downloads": -1, "filename": "nfldb3-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b7b9ba78d4025fdf879a6da19a995dfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61172, "upload_time": "2020-02-21T16:56:44", "upload_time_iso_8601": "2020-02-21T16:56:44.005256Z", "url": "https://files.pythonhosted.org/packages/8b/dc/885bc9b6feaf6f2998be1213df8f538cc77d93ee7c7604f338cf4c7f23ce/nfldb3-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16f83b8bded919376724ed4e7ae8b34e", "sha256": "296c1ba24341290908a9450b487bb0b798a091975d09176d652f5d9dcbb1c4d5"}, "downloads": -1, "filename": "nfldb3-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "16f83b8bded919376724ed4e7ae8b34e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 66591, "upload_time": "2020-02-21T16:56:41", "upload_time_iso_8601": "2020-02-21T16:56:41.858996Z", "url": "https://files.pythonhosted.org/packages/7b/a7/560a1613a3fe812faa8107c064fd5d9af946c6febc2f60e28ddf2429cdc2/nfldb3-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7b9ba78d4025fdf879a6da19a995dfd", "sha256": "c773e4ee634170065ad2f7676911ac3b695754db5e8b91847822ab570b3d502a"}, "downloads": -1, "filename": "nfldb3-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b7b9ba78d4025fdf879a6da19a995dfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61172, "upload_time": "2020-02-21T16:56:44", "upload_time_iso_8601": "2020-02-21T16:56:44.005256Z", "url": "https://files.pythonhosted.org/packages/8b/dc/885bc9b6feaf6f2998be1213df8f538cc77d93ee7c7604f338cf4c7f23ce/nfldb3-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:34 2020"}