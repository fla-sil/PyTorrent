{"info": {"author": "Ramesh RV", "author_email": "rameshrvr@outlook.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "D-ary Heap\n##########\n\n.. image:: https://img.shields.io/badge/d_heap-0.0.2-green.svg\n  :target: https://pypi.org/project/d-heap/\n.. image:: https://travis-ci.org/rameshrvr/d-ary_heap.svg?branch=master\n    :target: https://travis-ci.org/rameshrvr/d-ary_heap\n\n\nPython functions for working with D-ary Heap (Heap with more than 2 child nodes). For more info about this Data Structure Please gothrough: https://en.wikipedia.org/wiki/D-ary_heap\n\nThis library provides the below Heap specific functions.\n\n*heapify*\n\tConvert list of elements to Heap data structure (MinHeap/MaxHeap)\n\n*add_element*\n\tAdd single/list of elements to Heap\n\n*get_root_value*\n\tReturns root value of the Heap without removing the element\n\tMinimum value for Min Heap, Maximum value for Max Heap\n\n*extract_root*\n\tExtract root element from Heap and reform the Heap\n\n*search_value*\n\tSearches the value in heap and returns index.\n\tif same element is present multiple times, first occurring index is returned\n\n*delete_element_at_index*\n\tRemove the element at the specified index and reform the Heap\n\n\nFor example function invocations, plesae see the tutorial.\n\n.. contents::\n\n\nInstallation\n============\n\ninstall from pypi using pip::\n\n\t$ pip install d_heap\n\nor install from source using::\n\n\t$ git clone https://github.com/rameshrvr/d-ary_heap.git\n\t$ cd d-ary_heap\n\t$ pip install .\n\n\nTutorial\n========\n\n1. Min Heap (Heap where the data in parent node is lesser than the data in child node)\n\n.. code-block:: python\n\t\n\tRameshs-MacBook-Pro:d-ary_heap rameshrv$ python3\n\tPython 3.7.2 (default, Dec 27 2018, 07:35:06) \n\t[Clang 10.0.0 (clang-1000.11.45.5)] on darwin\n\tType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\t>>>\n\t>>> from d_heap import MinHeap, MaxHeap\n\t>>> \n\t>>> array = [4, 3, 6, 8, 11, 1, 5, 14, 10, 7, 2, 12, 9, 13, 15]\n\t>>> \n\t>>> min_heap_4_children = MinHeap(4, array)  # Convert array to 4 children Heap\n\t>>> \n\t>>> min_heap_4_children.elements()\n\t[1, 3, 2, 8, 11, 4, 5, 14, 10, 7, 6, 12, 9, 13, 15]\n\t>>> \n\t>>> min_heap_5_children = MinHeap(5, array)  # Convert array to 5 children Heap\n\t>>> \n\t>>> min_heap_5_children.elements()\n\t[1, 2, 6, 8, 11, 4, 5, 14, 10, 7, 3, 12, 9, 13, 15]\n\t>>> \n\t>>> min_heap_4_children.add_element(0)  # Add single element to Heap\n\t>>> \n\t>>> min_heap_4_children.elements()\n\t[0, 3, 2, 1, 11, 4, 5, 14, 10, 7, 6, 12, 9, 13, 15, 8]\n\t>>> \n\t>>> min_heap_5_children.add_element([0, 24, 17, 55])  # Add list of elements to heap\n\t>>> \n\t>>> min_heap_5_children.elements()\n\t[0, 2, 1, 8, 11, 4, 5, 14, 10, 7, 3, 12, 9, 13, 15, 6, 24, 17, 55]\n\t>>> \n\t>>> min_heap_4_children.extract_root()  # Extract root element from Heap and retrun it. In this case its the minimum element\n\t0\n\t>>> \n\t>>> min_heap_4_children.elements()\n\t[1, 3, 2, 8, 11, 4, 5, 14, 10, 7, 6, 12, 9, 13, 15]\n\t>>> \n\t>>> min_heap_4_children.get_root_value()  # Returns the root value (minimum value) without removing it from Heap\n\t1\n\t>>> \n\t>>> min_heap_4_children.search_value(5)  # Returns index of the searched value. -1 if there is no such value in Heap\n\t6\n\t>>> min_heap_4_children.search_value(7)\n\t9\n\t>>> min_heap_4_children.search_value(21)\n\t-1\n\t>>> \n\t>>> min_heap_4_children.delete_element_at_index(4)  # Remove the element at the specified index\n\t>>> \n\t>>> min_heap_4_children.elements()\n\t[1, 3, 2, 8, 15, 4, 5, 14, 10, 7, 6, 12, 9, 13]\n\t>>> \n\n\n\n\n2. Max Heap (Heap where the data in parent node is greater than the data in child node)\n\n.. code-block:: python\n\n\tRameshs-MacBook-Pro:d-ary_heap rameshrv$ python3\n\tPython 3.7.2 (default, Dec 27 2018, 07:35:06) \n\t[Clang 10.0.0 (clang-1000.11.45.5)] on darwin\n\tType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\t>>>\n\t>>> from d_heap import MinHeap, MaxHeap\n\t>>>\n\t>>> array = [4, 3, 6, 8, 11, 1, 5, 14, 10, 7, 2, 12, 9, 13, 15]\n\t>>>\n\t>>> max_heap_4_children = MaxHeap(4, array)  # Convert array to 4 children Heap\n\t>>> \n\t>>> max_heap_4_children.elements()\n\t[15, 14, 12, 13, 11, 1, 5, 3, 10, 7, 2, 6, 9, 4, 8]\n\t>>> \n\t>>> max_heap_5_children = MaxHeap(5, array)  # Convert array to 5 children Heap\n\t>>> \n\t>>> max_heap_5_children.elements()\n\t[15, 14, 13, 8, 11, 1, 5, 3, 10, 7, 2, 12, 9, 4, 6]\n\t>>> \n\t>>> max_heap_4_children.add_element(21)  # Add single element to Heap\n\t>>> \n\t>>> max_heap_4_children.elements()\n\t[21, 14, 12, 15, 11, 1, 5, 3, 10, 7, 2, 6, 9, 4, 8, 13]\n\t>>> \n\t>>> \n\t>>> max_heap_5_children.add_element([21, 14, 27, 35])  # Add list of elements to heap\n\t>>> \n\t>>> max_heap_5_children.elements()\n\t[35, 14, 15, 27, 11, 1, 5, 3, 10, 7, 2, 12, 9, 4, 6, 13, 8, 14, 21]\n\t>>> \n\t>>> max_heap_4_children.extract_root()  # Extract root element from Heap and retrun it. In this case its the maximum element\n\t21\n\t>>> \n\t>>> max_heap_4_children.elements()\n\t[15, 14, 12, 13, 11, 1, 5, 3, 10, 7, 2, 6, 9, 4, 8]\n\t>>> \n\t>>> max_heap_4_children.get_root_value()  # Returns the root value (maximum value) without removing it from Heap\n\t15\n\t>>> \n\t>>> max_heap_4_children.search_value(5)  # Returns index of the searched value. -1 if there is no such value in Heap\n\t6\n\t>>> max_heap_4_children.search_value(11)\n\t4\n\t>>> max_heap_4_children.search_value(21)\n\t-1\n\t>>> \n\t>>> max_heap_4_children.delete_element_at_index(2)  # Remove the element at the specified index\n\t>>> \n\t>>> max_heap_4_children.elements()\n\t[15, 14, 9, 13, 11, 1, 5, 3, 10, 7, 2, 6, 8, 4]\n\t>>> \n\n\n\nDevelopment\n===========\n\nAfter checking out the repo, `cd` to the repository. Then, run `pip install .` to install the package locally. You can also run `python (or) python3` for an interactive prompt that will allow you to experiment.\n\nTo install this package onto your local machine, `cd` to the repository then run `pip install .`. To release a new version, update the version number in `setup.py`, and then run `python setup.py register`, which will create a git tag for the version, push git commits and tags, and push the package file to [PyPI](https://pypi.org).\n\n\nContributing\n============\n\nBug reports and pull requests are welcome on GitHub at https://github.com/rameshrvr/d-ary_heap. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant]<http://contributor-covenant.org> code of conduct.\n\n\nLicense\n========\n\nThe package is available as open source under the terms of the [MIT License]<https://opensource.org/licenses/MIT>.\n\n\nCode of Conduct\n===============\n\nEveryone interacting in the Binary Heap project\u2019s codebases, issue trackers, chat rooms and mailing lists is expected to follow the [code of conduct](https://github.com/rameshrvr/d-ary_heap/blob/master/CODE_OF_CONDUCT.md).\n\n\nmisc\n========\n\n:license:\n  * MIT License\n\n:authors:\n  * Ramesh RV\n  * Adithya KS", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rameshrvr/d-ary_heap", "keywords": "d-heap heap python-heap min-heap max-heap", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "d-heap", "package_url": "https://pypi.org/project/d-heap/", "platform": "All", "project_url": "https://pypi.org/project/d-heap/", "project_urls": {"Homepage": "https://github.com/rameshrvr/d-ary_heap"}, "release_url": "https://pypi.org/project/d-heap/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python functions for working with D-ary Heap (Heap with more than 2 child nodes)", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/d-heap/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/d_heap-0.0.2-green.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34cb187005a8b2ae7e1a228cf787d87e221c0a09/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f645f686561702d302e302e322d677265656e2e737667\"></a>\n<a href=\"https://travis-ci.org/rameshrvr/d-ary_heap\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/rameshrvr/d-ary_heap.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97e06ab62c07d5e75d6622f284bbc22cfe9d115d/68747470733a2f2f7472617669732d63692e6f72672f72616d6573687276722f642d6172795f686561702e7376673f6272616e63683d6d6173746572\"></a>\n<p>Python functions for working with D-ary Heap (Heap with more than 2 child nodes). For more info about this Data Structure Please gothrough: <a href=\"https://en.wikipedia.org/wiki/D-ary_heap\" rel=\"nofollow\">https://en.wikipedia.org/wiki/D-ary_heap</a></p>\n<p>This library provides the below Heap specific functions.</p>\n<dl>\n<dt><em>heapify</em></dt>\n<dd>Convert list of elements to Heap data structure (MinHeap/MaxHeap)</dd>\n<dt><em>add_element</em></dt>\n<dd>Add single/list of elements to Heap</dd>\n<dt><em>get_root_value</em></dt>\n<dd>Returns root value of the Heap without removing the element\nMinimum value for Min Heap, Maximum value for Max Heap</dd>\n<dt><em>extract_root</em></dt>\n<dd>Extract root element from Heap and reform the Heap</dd>\n<dt><em>search_value</em></dt>\n<dd>Searches the value in heap and returns index.\nif same element is present multiple times, first occurring index is returned</dd>\n<dt><em>delete_element_at_index</em></dt>\n<dd>Remove the element at the specified index and reform the Heap</dd>\n</dl>\n<p>For example function invocations, plesae see the tutorial.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#tutorial\" id=\"id2\" rel=\"nofollow\">Tutorial</a></li>\n<li><a href=\"#development\" id=\"id3\" rel=\"nofollow\">Development</a></li>\n<li><a href=\"#contributing\" id=\"id4\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" id=\"id5\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#code-of-conduct\" id=\"id6\" rel=\"nofollow\">Code of Conduct</a></li>\n<li><a href=\"#misc\" id=\"id7\" rel=\"nofollow\">misc</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<p>install from pypi using pip:</p>\n<pre>$ pip install d_heap\n</pre>\n<p>or install from source using:</p>\n<pre>$ git clone https://github.com/rameshrvr/d-ary_heap.git\n$ cd d-ary_heap\n$ pip install .\n</pre>\n</div>\n<div id=\"tutorial\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Tutorial</a></h2>\n<ol>\n<li>Min Heap (Heap where the data in parent node is lesser than the data in child node)</li>\n</ol>\n<pre><span class=\"n\">Rameshs</span><span class=\"o\">-</span><span class=\"n\">MacBook</span><span class=\"o\">-</span><span class=\"n\">Pro</span><span class=\"p\">:</span><span class=\"n\">d</span><span class=\"o\">-</span><span class=\"n\">ary_heap</span> <span class=\"n\">rameshrv</span><span class=\"err\">$</span> <span class=\"n\">python3</span>\n<span class=\"n\">Python</span> <span class=\"mf\">3.7</span><span class=\"o\">.</span><span class=\"mi\">2</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Dec</span> <span class=\"mi\">27</span> <span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">07</span><span class=\"p\">:</span><span class=\"mi\">35</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">Clang</span> <span class=\"mf\">10.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1000.11</span><span class=\"o\">.</span><span class=\"mf\">45.5</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s2\">\"help\"</span><span class=\"p\">,</span> <span class=\"s2\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s2\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d_heap</span> <span class=\"kn\">import</span> <span class=\"n\">MinHeap</span><span class=\"p\">,</span> <span class=\"n\">MaxHeap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span> <span class=\"o\">=</span> <span class=\"n\">MinHeap</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"p\">)</span>  <span class=\"c1\"># Convert array to 4 children Heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_5_children</span> <span class=\"o\">=</span> <span class=\"n\">MinHeap</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"p\">)</span>  <span class=\"c1\"># Convert array to 5 children Heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_5_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>  <span class=\"c1\"># Add single element to Heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_5_children</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">55</span><span class=\"p\">])</span>  <span class=\"c1\"># Add list of elements to heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_5_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">55</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">extract_root</span><span class=\"p\">()</span>  <span class=\"c1\"># Extract root element from Heap and retrun it. In this case its the minimum element</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">get_root_value</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns the root value (minimum value) without removing it from Heap</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">search_value</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns index of the searched value. -1 if there is no such value in Heap</span>\n<span class=\"mi\">6</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">search_value</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"mi\">9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">search_value</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">delete_element_at_index</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>  <span class=\"c1\"># Remove the element at the specified index</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">min_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<ol>\n<li>Max Heap (Heap where the data in parent node is greater than the data in child node)</li>\n</ol>\n<pre><span class=\"n\">Rameshs</span><span class=\"o\">-</span><span class=\"n\">MacBook</span><span class=\"o\">-</span><span class=\"n\">Pro</span><span class=\"p\">:</span><span class=\"n\">d</span><span class=\"o\">-</span><span class=\"n\">ary_heap</span> <span class=\"n\">rameshrv</span><span class=\"err\">$</span> <span class=\"n\">python3</span>\n<span class=\"n\">Python</span> <span class=\"mf\">3.7</span><span class=\"o\">.</span><span class=\"mi\">2</span> <span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">Dec</span> <span class=\"mi\">27</span> <span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">07</span><span class=\"p\">:</span><span class=\"mi\">35</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">Clang</span> <span class=\"mf\">10.0</span><span class=\"o\">.</span><span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1000.11</span><span class=\"o\">.</span><span class=\"mf\">45.5</span><span class=\"p\">)]</span> <span class=\"n\">on</span> <span class=\"n\">darwin</span>\n<span class=\"n\">Type</span> <span class=\"s2\">\"help\"</span><span class=\"p\">,</span> <span class=\"s2\">\"copyright\"</span><span class=\"p\">,</span> <span class=\"s2\">\"credits\"</span> <span class=\"ow\">or</span> <span class=\"s2\">\"license\"</span> <span class=\"k\">for</span> <span class=\"n\">more</span> <span class=\"n\">information</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d_heap</span> <span class=\"kn\">import</span> <span class=\"n\">MinHeap</span><span class=\"p\">,</span> <span class=\"n\">MaxHeap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span> <span class=\"o\">=</span> <span class=\"n\">MaxHeap</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"p\">)</span>  <span class=\"c1\"># Convert array to 4 children Heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_5_children</span> <span class=\"o\">=</span> <span class=\"n\">MaxHeap</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"p\">)</span>  <span class=\"c1\"># Convert array to 5 children Heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_5_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span>  <span class=\"c1\"># Add single element to Heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_5_children</span><span class=\"o\">.</span><span class=\"n\">add_element</span><span class=\"p\">([</span><span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">])</span>  <span class=\"c1\"># Add list of elements to heap</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_5_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">extract_root</span><span class=\"p\">()</span>  <span class=\"c1\"># Extract root element from Heap and retrun it. In this case its the maximum element</span>\n<span class=\"mi\">21</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">get_root_value</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns the root value (maximum value) without removing it from Heap</span>\n<span class=\"mi\">15</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">search_value</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns index of the searched value. -1 if there is no such value in Heap</span>\n<span class=\"mi\">6</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">search_value</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">search_value</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">delete_element_at_index</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># Remove the element at the specified index</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">max_heap_4_children</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n</div>\n<div id=\"development\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Development</a></h2>\n<p>After checking out the repo, <cite>cd</cite> to the repository. Then, run <cite>pip install .</cite> to install the package locally. You can also run <cite>python (or) python3</cite> for an interactive prompt that will allow you to experiment.</p>\n<p>To install this package onto your local machine, <cite>cd</cite> to the repository then run <cite>pip install .</cite>. To release a new version, update the version number in <cite>setup.py</cite>, and then run <cite>python setup.py register</cite>, which will create a git tag for the version, push git commits and tags, and push the package file to [PyPI](<a href=\"https://pypi.org\" rel=\"nofollow\">https://pypi.org</a>).</p>\n</div>\n<div id=\"contributing\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Contributing</a></h2>\n<p>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/rameshrvr/d-ary_heap\" rel=\"nofollow\">https://github.com/rameshrvr/d-ary_heap</a>. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant]&lt;<a href=\"http://contributor-covenant.org\" rel=\"nofollow\">http://contributor-covenant.org</a>&gt; code of conduct.</p>\n</div>\n<div id=\"license\">\n<h2><a href=\"#id5\" rel=\"nofollow\">License</a></h2>\n<p>The package is available as open source under the terms of the [MIT License]&lt;<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">https://opensource.org/licenses/MIT</a>&gt;.</p>\n</div>\n<div id=\"code-of-conduct\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Code of Conduct</a></h2>\n<p>Everyone interacting in the Binary Heap project\u2019s codebases, issue trackers, chat rooms and mailing lists is expected to follow the [code of conduct](<a href=\"https://github.com/rameshrvr/d-ary_heap/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">https://github.com/rameshrvr/d-ary_heap/blob/master/CODE_OF_CONDUCT.md</a>).</p>\n</div>\n<div id=\"misc\">\n<h2><a href=\"#id7\" rel=\"nofollow\">misc</a></h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>license:</th><td><ul>\n<li>MIT License</li>\n</ul>\n</td>\n</tr>\n<tr><th>authors:</th><td><ul>\n<li>Ramesh RV</li>\n<li>Adithya KS</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 4786325, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5f5bc91f1e0fc48800676216d76eee1b", "sha256": "885edc513fadfed0bdb39ff6771829667392721318e2ad5060f9c5b9dc486e3a"}, "downloads": -1, "filename": "d_heap-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5f5bc91f1e0fc48800676216d76eee1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5005, "upload_time": "2019-02-06T07:33:53", "upload_time_iso_8601": "2019-02-06T07:33:53.699245Z", "url": "https://files.pythonhosted.org/packages/c7/f4/50098315e53b786ab8191d9cee9e3eca3ca75989bfad6fc1969921427495/d_heap-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0446abe1cdc9178953b52ce1cd73f5eb", "sha256": "588c932b359f729b015e20eec4756915ef4fc530e39fe5911af7b97b70935111"}, "downloads": -1, "filename": "d_heap-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0446abe1cdc9178953b52ce1cd73f5eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5228, "upload_time": "2019-02-06T12:00:37", "upload_time_iso_8601": "2019-02-06T12:00:37.044233Z", "url": "https://files.pythonhosted.org/packages/01/54/e62d0ed70474773d0c41f751faaee2ccfd1605a7fd561532a45fa213ed66/d_heap-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0446abe1cdc9178953b52ce1cd73f5eb", "sha256": "588c932b359f729b015e20eec4756915ef4fc530e39fe5911af7b97b70935111"}, "downloads": -1, "filename": "d_heap-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0446abe1cdc9178953b52ce1cd73f5eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5228, "upload_time": "2019-02-06T12:00:37", "upload_time_iso_8601": "2019-02-06T12:00:37.044233Z", "url": "https://files.pythonhosted.org/packages/01/54/e62d0ed70474773d0c41f751faaee2ccfd1605a7fd561532a45fa213ed66/d_heap-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:40 2020"}