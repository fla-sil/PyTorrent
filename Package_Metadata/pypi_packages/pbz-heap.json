{"info": {"author": "http://github.com/Pebaz", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# pbz-heap\n\nSince no max heap seems to exist for Python, here is a Min and Max Heap\nimplementation.\n\nI just stood there, dumbfounded that there is [no Max Heap for Python anywhere on\nthe internet](https://stackoverflow.com/a/2501527). Seriously? In 2020? If you\ncan find one, open an Issue and I'll check it out.\n\n### Performance\n\nAbsolutely no claims are made about the performance of this Min/Max Heap\nimplementation. I would just be glad that it exists at all ;)\n\nThat said, even the Python 3.8 standard library heap is implemented in [pure\nPython](https://github.com/python/cpython/blob/3.8/Lib/heapq.py).\n\n### Usage\n\n```python\n# Min Heap\nh = MinHeap([4, 5, 2, 1, 9, 10])\nprint(h.pop(), '==', 1)\nprint(h.pop(), '==', 2)\nprint(h.pop(), '==', 4)\n\n# Max Heap\nh = MaxHeap([4, 5, 2, 1, 9, 10])\nprint(h.pop(), '==', 10)\nprint(h.pop(), '==', 9)\nprint(h.pop(), '==', 5)\n```\n\n### Implementation Details\n\nYes, yes, I know I just wraped the standard library `heapq`. That is, after all,\n[the officially accepted](https://stackoverflow.com/a/2501527) max heap data\nstructure for Python.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Pebaz/pbz-heap", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pbz-heap", "package_url": "https://pypi.org/project/pbz-heap/", "platform": "", "project_url": "https://pypi.org/project/pbz-heap/", "project_urls": {"Homepage": "http://github.com/Pebaz/pbz-heap"}, "release_url": "https://pypi.org/project/pbz-heap/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Min and Max Heap implementation in Python.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pbz-heap</h1>\n<p>Since no max heap seems to exist for Python, here is a Min and Max Heap\nimplementation.</p>\n<p>I just stood there, dumbfounded that there is <a href=\"https://stackoverflow.com/a/2501527\" rel=\"nofollow\">no Max Heap for Python anywhere on\nthe internet</a>. Seriously? In 2020? If you\ncan find one, open an Issue and I'll check it out.</p>\n<h3>Performance</h3>\n<p>Absolutely no claims are made about the performance of this Min/Max Heap\nimplementation. I would just be glad that it exists at all ;)</p>\n<p>That said, even the Python 3.8 standard library heap is implemented in <a href=\"https://github.com/python/cpython/blob/3.8/Lib/heapq.py\" rel=\"nofollow\">pure\nPython</a>.</p>\n<h3>Usage</h3>\n<pre><span class=\"c1\"># Min Heap</span>\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">MinHeap</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(),</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(),</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(),</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Max Heap</span>\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">MaxHeap</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(),</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(),</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(),</span> <span class=\"s1\">'=='</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h3>Implementation Details</h3>\n<p>Yes, yes, I know I just wraped the standard library <code>heapq</code>. That is, after all,\n<a href=\"https://stackoverflow.com/a/2501527\" rel=\"nofollow\">the officially accepted</a> max heap data\nstructure for Python.</p>\n\n          </div>"}, "last_serial": 6986497, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9c7f6e432868c96afdd898b1ee6d5f05", "sha256": "2d06367e9db7fecf53554c4a6c177961f9a59c031a332ca9f8218fe67fa478d8"}, "downloads": -1, "filename": "pbz-heap-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9c7f6e432868c96afdd898b1ee6d5f05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2020-04-09T14:09:04", "upload_time_iso_8601": "2020-04-09T14:09:04.474065Z", "url": "https://files.pythonhosted.org/packages/7a/ef/ced6639dd2ba21c6f044e12d389025afcbaa622e1cb904e3bda2d7c560e2/pbz-heap-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c7f6e432868c96afdd898b1ee6d5f05", "sha256": "2d06367e9db7fecf53554c4a6c177961f9a59c031a332ca9f8218fe67fa478d8"}, "downloads": -1, "filename": "pbz-heap-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9c7f6e432868c96afdd898b1ee6d5f05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2020-04-09T14:09:04", "upload_time_iso_8601": "2020-04-09T14:09:04.474065Z", "url": "https://files.pythonhosted.org/packages/7a/ef/ced6639dd2ba21c6f044e12d389025afcbaa622e1cb904e3bda2d7c560e2/pbz-heap-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:32 2020"}