{"info": {"author": "yukinagae", "author_email": "yuki.nagae1130@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# nameko-design\n\n![logo](https://raw.githubusercontent.com/yukinagae/nameko-design/master/logo.png)\n\nGenerate [Nameko](https://www.nameko.io/) http files from design schema inspired by [goa](https://goa.design/)\n\n## Dependencies\n\n- Python3.6\n- [Poetry](https://github.com/sdispater/poetry)\n\n## Installation\n\n```bash\ncd nameko-design\npoetry install\n```\n\n## Usage\n\n```bash\ncd nameko-design\npoetry run nameko-design nameko_design/sample.py\n```\n\n## Design\n\nThis API design schema\n\n```python\nwith Service('http_service'):\n    Title('This is a http service')\n\n    with Method('liveness'):\n        Description('liveness probe')\n        Result(str)\n        HTTP(GET, '/liveness')\n\n    with Method('readiness'):\n        Description('readiness probe')\n        Result(str)\n        HTTP(GET, '/readiness')\n```\n\nwill generate the below nameko file\n\n```python\nfrom nameko.web.handlers import http\n\n\nclass HttpService:\n    name = 'http service'\n\n    @http('GET', '/liveness')\n    def liveness(self, request) -> str:\n        pass\n\n    @http('GET', '/readiness')\n    def readiness(self, request) -> str:\n        pass\n```\n\n## TODO\n\n- [ ] Configure http url and port\n- [ ] Add URL parameter and type\n- [ ] Add payload (name, type, description, position etc)\n- [ ] Add validation\n- [ ] Add gRPC server\n- [ ] Generate proto files\n- [ ] Generate swagger json\n\nWhat I want:\n\n```python\nwith Service('example_service'):\n    Title('This is an example service')\n\n    with Method('liveness'):\n        Description('liveness probe')\n        Result(str)\n        HTTP(GET, '/liveness')\n\n    with Method('add'):\n        Description('a + b')\n        with Payload():                         # Not yet implemented\n            Field(1, \"a\", int, \"left operand\")  # Not yet implemented\n            Field(2, \"b\", int, \"right operand\") # Not yet implemented\n            Required(\"a\", \"b\")                  # Not yet implemented\n        Result(int)\n        HTTP(GET, '/add/{a}/{b}')               # Not yet implemented\n        GRPC()                                  # Not yet implemented\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yukinagae/nameko-design", "keywords": "nameko,microservices,design,framework", "license": "MIT", "maintainer": "yukinagae", "maintainer_email": "yuki.nagae1130@gmail.com", "name": "nameko-design", "package_url": "https://pypi.org/project/nameko-design/", "platform": "", "project_url": "https://pypi.org/project/nameko-design/", "project_urls": {"Homepage": "https://github.com/yukinagae/nameko-design", "Repository": "https://github.com/yukinagae/nameko-design"}, "release_url": "https://pypi.org/project/nameko-design/0.1.dev2/", "requires_dist": ["Jinja2 (>=2.10,<3.0)"], "requires_python": ">=3.6,<4.0", "summary": "Generate http files from design schema inspired by goa", "version": "0.1.dev2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nameko-design</h1>\n<p><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ef511aca42e01fe41c3ea87d8b28dca2ae385ee/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f79756b696e616761652f6e616d656b6f2d64657369676e2f6d61737465722f6c6f676f2e706e67\"></p>\n<p>Generate <a href=\"https://www.nameko.io/\" rel=\"nofollow\">Nameko</a> http files from design schema inspired by <a href=\"https://goa.design/\" rel=\"nofollow\">goa</a></p>\n<h2>Dependencies</h2>\n<ul>\n<li>Python3.6</li>\n<li><a href=\"https://github.com/sdispater/poetry\" rel=\"nofollow\">Poetry</a></li>\n</ul>\n<h2>Installation</h2>\n<pre><span class=\"nb\">cd</span> nameko-design\npoetry install\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"nb\">cd</span> nameko-design\npoetry run nameko-design nameko_design/sample.py\n</pre>\n<h2>Design</h2>\n<p>This API design schema</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">Service</span><span class=\"p\">(</span><span class=\"s1\">'http_service'</span><span class=\"p\">):</span>\n    <span class=\"n\">Title</span><span class=\"p\">(</span><span class=\"s1\">'This is a http service'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">Method</span><span class=\"p\">(</span><span class=\"s1\">'liveness'</span><span class=\"p\">):</span>\n        <span class=\"n\">Description</span><span class=\"p\">(</span><span class=\"s1\">'liveness probe'</span><span class=\"p\">)</span>\n        <span class=\"n\">Result</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n        <span class=\"n\">HTTP</span><span class=\"p\">(</span><span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"s1\">'/liveness'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">Method</span><span class=\"p\">(</span><span class=\"s1\">'readiness'</span><span class=\"p\">):</span>\n        <span class=\"n\">Description</span><span class=\"p\">(</span><span class=\"s1\">'readiness probe'</span><span class=\"p\">)</span>\n        <span class=\"n\">Result</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n        <span class=\"n\">HTTP</span><span class=\"p\">(</span><span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"s1\">'/readiness'</span><span class=\"p\">)</span>\n</pre>\n<p>will generate the below nameko file</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nameko.web.handlers</span> <span class=\"kn\">import</span> <span class=\"n\">http</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HttpService</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'http service'</span>\n\n    <span class=\"nd\">@http</span><span class=\"p\">(</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'/liveness'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">liveness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@http</span><span class=\"p\">(</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'/readiness'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">readiness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n</pre>\n<h2>TODO</h2>\n<ul>\n<li>[ ] Configure http url and port</li>\n<li>[ ] Add URL parameter and type</li>\n<li>[ ] Add payload (name, type, description, position etc)</li>\n<li>[ ] Add validation</li>\n<li>[ ] Add gRPC server</li>\n<li>[ ] Generate proto files</li>\n<li>[ ] Generate swagger json</li>\n</ul>\n<p>What I want:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">Service</span><span class=\"p\">(</span><span class=\"s1\">'example_service'</span><span class=\"p\">):</span>\n    <span class=\"n\">Title</span><span class=\"p\">(</span><span class=\"s1\">'This is an example service'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">Method</span><span class=\"p\">(</span><span class=\"s1\">'liveness'</span><span class=\"p\">):</span>\n        <span class=\"n\">Description</span><span class=\"p\">(</span><span class=\"s1\">'liveness probe'</span><span class=\"p\">)</span>\n        <span class=\"n\">Result</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n        <span class=\"n\">HTTP</span><span class=\"p\">(</span><span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"s1\">'/liveness'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">Method</span><span class=\"p\">(</span><span class=\"s1\">'add'</span><span class=\"p\">):</span>\n        <span class=\"n\">Description</span><span class=\"p\">(</span><span class=\"s1\">'a + b'</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"n\">Payload</span><span class=\"p\">():</span>                         <span class=\"c1\"># Not yet implemented</span>\n            <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"s2\">\"left operand\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Not yet implemented</span>\n            <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"s2\">\"right operand\"</span><span class=\"p\">)</span> <span class=\"c1\"># Not yet implemented</span>\n            <span class=\"n\">Required</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">)</span>                  <span class=\"c1\"># Not yet implemented</span>\n        <span class=\"n\">Result</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n        <span class=\"n\">HTTP</span><span class=\"p\">(</span><span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"s1\">'/add/</span><span class=\"si\">{a}</span><span class=\"s1\">/</span><span class=\"si\">{b}</span><span class=\"s1\">'</span><span class=\"p\">)</span>               <span class=\"c1\"># Not yet implemented</span>\n        <span class=\"n\">GRPC</span><span class=\"p\">()</span>                                  <span class=\"c1\"># Not yet implemented</span>\n</pre>\n\n          </div>"}, "last_serial": 5902375, "releases": {"0.1.dev1": [{"comment_text": "", "digests": {"md5": "31b47ae5ee8b52ecd62d05f517828ae4", "sha256": "f50bf0b7640a9d37a2393aa69809a1786b91cb8da86814b8d3d3b9c67dd8ab9a"}, "downloads": -1, "filename": "nameko_design-0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "31b47ae5ee8b52ecd62d05f517828ae4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4642, "upload_time": "2019-09-29T11:03:56", "upload_time_iso_8601": "2019-09-29T11:03:56.983021Z", "url": "https://files.pythonhosted.org/packages/71/43/a3745a4a90bb7cb7f8d3a38cb9a3045cbcc1c98723219a7821e6451005ad/nameko_design-0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44991bec5867102a91895f6e1a15f625", "sha256": "f68a549c0117cbe18e1d011548b2dea0168d7852137c9f9b6d6a0688458bd001"}, "downloads": -1, "filename": "nameko-design-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "44991bec5867102a91895f6e1a15f625", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4063, "upload_time": "2019-09-29T11:03:50", "upload_time_iso_8601": "2019-09-29T11:03:50.192448Z", "url": "https://files.pythonhosted.org/packages/43/88/3554c2ce9c4613886e834b3a578837b03390e0122b0a43b525d3b5dd34cf/nameko-design-0.1.dev1.tar.gz", "yanked": false}], "0.1.dev2": [{"comment_text": "", "digests": {"md5": "96e3b72da24c04beea46537d15e3e373", "sha256": "2843d6aa10fd18fcdc14063458b8bea33ffe6f6165cdb68f72082024f9dc4439"}, "downloads": -1, "filename": "nameko_design-0.1.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "96e3b72da24c04beea46537d15e3e373", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4652, "upload_time": "2019-09-29T11:10:23", "upload_time_iso_8601": "2019-09-29T11:10:23.182778Z", "url": "https://files.pythonhosted.org/packages/ed/74/db5197beb8d1462cc54adbb701bc4f3037ac174edba5bc658fcecf388fe2/nameko_design-0.1.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7ba06e4e8d55cb4b151d458210b425a", "sha256": "9b83ddc9eebcc2f2ca35fb9a9b0267708b1f2d3cc459b815a60d347fa34a0837"}, "downloads": -1, "filename": "nameko-design-0.1.dev2.tar.gz", "has_sig": false, "md5_digest": "e7ba06e4e8d55cb4b151d458210b425a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4092, "upload_time": "2019-09-29T11:10:18", "upload_time_iso_8601": "2019-09-29T11:10:18.506785Z", "url": "https://files.pythonhosted.org/packages/c3/87/ba59e70eabdd70507e6cb1479c98b5885ca2bb0f0fb4266931d1ff10ce42/nameko-design-0.1.dev2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96e3b72da24c04beea46537d15e3e373", "sha256": "2843d6aa10fd18fcdc14063458b8bea33ffe6f6165cdb68f72082024f9dc4439"}, "downloads": -1, "filename": "nameko_design-0.1.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "96e3b72da24c04beea46537d15e3e373", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4652, "upload_time": "2019-09-29T11:10:23", "upload_time_iso_8601": "2019-09-29T11:10:23.182778Z", "url": "https://files.pythonhosted.org/packages/ed/74/db5197beb8d1462cc54adbb701bc4f3037ac174edba5bc658fcecf388fe2/nameko_design-0.1.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7ba06e4e8d55cb4b151d458210b425a", "sha256": "9b83ddc9eebcc2f2ca35fb9a9b0267708b1f2d3cc459b815a60d347fa34a0837"}, "downloads": -1, "filename": "nameko-design-0.1.dev2.tar.gz", "has_sig": false, "md5_digest": "e7ba06e4e8d55cb4b151d458210b425a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4092, "upload_time": "2019-09-29T11:10:18", "upload_time_iso_8601": "2019-09-29T11:10:18.506785Z", "url": "https://files.pythonhosted.org/packages/c3/87/ba59e70eabdd70507e6cb1479c98b5885ca2bb0f0fb4266931d1ff10ce42/nameko-design-0.1.dev2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:46 2020"}