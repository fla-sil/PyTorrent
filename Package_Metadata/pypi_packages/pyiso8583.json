{"info": {"author": "Konstantin Novichikhin", "author_email": "konstantin.novichikhin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "iso8583 - a Python package for parsing ISO8583 data\n----------------------------------------------------\n\n|pypi| |docs| |coverage|\n\n`iso8583` package serializes and deserializes ISO8583 data between a ``bytes`` or\n``bytearray`` instance containing ISO8583 data and a Python ``dict``.\n\n`iso8583` package supports custom `specifications <https://pyiso8583.readthedocs.io/en/latest/specifications.html>`_\nthat can define\n\n    * Field length and data encoding, such as BCD, ASCII, EBCDIC, etc.\n    * Field type, such as fixed, LLVAR, LLLVAR, etc.\n    * Maximum length\n    * Optional field description\n\nMultiple specifications can co-exist to support ISO8583 messages for POS, ATM,\nfile actions, and so on. Simply define a new specification dictionary. `iso8583`\npackage includes a starter specification in `iso8583.specs` module that can be\nused as a base to create own custom/proprietary specifications.\n\nAdditional information is available on `RTD <http://pyiso8583.readthedocs.org>`_.\n\nInstall::\n\n    pip install pyiso8583\n\nEncoding & Decoding\n-------------------\n\nUse `iso8583.decode <https://pyiso8583.readthedocs.io/en/latest/functions.html#iso8583.decode>`_\nto decode raw ISO8583 message.\nIt returns two dictionaries: one with decoded data and one with encoded data.\n\n.. code-block:: python\n\n    >>> import pprint\n    >>> import iso8583\n    >>> from iso8583.specs import default_ascii as spec\n    >>> encoded_raw = b'02004000000000000000101234567890'\n    >>> decoded, encoded = iso8583.decode(encoded_raw, spec)\n    >>> pprint.pp(decoded)\n    {'t': '0200', 'p': '4000000000000000', '2': '1234567890'}\n    >>> pprint.pp(encoded)\n    {'t': {'len': b'', 'data': b'0200'},\n     'p': {'len': b'', 'data': b'4000000000000000'},\n     '2': {'len': b'10', 'data': b'1234567890'}}\n\nModify the decoded message to send a response back.\nChange message type from '0200' to '0210'.\nRemove field 2 (PAN). And add field 39 (Response Code).\n\n.. code-block:: python\n\n    >>> decoded['t'] = '0210'\n    >>> decoded.pop('2', None)\n    '1234567890'\n    >>> decoded['39'] = '05'\n\nUse `iso8583.encode <https://pyiso8583.readthedocs.io/en/latest/functions.html#iso8583.encode>`_\nto encode updated ISO8583 message.\nIt returns a raw ISO8583 message and a dictionary with encoded data.\n\n.. code-block:: python\n\n    >>> encoded_raw, encoded = iso8583.encode(decoded, spec)\n    >>> encoded_raw\n    bytearray(b'0210000000000200000005')\n    >>> pprint.pp(decoded)\n    {'t': '0210', 'p': '0000000002000000', '39': '05'}\n    >>> pprint.pp(encoded)\n    {'t': {'len': b'', 'data': b'0210'},\n     'p': {'len': b'', 'data': b'0000000002000000'},\n     '39': {'len': b'', 'data': b'05'}}\n\nPretty Print Messages\n---------------------\n\nUse `iso8583.pp <https://pyiso8583.readthedocs.io/en/latest/functions.html#iso8583.pp>`_\nto pretty print ISO8583 message.\n\n.. code-block:: python\n\n    >>> import iso8583\n    >>> from iso8583.specs import default_ascii as spec\n    >>> encoded_raw = b'02004000000000000000101234567890'\n    >>> decoded, encoded = iso8583.decode(encoded_raw, spec)\n    >>> iso8583.pp(decoded, spec)\n    t   Message Type                  : '0200'\n    p   Bitmap, Primary               : '4000000000000000'\n    2   Primary Account Number (PAN)  : '1234567890'\n    >>> iso8583.pp(encoded, spec)\n    t   Message Type                  : b'0200'\n    p   Bitmap, Primary               : b'4000000000000000'\n    2   Primary Account Number (PAN)  : b'10' b'1234567890'\n\nContribute\n----------\n\n`iso8583` package is hosted on `GitHub <https://github.com/manoutoftime/pyiso8583>`_.\n\nFeel free to fork and send contributions over.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pyiso8583.svg\n    :alt: PyPI\n    :target:  https://pypi.org/project/pyiso8583/\n\n.. |docs| image:: https://readthedocs.org/projects/pyiso8583/badge/?version=latest\n    :alt: Documentation Status\n    :target: https://pyiso8583.readthedocs.io/en/latest/?badge=latest\n\n.. |coverage| image:: https://codecov.io/gh/manoutoftime/pyiso8583/branch/master/graph/badge.svg\n    :alt: Test coverage\n    :target: https://codecov.io/gh/manoutoftime/pyiso8583\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/manoutoftime/pyiso8583", "keywords": "iso8583 8583 banking protocol library", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyiso8583", "package_url": "https://pypi.org/project/pyiso8583/", "platform": "", "project_url": "https://pypi.org/project/pyiso8583/", "project_urls": {"Homepage": "https://github.com/manoutoftime/pyiso8583"}, "release_url": "https://pypi.org/project/pyiso8583/2.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A serializer and deserializer of ISO8583 data.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"iso8583-a-python-package-for-parsing-iso8583-data\">\n<h2>iso8583 - a Python package for parsing ISO8583 data</h2>\n<p><a href=\"https://pypi.org/project/pyiso8583/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cff0a4e79f61f13d9e4bb69e11083c2382812c2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707969736f383538332e737667\"></a> <a href=\"https://pyiso8583.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18936737c4ef8ffb73cd489dfd1970e10e7d1c76/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707969736f383538332f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://codecov.io/gh/manoutoftime/pyiso8583\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/450313c36a57f317796140cf68746f15797fb969/68747470733a2f2f636f6465636f762e696f2f67682f6d616e6f75746f6674696d652f707969736f383538332f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p><cite>iso8583</cite> package serializes and deserializes ISO8583 data between a <tt>bytes</tt> or\n<tt>bytearray</tt> instance containing ISO8583 data and a Python <tt>dict</tt>.</p>\n<p><cite>iso8583</cite> package supports custom <a href=\"https://pyiso8583.readthedocs.io/en/latest/specifications.html\" rel=\"nofollow\">specifications</a>\nthat can define</p>\n<blockquote>\n<ul>\n<li>Field length and data encoding, such as BCD, ASCII, EBCDIC, etc.</li>\n<li>Field type, such as fixed, LLVAR, LLLVAR, etc.</li>\n<li>Maximum length</li>\n<li>Optional field description</li>\n</ul>\n</blockquote>\n<p>Multiple specifications can co-exist to support ISO8583 messages for POS, ATM,\nfile actions, and so on. Simply define a new specification dictionary. <cite>iso8583</cite>\npackage includes a starter specification in <cite>iso8583.specs</cite> module that can be\nused as a base to create own custom/proprietary specifications.</p>\n<p>Additional information is available on <a href=\"http://pyiso8583.readthedocs.org\" rel=\"nofollow\">RTD</a>.</p>\n<p>Install:</p>\n<pre>pip install pyiso8583\n</pre>\n</div>\n<div id=\"encoding-decoding\">\n<h2>Encoding &amp; Decoding</h2>\n<p>Use <a href=\"https://pyiso8583.readthedocs.io/en/latest/functions.html#iso8583.decode\" rel=\"nofollow\">iso8583.decode</a>\nto decode raw ISO8583 message.\nIt returns two dictionaries: one with decoded data and one with encoded data.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pprint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">iso8583</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">iso8583.specs</span> <span class=\"kn\">import</span> <span class=\"n\">default_ascii</span> <span class=\"k\">as</span> <span class=\"n\">spec</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encoded_raw</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'02004000000000000000101234567890'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decoded</span><span class=\"p\">,</span> <span class=\"n\">encoded</span> <span class=\"o\">=</span> <span class=\"n\">iso8583</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">encoded_raw</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"n\">decoded</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'t'</span><span class=\"p\">:</span> <span class=\"s1\">'0200'</span><span class=\"p\">,</span> <span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"s1\">'4000000000000000'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">:</span> <span class=\"s1\">'1234567890'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"n\">encoded</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'t'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'len'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'0200'</span><span class=\"p\">},</span>\n <span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'len'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'4000000000000000'</span><span class=\"p\">},</span>\n <span class=\"s1\">'2'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'len'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'10'</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'1234567890'</span><span class=\"p\">}}</span>\n</pre>\n<p>Modify the decoded message to send a response back.\nChange message type from \u20180200\u2019 to \u20180210\u2019.\nRemove field 2 (PAN). And add field 39 (Response Code).</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decoded</span><span class=\"p\">[</span><span class=\"s1\">'t'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'0210'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decoded</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"s1\">'1234567890'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decoded</span><span class=\"p\">[</span><span class=\"s1\">'39'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'05'</span>\n</pre>\n<p>Use <a href=\"https://pyiso8583.readthedocs.io/en/latest/functions.html#iso8583.encode\" rel=\"nofollow\">iso8583.encode</a>\nto encode updated ISO8583 message.\nIt returns a raw ISO8583 message and a dictionary with encoded data.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encoded_raw</span><span class=\"p\">,</span> <span class=\"n\">encoded</span> <span class=\"o\">=</span> <span class=\"n\">iso8583</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">decoded</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encoded_raw</span>\n<span class=\"nb\">bytearray</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'0210000000000200000005'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"n\">decoded</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'t'</span><span class=\"p\">:</span> <span class=\"s1\">'0210'</span><span class=\"p\">,</span> <span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"s1\">'0000000002000000'</span><span class=\"p\">,</span> <span class=\"s1\">'39'</span><span class=\"p\">:</span> <span class=\"s1\">'05'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"n\">encoded</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'t'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'len'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'0210'</span><span class=\"p\">},</span>\n <span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'len'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'0000000002000000'</span><span class=\"p\">},</span>\n <span class=\"s1\">'39'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'len'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'05'</span><span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"pretty-print-messages\">\n<h2>Pretty Print Messages</h2>\n<p>Use <a href=\"https://pyiso8583.readthedocs.io/en/latest/functions.html#iso8583.pp\" rel=\"nofollow\">iso8583.pp</a>\nto pretty print ISO8583 message.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">iso8583</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">iso8583.specs</span> <span class=\"kn\">import</span> <span class=\"n\">default_ascii</span> <span class=\"k\">as</span> <span class=\"n\">spec</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encoded_raw</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'02004000000000000000101234567890'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decoded</span><span class=\"p\">,</span> <span class=\"n\">encoded</span> <span class=\"o\">=</span> <span class=\"n\">iso8583</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">encoded_raw</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">iso8583</span><span class=\"o\">.</span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"n\">decoded</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"n\">t</span>   <span class=\"n\">Message</span> <span class=\"n\">Type</span>                  <span class=\"p\">:</span> <span class=\"s1\">'0200'</span>\n<span class=\"n\">p</span>   <span class=\"n\">Bitmap</span><span class=\"p\">,</span> <span class=\"n\">Primary</span>               <span class=\"p\">:</span> <span class=\"s1\">'4000000000000000'</span>\n<span class=\"mi\">2</span>   <span class=\"n\">Primary</span> <span class=\"n\">Account</span> <span class=\"n\">Number</span> <span class=\"p\">(</span><span class=\"n\">PAN</span><span class=\"p\">)</span>  <span class=\"p\">:</span> <span class=\"s1\">'1234567890'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">iso8583</span><span class=\"o\">.</span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"n\">encoded</span><span class=\"p\">,</span> <span class=\"n\">spec</span><span class=\"p\">)</span>\n<span class=\"n\">t</span>   <span class=\"n\">Message</span> <span class=\"n\">Type</span>                  <span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'0200'</span>\n<span class=\"n\">p</span>   <span class=\"n\">Bitmap</span><span class=\"p\">,</span> <span class=\"n\">Primary</span>               <span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'4000000000000000'</span>\n<span class=\"mi\">2</span>   <span class=\"n\">Primary</span> <span class=\"n\">Account</span> <span class=\"n\">Number</span> <span class=\"p\">(</span><span class=\"n\">PAN</span><span class=\"p\">)</span>  <span class=\"p\">:</span> <span class=\"sa\">b</span><span class=\"s1\">'10'</span> <span class=\"sa\">b</span><span class=\"s1\">'1234567890'</span>\n</pre>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p><cite>iso8583</cite> package is hosted on <a href=\"https://github.com/manoutoftime/pyiso8583\" rel=\"nofollow\">GitHub</a>.</p>\n<p>Feel free to fork and send contributions over.</p>\n</div>\n\n          </div>"}, "last_serial": 6679487, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "778d4aa45aecf41b21f5c6be1757f2ff", "sha256": "1c2c6568a36d183bb3f845f2b4dbabdc93ce9787f2aecddfc7aa94bed8d7a79c"}, "downloads": -1, "filename": "pyiso8583-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "778d4aa45aecf41b21f5c6be1757f2ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13502, "upload_time": "2019-11-12T00:05:35", "upload_time_iso_8601": "2019-11-12T00:05:35.404978Z", "url": "https://files.pythonhosted.org/packages/32/28/ad64c7210c1c1d1fa2d0d8c1e5254bc3f017b88d24138cded8de2b51fa3b/pyiso8583-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7a5e949fd1b9abdb0fb9b0d722292b0", "sha256": "2fdd2edbb796350c11c133099fd88947bca93b11ad3249d7f90a46d276fdeb23"}, "downloads": -1, "filename": "pyiso8583-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f7a5e949fd1b9abdb0fb9b0d722292b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12182, "upload_time": "2019-11-12T00:05:37", "upload_time_iso_8601": "2019-11-12T00:05:37.050015Z", "url": "https://files.pythonhosted.org/packages/99/9e/342a36e0334f398cb6beb8f92b42f10406a476799699b3e9eaab6371a409/pyiso8583-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "1f155ba9bba49cc11f5a37607fd49a48", "sha256": "eff861be70b7b7315ec465dc3327eefcb15908a31a7f11e4737be236b1eb40d8"}, "downloads": -1, "filename": "pyiso8583-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1f155ba9bba49cc11f5a37607fd49a48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15736, "upload_time": "2020-01-11T23:17:50", "upload_time_iso_8601": "2020-01-11T23:17:50.127509Z", "url": "https://files.pythonhosted.org/packages/aa/24/dc82c74129bf326e039c266080982ab0778c4a0d3c05580d335df16581d0/pyiso8583-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "448001c2cda6f71cc0ca5bc7b5ed61a7", "sha256": "ae8ae0cb27d81f22423fee58e1fc08e0ab88021cc7a8f0e52cae24badc540c7c"}, "downloads": -1, "filename": "pyiso8583-1.0.2.tar.gz", "has_sig": false, "md5_digest": "448001c2cda6f71cc0ca5bc7b5ed61a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 39995, "upload_time": "2020-01-11T23:17:51", "upload_time_iso_8601": "2020-01-11T23:17:51.850417Z", "url": "https://files.pythonhosted.org/packages/26/e2/e4697225bd22fb9f1747347985399a436bce477719d6e6d4c91f023e8862/pyiso8583-1.0.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "f335ae8d12d021dceb7d58137ccf6be0", "sha256": "18c90699403fc7d0c55cc8f352d43a98c256b880451ce6640cdce3463d4d0e19"}, "downloads": -1, "filename": "pyiso8583-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f335ae8d12d021dceb7d58137ccf6be0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16496, "upload_time": "2020-02-22T04:35:08", "upload_time_iso_8601": "2020-02-22T04:35:08.522068Z", "url": "https://files.pythonhosted.org/packages/a8/dc/f13270a9f844610b929162aa1b66fffab71ba2bfd8962837caaa63f5f8f1/pyiso8583-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00d262aa9124df8c4044b70482df3cf8", "sha256": "0de0034795af731010b3c0f9e9ccd7dfa95a87b2f0630a2769614498bf49723c"}, "downloads": -1, "filename": "pyiso8583-2.0.0.tar.gz", "has_sig": false, "md5_digest": "00d262aa9124df8c4044b70482df3cf8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26285, "upload_time": "2020-02-22T04:35:10", "upload_time_iso_8601": "2020-02-22T04:35:10.118744Z", "url": "https://files.pythonhosted.org/packages/1f/6a/693f06a85749a45bca91814e89aaeb19d7f731f6bdc0c87136e4c7ac6b0d/pyiso8583-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f335ae8d12d021dceb7d58137ccf6be0", "sha256": "18c90699403fc7d0c55cc8f352d43a98c256b880451ce6640cdce3463d4d0e19"}, "downloads": -1, "filename": "pyiso8583-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f335ae8d12d021dceb7d58137ccf6be0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16496, "upload_time": "2020-02-22T04:35:08", "upload_time_iso_8601": "2020-02-22T04:35:08.522068Z", "url": "https://files.pythonhosted.org/packages/a8/dc/f13270a9f844610b929162aa1b66fffab71ba2bfd8962837caaa63f5f8f1/pyiso8583-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00d262aa9124df8c4044b70482df3cf8", "sha256": "0de0034795af731010b3c0f9e9ccd7dfa95a87b2f0630a2769614498bf49723c"}, "downloads": -1, "filename": "pyiso8583-2.0.0.tar.gz", "has_sig": false, "md5_digest": "00d262aa9124df8c4044b70482df3cf8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26285, "upload_time": "2020-02-22T04:35:10", "upload_time_iso_8601": "2020-02-22T04:35:10.118744Z", "url": "https://files.pythonhosted.org/packages/1f/6a/693f06a85749a45bca91814e89aaeb19d7f731f6bdc0c87136e4c7ac6b0d/pyiso8583-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:52 2020"}