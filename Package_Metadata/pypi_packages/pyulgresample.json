{"info": {"author": "Dennis Mannhart", "author_email": "dennis@yuneecresearch.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# pyulgresample\nPackage that processes ulog-data from [pyulog](https://github.com/PX4/pyulog). It converts ulog-data into pandas dataframe through resampling and provides convenient functions to add and extract additional information from the ulog-data.\nTo convert a `.ulg` file into `ulog`, please follow the [pyulog](https://github.com/PX4/pyulog) instruction.\n\n## modules\n\n### ulogdataframe\n`ulogdataframe` contains the following classes:\n\n- TopicMsgs\n- DfUlg\n\n### TopicMsgs\nThis class is a convenient class to specify a topic and messages of interest.\n\n### DfUlg\nThis class contains a ulog-structure, pandas dataframe-structure and list of topics as class-members. It also contains a factory-method for converting a .ulg-file into class-members.\n\n### ulogconv\nThis module contains a few helper-functions for converting a .ulg-file into pandas-dataframe. It is mainly used for DfUlg.\n\n### mathpandas\nContains time-series functions.\n\n### loginfo\nFunctions that provide info about the ulg-file.\n\n\nEach dataframe column represents a message-field. For instance, the `thrust`-field of the topic [vehicle_local_position_setpoint](https://github.com/PX4/Firmware/blob/master/msg/vehicle_local_position_setpoint.msg) would be named as follow:\n\n> T_vehicle_local_position_setpoint_0__F_thrust\n\nif thrust is a scalar or\n\n> T_vehicle_local_position_setpoint_0__F_thrust_2\n\nif thrust is an array, where the 2 represents the index of the array.\n\nThe `T` stands for topic, which indicates the beginning of the topic. In this example, the topcic name is\n`vehicle_local_position_setpoint`. The topic name is followed by a number, which indicates the topic instance. If there is only one instance of a specific topic, then this number will be `0`. The instance number is followed by two underlines and a capital letter `F`, which stands for field. In the example above, the field in question is `thrust`.\n\n## installation\nTo prevent any conflict with the system python version, it is suggested to use a virtual enrionment with python version 3.6 and higher. Otherwise, python 3.6 and higher must be the python system version.\nIf you don't have 3.6 installed on your machinge, you can follow this [tutorial](http://ubuntuhandbook.org/index.php/2017/07/install-python-3-6-1-in-ubuntu-16-04-lts/).\n\n\n### virtualenvwrapper\n\nFirst install virtualenv:\n```bash\nsudo apt install virtualenv\n```\n\nInstall virtualenvrapper: this will install `virtualenvwrapper.sh` in `~/.local/bin`\n```bash\npip install virtualenvwrapper\n```\n\nCreate a virtual environement directory\n```bash\nmkdir ~/.virtualenvs\n```\n\nAdd virtual envrionment working-folder to bashrc and source virtualenvwrapper:\n```bash\nexport WORKON_HOME=$HOME/.virtualenvs\nsource /usr/local/bin/virtualenvwrapper.sh\n```\n\nOpen new terminal or source bashrc:\n```bash\nsource ~/.bashrc\n```\n\nCreate a virtual environment with python version 3 and no site packages included (python3 must be installed)\n```bash\nmkvirtualenv --python=python3 --no-site-packages [name-of-new-env]\n```\n\nYou now created a new virtual environment with name [name-of-new-env].\n\nTo enter [name-of-new-env]:\n```bash\nworkon [name-of-new-env]\n```\n\nTo exit [name-of-new-env]:\n```bash\ndeactivate\n```\n\n### build setup\n\nThe build-system in use is [flit](https://flit.readthedocs.io/en/latest/)\n```bash\npip install flit\n```\n\nNow we can build the projct:\n```\nflit install -s\n```\nThe `-s` stands for symlink which gives the option to test changes without reinstalling the package.\n\n\nThe projcet uses [black](https://github.com/ambv/black) for code-formatting and [flake8](https://pypi.org/project/flake8/) for style-guide enforcement. [pre-commit-framework](https://github.com/pre-commit/pre-commit) is used to ensure that each commit first gets adjusted through `blake` and then checked by `flake8`. [PEP257](https://github.com/FalconSocial/pre-commit-mirrors-pep257) docstring style checker is used as well. We need to add `pre-commit` to our\nsystem:\n```bash\npre-commit install\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/YUNEEC/pyulgresample", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyulgresample", "package_url": "https://pypi.org/project/pyulgresample/", "platform": "", "project_url": "https://pypi.org/project/pyulgresample/", "project_urls": {"Homepage": "https://github.com/YUNEEC/pyulgresample"}, "release_url": "https://pypi.org/project/pyulgresample/0.0.5/", "requires_dist": ["numpy (>= 1.15.3)", "pandas (>= 0.23.4)", "pyulog (>= 0.6.0)", "utm (>= 0.4.2)", "transforms3d", "flake8; extra == \"requires\"", "pre-commit; extra == \"requires\"", "pytest; extra == \"test\""], "requires_python": ">=3.6", "summary": "pyulgresample.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyulgresample</h1>\n<p>Package that processes ulog-data from <a href=\"https://github.com/PX4/pyulog\" rel=\"nofollow\">pyulog</a>. It converts ulog-data into pandas dataframe through resampling and provides convenient functions to add and extract additional information from the ulog-data.\nTo convert a <code>.ulg</code> file into <code>ulog</code>, please follow the <a href=\"https://github.com/PX4/pyulog\" rel=\"nofollow\">pyulog</a> instruction.</p>\n<h2>modules</h2>\n<h3>ulogdataframe</h3>\n<p><code>ulogdataframe</code> contains the following classes:</p>\n<ul>\n<li>TopicMsgs</li>\n<li>DfUlg</li>\n</ul>\n<h3>TopicMsgs</h3>\n<p>This class is a convenient class to specify a topic and messages of interest.</p>\n<h3>DfUlg</h3>\n<p>This class contains a ulog-structure, pandas dataframe-structure and list of topics as class-members. It also contains a factory-method for converting a .ulg-file into class-members.</p>\n<h3>ulogconv</h3>\n<p>This module contains a few helper-functions for converting a .ulg-file into pandas-dataframe. It is mainly used for DfUlg.</p>\n<h3>mathpandas</h3>\n<p>Contains time-series functions.</p>\n<h3>loginfo</h3>\n<p>Functions that provide info about the ulg-file.</p>\n<p>Each dataframe column represents a message-field. For instance, the <code>thrust</code>-field of the topic <a href=\"https://github.com/PX4/Firmware/blob/master/msg/vehicle_local_position_setpoint.msg\" rel=\"nofollow\">vehicle_local_position_setpoint</a> would be named as follow:</p>\n<blockquote>\n<p>T_vehicle_local_position_setpoint_0__F_thrust</p>\n</blockquote>\n<p>if thrust is a scalar or</p>\n<blockquote>\n<p>T_vehicle_local_position_setpoint_0__F_thrust_2</p>\n</blockquote>\n<p>if thrust is an array, where the 2 represents the index of the array.</p>\n<p>The <code>T</code> stands for topic, which indicates the beginning of the topic. In this example, the topcic name is\n<code>vehicle_local_position_setpoint</code>. The topic name is followed by a number, which indicates the topic instance. If there is only one instance of a specific topic, then this number will be <code>0</code>. The instance number is followed by two underlines and a capital letter <code>F</code>, which stands for field. In the example above, the field in question is <code>thrust</code>.</p>\n<h2>installation</h2>\n<p>To prevent any conflict with the system python version, it is suggested to use a virtual enrionment with python version 3.6 and higher. Otherwise, python 3.6 and higher must be the python system version.\nIf you don't have 3.6 installed on your machinge, you can follow this <a href=\"http://ubuntuhandbook.org/index.php/2017/07/install-python-3-6-1-in-ubuntu-16-04-lts/\" rel=\"nofollow\">tutorial</a>.</p>\n<h3>virtualenvwrapper</h3>\n<p>First install virtualenv:</p>\n<pre>sudo apt install virtualenv\n</pre>\n<p>Install virtualenvrapper: this will install <code>virtualenvwrapper.sh</code> in <code>~/.local/bin</code></p>\n<pre>pip install virtualenvwrapper\n</pre>\n<p>Create a virtual environement directory</p>\n<pre>mkdir ~/.virtualenvs\n</pre>\n<p>Add virtual envrionment working-folder to bashrc and source virtualenvwrapper:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">WORKON_HOME</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>/.virtualenvs\n<span class=\"nb\">source</span> /usr/local/bin/virtualenvwrapper.sh\n</pre>\n<p>Open new terminal or source bashrc:</p>\n<pre><span class=\"nb\">source</span> ~/.bashrc\n</pre>\n<p>Create a virtual environment with python version 3 and no site packages included (python3 must be installed)</p>\n<pre>mkvirtualenv --python<span class=\"o\">=</span>python3 --no-site-packages <span class=\"o\">[</span>name-of-new-env<span class=\"o\">]</span>\n</pre>\n<p>You now created a new virtual environment with name [name-of-new-env].</p>\n<p>To enter [name-of-new-env]:</p>\n<pre>workon <span class=\"o\">[</span>name-of-new-env<span class=\"o\">]</span>\n</pre>\n<p>To exit [name-of-new-env]:</p>\n<pre>deactivate\n</pre>\n<h3>build setup</h3>\n<p>The build-system in use is <a href=\"https://flit.readthedocs.io/en/latest/\" rel=\"nofollow\">flit</a></p>\n<pre>pip install flit\n</pre>\n<p>Now we can build the projct:</p>\n<pre><code>flit install -s\n</code></pre>\n<p>The <code>-s</code> stands for symlink which gives the option to test changes without reinstalling the package.</p>\n<p>The projcet uses <a href=\"https://github.com/ambv/black\" rel=\"nofollow\">black</a> for code-formatting and <a href=\"https://pypi.org/project/flake8/\" rel=\"nofollow\">flake8</a> for style-guide enforcement. <a href=\"https://github.com/pre-commit/pre-commit\" rel=\"nofollow\">pre-commit-framework</a> is used to ensure that each commit first gets adjusted through <code>blake</code> and then checked by <code>flake8</code>. <a href=\"https://github.com/FalconSocial/pre-commit-mirrors-pep257\" rel=\"nofollow\">PEP257</a> docstring style checker is used as well. We need to add <code>pre-commit</code> to our\nsystem:</p>\n<pre>pre-commit install\n</pre>\n\n          </div>"}, "last_serial": 5394981, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e2caa14fda29dc1b06e68aa98ba93422", "sha256": "12fb65e29cebcee8639175ec85f651e8c733ce8debc87b34ac6a5f72ac9608e8"}, "downloads": -1, "filename": "pyulgresample-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e2caa14fda29dc1b06e68aa98ba93422", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23466, "upload_time": "2019-05-22T09:34:55", "upload_time_iso_8601": "2019-05-22T09:34:55.039272Z", "url": "https://files.pythonhosted.org/packages/da/c5/7c436d7804168223bfe5ec49100b13f9fb43eb7f1bf503dc4cb372ceb364/pyulgresample-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dffc926168cd03b892cba79587cd5609", "sha256": "8b52910967e99bce437d644314e2b5436ede733c88393a73adb0659d3e0c2100"}, "downloads": -1, "filename": "pyulgresample-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dffc926168cd03b892cba79587cd5609", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14079539, "upload_time": "2019-05-22T09:35:15", "upload_time_iso_8601": "2019-05-22T09:35:15.568776Z", "url": "https://files.pythonhosted.org/packages/5f/9d/55bf90816bdea131922eaf81bce77b4d80cdaa2e934573d060eaf32cdf23/pyulgresample-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "146dc1c4eeb9e20b65e0ec2e6c93b2fb", "sha256": "2604de535fa2baba18ea72e60fb416e6fc73725040c71c56bfe8c4198fa304f8"}, "downloads": -1, "filename": "pyulgresample-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "146dc1c4eeb9e20b65e0ec2e6c93b2fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24531, "upload_time": "2019-05-27T07:36:33", "upload_time_iso_8601": "2019-05-27T07:36:33.405518Z", "url": "https://files.pythonhosted.org/packages/35/64/3cf883f1bdd4dffe5b62741cb60a56c846497f7813342991b688ae647bf7/pyulgresample-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45107a8de1b2379e2650328193f93a42", "sha256": "dcadc91683d16ef18ce461730c0baf580089a9187b1af1badaf5650833ffe305"}, "downloads": -1, "filename": "pyulgresample-0.0.2.tar.gz", "has_sig": false, "md5_digest": "45107a8de1b2379e2650328193f93a42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14079896, "upload_time": "2019-05-27T07:36:48", "upload_time_iso_8601": "2019-05-27T07:36:48.550553Z", "url": "https://files.pythonhosted.org/packages/43/3b/59cff5e98c7978fed572fadf183a7fcb057d38c63aed22e125de4387235d/pyulgresample-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2129192a843f542f65c4b25cc37b0a08", "sha256": "67a134cbf624b1de02550aca6837778ce44bb28e2bb54dd191b9cd803c8e1564"}, "downloads": -1, "filename": "pyulgresample-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2129192a843f542f65c4b25cc37b0a08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24409, "upload_time": "2019-05-28T17:05:00", "upload_time_iso_8601": "2019-05-28T17:05:00.041574Z", "url": "https://files.pythonhosted.org/packages/cd/7a/915d369b991e853ec30cfb39535abfe0ce65064abf89e0da63c41159ef6f/pyulgresample-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fdb20177057cc3ffa75231838129fa2", "sha256": "b197c8ae1d5e633dbafc1639ea5f046fb48d30ff7701fb8e340e65c7d5a8a3f0"}, "downloads": -1, "filename": "pyulgresample-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6fdb20177057cc3ffa75231838129fa2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14080084, "upload_time": "2019-05-28T17:05:11", "upload_time_iso_8601": "2019-05-28T17:05:11.203675Z", "url": "https://files.pythonhosted.org/packages/ee/e0/5bf0ff11921df3b7a6a1ec09363e3cd5d41ba6beb83deedd17faff56c5ed/pyulgresample-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5ba90b485ffaf9b3c38d8ed46ee2fac0", "sha256": "f9a820e6e8a3047c08df8600635d743b7ec5e880920f44d285b96463e33284f8"}, "downloads": -1, "filename": "pyulgresample-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5ba90b485ffaf9b3c38d8ed46ee2fac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24416, "upload_time": "2019-05-29T07:41:00", "upload_time_iso_8601": "2019-05-29T07:41:00.714779Z", "url": "https://files.pythonhosted.org/packages/33/16/f580457009fe9a729069aabd5c35531a630230c9bb38232b6073e455fda4/pyulgresample-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0c3987360dfe772f6e472d08e2776b", "sha256": "7fed7bc24f7f00ab15be234664afc1e7c3963cba3c0f7595473989d94ae6828c"}, "downloads": -1, "filename": "pyulgresample-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7d0c3987360dfe772f6e472d08e2776b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14080081, "upload_time": "2019-05-29T07:41:14", "upload_time_iso_8601": "2019-05-29T07:41:14.620602Z", "url": "https://files.pythonhosted.org/packages/e2/d7/68d5b4541d1ef8b046ab48888ea5c30820f3c4b6c06a55a977c3d9e71fe2/pyulgresample-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "05aac3f9516f724e276fa0cd1bdca0a3", "sha256": "da70859b0b3313d51fb2fbe778c1379dc0bb2a8d30efa9de941b93d69f5e8816"}, "downloads": -1, "filename": "pyulgresample-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "05aac3f9516f724e276fa0cd1bdca0a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24415, "upload_time": "2019-06-13T09:11:14", "upload_time_iso_8601": "2019-06-13T09:11:14.289621Z", "url": "https://files.pythonhosted.org/packages/1f/e3/7860a8a7eb2843d0ebc58745a3694d6e32c554a617798a605db1ba085a75/pyulgresample-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6104f8b84c4e7813565cfb37b46020d", "sha256": "37bd6aef8122f7e910841bca5bbb770a850fd999ea8a6b96e66fa33f18a819b2"}, "downloads": -1, "filename": "pyulgresample-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f6104f8b84c4e7813565cfb37b46020d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14080093, "upload_time": "2019-06-13T09:11:20", "upload_time_iso_8601": "2019-06-13T09:11:20.427588Z", "url": "https://files.pythonhosted.org/packages/1e/60/37edc3e65a29904131c948e0a93137a45443cc862b492a76882c51e75610/pyulgresample-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05aac3f9516f724e276fa0cd1bdca0a3", "sha256": "da70859b0b3313d51fb2fbe778c1379dc0bb2a8d30efa9de941b93d69f5e8816"}, "downloads": -1, "filename": "pyulgresample-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "05aac3f9516f724e276fa0cd1bdca0a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24415, "upload_time": "2019-06-13T09:11:14", "upload_time_iso_8601": "2019-06-13T09:11:14.289621Z", "url": "https://files.pythonhosted.org/packages/1f/e3/7860a8a7eb2843d0ebc58745a3694d6e32c554a617798a605db1ba085a75/pyulgresample-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6104f8b84c4e7813565cfb37b46020d", "sha256": "37bd6aef8122f7e910841bca5bbb770a850fd999ea8a6b96e66fa33f18a819b2"}, "downloads": -1, "filename": "pyulgresample-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f6104f8b84c4e7813565cfb37b46020d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14080093, "upload_time": "2019-06-13T09:11:20", "upload_time_iso_8601": "2019-06-13T09:11:20.427588Z", "url": "https://files.pythonhosted.org/packages/1e/60/37edc3e65a29904131c948e0a93137a45443cc862b492a76882c51e75610/pyulgresample-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:37 2020"}