{"info": {"author": "Benjamin Lee and Alex Mijalis", "author_email": "benjamindlee@me.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Healthcare Industry", "Intended Audience :: Manufacturing", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Chemistry"], "description": "<h1 align =\"center\">\n<img src='https://github.com/MechWolf/MechWolf/raw/master/logo/head10x.png' width=\"150\">\n<br>\nMechWolf\n</h1>\n\n<div align=\"center\">\n<a href=\"https://www.python.org/downloads/\"><img src=\"https://img.shields.io/badge/python-3.7-blue.svg\" alt=\"Python version\" /></a>\n<a href=\"https://gitter.im/mechwolf-project\"><img src=\"https://img.shields.io/badge/chat-on%20gitter-brightgreen.svg\" alt=\"Gitter chat\" /></a>\n<a href=\"https://gitter.im/mechwolf-project\"><img src=\"https://img.shields.io/badge/DOI-to%20be%20determined-brightgreen.svg\" alt=\"DOI\" /></a>\n<a href=\"https://github.com/MechWolf/MechWolf/blob/master/LICENSE\"><img src=\"https://img.shields.io/badge/license-GPLv3-blue.svg\" alt=\"GPLv3 license\" /></a>\n<a href=\"https://github.com/mechwolf/mechwolf/actions\"></a><img src=\"https://img.shields.io/travis/MechWolf/MechWolf.svg\" alt=\"CI status\"/></a>\n<a href=\"https://mechwolf.netlify.com\"><img src=\"https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fdeveloper.oswaldlabs.com%2Fnetlify-status%2F39a2d45e-f621-4e8d-afed-3ae2ee4b9364\" alt=\"Netlify\"/></a>\n<a href=\"https://github.com/ambv/black\"><img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n<a href=\"https://mybinder.org/v2/gh/MechWolf/MechWolf/master\"><img src=\"https://mybinder.org/badge_logo.svg\"></img></a>\n</div>\n<br>\n\nMechWolf is a Python framework for automating continuous flow processes.\nIt was developed as a collaboration between computer scientists, chemists, and complete novices to be used by anyone wanting to do better, faster, more reproducible flow-based science.\nFeatures include:\n\n- Natural language description, analysis, and visualization of continuous flow networks\n- Automated execution of protocols\n- Full user extensibility\n- Smart default settings, designed by scientists for scientists\n- Extensive checking to prevent potentially costly and dangerous errors before runtime\n- Natural language parsing of times and quantities\n- Thorough documentation and tutorials\n\n## Installation\n\nIt's as easy as:\n\n```bash\n$ pip install mechwolf\n```\n\nOr, to get the latest (but not necessarily stable) development branch:\n\n```bash\n$ pip install git+https://github.com/MechWolf/MechWolf.git\n```\n\n## What can MechWolf do?\n\nA lot.\nLet's say you're trying to automate the production of [acetaminophen](https://en.wikipedia.org/wiki/Paracetamol), a popular pain reliever and fever reducer.\nThe reaction involves combining two chemicals, 4-aminophenol and acetic anhydride.\nThe basic level of organization in MechWolf are individual components, such as the vessels and pumps.\n\nFirst, we define our components and create an **`Apparatus`** object to hold them:\n\n```python\nimport mechwolf as mw\n\n# define the vessels\naminophenol = mw.Vessel(\"15 mL 4-aminophenol\")\nacetic_anhydride = mw.Vessel(\"15 mL acetic anhydride\")\nacetaminophen = mw.Vessel(\"acetaminophen\")\n\n# define the pumps\npump_1 = mw.Pump()\npump_2 = mw.Pump()\n\n# define the mixer\nmixer = mw.TMixer()\n\n# same tube specs for all tubes\ntube = mw.Tube(length=\"1 m\", ID=\"1/16 in\", OD=\"2/16 in\", material=\"PVC\")\n\n# create the Apparatus object\nA = mw.Apparatus()\n```\n\nNext, we define the connectivity of the **`Apparatus`** with **`add()`**. **`add()`** expects three arguments, `from_component`, `to_component`, and `tube` (in that order). First, we connect `aminophenol` to `pump_1` via `tube`:\n\n```python\nA.add(from_component=aminophenol, to_component=pump_1, tube=tube)\n```\n\nNote that the keyword arguments are optional:\n\n```python\nA.add(acetic_anhydride, pump_2, tube)\n```\n\nSince `from_component` is a list, both `pump_1` and `pump_2` will be connected to `mixer`.\n\n```python\nA.add([pump_1, pump_2], mixer, tube)\n```\n\nFinally, connect `mixer` to the output vessel, `acetaminophen`:\n\n```python\nA.add(mixer, acetaminophen, tube)\n```\n\nThen we define a **`Protocol`** and run it:\n\n```python\n# create the Protocol object\nP = mw.Protocol(A, name=\"acetaminophen synthesis\")\nP.add([pump_1, pump_2], duration=\"15 mins\", rate=\"1 mL/min\")\n\n# execute the Protocol\nP.execute()\n```\n\nThat's it! You can do this and a whole lot more with MechWolf.\nTo learn more, take a look at the [docs](example.com).\n\n## Documentation\n\n[Link will go here](example.com)\n\n## License\n\n[GPLv3](LICENSE) [(summary)](https://choosealicense.com/licenses/gpl-3.0/).\n\n## Citation\n\n```\nWill go here.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MechWolf/MechWolf", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mechwolf", "package_url": "https://pypi.org/project/mechwolf/", "platform": "", "project_url": "https://pypi.org/project/mechwolf/", "project_urls": {"Homepage": "https://github.com/MechWolf/MechWolf"}, "release_url": "https://pypi.org/project/mechwolf/0.1.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Continuous flow process description, analysis, and automation", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0677e192f5aa6051d58f0785c368b4189b2a882/68747470733a2f2f6769746875622e636f6d2f4d656368576f6c662f4d656368576f6c662f7261772f6d61737465722f6c6f676f2f686561643130782e706e67\" width=\"150\">\n<br>\nMechWolf\n</h1>\n<div>\n<a href=\"https://www.python.org/downloads/\" rel=\"nofollow\"><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99a5180f32db379110e9948c7de1aaf8f77bf2e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372d626c75652e737667\"></a>\n<a href=\"https://gitter.im/mechwolf-project\" rel=\"nofollow\"><img alt=\"Gitter chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/398a69619cc681cbaf582550d461069d92760f62/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d627269676874677265656e2e737667\"></a>\n<a href=\"https://gitter.im/mechwolf-project\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b79e44f17befb3e243fa9ced7b546ec4b60586c3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f444f492d746f253230626525323064657465726d696e65642d627269676874677265656e2e737667\"></a>\n<a href=\"https://github.com/MechWolf/MechWolf/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GPLv3 license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3046ca1a0a10a2a4848f711711c494608554822c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e737667\"></a>\n<a href=\"https://github.com/mechwolf/mechwolf/actions\" rel=\"nofollow\"></a><img alt=\"CI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f30af6aa5d744b80bc9cab6c1715ccc42097ccd5/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4d656368576f6c662f4d656368576f6c662e737667\">\n<a href=\"https://mechwolf.netlify.com\" rel=\"nofollow\"><img alt=\"Netlify\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b523f0c155c4e9a68938ccd8eb96bda1ac017460/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e742e7376673f75726c3d6874747073253341253246253246646576656c6f7065722e6f7377616c646c6162732e636f6d2532466e65746c6966792d73746174757325324633396132643435652d663632312d346538642d616665642d336165326565346239333634\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://mybinder.org/v2/gh/MechWolf/MechWolf/master\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n</div>\n<br>\n<p>MechWolf is a Python framework for automating continuous flow processes.\nIt was developed as a collaboration between computer scientists, chemists, and complete novices to be used by anyone wanting to do better, faster, more reproducible flow-based science.\nFeatures include:</p>\n<ul>\n<li>Natural language description, analysis, and visualization of continuous flow networks</li>\n<li>Automated execution of protocols</li>\n<li>Full user extensibility</li>\n<li>Smart default settings, designed by scientists for scientists</li>\n<li>Extensive checking to prevent potentially costly and dangerous errors before runtime</li>\n<li>Natural language parsing of times and quantities</li>\n<li>Thorough documentation and tutorials</li>\n</ul>\n<h2>Installation</h2>\n<p>It's as easy as:</p>\n<pre>$ pip install mechwolf\n</pre>\n<p>Or, to get the latest (but not necessarily stable) development branch:</p>\n<pre>$ pip install git+https://github.com/MechWolf/MechWolf.git\n</pre>\n<h2>What can MechWolf do?</h2>\n<p>A lot.\nLet's say you're trying to automate the production of <a href=\"https://en.wikipedia.org/wiki/Paracetamol\" rel=\"nofollow\">acetaminophen</a>, a popular pain reliever and fever reducer.\nThe reaction involves combining two chemicals, 4-aminophenol and acetic anhydride.\nThe basic level of organization in MechWolf are individual components, such as the vessels and pumps.</p>\n<p>First, we define our components and create an <strong><code>Apparatus</code></strong> object to hold them:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mechwolf</span> <span class=\"k\">as</span> <span class=\"nn\">mw</span>\n\n<span class=\"c1\"># define the vessels</span>\n<span class=\"n\">aminophenol</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Vessel</span><span class=\"p\">(</span><span class=\"s2\">\"15 mL 4-aminophenol\"</span><span class=\"p\">)</span>\n<span class=\"n\">acetic_anhydride</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Vessel</span><span class=\"p\">(</span><span class=\"s2\">\"15 mL acetic anhydride\"</span><span class=\"p\">)</span>\n<span class=\"n\">acetaminophen</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Vessel</span><span class=\"p\">(</span><span class=\"s2\">\"acetaminophen\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># define the pumps</span>\n<span class=\"n\">pump_1</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Pump</span><span class=\"p\">()</span>\n<span class=\"n\">pump_2</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Pump</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># define the mixer</span>\n<span class=\"n\">mixer</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">TMixer</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># same tube specs for all tubes</span>\n<span class=\"n\">tube</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Tube</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"s2\">\"1 m\"</span><span class=\"p\">,</span> <span class=\"n\">ID</span><span class=\"o\">=</span><span class=\"s2\">\"1/16 in\"</span><span class=\"p\">,</span> <span class=\"n\">OD</span><span class=\"o\">=</span><span class=\"s2\">\"2/16 in\"</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">\"PVC\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the Apparatus object</span>\n<span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Apparatus</span><span class=\"p\">()</span>\n</pre>\n<p>Next, we define the connectivity of the <strong><code>Apparatus</code></strong> with <strong><code>add()</code></strong>. <strong><code>add()</code></strong> expects three arguments, <code>from_component</code>, <code>to_component</code>, and <code>tube</code> (in that order). First, we connect <code>aminophenol</code> to <code>pump_1</code> via <code>tube</code>:</p>\n<pre><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">from_component</span><span class=\"o\">=</span><span class=\"n\">aminophenol</span><span class=\"p\">,</span> <span class=\"n\">to_component</span><span class=\"o\">=</span><span class=\"n\">pump_1</span><span class=\"p\">,</span> <span class=\"n\">tube</span><span class=\"o\">=</span><span class=\"n\">tube</span><span class=\"p\">)</span>\n</pre>\n<p>Note that the keyword arguments are optional:</p>\n<pre><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">acetic_anhydride</span><span class=\"p\">,</span> <span class=\"n\">pump_2</span><span class=\"p\">,</span> <span class=\"n\">tube</span><span class=\"p\">)</span>\n</pre>\n<p>Since <code>from_component</code> is a list, both <code>pump_1</code> and <code>pump_2</code> will be connected to <code>mixer</code>.</p>\n<pre><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">([</span><span class=\"n\">pump_1</span><span class=\"p\">,</span> <span class=\"n\">pump_2</span><span class=\"p\">],</span> <span class=\"n\">mixer</span><span class=\"p\">,</span> <span class=\"n\">tube</span><span class=\"p\">)</span>\n</pre>\n<p>Finally, connect <code>mixer</code> to the output vessel, <code>acetaminophen</code>:</p>\n<pre><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">mixer</span><span class=\"p\">,</span> <span class=\"n\">acetaminophen</span><span class=\"p\">,</span> <span class=\"n\">tube</span><span class=\"p\">)</span>\n</pre>\n<p>Then we define a <strong><code>Protocol</code></strong> and run it:</p>\n<pre><span class=\"c1\"># create the Protocol object</span>\n<span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">Protocol</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"acetaminophen synthesis\"</span><span class=\"p\">)</span>\n<span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">([</span><span class=\"n\">pump_1</span><span class=\"p\">,</span> <span class=\"n\">pump_2</span><span class=\"p\">],</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"s2\">\"15 mins\"</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"s2\">\"1 mL/min\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># execute the Protocol</span>\n<span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n</pre>\n<p>That's it! You can do this and a whole lot more with MechWolf.\nTo learn more, take a look at the <a href=\"example.com\" rel=\"nofollow\">docs</a>.</p>\n<h2>Documentation</h2>\n<p><a href=\"example.com\" rel=\"nofollow\">Link will go here</a></p>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">GPLv3</a> <a href=\"https://choosealicense.com/licenses/gpl-3.0/\" rel=\"nofollow\">(summary)</a>.</p>\n<h2>Citation</h2>\n<pre><code>Will go here.\n</code></pre>\n\n          </div>"}, "last_serial": 5875715, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "cdad319380fadfe73ea9dad5d6da0a6c", "sha256": "20f5e4c47a29191f51c75015ca30d22b42078a36c71d6b1579d9243efc073cd8"}, "downloads": -1, "filename": "mechwolf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cdad319380fadfe73ea9dad5d6da0a6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1435, "upload_time": "2018-04-15T21:39:46", "upload_time_iso_8601": "2018-04-15T21:39:46.357168Z", "url": "https://files.pythonhosted.org/packages/3c/10/4ac612fb8038971a8695dc01a71be05a233f009b2789fb35dfe2261cef8c/mechwolf-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "74589faff9cbc41e79acc1ba21516af8", "sha256": "96641d16c38ec8a5ce2cd3e9130bc79f4d0837cae14608555d8d0b597db1eac5"}, "downloads": -1, "filename": "mechwolf-0.1.0.tar.gz", "has_sig": false, "md5_digest": "74589faff9cbc41e79acc1ba21516af8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 35691, "upload_time": "2019-09-13T01:15:20", "upload_time_iso_8601": "2019-09-13T01:15:20.186695Z", "url": "https://files.pythonhosted.org/packages/82/6f/5db9cb39ac364d862aadc5547902daefa6380c3bca83a130c6af0912b714/mechwolf-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "47861b15b9fc96c2f5db5c9f06a628b1", "sha256": "065f9d4b3e821cedf1e9dce5003f8cec56331306a4590f57985ba1f0326b1ee5"}, "downloads": -1, "filename": "mechwolf-0.1.1.tar.gz", "has_sig": false, "md5_digest": "47861b15b9fc96c2f5db5c9f06a628b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 35567, "upload_time": "2019-09-23T19:36:16", "upload_time_iso_8601": "2019-09-23T19:36:16.878782Z", "url": "https://files.pythonhosted.org/packages/9b/d7/04e1688fb51d09dc29868ab32f2f2a6d88f8ef3ce47978f1ff60ee15d04d/mechwolf-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "47861b15b9fc96c2f5db5c9f06a628b1", "sha256": "065f9d4b3e821cedf1e9dce5003f8cec56331306a4590f57985ba1f0326b1ee5"}, "downloads": -1, "filename": "mechwolf-0.1.1.tar.gz", "has_sig": false, "md5_digest": "47861b15b9fc96c2f5db5c9f06a628b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 35567, "upload_time": "2019-09-23T19:36:16", "upload_time_iso_8601": "2019-09-23T19:36:16.878782Z", "url": "https://files.pythonhosted.org/packages/9b/d7/04e1688fb51d09dc29868ab32f2f2a6d88f8ef3ce47978f1ff60ee15d04d/mechwolf-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:39 2020"}