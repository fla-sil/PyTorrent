{"info": {"author": "St3veR0nix", "author_email": "st3ver0nix@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "This is the free version of the CleverBot API, that supports asyncio\n\n\nTo use this library, you will need the latest version of **pypeteer**, which you can find at this link https://github.com/miyakogi/pyppeteer\n\n**asyncio** and **bs4** are required too.\n\n\nOnce you have all the required packages, you're ready to use this simple library!\n\n## Example of making one request and getting the response string:\n\n```python\n\nfrom cleverbot_aio_free.cbaio import CleverBot\nimport asyncio\n\n#Instantiate the class\ncb = CleverBot()\n\nasync def main():\n\"\"\"\nThe first time you call init(), pypeteer will download the chromium browser, \nthat is necessary to use this library.\nThis is done only one time, i suggest you call this function in a test script,\nbefore using it in your programs\nSubsequent calls to init () will not download anything.\n\"\"\"\n    await cb.init()\n\"\"\"\nAfter initialization you can send text to Cleverbot and recieve the text response in just one line...\n\"\"\"\n    response = await cb.getResponse(\"Hello\")\n    print(response)\n#When you want to reset the chat, you can close the browser session with...\n    await cb.close()\n\n#If you're using python >= 3.7\nasyncio.run(main)\n\"\"\"\nwith python <= 3.6 < 3.7\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n\"\"\"\n```\n\n## Simple example of a continous chat\n\n```python\nfrom cleverbot_aio_free.cbaio import CleverBot\nimport asyncio\n\ncb = CleverBot()\n\nasync def main():\n    await cb.init()\n    while(True):\n        text = input(\"Say something to CleverBot:\")\n        if text.lower().find(\"end\") != -1:\n            break\n        response = await cb.getResponse(text)\n        print(response)\n    await cb.close()\n\nasyncio.run(main())\n\"\"\"or\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n\"\"\"\n```\n\nThat's it! I hope this library will help lots of people build their chatbots.\n\nIf you find any issues, feel free to post it on github: https://github.com/St3veR0nin/cleverbot_aio_free\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/St3veR0nin/cleverbot_aio_free", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cleverbot-aio-free", "package_url": "https://pypi.org/project/cleverbot-aio-free/", "platform": "", "project_url": "https://pypi.org/project/cleverbot-aio-free/", "project_urls": {"Homepage": "https://github.com/St3veR0nin/cleverbot_aio_free"}, "release_url": "https://pypi.org/project/cleverbot-aio-free/1.5.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Free version of the Cleverbot API, that supports asyncio", "version": "1.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the free version of the CleverBot API, that supports asyncio</p>\n<p>To use this library, you will need the latest version of <strong>pypeteer</strong>, which you can find at this link <a href=\"https://github.com/miyakogi/pyppeteer\" rel=\"nofollow\">https://github.com/miyakogi/pyppeteer</a></p>\n<p><strong>asyncio</strong> and <strong>bs4</strong> are required too.</p>\n<p>Once you have all the required packages, you're ready to use this simple library!</p>\n<h2>Example of making one request and getting the response string:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cleverbot_aio_free.cbaio</span> <span class=\"kn\">import</span> <span class=\"n\">CleverBot</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"c1\">#Instantiate the class</span>\n<span class=\"n\">cb</span> <span class=\"o\">=</span> <span class=\"n\">CleverBot</span><span class=\"p\">()</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">The first time you call init(), pypeteer will download the chromium browser, </span>\n<span class=\"sd\">that is necessary to use this library.</span>\n<span class=\"sd\">This is done only one time, i suggest you call this function in a test script,</span>\n<span class=\"sd\">before using it in your programs</span>\n<span class=\"sd\">Subsequent calls to init () will not download anything.</span>\n<span class=\"sd\">\"\"\"</span>\n    <span class=\"k\">await</span> <span class=\"n\">cb</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">After initialization you can send text to Cleverbot and recieve the text response in just one line...</span>\n<span class=\"sd\">\"\"\"</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">cb</span><span class=\"o\">.</span><span class=\"n\">getResponse</span><span class=\"p\">(</span><span class=\"s2\">\"Hello\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n<span class=\"c1\">#When you want to reset the chat, you can close the browser session with...</span>\n    <span class=\"k\">await</span> <span class=\"n\">cb</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#If you're using python &gt;= 3.7</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">)</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">with python &lt;= 3.6 &lt; 3.7</span>\n<span class=\"sd\">loop = asyncio.get_event_loop()</span>\n<span class=\"sd\">loop.run_until_complete(main())</span>\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<h2>Simple example of a continous chat</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cleverbot_aio_free.cbaio</span> <span class=\"kn\">import</span> <span class=\"n\">CleverBot</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"n\">cb</span> <span class=\"o\">=</span> <span class=\"n\">CleverBot</span><span class=\"p\">()</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">await</span> <span class=\"n\">cb</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n    <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Say something to CleverBot:\"</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"end\"</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">cb</span><span class=\"o\">.</span><span class=\"n\">getResponse</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">cb</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"sd\">\"\"\"or</span>\n<span class=\"sd\">loop = asyncio.get_event_loop()</span>\n<span class=\"sd\">loop.run_until_complete(main())</span>\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<p>That's it! I hope this library will help lots of people build their chatbots.</p>\n<p>If you find any issues, feel free to post it on github: <a href=\"https://github.com/St3veR0nin/cleverbot_aio_free\" rel=\"nofollow\">https://github.com/St3veR0nin/cleverbot_aio_free</a></p>\n\n          </div>"}, "last_serial": 7187258, "releases": {"1.4.0": [{"comment_text": "", "digests": {"md5": "c8f952e83c76480960ad50ca9c4b8a35", "sha256": "ba9044ee3b8d9cfecc1c5473b16c3ad4414b90a68ac40f0f5d56aa085fe21698"}, "downloads": -1, "filename": "cleverbot_aio_free-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f952e83c76480960ad50ca9c4b8a35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15570, "upload_time": "2020-01-05T19:52:55", "upload_time_iso_8601": "2020-01-05T19:52:55.639305Z", "url": "https://files.pythonhosted.org/packages/eb/6a/1523c034c1a0ffd9a552599d4f4cb7dfac0fa43fc3319fae44b5130afcec/cleverbot_aio_free-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0599fe4e4fcbf7f8ab4fcff1b22d252e", "sha256": "5edcf8a6d1c84877527d565fdf91dbc0efe8179f7f3fd6b6a68941e989f9b5a7"}, "downloads": -1, "filename": "cleverbot_aio_free-1.4.0.tar.gz", "has_sig": false, "md5_digest": "0599fe4e4fcbf7f8ab4fcff1b22d252e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2675, "upload_time": "2020-01-05T19:52:57", "upload_time_iso_8601": "2020-01-05T19:52:57.757933Z", "url": "https://files.pythonhosted.org/packages/c8/53/b9c605c871da800a1b645cb04935ab91fa6a0c07ede21c5a4cec48bf9b3d/cleverbot_aio_free-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "e371cdc9b97ae258d1a30f0d1c2c58fa", "sha256": "7564627050d1febaeed03c6de2d53ae26ac09a815cc92fb87dcf0a5c30fb0eb4"}, "downloads": -1, "filename": "cleverbot_aio_free-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e371cdc9b97ae258d1a30f0d1c2c58fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15538, "upload_time": "2020-05-07T10:22:56", "upload_time_iso_8601": "2020-05-07T10:22:56.380395Z", "url": "https://files.pythonhosted.org/packages/cc/e4/90960f67f6ff7cafe1f6df5004f84c40d382e2771ad1483e4f8af33c35bf/cleverbot_aio_free-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87acfbf54fa715aa6ae464eddda0b09f", "sha256": "77b4073438dc782c00aeb62ba9c24124b70f954373e43b925f96723ff0b8c6c2"}, "downloads": -1, "filename": "cleverbot_aio_free-1.5.0.tar.gz", "has_sig": false, "md5_digest": "87acfbf54fa715aa6ae464eddda0b09f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2649, "upload_time": "2020-05-07T10:22:57", "upload_time_iso_8601": "2020-05-07T10:22:57.728683Z", "url": "https://files.pythonhosted.org/packages/1a/55/d1aae9f66c273fd6733cec89d858ef3a671a1db737ba273ba39ac7b6b69a/cleverbot_aio_free-1.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e371cdc9b97ae258d1a30f0d1c2c58fa", "sha256": "7564627050d1febaeed03c6de2d53ae26ac09a815cc92fb87dcf0a5c30fb0eb4"}, "downloads": -1, "filename": "cleverbot_aio_free-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e371cdc9b97ae258d1a30f0d1c2c58fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15538, "upload_time": "2020-05-07T10:22:56", "upload_time_iso_8601": "2020-05-07T10:22:56.380395Z", "url": "https://files.pythonhosted.org/packages/cc/e4/90960f67f6ff7cafe1f6df5004f84c40d382e2771ad1483e4f8af33c35bf/cleverbot_aio_free-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87acfbf54fa715aa6ae464eddda0b09f", "sha256": "77b4073438dc782c00aeb62ba9c24124b70f954373e43b925f96723ff0b8c6c2"}, "downloads": -1, "filename": "cleverbot_aio_free-1.5.0.tar.gz", "has_sig": false, "md5_digest": "87acfbf54fa715aa6ae464eddda0b09f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2649, "upload_time": "2020-05-07T10:22:57", "upload_time_iso_8601": "2020-05-07T10:22:57.728683Z", "url": "https://files.pythonhosted.org/packages/1a/55/d1aae9f66c273fd6733cec89d858ef3a671a1db737ba273ba39ac7b6b69a/cleverbot_aio_free-1.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:04 2020"}