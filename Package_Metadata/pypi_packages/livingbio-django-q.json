{"info": {"author": "Ilan Steemers", "author_email": "koed0@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: docs/_static/logo.png\n    :align: center\n    :alt: Q logo\n    :target: https://django-q.readthedocs.org/\n\nA multiprocessing distributed task queue for Django\n---------------------------------------------------\n\n|image0| |image1| |docs| |image2|\n\nFeatures\n~~~~~~~~\n\n-  Multiprocessing worker pool\n-  Asynchronous tasks\n-  Scheduled and repeated tasks\n-  Encrypted and compressed packages\n-  Failure and success database or cache\n-  Result hooks, groups and chains\n-  Django Admin integration\n-  PaaS compatible with multiple instances\n-  Multi cluster monitor\n-  Redis, Disque, IronMQ, SQS, MongoDB or ORM\n-  Rollbar support\n\nRequirements\n~~~~~~~~~~~~\n\n-  `Django <https://www.djangoproject.com>`__ > = 1.8\n-  `Django-picklefield <https://github.com/gintas/django-picklefield>`__\n-  `Arrow <https://github.com/crsmithdev/arrow>`__\n-  `Blessed <https://github.com/jquast/blessed>`__\n\nTested with: Python 2.7 & 3.6. Django 1.8.18, 1.10.7 and 1.11\n\nBrokers\n~~~~~~~\n- `Redis <https://django-q.readthedocs.org/en/latest/brokers.html#redis>`__\n- `Disque <https://django-q.readthedocs.org/en/latest/brokers.html#disque>`__\n- `IronMQ <https://django-q.readthedocs.org/en/latest/brokers.html#ironmq>`__\n- `Amazon SQS <https://django-q.readthedocs.org/en/latest/brokers.html#amazon-sqs>`__\n- `MongoDB <https://django-q.readthedocs.org/en/latest/brokers.html#mongodb>`__\n- `Django ORM <https://django-q.readthedocs.org/en/latest/brokers.html#django-orm>`__\n\nInstallation\n~~~~~~~~~~~~\n\n-  Install the latest version with pip::\n\n    $ pip install django-q\n\n\n-  Add `django_q` to your `INSTALLED_APPS` in your projects `settings.py`::\n\n       INSTALLED_APPS = (\n           # other apps\n           'django_q',\n       )\n\n-  Run Django migrations to create the database tables::\n\n    $ python manage.py migrate\n\n-  Choose a message `broker <https://django-q.readthedocs.org/en/latest/brokers.html>`__ , configure and install the appropriate client library.\n\nRead the full documentation at `https://django-q.readthedocs.org <https://django-q.readthedocs.org>`__\n\n\nConfiguration\n~~~~~~~~~~~~~\n\nAll configuration settings are optional. e.g:\n\n.. code:: python\n\n    # settings.py example\n    Q_CLUSTER = {\n        'name': 'myproject',\n        'workers': 8,\n        'recycle': 500,\n        'timeout': 60,\n        'compress': True,\n        'cpu_affinity': 1,\n        'save_limit': 250,\n        'queue_limit': 500,\n        'label': 'Django Q',\n        'redis': {\n            'host': '127.0.0.1',\n            'port': 6379,\n            'db': 0, }\n    }\n\nFor full configuration options, see the `configuration documentation <https://django-q.readthedocs.org/en/latest/configure.html>`__.\n\nManagement Commands\n~~~~~~~~~~~~~~~~~~~\n\nStart a cluster with::\n\n    $ python manage.py qcluster\n\nMonitor your clusters with::\n\n    $ python manage.py qmonitor\n\nCheck overall statistics with::\n\n    $ python manage.py qinfo\n\nCreating Tasks\n~~~~~~~~~~~~~~\n\nUse `async` from your code to quickly offload tasks:\n\n.. code:: python\n\n    from django_q.tasks import async, result\n\n    # create the task\n    async('math.copysign', 2, -2)\n\n    # or with a reference\n    import math.copysign\n\n    task_id = async(copysign, 2, -2)\n\n    # get the result\n    task_result = result(task_id)\n\n    # result returns None if the task has not been executed yet\n    # you can wait for it\n    task_result = result(task_id, 200)\n\n    # but in most cases you will want to use a hook:\n\n    async('math.modf', 2.5, hook='hooks.print_result')\n\n    # hooks.py\n    def print_result(task):\n        print(task.result)\n\nFor more info see `Tasks <https://django-q.readthedocs.org/en/latest/tasks.html>`__\n\n\nSchedule\n~~~~~~~~\n\nSchedules are regular Django models. You can manage them through the\nAdmin page or directly from your code:\n\n.. code:: python\n\n    # Use the schedule function\n    from django_q.tasks import schedule\n\n    schedule('math.copysign',\n             2, -2,\n             hook='hooks.print_result',\n             schedule_type=Schedule.DAILY)\n\n    # Or create the object directly\n    from django_q.models import Schedule\n\n    Schedule.objects.create(func='math.copysign',\n                            hook='hooks.print_result',\n                            args='2,-2',\n                            schedule_type=Schedule.DAILY\n                            )\n\n    # Run a task every 5 minutes, starting at 6 today\n    # for 2 hours\n    import arrow\n\n    schedule('math.hypot',\n             3, 4,\n             schedule_type=Schedule.MINUTES,\n             minutes=5,\n             repeats=24,\n             next_run=arrow.utcnow().replace(hour=18, minute=0))\n\nFor more info check the `Schedules <https://django-q.readthedocs.org/en/latest/schedules.html>`__ documentation.\n\n\nTesting\n~~~~~~~\n\nTo run the tests you will need `py.test <http://pytest.org/latest/>`__ and `pytest-django <https://github.com/pytest-dev/pytest-django>`__\n\n\nTodo\n~~~~\n\n-  Better tests and coverage\n-  Less dependencies?\n\nAcknowledgements\n~~~~~~~~~~~~~~~~\n\n-  Django Q was inspired by working with\n   `Django-RQ <https://github.com/ui/django-rq>`__ and\n   `RQ <https://github.com/ui/django-rq>`__\n-  Human readable hashes by\n   `HumanHash <https://github.com/zacharyvoase/humanhash>`__\n-  Redditors feedback at `r/django <https://www.reddit.com/r/django/>`__\n\n.. |image0| image:: https://travis-ci.org/Koed00/django-q.svg?branch=master\n   :target: https://travis-ci.org/Koed00/django-q\n.. |image1| image:: http://codecov.io/github/Koed00/django-q/coverage.svg?branch=master\n   :target: http://codecov.io/github/Koed00/django-q?branch=master\n.. |image2| image:: http://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/Koed00/django-q\n.. |docs| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100\n    :target: https://django-q.readthedocs.org/", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://django-q.readthedocs.org", "keywords": "django distributed task queue worker scheduler cron redis disque ironmq sqs orm mongodb multiprocessing rollbar", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "livingbio-django-q", "package_url": "https://pypi.org/project/livingbio-django-q/", "platform": "", "project_url": "https://pypi.org/project/livingbio-django-q/", "project_urls": {"Homepage": "https://django-q.readthedocs.org"}, "release_url": "https://pypi.org/project/livingbio-django-q/0.8.5/", "requires_dist": null, "requires_python": "", "summary": "A multiprocessing distributed task queue for Django", "version": "0.8.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://django-q.readthedocs.org/\" rel=\"nofollow\"><img alt=\"Q logo\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de800870c3904af0bf862a7743f0111c192784ab/646f63732f5f7374617469632f6c6f676f2e706e67\"></a>\n<div id=\"a-multiprocessing-distributed-task-queue-for-django\">\n<h2>A multiprocessing distributed task queue for Django</h2>\n<p><a href=\"https://travis-ci.org/Koed00/django-q\" rel=\"nofollow\"><img alt=\"image0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fba1f6d9124ce1fe27162453effa45c5bf9a271c/68747470733a2f2f7472617669732d63692e6f72672f4b6f656430302f646a616e676f2d712e7376673f6272616e63683d6d6173746572\"></a> <a href=\"http://codecov.io/github/Koed00/django-q?branch=master\" rel=\"nofollow\"><img alt=\"image1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afe4ea57c7f4588a0185adaa71f016cb990be179/687474703a2f2f636f6465636f762e696f2f6769746875622f4b6f656430302f646a616e676f2d712f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://django-q.readthedocs.org/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c897f7f94eaa2fe0954c5ac7bbea063de95f039/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646f63732f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://gitter.im/Koed00/django-q\" rel=\"nofollow\"><img alt=\"image2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59a95b7e830fb07089686d302f4d857c0a7df4e5/687474703a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a></p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Multiprocessing worker pool</li>\n<li>Asynchronous tasks</li>\n<li>Scheduled and repeated tasks</li>\n<li>Encrypted and compressed packages</li>\n<li>Failure and success database or cache</li>\n<li>Result hooks, groups and chains</li>\n<li>Django Admin integration</li>\n<li>PaaS compatible with multiple instances</li>\n<li>Multi cluster monitor</li>\n<li>Redis, Disque, IronMQ, SQS, MongoDB or ORM</li>\n<li>Rollbar support</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"https://www.djangoproject.com\" rel=\"nofollow\">Django</a> &gt; = 1.8</li>\n<li><a href=\"https://github.com/gintas/django-picklefield\" rel=\"nofollow\">Django-picklefield</a></li>\n<li><a href=\"https://github.com/crsmithdev/arrow\" rel=\"nofollow\">Arrow</a></li>\n<li><a href=\"https://github.com/jquast/blessed\" rel=\"nofollow\">Blessed</a></li>\n</ul>\n<p>Tested with: Python 2.7 &amp; 3.6. Django 1.8.18, 1.10.7 and 1.11</p>\n</div>\n<div id=\"brokers\">\n<h3>Brokers</h3>\n<ul>\n<li><a href=\"https://django-q.readthedocs.org/en/latest/brokers.html#redis\" rel=\"nofollow\">Redis</a></li>\n<li><a href=\"https://django-q.readthedocs.org/en/latest/brokers.html#disque\" rel=\"nofollow\">Disque</a></li>\n<li><a href=\"https://django-q.readthedocs.org/en/latest/brokers.html#ironmq\" rel=\"nofollow\">IronMQ</a></li>\n<li><a href=\"https://django-q.readthedocs.org/en/latest/brokers.html#amazon-sqs\" rel=\"nofollow\">Amazon SQS</a></li>\n<li><a href=\"https://django-q.readthedocs.org/en/latest/brokers.html#mongodb\" rel=\"nofollow\">MongoDB</a></li>\n<li><a href=\"https://django-q.readthedocs.org/en/latest/brokers.html#django-orm\" rel=\"nofollow\">Django ORM</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<ul>\n<li><p>Install the latest version with pip:</p>\n<pre>$ pip install django-q\n</pre>\n</li>\n<li><p>Add <cite>django_q</cite> to your <cite>INSTALLED_APPS</cite> in your projects <cite>settings.py</cite>:</p>\n<pre>INSTALLED_APPS = (\n    # other apps\n    'django_q',\n)\n</pre>\n</li>\n<li><p>Run Django migrations to create the database tables:</p>\n<pre>$ python manage.py migrate\n</pre>\n</li>\n<li><p>Choose a message <a href=\"https://django-q.readthedocs.org/en/latest/brokers.html\" rel=\"nofollow\">broker</a> , configure and install the appropriate client library.</p>\n</li>\n</ul>\n<p>Read the full documentation at <a href=\"https://django-q.readthedocs.org\" rel=\"nofollow\">https://django-q.readthedocs.org</a></p>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>All configuration settings are optional. e.g:</p>\n<pre><span class=\"c1\"># settings.py example</span>\n<span class=\"n\">Q_CLUSTER</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'myproject'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'workers'</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"s1\">'recycle'</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>\n    <span class=\"s1\">'timeout'</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"s1\">'compress'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'cpu_affinity'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'save_limit'</span><span class=\"p\">:</span> <span class=\"mi\">250</span><span class=\"p\">,</span>\n    <span class=\"s1\">'queue_limit'</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>\n    <span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"s1\">'Django Q'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'redis'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'host'</span><span class=\"p\">:</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'port'</span><span class=\"p\">:</span> <span class=\"mi\">6379</span><span class=\"p\">,</span>\n        <span class=\"s1\">'db'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>For full configuration options, see the <a href=\"https://django-q.readthedocs.org/en/latest/configure.html\" rel=\"nofollow\">configuration documentation</a>.</p>\n</div>\n<div id=\"management-commands\">\n<h3>Management Commands</h3>\n<p>Start a cluster with:</p>\n<pre>$ python manage.py qcluster\n</pre>\n<p>Monitor your clusters with:</p>\n<pre>$ python manage.py qmonitor\n</pre>\n<p>Check overall statistics with:</p>\n<pre>$ python manage.py qinfo\n</pre>\n</div>\n<div id=\"creating-tasks\">\n<h3>Creating Tasks</h3>\n<p>Use <cite>async</cite> from your code to quickly offload tasks:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_q.tasks</span> <span class=\"kn\">import</span> <span class=\"k\">async</span><span class=\"p\">,</span> <span class=\"n\">result</span>\n\n<span class=\"c1\"># create the task</span>\n<span class=\"k\">async</span><span class=\"p\">(</span><span class=\"s1\">'math.copysign'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or with a reference</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math.copysign</span>\n\n<span class=\"n\">task_id</span> <span class=\"o\">=</span> <span class=\"k\">async</span><span class=\"p\">(</span><span class=\"n\">copysign</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get the result</span>\n<span class=\"n\">task_result</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># result returns None if the task has not been executed yet</span>\n<span class=\"c1\"># you can wait for it</span>\n<span class=\"n\">task_result</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># but in most cases you will want to use a hook:</span>\n\n<span class=\"k\">async</span><span class=\"p\">(</span><span class=\"s1\">'math.modf'</span><span class=\"p\">,</span> <span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"n\">hook</span><span class=\"o\">=</span><span class=\"s1\">'hooks.print_result'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># hooks.py</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_result</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>For more info see <a href=\"https://django-q.readthedocs.org/en/latest/tasks.html\" rel=\"nofollow\">Tasks</a></p>\n</div>\n<div id=\"schedule\">\n<h3>Schedule</h3>\n<p>Schedules are regular Django models. You can manage them through the\nAdmin page or directly from your code:</p>\n<pre><span class=\"c1\"># Use the schedule function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_q.tasks</span> <span class=\"kn\">import</span> <span class=\"n\">schedule</span>\n\n<span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"s1\">'math.copysign'</span><span class=\"p\">,</span>\n         <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n         <span class=\"n\">hook</span><span class=\"o\">=</span><span class=\"s1\">'hooks.print_result'</span><span class=\"p\">,</span>\n         <span class=\"n\">schedule_type</span><span class=\"o\">=</span><span class=\"n\">Schedule</span><span class=\"o\">.</span><span class=\"n\">DAILY</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or create the object directly</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_q.models</span> <span class=\"kn\">import</span> <span class=\"n\">Schedule</span>\n\n<span class=\"n\">Schedule</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"s1\">'math.copysign'</span><span class=\"p\">,</span>\n                        <span class=\"n\">hook</span><span class=\"o\">=</span><span class=\"s1\">'hooks.print_result'</span><span class=\"p\">,</span>\n                        <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"s1\">'2,-2'</span><span class=\"p\">,</span>\n                        <span class=\"n\">schedule_type</span><span class=\"o\">=</span><span class=\"n\">Schedule</span><span class=\"o\">.</span><span class=\"n\">DAILY</span>\n                        <span class=\"p\">)</span>\n\n<span class=\"c1\"># Run a task every 5 minutes, starting at 6 today</span>\n<span class=\"c1\"># for 2 hours</span>\n<span class=\"kn\">import</span> <span class=\"nn\">arrow</span>\n\n<span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"s1\">'math.hypot'</span><span class=\"p\">,</span>\n         <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n         <span class=\"n\">schedule_type</span><span class=\"o\">=</span><span class=\"n\">Schedule</span><span class=\"o\">.</span><span class=\"n\">MINUTES</span><span class=\"p\">,</span>\n         <span class=\"n\">minutes</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n         <span class=\"n\">repeats</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span>\n         <span class=\"n\">next_run</span><span class=\"o\">=</span><span class=\"n\">arrow</span><span class=\"o\">.</span><span class=\"n\">utcnow</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">minute</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre>\n<p>For more info check the <a href=\"https://django-q.readthedocs.org/en/latest/schedules.html\" rel=\"nofollow\">Schedules</a> documentation.</p>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>To run the tests you will need <a href=\"http://pytest.org/latest/\" rel=\"nofollow\">py.test</a> and <a href=\"https://github.com/pytest-dev/pytest-django\" rel=\"nofollow\">pytest-django</a></p>\n</div>\n<div id=\"todo\">\n<h3>Todo</h3>\n<ul>\n<li>Better tests and coverage</li>\n<li>Less dependencies?</li>\n</ul>\n</div>\n<div id=\"acknowledgements\">\n<h3>Acknowledgements</h3>\n<ul>\n<li>Django Q was inspired by working with\n<a href=\"https://github.com/ui/django-rq\" rel=\"nofollow\">Django-RQ</a> and\n<a href=\"https://github.com/ui/django-rq\" rel=\"nofollow\">RQ</a></li>\n<li>Human readable hashes by\n<a href=\"https://github.com/zacharyvoase/humanhash\" rel=\"nofollow\">HumanHash</a></li>\n<li>Redditors feedback at <a href=\"https://www.reddit.com/r/django/\" rel=\"nofollow\">r/django</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3392943, "releases": {"0.8.1": [{"comment_text": "", "digests": {"md5": "f53d6379bb0d150d8b562936258ca053", "sha256": "555ec1e980384f2e923b24c501ac53686a3c300000febc420c71d25c23d5f94d"}, "downloads": -1, "filename": "livingbio-django-q-0.8.1.tar.gz", "has_sig": false, "md5_digest": "f53d6379bb0d150d8b562936258ca053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39240, "upload_time": "2017-12-05T06:30:17", "upload_time_iso_8601": "2017-12-05T06:30:17.149175Z", "url": "https://files.pythonhosted.org/packages/a3/aa/b68ccb11bffad3e2fc34842e0a3a3b4a391fc3e5cb73a5eec85342f166a4/livingbio-django-q-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "43617c3091b1eb94e81671f615009307", "sha256": "134c71e3c714a5b4ec34adc7cecd30ecbc4835986813e43c33cc974ee85e828d"}, "downloads": -1, "filename": "livingbio-django-q-0.8.2.tar.gz", "has_sig": false, "md5_digest": "43617c3091b1eb94e81671f615009307", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39266, "upload_time": "2017-12-06T05:03:57", "upload_time_iso_8601": "2017-12-06T05:03:57.927433Z", "url": "https://files.pythonhosted.org/packages/aa/fa/00cd62f9dd06f4e5e81b1d7f9d748be972dc71f5a42a215434ae7b11a92c/livingbio-django-q-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "a5b1343cdd952f627ee233efe7f639e6", "sha256": "60bac0ae1686866d5f9ddfebb8e7a557231967d6cd0c2f81c7b7507859817197"}, "downloads": -1, "filename": "livingbio-django-q-0.8.3.tar.gz", "has_sig": false, "md5_digest": "a5b1343cdd952f627ee233efe7f639e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39270, "upload_time": "2017-12-06T05:08:17", "upload_time_iso_8601": "2017-12-06T05:08:17.506497Z", "url": "https://files.pythonhosted.org/packages/8b/e8/bacfad49de0658501b0ad789ad16d2b741a338c58ed4d48cce235cd3ae5b/livingbio-django-q-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "bb256140552148756caf6d85188bc2ad", "sha256": "f3021accfff8701e2ab76eae0467e35d3d15524af81cea70abdd1a294f605e66"}, "downloads": -1, "filename": "livingbio-django-q-0.8.4.tar.gz", "has_sig": false, "md5_digest": "bb256140552148756caf6d85188bc2ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39268, "upload_time": "2017-12-06T05:18:50", "upload_time_iso_8601": "2017-12-06T05:18:50.544935Z", "url": "https://files.pythonhosted.org/packages/ed/ae/e666f15be6580e00e2196d56a759d8f492f06250aaca2cf3eb5fc55a9826/livingbio-django-q-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "fb8ad1084e166b0ad679956f31788021", "sha256": "38dea48862bcb6af44867e5a3e694e89ec9832de4131c3ffee1bfa965c2b176f"}, "downloads": -1, "filename": "livingbio-django-q-0.8.5.tar.gz", "has_sig": false, "md5_digest": "fb8ad1084e166b0ad679956f31788021", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39255, "upload_time": "2017-12-06T05:21:49", "upload_time_iso_8601": "2017-12-06T05:21:49.144960Z", "url": "https://files.pythonhosted.org/packages/0c/0d/c56a998e8d7c40e12f02dfa531b621f149c6783b5e242b5836bc37e381f6/livingbio-django-q-0.8.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb8ad1084e166b0ad679956f31788021", "sha256": "38dea48862bcb6af44867e5a3e694e89ec9832de4131c3ffee1bfa965c2b176f"}, "downloads": -1, "filename": "livingbio-django-q-0.8.5.tar.gz", "has_sig": false, "md5_digest": "fb8ad1084e166b0ad679956f31788021", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39255, "upload_time": "2017-12-06T05:21:49", "upload_time_iso_8601": "2017-12-06T05:21:49.144960Z", "url": "https://files.pythonhosted.org/packages/0c/0d/c56a998e8d7c40e12f02dfa531b621f149c6783b5e242b5836bc37e381f6/livingbio-django-q-0.8.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:03 2020"}