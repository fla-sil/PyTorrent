{"info": {"author": "Sammyalhashe", "author_email": "sammy.alhashemi@mail.utoronto.ca", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyHeap\n\n- Simple implementation of a heap that takes an arbitrary key for sorting.\n- By default, the heaps are minHeaps. (can be changed by setting `isMin=False`) in constructor\n\n## Example Usage:\n\n```python\nfrom PyHeap import Heap\n\n# instantiate an empty heap as follows\n# insert elements using the insert method\nheap = Heap()\nfor i in range(5):\n    heap.insert(i)\nprint(heap.heap) # [0. 0, 1, 2, 3, 4]\n\n# instantiate a heap with a predefined array or set\na = [i for i in range(5)]\nheap = Heap(a)\nprint(heap.heap) # [0. 0, 1, 2, 3, 4]\n```\n\nYou can perform common heap operations such as `insert`, `getMin/deleteMin`:\n\n```python\nminVal = heap.getMin() # value is still present in the heap\nminVal = heap.deleteMin() # value no longer present\n```\n\nYou can also delete an arbitrary value if present in the heap:\n\n```python\nval = heap.deleteVal(3)\n```\n\nThe heap can also be iterated over:\n\n- The iteration order goes from smallest to largest if minHeap or largest to smallest if maxHeap\n\n```python\nfor val in heap:\n    print(val)\n```\n\nThe heap can also be indexed:\n\n- In this case, `heap[0]` returns the smallest number and `heap[k]` returns the kth smallest\n\nFinally, the heap supports adding any kind of type, as long as you provide a `key` that provides a method of ordering values.\n\n- NOTE: by default, the key is an indentity function\n- If the key fails on an item, it will raise a `ValueError`\n\n```python\ntest = [((3, 4), 2.8284271247461903), ((8, 9), 9.899494936611665), ((10, 2), 9.0), ((0.1, 2), 0.9), ((10, 5), 9.486832980505138)]\nheap = Heap(test, key=lambda x:x[1]) # this will order by the second value\n\n# you can change the heaps key as follows (this will change the heap)\nheap.reconstructHeap(lambda x: 1/(x + 1))\n\n# outside of the heap, you can get access to the heap's key as folows:\nheap.applyKey(3)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sammyalhashe/PyHeap", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PyHeap", "package_url": "https://pypi.org/project/PyHeap/", "platform": "", "project_url": "https://pypi.org/project/PyHeap/", "project_urls": {"Homepage": "https://github.com/Sammyalhashe/PyHeap"}, "release_url": "https://pypi.org/project/PyHeap/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A small heap implementation with customizeable key", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyHeap</h1>\n<ul>\n<li>Simple implementation of a heap that takes an arbitrary key for sorting.</li>\n<li>By default, the heaps are minHeaps. (can be changed by setting <code>isMin=False</code>) in constructor</li>\n</ul>\n<h2>Example Usage:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">PyHeap</span> <span class=\"kn\">import</span> <span class=\"n\">Heap</span>\n\n<span class=\"c1\"># instantiate an empty heap as follows</span>\n<span class=\"c1\"># insert elements using the insert method</span>\n<span class=\"n\">heap</span> <span class=\"o\">=</span> <span class=\"n\">Heap</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">heap</span><span class=\"p\">)</span> <span class=\"c1\"># [0. 0, 1, 2, 3, 4]</span>\n\n<span class=\"c1\"># instantiate a heap with a predefined array or set</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)]</span>\n<span class=\"n\">heap</span> <span class=\"o\">=</span> <span class=\"n\">Heap</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">heap</span><span class=\"p\">)</span> <span class=\"c1\"># [0. 0, 1, 2, 3, 4]</span>\n</pre>\n<p>You can perform common heap operations such as <code>insert</code>, <code>getMin/deleteMin</code>:</p>\n<pre><span class=\"n\">minVal</span> <span class=\"o\">=</span> <span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">getMin</span><span class=\"p\">()</span> <span class=\"c1\"># value is still present in the heap</span>\n<span class=\"n\">minVal</span> <span class=\"o\">=</span> <span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">deleteMin</span><span class=\"p\">()</span> <span class=\"c1\"># value no longer present</span>\n</pre>\n<p>You can also delete an arbitrary value if present in the heap:</p>\n<pre><span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">deleteVal</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>The heap can also be iterated over:</p>\n<ul>\n<li>The iteration order goes from smallest to largest if minHeap or largest to smallest if maxHeap</li>\n</ul>\n<pre><span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">heap</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span>\n</pre>\n<p>The heap can also be indexed:</p>\n<ul>\n<li>In this case, <code>heap[0]</code> returns the smallest number and <code>heap[k]</code> returns the kth smallest</li>\n</ul>\n<p>Finally, the heap supports adding any kind of type, as long as you provide a <code>key</code> that provides a method of ordering values.</p>\n<ul>\n<li>NOTE: by default, the key is an indentity function</li>\n<li>If the key fails on an item, it will raise a <code>ValueError</code></li>\n</ul>\n<pre><span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"p\">[((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"mf\">2.8284271247461903</span><span class=\"p\">),</span> <span class=\"p\">((</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"mf\">9.899494936611665</span><span class=\"p\">),</span> <span class=\"p\">((</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mf\">9.0</span><span class=\"p\">),</span> <span class=\"p\">((</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mf\">0.9</span><span class=\"p\">),</span> <span class=\"p\">((</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"mf\">9.486832980505138</span><span class=\"p\">)]</span>\n<span class=\"n\">heap</span> <span class=\"o\">=</span> <span class=\"n\">Heap</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"c1\"># this will order by the second value</span>\n\n<span class=\"c1\"># you can change the heaps key as follows (this will change the heap)</span>\n<span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">reconstructHeap</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># outside of the heap, you can get access to the heap's key as folows:</span>\n<span class=\"n\">heap</span><span class=\"o\">.</span><span class=\"n\">applyKey</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6442329, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5bbae6d59786fa72363f581ceb18b622", "sha256": "567d3e35c4bcea527f05bcebe35f69d83bfbf4cdee545e7da89ca8a8a6c58fd0"}, "downloads": -1, "filename": "PyHeap-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5bbae6d59786fa72363f581ceb18b622", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7328, "upload_time": "2020-01-13T03:55:45", "upload_time_iso_8601": "2020-01-13T03:55:45.888841Z", "url": "https://files.pythonhosted.org/packages/a2/2b/120ec9b31c53700799804eaa91b84ed33a3fd3e83900d882fe3e04095c6d/PyHeap-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e54f718ca340b5abfd207cd5c45bc7ec", "sha256": "c74c61480809e023a7534a2229a42b437820f5a185a040e72991322444535f6d"}, "downloads": -1, "filename": "PyHeap-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e54f718ca340b5abfd207cd5c45bc7ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4564, "upload_time": "2020-01-13T03:55:50", "upload_time_iso_8601": "2020-01-13T03:55:50.987172Z", "url": "https://files.pythonhosted.org/packages/33/59/b1347d3503a87aae097c6e09aa501999b6caa7ababd5cfa26d7c5d4b74e4/PyHeap-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ceaeef654d84caf86db7550ee76545c1", "sha256": "5c3a2c79338f379a093207cf8dd3b25899b3f6b60878a4b618812631a3f884b2"}, "downloads": -1, "filename": "PyHeap-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ceaeef654d84caf86db7550ee76545c1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6", "size": 8363, "upload_time": "2020-01-13T03:55:47", "upload_time_iso_8601": "2020-01-13T03:55:47.741586Z", "url": "https://files.pythonhosted.org/packages/25/4e/42cfcd130a05e88a84ac7b52ab61e4841e58910f155d3a40997b2f79488b/PyHeap-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7af78f8cd3bc1e41c72424c78f09f42e", "sha256": "eaced14b04112a0d5fefbcf5669daab55aab7d08546a58cf7e4276783dd00bb9"}, "downloads": -1, "filename": "PyHeap-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7af78f8cd3bc1e41c72424c78f09f42e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5754, "upload_time": "2020-01-13T03:55:52", "upload_time_iso_8601": "2020-01-13T03:55:52.082959Z", "url": "https://files.pythonhosted.org/packages/61/91/320adfa102d560a9f24a39976989a6577f3ff3329efdf67ae1c1b89fc144/PyHeap-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1ae52a9274ad765e81450e3d4682dc22", "sha256": "7b413c830748a94cf4686555590075fc1dac09871e8810797a6c250c4fd569cc"}, "downloads": -1, "filename": "PyHeap-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "1ae52a9274ad765e81450e3d4682dc22", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6", "size": 8364, "upload_time": "2020-01-13T03:55:49", "upload_time_iso_8601": "2020-01-13T03:55:49.380619Z", "url": "https://files.pythonhosted.org/packages/44/c8/8ba5e32fe507635bbec5a444ecd30cc66e259c85c9c882fd4cedcf7a2866/PyHeap-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "136659cd608238a2885d4cc553c79262", "sha256": "5b11c4e65aa0b5c60a84d610d39324c0913ec87407c46c84e543b6659bc9af21"}, "downloads": -1, "filename": "PyHeap-0.0.3.tar.gz", "has_sig": false, "md5_digest": "136659cd608238a2885d4cc553c79262", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5757, "upload_time": "2020-01-13T03:55:53", "upload_time_iso_8601": "2020-01-13T03:55:53.501197Z", "url": "https://files.pythonhosted.org/packages/ed/16/65d4b99f85ee9339b077528dd84e0bd7f58f51e93a46481b85ca3f3dc0cf/PyHeap-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ae52a9274ad765e81450e3d4682dc22", "sha256": "7b413c830748a94cf4686555590075fc1dac09871e8810797a6c250c4fd569cc"}, "downloads": -1, "filename": "PyHeap-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "1ae52a9274ad765e81450e3d4682dc22", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.6", "size": 8364, "upload_time": "2020-01-13T03:55:49", "upload_time_iso_8601": "2020-01-13T03:55:49.380619Z", "url": "https://files.pythonhosted.org/packages/44/c8/8ba5e32fe507635bbec5a444ecd30cc66e259c85c9c882fd4cedcf7a2866/PyHeap-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "136659cd608238a2885d4cc553c79262", "sha256": "5b11c4e65aa0b5c60a84d610d39324c0913ec87407c46c84e543b6659bc9af21"}, "downloads": -1, "filename": "PyHeap-0.0.3.tar.gz", "has_sig": false, "md5_digest": "136659cd608238a2885d4cc553c79262", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5757, "upload_time": "2020-01-13T03:55:53", "upload_time_iso_8601": "2020-01-13T03:55:53.501197Z", "url": "https://files.pythonhosted.org/packages/ed/16/65d4b99f85ee9339b077528dd84e0bd7f58f51e93a46481b85ca3f3dc0cf/PyHeap-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:27 2020"}