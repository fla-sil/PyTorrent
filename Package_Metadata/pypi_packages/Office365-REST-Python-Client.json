{"info": {"author": "Vadim Gremyachev", "author_email": "vvgrem@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries"], "description": "# About\nOffice 365 & Microsoft Graph Library for Python\n\n# Usage\n\n1.   [Installation](#Installation)\n1.   [Working with SharePoint API](#Working-with-SharePoint-API) \n2.   [Working with Outlook API](#Working-with-Outlook-API) \n3.   [Working with OneDrive API](#Working-with-OneDrive-API)    \n\n\n## Status\n\n[![Downloads](https://pepy.tech/badge/office365-rest-python-client)](https://pepy.tech/project/office365-rest-python-client)\n[![PyPI](https://img.shields.io/pypi/v/Office365-REST-Python-Client.svg)](https://pypi.python.org/pypi/Office365-REST-Python-Client)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/Office365-REST-Python-Client.svg)](https://pypi.python.org/pypi/Office365-REST-Python-Client/)\n[![Build Status](https://travis-ci.org/vgrem/Office365-REST-Python-Client.svg?branch=master)](https://travis-ci.org/vgrem/Office365-REST-Python-Client)\n\n# Installation\n\nUse pip:\n\n```\npip install Office365-REST-Python-Client\n```\n\n\n# Working with SharePoint API\n\nThe list of supported API versions: \n-   [SharePoint 2013 REST API](https://msdn.microsoft.com/en-us/library/office/jj860569.aspx) and above \n-   SharePoint Online & OneDrive for Business REST API\n\n#### Authentication\n\nThe following auth flows are supported:\n\n- app principals auth (refer [Granting access using SharePoint App-Only](https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/security-apponly-azureacs) for a details): `AuthenticationContext.ctx_auth.acquire_token_for_app(client_id, client_secret)`\n- user credentials auth: `AuthenticationContext.ctx_auth.acquire_token_for_user(username, password)`\n\n\n#### Examples\n \n\nThere are **two approaches** available to perform API queries:\n\n1. `ClientContext class` - where you target SharePoint resources such as `Web`, `ListItem` and etc (recommended)\n \n\n```\nfrom office365.runtime.auth.authentication_context import AuthenticationContext\nfrom office365.sharepoint.client_context import ClientContext\n\nctx_auth = AuthenticationContext(url)\nif ctx_auth.acquire_token_for_user(username, password):\n  ctx = ClientContext(url, ctx_auth)\n  web = ctx.web\n  ctx.load(web)\n  ctx.execute_query()\n  print \"Web title: {0}\".format(web.properties['Title'])\n\nelse:\n  print ctx_auth.get_last_error()\n```\n\n2. `ClientRequest class` - where you construct REST queries by specifying endpoint url, headers if required and payload (aka low level approach)\n\n   The example demonstrates how to read `Web` properties:\n   \n   \n\n```\nimport json\n\nfrom office365.runtime.auth.authentication_context import AuthenticationContext\nfrom office365.runtime.client_request import ClientRequest\nfrom office365.runtime.utilities.request_options import RequestOptions\n\nctx_auth = AuthenticationContext(url)\nif ctx_auth.acquire_token_for_user(username, password):\n  request = ClientRequest(ctx_auth)\n  options = RequestOptions(\"{0}/_api/web/\".format(url))\n  options.set_header('Accept', 'application/json')\n  options.set_header('Content-Type', 'application/json')\n  data = request.execute_request_direct(options)\n  s = json.loads(data.content)\n  web_title = s['Title']\n  print \"Web title: \" + web_title\nelse:\n  print ctx_auth.get_last_error()\n```\n\n\n# Working with Outlook API\n\nThe list of supported APIs:\n-   [Outlook Contacts REST API](https://msdn.microsoft.com/en-us/office/office365/api/contacts-rest-operations)\n-   [Outlook Calendar REST API](https://msdn.microsoft.com/en-us/office/office365/api/calendar-rest-operations)\n-   [Outlook Mail REST API](https://msdn.microsoft.com/en-us/office/office365/api/mail-rest-operations)\n\n\nSince Outlook REST APIs are available in both Microsoft Graph and the Outlook API endpoint, \nthe following clients are available:\n\n- `GraphClient` which targets Outlook `v2.0` version (*preferable* nowadays, refer [transition to Microsoft Graph-based Outlook REST API](https://docs.microsoft.com/en-us/outlook/rest/compare-graph-outlook) for a details)   \n- `OutlookClient` which targets Outlook `v1.0` version (not recommended for usage since `v1.0` version is being deprecated.)\n\n\n#### Authentication\n\n[ADAL Python](https://adal-python.readthedocs.io/en/latest/#) \nlibrary is utilized to authenticate users to Active Directory (AD) and obtain tokens\n\n\n#### Example\n\nThe example demonstrates how to send an email via [Microsoft Graph endpoint](https://docs.microsoft.com/en-us/graph/api/user-sendmail?view=graph-rest-1.0&tabs=http).\n\n> Note: access token is getting acquired  via [Client Credential flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow)\n\n```\ndef get_token(auth_ctx):\n    token = auth_ctx.acquire_token_with_client_credentials(\n        \"https://graph.microsoft.com\",\n        client_id,\n        client_secret)\n    return token\n\n\ntenant_name = \"contoso.onmicrosoft.com\"\nclient = GraphClient(tenant_name, get_token)\n\nmessage_payload = {\n    \"Message\": {\n        \"Subject\": \"Meet for lunch?\",\n        \"Body\": {\n            \"ContentType\": \"Text\",\n            \"Content\": \"The new cafeteria is open.\"\n        },\n        \"ToRecipients\": [\n            {\n                \"EmailAddress\": {\n                    \"Address\": \"jdoe@contoso.onmicrosoft.com\"\n                }\n            }\n        ]\n    },\n    \"SaveToSentItems\": \"false\"\n}\n\nlogin_name = \"mdoe@contoso.onmicrosoft.com\"\nclient.users[login_name].send_mail(message_payload)\nclient.execute_query()\n```\n\n\n# Working with OneDrive API\n\n#### Documentation \n\n[OneDrive Graph API reference](https://docs.microsoft.com/en-us/graph/api/resources/onedrive?view=graph-rest-1.0)\n\n#### Authentication\n\n[ADAL Python](https://adal-python.readthedocs.io/en/latest/#) \nlibrary is utilized to authenticate users to Active Directory (AD) and obtain tokens  \n\n#### Example \nThe example demonstrates how to print drive's url via [`list available drives` endpoint](https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/drive_list?view=odsp-graph-online)\n\n> Note: access token is getting acquired  via [Client Credential flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow)\n\n```\ndef get_token(auth_ctx):\n    \"\"\"Acquire token via client credential flow (ADAL Python library is utilized)\"\"\"\n    token = auth_ctx.acquire_token_with_client_credentials(\n        \"https://graph.microsoft.com\",\n        client_id,\n        client_secret)\n    return token\n\n\ntenant_name = \"contoso.onmicrosoft.com\"\nclient = GraphClient(tenant_name, get_token)\ndrives = client.drives\nclient.load(drives)\nclient.execute_query()\nfor drive in drives:\n    print(\"Drive url: {0}\".format(drive.web_url))\n```\n\n\n# Python Version\nPython `2.7 & 3.4\u20133.6` are supported.\n\n\n# Third Party Libraries and Dependencies\nThe following libraries will be installed when you install the client library:\n* [requests](https://github.com/kennethreitz/requests)\n* [adal](https://github.com/AzureAD/azure-activedirectory-library-for-python)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vgrem/Office365-REST-Python-Client", "keywords": "git", "license": "MIT", "maintainer": "Konrad G\u0105dek", "maintainer_email": "kgadek@gmail.com", "name": "Office365-REST-Python-Client", "package_url": "https://pypi.org/project/Office365-REST-Python-Client/", "platform": "", "project_url": "https://pypi.org/project/Office365-REST-Python-Client/", "project_urls": {"Homepage": "https://github.com/vgrem/Office365-REST-Python-Client"}, "release_url": "https://pypi.org/project/Office365-REST-Python-Client/2.1.7.post1/", "requires_dist": null, "requires_python": "", "summary": "Office 365 Library for Python", "version": "2.1.7.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>About</h1>\n<p>Office 365 &amp; Microsoft Graph Library for Python</p>\n<h1>Usage</h1>\n<ol>\n<li><a href=\"#Installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#Working-with-SharePoint-API\" rel=\"nofollow\">Working with SharePoint API</a></li>\n<li><a href=\"#Working-with-Outlook-API\" rel=\"nofollow\">Working with Outlook API</a></li>\n<li><a href=\"#Working-with-OneDrive-API\" rel=\"nofollow\">Working with OneDrive API</a></li>\n</ol>\n<h2>Status</h2>\n<p><a href=\"https://pepy.tech/project/office365-rest-python-client\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bff431a681ff9d1052bdc6d1cdbadb41cdf5bb39/68747470733a2f2f706570792e746563682f62616467652f6f66666963653336352d726573742d707974686f6e2d636c69656e74\"></a>\n<a href=\"https://pypi.python.org/pypi/Office365-REST-Python-Client\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96788686315c69611207199dda2d5d80f7231c70/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f4f66666963653336352d524553542d507974686f6e2d436c69656e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/Office365-REST-Python-Client/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72bdf2c59ca1e2d2d23b18bacf4f4d98862960f1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f4f66666963653336352d524553542d507974686f6e2d436c69656e742e737667\"></a>\n<a href=\"https://travis-ci.org/vgrem/Office365-REST-Python-Client\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb3979cefc9f1c76b5eeab820bb497f526789bf0/68747470733a2f2f7472617669732d63692e6f72672f766772656d2f4f66666963653336352d524553542d507974686f6e2d436c69656e742e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Installation</h1>\n<p>Use pip:</p>\n<pre><code>pip install Office365-REST-Python-Client\n</code></pre>\n<h1>Working with SharePoint API</h1>\n<p>The list of supported API versions:</p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/library/office/jj860569.aspx\" rel=\"nofollow\">SharePoint 2013 REST API</a> and above</li>\n<li>SharePoint Online &amp; OneDrive for Business REST API</li>\n</ul>\n<h4>Authentication</h4>\n<p>The following auth flows are supported:</p>\n<ul>\n<li>app principals auth (refer <a href=\"https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/security-apponly-azureacs\" rel=\"nofollow\">Granting access using SharePoint App-Only</a> for a details): <code>AuthenticationContext.ctx_auth.acquire_token_for_app(client_id, client_secret)</code></li>\n<li>user credentials auth: <code>AuthenticationContext.ctx_auth.acquire_token_for_user(username, password)</code></li>\n</ul>\n<h4>Examples</h4>\n<p>There are <strong>two approaches</strong> available to perform API queries:</p>\n<ol>\n<li><code>ClientContext class</code> - where you target SharePoint resources such as <code>Web</code>, <code>ListItem</code> and etc (recommended)</li>\n</ol>\n<pre><code>from office365.runtime.auth.authentication_context import AuthenticationContext\nfrom office365.sharepoint.client_context import ClientContext\n\nctx_auth = AuthenticationContext(url)\nif ctx_auth.acquire_token_for_user(username, password):\n  ctx = ClientContext(url, ctx_auth)\n  web = ctx.web\n  ctx.load(web)\n  ctx.execute_query()\n  print \"Web title: {0}\".format(web.properties['Title'])\n\nelse:\n  print ctx_auth.get_last_error()\n</code></pre>\n<ol>\n<li>\n<p><code>ClientRequest class</code> - where you construct REST queries by specifying endpoint url, headers if required and payload (aka low level approach)</p>\n<p>The example demonstrates how to read <code>Web</code> properties:</p>\n</li>\n</ol>\n<pre><code>import json\n\nfrom office365.runtime.auth.authentication_context import AuthenticationContext\nfrom office365.runtime.client_request import ClientRequest\nfrom office365.runtime.utilities.request_options import RequestOptions\n\nctx_auth = AuthenticationContext(url)\nif ctx_auth.acquire_token_for_user(username, password):\n  request = ClientRequest(ctx_auth)\n  options = RequestOptions(\"{0}/_api/web/\".format(url))\n  options.set_header('Accept', 'application/json')\n  options.set_header('Content-Type', 'application/json')\n  data = request.execute_request_direct(options)\n  s = json.loads(data.content)\n  web_title = s['Title']\n  print \"Web title: \" + web_title\nelse:\n  print ctx_auth.get_last_error()\n</code></pre>\n<h1>Working with Outlook API</h1>\n<p>The list of supported APIs:</p>\n<ul>\n<li><a href=\"https://msdn.microsoft.com/en-us/office/office365/api/contacts-rest-operations\" rel=\"nofollow\">Outlook Contacts REST API</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/office/office365/api/calendar-rest-operations\" rel=\"nofollow\">Outlook Calendar REST API</a></li>\n<li><a href=\"https://msdn.microsoft.com/en-us/office/office365/api/mail-rest-operations\" rel=\"nofollow\">Outlook Mail REST API</a></li>\n</ul>\n<p>Since Outlook REST APIs are available in both Microsoft Graph and the Outlook API endpoint,\nthe following clients are available:</p>\n<ul>\n<li><code>GraphClient</code> which targets Outlook <code>v2.0</code> version (<em>preferable</em> nowadays, refer <a href=\"https://docs.microsoft.com/en-us/outlook/rest/compare-graph-outlook\" rel=\"nofollow\">transition to Microsoft Graph-based Outlook REST API</a> for a details)</li>\n<li><code>OutlookClient</code> which targets Outlook <code>v1.0</code> version (not recommended for usage since <code>v1.0</code> version is being deprecated.)</li>\n</ul>\n<h4>Authentication</h4>\n<p><a href=\"https://adal-python.readthedocs.io/en/latest/#\" rel=\"nofollow\">ADAL Python</a>\nlibrary is utilized to authenticate users to Active Directory (AD) and obtain tokens</p>\n<h4>Example</h4>\n<p>The example demonstrates how to send an email via <a href=\"https://docs.microsoft.com/en-us/graph/api/user-sendmail?view=graph-rest-1.0&amp;tabs=http\" rel=\"nofollow\">Microsoft Graph endpoint</a>.</p>\n<blockquote>\n<p>Note: access token is getting acquired  via <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\" rel=\"nofollow\">Client Credential flow</a></p>\n</blockquote>\n<pre><code>def get_token(auth_ctx):\n    token = auth_ctx.acquire_token_with_client_credentials(\n        \"https://graph.microsoft.com\",\n        client_id,\n        client_secret)\n    return token\n\n\ntenant_name = \"contoso.onmicrosoft.com\"\nclient = GraphClient(tenant_name, get_token)\n\nmessage_payload = {\n    \"Message\": {\n        \"Subject\": \"Meet for lunch?\",\n        \"Body\": {\n            \"ContentType\": \"Text\",\n            \"Content\": \"The new cafeteria is open.\"\n        },\n        \"ToRecipients\": [\n            {\n                \"EmailAddress\": {\n                    \"Address\": \"jdoe@contoso.onmicrosoft.com\"\n                }\n            }\n        ]\n    },\n    \"SaveToSentItems\": \"false\"\n}\n\nlogin_name = \"mdoe@contoso.onmicrosoft.com\"\nclient.users[login_name].send_mail(message_payload)\nclient.execute_query()\n</code></pre>\n<h1>Working with OneDrive API</h1>\n<h4>Documentation</h4>\n<p><a href=\"https://docs.microsoft.com/en-us/graph/api/resources/onedrive?view=graph-rest-1.0\" rel=\"nofollow\">OneDrive Graph API reference</a></p>\n<h4>Authentication</h4>\n<p><a href=\"https://adal-python.readthedocs.io/en/latest/#\" rel=\"nofollow\">ADAL Python</a>\nlibrary is utilized to authenticate users to Active Directory (AD) and obtain tokens</p>\n<h4>Example</h4>\n<p>The example demonstrates how to print drive's url via <a href=\"https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/drive_list?view=odsp-graph-online\" rel=\"nofollow\"><code>list available drives</code> endpoint</a></p>\n<blockquote>\n<p>Note: access token is getting acquired  via <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\" rel=\"nofollow\">Client Credential flow</a></p>\n</blockquote>\n<pre><code>def get_token(auth_ctx):\n    \"\"\"Acquire token via client credential flow (ADAL Python library is utilized)\"\"\"\n    token = auth_ctx.acquire_token_with_client_credentials(\n        \"https://graph.microsoft.com\",\n        client_id,\n        client_secret)\n    return token\n\n\ntenant_name = \"contoso.onmicrosoft.com\"\nclient = GraphClient(tenant_name, get_token)\ndrives = client.drives\nclient.load(drives)\nclient.execute_query()\nfor drive in drives:\n    print(\"Drive url: {0}\".format(drive.web_url))\n</code></pre>\n<h1>Python Version</h1>\n<p>Python <code>2.7 &amp; 3.4\u20133.6</code> are supported.</p>\n<h1>Third Party Libraries and Dependencies</h1>\n<p>The following libraries will be installed when you install the client library:</p>\n<ul>\n<li><a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"https://github.com/AzureAD/azure-activedirectory-library-for-python\" rel=\"nofollow\">adal</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6770071, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2717bc83b3ff20d639539ffb5a9511f2", "sha256": "d4a9ee613a4fe29160162236265c62561468b88e454149c5222ff4c3ccba3037"}, "downloads": -1, "filename": "Office365-REST-Python-Client-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2717bc83b3ff20d639539ffb5a9511f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22501, "upload_time": "2017-02-14T15:56:53", "upload_time_iso_8601": "2017-02-14T15:56:53.504100Z", "url": "https://files.pythonhosted.org/packages/44/3d/4ed6d68fe383055166e2a14d62d82895f8ff5c470a99499785709d6714d9/Office365-REST-Python-Client-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "eae62a3f254e50d96337626a39f65a86", "sha256": "f860189f4e7261fee978610064f2f109899c107dc93eb0eedf9fd6b7779e5645"}, "downloads": -1, "filename": "Office365-REST-Python-Client-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eae62a3f254e50d96337626a39f65a86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23155, "upload_time": "2017-02-17T15:44:54", "upload_time_iso_8601": "2017-02-17T15:44:54.597896Z", "url": "https://files.pythonhosted.org/packages/af/4c/9b925825828a7d856c8475ad319d18410c3f504a9a0444dd0533dd23e6d9/Office365-REST-Python-Client-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1f06a45d7860c349c4d0abdaf5237177", "sha256": "4fd0db3321fab2b3e8584880485ba38e039ed940a52664825d965cbed2f49789"}, "downloads": -1, "filename": "Office365-REST-Python-Client-1.1.0.tar.gz", "has_sig": false, "md5_digest": "1f06a45d7860c349c4d0abdaf5237177", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23855, "upload_time": "2017-02-28T16:38:56", "upload_time_iso_8601": "2017-02-28T16:38:56.165331Z", "url": "https://files.pythonhosted.org/packages/bc/31/16bba484a58c745e01e5d51b2bd48a3b90291991ee99162f954bb653c295/Office365-REST-Python-Client-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "cad300b9a13eafa6b5125430d8f98836", "sha256": "583685919eb86ef57dcf42005a038ab894b6200eae223bd2d4c2b7b6e6019e83"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.0.0.tar.gz", "has_sig": false, "md5_digest": "cad300b9a13eafa6b5125430d8f98836", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23928, "upload_time": "2017-07-17T12:26:13", "upload_time_iso_8601": "2017-07-17T12:26:13.561614Z", "url": "https://files.pythonhosted.org/packages/6f/78/d73f25e299d0a6cfd2300eb98a8ada4bdf983be68c62614f2185b966f142/Office365-REST-Python-Client-2.0.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "a99fb9b1d883d0ff50f1473e0f20fb87", "sha256": "208244efed61a44a36add15e5dba7a7b65a96807e062de45d2c5f523e0dcd6bd"}, "downloads": -1, "filename": "Office365_REST_Python_Client-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a99fb9b1d883d0ff50f1473e0f20fb87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 67965, "upload_time": "2019-03-21T02:19:48", "upload_time_iso_8601": "2019-03-21T02:19:48.547996Z", "url": "https://files.pythonhosted.org/packages/ab/47/cb67bc20097c11fccd268e0df0050fad294aa942baad346d61189d0e0b9f/Office365_REST_Python_Client-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7a52a167b26049416d2fbc52c4d45bb", "sha256": "3c294f4e96297dc5d08ae0a58edaf038562109e7276e1e62c19cc37842ef9a71"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.1.tar.gz", "has_sig": false, "md5_digest": "a7a52a167b26049416d2fbc52c4d45bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29737, "upload_time": "2019-03-21T02:19:50", "upload_time_iso_8601": "2019-03-21T02:19:50.433150Z", "url": "https://files.pythonhosted.org/packages/23/2f/81bbbe8f6510c3c754568ec84167058cbb3dc45dea8e0895ae21ddaa465d/Office365-REST-Python-Client-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "d91e303452ab3f387555e532d1b5c7b6", "sha256": "470eb5d22ad51e6f0881c3af5e611c98eee48e854059ada4880a60c02d86e776"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.2.tar.gz", "has_sig": false, "md5_digest": "d91e303452ab3f387555e532d1b5c7b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32904, "upload_time": "2019-06-09T22:02:16", "upload_time_iso_8601": "2019-06-09T22:02:16.433910Z", "url": "https://files.pythonhosted.org/packages/f8/87/d64dd0fdac5fddf37b20df50bbc903ad0685a1275014de8ae93f1d784ae7/Office365-REST-Python-Client-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "8afda8bfdb9a4b76c1c906825f68c4a8", "sha256": "136c1c2bb0ea71bb189489bfb380375fa2edb7dd829c6c8fef0d7c4a6d45847c"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.3.tar.gz", "has_sig": false, "md5_digest": "8afda8bfdb9a4b76c1c906825f68c4a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34488, "upload_time": "2019-07-08T21:18:03", "upload_time_iso_8601": "2019-07-08T21:18:03.320294Z", "url": "https://files.pythonhosted.org/packages/04/fa/47595c067b6d95ffa52b0c81207267219d5033e58f77d03ccb7a546fa81a/Office365-REST-Python-Client-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "0aabf94427622eb74c64bceb9ab2adeb", "sha256": "68e7357738250bbbe29f2f57d9f2186e45c0cfe131326c3ed3605039b8e03769"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.4.tar.gz", "has_sig": false, "md5_digest": "0aabf94427622eb74c64bceb9ab2adeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37199, "upload_time": "2019-10-01T09:57:54", "upload_time_iso_8601": "2019-10-01T09:57:54.616771Z", "url": "https://files.pythonhosted.org/packages/b5/fe/ec9ccd194ab42f9c15a0ce5586f5dce8387c85522913ab01cf4b09c238ca/Office365-REST-Python-Client-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "173359e94cdecad0b8aa0484d216fc94", "sha256": "81942dfa9b59ec5b1d48994f418d18f2762674f0c02a11589583d392e0e21e4b"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.5.tar.gz", "has_sig": false, "md5_digest": "173359e94cdecad0b8aa0484d216fc94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40527, "upload_time": "2019-12-10T22:40:52", "upload_time_iso_8601": "2019-12-10T22:40:52.542783Z", "url": "https://files.pythonhosted.org/packages/b2/cb/703f72f1ae7c4719d6e813c0ec1a12020c4a93af018476955e433968fca4/Office365-REST-Python-Client-2.1.5.tar.gz", "yanked": false}], "2.1.6.post2": [{"comment_text": "", "digests": {"md5": "cf2453f0fb9b968b9330b8e36bf116df", "sha256": "4d6cfecf04536d940b2b88e6b031c0694be37f31993e03c77d662ead20e7db07"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.6.post2.tar.gz", "has_sig": false, "md5_digest": "cf2453f0fb9b968b9330b8e36bf116df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47729, "upload_time": "2020-03-08T01:36:09", "upload_time_iso_8601": "2020-03-08T01:36:09.953580Z", "url": "https://files.pythonhosted.org/packages/30/54/e09912ca85ed316a42c7b6afd8ccaf33b240562bac6903c3b579e261190a/Office365-REST-Python-Client-2.1.6.post2.tar.gz", "yanked": false}], "2.1.7.post1": [{"comment_text": "", "digests": {"md5": "ff9c40222002e245ea75a4a1bcf3d687", "sha256": "a1c26584465ed9dc1ab7be634eb0ac7430c1d3701610703d5a6f16d317961f54"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.7.post1.tar.gz", "has_sig": false, "md5_digest": "ff9c40222002e245ea75a4a1bcf3d687", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49826, "upload_time": "2020-03-08T01:44:56", "upload_time_iso_8601": "2020-03-08T01:44:56.346769Z", "url": "https://files.pythonhosted.org/packages/9d/10/dcd74e8a9c58be71229c4c0540ff1c063b0dce1448ca9695bd8ac432ef2d/Office365-REST-Python-Client-2.1.7.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff9c40222002e245ea75a4a1bcf3d687", "sha256": "a1c26584465ed9dc1ab7be634eb0ac7430c1d3701610703d5a6f16d317961f54"}, "downloads": -1, "filename": "Office365-REST-Python-Client-2.1.7.post1.tar.gz", "has_sig": false, "md5_digest": "ff9c40222002e245ea75a4a1bcf3d687", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49826, "upload_time": "2020-03-08T01:44:56", "upload_time_iso_8601": "2020-03-08T01:44:56.346769Z", "url": "https://files.pythonhosted.org/packages/9d/10/dcd74e8a9c58be71229c4c0540ff1c063b0dce1448ca9695bd8ac432ef2d/Office365-REST-Python-Client-2.1.7.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:58 2020"}