{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "sanitize_ml_labels\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip| |downloads|\n\nSimple python package to sanitize in a standard way ML-related labels.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install sanitize_ml_labels\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime get slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nWhy do I need this?\n-------------------\nSo you have some kind of plot and you have some ML-related labels.\nSince I always rename and sanitize them the same way, I have prepared\nthis package to always sanitize them in a standard fashion.\n\nUsage examples\n----------------------------------------------\nHere you have a couple of common examples: you have a set of metrics to normalize or a set of model names to normalize.\n\n.. code:: python\n\n    from sanitize_ml_labels import sanitize_ml_labels\n\n    # Example for metrics\n    labels = [\n        \"acc\",\n        \"loss\",\n        \"auroc\",\n        \"lr\"\n    ]\n\n    sanitize_ml_labels(labels)\n\n    # [\"Accuracy\", \"Loss\", \"AUROC\", \"Learning rate\"]\n\n    # Example for models\n    labels = [\n        \"vanilla mlp\",\n        \"vanilla cnn\",\n        \"vanilla ffnn\",\n        \"vanilla perceptron\"\n    ]\n\n    sanitize_ml_labels(labels)\n\n    # [\"MLP\", \"CNN\", \"FFNN\", \"Perceptron\"]\n\n\nExtra utilities\n---------------\nSince I always use metric sanitization alongside axis normalization, it is usefull to know which axis\nshould be maxed between zero and one to avoid any visualization bias to the metrics.\n\nFor this reason I have created the method :code:`is_normalized_metric`, which after having normalized the given metric\nvalidates it against known normalized metrics (metrics between 0 and 1, is there another name? I coldn't figure out a better one).\n\n.. code:: python\n\n    from sanitize_ml_labels import is_normalized_metric\n\n    is_normalized_metric(\"MSE\") # False\n    is_normalized_metric(\"acc\") # True\n    is_normalized_metric(\"accuracy\") # True\n    is_normalized_metric(\"AUROC\") # True\n    is_normalized_metric(\"auprc\") # True\n\n\nNew features and issues\n-----------------------\nAs always, for new features and issues you can either open a new issue and pull request.\nA pull request will always be the quicker way, but I'll look into the issues when I get the time.\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/sanitize_ml_labels.png\n   :target: https://travis-ci.org/LucaCappelletti94/sanitize_ml_labels\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_sanitize_ml_labels&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_sanitize_ml_labels\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_sanitize_ml_labels&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_sanitize_ml_labels\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_sanitize_ml_labels&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_sanitize_ml_labels\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/sanitize_ml_labels/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/sanitize_ml_labels?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/sanitize-ml-labels.svg\n    :target: https://badge.fury.io/py/sanitize-ml-labels\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/sanitize-ml-labels\n    :target: https://pepy.tech/badge/sanitize-ml-labels\n    :alt: Pypi total project downloads \n\n.. |codacy|  image:: https://api.codacy.com/project/badge/Grade/a60602ff54ac443fbc4aa3d016dbda48\n    :target: https://www.codacy.com/manual/LucaCappelletti94/sanitize_ml_labels?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/sanitize_ml_labels&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/042f787897c13cb78ddf/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/sanitize_ml_labels/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/042f787897c13cb78ddf/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/sanitize_ml_labels/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/sanitize_ml_labels", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sanitize-ml-labels", "package_url": "https://pypi.org/project/sanitize-ml-labels/", "platform": "", "project_url": "https://pypi.org/project/sanitize-ml-labels/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/sanitize_ml_labels"}, "release_url": "https://pypi.org/project/sanitize-ml-labels/1.0.9/", "requires_dist": null, "requires_python": "", "summary": "Simple python package to sanitize in a standard way ML-related labels.", "version": "1.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/sanitize_ml_labels\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/677d23ecc9860ffce7eecac7b357e2d34251ac2b/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f73616e6974697a655f6d6c5f6c6162656c732e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_sanitize_ml_labels\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f98db8175ef11d6ae9e4764a64258ea609f18b0b/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f73616e6974697a655f6d6c5f6c6162656c73266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_sanitize_ml_labels\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8578959714d75bc8da4e5e300c8314df4baf3903/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f73616e6974697a655f6d6c5f6c6162656c73266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/manual/LucaCappelletti94/sanitize_ml_labels?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/sanitize_ml_labels&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f14365f1774915a21bd93aed8878d7cf4be7d6f/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6136303630326666353461633434336662633461613364303136646264613438\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/sanitize_ml_labels/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de4eeb797bcbb95c42c83f2c656419e670f9f547/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f30343266373837383937633133636237386464662f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/sanitize-ml-labels\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/500331ab80762b6418afe2359cb7a16fa09d9a67/68747470733a2f2f62616467652e667572792e696f2f70792f73616e6974697a652d6d6c2d6c6162656c732e737667\"></a> <a href=\"https://pepy.tech/badge/sanitize-ml-labels\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbcb4abf4fa0b2d2ac4c6deacf4da86bc82bd191/68747470733a2f2f706570792e746563682f62616467652f73616e6974697a652d6d6c2d6c6162656c73\"></a></p>\n<p>Simple python package to sanitize in a standard way ML-related labels.</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install sanitize_ml_labels\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime get slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/sanitize_ml_labels?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc52415a7eb605fa48fd86d3a8357f0cf1742284/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f73616e6974697a655f6d6c5f6c6162656c732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_sanitize_ml_labels\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5191262c033dbe808915f4747b140884eb2765ef/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f73616e6974697a655f6d6c5f6c6162656c73266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/sanitize_ml_labels/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1f26e26218f8b4331efbe73b081d765eeadc837/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f30343266373837383937633133636237386464662f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"why-do-i-need-this\">\n<h2>Why do I need this?</h2>\n<p>So you have some kind of plot and you have some ML-related labels.\nSince I always rename and sanitize them the same way, I have prepared\nthis package to always sanitize them in a standard fashion.</p>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<p>Here you have a couple of common examples: you have a set of metrics to normalize or a set of model names to normalize.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sanitize_ml_labels</span> <span class=\"kn\">import</span> <span class=\"n\">sanitize_ml_labels</span>\n\n<span class=\"c1\"># Example for metrics</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"acc\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"loss\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"auroc\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"lr\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">sanitize_ml_labels</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># [\"Accuracy\", \"Loss\", \"AUROC\", \"Learning rate\"]</span>\n\n<span class=\"c1\"># Example for models</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"vanilla mlp\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"vanilla cnn\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"vanilla ffnn\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"vanilla perceptron\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">sanitize_ml_labels</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># [\"MLP\", \"CNN\", \"FFNN\", \"Perceptron\"]</span>\n</pre>\n</div>\n<div id=\"extra-utilities\">\n<h2>Extra utilities</h2>\n<p>Since I always use metric sanitization alongside axis normalization, it is usefull to know which axis\nshould be maxed between zero and one to avoid any visualization bias to the metrics.</p>\n<p>For this reason I have created the method <code>is_normalized_metric</code>, which after having normalized the given metric\nvalidates it against known normalized metrics (metrics between 0 and 1, is there another name? I coldn\u2019t figure out a better one).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sanitize_ml_labels</span> <span class=\"kn\">import</span> <span class=\"n\">is_normalized_metric</span>\n\n<span class=\"n\">is_normalized_metric</span><span class=\"p\">(</span><span class=\"s2\">\"MSE\"</span><span class=\"p\">)</span> <span class=\"c1\"># False</span>\n<span class=\"n\">is_normalized_metric</span><span class=\"p\">(</span><span class=\"s2\">\"acc\"</span><span class=\"p\">)</span> <span class=\"c1\"># True</span>\n<span class=\"n\">is_normalized_metric</span><span class=\"p\">(</span><span class=\"s2\">\"accuracy\"</span><span class=\"p\">)</span> <span class=\"c1\"># True</span>\n<span class=\"n\">is_normalized_metric</span><span class=\"p\">(</span><span class=\"s2\">\"AUROC\"</span><span class=\"p\">)</span> <span class=\"c1\"># True</span>\n<span class=\"n\">is_normalized_metric</span><span class=\"p\">(</span><span class=\"s2\">\"auprc\"</span><span class=\"p\">)</span> <span class=\"c1\"># True</span>\n</pre>\n</div>\n<div id=\"new-features-and-issues\">\n<h2>New features and issues</h2>\n<p>As always, for new features and issues you can either open a new issue and pull request.\nA pull request will always be the quicker way, but I\u2019ll look into the issues when I get the time.</p>\n</div>\n\n          </div>"}, "last_serial": 6776214, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "05501404a346f13c0cbf3c93f0db2a43", "sha256": "13cb251a3ccebc5719cb7940567f8ab0237cbf9b6975ffe2d25375a1e224f89e"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.0.tar.gz", "has_sig": false, "md5_digest": "05501404a346f13c0cbf3c93f0db2a43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4212, "upload_time": "2019-11-17T17:29:11", "upload_time_iso_8601": "2019-11-17T17:29:11.593383Z", "url": "https://files.pythonhosted.org/packages/69/e4/f24f519fe9cc15727203040e9242e774f65fcaf9d0a6e00fbf2c5a62d41a/sanitize_ml_labels-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "844fa0a3fd81d20cf924e855e3be0657", "sha256": "23548e8179a92594ed3140e3c6ae58fbc7f65899ccde7bb770073fe0ff7dd272"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.1.tar.gz", "has_sig": false, "md5_digest": "844fa0a3fd81d20cf924e855e3be0657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4616, "upload_time": "2019-11-17T17:35:51", "upload_time_iso_8601": "2019-11-17T17:35:51.483350Z", "url": "https://files.pythonhosted.org/packages/58/dc/f1e90d7f2dacda133f81d8b6674ffcef16972d52e7394ef9531be8d55fed/sanitize_ml_labels-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "32e5748205c81e82d34227f9ed480c8e", "sha256": "8fc22e8e4270b663b5537f53f8d213f3a1e29118ce626f51730ba3ef1c12cebf"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.2.tar.gz", "has_sig": false, "md5_digest": "32e5748205c81e82d34227f9ed480c8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4647, "upload_time": "2019-11-17T17:46:45", "upload_time_iso_8601": "2019-11-17T17:46:45.257455Z", "url": "https://files.pythonhosted.org/packages/e8/71/09d85269fea4c2e02196cc4ef8bd393631f318bf84a1b61abbe78fc0ab55/sanitize_ml_labels-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "fc3dc70e022768ad1f773e306ab70b0a", "sha256": "ae6b434b0eb6abc75a958d568b6e6936895bee985e286c8bdd62ac741729ad30"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.3.tar.gz", "has_sig": false, "md5_digest": "fc3dc70e022768ad1f773e306ab70b0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5296, "upload_time": "2019-11-17T18:16:40", "upload_time_iso_8601": "2019-11-17T18:16:40.965409Z", "url": "https://files.pythonhosted.org/packages/25/15/6c5fbc63d2bd42df6036b7c44d43226d53b81ba808332c32d8fac984f92b/sanitize_ml_labels-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "25842f4e28b184e07af36f883f1230ed", "sha256": "945c31dca98de106a731047b729269985778756729eb035f0dee95e4d9139fd8"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.4.tar.gz", "has_sig": false, "md5_digest": "25842f4e28b184e07af36f883f1230ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5334, "upload_time": "2019-11-17T18:23:13", "upload_time_iso_8601": "2019-11-17T18:23:13.920141Z", "url": "https://files.pythonhosted.org/packages/db/c1/23fca4bc4bba52cae8c3c2cd214571eecd0c8bb025100b8eabcefc6f4679/sanitize_ml_labels-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7fe12e1c073b108aa886a4dbc5fd5cd4", "sha256": "b9dee849cb1ae16c7d57905681ef9808323689b33f1bcf9910252d32dc9fff9b"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7fe12e1c073b108aa886a4dbc5fd5cd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5380, "upload_time": "2019-11-17T18:41:24", "upload_time_iso_8601": "2019-11-17T18:41:24.419922Z", "url": "https://files.pythonhosted.org/packages/9d/ff/fc7e91ac494dfedeba5d5e733c897c5c5c99221c7c7264b455f1a26a7425/sanitize_ml_labels-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "d4fc2f39cdad46cd92c92630ccdb07ad", "sha256": "b319a52387aa3957d9c77354f15fed857ee350775be2083d3bb3cdc204cde42c"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.6.tar.gz", "has_sig": false, "md5_digest": "d4fc2f39cdad46cd92c92630ccdb07ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5474, "upload_time": "2019-11-17T18:58:43", "upload_time_iso_8601": "2019-11-17T18:58:43.844571Z", "url": "https://files.pythonhosted.org/packages/7f/d8/57b9e51d8bfe279bb3de1f29fe1ae7719a59083ecd082b47bc357cc51d6f/sanitize_ml_labels-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "b9c0c1d2e9fd038011fa64130599cc15", "sha256": "c46ce871ff3c29ff55c6ac28b2a7901c8482de3b3631a53e5d70e0ea71d87683"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.7.tar.gz", "has_sig": false, "md5_digest": "b9c0c1d2e9fd038011fa64130599cc15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5518, "upload_time": "2020-01-19T14:10:02", "upload_time_iso_8601": "2020-01-19T14:10:02.549442Z", "url": "https://files.pythonhosted.org/packages/14/2f/87ed254eee47fdef4fd5b31e6ab67c57ff15d2f4a4b00abee238c9f8543a/sanitize_ml_labels-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "7d7a572fd7fea644db5b7b6cbf1322ab", "sha256": "c2361411e44f7c3882926c7c53ef135f022dd3e0860dcb571d6ed8e99c40a4fc"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.8.tar.gz", "has_sig": false, "md5_digest": "7d7a572fd7fea644db5b7b6cbf1322ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5603, "upload_time": "2020-02-23T15:30:47", "upload_time_iso_8601": "2020-02-23T15:30:47.038047Z", "url": "https://files.pythonhosted.org/packages/79/f2/2387ad8739d68d0ce7409bb5ed2d14c93b30736b4ae09a6eb13aa74294a5/sanitize_ml_labels-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "b0b43a946700ee511380ed55d739095b", "sha256": "2ee27f838b5256356c5ed7b5aa9790d35cf799c6b4f640aeadc98aab79b91e44"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.9.tar.gz", "has_sig": false, "md5_digest": "b0b43a946700ee511380ed55d739095b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5702, "upload_time": "2020-03-09T10:47:24", "upload_time_iso_8601": "2020-03-09T10:47:24.676616Z", "url": "https://files.pythonhosted.org/packages/64/f5/7904f0cb0146b8c9dd3d43c7a652be09be763d7c9fff76d05b8a01cef197/sanitize_ml_labels-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0b43a946700ee511380ed55d739095b", "sha256": "2ee27f838b5256356c5ed7b5aa9790d35cf799c6b4f640aeadc98aab79b91e44"}, "downloads": -1, "filename": "sanitize_ml_labels-1.0.9.tar.gz", "has_sig": false, "md5_digest": "b0b43a946700ee511380ed55d739095b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5702, "upload_time": "2020-03-09T10:47:24", "upload_time_iso_8601": "2020-03-09T10:47:24.676616Z", "url": "https://files.pythonhosted.org/packages/64/f5/7904f0cb0146b8c9dd3d43c7a652be09be763d7c9fff76d05b8a01cef197/sanitize_ml_labels-1.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:40 2020"}