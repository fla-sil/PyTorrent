{"info": {"author": "Robin 'r0w' Weiland", "author_email": "robin.weiland@gmx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.8", "Topic :: Software Development"], "description": "\n# TrayApp\n\n**based on Moses Palm\u00c3\u00a9r's [_pystray_](https://pypi.org/project/pystray/) library!**\n\nSimple library for creating system tray applications.\n\n[![PyPI version](https://badge.fury.io/py/trayapp.svg)](https://badge.fury.io/py/trayapp)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](http://choosealicense.com/licenses/mit/)\n\n\n### Usage\n\n    with TrayApp(name='Test',  # the little tooltip, seen when hovering over the icon\n                 icon_path=Path('../path/to/the/image.png'),  # anything that can be transformed into a PIL.Image\n                 icon_size=(256, 256,)  # size to create the thumbnail\n                 ) as app:\n\n        # create the menu shown when icon gets right-clicked here\n\n        app.add_button(text='hello world',\n                       action=print,  # method to call when clicked\n                       args=('hello world',),  # arguments, optional, in a tuple\n                       # determines wheter the function gets called when the icon is left-clicked\n                       # optional, default to False, can be obviously only used once per app\n                       default=True  \n                       )\n\n        app.add_separator()  # well...\n\n        with app.add_submenu(text='SubMenu') as submenu:  # submenues can be created by using a context manager within\n\n            with submenu.add_submenu(text='first subsub') as first_sub_sub:  # and recursivly as well\n                first_sub_sub.add_button(text='1.1', action=print, args=('1.1',))\n                first_sub_sub.add_button(text='1.2', action=print, args=('1.2',))\n\n            with submenu.add_submenu(text='second susub') as second_sub_sub:\n                second_sub_sub.add_button(text='2.1', action=print, args=('2.1',))\n                second_sub_sub.add_button(text='2.2', action=print, args=('2.2',))\n\n            # any add_button(), add_separator(), add_submenu(), add_radiobuttongroup() can be used here\n            # just remember to add them to the right submenu        \n\n        app.add_separator()\n\n        # a RadioButtonGroup is a group of buttons which can be used to select something\n        # trying it out might be the best way to understand it\n        with app.add_radiobuttongroup() as rbg:  # used with a contextmanager as well\n            rbg.add(text='hello')\n            rbg.add(text='world', selected=True)  # selected determines the item which is selected on creation\n\nRadioButtonGroup example:\n\n    items = (\n            'hello',\n            'world',\n            'this',\n            'is',\n            'just',\n            'an',\n            'example',\n        )\n\n    # you NEED to provide the group itself since just state would be by value\n    def print_selected(rbg): print(items[rbg.state])\n\n    selected_item = 3  # saved outside and updated when the app is closed\n\n    with TrayApp(name='Test',\n                 icon_path=Path(r'C:\\Users\\robin\\Documents\\Private\\Python\\trayPy\\data\\test.png'),\n                 icon_size=(256, 256,)) as app:\n\n        with app.add_radiobuttongroup() as rbg:\n            for index, item in enumerate(items):\n                rbg.add(text=item, selected=index == selected_item)\n\n        # to check if it works\n        app.add_button(text='print the selected', action=print_selected, args=(rbg,), default=False)\n\n\n### License\n\nMIT, see the LICENSE file\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RoW171/trayPy", "keywords": "systemtray,tray,app", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "trayapp", "package_url": "https://pypi.org/project/trayapp/", "platform": "", "project_url": "https://pypi.org/project/trayapp/", "project_urls": {"Homepage": "https://github.com/RoW171/trayPy"}, "release_url": "https://pypi.org/project/trayapp/0.1.4/", "requires_dist": null, "requires_python": ">=3.8", "summary": "Library for creating system tray applications, based on Moses Palm\u00e9r's 'pystray' library", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TrayApp</h1>\n<p><strong>based on Moses Palm\u00c3\u00a9r's <a href=\"https://pypi.org/project/pystray/\" rel=\"nofollow\"><em>pystray</em></a> library!</strong></p>\n<p>Simple library for creating system tray applications.</p>\n<p><a href=\"https://badge.fury.io/py/trayapp\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d51e15d6081cee0c193efcfae8b6a29ad326a933/68747470733a2f2f62616467652e667572792e696f2f70792f747261796170702e737667\"></a>\n<a href=\"http://choosealicense.com/licenses/mit/\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e5be039daf9eba6b6bc47b88defd227ac24d66b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174\"></a></p>\n<h3>Usage</h3>\n<pre><code>with TrayApp(name='Test',  # the little tooltip, seen when hovering over the icon\n             icon_path=Path('../path/to/the/image.png'),  # anything that can be transformed into a PIL.Image\n             icon_size=(256, 256,)  # size to create the thumbnail\n             ) as app:\n\n    # create the menu shown when icon gets right-clicked here\n\n    app.add_button(text='hello world',\n                   action=print,  # method to call when clicked\n                   args=('hello world',),  # arguments, optional, in a tuple\n                   # determines wheter the function gets called when the icon is left-clicked\n                   # optional, default to False, can be obviously only used once per app\n                   default=True  \n                   )\n\n    app.add_separator()  # well...\n\n    with app.add_submenu(text='SubMenu') as submenu:  # submenues can be created by using a context manager within\n\n        with submenu.add_submenu(text='first subsub') as first_sub_sub:  # and recursivly as well\n            first_sub_sub.add_button(text='1.1', action=print, args=('1.1',))\n            first_sub_sub.add_button(text='1.2', action=print, args=('1.2',))\n\n        with submenu.add_submenu(text='second susub') as second_sub_sub:\n            second_sub_sub.add_button(text='2.1', action=print, args=('2.1',))\n            second_sub_sub.add_button(text='2.2', action=print, args=('2.2',))\n\n        # any add_button(), add_separator(), add_submenu(), add_radiobuttongroup() can be used here\n        # just remember to add them to the right submenu        \n\n    app.add_separator()\n\n    # a RadioButtonGroup is a group of buttons which can be used to select something\n    # trying it out might be the best way to understand it\n    with app.add_radiobuttongroup() as rbg:  # used with a contextmanager as well\n        rbg.add(text='hello')\n        rbg.add(text='world', selected=True)  # selected determines the item which is selected on creation\n</code></pre>\n<p>RadioButtonGroup example:</p>\n<pre><code>items = (\n        'hello',\n        'world',\n        'this',\n        'is',\n        'just',\n        'an',\n        'example',\n    )\n\n# you NEED to provide the group itself since just state would be by value\ndef print_selected(rbg): print(items[rbg.state])\n\nselected_item = 3  # saved outside and updated when the app is closed\n\nwith TrayApp(name='Test',\n             icon_path=Path(r'C:\\Users\\robin\\Documents\\Private\\Python\\trayPy\\data\\test.png'),\n             icon_size=(256, 256,)) as app:\n\n    with app.add_radiobuttongroup() as rbg:\n        for index, item in enumerate(items):\n            rbg.add(text=item, selected=index == selected_item)\n\n    # to check if it works\n    app.add_button(text='print the selected', action=print_selected, args=(rbg,), default=False)\n</code></pre>\n<h3>License</h3>\n<p>MIT, see the LICENSE file</p>\n\n          </div>"}, "last_serial": 6952608, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8cf04f2d0548e657ef5539d97bcba511", "sha256": "654cfcee18e26a707fff63ca8fa7472303bf4ebd9409b360d90e7809e94e803a"}, "downloads": -1, "filename": "trayapp-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8cf04f2d0548e657ef5539d97bcba511", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 7357, "upload_time": "2020-03-04T01:38:33", "upload_time_iso_8601": "2020-03-04T01:38:33.375540Z", "url": "https://files.pythonhosted.org/packages/58/da/76c83bce2a06f0be65aaa0669a1b4a8413a584e5c7c1547d141921a4d2f7/trayapp-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53d4fbf43e626b6304ee60b1a2da2626", "sha256": "991d1db35a36cf9d9f6c324a8955131a0597157182e76b21c3b7719cba7748ab"}, "downloads": -1, "filename": "trayapp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "53d4fbf43e626b6304ee60b1a2da2626", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5180, "upload_time": "2020-03-04T01:38:35", "upload_time_iso_8601": "2020-03-04T01:38:35.345074Z", "url": "https://files.pythonhosted.org/packages/5d/e6/b57dc344d92b4baf44b2878bc0c9291d00d81b841753ef73af53223beaa1/trayapp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9c99341923cd343ed769b1b8b3dde639", "sha256": "81e6fe7cbbd9b91b57a1129cf8ec2e7954ea91dcdd9bdff6e2d6d2b753a79af0"}, "downloads": -1, "filename": "trayapp-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9c99341923cd343ed769b1b8b3dde639", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8188, "upload_time": "2020-03-09T11:03:04", "upload_time_iso_8601": "2020-03-09T11:03:04.946132Z", "url": "https://files.pythonhosted.org/packages/05/c2/c990bd9724be6fc17fdbddc92e1823f06e507c24a8ef114f555c8ad696ba/trayapp-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75c9e83bab405a9a49c5f22ef5362048", "sha256": "8e2c5e93ae125d289289aaa0524c453c60eb4dcb1e3311f1c550edca32e629a8"}, "downloads": -1, "filename": "trayapp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "75c9e83bab405a9a49c5f22ef5362048", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5463, "upload_time": "2020-03-09T11:03:07", "upload_time_iso_8601": "2020-03-09T11:03:07.013607Z", "url": "https://files.pythonhosted.org/packages/64/ce/590c44d8b475d6c1113d990434a4dd0ef6f34387dfb0e2aaf4384c29b5c7/trayapp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d66b61f19fc0938f361dc70672061e5f", "sha256": "c3bf99ad06804d2c76c528dd0a563a21e1e7dd015e8c0e524c06165361a56ebc"}, "downloads": -1, "filename": "trayapp-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d66b61f19fc0938f361dc70672061e5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8276, "upload_time": "2020-04-04T18:38:21", "upload_time_iso_8601": "2020-04-04T18:38:21.787158Z", "url": "https://files.pythonhosted.org/packages/da/29/312a3c9db1015d093c24a5f7fbcff361fdd0d12ddb7014006451d1fffc46/trayapp-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6367b60bdc44b818bc97126933fab656", "sha256": "326ea7ef12159a93999ab485c21f5367006e2f383aa909302ee96ff9552be095"}, "downloads": -1, "filename": "trayapp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6367b60bdc44b818bc97126933fab656", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5678, "upload_time": "2020-04-04T18:38:23", "upload_time_iso_8601": "2020-04-04T18:38:23.977203Z", "url": "https://files.pythonhosted.org/packages/37/5a/9e728fe19c45bcff559e99d626a4dd86bfca00bbc7da54c250d59a700502/trayapp-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e54964bd83e36bc112f435fd82b457b4", "sha256": "61a6109c97904ce6c439bbc0b7a758e367e307de93032ceac76912dd29548725"}, "downloads": -1, "filename": "trayapp-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e54964bd83e36bc112f435fd82b457b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8280, "upload_time": "2020-04-04T20:00:33", "upload_time_iso_8601": "2020-04-04T20:00:33.998587Z", "url": "https://files.pythonhosted.org/packages/7d/63/780975f465b4654f7beebf45c21b028fbeb49c48967ea8cbe04cde7ab0d0/trayapp-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14687b675c11e1e8fa876acc674e12c1", "sha256": "8d0d18be1e0f2f9a7e350557d2fbebd05bc25007f9fb8f4c3c092d9393501b6a"}, "downloads": -1, "filename": "trayapp-0.1.3.tar.gz", "has_sig": false, "md5_digest": "14687b675c11e1e8fa876acc674e12c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5659, "upload_time": "2020-04-04T20:00:35", "upload_time_iso_8601": "2020-04-04T20:00:35.286855Z", "url": "https://files.pythonhosted.org/packages/2b/13/507a746bd56cf9b3df4b65ca7a82f632c772c730784562f70edbf7e88a78/trayapp-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4ea5e5d6eec46905dba96baa0ae673dc", "sha256": "7deb2dc585119e9dc179c90c51ded0bdee42b6b7c68d6a0cedd59da5173e2bfa"}, "downloads": -1, "filename": "trayapp-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ea5e5d6eec46905dba96baa0ae673dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8288, "upload_time": "2020-04-04T20:15:39", "upload_time_iso_8601": "2020-04-04T20:15:39.857840Z", "url": "https://files.pythonhosted.org/packages/53/4b/304ad62174daabfa620caa5cd48adcfc20e4bed0f885bd8d4b7df23195c9/trayapp-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ec26f11862bf6a1e20f68ec8a8851e0", "sha256": "9127053184db9b4658280b0f3fd5778b9e8134391b3b0b6bab275bbd456f0bd9"}, "downloads": -1, "filename": "trayapp-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7ec26f11862bf6a1e20f68ec8a8851e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5672, "upload_time": "2020-04-04T20:15:40", "upload_time_iso_8601": "2020-04-04T20:15:40.870340Z", "url": "https://files.pythonhosted.org/packages/57/b1/e7149488b49a09ec0c9089706d2698855fb8ce3f31f4d48431427710db70/trayapp-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ea5e5d6eec46905dba96baa0ae673dc", "sha256": "7deb2dc585119e9dc179c90c51ded0bdee42b6b7c68d6a0cedd59da5173e2bfa"}, "downloads": -1, "filename": "trayapp-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ea5e5d6eec46905dba96baa0ae673dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 8288, "upload_time": "2020-04-04T20:15:39", "upload_time_iso_8601": "2020-04-04T20:15:39.857840Z", "url": "https://files.pythonhosted.org/packages/53/4b/304ad62174daabfa620caa5cd48adcfc20e4bed0f885bd8d4b7df23195c9/trayapp-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ec26f11862bf6a1e20f68ec8a8851e0", "sha256": "9127053184db9b4658280b0f3fd5778b9e8134391b3b0b6bab275bbd456f0bd9"}, "downloads": -1, "filename": "trayapp-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7ec26f11862bf6a1e20f68ec8a8851e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5672, "upload_time": "2020-04-04T20:15:40", "upload_time_iso_8601": "2020-04-04T20:15:40.870340Z", "url": "https://files.pythonhosted.org/packages/57/b1/e7149488b49a09ec0c9089706d2698855fb8ce3f31f4d48431427710db70/trayapp-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:48 2020"}