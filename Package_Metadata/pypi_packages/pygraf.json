{"info": {"author": "Panarin Yura", "author_email": "dw.livion@yandex.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: Python Software Foundation License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Communications :: Email", "Topic :: Office/Business", "Topic :: Software Development :: Bug Tracking"], "description": "Supports:\r\n*************\r\n**Python**:Python 2.6+\r\n\r\n**Author**: dw.livion@yandex.ru\r\n\r\n\r\nInstall:\r\n*************\r\n.. code:: bash\r\n\r\n    $ pip install pygraf\r\n\r\nor\r\n\r\n.. code:: bash\r\n\r\n    $ pip3 install pygraf\r\n\r\n\r\nCommand List:\r\n*************\r\n\r\n\r\n- *graph=pygraf.graf(n,mas)*     \r\n- *graph.check_orient()*\r\n- *graph.dfs(v,0)* \r\n- *graph.print_dfs()*\r\n- *graph.comp(True/False)*\r\n- *graph.minwayves_wihtout_cicly(v,u)*\r\n- *graph.minwayprint_wihtout_cicly(v,u)*\r\n- *graph.add_rebro(v,u,c)*\r\n- *graph.del_rebro(v,u)*\r\n\r\n\r\npygraf.graf(n,mas)\r\n******************\r\n1. n - count of point\r\n2. mas - massive of [First point,Second point,Cost]\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"python;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[1,3,4]])\r\n\r\ngraph.check_orient()\r\n********************\r\nChecking directed graph\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[1,3,4]])\r\n   graph.check_orient()#return true - Directed; False - Undirected\r\n\r\ngraph.dfs(v,0)\r\n********************\r\nStarting DFS algoritm from v-point\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\r\n   graph.dfs(2,0)#Nothing return\r\n\r\ngraph.print_dfs()\r\n********************\r\nReturn result DFS algoritm from v-point\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\r\n   graph.dfs(2,0)#Nothing return\r\n   print(graph.print_dfs())#print [False,True,True]\r\n\r\ngraph.comp(True/False)\r\n************************\r\nOnly for Undirected graph, if graph directed return False\r\n\r\nif True:\r\n\r\nReturn Connected component and List all component:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[2,1],[2,3],[3,1],[1,3],[1,2],[3,2]])\r\n   print(graph.comp(True))#print \"1->2\" \"1->3\" \"1\"\r\n\r\nif False:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(5,[[2,1],[2,3],[3,1],[1,3],[1,2],[3,2],[4,5],[5,4]])\r\n   print(graph.comp(False))#print \"2\"\r\n\r\n\r\ngraph.minwayves_wihtout_cicly(v,u)\r\n**********************************\r\nPrint min-cost from v to u\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\r\n   graph.minwayves_wihtout_cicly(2,3)#print \"4\"\r\n\r\ngraph.minwayprint_wihtout_cicly(v,u)\r\n***************************************\r\nPrint min-cost from v to u\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\r\n   graph.minwayprint_wihtout_cicly(2,3)#print \"2 3\"\r\n\r\ngraph.add_rebro(v,u,c)\r\n******************************\r\nAdd path from \"v\" to \"u\" cost \"c\"\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\r\n   graph.add_rebro(2,1,4)#add path from 2 to 1 cost 4\r\n\r\ngraph.del_rebro(v,u)\r\n********************\r\nDelete path from \"v\" to \"u\"\r\n\r\nExample init graph:\r\n\r\n.. parsed-literal::\r\n   :class: \"code;\"\r\n\r\n   graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\r\n   graph.del_rebro(2,3)#delete path from \"2\" to \"3\"", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PxyUp/pygraf", "keywords": "Graf,python,Graph", "license": "BSD,Apache", "maintainer": "", "maintainer_email": "", "name": "pygraf", "package_url": "https://pypi.org/project/pygraf/", "platform": "Python 2.6+", "project_url": "https://pypi.org/project/pygraf/", "project_urls": {"Homepage": "https://github.com/PxyUp/pygraf"}, "release_url": "https://pypi.org/project/pygraf/1.02/", "requires_dist": null, "requires_python": null, "summary": "Python Graph library", "version": "1.02", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"supports\">\n<h2>Supports:</h2>\n<p><strong>Python</strong>:Python 2.6+</p>\n<p><strong>Author</strong>: <a href=\"mailto:dw.livion%40yandex.ru\">dw<span>.</span>livion<span>@</span>yandex<span>.</span>ru</a></p>\n</div>\n<div id=\"install\">\n<h2>Install:</h2>\n<pre>$ pip install pygraf\n</pre>\n<p>or</p>\n<pre>$ pip3 install pygraf\n</pre>\n</div>\n<div id=\"command-list\">\n<h2>Command List:</h2>\n<ul>\n<li><em>graph=pygraf.graf(n,mas)</em></li>\n<li><em>graph.check_orient()</em></li>\n<li><em>graph.dfs(v,0)</em></li>\n<li><em>graph.print_dfs()</em></li>\n<li><em>graph.comp(True/False)</em></li>\n<li><em>graph.minwayves_wihtout_cicly(v,u)</em></li>\n<li><em>graph.minwayprint_wihtout_cicly(v,u)</em></li>\n<li><em>graph.add_rebro(v,u,c)</em></li>\n<li><em>graph.del_rebro(v,u)</em></li>\n</ul>\n</div>\n<div id=\"pygraf-graf-n-mas\">\n<h2>pygraf.graf(n,mas)</h2>\n<ol>\n<li>n - count of point</li>\n<li>mas - massive of [First point,Second point,Cost]</li>\n</ol>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[1,3,4]])\n</pre>\n</div>\n<div id=\"graph-check-orient\">\n<h2>graph.check_orient()</h2>\n<p>Checking directed graph</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[1,3,4]])\ngraph.check_orient()#return true - Directed; False - Undirected\n</pre>\n</div>\n<div id=\"graph-dfs-v-0\">\n<h2>graph.dfs(v,0)</h2>\n<p>Starting DFS algoritm from v-point</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\ngraph.dfs(2,0)#Nothing return\n</pre>\n</div>\n<div id=\"graph-print-dfs\">\n<h2>graph.print_dfs()</h2>\n<p>Return result DFS algoritm from v-point</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\ngraph.dfs(2,0)#Nothing return\nprint(graph.print_dfs())#print [False,True,True]\n</pre>\n</div>\n<div id=\"graph-comp-true-false\">\n<h2>graph.comp(True/False)</h2>\n<p>Only for Undirected graph, if graph directed return False</p>\n<p>if True:</p>\n<p>Return Connected component and List all component:</p>\n<pre>graph=pygraf.graf(3,[[2,1],[2,3],[3,1],[1,3],[1,2],[3,2]])\nprint(graph.comp(True))#print \"1-&gt;2\" \"1-&gt;3\" \"1\"\n</pre>\n<p>if False:</p>\n<pre>graph=pygraf.graf(5,[[2,1],[2,3],[3,1],[1,3],[1,2],[3,2],[4,5],[5,4]])\nprint(graph.comp(False))#print \"2\"\n</pre>\n</div>\n<div id=\"graph-minwayves-wihtout-cicly-v-u\">\n<h2>graph.minwayves_wihtout_cicly(v,u)</h2>\n<p>Print min-cost from v to u</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\ngraph.minwayves_wihtout_cicly(2,3)#print \"4\"\n</pre>\n</div>\n<div id=\"graph-minwayprint-wihtout-cicly-v-u\">\n<h2>graph.minwayprint_wihtout_cicly(v,u)</h2>\n<p>Print min-cost from v to u</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\ngraph.minwayprint_wihtout_cicly(2,3)#print \"2 3\"\n</pre>\n</div>\n<div id=\"graph-add-rebro-v-u-c\">\n<h2>graph.add_rebro(v,u,c)</h2>\n<p>Add path from \u201cv\u201d to \u201cu\u201d cost \u201cc\u201d</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\ngraph.add_rebro(2,1,4)#add path from 2 to 1 cost 4\n</pre>\n</div>\n<div id=\"graph-del-rebro-v-u\">\n<h2>graph.del_rebro(v,u)</h2>\n<p>Delete path from \u201cv\u201d to \u201cu\u201d</p>\n<p>Example init graph:</p>\n<pre>graph=pygraf.graf(3,[[1,2,2],[2,3,4]])\ngraph.del_rebro(2,3)#delete path from \"2\" to \"3\"\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1770366, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "ecf1e2908a8f8aed479f98983229329d", "sha256": "cbc4470bba24e9733fac8b1b209cd2065ff39269d725c64b095e1b3f8f0ffbab"}, "downloads": -1, "filename": "pygraf-1.0.tar.gz", "has_sig": false, "md5_digest": "ecf1e2908a8f8aed479f98983229329d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2094, "upload_time": "2015-10-14T20:50:25", "upload_time_iso_8601": "2015-10-14T20:50:25.651077Z", "url": "https://files.pythonhosted.org/packages/b9/c0/29f68146a8e5e9dd3bfc443005b94cb8df1f6d3bf0a0d4bf5ef41e5519df/pygraf-1.0.tar.gz", "yanked": false}], "1.01": [{"comment_text": "", "digests": {"md5": "e09c759070b786a59eec5482eac2e6e8", "sha256": "14f31fd827d4699fa422e9dd3516d9fa623b1c8b5bdbdbe5acc1cd1fe76acf16"}, "downloads": -1, "filename": "pygraf-1.01.tar.gz", "has_sig": false, "md5_digest": "e09c759070b786a59eec5482eac2e6e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2432, "upload_time": "2015-10-15T12:08:45", "upload_time_iso_8601": "2015-10-15T12:08:45.133077Z", "url": "https://files.pythonhosted.org/packages/75/27/f754dde2da446e2cf683e0e6650df48c32c5a2588c6be0e26ad90d46fdca/pygraf-1.01.tar.gz", "yanked": false}], "1.02": [{"comment_text": "", "digests": {"md5": "64bae70b4bbcca6948ac4978bc01cf00", "sha256": "088f8f1564b757f2061882d27f98bd4de289daf57f64277f7cf1532c8166bd43"}, "downloads": -1, "filename": "pygraf-1.02.tar.gz", "has_sig": false, "md5_digest": "64bae70b4bbcca6948ac4978bc01cf00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2460, "upload_time": "2015-10-15T12:42:43", "upload_time_iso_8601": "2015-10-15T12:42:43.401456Z", "url": "https://files.pythonhosted.org/packages/fe/b3/52ca89e4052b3fd1215315219e45bae13ed58ec783aafdd6e88998dc3a13/pygraf-1.02.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "64bae70b4bbcca6948ac4978bc01cf00", "sha256": "088f8f1564b757f2061882d27f98bd4de289daf57f64277f7cf1532c8166bd43"}, "downloads": -1, "filename": "pygraf-1.02.tar.gz", "has_sig": false, "md5_digest": "64bae70b4bbcca6948ac4978bc01cf00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2460, "upload_time": "2015-10-15T12:42:43", "upload_time_iso_8601": "2015-10-15T12:42:43.401456Z", "url": "https://files.pythonhosted.org/packages/fe/b3/52ca89e4052b3fd1215315219e45bae13ed58ec783aafdd6e88998dc3a13/pygraf-1.02.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:42 2020"}