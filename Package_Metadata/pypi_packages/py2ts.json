{"info": {"author": "Conan Li", "author_email": "conanlics@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.8"], "description": "\n\n.. image:: https://circleci.com/gh/conanfanli/py2ts.svg?style=svg\n   :target: https://circleci.com/gh/conanfanli/py2ts\n   :alt: CircleCI\n\n\n.. image:: https://codecov.io/gh/conanfanli/py2ts/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/conanfanli/py2ts\n   :alt: codecov\n\n\npy2ts\n=====\n\nCovert Python `dataclass <https://docs.python.org/3/library/dataclasses.html>`_ and `Enum <https://docs.python.org/3/library/enum.html>`_ to TypeScript interface.\n\nMapping of Scalar Types\n=======================\n\n.. code-block:: python\n\n   assert python_type_to_typescript(str) == \"string\"\n   assert python_type_to_typescript(int) == \"number\"\n   assert python_type_to_typescript(bool) == \"boolean\"\n   assert python_type_to_typescript(float) == \"number\"\n   assert python_type_to_typescript(datetime) == \"string\"\n   assert python_type_to_typescript(date) == \"string\"\n   assert python_type_to_typescript(Decimal) == \"string\"\n   assert python_type_to_typescript(dict) == \"{}\"\n   assert python_type_to_typescript(list) == \"Array<any>\"\n\nUsage\n=====\n\nCreate a schema with Python ``dataclass``\\ :\n\n.. code-block:: python\n\n   class EnumFruit(Enum):\n       APPLE = \"APPLE\"\n       ORANGE = \"ORANGE\"\n\n\n   @dataclass\n   class NestedSchema:\n       string_field: str\n       nullable_datetime_field: Optional[datetime]\n       recursively_nested_field: Optional[\"NestedSchema\"]\n\n\n   @dataclass\n   class ComplexSchema:\n       nullable_int_field: Optional[int]\n       nullable_decimal_field: Optional[int]\n       nullable_enum_field: Optional[EnumFruit]\n       nullable_nested_field: Optional[NestedSchema]\n       nested_list_field: List[NestedSchema]\n\n   blocks = []\n   for path, node in schemas2typescript([ComplexSchema]).items():\n       blocks.append(node.to_typescript())\n\n   print(\"\\n\".join(blocks))\n\nThe output is:\n\n.. code-block:: typescript\n\n   export enum EnumFruit {\n     APPLE = 'APPLE',\n     ORANGE = 'ORANGE'\n   }\n   export interface NestedSchema {\n     string_field: string;\n     nullable_datetime_field: string | null;\n     recursively_nested_field: NestedSchema | null;\n   }\n   export interface ComplexSchema {\n     nullable_int_field: number | null;\n     nullable_decimal_field: number | null;\n     nullable_enum_field: EnumFruit | null;\n     nullable_nested_field: NestedSchema | null;\n     nested_list_field: Array<NestedSchema>;\n   }\n\nGenerate service registry\n=========================\n\nDependency: `ripgrep <https://github.com/BurntSushi/ripgrep>`_\n\nGenerate boilerplate service registry code.\n\nUsage\n-----\n\n``python -m py2ts.generate_service_registry > service_registery.py``\n\nHow it works\n------------\n\nThe command assumes that any classes named ``XXXService`` should be included in the service registry.\nFor example:\n\n.. code-block:: python\n\n   class TestService:\n       pass\n\nwill generate the following code:\n\n.. code-block:: python\n\n   # Generated code. DO NOT EDIT!\n\n   from dataclasses import dataclass\n\n   from tests.test_generate_service_registr import TestService\n\n\n   @dataclass\n   class ServiceRegistry:\n       test_service: TestService = TestService()\n\n   service_registry = ServiceRegistry()\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/conanfanli/py2ts", "keywords": "Python,TypeScript,Dataclass,Code Generation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py2ts", "package_url": "https://pypi.org/project/py2ts/", "platform": "", "project_url": "https://pypi.org/project/py2ts/", "project_urls": {"Homepage": "https://github.com/conanfanli/py2ts"}, "release_url": "https://pypi.org/project/py2ts/0.0.6/", "requires_dist": ["ipython ; extra == 'dev'", "mypy ; extra == 'dev'"], "requires_python": "~=3.8", "summary": "Python type code generator", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/conanfanli/py2ts\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a80713ef6acffff645dd8bb7dde07fe2ef930660/68747470733a2f2f636972636c6563692e636f6d2f67682f636f6e616e66616e6c692f70793274732e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/conanfanli/py2ts\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0e460edf0e65630b7fbf715c438c6b90beb8044/68747470733a2f2f636f6465636f762e696f2f67682f636f6e616e66616e6c692f70793274732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div id=\"py2ts\">\n<h2>py2ts</h2>\n<p>Covert Python <a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=\"nofollow\">dataclass</a> and <a href=\"https://docs.python.org/3/library/enum.html\" rel=\"nofollow\">Enum</a> to TypeScript interface.</p>\n</div>\n<div id=\"mapping-of-scalar-types\">\n<h2>Mapping of Scalar Types</h2>\n<pre><span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"string\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"number\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"boolean\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"number\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"string\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"string\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"n\">Decimal</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"string\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">python_type_to_typescript</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"Array&lt;any&gt;\"</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a schema with Python <tt>dataclass</tt>:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">EnumFruit</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">APPLE</span> <span class=\"o\">=</span> <span class=\"s2\">\"APPLE\"</span>\n    <span class=\"n\">ORANGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"ORANGE\"</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">NestedSchema</span><span class=\"p\">:</span>\n    <span class=\"n\">string_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">nullable_datetime_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">datetime</span><span class=\"p\">]</span>\n    <span class=\"n\">recursively_nested_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"s2\">\"NestedSchema\"</span><span class=\"p\">]</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">ComplexSchema</span><span class=\"p\">:</span>\n    <span class=\"n\">nullable_int_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>\n    <span class=\"n\">nullable_decimal_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>\n    <span class=\"n\">nullable_enum_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">EnumFruit</span><span class=\"p\">]</span>\n    <span class=\"n\">nullable_nested_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">NestedSchema</span><span class=\"p\">]</span>\n    <span class=\"n\">nested_list_field</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">NestedSchema</span><span class=\"p\">]</span>\n\n<span class=\"n\">blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">schemas2typescript</span><span class=\"p\">([</span><span class=\"n\">ComplexSchema</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">to_typescript</span><span class=\"p\">())</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">))</span>\n</pre>\n<p>The output is:</p>\n<pre><span class=\"kr\">export</span> <span class=\"kr\">enum</span> <span class=\"nx\">EnumFruit</span> <span class=\"p\">{</span>\n  <span class=\"nx\">APPLE</span> <span class=\"o\">=</span> <span class=\"s1\">'APPLE'</span><span class=\"p\">,</span>\n  <span class=\"nx\">ORANGE</span> <span class=\"o\">=</span> <span class=\"s1\">'ORANGE'</span>\n<span class=\"p\">}</span>\n<span class=\"kr\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">NestedSchema</span> <span class=\"p\">{</span>\n  <span class=\"nx\">string_field</span>: <span class=\"kt\">string</span><span class=\"p\">;</span>\n  <span class=\"nx\">nullable_datetime_field</span>: <span class=\"kt\">string</span> <span class=\"o\">|</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n  <span class=\"nx\">recursively_nested_field</span>: <span class=\"kt\">NestedSchema</span> <span class=\"o\">|</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kr\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">ComplexSchema</span> <span class=\"p\">{</span>\n  <span class=\"nx\">nullable_int_field</span>: <span class=\"kt\">number</span> <span class=\"o\">|</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n  <span class=\"nx\">nullable_decimal_field</span>: <span class=\"kt\">number</span> <span class=\"o\">|</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n  <span class=\"nx\">nullable_enum_field</span>: <span class=\"kt\">EnumFruit</span> <span class=\"o\">|</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n  <span class=\"nx\">nullable_nested_field</span>: <span class=\"kt\">NestedSchema</span> <span class=\"o\">|</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n  <span class=\"nx\">nested_list_field</span>: <span class=\"kt\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">NestedSchema</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"generate-service-registry\">\n<h2>Generate service registry</h2>\n<p>Dependency: <a href=\"https://github.com/BurntSushi/ripgrep\" rel=\"nofollow\">ripgrep</a></p>\n<p>Generate boilerplate service registry code.</p>\n<div id=\"id1\">\n<h3>Usage</h3>\n<p><tt>python <span class=\"pre\">-m</span> py2ts.generate_service_registry &gt; service_registery.py</tt></p>\n</div>\n<div id=\"how-it-works\">\n<h3>How it works</h3>\n<p>The command assumes that any classes named <tt>XXXService</tt> should be included in the service registry.\nFor example:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TestService</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>will generate the following code:</p>\n<pre><span class=\"c1\"># Generated code. DO NOT EDIT!</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tests.test_generate_service_registr</span> <span class=\"kn\">import</span> <span class=\"n\">TestService</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">ServiceRegistry</span><span class=\"p\">:</span>\n    <span class=\"n\">test_service</span><span class=\"p\">:</span> <span class=\"n\">TestService</span> <span class=\"o\">=</span> <span class=\"n\">TestService</span><span class=\"p\">()</span>\n\n<span class=\"n\">service_registry</span> <span class=\"o\">=</span> <span class=\"n\">ServiceRegistry</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7167979, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d7c1655819bc472dfeb204598ef532fb", "sha256": "e801ba7805fb9d5ddd8ee760a3b1c739b5b9d137cf6dd86bc55f94f844cce449"}, "downloads": -1, "filename": "py2ts-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7c1655819bc472dfeb204598ef532fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 4983, "upload_time": "2020-04-11T21:21:20", "upload_time_iso_8601": "2020-04-11T21:21:20.441899Z", "url": "https://files.pythonhosted.org/packages/49/71/4ebf1fd1bb2f5a47489c9f161b91515895020177aa6aa43aff5088331ad7/py2ts-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc2af6c1bb3c85f02264d5d21e50dd39", "sha256": "f4dbf79607190d5c2fb06b82938c47a63c2d8ff89667878f3ed4833465eebb5e"}, "downloads": -1, "filename": "py2ts-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bc2af6c1bb3c85f02264d5d21e50dd39", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 4054, "upload_time": "2020-04-11T21:21:22", "upload_time_iso_8601": "2020-04-11T21:21:22.699712Z", "url": "https://files.pythonhosted.org/packages/70/68/34664758d85952050d3238da52e0dbbec25ae8dca69877b824e69f415f11/py2ts-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9abb0cf0ea594591a1d314f0eaad09c2", "sha256": "38811a74a826354c3582d519ce7afebf9db04c88caf9e64ac1aad4425b57e5f3"}, "downloads": -1, "filename": "py2ts-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9abb0cf0ea594591a1d314f0eaad09c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 6790, "upload_time": "2020-05-02T00:26:28", "upload_time_iso_8601": "2020-05-02T00:26:28.346603Z", "url": "https://files.pythonhosted.org/packages/d6/27/6b40101c0d728ae329b267b5944dd782fa871699f7a89c45b41595e863f4/py2ts-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca3f08962825db6dac778a9357852765", "sha256": "2679f49f678ab66f6dcd561ccdadd7026432a5e540c806da1d869aeced468bf8"}, "downloads": -1, "filename": "py2ts-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ca3f08962825db6dac778a9357852765", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 6564, "upload_time": "2020-05-02T00:26:29", "upload_time_iso_8601": "2020-05-02T00:26:29.580062Z", "url": "https://files.pythonhosted.org/packages/20/68/62c64347d4da1e173de11f8811ad2b8914fd30d259d13f9ffbfd21e629fc/py2ts-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "90f2ae26d2b7dd45e8bc1f19a452009d", "sha256": "ee99c53685b0e9f747d1fc44e4d4d7539d45cc1d46f875ece88d38a250531787"}, "downloads": -1, "filename": "py2ts-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "90f2ae26d2b7dd45e8bc1f19a452009d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 7108, "upload_time": "2020-05-02T02:51:42", "upload_time_iso_8601": "2020-05-02T02:51:42.240653Z", "url": "https://files.pythonhosted.org/packages/3a/d4/351025fb2dea2138cb0a8de4187f8255b0be5f25322e64e7b9a196012a29/py2ts-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "340f9ee726b4d7f7949b9c99a5ee77bf", "sha256": "6f38b8736f3b5d6a9b63b787acb5aab91b2953e0577a18930bcac0af981407e6"}, "downloads": -1, "filename": "py2ts-0.0.3.tar.gz", "has_sig": false, "md5_digest": "340f9ee726b4d7f7949b9c99a5ee77bf", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 6913, "upload_time": "2020-05-02T02:51:43", "upload_time_iso_8601": "2020-05-02T02:51:43.073219Z", "url": "https://files.pythonhosted.org/packages/74/2f/d02eb419907a8ce3d09e3ceab3eee3e8f3d396c8877e952ea6bc47cf84cd/py2ts-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e5ba58f12bf24c680cd801d1ffaaa0a2", "sha256": "3d2e88881e1bb577a507481ab7859dceeda825e6178ded1883e7d3b5242dbd68"}, "downloads": -1, "filename": "py2ts-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e5ba58f12bf24c680cd801d1ffaaa0a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 7199, "upload_time": "2020-05-02T03:51:43", "upload_time_iso_8601": "2020-05-02T03:51:43.592908Z", "url": "https://files.pythonhosted.org/packages/a4/1a/9e26376f58db7a9b0fcee4e0ba0a43b511aed9aba038411c5583b537fc24/py2ts-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4b57a62c4fff90d4c94098942055aaf", "sha256": "e81c4ef1b64101ba9952a69d4eb6d0d19af50153fba066a127e308b53c4ba113"}, "downloads": -1, "filename": "py2ts-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c4b57a62c4fff90d4c94098942055aaf", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 7074, "upload_time": "2020-05-02T03:51:44", "upload_time_iso_8601": "2020-05-02T03:51:44.683063Z", "url": "https://files.pythonhosted.org/packages/cf/d5/d084188ed75cebfaf7c888a3453638fbd1184ccb61302a910fa3f233a95c/py2ts-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "bc86f3841a64356c2aab110c44210098", "sha256": "53615b00c00706221a1c900ab319d59614f04d928d11083d93313995c80c84cc"}, "downloads": -1, "filename": "py2ts-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "bc86f3841a64356c2aab110c44210098", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 7562, "upload_time": "2020-05-03T23:10:13", "upload_time_iso_8601": "2020-05-03T23:10:13.256149Z", "url": "https://files.pythonhosted.org/packages/d3/8b/5f87b4bf94d43df90fac4c37af8aad2b9c2f0e9595b965fa887e93986118/py2ts-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7b012b712c11f0ceb5a6d95c00aa46e", "sha256": "7f9384f6997daaf57515714f1946f5d1066855a923aa42bbfe034e167c58bf36"}, "downloads": -1, "filename": "py2ts-0.0.5.tar.gz", "has_sig": false, "md5_digest": "e7b012b712c11f0ceb5a6d95c00aa46e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 7743, "upload_time": "2020-05-03T23:10:14", "upload_time_iso_8601": "2020-05-03T23:10:14.122682Z", "url": "https://files.pythonhosted.org/packages/24/dc/c2a42e8fc6a086ea9734c7f81a5d8a42c93d9bea013d863ccd6e5103ac7c/py2ts-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "49bc65544eb27934d0ff1fd138f502b7", "sha256": "fb035f008f54edfc5343970f24f6fc83586d3c112e707acd25969045d7535019"}, "downloads": -1, "filename": "py2ts-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "49bc65544eb27934d0ff1fd138f502b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 7571, "upload_time": "2020-05-04T21:47:34", "upload_time_iso_8601": "2020-05-04T21:47:34.430194Z", "url": "https://files.pythonhosted.org/packages/5d/80/d9740128060db31694c342699531a63446e796e41da0b5e4c4d45a36c09c/py2ts-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44b54aa1e61e956cb420b074a0a3bb2e", "sha256": "24ca30c8950ea378bdd98ee523d72988c3bae8435dca8b9dd8eb0bd0670e9827"}, "downloads": -1, "filename": "py2ts-0.0.6.tar.gz", "has_sig": false, "md5_digest": "44b54aa1e61e956cb420b074a0a3bb2e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 7750, "upload_time": "2020-05-04T21:47:35", "upload_time_iso_8601": "2020-05-04T21:47:35.257787Z", "url": "https://files.pythonhosted.org/packages/aa/38/79a2f62608ef9ce1b970d8fcaab3ca5fd34f8370886e2232d375a793f248/py2ts-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49bc65544eb27934d0ff1fd138f502b7", "sha256": "fb035f008f54edfc5343970f24f6fc83586d3c112e707acd25969045d7535019"}, "downloads": -1, "filename": "py2ts-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "49bc65544eb27934d0ff1fd138f502b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 7571, "upload_time": "2020-05-04T21:47:34", "upload_time_iso_8601": "2020-05-04T21:47:34.430194Z", "url": "https://files.pythonhosted.org/packages/5d/80/d9740128060db31694c342699531a63446e796e41da0b5e4c4d45a36c09c/py2ts-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44b54aa1e61e956cb420b074a0a3bb2e", "sha256": "24ca30c8950ea378bdd98ee523d72988c3bae8435dca8b9dd8eb0bd0670e9827"}, "downloads": -1, "filename": "py2ts-0.0.6.tar.gz", "has_sig": false, "md5_digest": "44b54aa1e61e956cb420b074a0a3bb2e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 7750, "upload_time": "2020-05-04T21:47:35", "upload_time_iso_8601": "2020-05-04T21:47:35.257787Z", "url": "https://files.pythonhosted.org/packages/aa/38/79a2f62608ef9ce1b970d8fcaab3ca5fd34f8370886e2232d375a793f248/py2ts-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:27 2020"}