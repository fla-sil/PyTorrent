{"info": {"author": "MEEO s.r.l.", "author_email": "info@meeo.it", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "# Installation\n\n## Requirements\n\n```bash\nsudo apt-get install python3-venv python3-gdal gdal-bin\n```\n\n## Install from git\n```bash\ncd /opt\ngit clone https://git.services.meeo.it/das/adamapi.git\ncd adamapi\nVENVNAME=\"venv\"\npython3 -m venv \"${VENVNAME}\"\nsource \"${VENVNAME}/bin/activate\";\npython3 -m pip install --upgrade pip\npip install -r requirements.txt\nln -s \"/usr/lib/python3/dist-packages/osgeo\" \"/opt/adamapi/${VENVNAME}/lib/python3.7/site-packages/osgeo\"\nln -s /opt/adamapi /opt/adamapi/${VENVNAME}/lib/python3.7/site-packages/adamapi\n```\n\n## Install with pip\n```bash\nVENVNAME=\"adamapi\"\npython3 -m venv \"${VENVNAME}\"\nsource \"${VENVNAME}/bin/activate\";\npython3 -m pip install --upgrade pip;\npip install adamapi\nln -s \"/usr/lib/python3/dist-packages/osgeo\" \"${VENVNAME}/lib/python3.7/site-packages/osgeo\"\n```\n\n# API DEFINITIONS\nThis document briefly describe the ADMAPI functionalities.<br>\nA more complete and interactive documentation are provided through a predefined jupyter notebook *(LINK to notebook TBP)*.<br>\nThe ADAMAPI library is divided in 4 modules:\n1.  Auth --> the authorization module\n2.  Datasets --> to retrieve available datasets\n3.  Search --> to get image lists, polygons, tiles and other metadata\n4.  GetData --> to retrieve data ( png, tiff, chart, gif, ... )\n\n## 1 - Auth\nThis module takes care of user authentication.<br>\nWithout instancing an object of this module other components will not works.<br>\nAuthentication is based on the ADAMAPI_KEY, a key that uniquelly identify a user in the ADAM-CORE endpoint.\n\n**Class contructor and parameters**\n```python\nfrom adamapi import Auth\na = Auth()\n```\nParameters:<br>\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| | | | | |\n\n**Public methods and parameters**\n\n*  **.setKey()** --> To setup the ADAMAPI_KEY<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | str | | The ADAMAPI_KEY |\n\n*  **.setAdamCore()** --> To setup the url of the ADAM-CORE endpoint<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | str | | The url like https://explorer.adamplatform.eu |\n\n*  **.authorize()** --> to instanciate an auth object<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| | | | | |\n\n\n### 1.1 - ADAMAPI_KEY retrieval\nTo get the ADAMAPI_KEY access the refence ADAM portal and:<br>\n1.  Select the \"user icon\" on the top right\n2.  Click on the \"USERNAME\" and open the \"User Management\" popup\n3.  Click on the \"Api Key\" to display your key\n<br>\n*Command-line ADAMAPI_KEY retrieval TBP*\n\n### 1.2 - ADAMAPI_KEY setup\nThere are three method to setup the ADAMAPI_KEY and the ADAM-CORE Instance:\n1. use the method setKey() and setAdamCore()\n```python\nfrom adamapi import Auth\na = Auth()\na.setKey('bdjmgBl02muSHSG0a4XhyZBjXXQ')\na.setAdamCore('https://explorer.adamplatform.eu')\n```\n2. Export two envars like\n```bash\n#open a Terminal and type:\nexport ADAMAPI_KEY='bdjmgBl02muSHSG0a4XhyZBjXXQ'\nexport ADAMAPI_URL='https://explorer.adamplatform.eu'\n```\n3. create a file called **.adamapirc** in the user home directory with the following content\n```text\nkey=bdjmgBl02muSHSG0a4XhyZBjXXQ\nurl=https://explorer.adamplatform.eu\n```\n### 1.3 - Examples\nAfter ADAMAPI_KEY has been setted up, an auth instance can be created with:\n```python\nfrom adamapi import Auth\na = Auth()\na.authorize()\n```\n\n## 2 - Datasets\nThis module provides datasets discovery functionality.\n\n**Class contructor and parameters**\n```python\nfrom adamapi import Datasets\ndatasets = Datasets( a )\n```\nParameters:<br>\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True |  Auth instance | | The ADAMAPI authorized instance obtained in the previous section |\n\n**Public methods and parameters**\n\n*  **.getDatasets()** --> To retrieve datasets list and metadata<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | False | str | | The datasetId. |\n\n### 2.1 Examples\nThis module can be used in 2 different ways.\n1.  To list all available datasets:\n```python\ndatasets = Datasets(a)\nprint(datasets.getDatasets())\n```\n2.  To get detailed information about a specific dataset\n```python\ndatasets = Datasets(a)\nprint( datasets.getDatasets( '{{ID:DATASET}}' ) )\n```\n\n## 3 - Search\nThis module provides discovery functionality through the products available on the ADAM instance.\n\n**Class contructor and parameters**\n```python\nfrom adamapi import Search\nsearch = Search( a )\n```\nParameters:<br>\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | Auth instance | | The ADAMAPI authorized instance obtained in section 1-Auth |\n\n**Public methods and parameters**\n\n*  **.getProducts()** --> To retrieve datasets list and metadata<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | str | | The datasetId. |\n| geometry | False | geojson | | search polygon in [geojson format](https://tools.ietf.org/html/rfc7946) |\n| outputAttributes | False | array of str | | list of attributes desired on the output dictionary. If not set all the attributes will be returned |\n| itemPerPage | False | int | 10 | number of records |\n| Index | False | int | 0 | starting record index |\n| startDate | False | str or [datetime](https://docs.python.org/3/library/datetime.html) | | the start date |\n| completationDate | False | str or [datetime](https://docs.python.org/3/library/datetime.html) | | the end date |\n| tile | False | str | | the tile identifier (MGRS for the sentinel, path and row for landsat, ... ) |\n\n### 3.1 Examples\n```python\nsearch=Search(a)\nmongo_search=search.getProducts('{{ID:DATASET}}',geometry={\"type\":\"Polygon\",\"coordinates\":[[[-60,-45],[60,-45],[60,45],[-60,45],[-60,-45]]]},itemPerPage=1,Index=0)\n```\n\n## 4 - getData\nThis module provides data access of raster and timeseries of products, up to pixel granularity, including the support of different image encodings, sequence of images in three different format or direct link to download the image or the images(json, tif, png, gif, png_preview ).\n\n**Class contructor and parameters**\n```python\nfrom adamapi import GetData\ndata=GetData(a)\n```\nParameters:<br>\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | Auth Instance |  | The ADAMAPI authorized instance obtained in the section 1-Auth |\n\n**Public methods and parameters**\n\n*  **.getData()** --> To retrieve rasters in different encodings (tif, png, gif)<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | str |  | The datasetId |\n| timeStart | True | str or [datetime](https://docs.python.org/3/library/datetime.html) |  | the start date |\n| timeEnd | False | str or [datetime](https://docs.python.org/3/library/datetime.html) | timeStart | the end date |\n| geometry | False | geojson | | subset bbox in [geojson format](https://tools.ietf.org/html/rfc7946) |\n| tile | False | str |  | the tile identifier (MGRS for the sentinel, path and row for landsat, ... ) |\n| outputFormat | False | str | tif | output file format [ 'tif', 'gif', 'png', 'png_preview' ] |\n| outputFname | False | str | {{datasetId}} | output fillename pattern. If not specified the url is returned |\n| scale | False | double |  | Raster rescale factor |\n\n*  **.getChart()** --> to retrive a timeseries on a point in two different format(json or png)<br>\nParameters:\n\n| position/keyword | mandatory | type | default | description |\n| ------ | ------ | ------ | ------ | ------ |\n| 0 | True | str |  | The datasetId |\n| timeStart | True | str or [datetime](https://docs.python.org/3/library/datetime.html) |  | the start date |\n| timeEnd | False | str or [datetime](https://docs.python.org/3/library/datetime.html) | timeStart | the end date |\n| latitude | False | double |  | latitude coordinate |\n| longitude | False | double |  | longitude coordinate |\n| outputFormat | False | str | json | output file extension |\n| outputFname | False | str | {{datasetId}} | output fillename pattern  |\n\n\n### 4.1 Examples\n```python\ndata=GetData(a)\nimage=data.getData('{{ID:DATASET}}',timeStart= '{{datetime}}',timeEnd='{{datetime}}',tile=\"{{MGRS_TILE OR PATHROW}}\",outputFormat='tif',outputFname=\"\",scale=0.1)\n```\n```python\ndata=GetData(a)\nimage=data.getChart('{{ID:DATASET}}',timeStart='{{datetime}}',timeEnd='{{datetime}}',latitude=42.7998,longitude=19.5481,outputFname=\"chart_example\",outputFormat='json')\n```\n\n# Appendix 1 - Data format\n## date and date+time\nSupported string date/date+time format are:\n*  '%Y.%m.%d %H:%M:%S',\n*  '%Y%m%d %H:%M:%S',\n*  '%Y-%m-%dT%H:%M:%S',\n*  '%Y-%m-%dT%H:%M:%S.%f',\n*  '%Y-%m-%dT%H:%M:%SZ',\n*  '%Y-%m-%dT%H:%M:%S.%fZ',\n*  '%Y-%m-%d %H:%M:%S',\n*  '%Y.%m.%d',\n*  '%Y%m%d',\n*  '%Y-%m-%d'\n\n\n## GeoJson\nGeometry have to follow the latest geojson standard [rfc7946](https://tools.ietf.org/html/rfc7946)<br>\nIn particular Polygons and MultiPolygons should follow the right-hand rule<br>\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.services.meeo.it/das/adamapi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "adamapi", "package_url": "https://pypi.org/project/adamapi/", "platform": "", "project_url": "https://pypi.org/project/adamapi/", "project_urls": {"Homepage": "https://git.services.meeo.it/das/adamapi"}, "release_url": "https://pypi.org/project/adamapi/0.0.7/", "requires_dist": ["requests (>=2.22.0)", "matplotlib", "imageio"], "requires_python": ">=3.6", "summary": "Python Adam API", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Installation</h1>\n<h2>Requirements</h2>\n<pre>sudo apt-get install python3-venv python3-gdal gdal-bin\n</pre>\n<h2>Install from git</h2>\n<pre><span class=\"nb\">cd</span> /opt\ngit clone https://git.services.meeo.it/das/adamapi.git\n<span class=\"nb\">cd</span> adamapi\n<span class=\"nv\">VENVNAME</span><span class=\"o\">=</span><span class=\"s2\">\"venv\"</span>\npython3 -m venv <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">source</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span><span class=\"s2\">/bin/activate\"</span><span class=\"p\">;</span>\npython3 -m pip install --upgrade pip\npip install -r requirements.txt\nln -s <span class=\"s2\">\"/usr/lib/python3/dist-packages/osgeo\"</span> <span class=\"s2\">\"/opt/adamapi/</span><span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span><span class=\"s2\">/lib/python3.7/site-packages/osgeo\"</span>\nln -s /opt/adamapi /opt/adamapi/<span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span>/lib/python3.7/site-packages/adamapi\n</pre>\n<h2>Install with pip</h2>\n<pre><span class=\"nv\">VENVNAME</span><span class=\"o\">=</span><span class=\"s2\">\"adamapi\"</span>\npython3 -m venv <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">source</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span><span class=\"s2\">/bin/activate\"</span><span class=\"p\">;</span>\npython3 -m pip install --upgrade pip<span class=\"p\">;</span>\npip install adamapi\nln -s <span class=\"s2\">\"/usr/lib/python3/dist-packages/osgeo\"</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">VENVNAME</span><span class=\"si\">}</span><span class=\"s2\">/lib/python3.7/site-packages/osgeo\"</span>\n</pre>\n<h1>API DEFINITIONS</h1>\n<p>This document briefly describe the ADMAPI functionalities.<br>\nA more complete and interactive documentation are provided through a predefined jupyter notebook <em>(LINK to notebook TBP)</em>.<br>\nThe ADAMAPI library is divided in 4 modules:</p>\n<ol>\n<li>Auth --&gt; the authorization module</li>\n<li>Datasets --&gt; to retrieve available datasets</li>\n<li>Search --&gt; to get image lists, polygons, tiles and other metadata</li>\n<li>GetData --&gt; to retrieve data ( png, tiff, chart, gif, ... )</li>\n</ol>\n<h2>1 - Auth</h2>\n<p>This module takes care of user authentication.<br>\nWithout instancing an object of this module other components will not works.<br>\nAuthentication is based on the ADAMAPI_KEY, a key that uniquelly identify a user in the ADAM-CORE endpoint.</p>\n<p><strong>Class contructor and parameters</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adamapi</span> <span class=\"kn\">import</span> <span class=\"n\">Auth</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Auth</span><span class=\"p\">()</span>\n</pre>\n<p>Parameters:<br></p>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr></tbody></table>\n<p><strong>Public methods and parameters</strong></p>\n<ul>\n<li><strong>.setKey()</strong> --&gt; To setup the ADAMAPI_KEY<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>str</td>\n<td></td>\n<td>The ADAMAPI_KEY</td>\n</tr></tbody></table>\n<ul>\n<li><strong>.setAdamCore()</strong> --&gt; To setup the url of the ADAM-CORE endpoint<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>str</td>\n<td></td>\n<td>The url like <a href=\"https://explorer.adamplatform.eu\" rel=\"nofollow\">https://explorer.adamplatform.eu</a></td>\n</tr></tbody></table>\n<ul>\n<li><strong>.authorize()</strong> --&gt; to instanciate an auth object<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr></tbody></table>\n<h3>1.1 - ADAMAPI_KEY retrieval</h3>\n<p>To get the ADAMAPI_KEY access the refence ADAM portal and:<br></p>\n<ol>\n<li>Select the \"user icon\" on the top right</li>\n<li>Click on the \"USERNAME\" and open the \"User Management\" popup</li>\n<li>Click on the \"Api Key\" to display your key</li>\n</ol>\n<br>\n*Command-line ADAMAPI_KEY retrieval TBP*\n<h3>1.2 - ADAMAPI_KEY setup</h3>\n<p>There are three method to setup the ADAMAPI_KEY and the ADAM-CORE Instance:</p>\n<ol>\n<li>use the method setKey() and setAdamCore()</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adamapi</span> <span class=\"kn\">import</span> <span class=\"n\">Auth</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Auth</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">setKey</span><span class=\"p\">(</span><span class=\"s1\">'bdjmgBl02muSHSG0a4XhyZBjXXQ'</span><span class=\"p\">)</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">setAdamCore</span><span class=\"p\">(</span><span class=\"s1\">'https://explorer.adamplatform.eu'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Export two envars like</li>\n</ol>\n<pre><span class=\"c1\">#open a Terminal and type:</span>\n<span class=\"nb\">export</span> <span class=\"nv\">ADAMAPI_KEY</span><span class=\"o\">=</span><span class=\"s1\">'bdjmgBl02muSHSG0a4XhyZBjXXQ'</span>\n<span class=\"nb\">export</span> <span class=\"nv\">ADAMAPI_URL</span><span class=\"o\">=</span><span class=\"s1\">'https://explorer.adamplatform.eu'</span>\n</pre>\n<ol>\n<li>create a file called <strong>.adamapirc</strong> in the user home directory with the following content</li>\n</ol>\n<pre>key=bdjmgBl02muSHSG0a4XhyZBjXXQ\nurl=https://explorer.adamplatform.eu\n</pre>\n<h3>1.3 - Examples</h3>\n<p>After ADAMAPI_KEY has been setted up, an auth instance can be created with:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adamapi</span> <span class=\"kn\">import</span> <span class=\"n\">Auth</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Auth</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">()</span>\n</pre>\n<h2>2 - Datasets</h2>\n<p>This module provides datasets discovery functionality.</p>\n<p><strong>Class contructor and parameters</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adamapi</span> <span class=\"kn\">import</span> <span class=\"n\">Datasets</span>\n<span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">Datasets</span><span class=\"p\">(</span> <span class=\"n\">a</span> <span class=\"p\">)</span>\n</pre>\n<p>Parameters:<br></p>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>Auth instance</td>\n<td></td>\n<td>The ADAMAPI authorized instance obtained in the previous section</td>\n</tr></tbody></table>\n<p><strong>Public methods and parameters</strong></p>\n<ul>\n<li><strong>.getDatasets()</strong> --&gt; To retrieve datasets list and metadata<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>False</td>\n<td>str</td>\n<td></td>\n<td>The datasetId.</td>\n</tr></tbody></table>\n<h3>2.1 Examples</h3>\n<p>This module can be used in 2 different ways.</p>\n<ol>\n<li>To list all available datasets:</li>\n</ol>\n<pre><span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">Datasets</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">getDatasets</span><span class=\"p\">())</span>\n</pre>\n<ol>\n<li>To get detailed information about a specific dataset</li>\n</ol>\n<pre><span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">Datasets</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">getDatasets</span><span class=\"p\">(</span> <span class=\"s1\">'{{ID:DATASET}}'</span> <span class=\"p\">)</span> <span class=\"p\">)</span>\n</pre>\n<h2>3 - Search</h2>\n<p>This module provides discovery functionality through the products available on the ADAM instance.</p>\n<p><strong>Class contructor and parameters</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adamapi</span> <span class=\"kn\">import</span> <span class=\"n\">Search</span>\n<span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"n\">Search</span><span class=\"p\">(</span> <span class=\"n\">a</span> <span class=\"p\">)</span>\n</pre>\n<p>Parameters:<br></p>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>Auth instance</td>\n<td></td>\n<td>The ADAMAPI authorized instance obtained in section 1-Auth</td>\n</tr></tbody></table>\n<p><strong>Public methods and parameters</strong></p>\n<ul>\n<li><strong>.getProducts()</strong> --&gt; To retrieve datasets list and metadata<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>str</td>\n<td></td>\n<td>The datasetId.</td>\n</tr>\n<tr>\n<td>geometry</td>\n<td>False</td>\n<td>geojson</td>\n<td></td>\n<td>search polygon in <a href=\"https://tools.ietf.org/html/rfc7946\" rel=\"nofollow\">geojson format</a></td>\n</tr>\n<tr>\n<td>outputAttributes</td>\n<td>False</td>\n<td>array of str</td>\n<td></td>\n<td>list of attributes desired on the output dictionary. If not set all the attributes will be returned</td>\n</tr>\n<tr>\n<td>itemPerPage</td>\n<td>False</td>\n<td>int</td>\n<td>10</td>\n<td>number of records</td>\n</tr>\n<tr>\n<td>Index</td>\n<td>False</td>\n<td>int</td>\n<td>0</td>\n<td>starting record index</td>\n</tr>\n<tr>\n<td>startDate</td>\n<td>False</td>\n<td>str or <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a></td>\n<td></td>\n<td>the start date</td>\n</tr>\n<tr>\n<td>completationDate</td>\n<td>False</td>\n<td>str or <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a></td>\n<td></td>\n<td>the end date</td>\n</tr>\n<tr>\n<td>tile</td>\n<td>False</td>\n<td>str</td>\n<td></td>\n<td>the tile identifier (MGRS for the sentinel, path and row for landsat, ... )</td>\n</tr></tbody></table>\n<h3>3.1 Examples</h3>\n<pre><span class=\"n\">search</span><span class=\"o\">=</span><span class=\"n\">Search</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">mongo_search</span><span class=\"o\">=</span><span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">getProducts</span><span class=\"p\">(</span><span class=\"s1\">'{{ID:DATASET}}'</span><span class=\"p\">,</span><span class=\"n\">geometry</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"Polygon\"</span><span class=\"p\">,</span><span class=\"s2\">\"coordinates\"</span><span class=\"p\">:[[[</span><span class=\"o\">-</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">45</span><span class=\"p\">],[</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">45</span><span class=\"p\">],[</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"mi\">45</span><span class=\"p\">],[</span><span class=\"o\">-</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"mi\">45</span><span class=\"p\">],[</span><span class=\"o\">-</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">45</span><span class=\"p\">]]]},</span><span class=\"n\">itemPerPage</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">Index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<h2>4 - getData</h2>\n<p>This module provides data access of raster and timeseries of products, up to pixel granularity, including the support of different image encodings, sequence of images in three different format or direct link to download the image or the images(json, tif, png, gif, png_preview ).</p>\n<p><strong>Class contructor and parameters</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">adamapi</span> <span class=\"kn\">import</span> <span class=\"n\">GetData</span>\n<span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n</pre>\n<p>Parameters:<br></p>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>Auth Instance</td>\n<td></td>\n<td>The ADAMAPI authorized instance obtained in the section 1-Auth</td>\n</tr></tbody></table>\n<p><strong>Public methods and parameters</strong></p>\n<ul>\n<li><strong>.getData()</strong> --&gt; To retrieve rasters in different encodings (tif, png, gif)<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>str</td>\n<td></td>\n<td>The datasetId</td>\n</tr>\n<tr>\n<td>timeStart</td>\n<td>True</td>\n<td>str or <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a></td>\n<td></td>\n<td>the start date</td>\n</tr>\n<tr>\n<td>timeEnd</td>\n<td>False</td>\n<td>str or <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a></td>\n<td>timeStart</td>\n<td>the end date</td>\n</tr>\n<tr>\n<td>geometry</td>\n<td>False</td>\n<td>geojson</td>\n<td></td>\n<td>subset bbox in <a href=\"https://tools.ietf.org/html/rfc7946\" rel=\"nofollow\">geojson format</a></td>\n</tr>\n<tr>\n<td>tile</td>\n<td>False</td>\n<td>str</td>\n<td></td>\n<td>the tile identifier (MGRS for the sentinel, path and row for landsat, ... )</td>\n</tr>\n<tr>\n<td>outputFormat</td>\n<td>False</td>\n<td>str</td>\n<td>tif</td>\n<td>output file format [ 'tif', 'gif', 'png', 'png_preview' ]</td>\n</tr>\n<tr>\n<td>outputFname</td>\n<td>False</td>\n<td>str</td>\n<td>{{datasetId}}</td>\n<td>output fillename pattern. If not specified the url is returned</td>\n</tr>\n<tr>\n<td>scale</td>\n<td>False</td>\n<td>double</td>\n<td></td>\n<td>Raster rescale factor</td>\n</tr></tbody></table>\n<ul>\n<li><strong>.getChart()</strong> --&gt; to retrive a timeseries on a point in two different format(json or png)<br>\nParameters:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>position/keyword</th>\n<th>mandatory</th>\n<th>type</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>True</td>\n<td>str</td>\n<td></td>\n<td>The datasetId</td>\n</tr>\n<tr>\n<td>timeStart</td>\n<td>True</td>\n<td>str or <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a></td>\n<td></td>\n<td>the start date</td>\n</tr>\n<tr>\n<td>timeEnd</td>\n<td>False</td>\n<td>str or <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a></td>\n<td>timeStart</td>\n<td>the end date</td>\n</tr>\n<tr>\n<td>latitude</td>\n<td>False</td>\n<td>double</td>\n<td></td>\n<td>latitude coordinate</td>\n</tr>\n<tr>\n<td>longitude</td>\n<td>False</td>\n<td>double</td>\n<td></td>\n<td>longitude coordinate</td>\n</tr>\n<tr>\n<td>outputFormat</td>\n<td>False</td>\n<td>str</td>\n<td>json</td>\n<td>output file extension</td>\n</tr>\n<tr>\n<td>outputFname</td>\n<td>False</td>\n<td>str</td>\n<td>{{datasetId}}</td>\n<td>output fillename pattern</td>\n</tr></tbody></table>\n<h3>4.1 Examples</h3>\n<pre><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">getData</span><span class=\"p\">(</span><span class=\"s1\">'{{ID:DATASET}}'</span><span class=\"p\">,</span><span class=\"n\">timeStart</span><span class=\"o\">=</span> <span class=\"s1\">'{{datetime}}'</span><span class=\"p\">,</span><span class=\"n\">timeEnd</span><span class=\"o\">=</span><span class=\"s1\">'{{datetime}}'</span><span class=\"p\">,</span><span class=\"n\">tile</span><span class=\"o\">=</span><span class=\"s2\">\"{{MGRS_TILE OR PATHROW}}\"</span><span class=\"p\">,</span><span class=\"n\">outputFormat</span><span class=\"o\">=</span><span class=\"s1\">'tif'</span><span class=\"p\">,</span><span class=\"n\">outputFname</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">image</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">getChart</span><span class=\"p\">(</span><span class=\"s1\">'{{ID:DATASET}}'</span><span class=\"p\">,</span><span class=\"n\">timeStart</span><span class=\"o\">=</span><span class=\"s1\">'{{datetime}}'</span><span class=\"p\">,</span><span class=\"n\">timeEnd</span><span class=\"o\">=</span><span class=\"s1\">'{{datetime}}'</span><span class=\"p\">,</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">42.7998</span><span class=\"p\">,</span><span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"mf\">19.5481</span><span class=\"p\">,</span><span class=\"n\">outputFname</span><span class=\"o\">=</span><span class=\"s2\">\"chart_example\"</span><span class=\"p\">,</span><span class=\"n\">outputFormat</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">)</span>\n</pre>\n<h1>Appendix 1 - Data format</h1>\n<h2>date and date+time</h2>\n<p>Supported string date/date+time format are:</p>\n<ul>\n<li>'%Y.%m.%d %H:%M:%S',</li>\n<li>'%Y%m%d %H:%M:%S',</li>\n<li>'%Y-%m-%dT%H:%M:%S',</li>\n<li>'%Y-%m-%dT%H:%M:%S.%f',</li>\n<li>'%Y-%m-%dT%H:%M:%SZ',</li>\n<li>'%Y-%m-%dT%H:%M:%S.%fZ',</li>\n<li>'%Y-%m-%d %H:%M:%S',</li>\n<li>'%Y.%m.%d',</li>\n<li>'%Y%m%d',</li>\n<li>'%Y-%m-%d'</li>\n</ul>\n<h2>GeoJson</h2>\n<p>Geometry have to follow the latest geojson standard <a href=\"https://tools.ietf.org/html/rfc7946\" rel=\"nofollow\">rfc7946</a><br>\nIn particular Polygons and MultiPolygons should follow the right-hand rule<br></p>\n\n          </div>"}, "last_serial": 6712143, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "62559242ea536ee628f213e2bcabdf03", "sha256": "7363c44041de32f883a528fb57c31f7aaf3e5a6c0a33f78c4664a567de4883e0"}, "downloads": -1, "filename": "adamapi-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "62559242ea536ee628f213e2bcabdf03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8442, "upload_time": "2020-01-23T10:16:54", "upload_time_iso_8601": "2020-01-23T10:16:54.536806Z", "url": "https://files.pythonhosted.org/packages/1d/3d/d493131e22bb1bfc8342937c915d90f06ec22283fe44d1d2690fec25b8b5/adamapi-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b57c1ce7ab676d7e06d0ae9311ed2fa", "sha256": "16325a9697b8f9171d0b36fe4aeb153c1a5481f4920a3d0ad57512f223755a18"}, "downloads": -1, "filename": "adamapi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1b57c1ce7ab676d7e06d0ae9311ed2fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4831, "upload_time": "2020-01-23T10:16:56", "upload_time_iso_8601": "2020-01-23T10:16:56.977833Z", "url": "https://files.pythonhosted.org/packages/5a/1f/0b2968e96cd8ae25f4e3e888e765da6152080c513f28aa0d18fc68fc274c/adamapi-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ead948e41c70a42cb46f564d636248a5", "sha256": "15ddbcf8c22929698ecdae7c93c07a85ebd21ec4c3ff75c1aae475a20b4c479e"}, "downloads": -1, "filename": "adamapi-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ead948e41c70a42cb46f564d636248a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8440, "upload_time": "2020-01-23T10:18:47", "upload_time_iso_8601": "2020-01-23T10:18:47.802781Z", "url": "https://files.pythonhosted.org/packages/90/57/ddba77f32b3787342ff4ef541b1e18aa3cd30d3063af0217bc206e66c59c/adamapi-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c73050201b2926d9bd29a30a9d661e60", "sha256": "16b1ce066254e7b1b76a34ce2f7285dab2b3ba6cbc0a2767ee4af671f1e6aa00"}, "downloads": -1, "filename": "adamapi-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c73050201b2926d9bd29a30a9d661e60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4830, "upload_time": "2020-01-23T10:18:48", "upload_time_iso_8601": "2020-01-23T10:18:48.983141Z", "url": "https://files.pythonhosted.org/packages/64/7c/d05d153b0144f3ca70d5e40261afc173664c1e0c7b03c629ea69cdff1623/adamapi-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2104ddd0e0db5d32bb8f9d72ca003e9b", "sha256": "06d622c029c66bc4e9d3f4e259e538a1eebad257f9728b2f6d69c204705c0eba"}, "downloads": -1, "filename": "adamapi-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2104ddd0e0db5d32bb8f9d72ca003e9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8569, "upload_time": "2020-01-30T09:31:51", "upload_time_iso_8601": "2020-01-30T09:31:51.572666Z", "url": "https://files.pythonhosted.org/packages/a5/a0/8bd1c070dc4d1dd7436dd242371c8480d38d8e3c895fc09768f37f5770cb/adamapi-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7741121c42b9b47a9b2f98a3147c07a", "sha256": "5476a8b84351a76a2adfa04508d80cc4249c1c901a13b10aba6d67218801caa3"}, "downloads": -1, "filename": "adamapi-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b7741121c42b9b47a9b2f98a3147c07a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4953, "upload_time": "2020-01-30T09:31:52", "upload_time_iso_8601": "2020-01-30T09:31:52.778107Z", "url": "https://files.pythonhosted.org/packages/fc/56/7534dc14370a7b24c1d73d2265d3fe5b11ab65cf229b13bbe613b8783aa8/adamapi-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ec472e21ad54983435313df9ae31a305", "sha256": "032f188000f0bd362a3915d33a836e42e9d53dfef748e158cededb3d4a54a35c"}, "downloads": -1, "filename": "adamapi-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ec472e21ad54983435313df9ae31a305", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9804, "upload_time": "2020-01-30T09:39:02", "upload_time_iso_8601": "2020-01-30T09:39:02.613983Z", "url": "https://files.pythonhosted.org/packages/c1/9d/f1b9f7b6865584f426223eb048d6380d7bbf3b492b3f68384181c66b5d30/adamapi-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e84db29bbaabfecc0183fa5b7177511", "sha256": "173d4a4ee26305586cc44fd294bf0a53c260acda3f08d83b9cb59de6caab3912"}, "downloads": -1, "filename": "adamapi-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1e84db29bbaabfecc0183fa5b7177511", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5175, "upload_time": "2020-01-30T09:39:04", "upload_time_iso_8601": "2020-01-30T09:39:04.142880Z", "url": "https://files.pythonhosted.org/packages/7f/c5/de112de9a07936d44e3230b298bb821ccb74b1591550c3b0a6198a737500/adamapi-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3c41bfc75b17a32da4571a22a9a53eb8", "sha256": "abdce2208ce16ca67e734c35f11a19ac78a68ae01b25c22f5f73697eaf61ef89"}, "downloads": -1, "filename": "adamapi-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3c41bfc75b17a32da4571a22a9a53eb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10409, "upload_time": "2020-02-03T11:34:46", "upload_time_iso_8601": "2020-02-03T11:34:46.142204Z", "url": "https://files.pythonhosted.org/packages/5d/a4/c6acfac6d593711f960d6fcbb4cd82a6a59f1fc5f7936eada6f89ec6b35b/adamapi-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfe3f22e4efe682441b7feea093e899c", "sha256": "a8590e26ee7438344624017a740d3f78beb79b415e60caf8f27c5e2432151c7b"}, "downloads": -1, "filename": "adamapi-0.0.5.tar.gz", "has_sig": false, "md5_digest": "cfe3f22e4efe682441b7feea093e899c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5652, "upload_time": "2020-02-03T11:34:47", "upload_time_iso_8601": "2020-02-03T11:34:47.282688Z", "url": "https://files.pythonhosted.org/packages/9e/8a/cc2ac9f7401c2a140e9f2212346d223543ff6a746b4398174ff5f5dedfa6/adamapi-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "f5292db3bff282433ce292b9c121d0d2", "sha256": "0beda384ead57f1751febf3ac668884a6d4c5ca59f01f965f9b82e7120cff8e5"}, "downloads": -1, "filename": "adamapi-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f5292db3bff282433ce292b9c121d0d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9979, "upload_time": "2020-02-06T14:06:55", "upload_time_iso_8601": "2020-02-06T14:06:55.766959Z", "url": "https://files.pythonhosted.org/packages/17/7a/d9dbb82c0f7a4eafe58232508dcea8f9f78322e9014625f45f0f1a02bbe3/adamapi-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ab5a0ee4913cb3577214e7a574927bf", "sha256": "37d4cd594b36bbebbe7022f494cb256a6d51784768c44ae540399186b8eda17a"}, "downloads": -1, "filename": "adamapi-0.0.6.tar.gz", "has_sig": false, "md5_digest": "8ab5a0ee4913cb3577214e7a574927bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5347, "upload_time": "2020-02-06T14:06:57", "upload_time_iso_8601": "2020-02-06T14:06:57.137794Z", "url": "https://files.pythonhosted.org/packages/75/08/480d2bb58d2f104578cff6f7f923557c95c7ccb6fe161e216813b860af35/adamapi-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "c886e96dfc6dbfc4f32987f8d7803e86", "sha256": "08f897290f7b4965cf474e44969cf4a0960522f8b6a1b6cc7f0e5945f2b7ea51"}, "downloads": -1, "filename": "adamapi-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c886e96dfc6dbfc4f32987f8d7803e86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13968, "upload_time": "2020-02-27T17:01:14", "upload_time_iso_8601": "2020-02-27T17:01:14.676406Z", "url": "https://files.pythonhosted.org/packages/7c/b5/d5bb21952d86f0555f55fd0138b16b297b433592ac46fd747eca4a46543f/adamapi-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea8da3c281b826539093a1f4d8184495", "sha256": "f02ee1c4f903f974f3b65aa2df3046826ca5b032f2045e42f4bb267d464f2b02"}, "downloads": -1, "filename": "adamapi-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ea8da3c281b826539093a1f4d8184495", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12055, "upload_time": "2020-02-27T17:01:16", "upload_time_iso_8601": "2020-02-27T17:01:16.205511Z", "url": "https://files.pythonhosted.org/packages/cc/e9/9c1b51168a75d3c09315bb9afcfddc95a2cfabf17503f720e25811b068da/adamapi-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c886e96dfc6dbfc4f32987f8d7803e86", "sha256": "08f897290f7b4965cf474e44969cf4a0960522f8b6a1b6cc7f0e5945f2b7ea51"}, "downloads": -1, "filename": "adamapi-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c886e96dfc6dbfc4f32987f8d7803e86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13968, "upload_time": "2020-02-27T17:01:14", "upload_time_iso_8601": "2020-02-27T17:01:14.676406Z", "url": "https://files.pythonhosted.org/packages/7c/b5/d5bb21952d86f0555f55fd0138b16b297b433592ac46fd747eca4a46543f/adamapi-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea8da3c281b826539093a1f4d8184495", "sha256": "f02ee1c4f903f974f3b65aa2df3046826ca5b032f2045e42f4bb267d464f2b02"}, "downloads": -1, "filename": "adamapi-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ea8da3c281b826539093a1f4d8184495", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12055, "upload_time": "2020-02-27T17:01:16", "upload_time_iso_8601": "2020-02-27T17:01:16.205511Z", "url": "https://files.pythonhosted.org/packages/cc/e9/9c1b51168a75d3c09315bb9afcfddc95a2cfabf17503f720e25811b068da/adamapi-0.0.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:44 2020"}