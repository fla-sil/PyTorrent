{"info": {"author": "Anders Pearson", "author_email": "anders@columbia.edu", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/thraxil/django-expvar.svg?branch=master)](https://travis-ci.org/thraxil/django-expvar)\n[![Coverage Status](https://coveralls.io/repos/github/thraxil/django-expvar/badge.svg?branch=master)](https://coveralls.io/github/thraxil/django-expvar?branch=master)\n\ndjango-expvar\n==============\n\n[expvar](https://golang.org/pkg/expvar/) compatible endpoint for django\n\n`pip install django-expvar`, add `expvar` to `INSTALLED_APPS` and add\nto your `urls.py`:\n\n```\nfrom expvar.views import ExpVarView\n\n...\n\n    url('^debug/vars$', ExpVarView.as_view(), name='expvar'),\n...\n```\n\nThen, accessing `/debug/vars` on your app will return a JSON dict with\nthe exposed variables, which you can use for monitoring, debugging,\netc.\n\nYou can easily expose variables through the expvar endpoint. In your\ndjango app, just add a `vars.py` file with some classes that subclass\n`expvar.ExpVar` like so:\n\n```\nimport expvar\n\n\nclass Example(expvar.ExpVar):\n    name = 'example'\n\n    def value(self):\n        return 42\n```\n\nIn your django settings, you can optionally specify a `EXPVAR_SKIP`\nvariable with a list of apps to ignore (ie, any `vars.py` files in\nthose apps will be ignored).\n\nIf multiple variables declare the same `name`, two different things\ncan happen:\n\n* if they return scalar values, it's a collision and only one of them\n  will get reported. This is probably not what you intended, so try to\n  stick to unique names\n* if they return dicts as their value, variables with the same name\n  will have their values merged.\n\n## plugins:\n\nBy default, `expvar` will only expose the variables that you set up.\n\nThere are a few additional packages available though that act as\nplugins to provide generic data on commandline arguments, process\ndata, etc. Generally, once you have `expvar` installed, you can pip\ninstall them and add them to `INSTALLED_APPS` and that's enough to use\nthem.\n\n* [django-expvar-cmdline](https://github.com/thraxil/django-expvar-cmdline) -\n  reports the commandline data for the process (useful for\n  compatability with expvarmon and similar, but may pose a security\n  risk if you pass secrets on the commandline)\n* [django-expvar-resource](https://github.com/thraxil/django-expvar-resource) -\n  reports various info on resource usage (memory, interrupts, etc) via\n  a library in the Python's standard lib.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thraxil/django-expvar", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-expvar", "package_url": "https://pypi.org/project/django-expvar/", "platform": "any", "project_url": "https://pypi.org/project/django-expvar/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/thraxil/django-expvar"}, "release_url": "https://pypi.org/project/django-expvar/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Django expvar endpoint", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/thraxil/django-expvar.svg?branch=master)](https://travis-ci.org/thraxil/django-expvar)<br>[![Coverage Status](https://coveralls.io/repos/github/thraxil/django-expvar/badge.svg?branch=master)](https://coveralls.io/github/thraxil/django-expvar?branch=master)<br><br>django-expvar<br>==============<br><br>[expvar](https://golang.org/pkg/expvar/) compatible endpoint for django<br><br>`pip install django-expvar`, add `expvar` to `INSTALLED_APPS` and add<br>to your `urls.py`:<br><br>```<br>from expvar.views import ExpVarView<br><br>...<br><br>    url('^debug/vars$', ExpVarView.as_view(), name='expvar'),<br>...<br>```<br><br>Then, accessing `/debug/vars` on your app will return a JSON dict with<br>the exposed variables, which you can use for monitoring, debugging,<br>etc.<br><br>You can easily expose variables through the expvar endpoint. In your<br>django app, just add a `vars.py` file with some classes that subclass<br>`expvar.ExpVar` like so:<br><br>```<br>import expvar<br><br><br>class Example(expvar.ExpVar):<br>    name = 'example'<br><br>    def value(self):<br>        return 42<br>```<br><br>In your django settings, you can optionally specify a `EXPVAR_SKIP`<br>variable with a list of apps to ignore (ie, any `vars.py` files in<br>those apps will be ignored).<br><br>If multiple variables declare the same `name`, two different things<br>can happen:<br><br>* if they return scalar values, it's a collision and only one of them<br>  will get reported. This is probably not what you intended, so try to<br>  stick to unique names<br>* if they return dicts as their value, variables with the same name<br>  will have their values merged.<br><br>## plugins:<br><br>By default, `expvar` will only expose the variables that you set up.<br><br>There are a few additional packages available though that act as<br>plugins to provide generic data on commandline arguments, process<br>data, etc. Generally, once you have `expvar` installed, you can pip<br>install them and add them to `INSTALLED_APPS` and that's enough to use<br>them.<br><br>* [django-expvar-cmdline](https://github.com/thraxil/django-expvar-cmdline) -<br>  reports the commandline data for the process (useful for<br>  compatability with expvarmon and similar, but may pose a security<br>  risk if you pass secrets on the commandline)<br>* [django-expvar-resource](https://github.com/thraxil/django-expvar-resource) -<br>  reports various info on resource usage (memory, interrupts, etc) via<br>  a library in the Python's standard lib.\n          </div>"}, "last_serial": 2105372, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "69fc0c54c00f207d8378922f778db0b2", "sha256": "3d186de20d2092312ea170f2e55ee43c6d2ef05e8f034480d5bf4673ac06678e"}, "downloads": -1, "filename": "django_expvar-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69fc0c54c00f207d8378922f778db0b2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8184, "upload_time": "2016-05-04T20:54:27", "upload_time_iso_8601": "2016-05-04T20:54:27.979796Z", "url": "https://files.pythonhosted.org/packages/81/74/e4819c0d891dff6c9e81765d7b2f298d644e395fc670a8b739016249e48a/django_expvar-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "583d3908ffd7b66e575530398709bd9f", "sha256": "ac5b4bece41c8e60b536de593d2d1bd608767fae4a144acb58624e62baf0a607"}, "downloads": -1, "filename": "django_expvar-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "583d3908ffd7b66e575530398709bd9f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7958, "upload_time": "2016-05-07T16:17:05", "upload_time_iso_8601": "2016-05-07T16:17:05.050001Z", "url": "https://files.pythonhosted.org/packages/e7/2c/60a6dec0f72f20b51fc8f7a966e1905ee24f0870886c91151a337f423422/django_expvar-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cf519f2b0f99556d51e8689a053c3d04", "sha256": "b10307cf5c75a8ddc9db9d6d7d96b7b443e7e9c9529730c9948fc350950653f4"}, "downloads": -1, "filename": "django_expvar-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf519f2b0f99556d51e8689a053c3d04", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7515, "upload_time": "2016-05-08T19:11:25", "upload_time_iso_8601": "2016-05-08T19:11:25.386820Z", "url": "https://files.pythonhosted.org/packages/0f/9d/edc2a226da76feae25a9b6d3f360b050ec72fb68f80df09dbbac10285d6a/django_expvar-0.2.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf519f2b0f99556d51e8689a053c3d04", "sha256": "b10307cf5c75a8ddc9db9d6d7d96b7b443e7e9c9529730c9948fc350950653f4"}, "downloads": -1, "filename": "django_expvar-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf519f2b0f99556d51e8689a053c3d04", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7515, "upload_time": "2016-05-08T19:11:25", "upload_time_iso_8601": "2016-05-08T19:11:25.386820Z", "url": "https://files.pythonhosted.org/packages/0f/9d/edc2a226da76feae25a9b6d3f360b050ec72fb68f80df09dbbac10285d6a/django_expvar-0.2.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:36:16 2020"}