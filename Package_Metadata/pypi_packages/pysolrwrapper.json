{"info": {"author": "nicolas paris", "author_email": "nicolas.paris@riseup.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# Install\n```\npip install -r requirements.txt\npip install .\n```\n\n# Tests\n```\npython -m pytest\n```\n\n# PEP\n```\npep8\n```\n\n# Usage\n```\nfrom pysolrwrapper.core import SolrQuery\nfrom pysolrwrapper.filter import (FilterText, FilterColumnEnum)\n\n    result = SolrQuery(\"localhost:9983\", \"omop-concept\")\\\n        .set_type_edismax()\\\n        .select([\"concept_id\",\"concept_name\"])\\\n        .add_filter(FilterText([\"disease lethal\", \"patient\"]))\\\n        .add_filter(FilterColumnEnum(\"standard_concept\", [\"c\",\"s\"]))\\\n        .add_filter(FilterColumnEnum(\"standard_concept\", [\"*\"]))\\\n        .highlight([\"concept_name\", \"synonym_concept_name\"])\\\n        .facet(-1, [\"standard_concept\", \"domain_id\"])\\\n        .sort(\"score\", \"asc\")\\\n        .sort(\"concept_id\", \"asc\")\\\n        .limit(2)\\\n\t.run()\n```\n\n# Results\n\nDepending on what you ask for, the result is a dictionnary with this format:\n\n```\n{'num_shown': 2,\n 'num_found': 7052,\n 'docs': [{'concept_id': '42742376',\n           'concept_name': 'Molecular pathology procedure, Level 7'},\n          {'concept_id': '2107646',\n           'concept_name': 'Direct repair of aneurysm, pseudoaneurysm, or excision(partial or total) and graft insertion, with or without patch graft for ruptured aneurysm, abdominal aorta involving iliac vessels(common, hypogastric, external)'}],\n    'facet_fields': {'standard_concept': [{'s': 6263},\n                                          {'c': 789}],\n                     'domain_id': [{'condition': 2870},\n                                   {'measurement': 1621},\n                                   {'observation': 1481},\n                                   {'drug': 659},\n                                   {'procedure': 303},\n                                   {'meas': 100},\n                                   {'value': 100},\n                                   {'provider': 13},\n                                   {'specialty': 13},\n                                   {'device': 3}]\n                     }\n }\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://framagit.org/parisni/pysolrwrapper", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pysolrwrapper", "package_url": "https://pypi.org/project/pysolrwrapper/", "platform": "", "project_url": "https://pypi.org/project/pysolrwrapper/", "project_urls": {"Homepage": "https://framagit.org/parisni/pysolrwrapper"}, "release_url": "https://pypi.org/project/pysolrwrapper/1.0.0/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "A wrapper for pySolr", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Install</h1>\n<pre><code>pip install -r requirements.txt\npip install .\n</code></pre>\n<h1>Tests</h1>\n<pre><code>python -m pytest\n</code></pre>\n<h1>PEP</h1>\n<pre><code>pep8\n</code></pre>\n<h1>Usage</h1>\n<pre><code>from pysolrwrapper.core import SolrQuery\nfrom pysolrwrapper.filter import (FilterText, FilterColumnEnum)\n\n    result = SolrQuery(\"localhost:9983\", \"omop-concept\")\\\n        .set_type_edismax()\\\n        .select([\"concept_id\",\"concept_name\"])\\\n        .add_filter(FilterText([\"disease lethal\", \"patient\"]))\\\n        .add_filter(FilterColumnEnum(\"standard_concept\", [\"c\",\"s\"]))\\\n        .add_filter(FilterColumnEnum(\"standard_concept\", [\"*\"]))\\\n        .highlight([\"concept_name\", \"synonym_concept_name\"])\\\n        .facet(-1, [\"standard_concept\", \"domain_id\"])\\\n        .sort(\"score\", \"asc\")\\\n        .sort(\"concept_id\", \"asc\")\\\n        .limit(2)\\\n\t.run()\n</code></pre>\n<h1>Results</h1>\n<p>Depending on what you ask for, the result is a dictionnary with this format:</p>\n<pre><code>{'num_shown': 2,\n 'num_found': 7052,\n 'docs': [{'concept_id': '42742376',\n           'concept_name': 'Molecular pathology procedure, Level 7'},\n          {'concept_id': '2107646',\n           'concept_name': 'Direct repair of aneurysm, pseudoaneurysm, or excision(partial or total) and graft insertion, with or without patch graft for ruptured aneurysm, abdominal aorta involving iliac vessels(common, hypogastric, external)'}],\n    'facet_fields': {'standard_concept': [{'s': 6263},\n                                          {'c': 789}],\n                     'domain_id': [{'condition': 2870},\n                                   {'measurement': 1621},\n                                   {'observation': 1481},\n                                   {'drug': 659},\n                                   {'procedure': 303},\n                                   {'meas': 100},\n                                   {'value': 100},\n                                   {'provider': 13},\n                                   {'specialty': 13},\n                                   {'device': 3}]\n                     }\n }\n</code></pre>\n\n          </div>"}, "last_serial": 4715373, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f2e054d2cc07eab74bf6019dfb932412", "sha256": "5162dbb3ad23fd170fbc27480dc16986e76e2bbb8b372fca947408fe4896802a"}, "downloads": -1, "filename": "pysolrwrapper-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "f2e054d2cc07eab74bf6019dfb932412", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 9490, "upload_time": "2019-01-19T11:37:44", "upload_time_iso_8601": "2019-01-19T11:37:44.503560Z", "url": "https://files.pythonhosted.org/packages/4f/be/fa3112ecd49c4539d3d47101b640615777e2672cffe555e9b689e0f86d24/pysolrwrapper-1.0.0-py3.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f2e054d2cc07eab74bf6019dfb932412", "sha256": "5162dbb3ad23fd170fbc27480dc16986e76e2bbb8b372fca947408fe4896802a"}, "downloads": -1, "filename": "pysolrwrapper-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "f2e054d2cc07eab74bf6019dfb932412", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 9490, "upload_time": "2019-01-19T11:37:44", "upload_time_iso_8601": "2019-01-19T11:37:44.503560Z", "url": "https://files.pythonhosted.org/packages/4f/be/fa3112ecd49c4539d3d47101b640615777e2672cffe555e9b689e0f86d24/pysolrwrapper-1.0.0-py3.6.egg", "yanked": false}], "timestamp": "Fri May  8 02:56:22 2020"}