{"info": {"author": "mtannaan", "author_email": "12782884+mtannaan@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "============\nasn1vnparser\n============\n\n\n.. image:: https://img.shields.io/pypi/v/asn1vnparser.svg\n        :target: https://pypi.python.org/pypi/asn1vnparser\n\n.. image:: https://img.shields.io/travis/mtannaan/asn1vnparser.svg\n        :target: https://travis-ci.org/mtannaan/asn1vnparser\n\n.. image:: https://readthedocs.org/projects/asn1vnparser/badge/?version=latest\n        :target: https://asn1vnparser.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n\n\nParses ASN.1 value notation into a Python object or JSON without requiring its ASN.1 schema.\n\n\n* Free software: MIT license\n* Documentation: https://asn1vnparser.readthedocs.io.\n\n\nFeatures\n--------\n\n* Parsing ASN.1 value notation into a Python object, or a JSON string\n* No ASN.1 Schema Required\n\nLimitations\n-----------\n\n* Since Knowledge of schema is not used, misdetection of ASN.1 types can occur; see Type Translations section.\n* Some ASN.1 types and grammars are not supported; see grammar.py.\n\nType Translations\n-----------------\n\n`asn1vnparser` performs the following type translations:\n\n======================================  =================  =============================  ==========================\nASN.1 Type                              Python Type        JSON Type                      Example (ASN.1 -> Python)\n======================================  =================  =============================  ==========================\nNULL                                    None               null                           NULL -> None\nBOOLEAN                                 bool               True/False                     TRUE -> True\nINTEGER                                 int                number (int)                   3 -> 3\nREAL                                    float              number (real)                  0.1 -> 0.1\nBIT STRING (^1)                         bitarray.bitarray  string (e.g. \"010101\")         '010101'B -> bitarray.bitarray('010101')\nOCTET STRING (^1)                       bytes              string (e.g. \"0123ab\")         '0123AB'H -> b'\\x01\\x23\\xab'\n`cstring` (PrintableString, etc.)       str                string                         \"foobar\" -> 'foobar'\nENUMERATED                              str                string                         any-identifier -> 'any-identifier'\nCHOICE                                  Dict[str, Any]     {\"string\": (any JSON object)}  alt1 : 123 -> {'alt1': 123}\nOpen Type  (e.g. type field)            Dict[str, Any]     {\"String\": (any JSON object)}  Type1 : 123 -> {'Type1': 123}\nempty SEQUENCE or SEQUENCE OF           {} (empty dict)    {} (empty object)              {} -> {}, [] -> {}\nSEQUENCE                                dict               object                         {f1 val, f2 1} -> {'f1': 'val', 'f2': 1}\nSEQUENCE OF                             list               array                          [1, 2, 3] -> [1, 2, 3]\nOBJECT IDENTIFIER                       List[int]          array of number (int)          {1 2 3} -> [1, 2, 3]\n======================================  =================  =============================  ==========================\n\n(^1) ``CONTAINING (some_value)`` is interpreted as simply ``(some_value)``, e.g.::\n\n    {\n        field1 123,\n        field2 CONTAINING {\n            field2-1 TRUE,\n            field2-2 FALSE\n        }\n    }\n\nis parsed into following Python object::\n\n    {\n        \"field1\": 123,\n        \"field2\": {\n            \"field2-1\": True,\n            \"field2-2\": False\n        }\n    }\n\n\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.2.0 (2019-10-02)\n------------------\nNew Features\n************\n\n- Partial parsing of a value or a value assignment (``parse_all`` option)\n\n.. code-block:: python\n\n    >>> parse_asn1_value(\n    ...     \"alt1: enum1\\n---this is remaining string---\",\n    ...     as_json=True,\n    ...     parse_all=False)  # as_json\n    ('{\"alt1\": \"enum1\"}', '\\n---this is remaining string---')\n\n- Parsing multiple value assignments\n\n.. code-block:: python\n\n    >>> parse_asn1_value_assignments(\n    ...     'value1 INTEGER ::= 1\\nvalue2 Type2 ::= the-value')\n    [\n        {'value_name': 'value1', 'type_name': 'INTEGER', 'value': 1},\n        {'value_name': 'value2', 'type_name': 'Type2', 'value': 'the-value'}\n    ]\n\nBug Fixes\n*********\n\n- CLI no longer crashes when given ``--json`` option.\n\n\n0.1.0 (2019-09-29)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mtannaan/asn1vnparser", "keywords": "asn1vnparser", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "asn1vnparser", "package_url": "https://pypi.org/project/asn1vnparser/", "platform": "", "project_url": "https://pypi.org/project/asn1vnparser/", "project_urls": {"Homepage": "https://github.com/mtannaan/asn1vnparser"}, "release_url": "https://pypi.org/project/asn1vnparser/0.2.0/", "requires_dist": ["bitarray (>=0.8.3)", "pyparsing (>=2.4.2)"], "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Parses ASN.1 value notation into a Python object or JSON without requiring its ASN.1 schema.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"asn1vnparser\">\n<h2>asn1vnparser</h2>\n<a href=\"https://pypi.python.org/pypi/asn1vnparser\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/asn1vnparser.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0b61d1df4543e652a066de1739b416535119b57/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61736e31766e7061727365722e737667\"></a>\n<a href=\"https://travis-ci.org/mtannaan/asn1vnparser\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/mtannaan/asn1vnparser.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7a7886db14e353ac8eef04c18b4689d6b82293b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d74616e6e61616e2f61736e31766e7061727365722e737667\"></a>\n<a href=\"https://asn1vnparser.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6dac7afe02e2682a0b65071badd3b5c87d0e4cce/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61736e31766e7061727365722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Parses ASN.1 value notation into a Python object or JSON without requiring its ASN.1 schema.</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://asn1vnparser.readthedocs.io\" rel=\"nofollow\">https://asn1vnparser.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Parsing ASN.1 value notation into a Python object, or a JSON string</li>\n<li>No ASN.1 Schema Required</li>\n</ul>\n</div>\n<div id=\"limitations\">\n<h3>Limitations</h3>\n<ul>\n<li>Since Knowledge of schema is not used, misdetection of ASN.1 types can occur; see Type Translations section.</li>\n<li>Some ASN.1 types and grammars are not supported; see grammar.py.</li>\n</ul>\n</div>\n<div id=\"type-translations\">\n<h3>Type Translations</h3>\n<p><cite>asn1vnparser</cite> performs the following type translations:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>ASN.1 Type</th>\n<th>Python Type</th>\n<th>JSON Type</th>\n<th>Example (ASN.1 -&gt; Python)</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>NULL</td>\n<td>None</td>\n<td>null</td>\n<td>NULL -&gt; None</td>\n</tr>\n<tr><td>BOOLEAN</td>\n<td>bool</td>\n<td>True/False</td>\n<td>TRUE -&gt; True</td>\n</tr>\n<tr><td>INTEGER</td>\n<td>int</td>\n<td>number (int)</td>\n<td>3 -&gt; 3</td>\n</tr>\n<tr><td>REAL</td>\n<td>float</td>\n<td>number (real)</td>\n<td>0.1 -&gt; 0.1</td>\n</tr>\n<tr><td>BIT STRING (^1)</td>\n<td>bitarray.bitarray</td>\n<td>string (e.g. \u201c010101\u201d)</td>\n<td>\u2018010101\u2019B -&gt; bitarray.bitarray(\u2018010101\u2019)</td>\n</tr>\n<tr><td>OCTET STRING (^1)</td>\n<td>bytes</td>\n<td>string (e.g. \u201c0123ab\u201d)</td>\n<td>\u20180123AB\u2019H -&gt; b\u2019x01x23xab\u2019</td>\n</tr>\n<tr><td><cite>cstring</cite> (PrintableString, etc.)</td>\n<td>str</td>\n<td>string</td>\n<td>\u201cfoobar\u201d -&gt; \u2018foobar\u2019</td>\n</tr>\n<tr><td>ENUMERATED</td>\n<td>str</td>\n<td>string</td>\n<td>any-identifier -&gt; \u2018any-identifier\u2019</td>\n</tr>\n<tr><td>CHOICE</td>\n<td>Dict[str, Any]</td>\n<td>{\u201cstring\u201d: (any JSON object)}</td>\n<td>alt1 : 123 -&gt; {\u2018alt1\u2019: 123}</td>\n</tr>\n<tr><td>Open Type  (e.g. type field)</td>\n<td>Dict[str, Any]</td>\n<td>{\u201cString\u201d: (any JSON object)}</td>\n<td>Type1 : 123 -&gt; {\u2018Type1\u2019: 123}</td>\n</tr>\n<tr><td>empty SEQUENCE or SEQUENCE OF</td>\n<td>{} (empty dict)</td>\n<td>{} (empty object)</td>\n<td>{} -&gt; {}, [] -&gt; {}</td>\n</tr>\n<tr><td>SEQUENCE</td>\n<td>dict</td>\n<td>object</td>\n<td>{f1 val, f2 1} -&gt; {\u2018f1\u2019: \u2018val\u2019, \u2018f2\u2019: 1}</td>\n</tr>\n<tr><td>SEQUENCE OF</td>\n<td>list</td>\n<td>array</td>\n<td>[1, 2, 3] -&gt; [1, 2, 3]</td>\n</tr>\n<tr><td>OBJECT IDENTIFIER</td>\n<td>List[int]</td>\n<td>array of number (int)</td>\n<td>{1 2 3} -&gt; [1, 2, 3]</td>\n</tr>\n</tbody>\n</table>\n<p>(^1) <tt>CONTAINING (some_value)</tt> is interpreted as simply <tt>(some_value)</tt>, e.g.:</p>\n<pre>{\n    field1 123,\n    field2 CONTAINING {\n        field2-1 TRUE,\n        field2-2 FALSE\n    }\n}\n</pre>\n<p>is parsed into following Python object:</p>\n<pre>{\n    \"field1\": 123,\n    \"field2\": {\n        \"field2-1\": True,\n        \"field2-2\": False\n    }\n}\n</pre>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.0 (2019-10-02)</h3>\n<div id=\"new-features\">\n<h4>New Features</h4>\n<ul>\n<li>Partial parsing of a value or a value assignment (<tt>parse_all</tt> option)</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">parse_asn1_value</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"s2\">\"alt1: enum1</span><span class=\"se\">\\n</span><span class=\"s2\">---this is remaining string---\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">as_json</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">parse_all</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># as_json</span>\n<span class=\"p\">(</span><span class=\"s1\">'{\"alt1\": \"enum1\"}'</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">---this is remaining string---'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Parsing multiple value assignments</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">parse_asn1_value_assignments</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'value1 INTEGER ::= 1</span><span class=\"se\">\\n</span><span class=\"s1\">value2 Type2 ::= the-value'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s1\">'value_name'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'type_name'</span><span class=\"p\">:</span> <span class=\"s1\">'INTEGER'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'value_name'</span><span class=\"p\">:</span> <span class=\"s1\">'value2'</span><span class=\"p\">,</span> <span class=\"s1\">'type_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Type2'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'the-value'</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"bug-fixes\">\n<h4>Bug Fixes</h4>\n<ul>\n<li>CLI no longer crashes when given <tt><span class=\"pre\">--json</span></tt> option.</li>\n</ul>\n</div>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2019-09-29)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5918526, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2ffebc0b199292ecef3de86aa69a11c6", "sha256": "c618d4c8ad7dabf7d64eed51595ed6284b9be20a6096e1cce9f02fd4a3ac2e47"}, "downloads": -1, "filename": "asn1vnparser-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ffebc0b199292ecef3de86aa69a11c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 9511, "upload_time": "2019-09-29T14:36:46", "upload_time_iso_8601": "2019-09-29T14:36:46.410778Z", "url": "https://files.pythonhosted.org/packages/50/a0/62e9c34c4bdef4eb767591c69184f871c040f7901058243b909c87a7572a/asn1vnparser-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acf00925c7a223ad63270d995582f494", "sha256": "1e1f2ed0e0e40f495fd67a6aa3196db23db916e9430cfccb4cb6f3d432ed6d99"}, "downloads": -1, "filename": "asn1vnparser-0.1.0.tar.gz", "has_sig": false, "md5_digest": "acf00925c7a223ad63270d995582f494", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 15890, "upload_time": "2019-09-29T14:36:58", "upload_time_iso_8601": "2019-09-29T14:36:58.290782Z", "url": "https://files.pythonhosted.org/packages/05/68/b68b71ca8295295bd90f340bab55977dd72cfbd2111b94145107088aacee/asn1vnparser-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "72e4310517557ec907bc20a69a8d35ad", "sha256": "2e2dee610c634e91fae742b95140ebc48ee65ed3ee1cfffd01b0f9b2c809ca7d"}, "downloads": -1, "filename": "asn1vnparser-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72e4310517557ec907bc20a69a8d35ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 10849, "upload_time": "2019-10-02T15:26:20", "upload_time_iso_8601": "2019-10-02T15:26:20.732914Z", "url": "https://files.pythonhosted.org/packages/7d/61/344d553bbc087f16fdeb5072b46ee97de203abc95102dc3638ffe15da892/asn1vnparser-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf6e9599ad17fb81bf7e6b319dfe8a50", "sha256": "8fb1c5ab6a6b978918124473a00eb6e2550033bae5eb38f09871e25ff2f28a80"}, "downloads": -1, "filename": "asn1vnparser-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cf6e9599ad17fb81bf7e6b319dfe8a50", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 18364, "upload_time": "2019-10-02T15:26:29", "upload_time_iso_8601": "2019-10-02T15:26:29.155409Z", "url": "https://files.pythonhosted.org/packages/73/d5/6cab1da8ba16477f94fd6a3d502e2c05280509f1b920da8a3fdfa9c95f5e/asn1vnparser-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "72e4310517557ec907bc20a69a8d35ad", "sha256": "2e2dee610c634e91fae742b95140ebc48ee65ed3ee1cfffd01b0f9b2c809ca7d"}, "downloads": -1, "filename": "asn1vnparser-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72e4310517557ec907bc20a69a8d35ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 10849, "upload_time": "2019-10-02T15:26:20", "upload_time_iso_8601": "2019-10-02T15:26:20.732914Z", "url": "https://files.pythonhosted.org/packages/7d/61/344d553bbc087f16fdeb5072b46ee97de203abc95102dc3638ffe15da892/asn1vnparser-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf6e9599ad17fb81bf7e6b319dfe8a50", "sha256": "8fb1c5ab6a6b978918124473a00eb6e2550033bae5eb38f09871e25ff2f28a80"}, "downloads": -1, "filename": "asn1vnparser-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cf6e9599ad17fb81bf7e6b319dfe8a50", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 18364, "upload_time": "2019-10-02T15:26:29", "upload_time_iso_8601": "2019-10-02T15:26:29.155409Z", "url": "https://files.pythonhosted.org/packages/73/d5/6cab1da8ba16477f94fd6a3d502e2c05280509f1b920da8a3fdfa9c95f5e/asn1vnparser-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:57 2020"}