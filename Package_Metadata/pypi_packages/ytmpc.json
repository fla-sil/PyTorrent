{"info": {"author": "Stefan Huchler", "author_email": "s.huchler@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=====\nytmpc\n=====\n\nYoutube MPlayer Controller\n\nytmpc is a set of tools to manage youtube searches/channels you want to watch and opens them in (S)Mplayer\n\nAt the moment the tools that are included in this package are: \"ytmpc\" and \"yt_curses\"\n\nLicense\n=======\n\nytmpc is free software and licensed under the GNU GPLv3 or later. You\nare welcome to change and redistribute it under certain conditions. For more\ninformation see the COPYING file or visit http://www.gnu.org/licenses/gpl-3.0.html\n\nyt_curses\n---------\n\nThe main tool now is yt_curses (a curses-wrapper around of ytmpc)\n\nIts inspired by minitube, but has a quick console curces gui, it starts the videos from the oldest to the newest in the choosen time-span. So you dont have to rearange a playlist like in minitube to get multipart videos run in the right direction. Additionaly another point why I wrote it, if not the most important one, is that it uses mplayer instead of gstreamer. On machines like some of mine (amd zacate) that makes 1 to 1.5 cores busy if you watch it in 720p, and browsing and other multitasking tasks slow down badly. with ytmpc/mplayer it only keeps here 0.5-0.7 cores busy.\n\nif you like it and want to give me suggestions what I should make better or anything else, feel free to write me a email to s.huchler@gmail.com\n\nJust start it with:\n\n> ./yt_curses\n\nits pretty much self explainable, just press the key that you see in front of the function you want:\n\nWith the keys [c] and [s] you can switch the stream mode s for a normal youtube search and c for channel.\nThen press [n] for new, to add a new search/channel. Now your most recent Searches gets listed and you can, start them again with the numbers in front of it.\n\n------------------------------------------------------------------------\n\nytmpc\n-----\n\nThe rest of the helpfile is to show you how you can use the ytmpc programm directly, its less user-friendly but has yet some more features, like downloading your selection. or a shuffle mode:\n\nCommands:\n---------\ncommand: search / download / stream / playlist\nquery: 'multiple keywords' / singlekeyword / u_author\norder: relevance, viewcount, published or rating\nnumber of results: 1 - 50  |  -1 for all (50 is maximum)\ntimespan (optional): today, week, month, all\nmode (optional): shuffle, reverse\n\n\nControls:\n---------\np = prev\nn = next\nSPACE = pause\nStrg + q = quit\n\n\nExample usage:\n---------------\n./ytmpc search 'ukf drum and bass' rating 20 shuffle\nReturns 20 videos with query sorted by rating and shuffled\n\n./ytmpc download 'ukf drum and bass' viewcount 10 shuffle\nDownloads 10 videos with query sorted by viewcount and shuffled\n\n./ytmpc stream 'ukf drum and bass' relevance 2 month\nStream 2 videos with query sorted by relevance and uploaded between now and a month ago\n\n./ytmpc stream u_PsyStarcraft published 10\nStream the 10 latest videos of the Channel from PsyStarcraft\n\n./ytmpc stream u_hdstarcraft published 10 reverse\nStream the 10 latest videos in reverse order from hdstarcrafts channel\n\n./ytmpc stream u_hdstarcraft published -1 reverse today\nStream all the latest videos FROM TODAY in reverse order from hdstarcrafts channel\n\n./ytmpc playlist 'ukf drum and bass' relevance 2 month\nOutputs a playlist in the m3u format to the console\nhope that can be used for piping playlists to other players\n\n./ytmpc playlist 'ukf drum and bass' relevance 2 month > /tmp/ytmpc.m3u; totem /tmp/ytmpc.m3u\nCreates a temporary playlist and opens it with totem\n\n\nINSTALL\n=======\n\nEither clone the git tree and then with root-privileges call:\n\n> python setup.py install\n\n\nOr with Pip:\n\n> pip install ytmpc\n\n\n***\n(don't forget to install SMPlayer with apt/yum or whatever tools your distribution gives you,\n\t\t\t because SMPlayer is not in pypi so pip cannot install that dependency)\n***\n\nRequirements:\n=============\n\nSMPlayer\nPython 2.7+\npython-gdata\n\nEnjoy!\n\nSpiderbit", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/spiderbit/ytmpc", "keywords": null, "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "ytmpc", "package_url": "https://pypi.org/project/ytmpc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ytmpc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/spiderbit/ytmpc"}, "release_url": "https://pypi.org/project/ytmpc/0.1.1-1-gde998f7/", "requires_dist": null, "requires_python": null, "summary": "Youtube MPlayer Controller", "version": "0.1.1-1-gde998f7", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>ytmpc<br>=====<br><br>Youtube MPlayer Controller<br><br>ytmpc is a set of tools to manage youtube searches/channels you want to watch and opens them in (S)Mplayer<br><br>At the moment the tools that are included in this package are: \"ytmpc\" and \"yt_curses\"<br><br>License<br>=======<br><br>ytmpc is free software and licensed under the GNU GPLv3 or later. You<br>are welcome to change and redistribute it under certain conditions. For more<br>information see the COPYING file or visit http://www.gnu.org/licenses/gpl-3.0.html<br><br>yt_curses<br>---------<br><br>The main tool now is yt_curses (a curses-wrapper around of ytmpc)<br><br>Its inspired by minitube, but has a quick console curces gui, it starts the videos from the oldest to the newest in the choosen time-span. So you dont have to rearange a playlist like in minitube to get multipart videos run in the right direction. Additionaly another point why I wrote it, if not the most important one, is that it uses mplayer instead of gstreamer. On machines like some of mine (amd zacate) that makes 1 to 1.5 cores busy if you watch it in 720p, and browsing and other multitasking tasks slow down badly. with ytmpc/mplayer it only keeps here 0.5-0.7 cores busy.<br><br>if you like it and want to give me suggestions what I should make better or anything else, feel free to write me a email to s.huchler@gmail.com<br><br>Just start it with:<br><br>&gt; ./yt_curses<br><br>its pretty much self explainable, just press the key that you see in front of the function you want:<br><br>With the keys [c] and [s] you can switch the stream mode s for a normal youtube search and c for channel.<br>Then press [n] for new, to add a new search/channel. Now your most recent Searches gets listed and you can, start them again with the numbers in front of it.<br><br>------------------------------------------------------------------------<br><br>ytmpc<br>-----<br><br>The rest of the helpfile is to show you how you can use the ytmpc programm directly, its less user-friendly but has yet some more features, like downloading your selection. or a shuffle mode:<br><br>Commands:<br>---------<br>command: search / download / stream / playlist<br>query: 'multiple keywords' / singlekeyword / u_author<br>order: relevance, viewcount, published or rating<br>number of results: 1 - 50  |  -1 for all (50 is maximum)<br>timespan (optional): today, week, month, all<br>mode (optional): shuffle, reverse<br><br><br>Controls:<br>---------<br>p = prev<br>n = next<br>SPACE = pause<br>Strg + q = quit<br><br><br>Example usage:<br>---------------<br>./ytmpc search 'ukf drum and bass' rating 20 shuffle<br>Returns 20 videos with query sorted by rating and shuffled<br><br>./ytmpc download 'ukf drum and bass' viewcount 10 shuffle<br>Downloads 10 videos with query sorted by viewcount and shuffled<br><br>./ytmpc stream 'ukf drum and bass' relevance 2 month<br>Stream 2 videos with query sorted by relevance and uploaded between now and a month ago<br><br>./ytmpc stream u_PsyStarcraft published 10<br>Stream the 10 latest videos of the Channel from PsyStarcraft<br><br>./ytmpc stream u_hdstarcraft published 10 reverse<br>Stream the 10 latest videos in reverse order from hdstarcrafts channel<br><br>./ytmpc stream u_hdstarcraft published -1 reverse today<br>Stream all the latest videos FROM TODAY in reverse order from hdstarcrafts channel<br><br>./ytmpc playlist 'ukf drum and bass' relevance 2 month<br>Outputs a playlist in the m3u format to the console<br>hope that can be used for piping playlists to other players<br><br>./ytmpc playlist 'ukf drum and bass' relevance 2 month &gt; /tmp/ytmpc.m3u; totem /tmp/ytmpc.m3u<br>Creates a temporary playlist and opens it with totem<br><br><br>INSTALL<br>=======<br><br>Either clone the git tree and then with root-privileges call:<br><br>&gt; python setup.py install<br><br><br>Or with Pip:<br><br>&gt; pip install ytmpc<br><br><br>***<br>(don't forget to install SMPlayer with apt/yum or whatever tools your distribution gives you,<br>\t\t\t because SMPlayer is not in pypi so pip cannot install that dependency)<br>***<br><br>Requirements:<br>=============<br><br>SMPlayer<br>Python 2.7+<br>python-gdata<br><br>Enjoy!<br><br>Spiderbit\n          </div>"}, "last_serial": 801983, "releases": {"0.1.1-1-gde998f7": [{"comment_text": "", "digests": {"md5": "0473c96d8afa2d163203e4ed0f9e94d9", "sha256": "b201a5dbae4d569e5ef1a82d4cde1626a108bb8ab5306241a02227e1d4df3155"}, "downloads": -1, "filename": "ytmpc-0.1.1-1-gde998f7.tar.gz", "has_sig": false, "md5_digest": "0473c96d8afa2d163203e4ed0f9e94d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25212, "upload_time": "2012-11-09T18:36:28", "upload_time_iso_8601": "2012-11-09T18:36:28.454158Z", "url": "https://files.pythonhosted.org/packages/ef/ec/0b3413101a87afeac0ef2ec297092f899cda610eaeb061ce8a783b7858ae/ytmpc-0.1.1-1-gde998f7.tar.gz", "yanked": false}], "0.1.1-dirty": [{"comment_text": "", "digests": {"md5": "0983d647a79cb2474028d729cd3eac6b", "sha256": "6ffe0b7e12c3569d3be2cccf18bb1e1c5d6b727d877d146b5a33aa325110b857"}, "downloads": -1, "filename": "ytmpc-0.1.1-dirty.tar.gz", "has_sig": false, "md5_digest": "0983d647a79cb2474028d729cd3eac6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25238, "upload_time": "2012-11-09T18:03:54", "upload_time_iso_8601": "2012-11-09T18:03:54.916260Z", "url": "https://files.pythonhosted.org/packages/0b/5a/3f5ea1a77af2d61eeeeea90a107d382210cb48b93ca80d7b84b608cb108c/ytmpc-0.1.1-dirty.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0473c96d8afa2d163203e4ed0f9e94d9", "sha256": "b201a5dbae4d569e5ef1a82d4cde1626a108bb8ab5306241a02227e1d4df3155"}, "downloads": -1, "filename": "ytmpc-0.1.1-1-gde998f7.tar.gz", "has_sig": false, "md5_digest": "0473c96d8afa2d163203e4ed0f9e94d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25212, "upload_time": "2012-11-09T18:36:28", "upload_time_iso_8601": "2012-11-09T18:36:28.454158Z", "url": "https://files.pythonhosted.org/packages/ef/ec/0b3413101a87afeac0ef2ec297092f899cda610eaeb061ce8a783b7858ae/ytmpc-0.1.1-1-gde998f7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:31 2020"}