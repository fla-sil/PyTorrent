{"info": {"author": "Luiz Menezes", "author_email": "luiz.menezesf@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "=========\nredistore\n=========\n\n.. image:: https://badge.fury.io/py/redistore.svg\n    :target: https://badge.fury.io/py/redistore\n\n.. image:: https://travis-ci.org/lamenezes/redistore.svg?branch=master\n    :target: https://travis-ci.org/lamenezes/redistore\n\n.. image:: https://coveralls.io/repos/github/lamenezes/redistore/badge.svg?branch=master\n    :target: https://coveralls.io/github/lamenezes/redistore?branch=master\n\n.. image:: https://img.shields.io/badge/python-3.4,3.5,3.6-blue.svg\n    :target: https://github.com/lamenezes/simple-model\n\n\nSimple python interface for redis \n\nInstallation\n============\n\n.. code:: bash\n\n    pip install redistore\n\n\nUsage\n=====\n\n.. code:: python\n\n    >> import redistore\n    >> store = redistore.get(host='localhost', port=6379, db=0)\n\nNow you can access and store keys and values with a dict-like interface:\n\n.. code:: python\n\n    >> store['foo'] = 'bar'\n    >> store['foo']\n    'bar'\n    >> 'foo' in store\n    True\n    >> del store['foo']\n    >> store['foo']\n    ...\n    KeyError: 'foo'\n\nOr using methods:\n\n.. code:: python\n\n    >> store.set('baz', 'qux')\n    >> store.get('baz')\n    'qux'\n\n``redistore`` support other data types, e.g., hashes. they are used exactly like a dict:\n\n.. code:: python\n\n    >> store['hash'] = {}  # creates a hash without any values\n    >> 'my' in store['hash']\n    True\n    >> store['hash']['my']\n    'hash'\n    >> store['hash'].update({'baz': 'qux'})\n    >> store['hash']['baz']\n    'qux'\n    >> len(store['hash'])\n    2\n    >> list(store.keys())\n    ['foo', 'bar']\n    >> for key, value in store.items():\n    ...    print(key, value)\n    ...\n    my hash\n    baz qux\n    >> store['other_hash'] = {'foo': 'bar'}  # creates a hash with values\n    >> store['other_hash']['foo']\n    'bar'", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lamenezes/redistore", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "redistore", "package_url": "https://pypi.org/project/redistore/", "platform": "", "project_url": "https://pypi.org/project/redistore/", "project_urls": {"Homepage": "https://github.com/lamenezes/redistore"}, "release_url": "https://pypi.org/project/redistore/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Simple python interface for redis", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/redistore\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/redistore.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bddd29b034e3dcdf60a1325dce3c98753ecf076/68747470733a2f2f62616467652e667572792e696f2f70792f7265646973746f72652e737667\"></a>\n<a href=\"https://travis-ci.org/lamenezes/redistore\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/lamenezes/redistore.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bce67450f9a18ac80695722ea31c2b2543be8b1/68747470733a2f2f7472617669732d63692e6f72672f6c616d656e657a65732f7265646973746f72652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/lamenezes/redistore?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/lamenezes/redistore/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0868d2b8ea1150672598e8b5ffc9723436a0d4f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c616d656e657a65732f7265646973746f72652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/lamenezes/simple-model\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.4,3.5,3.6-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e1c1ede2a38920652253b647d15fafbe075c5b8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e342c332e352c332e362d626c75652e737667\"></a>\n<p>Simple python interface for redis</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install redistore\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">redistore</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">redistore</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>Now you can access and store keys and values with a dict-like interface:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'bar'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"s1\">'bar'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s1\">'foo'</span> <span class=\"ow\">in</span> <span class=\"n\">store</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"k\">del</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"o\">...</span>\n<span class=\"ne\">KeyError</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span>\n</pre>\n<p>Or using methods:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'baz'</span><span class=\"p\">,</span> <span class=\"s1\">'qux'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'baz'</span><span class=\"p\">)</span>\n<span class=\"s1\">'qux'</span>\n</pre>\n<p><tt>redistore</tt> support other data types, e.g., hashes. they are used exactly like a dict:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>  <span class=\"c1\"># creates a hash without any values</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"s1\">'my'</span> <span class=\"ow\">in</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">]</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">][</span><span class=\"s1\">'my'</span><span class=\"p\">]</span>\n<span class=\"s1\">'hash'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s1\">'baz'</span><span class=\"p\">:</span> <span class=\"s1\">'qux'</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">][</span><span class=\"s1\">'baz'</span><span class=\"p\">]</span>\n<span class=\"s1\">'qux'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">])</span>\n<span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">my</span> <span class=\"nb\">hash</span>\n<span class=\"n\">baz</span> <span class=\"n\">qux</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'other_hash'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">}</span>  <span class=\"c1\"># creates a hash with values</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'other_hash'</span><span class=\"p\">][</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"s1\">'bar'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4089572, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dd11fadd79660fd9eed28501aba309cc", "sha256": "5c5986a55c39e19b12bc9710fb50f8add3798de4e43a84b1785a0a31df1dcbd8"}, "downloads": -1, "filename": "redistore-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dd11fadd79660fd9eed28501aba309cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3269, "upload_time": "2018-03-24T22:30:50", "upload_time_iso_8601": "2018-03-24T22:30:50.080108Z", "url": "https://files.pythonhosted.org/packages/6c/a7/3ce0ac61fde72353dcb5776a2c20a15c036e3ebb75dc1f3768bb32900b72/redistore-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "796542aab7019510e84d3b630816aeec", "sha256": "31f7625a8405ad59706fedf04d8b2b6267f8bd164340a4bcc73a3af6f788bc0a"}, "downloads": -1, "filename": "redistore-0.1.1.tar.gz", "has_sig": false, "md5_digest": "796542aab7019510e84d3b630816aeec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3362, "upload_time": "2018-07-22T01:52:33", "upload_time_iso_8601": "2018-07-22T01:52:33.953660Z", "url": "https://files.pythonhosted.org/packages/e1/ca/86ec6ba1cfcbe19215283f9af70f0f4349aba79447338e30c54ab80c5ba9/redistore-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "796542aab7019510e84d3b630816aeec", "sha256": "31f7625a8405ad59706fedf04d8b2b6267f8bd164340a4bcc73a3af6f788bc0a"}, "downloads": -1, "filename": "redistore-0.1.1.tar.gz", "has_sig": false, "md5_digest": "796542aab7019510e84d3b630816aeec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3362, "upload_time": "2018-07-22T01:52:33", "upload_time_iso_8601": "2018-07-22T01:52:33.953660Z", "url": "https://files.pythonhosted.org/packages/e1/ca/86ec6ba1cfcbe19215283f9af70f0f4349aba79447338e30c54ab80c5ba9/redistore-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:44 2020"}