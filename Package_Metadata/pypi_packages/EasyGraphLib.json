{"info": {"author": "Ilya Baranov", "author_email": "logotipick@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# EasyGraphLib\n\nThis is a simple package for working with graphs in Python 3.\n\nTasks:\n- [x] Add weighted graph.\n- [x] Add unweighted graph.\n- [ ] Add tree's.\n\n\"class weighted_graph\" methods:  \n\n*  **add_node**(\"node name\", \"connect or connections\", \"values for con/con's\") - This method create Node with connections, and Nodes for connections.\n\n*  **add_connections**(\"node name\", \"connection or connections\", \"values for con/con's\") - This method adding connections to Node, and create new Nodes for connections.  \n\n*  **update_connection**(\"node name\", \"connection\", \"value\") - This method update weight for connection.  \n\n*  **remove_node**(\"node name\") - Remove node with connections.  \n\n*  **remove_connection**(\"node name\", \"connection\") - Remove connection from node.  \n\n*  **compile_graph()** - Compile EasyGraphLib struct.  \n\n*  **find_tnw_d**(\"EasyGraphLib struct\") - Dijkstra algorythm.  \n\n    ```python\n    import easygraphlib as egl\n\n    wg = egl.weighted_graph()\n\n    wg.add_node(\"start\", (\"a\", \"b\"), (6,2))\n    wg.add_connections(\"start\", (\"c\"), (3))\n    wg.add_connections(\"c\", (\"a\", \"fin\"), (2, 2))\n    wg.add_connections(\"a\", (\"fin\"), (3))\n    wg.add_connections(\"b\", (\"a\", \"fin\"), (3, 5))\n    wg.update_connection(\"start\", \"c\", (4))\n    wg.update_connection(\"a\", (\"fin\"), (1))\n\n    input_graph = wg.compile_graph()\n    print(input_graph)\n    ```\n\n\"class unweighted_graph\" methods:  \n\n*  **add_node**(\"node name\", \"value\", \"connections\", \"auto create node flag True/False\") - This method create Node with connections, and Nodes for connections.\n\n*   **add_connections**(\"node name\", \"connection or connections\", \"auto create node flag True/False\") - This method adding connections to Node, and create new Nodes for connections. \n\n*  **update_value**(\"node name\", \"value\") - Update value for Node.\n\n*  **remove_node**(\"node name\") - Remove node with connections.\n\n*  **remove_connection**(\"node name\", \"connection\") - remove connection from node.\n\n*  **get_graph()**\n\n*  **wide_search(\"node name\", \"value\", \"condition\")**\n\n    ```python\n    import easygraphlib as egl\n\n    uwg = egl.unweighted_graph()\n\n    uwg.add_node(\"me\", False, (\"Patrick\", \"Carry\", \"Josh\"))\n    uwg.add_node(\"Joseph\", False, (\"Lora\"))\n    uwg.add_connections(\"Patrick\", (\"Henry\", \"July\", \"me\"))\n\n    print(uwg.get_graph())\n\n    uwg.add_connections(\"me\", (\"Henry\", \"Harry\"))\n    uwg.add_connections(\"Patrick\", \"Henry\")\n    print(uwg.get_graph())\n    ```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://gitlab.com/AdamFull/easygraphlib/blob/master/dist/EasyGraphLib-0.3.0-py3-none-any.whl", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/AdamFull/easygraphlib", "keywords": "Graph,Modeling,Structures", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "EasyGraphLib", "package_url": "https://pypi.org/project/EasyGraphLib/", "platform": "", "project_url": "https://pypi.org/project/EasyGraphLib/", "project_urls": {"Download": "https://gitlab.com/AdamFull/easygraphlib/blob/master/dist/EasyGraphLib-0.3.0-py3-none-any.whl", "Homepage": "https://gitlab.com/AdamFull/easygraphlib"}, "release_url": "https://pypi.org/project/EasyGraphLib/0.3.5/", "requires_dist": null, "requires_python": "", "summary": "Python library for creating graphs, trees, and gemini structures.", "version": "0.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>EasyGraphLib</h1>\n<p>This is a simple package for working with graphs in Python 3.</p>\n<p>Tasks:</p>\n<ul>\n<li>[x] Add weighted graph.</li>\n<li>[x] Add unweighted graph.</li>\n<li>[ ] Add tree's.</li>\n</ul>\n<p>\"class weighted_graph\" methods:</p>\n<ul>\n<li>\n<p><strong>add_node</strong>(\"node name\", \"connect or connections\", \"values for con/con's\") - This method create Node with connections, and Nodes for connections.</p>\n</li>\n<li>\n<p><strong>add_connections</strong>(\"node name\", \"connection or connections\", \"values for con/con's\") - This method adding connections to Node, and create new Nodes for connections.</p>\n</li>\n<li>\n<p><strong>update_connection</strong>(\"node name\", \"connection\", \"value\") - This method update weight for connection.</p>\n</li>\n<li>\n<p><strong>remove_node</strong>(\"node name\") - Remove node with connections.</p>\n</li>\n<li>\n<p><strong>remove_connection</strong>(\"node name\", \"connection\") - Remove connection from node.</p>\n</li>\n<li>\n<p><strong>compile_graph()</strong> - Compile EasyGraphLib struct.</p>\n</li>\n<li>\n<p><strong>find_tnw_d</strong>(\"EasyGraphLib struct\") - Dijkstra algorythm.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">easygraphlib</span> <span class=\"k\">as</span> <span class=\"nn\">egl</span>\n\n<span class=\"n\">wg</span> <span class=\"o\">=</span> <span class=\"n\">egl</span><span class=\"o\">.</span><span class=\"n\">weighted_graph</span><span class=\"p\">()</span>\n\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s2\">\"start\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"start\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"c\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fin\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"fin\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fin\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">update_connection</span><span class=\"p\">(</span><span class=\"s2\">\"start\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">update_connection</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"fin\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"n\">input_graph</span> <span class=\"o\">=</span> <span class=\"n\">wg</span><span class=\"o\">.</span><span class=\"n\">compile_graph</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">input_graph</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<p>\"class unweighted_graph\" methods:</p>\n<ul>\n<li>\n<p><strong>add_node</strong>(\"node name\", \"value\", \"connections\", \"auto create node flag True/False\") - This method create Node with connections, and Nodes for connections.</p>\n</li>\n<li>\n<p><strong>add_connections</strong>(\"node name\", \"connection or connections\", \"auto create node flag True/False\") - This method adding connections to Node, and create new Nodes for connections.</p>\n</li>\n<li>\n<p><strong>update_value</strong>(\"node name\", \"value\") - Update value for Node.</p>\n</li>\n<li>\n<p><strong>remove_node</strong>(\"node name\") - Remove node with connections.</p>\n</li>\n<li>\n<p><strong>remove_connection</strong>(\"node name\", \"connection\") - remove connection from node.</p>\n</li>\n<li>\n<p><strong>get_graph()</strong></p>\n</li>\n<li>\n<p><strong>wide_search(\"node name\", \"value\", \"condition\")</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">easygraphlib</span> <span class=\"k\">as</span> <span class=\"nn\">egl</span>\n\n<span class=\"n\">uwg</span> <span class=\"o\">=</span> <span class=\"n\">egl</span><span class=\"o\">.</span><span class=\"n\">unweighted_graph</span><span class=\"p\">()</span>\n\n<span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s2\">\"me\"</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"Patrick\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Carry\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Josh\"</span><span class=\"p\">))</span>\n<span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s2\">\"Joseph\"</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"Lora\"</span><span class=\"p\">))</span>\n<span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"Patrick\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"Henry\"</span><span class=\"p\">,</span> <span class=\"s2\">\"July\"</span><span class=\"p\">,</span> <span class=\"s2\">\"me\"</span><span class=\"p\">))</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">get_graph</span><span class=\"p\">())</span>\n\n<span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"me\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">\"Henry\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Harry\"</span><span class=\"p\">))</span>\n<span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">add_connections</span><span class=\"p\">(</span><span class=\"s2\">\"Patrick\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Henry\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">uwg</span><span class=\"o\">.</span><span class=\"n\">get_graph</span><span class=\"p\">())</span>\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4921426, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "09e0745d00a25aee9d61e60b91e417a1", "sha256": "8128ecb8d88aad8cb9337ddcc0222cae53d0a823c9d548de316bb9b656ebebee"}, "downloads": -1, "filename": "EasyGraphLib-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "09e0745d00a25aee9d61e60b91e417a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5589, "upload_time": "2019-03-09T23:55:13", "upload_time_iso_8601": "2019-03-09T23:55:13.976098Z", "url": "https://files.pythonhosted.org/packages/a5/bd/df7f022adcf668bb992bd614da9ee2f68abfd83bbe8f8e15fa24aa6d6672/EasyGraphLib-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0949e0608398894c077fade9c2448ff0", "sha256": "e384cdea37c6f7a9e6d3914e5c40024c04eb045e6571befa0540cbe6030b35ee"}, "downloads": -1, "filename": "EasyGraphLib-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0949e0608398894c077fade9c2448ff0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4444, "upload_time": "2019-03-09T23:55:16", "upload_time_iso_8601": "2019-03-09T23:55:16.087975Z", "url": "https://files.pythonhosted.org/packages/0f/30/826e17cf1092a81f5769130e683b3d91b789245bab150e3d2199f398da08/EasyGraphLib-0.3.0.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "904d6b12cbebca06df745ce8becde565", "sha256": "184c7e72e15aa1341cca096b8339bac98d200da0aa0ec9bc3d20952b0606fe47"}, "downloads": -1, "filename": "EasyGraphLib-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "904d6b12cbebca06df745ce8becde565", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5739, "upload_time": "2019-03-10T14:29:52", "upload_time_iso_8601": "2019-03-10T14:29:52.791805Z", "url": "https://files.pythonhosted.org/packages/22/45/137562f13a1f1a4e7ed6a791b90a7d32f697591de1e6ab7b2b26d2fdd5d9/EasyGraphLib-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "352402851e4f0e01eb72b6bb8c1ded7b", "sha256": "78d7db90723d453a2ccae6bef83933b20de48fc75e76b55dc16d4f9ee46522c3"}, "downloads": -1, "filename": "EasyGraphLib-0.3.5.tar.gz", "has_sig": false, "md5_digest": "352402851e4f0e01eb72b6bb8c1ded7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4558, "upload_time": "2019-03-10T14:29:54", "upload_time_iso_8601": "2019-03-10T14:29:54.723566Z", "url": "https://files.pythonhosted.org/packages/5c/cc/68680aaec55c36577a5e75d4c288cd61cf2f5bbfe807d20d65d7baaa09a5/EasyGraphLib-0.3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "904d6b12cbebca06df745ce8becde565", "sha256": "184c7e72e15aa1341cca096b8339bac98d200da0aa0ec9bc3d20952b0606fe47"}, "downloads": -1, "filename": "EasyGraphLib-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "904d6b12cbebca06df745ce8becde565", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5739, "upload_time": "2019-03-10T14:29:52", "upload_time_iso_8601": "2019-03-10T14:29:52.791805Z", "url": "https://files.pythonhosted.org/packages/22/45/137562f13a1f1a4e7ed6a791b90a7d32f697591de1e6ab7b2b26d2fdd5d9/EasyGraphLib-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "352402851e4f0e01eb72b6bb8c1ded7b", "sha256": "78d7db90723d453a2ccae6bef83933b20de48fc75e76b55dc16d4f9ee46522c3"}, "downloads": -1, "filename": "EasyGraphLib-0.3.5.tar.gz", "has_sig": false, "md5_digest": "352402851e4f0e01eb72b6bb8c1ded7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4558, "upload_time": "2019-03-10T14:29:54", "upload_time_iso_8601": "2019-03-10T14:29:54.723566Z", "url": "https://files.pythonhosted.org/packages/5c/cc/68680aaec55c36577a5e75d4c288cd61cf2f5bbfe807d20d65d7baaa09a5/EasyGraphLib-0.3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:23 2020"}