{"info": {"author": "Emmanuel Blot", "author_email": "emmanuel.blot@free.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "pyi2cflash\n==========\n\nI2C eeprom device drivers (pure Python)\n\nI2C flash devices, also known as *DataFlash* are commonly found in embedded\nproducts, to store firmware, microcode or configuration parameters.\n\nPyI2CFlash_ comes with several pure Python drivers for those flash devices, that\ndemonstrate use of I2C devices with PyFtdi_. It could also be useful to dump\nflash contents or recover from a bricked devices.\n\n.. _PyI2CFlash : https://github.com/eblot/pyi2cflash\n.. _Python: http://python.org/\n.. _PyFtdi : https://github.com/eblot/pyftdi\n\nSupported I2C flash devices\n---------------------------\n\n============== ========== ========== ========== ========== ========== ========== ========== ========== ========== ==========\nVendor          Microchip  Microchip  Microchip  Microchip  Microchip  Microchip  Microchip  Microchip  Microchip  Microchip\n-------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------\nEEPROM           24AA01_    24AA02_    24AA04_    24AA08_    24AA16_   24AA32A_    24AA64_   24AA128_   24AA256_   24AA512_\n============== ========== ========== ========== ========== ========== ========== ========== ========== ========== ==========\nStatus              ?          ?         No         No         No         Ok          ?          ?          ?         ?\n-------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------\nSize               128        256        512        1Ki        2Ki        4Ki        8Ki       16Ki       32Ki       64Ki\n============== ========== ========== ========== ========== ========== ========== ========== ========== ========== ==========\n\nNotes about performances\n........................\n\n* *Read* operation is synchronous with I2C bus clock: it therefore only depends\n  on the achievable frequency on the I2C bus, which is bound to the highest\n  supported frequency of the flash device.\n* *Write* operation depends mostly on the flash device performance, whose upper\n  limit comes mostly from the maximum write packet size of the device, as the\n  device needs to be polled for completion after each packet: the shorter the\n  packet, the higher traffic on the I2C and associated overhead.\n\n.. _24AA01: http://ww1.microchip.com/downloads/en/DeviceDoc/21711c.pdf\n.. _24AA02: http://ww1.microchip.com/downloads/en/DeviceDoc/21709c.pdf\n.. _24AA04: http://ww1.microchip.com/downloads/en/DeviceDoc/21124E.pdf\n.. _24AA08: http://ww1.microchip.com/downloads/en/DeviceDoc/21710c.pdf\n.. _24AA16: http://ww1.microchip.com/downloads/en/DeviceDoc/21703d.pdf\n.. _24AA32A: http://ww1.microchip.com/downloads/en/DeviceDoc/21713M.pdf\n.. _24AA64: http://ww1.microchip.com/downloads/en/DeviceDoc/21189f.pdf\n.. _24AA128: http://ww1.microchip.com/downloads/en/DeviceDoc/21191M.pdf\n.. _24AA256: http://ww1.microchip.com/downloads/en/DeviceDoc/21203M.pdf\n.. _24AA512: http://ww1.microchip.com/downloads/en/DeviceDoc/21754M.pdf\n\nNotes about 24AA32\n..................\n\nThis device is declared obsolete by the manufacturer and is not supported.\n\nOnly 24AA32A revision is supported.\n\nSupported I2C flash commands\n----------------------------\n\nRead\n  Read byte sequences of any size, starting at any location from the I2C\n  flash device\n\nWrite\n  Write arbitrary byte sequences of any size, starting at any location to the\n  I2C flash device\n\nDependencies\n------------\n\n* Python_ 3.5 or above is required.\n* PyFtdi_ 0.42 or above is required.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/eblot/pyi2cflash", "keywords": "driver,ftdi,usb,i2c,twi,flash,eeprom", "license": "MIT", "maintainer": "Emmanuel Blot", "maintainer_email": "emmanuel.blot@free.fr", "name": "pyi2cflash", "package_url": "https://pypi.org/project/pyi2cflash/", "platform": "", "project_url": "https://pypi.org/project/pyi2cflash/", "project_urls": {"Homepage": "http://github.com/eblot/pyi2cflash"}, "release_url": "https://pypi.org/project/pyi2cflash/0.2.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "I2C eeprom device drivers (pure Python)", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>I2C eeprom device drivers (pure Python)</p>\n<p>I2C flash devices, also known as <em>DataFlash</em> are commonly found in embedded\nproducts, to store firmware, microcode or configuration parameters.</p>\n<p><a href=\"https://github.com/eblot/pyi2cflash\" rel=\"nofollow\">PyI2CFlash</a> comes with several pure Python drivers for those flash devices, that\ndemonstrate use of I2C devices with <a href=\"https://github.com/eblot/pyftdi\" rel=\"nofollow\">PyFtdi</a>. It could also be useful to dump\nflash contents or recover from a bricked devices.</p>\n<div id=\"supported-i2c-flash-devices\">\n<h2>Supported I2C flash devices</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Vendor</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n<th>Microchip</th>\n</tr>\n<tr><th>EEPROM</th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21711c.pdf\" rel=\"nofollow\">24AA01</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21709c.pdf\" rel=\"nofollow\">24AA02</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21124E.pdf\" rel=\"nofollow\">24AA04</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21710c.pdf\" rel=\"nofollow\">24AA08</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21703d.pdf\" rel=\"nofollow\">24AA16</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21713M.pdf\" rel=\"nofollow\">24AA32A</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21189f.pdf\" rel=\"nofollow\">24AA64</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21191M.pdf\" rel=\"nofollow\">24AA128</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21203M.pdf\" rel=\"nofollow\">24AA256</a></th>\n<th><a href=\"http://ww1.microchip.com/downloads/en/DeviceDoc/21754M.pdf\" rel=\"nofollow\">24AA512</a></th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Status</td>\n<td>?</td>\n<td>?</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Ok</td>\n<td>?</td>\n<td>?</td>\n<td>?</td>\n<td>?</td>\n</tr>\n<tr><td>Size</td>\n<td>128</td>\n<td>256</td>\n<td>512</td>\n<td>1Ki</td>\n<td>2Ki</td>\n<td>4Ki</td>\n<td>8Ki</td>\n<td>16Ki</td>\n<td>32Ki</td>\n<td>64Ki</td>\n</tr>\n</tbody>\n</table>\n<div id=\"notes-about-performances\">\n<h3>Notes about performances</h3>\n<ul>\n<li><em>Read</em> operation is synchronous with I2C bus clock: it therefore only depends\non the achievable frequency on the I2C bus, which is bound to the highest\nsupported frequency of the flash device.</li>\n<li><em>Write</em> operation depends mostly on the flash device performance, whose upper\nlimit comes mostly from the maximum write packet size of the device, as the\ndevice needs to be polled for completion after each packet: the shorter the\npacket, the higher traffic on the I2C and associated overhead.</li>\n</ul>\n</div>\n<div id=\"notes-about-24aa32\">\n<h3>Notes about 24AA32</h3>\n<p>This device is declared obsolete by the manufacturer and is not supported.</p>\n<p>Only 24AA32A revision is supported.</p>\n</div>\n</div>\n<div id=\"supported-i2c-flash-commands\">\n<h2>Supported I2C flash commands</h2>\n<dl>\n<dt>Read</dt>\n<dd>Read byte sequences of any size, starting at any location from the I2C\nflash device</dd>\n<dt>Write</dt>\n<dd>Write arbitrary byte sequences of any size, starting at any location to the\nI2C flash device</dd>\n</dl>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"http://python.org/\" rel=\"nofollow\">Python</a> 3.5 or above is required.</li>\n<li><a href=\"https://github.com/eblot/pyftdi\" rel=\"nofollow\">PyFtdi</a> 0.42 or above is required.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6183992, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "2c446617e84d32b9283f480fc1080916", "sha256": "162a5c15f19ca6c3159f3b029febf6048c6c5479c824ea43a1fc308c04374dda"}, "downloads": -1, "filename": "pyi2cflash-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2c446617e84d32b9283f480fc1080916", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5570, "upload_time": "2017-05-05T13:51:39", "upload_time_iso_8601": "2017-05-05T13:51:39.194545Z", "url": "https://files.pythonhosted.org/packages/78/62/a4d2a821422c42bee42226dc3c6172f816f52874c242be3c1a4e5331c16e/pyi2cflash-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "affa7775e133cd551a7c23aa5bc79bff", "sha256": "edd01909ae956f301736f6b0f38323e35f48b6ba59fdb275519f3eae78456dd7"}, "downloads": -1, "filename": "pyi2cflash-0.2.0.tar.gz", "has_sig": false, "md5_digest": "affa7775e133cd551a7c23aa5bc79bff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6140, "upload_time": "2019-11-22T23:18:02", "upload_time_iso_8601": "2019-11-22T23:18:02.399746Z", "url": "https://files.pythonhosted.org/packages/19/02/4cc593ee3e29405f572f5b3299f986c336b4726963fe25ffd119c32103de/pyi2cflash-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0e08f5c03f516a9e66a2b38d08a55558", "sha256": "d3ceffe100e14c07ca9f96e3c587c2d646b92f4d9196b42009e3486e6e6233c8"}, "downloads": -1, "filename": "pyi2cflash-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0e08f5c03f516a9e66a2b38d08a55558", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6141, "upload_time": "2019-11-22T23:34:09", "upload_time_iso_8601": "2019-11-22T23:34:09.205903Z", "url": "https://files.pythonhosted.org/packages/02/1c/f3341501185853f09c2f111f4404a6b0d369e72fbd4aa05efb59f2757d01/pyi2cflash-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e08f5c03f516a9e66a2b38d08a55558", "sha256": "d3ceffe100e14c07ca9f96e3c587c2d646b92f4d9196b42009e3486e6e6233c8"}, "downloads": -1, "filename": "pyi2cflash-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0e08f5c03f516a9e66a2b38d08a55558", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6141, "upload_time": "2019-11-22T23:34:09", "upload_time_iso_8601": "2019-11-22T23:34:09.205903Z", "url": "https://files.pythonhosted.org/packages/02/1c/f3341501185853f09c2f111f4404a6b0d369e72fbd4aa05efb59f2757d01/pyi2cflash-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:13 2020"}