{"info": {"author": "J\u00fcrgen Knauth", "author_email": "pubsrc@binary-overflow.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Apache Software License", "Topic :: Software Development :: Testing", "Topic :: System :: Logging"], "description": "jk_asyncio_logging\n==========\n\nIntroduction\n------------\n\nThis python module ...\n\nInformation about this module can be found here:\n\n* [github.org](https://github.com/jkpubsrc/....)\n* [pypi.python.org](https://pypi.python.org/pypi/jk_asyncio_logging)\n\nWhy this module?\n----------------\n\nWith `jk_logging` there is a logging module available that allows constructing loggers from a JSON based description, offers buffers for log messages and supports hierarchical logging. Unfortunately this particular module is synchroneous and therefore can not be used in `Asyncio` directly. This implementation therefore wraps `jk_logging` and provides an API usable in `Asyncio`.\n\nLimitations of this module\n--------------------------\n\nThis module provides classes wrapping (almost all) classes from `jk_logging`. It provides almost all functionality despite one: Descending hierarchically is not supported. (This might change one day, but not in the near future.)\n\nHow to install module\n----------------------\n\nThis module can be installed easily using `pip`.\n\nUse this command for a system wide installation of this module:\n\n```bash\n$ sudo pip install jk-asyncio-logging\n```\n\nUse this command for user specific installation of this module:\n\n```bash\n$ pip install --user jk-asyncio-logging\n```\n\nThe PiPy module is always kept in sync with the Github repository so using PyPi is equivalent to a manual installation using the code provided on Github.\n\nHow to use this module\n----------------------\n\n### Import this module\n\nPlease include this module into your application using the following code:\n\n```python\nimport jk_asyncio_logging\n```\n\n### Construct a logger\n\nExample:\n\n```python\nlog = jk_asyncio_logging.AsyncioConsoleLogger.create(logMsgFormatter=jk_asyncio_logging.COLOR_LOG_MESSAGE_FORMATTER)\n```\n\nHere we construct a console logger (which is an object that writes log messages to STDOUT.) It is configured for using colors for all output here.\n\n### Use the logger\n\nYou can create text based log messages and write them to the logger. Example:\n\n```python\nawait log.debug(\"This is a test for DEBUG.\")\nawait log.notice(\"This is a test for NOTICE.\")\nawait log.info(\"This is a test for INFO.\")\nawait log.warning(\"This is a test for WARNING.\")\nawait log.error(\"This is a test for ERROR.\")\n```\n\nExceptions can be logged as well. Example:\n\n```python\ntry:\n\tawait log.notice(\"Let's try a calculation that will fail ...\")\n\ta = 0\n\tb = 5 / a\nexcept Exception as ee:\n\tawait log.error(ee)\n```\n\nWhat kind of log objects are available?\n---------------------------------------\n\nYou can make use of the following log objects:\n\n* `AsyncioBufferLogger` - implements a buffer for log messages, which later on can be forwareded to another logger\n* `AsyncioConsoleLogger` - implements writing to STDOUT\n* `AsyncioFileLogger` - implements writing to a file\n* `AsyncioFilterLogger` - implements filtering of log messages according to log level\n* `AsyncioMulticastLogger` - implements forwarding log messages to multiple loggers\n* `AsyncioNamedMulticastLogger` - implements forwarding log messages to multiple loggers\n* `AsyncioNullLogger` - discards all log messages\n* `AsyncioStringListLogger` - implements a buffer for log messages, where all log messages are stored a plain text strings\n\nFurther Reading\n-------------------\n\nSee the `test` directory for detailed examples of all loggers.\n\nContact Information\n-------------------\n\nThis is Open Source code. That not only gives you the possibility of freely using this code it also\nallows you to contribute. Feel free to contact the author(s) of this software listed below, either\nfor comments, collaboration requests, suggestions for improvement or reporting bugs:\n\n* J\u00fcrgen Knauth: jknauth@uni-goettingen.de, pubsrc@binary-overflow.de\n\nLicense\n-------\n\nThis software is provided under the following license:\n\n* Apache Software License 2.0", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/jkpubsrc/python-module-jk-asyncio-logging/tarball/0.2019.10.19", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jkpubsrc/python-module-jk-asyncio-logging", "keywords": "debugging,logging,asyncio", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "jk-asyncio-logging", "package_url": "https://pypi.org/project/jk-asyncio-logging/", "platform": "", "project_url": "https://pypi.org/project/jk-asyncio-logging/", "project_urls": {"Download": "https://github.com/jkpubsrc/python-module-jk-asyncio-logging/tarball/0.2019.10.19", "Homepage": "https://github.com/jkpubsrc/python-module-jk-asyncio-logging"}, "release_url": "https://pypi.org/project/jk-asyncio-logging/0.2019.10.19/", "requires_dist": null, "requires_python": "", "summary": "This is a logging framework. It is based on jk_logging but can be used with Asyncio.", "version": "0.2019.10.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jk_asyncio_logging</h1>\n<h2>Introduction</h2>\n<p>This python module ...</p>\n<p>Information about this module can be found here:</p>\n<ul>\n<li><a href=\"https://github.com/jkpubsrc/....\" rel=\"nofollow\">github.org</a></li>\n<li><a href=\"https://pypi.python.org/pypi/jk_asyncio_logging\" rel=\"nofollow\">pypi.python.org</a></li>\n</ul>\n<h2>Why this module?</h2>\n<p>With <code>jk_logging</code> there is a logging module available that allows constructing loggers from a JSON based description, offers buffers for log messages and supports hierarchical logging. Unfortunately this particular module is synchroneous and therefore can not be used in <code>Asyncio</code> directly. This implementation therefore wraps <code>jk_logging</code> and provides an API usable in <code>Asyncio</code>.</p>\n<h2>Limitations of this module</h2>\n<p>This module provides classes wrapping (almost all) classes from <code>jk_logging</code>. It provides almost all functionality despite one: Descending hierarchically is not supported. (This might change one day, but not in the near future.)</p>\n<h2>How to install module</h2>\n<p>This module can be installed easily using <code>pip</code>.</p>\n<p>Use this command for a system wide installation of this module:</p>\n<pre>$ sudo pip install jk-asyncio-logging\n</pre>\n<p>Use this command for user specific installation of this module:</p>\n<pre>$ pip install --user jk-asyncio-logging\n</pre>\n<p>The PiPy module is always kept in sync with the Github repository so using PyPi is equivalent to a manual installation using the code provided on Github.</p>\n<h2>How to use this module</h2>\n<h3>Import this module</h3>\n<p>Please include this module into your application using the following code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">jk_asyncio_logging</span>\n</pre>\n<h3>Construct a logger</h3>\n<p>Example:</p>\n<pre><span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">jk_asyncio_logging</span><span class=\"o\">.</span><span class=\"n\">AsyncioConsoleLogger</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">logMsgFormatter</span><span class=\"o\">=</span><span class=\"n\">jk_asyncio_logging</span><span class=\"o\">.</span><span class=\"n\">COLOR_LOG_MESSAGE_FORMATTER</span><span class=\"p\">)</span>\n</pre>\n<p>Here we construct a console logger (which is an object that writes log messages to STDOUT.) It is configured for using colors for all output here.</p>\n<h3>Use the logger</h3>\n<p>You can create text based log messages and write them to the logger. Example:</p>\n<pre><span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"This is a test for DEBUG.\"</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">notice</span><span class=\"p\">(</span><span class=\"s2\">\"This is a test for NOTICE.\"</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"This is a test for INFO.\"</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">\"This is a test for WARNING.\"</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">\"This is a test for ERROR.\"</span><span class=\"p\">)</span>\n</pre>\n<p>Exceptions can be logged as well. Example:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n\t<span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">notice</span><span class=\"p\">(</span><span class=\"s2\">\"Let's try a calculation that will fail ...\"</span><span class=\"p\">)</span>\n\t<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\t<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">5</span> <span class=\"o\">/</span> <span class=\"n\">a</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">ee</span><span class=\"p\">:</span>\n\t<span class=\"k\">await</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">ee</span><span class=\"p\">)</span>\n</pre>\n<h2>What kind of log objects are available?</h2>\n<p>You can make use of the following log objects:</p>\n<ul>\n<li><code>AsyncioBufferLogger</code> - implements a buffer for log messages, which later on can be forwareded to another logger</li>\n<li><code>AsyncioConsoleLogger</code> - implements writing to STDOUT</li>\n<li><code>AsyncioFileLogger</code> - implements writing to a file</li>\n<li><code>AsyncioFilterLogger</code> - implements filtering of log messages according to log level</li>\n<li><code>AsyncioMulticastLogger</code> - implements forwarding log messages to multiple loggers</li>\n<li><code>AsyncioNamedMulticastLogger</code> - implements forwarding log messages to multiple loggers</li>\n<li><code>AsyncioNullLogger</code> - discards all log messages</li>\n<li><code>AsyncioStringListLogger</code> - implements a buffer for log messages, where all log messages are stored a plain text strings</li>\n</ul>\n<h2>Further Reading</h2>\n<p>See the <code>test</code> directory for detailed examples of all loggers.</p>\n<h2>Contact Information</h2>\n<p>This is Open Source code. That not only gives you the possibility of freely using this code it also\nallows you to contribute. Feel free to contact the author(s) of this software listed below, either\nfor comments, collaboration requests, suggestions for improvement or reporting bugs:</p>\n<ul>\n<li>J\u00fcrgen Knauth: <a href=\"mailto:jknauth@uni-goettingen.de\">jknauth@uni-goettingen.de</a>, <a href=\"mailto:pubsrc@binary-overflow.de\">pubsrc@binary-overflow.de</a></li>\n</ul>\n<h2>License</h2>\n<p>This software is provided under the following license:</p>\n<ul>\n<li>Apache Software License 2.0</li>\n</ul>\n\n          </div>"}, "last_serial": 6489389, "releases": {"0.2019.10.19": [{"comment_text": "", "digests": {"md5": "d36585f019f326e70dbee4f9e7318be3", "sha256": "40654a51c93affd14474f91355cbc282ef855054965347c01351b367b2cf2815"}, "downloads": -1, "filename": "jk_asyncio_logging-0.2019.10.19.tar.gz", "has_sig": false, "md5_digest": "d36585f019f326e70dbee4f9e7318be3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9655, "upload_time": "2020-01-20T18:39:00", "upload_time_iso_8601": "2020-01-20T18:39:00.750734Z", "url": "https://files.pythonhosted.org/packages/aa/a7/602a366e4bd94c0fe32cbea5e49421e890e0221d1902734a49aa4b10c259/jk_asyncio_logging-0.2019.10.19.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d36585f019f326e70dbee4f9e7318be3", "sha256": "40654a51c93affd14474f91355cbc282ef855054965347c01351b367b2cf2815"}, "downloads": -1, "filename": "jk_asyncio_logging-0.2019.10.19.tar.gz", "has_sig": false, "md5_digest": "d36585f019f326e70dbee4f9e7318be3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9655, "upload_time": "2020-01-20T18:39:00", "upload_time_iso_8601": "2020-01-20T18:39:00.750734Z", "url": "https://files.pythonhosted.org/packages/aa/a7/602a366e4bd94c0fe32cbea5e49421e890e0221d1902734a49aa4b10c259/jk_asyncio_logging-0.2019.10.19.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:29 2020"}