{"info": {"author": "Vasily Kuznetsov", "author_email": "kvas.it@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": "ost.znap2\n=========\n\nZnap2 is a universal ZoDB snapshotter. It allows making multiple snapshots of\nZoDB database(s) and restoring the database(s) to any past snapshot.\n\nUsage\n-----\n\nBefore we make any snapshots, we need to intialize the snapshot storage::\n\n    znap2 init <db-file> [...]\n\nThis creates .znap2 directory that will contain the configuration and all\nsnapshots. Initially only configuration file is created and the length of all\ndatabase files is recorded there.\n\nAfter the storage is initialized we can make snapshots::\n\n    znap2 save <snapshot-id>\n\nThis will store the tail of each database file that the storage is tracking\nand a copy of its index file. This information is sufficient to restore the\nsnapshot of ZoDB because all writing to the main database file always happens\nat the end.\n\nTo list available snapshots use the following command::\n\n    znap2 list\n\nSome time later we can revert to an earlier stored snapshot::\n\n    znap2 restore <snapshot-id>\n\nThis will truncate the databases to their size at the time of initialization,\nthen append the stored tails and replace the index files with stored copies of\nthe index files.\n\nFinally the snapshots that are no longer needed can be deleted with::\n\n    znap2 delete <snapshot-id>\n\nNote that packing the database will invalidate all snapshots. If you need to\npack the database, delete the storage and start over.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/kvas/ost-znap2", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ost-znap2", "package_url": "https://pypi.org/project/ost-znap2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ost-znap2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/kvas/ost-znap2"}, "release_url": "https://pypi.org/project/ost-znap2/1.0b/", "requires_dist": null, "requires_python": null, "summary": "ZoDB snapshotter library and script", "version": "1.0b", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Znap2 is a universal ZoDB snapshotter. It allows making multiple snapshots of\nZoDB database(s) and restoring the database(s) to any past snapshot.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Before we make any snapshots, we need to intialize the snapshot storage:</p>\n<pre>znap2 init &lt;db-file&gt; [...]\n</pre>\n<p>This creates .znap2 directory that will contain the configuration and all\nsnapshots. Initially only configuration file is created and the length of all\ndatabase files is recorded there.</p>\n<p>After the storage is initialized we can make snapshots:</p>\n<pre>znap2 save &lt;snapshot-id&gt;\n</pre>\n<p>This will store the tail of each database file that the storage is tracking\nand a copy of its index file. This information is sufficient to restore the\nsnapshot of ZoDB because all writing to the main database file always happens\nat the end.</p>\n<p>To list available snapshots use the following command:</p>\n<pre>znap2 list\n</pre>\n<p>Some time later we can revert to an earlier stored snapshot:</p>\n<pre>znap2 restore &lt;snapshot-id&gt;\n</pre>\n<p>This will truncate the databases to their size at the time of initialization,\nthen append the stored tails and replace the index files with stored copies of\nthe index files.</p>\n<p>Finally the snapshots that are no longer needed can be deleted with:</p>\n<pre>znap2 delete &lt;snapshot-id&gt;\n</pre>\n<p>Note that packing the database will invalidate all snapshots. If you need to\npack the database, delete the storage and start over.</p>\n</div>\n\n          </div>"}, "last_serial": 1167407, "releases": {"1.0b": [{"comment_text": "", "digests": {"md5": "8b6be548566589004036b3aa81f0b601", "sha256": "2311eaab52027e156126709e699e1de85a4ff56c5e6ba80d5514bd59ac66cbc8"}, "downloads": -1, "filename": "ost-znap2-1.0b.tar.gz", "has_sig": false, "md5_digest": "8b6be548566589004036b3aa81f0b601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3835, "upload_time": "2014-07-23T23:26:38", "upload_time_iso_8601": "2014-07-23T23:26:38.243815Z", "url": "https://files.pythonhosted.org/packages/df/29/71906964adb49b908bb87cbef0917b695f43f7611200f53ed74d6fa99872/ost-znap2-1.0b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b6be548566589004036b3aa81f0b601", "sha256": "2311eaab52027e156126709e699e1de85a4ff56c5e6ba80d5514bd59ac66cbc8"}, "downloads": -1, "filename": "ost-znap2-1.0b.tar.gz", "has_sig": false, "md5_digest": "8b6be548566589004036b3aa81f0b601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3835, "upload_time": "2014-07-23T23:26:38", "upload_time_iso_8601": "2014-07-23T23:26:38.243815Z", "url": "https://files.pythonhosted.org/packages/df/29/71906964adb49b908bb87cbef0917b695f43f7611200f53ed74d6fa99872/ost-znap2-1.0b.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:55 2020"}