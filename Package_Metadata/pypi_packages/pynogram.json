{"info": {"author": "Ivan Ladelschikov", "author_email": "tsionyx@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Games/Entertainment :: Puzzle Games"], "description": "\n|PyPI| |PyPI - Python Version| |PyPI - Implementation|\n\n|Build Status| |Coverage Status| |codebeat badge|\n\nNonogram solver\n===============\n\nSolve the `nonogram puzzles <https://en.wikipedia.org/wiki/Nonogram>`_\nand watch the solution process.\nBoth black-and-white and color puzzles with the unlimited\n(at least in theory) size are supported. Also, you can easily solve puzzles\nfrom http://webpbn.com or http://www.nonograms.org/ that have thousands of them.\n\n\nDifferent sources are supported:\n\n- local puzzles, embedded inside the package\n- local puzzles, created by yourself\n- puzzles from http://webpbn.com (without downloading)\n- locally saved webpbn puzzles (mainly for development/debug purpose)\n- http://www.nonograms.org/ (http://www.nonograms.ru/) puzzles\n\n\nInstall\n-------\n\n.. code-block::\n\n    pip install pynogram\n\n\nConsole\n-------\n\nFirstly, make sure it works (if not, see the `Errors`_ section):\n\n.. code-block::\n\n    $ pynogram\n    # # # # # # # # #               1 1\n    # # # # # # # # #               1 1               1   1     5\n    # # # # # # # # # 7 1 1 1 7 0 3 1 1 2 0 6 0 6 0 3 1 5 1 3 0 1\n                1 1 1 # . . . # . . . . . . . . . . . . . . . . #\n            1 1 1 1 1 # . . . # . . . . . . # . # . . . . . . . #\n        1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n    5 1 1 1 1 1 1 1 1 # # # # # . # . . # . # . # . # . # . # . #\n    1 1 4 1 1 1 1 1 1 # . . . # . # # # # . # . # . # . # . # . #\n      1 1 1 1 1 1 1 1 # . . . # . # . . . . # . # . # . # . # . .\n        1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n\n\n`Local <pynogram/examples/>`_\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo solve one of the embedded puzzles do the ``pynogram --board {NAME}`` (or simply *-b*)\nwhere NAME is the name of the file (you can skip the *.txt* extension).\nSee the list of all embedded puzzles in the *pynogram/examples/* of your installation folder [1]_.\n\n.. code-block::\n\n    $ pynogram --board=winter --draw-final\n    # # # # #                         2\n    # # # # #         1 1     4 1     2 4   4 5   2   7\n    # # # # # 5 7 2 1 3 3 7   4 6 7 6 3 4 4 4 3 6 2 5 1 125 1\n    # # # # # 6 3 7 6 6 6 4 111 1 4 5 1 1 7 1 1 5 4 1 1 1 6 103\n    # # # # # 4 5 5 6 6 7 7 6 4 3 3 2 2 1 2 2 1 1 1 1 1 1 3 1 8\n      1 5 114 # . # # # # # . # # # # # # # # # # # . . # # # #\n    3 3 9 2 1 # # # . . . # # # . # # # # # # # # # . . # # . #\n      2 8 5 5 # # . . # # # # # # # # . # # # # # . . # # # # #\n        2 145 # # . . # # # # # # # # # # # # # # . # # # # # .\n    2 4 4 2 6 # # . . # # # # . # # # # . . . # # . # # # # # #\n      2 6 5 2 . # # . . . # # # # # # . . . . . # # # # # . # #\n          117 # # # # # # # # # # # . . . . . . . # # # # # # #\n      6 3 3 6 # # # # # # . # # # . . . # # # . . . # # # # # #\n      1 7 5 5 # . # # # # # # # . . . # # # # # . . . # # # # #\n        8 7 4 # # # # # # # # . . . # # # # # # # . . . # # # #\n        8 9 4 # # # # # # # # . . # # # # # # # # # . . # # # #\n        121 8 # # # # # # # # # # # # . . # . . # # # # # # # #\n        2 1 2 . . . . . . . . . . # # . . # . . # # . . . . . .\n          9 3 . . . . . . . . . . # # # # # # # # # . # # # . .\n            2 . . . . . . . . . . . . . . . . . . . . . . # # .\n            9 . . . . . . . . . . . . . . # # # # # # # # # . .\n            6 . . . . . . . . . . # # # # # # . . . . . . . . .\n            6 . . . . . . . # # # # # # . . . . . . . . . . . .\n            6 . . . . . # # # # # # . . . . . . . . . . . . . .\n            7 . . . # # # # # # # . . . . . . . . . . . . . . .\n            8 . # # # # # # # # . . . . . . . . . . . . . . . .\n            8 # # # # # # # # . . . . . . . . . . . . . . . . .\n            8 # # # # # # # # . . . . . . . . . . . . . . . . .\n            7 # # # # # # # . . . . . . . . . . . . . . . . . .\n            7 # # # # # # # . . . . . . . . . . . . . . . . . .\n\nsolve simple color puzzle (UK flag)\n\n.. code-block::\n\n    $ pynogram -b uk\n    # # # # # # #       1 1 2 2 3 3 4                       4 3 3 2 2 1 1\n    # # # # # # #       1 2 1 2 1 2 1                       1 2 1 2 1 2 1\n    # # # # # # # 1 1 2 4 3 3 2 2 1 1                       1 1 2 2 3 3 4 2 1 1\n    # # # # # # # 5 5 4 3 3 3 3 3 3 3                       3 3 3 3 3 3 3 4 5 5\n    # # # # # # # 3 3 3 4 3 3 2 2 1 1 4 5 5 6       6 5 5 4 1 1 2 2 3 3 4 3 3 3\n    # # # # # # # 5 5 4 1 2 1 2 1 2 1 7 5 5 3       3 5 5 7 1 2 1 2 1 2 1 4 5 5\n    # # # # # # # 1 1 2 1 1 2 2 3 3 4 4 5 5 6 1515156 5 5 4 4 3 3 2 2 1 1 2 1 1\n        3 113 113 % % % * * * * * * * * * * * % % % * * * * * * * * * * * % % %\n    2 3 9 3 9 3 2 * * % % % * * * * * * * * * % % % * * * * * * * * * % % % * *\n    4 3 7 3 7 3 4 * * * * % % % * * * * * * * % % % * * * * * * * % % % * * * *\n    6 3 5 3 5 3 6 * * * * * * % % % * * * * * % % % * * * * * % % % * * * * * *\n    8 3 3 3 3 3 8 * * * * * * * * % % % * * * % % % * * * % % % * * * * * * * *\n    103 1 3 1 3 10* * * * * * * * * * % % % * % % % * % % % * * * * * * * * * *\n                31% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n                31% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n                31% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n    103 1 3 1 3 10* * * * * * * * * * % % % * % % % * % % % * * * * * * * * * *\n    8 3 3 3 3 3 8 * * * * * * * * % % % * * * % % % * * * % % % * * * * * * * *\n    6 3 5 3 5 3 6 * * * * * * % % % * * * * * % % % * * * * * % % % * * * * * *\n    4 3 7 3 7 3 4 * * * * % % % * * * * * * * % % % * * * * * * * % % % * * * *\n    2 3 9 3 9 3 2 * * % % % * * * * * * * * * % % % * * * * * * * * * % % % * *\n        3 113 113 % % % * * * * * * * * * * * % % % * * * * * * * * * * * % % %\n\nUser-defined\n~~~~~~~~~~~~\n\nTo create the puzzle by yourself, learn the format first. Do not panic, it is very simple!\nFind out the *pynogram/examples/hello.txt* file inside your installation folder [1]_\nand copy it to create a new puzzle.\nThen follow the comments in the file to add clues to your new puzzle.\nTo run the solver on your puzzle hit the ``pynogram`` and specify the path to your file:\n\n.. code-block::\n\n    $ cp /install/folder/pynogram/examples/hello.txt my-new-puzzle.txt\n    $ pynogram -b my-new-puzzle.txt\n    # # # # # # # # #               1 1\n    # # # # # # # # #               1 1               1   1     5\n    # # # # # # # # # 7 1 1 1 7 0 3 1 1 2 0 6 0 6 0 3 1 5 1 3 0 1\n                1 1 1 # . . . # . . . . . . . . . . . . . . . . #\n            1 1 1 1 1 # . . . # . . . . . . # . # . . . . . . . #\n        1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n    5 1 1 1 1 1 1 1 1 # # # # # . # . . # . # . # . # . # . # . #\n    1 1 4 1 1 1 1 1 1 # . . . # . # # # # . # . # . # . # . # . #\n      1 1 1 1 1 1 1 1 # . . . # . # . . . . # . # . # . # . # . .\n        1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n\nWebpbn\n~~~~~~\n\nVisit the http://webpbn.com/ to see thousands of puzzles waiting for you to solve.\nTo run the solver on any of them just specify the puzzle id with the *--pbn* flag:\n\n`Simple black-and-white puzzle <http://webpbn.com/3>`__\n\n.. code-block::\n\n    $ pynogram --pbn=3 --draw-final\n    # # # #           3 3\n    # # # #         2 1 2 4 3 3 2\n    # # # #       3 1 2 1 3 5 1 1 3\n    # # # #       5 5 1 1 1 1 5 5 5\n    # # # # 5 9 113 2 3 3 3 3 3 2 3 119 5\n          5 . . . . . # # # # # . . . . .\n          9 . . . # # # # # # # # # . . .\n          11. . # # # # # # # # # # # . .\n      3 1 3 . # # # . . . # . . . # # # .\n    2 3 3 2 . # # . # # # . # # # . # # .\n    4 1 1 4 # # # # . . # . # . . # # # #\n        6 8 # # # # # # . # # # # # # # #\n        6 8 # # # # # # . # # # # # # # #\n        5 9 # # # # # . # # # # # # # # #\n        5 6 # # # # # . . . . # # # # # #\n      2 7 2 . # # . # # # # # # # . # # .\n        3 3 . # # # . . . . . . . # # # .\n          11. . # # # # # # # # # # # . .\n          9 . . . # # # # # # # # # . . .\n          5 . . . . . # # # # # . . . . .\n\n`Simple color puzzle <http://webpbn.com/898>`__\n\n.. code-block::\n\n    $ pynogram --pbn=898 --draw-final\n    # # # # # # # #                   1\n    # # # # # # # #             1     1\n    # # # # # # # #     2   5   1     1     1\n    # # # # # # # #     1 4 1 6 2     1 5 4 1\n    # # # # # # # # 2   3 1 2 1 1     2 1 1 3\n    # # # # # # # # 1   1 3 1 2 1 6 6 3 2 3 1\n    # # # # # # # # 2 7 1 1 2 2 9 8 7 2 2 1 2 7 5\n                  11. . % % % % % % % % % % % . .\n      5 1 2 1 2 1 1 . % % % % % * % % * % % * % .\n              2 1 12% % * % % % % % % % % % % % %\n              9 1 5 % % % % % % % % % * % % % % %\n    1 2 1 2 1 4 1 3 * % % X % % * % % % % X % % %\n      4 1 5 1 1 1 2 % % % % X % % % % % X % * % %\n        2 1 2 2 1 5 % % * % % X X . . X % % % % %\n            4 2 1 4 . % % % % . X X . X % % % % .\n                  6 . . . . X X X X X X . . . . .\n                  4 . . . . . X X X X . . . . . .\n                  3 . . . . . . X X X . . . . . .\n                  3 . . . . . . X X X . . . . . .\n                  3 . . . . . . X X X . . . . . .\n                  7 . . . . X X X X X X X . . . .\n                  9 . . . X X X X X X X X X . . .\n\n\nIf you want to come over the network overhead when solving the webpbn puzzle,\nyou can download it prior to solving (e.g. http://webpbn.com/survey/puzzles).\nThen run the solver ``pynogram --local-pbn=path/to/pbn/puzzle.xml``.\n\n\nnonograms.org\n~~~~~~~~~~~~~\n\nThe http://www.nonograms.org also contains thousands of great puzzles.\nThis site offers only single-solution puzzles that do not require guessing,\ntherefore they usually solved quite fast.\n\n\n`Simple black-and-white puzzle <http://www.nonograms.org/nonograms/i/19833>`__\n\n.. code-block::\n\n    $ pynogram --nonograms-org=19833\n    # # # # # #                       2\n    # # # # # #   1               3   2 2\n    # # # # # #   3   10    6 1 6 2 2 2 5 3\n    # # # # # # 9 1 101 1 103 3 2 2 3 1 1 2 4\n    # # # # # # 4 2 1 1 5 1 2 2 1 3 1 1 2 2 5\n          1 1 8 . # . . # . . # # # # # # # #\n        1 2 2 7 # . # # . # # . # # # # # # #\n      1 2 2 2 2 # . # # . # # . # # . . . # #\n      1 2 2 1 1 # . # # . # # . # . . . . . #\n      1 2 2 1 2 # . # # . # # . # . . # # . .\n      1 2 2 2 3 # . # # . # # . # # . # # # .\n      1 2 2 2 2 # . # # . # # . . # # . # # .\n          6 1 3 # # # # # # . # . . # # # . .\n              13# # # # # # # # # # # # # . .\n              10# # # # # # # # # # . . . . .\n            5 1 . . # # # # # . . . . . . . #\n          2 1 3 # # . . # . . . . . . . # # #\n    1 1 1 1 3 2 # . . # . # . # . # # # . # #\n      3 2 1 1 1 # # # . . . # # . # . . # . #\n    2 1 1 2 2 1 # # . # . . # . # # . # # . #\n\n\n\n`Simple color puzzle <http://www.nonograms.org/nonograms2/i/19784>`__\n\n.. code-block::\n\n    $ pynogram --nonograms-org=19784\n    # # # # # # #                     2\n    # # # # # # #                 2 2 1\n    # # # # # # #                 1 4 1\n    # # # # # # #               2 1 6 2 3\n    # # # # # # #               2 2 1 6 3 4\n    # # # # # # #         1 2 2 2 6 2 1 7 6\n    # # # # # # #     1   1 1 5 5 2 1 5 5 2 3\n    # # # # # # # 1 1 4 111 1 1 1 1 1 1 1 1 4 4 1 1\n                4                 \" \" \" \"\n                6               \" \" \" \" \" \"\n            1 3 2               \" ! ! ! \" \"\n      1 1 1 1 1 1               ! X ! X ! \"\n              5 1               ! ! ! ! ! \"\n                4                 ! ! ! !\n                3                   # # #\n                5                 # # # # #\n            1 2 9     ! \" \" # # # # # # # # #\n            1 1 9       \" ! # # # # # # # # #\n              1 6       \"         # # # # # #\n              1 5       \"         # # # # #\n          1 1 2 2       \"         # ! ! # #\n              1 7       \"     $ $ $ $ $ $ $\n              1 7       \"     $ $ $ $ $ $ $\n    3 1 2 2 2 2 5 X X X \" X X $ $ X X $ $ X X X X X\n        1 1 2 2 2     X \"     $ $     $ $   X X\n        1 1 2 2 2     X \"     $ $     $ $   X X\n        1 1 3 3 2     X \"   X X X   X X X   X X\n\n\nModes\n~~~~~\n\nBy default, in the process of solving the new information will instantly appear on a terminal\n(as a full image board), so you can observe many boards that changing each other many times a second\nmixed with logs (if you specify any verbosity level with *-v* flag). But you can always disable\nthe board updates and force to show only the final result with *--draw-final* flag.\n\nAlso the *--curses* mode is available, that allows you to see the solving\ninside a separate console (`ncurses <https://en.wikipedia.org/wiki/Ncurses>`_) window.\n\nExamples:\n\n$ pynogram --pbn `30216 <http://webpbn.com/30216>`_ --curses\n\n.. image:: docs/images/curses-moose.gif\n\n$ pynogram --pbn `29723 <http://webpbn.com/29723>`_ --curses\n\n.. image:: docs/images/curses-mosaic.gif\n\nErrors\n~~~~~~\n\nIf you see something like this (I stumbled with this while trying to run inside a docker container)\n\n.. code-block::\n\n    $ pynogram\n    ...\n    UnicodeEncodeError: 'ascii' codec can't encode character u'\\u2b1b' in position 18: ordinal not in range(128)\n\nthen try to run with the special environment variable\n\n.. code-block::\n\n    $ PYTHONIOENCODING=utf-8 pynogram\n\nIf that will work, you can save that variable for current session:\n\n.. code-block::\n\n    $ export PYTHONIOENCODING=utf-8\n\nor for all the future runs\n\n.. code-block::\n\n    $ echo 'export PYTHONIOENCODING=utf-8' >> ~/.bashrc\n\n\nWeb-solver\n----------\n\n- **to use the web solver you have to install additional subpackage:**\n\n  ``pip install pynogram[web]`` and **start the server**: ``pynogram-web``\n\n- you can solve any of local puzzles (with */board/local/* path)\n  or webpbn puzzles (with */board/pbn/* path)\n  or nonograms.org ones (with */board/nonograms.org/* path)\n\n- you can specify render mode (with the *?render=MODE* argument).\n  Now the four are supported:\n\n  - **svg** (default) - draw nice vector image. It can seriously\n    slows down the viewing and solving on a large boards (e.g. 50x50 and more),\n    since the resulted SVG can be pretty huge.\n    In the future releases I plan to apply more advanced SVG drawing to eliminate the problem.\n\n  - **text** - lightweight text format similar to the one that draws on the console.\n\n  - **text-grid** - slightly more advanced ASCII-graphic that renders\n    the grid between cells. However it requires more screen space.\n\n  - **text-grid-bold** - almost like the last one, but also draws bold lines,\n    splitting the whole board into 5x5 squares (remember puzzles in those magazines?)\n\n\nhttp://localhost:3145/board/local/einstein?render=svg (zoom=67%)\n\n.. image:: docs/images/einstein-local-svg.gif\n\nhttp://localhost:3145/board/local/MLP?render=text-grid-bold (zoom=25%)\n\n.. image:: docs/images/MLP-local-text-grid.gif\n\nhttp://localhost:3145/board/pbn/2040?render=text (zoom=75%)\n\n.. image:: docs/images/marilyn-pbn-text.gif\n\nhttp://localhost:3145/board/pbn/2196 (zoom=75%)\n\n.. image:: docs/images/precious-pbn-svg.gif\n\n\nNotes\n-----\n\nBoth console and web solvers work on a wide variety of pythons:\nCPython2.7 and 3.5+, PyPy 2.7 and 3.5.\nThe best performance, however, achieved on PyPy (version 3 is always preferable), so try it out.\n\n\nYou can install *numpy* for slightly better performance\nwhen running on CPython interpreter\n(it's not listed in requirements to keep the package lightweight).\nHowever numpy does not work correctly with PyPy interpreter.\n\n\n\nReferences\n----------\n\nThe following sites and articles were used when making this solver:\n\n1. `The 'pbnsolve' Paint-by-Number Puzzle Solver by Jan Wolter\n<http://webpbn.com/pbnsolve.html>`_\nand the `survey <http://webpbn.com/survey/>`_\n\n2. `The BGU Nonograms Project\n<https://www.cs.bgu.ac.il/~benr/nonograms/>`_\n\n3. `Solving Nonograms by combining relaxations\n<http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.177.76&rep=rep1&type=pdf>`_\n\n4. `An Efficient Approach to Solving Nonograms\n<https://ir.nctu.edu.tw/bitstream/11536/22772/1/000324586300005.pdf>`_\n\n5. `\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u043d\u044b\u0445 \u044f\u043f\u043e\u043d\u0441\u043a\u0438\u0445 \u043a\u0440\u043e\u0441\u0441\u0432\u043e\u0440\u0434\u043e\u0432 \u0441\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e \u0441\u0432\u0435\u0442\u0430\n<https://habr.com/post/418069/>`_\n\n6. `\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u044f\u043f\u043e\u043d\u0441\u043a\u0438\u0445 \u043a\u0440\u043e\u0441\u0441\u0432\u043e\u0440\u0434\u043e\u0432 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u0432\n<http://window.edu.ru/resource/781/57781>`_\n\n7. `'Nonolib' library by Dr. Steven Simpson\n<http://www.lancaster.ac.uk/~simpsons/nonogram/howitworks>`_\n\n-----\n\nThe software developed and tested on Ubuntu 16.04 LTS using PyPy 3.5 (mostly).\nIf you have any issues, drop a line to the\n`project site <https://github.com/tsionyx/pynogram/issues>`_.\n\n\n.. [1] The installation folder can vary depending on your distro, python version\n and installation method. For example when installed inside virtualenv it can be\n in one of such paths:\n\n  - .env/lib/python3.5/site-packages/\n  - ~/.virtualenvs/pypy3/site-packages/\n  - ~/.virtualenvs/pynogram/lib/python2.7/site-packages/\n\n When installing system-wide it can be in:\n\n  - /usr/lib/pypy/lib-python/2.7/\n  - /usr/local/lib/python2.7/dist-packages/\n\n If you still cannot find it, try the ``which pynogram``, it gives you some clue\n about where the installation folder can be.\n Also if you actually searching for the *examples/* folder,\n try ``pynogram --show-examples-folder``.\n\n.. |Build Status| image:: https://img.shields.io/travis/tsionyx/pynogram.svg\n    :target: https://travis-ci.org/tsionyx/pynogram\n.. |Coverage Status| image:: https://img.shields.io/coveralls/github/tsionyx/pynogram.svg\n    :target: https://coveralls.io/github/tsionyx/pynogram\n.. |codebeat badge| image:: https://codebeat.co/badges/21e69843-0e13-4046-bc88-b3f108ccff69\n    :target: https://codebeat.co/projects/github-com-tsionyx-pynogram-dev\n.. |PyPI| image:: https://img.shields.io/pypi/v/pynogram.svg\n    :target: https://pypi.org/project/pynogram/\n.. |PyPI - Python Version| image:: https://img.shields.io/pypi/pyversions/pynogram.svg\n    :target: https://pypi.org/project/pynogram/\n.. |PyPI - Implementation| image:: https://img.shields.io/pypi/implementation/pynogram.svg\n    :target: https://pypi.org/project/pynogram/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/pynogram/0.3.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tsionyx/pynogram", "keywords": "game,nonogram,solver", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "pynogram", "package_url": "https://pypi.org/project/pynogram/", "platform": "", "project_url": "https://pypi.org/project/pynogram/", "project_urls": {"Download": "https://pypi.python.org/pypi/pynogram/0.3.1", "Homepage": "https://github.com/tsionyx/pynogram"}, "release_url": "https://pypi.org/project/pynogram/0.3.1/", "requires_dist": ["six", "memoized", "svgwrite", "tornado; extra == 'web'", "futures; ( python_version < \"3.2\") and extra == 'web'"], "requires_python": "", "summary": "Nonogram solver", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/pynogram/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b41f190d12d02eed604cd47f755992bc819730f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e6f6772616d2e737667\"></a> <a href=\"https://pypi.org/project/pynogram/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a47ca9f09e1c1792d2913db573c0d660f03fb37e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796e6f6772616d2e737667\"></a> <a href=\"https://pypi.org/project/pynogram/\" rel=\"nofollow\"><img alt=\"PyPI - Implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b11c963875165424845ab7ab2bc8fd98438d0c95/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f70796e6f6772616d2e737667\"></a></p>\n<p><a href=\"https://travis-ci.org/tsionyx/pynogram\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eec93a364572954deb29837533f327fc71233c1e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7473696f6e79782f70796e6f6772616d2e737667\"></a> <a href=\"https://coveralls.io/github/tsionyx/pynogram\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb75cc4536feca5b1326ac537d3e9521fac14b03/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f7473696f6e79782f70796e6f6772616d2e737667\"></a> <a href=\"https://codebeat.co/projects/github-com-tsionyx-pynogram-dev\" rel=\"nofollow\"><img alt=\"codebeat badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/804dc3b5fcae1cb91d1f0126612b3170f4c2849b/68747470733a2f2f636f6465626561742e636f2f6261646765732f32316536393834332d306531332d343034362d626338382d623366313038636366663639\"></a></p>\n<div id=\"nonogram-solver\">\n<h2>Nonogram solver</h2>\n<p>Solve the <a href=\"https://en.wikipedia.org/wiki/Nonogram\" rel=\"nofollow\">nonogram puzzles</a>\nand watch the solution process.\nBoth black-and-white and color puzzles with the unlimited\n(at least in theory) size are supported. Also, you can easily solve puzzles\nfrom <a href=\"http://webpbn.com\" rel=\"nofollow\">http://webpbn.com</a> or <a href=\"http://www.nonograms.org/\" rel=\"nofollow\">http://www.nonograms.org/</a> that have thousands of them.</p>\n<p>Different sources are supported:</p>\n<ul>\n<li>local puzzles, embedded inside the package</li>\n<li>local puzzles, created by yourself</li>\n<li>puzzles from <a href=\"http://webpbn.com\" rel=\"nofollow\">http://webpbn.com</a> (without downloading)</li>\n<li>locally saved webpbn puzzles (mainly for development/debug purpose)</li>\n<li><a href=\"http://www.nonograms.org/\" rel=\"nofollow\">http://www.nonograms.org/</a> (<a href=\"http://www.nonograms.ru/\" rel=\"nofollow\">http://www.nonograms.ru/</a>) puzzles</li>\n</ul>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>pip install pynogram\n</pre>\n</div>\n<div id=\"console\">\n<h3>Console</h3>\n<p>Firstly, make sure it works (if not, see the <a href=\"#errors\" rel=\"nofollow\">Errors</a> section):</p>\n<pre>$ pynogram\n# # # # # # # # #               1 1\n# # # # # # # # #               1 1               1   1     5\n# # # # # # # # # 7 1 1 1 7 0 3 1 1 2 0 6 0 6 0 3 1 5 1 3 0 1\n            1 1 1 # . . . # . . . . . . . . . . . . . . . . #\n        1 1 1 1 1 # . . . # . . . . . . # . # . . . . . . . #\n    1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n5 1 1 1 1 1 1 1 1 # # # # # . # . . # . # . # . # . # . # . #\n1 1 4 1 1 1 1 1 1 # . . . # . # # # # . # . # . # . # . # . #\n  1 1 1 1 1 1 1 1 # . . . # . # . . . . # . # . # . # . # . .\n    1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n</pre>\n<div id=\"id1\">\n<h4><a href=\"pynogram/examples/\" rel=\"nofollow\">Local</a></h4>\n<p>To solve one of the embedded puzzles do the <tt>pynogram <span class=\"pre\">--board</span> {NAME}</tt> (or simply <em>-b</em>)\nwhere NAME is the name of the file (you can skip the <em>.txt</em> extension).\nSee the list of all embedded puzzles in the <em>pynogram/examples/</em> of your installation folder <a href=\"#id8\" id=\"id2\" rel=\"nofollow\">[1]</a>.</p>\n<pre>$ pynogram --board=winter --draw-final\n# # # # #                         2\n# # # # #         1 1     4 1     2 4   4 5   2   7\n# # # # # 5 7 2 1 3 3 7   4 6 7 6 3 4 4 4 3 6 2 5 1 125 1\n# # # # # 6 3 7 6 6 6 4 111 1 4 5 1 1 7 1 1 5 4 1 1 1 6 103\n# # # # # 4 5 5 6 6 7 7 6 4 3 3 2 2 1 2 2 1 1 1 1 1 1 3 1 8\n  1 5 114 # . # # # # # . # # # # # # # # # # # . . # # # #\n3 3 9 2 1 # # # . . . # # # . # # # # # # # # # . . # # . #\n  2 8 5 5 # # . . # # # # # # # # . # # # # # . . # # # # #\n    2 145 # # . . # # # # # # # # # # # # # # . # # # # # .\n2 4 4 2 6 # # . . # # # # . # # # # . . . # # . # # # # # #\n  2 6 5 2 . # # . . . # # # # # # . . . . . # # # # # . # #\n      117 # # # # # # # # # # # . . . . . . . # # # # # # #\n  6 3 3 6 # # # # # # . # # # . . . # # # . . . # # # # # #\n  1 7 5 5 # . # # # # # # # . . . # # # # # . . . # # # # #\n    8 7 4 # # # # # # # # . . . # # # # # # # . . . # # # #\n    8 9 4 # # # # # # # # . . # # # # # # # # # . . # # # #\n    121 8 # # # # # # # # # # # # . . # . . # # # # # # # #\n    2 1 2 . . . . . . . . . . # # . . # . . # # . . . . . .\n      9 3 . . . . . . . . . . # # # # # # # # # . # # # . .\n        2 . . . . . . . . . . . . . . . . . . . . . . # # .\n        9 . . . . . . . . . . . . . . # # # # # # # # # . .\n        6 . . . . . . . . . . # # # # # # . . . . . . . . .\n        6 . . . . . . . # # # # # # . . . . . . . . . . . .\n        6 . . . . . # # # # # # . . . . . . . . . . . . . .\n        7 . . . # # # # # # # . . . . . . . . . . . . . . .\n        8 . # # # # # # # # . . . . . . . . . . . . . . . .\n        8 # # # # # # # # . . . . . . . . . . . . . . . . .\n        8 # # # # # # # # . . . . . . . . . . . . . . . . .\n        7 # # # # # # # . . . . . . . . . . . . . . . . . .\n        7 # # # # # # # . . . . . . . . . . . . . . . . . .\n</pre>\n<p>solve simple color puzzle (UK flag)</p>\n<pre>$ pynogram -b uk\n# # # # # # #       1 1 2 2 3 3 4                       4 3 3 2 2 1 1\n# # # # # # #       1 2 1 2 1 2 1                       1 2 1 2 1 2 1\n# # # # # # # 1 1 2 4 3 3 2 2 1 1                       1 1 2 2 3 3 4 2 1 1\n# # # # # # # 5 5 4 3 3 3 3 3 3 3                       3 3 3 3 3 3 3 4 5 5\n# # # # # # # 3 3 3 4 3 3 2 2 1 1 4 5 5 6       6 5 5 4 1 1 2 2 3 3 4 3 3 3\n# # # # # # # 5 5 4 1 2 1 2 1 2 1 7 5 5 3       3 5 5 7 1 2 1 2 1 2 1 4 5 5\n# # # # # # # 1 1 2 1 1 2 2 3 3 4 4 5 5 6 1515156 5 5 4 4 3 3 2 2 1 1 2 1 1\n    3 113 113 % % % * * * * * * * * * * * % % % * * * * * * * * * * * % % %\n2 3 9 3 9 3 2 * * % % % * * * * * * * * * % % % * * * * * * * * * % % % * *\n4 3 7 3 7 3 4 * * * * % % % * * * * * * * % % % * * * * * * * % % % * * * *\n6 3 5 3 5 3 6 * * * * * * % % % * * * * * % % % * * * * * % % % * * * * * *\n8 3 3 3 3 3 8 * * * * * * * * % % % * * * % % % * * * % % % * * * * * * * *\n103 1 3 1 3 10* * * * * * * * * * % % % * % % % * % % % * * * * * * * * * *\n            31% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n            31% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n            31% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %\n103 1 3 1 3 10* * * * * * * * * * % % % * % % % * % % % * * * * * * * * * *\n8 3 3 3 3 3 8 * * * * * * * * % % % * * * % % % * * * % % % * * * * * * * *\n6 3 5 3 5 3 6 * * * * * * % % % * * * * * % % % * * * * * % % % * * * * * *\n4 3 7 3 7 3 4 * * * * % % % * * * * * * * % % % * * * * * * * % % % * * * *\n2 3 9 3 9 3 2 * * % % % * * * * * * * * * % % % * * * * * * * * * % % % * *\n    3 113 113 % % % * * * * * * * * * * * % % % * * * * * * * * * * * % % %\n</pre>\n</div>\n<div id=\"user-defined\">\n<h4>User-defined</h4>\n<p>To create the puzzle by yourself, learn the format first. Do not panic, it is very simple!\nFind out the <em>pynogram/examples/hello.txt</em> file inside your installation folder <a href=\"#id8\" id=\"id3\" rel=\"nofollow\">[1]</a>\nand copy it to create a new puzzle.\nThen follow the comments in the file to add clues to your new puzzle.\nTo run the solver on your puzzle hit the <tt>pynogram</tt> and specify the path to your file:</p>\n<pre>$ cp /install/folder/pynogram/examples/hello.txt my-new-puzzle.txt\n$ pynogram -b my-new-puzzle.txt\n# # # # # # # # #               1 1\n# # # # # # # # #               1 1               1   1     5\n# # # # # # # # # 7 1 1 1 7 0 3 1 1 2 0 6 0 6 0 3 1 5 1 3 0 1\n            1 1 1 # . . . # . . . . . . . . . . . . . . . . #\n        1 1 1 1 1 # . . . # . . . . . . # . # . . . . . . . #\n    1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n5 1 1 1 1 1 1 1 1 # # # # # . # . . # . # . # . # . # . # . #\n1 1 4 1 1 1 1 1 1 # . . . # . # # # # . # . # . # . # . # . #\n  1 1 1 1 1 1 1 1 # . . . # . # . . . . # . # . # . # . # . .\n    1 1 2 1 1 3 1 # . . . # . . # # . . # . # . . # # # . . #\n</pre>\n</div>\n<div id=\"webpbn\">\n<h4>Webpbn</h4>\n<p>Visit the <a href=\"http://webpbn.com/\" rel=\"nofollow\">http://webpbn.com/</a> to see thousands of puzzles waiting for you to solve.\nTo run the solver on any of them just specify the puzzle id with the <em>\u2013pbn</em> flag:</p>\n<p><a href=\"http://webpbn.com/3\" rel=\"nofollow\">Simple black-and-white puzzle</a></p>\n<pre>$ pynogram --pbn=3 --draw-final\n# # # #           3 3\n# # # #         2 1 2 4 3 3 2\n# # # #       3 1 2 1 3 5 1 1 3\n# # # #       5 5 1 1 1 1 5 5 5\n# # # # 5 9 113 2 3 3 3 3 3 2 3 119 5\n      5 . . . . . # # # # # . . . . .\n      9 . . . # # # # # # # # # . . .\n      11. . # # # # # # # # # # # . .\n  3 1 3 . # # # . . . # . . . # # # .\n2 3 3 2 . # # . # # # . # # # . # # .\n4 1 1 4 # # # # . . # . # . . # # # #\n    6 8 # # # # # # . # # # # # # # #\n    6 8 # # # # # # . # # # # # # # #\n    5 9 # # # # # . # # # # # # # # #\n    5 6 # # # # # . . . . # # # # # #\n  2 7 2 . # # . # # # # # # # . # # .\n    3 3 . # # # . . . . . . . # # # .\n      11. . # # # # # # # # # # # . .\n      9 . . . # # # # # # # # # . . .\n      5 . . . . . # # # # # . . . . .\n</pre>\n<p><a href=\"http://webpbn.com/898\" rel=\"nofollow\">Simple color puzzle</a></p>\n<pre>$ pynogram --pbn=898 --draw-final\n# # # # # # # #                   1\n# # # # # # # #             1     1\n# # # # # # # #     2   5   1     1     1\n# # # # # # # #     1 4 1 6 2     1 5 4 1\n# # # # # # # # 2   3 1 2 1 1     2 1 1 3\n# # # # # # # # 1   1 3 1 2 1 6 6 3 2 3 1\n# # # # # # # # 2 7 1 1 2 2 9 8 7 2 2 1 2 7 5\n              11. . % % % % % % % % % % % . .\n  5 1 2 1 2 1 1 . % % % % % * % % * % % * % .\n          2 1 12% % * % % % % % % % % % % % %\n          9 1 5 % % % % % % % % % * % % % % %\n1 2 1 2 1 4 1 3 * % % X % % * % % % % X % % %\n  4 1 5 1 1 1 2 % % % % X % % % % % X % * % %\n    2 1 2 2 1 5 % % * % % X X . . X % % % % %\n        4 2 1 4 . % % % % . X X . X % % % % .\n              6 . . . . X X X X X X . . . . .\n              4 . . . . . X X X X . . . . . .\n              3 . . . . . . X X X . . . . . .\n              3 . . . . . . X X X . . . . . .\n              3 . . . . . . X X X . . . . . .\n              7 . . . . X X X X X X X . . . .\n              9 . . . X X X X X X X X X . . .\n</pre>\n<p>If you want to come over the network overhead when solving the webpbn puzzle,\nyou can download it prior to solving (e.g. <a href=\"http://webpbn.com/survey/puzzles\" rel=\"nofollow\">http://webpbn.com/survey/puzzles</a>).\nThen run the solver <tt>pynogram <span class=\"pre\">--local-pbn=path/to/pbn/puzzle.xml</span></tt>.</p>\n</div>\n<div id=\"nonograms-org\">\n<h4>nonograms.org</h4>\n<p>The <a href=\"http://www.nonograms.org\" rel=\"nofollow\">http://www.nonograms.org</a> also contains thousands of great puzzles.\nThis site offers only single-solution puzzles that do not require guessing,\ntherefore they usually solved quite fast.</p>\n<p><a href=\"http://www.nonograms.org/nonograms/i/19833\" rel=\"nofollow\">Simple black-and-white puzzle</a></p>\n<pre>$ pynogram --nonograms-org=19833\n# # # # # #                       2\n# # # # # #   1               3   2 2\n# # # # # #   3   10    6 1 6 2 2 2 5 3\n# # # # # # 9 1 101 1 103 3 2 2 3 1 1 2 4\n# # # # # # 4 2 1 1 5 1 2 2 1 3 1 1 2 2 5\n      1 1 8 . # . . # . . # # # # # # # #\n    1 2 2 7 # . # # . # # . # # # # # # #\n  1 2 2 2 2 # . # # . # # . # # . . . # #\n  1 2 2 1 1 # . # # . # # . # . . . . . #\n  1 2 2 1 2 # . # # . # # . # . . # # . .\n  1 2 2 2 3 # . # # . # # . # # . # # # .\n  1 2 2 2 2 # . # # . # # . . # # . # # .\n      6 1 3 # # # # # # . # . . # # # . .\n          13# # # # # # # # # # # # # . .\n          10# # # # # # # # # # . . . . .\n        5 1 . . # # # # # . . . . . . . #\n      2 1 3 # # . . # . . . . . . . # # #\n1 1 1 1 3 2 # . . # . # . # . # # # . # #\n  3 2 1 1 1 # # # . . . # # . # . . # . #\n2 1 1 2 2 1 # # . # . . # . # # . # # . #\n</pre>\n<p><a href=\"http://www.nonograms.org/nonograms2/i/19784\" rel=\"nofollow\">Simple color puzzle</a></p>\n<pre>$ pynogram --nonograms-org=19784\n# # # # # # #                     2\n# # # # # # #                 2 2 1\n# # # # # # #                 1 4 1\n# # # # # # #               2 1 6 2 3\n# # # # # # #               2 2 1 6 3 4\n# # # # # # #         1 2 2 2 6 2 1 7 6\n# # # # # # #     1   1 1 5 5 2 1 5 5 2 3\n# # # # # # # 1 1 4 111 1 1 1 1 1 1 1 1 4 4 1 1\n            4                 \" \" \" \"\n            6               \" \" \" \" \" \"\n        1 3 2               \" ! ! ! \" \"\n  1 1 1 1 1 1               ! X ! X ! \"\n          5 1               ! ! ! ! ! \"\n            4                 ! ! ! !\n            3                   # # #\n            5                 # # # # #\n        1 2 9     ! \" \" # # # # # # # # #\n        1 1 9       \" ! # # # # # # # # #\n          1 6       \"         # # # # # #\n          1 5       \"         # # # # #\n      1 1 2 2       \"         # ! ! # #\n          1 7       \"     $ $ $ $ $ $ $\n          1 7       \"     $ $ $ $ $ $ $\n3 1 2 2 2 2 5 X X X \" X X $ $ X X $ $ X X X X X\n    1 1 2 2 2     X \"     $ $     $ $   X X\n    1 1 2 2 2     X \"     $ $     $ $   X X\n    1 1 3 3 2     X \"   X X X   X X X   X X\n</pre>\n</div>\n<div id=\"modes\">\n<h4>Modes</h4>\n<p>By default, in the process of solving the new information will instantly appear on a terminal\n(as a full image board), so you can observe many boards that changing each other many times a second\nmixed with logs (if you specify any verbosity level with <em>-v</em> flag). But you can always disable\nthe board updates and force to show only the final result with <em>\u2013draw-final</em> flag.</p>\n<p>Also the <em>\u2013curses</em> mode is available, that allows you to see the solving\ninside a separate console (<a href=\"https://en.wikipedia.org/wiki/Ncurses\" rel=\"nofollow\">ncurses</a>) window.</p>\n<p>Examples:</p>\n<p>$ pynogram \u2013pbn <a href=\"http://webpbn.com/30216\" rel=\"nofollow\">30216</a> \u2013curses</p>\n<img alt=\"docs/images/curses-moose.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2aafc8947706323bbe035b8f2e711fa9055f4697/646f63732f696d616765732f6375727365732d6d6f6f73652e676966\">\n<p>$ pynogram \u2013pbn <a href=\"http://webpbn.com/29723\" rel=\"nofollow\">29723</a> \u2013curses</p>\n<img alt=\"docs/images/curses-mosaic.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/988e942342f1facba52c01dd78b17557e86a94da/646f63732f696d616765732f6375727365732d6d6f736169632e676966\">\n</div>\n<div id=\"errors\">\n<h4>Errors</h4>\n<p>If you see something like this (I stumbled with this while trying to run inside a docker container)</p>\n<pre>$ pynogram\n...\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2b1b' in position 18: ordinal not in range(128)\n</pre>\n<p>then try to run with the special environment variable</p>\n<pre>$ PYTHONIOENCODING=utf-8 pynogram\n</pre>\n<p>If that will work, you can save that variable for current session:</p>\n<pre>$ export PYTHONIOENCODING=utf-8\n</pre>\n<p>or for all the future runs</p>\n<pre>$ echo 'export PYTHONIOENCODING=utf-8' &gt;&gt; ~/.bashrc\n</pre>\n</div>\n</div>\n<div id=\"web-solver\">\n<h3>Web-solver</h3>\n<ul>\n<li><p><strong>to use the web solver you have to install additional subpackage:</strong></p>\n<p><tt>pip install pynogram[web]</tt> and <strong>start the server</strong>: <tt><span class=\"pre\">pynogram-web</span></tt></p>\n</li>\n<li><p>you can solve any of local puzzles (with <em>/board/local/</em> path)\nor webpbn puzzles (with <em>/board/pbn/</em> path)\nor nonograms.org ones (with <em>/board/nonograms.org/</em> path)</p>\n</li>\n<li><p>you can specify render mode (with the <em>?render=MODE</em> argument).\nNow the four are supported:</p>\n<ul>\n<li><strong>svg</strong> (default) - draw nice vector image. It can seriously\nslows down the viewing and solving on a large boards (e.g. 50x50 and more),\nsince the resulted SVG can be pretty huge.\nIn the future releases I plan to apply more advanced SVG drawing to eliminate the problem.</li>\n<li><strong>text</strong> - lightweight text format similar to the one that draws on the console.</li>\n<li><strong>text-grid</strong> - slightly more advanced ASCII-graphic that renders\nthe grid between cells. However it requires more screen space.</li>\n<li><strong>text-grid-bold</strong> - almost like the last one, but also draws bold lines,\nsplitting the whole board into 5x5 squares (remember puzzles in those magazines?)</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"http://localhost:3145/board/local/einstein?render=svg\" rel=\"nofollow\">http://localhost:3145/board/local/einstein?render=svg</a> (zoom=67%)</p>\n<img alt=\"docs/images/einstein-local-svg.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a3fb3cce664c7e1f7174d9d5403318de406c1a0/646f63732f696d616765732f65696e737465696e2d6c6f63616c2d7376672e676966\">\n<p><a href=\"http://localhost:3145/board/local/MLP?render=text-grid-bold\" rel=\"nofollow\">http://localhost:3145/board/local/MLP?render=text-grid-bold</a> (zoom=25%)</p>\n<img alt=\"docs/images/MLP-local-text-grid.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1cc1d117a11f394077593512f0dfed79858cb4d8/646f63732f696d616765732f4d4c502d6c6f63616c2d746578742d677269642e676966\">\n<p><a href=\"http://localhost:3145/board/pbn/2040?render=text\" rel=\"nofollow\">http://localhost:3145/board/pbn/2040?render=text</a> (zoom=75%)</p>\n<img alt=\"docs/images/marilyn-pbn-text.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4660990aeab3766fb6788887591583269102ba86/646f63732f696d616765732f6d6172696c796e2d70626e2d746578742e676966\">\n<p><a href=\"http://localhost:3145/board/pbn/2196\" rel=\"nofollow\">http://localhost:3145/board/pbn/2196</a> (zoom=75%)</p>\n<img alt=\"docs/images/precious-pbn-svg.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca31b83f8b51fcf7e2e3c632c7392f001e93b1ea/646f63732f696d616765732f70726563696f75732d70626e2d7376672e676966\">\n</div>\n<div id=\"notes\">\n<h3>Notes</h3>\n<p>Both console and web solvers work on a wide variety of pythons:\nCPython2.7 and 3.5+, PyPy 2.7 and 3.5.\nThe best performance, however, achieved on PyPy (version 3 is always preferable), so try it out.</p>\n<p>You can install <em>numpy</em> for slightly better performance\nwhen running on CPython interpreter\n(it\u2019s not listed in requirements to keep the package lightweight).\nHowever numpy does not work correctly with PyPy interpreter.</p>\n</div>\n<div id=\"references\">\n<h3>References</h3>\n<p>The following sites and articles were used when making this solver:</p>\n<p>1. <a href=\"http://webpbn.com/pbnsolve.html\" rel=\"nofollow\">The \u2018pbnsolve\u2019 Paint-by-Number Puzzle Solver by Jan Wolter</a>\nand the <a href=\"http://webpbn.com/survey/\" rel=\"nofollow\">survey</a></p>\n<p>2. <a href=\"https://www.cs.bgu.ac.il/~benr/nonograms/\" rel=\"nofollow\">The BGU Nonograms Project</a></p>\n<p>3. <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.177.76&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow\">Solving Nonograms by combining relaxations</a></p>\n<p>4. <a href=\"https://ir.nctu.edu.tw/bitstream/11536/22772/1/000324586300005.pdf\" rel=\"nofollow\">An Efficient Approach to Solving Nonograms</a></p>\n<p>5. <a href=\"https://habr.com/post/418069/\" rel=\"nofollow\">\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u043d\u044b\u0445 \u044f\u043f\u043e\u043d\u0441\u043a\u0438\u0445 \u043a\u0440\u043e\u0441\u0441\u0432\u043e\u0440\u0434\u043e\u0432 \u0441\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e \u0441\u0432\u0435\u0442\u0430</a></p>\n<p>6. <a href=\"http://window.edu.ru/resource/781/57781\" rel=\"nofollow\">\u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u044f\u043f\u043e\u043d\u0441\u043a\u0438\u0445 \u043a\u0440\u043e\u0441\u0441\u0432\u043e\u0440\u0434\u043e\u0432 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u0432</a></p>\n<p>7. <a href=\"http://www.lancaster.ac.uk/~simpsons/nonogram/howitworks\" rel=\"nofollow\">\u2018Nonolib\u2019 library by Dr. Steven Simpson</a></p>\n<hr class=\"docutils\">\n<p>The software developed and tested on Ubuntu 16.04 LTS using PyPy 3.5 (mostly).\nIf you have any issues, drop a line to the\n<a href=\"https://github.com/tsionyx/pynogram/issues\" rel=\"nofollow\">project site</a>.</p>\n<table id=\"id8\">\n<col><col>\n<tbody>\n<tr><td>[1]</td><td><em>(<a href=\"#id2\" rel=\"nofollow\">1</a>, <a href=\"#id3\" rel=\"nofollow\">2</a>)</em> <p>The installation folder can vary depending on your distro, python version\nand installation method. For example when installed inside virtualenv it can be\nin one of such paths:</p>\n<blockquote>\n<ul>\n<li>.env/lib/python3.5/site-packages/</li>\n<li>~/.virtualenvs/pypy3/site-packages/</li>\n<li>~/.virtualenvs/pynogram/lib/python2.7/site-packages/</li>\n</ul>\n</blockquote>\n<p>When installing system-wide it can be in:</p>\n<blockquote>\n<ul>\n<li>/usr/lib/pypy/lib-python/2.7/</li>\n<li>/usr/local/lib/python2.7/dist-packages/</li>\n</ul>\n</blockquote>\n<p>If you still cannot find it, try the <tt>which pynogram</tt>, it gives you some clue\nabout where the installation folder can be.\nAlso if you actually searching for the <em>examples/</em> folder,\ntry <tt>pynogram <span class=\"pre\">--show-examples-folder</span></tt>.</p>\n</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4265455, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0c41885b0679b2f85288230ea467d0ca", "sha256": "e4f1915b678ea39e1d2fbeae31a766ef0c4edfb79af17e08a4b495dd7766c958"}, "downloads": -1, "filename": "pynogram-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0c41885b0679b2f85288230ea467d0ca", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 52553, "upload_time": "2018-01-12T17:26:18", "upload_time_iso_8601": "2018-01-12T17:26:18.682313Z", "url": "https://files.pythonhosted.org/packages/0e/5c/37f5811f91b471eb494d1503310aa1f2366658efa4c965e2eb14afca8cff/pynogram-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f088a9408e5cf948e7d4cc784da8294", "sha256": "376e691db310e11c4776ac89e44471338744b843ebdbdab69a25db25407fff51"}, "downloads": -1, "filename": "pynogram-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9f088a9408e5cf948e7d4cc784da8294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45702, "upload_time": "2018-01-12T17:26:20", "upload_time_iso_8601": "2018-01-12T17:26:20.177356Z", "url": "https://files.pythonhosted.org/packages/5c/d2/9436813863170a1d5f01ec92f0759787af2d3b9be91bea941c4b82d0a39c/pynogram-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cecebd0bc5c14dce459d0beef133661a", "sha256": "c2764b27fde3263d27d6939599ceb30840196eee8176a60cce2468234e680932"}, "downloads": -1, "filename": "pynogram-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cecebd0bc5c14dce459d0beef133661a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55013, "upload_time": "2018-01-18T15:13:10", "upload_time_iso_8601": "2018-01-18T15:13:10.689305Z", "url": "https://files.pythonhosted.org/packages/d6/66/9512a381d73a67cc3dfadab08df1b6655bd14fb651ebaa4bc41ac90647ae/pynogram-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "366a96e91a134abbcd7318f3a3d7b70e", "sha256": "edfbfada9dba427a78fd74e7da891cc99e0b549eeb2c07cf666c30f07b259dde"}, "downloads": -1, "filename": "pynogram-0.1.1.tar.gz", "has_sig": false, "md5_digest": "366a96e91a134abbcd7318f3a3d7b70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48683, "upload_time": "2018-01-18T15:13:12", "upload_time_iso_8601": "2018-01-18T15:13:12.286879Z", "url": "https://files.pythonhosted.org/packages/96/0b/5b0051a5760398223e5e5ed1a2bb2afe333136e24212de6b0be5f3e1195e/pynogram-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9917eb37ac0fbba56e034442c4123ff7", "sha256": "cd39176c7ad38fbd8366f044eafc8de0ef32dc436fa86d3f6d2d04d30c6c8e19"}, "downloads": -1, "filename": "pynogram-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9917eb37ac0fbba56e034442c4123ff7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 59070, "upload_time": "2018-01-30T08:18:42", "upload_time_iso_8601": "2018-01-30T08:18:42.724345Z", "url": "https://files.pythonhosted.org/packages/57/ca/c995cf41d429aff34c3e4df12de575fc371e7d5c0ffb1049c3b53bfd5cc7/pynogram-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20e5cbe3b6ba12f56f0578d03d2c3e0c", "sha256": "c09a9e186e80d94672651c48fdd3c20e3b3ef3c3036b4a95a05fd1c2d373c40a"}, "downloads": -1, "filename": "pynogram-0.1.2.tar.gz", "has_sig": false, "md5_digest": "20e5cbe3b6ba12f56f0578d03d2c3e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 461212, "upload_time": "2018-01-30T08:21:14", "upload_time_iso_8601": "2018-01-30T08:21:14.539516Z", "url": "https://files.pythonhosted.org/packages/5f/98/42359dabd89de3d40cf05474db77e17672cccaf72c19c46bbf1387bc4ad7/pynogram-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fae30452d32379629543052ed3ad6873", "sha256": "836c1a1054e54311756c626e1376ab84fe07e627ec2239a39b071eb142ac1f54"}, "downloads": -1, "filename": "pynogram-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fae30452d32379629543052ed3ad6873", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 72020, "upload_time": "2018-05-19T13:28:05", "upload_time_iso_8601": "2018-05-19T13:28:05.370846Z", "url": "https://files.pythonhosted.org/packages/09/7f/fa49978bb536073a870fa33f77396a49acc7ecfd8f61b76a47bdddd0f10e/pynogram-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7010fe64f8e4526e4cfa42c318224866", "sha256": "b02b3c9067a22866ef1c33ebb59fa24146f4f46964b33c6034dd1dc22a437084"}, "downloads": -1, "filename": "pynogram-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7010fe64f8e4526e4cfa42c318224866", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 477944, "upload_time": "2018-05-19T13:28:07", "upload_time_iso_8601": "2018-05-19T13:28:07.484407Z", "url": "https://files.pythonhosted.org/packages/f6/93/95d8ece989c35971a9acfed8a8bf27a4230da30a1c0811df3d1b166c441d/pynogram-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c5b171cec1058f6df280454f8fb08684", "sha256": "2aff149318a302917e786edcb67329bfeccf2bfd51e60a36e246c402f621c1c8"}, "downloads": -1, "filename": "pynogram-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c5b171cec1058f6df280454f8fb08684", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 79916, "upload_time": "2018-06-11T17:02:51", "upload_time_iso_8601": "2018-06-11T17:02:51.776409Z", "url": "https://files.pythonhosted.org/packages/23/e0/78a4cf70a400b4786222d1d0e76b6228217edf31df80d09a8a41a131f989/pynogram-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bea07a625f522e3a6a0c2d757dd9f3b0", "sha256": "3e450a1e9bcff1094edd8e1dec36aca8f6fd326fe37219e251a818f830a6f705"}, "downloads": -1, "filename": "pynogram-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bea07a625f522e3a6a0c2d757dd9f3b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 839932, "upload_time": "2018-06-11T17:02:56", "upload_time_iso_8601": "2018-06-11T17:02:56.033639Z", "url": "https://files.pythonhosted.org/packages/32/31/bf03b260567c96baee434fd7cd95f21f221ce604184d42ab5b1fd424989f/pynogram-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8574a81c836724719c2c4c0a3e280e6d", "sha256": "ccd2cdfeef9842193df5241beffb800316df6e8a82d9e8a0c52125655f016a96"}, "downloads": -1, "filename": "pynogram-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8574a81c836724719c2c4c0a3e280e6d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 89579, "upload_time": "2018-08-30T13:42:57", "upload_time_iso_8601": "2018-08-30T13:42:57.854188Z", "url": "https://files.pythonhosted.org/packages/8d/8f/1f9d3dc577f23ddc6497b04b0b9e6105a59647148c9763d5271329eba550/pynogram-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07fee7609cf1ada434ea05d016abe249", "sha256": "8f6d6096e6fb5441d09dc65163b329c9dc69a0dcc486651983a59da306ade406"}, "downloads": -1, "filename": "pynogram-0.3.0.tar.gz", "has_sig": false, "md5_digest": "07fee7609cf1ada434ea05d016abe249", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 973557, "upload_time": "2018-08-30T13:43:00", "upload_time_iso_8601": "2018-08-30T13:43:00.592541Z", "url": "https://files.pythonhosted.org/packages/52/24/a8931151817bbe951eb94fabc018bcc63cf224f5957ae07e6fe2c2e26ec3/pynogram-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ab015a32d65861ea98beb8f621348ac1", "sha256": "cbe445e5eb944dcfa77b4d0d0a88a7986d23daba0cbccfde6283748a21be95df"}, "downloads": -1, "filename": "pynogram-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab015a32d65861ea98beb8f621348ac1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96083, "upload_time": "2018-09-12T15:41:09", "upload_time_iso_8601": "2018-09-12T15:41:09.238685Z", "url": "https://files.pythonhosted.org/packages/1f/af/7a1c8e1cdb839923b973b09d31b5eb1af9ceec1eb12d9ae6f7ea61b6eae1/pynogram-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bca250795a26e0fc03b30aea5c79630f", "sha256": "633a69782f24ac7ef08d09d820474be3c9ff71f40130a62168d2c1a11161c5bc"}, "downloads": -1, "filename": "pynogram-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bca250795a26e0fc03b30aea5c79630f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 980157, "upload_time": "2018-09-12T15:41:12", "upload_time_iso_8601": "2018-09-12T15:41:12.149741Z", "url": "https://files.pythonhosted.org/packages/6a/99/4b58c3eaa69faff8c76ae4b6d86f25f15c3615823fae2d2a7c4979979c5f/pynogram-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab015a32d65861ea98beb8f621348ac1", "sha256": "cbe445e5eb944dcfa77b4d0d0a88a7986d23daba0cbccfde6283748a21be95df"}, "downloads": -1, "filename": "pynogram-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab015a32d65861ea98beb8f621348ac1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96083, "upload_time": "2018-09-12T15:41:09", "upload_time_iso_8601": "2018-09-12T15:41:09.238685Z", "url": "https://files.pythonhosted.org/packages/1f/af/7a1c8e1cdb839923b973b09d31b5eb1af9ceec1eb12d9ae6f7ea61b6eae1/pynogram-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bca250795a26e0fc03b30aea5c79630f", "sha256": "633a69782f24ac7ef08d09d820474be3c9ff71f40130a62168d2c1a11161c5bc"}, "downloads": -1, "filename": "pynogram-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bca250795a26e0fc03b30aea5c79630f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 980157, "upload_time": "2018-09-12T15:41:12", "upload_time_iso_8601": "2018-09-12T15:41:12.149741Z", "url": "https://files.pythonhosted.org/packages/6a/99/4b58c3eaa69faff8c76ae4b6d86f25f15c3615823fae2d2a7c4979979c5f/pynogram-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:05 2020"}