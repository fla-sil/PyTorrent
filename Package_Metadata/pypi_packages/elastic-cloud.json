{"info": {"author": "Thomas Klinger", "author_email": "thomas.klinger@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Python Elastic Cloud (Enterprise) Client\n========================================\n\n.. image:: https://travis-ci.org/teekaay/elastic-cloud-py.svg?branch=master\n    :target: https://travis-ci.org/teekaay/elastic-cloud-py\n\nPython client for `Elastic Cloud <https://www.elastic.co/cloud>`_. Its goal is to provide\nan abstraction for all Elastic Cloud related API operations. \nTo get more information about the Elastic Cloud API, visit `this <https://www.elastic.co/guide/en/cloud-enterprise/current/ece-api-reference.html>`_\nlink.\n\nThe main motiviation is to aid in building a solid foundation for building tooling\naround Elastic Cloud without having to write a client again and again.\n\n.. note::\n\n    We will refer to the product `Elastic Cloud Enterprise` as to `Elastic Cloud` in the following.\n    Note that there is a difference between the hosted (SaaS) and the enterprise (on-promise) variant.\n\nContents\n--------\n\n.. toctree::\n   :maxdepth: 2\n\n   api\n   Changelog\n\nCompatibility\n-------------\n\nThe library is compatible with the following Elastic Cloud API versions\n\n- 1.0 (Elastic Cloud Enterprise)\n- 1.1 (Elastic Cloud Enterprise)\n\nand with the following Python versions\n\n- 3.x\n\nInstallation\n------------\n\nInstall the ``elastic_cloud`` package with one of the following methods:\n\nUsing ``git`` (uses the current master)\n\n::\n\n    git clone https://github.com/teekaay/elastic-cloud-py.git\n    cd elastic-cloud-py\n    python setup.py install\n\nUsing ``pip`` (from Github)\n\n::\n\n    pip install https://github.com/teekaay/elastic-cloud-py/archive/master.zip\n\nExample Usage \n-------------\n\nThe main entrypoint for library users should be :class:`~elastic_cloud.ElasticCloud` which\ncontains all sub-clients.\n\n::\n\n    >>> from elastic_cloud import ElasticCloud\n    # we will connect to localhost:12443 by default\n    >>> ec = ElasticCloud()\n    # return values are requests objects\n    >>> platform_info = ec.platform.get_platform_info()\n    >>> print(platform_info.json())\n    {'eula_accepted': True, 'phone_home'enabled': True, 'services': [...], 'version': '<platform-version>'}\n\nFeatures\n--------\n\nThis library is a very thin layer above the raw Elastic Cloud REST API. Basically, it \nprovides methods that do HTTP calls without any error handling or (de)serializing apart\nfrom what the underlying HTTP client does. Therefor it is suitable for building higher-level\nclients on top of ``elastic_cloud``. \n\n``elastic_cloud`` contains multiple sub-clients which are all contained in the main :class:`~elastic_cloud.ElasticCloud`\nclass. These are\n\n* :class:`~elastic_cloud.client.PlatformClient`\n* :class:`~elastic_cloud.client.PlatformAllocatorClient`\n* :class:`~elastic_cloud.client.StackClient`\n* :class:`~elastic_cloud.client.PlatformClient`\n* :class:`~elastic_cloud.client.ElasticsearchClusterClient`\n* :class:`~elastic_cloud.client.KibanaClusterClient`\n\nEach client contains a subset of API calls which are logically separated and can execute the operations described in the section of the \n`API documentation <https://www.elastic.co/guide/en/cloud-enterprise/current/ece-api-reference.html>`_ \n\nAPI Call Responses\n-------------------\n\nAll clients in ``elastic_cloud`` return their result as a ``requests`` result object.\nTherefor, they have (among others) two common ways of handling them\n\n::\n\n    >>> get_platform_info_result = ec.platform.get_platform_info()\n    >>> print(get_platform_info_result.status_code)\n    >>> 200\n    >>> print(get_platform_info_result.json())\n    {'eula_accepted': True, 'phone_home'enabled': True, 'services': [...], 'version': '<platform-version>'}\n\nDevelopment\n-----------\n\nTesting\n~~~~~~~~\n\nTo run all unit tests \n\n::\n\n    make test\n\nCurrently no integration or functional tests are implemented.\n\nBuilding \n~~~~~~~~\n\nTo build all artifacts (docs and the distribution), run \n\n::\n\n    make build-py\n    make docs-html\n\n\nIndices and tables\n------------------\n\n* :ref:`genindex`\n* :ref:`modindex`\n* :ref:`search`\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/teekaay/elastic-cloud-py", "keywords": "elastic-cloud elastic", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "elastic-cloud", "package_url": "https://pypi.org/project/elastic-cloud/", "platform": "", "project_url": "https://pypi.org/project/elastic-cloud/", "project_urls": {"Homepage": "https://github.com/teekaay/elastic-cloud-py"}, "release_url": "https://pypi.org/project/elastic-cloud/1.1.2/", "requires_dist": ["elasticsearch (==6.1.1)", "flake8; extra == 'develop'", "nose; extra == 'develop'", "sphinx; extra == 'develop'", "sphinx-rtd-theme; extra == 'develop'"], "requires_python": "", "summary": "Python client for Elastic Cloud", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Python Elastic Cloud (Enterprise) Client<br>========================================<br><br>.. image:: https://travis-ci.org/teekaay/elastic-cloud-py.svg?branch=master<br>    :target: https://travis-ci.org/teekaay/elastic-cloud-py<br><br>Python client for `Elastic Cloud &lt;https://www.elastic.co/cloud&gt;`_. Its goal is to provide<br>an abstraction for all Elastic Cloud related API operations. <br>To get more information about the Elastic Cloud API, visit `this &lt;https://www.elastic.co/guide/en/cloud-enterprise/current/ece-api-reference.html&gt;`_<br>link.<br><br>The main motiviation is to aid in building a solid foundation for building tooling<br>around Elastic Cloud without having to write a client again and again.<br><br>.. note::<br><br>    We will refer to the product `Elastic Cloud Enterprise` as to `Elastic Cloud` in the following.<br>    Note that there is a difference between the hosted (SaaS) and the enterprise (on-promise) variant.<br><br>Contents<br>--------<br><br>.. toctree::<br>   :maxdepth: 2<br><br>   api<br>   Changelog<br><br>Compatibility<br>-------------<br><br>The library is compatible with the following Elastic Cloud API versions<br><br>- 1.0 (Elastic Cloud Enterprise)<br>- 1.1 (Elastic Cloud Enterprise)<br><br>and with the following Python versions<br><br>- 3.x<br><br>Installation<br>------------<br><br>Install the ``elastic_cloud`` package with one of the following methods:<br><br>Using ``git`` (uses the current master)<br><br>::<br><br>    git clone https://github.com/teekaay/elastic-cloud-py.git<br>    cd elastic-cloud-py<br>    python setup.py install<br><br>Using ``pip`` (from Github)<br><br>::<br><br>    pip install https://github.com/teekaay/elastic-cloud-py/archive/master.zip<br><br>Example Usage <br>-------------<br><br>The main entrypoint for library users should be :class:`~elastic_cloud.ElasticCloud` which<br>contains all sub-clients.<br><br>::<br><br>    &gt;&gt;&gt; from elastic_cloud import ElasticCloud<br>    # we will connect to localhost:12443 by default<br>    &gt;&gt;&gt; ec = ElasticCloud()<br>    # return values are requests objects<br>    &gt;&gt;&gt; platform_info = ec.platform.get_platform_info()<br>    &gt;&gt;&gt; print(platform_info.json())<br>    {'eula_accepted': True, 'phone_home'enabled': True, 'services': [...], 'version': '&lt;platform-version&gt;'}<br><br>Features<br>--------<br><br>This library is a very thin layer above the raw Elastic Cloud REST API. Basically, it <br>provides methods that do HTTP calls without any error handling or (de)serializing apart<br>from what the underlying HTTP client does. Therefor it is suitable for building higher-level<br>clients on top of ``elastic_cloud``. <br><br>``elastic_cloud`` contains multiple sub-clients which are all contained in the main :class:`~elastic_cloud.ElasticCloud`<br>class. These are<br><br>* :class:`~elastic_cloud.client.PlatformClient`<br>* :class:`~elastic_cloud.client.PlatformAllocatorClient`<br>* :class:`~elastic_cloud.client.StackClient`<br>* :class:`~elastic_cloud.client.PlatformClient`<br>* :class:`~elastic_cloud.client.ElasticsearchClusterClient`<br>* :class:`~elastic_cloud.client.KibanaClusterClient`<br><br>Each client contains a subset of API calls which are logically separated and can execute the operations described in the section of the <br>`API documentation &lt;https://www.elastic.co/guide/en/cloud-enterprise/current/ece-api-reference.html&gt;`_ <br><br>API Call Responses<br>-------------------<br><br>All clients in ``elastic_cloud`` return their result as a ``requests`` result object.<br>Therefor, they have (among others) two common ways of handling them<br><br>::<br><br>    &gt;&gt;&gt; get_platform_info_result = ec.platform.get_platform_info()<br>    &gt;&gt;&gt; print(get_platform_info_result.status_code)<br>    &gt;&gt;&gt; 200<br>    &gt;&gt;&gt; print(get_platform_info_result.json())<br>    {'eula_accepted': True, 'phone_home'enabled': True, 'services': [...], 'version': '&lt;platform-version&gt;'}<br><br>Development<br>-----------<br><br>Testing<br>~~~~~~~~<br><br>To run all unit tests <br><br>::<br><br>    make test<br><br>Currently no integration or functional tests are implemented.<br><br>Building <br>~~~~~~~~<br><br>To build all artifacts (docs and the distribution), run <br><br>::<br><br>    make build-py<br>    make docs-html<br><br><br>Indices and tables<br>------------------<br><br>* :ref:`genindex`<br>* :ref:`modindex`<br>* :ref:`search`<br><br>\n          </div>"}, "last_serial": 3701937, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "8a71ca2ddfe1f7559ce21a425761e9fe", "sha256": "320ef4dcebbf6691c4eecadaa2ebc7d4bbe9c56f68d2835d0f0ca9bd0e76da4e"}, "downloads": -1, "filename": "elastic_cloud-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a71ca2ddfe1f7559ce21a425761e9fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12231, "upload_time": "2018-03-24T17:54:58", "upload_time_iso_8601": "2018-03-24T17:54:58.693283Z", "url": "https://files.pythonhosted.org/packages/ce/39/c8babd063dcf167cb31bf5e4bf077a612e22e597c7b0d21ba94c3c047235/elastic_cloud-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0c9512f13d037060ad69a22365f24f4", "sha256": "c2eeb381103e80272f423c113d3cb8de7629635b4c8763f52d2a5d4daa80ce8e"}, "downloads": -1, "filename": "elastic_cloud-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e0c9512f13d037060ad69a22365f24f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8118, "upload_time": "2018-03-24T18:08:30", "upload_time_iso_8601": "2018-03-24T18:08:30.145936Z", "url": "https://files.pythonhosted.org/packages/3f/5e/3ce69ed35b89c84978c278381b8d4fecc417c4f9130b4fe77398ff25ca82/elastic_cloud-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a71ca2ddfe1f7559ce21a425761e9fe", "sha256": "320ef4dcebbf6691c4eecadaa2ebc7d4bbe9c56f68d2835d0f0ca9bd0e76da4e"}, "downloads": -1, "filename": "elastic_cloud-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a71ca2ddfe1f7559ce21a425761e9fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12231, "upload_time": "2018-03-24T17:54:58", "upload_time_iso_8601": "2018-03-24T17:54:58.693283Z", "url": "https://files.pythonhosted.org/packages/ce/39/c8babd063dcf167cb31bf5e4bf077a612e22e597c7b0d21ba94c3c047235/elastic_cloud-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0c9512f13d037060ad69a22365f24f4", "sha256": "c2eeb381103e80272f423c113d3cb8de7629635b4c8763f52d2a5d4daa80ce8e"}, "downloads": -1, "filename": "elastic_cloud-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e0c9512f13d037060ad69a22365f24f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8118, "upload_time": "2018-03-24T18:08:30", "upload_time_iso_8601": "2018-03-24T18:08:30.145936Z", "url": "https://files.pythonhosted.org/packages/3f/5e/3ce69ed35b89c84978c278381b8d4fecc417c4f9130b4fe77398ff25ca82/elastic_cloud-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:05 2020"}