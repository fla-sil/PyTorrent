{"info": {"author": "F. Oliver Gathmann, Michael Held", "author_email": "gathmann(at)ocelerate.org, held(at)cellcognition.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable"], "description": "pyVIGRA provides minimalistic Python wrappers for the VIGRA library\r\n(http://hci.iwr.uni-heidelberg.de/vigra/index.html), a fast C++\r\nlibrary for image processing.\r\n\r\nHighlights:\r\n * Automated configurable build of the extension and required VIGRA and\r\nboost.python shared libraries with setuptools, tested on Windows, Mac OS-X and\r\nLinux;\r\n * Optional export of VIGRA images and multi_arrays to numpy array (either as\r\nview or as copy);\r\n * A hierarchy of generic image classes that extend the underlying C++ extension\r\nclasses in Python using metaclass injection (as described here\r\nhttp://www.boost.org/doc/libs/1_39_0/libs/python/doc/tutorial/doc/html/python/techniques.html).", "description_content_type": null, "docs_url": null, "download_url": "http://cellcognition.ethz.ch/download/pyvigra/pyVIGRA-1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pyvigra.cellcognition.org/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyVIGRA", "package_url": "https://pypi.org/project/pyVIGRA/", "platform": "Win32,Linux,Mac OS-X", "project_url": "https://pypi.org/project/pyVIGRA/", "project_urls": {"Download": "http://cellcognition.ethz.ch/download/pyvigra/pyVIGRA-1.0.0.tar.gz", "Homepage": "http://pyvigra.cellcognition.org/"}, "release_url": "https://pypi.org/project/pyVIGRA/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Python wrappers for VIGRA", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            pyVIGRA provides minimalistic Python wrappers for the VIGRA library\n<br>(http://hci.iwr.uni-heidelberg.de/vigra/index.html), a fast C++\n<br>library for image processing.\n<br>\n<br>Highlights:\n<br> * Automated configurable build of the extension and required VIGRA and\n<br>boost.python shared libraries with setuptools, tested on Windows, Mac OS-X and\n<br>Linux;\n<br> * Optional export of VIGRA images and multi_arrays to numpy array (either as\n<br>view or as copy);\n<br> * A hierarchy of generic image classes that extend the underlying C++ extension\n<br>classes in Python using metaclass injection (as described here\n<br>http://www.boost.org/doc/libs/1_39_0/libs/python/doc/tutorial/doc/html/python/techniques.html).\n          </div>"}, "last_serial": 803197, "releases": {"0.9.0": [], "1.0.0": []}, "urls": [], "timestamp": "Fri May  8 03:11:58 2020"}