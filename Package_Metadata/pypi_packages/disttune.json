{"info": {"author": "Andreas Kloeckner", "author_email": "inform@tiker.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Distributed Autotuning\n======================\n\nFor all of this, you'll need authentication details for a PostgreSQL server,\nin a bunch of environment variables. Perhaps you might set those like this::\n\n    export TUNE_DBHOST=tuning-database.example.com\n    export TUNE_DBNAME=disttune\n    export TUNE_DBUSER=sampleuse\n    export TUNE_DBPASSWORD=Yeizah2u\n\nCreate jobs for an autotuning run::\n\n    python -m disttune enum exampletune.Run\n\nThe dotted name ``exampletune.Run`` is actually the name of the\nclass that's driving the run.\n\nActually run jobs::\n\n    python -m disttune run --stop -v --filter run_class=exampletune.Run \"it_type~list\"\n\nThe filter expression can be used to limit what jobs are run.\n\nRun interactive Python shell with database connection::\n\n    python -m disttune console\n    >>> .q select * from run;", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/datapyle", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "disttune", "package_url": "https://pypi.org/project/disttune/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/disttune/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/datapyle"}, "release_url": "https://pypi.org/project/disttune/2015.1/", "requires_dist": null, "requires_python": null, "summary": "Distributed Autotuning with PostgreSQL", "version": "2015.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>For all of this, you\u2019ll need authentication details for a PostgreSQL server,\nin a bunch of environment variables. Perhaps you might set those like this:</p>\n<pre>export TUNE_DBHOST=tuning-database.example.com\nexport TUNE_DBNAME=disttune\nexport TUNE_DBUSER=sampleuse\nexport TUNE_DBPASSWORD=Yeizah2u\n</pre>\n<p>Create jobs for an autotuning run:</p>\n<pre>python -m disttune enum exampletune.Run\n</pre>\n<p>The dotted name <tt>exampletune.Run</tt> is actually the name of the\nclass that\u2019s driving the run.</p>\n<p>Actually run jobs:</p>\n<pre>python -m disttune run --stop -v --filter run_class=exampletune.Run \"it_type~list\"\n</pre>\n<p>The filter expression can be used to limit what jobs are run.</p>\n<p>Run interactive Python shell with database connection:</p>\n<pre>python -m disttune console\n&gt;&gt;&gt; .q select * from run;\n</pre>\n\n          </div>"}, "last_serial": 1878182, "releases": {"2015.1": []}, "urls": [], "timestamp": "Fri May  8 00:38:00 2020"}