{"info": {"author": "Axel Juraske", "author_email": "axel.juraske@short-report.de", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\nbest-tags\n=========\n\n.. image:: https://img.shields.io/pypi/v/besttags.svg\n        :target: https://pypi.python.org/pypi/besttags\n\nI try to find the best hashtags for my post on instagram. There are some grate\nweb pages, but I wand a python package.\n\n* Free software: MIT license\n\nInstall\n-------\n\n.. code-block:: shell\n\n  $ pip install besttags\n\nCommand-line\n------------\n\n.. code-block:: shell\n\n  $ best-tags coding python programmer --fix fullstackhero\n\n  #fullstackhero #coding #programming #programmer #html #css #javascript #developer\n  #code #webdeveloper #coder #webdesign #webdevelopment #technology #php #java \n  #software #tech #python #computer #computerscience #development #codinglife \n  #linux #programmers #softwaredeveloper #bhfyp #web #webdesigner #c\n\nSee the help for more informations\n\n.. code-block:: shell\n\n  $ python -m besttags --help\n\nor\n\n.. code-block:: shell\n\n  $ best-tags --help\n\nExamples\n--------\nThe simple one-liner. It will save the best hashtags for the given tags in a file.\n\n.. code-block:: python\n\n  from besttags import Manager\n\n  # The tags you are interested in.\n  tags = ['coder', 'programmers', 'python']\n\n  Manager()(tags).save('best_hashtags.txt')\n\nYou can change the default settings and add additional tags and use print()\nto show the tags\n\n.. code-block:: python\n\n  Manager(limit=10, fix=['fullstackhero'])(tags).save('10_best_hashtags.txt')\n\n  print(Manager()(tags))\n\nUse the Manager to create an object, which you can use multiple times. It is\ncallable and allows a list or single strings.\n\n.. code-block:: python\n\n  best = Manager(fix=['fullstackhero'])\n\n  best('computer', 'instagood')\n  best(['coder', 'programmers', 'python'])\n\nThe result is a class, with some basic functions. So you can iterate it and\nget the length.\n\n.. code-block:: python\n\n  result = best('coder', 'programmers', 'python')\n\n  print(len(result))\n\n  for tag in result:\n      print(tag)\n\n  print(result)\n\n  result.save('best_hashtags.txt')\n\n\n=======\nHistory\n=======\n\n1.0.1 (2019-02-07)\n------------------\n\n* bug-fix for disjunkte tags\n\n1.0.0 (2019-02-07)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axju/besttags", "keywords": "besttags", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "besttags", "package_url": "https://pypi.org/project/besttags/", "platform": "", "project_url": "https://pypi.org/project/besttags/", "project_urls": {"Homepage": "https://github.com/axju/besttags"}, "release_url": "https://pypi.org/project/besttags/1.0.1/", "requires_dist": ["requests", "bs4"], "requires_python": "", "summary": "Get the best hashtags for your post", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"best-tags\">\n<h2>best-tags</h2>\n<a href=\"https://pypi.python.org/pypi/besttags\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/besttags.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f67a77c4797467cb15614dd5f5882a9fa1de574f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f62657374746167732e737667\"></a>\n<p>I try to find the best hashtags for my post on instagram. There are some grate\nweb pages, but I wand a python package.</p>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>$ pip install besttags\n</pre>\n</div>\n<div id=\"command-line\">\n<h3>Command-line</h3>\n<pre>$ best-tags coding python programmer --fix fullstackhero\n\n<span class=\"c1\">#fullstackhero #coding #programming #programmer #html #css #javascript #developer\n#code #webdeveloper #coder #webdesign #webdevelopment #technology #php #java\n#software #tech #python #computer #computerscience #development #codinglife\n#linux #programmers #softwaredeveloper #bhfyp #web #webdesigner #c</span>\n</pre>\n<p>See the help for more informations</p>\n<pre>$ python -m besttags --help\n</pre>\n<p>or</p>\n<pre>$ best-tags --help\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>The simple one-liner. It will save the best hashtags for the given tags in a file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">besttags</span> <span class=\"kn\">import</span> <span class=\"n\">Manager</span>\n\n<span class=\"c1\"># The tags you are interested in.</span>\n<span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'coder'</span><span class=\"p\">,</span> <span class=\"s1\">'programmers'</span><span class=\"p\">,</span> <span class=\"s1\">'python'</span><span class=\"p\">]</span>\n\n<span class=\"n\">Manager</span><span class=\"p\">()(</span><span class=\"n\">tags</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'best_hashtags.txt'</span><span class=\"p\">)</span>\n</pre>\n<p>You can change the default settings and add additional tags and use print()\nto show the tags</p>\n<pre><span class=\"n\">Manager</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">fix</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'fullstackhero'</span><span class=\"p\">])(</span><span class=\"n\">tags</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'10_best_hashtags.txt'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Manager</span><span class=\"p\">()(</span><span class=\"n\">tags</span><span class=\"p\">))</span>\n</pre>\n<p>Use the Manager to create an object, which you can use multiple times. It is\ncallable and allows a list or single strings.</p>\n<pre><span class=\"n\">best</span> <span class=\"o\">=</span> <span class=\"n\">Manager</span><span class=\"p\">(</span><span class=\"n\">fix</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'fullstackhero'</span><span class=\"p\">])</span>\n\n<span class=\"n\">best</span><span class=\"p\">(</span><span class=\"s1\">'computer'</span><span class=\"p\">,</span> <span class=\"s1\">'instagood'</span><span class=\"p\">)</span>\n<span class=\"n\">best</span><span class=\"p\">([</span><span class=\"s1\">'coder'</span><span class=\"p\">,</span> <span class=\"s1\">'programmers'</span><span class=\"p\">,</span> <span class=\"s1\">'python'</span><span class=\"p\">])</span>\n</pre>\n<p>The result is a class, with some basic functions. So you can iterate it and\nget the length.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">best</span><span class=\"p\">(</span><span class=\"s1\">'coder'</span><span class=\"p\">,</span> <span class=\"s1\">'programmers'</span><span class=\"p\">,</span> <span class=\"s1\">'python'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n\n<span class=\"k\">for</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'best_hashtags.txt'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.0.1 (2019-02-07)</h3>\n<ul>\n<li>bug-fix for disjunkte tags</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.0 (2019-02-07)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4802301, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f2685d5bae637fdad828036c8446edd0", "sha256": "d2bd0d6901feec48064c91e96ee06a54a133ad7130f3608b0e183de32c835c98"}, "downloads": -1, "filename": "besttags-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f2685d5bae637fdad828036c8446edd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6619, "upload_time": "2019-02-07T14:41:22", "upload_time_iso_8601": "2019-02-07T14:41:22.922983Z", "url": "https://files.pythonhosted.org/packages/db/40/b00096a9b2e96fdd5c3589e38355f493a519729eefd2fcaae1854efbcd7b/besttags-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5a120d11c012632665cfaeb5bdd394d", "sha256": "fa3a495dbcd64a261fb4f1f3402222a28d4ee7e20c33a4b47b6a03a689d9383c"}, "downloads": -1, "filename": "besttags-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f5a120d11c012632665cfaeb5bdd394d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7338, "upload_time": "2019-02-07T14:41:24", "upload_time_iso_8601": "2019-02-07T14:41:24.886576Z", "url": "https://files.pythonhosted.org/packages/b9/7b/5e4211c1363f97036c39aedf35d897eb98e57f67adf1702f8c4a24144914/besttags-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b621729cb15c85fa318e57be3c8eaac0", "sha256": "5cdcc307d8269234173fe5c6634baaa14fced8a234a5ebfa1d43fdd382f0e436"}, "downloads": -1, "filename": "besttags-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b621729cb15c85fa318e57be3c8eaac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6795, "upload_time": "2019-02-07T20:49:25", "upload_time_iso_8601": "2019-02-07T20:49:25.656595Z", "url": "https://files.pythonhosted.org/packages/8d/6e/f1dfb1a6f1d4cdc5e2e6c78cf5026f6a9c37b0b6d4f3c580561b1ffdedab/besttags-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6046b32fc753542f8085f4d2bf0e2ded", "sha256": "498cf367a449a69f0d8299b63e5b1c6edbaf5ebe2e2f75aa231961e32278fd8d"}, "downloads": -1, "filename": "besttags-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6046b32fc753542f8085f4d2bf0e2ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7451, "upload_time": "2019-02-07T20:49:27", "upload_time_iso_8601": "2019-02-07T20:49:27.054821Z", "url": "https://files.pythonhosted.org/packages/f3/0b/9a0e4f1abd65cb7a81b8f35dd1110e547b5de3244403031eb03dcaf52e7b/besttags-1.0.1.tar.gz", "yanked": false}], "1.1.0a1": [{"comment_text": "", "digests": {"md5": "91c417e5d75f1aa3ba8f9437be7bae1a", "sha256": "8978a3c0549ffeffd387ea67a6898f700464cdef371dd9763a5d6338c8787b08"}, "downloads": -1, "filename": "besttags-1.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "91c417e5d75f1aa3ba8f9437be7bae1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5531, "upload_time": "2019-02-10T14:58:10", "upload_time_iso_8601": "2019-02-10T14:58:10.486141Z", "url": "https://files.pythonhosted.org/packages/05/0a/f8dfe4234373a1a1ace99a62241de0d9f993a61bfb13a2ca63e4e8b924ea/besttags-1.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9205166ef45ddac46bc6c659eae034e1", "sha256": "843726a04bbd48f585d46afc61aafa7cee6bcda69b8efb836e0f1e8d94f76fa4"}, "downloads": -1, "filename": "besttags-1.1.0a1.tar.gz", "has_sig": false, "md5_digest": "9205166ef45ddac46bc6c659eae034e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8475, "upload_time": "2019-02-10T14:58:12", "upload_time_iso_8601": "2019-02-10T14:58:12.140542Z", "url": "https://files.pythonhosted.org/packages/94/03/7d8d913da009e6c841f9667ce570c057a3032af89d595fd068ab1c259047/besttags-1.1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b621729cb15c85fa318e57be3c8eaac0", "sha256": "5cdcc307d8269234173fe5c6634baaa14fced8a234a5ebfa1d43fdd382f0e436"}, "downloads": -1, "filename": "besttags-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b621729cb15c85fa318e57be3c8eaac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6795, "upload_time": "2019-02-07T20:49:25", "upload_time_iso_8601": "2019-02-07T20:49:25.656595Z", "url": "https://files.pythonhosted.org/packages/8d/6e/f1dfb1a6f1d4cdc5e2e6c78cf5026f6a9c37b0b6d4f3c580561b1ffdedab/besttags-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6046b32fc753542f8085f4d2bf0e2ded", "sha256": "498cf367a449a69f0d8299b63e5b1c6edbaf5ebe2e2f75aa231961e32278fd8d"}, "downloads": -1, "filename": "besttags-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6046b32fc753542f8085f4d2bf0e2ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7451, "upload_time": "2019-02-07T20:49:27", "upload_time_iso_8601": "2019-02-07T20:49:27.054821Z", "url": "https://files.pythonhosted.org/packages/f3/0b/9a0e4f1abd65cb7a81b8f35dd1110e547b5de3244403031eb03dcaf52e7b/besttags-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:43 2020"}