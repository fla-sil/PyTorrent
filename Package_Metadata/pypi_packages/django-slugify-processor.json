{"info": {"author": "devel.tech", "author_email": "i@devel.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "django_slugify_processor: pipeline for handling slugification edgecases\n\n|pypi| |docs| |build-status| |coverage| |license|\n\nWhat are slugs?\n===============\n\n*Slugs* are URL's, typically generated from post titles, that you want to\nbe both human readable and a valid URL. They are SEO friendly.\n\nDjango provides a `slugify function <https://docs.djangoproject.com/en/1.11/ref/utils/#django.utils.text.slugify>`__\nin ``django.utils.text.slugify`` which is also made available as a\n`default filter <https://github.com/django/django/blob/1.11.4/django/template/defaultfilters.py#L232>`__.\n\nDjango slugs can be automatically generated in django models via packages\nsuch as:\n\n- `django-autoslug <https://pypi.python.org/pypi/django-autoslug>`__\n  (`docs <https://pythonhosted.org/django-autoslug/>`__)\n  (`github <https://github.com/neithere/django-autoslug>`__)\n- `django-extensions <https://pypi.python.org/pypi/django-extensions>`__\n  via `AutoSlugField <https://django-extensions.readthedocs.io/en/latest/field_extensions.html>`__\n  (`docs <https://django-extensions.readthedocs.io/en/latest/>`__)\n  (`github <https://github.com/django-extensions/django-extensions>`__)\n\nThe problem\n===========\n\nThis project is based on an article from `devel.tech <https://devel.tech>`__\ncovering `django's import strings\n<https://devel.tech/tips/n/djms3tTe/demystifying-djangos-import-strings/>`__.\n\nCorner cases exist with slugification. For instance:\n\n================  =============================  =============\nTerm              ``django.utils.text.slugify``  What you want\n================  =============================  =============\nC                 c (correct)                    n/a\nC++               c                              cpp\nC#                c                              c-sharp\n================  =============================  =============\n\nTo make matters worse, if using a specialized model field like\n``AutoSlugField`` from django-autoslug or django-extensions, the default\nbehavior may be to name the slugs for C++ and C# to \"c-1\", \"c-2\" after \"c\" is\ntaken.\n\nHere's another case, acronyms / shorthands:\n\n==================  =============================  ===================\nTerm                ``django.utils.text.slugify``  What you (may) want\n==================  =============================  ===================\nNew York City       new-york-city                  nyc\nY Combinator        y-combinator                   yc \nPortland            portland                       pdx\nTexas               texas                          tx\n\\$                  '' (empty)                     usd, aud, etc?\nUS$                 us                             usd\nA$                  a                              aud\nbitcoin             bitcoin                        btc\nUnited States       united-states                  usa\nLeague of Legends   league-of-legends              league\nApple\u00ae iPod Touch   apple-ipod-touch               ipod-touch\n==================  =============================  ===================\n\nEach website and niche has its own edge cases for slugs. So we need a solution\nthat can scale, where you can craft your own functions.\n\nHow django-slugify-processor helps\n==================================\n\nThis builds on top of `django.utils.text.slugify`_ to handle your django\nproject's edgecases. By default, django-slugify-processor will be a pass\nthrough to django's default behavior. Adding slugification functions via\nyour Django project's settings file allows you to adjust.\n\n.. _django.utils.text.slugify: https://docs.djangoproject.com/en/1.11/ref/utils/#django.utils.text.slugify\n\nInstallation\n============\n\n.. code-block:: sh\n\n   $ pip install django-slugify-processor\n\nConfigure\n=========\n\nTo create a processor, create a function that accepts a string, and\nreturns a string. Assume this is *project/app/slugify_processors.py*:\n\n.. code-block:: python\n\n   def my_processor(value):\n      value = value.replace('++', 'pp')\n      return value\n\nInside of your settings, add a ``SLUGIFY_PROCESSORS`` list of strings\nthat points to the function. Anything that's compatible with\n`import_string <https://docs.djangoproject.com/en/1.11/ref/utils/#django.utils.module_loading.import_string>`__,\nin your settings file:\n\n.. code-block:: python\n\n   SLUGIFY_PROCESSORS = [\n      'project.app.slugify_processors.my_processor'\n   ]\n\nUsage\n=====\n\nIn normal django code\n---------------------\n\nImport ``slugify`` from ``django_slugify_processor.text``:\n\n.. code-block:: python\n\n   from django_slugify_processor.text import slugify\n\n   print(slugify('C++'))\n   > 'cpp'\n\nTemplate code\n-------------\n\ndjango-slugify-processor is designed to override the built-in``slugify``\nfilter.\n\nvia load\n\"\"\"\"\"\"\"\"\n\nYou can load by default via ``{% load django_slugify_processor %}``\nin your template.\n\nIn your settings ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n   INSTALLED_APPS = [\n       'django_slugify_processor'\n   ]\n\nIn your template:\n\n.. code-block:: django\n\n   {% load slugify_processor %}\n   {{\"C++\"|slugify}}\n\nvia built-in\n\"\"\"\"\"\"\"\"\"\"\"\"\n\nTo make this available in all templates, in the ``OPTIONS`` of your\ntemplate engine, add ``django_slugify_processor.template_tags``:\n\n.. code-block:: python\n\n   TEMPLATES = [{\n       'BACKEND': 'django.template.backends.django.DjangoTemplates',\n       'OPTIONS': {\n           'builtins': [\n               'django_slugify_processor.templatetags.slugify_processor',\n           ],\n       },\n   }]\n\nFrom within the template file:\n\n.. code-block:: django\n\n   {{\"C++\"|slugify}}\n\nOutput should be: cpp\n\nModels\n------\n\nFor the most up to date documentation, view the documetation for the\nplugin you're using (e.g. django-autoslug or django-extensions).\n\nTo use django-slugify-processor's ``slugify`` instead of django's default,\nthere will be a field option to use the function.\n\ndjango-extensions\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nTested with 1.9.7 (2017-11-26):\n\n.. code-block:: python\n\n   from django.db import models\n\n   from django_extensions.db.fields import AutoSlugField\n   from django_slugify_processors.text import slugify\n\n   class MyModel(models.Model):\n       title = models.CharField(max_length=255)\n       slug = AutoSlugField(\n           populate_from='title',\n           slugify_function=slugify\n       )\n\ndjango-autoslug\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nTested with 1.9.3 (2017-11-26):\n\n.. code-block:: python\n\n   from django.db import models\n\n   from autoslug import AutoSlugField\n   from django_slugify_processors.text import slugify\n\n   class MyModel(models.Model):\n       title = models.CharField(max_length=255)\n       slug = AutoSlugField(\n           populate_from='title',\n           slugify=slugify\n       )\n\nCredits\n=======\n\n- travis.yml and tox.ini based off DRF's (BSD 2-clause licensed)\n- yapf configuration based off RTD / devel.tech's (MIT-licensed)\n\nProject details\n===============\n\n==============  ============================================================================\npython support  2.7, >= 3.3, pypy, pypy3\ndjango support  1.11\nSource          https://github.com/develtech/django_slugify_processor\nDocs            https://django-slugify-processor.devel.tech\nAPI             https://django-slugify-processor.devel.tech/en/latest/api.html\nChangelog       https://django-slugify-processor.devel.tech/en/latest/history.html\nIssues          https://github.com/develtech/django-slugify-processor/issues\nTravis          http://travis-ci.org/develtech/django-slugify-processor\nTest Coverage   https://codecov.io/gh/develtech/django-slugify-processor\npypi            https://pypi.python.org/pypi/django-slugify-processor\nOpen Hub        https://www.openhub.net/p/django_slugify_processor\nLicense         MIT\ngit repo        .. code-block:: bash\n\n                   $ git clone https://github.com/develtech/django-slugify-processor.git\ninstall stable  .. code-block:: bash\n\n                   $ pip install django-slugify-processor\ninstall dev     .. code-block:: bash\n\n                   $ git clone https://github.com/develtech/django-slugify-processor.git\n                   $ cd ./django-slugify-processor\n                   $ pipenv install --dev --skip-lock\n                   $ pipenv shell\n\ntests           .. code-block:: bash\n\n                   $ make test\n==============  ============================================================================\n\n.. |pypi| image:: https://img.shields.io/pypi/v/django-slugify-processor.svg\n    :alt: Python Package\n    :target: http://badge.fury.io/py/django-slugify-processor\n\n.. |build-status| image:: https://img.shields.io/travis/develtech/django-slugify-processor.svg\n   :alt: Build Status\n   :target: https://travis-ci.org/develtech/django-slugify-processor\n\n.. |coverage| image:: https://codecov.io/gh/develtech/django-slugify-processor/branch/master/graph/badge.svg\n    :alt: Code Coverage\n    :target: https://codecov.io/gh/develtech/django-slugify-processor\n\n.. |license| image:: https://img.shields.io/github/license/develtech/django-slugify-processor.svg\n    :alt: License \n\n.. |docs| image:: https://readthedocs.org/projects/django-slugify-processor/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: https://readthedocs.org/projects/django-slugify-processor/", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi/django-slugify-processor", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/develtech/django-slugify-processor/", "keywords": "django-slugify-processor", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-slugify-processor", "package_url": "https://pypi.org/project/django-slugify-processor/", "platform": "", "project_url": "https://pypi.org/project/django-slugify-processor/", "project_urls": {"Download": "https://pypi.python.org/pypi/django-slugify-processor", "Homepage": "http://github.com/develtech/django-slugify-processor/"}, "release_url": "https://pypi.org/project/django-slugify-processor/0.8.4/", "requires_dist": null, "requires_python": "", "summary": "pipeline for slugification edgecases in django", "version": "0.8.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django_slugify_processor: pipeline for handling slugification edgecases</p>\n<p><a href=\"http://badge.fury.io/py/django-slugify-processor\" rel=\"nofollow\"><img alt=\"Python Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ade3c3b21bf64d39bb9a8f848377d2e44099cd20/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d736c75676966792d70726f636573736f722e737667\"></a> <a href=\"https://readthedocs.org/projects/django-slugify-processor/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e6f30ebb3a1ff818099dc5f36d3a48577dba61c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646a616e676f2d736c75676966792d70726f636573736f722f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://travis-ci.org/develtech/django-slugify-processor\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf8ff81da062da13c9d47c54aecdea5543d453e0/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f646576656c746563682f646a616e676f2d736c75676966792d70726f636573736f722e737667\"></a> <a href=\"https://codecov.io/gh/develtech/django-slugify-processor\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d467f116ac1f1190eabb30564c039e5b0051187a/68747470733a2f2f636f6465636f762e696f2f67682f646576656c746563682f646a616e676f2d736c75676966792d70726f636573736f722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c568bc08e20d08e570f31d27d1a1805cd8623b7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f646576656c746563682f646a616e676f2d736c75676966792d70726f636573736f722e737667\"></p>\n<div id=\"what-are-slugs\">\n<h2>What are slugs?</h2>\n<p><em>Slugs</em> are URL\u2019s, typically generated from post titles, that you want to\nbe both human readable and a valid URL. They are SEO friendly.</p>\n<p>Django provides a <a href=\"https://docs.djangoproject.com/en/1.11/ref/utils/#django.utils.text.slugify\" rel=\"nofollow\">slugify function</a>\nin <tt>django.utils.text.slugify</tt> which is also made available as a\n<a href=\"https://github.com/django/django/blob/1.11.4/django/template/defaultfilters.py#L232\" rel=\"nofollow\">default filter</a>.</p>\n<p>Django slugs can be automatically generated in django models via packages\nsuch as:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/django-autoslug\" rel=\"nofollow\">django-autoslug</a>\n(<a href=\"https://pythonhosted.org/django-autoslug/\" rel=\"nofollow\">docs</a>)\n(<a href=\"https://github.com/neithere/django-autoslug\" rel=\"nofollow\">github</a>)</li>\n<li><a href=\"https://pypi.python.org/pypi/django-extensions\" rel=\"nofollow\">django-extensions</a>\nvia <a href=\"https://django-extensions.readthedocs.io/en/latest/field_extensions.html\" rel=\"nofollow\">AutoSlugField</a>\n(<a href=\"https://django-extensions.readthedocs.io/en/latest/\" rel=\"nofollow\">docs</a>)\n(<a href=\"https://github.com/django-extensions/django-extensions\" rel=\"nofollow\">github</a>)</li>\n</ul>\n</div>\n<div id=\"the-problem\">\n<h2>The problem</h2>\n<p>This project is based on an article from <a href=\"https://devel.tech\" rel=\"nofollow\">devel.tech</a>\ncovering <a href=\"https://devel.tech/tips/n/djms3tTe/demystifying-djangos-import-strings/\" rel=\"nofollow\">django\u2019s import strings</a>.</p>\n<p>Corner cases exist with slugification. For instance:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Term</th>\n<th><tt>django.utils.text.slugify</tt></th>\n<th>What you want</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>C</td>\n<td>c (correct)</td>\n<td>n/a</td>\n</tr>\n<tr><td>C++</td>\n<td>c</td>\n<td>cpp</td>\n</tr>\n<tr><td>C#</td>\n<td>c</td>\n<td>c-sharp</td>\n</tr>\n</tbody>\n</table>\n<p>To make matters worse, if using a specialized model field like\n<tt>AutoSlugField</tt> from django-autoslug or django-extensions, the default\nbehavior may be to name the slugs for C++ and C# to \u201cc-1\u201d, \u201cc-2\u201d after \u201cc\u201d is\ntaken.</p>\n<p>Here\u2019s another case, acronyms / shorthands:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Term</th>\n<th><tt>django.utils.text.slugify</tt></th>\n<th>What you (may) want</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>New York City</td>\n<td>new-york-city</td>\n<td>nyc</td>\n</tr>\n<tr><td>Y Combinator</td>\n<td>y-combinator</td>\n<td>yc</td>\n</tr>\n<tr><td>Portland</td>\n<td>portland</td>\n<td>pdx</td>\n</tr>\n<tr><td>Texas</td>\n<td>texas</td>\n<td>tx</td>\n</tr>\n<tr><td>$</td>\n<td>\u2018\u2019 (empty)</td>\n<td>usd, aud, etc?</td>\n</tr>\n<tr><td>US$</td>\n<td>us</td>\n<td>usd</td>\n</tr>\n<tr><td>A$</td>\n<td>a</td>\n<td>aud</td>\n</tr>\n<tr><td>bitcoin</td>\n<td>bitcoin</td>\n<td>btc</td>\n</tr>\n<tr><td>United States</td>\n<td>united-states</td>\n<td>usa</td>\n</tr>\n<tr><td>League of Legends</td>\n<td>league-of-legends</td>\n<td>league</td>\n</tr>\n<tr><td>Apple\u00ae iPod Touch</td>\n<td>apple-ipod-touch</td>\n<td>ipod-touch</td>\n</tr>\n</tbody>\n</table>\n<p>Each website and niche has its own edge cases for slugs. So we need a solution\nthat can scale, where you can craft your own functions.</p>\n</div>\n<div id=\"how-django-slugify-processor-helps\">\n<h2>How django-slugify-processor helps</h2>\n<p>This builds on top of <a href=\"https://docs.djangoproject.com/en/1.11/ref/utils/#django.utils.text.slugify\" rel=\"nofollow\">django.utils.text.slugify</a> to handle your django\nproject\u2019s edgecases. By default, django-slugify-processor will be a pass\nthrough to django\u2019s default behavior. Adding slugification functions via\nyour Django project\u2019s settings file allows you to adjust.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install django-slugify-processor\n</pre>\n</div>\n<div id=\"configure\">\n<h2>Configure</h2>\n<p>To create a processor, create a function that accepts a string, and\nreturns a string. Assume this is <em>project/app/slugify_processors.py</em>:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">my_processor</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n   <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'++'</span><span class=\"p\">,</span> <span class=\"s1\">'pp'</span><span class=\"p\">)</span>\n   <span class=\"k\">return</span> <span class=\"n\">value</span>\n</pre>\n<p>Inside of your settings, add a <tt>SLUGIFY_PROCESSORS</tt> list of strings\nthat points to the function. Anything that\u2019s compatible with\n<a href=\"https://docs.djangoproject.com/en/1.11/ref/utils/#django.utils.module_loading.import_string\" rel=\"nofollow\">import_string</a>,\nin your settings file:</p>\n<pre><span class=\"n\">SLUGIFY_PROCESSORS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"s1\">'project.app.slugify_processors.my_processor'</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"in-normal-django-code\">\n<h3>In normal django code</h3>\n<p>Import <tt>slugify</tt> from <tt>django_slugify_processor.text</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_slugify_processor.text</span> <span class=\"kn\">import</span> <span class=\"n\">slugify</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">slugify</span><span class=\"p\">(</span><span class=\"s1\">'C++'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;</span> <span class=\"s1\">'cpp'</span>\n</pre>\n</div>\n<div id=\"template-code\">\n<h3>Template code</h3>\n<p>django-slugify-processor is designed to override the built-in``slugify``\nfilter.</p>\n<div id=\"via-load\">\n<h4>via load</h4>\n<p>You can load by default via <tt>{% load django_slugify_processor %}</tt>\nin your template.</p>\n<p>In your settings <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'django_slugify_processor'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>In your template:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">slugify_processor</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{{</span><span class=\"s2\">\"C++\"</span><span class=\"o\">|</span><span class=\"nf\">slugify</span><span class=\"cp\">}}</span>\n</pre>\n</div>\n<div id=\"via-built-in\">\n<h4>via built-in</h4>\n<p>To make this available in all templates, in the <tt>OPTIONS</tt> of your\ntemplate engine, add <tt>django_slugify_processor.template_tags</tt>:</p>\n<pre><span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[{</span>\n    <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django.template.backends.django.DjangoTemplates'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'builtins'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'django_slugify_processor.templatetags.slugify_processor'</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}]</span>\n</pre>\n<p>From within the template file:</p>\n<pre><span class=\"cp\">{{</span><span class=\"s2\">\"C++\"</span><span class=\"o\">|</span><span class=\"nf\">slugify</span><span class=\"cp\">}}</span>\n</pre>\n<p>Output should be: cpp</p>\n</div>\n</div>\n<div id=\"models\">\n<h3>Models</h3>\n<p>For the most up to date documentation, view the documetation for the\nplugin you\u2019re using (e.g. django-autoslug or django-extensions).</p>\n<p>To use django-slugify-processor\u2019s <tt>slugify</tt> instead of django\u2019s default,\nthere will be a field option to use the function.</p>\n<div id=\"django-extensions\">\n<h4>django-extensions</h4>\n<p>Tested with 1.9.7 (2017-11-26):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_extensions.db.fields</span> <span class=\"kn\">import</span> <span class=\"n\">AutoSlugField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_slugify_processors.text</span> <span class=\"kn\">import</span> <span class=\"n\">slugify</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">AutoSlugField</span><span class=\"p\">(</span>\n        <span class=\"n\">populate_from</span><span class=\"o\">=</span><span class=\"s1\">'title'</span><span class=\"p\">,</span>\n        <span class=\"n\">slugify_function</span><span class=\"o\">=</span><span class=\"n\">slugify</span>\n    <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"django-autoslug\">\n<h4>django-autoslug</h4>\n<p>Tested with 1.9.3 (2017-11-26):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">autoslug</span> <span class=\"kn\">import</span> <span class=\"n\">AutoSlugField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_slugify_processors.text</span> <span class=\"kn\">import</span> <span class=\"n\">slugify</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">AutoSlugField</span><span class=\"p\">(</span>\n        <span class=\"n\">populate_from</span><span class=\"o\">=</span><span class=\"s1\">'title'</span><span class=\"p\">,</span>\n        <span class=\"n\">slugify</span><span class=\"o\">=</span><span class=\"n\">slugify</span>\n    <span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>travis.yml and tox.ini based off DRF\u2019s (BSD 2-clause licensed)</li>\n<li>yapf configuration based off RTD / devel.tech\u2019s (MIT-licensed)</li>\n</ul>\n</div>\n<div id=\"project-details\">\n<h2>Project details</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>python support</td>\n<td>2.7, &gt;= 3.3, pypy, pypy3</td>\n</tr>\n<tr><td>django support</td>\n<td>1.11</td>\n</tr>\n<tr><td>Source</td>\n<td><a href=\"https://github.com/develtech/django_slugify_processor\" rel=\"nofollow\">https://github.com/develtech/django_slugify_processor</a></td>\n</tr>\n<tr><td>Docs</td>\n<td><a href=\"https://django-slugify-processor.devel.tech\" rel=\"nofollow\">https://django-slugify-processor.devel.tech</a></td>\n</tr>\n<tr><td>API</td>\n<td><a href=\"https://django-slugify-processor.devel.tech/en/latest/api.html\" rel=\"nofollow\">https://django-slugify-processor.devel.tech/en/latest/api.html</a></td>\n</tr>\n<tr><td>Changelog</td>\n<td><a href=\"https://django-slugify-processor.devel.tech/en/latest/history.html\" rel=\"nofollow\">https://django-slugify-processor.devel.tech/en/latest/history.html</a></td>\n</tr>\n<tr><td>Issues</td>\n<td><a href=\"https://github.com/develtech/django-slugify-processor/issues\" rel=\"nofollow\">https://github.com/develtech/django-slugify-processor/issues</a></td>\n</tr>\n<tr><td>Travis</td>\n<td><a href=\"http://travis-ci.org/develtech/django-slugify-processor\" rel=\"nofollow\">http://travis-ci.org/develtech/django-slugify-processor</a></td>\n</tr>\n<tr><td>Test Coverage</td>\n<td><a href=\"https://codecov.io/gh/develtech/django-slugify-processor\" rel=\"nofollow\">https://codecov.io/gh/develtech/django-slugify-processor</a></td>\n</tr>\n<tr><td>pypi</td>\n<td><a href=\"https://pypi.python.org/pypi/django-slugify-processor\" rel=\"nofollow\">https://pypi.python.org/pypi/django-slugify-processor</a></td>\n</tr>\n<tr><td>Open Hub</td>\n<td><a href=\"https://www.openhub.net/p/django_slugify_processor\" rel=\"nofollow\">https://www.openhub.net/p/django_slugify_processor</a></td>\n</tr>\n<tr><td>License</td>\n<td>MIT</td>\n</tr>\n<tr><td>git repo</td>\n<td><pre>\n$ git clone https://github.com/develtech/django-slugify-processor.git\n</pre>\n</td>\n</tr>\n<tr><td>install stable</td>\n<td><pre>\n$ pip install django-slugify-processor\n</pre>\n</td>\n</tr>\n<tr><td>install dev</td>\n<td><pre>\n$ git clone https://github.com/develtech/django-slugify-processor.git\n$ <span class=\"nb\">cd</span> ./django-slugify-processor\n$ pipenv install --dev --skip-lock\n$ pipenv shell\n</pre>\n</td>\n</tr>\n<tr><td>tests</td>\n<td><pre>\n$ make <span class=\"nb\">test</span>\n</pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 3384275, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "699c9e7b190975c1a0d101458d4f30b5", "sha256": "1d4bc2c8c41e7c7da21cbe6a51d68a827c918616ac58d61dbc39e6f27d5138bf"}, "downloads": -1, "filename": "django-slugify-processor-0.8.0.tar.gz", "has_sig": false, "md5_digest": "699c9e7b190975c1a0d101458d4f30b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7808, "upload_time": "2017-12-02T01:52:57", "upload_time_iso_8601": "2017-12-02T01:52:57.323636Z", "url": "https://files.pythonhosted.org/packages/e9/72/a3061956717810cb3e697e164e49fcd93fefd72e1df8664585f8075bae89/django-slugify-processor-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "25032de23c4adbd81dd35d9fcdaa6945", "sha256": "f50b31eb64cbcaafde5395ec9dcf2091197c6441f31182b56ea6f039bea6ee68"}, "downloads": -1, "filename": "django-slugify-processor-0.8.1.tar.gz", "has_sig": false, "md5_digest": "25032de23c4adbd81dd35d9fcdaa6945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7885, "upload_time": "2017-12-02T02:17:57", "upload_time_iso_8601": "2017-12-02T02:17:57.342778Z", "url": "https://files.pythonhosted.org/packages/d2/6a/3934ae8fcd0cf6a0a4224e4d75efd44439c6095ddebfe180491ccfe7eb52/django-slugify-processor-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "32599ccc7fcd6b76833f99f0a4d53efd", "sha256": "544ffd29ae2190875734a62e375aaaa4b658bccc510542a45756f2de403f99b1"}, "downloads": -1, "filename": "django-slugify-processor-0.8.2.tar.gz", "has_sig": false, "md5_digest": "32599ccc7fcd6b76833f99f0a4d53efd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7792, "upload_time": "2017-12-02T04:45:07", "upload_time_iso_8601": "2017-12-02T04:45:07.983887Z", "url": "https://files.pythonhosted.org/packages/3d/87/8f0f0d142b71ae90aa6392810e52064292815a6ed57440b3f283d65f70c6/django-slugify-processor-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "befbe68677e8f2a7fee2ca15d73e51c7", "sha256": "9991a2e061d694c8e3036116e13a1be2d9c05e677c99ec6e1250eefb30846ed3"}, "downloads": -1, "filename": "django-slugify-processor-0.8.3.tar.gz", "has_sig": false, "md5_digest": "befbe68677e8f2a7fee2ca15d73e51c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7879, "upload_time": "2017-12-02T06:23:53", "upload_time_iso_8601": "2017-12-02T06:23:53.652386Z", "url": "https://files.pythonhosted.org/packages/83/26/793f0ad3483e6c806596c51544714c2b9b90772b132e6a39b112fb758970/django-slugify-processor-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "3c0d2c9e2b68970eada1e3f32361423a", "sha256": "f1c384f4443dc09560144acdffa098de064d6fa355cdd5c1dba0145f107d560c"}, "downloads": -1, "filename": "django-slugify-processor-0.8.4.tar.gz", "has_sig": false, "md5_digest": "3c0d2c9e2b68970eada1e3f32361423a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8183, "upload_time": "2017-12-03T06:43:08", "upload_time_iso_8601": "2017-12-03T06:43:08.289542Z", "url": "https://files.pythonhosted.org/packages/45/2a/3bf6999db1f0061d23ef39b39a71cc00f4477271c7a9e65ba876ecdb6796/django-slugify-processor-0.8.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c0d2c9e2b68970eada1e3f32361423a", "sha256": "f1c384f4443dc09560144acdffa098de064d6fa355cdd5c1dba0145f107d560c"}, "downloads": -1, "filename": "django-slugify-processor-0.8.4.tar.gz", "has_sig": false, "md5_digest": "3c0d2c9e2b68970eada1e3f32361423a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8183, "upload_time": "2017-12-03T06:43:08", "upload_time_iso_8601": "2017-12-03T06:43:08.289542Z", "url": "https://files.pythonhosted.org/packages/45/2a/3bf6999db1f0061d23ef39b39a71cc00f4477271c7a9e65ba876ecdb6796/django-slugify-processor-0.8.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:13 2020"}