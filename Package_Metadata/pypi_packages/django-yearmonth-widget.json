{"info": {"author": "zencore", "author_email": "dobetter@zencore.cn", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# django-yearmonth-widget\n\nWe only care about year and month for DateField, and always set the day to 1, it's a Django Widget allow you select the year and month. And now we support CharField backend.\n\n## Install\n\n```shell\npip install django-yearmonth-widget\n```\n\n## Usage\n\n**pro/settings.py**\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_static_jquery3',\n    'django_yearmonth_widget',\n    ...\n]\n```\n\n**app/admin.py**\n\n```python\nfrom django.contrib import admin\nfrom django import forms\nfrom django_yearmonth_widget.widgets import DjangoYearMonthWidget\nfrom .models import Book\n\n\nclass BookForm(forms.ModelForm):\n    class Meta:\n        model = Book\n        exclude = []\n        widgets = {\n            \"published_yearmonth\": DjangoYearMonthWidget(),\n        }\n\nclass BookAdmin(admin.ModelAdmin):\n    form = BookForm\n    list_display = [\"name\", \"published_time\"]\n\nadmin.site.register(Book, BookAdmin)\n```\n\n**Note:**\n\n1. Create a ModelForm, and set new widget for the field.\n\n## DjangoYearMonthWidget Init parameters\n\n- years: list of year numbers. Default to None.\n    - If years provided, parameters prev_years and next_years are ignored.\n- start_year: Default to None. Use to set the beginning of year range, have higher priority than prev_years.\n- end_year: Default to None. Use to set the ending of year range, have higher priority than next_years.\n- prev_years: int, default to 10.\n- next_years: int, default to 0.\n    - Use prev_years, next_years to set the year range based on today's year.\n    - prev_years means the begining year is now.year - prev_years. If today's year is 2020 and the prev_years=10, so that the final years is start at 2010.\n    - next_years means the ending year is now.year + next_years. If today's year is 2020 and the next_years=10, so that the final years is end at 2030.\n- day_value: int, default to 1.\n- value_dumps: string template, e.g. `%(year)04d-%(month)02d-%(day)02d`\n- value_loads: regex parse the string value, e.g. `(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})`\n    - value_dumps and value_loads must matchs with each other, it means value_loads regex CAN parse string dumped with value_dumps.\n    - value_dumps MUST in `%(xx)d` so that both python and javascript can do the string formatting.\n\n## Releases\n\n### v0.2.1 2020/03/27\n\n- Fix inline form rendering problem, because it contains a NONE value year-month for inline form row template.\n- Change event listenning method to $.to, so that the widget will work in inline form.\n\n### v0.2.0 2020/03/16\n\n- Add start_year & end_year parameters. The parameters start_year and end_year have higher priority than prev_years and next_years.\n- Add support for CharField. You must provide value_dumps and value_loads for CharField backend.\n\n### v0.1.0 2020/03/10\n\n- First release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "django admin extentions,django yearmonth widget", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-yearmonth-widget", "package_url": "https://pypi.org/project/django-yearmonth-widget/", "platform": "", "project_url": "https://pypi.org/project/django-yearmonth-widget/", "project_urls": null, "release_url": "https://pypi.org/project/django-yearmonth-widget/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "We only care about year and month for DateField, and always set the day to 1, it's a Django Widget allow you select the year and month. And now we support CharField backend.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-yearmonth-widget</h1>\n<p>We only care about year and month for DateField, and always set the day to 1, it's a Django Widget allow you select the year and month. And now we support CharField backend.</p>\n<h2>Install</h2>\n<pre>pip install django-yearmonth-widget\n</pre>\n<h2>Usage</h2>\n<p><strong>pro/settings.py</strong></p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_static_jquery3'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_yearmonth_widget'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p><strong>app/admin.py</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_yearmonth_widget.widgets</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoYearMonthWidget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BookForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n        <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">widgets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"published_yearmonth\"</span><span class=\"p\">:</span> <span class=\"n\">DjangoYearMonthWidget</span><span class=\"p\">(),</span>\n        <span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BookAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">BookForm</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"published_time\"</span><span class=\"p\">]</span>\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Book</span><span class=\"p\">,</span> <span class=\"n\">BookAdmin</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note:</strong></p>\n<ol>\n<li>Create a ModelForm, and set new widget for the field.</li>\n</ol>\n<h2>DjangoYearMonthWidget Init parameters</h2>\n<ul>\n<li>years: list of year numbers. Default to None.\n<ul>\n<li>If years provided, parameters prev_years and next_years are ignored.</li>\n</ul>\n</li>\n<li>start_year: Default to None. Use to set the beginning of year range, have higher priority than prev_years.</li>\n<li>end_year: Default to None. Use to set the ending of year range, have higher priority than next_years.</li>\n<li>prev_years: int, default to 10.</li>\n<li>next_years: int, default to 0.\n<ul>\n<li>Use prev_years, next_years to set the year range based on today's year.</li>\n<li>prev_years means the begining year is now.year - prev_years. If today's year is 2020 and the prev_years=10, so that the final years is start at 2010.</li>\n<li>next_years means the ending year is now.year + next_years. If today's year is 2020 and the next_years=10, so that the final years is end at 2030.</li>\n</ul>\n</li>\n<li>day_value: int, default to 1.</li>\n<li>value_dumps: string template, e.g. <code>%(year)04d-%(month)02d-%(day)02d</code></li>\n<li>value_loads: regex parse the string value, e.g. <code>(?P&lt;year&gt;\\d{4})-(?P&lt;month&gt;\\d{1,2})-(?P&lt;day&gt;\\d{1,2})</code>\n<ul>\n<li>value_dumps and value_loads must matchs with each other, it means value_loads regex CAN parse string dumped with value_dumps.</li>\n<li>value_dumps MUST in <code>%(xx)d</code> so that both python and javascript can do the string formatting.</li>\n</ul>\n</li>\n</ul>\n<h2>Releases</h2>\n<h3>v0.2.1 2020/03/27</h3>\n<ul>\n<li>Fix inline form rendering problem, because it contains a NONE value year-month for inline form row template.</li>\n<li>Change event listenning method to $.to, so that the widget will work in inline form.</li>\n</ul>\n<h3>v0.2.0 2020/03/16</h3>\n<ul>\n<li>Add start_year &amp; end_year parameters. The parameters start_year and end_year have higher priority than prev_years and next_years.</li>\n<li>Add support for CharField. You must provide value_dumps and value_loads for CharField backend.</li>\n</ul>\n<h3>v0.1.0 2020/03/10</h3>\n<ul>\n<li>First release.</li>\n</ul>\n\n          </div>"}, "last_serial": 6896353, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f37390ba84b37e44d6c2e6a88ca4e7b3", "sha256": "3f1803d5c7ccf63afde3cb742d649f60f5840947ceac9701f99a08d4969d035d"}, "downloads": -1, "filename": "django-yearmonth-widget-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f37390ba84b37e44d6c2e6a88ca4e7b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5101, "upload_time": "2020-03-10T09:49:28", "upload_time_iso_8601": "2020-03-10T09:49:28.302058Z", "url": "https://files.pythonhosted.org/packages/da/e0/78a58c33c402d7d753f0fe8b0cfcdcea6010e3e3597e8b048ba5e631c456/django-yearmonth-widget-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f0f4d8712a3a77709053ada1978ebaf8", "sha256": "47b4061967e39e6954e7376a105432b6c5291fc9838e768910f9bf4aaec3496e"}, "downloads": -1, "filename": "django-yearmonth-widget-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f0f4d8712a3a77709053ada1978ebaf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7982, "upload_time": "2020-03-17T08:29:24", "upload_time_iso_8601": "2020-03-17T08:29:24.048219Z", "url": "https://files.pythonhosted.org/packages/6b/ff/e955b73425e578d562351aca9451aeb45744b43bd29b053088601b05a954/django-yearmonth-widget-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0b85eaa473c8d5e357c6ee772f95f408", "sha256": "9c9cd940386c426d33cdd14ba62a8f6639c1cc23452e62a3703c38bb6d7b8b8e"}, "downloads": -1, "filename": "django-yearmonth-widget-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0b85eaa473c8d5e357c6ee772f95f408", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8240, "upload_time": "2020-03-27T14:00:09", "upload_time_iso_8601": "2020-03-27T14:00:09.977879Z", "url": "https://files.pythonhosted.org/packages/3a/4b/2d78f16539112c0fd4cb035d5dcd92a5ba55871e4f6e5f2fbf1187288a83/django-yearmonth-widget-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b85eaa473c8d5e357c6ee772f95f408", "sha256": "9c9cd940386c426d33cdd14ba62a8f6639c1cc23452e62a3703c38bb6d7b8b8e"}, "downloads": -1, "filename": "django-yearmonth-widget-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0b85eaa473c8d5e357c6ee772f95f408", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8240, "upload_time": "2020-03-27T14:00:09", "upload_time_iso_8601": "2020-03-27T14:00:09.977879Z", "url": "https://files.pythonhosted.org/packages/3a/4b/2d78f16539112c0fd4cb035d5dcd92a5ba55871e4f6e5f2fbf1187288a83/django-yearmonth-widget-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:45 2020"}