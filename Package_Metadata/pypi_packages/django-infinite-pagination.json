{"info": {"author": "Filip Wasilewski", "author_email": "en@ig.ma", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Infinite Pagination for Django\n==============================\n\nThis is a very simple helper for Django 1.4 that does one thing: efficiently\npaginates large object collections on systems where using standard Django\nPaginator is impractical because of significant ``count(*)`` query\noverhead (i.e. PostgreSQL).\n\nUnder the hood it uses a single query to retrieve objects for the current page\nand check for availability of a successive page.\n\nThe ``InfinitePaginator`` is a replacement for Django\n``django.core.paginator.Paginator``.\n\nQuick Start\n-----------\n\nInclude ``django-infinite-pagination`` in your requirements file\n(or ``pip install django-infinite-pagination``) and add ``infinite_pagination``\nto ``INSTALLED APPS``.\n\nThen set the ``paginator_class`` attribute of your ``ListView``-based view to\n``InfinitePaginator`` and specify ``paginate_by`` attribute::\n\n    class ArticleListView(ListView):\n        model = Article\n        paginate_by = 10\n        paginator_class = InfinitePaginator\n\nTo display pagination links in a template load the ``infinite_pagination``\ntemplate tags and put ``{% paginate %}`` in the place you would like the\npagination links to show up::\n\n    {% load infinite_pagination %}\n\n    {% for object in object_list %}\n        {{ object }}\n    {% endfor %}\n\n    {% paginate %}\n\n\nA generic ``pagination/infinite_pagination.html`` template that works well with\nTwitter Bootstrap stylesheet is provided by this application. Adjust it to your\nrequirements.\n\nPaginating in Templates\n-----------------------\n\nSometimes application views cannot be modified and the pagination can only be\ndone at the template level. The ``autopaginate`` template tag is provided\nas a last resort of applying pagination to object lists inside templates::\n\n    {% load infinite_pagination %}\n\n    {% autopaginate object_list per_page=10 as paginated_list %}\n\n    {% for object in paginated_list %}\n        {{ object }}\n    {% endfor %}\n\n    {% paginate %}\n\n\nThe ``autopaginate`` tag takes a queryset and a number of items per page\nas input and returns a page slice for displaying in a template. Current page\nnumber is retrieved from template context or ``page`` request GET params.\nIt can also be specified as an optional tag param::\n\n    {% autopaginate object_list per_page=10 page=2 as paginated_list %}\n\nThe tag also sets ``paginator`` and ``page_obj`` template context variables for\nthe ``paginate`` tag that uses them to render navigation links.\n\nLicense\n-------\n\n`django-infinite-pagination` is released under the BSD license.\n\nOther Resources\n---------------\n\n- `GitHub repository <https://github.com/nigma/django-infinite-pagination>`_\n- `PyPi Package site <http://pypi.python.org/pypi/django-infinite-pagination>`_", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/nigma/django-infinite-pagination/zipball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nigma/django-infinite-pagination", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-infinite-pagination", "package_url": "https://pypi.org/project/django-infinite-pagination/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-infinite-pagination/", "project_urls": {"Download": "https://github.com/nigma/django-infinite-pagination/zipball/master", "Homepage": "https://github.com/nigma/django-infinite-pagination"}, "release_url": "https://pypi.org/project/django-infinite-pagination/1.0/", "requires_dist": null, "requires_python": null, "summary": "Infinite pagination for Django.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a very simple helper for Django 1.4 that does one thing: efficiently\npaginates large object collections on systems where using standard Django\nPaginator is impractical because of significant <tt><span class=\"pre\">count(*)</span></tt> query\noverhead (i.e. PostgreSQL).</p>\n<p>Under the hood it uses a single query to retrieve objects for the current page\nand check for availability of a successive page.</p>\n<p>The <tt>InfinitePaginator</tt> is a replacement for Django\n<tt>django.core.paginator.Paginator</tt>.</p>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Include <tt><span class=\"pre\">django-infinite-pagination</span></tt> in your requirements file\n(or <tt>pip install <span class=\"pre\">django-infinite-pagination</span></tt>) and add <tt>infinite_pagination</tt>\nto <tt>INSTALLED APPS</tt>.</p>\n<p>Then set the <tt>paginator_class</tt> attribute of your <tt>ListView</tt>-based view to\n<tt>InfinitePaginator</tt> and specify <tt>paginate_by</tt> attribute:</p>\n<pre>class ArticleListView(ListView):\n    model = Article\n    paginate_by = 10\n    paginator_class = InfinitePaginator\n</pre>\n<p>To display pagination links in a template load the <tt>infinite_pagination</tt>\ntemplate tags and put <tt>{% paginate %}</tt> in the place you would like the\npagination links to show up:</p>\n<pre>{% load infinite_pagination %}\n\n{% for object in object_list %}\n    {{ object }}\n{% endfor %}\n\n{% paginate %}\n</pre>\n<p>A generic <tt>pagination/infinite_pagination.html</tt> template that works well with\nTwitter Bootstrap stylesheet is provided by this application. Adjust it to your\nrequirements.</p>\n</div>\n<div id=\"paginating-in-templates\">\n<h2>Paginating in Templates</h2>\n<p>Sometimes application views cannot be modified and the pagination can only be\ndone at the template level. The <tt>autopaginate</tt> template tag is provided\nas a last resort of applying pagination to object lists inside templates:</p>\n<pre>{% load infinite_pagination %}\n\n{% autopaginate object_list per_page=10 as paginated_list %}\n\n{% for object in paginated_list %}\n    {{ object }}\n{% endfor %}\n\n{% paginate %}\n</pre>\n<p>The <tt>autopaginate</tt> tag takes a queryset and a number of items per page\nas input and returns a page slice for displaying in a template. Current page\nnumber is retrieved from template context or <tt>page</tt> request GET params.\nIt can also be specified as an optional tag param:</p>\n<pre>{% autopaginate object_list per_page=10 page=2 as paginated_list %}\n</pre>\n<p>The tag also sets <tt>paginator</tt> and <tt>page_obj</tt> template context variables for\nthe <tt>paginate</tt> tag that uses them to render navigation links.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><cite>django-infinite-pagination</cite> is released under the BSD license.</p>\n</div>\n<div id=\"other-resources\">\n<h2>Other Resources</h2>\n<ul>\n<li><a href=\"https://github.com/nigma/django-infinite-pagination\" rel=\"nofollow\">GitHub repository</a></li>\n<li><a href=\"http://pypi.python.org/pypi/django-infinite-pagination\" rel=\"nofollow\">PyPi Package site</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 789863, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d5dce5d3a770aeaabad1bd820feb1b1a", "sha256": "963d70808276d6808dcc5bd3dbe888e6c76ab0cf412b17eeb5725b4f0705321e"}, "downloads": -1, "filename": "django-infinite-pagination-1.0.zip", "has_sig": false, "md5_digest": "d5dce5d3a770aeaabad1bd820feb1b1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14323, "upload_time": "2012-06-09T00:27:23", "upload_time_iso_8601": "2012-06-09T00:27:23.073380Z", "url": "https://files.pythonhosted.org/packages/e3/10/87e44c02da42c4f6d617088d77b4e1fe243957e255b5f3bbb98a80ef0c5b/django-infinite-pagination-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d5dce5d3a770aeaabad1bd820feb1b1a", "sha256": "963d70808276d6808dcc5bd3dbe888e6c76ab0cf412b17eeb5725b4f0705321e"}, "downloads": -1, "filename": "django-infinite-pagination-1.0.zip", "has_sig": false, "md5_digest": "d5dce5d3a770aeaabad1bd820feb1b1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14323, "upload_time": "2012-06-09T00:27:23", "upload_time_iso_8601": "2012-06-09T00:27:23.073380Z", "url": "https://files.pythonhosted.org/packages/e3/10/87e44c02da42c4f6d617088d77b4e1fe243957e255b5f3bbb98a80ef0c5b/django-infinite-pagination-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:35:36 2020"}