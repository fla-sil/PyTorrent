{"info": {"author": "devilking15292", "author_email": "p.hari15292@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "IMDB_Api_python\n===============\n\n\n.. image:: https://img.shields.io/pypi/v/IMDBAPI.svg\n   :target: https://pypi.python.org/pypi/IMDBAPI\n   :alt: PyPI\n\n\nInstall\n-------\n\n.. code-block:: bash\n\n   pip install IMDBAPI\n\nwindows\n-------\n\n.. code-block:: bash\n\n   py -m pip install IMDBAPI\n\nwith setup.py\n-------------\n\n.. code-block:: bash\n\n   py setup.py install\n\nAPI\n---\n\ngetRating(movieName ):\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the rating of the requsted movie by passing Movie Name as a parameter\n\n\ngetRatingByImdbId(IMDB_ID ):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the rating of the requsted movie by IMDB ID as a prameter\n\n\ngetDirector(movieName):\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the Directors name of the requsted movie by passing Movie Name as a parameter\n\n\ngetDirectorByImdbId(IMDB_ID ):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the Directors name of the requsted movie by IMDB ID as a prameter\n\n\ngetCasting(movieName, length=10, all=False):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the cast list of the requsted movie by passing Movie Name as a parameter\n\nlength: No of castlist which will be returned (default \"10\")\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nall: if set to True returns all the cast list (default \"False\")\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ngetCastingByImdbId(IMDB_ID , length=10, all=False):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the cast list of the requsted movie by IMDB ID as a prameter\n\nlength: No of castlist which will be returned (default \"10\")\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nall: if set to True returns all the cast list (default \"False\")\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ngetSummary(movieName ):\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the summary of the requsted movie by passing Movie Name as a parameter\n\n\ngetSummaryByImdbId(IMDB_ID ):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the summary of the requsted movie by IMDB ID as a prameter\n\n\ngetMovie(movieName ):\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the an object with data of the requsted movie by passing Movie Name as a parameter (see getMovieByImdbId() for more deatails)\n\n\ngetMovieByImdbId(IMDB_ID ):\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block::\n\n       which returns the data of the requsted movie by IMDB ID as a prameter, data is as follows\n\n       title - Movie full tile\n       runTime - duration of the movie\n       titleYear - year of the movie title\n       releaseDate - date of the movie\n       gener - gener as an array\n       posterUrl - url of the movie poster\n       rating - rating of the movie\n       summary - summary text\n       director - name of the director\n       casting - list of top 10 cast (can be tweaked to print all the casting)\n\n\nExample\n-------\n\n.. code-block:: python\n\n   from IMDBAPI import IMDB\n\n   imdb = IMDB()\n\n   print(\"Movie rated: \"+imdb.getRating('darknight rises')+\" out of 10\")\n\n   Movie: The Dark Knight Rises\n   Movie rated:  '8.4' out of 10\n\n\n   Sample1.py output: (pretty printed just for viewing)\n\n   Enter a movie: darknight rises\n\n   Movie: The Dark Knight Rises\n   Movie Rated: 8.4 out Of 10\n\n   Movie: The Dark Knight Rises\n   Summary: Eight years after the Joker's reign of anarchy, Batman, with the help of the enigmatic Catwoman, is forced from his exile to save Gotham City, now on the edge of total annihilation, from the brutal guerrilla terrorist Bane.\n\n   Movie: The Dark Knight Rises\n   Director: ChristopherNolan\n\n   Movie: The Dark Knight Rises\n   Cast_list size: 10\n\n   {\n       'actor': 'Christian Bale',\n       'role': 'Bruce Wayne'\n   } {\n       'actor': 'Gary Oldman',\n       'role': 'Commissioner Gordon'\n   } {\n       'actor': 'Tom Hardy',\n       'role': 'Bane'\n   } {\n       'actor': 'Joseph Gordon-Levitt',\n       'role': 'Blake'\n   } {\n       'actor': 'Anne Hathaway',\n       'role': 'Selina'\n   } {\n       'actor': 'Marion Cotillard',\n       'role': 'Miranda'\n   } {\n       'actor': 'Morgan Freeman',\n       'role': 'Fox'\n   } {\n       'actor': 'Michael Caine',\n       'role': 'Alfred'\n   } {\n       'actor': 'Matthew Modine',\n       'role': 'Foley'\n   } {\n       'actor': 'Alon Aboutboul',\n       'role': 'Dr. Pavel       (as Alon Moni Aboutboul)'\n   }\n\n\n   Movie Details:\n   Movie: The Dark Knight Rises\n\n   {\n       \"title\": \"The Dark Knight Rises\",\n\n       \"runTime\": \"2h44min\",\n\n       \"titleYear\": \"2012\",\n\n       \"releaseDate\": \"2012-07-20\",\n\n       \"gener\": [\"Action\", \"Thriller\"],\n\n       \"posterUrl\": \"https://m.media-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_UX182_CR0,0,182,268_AL__QL50.jpg\",\n\n       \"rating \": \"8.4 \",\n\n       \"summary \": \"Eight years after the Joker 's reign of anarchy,Batman with the help of the enigmatic Catwoman,is forced from his exile to save Gotham City\",\n\n       \"director \": \"ChristopherNolan \", \n\n       \"casting \": [{\n           'actor': 'Christian Bale',\n               'role': 'Bruce Wayne'\n           }, {\n               'actor': 'Gary Oldman',\n               'role': 'Commissioner Gordon'\n           }, {\n               'actor': 'Tom Hardy',\n               'role': 'Bane'\n           }, {\n               'actor': 'Joseph Gordon-Levitt',\n               'role': 'Blake'\n           }, {\n               'actor': 'Anne Hathaway',\n               'role': 'Selina'\n           }, {\n               'actor': 'Marion Cotillard',\n               'role': 'Miranda'\n           }, {\n               'actor': 'Morgan Freeman',\n               'role': 'Fox'\n           }, {\n               'actor': 'Michael Caine',\n               'role': 'Alfred'\n           }, {\n               'actor': 'Matthew Modine',\n               'role': 'Foley'\n           }, {\n               'actor': 'Alon Aboutboul',\n               'role': 'Dr. Pavel       (as Alon Moni Aboutboul)'\n           }\n       ]\n   }\n\nIMDB_ID :\n---------\n\n.. code-block::\n\n   is an unique ID given by IMDB to a movie or series or a celebrity, IMDB_ID can be found in the URL.\n   if you open IMDB for a movie, say \"The Dark night rises\" the URL will be \"https://www.imdb.com/title/tt1345836/\"\n\n   this last text \"tt1345836\" is the IMDB ID of the movie", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/devilking15292/IMDB_Api_python.git", "keywords": "imdb,imdbapi,movie,movies", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "IMDBAPI", "package_url": "https://pypi.org/project/IMDBAPI/", "platform": "", "project_url": "https://pypi.org/project/IMDBAPI/", "project_urls": {"Homepage": "https://github.com/devilking15292/IMDB_Api_python.git"}, "release_url": "https://pypi.org/project/IMDBAPI/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "API for IMDB, to search for movie and get the details like rating, summary, director, cast etc", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/IMDBAPI\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/00ea938a8d2a34e00f8ab01a177612c21e26e50d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f494d44424150492e737667\"></a>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install IMDBAPI\n</pre>\n</div>\n<div id=\"windows\">\n<h2>windows</h2>\n<pre>py -m pip install IMDBAPI\n</pre>\n</div>\n<div id=\"with-setup-py\">\n<h2>with setup.py</h2>\n<pre>py setup.py install\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<div id=\"getrating-moviename\">\n<h3>getRating(movieName ):</h3>\n<pre>which returns the rating of the requsted movie by passing Movie Name as a parameter\n</pre>\n</div>\n<div id=\"getratingbyimdbid-imdb-id\">\n<h3>getRatingByImdbId(IMDB_ID ):</h3>\n<pre>which returns the rating of the requsted movie by IMDB ID as a prameter\n</pre>\n</div>\n<div id=\"getdirector-moviename\">\n<h3>getDirector(movieName):</h3>\n<pre>which returns the Directors name of the requsted movie by passing Movie Name as a parameter\n</pre>\n</div>\n<div id=\"getdirectorbyimdbid-imdb-id\">\n<h3>getDirectorByImdbId(IMDB_ID ):</h3>\n<pre>which returns the Directors name of the requsted movie by IMDB ID as a prameter\n</pre>\n</div>\n<div id=\"getcasting-moviename-length-10-all-false\">\n<h3>getCasting(movieName, length=10, all=False):</h3>\n<pre>which returns the cast list of the requsted movie by passing Movie Name as a parameter\n</pre>\n<div id=\"length-no-of-castlist-which-will-be-returned-default-10\">\n<h4>length: No of castlist which will be returned (default \u201c10\u201d)</h4>\n</div>\n<div id=\"all-if-set-to-true-returns-all-the-cast-list-default-false\">\n<h4>all: if set to True returns all the cast list (default \u201cFalse\u201d)</h4>\n</div>\n</div>\n<div id=\"getcastingbyimdbid-imdb-id-length-10-all-false\">\n<h3>getCastingByImdbId(IMDB_ID , length=10, all=False):</h3>\n<pre>which returns the cast list of the requsted movie by IMDB ID as a prameter\n</pre>\n<div id=\"id1\">\n<h4>length: No of castlist which will be returned (default \u201c10\u201d)</h4>\n</div>\n<div id=\"id2\">\n<h4>all: if set to True returns all the cast list (default \u201cFalse\u201d)</h4>\n</div>\n</div>\n<div id=\"getsummary-moviename\">\n<h3>getSummary(movieName ):</h3>\n<pre>which returns the summary of the requsted movie by passing Movie Name as a parameter\n</pre>\n</div>\n<div id=\"getsummarybyimdbid-imdb-id\">\n<h3>getSummaryByImdbId(IMDB_ID ):</h3>\n<pre>which returns the summary of the requsted movie by IMDB ID as a prameter\n</pre>\n</div>\n<div id=\"getmovie-moviename\">\n<h3>getMovie(movieName ):</h3>\n<pre>which returns the an object with data of the requsted movie by passing Movie Name as a parameter (see getMovieByImdbId() for more deatails)\n</pre>\n</div>\n<div id=\"getmoviebyimdbid-imdb-id\">\n<h3>getMovieByImdbId(IMDB_ID ):</h3>\n<pre>which returns the data of the requsted movie by IMDB ID as a prameter, data is as follows\n\ntitle - Movie full tile\nrunTime - duration of the movie\ntitleYear - year of the movie title\nreleaseDate - date of the movie\ngener - gener as an array\nposterUrl - url of the movie poster\nrating - rating of the movie\nsummary - summary text\ndirector - name of the director\ncasting - list of top 10 cast (can be tweaked to print all the casting)\n</pre>\n</div>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">IMDBAPI</span> <span class=\"kn\">import</span> <span class=\"n\">IMDB</span>\n\n<span class=\"n\">imdb</span> <span class=\"o\">=</span> <span class=\"n\">IMDB</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Movie rated: \"</span><span class=\"o\">+</span><span class=\"n\">imdb</span><span class=\"o\">.</span><span class=\"n\">getRating</span><span class=\"p\">(</span><span class=\"s1\">'darknight rises'</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\" out of 10\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">Movie</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">Dark</span> <span class=\"n\">Knight</span> <span class=\"n\">Rises</span>\n<span class=\"n\">Movie</span> <span class=\"n\">rated</span><span class=\"p\">:</span>  <span class=\"s1\">'8.4'</span> <span class=\"n\">out</span> <span class=\"n\">of</span> <span class=\"mi\">10</span>\n\n\n<span class=\"n\">Sample1</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">pretty</span> <span class=\"n\">printed</span> <span class=\"n\">just</span> <span class=\"k\">for</span> <span class=\"n\">viewing</span><span class=\"p\">)</span>\n\n<span class=\"n\">Enter</span> <span class=\"n\">a</span> <span class=\"n\">movie</span><span class=\"p\">:</span> <span class=\"n\">darknight</span> <span class=\"n\">rises</span>\n\n<span class=\"n\">Movie</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">Dark</span> <span class=\"n\">Knight</span> <span class=\"n\">Rises</span>\n<span class=\"n\">Movie</span> <span class=\"n\">Rated</span><span class=\"p\">:</span> <span class=\"mf\">8.4</span> <span class=\"n\">out</span> <span class=\"n\">Of</span> <span class=\"mi\">10</span>\n\n<span class=\"n\">Movie</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">Dark</span> <span class=\"n\">Knight</span> <span class=\"n\">Rises</span>\n<span class=\"n\">Summary</span><span class=\"p\">:</span> <span class=\"n\">Eight</span> <span class=\"n\">years</span> <span class=\"n\">after</span> <span class=\"n\">the</span> <span class=\"n\">Joker</span><span class=\"s1\">'s reign of anarchy, Batman, with the help of the enigmatic Catwoman, is forced from his exile to save Gotham City, now on the edge of total annihilation, from the brutal guerrilla terrorist Bane.</span>\n\n<span class=\"n\">Movie</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">Dark</span> <span class=\"n\">Knight</span> <span class=\"n\">Rises</span>\n<span class=\"n\">Director</span><span class=\"p\">:</span> <span class=\"n\">ChristopherNolan</span>\n\n<span class=\"n\">Movie</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">Dark</span> <span class=\"n\">Knight</span> <span class=\"n\">Rises</span>\n<span class=\"n\">Cast_list</span> <span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"mi\">10</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Christian Bale'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Bruce Wayne'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Gary Oldman'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Commissioner Gordon'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Tom Hardy'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Bane'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Joseph Gordon-Levitt'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Blake'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Anne Hathaway'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Selina'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Marion Cotillard'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Miranda'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Morgan Freeman'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Fox'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Michael Caine'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Alfred'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Matthew Modine'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Foley'</span>\n<span class=\"p\">}</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Alon Aboutboul'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Dr. Pavel       (as Alon Moni Aboutboul)'</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"n\">Movie</span> <span class=\"n\">Details</span><span class=\"p\">:</span>\n<span class=\"n\">Movie</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">Dark</span> <span class=\"n\">Knight</span> <span class=\"n\">Rises</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The Dark Knight Rises\"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"runTime\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2h44min\"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"titleYear\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2012\"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"releaseDate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2012-07-20\"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"gener\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Action\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Thriller\"</span><span class=\"p\">],</span>\n\n    <span class=\"s2\">\"posterUrl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://m.media-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_UX182_CR0,0,182,268_AL__QL50.jpg\"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"rating \"</span><span class=\"p\">:</span> <span class=\"s2\">\"8.4 \"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"summary \"</span><span class=\"p\">:</span> <span class=\"s2\">\"Eight years after the Joker 's reign of anarchy,Batman with the help of the enigmatic Catwoman,is forced from his exile to save Gotham City\"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"director \"</span><span class=\"p\">:</span> <span class=\"s2\">\"ChristopherNolan \"</span><span class=\"p\">,</span>\n\n    <span class=\"s2\">\"casting \"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Christian Bale'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Bruce Wayne'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Gary Oldman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Commissioner Gordon'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Tom Hardy'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Bane'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Joseph Gordon-Levitt'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Blake'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Anne Hathaway'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Selina'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Marion Cotillard'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Miranda'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Morgan Freeman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Fox'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Michael Caine'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Alfred'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Matthew Modine'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Foley'</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'actor'</span><span class=\"p\">:</span> <span class=\"s1\">'Alon Aboutboul'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'role'</span><span class=\"p\">:</span> <span class=\"s1\">'Dr. Pavel       (as Alon Moni Aboutboul)'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"imdb-id\">\n<h2>IMDB_ID :</h2>\n<pre>is an unique ID given by IMDB to a movie or series or a celebrity, IMDB_ID can be found in the URL.\nif you open IMDB for a movie, say \"The Dark night rises\" the URL will be \"https://www.imdb.com/title/tt1345836/\"\n\nthis last text \"tt1345836\" is the IMDB ID of the movie\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4252305, "releases": {"0.1.beta": [{"comment_text": "", "digests": {"md5": "3263edfa11b6fca530a5a56a5df87865", "sha256": "dcc0608331e9069cdc18569bc72b4b493e425dbd0490466cc01fd78f5a1a4f94"}, "downloads": -1, "filename": "IMDBAPI-0.1.beta.tar.gz", "has_sig": false, "md5_digest": "3263edfa11b6fca530a5a56a5df87865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1386, "upload_time": "2018-02-07T19:09:29", "upload_time_iso_8601": "2018-02-07T19:09:29.711830Z", "url": "https://files.pythonhosted.org/packages/31/b7/7e960939df5ea1b95fb6df32475b61291c7acfde5e6148448d3e7d440e7c/IMDBAPI-0.1.beta.tar.gz", "yanked": false}], "0.2.1.2": [{"comment_text": "", "digests": {"md5": "9bf2c049dacd2e8b4957208e458b9113", "sha256": "670c40f57145df8e91886dfd211a51fae31108634de70299d2e122030d1c4728"}, "downloads": -1, "filename": "IMDBAPI-0.2.1.2.tar.gz", "has_sig": false, "md5_digest": "9bf2c049dacd2e8b4957208e458b9113", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2689, "upload_time": "2018-06-12T20:44:48", "upload_time_iso_8601": "2018-06-12T20:44:48.036137Z", "url": "https://files.pythonhosted.org/packages/2f/5c/f1020637144c20f5ef5446b84a358e8c895d036075176612e0f5c03087c6/IMDBAPI-0.2.1.2.tar.gz", "yanked": false}], "0.2.1.3": [{"comment_text": "", "digests": {"md5": "6ae9243f2119348ddacf8551aef3b60b", "sha256": "0b6691153bbfa9d7fddf8e3a73d9afc1eabc36c16bf639eb2072e4348bc679b2"}, "downloads": -1, "filename": "IMDBAPI-0.2.1.3.tar.gz", "has_sig": false, "md5_digest": "6ae9243f2119348ddacf8551aef3b60b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2831, "upload_time": "2018-06-12T20:59:39", "upload_time_iso_8601": "2018-06-12T20:59:39.635761Z", "url": "https://files.pythonhosted.org/packages/26/e3/35a64f8a278edbc78129eb6c027bd9f3f348262516c500f47c6750a8975f/IMDBAPI-0.2.1.3.tar.gz", "yanked": false}], "1.0.1.4": [{"comment_text": "", "digests": {"md5": "049e054c59d57921ad729100738e7fb6", "sha256": "64d23e6ae711bc9fc8e5cfe9869bde67f28a40146561386564bbfe6cf9e48f18"}, "downloads": -1, "filename": "IMDBAPI-1.0.1.4-py3.6.egg", "has_sig": false, "md5_digest": "049e054c59d57921ad729100738e7fb6", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 6648, "upload_time": "2018-06-13T21:27:06", "upload_time_iso_8601": "2018-06-13T21:27:06.652946Z", "url": "https://files.pythonhosted.org/packages/33/92/72dbee3b7e604803a1120fb28983a6293c8b802feaba471b593b236c921b/IMDBAPI-1.0.1.4-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "01761d89dafaece384d8c87d0a81ce3b", "sha256": "fa56e22cd363bf51ffee975fe18e5cc6a6cafb9ad62d91d2f2bb408f78f76815"}, "downloads": -1, "filename": "IMDBAPI-1.0.1.4.tar.gz", "has_sig": false, "md5_digest": "01761d89dafaece384d8c87d0a81ce3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4721, "upload_time": "2018-06-13T21:27:08", "upload_time_iso_8601": "2018-06-13T21:27:08.020048Z", "url": "https://files.pythonhosted.org/packages/e8/c1/fafe958b428f2aefa10705b1f8fda7cc500a87fd90f2a86ceca24f6e67d2/IMDBAPI-1.0.1.4.tar.gz", "yanked": false}], "1.0.1.5": [{"comment_text": "", "digests": {"md5": "9d7b6bc49e891fb0b99692a6de225ae8", "sha256": "6ad67c1cb592a0f236048c09a8a68dadb1c3b1a6b45035843666fa22ffd0c27c"}, "downloads": -1, "filename": "IMDBAPI-1.0.1.5.tar.gz", "has_sig": false, "md5_digest": "9d7b6bc49e891fb0b99692a6de225ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4885, "upload_time": "2018-06-13T22:02:01", "upload_time_iso_8601": "2018-06-13T22:02:01.484682Z", "url": "https://files.pythonhosted.org/packages/b5/83/b6d08d2906b204fddad119ede9a5a451e63dac51715e7db0ccada48c5250/IMDBAPI-1.0.1.5.tar.gz", "yanked": false}], "1.0.1.6": [{"comment_text": "", "digests": {"md5": "29b01f55368696b38962535480abba05", "sha256": "fed73c9f3a54d0c1ee1e0885ff205f9fa601172bc599393caa2f191bec01a22a"}, "downloads": -1, "filename": "IMDBAPI-1.0.1.6.tar.gz", "has_sig": false, "md5_digest": "29b01f55368696b38962535480abba05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4949, "upload_time": "2018-06-13T22:09:35", "upload_time_iso_8601": "2018-06-13T22:09:35.549490Z", "url": "https://files.pythonhosted.org/packages/47/1e/5be64a091cf17736164e4f4983c713c54fa5fb35ece837ed7ec0ef3913ca/IMDBAPI-1.0.1.6.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "85e0bc18d9074ee144cc4ed7227eec19", "sha256": "1b38411feea545201bf2fdb6ca0fc9c6afa49729bb04454b5a30a18d0d24dd68"}, "downloads": -1, "filename": "IMDBAPI-1.0.2.tar.gz", "has_sig": false, "md5_digest": "85e0bc18d9074ee144cc4ed7227eec19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5039, "upload_time": "2018-09-08T21:24:41", "upload_time_iso_8601": "2018-09-08T21:24:41.970830Z", "url": "https://files.pythonhosted.org/packages/78/2b/61b55393ec78c202e9e5645ff4e6c1cbad9137c1cb9b2e8ae124aeefeedf/IMDBAPI-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "85e0bc18d9074ee144cc4ed7227eec19", "sha256": "1b38411feea545201bf2fdb6ca0fc9c6afa49729bb04454b5a30a18d0d24dd68"}, "downloads": -1, "filename": "IMDBAPI-1.0.2.tar.gz", "has_sig": false, "md5_digest": "85e0bc18d9074ee144cc4ed7227eec19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5039, "upload_time": "2018-09-08T21:24:41", "upload_time_iso_8601": "2018-09-08T21:24:41.970830Z", "url": "https://files.pythonhosted.org/packages/78/2b/61b55393ec78c202e9e5645ff4e6c1cbad9137c1cb9b2e8ae124aeefeedf/IMDBAPI-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:45 2020"}