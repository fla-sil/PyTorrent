{"info": {"author": "Sean Scheetz", "author_email": "contact_through_github@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "## Intro \nUpdated version of [etsy-python](https://github.com/mcfunley/etsy-python) with python3 \ncompatability and support for the modern etsy api. Please file any bugs, suggestions, \nor usage questions as github issues and I will get to them as soon as possible.\n\nNote, the tests are not yet upgraded (they should be within a few days) and I have not tested all features (notably I doubt specifying a keyfile works currently), but I wanted to get this package out there in case anyone was looking for a functional package in 2020 (and because I need it). I am currently successfully using it in my personal projects.\n\nSee changelog at bottom of the readme for differences between etsy-python and etsy-python2. The\nlast release for etsy-python was 0.3.1.\n\n## etsy-python2\nPython access to the Etsy API\n\nOriginally By Dan McKinley - dan@etsy.com - [http://mcfunley.com](http://mcfunley.com)\n\nForked by Sean Scheetz\n\n## Installation\n\nThe simplest way to install the module is pip\n\n<pre>\n$ pip install etsy2\n</pre>\n\nTo install from source, extract the tarball and use the following commands.\n\n<pre>\n$ python setup.py build\n$ sudo python setup.py install\n</pre>\n\n## Overview\n\nThis library works by retrieving the api metadata from https://api.etsy.com/v2/?api_key=<your-api-key> and patching the methods onto the `Etsy` object at runtime. This happens during\nconstruction of the `Etsy` object (the api client). Refer to the [Etsy API docs](https://www.etsy.com/developers/documentation/reference/apimethod) to see what method names you can call from the `Etsy` object. Every parameter can be passed in as a named parameter to the method call. e.g.\n\n```python\netsy.findAllShopReceipts(shop_id=<shop_id>)\n```\n\n## Usage\n\nThere are two types of etsy endpoints: Those that require OAuth and those that don't. For endpoints that don't require OAuth you can use the regular etsy client provided by this library as shown below.\n\n```python\nfrom etsy import Etsy\n\netsy = Etsy(api_key=<your-api-key>)\netsy.findAllFeaturedListings()\n```\n\nFor endpoints that do require OAuth you must pass an `EtsyOAuthClient` to the `Etsy` constructor.\n\n```python\netsy_oauth = EtsyOAuthClient(client_key=api_key,\n                            client_secret=shared_secret,\n                            resource_owner_key=oauth_token,\n                            resource_owner_secret=oauth_token_secret)\netsy = Etsy(api_key=api_key, etsy_oauth_client=etsy_oauth)\n```\n\nThe `EtsyOAuthClient` requires a client_key, client_secret, resource_owner_key, and resource_owner_secret to be constructed. The client_key and the client_secret are the keystring and shared secret given to you by etsy upon registering your app. The resource_owner_key and resource_owner_secret are the oauth_token and oauth_token_secret that must be retrieved by working through etsy's oauth workflow. The `EtsyOAuthHelper` exists so simplify the creation of the two aforementioned credentials. An example of how to use the `EtsyOAuthHelper` is given below.\n\n```python\n# define permissions scopes as defined in the 'OAuth Authentication' section of the docs\n# https://www.etsy.com/developers/documentation/getting_started/oauth#section_permission_scopes\npermission_scopes = ['transactions_r', 'listings_r']\n\n# login_url is the url to redirect the user to to have them authenticate with etsy.\n# temp_oauth_token_secret is the secret used in the get_ouath_token method to retrieve permanent oauth credentials.\n# <callback_url> is the url you want etsy to redirect the user to after logging in to etsy.\nlogin_url, temp_oauth_token_secret = EtsyOAuthHelper.get_request_url_and_token_secret(api_key, shared_secret, permission_scopes, <callback_url>)\n\n# called in the handler for <callback_url> to retrieve oauth crendentials for the user whose data you are interacting with\noauth_token, oauth_token_secret = EtsyOAuthHelper.get_oauth_token(api_key, shared_secret, temp_oauth_token_secret, input('paste: '))\n```\n\n## Configuration\n\nFor convenience (and to avoid storing API keys in revision control\nsystems), the package supports local configuration. You can manage\nyour API keys in a file called $HOME/etsy/keys (or the equivalent on\nWindows) with the following format:\n\n<pre>\nv2 = 'Etsy API version 2 key goes here'\n</pre>\n\nAlternatively, you can specify a different key file when creating an API object.\n\n<pre>\nfrom etsy import Etsy\n\napi = Etsy(key_file='/usr/share/etsy/keys')\n</pre>\n\n(Implementation note: the keys file can be any valid python script that defines\na module-level variable for the API version you are trying to use.)\n\n## Tests\n\nThis package comes with a reasonably complete unit test suite. In order to run\nthe tests, use:\n\n<pre>\n$ python setup.py test\n</pre>\n\nSome of the tests (those that actually call the Etsy API) require your API key\nto be locally configured. See the Configuration section, above.\n\n\n## Method Table Caching\n\nAs mentioned above, this module is implemented by metaprogramming against the method table\npublished by the Etsy API. In other words, API methods are not explicitly declared by the\ncode in this module. Instead, the list of allowable methods is downloaded and\nthe patched into the API objects at runtime.\n\nThis has advantages and disadvantages. It allows the module to automatically \nreceive new features, but on the other hand, this process is not as fast as \nexplicitly declared methods. \n\nIn order to speed things up, the method table json is cached locally by default.\nIf a $HOME/etsy directory exists, the cache file is created there. Otherwise, it \nis placed in the machine's temp directory. By default, this cache lasts 24 hours.\n\nThe cache file can be specified when creating an API object:\n\n```python\nfrom etsy import Etsy\n\napi = Etsy(method_cache='myfile.json')\n```\n\nMethod table caching can also be disabled by passing None as the cache parameter:\n\n```python\nfrom etsy import Etsy\n\n# do not cache methods\napi = Etsy(method_cache=None)\n```\n\n\n## Version History\n\n### Version 0.4.0\n- Added python 3 compatability\n- Removed EtsySandboxEnv because etsy doesnt seem to have a sandbox env anymore.\n- Fixed broken EtsyOauthClient because etsy now rejects calls including the api_key param when oauth is being used.\n- Replaced simplejson with builtin json, replaced python-oauth2 with requests-oauthlib (python-oauth2 only supports up to python 3.4).\n- Removed the oauth credential retrieval methods from EtsyOAuthClient to make client usage easier.\n- Created EtsyOAuthHelper to make retrieving the etsy oauth credentials easier.\n- Added helpers to make getting oauth credentials from etsy easier.\n- Added basic support for PUT and DELETE methods (which the etsy api didnt have when this was originally written)\n\n### Version 0.3.1\n* Allowing Python Longs to be passed for parameters declared as \"integers\" by the API \n  (thanks to [Marc Abramowitz](http://marc-abramowitz.com)). \n\n\n### Version 0.3 \n* Support for Etsy API v2 thanks to [Marc Abramowitz](http://marc-abramowitz.com). \n* Removed support for now-dead Etsy API v1. \n\n\n### Version 0.2.1 \n* Added a cache for the method table json.\n* Added a logging facility.\n\n\n### Version 0.2 - 05-31-2010\n* Added local configuration (~/.etsy) to eliminate cutting & pasting of api keys.\n* Added client-side type checking for parameters.\n* Added support for positional arguments.\n* Added a test suite.\n* Began differentiation between API versions.\n* Added module to PyPI. \n\n### Version 0.1 - 05-24-2010 \nInitial release\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "etsy api handmade", "license": "GPL v3", "maintainer": "", "maintainer_email": "", "name": "etsy2", "package_url": "https://pypi.org/project/etsy2/", "platform": "", "project_url": "https://pypi.org/project/etsy2/", "project_urls": {"Source Code": "https://github.com/sscheetz/etsy-python2"}, "release_url": "https://pypi.org/project/etsy2/0.4.0/", "requires_dist": ["requests-oauthlib"], "requires_python": "", "summary": "Python access to the Etsy API", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Intro</h2>\n<p>Updated version of <a href=\"https://github.com/mcfunley/etsy-python\" rel=\"nofollow\">etsy-python</a> with python3\ncompatability and support for the modern etsy api. Please file any bugs, suggestions,\nor usage questions as github issues and I will get to them as soon as possible.</p>\n<p>Note, the tests are not yet upgraded (they should be within a few days) and I have not tested all features (notably I doubt specifying a keyfile works currently), but I wanted to get this package out there in case anyone was looking for a functional package in 2020 (and because I need it). I am currently successfully using it in my personal projects.</p>\n<p>See changelog at bottom of the readme for differences between etsy-python and etsy-python2. The\nlast release for etsy-python was 0.3.1.</p>\n<h2>etsy-python2</h2>\n<p>Python access to the Etsy API</p>\n<p>Originally By Dan McKinley - <a href=\"mailto:dan@etsy.com\">dan@etsy.com</a> - <a href=\"http://mcfunley.com\" rel=\"nofollow\">http://mcfunley.com</a></p>\n<p>Forked by Sean Scheetz</p>\n<h2>Installation</h2>\n<p>The simplest way to install the module is pip</p>\n<pre>$ pip install etsy2\n</pre>\n<p>To install from source, extract the tarball and use the following commands.</p>\n<pre>$ python setup.py build\n$ sudo python setup.py install\n</pre>\n<h2>Overview</h2>\n<p>This library works by retrieving the api metadata from <a href=\"https://api.etsy.com/v2/?api_key=\" rel=\"nofollow\">https://api.etsy.com/v2/?api_key=</a>&lt;your-api-key&gt; and patching the methods onto the <code>Etsy</code> object at runtime. This happens during\nconstruction of the <code>Etsy</code> object (the api client). Refer to the <a href=\"https://www.etsy.com/developers/documentation/reference/apimethod\" rel=\"nofollow\">Etsy API docs</a> to see what method names you can call from the <code>Etsy</code> object. Every parameter can be passed in as a named parameter to the method call. e.g.</p>\n<pre><span class=\"n\">etsy</span><span class=\"o\">.</span><span class=\"n\">findAllShopReceipts</span><span class=\"p\">(</span><span class=\"n\">shop_id</span><span class=\"o\">=&lt;</span><span class=\"n\">shop_id</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<h2>Usage</h2>\n<p>There are two types of etsy endpoints: Those that require OAuth and those that don't. For endpoints that don't require OAuth you can use the regular etsy client provided by this library as shown below.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">etsy</span> <span class=\"kn\">import</span> <span class=\"n\">Etsy</span>\n\n<span class=\"n\">etsy</span> <span class=\"o\">=</span> <span class=\"n\">Etsy</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=&lt;</span><span class=\"n\">your</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">-</span><span class=\"n\">key</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n<span class=\"n\">etsy</span><span class=\"o\">.</span><span class=\"n\">findAllFeaturedListings</span><span class=\"p\">()</span>\n</pre>\n<p>For endpoints that do require OAuth you must pass an <code>EtsyOAuthClient</code> to the <code>Etsy</code> constructor.</p>\n<pre><span class=\"n\">etsy_oauth</span> <span class=\"o\">=</span> <span class=\"n\">EtsyOAuthClient</span><span class=\"p\">(</span><span class=\"n\">client_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span>\n                            <span class=\"n\">client_secret</span><span class=\"o\">=</span><span class=\"n\">shared_secret</span><span class=\"p\">,</span>\n                            <span class=\"n\">resource_owner_key</span><span class=\"o\">=</span><span class=\"n\">oauth_token</span><span class=\"p\">,</span>\n                            <span class=\"n\">resource_owner_secret</span><span class=\"o\">=</span><span class=\"n\">oauth_token_secret</span><span class=\"p\">)</span>\n<span class=\"n\">etsy</span> <span class=\"o\">=</span> <span class=\"n\">Etsy</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">etsy_oauth_client</span><span class=\"o\">=</span><span class=\"n\">etsy_oauth</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>EtsyOAuthClient</code> requires a client_key, client_secret, resource_owner_key, and resource_owner_secret to be constructed. The client_key and the client_secret are the keystring and shared secret given to you by etsy upon registering your app. The resource_owner_key and resource_owner_secret are the oauth_token and oauth_token_secret that must be retrieved by working through etsy's oauth workflow. The <code>EtsyOAuthHelper</code> exists so simplify the creation of the two aforementioned credentials. An example of how to use the <code>EtsyOAuthHelper</code> is given below.</p>\n<pre><span class=\"c1\"># define permissions scopes as defined in the 'OAuth Authentication' section of the docs</span>\n<span class=\"c1\"># https://www.etsy.com/developers/documentation/getting_started/oauth#section_permission_scopes</span>\n<span class=\"n\">permission_scopes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'transactions_r'</span><span class=\"p\">,</span> <span class=\"s1\">'listings_r'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># login_url is the url to redirect the user to to have them authenticate with etsy.</span>\n<span class=\"c1\"># temp_oauth_token_secret is the secret used in the get_ouath_token method to retrieve permanent oauth credentials.</span>\n<span class=\"c1\"># &lt;callback_url&gt; is the url you want etsy to redirect the user to after logging in to etsy.</span>\n<span class=\"n\">login_url</span><span class=\"p\">,</span> <span class=\"n\">temp_oauth_token_secret</span> <span class=\"o\">=</span> <span class=\"n\">EtsyOAuthHelper</span><span class=\"o\">.</span><span class=\"n\">get_request_url_and_token_secret</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">shared_secret</span><span class=\"p\">,</span> <span class=\"n\">permission_scopes</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">callback_url</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># called in the handler for &lt;callback_url&gt; to retrieve oauth crendentials for the user whose data you are interacting with</span>\n<span class=\"n\">oauth_token</span><span class=\"p\">,</span> <span class=\"n\">oauth_token_secret</span> <span class=\"o\">=</span> <span class=\"n\">EtsyOAuthHelper</span><span class=\"o\">.</span><span class=\"n\">get_oauth_token</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">shared_secret</span><span class=\"p\">,</span> <span class=\"n\">temp_oauth_token_secret</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s1\">'paste: '</span><span class=\"p\">))</span>\n</pre>\n<h2>Configuration</h2>\n<p>For convenience (and to avoid storing API keys in revision control\nsystems), the package supports local configuration. You can manage\nyour API keys in a file called $HOME/etsy/keys (or the equivalent on\nWindows) with the following format:</p>\n<pre>v2 = 'Etsy API version 2 key goes here'\n</pre>\n<p>Alternatively, you can specify a different key file when creating an API object.</p>\n<pre>from etsy import Etsy\n\napi = Etsy(key_file='/usr/share/etsy/keys')\n</pre>\n<p>(Implementation note: the keys file can be any valid python script that defines\na module-level variable for the API version you are trying to use.)</p>\n<h2>Tests</h2>\n<p>This package comes with a reasonably complete unit test suite. In order to run\nthe tests, use:</p>\n<pre>$ python setup.py test\n</pre>\n<p>Some of the tests (those that actually call the Etsy API) require your API key\nto be locally configured. See the Configuration section, above.</p>\n<h2>Method Table Caching</h2>\n<p>As mentioned above, this module is implemented by metaprogramming against the method table\npublished by the Etsy API. In other words, API methods are not explicitly declared by the\ncode in this module. Instead, the list of allowable methods is downloaded and\nthe patched into the API objects at runtime.</p>\n<p>This has advantages and disadvantages. It allows the module to automatically\nreceive new features, but on the other hand, this process is not as fast as\nexplicitly declared methods.</p>\n<p>In order to speed things up, the method table json is cached locally by default.\nIf a $HOME/etsy directory exists, the cache file is created there. Otherwise, it\nis placed in the machine's temp directory. By default, this cache lasts 24 hours.</p>\n<p>The cache file can be specified when creating an API object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">etsy</span> <span class=\"kn\">import</span> <span class=\"n\">Etsy</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Etsy</span><span class=\"p\">(</span><span class=\"n\">method_cache</span><span class=\"o\">=</span><span class=\"s1\">'myfile.json'</span><span class=\"p\">)</span>\n</pre>\n<p>Method table caching can also be disabled by passing None as the cache parameter:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">etsy</span> <span class=\"kn\">import</span> <span class=\"n\">Etsy</span>\n\n<span class=\"c1\"># do not cache methods</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Etsy</span><span class=\"p\">(</span><span class=\"n\">method_cache</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<h2>Version History</h2>\n<h3>Version 0.4.0</h3>\n<ul>\n<li>Added python 3 compatability</li>\n<li>Removed EtsySandboxEnv because etsy doesnt seem to have a sandbox env anymore.</li>\n<li>Fixed broken EtsyOauthClient because etsy now rejects calls including the api_key param when oauth is being used.</li>\n<li>Replaced simplejson with builtin json, replaced python-oauth2 with requests-oauthlib (python-oauth2 only supports up to python 3.4).</li>\n<li>Removed the oauth credential retrieval methods from EtsyOAuthClient to make client usage easier.</li>\n<li>Created EtsyOAuthHelper to make retrieving the etsy oauth credentials easier.</li>\n<li>Added helpers to make getting oauth credentials from etsy easier.</li>\n<li>Added basic support for PUT and DELETE methods (which the etsy api didnt have when this was originally written)</li>\n</ul>\n<h3>Version 0.3.1</h3>\n<ul>\n<li>Allowing Python Longs to be passed for parameters declared as \"integers\" by the API\n(thanks to <a href=\"http://marc-abramowitz.com\" rel=\"nofollow\">Marc Abramowitz</a>).</li>\n</ul>\n<h3>Version 0.3</h3>\n<ul>\n<li>Support for Etsy API v2 thanks to <a href=\"http://marc-abramowitz.com\" rel=\"nofollow\">Marc Abramowitz</a>.</li>\n<li>Removed support for now-dead Etsy API v1.</li>\n</ul>\n<h3>Version 0.2.1</h3>\n<ul>\n<li>Added a cache for the method table json.</li>\n<li>Added a logging facility.</li>\n</ul>\n<h3>Version 0.2 - 05-31-2010</h3>\n<ul>\n<li>Added local configuration (~/.etsy) to eliminate cutting &amp; pasting of api keys.</li>\n<li>Added client-side type checking for parameters.</li>\n<li>Added support for positional arguments.</li>\n<li>Added a test suite.</li>\n<li>Began differentiation between API versions.</li>\n<li>Added module to PyPI.</li>\n</ul>\n<h3>Version 0.1 - 05-24-2010</h3>\n<p>Initial release</p>\n\n          </div>"}, "last_serial": 7103206, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "62e644aab2df1b48bdd0e91a4eb4976b", "sha256": "4b3fff49d6b8b2652fe48ae1a627aeefe76046d519b44f28996d258d4a5ae2be"}, "downloads": -1, "filename": "etsy2-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "62e644aab2df1b48bdd0e91a4eb4976b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23537, "upload_time": "2020-04-26T06:10:03", "upload_time_iso_8601": "2020-04-26T06:10:03.847394Z", "url": "https://files.pythonhosted.org/packages/66/f5/802f0ada52ef804c0ed0e2b024b6f2ccadd5007d0898abcbc04e2574fa84/etsy2-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "768d1cb446d2738027bab2ac6b489ec9", "sha256": "b5f8658ac7c334588a50e22ca74f4e585564a1883ef815d8719da318fccdfbab"}, "downloads": -1, "filename": "etsy2-0.4.0.tar.gz", "has_sig": false, "md5_digest": "768d1cb446d2738027bab2ac6b489ec9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15754, "upload_time": "2020-04-26T06:10:06", "upload_time_iso_8601": "2020-04-26T06:10:06.124609Z", "url": "https://files.pythonhosted.org/packages/49/5b/9ba61e2e216299340850ac9ea538ccf45b440b390aceece2658dedc1a234/etsy2-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62e644aab2df1b48bdd0e91a4eb4976b", "sha256": "4b3fff49d6b8b2652fe48ae1a627aeefe76046d519b44f28996d258d4a5ae2be"}, "downloads": -1, "filename": "etsy2-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "62e644aab2df1b48bdd0e91a4eb4976b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23537, "upload_time": "2020-04-26T06:10:03", "upload_time_iso_8601": "2020-04-26T06:10:03.847394Z", "url": "https://files.pythonhosted.org/packages/66/f5/802f0ada52ef804c0ed0e2b024b6f2ccadd5007d0898abcbc04e2574fa84/etsy2-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "768d1cb446d2738027bab2ac6b489ec9", "sha256": "b5f8658ac7c334588a50e22ca74f4e585564a1883ef815d8719da318fccdfbab"}, "downloads": -1, "filename": "etsy2-0.4.0.tar.gz", "has_sig": false, "md5_digest": "768d1cb446d2738027bab2ac6b489ec9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15754, "upload_time": "2020-04-26T06:10:06", "upload_time_iso_8601": "2020-04-26T06:10:06.124609Z", "url": "https://files.pythonhosted.org/packages/49/5b/9ba61e2e216299340850ac9ea538ccf45b440b390aceece2658dedc1a234/etsy2-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:22 2020"}