{"info": {"author": "fate0", "author_email": "fate0@fatezero.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# aiochrome\n\n[![Build Status](https://travis-ci.org/fate0/aiochrome.svg?branch=master)](https://travis-ci.org/fate0/aiochrome)\n[![Codecov](https://img.shields.io/codecov/c/github/fate0/aiochrome.svg)](https://codecov.io/gh/fate0/aiochrome)\n[![Updates](https://pyup.io/repos/github/fate0/aiochrome/shield.svg)](https://pyup.io/repos/github/fate0/aiochrome/)\n[![PyPI](https://img.shields.io/pypi/v/aiochrome.svg)](https://pypi.python.org/pypi/aiochrome)\n[![PyPI](https://img.shields.io/pypi/pyversions/aiochrome.svg)](https://github.com/fate0/aiochrome)\n\nA Python Package for the Google Chrome Dev Protocol, [more document](https://fate0.github.io/aiochrome/)\n\n## Table of Contents\n\n* [Installation](#installation)\n* [Setup Chrome](#setup-chrome)\n* [Getting Started](#getting-started)\n* [Tab management](#tab-management)\n* [Debug](#debug)\n* [Examples](#examples)\n* [Ref](#ref)\n\n\n## Installation\n\nTo install aiochrome, simply:\n\n```\n$ pip install -U aiochrome\n```\n\nor from GitHub:\n\n```\n$ pip install -U git+https://github.com/fate0/aiochrome.git\n```\n\nor from source:\n\n```\n$ python setup.py install\n```\n\n## Setup Chrome\n\nsimply:\n\n```\n$ google-chrome --remote-debugging-port=9222\n```\n\nor headless mode (chrome version >= 59):\n\n```\n$ google-chrome --headless --disable-gpu --remote-debugging-port=9222\n```\n\nor use docker:\n\n```\n$ docker pull fate0/headless-chrome\n$ docker run -it --rm --cap-add=SYS_ADMIN -p9222:9222 fate0/headless-chrome\n```\n\n## Getting Started\n\n``` python\nimport asyncio\nimport aiochrome\n\n\nasync def main():\n    # create a browser instance\n    browser = aiochrome.Browser(url=\"http://127.0.0.1:9222\")\n\n    # create a tab\n    tab = await browser.new_tab()\n\n    # register callback if you want\n    async def request_will_be_sent(**kwargs):\n        print(\"loading: %s\" % kwargs.get('request').get('url'))\n\n    tab.Network.requestWillBeSent = request_will_be_sent\n\n    # start the tab\n    await tab.start()\n\n    # call method\n    await tab.Network.enable()\n    # call method with timeout\n    await tab.Page.navigate(url=\"https://github.com/fate0/aiochrome\", _timeout=5)\n\n    # wait for loading\n    await tab.wait(5)\n\n    # stop the tab (stop handle events and stop recv message from chrome)\n    await tab.stop()\n\n    # close tab\n    await browser.close_tab(tab)\n\n\nloop = asyncio.get_event_loop()\ntry:\n    loop.run_until_complete(main())\nfinally:\n    loop.close()\n```\n\nor (alternate syntax)\n\n``` python\nimport asyncio\nimport aiochrome\n\n\nasync def main():\n    browser = aiochrome.Browser(url=\"http://127.0.0.1:9222\")\n    tab = await browser.new_tab()\n\n    async def request_will_be_sent(**kwargs):\n        print(\"loading: %s\" % kwargs.get('request').get('url'))\n\n    tab.set_listener(\"Network.requestWillBeSent\", request_will_be_sent)\n\n    await tab.start()\n    await tab.call_method(\"Network.enable\")\n    await tab.call_method(\"Page.navigate\", url=\"https://github.com/fate0/aiochrome\", _timeout=5)\n\n    await tab.wait(5)\n    await tab.stop()\n\n    await browser.close_tab(tab)\n\n\nloop = asyncio.get_event_loop()\ntry:\n    loop.run_until_complete(main())\nfinally:\n    loop.close()\n\n```\n\nmore methods or events could be found in\n[Chrome DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/tot/)\n\n\n## Debug\n\nset DEBUG env variable:\n\n![aiochrome_with_debug_env](https://raw.githubusercontent.com/fate0/aiochrome/master/docs/images/aiochrome_with_debug_env.png)\n\n\n## Tab management\n\nrun `aiochrome -h` for more info\n\nexample:\n\n![aiochrome_tab_management](https://raw.githubusercontent.com/fate0/aiochrome/master/docs/images/aiochrome_tab_management.png)\n\n\n## Examples\n\nplease see the [examples](http://github.com/fate0/aiochrome/blob/master/examples) directory for more examples\n\n\n## Ref\n\n* [chrome-remote-interface](https://github.com/cyrus-and/chrome-remote-interface/)\n* [Chrome DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/tot/)\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fate0/aiochrome", "keywords": "aiochrome", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "aiochrome", "package_url": "https://pypi.org/project/aiochrome/", "platform": "", "project_url": "https://pypi.org/project/aiochrome/", "project_urls": {"Homepage": "https://github.com/fate0/aiochrome"}, "release_url": "https://pypi.org/project/aiochrome/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # aiochrome<br><br>[![Build Status](https://travis-ci.org/fate0/aiochrome.svg?branch=master)](https://travis-ci.org/fate0/aiochrome)<br>[![Codecov](https://img.shields.io/codecov/c/github/fate0/aiochrome.svg)](https://codecov.io/gh/fate0/aiochrome)<br>[![Updates](https://pyup.io/repos/github/fate0/aiochrome/shield.svg)](https://pyup.io/repos/github/fate0/aiochrome/)<br>[![PyPI](https://img.shields.io/pypi/v/aiochrome.svg)](https://pypi.python.org/pypi/aiochrome)<br>[![PyPI](https://img.shields.io/pypi/pyversions/aiochrome.svg)](https://github.com/fate0/aiochrome)<br><br>A Python Package for the Google Chrome Dev Protocol, [more document](https://fate0.github.io/aiochrome/)<br><br>## Table of Contents<br><br>* [Installation](#installation)<br>* [Setup Chrome](#setup-chrome)<br>* [Getting Started](#getting-started)<br>* [Tab management](#tab-management)<br>* [Debug](#debug)<br>* [Examples](#examples)<br>* [Ref](#ref)<br><br><br>## Installation<br><br>To install aiochrome, simply:<br><br>```<br>$ pip install -U aiochrome<br>```<br><br>or from GitHub:<br><br>```<br>$ pip install -U git+https://github.com/fate0/aiochrome.git<br>```<br><br>or from source:<br><br>```<br>$ python setup.py install<br>```<br><br>## Setup Chrome<br><br>simply:<br><br>```<br>$ google-chrome --remote-debugging-port=9222<br>```<br><br>or headless mode (chrome version &gt;= 59):<br><br>```<br>$ google-chrome --headless --disable-gpu --remote-debugging-port=9222<br>```<br><br>or use docker:<br><br>```<br>$ docker pull fate0/headless-chrome<br>$ docker run -it --rm --cap-add=SYS_ADMIN -p9222:9222 fate0/headless-chrome<br>```<br><br>## Getting Started<br><br>``` python<br>import asyncio<br>import aiochrome<br><br><br>async def main():<br>    # create a browser instance<br>    browser = aiochrome.Browser(url=\"http://127.0.0.1:9222\")<br><br>    # create a tab<br>    tab = await browser.new_tab()<br><br>    # register callback if you want<br>    async def request_will_be_sent(**kwargs):<br>        print(\"loading: %s\" % kwargs.get('request').get('url'))<br><br>    tab.Network.requestWillBeSent = request_will_be_sent<br><br>    # start the tab<br>    await tab.start()<br><br>    # call method<br>    await tab.Network.enable()<br>    # call method with timeout<br>    await tab.Page.navigate(url=\"https://github.com/fate0/aiochrome\", _timeout=5)<br><br>    # wait for loading<br>    await tab.wait(5)<br><br>    # stop the tab (stop handle events and stop recv message from chrome)<br>    await tab.stop()<br><br>    # close tab<br>    await browser.close_tab(tab)<br><br><br>loop = asyncio.get_event_loop()<br>try:<br>    loop.run_until_complete(main())<br>finally:<br>    loop.close()<br>```<br><br>or (alternate syntax)<br><br>``` python<br>import asyncio<br>import aiochrome<br><br><br>async def main():<br>    browser = aiochrome.Browser(url=\"http://127.0.0.1:9222\")<br>    tab = await browser.new_tab()<br><br>    async def request_will_be_sent(**kwargs):<br>        print(\"loading: %s\" % kwargs.get('request').get('url'))<br><br>    tab.set_listener(\"Network.requestWillBeSent\", request_will_be_sent)<br><br>    await tab.start()<br>    await tab.call_method(\"Network.enable\")<br>    await tab.call_method(\"Page.navigate\", url=\"https://github.com/fate0/aiochrome\", _timeout=5)<br><br>    await tab.wait(5)<br>    await tab.stop()<br><br>    await browser.close_tab(tab)<br><br><br>loop = asyncio.get_event_loop()<br>try:<br>    loop.run_until_complete(main())<br>finally:<br>    loop.close()<br><br>```<br><br>more methods or events could be found in<br>[Chrome DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/tot/)<br><br><br>## Debug<br><br>set DEBUG env variable:<br><br>![aiochrome_with_debug_env](https://raw.githubusercontent.com/fate0/aiochrome/master/docs/images/aiochrome_with_debug_env.png)<br><br><br>## Tab management<br><br>run `aiochrome -h` for more info<br><br>example:<br><br>![aiochrome_tab_management](https://raw.githubusercontent.com/fate0/aiochrome/master/docs/images/aiochrome_tab_management.png)<br><br><br>## Examples<br><br>please see the [examples](http://github.com/fate0/aiochrome/blob/master/examples) directory for more examples<br><br><br>## Ref<br><br>* [chrome-remote-interface](https://github.com/cyrus-and/chrome-remote-interface/)<br>* [Chrome DevTools Protocol](https://chromedevtools.github.io/devtools-protocol/tot/)<br>\n          </div>"}, "last_serial": 3185325, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2589acf4d6a06577e6da298b4291a1b0", "sha256": "6e366ad0d4d7791116ed8d1e06cb476e96a650fcb063decaab0840e786d24cfd"}, "downloads": -1, "filename": "aiochrome-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2589acf4d6a06577e6da298b4291a1b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5901, "upload_time": "2017-09-16T02:13:37", "upload_time_iso_8601": "2017-09-16T02:13:37.126476Z", "url": "https://files.pythonhosted.org/packages/c5/47/753aff061d7e1d6f77c947bee7a80891a6e5e9975c2fad1d695dbff66f85/aiochrome-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "43d75a0f55b4dafc2330066313f281fa", "sha256": "8765f3309c617129f2a990e3889e93240570ee6d2d2d7bef23b854af7a3546d2"}, "downloads": -1, "filename": "aiochrome-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43d75a0f55b4dafc2330066313f281fa", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12240, "upload_time": "2017-09-19T12:27:41", "upload_time_iso_8601": "2017-09-19T12:27:41.341881Z", "url": "https://files.pythonhosted.org/packages/45/6b/44ade4d181175fc3ceef7ad15af089a5d11f1d488c097b9b29ec14207d5c/aiochrome-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ad1b3dc343668315ed70593f830f014", "sha256": "e1dc1d1d71da75a63110cbcf91a00526fdd8f627a3afe2d249d4974db3392f68"}, "downloads": -1, "filename": "aiochrome-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5ad1b3dc343668315ed70593f830f014", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11838, "upload_time": "2017-09-19T12:27:38", "upload_time_iso_8601": "2017-09-19T12:27:38.029721Z", "url": "https://files.pythonhosted.org/packages/9a/f5/f510919b7d3e84575d810f227e98b5621a10d296c3ba9304d4104d54f413/aiochrome-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3e839ea1f6bd50345c517a381bdc5032", "sha256": "7a5af71f3957fbc97352f77b91215fdd5b09753d5b941243e1a2a609b451ab69"}, "downloads": -1, "filename": "aiochrome-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e839ea1f6bd50345c517a381bdc5032", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12379, "upload_time": "2017-09-19T12:46:22", "upload_time_iso_8601": "2017-09-19T12:46:22.033008Z", "url": "https://files.pythonhosted.org/packages/6d/4d/71e4c45cafba544fc1104c52a6cb924037875e5816dd592abced6c9cff07/aiochrome-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8db58cd8a47c2958171a6dccbb369ebf", "sha256": "3b26d9a57956455119eea78cd48a10f43667787a5622280b553762fd7b767703"}, "downloads": -1, "filename": "aiochrome-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8db58cd8a47c2958171a6dccbb369ebf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11969, "upload_time": "2017-09-19T12:46:18", "upload_time_iso_8601": "2017-09-19T12:46:18.291420Z", "url": "https://files.pythonhosted.org/packages/a6/b1/f2b8e4eb68f3829b221f6fc6a5d5ce4e684746ab1bc4e48a9c8ce7139c33/aiochrome-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3e839ea1f6bd50345c517a381bdc5032", "sha256": "7a5af71f3957fbc97352f77b91215fdd5b09753d5b941243e1a2a609b451ab69"}, "downloads": -1, "filename": "aiochrome-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e839ea1f6bd50345c517a381bdc5032", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12379, "upload_time": "2017-09-19T12:46:22", "upload_time_iso_8601": "2017-09-19T12:46:22.033008Z", "url": "https://files.pythonhosted.org/packages/6d/4d/71e4c45cafba544fc1104c52a6cb924037875e5816dd592abced6c9cff07/aiochrome-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8db58cd8a47c2958171a6dccbb369ebf", "sha256": "3b26d9a57956455119eea78cd48a10f43667787a5622280b553762fd7b767703"}, "downloads": -1, "filename": "aiochrome-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8db58cd8a47c2958171a6dccbb369ebf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11969, "upload_time": "2017-09-19T12:46:18", "upload_time_iso_8601": "2017-09-19T12:46:18.291420Z", "url": "https://files.pythonhosted.org/packages/a6/b1/f2b8e4eb68f3829b221f6fc6a5d5ce4e684746ab1bc4e48a9c8ce7139c33/aiochrome-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:43 2020"}