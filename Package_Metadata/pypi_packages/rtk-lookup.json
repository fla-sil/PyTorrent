{"info": {"author": "Kilian Lieret", "author_email": "kilian.lieret@arcor.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Lookup Kanji by Heisig Keyword or frame number\n\n## Short Description\n\nFor people who learn kanji with the book by \nJames Heisig ([remembering the kanji](https://en.wikipedia.org/wiki/Remembering_the_Kanji_and_Remembering_the_Hanzi)). \n\nA little command line interface that allows to look up multiple kanji with \n\n* The keyword (or parts of it)\n* Parts of the mneomic/story\n* The frame number\n\n![3.png](https://raw.githubusercontent.com/klieret/readme-files/master/rtk-lookup/scrot_3.png)\n\n## Installation:\n\nInstallation with python package manager:\n\n    pip3 install --user --upgrade rtk-lookup\n\nThe command line interface can then be started with\n\n    rtk\n\nIf this doesn't work, you can use\n\n    python3 -m rtklookup \n\nor add ``~/.local/bin/`` to your ``$PATH`` variable.\n\nInstalling latest development version:\n\n    git clone https://github.com/klieret/rtk-lookup.git\n    cd rtk-lookup\n    pip3 install --editable --user .\n\nTo search through your own stories/menmonic, you need to supply them via a text file (e.g. download them from [kanji.koohii](https://kanji.koohii.com/)).\n\n## Basic searching\n\n    (default) large resist\n        \u5927\u62b5\n    (default) 107 1832\n        \u5927\u62b5\n    (default) large 1832\n        \u5927\u62b5\n\nIf words are not found, they are converted to hiragana if the ```romkan``` module is installed (optional). \nThis ```romkan``` module which can be downloaded [here](https://pypi.python.org/pypi/romkan). \n\nExamples:\n\n    (default) large \u3066\u3044\n        \u5927\u3066\u3044\n    (default) large \u62b5\n        \u5927\u62b5\n    (default) large tei\n        \u5927\u3066\u3044\n\nYou can also lookup english keyword with kanji too\n\n    (default) \u8b72\n        \u8b72: defer\n    (default) \u56f3\u66f8\u9928\n        \u56f3: map\n        \u66f8: write\n        \u9928: bldg.\n\nTo quit, type ```.q```.\n\n## Modes \n\nThere are four modes (in parenthesis: command to activate mode)\n\n* default (```.d```): Do nothing.\n* copy (```.c```): Copy result to clipboard.\n* lookup (```.w```): Lookup expression (default: tangorin.com with firefox)\n* conditional: Lookup expression if the search gave a unique result\n* primitive (```.p```): Try to find kanji by specifying primitives (this requires an additional file that contains all the kanji stories of the user)\n\nThe current mode is displayed by the prompt.\n\nIf the input matches more than one result, no action will be performed, regardless of the current mode.\n\n## More on searching\n\nIf a keyword contains a space, substitute ```_```:\n\n    (default) sign_of_the_hog\n        \u4ea5\n\n```word+``` will look for all keywords of the form \"word1 word2 word3\" where word matches (exactly) one of the words. \n\n    (default) fish+\n        \u4e59: fish guts\n        \u9b5a: fish\n        \u9c2d: fish fin\n\n    (default) fin+\n        \u9c2d\n\n    (default) fish+ thunder\n        \u4e59\u9b5a\u9c2d\u96f7\n        \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n        \u4e59: fish guts\n        \u9b5a: fish\n        \u9c2d: fish fin\n\n\n```word?``` will look for all keywords that contain \"word\":\n\n    (default) fish?\n        \u8c9d: shellfish\n        \u4e59: fish guts\n        \u9b5a: fish\n        \u6f01: fishing\n        \u6063: selfish\n        \u9c2d: fish fin\n\n    (default) fin?\n        \u6307: finger\n        \u68fa: coffin\n        \u7dfb: fine\n        \u7e01: affinity\n        \u7cbe: refined\n        \u6e08: finish\n        \u5a49: well finished\n        \u9c2d: fish fin\n\n    (default) fish? thunder\n        \u8c9d\u4e59\u9b5a\u6f01\u6063\u9c2d\u96f7\n        \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n        \u8c9d: shellfish\n        \u4e59: fish guts\n        \u9b5a: fish\n        \u6f01: fishing\n        \u6063: selfish\n        \u9c2d: fish fin\n\nYou can mix multiple search options:\n\n## Issues, Suggestions, Feature Requests etc.\n\nOpen a ticket at [this addon's gitbucket issue page](https://github.com/klieret/rtk-lookup/issues). Suggestions and feature requests are welcome as well!\n\n## Contributors\n\n* [Kilian Lieret](https://github.com/klieret)\n* [Kavin Ruengprateepsang](https://github.com/kavinvin)\n\n## License\n\nGNU AGPL, version 3 or later. The list of all kanji by heisig number ```RTK.tsv``` was included in an Anki plugin with copyright Ian Worthington <Worthy.vii@gmail.com>, GNU GPL, version 3 or later.\n\n## History\n\n* 23 Oct 2017: Moved repository to github.\n* 05 Aug 2015: Series of bigger changes.\n* 31 Mai 2015: First version released.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/klieret/rtk-lookup", "keywords": "", "license": "AGPLv3.0+", "maintainer": "", "maintainer_email": "", "name": "rtk-lookup", "package_url": "https://pypi.org/project/rtk-lookup/", "platform": "", "project_url": "https://pypi.org/project/rtk-lookup/", "project_urls": {"Homepage": "https://github.com/klieret/rtk-lookup"}, "release_url": "https://pypi.org/project/rtk-lookup/1.0.0/", "requires_dist": ["colorama", "romkan", "colorlog"], "requires_python": ">=3.5", "summary": "A command line program that helps looking up kanji in James Heisig's book", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Lookup Kanji by Heisig Keyword or frame number</h1>\n<h2>Short Description</h2>\n<p>For people who learn kanji with the book by\nJames Heisig (<a href=\"https://en.wikipedia.org/wiki/Remembering_the_Kanji_and_Remembering_the_Hanzi\" rel=\"nofollow\">remembering the kanji</a>).</p>\n<p>A little command line interface that allows to look up multiple kanji with</p>\n<ul>\n<li>The keyword (or parts of it)</li>\n<li>Parts of the mneomic/story</li>\n<li>The frame number</li>\n</ul>\n<p><img alt=\"3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f3be8d72a387b5ef63f2f1cccfb2e804607259f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6b6c69657265742f726561646d652d66696c65732f6d61737465722f72746b2d6c6f6f6b75702f7363726f745f332e706e67\"></p>\n<h2>Installation:</h2>\n<p>Installation with python package manager:</p>\n<pre><code>pip3 install --user --upgrade rtk-lookup\n</code></pre>\n<p>The command line interface can then be started with</p>\n<pre><code>rtk\n</code></pre>\n<p>If this doesn't work, you can use</p>\n<pre><code>python3 -m rtklookup \n</code></pre>\n<p>or add <code>~/.local/bin/</code> to your <code>$PATH</code> variable.</p>\n<p>Installing latest development version:</p>\n<pre><code>git clone https://github.com/klieret/rtk-lookup.git\ncd rtk-lookup\npip3 install --editable --user .\n</code></pre>\n<p>To search through your own stories/menmonic, you need to supply them via a text file (e.g. download them from <a href=\"https://kanji.koohii.com/\" rel=\"nofollow\">kanji.koohii</a>).</p>\n<h2>Basic searching</h2>\n<pre><code>(default) large resist\n    \u5927\u62b5\n(default) 107 1832\n    \u5927\u62b5\n(default) large 1832\n    \u5927\u62b5\n</code></pre>\n<p>If words are not found, they are converted to hiragana if the <code>romkan</code> module is installed (optional).\nThis <code>romkan</code> module which can be downloaded <a href=\"https://pypi.python.org/pypi/romkan\" rel=\"nofollow\">here</a>.</p>\n<p>Examples:</p>\n<pre><code>(default) large \u3066\u3044\n    \u5927\u3066\u3044\n(default) large \u62b5\n    \u5927\u62b5\n(default) large tei\n    \u5927\u3066\u3044\n</code></pre>\n<p>You can also lookup english keyword with kanji too</p>\n<pre><code>(default) \u8b72\n    \u8b72: defer\n(default) \u56f3\u66f8\u9928\n    \u56f3: map\n    \u66f8: write\n    \u9928: bldg.\n</code></pre>\n<p>To quit, type <code>.q</code>.</p>\n<h2>Modes</h2>\n<p>There are four modes (in parenthesis: command to activate mode)</p>\n<ul>\n<li>default (<code>.d</code>): Do nothing.</li>\n<li>copy (<code>.c</code>): Copy result to clipboard.</li>\n<li>lookup (<code>.w</code>): Lookup expression (default: tangorin.com with firefox)</li>\n<li>conditional: Lookup expression if the search gave a unique result</li>\n<li>primitive (<code>.p</code>): Try to find kanji by specifying primitives (this requires an additional file that contains all the kanji stories of the user)</li>\n</ul>\n<p>The current mode is displayed by the prompt.</p>\n<p>If the input matches more than one result, no action will be performed, regardless of the current mode.</p>\n<h2>More on searching</h2>\n<p>If a keyword contains a space, substitute <code>_</code>:</p>\n<pre><code>(default) sign_of_the_hog\n    \u4ea5\n</code></pre>\n<p><code>word+</code> will look for all keywords of the form \"word1 word2 word3\" where word matches (exactly) one of the words.</p>\n<pre><code>(default) fish+\n    \u4e59: fish guts\n    \u9b5a: fish\n    \u9c2d: fish fin\n\n(default) fin+\n    \u9c2d\n\n(default) fish+ thunder\n    \u4e59\u9b5a\u9c2d\u96f7\n    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    \u4e59: fish guts\n    \u9b5a: fish\n    \u9c2d: fish fin\n</code></pre>\n<p><code>word?</code> will look for all keywords that contain \"word\":</p>\n<pre><code>(default) fish?\n    \u8c9d: shellfish\n    \u4e59: fish guts\n    \u9b5a: fish\n    \u6f01: fishing\n    \u6063: selfish\n    \u9c2d: fish fin\n\n(default) fin?\n    \u6307: finger\n    \u68fa: coffin\n    \u7dfb: fine\n    \u7e01: affinity\n    \u7cbe: refined\n    \u6e08: finish\n    \u5a49: well finished\n    \u9c2d: fish fin\n\n(default) fish? thunder\n    \u8c9d\u4e59\u9b5a\u6f01\u6063\u9c2d\u96f7\n    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    \u8c9d: shellfish\n    \u4e59: fish guts\n    \u9b5a: fish\n    \u6f01: fishing\n    \u6063: selfish\n    \u9c2d: fish fin\n</code></pre>\n<p>You can mix multiple search options:</p>\n<h2>Issues, Suggestions, Feature Requests etc.</h2>\n<p>Open a ticket at <a href=\"https://github.com/klieret/rtk-lookup/issues\" rel=\"nofollow\">this addon's gitbucket issue page</a>. Suggestions and feature requests are welcome as well!</p>\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/klieret\" rel=\"nofollow\">Kilian Lieret</a></li>\n<li><a href=\"https://github.com/kavinvin\" rel=\"nofollow\">Kavin Ruengprateepsang</a></li>\n</ul>\n<h2>License</h2>\n<p>GNU AGPL, version 3 or later. The list of all kanji by heisig number <code>RTK.tsv</code> was included in an Anki plugin with copyright Ian Worthington <a href=\"mailto:Worthy.vii@gmail.com\">Worthy.vii@gmail.com</a>, GNU GPL, version 3 or later.</p>\n<h2>History</h2>\n<ul>\n<li>23 Oct 2017: Moved repository to github.</li>\n<li>05 Aug 2015: Series of bigger changes.</li>\n<li>31 Mai 2015: First version released.</li>\n</ul>\n\n          </div>"}, "last_serial": 5656770, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "37212a6cbe5955a63602f26da0d77aa9", "sha256": "0bcbe3da036c7e8eb0de4b608836260d5723c214ee9e71cc6c05c08fcc4ea94c"}, "downloads": -1, "filename": "rtk_lookup-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "37212a6cbe5955a63602f26da0d77aa9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 55547, "upload_time": "2019-08-05T13:05:29", "upload_time_iso_8601": "2019-08-05T13:05:29.202784Z", "url": "https://files.pythonhosted.org/packages/f3/35/e28b6d5a3e643274c757280cc2bf640229063212284b75f159b9c6123cbd/rtk_lookup-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8ae1310b519707419ec1aaf9b1d243a", "sha256": "1bf6a7f72953333d15da33cdb9448095c750e3979b0c82ef920ccb17aaf5b74f"}, "downloads": -1, "filename": "rtk-lookup-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a8ae1310b519707419ec1aaf9b1d243a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 50623, "upload_time": "2019-08-05T13:05:31", "upload_time_iso_8601": "2019-08-05T13:05:31.916275Z", "url": "https://files.pythonhosted.org/packages/b8/17/ab681e212bd10255a247ff6affbbb8bf9c5ffb612bc18fc69d3ba65e5e46/rtk-lookup-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "71eaf0eb258d375ced16d4d4647359ba", "sha256": "7bdafc13694246561b918ecd6a056b0066ef70d57147ec3f3ec23db687f57a28"}, "downloads": -1, "filename": "rtk_lookup-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "71eaf0eb258d375ced16d4d4647359ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 52725, "upload_time": "2019-08-05T13:22:26", "upload_time_iso_8601": "2019-08-05T13:22:26.032841Z", "url": "https://files.pythonhosted.org/packages/f8/7a/ec7da7619869e282c95ab79c14a7e1b9b45190afee636c6bc0f86a40d758/rtk_lookup-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5da90f9f32546a730205086fedc0bb77", "sha256": "ba7d8d62e386767b622c1143110a3eeb0f9cb5f645fb30af83bbfcfee93b0621"}, "downloads": -1, "filename": "rtk-lookup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5da90f9f32546a730205086fedc0bb77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 50629, "upload_time": "2019-08-05T13:22:27", "upload_time_iso_8601": "2019-08-05T13:22:27.803892Z", "url": "https://files.pythonhosted.org/packages/6f/66/4c9770608200c314428924e9f45e44c5e8c47a5abd23e29bac052fe25c68/rtk-lookup-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "343effc75d0e1c4089159e004b5be117", "sha256": "18d34843221cd1a509d8c7ebc312fda757d62ee573b7324e8d98dbd326b6082d"}, "downloads": -1, "filename": "rtk_lookup-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "343effc75d0e1c4089159e004b5be117", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53203, "upload_time": "2019-08-09T16:46:34", "upload_time_iso_8601": "2019-08-09T16:46:34.288550Z", "url": "https://files.pythonhosted.org/packages/96/50/d45396ace2b0939af82d9f78dedfb40c7def136682283ba74ba876e35bcb/rtk_lookup-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c62e0c82688d226bbd3c1e45a9fff03", "sha256": "958bdc58083092fab15da022fbb7a407694924c36ae969b2ed154fb3bb8232b2"}, "downloads": -1, "filename": "rtk-lookup-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0c62e0c82688d226bbd3c1e45a9fff03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 52925, "upload_time": "2019-08-09T16:46:36", "upload_time_iso_8601": "2019-08-09T16:46:36.248525Z", "url": "https://files.pythonhosted.org/packages/21/65/8dd7a9f9430f94d19b3a65265f3b653a838bf423ef12ede63b3de25eb1a3/rtk-lookup-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "343effc75d0e1c4089159e004b5be117", "sha256": "18d34843221cd1a509d8c7ebc312fda757d62ee573b7324e8d98dbd326b6082d"}, "downloads": -1, "filename": "rtk_lookup-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "343effc75d0e1c4089159e004b5be117", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 53203, "upload_time": "2019-08-09T16:46:34", "upload_time_iso_8601": "2019-08-09T16:46:34.288550Z", "url": "https://files.pythonhosted.org/packages/96/50/d45396ace2b0939af82d9f78dedfb40c7def136682283ba74ba876e35bcb/rtk_lookup-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c62e0c82688d226bbd3c1e45a9fff03", "sha256": "958bdc58083092fab15da022fbb7a407694924c36ae969b2ed154fb3bb8232b2"}, "downloads": -1, "filename": "rtk-lookup-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0c62e0c82688d226bbd3c1e45a9fff03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 52925, "upload_time": "2019-08-09T16:46:36", "upload_time_iso_8601": "2019-08-09T16:46:36.248525Z", "url": "https://files.pythonhosted.org/packages/21/65/8dd7a9f9430f94d19b3a65265f3b653a838bf423ef12ede63b3de25eb1a3/rtk-lookup-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:27 2020"}