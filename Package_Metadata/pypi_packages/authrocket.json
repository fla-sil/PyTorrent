{"info": {"author": "Nathan Reynolds", "author_email": "email@nreynolds.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Topic :: Software Development"], "description": "AuthRocket\n==========\n\nUnofficial `AuthRocket`_ `API`_ client. Extends the Requests library,\nprovides a few helper functions.\n\nSee also\n--------\n\nThe `Requests`_ documentation.\n\nMaking a request\n----------------\n\n.. code:: python\n\n    import authrocket\n\n    # Create an API object.\n    # Config values can be found on your realm's integration page.\n    api = authrocket.API(\n        url=\"https://api-e1.authrocket.com/v1/\",\n        key=\"ko_XYZ\", # Must start with `ko_`, rather than old-style `key_`\n        realm_id=\"rl_ABC\"\n    )\n\n    # Fetch the first page of users.\n    response = api.get(\"users\")\n    print response.json()\n\nPagination\n----------\n\nUse ``iter_from_pages`` to handle paginated responses:\n\n.. code:: python\n\n    for user in api.iter_from_pages(\"GET\", \"users\"):\n        print user\n\nPath variables\n--------------\n\nSome APIs take variables via the path, e.g \u201cusers/123\u201d. Rather than use\nstring interpolation, you should pass these via the ``variables``\nargument - it\u2019s more secure. For example:\n\n.. code:: python\n\n    response = api.get(\"user/{id}\", variables={\"id\": \"123\"})\n    print response.json()\n\n.. _AuthRocket: https://authrocket.com/\n.. _API: https://authrocket.com/docs/api\n.. _Requests: http://docs.python-requests.org/en/master/\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nathforge/authrocket", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "authrocket", "package_url": "https://pypi.org/project/authrocket/", "platform": "", "project_url": "https://pypi.org/project/authrocket/", "project_urls": {"Homepage": "https://github.com/nathforge/authrocket"}, "release_url": "https://pypi.org/project/authrocket/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Unofficial AuthRocket API client", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Unofficial <a href=\"https://authrocket.com/\" rel=\"nofollow\">AuthRocket</a> <a href=\"https://authrocket.com/docs/api\" rel=\"nofollow\">API</a> client. Extends the Requests library,\nprovides a few helper functions.</p>\n<div id=\"see-also\">\n<h2>See also</h2>\n<p>The <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">Requests</a> documentation.</p>\n</div>\n<div id=\"making-a-request\">\n<h2>Making a request</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">authrocket</span>\n\n<span class=\"c1\"># Create an API object.</span>\n<span class=\"c1\"># Config values can be found on your realm's integration page.</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">authrocket</span><span class=\"o\">.</span><span class=\"n\">API</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"https://api-e1.authrocket.com/v1/\"</span><span class=\"p\">,</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"ko_XYZ\"</span><span class=\"p\">,</span> <span class=\"c1\"># Must start with `ko_`, rather than old-style `key_`</span>\n    <span class=\"n\">realm_id</span><span class=\"o\">=</span><span class=\"s2\">\"rl_ABC\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch the first page of users.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"users\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"pagination\">\n<h2>Pagination</h2>\n<p>Use <tt>iter_from_pages</tt> to handle paginated responses:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">user</span> <span class=\"ow\">in</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">iter_from_pages</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"users\"</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"n\">user</span>\n</pre>\n</div>\n<div id=\"path-variables\">\n<h2>Path variables</h2>\n<p>Some APIs take variables via the path, e.g \u201cusers/123\u201d. Rather than use\nstring interpolation, you should pass these via the <tt>variables</tt>\nargument - it\u2019s more secure. For example:</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"user/</span><span class=\"si\">{id}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123\"</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2448954, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "48a2bb3cc64edb45dcb51666e5f39c5d", "sha256": "c01e849d4c4d7a39d9ace874e936e4a555109ddd9b5bc7dd8e9396b6d0106f8a"}, "downloads": -1, "filename": "authrocket-0.1.0.tar.gz", "has_sig": false, "md5_digest": "48a2bb3cc64edb45dcb51666e5f39c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3076, "upload_time": "2016-11-04T14:22:02", "upload_time_iso_8601": "2016-11-04T14:22:02.655463Z", "url": "https://files.pythonhosted.org/packages/0a/71/08186f00307264ab1cee3eb9c57382c623e703db757b90a85b573aa5bff4/authrocket-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "14667e3f07190b11f96c98b48d32cff4", "sha256": "50b20bb7e5693295e9e7fdbc7364a4449c127b733ce9aa95538ac7d43108dac4"}, "downloads": -1, "filename": "authrocket-0.1.1.tar.gz", "has_sig": false, "md5_digest": "14667e3f07190b11f96c98b48d32cff4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3077, "upload_time": "2016-11-08T13:19:04", "upload_time_iso_8601": "2016-11-08T13:19:04.286057Z", "url": "https://files.pythonhosted.org/packages/e3/b2/173a24903bc3bf926ffbb507015a953cf4aa8b47020d613b57d8d13ef360/authrocket-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14667e3f07190b11f96c98b48d32cff4", "sha256": "50b20bb7e5693295e9e7fdbc7364a4449c127b733ce9aa95538ac7d43108dac4"}, "downloads": -1, "filename": "authrocket-0.1.1.tar.gz", "has_sig": false, "md5_digest": "14667e3f07190b11f96c98b48d32cff4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3077, "upload_time": "2016-11-08T13:19:04", "upload_time_iso_8601": "2016-11-08T13:19:04.286057Z", "url": "https://files.pythonhosted.org/packages/e3/b2/173a24903bc3bf926ffbb507015a953cf4aa8b47020d613b57d8d13ef360/authrocket-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:22 2020"}