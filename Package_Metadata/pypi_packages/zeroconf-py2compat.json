{"info": {"author": "Paul Scott-Murphy, William McBrine, Jakub Stasiak, Jamie Alexandre", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries"], "description": "python-zeroconf-py2compat\n=========================\n\nThis is a fork of pyzeroconf, Multicast DNS Service Discovery for Python,\noriginally by Paul Scott-Murphy (https://github.com/paulsm/pyzeroconf),\nmodified by William McBrine (https://github.com/wmcbrine/pyzeroconf),\nand then further modified (off the 0.19.1 tag, the last to support Py2.7)\nby Jamie Alexandre (https://github.com/learningequality/python-zeroconf).\n\nCompatible with:\n\n* Bonjour\n* Avahi\n\nCompared to some other Zeroconf/Bonjour/Avahi Python packages, python-zeroconf:\n\n* isn't tied to Bonjour or Avahi\n* doesn't use D-Bus\n* doesn't force you to use particular event loop or Twisted\n* is pip-installable\n\nPython compatibility\n--------------------\n\n* CPython 2.7, 3.3+\n* PyPy 2.2+ (possibly 1.9-2.1 as well)\n* PyPy3 2.4+\n\nVersioning\n----------\n\nThis project's versions follow the following pattern: MAJOR.MINOR.PATCH.\n\n* MAJOR version has been 0 so far\n* MINOR version is incremented on backward incompatible changes\n* PATCH version is incremented on backward compatible changes\n\nStatus\n------\n\nThere are some people using this package. I don't actively use it and as such\nany help I can offer with regard to any issues is very limited.\n\n\nHow to get python-zeroconf-py2compat?\n=====================================\n\n* PyPI page https://pypi.python.org/pypi/zeroconf-py2compat\n* GitHub project https://github.com/learningequality/python-zeroconf-py2compat\n\nThe easiest way to install python-zeroconf-py2compat is using pip::\n\n    pip install zeroconf-py2compat\n\n\n\nHow do I use it?\n================\n\nHere's an example of browsing for a service:\n\n.. code-block:: python\n\n    from six.moves import input\n    from zeroconf import ServiceBrowser, Zeroconf\n\n\n    class MyListener(object):\n\n        def remove_service(self, zeroconf, type, name):\n            print(\"Service %s removed\" % (name,))\n\n        def add_service(self, zeroconf, type, name):\n            info = zeroconf.get_service_info(type, name)\n            print(\"Service %s added, service info: %s\" % (name, info))\n\n\n    zeroconf = Zeroconf()\n    listener = MyListener()\n    browser = ServiceBrowser(zeroconf, \"_http._tcp.local.\", listener)\n    try:\n        input(\"Press enter to exit...\\n\\n\")\n    finally:\n        zeroconf.close()\n\n.. note::\n\n    Discovery and service registration use *all* available network interfaces by default.\n    If you want to customize that you need to specify ``interfaces`` argument when\n    constructing ``Zeroconf`` object (see the code for details).\n\nIf you don't know the name of the service you need to browse for, try:\n\n.. code-block:: python\n\n    from zeroconf import ZeroconfServiceTypes\n    print('\\n'.join(ZeroconfServiceTypes.find()))\n\nSee examples directory for more.\n\nChangelog\n=========\n\n0.19.5\n------\nAdd support for Android, via pyjnius.\n\n0.19.4\n------\nVendored enum compat.\n\n0.19.3\n------\n* Fix to setup.py, so as to actually include zeroconf.py!\n\n0.19.2 (first release in learningequality/python-zeroconf-py2compat)\n--------------------------------------------------------------------\n* Replace C-based netifaces with pure-Python ifcfg for portability\n* Allow the DNS A record address to be determined by outgoing interface IP\n* Refresh ServiceBrowser entries already when 'stale' (backport from 0.20.0)\n* Add new records first in cache entry instead of last (backport from 0.20.0)\n* Correct broken __eq__ in child classes to DNSRecord (backport from 0.20.0)\n* Fix TTL handling for published service, and use RFC6762 (backport from 0.21.0)\n* Fix UnboundLocalError for count after loop (backport from 0.21.0)\n* Fix UTF-8 multibyte name compression (backport from 0.21.0)\n* Fix a logging call (backport from 0.21.0)\n* Fix service removal packets not being sent on shutdown (backport from 0.22.0)\n* MyListener callback on service TXT record changes (backport from 0.23.0)\n\n0.19.1\n------\n\n* Allowed installation with netifaces >= 0.10.6 (a bug that was concerning us\n  got fixed)\n\n0.19.0\n------\n\n* Technically backwards incompatible - restricted netifaces dependency version to\n  work around a bug, see https://github.com/jstasiak/python-zeroconf/issues/84 for\n  details\n\n0.18.0\n------\n\n* Dropped Python 2.6 support\n* Improved error handling inside code executed when Zeroconf object is being closed\n\n0.17.7\n------\n\n* Better Handling of DNS Incoming Packets parsing exceptions\n* Many exceptions will now log a warning the first time they are seen\n* Catch and log sendto() errors\n* Fix/Implement duplicate name change\n* Fix overly strict name validation introduced in 0.17.6\n* Greatly improve handling of oversized packets including:\n\n  - Implement name compression per RFC1035\n  - Limit size of generated packets to 9000 bytes as per RFC6762\n  - Better handle over sized incoming packets\n\n* Increased test coverage to 95%\n\n0.17.6\n------\n\n* Many improvements to address race conditions and exceptions during ZC()\n  startup and shutdown, thanks to: morpav, veawor, justingiorgi, herczy,\n  stephenrauch\n* Added more test coverage: strahlex, stephenrauch\n* Stephen Rauch contributed:\n\n  - Speed up browser startup\n  - Add ZeroconfServiceTypes() query class to discover all advertised service types\n  - Add full validation for service names, types and subtypes\n  - Fix for subtype browsing\n  - Fix DNSHInfo support\n\n0.17.5\n------\n\n* Fixed OpenBSD compatibility, thanks to Alessio Sergi\n* Fixed race condition on ServiceBrowser startup, thanks to gbiddison\n* Fixed installation on some Python 3 systems, thanks to Per Sandstr\u00f6m\n* Fixed \"size change during iteration\" bug on Python 3, thanks to gbiddison\n\n0.17.4\n------\n\n* Fixed support for Linux kernel versions < 3.9 (thanks to Giovanni Harting\n  and Luckydonald, GitHub pull request #26)\n\n0.17.3\n------\n\n* Fixed DNSText repr on Python 3 (it'd crash when the text was longer than\n  10 bytes), thanks to Paulus Schoutsen for the patch, GitHub pull request #24\n\n0.17.2\n------\n\n* Fixed installation on Python 3.4.3+ (was failing because of enum34 dependency\n  which fails to install on 3.4.3+, changed to depend on enum-compat instead;\n  thanks to Michael Brennan for the original patch, GitHub pull request #22)\n\n0.17.1\n------\n\n* Fixed EADDRNOTAVAIL when attempting to use dummy network interfaces on Windows,\n  thanks to daid\n\n0.17.0\n------\n\n* Added some Python dependencies so it's not zero-dependencies anymore\n* Improved exception handling (it'll be quieter now)\n* Messages are listened to and sent using all available network interfaces\n  by default (configurable); thanks to Marcus M\u00fcller\n* Started using logging more freely\n* Fixed a bug with binary strings as property values being converted to False\n  (https://github.com/jstasiak/python-zeroconf/pull/10); thanks to Dr. Seuss\n* Added new ``ServiceBrowser`` event handler interface (see the examples)\n* PyPy3 now officially supported\n* Fixed ServiceInfo repr on Python 3, thanks to Yordan Miladinov\n\n0.16.0\n------\n\n* Set up Python logging and started using it\n* Cleaned up code style (includes migrating from camel case to snake case)\n\n0.15.1\n------\n\n* Fixed handling closed socket (GitHub #4)\n\n0.15\n----\n\n* Forked by Jakub Stasiak\n* Made Python 3 compatible\n* Added setup script, made installable by pip and uploaded to PyPI\n* Set up Travis build\n* Reformatted the code and moved files around\n* Stopped catching BaseException in several places, that could hide errors\n* Marked threads as daemonic, they won't keep application alive now\n\n0.14\n----\n\n* Fix for SOL_IP undefined on some systems - thanks Mike Erdely.\n* Cleaned up examples.\n* Lowercased module name.\n\n0.13\n----\n\n* Various minor changes; see git for details.\n* No longer compatible with Python 2.2. Only tested with 2.5-2.7.\n* Fork by William McBrine.\n\n0.12\n----\n\n* allow selection of binding interface\n* typo fix - Thanks A. M. Kuchlingi\n* removed all use of word 'Rendezvous' - this is an API change\n\n0.11\n----\n\n* correction to comments for addListener method\n* support for new record types seen from OS X\n  - IPv6 address\n  - hostinfo\n\n* ignore unknown DNS record types\n* fixes to name decoding\n* works alongside other processes using port 5353 (e.g. on Mac OS X)\n* tested against Mac OS X 10.3.2's mDNSResponder\n* corrections to removal of list entries for service browser\n\n0.10\n----\n\n* Jonathon Paisley contributed these corrections:\n\n  - always multicast replies, even when query is unicast\n  - correct a pointer encoding problem\n  - can now write records in any order\n  - traceback shown on failure\n  - better TXT record parsing\n  - server is now separate from name\n  - can cancel a service browser\n\n* modified some unit tests to accommodate these changes\n\n0.09\n----\n\n* remove all records on service unregistration\n* fix DOS security problem with readName\n\n0.08\n----\n\n* changed licensing to LGPL\n\n0.07\n----\n\n* faster shutdown on engine\n* pointer encoding of outgoing names\n* ServiceBrowser now works\n* new unit tests\n\n0.06\n----\n* small improvements with unit tests\n* added defined exception types\n* new style objects\n* fixed hostname/interface problem\n* fixed socket timeout problem\n* fixed add_service_listener() typo bug\n* using select() for socket reads\n* tested on Debian unstable with Python 2.2.2\n\n0.05\n----\n\n* ensure case insensitivty on domain names\n* support for unicast DNS queries\n\n0.04\n----\n\n* added some unit tests\n* added __ne__ adjuncts where required\n* ensure names end in '.local.'\n* timeout on receiving socket for clean shutdown\n\n\nLicense\n=======\n\nLGPL, see COPYING file for details.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/learningequality/python-zeroconf", "keywords": "Bonjour,Avahi,Zeroconf,Multicast DNS,Service Discovery,mDNS", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "zeroconf-py2compat", "package_url": "https://pypi.org/project/zeroconf-py2compat/", "platform": "unix", "project_url": "https://pypi.org/project/zeroconf-py2compat/", "project_urls": {"Homepage": "https://github.com/learningequality/python-zeroconf"}, "release_url": "https://pypi.org/project/zeroconf-py2compat/0.19.5/", "requires_dist": ["ifcfg", "six"], "requires_python": "", "summary": "Pure Python Multicast DNS Service Discovery Library (Bonjour/Avahi compatible)", "version": "0.19.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-zeroconf-py2compat\">\n<h2>python-zeroconf-py2compat</h2>\n<p>This is a fork of pyzeroconf, Multicast DNS Service Discovery for Python,\noriginally by Paul Scott-Murphy (<a href=\"https://github.com/paulsm/pyzeroconf\" rel=\"nofollow\">https://github.com/paulsm/pyzeroconf</a>),\nmodified by William McBrine (<a href=\"https://github.com/wmcbrine/pyzeroconf\" rel=\"nofollow\">https://github.com/wmcbrine/pyzeroconf</a>),\nand then further modified (off the 0.19.1 tag, the last to support Py2.7)\nby Jamie Alexandre (<a href=\"https://github.com/learningequality/python-zeroconf\" rel=\"nofollow\">https://github.com/learningequality/python-zeroconf</a>).</p>\n<p>Compatible with:</p>\n<ul>\n<li>Bonjour</li>\n<li>Avahi</li>\n</ul>\n<p>Compared to some other Zeroconf/Bonjour/Avahi Python packages, python-zeroconf:</p>\n<ul>\n<li>isn\u2019t tied to Bonjour or Avahi</li>\n<li>doesn\u2019t use D-Bus</li>\n<li>doesn\u2019t force you to use particular event loop or Twisted</li>\n<li>is pip-installable</li>\n</ul>\n<div id=\"python-compatibility\">\n<h3>Python compatibility</h3>\n<ul>\n<li>CPython 2.7, 3.3+</li>\n<li>PyPy 2.2+ (possibly 1.9-2.1 as well)</li>\n<li>PyPy3 2.4+</li>\n</ul>\n</div>\n<div id=\"versioning\">\n<h3>Versioning</h3>\n<p>This project\u2019s versions follow the following pattern: MAJOR.MINOR.PATCH.</p>\n<ul>\n<li>MAJOR version has been 0 so far</li>\n<li>MINOR version is incremented on backward incompatible changes</li>\n<li>PATCH version is incremented on backward compatible changes</li>\n</ul>\n</div>\n<div id=\"status\">\n<h3>Status</h3>\n<p>There are some people using this package. I don\u2019t actively use it and as such\nany help I can offer with regard to any issues is very limited.</p>\n</div>\n</div>\n<div id=\"how-to-get-python-zeroconf-py2compat\">\n<h2>How to get python-zeroconf-py2compat?</h2>\n<ul>\n<li>PyPI page <a href=\"https://pypi.python.org/pypi/zeroconf-py2compat\" rel=\"nofollow\">https://pypi.python.org/pypi/zeroconf-py2compat</a></li>\n<li>GitHub project <a href=\"https://github.com/learningequality/python-zeroconf-py2compat\" rel=\"nofollow\">https://github.com/learningequality/python-zeroconf-py2compat</a></li>\n</ul>\n<p>The easiest way to install python-zeroconf-py2compat is using pip:</p>\n<pre>pip install zeroconf-py2compat\n</pre>\n</div>\n<div id=\"how-do-i-use-it\">\n<h2>How do I use it?</h2>\n<p>Here\u2019s an example of browsing for a service:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">six.moves</span> <span class=\"kn\">import</span> <span class=\"nb\">input</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zeroconf</span> <span class=\"kn\">import</span> <span class=\"n\">ServiceBrowser</span><span class=\"p\">,</span> <span class=\"n\">Zeroconf</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyListener</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">remove_service</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">zeroconf</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Service </span><span class=\"si\">%s</span><span class=\"s2\"> removed\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_service</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">zeroconf</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">zeroconf</span><span class=\"o\">.</span><span class=\"n\">get_service_info</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Service </span><span class=\"si\">%s</span><span class=\"s2\"> added, service info: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">zeroconf</span> <span class=\"o\">=</span> <span class=\"n\">Zeroconf</span><span class=\"p\">()</span>\n<span class=\"n\">listener</span> <span class=\"o\">=</span> <span class=\"n\">MyListener</span><span class=\"p\">()</span>\n<span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">ServiceBrowser</span><span class=\"p\">(</span><span class=\"n\">zeroconf</span><span class=\"p\">,</span> <span class=\"s2\">\"_http._tcp.local.\"</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Press enter to exit...</span><span class=\"se\">\\n\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n    <span class=\"n\">zeroconf</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<div>\n<p>Note</p>\n<p>Discovery and service registration use <em>all</em> available network interfaces by default.\nIf you want to customize that you need to specify <tt>interfaces</tt> argument when\nconstructing <tt>Zeroconf</tt> object (see the code for details).</p>\n</div>\n<p>If you don\u2019t know the name of the service you need to browse for, try:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zeroconf</span> <span class=\"kn\">import</span> <span class=\"n\">ZeroconfServiceTypes</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ZeroconfServiceTypes</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">()))</span>\n</pre>\n<p>See examples directory for more.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.19.5</h3>\n<p>Add support for Android, via pyjnius.</p>\n</div>\n<div id=\"id2\">\n<h3>0.19.4</h3>\n<p>Vendored enum compat.</p>\n</div>\n<div id=\"id3\">\n<h3>0.19.3</h3>\n<ul>\n<li>Fix to setup.py, so as to actually include zeroconf.py!</li>\n</ul>\n</div>\n<div id=\"first-release-in-learningequality-python-zeroconf-py2compat\">\n<h3>0.19.2 (first release in learningequality/python-zeroconf-py2compat)</h3>\n<ul>\n<li>Replace C-based netifaces with pure-Python ifcfg for portability</li>\n<li>Allow the DNS A record address to be determined by outgoing interface IP</li>\n<li>Refresh ServiceBrowser entries already when \u2018stale\u2019 (backport from 0.20.0)</li>\n<li>Add new records first in cache entry instead of last (backport from 0.20.0)</li>\n<li>Correct broken __eq__ in child classes to DNSRecord (backport from 0.20.0)</li>\n<li>Fix TTL handling for published service, and use RFC6762 (backport from 0.21.0)</li>\n<li>Fix UnboundLocalError for count after loop (backport from 0.21.0)</li>\n<li>Fix UTF-8 multibyte name compression (backport from 0.21.0)</li>\n<li>Fix a logging call (backport from 0.21.0)</li>\n<li>Fix service removal packets not being sent on shutdown (backport from 0.22.0)</li>\n<li>MyListener callback on service TXT record changes (backport from 0.23.0)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.19.1</h3>\n<ul>\n<li>Allowed installation with netifaces &gt;= 0.10.6 (a bug that was concerning us\ngot fixed)</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.19.0</h3>\n<ul>\n<li>Technically backwards incompatible - restricted netifaces dependency version to\nwork around a bug, see <a href=\"https://github.com/jstasiak/python-zeroconf/issues/84\" rel=\"nofollow\">https://github.com/jstasiak/python-zeroconf/issues/84</a> for\ndetails</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.18.0</h3>\n<ul>\n<li>Dropped Python 2.6 support</li>\n<li>Improved error handling inside code executed when Zeroconf object is being closed</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.17.7</h3>\n<ul>\n<li>Better Handling of DNS Incoming Packets parsing exceptions</li>\n<li>Many exceptions will now log a warning the first time they are seen</li>\n<li>Catch and log sendto() errors</li>\n<li>Fix/Implement duplicate name change</li>\n<li>Fix overly strict name validation introduced in 0.17.6</li>\n<li>Greatly improve handling of oversized packets including:<ul>\n<li>Implement name compression per RFC1035</li>\n<li>Limit size of generated packets to 9000 bytes as per RFC6762</li>\n<li>Better handle over sized incoming packets</li>\n</ul>\n</li>\n<li>Increased test coverage to 95%</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.17.6</h3>\n<ul>\n<li>Many improvements to address race conditions and exceptions during ZC()\nstartup and shutdown, thanks to: morpav, veawor, justingiorgi, herczy,\nstephenrauch</li>\n<li>Added more test coverage: strahlex, stephenrauch</li>\n<li>Stephen Rauch contributed:<ul>\n<li>Speed up browser startup</li>\n<li>Add ZeroconfServiceTypes() query class to discover all advertised service types</li>\n<li>Add full validation for service names, types and subtypes</li>\n<li>Fix for subtype browsing</li>\n<li>Fix DNSHInfo support</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.17.5</h3>\n<ul>\n<li>Fixed OpenBSD compatibility, thanks to Alessio Sergi</li>\n<li>Fixed race condition on ServiceBrowser startup, thanks to gbiddison</li>\n<li>Fixed installation on some Python 3 systems, thanks to Per Sandstr\u00f6m</li>\n<li>Fixed \u201csize change during iteration\u201d bug on Python 3, thanks to gbiddison</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.17.4</h3>\n<ul>\n<li>Fixed support for Linux kernel versions &lt; 3.9 (thanks to Giovanni Harting\nand Luckydonald, GitHub pull request #26)</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.17.3</h3>\n<ul>\n<li>Fixed DNSText repr on Python 3 (it\u2019d crash when the text was longer than\n10 bytes), thanks to Paulus Schoutsen for the patch, GitHub pull request #24</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.17.2</h3>\n<ul>\n<li>Fixed installation on Python 3.4.3+ (was failing because of enum34 dependency\nwhich fails to install on 3.4.3+, changed to depend on enum-compat instead;\nthanks to Michael Brennan for the original patch, GitHub pull request #22)</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.17.1</h3>\n<ul>\n<li>Fixed EADDRNOTAVAIL when attempting to use dummy network interfaces on Windows,\nthanks to daid</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.17.0</h3>\n<ul>\n<li>Added some Python dependencies so it\u2019s not zero-dependencies anymore</li>\n<li>Improved exception handling (it\u2019ll be quieter now)</li>\n<li>Messages are listened to and sent using all available network interfaces\nby default (configurable); thanks to Marcus M\u00fcller</li>\n<li>Started using logging more freely</li>\n<li>Fixed a bug with binary strings as property values being converted to False\n(<a href=\"https://github.com/jstasiak/python-zeroconf/pull/10\" rel=\"nofollow\">https://github.com/jstasiak/python-zeroconf/pull/10</a>); thanks to Dr. Seuss</li>\n<li>Added new <tt>ServiceBrowser</tt> event handler interface (see the examples)</li>\n<li>PyPy3 now officially supported</li>\n<li>Fixed ServiceInfo repr on Python 3, thanks to Yordan Miladinov</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.16.0</h3>\n<ul>\n<li>Set up Python logging and started using it</li>\n<li>Cleaned up code style (includes migrating from camel case to snake case)</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.15.1</h3>\n<ul>\n<li>Fixed handling closed socket (GitHub #4)</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.15</h3>\n<ul>\n<li>Forked by Jakub Stasiak</li>\n<li>Made Python 3 compatible</li>\n<li>Added setup script, made installable by pip and uploaded to PyPI</li>\n<li>Set up Travis build</li>\n<li>Reformatted the code and moved files around</li>\n<li>Stopped catching BaseException in several places, that could hide errors</li>\n<li>Marked threads as daemonic, they won\u2019t keep application alive now</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.14</h3>\n<ul>\n<li>Fix for SOL_IP undefined on some systems - thanks Mike Erdely.</li>\n<li>Cleaned up examples.</li>\n<li>Lowercased module name.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.13</h3>\n<ul>\n<li>Various minor changes; see git for details.</li>\n<li>No longer compatible with Python 2.2. Only tested with 2.5-2.7.</li>\n<li>Fork by William McBrine.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.12</h3>\n<ul>\n<li>allow selection of binding interface</li>\n<li>typo fix - Thanks A. M. Kuchlingi</li>\n<li>removed all use of word \u2018Rendezvous\u2019 - this is an API change</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.11</h3>\n<ul>\n<li>correction to comments for addListener method</li>\n<li>support for new record types seen from OS X\n- IPv6 address\n- hostinfo</li>\n<li>ignore unknown DNS record types</li>\n<li>fixes to name decoding</li>\n<li>works alongside other processes using port 5353 (e.g. on Mac OS X)</li>\n<li>tested against Mac OS X 10.3.2\u2019s mDNSResponder</li>\n<li>corrections to removal of list entries for service browser</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>0.10</h3>\n<ul>\n<li>Jonathon Paisley contributed these corrections:<ul>\n<li>always multicast replies, even when query is unicast</li>\n<li>correct a pointer encoding problem</li>\n<li>can now write records in any order</li>\n<li>traceback shown on failure</li>\n<li>better TXT record parsing</li>\n<li>server is now separate from name</li>\n<li>can cancel a service browser</li>\n</ul>\n</li>\n<li>modified some unit tests to accommodate these changes</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>0.09</h3>\n<ul>\n<li>remove all records on service unregistration</li>\n<li>fix DOS security problem with readName</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>0.08</h3>\n<ul>\n<li>changed licensing to LGPL</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>0.07</h3>\n<ul>\n<li>faster shutdown on engine</li>\n<li>pointer encoding of outgoing names</li>\n<li>ServiceBrowser now works</li>\n<li>new unit tests</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>0.06</h3>\n<ul>\n<li>small improvements with unit tests</li>\n<li>added defined exception types</li>\n<li>new style objects</li>\n<li>fixed hostname/interface problem</li>\n<li>fixed socket timeout problem</li>\n<li>fixed add_service_listener() typo bug</li>\n<li>using select() for socket reads</li>\n<li>tested on Debian unstable with Python 2.2.2</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>0.05</h3>\n<ul>\n<li>ensure case insensitivty on domain names</li>\n<li>support for unicast DNS queries</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>0.04</h3>\n<ul>\n<li>added some unit tests</li>\n<li>added __ne__ adjuncts where required</li>\n<li>ensure names end in \u2018.local.\u2019</li>\n<li>timeout on receiving socket for clean shutdown</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>LGPL, see COPYING file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 6954065, "releases": {"0.19.3": [{"comment_text": "", "digests": {"md5": "160152ab627385b0085c71631d059147", "sha256": "34eef92efcc9f5da855dc17b1dcb5a97b5cda650ee95f54e9e0f726895a8dab6"}, "downloads": -1, "filename": "zeroconf_py2compat-0.19.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "160152ab627385b0085c71631d059147", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31394, "upload_time": "2019-06-20T17:51:00", "upload_time_iso_8601": "2019-06-20T17:51:00.157439Z", "url": "https://files.pythonhosted.org/packages/6f/9d/bab24c3601d2f2e53de05685253c2acdee64dade3825ff1b4a6c4c716177/zeroconf_py2compat-0.19.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6bd7375ca603e2f2ea1d7d0fc1c300c", "sha256": "f8f6d1b3a1a2e80f5f2e38a7d34ed3ebcee704eae0bfa946158d782cfc4af042"}, "downloads": -1, "filename": "zeroconf-py2compat-0.19.3.tar.gz", "has_sig": true, "md5_digest": "a6bd7375ca603e2f2ea1d7d0fc1c300c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26235, "upload_time": "2019-06-20T17:51:02", "upload_time_iso_8601": "2019-06-20T17:51:02.222314Z", "url": "https://files.pythonhosted.org/packages/2d/da/d6a4e535342b036beda626b16463523a9919cbff3ffd15bc6139f96d936b/zeroconf-py2compat-0.19.3.tar.gz", "yanked": false}], "0.19.4": [{"comment_text": "", "digests": {"md5": "c84c60728150f030d784afda5e7c96e1", "sha256": "5fe959eb8f5b3be8e6498b2a51557ba293dc192c82307f7d3bfdb8e06a3364a9"}, "downloads": -1, "filename": "zeroconf_py2compat-0.19.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c84c60728150f030d784afda5e7c96e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37026, "upload_time": "2019-12-10T17:34:31", "upload_time_iso_8601": "2019-12-10T17:34:31.921835Z", "url": "https://files.pythonhosted.org/packages/5a/17/f45466fa9353ce0cca1010d80bd6ac4489e790c982bc31aa888761b9f627/zeroconf_py2compat-0.19.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a8f850a1eedfaa5f6d39751893d1e1d", "sha256": "934afbc8a72d576ff18f0d04ad5b54e4ca014a3047db0229ebdb1c21c0c7d762"}, "downloads": -1, "filename": "zeroconf-py2compat-0.19.4.tar.gz", "has_sig": true, "md5_digest": "9a8f850a1eedfaa5f6d39751893d1e1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32118, "upload_time": "2019-12-10T17:34:34", "upload_time_iso_8601": "2019-12-10T17:34:34.401729Z", "url": "https://files.pythonhosted.org/packages/3d/af/9cdc6a831de9611cb8245c0a27c48fcc5bd9fb62e125388e053e12518b52/zeroconf-py2compat-0.19.4.tar.gz", "yanked": false}], "0.19.5": [{"comment_text": "", "digests": {"md5": "76bba26c96960c4668e8cf606d221551", "sha256": "2505bfbe9fa444b38cfe72fe1686ffc0ba5bef2810060d844e02e389eb2c5942"}, "downloads": -1, "filename": "zeroconf_py2compat-0.19.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "76bba26c96960c4668e8cf606d221551", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41079, "upload_time": "2020-04-05T05:28:52", "upload_time_iso_8601": "2020-04-05T05:28:52.479821Z", "url": "https://files.pythonhosted.org/packages/be/ef/c79f8b74e1c12d5397e288419b47dd706c2599f8ddfe031476ac2a667988/zeroconf_py2compat-0.19.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f21d154b55a89cc6a39a45398e6b2783", "sha256": "c7780108b72fa7940f30f041afa1f6f54e97fc3b42e165e548056c23d02d9fcc"}, "downloads": -1, "filename": "zeroconf-py2compat-0.19.5.tar.gz", "has_sig": true, "md5_digest": "f21d154b55a89cc6a39a45398e6b2783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36971, "upload_time": "2020-04-05T05:28:54", "upload_time_iso_8601": "2020-04-05T05:28:54.750548Z", "url": "https://files.pythonhosted.org/packages/71/fa/bebb3bf671db93ed4ec044f7bcb3168a14165206ad3fd1dc883bce65dbbe/zeroconf-py2compat-0.19.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76bba26c96960c4668e8cf606d221551", "sha256": "2505bfbe9fa444b38cfe72fe1686ffc0ba5bef2810060d844e02e389eb2c5942"}, "downloads": -1, "filename": "zeroconf_py2compat-0.19.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "76bba26c96960c4668e8cf606d221551", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41079, "upload_time": "2020-04-05T05:28:52", "upload_time_iso_8601": "2020-04-05T05:28:52.479821Z", "url": "https://files.pythonhosted.org/packages/be/ef/c79f8b74e1c12d5397e288419b47dd706c2599f8ddfe031476ac2a667988/zeroconf_py2compat-0.19.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f21d154b55a89cc6a39a45398e6b2783", "sha256": "c7780108b72fa7940f30f041afa1f6f54e97fc3b42e165e548056c23d02d9fcc"}, "downloads": -1, "filename": "zeroconf-py2compat-0.19.5.tar.gz", "has_sig": true, "md5_digest": "f21d154b55a89cc6a39a45398e6b2783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36971, "upload_time": "2020-04-05T05:28:54", "upload_time_iso_8601": "2020-04-05T05:28:54.750548Z", "url": "https://files.pythonhosted.org/packages/71/fa/bebb3bf671db93ed4ec044f7bcb3168a14165206ad3fd1dc883bce65dbbe/zeroconf-py2compat-0.19.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:43 2020"}