{"info": {"author": "pgjones", "author_email": "philip.graham.jones@googlemail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Quart-Auth\n==========\n\n|Build Status| |docs| |pypi| |python| |license|\n\nQuart-Auth is an extension for `Quart\n<https://gitlab.com/pgjones/quart>`_ to provide for secure cookie\nauthentication (session management). It allows for a session to be\nlogged in, authenticated and logged out.\n\nUsage\n-----\n\nTo use Quart-Auth with a Quart app you have to create an AuthManager and\ninitialise it with the application,\n\n.. code-block:: python\n\n    app = Quart(__name__)\n    AuthManager(app)\n\nor via the factory pattern,\n\n.. code-block:: python\n\n    auth_manager = AuthManager()\n\n    def create_app():\n        app = Quart(__name__)\n        auth_manager.init_app(app)\n        return app\n\nIn addition you will need to configure Quart-Auth, which defaults to\nthe most secure. At a minimum you will need to set secret key,\n\n.. code-block:: python\n\n    app.secret_key = \"secret key\"  # Do not use this key\n\nwhich you can generate via,\n\n.. code-block:: python\n\n    >>> import secrets\n    >>> secrets.token_urlsafe(16)\n\nTou may also need to disable secure cookies to use in development, see\nconfiguration below.\n\nWith AuthManager initialised you can use the ``login_required``\nfunction to decorate routes that should only be accessed by\nauthenticated users,\n\n.. code-block:: python\n\n    from quart_auth import login_required\n\n    @app.route(\"/\")\n    @login_required\n    async def restricted_route():\n        ...\n\nYou can also use the ``login_user``, and ``logout_user`` functions to\nstart and end sessions for a specific ``AuthenticatedUser`` instance,\n\n.. code-block:: python\n\n    from quart_auth import AuthUser, login_user, logout_user\n\n    @app.route(\"/login\")\n    async def login():\n        # Check Credentials here, e.g. username & password.\n        ...\n        # We'll assume the user has an identifying ID equal to 2\n        login_user(AuthUser(2))\n        ...\n\n    @app.route(\"/logout\")\n    async def logout():\n        logout_user()\n        ...\n\nThe user (authenticated or not) is available via the global\n``current_user`` including within templates,\n\n.. code-block:: python\n\n    from quart import render_template_string\n    from quart_auth import current_user\n\n    @app.route(\"/\")\n    async def user():\n        return await render_template_string(\"{{ current_user.is_authenticated }}\")\n\nContributing\n------------\n\nQuart-Auth is developed on `GitLab\n<https://gitlab.com/pgjones/quart-auth>`_. You are very welcome to\nopen `issues <https://gitlab.com/pgjones/quart-auth/issues>`_ or\npropose `merge requests\n<https://gitlab.com/pgjones/quart-auth/merge_requests>`_.\n\nTesting\n~~~~~~~\n\nThe best way to test Quart-Auth is with Tox,\n\n.. code-block:: console\n\n    $ pip install tox\n    $ tox\n\nthis will check the code style and run the tests.\n\nHelp\n----\n\nThis README is the best place to start, after that try opening an\n`issue <https://gitlab.com/pgjones/quart-auth/issues>`_.\n\n\n.. |Build Status| image:: https://gitlab.com/pgjones/quart-auth/badges/master/pipeline.svg\n   :target: https://gitlab.com/pgjones/quart-auth/commits/master\n\n.. |docs| image:: https://img.shields.io/badge/docs-passing-brightgreen.svg\n   :target: https://pgjones.gitlab.io/quart-auth/\n\n.. |pypi| image:: https://img.shields.io/pypi/v/quart-auth.svg\n   :target: https://pypi.python.org/pypi/Quart-Auth/\n\n.. |python| image:: https://img.shields.io/pypi/pyversions/quart-auth.svg\n   :target: https://pypi.python.org/pypi/Quart-Auth/\n\n.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg\n   :target: https://gitlab.com/pgjones/quart-auth/blob/master/LICENSE\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/pgjones/quart-auth/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "quart-auth", "package_url": "https://pypi.org/project/quart-auth/", "platform": "", "project_url": "https://pypi.org/project/quart-auth/", "project_urls": {"Homepage": "https://gitlab.com/pgjones/quart-auth/", "Repository": "https://gitlab.com/pgjones/quart-auth/"}, "release_url": "https://pypi.org/project/quart-auth/0.3.0/", "requires_dist": ["quart (>=0.11)"], "requires_python": ">=3.7", "summary": "A Quart extension to provide secure cookie authentication", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitlab.com/pgjones/quart-auth/commits/master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d78287424dff4361cefcab5d23f21bf2c6d37f0/68747470733a2f2f6769746c61622e636f6d2f70676a6f6e65732f71756172742d617574682f6261646765732f6d61737465722f706970656c696e652e737667\"></a> <a href=\"https://pgjones.gitlab.io/quart-auth/\" rel=\"nofollow\"><img alt=\"docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0a325716db49cd1643978115d783c4048a974ac/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d70617373696e672d627269676874677265656e2e737667\"></a> <a href=\"https://pypi.python.org/pypi/Quart-Auth/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a85e57641aef007059aa9a4dc0ccc343d367ee0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f71756172742d617574682e737667\"></a> <a href=\"https://pypi.python.org/pypi/Quart-Auth/\" rel=\"nofollow\"><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ee6aea3c4d590e50d93e712767010891e87f53e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f71756172742d617574682e737667\"></a> <a href=\"https://gitlab.com/pgjones/quart-auth/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<p>Quart-Auth is an extension for <a href=\"https://gitlab.com/pgjones/quart\" rel=\"nofollow\">Quart</a> to provide for secure cookie\nauthentication (session management). It allows for a session to be\nlogged in, authenticated and logged out.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use Quart-Auth with a Quart app you have to create an AuthManager and\ninitialise it with the application,</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Quart</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">AuthManager</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<p>or via the factory pattern,</p>\n<pre><span class=\"n\">auth_manager</span> <span class=\"o\">=</span> <span class=\"n\">AuthManager</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">():</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Quart</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">auth_manager</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">app</span>\n</pre>\n<p>In addition you will need to configure Quart-Auth, which defaults to\nthe most secure. At a minimum you will need to set secret key,</p>\n<pre><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">secret_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"secret key\"</span>  <span class=\"c1\"># Do not use this key</span>\n</pre>\n<p>which you can generate via,</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">secrets</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">secrets</span><span class=\"o\">.</span><span class=\"n\">token_urlsafe</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n</pre>\n<p>Tou may also need to disable secure cookies to use in development, see\nconfiguration below.</p>\n<p>With AuthManager initialised you can use the <tt>login_required</tt>\nfunction to decorate routes that should only be accessed by\nauthenticated users,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">quart_auth</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@login_required</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">restricted_route</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>You can also use the <tt>login_user</tt>, and <tt>logout_user</tt> functions to\nstart and end sessions for a specific <tt>AuthenticatedUser</tt> instance,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">quart_auth</span> <span class=\"kn\">import</span> <span class=\"n\">AuthUser</span><span class=\"p\">,</span> <span class=\"n\">login_user</span><span class=\"p\">,</span> <span class=\"n\">logout_user</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/login\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Check Credentials here, e.g. username &amp; password.</span>\n    <span class=\"o\">...</span>\n    <span class=\"c1\"># We'll assume the user has an identifying ID equal to 2</span>\n    <span class=\"n\">login_user</span><span class=\"p\">(</span><span class=\"n\">AuthUser</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/logout\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">logout</span><span class=\"p\">():</span>\n    <span class=\"n\">logout_user</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>The user (authenticated or not) is available via the global\n<tt>current_user</tt> including within templates,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">quart</span> <span class=\"kn\">import</span> <span class=\"n\">render_template_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">quart_auth</span> <span class=\"kn\">import</span> <span class=\"n\">current_user</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">user</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">render_template_string</span><span class=\"p\">(</span><span class=\"s2\">\"{{ current_user.is_authenticated }}\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Quart-Auth is developed on <a href=\"https://gitlab.com/pgjones/quart-auth\" rel=\"nofollow\">GitLab</a>. You are very welcome to\nopen <a href=\"https://gitlab.com/pgjones/quart-auth/issues\" rel=\"nofollow\">issues</a> or\npropose <a href=\"https://gitlab.com/pgjones/quart-auth/merge_requests\" rel=\"nofollow\">merge requests</a>.</p>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>The best way to test Quart-Auth is with Tox,</p>\n<pre><span class=\"gp\">$</span> pip install tox\n<span class=\"gp\">$</span> tox\n</pre>\n<p>this will check the code style and run the tests.</p>\n</div>\n</div>\n<div id=\"help\">\n<h2>Help</h2>\n<p>This README is the best place to start, after that try opening an\n<a href=\"https://gitlab.com/pgjones/quart-auth/issues\" rel=\"nofollow\">issue</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7019305, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6c6ec0728df269bdb241e59c409061da", "sha256": "26e5dc3836c3884cbbeae78855f95cef6c8c613afd2472fcd12cbb5e778243ce"}, "downloads": -1, "filename": "quart_auth-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6c6ec0728df269bdb241e59c409061da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6322, "upload_time": "2020-03-08T18:21:04", "upload_time_iso_8601": "2020-03-08T18:21:04.854956Z", "url": "https://files.pythonhosted.org/packages/ff/89/387288390a496cfb18f62bfe046d97bf67f5350edce938f1910fb64afca6/quart_auth-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "705e255cf7c0b76915c0a5825f4d3f3c", "sha256": "4c1be4aa4f42f39376d43faae82eed4bf10a192676e9bb36156310c0ca827aae"}, "downloads": -1, "filename": "quart-auth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "705e255cf7c0b76915c0a5825f4d3f3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6675, "upload_time": "2020-03-08T18:21:02", "upload_time_iso_8601": "2020-03-08T18:21:02.581976Z", "url": "https://files.pythonhosted.org/packages/95/10/1d9a8a52c9ee5ca7ea45c31a5eb048ca28dadfcb6797773f51a6215aa3bd/quart-auth-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1f510e3c0f6fa14a5c9c008aa40cf7d6", "sha256": "c5105e0d9382d2971a473ce3e3db05d25d542aa74b82926db2b90898509eef56"}, "downloads": -1, "filename": "quart_auth-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1f510e3c0f6fa14a5c9c008aa40cf7d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6219, "upload_time": "2020-03-13T14:53:37", "upload_time_iso_8601": "2020-03-13T14:53:37.164369Z", "url": "https://files.pythonhosted.org/packages/46/7b/91113006a200295a0a7dbec1b852fb2c4cb357c494383109dbfb17f0cec5/quart_auth-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d0b2bb23a22b402bc3ce800b43e8cf3", "sha256": "ae0551126ec2581f2d4d56c1de1f907e021e27ae59e4ee0a5ecbf6da3c8da41d"}, "downloads": -1, "filename": "quart-auth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0d0b2bb23a22b402bc3ce800b43e8cf3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6607, "upload_time": "2020-03-13T14:53:35", "upload_time_iso_8601": "2020-03-13T14:53:35.885297Z", "url": "https://files.pythonhosted.org/packages/fb/98/fe7cdec171c577a6cbf58a877e0cd10ff55f45837ab01238149f6767f14d/quart-auth-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "cace9228b26612de0f30d1426517b42c", "sha256": "638c22d67dc27eaa11edcd63a8cc17812a551f4dc61d8056335dd75ab127cb5d"}, "downloads": -1, "filename": "quart_auth-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cace9228b26612de0f30d1426517b42c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5559, "upload_time": "2020-04-14T18:50:18", "upload_time_iso_8601": "2020-04-14T18:50:18.793018Z", "url": "https://files.pythonhosted.org/packages/86/69/495b6ed467fba9dd0ad7c6603e4064b724b5b86955e7f3bf247cfeaeed6d/quart_auth-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cc171bdc49087c902e52b31622cae4c", "sha256": "fecd762175313c96b6710857829feda522ab6ac96ecbad0a65ee18794891075f"}, "downloads": -1, "filename": "quart-auth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0cc171bdc49087c902e52b31622cae4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5730, "upload_time": "2020-04-14T18:50:17", "upload_time_iso_8601": "2020-04-14T18:50:17.584749Z", "url": "https://files.pythonhosted.org/packages/a7/8d/39d75e2e33e276498949535ef01944bce0124e68b9d6b3a1b49b8442a0f2/quart-auth-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cace9228b26612de0f30d1426517b42c", "sha256": "638c22d67dc27eaa11edcd63a8cc17812a551f4dc61d8056335dd75ab127cb5d"}, "downloads": -1, "filename": "quart_auth-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cace9228b26612de0f30d1426517b42c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5559, "upload_time": "2020-04-14T18:50:18", "upload_time_iso_8601": "2020-04-14T18:50:18.793018Z", "url": "https://files.pythonhosted.org/packages/86/69/495b6ed467fba9dd0ad7c6603e4064b724b5b86955e7f3bf247cfeaeed6d/quart_auth-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cc171bdc49087c902e52b31622cae4c", "sha256": "fecd762175313c96b6710857829feda522ab6ac96ecbad0a65ee18794891075f"}, "downloads": -1, "filename": "quart-auth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0cc171bdc49087c902e52b31622cae4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5730, "upload_time": "2020-04-14T18:50:17", "upload_time_iso_8601": "2020-04-14T18:50:17.584749Z", "url": "https://files.pythonhosted.org/packages/a7/8d/39d75e2e33e276498949535ef01944bce0124e68b9d6b3a1b49b8442a0f2/quart-auth-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:48 2020"}