{"info": {"author": "Pedro Torres", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.com/pedrohbtp/aws_signv4_mqtt.svg?branch=master)](https://travis-ci.com/pedrohbtp/aws_signv4_mqtt)\n[![Coverage Status](https://coveralls.io/repos/github/pedrohbtp/aws_signv4_mqtt/badge.svg?branch=master)](https://coveralls.io/github/pedrohbtp/aws_signv4_mqtt?branch=master)\n# aws_signv4_mqtt\nFunctions to generate aws signature v4 to use with AWS IOT MQTT\n\nI created this because I couldn't find a library to easily generate signed urls that you can use with amazon's MQTT for IOT in python.\nAll the libraries I could find would be to generate headers for HTTP requests and it wouldn't work with wss for MQTT.\n\nInspired by:\n  * https://gist.github.com/prestomation/24b959e51250a8723b9a5a4f70dcae08\n* https://gist.github.com/kn9ts/4b5a9942b6afbfc2534f2f14c87b9b54\n\n# Installing\n\n```bash\npip install aws-signv4-mqtt\n```\n\n# How to use use\n\nThere are two interfaces:\n```python\naws_signv4_mqtt.generate_signv4_mqtt( iot_host, iot_region, access_key, secret_key, session_token = None)\n```\n\nBasic interface to created the signed url.\n\n```python\naws_signv4_mqtt.generate_signv4_mqtt_boto( iot_host, iot_region)\n```\n\nGets the credentials from your environment or iam role internally using boto3.\n\n# Examples\n\n```python\nimport aws_signv4_mqtt\nprint(aws_signv4_mqtt.generate_signv4_mqtt('<your_iot>.iot.us-east-1.amazonaws.com', 'us-east-1', '<aws_access_key>', '<aws_secret>'))\n```\nPrints something like:\n```\nwss://<your_iot>.iot.us-east-1.amazonaws.com/mqtt?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=%3Caws_access_key%3E%2F20190216%2Fus-east-1%2Fiotdevicegateway%2Faws4_request&X-Amz-Date=20190216T115653Z&X-Amz-SignedHeaders=host&X-Amz-Signature=92bfc2b5a77489c5786a820044bf6c8ccb3c2f9b40c1d6a5f016b4d9c8662a5e\n```\n\n\n# Testing your url\n\nAfter you generate your url using AWS credentials with sufficient AWS IOT permissions, you can test it with any MQTT library.\n\nFor instance, you could execute the javascript code below:\n\n```javascript\nvar mqtt = require('mqtt')\nurl = '<your_signed_url>'\nport = 443\ntopic = '<your_topic>'\ni = 0\n\nvar client  = mqtt.connect(url,\n    {\n        connectTimeout:5*1000,\n        port: port,\n    })\n\nclient.on('connect', function () {\n  client.subscribe(topic, function (err) {\n    if (!err) {\n      client.publish(topic, 'Hello mqtt')\n    }\n  })\n})\n\nclient.on('message', function (topic, message) {\n  console.log(message.toString())\n  i = i+1\n  client.publish(topic, 'Hello mqtt '+String(i))\n})\n```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pedrohbtp/aws_signv4_mqtt", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aws-signv4-mqtt", "package_url": "https://pypi.org/project/aws-signv4-mqtt/", "platform": "", "project_url": "https://pypi.org/project/aws-signv4-mqtt/", "project_urls": {"Homepage": "https://github.com/pedrohbtp/aws_signv4_mqtt"}, "release_url": "https://pypi.org/project/aws-signv4-mqtt/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Utility to sign urls for aws mqtt", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/pedrohbtp/aws_signv4_mqtt\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dc7a698814cbafbbf935bc492ce243156309c94/68747470733a2f2f7472617669732d63692e636f6d2f706564726f686274702f6177735f7369676e76345f6d7174742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/pedrohbtp/aws_signv4_mqtt?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8177fbe4b03ab4eb4ec7de1bb47aecf8e2654c21/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706564726f686274702f6177735f7369676e76345f6d7174742f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>aws_signv4_mqtt</h1>\n<p>Functions to generate aws signature v4 to use with AWS IOT MQTT</p>\n<p>I created this because I couldn't find a library to easily generate signed urls that you can use with amazon's MQTT for IOT in python.\nAll the libraries I could find would be to generate headers for HTTP requests and it wouldn't work with wss for MQTT.</p>\n<p>Inspired by:</p>\n<ul>\n<li><a href=\"https://gist.github.com/prestomation/24b959e51250a8723b9a5a4f70dcae08\" rel=\"nofollow\">https://gist.github.com/prestomation/24b959e51250a8723b9a5a4f70dcae08</a></li>\n<li><a href=\"https://gist.github.com/kn9ts/4b5a9942b6afbfc2534f2f14c87b9b54\" rel=\"nofollow\">https://gist.github.com/kn9ts/4b5a9942b6afbfc2534f2f14c87b9b54</a></li>\n</ul>\n<h1>Installing</h1>\n<pre>pip install aws-signv4-mqtt\n</pre>\n<h1>How to use use</h1>\n<p>There are two interfaces:</p>\n<pre><span class=\"n\">aws_signv4_mqtt</span><span class=\"o\">.</span><span class=\"n\">generate_signv4_mqtt</span><span class=\"p\">(</span> <span class=\"n\">iot_host</span><span class=\"p\">,</span> <span class=\"n\">iot_region</span><span class=\"p\">,</span> <span class=\"n\">access_key</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"p\">,</span> <span class=\"n\">session_token</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Basic interface to created the signed url.</p>\n<pre><span class=\"n\">aws_signv4_mqtt</span><span class=\"o\">.</span><span class=\"n\">generate_signv4_mqtt_boto</span><span class=\"p\">(</span> <span class=\"n\">iot_host</span><span class=\"p\">,</span> <span class=\"n\">iot_region</span><span class=\"p\">)</span>\n</pre>\n<p>Gets the credentials from your environment or iam role internally using boto3.</p>\n<h1>Examples</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aws_signv4_mqtt</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">aws_signv4_mqtt</span><span class=\"o\">.</span><span class=\"n\">generate_signv4_mqtt</span><span class=\"p\">(</span><span class=\"s1\">'&lt;your_iot&gt;.iot.us-east-1.amazonaws.com'</span><span class=\"p\">,</span> <span class=\"s1\">'us-east-1'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;aws_access_key&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;aws_secret&gt;'</span><span class=\"p\">))</span>\n</pre>\n<p>Prints something like:</p>\n<pre><code>wss://&lt;your_iot&gt;.iot.us-east-1.amazonaws.com/mqtt?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=%3Caws_access_key%3E%2F20190216%2Fus-east-1%2Fiotdevicegateway%2Faws4_request&amp;X-Amz-Date=20190216T115653Z&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=92bfc2b5a77489c5786a820044bf6c8ccb3c2f9b40c1d6a5f016b4d9c8662a5e\n</code></pre>\n<h1>Testing your url</h1>\n<p>After you generate your url using AWS credentials with sufficient AWS IOT permissions, you can test it with any MQTT library.</p>\n<p>For instance, you could execute the javascript code below:</p>\n<pre><span class=\"kd\">var</span> <span class=\"nx\">mqtt</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'mqtt'</span><span class=\"p\">)</span>\n<span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your_signed_url&gt;'</span>\n<span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"mi\">443</span>\n<span class=\"nx\">topic</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your_topic&gt;'</span>\n<span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">client</span>  <span class=\"o\">=</span> <span class=\"nx\">mqtt</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span>\n        <span class=\"nx\">connectTimeout</span><span class=\"o\">:</span><span class=\"mi\">5</span><span class=\"o\">*</span><span class=\"mi\">1000</span><span class=\"p\">,</span>\n        <span class=\"nx\">port</span><span class=\"o\">:</span> <span class=\"nx\">port</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'connect'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span><span class=\"nx\">topic</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">publish</span><span class=\"p\">(</span><span class=\"nx\">topic</span><span class=\"p\">,</span> <span class=\"s1\">'Hello mqtt'</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">topic</span><span class=\"p\">,</span> <span class=\"nx\">message</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">message</span><span class=\"p\">.</span><span class=\"nx\">toString</span><span class=\"p\">())</span>\n  <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span>\n  <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">publish</span><span class=\"p\">(</span><span class=\"nx\">topic</span><span class=\"p\">,</span> <span class=\"s1\">'Hello mqtt '</span><span class=\"o\">+</span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">))</span>\n<span class=\"p\">})</span>\n</pre>\n\n          </div>"}, "last_serial": 4851290, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "30d50d74a8dc4f858aab2363624d0868", "sha256": "7b64047913c39bb23991f5f3f33af35a4c73fb6bf327110a913a766a12d8139c"}, "downloads": -1, "filename": "aws_signv4_mqtt-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "30d50d74a8dc4f858aab2363624d0868", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4244, "upload_time": "2019-02-16T14:14:17", "upload_time_iso_8601": "2019-02-16T14:14:17.917855Z", "url": "https://files.pythonhosted.org/packages/d4/c0/51f27077336842f914d4c0745503acad109edaa579ca25d46f3d69bd9674/aws_signv4_mqtt-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e63a10250d4e9db76157ae3e6e48763f", "sha256": "7d3354fb385dbed407d0fa6bf4a2460434dce90069a599e508126c7485d90086"}, "downloads": -1, "filename": "aws_signv4_mqtt-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e63a10250d4e9db76157ae3e6e48763f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2725, "upload_time": "2019-02-16T14:14:19", "upload_time_iso_8601": "2019-02-16T14:14:19.996177Z", "url": "https://files.pythonhosted.org/packages/21/e1/6b66a5b0bc969635bbc5c4d57db1bc6b0e8b5b8c3550e37bce3921b15c1a/aws_signv4_mqtt-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a0996ae02ddcef27e347a30758cb5caa", "sha256": "4fb69ba044a1712b4c8e0464c34efb27b186d545c0c4aaf5907b97e30eebcffb"}, "downloads": -1, "filename": "aws_signv4_mqtt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a0996ae02ddcef27e347a30758cb5caa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4708, "upload_time": "2019-02-21T18:30:55", "upload_time_iso_8601": "2019-02-21T18:30:55.700368Z", "url": "https://files.pythonhosted.org/packages/6b/51/981e08f75809fef6765eb56df5b567fb0af87862f53d96fdecdfe68486ab/aws_signv4_mqtt-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ba58617a8febe93382e81468d65d781", "sha256": "59cb22ea836d3e72b0cd3dae0ef337ac29af3e9e498aed13a55e711c4c250413"}, "downloads": -1, "filename": "aws_signv4_mqtt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5ba58617a8febe93382e81468d65d781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3355, "upload_time": "2019-02-21T18:30:57", "upload_time_iso_8601": "2019-02-21T18:30:57.131575Z", "url": "https://files.pythonhosted.org/packages/d0/57/ba3110490b3af46be9cd6f165e84898c16a411f1aa5c0d81d2b701ada9f2/aws_signv4_mqtt-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0996ae02ddcef27e347a30758cb5caa", "sha256": "4fb69ba044a1712b4c8e0464c34efb27b186d545c0c4aaf5907b97e30eebcffb"}, "downloads": -1, "filename": "aws_signv4_mqtt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a0996ae02ddcef27e347a30758cb5caa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4708, "upload_time": "2019-02-21T18:30:55", "upload_time_iso_8601": "2019-02-21T18:30:55.700368Z", "url": "https://files.pythonhosted.org/packages/6b/51/981e08f75809fef6765eb56df5b567fb0af87862f53d96fdecdfe68486ab/aws_signv4_mqtt-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ba58617a8febe93382e81468d65d781", "sha256": "59cb22ea836d3e72b0cd3dae0ef337ac29af3e9e498aed13a55e711c4c250413"}, "downloads": -1, "filename": "aws_signv4_mqtt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5ba58617a8febe93382e81468d65d781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3355, "upload_time": "2019-02-21T18:30:57", "upload_time_iso_8601": "2019-02-21T18:30:57.131575Z", "url": "https://files.pythonhosted.org/packages/d0/57/ba3110490b3af46be9cd6f165e84898c16a411f1aa5c0d81d2b701ada9f2/aws_signv4_mqtt-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:34 2020"}