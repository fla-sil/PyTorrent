{"info": {"author": "Ivan Mukhin", "author_email": "muhin.ivan@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pyinapp\n=======\n|travis| |pypi|\n\n.. |travis| image:: https://travis-ci.org/keeprocking/pyinapp.svg?branch=master\n    :target: https://travis-ci.org/keeprocking/pyinapp\n.. |pypi| image:: https://badge.fury.io/py/pyinapp.svg\n    :target: https://badge.fury.io/py/pyinapp\n\nIn-app purchase validation has never been so friendly and convenient!\n\nInstallation\n============\n::\n\n    pip install pyinapp\n\nUsage\n=====\n\nCurrently pyinapp supports Google Play and App Store receipts validation.\n\nGoogle Play:\n------------\n.. code:: python\n\n    from pyinapp import GooglePlayValidator, InAppValidationError\n\n\n    bundle_id = 'com.yourcompany.yourapp'\n    api_key = 'API key from the developer console'\n    validator = GooglePlayValidator(bundle_id, api_key)\n\n    try:\n        purchases = validator.validate('receipt', 'signature')\n        process_purchases(purchases)\n    except InAppValidationError:\n        \"\"\" handle validation error \"\"\"\n\nApp Store:\n----------\n.. code:: python\n\n    from pyinapp import AppStoreValidator, InAppValidationError\n\n\n    bundle_id = 'com.yourcompany.yourapp'\n    validator = AppStoreValidator(bundle_id)\n\n    try:\n        purchases = validator.validate('receipt')\n        process_purchases(purchases)\n    except InAppValidationError:\n        \"\"\" handle validation error \"\"\"\n\n**Important!**\nIf your version is under 0.1.3, you need to check the type of purchases. For the sake of convenience you can process purchases this way:\n\n.. code:: python\n\n    def process_purchases(purchases):\n        process(*purchases) if isinstance(purchases, list) else process(purchases)\n\n\n    def process(*purchases):\n        for p in purchases:\n            \"\"\" for instance, save p to db and add a player some coins for it \"\"\"\n\n\nThis approach allows to process both Google Play and App Store purchases the same way.\n\nPurchase\n========\n\nPurchase is a universal wrapper for Google Play and App Store receipts. It contains the following fields:\n\n- **transaction_id**: id of the purchase (**transaction_id** for App Store and **orderId** for Google Play);\n- **product_id**: what product has been purchased (**product_id** for App Store and **productId** for Google Play);\n- **quantity**: how many products have been purchased (**quantity** for App Store and always **1** for Google Play - there's no such field in Google Play receipt);\n- **purchased_at**: when the product has been purchased, UNIX timestamp (**purchase_date** for App Store and **purchaseTime** for Google Play).\n- **response**: (App Store only) the response (in JSON format) from the App Store.\n\nContributing\n============\n\nTo run tests, you'll need tox_. After installing, simply run it:\n\n.. code:: python\n\n    tox\n\n.. _tox: https://pypi.python.org/pypi/tox\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/keeprocking/pyinapp", "keywords": "inapp store purchase googleplay appstore market", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyinapp", "package_url": "https://pypi.org/project/pyinapp/", "platform": "", "project_url": "https://pypi.org/project/pyinapp/", "project_urls": {"Homepage": "https://github.com/keeprocking/pyinapp"}, "release_url": "https://pypi.org/project/pyinapp/0.1.5/", "requires_dist": ["requests", "rsa"], "requires_python": "", "summary": "InApp purchase validation API wrappers", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyinapp\">\n<h2>pyinapp</h2>\n<p><a href=\"https://travis-ci.org/keeprocking/pyinapp\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1eb4f8e565d7118044085dbf021e554a4d8c565/68747470733a2f2f7472617669732d63692e6f72672f6b656570726f636b696e672f7079696e6170702e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/pyinapp\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6bb2be2f59b7cfb6252e6accaff9a60a13a052ce/68747470733a2f2f62616467652e667572792e696f2f70792f7079696e6170702e737667\"></a></p>\n<p>In-app purchase validation has never been so friendly and convenient!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pyinapp\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Currently pyinapp supports Google Play and App Store receipts validation.</p>\n<div id=\"google-play\">\n<h3>Google Play:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyinapp</span> <span class=\"kn\">import</span> <span class=\"n\">GooglePlayValidator</span><span class=\"p\">,</span> <span class=\"n\">InAppValidationError</span>\n\n\n<span class=\"n\">bundle_id</span> <span class=\"o\">=</span> <span class=\"s1\">'com.yourcompany.yourapp'</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'API key from the developer console'</span>\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">GooglePlayValidator</span><span class=\"p\">(</span><span class=\"n\">bundle_id</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">purchases</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s1\">'receipt'</span><span class=\"p\">,</span> <span class=\"s1\">'signature'</span><span class=\"p\">)</span>\n    <span class=\"n\">process_purchases</span><span class=\"p\">(</span><span class=\"n\">purchases</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">InAppValidationError</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" handle validation error \"\"\"</span>\n</pre>\n</div>\n<div id=\"app-store\">\n<h3>App Store:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyinapp</span> <span class=\"kn\">import</span> <span class=\"n\">AppStoreValidator</span><span class=\"p\">,</span> <span class=\"n\">InAppValidationError</span>\n\n\n<span class=\"n\">bundle_id</span> <span class=\"o\">=</span> <span class=\"s1\">'com.yourcompany.yourapp'</span>\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">AppStoreValidator</span><span class=\"p\">(</span><span class=\"n\">bundle_id</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">purchases</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s1\">'receipt'</span><span class=\"p\">)</span>\n    <span class=\"n\">process_purchases</span><span class=\"p\">(</span><span class=\"n\">purchases</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">InAppValidationError</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\" handle validation error \"\"\"</span>\n</pre>\n<p><strong>Important!</strong>\nIf your version is under 0.1.3, you need to check the type of purchases. For the sake of convenience you can process purchases this way:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">process_purchases</span><span class=\"p\">(</span><span class=\"n\">purchases</span><span class=\"p\">):</span>\n    <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">purchases</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">purchases</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">purchases</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">purchases</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">purchases</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\" for instance, save p to db and add a player some coins for it \"\"\"</span>\n</pre>\n<p>This approach allows to process both Google Play and App Store purchases the same way.</p>\n</div>\n</div>\n<div id=\"purchase\">\n<h2>Purchase</h2>\n<p>Purchase is a universal wrapper for Google Play and App Store receipts. It contains the following fields:</p>\n<ul>\n<li><strong>transaction_id</strong>: id of the purchase (<strong>transaction_id</strong> for App Store and <strong>orderId</strong> for Google Play);</li>\n<li><strong>product_id</strong>: what product has been purchased (<strong>product_id</strong> for App Store and <strong>productId</strong> for Google Play);</li>\n<li><strong>quantity</strong>: how many products have been purchased (<strong>quantity</strong> for App Store and always <strong>1</strong> for Google Play - there\u2019s no such field in Google Play receipt);</li>\n<li><strong>purchased_at</strong>: when the product has been purchased, UNIX timestamp (<strong>purchase_date</strong> for App Store and <strong>purchaseTime</strong> for Google Play).</li>\n<li><strong>response</strong>: (App Store only) the response (in JSON format) from the App Store.</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>To run tests, you\u2019ll need <a href=\"https://pypi.python.org/pypi/tox\" rel=\"nofollow\">tox</a>. After installing, simply run it:</p>\n<pre><span class=\"n\">tox</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6625559, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "dd9432e053876156737ad602c38c31cb", "sha256": "138dedc0532214f68a05a064c3e0b1a38f94347482461cd33d4316e1f8d4be18"}, "downloads": -1, "filename": "pyinapp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dd9432e053876156737ad602c38c31cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3224, "upload_time": "2015-09-18T06:01:29", "upload_time_iso_8601": "2015-09-18T06:01:29.815858Z", "url": "https://files.pythonhosted.org/packages/9b/0b/5d625b78e8337c1fb027a02d25515f3a2447150aa17b5b0beb5a8485feea/pyinapp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "be04e9b20323d7d95b6075c4bce5c841", "sha256": "e1405617fcad70e1aab9f13c18aa5941ea16775f78fdd93f3d0017304ed4abc3"}, "downloads": -1, "filename": "pyinapp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "be04e9b20323d7d95b6075c4bce5c841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3290, "upload_time": "2016-11-13T22:03:14", "upload_time_iso_8601": "2016-11-13T22:03:14.387982Z", "url": "https://files.pythonhosted.org/packages/1a/12/45b460c15490b7f897c2dfd4c7b8ddf3d35e5e20960b6a85079288b60b51/pyinapp-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4db78974480c436d6eaeaf92b16bba52", "sha256": "f0657a965b9609cf771a27aaadddc390160e8b5e8277cf319aa5720d72471dc3"}, "downloads": -1, "filename": "pyinapp-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4db78974480c436d6eaeaf92b16bba52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3327, "upload_time": "2016-12-17T10:39:39", "upload_time_iso_8601": "2016-12-17T10:39:39.092903Z", "url": "https://files.pythonhosted.org/packages/a2/28/37567c33ce51892e0a73e8b003aad6633889884d6da5d35844cb755d2dce/pyinapp-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1696fc000370cb0e45f03c2aeb6873e4", "sha256": "ad62a6cc75cecdb1a0034e9e554105b8ebe6e34baf778057f74f0395983d7b0b"}, "downloads": -1, "filename": "pyinapp-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1696fc000370cb0e45f03c2aeb6873e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3527, "upload_time": "2017-08-27T20:21:40", "upload_time_iso_8601": "2017-08-27T20:21:40.561472Z", "url": "https://files.pythonhosted.org/packages/12/5f/bca9b02a9f80145a2b514166c493c62bc58364f8edb229e05ce10771ba9f/pyinapp-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "850afd043fc961c02babee008d189d03", "sha256": "902a0c2529005f877ea57f1b9b6eab503003e5f42c3e1f6ba73604d41acc2dff"}, "downloads": -1, "filename": "pyinapp-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "850afd043fc961c02babee008d189d03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5528, "upload_time": "2020-02-13T19:32:06", "upload_time_iso_8601": "2020-02-13T19:32:06.145291Z", "url": "https://files.pythonhosted.org/packages/01/02/6e86f951a45ae3cc52fa6620bc1d3818826a583411ac6a209b6edf578686/pyinapp-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "311715296caf7c91d7161e0fb5538acb", "sha256": "60e573ac96b720eeabd4df1583beeb99f5b4f0b09dab042b128ea4cf7104ad22"}, "downloads": -1, "filename": "pyinapp-0.1.5.tar.gz", "has_sig": false, "md5_digest": "311715296caf7c91d7161e0fb5538acb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3540, "upload_time": "2020-02-13T19:32:07", "upload_time_iso_8601": "2020-02-13T19:32:07.355582Z", "url": "https://files.pythonhosted.org/packages/57/9c/f7fa3a8c7e875c53dcf5fe9201292e11e75df7f7a50fa39369fecb82ce28/pyinapp-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "850afd043fc961c02babee008d189d03", "sha256": "902a0c2529005f877ea57f1b9b6eab503003e5f42c3e1f6ba73604d41acc2dff"}, "downloads": -1, "filename": "pyinapp-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "850afd043fc961c02babee008d189d03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5528, "upload_time": "2020-02-13T19:32:06", "upload_time_iso_8601": "2020-02-13T19:32:06.145291Z", "url": "https://files.pythonhosted.org/packages/01/02/6e86f951a45ae3cc52fa6620bc1d3818826a583411ac6a209b6edf578686/pyinapp-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "311715296caf7c91d7161e0fb5538acb", "sha256": "60e573ac96b720eeabd4df1583beeb99f5b4f0b09dab042b128ea4cf7104ad22"}, "downloads": -1, "filename": "pyinapp-0.1.5.tar.gz", "has_sig": false, "md5_digest": "311715296caf7c91d7161e0fb5538acb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3540, "upload_time": "2020-02-13T19:32:07", "upload_time_iso_8601": "2020-02-13T19:32:07.355582Z", "url": "https://files.pythonhosted.org/packages/57/9c/f7fa3a8c7e875c53dcf5fe9201292e11e75df7f7a50fa39369fecb82ce28/pyinapp-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:03 2020"}