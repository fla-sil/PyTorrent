{"info": {"author": "Bot Builder Community", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# Dialog Prompts\n\nThis is a (currently experimental) suite of dialog prompts that uses Microsoft's recognizer text suite to recognize certain types of input during a dialog prompt. Microsoft's Bot Framework team has implemented a handful of prompts using recognizers from the recognizer text suite. This library is meant to fill the gaps.\n\n## Installation\n\nYou can install this library via PIP:\n\n    pip install botbuilder-community-dialogs-prompts\n\nYou can then import required types, for example:\n\n```python\n    from botbuilder.community.dialogs.prompts import NumberWithUnitPrompt, NumberWithUnitPromptType\n```\n\n## Number with Unit\n\nThe number with unit prompt allows you to prompt for four different unit types:\n\n* Currency\n* Temperature\n* Age\n* Dimension (eg. miles / meters)\n\n```python\ndialogs.add(new NumberWithUnitPrompt('numberPrompt', NumberWithUnitPromptType.Currency);\n```\n\nThen, you can call the bot by specifying your PromptOptions and calling PromptAsync.\n\n```python\noptions = PromptOptions(\n                    prompt = Activity(\n                        type = ActivityTypes.message, \n                        text = \"Enter the curreny info\"\n                        )\n                )\n        await step_context.prompt(\"numberprompt\",options)\n\n```\n\nThe prompt will return a NumberWithUnitResult.The object contains a value and unit type.\nFor example, if a user enters \"twenty three dollars\" when you are using the Currency prompt type, the resulting NumberWithUnitResult object will have Unit: \"Dollar\", Value: \"23\". Below is an example of how you might use this result.\n\n```python\nresult = f\"currency : {turn_context.result.value} and unit : {turn_context.result.unit}\"\nawait turn_context.send_activity(result)\n```\n\n## Number with Type\n\nNumber with type allows you to accept numbers from the follow type enum:\n\n* Ordinal\n* Percentage\n\n```python\ndialogs.add(new NumberWithTypePrompt('numberPrompt', NumberWithTypePromptType.Ordinal);\n```\nThe prompt will a return a result based on the NumberWithTypePromptType type. \nFor example , If user enters \u201celeventh\u201d Ordinal type return the result as 11.\nBelow is an example of how you might use this result.\n\n```python\nresult = step_context.result\nawait turn_context.send_activity(result)\n```\n\n## Phone Number\n\nThe `PhoneNumberPrompt` will extract a phone number from a message from the user.\n\n```python\ndialogs.add(new PhoneNumberPrompt('phprompt');\n```\n\nExample\n\n```python\nUser : My phone number is 1 (877) 609-2233\nPhoneNumberPrompt return as 1 (877) 609-2233\n```\n\n## Email Address\n\nThe `EmailPrompt` will extract an email address from a message from the user.\n\n```python\ndialogs.add(new EmailPrompt('eprompt');\n```\n\nExample\n\n```python\nUser : My email id is r.vinoth@live.com\nEmailPrompt return as r.vinoth@live.com\n```\n\n## Internet Protocols\n\nThe `InternetProtocolPrompt` will extract one of the following types based on which InternetProtocolPromptType enum value is passed in:\n\n* IPAddress\n* URL\n\n```python\ndialogs.add(InternetProtocolPrompt(\"urlprompt\",InternetProtocolPromptType.URL))\n```\nExample\n\n```python\nUser : My favorite web site is http://rvinothrajendran.github.io/\nInternetProtocolPrompt return as http://rvinothrajendran.github.io/\n```\n\n## GUID\n\nThe `GUIDPrompt` will extract a GUID from a message from the user.\n\n```python\ndialogs.add(new GuidPrompt('gprompt');\n```\n\nExample\n\n```python\nUser : my azure id is \"7d7b0205-9411-4a29-89ac-b9cd905886fa\"\nGUIDPrompt return as \"7d7b0205-9411-4a29-89ac-b9cd905886fa\"\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BotBuilderCommunity/botbuilder-community-python", "keywords": "botbuilder bots ai botframework dialogs prompts", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "botbuilder-community-dialogs-prompts", "package_url": "https://pypi.org/project/botbuilder-community-dialogs-prompts/", "platform": "", "project_url": "https://pypi.org/project/botbuilder-community-dialogs-prompts/", "project_urls": {"Homepage": "https://github.com/BotBuilderCommunity/botbuilder-community-python"}, "release_url": "https://pypi.org/project/botbuilder-community-dialogs-prompts/0.1.3/", "requires_dist": ["botbuilder-core (>=4.5.0b5)", "botbuilder-schema (>=4.5.0b5)", "botbuilder-dialogs (>=4.5.0b5)", "recognizers-text-suite (>=1.0.2a2)", "aiounittest (>=1.3.0)"], "requires_python": "", "summary": "Microsoft Bot Builder Community Dialogs Prompts", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dialog Prompts</h1>\n<p>This is a (currently experimental) suite of dialog prompts that uses Microsoft's recognizer text suite to recognize certain types of input during a dialog prompt. Microsoft's Bot Framework team has implemented a handful of prompts using recognizers from the recognizer text suite. This library is meant to fill the gaps.</p>\n<h2>Installation</h2>\n<p>You can install this library via PIP:</p>\n<pre><code>pip install botbuilder-community-dialogs-prompts\n</code></pre>\n<p>You can then import required types, for example:</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">botbuilder.community.dialogs.prompts</span> <span class=\"kn\">import</span> <span class=\"n\">NumberWithUnitPrompt</span><span class=\"p\">,</span> <span class=\"n\">NumberWithUnitPromptType</span>\n</pre>\n<h2>Number with Unit</h2>\n<p>The number with unit prompt allows you to prompt for four different unit types:</p>\n<ul>\n<li>Currency</li>\n<li>Temperature</li>\n<li>Age</li>\n<li>Dimension (eg. miles / meters)</li>\n</ul>\n<pre><span class=\"n\">dialogs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">NumberWithUnitPrompt</span><span class=\"p\">(</span><span class=\"s1\">'numberPrompt'</span><span class=\"p\">,</span> <span class=\"n\">NumberWithUnitPromptType</span><span class=\"o\">.</span><span class=\"n\">Currency</span><span class=\"p\">);</span>\n</pre>\n<p>Then, you can call the bot by specifying your PromptOptions and calling PromptAsync.</p>\n<pre><span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">PromptOptions</span><span class=\"p\">(</span>\n                    <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">Activity</span><span class=\"p\">(</span>\n                        <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"n\">ActivityTypes</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">,</span> \n                        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Enter the curreny info\"</span>\n                        <span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">step_context</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"p\">(</span><span class=\"s2\">\"numberprompt\"</span><span class=\"p\">,</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>The prompt will return a NumberWithUnitResult.The object contains a value and unit type.\nFor example, if a user enters \"twenty three dollars\" when you are using the Currency prompt type, the resulting NumberWithUnitResult object will have Unit: \"Dollar\", Value: \"23\". Below is an example of how you might use this result.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"currency : </span><span class=\"si\">{</span><span class=\"n\">turn_context</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"si\">}</span><span class=\"s2\"> and unit : </span><span class=\"si\">{</span><span class=\"n\">turn_context</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">unit</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">await</span> <span class=\"n\">turn_context</span><span class=\"o\">.</span><span class=\"n\">send_activity</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<h2>Number with Type</h2>\n<p>Number with type allows you to accept numbers from the follow type enum:</p>\n<ul>\n<li>Ordinal</li>\n<li>Percentage</li>\n</ul>\n<pre><span class=\"n\">dialogs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">NumberWithTypePrompt</span><span class=\"p\">(</span><span class=\"s1\">'numberPrompt'</span><span class=\"p\">,</span> <span class=\"n\">NumberWithTypePromptType</span><span class=\"o\">.</span><span class=\"n\">Ordinal</span><span class=\"p\">);</span>\n</pre>\n<p>The prompt will a return a result based on the NumberWithTypePromptType type.\nFor example , If user enters \u201celeventh\u201d Ordinal type return the result as 11.\nBelow is an example of how you might use this result.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">step_context</span><span class=\"o\">.</span><span class=\"n\">result</span>\n<span class=\"k\">await</span> <span class=\"n\">turn_context</span><span class=\"o\">.</span><span class=\"n\">send_activity</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<h2>Phone Number</h2>\n<p>The <code>PhoneNumberPrompt</code> will extract a phone number from a message from the user.</p>\n<pre><span class=\"n\">dialogs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">PhoneNumberPrompt</span><span class=\"p\">(</span><span class=\"s1\">'phprompt'</span><span class=\"p\">);</span>\n</pre>\n<p>Example</p>\n<pre><span class=\"n\">User</span> <span class=\"p\">:</span> <span class=\"n\">My</span> <span class=\"n\">phone</span> <span class=\"n\">number</span> <span class=\"ow\">is</span> <span class=\"mi\">1</span> <span class=\"p\">(</span><span class=\"mi\">877</span><span class=\"p\">)</span> <span class=\"mi\">609</span><span class=\"o\">-</span><span class=\"mi\">2233</span>\n<span class=\"n\">PhoneNumberPrompt</span> <span class=\"k\">return</span> <span class=\"k\">as</span> <span class=\"mi\">1</span> <span class=\"p\">(</span><span class=\"mi\">877</span><span class=\"p\">)</span> <span class=\"mi\">609</span><span class=\"o\">-</span><span class=\"mi\">2233</span>\n</pre>\n<h2>Email Address</h2>\n<p>The <code>EmailPrompt</code> will extract an email address from a message from the user.</p>\n<pre><span class=\"n\">dialogs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">EmailPrompt</span><span class=\"p\">(</span><span class=\"s1\">'eprompt'</span><span class=\"p\">);</span>\n</pre>\n<p>Example</p>\n<pre><span class=\"n\">User</span> <span class=\"p\">:</span> <span class=\"n\">My</span> <span class=\"n\">email</span> <span class=\"nb\">id</span> <span class=\"ow\">is</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">vinoth</span><span class=\"nd\">@live</span><span class=\"o\">.</span><span class=\"n\">com</span>\n<span class=\"n\">EmailPrompt</span> <span class=\"k\">return</span> <span class=\"k\">as</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">vinoth</span><span class=\"nd\">@live</span><span class=\"o\">.</span><span class=\"n\">com</span>\n</pre>\n<h2>Internet Protocols</h2>\n<p>The <code>InternetProtocolPrompt</code> will extract one of the following types based on which InternetProtocolPromptType enum value is passed in:</p>\n<ul>\n<li>IPAddress</li>\n<li>URL</li>\n</ul>\n<pre><span class=\"n\">dialogs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">InternetProtocolPrompt</span><span class=\"p\">(</span><span class=\"s2\">\"urlprompt\"</span><span class=\"p\">,</span><span class=\"n\">InternetProtocolPromptType</span><span class=\"o\">.</span><span class=\"n\">URL</span><span class=\"p\">))</span>\n</pre>\n<p>Example</p>\n<pre><span class=\"n\">User</span> <span class=\"p\">:</span> <span class=\"n\">My</span> <span class=\"n\">favorite</span> <span class=\"n\">web</span> <span class=\"n\">site</span> <span class=\"ow\">is</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">rvinothrajendran</span><span class=\"o\">.</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">/</span>\n<span class=\"n\">InternetProtocolPrompt</span> <span class=\"k\">return</span> <span class=\"k\">as</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">rvinothrajendran</span><span class=\"o\">.</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">/</span>\n</pre>\n<h2>GUID</h2>\n<p>The <code>GUIDPrompt</code> will extract a GUID from a message from the user.</p>\n<pre><span class=\"n\">dialogs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">GuidPrompt</span><span class=\"p\">(</span><span class=\"s1\">'gprompt'</span><span class=\"p\">);</span>\n</pre>\n<p>Example</p>\n<pre><span class=\"n\">User</span> <span class=\"p\">:</span> <span class=\"n\">my</span> <span class=\"n\">azure</span> <span class=\"nb\">id</span> <span class=\"ow\">is</span> <span class=\"s2\">\"7d7b0205-9411-4a29-89ac-b9cd905886fa\"</span>\n<span class=\"n\">GUIDPrompt</span> <span class=\"k\">return</span> <span class=\"k\">as</span> <span class=\"s2\">\"7d7b0205-9411-4a29-89ac-b9cd905886fa\"</span>\n</pre>\n\n          </div>"}, "last_serial": 6190459, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f45013450c83ba94a80f94b697f493bc", "sha256": "119763675f960252a7573baa109fdd5ff172967773669a8a24cf5a97851fface"}, "downloads": -1, "filename": "botbuilder_community_dialogs_prompts-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f45013450c83ba94a80f94b697f493bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9095, "upload_time": "2019-11-24T05:38:53", "upload_time_iso_8601": "2019-11-24T05:38:53.038728Z", "url": "https://files.pythonhosted.org/packages/32/aa/b49ba45a0fe3a31e07fa2aafbba40bb409b97b07c5a152946e8a2831f60a/botbuilder_community_dialogs_prompts-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.0rc441": [{"comment_text": "", "digests": {"md5": "ddfc268d6d8ef993a9141d81c3a723a8", "sha256": "d1663214919dd25a71aeb6ad1fafbd9b70a6002810251b121f2e6dae0425aa51"}, "downloads": -1, "filename": "botbuilder_community_dialogs_prompts-0.1.0rc441-py3-none-any.whl", "has_sig": false, "md5_digest": "ddfc268d6d8ef993a9141d81c3a723a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9140, "upload_time": "2019-11-24T04:50:40", "upload_time_iso_8601": "2019-11-24T04:50:40.903728Z", "url": "https://files.pythonhosted.org/packages/c9/cc/c02c07b305b97c0046d9ca4908775f8f49e84e365a621309a8712fc37c81/botbuilder_community_dialogs_prompts-0.1.0rc441-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a13850b51c613f046f064227efc52dbc", "sha256": "f68e9c9385cc51396da3d87b7793d6ffc064d4f626ae9fe3a491b97c2fdfbfc9"}, "downloads": -1, "filename": "botbuilder_community_dialogs_prompts-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a13850b51c613f046f064227efc52dbc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9097, "upload_time": "2019-11-24T05:59:25", "upload_time_iso_8601": "2019-11-24T05:59:25.672853Z", "url": "https://files.pythonhosted.org/packages/0f/6d/8322b6610245d582bd8307d0b909d60a0a1f35f2f1f99188a95f0b586617/botbuilder_community_dialogs_prompts-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3d8532ebd3463a7509850189d910e0a5", "sha256": "0ba09eda12c21946cb8a144105415d59148e122164f115f18885d2089a8b5149"}, "downloads": -1, "filename": "botbuilder_community_dialogs_prompts-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3d8532ebd3463a7509850189d910e0a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9509, "upload_time": "2019-11-24T15:37:21", "upload_time_iso_8601": "2019-11-24T15:37:21.138985Z", "url": "https://files.pythonhosted.org/packages/bd/db/a9cd3492698b0de735e617aa8dfc178efee9b0c9b5a6ebdb5b35926670df/botbuilder_community_dialogs_prompts-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4bb0e92c7e7dd911ed5354632cffb136", "sha256": "e7cc1d828f3e3102efb158c018b8d34e31f97c118ea9a7589bb66f5b13d1ded5"}, "downloads": -1, "filename": "botbuilder_community_dialogs_prompts-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4bb0e92c7e7dd911ed5354632cffb136", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9550, "upload_time": "2019-11-24T16:53:15", "upload_time_iso_8601": "2019-11-24T16:53:15.269039Z", "url": "https://files.pythonhosted.org/packages/82/1c/272f5bdc7fc27b996bc2e18e1582b615fc98390a1157c532c0606ef93882/botbuilder_community_dialogs_prompts-0.1.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bb0e92c7e7dd911ed5354632cffb136", "sha256": "e7cc1d828f3e3102efb158c018b8d34e31f97c118ea9a7589bb66f5b13d1ded5"}, "downloads": -1, "filename": "botbuilder_community_dialogs_prompts-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4bb0e92c7e7dd911ed5354632cffb136", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9550, "upload_time": "2019-11-24T16:53:15", "upload_time_iso_8601": "2019-11-24T16:53:15.269039Z", "url": "https://files.pythonhosted.org/packages/82/1c/272f5bdc7fc27b996bc2e18e1582b615fc98390a1157c532c0606ef93882/botbuilder_community_dialogs_prompts-0.1.3-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:36:38 2020"}