{"info": {"author": "Emin Martinian", "author_email": "emin.martinian@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "Introduction\n============\n\nThe pyempt package is a python emacs package for type checking and other\nsyntax analysis. It is basically a simple wrapper around other python\nsyntax checkers to simplify the process of calling pylint, pep8, etc.\nfrom something like emacs flymake.\n\nIn principle, you could do all of this with a a few `simple\nscripts <http://stackoverflow.com/questions/1259873/how-can-i-use-emacs-flymake-mode-for-python-with-pyflakes-and-pylint-checking-co>`__.\nIt's nice being able to ``pip install`` something that works and\ncollaborate on improvements, however, and that is what pyempt is for.\n\nInstallation\n============\n\nTo install pyempt, first do something like ``pip install pyempt`` or\n``sudo pip install pyempt``. Then add something like the following to\nyour ``~/.emacs`` file to run pyempt.\n\n::\n\n    (when (load \"flymake\" t)\n      (defun flymake-pyempt-init ()\n        (let* ((temp-file (flymake-init-create-temp-buffer-copy\n                   'flymake-create-temp-inplace))\n           (local-file (file-relative-name\n                temp-file\n                (file-name-directory buffer-file-name))))\n          (list \"pyempt\"  (list local-file))))\n       (add-to-list 'flymake-allowed-file-name-masks\n                 '(\"\\\\.py\\\\'\" flymake-pyempt-init)))\n\n    (add-to-list 'flymake-allowed-file-name-masks\n      '(\"\\\\.py\\\\'\" flymake-pyempt-init))\n\n    ;; Uncomment following line if you want flymake to start on file load\n    ;;(add-hook 'find-file-hook 'flymake-find-file-hook)\n\nAfter you restart emacs or reload your init file, flymake should\nautomatically start and call pyempt.\n\nUsage\n=====\n\nIf you have installed pyempt and setup emacs to use it in flymake, there\nisn't anything you need to do to use pyempt. Instead, it will run\nautomatically inside emacs.\n\nIf you want to run it from the command line, you can type\n\n::\n\n    pyempt --help\n\nto see options and usage instructions or type\n\n::\n\n    pyempt <PATH_TO_CHECK>\n\nto run checks on everything in a given path.\n\nSince pyempt will return a non-zero exit code if any of its checkers\nreturns a non-zero code, you can simply check the return value of pyempt\nin build scripts or continuous integration tools.\n\nTroubleshooting\n===============\n\nIf you have problems, the first thing to do is to try and run pyempt\nmanually via something like\n\n::\n\n    pyempt <FILE_TO_CHECK>\n\nYou can turn on logging via\n\n::\n\n    pyempt <FILE_TO_CHECK> --log_level 0\n\nYou can get further help on the command line program via\n\n::\n\n    pyempt --help\n\nForking\n=======\n\nIf you want to fork pyempt, you may find the following useful:\n\n1. The ``README.md`` file is the main file. Generate the rst version via\n   something like ``pandoc README.md -t rst > README.rst``\n2. Upload to pypi via something like ``make pypi`` provided you have\n   your ``~/.pypirc`` setup correctly.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emin63/pyempt", "keywords": "continuous integration emacs development", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pyempt", "package_url": "https://pypi.org/project/pyempt/", "platform": "", "project_url": "https://pypi.org/project/pyempt/", "project_urls": {"Homepage": "https://github.com/emin63/pyempt"}, "release_url": "https://pypi.org/project/pyempt/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Python emacs syntax checking", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The pyempt package is a python emacs package for type checking and other\nsyntax analysis. It is basically a simple wrapper around other python\nsyntax checkers to simplify the process of calling pylint, pep8, etc.\nfrom something like emacs flymake.</p>\n<p>In principle, you could do all of this with a a few <a href=\"http://stackoverflow.com/questions/1259873/how-can-i-use-emacs-flymake-mode-for-python-with-pyflakes-and-pylint-checking-co\" rel=\"nofollow\">simple\nscripts</a>.\nIt\u2019s nice being able to <tt>pip install</tt> something that works and\ncollaborate on improvements, however, and that is what pyempt is for.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install pyempt, first do something like <tt>pip install pyempt</tt> or\n<tt>sudo pip install pyempt</tt>. Then add something like the following to\nyour <tt><span class=\"pre\">~/.emacs</span></tt> file to run pyempt.</p>\n<pre>(when (load \"flymake\" t)\n  (defun flymake-pyempt-init ()\n    (let* ((temp-file (flymake-init-create-temp-buffer-copy\n               'flymake-create-temp-inplace))\n       (local-file (file-relative-name\n            temp-file\n            (file-name-directory buffer-file-name))))\n      (list \"pyempt\"  (list local-file))))\n   (add-to-list 'flymake-allowed-file-name-masks\n             '(\"\\\\.py\\\\'\" flymake-pyempt-init)))\n\n(add-to-list 'flymake-allowed-file-name-masks\n  '(\"\\\\.py\\\\'\" flymake-pyempt-init))\n\n;; Uncomment following line if you want flymake to start on file load\n;;(add-hook 'find-file-hook 'flymake-find-file-hook)\n</pre>\n<p>After you restart emacs or reload your init file, flymake should\nautomatically start and call pyempt.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>If you have installed pyempt and setup emacs to use it in flymake, there\nisn\u2019t anything you need to do to use pyempt. Instead, it will run\nautomatically inside emacs.</p>\n<p>If you want to run it from the command line, you can type</p>\n<pre>pyempt --help\n</pre>\n<p>to see options and usage instructions or type</p>\n<pre>pyempt &lt;PATH_TO_CHECK&gt;\n</pre>\n<p>to run checks on everything in a given path.</p>\n<p>Since pyempt will return a non-zero exit code if any of its checkers\nreturns a non-zero code, you can simply check the return value of pyempt\nin build scripts or continuous integration tools.</p>\n</div>\n<div id=\"troubleshooting\">\n<h2>Troubleshooting</h2>\n<p>If you have problems, the first thing to do is to try and run pyempt\nmanually via something like</p>\n<pre>pyempt &lt;FILE_TO_CHECK&gt;\n</pre>\n<p>You can turn on logging via</p>\n<pre>pyempt &lt;FILE_TO_CHECK&gt; --log_level 0\n</pre>\n<p>You can get further help on the command line program via</p>\n<pre>pyempt --help\n</pre>\n</div>\n<div id=\"forking\">\n<h2>Forking</h2>\n<p>If you want to fork pyempt, you may find the following useful:</p>\n<ol>\n<li>The <tt>README.md</tt> file is the main file. Generate the rst version via\nsomething like <tt>pandoc README.md <span class=\"pre\">-t</span> rst &gt; README.rst</tt></li>\n<li>Upload to pypi via something like <tt>make pypi</tt> provided you have\nyour <tt><span class=\"pre\">~/.pypirc</span></tt> setup correctly.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 5130804, "releases": {"1.0.23": [{"comment_text": "", "digests": {"md5": "0bb1254a327bf4f4b53778c558602bce", "sha256": "b3353f40ac377da7907033092926baf5cc4154b2e9fa48dbb77931c1955b0c50"}, "downloads": -1, "filename": "pyempt-1.0.23.tar.gz", "has_sig": false, "md5_digest": "0bb1254a327bf4f4b53778c558602bce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4140, "upload_time": "2017-04-23T15:04:23", "upload_time_iso_8601": "2017-04-23T15:04:23.191175Z", "url": "https://files.pythonhosted.org/packages/53/b7/f22a04da095446f2de27c17d978b643baf8a75f0f8e7f81fab5aa875394e/pyempt-1.0.23.tar.gz", "yanked": false}], "1.0.24": [{"comment_text": "", "digests": {"md5": "e22279fc952b92255ccd250f50ff9ac9", "sha256": "8e0642ea11a13d95aa066952bf7bc34ad598c371f25f4982877a4e781518d714"}, "downloads": -1, "filename": "pyempt-1.0.24.tar.gz", "has_sig": false, "md5_digest": "e22279fc952b92255ccd250f50ff9ac9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4413, "upload_time": "2017-04-23T17:01:59", "upload_time_iso_8601": "2017-04-23T17:01:59.393149Z", "url": "https://files.pythonhosted.org/packages/72/a6/d5bed9becb8f04ecf9bd4b9ef56d21f03790b0d70658225e6bd47fe85d36/pyempt-1.0.24.tar.gz", "yanked": false}], "1.0.25": [{"comment_text": "", "digests": {"md5": "9c303d1a53ec449a3352b40aa961340a", "sha256": "7cef6fcf8bc40724f5bb5652d1efc6e33c2893a9f1293af99328bcedbaec2648"}, "downloads": -1, "filename": "pyempt-1.0.25.tar.gz", "has_sig": false, "md5_digest": "9c303d1a53ec449a3352b40aa961340a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4438, "upload_time": "2017-04-23T17:12:03", "upload_time_iso_8601": "2017-04-23T17:12:03.409879Z", "url": "https://files.pythonhosted.org/packages/02/5a/001a507f05e92a6de6330e983599ca607ec757a61d311382d3982dd365be/pyempt-1.0.25.tar.gz", "yanked": false}], "1.0.26": [{"comment_text": "", "digests": {"md5": "34fbd3db57609ba23e0cce388ca904db", "sha256": "f6359e702c12c7950f88afdc630be8ade20d86e397f709cfedea154f737f43e2"}, "downloads": -1, "filename": "pyempt-1.0.26.tar.gz", "has_sig": false, "md5_digest": "34fbd3db57609ba23e0cce388ca904db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4472, "upload_time": "2017-04-23T17:34:59", "upload_time_iso_8601": "2017-04-23T17:34:59.423564Z", "url": "https://files.pythonhosted.org/packages/7a/b8/397afb1cd13e8f56b3dc35e675467a05fb37d852b153278d015f812efaa6/pyempt-1.0.26.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ccd515e3071ba844bb9544e48ba9c159", "sha256": "7771cc97221bd1773382995a13d4088d822dce5c490b0985da57ed2d40da6506"}, "downloads": -1, "filename": "pyempt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ccd515e3071ba844bb9544e48ba9c159", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5124, "upload_time": "2019-04-11T20:17:08", "upload_time_iso_8601": "2019-04-11T20:17:08.728161Z", "url": "https://files.pythonhosted.org/packages/01/13/01cb930b1f2da265d2847697ed4e8748f62cdd4a8a280a98f0b7f4236f78/pyempt-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccd515e3071ba844bb9544e48ba9c159", "sha256": "7771cc97221bd1773382995a13d4088d822dce5c490b0985da57ed2d40da6506"}, "downloads": -1, "filename": "pyempt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ccd515e3071ba844bb9544e48ba9c159", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5124, "upload_time": "2019-04-11T20:17:08", "upload_time_iso_8601": "2019-04-11T20:17:08.728161Z", "url": "https://files.pythonhosted.org/packages/01/13/01cb930b1f2da265d2847697ed4e8748f62cdd4a8a280a98f0b7f4236f78/pyempt-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:25 2020"}