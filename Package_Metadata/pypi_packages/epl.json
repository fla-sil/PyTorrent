{"info": {"author": "Brian Farrell", "author_email": "one.chillindude@me.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Affero General Public License v3", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Build Tools"], "description": "============\nIntroduction\n============\n\n``epl`` (pronounced 'epple') provides enhanced package logistics\n\n``epl`` strives to be a *new* type of manager for virtual environments and\npackages. It will also attempt to incorporate several recent additions to the\nPython Standard Library in order to take advantage of all the wonder that is\nPython 3.\n\n.. note::\n   epl will only run on ``Python >= 3.6``\n\n\nBackground\n----------\n\nWhen I first started developing with Python, the latest version was 3.4, which\nis what I used. I've never had any reason to to go back and learn much about\nPython2. Over the years now, my Python skills have (I hope) improved, as has\nthe Python language itself.\n\nOne of the most *difficult* things I've had to master as a Python developer is\ndealing with Packaging and Dependency Management. In addition, although I've\nbeen a big fan of `virtualenv <https://virtualenv.pypa.io/en/latest/>`_ and\n`virtualenvwrapper <https://virtualenvwrapper.readthedocs.io/en/latest/>`_,\nas of Python 3.3, the Standard Library includes its own `venv` module and I \nwould like to explore the possibilities with that.\n\n``epl`` is an exploration for me at this point. If things go \n**really, really well**, it could be the *next big thing* \ud83d\ude1c.\nOn the other hand, it could die a horrible death next month, as\nI throw up my hands and run screaming for the exits...\ud83e\udd2f\n\n.. note::\n   This project is in its embryonic stage and I am uploading it\n   to PyPi more as a formality at this point. I have not yet granted access\n   to the source code repo - I would like to get a few ideas down more\n   concretely before I open this project to the world.\n   I have every intention of doing so - stay tuned...\n\n\nObjectives\n----------\n\n``epl`` is inspired by `pip <https://github.com/pypa/pip>`_\nand `Pipenv <https://pipenv.readthedocs.io/en/latest/>`_\nbut yearns to be somehthing a little bit more - and also a little bit less.\n\n+ No backwwards compatibility with Python 2\n+ Avoid as many external dependencies as possible\n+ Explore the possibility of a 'core' install capability that can be used to\n  bootstrap the initial install of ``epl``\n+ Subclass the ``venv.EnvBuilder`` class in the Standard Library\n  to implement virtual environments\n+ Implement *TDD* and *BDD* right from the start\n+ Implement type hints, using the new ``typing`` module, introduced in Python 3.5\n+ Implement Pipfile and Pipfile.lock, rather than requirements.txt.\n  `See the Pipfile project on GitHub <https://github.com/pypa/pipfile>`_\n+ Implement checks of signed code using ``GPG``\n+ Provide the ability to completely package and deploy the recursive set of\n  dependencies in addition to the target package, for installation of packages\n  when there is no network availability\n+ Specify Build System dependencies using ``pyproject.toml``, as described in\n  `PEP 518 <https://www.python.org/dev/peps/pep-0518/>`_\n\n\nInstalling\n----------\n\nInstall and update using ``pip``:\n\n.. code-block:: bash\n\n   pip install -U epl\n\n\nLinks\n-----\n\n* Website:\n* Documentation:\n* License: https://www.gnu.org/licenses/agpl.html\n* Releases: https://pypi.org/project/epl/\n* Code: \n* Issue tracker:\n* Test status:\n* Test coverage:\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/epl/", "keywords": "modern development environment dependencies package manager venv", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "epl", "package_url": "https://pypi.org/project/epl/", "platform": "", "project_url": "https://pypi.org/project/epl/", "project_urls": {"Homepage": "https://pypi.org/project/epl/"}, "release_url": "https://pypi.org/project/epl/0.0.2/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "A modern environment/dependency manager for Python.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>epl</tt> (pronounced \u2018epple\u2019) provides enhanced package logistics</p>\n<p><tt>epl</tt> strives to be a <em>new</em> type of manager for virtual environments and\npackages. It will also attempt to incorporate several recent additions to the\nPython Standard Library in order to take advantage of all the wonder that is\nPython 3.</p>\n<div>\n<p>Note</p>\n<p>epl will only run on <tt>Python &gt;= 3.6</tt></p>\n</div>\n<div id=\"background\">\n<h2>Background</h2>\n<p>When I first started developing with Python, the latest version was 3.4, which\nis what I used. I\u2019ve never had any reason to to go back and learn much about\nPython2. Over the years now, my Python skills have (I hope) improved, as has\nthe Python language itself.</p>\n<p>One of the most <em>difficult</em> things I\u2019ve had to master as a Python developer is\ndealing with Packaging and Dependency Management. In addition, although I\u2019ve\nbeen a big fan of <a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">virtualenv</a> and\n<a href=\"https://virtualenvwrapper.readthedocs.io/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a>,\nas of Python 3.3, the Standard Library includes its own <cite>venv</cite> module and I\nwould like to explore the possibilities with that.</p>\n<p><tt>epl</tt> is an exploration for me at this point. If things go\n<strong>really, really well</strong>, it could be the <em>next big thing</em> \ud83d\ude1c.\nOn the other hand, it could die a horrible death next month, as\nI throw up my hands and run screaming for the exits\u2026\ud83e\udd2f</p>\n<div>\n<p>Note</p>\n<p>This project is in its embryonic stage and I am uploading it\nto PyPi more as a formality at this point. I have not yet granted access\nto the source code repo - I would like to get a few ideas down more\nconcretely before I open this project to the world.\nI have every intention of doing so - stay tuned\u2026</p>\n</div>\n</div>\n<div id=\"objectives\">\n<h2>Objectives</h2>\n<p><tt>epl</tt> is inspired by <a href=\"https://github.com/pypa/pip\" rel=\"nofollow\">pip</a>\nand <a href=\"https://pipenv.readthedocs.io/en/latest/\" rel=\"nofollow\">Pipenv</a>\nbut yearns to be somehthing a little bit more - and also a little bit less.</p>\n<ul>\n<li>No backwwards compatibility with Python 2</li>\n<li>Avoid as many external dependencies as possible</li>\n<li>Explore the possibility of a \u2018core\u2019 install capability that can be used to\nbootstrap the initial install of <tt>epl</tt></li>\n<li>Subclass the <tt>venv.EnvBuilder</tt> class in the Standard Library\nto implement virtual environments</li>\n<li>Implement <em>TDD</em> and <em>BDD</em> right from the start</li>\n<li>Implement type hints, using the new <tt>typing</tt> module, introduced in Python 3.5</li>\n<li>Implement Pipfile and Pipfile.lock, rather than requirements.txt.\n<a href=\"https://github.com/pypa/pipfile\" rel=\"nofollow\">See the Pipfile project on GitHub</a></li>\n<li>Implement checks of signed code using <tt>GPG</tt></li>\n<li>Provide the ability to completely package and deploy the recursive set of\ndependencies in addition to the target package, for installation of packages\nwhen there is no network availability</li>\n<li>Specify Build System dependencies using <tt>pyproject.toml</tt>, as described in\n<a href=\"https://www.python.org/dev/peps/pep-0518/\" rel=\"nofollow\">PEP 518</a></li>\n</ul>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Install and update using <tt>pip</tt>:</p>\n<pre>pip install -U epl\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li>Website:</li>\n<li>Documentation:</li>\n<li>License: <a href=\"https://www.gnu.org/licenses/agpl.html\" rel=\"nofollow\">https://www.gnu.org/licenses/agpl.html</a></li>\n<li>Releases: <a href=\"https://pypi.org/project/epl/\" rel=\"nofollow\">https://pypi.org/project/epl/</a></li>\n<li>Code:</li>\n<li>Issue tracker:</li>\n<li>Test status:</li>\n<li>Test coverage:</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4604213, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "504a1ef6a9d0c12b417a5c2635fe41cf", "sha256": "6f2bf36b30d15f29b6cc0a34ed77026e451747314d2747df281e4d2790dd4602"}, "downloads": -1, "filename": "epl-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "504a1ef6a9d0c12b417a5c2635fe41cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 20193, "upload_time": "2018-12-16T05:14:03", "upload_time_iso_8601": "2018-12-16T05:14:03.146618Z", "url": "https://files.pythonhosted.org/packages/d1/ad/e700400c8327c372c21fa1a2f818669dbb13768ca1ddd61cc78e4716d96e/epl-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8a803f3227ce31cd20b13a06a5d4cbd", "sha256": "c0a074dde2bfa0d0b6633522849022cf9dab19297509af151c84f639fb575279"}, "downloads": -1, "filename": "epl-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c8a803f3227ce31cd20b13a06a5d4cbd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 23718, "upload_time": "2018-12-16T05:14:04", "upload_time_iso_8601": "2018-12-16T05:14:04.431815Z", "url": "https://files.pythonhosted.org/packages/8f/42/83b01ea777bbe18d82216799c2c01dc7ea4d031844d0185bf2b053557162/epl-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "504a1ef6a9d0c12b417a5c2635fe41cf", "sha256": "6f2bf36b30d15f29b6cc0a34ed77026e451747314d2747df281e4d2790dd4602"}, "downloads": -1, "filename": "epl-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "504a1ef6a9d0c12b417a5c2635fe41cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 20193, "upload_time": "2018-12-16T05:14:03", "upload_time_iso_8601": "2018-12-16T05:14:03.146618Z", "url": "https://files.pythonhosted.org/packages/d1/ad/e700400c8327c372c21fa1a2f818669dbb13768ca1ddd61cc78e4716d96e/epl-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8a803f3227ce31cd20b13a06a5d4cbd", "sha256": "c0a074dde2bfa0d0b6633522849022cf9dab19297509af151c84f639fb575279"}, "downloads": -1, "filename": "epl-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c8a803f3227ce31cd20b13a06a5d4cbd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 23718, "upload_time": "2018-12-16T05:14:04", "upload_time_iso_8601": "2018-12-16T05:14:04.431815Z", "url": "https://files.pythonhosted.org/packages/8f/42/83b01ea777bbe18d82216799c2c01dc7ea4d031844d0185bf2b053557162/epl-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:56 2020"}