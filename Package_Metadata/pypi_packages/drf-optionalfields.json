{"info": {"author": "Petros G. Sideris", "author_email": "pgsideris@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "Django REST framework OptionalFields\n=====================================\n\ndrf-optionalfields gives you the flexibility to specify which fields you want to serialized.\n\nThere are two mixins available:\n`OptionalFieldsMixin`: Which allows you to set some optional fields. These fields can be requested via GET params\n`DynamicFilterMixin`: Which allows you to specify only the fields you need.\n\n\n.. code-block:: python\n\n    from rest_framework.serializers import ModelSerializer\n    from drf_optionalfields import OptionalFieldsMixin\n\n    class MyModelSerializer(OptionalFieldsMixin, ModelSerializer):\n        class Meta:\n            model = SomeModel\n            fields = (\"id\", \"username\", \"address\", \"full_name\")\n            optional_fields = (\"address\", \"full_name\")\n    # or combined with DynamicFilterMixin\n    class MyModelSerializer(OptionalFieldsMixin, DynamicFilterMixin, ModelSerializer):\n        class Meta:\n            model = SomeModel\n            fields = (\"id\", \"username\", \"address\", \"full_name\")\n            optional_fields = (\"address\", \"full_name\")\n\n\n.. code-block::\n\n    # You want to see an \"address\" you have set in the Meta:\n    GET /users/1/?fields=address\n\n    # You want only to return \"username\":\n    GET /users/1/?filter=username\n\n    # You want only to return the optional \"full_name\":\n    GET /users/1/?fields=full_name&filter=username\n\n\nThanks to Wim Glen for providing great bootstrap code with <https://github.com/wimglenn/djangorestframework-queryfields>(djangorestframework-queryfields)\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sideris/drf-optionalfields", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drf-optionalfields", "package_url": "https://pypi.org/project/drf-optionalfields/", "platform": "", "project_url": "https://pypi.org/project/drf-optionalfields/", "project_urls": {"Homepage": "https://github.com/sideris/drf-optionalfields"}, "release_url": "https://pypi.org/project/drf-optionalfields/0.9.14/", "requires_dist": null, "requires_python": "", "summary": "Fine tuning for serialized fields", "version": "0.9.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>drf-optionalfields gives you the flexibility to specify which fields you want to serialized.</p>\n<p>There are two mixins available:\n<cite>OptionalFieldsMixin</cite>: Which allows you to set some optional fields. These fields can be requested via GET params\n<cite>DynamicFilterMixin</cite>: Which allows you to specify only the fields you need.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">ModelSerializer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">drf_optionalfields</span> <span class=\"kn\">import</span> <span class=\"n\">OptionalFieldsMixin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelSerializer</span><span class=\"p\">(</span><span class=\"n\">OptionalFieldsMixin</span><span class=\"p\">,</span> <span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SomeModel</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"address\"</span><span class=\"p\">,</span> <span class=\"s2\">\"full_name\"</span><span class=\"p\">)</span>\n        <span class=\"n\">optional_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"address\"</span><span class=\"p\">,</span> <span class=\"s2\">\"full_name\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or combined with DynamicFilterMixin</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyModelSerializer</span><span class=\"p\">(</span><span class=\"n\">OptionalFieldsMixin</span><span class=\"p\">,</span> <span class=\"n\">DynamicFilterMixin</span><span class=\"p\">,</span> <span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SomeModel</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"address\"</span><span class=\"p\">,</span> <span class=\"s2\">\"full_name\"</span><span class=\"p\">)</span>\n        <span class=\"n\">optional_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"address\"</span><span class=\"p\">,</span> <span class=\"s2\">\"full_name\"</span><span class=\"p\">)</span>\n</pre>\n<pre># You want to see an \"address\" you have set in the Meta:\nGET /users/1/?fields=address\n\n# You want only to return \"username\":\nGET /users/1/?filter=username\n\n# You want only to return the optional \"full_name\":\nGET /users/1/?fields=full_name&amp;filter=username\n</pre>\n<p>Thanks to Wim Glen for providing great bootstrap code with &lt;<a href=\"https://github.com/wimglenn/djangorestframework-queryfields\" rel=\"nofollow\">https://github.com/wimglenn/djangorestframework-queryfields</a>&gt;(djangorestframework-queryfields)</p>\n\n          </div>"}, "last_serial": 3199177, "releases": {"0.9.14": [{"comment_text": "", "digests": {"md5": "ebba6249b70c4ba5b26c10135be540f7", "sha256": "f6a6ccb1120e8527f3f7d1b7ffc71100749a29719bc7c41addfb1b49fc6e4b0a"}, "downloads": -1, "filename": "drf-optionalfields-0.9.14.tar.gz", "has_sig": false, "md5_digest": "ebba6249b70c4ba5b26c10135be540f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3138, "upload_time": "2017-09-24T21:33:53", "upload_time_iso_8601": "2017-09-24T21:33:53.373800Z", "url": "https://files.pythonhosted.org/packages/d2/54/dd4549762b7fbea5e33e682992b8f476b6f4b690cea57b5622ca09fa4ce1/drf-optionalfields-0.9.14.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ebba6249b70c4ba5b26c10135be540f7", "sha256": "f6a6ccb1120e8527f3f7d1b7ffc71100749a29719bc7c41addfb1b49fc6e4b0a"}, "downloads": -1, "filename": "drf-optionalfields-0.9.14.tar.gz", "has_sig": false, "md5_digest": "ebba6249b70c4ba5b26c10135be540f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3138, "upload_time": "2017-09-24T21:33:53", "upload_time_iso_8601": "2017-09-24T21:33:53.373800Z", "url": "https://files.pythonhosted.org/packages/d2/54/dd4549762b7fbea5e33e682992b8f476b6f4b690cea57b5622ca09fa4ce1/drf-optionalfields-0.9.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:42 2020"}