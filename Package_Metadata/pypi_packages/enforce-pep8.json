{"info": {"author": "Volodymyr Yahello", "author_email": "vyahello@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n[![Build Status](https://travis-ci.org/upymake/enforce-pep8.svg?branch=master)](https://travis-ci.org/upymake/enforce-pep8)\n[![Coverage Status](https://coveralls.io/repos/github/upymake/enforce-pep8/badge.svg?branch=master)](https://coveralls.io/github/upymake/enforce-pep8?branch=master)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Checked with pylint](https://img.shields.io/badge/pylint-checked-blue)](https://www.pylint.org)\n[![Checked with flake8](https://img.shields.io/badge/flake8-checked-blue)](http://flake8.pycqa.org/)\n[![Checked with pydocstyle](https://img.shields.io/badge/pydocstyle-checked-yellowgreen)](http://www.pydocstyle.org/)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE.md)\n[![EO principles respected here](https://www.elegantobjects.org/badge.svg)](https://www.elegantobjects.org)\n[![PyPI version shields.io](https://img.shields.io/pypi/v/enforce-pep8.svg)](https://pypi.python.org/pypi/enforce-pep8/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/enforce-pep8.svg)](https://pypi.python.org/pypi/enforce-pep8/)\n[![CodeFactor](https://www.codefactor.io/repository/github/upymake/enforce-pep8/badge)](https://www.codefactor.io/repository/github/upymake/enforce-pep8)\n[![Downloads](https://pepy.tech/badge/enforce-pep8)](https://pepy.tech/project/enforce-pep8)\n\n# Enforce PEP-8\n\n> Package allows to enforce certain kinds of **PEP-8** convention coding styles (or perform overall code diagnostics).\n> It aims to help maintain programmers sanity while making any code changes.\n> In large object-oriented programs, it can sometimes be useful to put class definitions under control of a metaclass\n> that are used to alert programmers to potential problems.\n> \n> Most important that package enforces you to write **clear** and **concise pythonic** code.\n\n## Tools\n\n- python 3.6 | 3.7 | 3.8\n- [travis](https://travis-ci.org) CI\n- code analysis\n  - [pytest](https://pypi.org/project/pytest/)\n  - [black](https://black.readthedocs.io/en/stable/)\n  - [mypy](http://mypy.readthedocs.io/en/latest)\n  - [pylint](https://www.pylint.org/)\n  - [flake8](http://flake8.pycqa.org/en/latest/)\n\n## Usage\n\n### Installation\n\nPlease run following script to obtain latest package from PYPI:\n```bash\npip install enforce-pep8\n\u2728 \ud83c\udf70 \u2728\n```\n### Quick start\n\n**Bad class name**: lowercase class name is defined\n```python\nfrom punish.style import AbstractStyle\n\n\nclass stylish(AbstractStyle):\n     def name(self) -> None:\n         pass\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  punish.style.BadClassNameError\nClass name 'stylish' specified in lowercase. Consider to use camelcase style!\n```\n\n**Bad attribute name**: camelcase method name is defined\n```python\nfrom punish.style import AbstractStyle\n\n\nclass Stylish(AbstractStyle):\n     def showName(self) -> None:\n         pass\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  punish.style.BadAttributeNameError\nBad attribute name is specified: 'Stylish:showName'. Consider to use lowercase style: 'Stylish:showname'! \n```\n\n**Bad method signature**: method signature mismatch within base and child classes\n```python\nfrom punish.style import AbstractStyle\n\n\nclass Stylish(AbstractStyle):\n     def show(self, indent: str = \":\") -> str:\n         pass\n\n\nclass SoStylish(Stylish):\n    def show(self, indent: str = \":\", not_expected_argument: bool = False) -> str:\n        pass\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  punish.style.SignatureError\nSignature mismatch in 'SoStylish.show', \n(self, indent: str = ':') -> str != (self, indent: str = ':', not_expected_argument: bool = False) -> str \n```\n\n**Duplicated attribute name**: defined two methods with same name\n```python\nfrom punish.style import AbstractStyle\n\n\nclass Stylish(AbstractStyle):\n    def name(self) -> None:\n        pass\n\n    def name(self) -> None:\n        pass\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 5, in Stylish\npunish.style.DuplicateAttributeError: 'name' attribute is already defined in 'Stylish' class\n```\n\n**Bad argument type**: not expected type is passed to the argument\n```python\nfrom punish.type import OrderTypedMeta, String, Typed\n\n\nclass Car(metaclass=OrderTypedMeta):\n    color: Typed = String()\n\n    def __init__(self, color: str) -> None:\n        self.color = color\n\n\ncar: Car = Car(color=23)\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 5, in __init__\nTypeError: Expected '<class 'str'>' type for 'color' attribute\n```\n\n**Bad setter type**: not expected type for setter argument\n```python\nfrom punish.type import typed_property\n\n\nclass Person:\n    name: property = typed_property(\"name\", str)\n    age: property = typed_property(\"age\", int)\n\n    def __init__(self, name: str, age: int) -> None:\n        self._name = name\n        self._age = age\n\n\nperson: Person = Person(name=\"Luke\", age=22)\nperson.age = None\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 5, in __init__\nTypeError: 'age' argument must be a '<class 'int'>' type\n```\n### Source code\n\n```bash\ngit clone git@github.com:vyahello/enforce-pep8.git\npip install -e .\n```\n\nOr using direct source:\n```bash\npip install git+https://github.com/vyahello/enforce-pep8@0.0.1\n```\n**[\u2b06 back to top](#enforce-pep-8)**\n\n## Development notes\n\n### Testing\n\nPlease execute command below to run unittests with `pytest` tool:\n```bash\npytest\n```\n\n### CI\n\nProject has Travis CI integration using [.travis.yml](.travis.yml) file thus code analysis (`black`, `pylint`, `flake8`, `mypy`, `pydocstyle`) and unittests (`pytest`) will be run automatically after every made change to the repository.\n\nTo be able to run code analysis, please execute command below:\n```bash\n./analyse-source-code.sh\n```\n### Release notes\n\nPlease check [changelog](CHANGELOG.md) file to get more details about actual versions and it's release notes.\n\n### Meta\n\nAuthor \u2013 _Volodymyr Yahello_. Please check [authors](AUTHORS.md) file for more details.\n\nDistributed under the `MIT` license. See [LICENSE](LICENSE.md) for more information.\n\nYou can reach out me at:\n* [vyahello@gmail.com](vyahello@gmail.com)\n* [https://github.com/vyahello](https://github.com/vyahello)\n* [https://www.linkedin.com/in/volodymyr-yahello-821746127](https://www.linkedin.com/in/volodymyr-yahello-821746127)\n\n### Contributing\n1. clone the repository\n2. configure Git for the first time after cloning with your `name` and `email`\n3. `pip install -r requirements.txt` to install all project dependencies\n4. `pip install -r requirements-dev.txt` to install all development project dependencies\n\n**[\u2b06 back to top](#enforce-pep-8)**\n\n## What's next\n\nProject is inspired mainly by **pythonic** PEP8 code style reflected at https://www.python.org/dev/peps/pep-0008.\nAlso decent ideas are described in https://github.com/zedr/clean-code-python project.\n\nIn general, future releases will contain API implementations from mentioned style guides above.\n\n**[\u2b06 back to top](#enforce-pep-8)**\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vyahello/enforce-pep8", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "enforce-pep8", "package_url": "https://pypi.org/project/enforce-pep8/", "platform": "", "project_url": "https://pypi.org/project/enforce-pep8/", "project_urls": {"Homepage": "https://github.com/vyahello/enforce-pep8"}, "release_url": "https://pypi.org/project/enforce-pep8/0.0.8/", "requires_dist": ["dataclasses (==0.6.0)"], "requires_python": ">=3.6", "summary": "Package contains interfaces to enforce PEP8 coding conventions.", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"made-with-python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68a99107ffdf24c5fb2cc4bca38b7b662e501b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e2d3166343235662e737667\"></a>\n<a href=\"https://travis-ci.org/upymake/enforce-pep8\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fb039f783bae0e15a46e2d5eccd337e30fb0209/68747470733a2f2f7472617669732d63692e6f72672f7570796d616b652f656e666f7263652d706570382e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/upymake/enforce-pep8?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e67b293a5a811e2e34d85466defb24c4fbf09c9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7570796d616b652f656e666f7263652d706570382f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://www.pylint.org\" rel=\"nofollow\"><img alt=\"Checked with pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e6e6f08009f3095ab205fc54d8fb03d5b46126a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70796c696e742d636865636b65642d626c7565\"></a>\n<a href=\"http://flake8.pycqa.org/\" rel=\"nofollow\"><img alt=\"Checked with flake8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3874c3cdc6794b096c0813c59c1a3ea26a0f8f2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666c616b65382d636865636b65642d626c7565\"></a>\n<a href=\"http://www.pydocstyle.org/\" rel=\"nofollow\"><img alt=\"Checked with pydocstyle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f1157e5c951665d7e25ea36ea0f1dd3fced4c72/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7079646f637374796c652d636865636b65642d79656c6c6f77677265656e\"></a>\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"Checked with mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"LICENSE.md\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7db8d43223f55fabe102838639f47819829c1ca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667\"></a>\n<a href=\"https://www.elegantobjects.org\" rel=\"nofollow\"><img alt=\"EO principles respected here\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c295f2e0be077b5a926a6513b469867a21feb9bb/68747470733a2f2f7777772e656c6567616e746f626a656374732e6f72672f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/enforce-pep8/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a07eca92ec50aa2618263a7f98df08cb56f024ee/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656e666f7263652d706570382e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/enforce-pep8/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/357f846cbe143738f0165f0f8f5621c636fcee66/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f656e666f7263652d706570382e737667\"></a>\n<a href=\"https://www.codefactor.io/repository/github/upymake/enforce-pep8\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/569d80f444d71dea2057f74addf1a50a93b4929c/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7570796d616b652f656e666f7263652d706570382f6261646765\"></a>\n<a href=\"https://pepy.tech/project/enforce-pep8\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/745831e1a447fff53a8bfe006f00ce5c546d9a27/68747470733a2f2f706570792e746563682f62616467652f656e666f7263652d70657038\"></a></p>\n<h1>Enforce PEP-8</h1>\n<blockquote>\n<p>Package allows to enforce certain kinds of <strong>PEP-8</strong> convention coding styles (or perform overall code diagnostics).\nIt aims to help maintain programmers sanity while making any code changes.\nIn large object-oriented programs, it can sometimes be useful to put class definitions under control of a metaclass\nthat are used to alert programmers to potential problems.</p>\n<p>Most important that package enforces you to write <strong>clear</strong> and <strong>concise pythonic</strong> code.</p>\n</blockquote>\n<h2>Tools</h2>\n<ul>\n<li>python 3.6 | 3.7 | 3.8</li>\n<li><a href=\"https://travis-ci.org\" rel=\"nofollow\">travis</a> CI</li>\n<li>code analysis\n<ul>\n<li><a href=\"https://pypi.org/project/pytest/\" rel=\"nofollow\">pytest</a></li>\n<li><a href=\"https://black.readthedocs.io/en/stable/\" rel=\"nofollow\">black</a></li>\n<li><a href=\"http://mypy.readthedocs.io/en/latest\" rel=\"nofollow\">mypy</a></li>\n<li><a href=\"https://www.pylint.org/\" rel=\"nofollow\">pylint</a></li>\n<li><a href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\">flake8</a></li>\n</ul>\n</li>\n</ul>\n<h2>Usage</h2>\n<h3>Installation</h3>\n<p>Please run following script to obtain latest package from PYPI:</p>\n<pre>pip install enforce-pep8\n\u2728 \ud83c\udf70 \u2728\n</pre>\n<h3>Quick start</h3>\n<p><strong>Bad class name</strong>: lowercase class name is defined</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">punish.style</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractStyle</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">stylish</span><span class=\"p\">(</span><span class=\"n\">AbstractStyle</span><span class=\"p\">):</span>\n     <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n         <span class=\"k\">pass</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">punish</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">BadClassNameError</span>\n<span class=\"n\">Class</span> <span class=\"n\">name</span> <span class=\"s1\">'stylish'</span> <span class=\"n\">specified</span> <span class=\"ow\">in</span> <span class=\"n\">lowercase</span><span class=\"o\">.</span> <span class=\"n\">Consider</span> <span class=\"n\">to</span> <span class=\"n\">use</span> <span class=\"n\">camelcase</span> <span class=\"n\">style</span><span class=\"err\">!</span>\n</pre>\n<p><strong>Bad attribute name</strong>: camelcase method name is defined</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">punish.style</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractStyle</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Stylish</span><span class=\"p\">(</span><span class=\"n\">AbstractStyle</span><span class=\"p\">):</span>\n     <span class=\"k\">def</span> <span class=\"nf\">showName</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n         <span class=\"k\">pass</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">punish</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">BadAttributeNameError</span>\n<span class=\"n\">Bad</span> <span class=\"n\">attribute</span> <span class=\"n\">name</span> <span class=\"ow\">is</span> <span class=\"n\">specified</span><span class=\"p\">:</span> <span class=\"s1\">'Stylish:showName'</span><span class=\"o\">.</span> <span class=\"n\">Consider</span> <span class=\"n\">to</span> <span class=\"n\">use</span> <span class=\"n\">lowercase</span> <span class=\"n\">style</span><span class=\"p\">:</span> <span class=\"s1\">'Stylish:showname'</span><span class=\"err\">!</span> \n</pre>\n<p><strong>Bad method signature</strong>: method signature mismatch within base and child classes</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">punish.style</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractStyle</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Stylish</span><span class=\"p\">(</span><span class=\"n\">AbstractStyle</span><span class=\"p\">):</span>\n     <span class=\"k\">def</span> <span class=\"nf\">show</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\":\"</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n         <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SoStylish</span><span class=\"p\">(</span><span class=\"n\">Stylish</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">show</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\":\"</span><span class=\"p\">,</span> <span class=\"n\">not_expected_argument</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">punish</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">SignatureError</span>\n<span class=\"n\">Signature</span> <span class=\"n\">mismatch</span> <span class=\"ow\">in</span> <span class=\"s1\">'SoStylish.show'</span><span class=\"p\">,</span> \n<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">':'</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span> <span class=\"o\">!=</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">':'</span><span class=\"p\">,</span> <span class=\"n\">not_expected_argument</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span> \n</pre>\n<p><strong>Duplicated attribute name</strong>: defined two methods with same name</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">punish.style</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractStyle</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Stylish</span><span class=\"p\">(</span><span class=\"n\">AbstractStyle</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">Stylish</span>\n<span class=\"n\">punish</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">DuplicateAttributeError</span><span class=\"p\">:</span> <span class=\"s1\">'name'</span> <span class=\"n\">attribute</span> <span class=\"ow\">is</span> <span class=\"n\">already</span> <span class=\"n\">defined</span> <span class=\"ow\">in</span> <span class=\"s1\">'Stylish'</span> <span class=\"k\">class</span>\n</pre>\n<p><strong>Bad argument type</strong>: not expected type is passed to the argument</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">punish.type</span> <span class=\"kn\">import</span> <span class=\"n\">OrderTypedMeta</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Typed</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Car</span><span class=\"p\">(</span><span class=\"n\">metaclass</span><span class=\"o\">=</span><span class=\"n\">OrderTypedMeta</span><span class=\"p\">):</span>\n    <span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">Typed</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n\n\n<span class=\"n\">car</span><span class=\"p\">:</span> <span class=\"n\">Car</span> <span class=\"o\">=</span> <span class=\"n\">Car</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"mi\">23</span><span class=\"p\">)</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Expected</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">str</span><span class=\"s1\">'&gt;'</span> <span class=\"nb\">type</span> <span class=\"k\">for</span> <span class=\"s1\">'color'</span> <span class=\"n\">attribute</span>\n</pre>\n<p><strong>Bad setter type</strong>: not expected type for setter argument</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">punish.type</span> <span class=\"kn\">import</span> <span class=\"n\">typed_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">property</span> <span class=\"o\">=</span> <span class=\"n\">typed_property</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">property</span> <span class=\"o\">=</span> <span class=\"n\">typed_property</span><span class=\"p\">(</span><span class=\"s2\">\"age\"</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_age</span> <span class=\"o\">=</span> <span class=\"n\">age</span>\n\n\n<span class=\"n\">person</span><span class=\"p\">:</span> <span class=\"n\">Person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Luke\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">22</span><span class=\"p\">)</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"fm\">__init__</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"s1\">'age'</span> <span class=\"n\">argument</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">int</span><span class=\"s1\">'&gt;'</span> <span class=\"nb\">type</span>\n</pre>\n<h3>Source code</h3>\n<pre>git clone git@github.com:vyahello/enforce-pep8.git\npip install -e .\n</pre>\n<p>Or using direct source:</p>\n<pre>pip install git+https://github.com/vyahello/enforce-pep8@0.0.1\n</pre>\n<p><strong><a href=\"#enforce-pep-8\" rel=\"nofollow\">\u2b06 back to top</a></strong></p>\n<h2>Development notes</h2>\n<h3>Testing</h3>\n<p>Please execute command below to run unittests with <code>pytest</code> tool:</p>\n<pre>pytest\n</pre>\n<h3>CI</h3>\n<p>Project has Travis CI integration using <a href=\".travis.yml\" rel=\"nofollow\">.travis.yml</a> file thus code analysis (<code>black</code>, <code>pylint</code>, <code>flake8</code>, <code>mypy</code>, <code>pydocstyle</code>) and unittests (<code>pytest</code>) will be run automatically after every made change to the repository.</p>\n<p>To be able to run code analysis, please execute command below:</p>\n<pre>./analyse-source-code.sh\n</pre>\n<h3>Release notes</h3>\n<p>Please check <a href=\"CHANGELOG.md\" rel=\"nofollow\">changelog</a> file to get more details about actual versions and it's release notes.</p>\n<h3>Meta</h3>\n<p>Author \u2013 <em>Volodymyr Yahello</em>. Please check <a href=\"AUTHORS.md\" rel=\"nofollow\">authors</a> file for more details.</p>\n<p>Distributed under the <code>MIT</code> license. See <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE</a> for more information.</p>\n<p>You can reach out me at:</p>\n<ul>\n<li><a href=\"vyahello@gmail.com\" rel=\"nofollow\">vyahello@gmail.com</a></li>\n<li><a href=\"https://github.com/vyahello\" rel=\"nofollow\">https://github.com/vyahello</a></li>\n<li><a href=\"https://www.linkedin.com/in/volodymyr-yahello-821746127\" rel=\"nofollow\">https://www.linkedin.com/in/volodymyr-yahello-821746127</a></li>\n</ul>\n<h3>Contributing</h3>\n<ol>\n<li>clone the repository</li>\n<li>configure Git for the first time after cloning with your <code>name</code> and <code>email</code></li>\n<li><code>pip install -r requirements.txt</code> to install all project dependencies</li>\n<li><code>pip install -r requirements-dev.txt</code> to install all development project dependencies</li>\n</ol>\n<p><strong><a href=\"#enforce-pep-8\" rel=\"nofollow\">\u2b06 back to top</a></strong></p>\n<h2>What's next</h2>\n<p>Project is inspired mainly by <strong>pythonic</strong> PEP8 code style reflected at <a href=\"https://www.python.org/dev/peps/pep-0008\" rel=\"nofollow\">https://www.python.org/dev/peps/pep-0008</a>.\nAlso decent ideas are described in <a href=\"https://github.com/zedr/clean-code-python\" rel=\"nofollow\">https://github.com/zedr/clean-code-python</a> project.</p>\n<p>In general, future releases will contain API implementations from mentioned style guides above.</p>\n<p><strong><a href=\"#enforce-pep-8\" rel=\"nofollow\">\u2b06 back to top</a></strong></p>\n\n          </div>"}, "last_serial": 7104142, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5b2fce7ddd3431a9615a3b2b33263698", "sha256": "b784e748442f7b52f44b37d05aee26a25bf6bc78a985e84e05225ecdfda5c637"}, "downloads": -1, "filename": "enforce_pep8-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b2fce7ddd3431a9615a3b2b33263698", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6581, "upload_time": "2020-04-02T14:11:29", "upload_time_iso_8601": "2020-04-02T14:11:29.072626Z", "url": "https://files.pythonhosted.org/packages/22/64/c9d8483cc3fb43e7c169b384c788b3fd081a977ad7636ac8c4e0938dead7/enforce_pep8-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bd1a1eaad12b947c163dc93c39c7301", "sha256": "19e6e0dd49ef3a3f7d6e81e97e034eda30a07ad7e93fa229d8572d32995d5160"}, "downloads": -1, "filename": "enforce-pep8-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8bd1a1eaad12b947c163dc93c39c7301", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7691, "upload_time": "2020-04-02T14:11:31", "upload_time_iso_8601": "2020-04-02T14:11:31.333877Z", "url": "https://files.pythonhosted.org/packages/d2/cf/257365bc44e5d26cabeed192f314c25f9f437b3d85edc862f91cbc96f651/enforce-pep8-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9fa651f91141d3a1c8913d3b968a6427", "sha256": "79454fec5564d8037ccd97d539e5ba2b5c5e7bec40a0f18294153c878e3f1a14"}, "downloads": -1, "filename": "enforce_pep8-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9fa651f91141d3a1c8913d3b968a6427", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6966, "upload_time": "2020-04-05T22:02:39", "upload_time_iso_8601": "2020-04-05T22:02:39.545428Z", "url": "https://files.pythonhosted.org/packages/bc/62/e978563973f8a9703db4641806a1abd2dd084e8dde9a203d73a4de152eea/enforce_pep8-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8cd05cfeaaa0fb5c85f2960e84e71c60", "sha256": "fcaf5738365a123a16dd57a15387592388a2c3ddecb865db8c9f32da261c1f86"}, "downloads": -1, "filename": "enforce-pep8-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8cd05cfeaaa0fb5c85f2960e84e71c60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8153, "upload_time": "2020-04-05T22:02:41", "upload_time_iso_8601": "2020-04-05T22:02:41.338926Z", "url": "https://files.pythonhosted.org/packages/71/72/6e7c051b8b0337747e9ad85c084ace244ca3d558b634b70c82b583d9041e/enforce-pep8-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e1d32a04064c484d3ea487b2325841dc", "sha256": "413ec0fbc1dc7765742c6bb1781029ce1ad7f18ffb7c211b00096d4e927eb0a2"}, "downloads": -1, "filename": "enforce_pep8-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e1d32a04064c484d3ea487b2325841dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8888, "upload_time": "2020-04-06T14:07:51", "upload_time_iso_8601": "2020-04-06T14:07:51.623775Z", "url": "https://files.pythonhosted.org/packages/4a/03/66ea38bb4e5f404a945886629a796332f15a909d026aebc9e0e991ee56e4/enforce_pep8-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33484733b399151ebc518c3f6acacbcf", "sha256": "a31ac2c6d8d5805c425b6baea31ece00677357506b38aa95fd0724196b259e5e"}, "downloads": -1, "filename": "enforce-pep8-0.0.3.tar.gz", "has_sig": false, "md5_digest": "33484733b399151ebc518c3f6acacbcf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9585, "upload_time": "2020-04-06T14:07:53", "upload_time_iso_8601": "2020-04-06T14:07:53.199445Z", "url": "https://files.pythonhosted.org/packages/70/af/90d986674de792fa8bf01c5433f5f1bc3442560412a3d5c2c2a9f19f1d8a/enforce-pep8-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6a9ab1b8d54a3109fdc113b16b5df966", "sha256": "b7cdd7dfd23d321c8057e4e81adeee8807d4ffddad5036e605566a7444fadb21"}, "downloads": -1, "filename": "enforce_pep8-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6a9ab1b8d54a3109fdc113b16b5df966", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9959, "upload_time": "2020-04-08T17:47:37", "upload_time_iso_8601": "2020-04-08T17:47:37.564787Z", "url": "https://files.pythonhosted.org/packages/2b/91/27de108c2f0af0574b5ee9f798f5eecb30dcfe5b9e742db8eb9c7839593a/enforce_pep8-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66292e5c8fd637fdb1dc37d0a69157f6", "sha256": "b2f8f41b598e44f1124920d2c526c46caa1cd0600565d6a5f0ee4c3519a83ab5"}, "downloads": -1, "filename": "enforce-pep8-0.0.4.tar.gz", "has_sig": false, "md5_digest": "66292e5c8fd637fdb1dc37d0a69157f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10595, "upload_time": "2020-04-08T17:47:39", "upload_time_iso_8601": "2020-04-08T17:47:39.188389Z", "url": "https://files.pythonhosted.org/packages/ae/b7/a318c82740b512881c68fdf715df36bc69972657fbacde1908c7f3a0b036/enforce-pep8-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f86ea04de3ce299c94dea9b881f16248", "sha256": "fdd5f9c60c7cf8b288803c0741c7f9e5f491cf2a290d95650edcb39a7ba15cdc"}, "downloads": -1, "filename": "enforce_pep8-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f86ea04de3ce299c94dea9b881f16248", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10244, "upload_time": "2020-04-11T20:25:09", "upload_time_iso_8601": "2020-04-11T20:25:09.510130Z", "url": "https://files.pythonhosted.org/packages/b8/7d/8dfc532ac4f2f60e03c8a7d66340561cb91805703bd4420e9e55e5896da1/enforce_pep8-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afdbe93c71628eba134faf8899df941f", "sha256": "2102315218fdba74d6df44a259bdb9167209ea7f95c21c117dfdd997ba85b8ee"}, "downloads": -1, "filename": "enforce-pep8-0.0.5.tar.gz", "has_sig": false, "md5_digest": "afdbe93c71628eba134faf8899df941f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10951, "upload_time": "2020-04-11T20:25:11", "upload_time_iso_8601": "2020-04-11T20:25:11.436607Z", "url": "https://files.pythonhosted.org/packages/6c/dc/6686e49bb15ef4f1615ddf0eab82af802e6069eb1a67ec375002474d2370/enforce-pep8-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "724c84ce439064b01afc8c93d7573bd0", "sha256": "05d8eecfeb2e1bb129163fe40e9e6bea3f408495b0aacc7cf61f8269f6dfbf08"}, "downloads": -1, "filename": "enforce_pep8-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "724c84ce439064b01afc8c93d7573bd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10565, "upload_time": "2020-04-16T20:58:58", "upload_time_iso_8601": "2020-04-16T20:58:58.099234Z", "url": "https://files.pythonhosted.org/packages/c6/f2/963956501b4f614a6c443aade22cfecf4e85b38f250351ec4679aa373f92/enforce_pep8-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "256862d2a627559106f55b8af25a9553", "sha256": "f7ca40adb1228799c11407da08212beb851d1c4c2767a3a0b9b47639cbeb902b"}, "downloads": -1, "filename": "enforce-pep8-0.0.6.tar.gz", "has_sig": false, "md5_digest": "256862d2a627559106f55b8af25a9553", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11284, "upload_time": "2020-04-16T20:58:59", "upload_time_iso_8601": "2020-04-16T20:58:59.626273Z", "url": "https://files.pythonhosted.org/packages/a5/c9/90db0ebcdac64000c458909a8b1aa9315ad26bf27931b68a08600bd7d8e0/enforce-pep8-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f9a6aa5006830f6f1777a4c2de5afdd7", "sha256": "10f504fe9f8a7a6ca4043917e19bbf8528bc9f10dc8fdfb514d11c900228b545"}, "downloads": -1, "filename": "enforce_pep8-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f9a6aa5006830f6f1777a4c2de5afdd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10582, "upload_time": "2020-04-23T12:48:07", "upload_time_iso_8601": "2020-04-23T12:48:07.898694Z", "url": "https://files.pythonhosted.org/packages/33/57/58f5543f760f1f84c207b765c0722d811a0e5704c5736259431e3121b4df/enforce_pep8-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e437c3454c2414a101ff97c47dc8870", "sha256": "f0543874668720fa741bc5cb66d4657c907eec8add707c4513b28478969c44ee"}, "downloads": -1, "filename": "enforce-pep8-0.0.7.tar.gz", "has_sig": false, "md5_digest": "9e437c3454c2414a101ff97c47dc8870", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11353, "upload_time": "2020-04-23T12:48:09", "upload_time_iso_8601": "2020-04-23T12:48:09.819410Z", "url": "https://files.pythonhosted.org/packages/57/59/840c728781c6e264959f955a40bc641e39d6678b5d6bede94e82026917f2/enforce-pep8-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "16600b9bdcfc326713ba2282738cf10e", "sha256": "b02dc6de4aacec0abb82a833efb9ad009ebcbbe67de0ba8540d4c27db5ac29b0"}, "downloads": -1, "filename": "enforce_pep8-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "16600b9bdcfc326713ba2282738cf10e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10885, "upload_time": "2020-04-26T10:27:23", "upload_time_iso_8601": "2020-04-26T10:27:23.993965Z", "url": "https://files.pythonhosted.org/packages/49/f8/780b95033f211a29569e0ffc01c3a1922fea26a0926e04dfea788c9a0b54/enforce_pep8-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7e65695e2aa56cdd707ceb01d554232", "sha256": "ecfcff65434ee4fc872608c99c4de6ac994af4360454f8bee4618474fe8924d5"}, "downloads": -1, "filename": "enforce-pep8-0.0.8.tar.gz", "has_sig": false, "md5_digest": "a7e65695e2aa56cdd707ceb01d554232", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11612, "upload_time": "2020-04-26T10:27:25", "upload_time_iso_8601": "2020-04-26T10:27:25.721963Z", "url": "https://files.pythonhosted.org/packages/37/39/e4d8f24cb2f89cbd68f2fac5bc6d3e8edde4cbe669efe5f2e34ffc915dda/enforce-pep8-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16600b9bdcfc326713ba2282738cf10e", "sha256": "b02dc6de4aacec0abb82a833efb9ad009ebcbbe67de0ba8540d4c27db5ac29b0"}, "downloads": -1, "filename": "enforce_pep8-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "16600b9bdcfc326713ba2282738cf10e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10885, "upload_time": "2020-04-26T10:27:23", "upload_time_iso_8601": "2020-04-26T10:27:23.993965Z", "url": "https://files.pythonhosted.org/packages/49/f8/780b95033f211a29569e0ffc01c3a1922fea26a0926e04dfea788c9a0b54/enforce_pep8-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7e65695e2aa56cdd707ceb01d554232", "sha256": "ecfcff65434ee4fc872608c99c4de6ac994af4360454f8bee4618474fe8924d5"}, "downloads": -1, "filename": "enforce-pep8-0.0.8.tar.gz", "has_sig": false, "md5_digest": "a7e65695e2aa56cdd707ceb01d554232", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11612, "upload_time": "2020-04-26T10:27:25", "upload_time_iso_8601": "2020-04-26T10:27:25.721963Z", "url": "https://files.pythonhosted.org/packages/37/39/e4d8f24cb2f89cbd68f2fac5bc6d3e8edde4cbe669efe5f2e34ffc915dda/enforce-pep8-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:22 2020"}