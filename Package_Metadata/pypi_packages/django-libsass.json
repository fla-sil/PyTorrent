{"info": {"author": "Matt Westcott", "author_email": "matthew.westcott@torchbox.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "django-libsass\n==============\n\nA django-compressor filter to compile Sass files using libsass.\n\nInstallation\n~~~~~~~~~~~~\n\nStarting from a Django project with `django-compressor <https://github.com/django-compressor/django-compressor/>`_ set up::\n\n pip install django-libsass\n\nand add django_libsass.SassCompiler to your COMPRESS_PRECOMPILERS setting::\n\n COMPRESS_PRECOMPILERS = (\n     ('text/x-scss', 'django_libsass.SassCompiler'),\n )\n\nYou can now use the content type text/x-scss on your stylesheets, and have them\ncompiled seamlessly into CSS::\n\n {% compress css %}\n     <link rel=\"stylesheet\" type=\"text/x-scss\" href=\"{% static \"myapp/css/main.scss\" %}\" />\n {% endcompress %}\n\n\nImports\n~~~~~~~\n\nRelative paths in @import lines are followed as you would expect::\n\n @import \"../variables.scss\";\n\nAdditionally, Django's STATICFILES_FINDERS setting is consulted, and all possible locations\nfor static files *on the local filesystem* are included on the search path. This makes it\npossible to import files across different apps::\n\n @import \"myotherapp/css/widget.scss\"\n\n\nSettings\n~~~~~~~~\n\nThe following settings can be used to control django-libsass's behaviour:\n\n* ``LIBSASS_SOURCE_COMMENTS`` - whether to enable SASS source comments (adds comments about source lines). Defaults to ``True`` when Django's ``DEBUG`` is ``True``, ``False`` otherwise.\n* ``LIBSASS_OUTPUT_STYLE`` - SASS output style. Options are ``'nested'``, ``'expanded'``, ``'compact'`` and ``'compressed'``, although as of libsass 3.0.2 only ``'nested'`` and ``'compressed'`` are implemented. Default is 'nested'. See `SASS documentation for output styles <http://sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style>`_. Note that `django-compressor's settings <http://django-compressor.readthedocs.org/en/latest/settings/>`_ may also affect the formatting of the resulting CSS.\n* ``LIBSASS_CUSTOM_FUNCTIONS`` - A mapping of custom functions to be made available within the SASS compiler. By default, a ``static`` function is provided, analogous to Django's ``static`` template tag.\n* ``LIBSASS_SOURCEMAPS`` - Enable embedding sourcemaps into file output.\n* ``LIBSASS_PRECISION`` - Number of digits of numerical precision (default: 5)\n* ``LIBSASS_ADDITIONAL_INCLUDE_PATHS`` - a list of base paths to be recognised in @import lines, in addition to Django's recognised static file locations\n\n\nCustom functions\n~~~~~~~~~~~~~~~~\n\nThe SASS compiler can be extended with custom Python functions defined in the ``LIBSASS_CUSTOM_FUNCTIONS`` setting. By default, a ``static`` function is provided, for generating static paths to resources such as images and fonts::\n\n    .foo {\n        background: url(static(\"myapp/image/bar.png\"));\n    }\n\nIf your ``STATIC_URL`` is '/static/', this will be rendered as::\n\n    .foo {\n        background: url(\"/static/myapp/image/bar.png\"));\n    }\n\nWhy django-libsass?\n~~~~~~~~~~~~~~~~~~~\n\nWe wanted to use Sass in a Django project without introducing any external (non pip-installable)\ndependencies. (Actually, we wanted to use Less, but the same arguments apply...) There are a few\npure Python implementations of Sass and Less, but we found that they invariably didn't match the\nbehaviour of the reference compilers, either in their handling of @imports or lesser-used CSS\nfeatures such as media queries.\n\n`libsass <http://libsass.org/>`_ is a mature C/C++ port of the Sass engine, co-developed by the\noriginal creator of Sass, and we can reasonably rely on it to stay in sync with the reference\nSass compiler - and, being C/C++, it's fast. Thanks to Hong Minhee's\n`libsass-python <https://github.com/dahlia/libsass-python>`_ project, it has Python bindings and\ninstalls straight from pip.\n\ndjango-libsass builds on libsass-python to make @import paths aware of Django's staticfiles\nmechanism, and provides a filter module for django-compressor which uses the libsass-python API\ndirectly, avoiding the overheads of calling an external executable to do the compilation.\n\nAuthor\n~~~~~~\n\nMatt Westcott matthew.westcott@torchbox.com\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/torchbox/django-libsass", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-libsass", "package_url": "https://pypi.org/project/django-libsass/", "platform": "", "project_url": "https://pypi.org/project/django-libsass/", "project_urls": {"Homepage": "https://github.com/torchbox/django-libsass"}, "release_url": "https://pypi.org/project/django-libsass/0.8/", "requires_dist": ["django-compressor (>=1.3)", "libsass (<1,>=0.7.0)"], "requires_python": "", "summary": "A django-compressor filter to compile SASS files using libsass", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A django-compressor filter to compile Sass files using libsass.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Starting from a Django project with <a href=\"https://github.com/django-compressor/django-compressor/\" rel=\"nofollow\">django-compressor</a> set up:</p>\n<pre>pip install django-libsass\n</pre>\n<p>and add django_libsass.SassCompiler to your COMPRESS_PRECOMPILERS setting:</p>\n<pre>COMPRESS_PRECOMPILERS = (\n    ('text/x-scss', 'django_libsass.SassCompiler'),\n)\n</pre>\n<p>You can now use the content type text/x-scss on your stylesheets, and have them\ncompiled seamlessly into CSS:</p>\n<pre>{% compress css %}\n    &lt;link rel=\"stylesheet\" type=\"text/x-scss\" href=\"{% static \"myapp/css/main.scss\" %}\" /&gt;\n{% endcompress %}\n</pre>\n</div>\n<div id=\"imports\">\n<h2>Imports</h2>\n<p>Relative paths in @import lines are followed as you would expect:</p>\n<pre>@import \"../variables.scss\";\n</pre>\n<p>Additionally, Django\u2019s STATICFILES_FINDERS setting is consulted, and all possible locations\nfor static files <em>on the local filesystem</em> are included on the search path. This makes it\npossible to import files across different apps:</p>\n<pre>@import \"myotherapp/css/widget.scss\"\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>The following settings can be used to control django-libsass\u2019s behaviour:</p>\n<ul>\n<li><tt>LIBSASS_SOURCE_COMMENTS</tt> - whether to enable SASS source comments (adds comments about source lines). Defaults to <tt>True</tt> when Django\u2019s <tt>DEBUG</tt> is <tt>True</tt>, <tt>False</tt> otherwise.</li>\n<li><tt>LIBSASS_OUTPUT_STYLE</tt> - SASS output style. Options are <tt>'nested'</tt>, <tt>'expanded'</tt>, <tt>'compact'</tt> and <tt>'compressed'</tt>, although as of libsass 3.0.2 only <tt>'nested'</tt> and <tt>'compressed'</tt> are implemented. Default is \u2018nested\u2019. See <a href=\"http://sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style\" rel=\"nofollow\">SASS documentation for output styles</a>. Note that <a href=\"http://django-compressor.readthedocs.org/en/latest/settings/\" rel=\"nofollow\">django-compressor\u2019s settings</a> may also affect the formatting of the resulting CSS.</li>\n<li><tt>LIBSASS_CUSTOM_FUNCTIONS</tt> - A mapping of custom functions to be made available within the SASS compiler. By default, a <tt>static</tt> function is provided, analogous to Django\u2019s <tt>static</tt> template tag.</li>\n<li><tt>LIBSASS_SOURCEMAPS</tt> - Enable embedding sourcemaps into file output.</li>\n<li><tt>LIBSASS_PRECISION</tt> - Number of digits of numerical precision (default: 5)</li>\n<li><tt>LIBSASS_ADDITIONAL_INCLUDE_PATHS</tt> - a list of base paths to be recognised in @import lines, in addition to Django\u2019s recognised static file locations</li>\n</ul>\n</div>\n<div id=\"custom-functions\">\n<h2>Custom functions</h2>\n<p>The SASS compiler can be extended with custom Python functions defined in the <tt>LIBSASS_CUSTOM_FUNCTIONS</tt> setting. By default, a <tt>static</tt> function is provided, for generating static paths to resources such as images and fonts:</p>\n<pre>.foo {\n    background: url(static(\"myapp/image/bar.png\"));\n}\n</pre>\n<p>If your <tt>STATIC_URL</tt> is \u2018/static/\u2019, this will be rendered as:</p>\n<pre>.foo {\n    background: url(\"/static/myapp/image/bar.png\"));\n}\n</pre>\n</div>\n<div id=\"why-django-libsass\">\n<h2>Why django-libsass?</h2>\n<p>We wanted to use Sass in a Django project without introducing any external (non pip-installable)\ndependencies. (Actually, we wanted to use Less, but the same arguments apply\u2026) There are a few\npure Python implementations of Sass and Less, but we found that they invariably didn\u2019t match the\nbehaviour of the reference compilers, either in their handling of @imports or lesser-used CSS\nfeatures such as media queries.</p>\n<p><a href=\"http://libsass.org/\" rel=\"nofollow\">libsass</a> is a mature C/C++ port of the Sass engine, co-developed by the\noriginal creator of Sass, and we can reasonably rely on it to stay in sync with the reference\nSass compiler - and, being C/C++, it\u2019s fast. Thanks to Hong Minhee\u2019s\n<a href=\"https://github.com/dahlia/libsass-python\" rel=\"nofollow\">libsass-python</a> project, it has Python bindings and\ninstalls straight from pip.</p>\n<p>django-libsass builds on libsass-python to make @import paths aware of Django\u2019s staticfiles\nmechanism, and provides a filter module for django-compressor which uses the libsass-python API\ndirectly, avoiding the overheads of calling an external executable to do the compilation.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Matt Westcott <a href=\"mailto:matthew.westcott%40torchbox.com\">matthew<span>.</span>westcott<span>@</span>torchbox<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 6401955, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dff75ce3017af48dc0df24cf79a19b93", "sha256": "f281fab9e18ff278251f33a36f8daea8ccbc233fa76b26a82777a9d9683da8bb"}, "downloads": -1, "filename": "django-libsass-0.1.tar.gz", "has_sig": false, "md5_digest": "dff75ce3017af48dc0df24cf79a19b93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3089, "upload_time": "2014-03-05T19:42:38", "upload_time_iso_8601": "2014-03-05T19:42:38.232189Z", "url": "https://files.pythonhosted.org/packages/01/4c/74ce04644cec95393c6378e757e56576d18507405cbd4bf7cf7b1344d89a/django-libsass-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "31196c632e2f2c35193fb5b315d4fd79", "sha256": "082274237a40b096721fb7b53bab3e83e1f60347f4dbf1b5afa6e3b579aff832"}, "downloads": -1, "filename": "django-libsass-0.2.tar.gz", "has_sig": false, "md5_digest": "31196c632e2f2c35193fb5b315d4fd79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3101, "upload_time": "2014-05-22T15:08:58", "upload_time_iso_8601": "2014-05-22T15:08:58.880244Z", "url": "https://files.pythonhosted.org/packages/a9/de/acc7d610f89c54dd874b213a253c1100a6e525e32ac8bb5fbc78df5390b0/django-libsass-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "090ce722a3086e81390c1c4c0e22693d", "sha256": "cb56b77d564e356320e3ca5fdfef0a7a0003437ab8c449ea03a39499324a646e"}, "downloads": -1, "filename": "django-libsass-0.3.tar.gz", "has_sig": false, "md5_digest": "090ce722a3086e81390c1c4c0e22693d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3635, "upload_time": "2015-04-27T16:56:31", "upload_time_iso_8601": "2015-04-27T16:56:31.910520Z", "url": "https://files.pythonhosted.org/packages/f2/24/af6082472a44429d1a4c66f6bb3881d5a2b930ad9fbe9ced597e3f4a4373/django-libsass-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "06c1de2c931bf2c515ab3b026a38408f", "sha256": "9fc3d90623810565d482b7e4b4f8414a5f886fd6f39705adb27fdead012ded6c"}, "downloads": -1, "filename": "django_libsass-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "06c1de2c931bf2c515ab3b026a38408f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6829, "upload_time": "2015-08-24T13:24:48", "upload_time_iso_8601": "2015-08-24T13:24:48.281279Z", "url": "https://files.pythonhosted.org/packages/8e/de/5b3c989a35767356f0fa1b1ea5c3f14d4b31a414d43cb99ab21b9efacf8c/django_libsass-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1559c31f81171de551002a27823f7c99", "sha256": "e22d1aacbc4865260df8a22999eb1dbab6847ee6abe6d2dd2108c547a3c3fb99"}, "downloads": -1, "filename": "django-libsass-0.4.tar.gz", "has_sig": false, "md5_digest": "1559c31f81171de551002a27823f7c99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4028, "upload_time": "2015-08-24T13:24:38", "upload_time_iso_8601": "2015-08-24T13:24:38.136074Z", "url": "https://files.pythonhosted.org/packages/3a/fa/e09e9fa704fc0d31ec35fdceed86635b5ca06266209ef95af43beae82a06/django-libsass-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "00425c2e53306a5639b90acd73b87c79", "sha256": "50b6ddc5fa93a989c9ce596d40bed5cce29144112152540a9bba1f7f04de3004"}, "downloads": -1, "filename": "django-libsass-0.5.tar.gz", "has_sig": false, "md5_digest": "00425c2e53306a5639b90acd73b87c79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4900, "upload_time": "2015-11-18T01:09:06", "upload_time_iso_8601": "2015-11-18T01:09:06.008425Z", "url": "https://files.pythonhosted.org/packages/7d/d0/1802fff1e5b8f971f9fef34db632e3a40eb1f779dcadda36f2c66769e71e/django-libsass-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "910d1f22cced1f9f0f1acbcfd5177557", "sha256": "661cce5fa81cd260ba524c5ea8f8c7a69d36103636dd9aa00c7fe650c1f5e9f6"}, "downloads": -1, "filename": "django-libsass-0.6.tar.gz", "has_sig": false, "md5_digest": "910d1f22cced1f9f0f1acbcfd5177557", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4914, "upload_time": "2015-11-21T19:13:54", "upload_time_iso_8601": "2015-11-21T19:13:54.454669Z", "url": "https://files.pythonhosted.org/packages/23/64/c3e9f10157b161c11be07a24a3ba96e468dbab708421e0c628d598e8c3eb/django-libsass-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "cd0da08e8c47c7b3e6423e39cdaa44ff", "sha256": "49db3334b87e1f7955c4f9fb9945bc296f8bfd27a14d6d89706e4b0e5dc5de1c"}, "downloads": -1, "filename": "django-libsass-0.7.tar.gz", "has_sig": false, "md5_digest": "cd0da08e8c47c7b3e6423e39cdaa44ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4924, "upload_time": "2016-05-02T22:12:22", "upload_time_iso_8601": "2016-05-02T22:12:22.213232Z", "url": "https://files.pythonhosted.org/packages/96/1a/0ebcb4e90b41f27d2b96adba01c62a590942686c6dbc7371ab89be044066/django-libsass-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "8be29cc7d9f72fb2e42c0a736cfa3683", "sha256": "3e74fd8e75ac0e6ebc0443efc3e530167981bf279fecc2294094c820ae266fbb"}, "downloads": -1, "filename": "django_libsass-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8be29cc7d9f72fb2e42c0a736cfa3683", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6169, "upload_time": "2020-01-06T11:48:00", "upload_time_iso_8601": "2020-01-06T11:48:00.178020Z", "url": "https://files.pythonhosted.org/packages/e4/e5/6334008b5fb90ec70c8a1a1faeee8acf8c2bb94e349a658cb46c7b6f0d2e/django_libsass-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "850acc88aa7c8e20fac75373d30a5673", "sha256": "38fab4ce1245542f3afd7248dc48f8a0b261f5f6c61e7cc43969a9c9079b5ffd"}, "downloads": -1, "filename": "django-libsass-0.8.tar.gz", "has_sig": false, "md5_digest": "850acc88aa7c8e20fac75373d30a5673", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5990, "upload_time": "2020-01-06T11:48:01", "upload_time_iso_8601": "2020-01-06T11:48:01.974470Z", "url": "https://files.pythonhosted.org/packages/ca/42/2792183c2bb27ab6099c847cd9c3e5cbf525770fb2ad2fb13eb893de59f9/django-libsass-0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8be29cc7d9f72fb2e42c0a736cfa3683", "sha256": "3e74fd8e75ac0e6ebc0443efc3e530167981bf279fecc2294094c820ae266fbb"}, "downloads": -1, "filename": "django_libsass-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8be29cc7d9f72fb2e42c0a736cfa3683", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6169, "upload_time": "2020-01-06T11:48:00", "upload_time_iso_8601": "2020-01-06T11:48:00.178020Z", "url": "https://files.pythonhosted.org/packages/e4/e5/6334008b5fb90ec70c8a1a1faeee8acf8c2bb94e349a658cb46c7b6f0d2e/django_libsass-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "850acc88aa7c8e20fac75373d30a5673", "sha256": "38fab4ce1245542f3afd7248dc48f8a0b261f5f6c61e7cc43969a9c9079b5ffd"}, "downloads": -1, "filename": "django-libsass-0.8.tar.gz", "has_sig": false, "md5_digest": "850acc88aa7c8e20fac75373d30a5673", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5990, "upload_time": "2020-01-06T11:48:01", "upload_time_iso_8601": "2020-01-06T11:48:01.974470Z", "url": "https://files.pythonhosted.org/packages/ca/42/2792183c2bb27ab6099c847cd9c3e5cbf525770fb2ad2fb13eb893de59f9/django-libsass-0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:20 2020"}