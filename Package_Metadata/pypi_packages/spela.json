{"info": {"author": "Evans Kiplagat", "author_email": "evanskiplagat3@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# SPELA - spectrogram layers\nRewrote [kapre](https://github.com/kongkip/kapre#installation) using tensorflow.keras \\\ncredits go to Keunwoo Choi for writing kapre\n\nMy main goal for rewriting it with tensorflow.keras is to use it with TensorFlow Lite \\\nsince Keunwoo Choi used core keras and I had problems converting the model to \\\ntensorflow lite.\n\nImplementing audio features inside the keras layers allows the preprocessing \\\ncomputations to be done on the GPU as highlighted in their [paper](https://arxiv.org/abs/1706.05781)\n\n# Installation\nThe package uses tensorflow but is not listed as requirement, please install it.\n```bash\npip install spela\n```\nor\n```bash\ngit clone https://github.com/kongkip/spela.git\ncd spela\npython setup.py install\n```\n\n# Usage\n## spectrogram\n```python\nimport tensorflow as tf\nfrom spela.spectrogram import Spectrogram\n\n# a one channel audio with 16000 sample rate\ninput_shape = (1, 16000)\n\nx = get_data()\ny = get_data()\n\n\nmodel = tf.keras.Sequential()\nmodel.add(Spectrogram(n_dft=512, n_hop=256, input_shape=(input_shape),\n                      return_decibel_spectrogram=True, power_spectrogram=2.0,\n                      trainable_kernel=False, name='static_stft'))\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(lr=0.001), loss=tf.keras.losses.categorical_crossentropy\n              , metrics=[\"acc\"])\n\nprint(model.summary())\n\nmodel.fit(x,y)\n```\n\n## Mel Spectrogram\n```python\nimport tensorflow as tf\nfrom spela.melspectrogram import Melspectrogram\n\n# a one channel audio with 16000 sample rate\ninput_shape = (1, 16000)\n\nx = get_data()\ny = get_data()\n\nmodel = tf.keras.Sequential()\nmodel.add(Melspectrogram(sr=SR, n_mels=128,\n          n_dft=512, n_hop=256, input_shape=input_shape,\n          return_decibel_melgram=True,\n          trainable_kernel=False, name='melgram'))\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(lr=0.001), loss=tf.keras.losses.categorical_crossentropy\n              , metrics=[\"acc\"])\n\nprint(model.summary())\n\nmodel.fit(x,y)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kongkip/spela.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "spela", "package_url": "https://pypi.org/project/spela/", "platform": "", "project_url": "https://pypi.org/project/spela/", "project_urls": {"Homepage": "https://github.com/kongkip/spela.git"}, "release_url": "https://pypi.org/project/spela/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "spectrogram layers", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SPELA - spectrogram layers</h1>\n<p>Rewrote <a href=\"https://github.com/kongkip/kapre#installation\" rel=\"nofollow\">kapre</a> using tensorflow.keras <br>\ncredits go to Keunwoo Choi for writing kapre</p>\n<p>My main goal for rewriting it with tensorflow.keras is to use it with TensorFlow Lite <br>\nsince Keunwoo Choi used core keras and I had problems converting the model to <br>\ntensorflow lite.</p>\n<p>Implementing audio features inside the keras layers allows the preprocessing <br>\ncomputations to be done on the GPU as highlighted in their <a href=\"https://arxiv.org/abs/1706.05781\" rel=\"nofollow\">paper</a></p>\n<h1>Installation</h1>\n<p>The package uses tensorflow but is not listed as requirement, please install it.</p>\n<pre>pip install spela\n</pre>\n<p>or</p>\n<pre>git clone https://github.com/kongkip/spela.git\n<span class=\"nb\">cd</span> spela\npython setup.py install\n</pre>\n<h1>Usage</h1>\n<h2>spectrogram</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spela.spectrogram</span> <span class=\"kn\">import</span> <span class=\"n\">Spectrogram</span>\n\n<span class=\"c1\"># a one channel audio with 16000 sample rate</span>\n<span class=\"n\">input_shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16000</span><span class=\"p\">)</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Spectrogram</span><span class=\"p\">(</span><span class=\"n\">n_dft</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"n\">n_hop</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">input_shape</span><span class=\"p\">),</span>\n                      <span class=\"n\">return_decibel_spectrogram</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">power_spectrogram</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span>\n                      <span class=\"n\">trainable_kernel</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'static_stft'</span><span class=\"p\">))</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">optimizers</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">),</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">losses</span><span class=\"o\">.</span><span class=\"n\">categorical_crossentropy</span>\n              <span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"acc\"</span><span class=\"p\">])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">())</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n<h2>Mel Spectrogram</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spela.melspectrogram</span> <span class=\"kn\">import</span> <span class=\"n\">Melspectrogram</span>\n\n<span class=\"c1\"># a one channel audio with 16000 sample rate</span>\n<span class=\"n\">input_shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16000</span><span class=\"p\">)</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Melspectrogram</span><span class=\"p\">(</span><span class=\"n\">sr</span><span class=\"o\">=</span><span class=\"n\">SR</span><span class=\"p\">,</span> <span class=\"n\">n_mels</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span>\n          <span class=\"n\">n_dft</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"n\">n_hop</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"o\">=</span><span class=\"n\">input_shape</span><span class=\"p\">,</span>\n          <span class=\"n\">return_decibel_melgram</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n          <span class=\"n\">trainable_kernel</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'melgram'</span><span class=\"p\">))</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">optimizers</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">),</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">losses</span><span class=\"o\">.</span><span class=\"n\">categorical_crossentropy</span>\n              <span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"acc\"</span><span class=\"p\">])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">())</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6107701, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "0233ca80d2f820d9628c5215d5f812e5", "sha256": "be8db67ccc1ae5c460c605184747893c30b189389fb89feba783f42681d61495"}, "downloads": -1, "filename": "spela-0.0.0-py3.7.egg", "has_sig": false, "md5_digest": "0233ca80d2f820d9628c5215d5f812e5", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 17258, "upload_time": "2019-11-06T09:40:11", "upload_time_iso_8601": "2019-11-06T09:40:11.787064Z", "url": "https://files.pythonhosted.org/packages/f1/68/42ec1e13a1474721ea244f2284d6159511a0a7fcbb1734486b9dd4f0eff0/spela-0.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc182cbafe30465c11625da7a2b5d55a", "sha256": "57de5ec338df14222e47ccf17946cc7d8793fb0806c066de1a878c64a3d4e623"}, "downloads": -1, "filename": "spela-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dc182cbafe30465c11625da7a2b5d55a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8163, "upload_time": "2019-11-06T09:40:09", "upload_time_iso_8601": "2019-11-06T09:40:09.015662Z", "url": "https://files.pythonhosted.org/packages/f7/e5/a2ea8f81445859dff61209b6956a60dbe323e32b2e9e0240341e1148c71c/spela-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12ad35ee1800753f89dfc65e64970eb2", "sha256": "9d5599b915cf8c1d7900fb0ae6786b256652ed6b1830a662618436b65bba8071"}, "downloads": -1, "filename": "spela-0.0.0.tar.gz", "has_sig": false, "md5_digest": "12ad35ee1800753f89dfc65e64970eb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6746, "upload_time": "2019-11-06T09:40:13", "upload_time_iso_8601": "2019-11-06T09:40:13.490781Z", "url": "https://files.pythonhosted.org/packages/09/91/74eacee67670463061f1f50e6a02581cb0ed0d455b7eea2efe57c03458a7/spela-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "9a44f37ad44a1e0b46f330c8d863bca5", "sha256": "d75bc618148932f6ecbf6334d488494327eddc6793fe1f9070a552bb8363aa0a"}, "downloads": -1, "filename": "spela-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9a44f37ad44a1e0b46f330c8d863bca5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8910, "upload_time": "2019-11-06T09:53:32", "upload_time_iso_8601": "2019-11-06T09:53:32.458590Z", "url": "https://files.pythonhosted.org/packages/e7/89/05d5a5c79d46e96811101392daff7f7bcc62c0eda1bc5c9e994621d744c6/spela-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "416ba112b105e4719cdb66bfd3b05193", "sha256": "4c3367b198cf132ff0328d4babf92a19ea18035d3aafd889990bf6178fd3243a"}, "downloads": -1, "filename": "spela-0.0.1.tar.gz", "has_sig": false, "md5_digest": "416ba112b105e4719cdb66bfd3b05193", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7069, "upload_time": "2019-11-06T09:53:33", "upload_time_iso_8601": "2019-11-06T09:53:33.922673Z", "url": "https://files.pythonhosted.org/packages/75/c7/d67b816ef530cd56fe65596e7ef38f284d4d21815123ee64c516dab38dde/spela-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a68aabfccee9ba8fbf3a9fa25c1309ab", "sha256": "9cee56ee18d26f6bb10f033d5a53da1753cb8501d8b9e9c3c0efc93e7ebb0e3f"}, "downloads": -1, "filename": "spela-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a68aabfccee9ba8fbf3a9fa25c1309ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7083, "upload_time": "2019-11-09T06:43:25", "upload_time_iso_8601": "2019-11-09T06:43:25.980488Z", "url": "https://files.pythonhosted.org/packages/21/97/08764253dcd38e59bd956c4e355cfe1569bf3c84db5bac0dca97182e6eeb/spela-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7824ed935ab1781dfc33cef80c67be4c", "sha256": "341c84e3ef8a15ff2f3427680f4d7293ff2a83ead5baa6e346f76c6395b08b2b"}, "downloads": -1, "filename": "spela-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7824ed935ab1781dfc33cef80c67be4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7095, "upload_time": "2019-11-09T16:23:37", "upload_time_iso_8601": "2019-11-09T16:23:37.975064Z", "url": "https://files.pythonhosted.org/packages/d6/fe/347a11683fd33d007acd48d77de3051b84b47a754f0bbdcce0440b099c91/spela-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7824ed935ab1781dfc33cef80c67be4c", "sha256": "341c84e3ef8a15ff2f3427680f4d7293ff2a83ead5baa6e346f76c6395b08b2b"}, "downloads": -1, "filename": "spela-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7824ed935ab1781dfc33cef80c67be4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7095, "upload_time": "2019-11-09T16:23:37", "upload_time_iso_8601": "2019-11-09T16:23:37.975064Z", "url": "https://files.pythonhosted.org/packages/d6/fe/347a11683fd33d007acd48d77de3051b84b47a754f0bbdcce0440b099c91/spela-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:32 2020"}