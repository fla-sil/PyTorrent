{"info": {"author": "Ed Summers", "author_email": "ehs@pobox.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Text Processing :: General"], "description": "```\n_|_|_|    _|    _|  _|_|_|  _|_|      _|_|_|  _|  _|_|    _|_|_|\n_|    _|  _|    _|  _|    _|    _|  _|    _|  _|_|      _|\n_|    _|  _|    _|  _|    _|    _|  _|    _|  _|        _|\n_|_|_|      _|_|_|  _|    _|    _|    _|_|_|  _|          _|_|_|\n_|              _|\n_|          _|_|\n```\n\n[![Build status](https://gitlab.com/pymarc/pymarc/badges/master/pipeline.svg)](https://gitlab.com/pymarc/pymarc/-/commits/master)\n\npymarc is a python library for working with bibliographic data encoded in\n[MARC21](https://en.wikipedia.org/wiki/MARC_standards). It provides an API for\nreading, writing and modifying MARC records. It was mostly designed to be an\nemergency eject seat, for getting your data assets out of MARC and into some\nkind of saner representation. However over the years it has been used to create\nand modify MARC records, since despite [repeated\ncalls](https://web.archive.org/web/20170731163019/http://www.marc-must-die.info/index.php/Main_Page)\nfor it to die as a format, MARC seems to be living quite happily as a zombie.\n\nBelow are some common examples of how you might want to use pymarc. If\nyou run across an example that you think should be here please send a\npull request.\n\n### Installation\n\nYou'll probably just want to use pip to install pymarc:\n\n    pip install pymarc\n\nIf you'd like to download and install the latest source you'll need git:\n\n    git clone git://gitlab.com/pymarc/pymarc.git\n\nYou'll also need [setuptools](https://pypi.python.org/pypi/setuptools#installation-instructions). Once you have the source and setuptools run the pymarc test\nsuite to make sure things are in order with the distribution:\n\n    python setup.py test\n\nAnd then install:\n\n    python setup.py install\n\n### Reading\n\nMost often you will have some MARC data and will want to extract data\nfrom it. Here's an example of reading a batch of records and printing out\nthe title. If you are curious this example uses the batch file\navailable here in pymarc repository:\n\n```python\nfrom pymarc import MARCReader\nwith open('test/marc.dat', 'rb') as fh:\n    reader = MARCReader(fh)\n    for record in reader:\n        print(record.title())\n```\n```\nThe pragmatic programmer : from journeyman to master /\nProgramming Python /\nLearning Python /\nPython cookbook /\nPython programming for the absolute beginner /\nWeb programming : techniques for integrating Python, Linux, Apache, and MySQL /\nPython programming on Win32 /\nPython programming : an introduction to computer science /\nPython Web programming /\nCore python programming /\nPython and Tkinter programming /\nGame programming with Python, Lua, and Ruby /\nPython programming patterns /\nPython programming with the Java class libraries : a tutorial for building Web\nand Enterprise applications /\nLearn to program using Python : a tutorial for hobbyists, self-starters, and all\nwho want to learn the art of computer programming /\nProgramming with Python /\nBSD Sockets programming from a multi-language perspective /\nDesign patterns : elements of reusable object-oriented software /\nIntroduction to algorithms /\nANSI Common Lisp /\n```\n\nA `pymarc.Record` object has a few handy methods like `title` for getting at\nbits of a bibliographic record, others include: `author`, `isbn`, `subjects`,\n`location`, `notes`, `physicaldescription`, `publisher`, `pubyear`, `issn`,\n`issn_title`. But really, to work with MARC data you need to understand the\nnumeric field tags and subfield codes that are used to designate various bits\nof information. There is a lot more hiding in a MARC record than these methods\nprovide access to. For example the `title` method extracts the information from\n the `245` field, subfields `a` and `b`. You can access `245a` like so:\n\n```python\nprint(record['245']['a'])\n```\n\nSome fields like subjects can repeat. In cases like that you will want to use\n`get_fields` to get all of them as `pymarc.Field` objects, which you can then\ninteract with further:\n\n```python\nfor f in record.get_fields('650'):\n    print(f)\n```\n\nIf you are new to MARC fields [Understanding\nMARC](http://www.loc.gov/marc/umb/) is a pretty good primer, and the [MARC 21\nFormats](http://www.loc.gov/marc/marcdocz.html) page at the Library of Congress is a good reference once you understand the basics.\n\n### Writing\n\nHere's an example of creating a record and writing it out to a file.\n\n```python\nfrom pymarc import Record, Field\nrecord = Record()\nrecord.add_field(\n    Field(\n        tag = '245',\n        indicators = ['0','1'],\n        subfields = [\n            'a', 'The pragmatic programmer : ',\n            'b', 'from journeyman to master /',\n            'c', 'Andrew Hunt, David Thomas.'\n        ]))\nwith open('file.dat', 'wb') as out:\n    out.write(record.as_marc())\n```\n\n### Updating\n\nUpdating works the same way, you read it in, modify it, and then write it out\nagain:\n\n```python\nfrom pymarc import MARCReader\nwith open('test/marc.dat', 'rb') as fh:\n    reader = MARCReader(fh)\n    record = next(reader)\n    record['245']['a'] = 'The Zombie Programmer'\nwith open('file.dat', 'wb') as out:\n    out.write(record.as_marc())\n```\n\n\n### JSON and XML\n\nIf you find yourself using MARC data a fair bit, and distributing it, you may\nmake other developers a bit happier by using the JSON or XML serializations. The\nmain benefit to using XML or JSON is that the UTF8 character encoding is used,\nrather than the frustratingly archaic MARC8 encoding. Also they will be able to\nuse standard JSON and XML reading/writing tools to get at the data they want\ninstead of some crazy MARC processing library like, ahem, pymarc.\n\npymarc's support for JSON and XML is currently a bit lopsided and ad hoc. pymarc\nallows you to read XML in a variety of ways, but not write it. On the other hand\npymarc allows you to write JSON, but not read it. Part of the reason for this\nunevenness is that the functionality was added to solve a particular need at a\nparticular time. If you are interested in providing a more holistic solution\npull requests (with unit tests) are always welcome.\n\n**XML**\n\nTo parse a file of MARCXML records you can:\n\n```python\n\nfrom pymarc import parse_xml_to_array\n\nrecords = parse_xml_to_array('test/batch.xml')\n```\n\nIf you have a large XML file and would rather not read them all into memory you\ncan:\n\n```python\n\nfrom pymarc import map_xml\n\ndef print_title(r):\n    print(r.title())\n\nmap_xml(print_title, 'test/batch.xml')\n```\n\nAlso, if you prefer you can pass in a file like object in addition to the path\nto both *map_xml* and *parse_xml_to_array*:\n\n```python\nrecords = parse_xml_to_array(open('test/batch.xml'))\n```\n\n**JSON**\n\nJSON support is fairly minimal in that you can call a `pymarc.Record`'s\n`as_json()` method to return JSON for a given MARC Record:\n\n```python\nfrom pymarc import MARCReader\n\nwith open('test/one.dat','rb') as fh:\n    reader = MARCReader(fh)\n    for record in reader:\n        print(record.as_json(indent=2))\n```\n\n```javascript\n{\n  \"leader\": \"01060cam  22002894a 4500\",\n  \"fields\": [\n    {\n      \"001\": \"11778504\"\n    }, \n    {\n      \"010\": {\n        \"ind1\": \" \", \n        \"subfields\": [\n          {\n            \"a\": \"   99043581 \"\n          }\n        ], \n        \"ind2\": \" \"\n      }\n    }, \n    {\n      \"100\": {\n        \"ind1\": \"1\", \n        \"subfields\": [\n          {\n            \"a\": \"Hunt, Andrew,\"\n          }, \n          {\n            \"d\": \"1964-\"\n          }\n        ], \n        \"ind2\": \" \"\n      }\n    }, \n    {\n      \"245\": {\n        \"ind1\": \"1\", \n        \"subfields\": [\n          {\n            \"a\": \"The pragmatic programmer :\"\n          }, \n          {\n            \"b\": \"from journeyman to master /\"\n          }, \n          {\n            \"c\": \"Andrew Hunt, David Thomas.\"\n          }\n        ], \n        \"ind2\": \"4\"\n      }\n    }, \n    {\n      \"260\": {\n        \"ind1\": \" \", \n        \"subfields\": [\n          {\n            \"a\": \"Reading, Mass :\"\n          }, \n          {\n            \"b\": \"Addison-Wesley,\"\n          }, \n          {\n            \"c\": \"2000.\"\n          }\n        ], \n        \"ind2\": \" \"\n      }\n    }, \n    {\n      \"300\": {\n        \"ind1\": \" \", \n        \"subfields\": [\n          {\n            \"a\": \"xxiv, 321 p. ;\"\n          }, \n          {\n            \"c\": \"24 cm.\"\n          }\n        ], \n        \"ind2\": \" \"\n      }\n    }, \n    {\n      \"504\": {\n        \"ind1\": \" \", \n        \"subfields\": [\n          {\n            \"a\": \"Includes bibliographical references.\"\n          }\n        ], \n        \"ind2\": \" \"\n      }\n    }, \n    {\n      \"650\": {\n        \"ind1\": \" \", \n        \"subfields\": [\n          {\n            \"a\": \"Computer programming.\"\n          }\n        ], \n        \"ind2\": \"0\"\n      }\n    }, \n    {\n      \"700\": {\n        \"ind1\": \"1\", \n        \"subfields\": [\n          {\n            \"a\": \"Thomas, David,\"\n          }, \n          {\n            \"d\": \"1956-\"\n          }\n        ], \n        \"ind2\": \" \"\n      }\n    }\n  ]\n}\n```\n\nIf you want to parse a file of MARCJSON records you can:\n\n```python\nfrom pymarc import parse_json_to_array\n\nrecords = parse_json_to_array(open('test/batch.json'))\n\nprint(records[0])\n```\n\n```\n=LDR  00925njm  22002777a 4500\n=001  5637241\n=003  DLC\n=005  19920826084036.0\n=007  sdubumennmplu\n=008  910926s1957\\\\\\\\nyuuun\\\\\\\\\\\\\\\\\\\\\\\\\\\\eng\\\\\n=010  \\\\$a   91758335 \n=028  00$a1259$bAtlantic\n=040  \\\\$aDLC$cDLC\n=050  00$aAtlantic 1259\n=245  04$aThe Great Ray Charles$h[sound recording].\n=260  \\\\$aNew York, N.Y. :$bAtlantic,$c[1957?]\n=300  \\\\$a1 sound disc :$banalog, 33 1/3 rpm ;$c12 in.\n=511  0\\$aRay Charles, piano & celeste.\n=505  0\\$aThe Ray -- My melancholy baby -- Black coffee -- There's no you -- Doodlin' -- Sweet sixteen bars -- I surrender dear -- Undecided.\n=500  \\\\$aBrief record.\n=650  \\0$aJazz$y1951-1960.\n=650  \\0$aPiano with jazz ensemble.\n=700  1\\$aCharles, Ray,$d1930-$4prf\n```\n\nSupport\n-------\n\nThe pymarc developers encourage you to join the [pymarc Google\nGroup](http://groups.google.com/group/pymarc) if you need help.  Also, please\nfeel free to use [issue tracking](https://gitlab.com/pymarc/pymarc/issues) on\nGitLab to submit feature requests or bug reports. If you've got an itch to\nscratch, please scratch it, and send merge requests on\n[GitLab](http://gitlab.com/pymarc/pymarc).\n\nIf you start working with MARC you may feel like you need moral support\nin addition to technical support. The [#code4lib](irc://freenode.net/code4lib)\nchannel on [Freenode](http://freenode.net) is a good place for both.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://gitlab.com/pymarc/pymarc", "keywords": "", "license": "http://www.opensource.org/licenses/bsd-license.php", "maintainer": "", "maintainer_email": "", "name": "pymarc", "package_url": "https://pypi.org/project/pymarc/", "platform": "", "project_url": "https://pypi.org/project/pymarc/", "project_urls": {"Homepage": "http://gitlab.com/pymarc/pymarc"}, "release_url": "https://pypi.org/project/pymarc/4.0.0/", "requires_dist": null, "requires_python": ">=3.6.*", "summary": "Read, write and modify MARC bibliographic data", "version": "4.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre><code>_|_|_|    _|    _|  _|_|_|  _|_|      _|_|_|  _|  _|_|    _|_|_|\n_|    _|  _|    _|  _|    _|    _|  _|    _|  _|_|      _|\n_|    _|  _|    _|  _|    _|    _|  _|    _|  _|        _|\n_|_|_|      _|_|_|  _|    _|    _|    _|_|_|  _|          _|_|_|\n_|              _|\n_|          _|_|\n</code></pre>\n<p><a href=\"https://gitlab.com/pymarc/pymarc/-/commits/master\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/756aba1c21507a79cc493edb85bba4668ae8358f/68747470733a2f2f6769746c61622e636f6d2f70796d6172632f70796d6172632f6261646765732f6d61737465722f706970656c696e652e737667\"></a></p>\n<p>pymarc is a python library for working with bibliographic data encoded in\n<a href=\"https://en.wikipedia.org/wiki/MARC_standards\" rel=\"nofollow\">MARC21</a>. It provides an API for\nreading, writing and modifying MARC records. It was mostly designed to be an\nemergency eject seat, for getting your data assets out of MARC and into some\nkind of saner representation. However over the years it has been used to create\nand modify MARC records, since despite <a href=\"https://web.archive.org/web/20170731163019/http://www.marc-must-die.info/index.php/Main_Page\" rel=\"nofollow\">repeated\ncalls</a>\nfor it to die as a format, MARC seems to be living quite happily as a zombie.</p>\n<p>Below are some common examples of how you might want to use pymarc. If\nyou run across an example that you think should be here please send a\npull request.</p>\n<h3>Installation</h3>\n<p>You'll probably just want to use pip to install pymarc:</p>\n<pre><code>pip install pymarc\n</code></pre>\n<p>If you'd like to download and install the latest source you'll need git:</p>\n<pre><code>git clone git://gitlab.com/pymarc/pymarc.git\n</code></pre>\n<p>You'll also need <a href=\"https://pypi.python.org/pypi/setuptools#installation-instructions\" rel=\"nofollow\">setuptools</a>. Once you have the source and setuptools run the pymarc test\nsuite to make sure things are in order with the distribution:</p>\n<pre><code>python setup.py test\n</code></pre>\n<p>And then install:</p>\n<pre><code>python setup.py install\n</code></pre>\n<h3>Reading</h3>\n<p>Most often you will have some MARC data and will want to extract data\nfrom it. Here's an example of reading a batch of records and printing out\nthe title. If you are curious this example uses the batch file\navailable here in pymarc repository:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">MARCReader</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/marc.dat'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">MARCReader</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">())</span>\n</pre>\n<pre><code>The pragmatic programmer : from journeyman to master /\nProgramming Python /\nLearning Python /\nPython cookbook /\nPython programming for the absolute beginner /\nWeb programming : techniques for integrating Python, Linux, Apache, and MySQL /\nPython programming on Win32 /\nPython programming : an introduction to computer science /\nPython Web programming /\nCore python programming /\nPython and Tkinter programming /\nGame programming with Python, Lua, and Ruby /\nPython programming patterns /\nPython programming with the Java class libraries : a tutorial for building Web\nand Enterprise applications /\nLearn to program using Python : a tutorial for hobbyists, self-starters, and all\nwho want to learn the art of computer programming /\nProgramming with Python /\nBSD Sockets programming from a multi-language perspective /\nDesign patterns : elements of reusable object-oriented software /\nIntroduction to algorithms /\nANSI Common Lisp /\n</code></pre>\n<p>A <code>pymarc.Record</code> object has a few handy methods like <code>title</code> for getting at\nbits of a bibliographic record, others include: <code>author</code>, <code>isbn</code>, <code>subjects</code>,\n<code>location</code>, <code>notes</code>, <code>physicaldescription</code>, <code>publisher</code>, <code>pubyear</code>, <code>issn</code>,\n<code>issn_title</code>. But really, to work with MARC data you need to understand the\nnumeric field tags and subfield codes that are used to designate various bits\nof information. There is a lot more hiding in a MARC record than these methods\nprovide access to. For example the <code>title</code> method extracts the information from\nthe <code>245</code> field, subfields <code>a</code> and <code>b</code>. You can access <code>245a</code> like so:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">[</span><span class=\"s1\">'245'</span><span class=\"p\">][</span><span class=\"s1\">'a'</span><span class=\"p\">])</span>\n</pre>\n<p>Some fields like subjects can repeat. In cases like that you will want to use\n<code>get_fields</code> to get all of them as <code>pymarc.Field</code> objects, which you can then\ninteract with further:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">get_fields</span><span class=\"p\">(</span><span class=\"s1\">'650'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre>\n<p>If you are new to MARC fields <a href=\"http://www.loc.gov/marc/umb/\" rel=\"nofollow\">Understanding\nMARC</a> is a pretty good primer, and the <a href=\"http://www.loc.gov/marc/marcdocz.html\" rel=\"nofollow\">MARC 21\nFormats</a> page at the Library of Congress is a good reference once you understand the basics.</p>\n<h3>Writing</h3>\n<p>Here's an example of creating a record and writing it out to a file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">Record</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n<span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"n\">Record</span><span class=\"p\">()</span>\n<span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">add_field</span><span class=\"p\">(</span>\n    <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"s1\">'245'</span><span class=\"p\">,</span>\n        <span class=\"n\">indicators</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'0'</span><span class=\"p\">,</span><span class=\"s1\">'1'</span><span class=\"p\">],</span>\n        <span class=\"n\">subfields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'The pragmatic programmer : '</span><span class=\"p\">,</span>\n            <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'from journeyman to master /'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"s1\">'Andrew Hunt, David Thomas.'</span>\n        <span class=\"p\">]))</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'file.dat'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n    <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">as_marc</span><span class=\"p\">())</span>\n</pre>\n<h3>Updating</h3>\n<p>Updating works the same way, you read it in, modify it, and then write it out\nagain:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">MARCReader</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/marc.dat'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">MARCReader</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)</span>\n    <span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">)</span>\n    <span class=\"n\">record</span><span class=\"p\">[</span><span class=\"s1\">'245'</span><span class=\"p\">][</span><span class=\"s1\">'a'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'The Zombie Programmer'</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'file.dat'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n    <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">as_marc</span><span class=\"p\">())</span>\n</pre>\n<h3>JSON and XML</h3>\n<p>If you find yourself using MARC data a fair bit, and distributing it, you may\nmake other developers a bit happier by using the JSON or XML serializations. The\nmain benefit to using XML or JSON is that the UTF8 character encoding is used,\nrather than the frustratingly archaic MARC8 encoding. Also they will be able to\nuse standard JSON and XML reading/writing tools to get at the data they want\ninstead of some crazy MARC processing library like, ahem, pymarc.</p>\n<p>pymarc's support for JSON and XML is currently a bit lopsided and ad hoc. pymarc\nallows you to read XML in a variety of ways, but not write it. On the other hand\npymarc allows you to write JSON, but not read it. Part of the reason for this\nunevenness is that the functionality was added to solve a particular need at a\nparticular time. If you are interested in providing a more holistic solution\npull requests (with unit tests) are always welcome.</p>\n<p><strong>XML</strong></p>\n<p>To parse a file of MARCXML records you can:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">parse_xml_to_array</span>\n\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">parse_xml_to_array</span><span class=\"p\">(</span><span class=\"s1\">'test/batch.xml'</span><span class=\"p\">)</span>\n</pre>\n<p>If you have a large XML file and would rather not read them all into memory you\ncan:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">map_xml</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">print_title</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">())</span>\n\n<span class=\"n\">map_xml</span><span class=\"p\">(</span><span class=\"n\">print_title</span><span class=\"p\">,</span> <span class=\"s1\">'test/batch.xml'</span><span class=\"p\">)</span>\n</pre>\n<p>Also, if you prefer you can pass in a file like object in addition to the path\nto both <em>map_xml</em> and <em>parse_xml_to_array</em>:</p>\n<pre><span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">parse_xml_to_array</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/batch.xml'</span><span class=\"p\">))</span>\n</pre>\n<p><strong>JSON</strong></p>\n<p>JSON support is fairly minimal in that you can call a <code>pymarc.Record</code>'s\n<code>as_json()</code> method to return JSON for a given MARC Record:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">MARCReader</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/one.dat'</span><span class=\"p\">,</span><span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">MARCReader</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">as_json</span><span class=\"p\">(</span><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">{</span>\n  <span class=\"s2\">\"leader\"</span><span class=\"o\">:</span> <span class=\"s2\">\"01060cam  22002894a 4500\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"fields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"001\"</span><span class=\"o\">:</span> <span class=\"s2\">\"11778504\"</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"010\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"   99043581 \"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"100\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Hunt, Andrew,\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"d\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1964-\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"245\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"The pragmatic programmer :\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"b\"</span><span class=\"o\">:</span> <span class=\"s2\">\"from journeyman to master /\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"c\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Andrew Hunt, David Thomas.\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\"4\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"260\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Reading, Mass :\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"b\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Addison-Wesley,\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"c\"</span><span class=\"o\">:</span> <span class=\"s2\">\"2000.\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"300\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"xxiv, 321 p. ;\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"c\"</span><span class=\"o\">:</span> <span class=\"s2\">\"24 cm.\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"504\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Includes bibliographical references.\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"650\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Computer programming.\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\"0\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{</span>\n      <span class=\"s2\">\"700\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"ind1\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span> \n        <span class=\"s2\">\"subfields\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"a\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Thomas, David,\"</span>\n          <span class=\"p\">},</span> \n          <span class=\"p\">{</span>\n            <span class=\"s2\">\"d\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1956-\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span> \n        <span class=\"s2\">\"ind2\"</span><span class=\"o\">:</span> <span class=\"s2\">\" \"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If you want to parse a file of MARCJSON records you can:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymarc</span> <span class=\"kn\">import</span> <span class=\"n\">parse_json_to_array</span>\n\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">parse_json_to_array</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test/batch.json'</span><span class=\"p\">))</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<pre><code>=LDR  00925njm  22002777a 4500\n=001  5637241\n=003  DLC\n=005  19920826084036.0\n=007  sdubumennmplu\n=008  910926s1957\\\\\\\\nyuuun\\\\\\\\\\\\\\\\\\\\\\\\\\\\eng\\\\\n=010  \\\\$a   91758335 \n=028  00$a1259$bAtlantic\n=040  \\\\$aDLC$cDLC\n=050  00$aAtlantic 1259\n=245  04$aThe Great Ray Charles$h[sound recording].\n=260  \\\\$aNew York, N.Y. :$bAtlantic,$c[1957?]\n=300  \\\\$a1 sound disc :$banalog, 33 1/3 rpm ;$c12 in.\n=511  0\\$aRay Charles, piano &amp; celeste.\n=505  0\\$aThe Ray -- My melancholy baby -- Black coffee -- There's no you -- Doodlin' -- Sweet sixteen bars -- I surrender dear -- Undecided.\n=500  \\\\$aBrief record.\n=650  \\0$aJazz$y1951-1960.\n=650  \\0$aPiano with jazz ensemble.\n=700  1\\$aCharles, Ray,$d1930-$4prf\n</code></pre>\n<h2>Support</h2>\n<p>The pymarc developers encourage you to join the <a href=\"http://groups.google.com/group/pymarc\" rel=\"nofollow\">pymarc Google\nGroup</a> if you need help.  Also, please\nfeel free to use <a href=\"https://gitlab.com/pymarc/pymarc/issues\" rel=\"nofollow\">issue tracking</a> on\nGitLab to submit feature requests or bug reports. If you've got an itch to\nscratch, please scratch it, and send merge requests on\n<a href=\"http://gitlab.com/pymarc/pymarc\" rel=\"nofollow\">GitLab</a>.</p>\n<p>If you start working with MARC you may feel like you need moral support\nin addition to technical support. The <a>#code4lib</a>\nchannel on <a href=\"http://freenode.net\" rel=\"nofollow\">Freenode</a> is a good place for both.</p>\n\n          </div>"}, "last_serial": 6724223, "releases": {"2.8.0": [{"comment_text": "", "digests": {"md5": "031dc783ba42f57aeaa0360fa3b11505", "sha256": "d32c5c3611d22782e4dc1cf6fbbc4579d0ab38e6db8b6eef8819e5de15a4db59"}, "downloads": -1, "filename": "pymarc-2.8.0.tar.gz", "has_sig": false, "md5_digest": "031dc783ba42f57aeaa0360fa3b11505", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199763, "upload_time": "2011-09-09T14:28:17", "upload_time_iso_8601": "2011-09-09T14:28:17.284976Z", "url": "https://files.pythonhosted.org/packages/e4/a2/f460f23dc78239ee977f50d360db131f26f7b559c38e7bc20020966ba24a/pymarc-2.8.0.tar.gz", "yanked": false}], "2.8.1": [{"comment_text": "", "digests": {"md5": "204d26fc50fda93b8a64aeb58d3fc48e", "sha256": "74b0d815dea57471fe31f595b982bbdf3d9ff524b1b27458da714b1f6240a911"}, "downloads": -1, "filename": "pymarc-2.8.1.tar.gz", "has_sig": false, "md5_digest": "204d26fc50fda93b8a64aeb58d3fc48e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199367, "upload_time": "2011-09-09T14:46:55", "upload_time_iso_8601": "2011-09-09T14:46:55.342651Z", "url": "https://files.pythonhosted.org/packages/54/9b/714bb7a50c26e1030ed8e9b3e3cbbe83745c1350502b35759c53133b8f84/pymarc-2.8.1.tar.gz", "yanked": false}], "2.8.2": [{"comment_text": "", "digests": {"md5": "e7744f75b2b82b5781ec5eeb96d189f4", "sha256": "55dbf14119ef2de146f2d1268cfecc1135e968625380533afcf27edaf023b423"}, "downloads": -1, "filename": "pymarc-2.8.2.tar.gz", "has_sig": false, "md5_digest": "e7744f75b2b82b5781ec5eeb96d189f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199609, "upload_time": "2011-10-12T21:44:18", "upload_time_iso_8601": "2011-10-12T21:44:18.298381Z", "url": "https://files.pythonhosted.org/packages/fa/02/9a7a6879f147521dbf6390982ef8fe9b0f5efe775e38032e3a7daff16cfe/pymarc-2.8.2.tar.gz", "yanked": false}], "2.8.3": [{"comment_text": "", "digests": {"md5": "42bd55858a3bae16a401bfb9bb961a30", "sha256": "3cf72316894e75d9c436c848f8ff4da0b580505fd0315188aa98aa4471552cf6"}, "downloads": -1, "filename": "pymarc-2.8.3.tar.gz", "has_sig": false, "md5_digest": "42bd55858a3bae16a401bfb9bb961a30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199600, "upload_time": "2011-10-13T14:27:35", "upload_time_iso_8601": "2011-10-13T14:27:35.520176Z", "url": "https://files.pythonhosted.org/packages/7f/50/1fb571630f496885959a73c3f28e225f90a8bf9437026301cead246e0c7e/pymarc-2.8.3.tar.gz", "yanked": false}], "2.8.4": [{"comment_text": "", "digests": {"md5": "1b2ce969050858ca7e272aaaa92ba5df", "sha256": "8252601005803361f50b50f12d9618f1faacefc45a6bedfa81aa4e28d53f45f5"}, "downloads": -1, "filename": "pymarc-2.8.4.tar.gz", "has_sig": false, "md5_digest": "1b2ce969050858ca7e272aaaa92ba5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200214, "upload_time": "2011-11-07T22:37:49", "upload_time_iso_8601": "2011-11-07T22:37:49.444813Z", "url": "https://files.pythonhosted.org/packages/1e/49/9cddff7c98d9fd1e5fea7b8ba75ef5ada97433faeccc1aac0a62a699a2a0/pymarc-2.8.4.tar.gz", "yanked": false}], "2.8.5": [{"comment_text": "", "digests": {"md5": "88487592cc711ab9fec0832e7f06ffb9", "sha256": "03f8fc49f47af96831669d7e06417e6397e2ee44aea0d12e7c185f9764b1de63"}, "downloads": -1, "filename": "pymarc-2.8.5.tar.gz", "has_sig": false, "md5_digest": "88487592cc711ab9fec0832e7f06ffb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205078, "upload_time": "2012-10-11T18:06:41", "upload_time_iso_8601": "2012-10-11T18:06:41.992772Z", "url": "https://files.pythonhosted.org/packages/9e/db/208118800d9ed440ea70e712ca16cf43ea5ec15aae76c596612eeceac99e/pymarc-2.8.5.tar.gz", "yanked": false}], "2.8.6": [{"comment_text": "", "digests": {"md5": "de89146c51a9515c2bd7fe3c07adcbd7", "sha256": "9916e7468c67a2219ba31c69cdff7256f067b336fd4cc76e38903b9b2d788bc7"}, "downloads": -1, "filename": "pymarc-2.8.6.tar.gz", "has_sig": false, "md5_digest": "de89146c51a9515c2bd7fe3c07adcbd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203925, "upload_time": "2012-11-16T10:41:27", "upload_time_iso_8601": "2012-11-16T10:41:27.308622Z", "url": "https://files.pythonhosted.org/packages/e0/7f/c7618ab51e4b878f9075ee6bde5dd84d21cf2220ab70ab5fe43420e8040c/pymarc-2.8.6.tar.gz", "yanked": false}], "2.8.7": [{"comment_text": "", "digests": {"md5": "3d158302488832288ca9149614366b42", "sha256": "e4634d1b0523ad96d08f3581177b0f64e54b28e320bf7719c78083404ca21fd1"}, "downloads": -1, "filename": "pymarc-2.8.7.tar.gz", "has_sig": false, "md5_digest": "3d158302488832288ca9149614366b42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 206134, "upload_time": "2013-01-23T12:54:14", "upload_time_iso_8601": "2013-01-23T12:54:14.059558Z", "url": "https://files.pythonhosted.org/packages/69/12/83f4f7078d16c6167b0e1151bc1b3c347f0195e12d7497fad1928692ceab/pymarc-2.8.7.tar.gz", "yanked": false}], "2.8.8": [{"comment_text": "", "digests": {"md5": "86ad7b8e48f2b8d5d429da143c511abc", "sha256": "473a206041d3f9a00bd6cb05cb6abfb1b1690467d277caf9a20331829dec19f6"}, "downloads": -1, "filename": "pymarc-2.8.8.tar.gz", "has_sig": false, "md5_digest": "86ad7b8e48f2b8d5d429da143c511abc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203335, "upload_time": "2013-03-27T19:17:40", "upload_time_iso_8601": "2013-03-27T19:17:40.719549Z", "url": "https://files.pythonhosted.org/packages/f5/5b/e8f8994d30b5798496567403317bf490c74afcee3cf49a03c9c673ce5d09/pymarc-2.8.8.tar.gz", "yanked": false}], "2.8.9": [{"comment_text": "", "digests": {"md5": "6033cad6c11b170da2d5fe1f80296650", "sha256": "8dc56e86e473bf1b3d01afed51b7e7fe3747cf72305efa5c90a749fe59f6dafd"}, "downloads": -1, "filename": "pymarc-2.8.9.tar.gz", "has_sig": false, "md5_digest": "6033cad6c11b170da2d5fe1f80296650", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205380, "upload_time": "2013-07-16T12:56:18", "upload_time_iso_8601": "2013-07-16T12:56:18.120948Z", "url": "https://files.pythonhosted.org/packages/51/7f/372eadabc8b1dda05a06ab9d488bce938cc35cbc6d5b908d6e2282e22979/pymarc-2.8.9.tar.gz", "yanked": false}], "2.9.0": [{"comment_text": "", "digests": {"md5": "291022c7a58f71d9dbb56b04e809e559", "sha256": "0ab834f8d2338125a927012b78b8a718c558ff1a078ee92f4c7cc58af36fb562"}, "downloads": -1, "filename": "pymarc-2.9.0.tar.gz", "has_sig": false, "md5_digest": "291022c7a58f71d9dbb56b04e809e559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205663, "upload_time": "2013-10-25T17:37:47", "upload_time_iso_8601": "2013-10-25T17:37:47.882472Z", "url": "https://files.pythonhosted.org/packages/78/f3/5934154f1b6797246e1787362b71add42ee4b6475ce35ee2e0dceffc97f4/pymarc-2.9.0.tar.gz", "yanked": false}], "2.9.1": [{"comment_text": "", "digests": {"md5": "f5ba8c01c15776a9198a5d2d670ae3cf", "sha256": "e03ac7b34201a807e27a71499190c987fb1d99d8e0be83c4ba24d69d3ea99b82"}, "downloads": -1, "filename": "pymarc-2.9.1.tar.gz", "has_sig": false, "md5_digest": "f5ba8c01c15776a9198a5d2d670ae3cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 206541, "upload_time": "2013-11-24T14:43:24", "upload_time_iso_8601": "2013-11-24T14:43:24.274037Z", "url": "https://files.pythonhosted.org/packages/d0/cb/a53464b32de19fb944aaa5c8eb29310c6b34f9efd7994a4c33e49e377229/pymarc-2.9.1.tar.gz", "yanked": false}], "2.9.2": [{"comment_text": "", "digests": {"md5": "30d4c406864b90e9edce367d60f25e3e", "sha256": "0417dc3e989161820439acd6f6e9f79a1ff6084f2b1493bdfeecdc3ec15d5fed"}, "downloads": -1, "filename": "pymarc-2.9.2.tar.gz", "has_sig": false, "md5_digest": "30d4c406864b90e9edce367d60f25e3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212162, "upload_time": "2014-01-24T09:55:40", "upload_time_iso_8601": "2014-01-24T09:55:40.920764Z", "url": "https://files.pythonhosted.org/packages/2b/6e/e83cae651b075fe342e8228de52da3e1fa6e7d0573b8ee1b94f630bfab7b/pymarc-2.9.2.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "492a563e738f7b532503f44809fc8bb2", "sha256": "38c0a40f53bb2389e662a478217b3a7974669f6da0b95761d59585acd077ed1d"}, "downloads": -1, "filename": "pymarc-3.0.0-py2.7.egg", "has_sig": false, "md5_digest": "492a563e738f7b532503f44809fc8bb2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 304099, "upload_time": "2018-05-18T15:57:21", "upload_time_iso_8601": "2018-05-18T15:57:21.521675Z", "url": "https://files.pythonhosted.org/packages/fe/8f/81a865e3a1d6bff34b83626abeaa92460995275a8163ebb6a1b382ce5124/pymarc-3.0.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "81b66b0b3aab48912477bac97f2b938a", "sha256": "5e8e90901d1db3db506a72b7c771ad87e6ba5c7b481e14d8e5c67883955d49d8"}, "downloads": -1, "filename": "pymarc-3.0.0.tar.gz", "has_sig": false, "md5_digest": "81b66b0b3aab48912477bac97f2b938a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131806, "upload_time": "2014-05-30T21:27:59", "upload_time_iso_8601": "2014-05-30T21:27:59.746164Z", "url": "https://files.pythonhosted.org/packages/c0/c3/d95e067627224fe286108341c6e5edf3a263d5e0c31eab58e5e5bcfbd5dc/pymarc-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "c32a314c8319938e8a400fc37c87c1f7", "sha256": "bdc172da2a13b76734a50c67b85a8009ef593b101bc633111a4d5ddf0494f77d"}, "downloads": -1, "filename": "pymarc-3.0.1.tar.gz", "has_sig": false, "md5_digest": "c32a314c8319938e8a400fc37c87c1f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131783, "upload_time": "2014-06-02T19:17:06", "upload_time_iso_8601": "2014-06-02T19:17:06.813693Z", "url": "https://files.pythonhosted.org/packages/fa/c4/e1b306852d7a563ada21740e5bf44b6d4d099b8abd244a08a26ba6abc819/pymarc-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "bf4f44ba02009455af6091f3ea6afa64", "sha256": "c8501875be1461520b01ee5a971b16bd31bafa7bacdce0871429bb013c6970aa"}, "downloads": -1, "filename": "pymarc-3.0.2.tar.gz", "has_sig": false, "md5_digest": "bf4f44ba02009455af6091f3ea6afa64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131838, "upload_time": "2014-10-10T20:49:09", "upload_time_iso_8601": "2014-10-10T20:49:09.841216Z", "url": "https://files.pythonhosted.org/packages/d1/21/190d6b17d1e85a26f964c141eb6db55b7e3b20428f6d3f2adb8235ede0af/pymarc-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "98261ecc4d51dffb7d1ffef067f97a2b", "sha256": "9c2c72dfa18b9e37321211fa56f1506ce2a81f7125de4c7a9853b14f3c4bbb0c"}, "downloads": -1, "filename": "pymarc-3.0.3.tar.gz", "has_sig": false, "md5_digest": "98261ecc4d51dffb7d1ffef067f97a2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131890, "upload_time": "2014-12-03T16:58:12", "upload_time_iso_8601": "2014-12-03T16:58:12.675595Z", "url": "https://files.pythonhosted.org/packages/9f/e5/f9f7b8320e50ad911446bb3650730259d73a346e3e08239c6867d2cedbe4/pymarc-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "8d6fe584820542760b2f954076fba9aa", "sha256": "36c069515798fb81d5c85534f6eb885d87a18bd0ba508d4c6c7fbf92fe926fd4"}, "downloads": -1, "filename": "pymarc-3.0.4.tar.gz", "has_sig": false, "md5_digest": "8d6fe584820542760b2f954076fba9aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131869, "upload_time": "2015-07-27T14:47:49", "upload_time_iso_8601": "2015-07-27T14:47:49.558509Z", "url": "https://files.pythonhosted.org/packages/a3/99/290bdcad0c7f84a37b420a3ce219b44862afffb96359dc1245ff8a82b72d/pymarc-3.0.4.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "78c1eecad2e7ed8b2a72b6e37c5e9363", "sha256": "08559962a859c5d942e1e9bb5fae8a99040b19ad2cb613fa12af040fd73b98be"}, "downloads": -1, "filename": "pymarc-3.1.1.tar.gz", "has_sig": false, "md5_digest": "78c1eecad2e7ed8b2a72b6e37c5e9363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 132556, "upload_time": "2015-12-18T15:32:31", "upload_time_iso_8601": "2015-12-18T15:32:31.633161Z", "url": "https://files.pythonhosted.org/packages/c8/59/ad439d8c310c154b39ecd04ed15efb67fbcf2c12434900cb54810c0877bb/pymarc-3.1.1.tar.gz", "yanked": false}], "3.1.10": [{"comment_text": "", "digests": {"md5": "d1391e5e26ee3cc56ff3d6c485b07a08", "sha256": "8e1d0271477daab89a373251180f4f1927d5147f35ce52a8a46f95a9d90c6979"}, "downloads": -1, "filename": "pymarc-3.1.10.tar.gz", "has_sig": false, "md5_digest": "d1391e5e26ee3cc56ff3d6c485b07a08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231635, "upload_time": "2018-05-18T16:04:25", "upload_time_iso_8601": "2018-05-18T16:04:25.095892Z", "url": "https://files.pythonhosted.org/packages/2b/71/dd47f6bb599265317249503781302a74a7768474ccab2ac0b1ea3c51e076/pymarc-3.1.10.tar.gz", "yanked": false}], "3.1.11": [{"comment_text": "", "digests": {"md5": "1c8d774c413fa0acf5f455f2784a6ba7", "sha256": "80d8ca946c1820399dd26013ad013a28da89e95ae96b0a058f5a7ed1c8ce2152"}, "downloads": -1, "filename": "pymarc-3.1.11.tar.gz", "has_sig": false, "md5_digest": "1c8d774c413fa0acf5f455f2784a6ba7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 234855, "upload_time": "2018-12-03T19:03:52", "upload_time_iso_8601": "2018-12-03T19:03:52.017940Z", "url": "https://files.pythonhosted.org/packages/0c/24/695f27689046266beb2f3de567434c526b8c6efa80a20156cfaa95ecde14/pymarc-3.1.11.tar.gz", "yanked": false}], "3.1.12": [{"comment_text": "", "digests": {"md5": "9c658b974a968cfbb40faec05c46e193", "sha256": "65141126a01d0cff2d60b94545f87cfb97c449ea83cb7e47fc62d500a70fa5fd"}, "downloads": -1, "filename": "pymarc-3.1.12.tar.gz", "has_sig": false, "md5_digest": "9c658b974a968cfbb40faec05c46e193", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 214268, "upload_time": "2019-02-27T23:12:41", "upload_time_iso_8601": "2019-02-27T23:12:41.217722Z", "url": "https://files.pythonhosted.org/packages/9b/01/50ee6f73c52866bc6288702ac45eed41e135d690bcc142fe63d7100b36ca/pymarc-3.1.12.tar.gz", "yanked": false}], "3.1.13": [{"comment_text": "", "digests": {"md5": "6772fdab27e7d1a96497bee5a0f73591", "sha256": "9a673c4fd39cb2cb80b3070f04c9bc015a4aa09c4b7daa0dffe3b3695e9d6c7b"}, "downloads": -1, "filename": "pymarc-3.1.13.tar.gz", "has_sig": false, "md5_digest": "6772fdab27e7d1a96497bee5a0f73591", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*", "size": 214294, "upload_time": "2019-03-27T10:49:27", "upload_time_iso_8601": "2019-03-27T10:49:27.178526Z", "url": "https://files.pythonhosted.org/packages/67/3e/1c4b239d179b2a24e8288ad4ae8f87a667bf5acb4c7907c68e3539ab9284/pymarc-3.1.13.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "a24ed84ba6eaed7f5763100c194762d5", "sha256": "76f10540d9d58fed6b47d23111eafb7abb60702cb1605b4103a6b5be4734ad1a"}, "downloads": -1, "filename": "pymarc-3.1.2.tar.gz", "has_sig": false, "md5_digest": "a24ed84ba6eaed7f5763100c194762d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 132558, "upload_time": "2016-05-03T14:43:22", "upload_time_iso_8601": "2016-05-03T14:43:22.075395Z", "url": "https://files.pythonhosted.org/packages/c3/d0/6f279c223c7d35a18350d7a302aa4df75f38aab313147434ba988922298f/pymarc-3.1.2.tar.gz", "yanked": false}], "3.1.3": [{"comment_text": "", "digests": {"md5": "8056f7a06299c4ac7a0e5849748c1f0d", "sha256": "f2f8e5a5ddb130510df232c2760aa7466f27620dd8dee8d9fbc62e783c76e2c2"}, "downloads": -1, "filename": "pymarc-3.1.3.tar.gz", "has_sig": false, "md5_digest": "8056f7a06299c4ac7a0e5849748c1f0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 222485, "upload_time": "2016-07-18T15:11:25", "upload_time_iso_8601": "2016-07-18T15:11:25.566387Z", "url": "https://files.pythonhosted.org/packages/48/bf/bb009f5737ec64aace6b8898e5584148508f3ea34999dcb7a9cdac473c8b/pymarc-3.1.3.tar.gz", "yanked": false}], "3.1.4": [], "3.1.5": [{"comment_text": "", "digests": {"md5": "010324c21bc6d1422c7e19dfe688710c", "sha256": "7352a9eacc3da96915931daa71eefc2b6e0f88b60e65c7cea70c0002d1a7c93c"}, "downloads": -1, "filename": "pymarc-3.1.5.tar.gz", "has_sig": false, "md5_digest": "010324c21bc6d1422c7e19dfe688710c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 222522, "upload_time": "2016-07-20T14:24:40", "upload_time_iso_8601": "2016-07-20T14:24:40.131699Z", "url": "https://files.pythonhosted.org/packages/a3/fa/0bb1591331a5926887d1617909eb0ff49a5b86220d892525942cbeac41d0/pymarc-3.1.5.tar.gz", "yanked": false}], "3.1.6": [{"comment_text": "", "digests": {"md5": "7d4d653b9e79d403d52a47082f8914c9", "sha256": "6449130789d79a022aa4062db4097f07f9ea89c9d4c247e9624fac3a9c9ead0d"}, "downloads": -1, "filename": "pymarc-3.1.6.tar.gz", "has_sig": false, "md5_digest": "7d4d653b9e79d403d52a47082f8914c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 211024, "upload_time": "2017-03-22T16:13:34", "upload_time_iso_8601": "2017-03-22T16:13:34.942610Z", "url": "https://files.pythonhosted.org/packages/56/74/587b010f334dba7e7ec10dfd3b96f22ac2ca1b57d5ed18df54485c1bc526/pymarc-3.1.6.tar.gz", "yanked": false}], "3.1.7": [{"comment_text": "", "digests": {"md5": "0ce7dddf2b37393dfa09cf3137d9c5f4", "sha256": "0448f9769e717396ce72ae3024cc35478b68362326699a9866d8f1a1f5d95ef4"}, "downloads": -1, "filename": "pymarc-3.1.7.tar.gz", "has_sig": false, "md5_digest": "0ce7dddf2b37393dfa09cf3137d9c5f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 211051, "upload_time": "2017-07-26T16:15:29", "upload_time_iso_8601": "2017-07-26T16:15:29.856773Z", "url": "https://files.pythonhosted.org/packages/78/bb/26b839ac49e327053bf9c3d0bd8489e634aa2f940219c44f7fa5c81d0898/pymarc-3.1.7.tar.gz", "yanked": false}], "3.1.8": [{"comment_text": "", "digests": {"md5": "e69a440481dbb5544f326587c2eff3ee", "sha256": "9a10c4e25ba6123333c7bdbddd616523861e5dc2809c61febd4b3ea8ce532e2f"}, "downloads": -1, "filename": "pymarc-3.1.8.tar.gz", "has_sig": false, "md5_digest": "e69a440481dbb5544f326587c2eff3ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 229359, "upload_time": "2018-04-09T15:19:36", "upload_time_iso_8601": "2018-04-09T15:19:36.059298Z", "url": "https://files.pythonhosted.org/packages/62/5a/4ceee2d5932e12d42bb4717b1758cc0672e0f01ac94a81c52c3ae47d104f/pymarc-3.1.8.tar.gz", "yanked": false}], "3.1.9": [{"comment_text": "", "digests": {"md5": "b80e810276de1d8d956c6141fb1deeac", "sha256": "392a7239ff6522b1ea3140a13de491106d2286397ac14eda0621c70fd9426494"}, "downloads": -1, "filename": "pymarc-3.1.9.tar.gz", "has_sig": false, "md5_digest": "b80e810276de1d8d956c6141fb1deeac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231638, "upload_time": "2018-05-18T15:57:44", "upload_time_iso_8601": "2018-05-18T15:57:44.062113Z", "url": "https://files.pythonhosted.org/packages/ae/5d/d7f1641908726ff12c67d938d70e7f9d779dede5bbd96f563e86831ff4e3/pymarc-3.1.9.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "a1183de269c5d9281a487a44cb158169", "sha256": "936ba146c0368577e9f1630f69ace96c77bbc1febd94cd09e6204c1cf7b68778"}, "downloads": -1, "filename": "pymarc-3.2.0.tar.gz", "has_sig": false, "md5_digest": "a1183de269c5d9281a487a44cb158169", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*", "size": 223396, "upload_time": "2019-12-10T02:11:20", "upload_time_iso_8601": "2019-12-10T02:11:20.566930Z", "url": "https://files.pythonhosted.org/packages/13/8a/ddf96fff7324aef1bbe6bfc99ba5a63bcf4a0f892b5fbe6764e3e3ad44f9/pymarc-3.2.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "19a389681fa6d3e20eb29aca61d778f6", "sha256": "e5abe4d9243babd89811ddb3b841e3dbc18ae5dc6c062813e102bf42e0b09067"}, "downloads": -1, "filename": "pymarc-4.0.0.tar.gz", "has_sig": false, "md5_digest": "19a389681fa6d3e20eb29aca61d778f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 227485, "upload_time": "2020-02-29T12:52:12", "upload_time_iso_8601": "2020-02-29T12:52:12.856796Z", "url": "https://files.pythonhosted.org/packages/74/52/0e3455cb927859b68e07d210984af51a6f40f3bd8ac288227ec10dfee3cd/pymarc-4.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19a389681fa6d3e20eb29aca61d778f6", "sha256": "e5abe4d9243babd89811ddb3b841e3dbc18ae5dc6c062813e102bf42e0b09067"}, "downloads": -1, "filename": "pymarc-4.0.0.tar.gz", "has_sig": false, "md5_digest": "19a389681fa6d3e20eb29aca61d778f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.*", "size": 227485, "upload_time": "2020-02-29T12:52:12", "upload_time_iso_8601": "2020-02-29T12:52:12.856796Z", "url": "https://files.pythonhosted.org/packages/74/52/0e3455cb927859b68e07d210984af51a6f40f3bd8ac288227ec10dfee3cd/pymarc-4.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:33 2020"}