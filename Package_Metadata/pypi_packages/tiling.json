{"info": {"author": "vfdev-5", "author_email": "vfdev.5@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/vfdev-5/ImageTilingUtils.svg?branch=master)](https://travis-ci.org/vfdev-5/ImageTilingUtils)\n[![Coverage Status](https://coveralls.io/repos/github/vfdev-5/ImageTilingUtils/badge.svg?branch=master)](https://coveralls.io/github/vfdev-5/ImageTilingUtils?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/imagetilingutils/badge/?version=latest)](http://imagetilingutils.readthedocs.io/en/latest/?badge=latest)\n\n# Image Tiling Utils\nMinimalistic set of image reader agnostic tools to easily iterate over large images\n\n**Example 1**\n\nLet's iterate over a large image with overlapping tiles of the \nsame size tiles in pixels. At boundaries we add \"no-data\" pixels. \nLet's assume the data access is provided with an example function\n```python\ndef read_data(x, y, width, height, out_width=None, out_height=None):\n    out_width = width if out_width is None else out_width\n    out_height = height if out_height is None else out_height    \n    img.read(x, y, width, height, out_width, out_height)\n``` \nThus, overlapping tiles can be extracted as  \n```python\nfrom tiling import ConstStrideTiles\n\ntiles = ConstStrideTiles(image_size=(500, 500), tile_size=(256, 256), stride=(100, 100), \n                         origin=(-100, -100),\n                         scale=1.0,\n                         include_nodata=True)\n\nprint(\"Number of tiles: %i\" % len(tiles))\nfor extent, out_size in tiles:\n    x, y, width, height = extent\n    data = read_data(x, y, width, height, \n                     out_width=out_size[0], \n                     out_height=out_size[1])\n    print(\"data.shape: {}\".format(data.shape))\n\n# Access a tile:\ni = len(tiles) // 2 \nextent, out_size  = tiles[i]\n```\n\n![example 1 tiles](assets/example_const_stride_tiles.png)\n\n\n**Example 2**\n\nLet's iterate over a large image with overlapping tiles of the same size in pixels. \nIn this case we prefer to not going outside the input image and fill tiles with `nodata`.\nIn this situation, overlapping is not constant. \nLet's assume the data access is provided with an example function\n```python\ndef read_data(x, y, width, height, out_width=None, out_height=None):\n    out_width = width if out_width is None else out_width\n    out_height = height if out_height is None else out_height    \n    img.read(x, y, width, height, out_width, out_height)\n``` \nThus, overlapping tiles can be extracted as  \n```python\nfrom tiling import ConstSizeTiles\n\ntiles = ConstSizeTiles(image_size=(500, 500), tile_size=(256, 256), min_overlapping=15, scale=1.0)\n\nprint(\"Number of tiles: %i\" % len(tiles))\nfor extent, out_size in tiles:\n    assert out_size[0] == tiles.tile_size[0]\n    assert out_size[1] == tiles.tile_size[1]\n    x, y, width, height = extent\n    data = read_data(x, y, width, height, \n                     out_width=out_size[0], \n                     out_height=out_size[1])\n    print(\"data.shape: {}\".format(data.shape))\n\n# Access a tile:\ni = len(tiles) // 2 \nextent  = tiles[i]\n```\n\n![example 2 tiles](assets/example_const_size_tiles.png)\n\n\n## Installation:\n\n#### from pip\n```bash\npip install tiling\n```\n\n#### from sources\n\n```bash\npip install git+https://github.com/vfdev-5/ImageTilingUtils.git\n```\n\n## Examples \n\nFor more practical examples, see [notebooks](examples)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vfdev-5/ImageTilingUtils", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tiling", "package_url": "https://pypi.org/project/tiling/", "platform": "", "project_url": "https://pypi.org/project/tiling/", "project_urls": {"Homepage": "https://github.com/vfdev-5/ImageTilingUtils"}, "release_url": "https://pypi.org/project/tiling/0.3.0/", "requires_dist": ["six", "pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'"], "requires_python": "", "summary": "Minimalistic set of image reader agnostic tools to easily iterate over large images", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/vfdev-5/ImageTilingUtils\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8782b3b241b132e005fc2c56a04a6f6900b8c066/68747470733a2f2f7472617669732d63692e6f72672f76666465762d352f496d61676554696c696e675574696c732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/vfdev-5/ImageTilingUtils?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a98e9ac279ebe25f09f1d240efdc254d53f9859d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f76666465762d352f496d61676554696c696e675574696c732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://imagetilingutils.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c24faef381db57a3ca9b1c844c4ecc240ef1937a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696d61676574696c696e677574696c732f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>Image Tiling Utils</h1>\n<p>Minimalistic set of image reader agnostic tools to easily iterate over large images</p>\n<p><strong>Example 1</strong></p>\n<p>Let's iterate over a large image with overlapping tiles of the\nsame size tiles in pixels. At boundaries we add \"no-data\" pixels.\nLet's assume the data access is provided with an example function</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">read_data</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">out_width</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">out_height</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">out_width</span> <span class=\"o\">=</span> <span class=\"n\">width</span> <span class=\"k\">if</span> <span class=\"n\">out_width</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">out_width</span>\n    <span class=\"n\">out_height</span> <span class=\"o\">=</span> <span class=\"n\">height</span> <span class=\"k\">if</span> <span class=\"n\">out_height</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">out_height</span>    \n    <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">out_width</span><span class=\"p\">,</span> <span class=\"n\">out_height</span><span class=\"p\">)</span>\n</pre>\n<p>Thus, overlapping tiles can be extracted as</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tiling</span> <span class=\"kn\">import</span> <span class=\"n\">ConstStrideTiles</span>\n\n<span class=\"n\">tiles</span> <span class=\"o\">=</span> <span class=\"n\">ConstStrideTiles</span><span class=\"p\">(</span><span class=\"n\">image_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">),</span> <span class=\"n\">tile_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">),</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> \n                         <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">),</span>\n                         <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>\n                         <span class=\"n\">include_nodata</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Number of tiles: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tiles</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">extent</span><span class=\"p\">,</span> <span class=\"n\">out_size</span> <span class=\"ow\">in</span> <span class=\"n\">tiles</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">extent</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">read_data</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> \n                     <span class=\"n\">out_width</span><span class=\"o\">=</span><span class=\"n\">out_size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n                     <span class=\"n\">out_height</span><span class=\"o\">=</span><span class=\"n\">out_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"data.shape: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Access a tile:</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tiles</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> \n<span class=\"n\">extent</span><span class=\"p\">,</span> <span class=\"n\">out_size</span>  <span class=\"o\">=</span> <span class=\"n\">tiles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</pre>\n<p><img alt=\"example 1 tiles\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebe542701aa500a848f5ae1dfd27a7476ef29768/6173736574732f6578616d706c655f636f6e73745f7374726964655f74696c65732e706e67\"></p>\n<p><strong>Example 2</strong></p>\n<p>Let's iterate over a large image with overlapping tiles of the same size in pixels.\nIn this case we prefer to not going outside the input image and fill tiles with <code>nodata</code>.\nIn this situation, overlapping is not constant.\nLet's assume the data access is provided with an example function</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">read_data</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">out_width</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">out_height</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">out_width</span> <span class=\"o\">=</span> <span class=\"n\">width</span> <span class=\"k\">if</span> <span class=\"n\">out_width</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">out_width</span>\n    <span class=\"n\">out_height</span> <span class=\"o\">=</span> <span class=\"n\">height</span> <span class=\"k\">if</span> <span class=\"n\">out_height</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">out_height</span>    \n    <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">out_width</span><span class=\"p\">,</span> <span class=\"n\">out_height</span><span class=\"p\">)</span>\n</pre>\n<p>Thus, overlapping tiles can be extracted as</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tiling</span> <span class=\"kn\">import</span> <span class=\"n\">ConstSizeTiles</span>\n\n<span class=\"n\">tiles</span> <span class=\"o\">=</span> <span class=\"n\">ConstSizeTiles</span><span class=\"p\">(</span><span class=\"n\">image_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">),</span> <span class=\"n\">tile_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">),</span> <span class=\"n\">min_overlapping</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Number of tiles: </span><span class=\"si\">%i</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tiles</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">extent</span><span class=\"p\">,</span> <span class=\"n\">out_size</span> <span class=\"ow\">in</span> <span class=\"n\">tiles</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">out_size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">tiles</span><span class=\"o\">.</span><span class=\"n\">tile_size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">assert</span> <span class=\"n\">out_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">tiles</span><span class=\"o\">.</span><span class=\"n\">tile_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">extent</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">read_data</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">,</span> \n                     <span class=\"n\">out_width</span><span class=\"o\">=</span><span class=\"n\">out_size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n                     <span class=\"n\">out_height</span><span class=\"o\">=</span><span class=\"n\">out_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"data.shape: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Access a tile:</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tiles</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> \n<span class=\"n\">extent</span>  <span class=\"o\">=</span> <span class=\"n\">tiles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</pre>\n<p><img alt=\"example 2 tiles\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f9f937e51d01da7ca862ec61d683b5f2ae9abe7/6173736574732f6578616d706c655f636f6e73745f73697a655f74696c65732e706e67\"></p>\n<h2>Installation:</h2>\n<h4>from pip</h4>\n<pre>pip install tiling\n</pre>\n<h4>from sources</h4>\n<pre>pip install git+https://github.com/vfdev-5/ImageTilingUtils.git\n</pre>\n<h2>Examples</h2>\n<p>For more practical examples, see <a href=\"examples\" rel=\"nofollow\">notebooks</a></p>\n\n          </div>"}, "last_serial": 6107777, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "652c0630c4390327ddf5e756d68e62ec", "sha256": "0730e7d0cf87d9c20ac3b30a6182a241a7e3b405226f13fa4fc94edb04ec9bb1"}, "downloads": -1, "filename": "tiling-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "652c0630c4390327ddf5e756d68e62ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4799, "upload_time": "2018-06-02T14:27:00", "upload_time_iso_8601": "2018-06-02T14:27:00.647777Z", "url": "https://files.pythonhosted.org/packages/25/a0/74b5526d0ab386da743d42835c18d093bd663064ba89858a05d881a31fc8/tiling-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06fca33719df242e8db6dd9d7804b6e2", "sha256": "d5250daf51913a330d50e265c77bb7850b1b1a0a16471373ce360ebbc0cf2853"}, "downloads": -1, "filename": "tiling-0.1.2.tar.gz", "has_sig": false, "md5_digest": "06fca33719df242e8db6dd9d7804b6e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4409, "upload_time": "2018-06-02T14:27:01", "upload_time_iso_8601": "2018-06-02T14:27:01.903505Z", "url": "https://files.pythonhosted.org/packages/9d/16/a65171bc66e23e3b75d08d8654126f74bf0858b6fe2015309bf5f0511dce/tiling-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "86dc1d96dc3f330b383222c9bbf0ebb5", "sha256": "922b9e7fe479e0f13cf2e6cee0d92c67c0adff1eb60a0cc4c7f741ed674736ba"}, "downloads": -1, "filename": "tiling-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "86dc1d96dc3f330b383222c9bbf0ebb5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7289, "upload_time": "2019-09-18T14:35:03", "upload_time_iso_8601": "2019-09-18T14:35:03.885412Z", "url": "https://files.pythonhosted.org/packages/53/88/adeb789131ec49f9644b141fc591d1ee963d0c5773eb2816fd08c1b5d821/tiling-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa4defb21aedc1a7915c20c7228edfaa", "sha256": "37c5d71f630078069dd9c3f353998ed979e7b03c4a94b24ba5f51021f411968f"}, "downloads": -1, "filename": "tiling-0.2.0-py3.6.egg", "has_sig": false, "md5_digest": "fa4defb21aedc1a7915c20c7228edfaa", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 12626, "upload_time": "2019-09-18T14:35:05", "upload_time_iso_8601": "2019-09-18T14:35:05.398100Z", "url": "https://files.pythonhosted.org/packages/f5/61/a9ddc10639c549272a7ef49cb5dcfd40d5f0bae7477742b2f34ebae92bbf/tiling-0.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b39eae82f2919b7e959c843e8d9d34d8", "sha256": "ccefa505adc357286a090c12b4ddab4615858f220b2250b28091883a89fc6765"}, "downloads": -1, "filename": "tiling-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b39eae82f2919b7e959c843e8d9d34d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5223, "upload_time": "2019-09-18T14:35:06", "upload_time_iso_8601": "2019-09-18T14:35:06.728799Z", "url": "https://files.pythonhosted.org/packages/78/70/d4f3061fd4b097873a1fa29619d837aade74f1871e4268ec8a0d18a6f9bf/tiling-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1d5d09bc007eb0c6bd0b544c523307c5", "sha256": "92d606be0a49746ef6de758c23e09ee232454252d5170fdb8ac01ba7863b5b07"}, "downloads": -1, "filename": "tiling-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1d5d09bc007eb0c6bd0b544c523307c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7644, "upload_time": "2019-11-09T17:01:43", "upload_time_iso_8601": "2019-11-09T17:01:43.696856Z", "url": "https://files.pythonhosted.org/packages/8b/7c/741c08e17e66983c3423c1f2a3ec729e538b62bfa67e4fafd1b442745ee4/tiling-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0f5ee6e1e2cf3df92634ab23e5435d7", "sha256": "cd9623d9c9bb3b7ec410b5a4bd87a16930e9559695ba6ef4a287bbd1993986ee"}, "downloads": -1, "filename": "tiling-0.3.0-py3.6.egg", "has_sig": false, "md5_digest": "e0f5ee6e1e2cf3df92634ab23e5435d7", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 13422, "upload_time": "2019-11-09T17:01:45", "upload_time_iso_8601": "2019-11-09T17:01:45.036327Z", "url": "https://files.pythonhosted.org/packages/0d/7d/69478f6027f0e3a59ff91e7be219204fa858a236724620872268e3f38825/tiling-0.3.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "af135e94c2febd13838ae9aecb4fe6a4", "sha256": "888bf09385f5e200916e3308a2a2b1534c6837d52be552e5d077687f5be9799a"}, "downloads": -1, "filename": "tiling-0.3.0.tar.gz", "has_sig": false, "md5_digest": "af135e94c2febd13838ae9aecb4fe6a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5321, "upload_time": "2019-11-09T17:01:46", "upload_time_iso_8601": "2019-11-09T17:01:46.024964Z", "url": "https://files.pythonhosted.org/packages/8b/5c/f877513ee613894203d8e78f7a926b45b51e6408699f4e189d8e9d8331f7/tiling-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1d5d09bc007eb0c6bd0b544c523307c5", "sha256": "92d606be0a49746ef6de758c23e09ee232454252d5170fdb8ac01ba7863b5b07"}, "downloads": -1, "filename": "tiling-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1d5d09bc007eb0c6bd0b544c523307c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7644, "upload_time": "2019-11-09T17:01:43", "upload_time_iso_8601": "2019-11-09T17:01:43.696856Z", "url": "https://files.pythonhosted.org/packages/8b/7c/741c08e17e66983c3423c1f2a3ec729e538b62bfa67e4fafd1b442745ee4/tiling-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0f5ee6e1e2cf3df92634ab23e5435d7", "sha256": "cd9623d9c9bb3b7ec410b5a4bd87a16930e9559695ba6ef4a287bbd1993986ee"}, "downloads": -1, "filename": "tiling-0.3.0-py3.6.egg", "has_sig": false, "md5_digest": "e0f5ee6e1e2cf3df92634ab23e5435d7", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 13422, "upload_time": "2019-11-09T17:01:45", "upload_time_iso_8601": "2019-11-09T17:01:45.036327Z", "url": "https://files.pythonhosted.org/packages/0d/7d/69478f6027f0e3a59ff91e7be219204fa858a236724620872268e3f38825/tiling-0.3.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "af135e94c2febd13838ae9aecb4fe6a4", "sha256": "888bf09385f5e200916e3308a2a2b1534c6837d52be552e5d077687f5be9799a"}, "downloads": -1, "filename": "tiling-0.3.0.tar.gz", "has_sig": false, "md5_digest": "af135e94c2febd13838ae9aecb4fe6a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5321, "upload_time": "2019-11-09T17:01:46", "upload_time_iso_8601": "2019-11-09T17:01:46.024964Z", "url": "https://files.pythonhosted.org/packages/8b/5c/f877513ee613894203d8e78f7a926b45b51e6408699f4e189d8e9d8331f7/tiling-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:40 2020"}