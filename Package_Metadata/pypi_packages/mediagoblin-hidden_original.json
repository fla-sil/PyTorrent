{"info": {"author": "Kevin Brubeck Unhammer", "author_email": "unhammer@fsfe.org", "bugtrack_url": null, "classifiers": [], "description": "=================\n Hidden Original\n=================\n\nThis plugin stashes away the original file, and uses a downsized one\nas the `original` for mediagoblins purposes. The full size original is\navailable in the media entry field `hidden_original`.\n\nThe hidden original gets a non-guessable path (currently using\npython's `uuid.uuid4()` to generate it). If you're using SSL, this\nshould keep your original files well hidden.\n\nThis plugin is licensed under the GNU APGL v3+.\n\nCurrently requires a patched mediagoblin to make it run image\npreprocessing hooks, check out branch `stock` of\nhttps://gitorious.org/mediagoblin-stock/mediagoblin\n\nInstallation\n============\n\nIf you've checked out this plugin and mediagoblin in the same parent\ndirectory, you should be able to build and install with\n\n    ../mediagoblin/bin/python setup.py build\n    ../mediagoblin/bin/python setup.py install\n\nTests\n=====\n\nAfter installing, run the built-in unit tests by invoking `python2\nsetup.py test` in the root directory. The tests require an installed\nversion of GNU MediaGoblin to be available for importing. If you've\nchecked out this plugin and mediagoblin in the same parent directory,\nyou should be able to run\n\n    ../mediagoblin/bin/python setup.py test\n\nTODO\n====\n\n- Functions to re-create the secret urls (mv the file from the old\n  secret url to a new randomly created one). One function for a\n  particular entry, one that does it for all of them.\n\n- *Long term*: The hidden original should probably be completely\n  inaccessible by default (in some \"private_storage\"?); and there\n  should be a function `reveal_hidden(entry)` which makes the original\n  accessible through some secret url for sharing that original, and\n  another function `revoke_revelation(secret_url)` to revoke a\n  particular share. One entry should be able to have several such\n  published secret urls, so a user can share with otheruser1 and\n  otheruser2, one url each, and then e.g. revoke the first url without\n  the second one being revoked as well.\n", "description_content_type": null, "docs_url": null, "download_url": "https://gitorious.org/mediagoblin-stock/mediagoblin-hidden_original/archive/mediagoblin-hidden_original-v0.1.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitorious.org/mediagoblin-stock/mediagoblin-hidden_original", "keywords": null, "license": "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "maintainer": null, "maintainer_email": null, "name": "mediagoblin-hidden_original", "package_url": "https://pypi.org/project/mediagoblin-hidden_original/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mediagoblin-hidden_original/", "project_urls": {"Download": "https://gitorious.org/mediagoblin-stock/mediagoblin-hidden_original/archive/mediagoblin-hidden_original-v0.1.4.tar.gz", "Homepage": "https://gitorious.org/mediagoblin-stock/mediagoblin-hidden_original"}, "release_url": "https://pypi.org/project/mediagoblin-hidden_original/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Hide original files, show only downsized ones.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This plugin stashes away the original file, and uses a downsized one\nas the <cite>original</cite> for mediagoblins purposes. The full size original is\navailable in the media entry field <cite>hidden_original</cite>.</p>\n<p>The hidden original gets a non-guessable path (currently using\npython\u2019s <cite>uuid.uuid4()</cite> to generate it). If you\u2019re using SSL, this\nshould keep your original files well hidden.</p>\n<p>This plugin is licensed under the GNU APGL v3+.</p>\n<p>Currently requires a patched mediagoblin to make it run image\npreprocessing hooks, check out branch <cite>stock</cite> of\n<a href=\"https://gitorious.org/mediagoblin-stock/mediagoblin\" rel=\"nofollow\">https://gitorious.org/mediagoblin-stock/mediagoblin</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you\u2019ve checked out this plugin and mediagoblin in the same parent\ndirectory, you should be able to build and install with</p>\n<blockquote>\n../mediagoblin/bin/python setup.py build\n../mediagoblin/bin/python setup.py install</blockquote>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>After installing, run the built-in unit tests by invoking <cite>python2\nsetup.py test</cite> in the root directory. The tests require an installed\nversion of GNU MediaGoblin to be available for importing. If you\u2019ve\nchecked out this plugin and mediagoblin in the same parent directory,\nyou should be able to run</p>\n<blockquote>\n../mediagoblin/bin/python setup.py test</blockquote>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Functions to re-create the secret urls (mv the file from the old\nsecret url to a new randomly created one). One function for a\nparticular entry, one that does it for all of them.</li>\n<li><em>Long term</em>: The hidden original should probably be completely\ninaccessible by default (in some \u201cprivate_storage\u201d?); and there\nshould be a function <cite>reveal_hidden(entry)</cite> which makes the original\naccessible through some secret url for sharing that original, and\nanother function <cite>revoke_revelation(secret_url)</cite> to revoke a\nparticular share. One entry should be able to have several such\npublished secret urls, so a user can share with otheruser1 and\notheruser2, one url each, and then e.g. revoke the first url without\nthe second one being revoked as well.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 985954, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "03c22b1d098e467642425613714cc70e", "sha256": "906dabfd0328a0edf06d92977dbe5a401ffe5d1dd91a186437e28f8f2ef27e44"}, "downloads": -1, "filename": "mediagoblin-hidden_original-0.1.3.tar.gz", "has_sig": true, "md5_digest": "03c22b1d098e467642425613714cc70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3793, "upload_time": "2014-01-22T15:08:59", "upload_time_iso_8601": "2014-01-22T15:08:59.469507Z", "url": "https://files.pythonhosted.org/packages/8f/5f/69d717a40e49f5c67889c7c331eb219929900cc9f9f23c1cc770568770c0/mediagoblin-hidden_original-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d25e1b28b63eb15bf31472127a4619c9", "sha256": "a7e15967961d95529b9318dec2ac449302efebadb3148ddc837fe219cc69ba66"}, "downloads": -1, "filename": "mediagoblin-hidden_original-0.1.4.tar.gz", "has_sig": true, "md5_digest": "d25e1b28b63eb15bf31472127a4619c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3781, "upload_time": "2014-01-30T10:29:52", "upload_time_iso_8601": "2014-01-30T10:29:52.495082Z", "url": "https://files.pythonhosted.org/packages/a4/0c/9d42f439de8d42ccc7614781ace52477a90e7732ecdc5098c924a739868e/mediagoblin-hidden_original-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d25e1b28b63eb15bf31472127a4619c9", "sha256": "a7e15967961d95529b9318dec2ac449302efebadb3148ddc837fe219cc69ba66"}, "downloads": -1, "filename": "mediagoblin-hidden_original-0.1.4.tar.gz", "has_sig": true, "md5_digest": "d25e1b28b63eb15bf31472127a4619c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3781, "upload_time": "2014-01-30T10:29:52", "upload_time_iso_8601": "2014-01-30T10:29:52.495082Z", "url": "https://files.pythonhosted.org/packages/a4/0c/9d42f439de8d42ccc7614781ace52477a90e7732ecdc5098c924a739868e/mediagoblin-hidden_original-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:37 2020"}