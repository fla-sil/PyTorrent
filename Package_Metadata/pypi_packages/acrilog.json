{"info": {"author": "Acrisel Team", "author_email": "support@acrisel.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=======\nacrilog\n=======\n\n----------------------\nMultiprocessing logger\n----------------------\n\n.. contents:: Table of Contents\n   :depth: 2\n\nOverview\n========\n\n    **acrilog** is a python library encapsulating multiprocessing logging into practical use.\n    \n    **acrilog** started as Acrisel's internal utility for programmers.\n    \n    It included:\n        1. Time and size rotating handler.\n        #. Multiprocessing logging queue server\n        \n    The library makes it easier to add logging in a multiprocessing environment where processes are split among multiple Python source codes.  \n    \n    We decided to contribute this library to Python community as a token of appreciation to\n    what this community enables us.\n    \n    We hope that you will find this library useful and helpful as we find it.\n    \n    If you have comments or insights, please don't hesitate to contact us at support@acrisel.com\n    \n\nTimedSizedRotatingHandler\n=========================\n\t\n    Use TimedSizedRotatingHandler is combining TimedRotatingFileHandler with RotatingFileHandler.  \n    Usage as handler with logging is as defined in Python's logging how-to\n\t\nexample\n-------\n\n    .. code-block:: python\n\t\n        import logging\n\t\n        # create logger\n        logger = logging.getLogger('simple_example')\n        logger.setLevel(logging.DEBUG)\n\t\n        # create console handler and set level to debug\n        ch = logging.TimedRotatingFileHandler()\n        ch.setLevel(logging.DEBUG)\n\t\n        # create formatter\n        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\t\n        # add formatter to ch\n        ch.setFormatter(formatter)\n\t\n        # add ch to logger\n        logger.addHandler(ch)\n\t\n        # 'application' code\n        logger.debug('debug message')\n        logger.info('info message')\n        logger.warn('warn message')\n        logger.error('error message')\n        logger.critical('critical message')\t\n\nMpLogger and LevelBasedFormatter\n================================\n\n    Multiprocessor logger using QueueListener and QueueHandler\n    It uses TimedSizedRotatingHandler as its logging handler\n\n    It also uses acris provided LevelBasedFormatter which facilitate message formats\n    based on record level.  LevelBasedFormatter inherent from logging.Formatter and\n    can be used as such in customized logging handlers. \n\t\nexample\n-------\n\nWithin main process\n~~~~~~~~~~~~~~~~~~~\n\n    .. code-block:: python\n\t\n        import time\n        import random\n        import logging\n        from acris import MpLogger\n        import os\n        import multiprocessing as mp\n\n        def subproc(limit=1, logger_info=None):\n            logger = MpLogger.get_logger(logger_info, name=\"acrilog.subproc\", )\n    \t\tfor i in range(limit):\n                sleep_time = 3/random.randint(1,10)\n                time.sleep(sleep_time)\n                logger.info(\"proc [%s]: %s/%s - sleep %4.4ssec\" % (os.getpid(), i, limit, sleep_time))\n\n        level_formats = {logging.DEBUG:\"[ %(asctime)s ][ %(levelname)s ][ %(message)s ][ %(module)s.%(funcName)s(%(lineno)d) ]\",\n                        'default':   \"[ %(asctime)s ][ %(levelname)s ][ %(message)s ]\",\n                        }\n    \n        mplogger = MpLogger(logging_level=logging.DEBUG, level_formats=level_formats, datefmt='%Y-%m-%d,%H:%M:%S.%f')\n        mplogger.start(name='main_process')\n        logger = MpLogger.get_logger(mplogger.logger_info())\n\n        logger.debug(\"starting sub processes\")\n        procs = list()\n        for limit in [1, 1]:\n            proc = mp.Process(target=subproc, args=(limit, mplogger.logger_info(),))\n            procs.append(proc)\n            proc.start()\n    \n        for proc in procs:\n            if proc:\n                proc.join()\n    \n        logger.debug(\"sub processes completed\")\n\n        mplogger.stop()\t\n        \n    \nExample output\n--------------\n\n    .. code-block:: python\n\n        [ 2016-12-19,11:39:44.953189 ][ DEBUG ][ starting sub processes ][ mplogger.<module>(45) ]\n        [ 2016-12-19,11:39:45.258794 ][ INFO ][ proc [932]: 0/1 - sleep  0.3sec ]\n        [ 2016-12-19,11:39:45.707914 ][ INFO ][ proc [931]: 0/1 - sleep 0.75sec ]\n        [ 2016-12-19,11:39:45.710487 ][ DEBUG ][ sub processes completed ][ mplogger.<module>(56) ]\n        \nClarification of parameters\n===========================\n\nname\n----\n\n**name** identifies the base name for logger. Note the this parameter is available in both MpLogger init method and in its start method.\n\nMpLogger init's **name** argument is used for consolidated logger when **consolidate** is set.  It is also used for private logger of the main process, if one not provided when calling *start()* method. \n\nproecess_key\n------------\n\n**process_key** defines one or more logger record field that would be part of the file name of the log.  In case it is used, logger will have a file per records' process key.  This will be in addition for a consolidated log, if **consolidate** is set. \n\nBy default, MpLogger uses **name** as the process key.  If something else is provided, e.g., **processName**, it will be concatenated to **name** as postfix.  \n\nfile_prefix and file_suffix\n---------------------------\n\nAllows to distinguish among sets of logs of different runs by setting one (or both) of **file_prefix** and **file_suffix**.  Usually, the use of PID and granular datetime as prefix or suffix would create unique set of logs.\n\nfile_mode\n---------\n\n**file_mode** let program define how logs will be opened.  In default, logs are open in append mode.  Hense, history is collected and file a rolled overnight and by size. \n\nconsolidate\n----------- \n\n**consolidate**, when set, will create consolidated log from all processing logs.\nIf **consolidated** is set and *start()* is called without **name**, consolidation will be done into the main process.\n\nkwargs\n------\n\n**kwargs** are named arguments that will passed to FileHandler.  This include:\n\n    .. code-block::\n    \n        file_mode='a', for RotatingFileHandler\n        maxBytes=0, for RotatingFileHandler\n        backupCount=0, for RotatingFileHandler and TimedRotatingFileHandler\n        encoding='ascii', for RotatingFileHandler and TimedRotatingFileHandler\n        delay=False, for TimedRotatingFileHandler\n        when='h', for TimedRotatingFileHandler\n        interval=1, TimedRotatingFileHandler\n        utc=False, TimedRotatingFileHandler\n        atTime=None, for TimedRotatingFileHandler\n    \n     \nChange History\n==============\n\nv0.9\n----\n    \n    1. added ability to pass logger_info to subprocess, \n    2. exposed encoding parameter\n    \nv1.0\n----\n\n    1. replaced **force_global** with **consolidate** to genrerate consolidated log\n    2. add **name** argument to MpLogger.start().  This will return logger with that name for the main process.\n    3. MpLogger.__init__() **name** argument will be used for consolidated log.\n    \nv1.1\n----\n\n    1. add **file_prefix** and **file_suffix** as MpLogger parameters.\n    2. fix bug when logdir is None.\n    \nv2.0\n----\n\n    1. added NwLogger starting a server logger with NwLoggerClientHandler for remote processes.\n    \n\nNext Steps\n==========\n\n    1. Cluster support using TCP/IP \n    #. Logging monitor and alert", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Acrisel/acrilog", "keywords": "library logger multiprocessing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "acrilog", "package_url": "https://pypi.org/project/acrilog/", "platform": "", "project_url": "https://pypi.org/project/acrilog/", "project_urls": {"Homepage": "https://github.com/Acrisel/acrilog"}, "release_url": "https://pypi.org/project/acrilog/2.0.13/", "requires_dist": null, "requires_python": "", "summary": "acrilog is a Python library of providing multiprocessing idiomto us in multiprocessing environment", "version": "2.0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#overview\" id=\"id2\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#timedsizedrotatinghandler\" id=\"id3\" rel=\"nofollow\">TimedSizedRotatingHandler</a><ul>\n<li><a href=\"#example\" id=\"id4\" rel=\"nofollow\">example</a></li>\n</ul>\n</li>\n<li><a href=\"#mplogger-and-levelbasedformatter\" id=\"id5\" rel=\"nofollow\">MpLogger and LevelBasedFormatter</a><ul>\n<li><a href=\"#id1\" id=\"id6\" rel=\"nofollow\">example</a></li>\n<li><a href=\"#example-output\" id=\"id7\" rel=\"nofollow\">Example output</a></li>\n</ul>\n</li>\n<li><a href=\"#clarification-of-parameters\" id=\"id8\" rel=\"nofollow\">Clarification of parameters</a><ul>\n<li><a href=\"#name\" id=\"id9\" rel=\"nofollow\">name</a></li>\n<li><a href=\"#proecess-key\" id=\"id10\" rel=\"nofollow\">proecess_key</a></li>\n<li><a href=\"#file-prefix-and-file-suffix\" id=\"id11\" rel=\"nofollow\">file_prefix and file_suffix</a></li>\n<li><a href=\"#file-mode\" id=\"id12\" rel=\"nofollow\">file_mode</a></li>\n<li><a href=\"#consolidate\" id=\"id13\" rel=\"nofollow\">consolidate</a></li>\n<li><a href=\"#kwargs\" id=\"id14\" rel=\"nofollow\">kwargs</a></li>\n</ul>\n</li>\n<li><a href=\"#change-history\" id=\"id15\" rel=\"nofollow\">Change History</a><ul>\n<li><a href=\"#v0-9\" id=\"id16\" rel=\"nofollow\">v0.9</a></li>\n<li><a href=\"#v1-0\" id=\"id17\" rel=\"nofollow\">v1.0</a></li>\n<li><a href=\"#v1-1\" id=\"id18\" rel=\"nofollow\">v1.1</a></li>\n<li><a href=\"#v2-0\" id=\"id19\" rel=\"nofollow\">v2.0</a></li>\n</ul>\n</li>\n<li><a href=\"#next-steps\" id=\"id20\" rel=\"nofollow\">Next Steps</a></li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Overview</a></h2>\n<blockquote>\n<p><strong>acrilog</strong> is a python library encapsulating multiprocessing logging into practical use.</p>\n<p><strong>acrilog</strong> started as Acrisel\u2019s internal utility for programmers.</p>\n<dl>\n<dt>It included:</dt>\n<dd><ol>\n<li>Time and size rotating handler.</li>\n<li>Multiprocessing logging queue server</li>\n</ol>\n</dd>\n</dl>\n<p>The library makes it easier to add logging in a multiprocessing environment where processes are split among multiple Python source codes.</p>\n<p>We decided to contribute this library to Python community as a token of appreciation to\nwhat this community enables us.</p>\n<p>We hope that you will find this library useful and helpful as we find it.</p>\n<p>If you have comments or insights, please don\u2019t hesitate to contact us at <a href=\"mailto:support%40acrisel.com\">support<span>@</span>acrisel<span>.</span>com</a></p>\n</blockquote>\n</div>\n<div id=\"timedsizedrotatinghandler\">\n<h2><a href=\"#id3\" rel=\"nofollow\">TimedSizedRotatingHandler</a></h2>\n<blockquote>\nUse TimedSizedRotatingHandler is combining TimedRotatingFileHandler with RotatingFileHandler.\nUsage as handler with logging is as defined in Python\u2019s logging how-to</blockquote>\n<div id=\"example\">\n<h3><a href=\"#id4\" rel=\"nofollow\">example</a></h3>\n<blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"c1\"># create logger</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'simple_example'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create console handler and set level to debug</span>\n<span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">TimedRotatingFileHandler</span><span class=\"p\">()</span>\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create formatter</span>\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(name)s</span><span class=\"s1\"> - </span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> - </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># add formatter to ch</span>\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># add ch to logger</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 'application' code</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'debug message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'info message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s1\">'warn message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'error message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'critical message'</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"mplogger-and-levelbasedformatter\">\n<h2><a href=\"#id5\" rel=\"nofollow\">MpLogger and LevelBasedFormatter</a></h2>\n<blockquote>\n<p>Multiprocessor logger using QueueListener and QueueHandler\nIt uses TimedSizedRotatingHandler as its logging handler</p>\n<p>It also uses acris provided LevelBasedFormatter which facilitate message formats\nbased on record level.  LevelBasedFormatter inherent from logging.Formatter and\ncan be used as such in customized logging handlers.</p>\n</blockquote>\n<div id=\"id1\">\n<h3><a href=\"#id6\" rel=\"nofollow\">example</a></h3>\n<h3 id=\"within-main-process\"><span class=\"section-subtitle\">Within main process</span></h3>\n<blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">acris</span> <span class=\"kn\">import</span> <span class=\"n\">MpLogger</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span> <span class=\"k\">as</span> <span class=\"nn\">mp</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">subproc</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">logger_info</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">MpLogger</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"n\">logger_info</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"acrilog.subproc\"</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep_time</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">sleep_time</span><span class=\"p\">)</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"proc [</span><span class=\"si\">%s</span><span class=\"s2\">]: </span><span class=\"si\">%s</span><span class=\"s2\">/</span><span class=\"si\">%s</span><span class=\"s2\"> - sleep </span><span class=\"si\">%4.4s</span><span class=\"s2\">sec\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getpid</span><span class=\"p\">(),</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"p\">,</span> <span class=\"n\">sleep_time</span><span class=\"p\">))</span>\n\n<span class=\"n\">level_formats</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">:</span><span class=\"s2\">\"[ </span><span class=\"si\">%(asctime)s</span><span class=\"s2\"> ][ </span><span class=\"si\">%(levelname)s</span><span class=\"s2\"> ][ </span><span class=\"si\">%(message)s</span><span class=\"s2\"> ][ </span><span class=\"si\">%(module)s</span><span class=\"s2\">.</span><span class=\"si\">%(funcName)s</span><span class=\"s2\">(</span><span class=\"si\">%(lineno)d</span><span class=\"s2\">) ]\"</span><span class=\"p\">,</span>\n                <span class=\"s1\">'default'</span><span class=\"p\">:</span>   <span class=\"s2\">\"[ </span><span class=\"si\">%(asctime)s</span><span class=\"s2\"> ][ </span><span class=\"si\">%(levelname)s</span><span class=\"s2\"> ][ </span><span class=\"si\">%(message)s</span><span class=\"s2\"> ]\"</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n\n<span class=\"n\">mplogger</span> <span class=\"o\">=</span> <span class=\"n\">MpLogger</span><span class=\"p\">(</span><span class=\"n\">logging_level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">level_formats</span><span class=\"o\">=</span><span class=\"n\">level_formats</span><span class=\"p\">,</span> <span class=\"n\">datefmt</span><span class=\"o\">=</span><span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">,%H:%M:%S.</span><span class=\"si\">%f</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"n\">mplogger</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'main_process'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">MpLogger</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"n\">mplogger</span><span class=\"o\">.</span><span class=\"n\">logger_info</span><span class=\"p\">())</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"starting sub processes\"</span><span class=\"p\">)</span>\n<span class=\"n\">procs</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">limit</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]:</span>\n    <span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Process</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">subproc</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"p\">,</span> <span class=\"n\">mplogger</span><span class=\"o\">.</span><span class=\"n\">logger_info</span><span class=\"p\">(),))</span>\n    <span class=\"n\">procs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">proc</span><span class=\"p\">)</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">proc</span> <span class=\"ow\">in</span> <span class=\"n\">procs</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">proc</span><span class=\"p\">:</span>\n        <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"sub processes completed\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">mplogger</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"example-output\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Example output</a></h3>\n<blockquote>\n<pre><span class=\"p\">[</span> <span class=\"mi\">2016</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">39</span><span class=\"p\">:</span><span class=\"mf\">44.953189</span> <span class=\"p\">][</span> <span class=\"n\">DEBUG</span> <span class=\"p\">][</span> <span class=\"n\">starting</span> <span class=\"n\">sub</span> <span class=\"n\">processes</span> <span class=\"p\">][</span> <span class=\"n\">mplogger</span><span class=\"o\">.&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">45</span><span class=\"p\">)</span> <span class=\"p\">]</span>\n<span class=\"p\">[</span> <span class=\"mi\">2016</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">39</span><span class=\"p\">:</span><span class=\"mf\">45.258794</span> <span class=\"p\">][</span> <span class=\"n\">INFO</span> <span class=\"p\">][</span> <span class=\"n\">proc</span> <span class=\"p\">[</span><span class=\"mi\">932</span><span class=\"p\">]:</span> <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">sleep</span>  <span class=\"mf\">0.3</span><span class=\"n\">sec</span> <span class=\"p\">]</span>\n<span class=\"p\">[</span> <span class=\"mi\">2016</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">39</span><span class=\"p\">:</span><span class=\"mf\">45.707914</span> <span class=\"p\">][</span> <span class=\"n\">INFO</span> <span class=\"p\">][</span> <span class=\"n\">proc</span> <span class=\"p\">[</span><span class=\"mi\">931</span><span class=\"p\">]:</span> <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">sleep</span> <span class=\"mf\">0.75</span><span class=\"n\">sec</span> <span class=\"p\">]</span>\n<span class=\"p\">[</span> <span class=\"mi\">2016</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">39</span><span class=\"p\">:</span><span class=\"mf\">45.710487</span> <span class=\"p\">][</span> <span class=\"n\">DEBUG</span> <span class=\"p\">][</span> <span class=\"n\">sub</span> <span class=\"n\">processes</span> <span class=\"n\">completed</span> <span class=\"p\">][</span> <span class=\"n\">mplogger</span><span class=\"o\">.&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">56</span><span class=\"p\">)</span> <span class=\"p\">]</span>\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"clarification-of-parameters\">\n<h2><a href=\"#id8\" rel=\"nofollow\">Clarification of parameters</a></h2>\n<div id=\"name\">\n<h3><a href=\"#id9\" rel=\"nofollow\">name</a></h3>\n<p><strong>name</strong> identifies the base name for logger. Note the this parameter is available in both MpLogger init method and in its start method.</p>\n<p>MpLogger init\u2019s <strong>name</strong> argument is used for consolidated logger when <strong>consolidate</strong> is set.  It is also used for private logger of the main process, if one not provided when calling <em>start()</em> method.</p>\n</div>\n<div id=\"proecess-key\">\n<h3><a href=\"#id10\" rel=\"nofollow\">proecess_key</a></h3>\n<p><strong>process_key</strong> defines one or more logger record field that would be part of the file name of the log.  In case it is used, logger will have a file per records\u2019 process key.  This will be in addition for a consolidated log, if <strong>consolidate</strong> is set.</p>\n<p>By default, MpLogger uses <strong>name</strong> as the process key.  If something else is provided, e.g., <strong>processName</strong>, it will be concatenated to <strong>name</strong> as postfix.</p>\n</div>\n<div id=\"file-prefix-and-file-suffix\">\n<h3><a href=\"#id11\" rel=\"nofollow\">file_prefix and file_suffix</a></h3>\n<p>Allows to distinguish among sets of logs of different runs by setting one (or both) of <strong>file_prefix</strong> and <strong>file_suffix</strong>.  Usually, the use of PID and granular datetime as prefix or suffix would create unique set of logs.</p>\n</div>\n<div id=\"file-mode\">\n<h3><a href=\"#id12\" rel=\"nofollow\">file_mode</a></h3>\n<p><strong>file_mode</strong> let program define how logs will be opened.  In default, logs are open in append mode.  Hense, history is collected and file a rolled overnight and by size.</p>\n</div>\n<div id=\"consolidate\">\n<h3><a href=\"#id13\" rel=\"nofollow\">consolidate</a></h3>\n<p><strong>consolidate</strong>, when set, will create consolidated log from all processing logs.\nIf <strong>consolidated</strong> is set and <em>start()</em> is called without <strong>name</strong>, consolidation will be done into the main process.</p>\n</div>\n<div id=\"kwargs\">\n<h3><a href=\"#id14\" rel=\"nofollow\">kwargs</a></h3>\n<p><strong>kwargs</strong> are named arguments that will passed to FileHandler.  This include:</p>\n<blockquote>\n<pre>file_mode='a', for RotatingFileHandler\nmaxBytes=0, for RotatingFileHandler\nbackupCount=0, for RotatingFileHandler and TimedRotatingFileHandler\nencoding='ascii', for RotatingFileHandler and TimedRotatingFileHandler\ndelay=False, for TimedRotatingFileHandler\nwhen='h', for TimedRotatingFileHandler\ninterval=1, TimedRotatingFileHandler\nutc=False, TimedRotatingFileHandler\natTime=None, for TimedRotatingFileHandler\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"change-history\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Change History</a></h2>\n<div id=\"v0-9\">\n<h3><a href=\"#id16\" rel=\"nofollow\">v0.9</a></h3>\n<blockquote>\n<ol>\n<li>added ability to pass logger_info to subprocess,</li>\n<li>exposed encoding parameter</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"v1-0\">\n<h3><a href=\"#id17\" rel=\"nofollow\">v1.0</a></h3>\n<blockquote>\n<ol>\n<li>replaced <strong>force_global</strong> with <strong>consolidate</strong> to genrerate consolidated log</li>\n<li>add <strong>name</strong> argument to MpLogger.start().  This will return logger with that name for the main process.</li>\n<li>MpLogger.__init__() <strong>name</strong> argument will be used for consolidated log.</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"v1-1\">\n<h3><a href=\"#id18\" rel=\"nofollow\">v1.1</a></h3>\n<blockquote>\n<ol>\n<li>add <strong>file_prefix</strong> and <strong>file_suffix</strong> as MpLogger parameters.</li>\n<li>fix bug when logdir is None.</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"v2-0\">\n<h3><a href=\"#id19\" rel=\"nofollow\">v2.0</a></h3>\n<blockquote>\n<ol>\n<li>added NwLogger starting a server logger with NwLoggerClientHandler for remote processes.</li>\n</ol>\n</blockquote>\n</div>\n</div>\n<div id=\"next-steps\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Next Steps</a></h2>\n<blockquote>\n<ol>\n<li>Cluster support using TCP/IP</li>\n<li>Logging monitor and alert</li>\n</ol>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 3507879, "releases": {"0.8.4": [{"comment_text": "", "digests": {"md5": "6e49872fec777ce9c522f86f33bf30bc", "sha256": "c32b66838bc5cd1e14d9e6216d8984e7e202e2339662806ac13f1351172b35c5"}, "downloads": -1, "filename": "acrilog-0.8.4.tar.gz", "has_sig": false, "md5_digest": "6e49872fec777ce9c522f86f33bf30bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31834, "upload_time": "2017-04-28T17:57:37", "upload_time_iso_8601": "2017-04-28T17:57:37.842053Z", "url": "https://files.pythonhosted.org/packages/9b/10/7a711d6eaa00011cca4ecc00353b5b6dec059b8882096a764878ef9ff7c6/acrilog-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "88d87476c6aa9c48319d0e8427869223", "sha256": "08456c9f56c5acaab20a03cf7317357b11e4266c5a894a1b7c73a2de8c82c130"}, "downloads": -1, "filename": "acrilog-0.8.5.tar.gz", "has_sig": false, "md5_digest": "88d87476c6aa9c48319d0e8427869223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9208, "upload_time": "2017-05-24T14:02:04", "upload_time_iso_8601": "2017-05-24T14:02:04.770457Z", "url": "https://files.pythonhosted.org/packages/a8/36/8be4f72828565f65cc4085d732b1edf86e72f8879c31bafae8de610d46db/acrilog-0.8.5.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "7ae5c770082b28fe51dcd371d1e88298", "sha256": "ab377bea8c1ae1287a6058e37a4f8a6fea14637d4f2a2b0af1345cac8c21b0d5"}, "downloads": -1, "filename": "acrilog-0.8.6.tar.gz", "has_sig": false, "md5_digest": "7ae5c770082b28fe51dcd371d1e88298", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9206, "upload_time": "2017-05-26T19:41:13", "upload_time_iso_8601": "2017-05-26T19:41:13.977571Z", "url": "https://files.pythonhosted.org/packages/8d/98/547c85bbdb1a50019b55b089894ba0bd455b5c94e4df5202b56c379736d0/acrilog-0.8.6.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "08b10eaf9ac029b7f9c54cb8f4fb9a60", "sha256": "daa2896e215d23097c78702a7406df59d24049b89676b91e146f2c0d2ead30ed"}, "downloads": -1, "filename": "acrilog-0.9.0.tar.gz", "has_sig": false, "md5_digest": "08b10eaf9ac029b7f9c54cb8f4fb9a60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9697, "upload_time": "2017-05-26T23:04:29", "upload_time_iso_8601": "2017-05-26T23:04:29.891746Z", "url": "https://files.pythonhosted.org/packages/f3/fd/2d370f9f2edac9dc351820acdf523dc93cd84c8996054fe9f1249de6572c/acrilog-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "96ecb412463000978add03340a86123e", "sha256": "6b0c9ce82387f3199155dd3115e1bec07839bd2626eca9f23910d62353a0c494"}, "downloads": -1, "filename": "acrilog-0.9.1.tar.gz", "has_sig": false, "md5_digest": "96ecb412463000978add03340a86123e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9718, "upload_time": "2017-05-28T14:10:30", "upload_time_iso_8601": "2017-05-28T14:10:30.836569Z", "url": "https://files.pythonhosted.org/packages/c7/55/3f351519be74cfb6ceda3a4b4a758192c6259a01922233bfdc0121bd09fc/acrilog-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "e7a79c26432a68b7ebf640a4fa7b364d", "sha256": "8ea1cd4121e12bfa1c42e4042cdc02dc846eb5de8b80bdad42378002fcea9952"}, "downloads": -1, "filename": "acrilog-0.9.2.tar.gz", "has_sig": true, "md5_digest": "e7a79c26432a68b7ebf640a4fa7b364d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10272, "upload_time": "2017-07-04T16:38:20", "upload_time_iso_8601": "2017-07-04T16:38:20.100404Z", "url": "https://files.pythonhosted.org/packages/2b/71/887dfa75f11f72ec1090ef4e86e46680218bb3a75314ad80d53328ac05ac/acrilog-0.9.2.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "aa59bc2e78564d10a0e63cd88cf6dfe5", "sha256": "fb8ae18913db86722f435ce51a2ec76cdca9803696cefa96951d551cdd892241"}, "downloads": -1, "filename": "acrilog-1.0.2.tar.gz", "has_sig": true, "md5_digest": "aa59bc2e78564d10a0e63cd88cf6dfe5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11758, "upload_time": "2017-07-05T13:43:20", "upload_time_iso_8601": "2017-07-05T13:43:20.825974Z", "url": "https://files.pythonhosted.org/packages/cb/b3/06e2cba5f0f8263e4ee02c94ad10e2cf9f7fabac342af26aa70ae744eb9a/acrilog-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5ce4024bc8d43e7ff2e718fb4fa2ba43", "sha256": "fe699e658fda9fb352f791882e52ffc88d9601c45a9c3f68181c13a06477f592"}, "downloads": -1, "filename": "acrilog-1.0.3.tar.gz", "has_sig": true, "md5_digest": "5ce4024bc8d43e7ff2e718fb4fa2ba43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11773, "upload_time": "2017-07-05T13:53:30", "upload_time_iso_8601": "2017-07-05T13:53:30.649271Z", "url": "https://files.pythonhosted.org/packages/67/ea/0fe4624de1565d22b729aa914b8bffe23fe604c5a0ba81cf8898bc261746/acrilog-1.0.3.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "f132e8d5f2a4c06b37678e33a13032cd", "sha256": "62c40851a34b2f414a0bd4ad12360362fd6c76b9d711251f1f8e2cfe9869962a"}, "downloads": -1, "filename": "acrilog-1.1.3.tar.gz", "has_sig": true, "md5_digest": "f132e8d5f2a4c06b37678e33a13032cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12037, "upload_time": "2017-07-13T19:12:07", "upload_time_iso_8601": "2017-07-13T19:12:07.672896Z", "url": "https://files.pythonhosted.org/packages/79/4d/5d6401b034fbbf2d384ed29c16f56add4c22ad9fa169b039f9c9f81cc5cb/acrilog-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "d4d6a33b8c72f70b13e87a053d8cdd98", "sha256": "82aa7d025532d40734f2fa962ee79ed2148e601892931cd6a50b53f687218407"}, "downloads": -1, "filename": "acrilog-1.1.4.tar.gz", "has_sig": true, "md5_digest": "d4d6a33b8c72f70b13e87a053d8cdd98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12090, "upload_time": "2017-09-02T22:20:42", "upload_time_iso_8601": "2017-09-02T22:20:42.250976Z", "url": "https://files.pythonhosted.org/packages/74/c2/6806750b5693151dd7976b73d69af7a6bf0aff839b73b1323ead57dc6600/acrilog-1.1.4.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "9a17d08f1c2b62a16dce894e0324f093", "sha256": "ed2fba183d962b846cebc76719d0245f2325495cb844a81326b36018dff85b6a"}, "downloads": -1, "filename": "acrilog-2.0.1.tar.gz", "has_sig": true, "md5_digest": "9a17d08f1c2b62a16dce894e0324f093", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10294, "upload_time": "2017-12-24T14:55:08", "upload_time_iso_8601": "2017-12-24T14:55:08.112858Z", "url": "https://files.pythonhosted.org/packages/05/4a/9e7c9bc36ad567cdd171588ac7c371e5ca25d7fe634c76e5b534d16f25b3/acrilog-2.0.1.tar.gz", "yanked": false}], "2.0.12": [{"comment_text": "", "digests": {"md5": "d34057f13ab90e5a69aa7bd40415b7bf", "sha256": "7a244c3e0c5d36e51a4053d58ef37e9bd0a9ba292b43c5cd449c341659beb4b0"}, "downloads": -1, "filename": "acrilog-2.0.12.tar.gz", "has_sig": true, "md5_digest": "d34057f13ab90e5a69aa7bd40415b7bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21653, "upload_time": "2018-01-04T14:51:00", "upload_time_iso_8601": "2018-01-04T14:51:00.974669Z", "url": "https://files.pythonhosted.org/packages/45/de/5dee1516d35705393393c683d5712ae193f860c1bc3b88a8b348d3d16bce/acrilog-2.0.12.tar.gz", "yanked": false}], "2.0.13": [{"comment_text": "", "digests": {"md5": "a7302b6310ec2e1bbbbf5ac1cd135c27", "sha256": "0c12d5d77332fcfa1261b58b2e2955b2d54c32e2bbb3ccf548c56f24c4524173"}, "downloads": -1, "filename": "acrilog-2.0.13.tar.gz", "has_sig": true, "md5_digest": "a7302b6310ec2e1bbbbf5ac1cd135c27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21487, "upload_time": "2018-01-21T00:27:45", "upload_time_iso_8601": "2018-01-21T00:27:45.409905Z", "url": "https://files.pythonhosted.org/packages/29/f2/0bbf77122e186e7aad8ec3abdb0d9dcef19d6136481238c796bba03b2c0c/acrilog-2.0.13.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "0dd8b305b0a15f9f8c6f4355ab917ea6", "sha256": "cb7f936991e367f88fbc46faa54053d95f574d4343848762b4be7a8226d67bce"}, "downloads": -1, "filename": "acrilog-2.0.2.tar.gz", "has_sig": true, "md5_digest": "0dd8b305b0a15f9f8c6f4355ab917ea6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10361, "upload_time": "2018-01-01T17:59:13", "upload_time_iso_8601": "2018-01-01T17:59:13.823854Z", "url": "https://files.pythonhosted.org/packages/60/b4/0846ee3a6a2dd014bcb279a508394622e7041b1694a9f02e23595dd8d589/acrilog-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "89b12aee028cc94984f78a059c07aa3b", "sha256": "4d9800b9d63af8f4777744daeb4aa83f18273aa3806efe96b2bec6cb460b4956"}, "downloads": -1, "filename": "acrilog-2.0.3.tar.gz", "has_sig": true, "md5_digest": "89b12aee028cc94984f78a059c07aa3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11142, "upload_time": "2018-01-02T02:02:23", "upload_time_iso_8601": "2018-01-02T02:02:23.633171Z", "url": "https://files.pythonhosted.org/packages/04/62/775f4942215dcf82558f9ee04ca29f44770c0bfd620bdafefe075f5e62f6/acrilog-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "57fda094bd1b4fa456bc6e0e3a807c38", "sha256": "c0157d4fed2a7afb5e1e6f2ffabab9db1ca338d60a445fbd82d7aee7e2c47f36"}, "downloads": -1, "filename": "acrilog-2.0.4.tar.gz", "has_sig": true, "md5_digest": "57fda094bd1b4fa456bc6e0e3a807c38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11140, "upload_time": "2018-01-02T02:20:42", "upload_time_iso_8601": "2018-01-02T02:20:42.769746Z", "url": "https://files.pythonhosted.org/packages/74/68/c96be02be75b565b477ebdbded9cf10fb0013522a3e627ad6aceaf68e466/acrilog-2.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7302b6310ec2e1bbbbf5ac1cd135c27", "sha256": "0c12d5d77332fcfa1261b58b2e2955b2d54c32e2bbb3ccf548c56f24c4524173"}, "downloads": -1, "filename": "acrilog-2.0.13.tar.gz", "has_sig": true, "md5_digest": "a7302b6310ec2e1bbbbf5ac1cd135c27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21487, "upload_time": "2018-01-21T00:27:45", "upload_time_iso_8601": "2018-01-21T00:27:45.409905Z", "url": "https://files.pythonhosted.org/packages/29/f2/0bbf77122e186e7aad8ec3abdb0d9dcef19d6136481238c796bba03b2c0c/acrilog-2.0.13.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:27 2020"}