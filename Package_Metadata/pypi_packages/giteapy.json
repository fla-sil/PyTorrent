{"info": {"author": "", "author_email": "rh@dblue.ai", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Gitea Python SDK\nThis documentation describes the Gitea API.\n\nThis Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:\n\n- API version: 1.1.1\n- Package version: 1.0.0\n- Build package: io.swagger.codegen.languages.PythonClientCodegen\n\n## Requirements.\n\nPython 2.7 and 3.4+\n\n## Installation & Usage\n### pip install\n\nIf the python package is hosted on Github, you can install directly from Github\n\n```sh\npip install git+https://github.com/dblueai/giteapy.git\n```\n(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/dblueai/giteapy.git`)\n\nThen import the package:\n```python\nimport giteapy\n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\nThen import the package:\n```python\nimport giteapy\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\nfrom __future__ import print_function\nimport time\nimport giteapy\nfrom giteapy.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: AccessToken\nconfiguration = giteapy.Configuration()\nconfiguration.api_key['access_token'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['access_token'] = 'Bearer'\n# Configure API key authorization: AuthorizationHeaderToken\nconfiguration = giteapy.Configuration()\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Authorization'] = 'Bearer'\n# Configure HTTP basic authorization: BasicAuth\nconfiguration = giteapy.Configuration()\nconfiguration.username = 'YOUR_USERNAME'\nconfiguration.password = 'YOUR_PASSWORD'\n# Configure API key authorization: SudoHeader\nconfiguration = giteapy.Configuration()\nconfiguration.api_key['Sudo'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Sudo'] = 'Bearer'\n# Configure API key authorization: SudoParam\nconfiguration = giteapy.Configuration()\nconfiguration.api_key['sudo'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['sudo'] = 'Bearer'\n# Configure API key authorization: Token\nconfiguration = giteapy.Configuration()\nconfiguration.api_key['token'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['token'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = giteapy.AdminApi(giteapy.ApiClient(configuration))\nusername = 'username_example' # str | username of the user that will own the created organization\norganization = giteapy.CreateOrgOption() # CreateOrgOption |\n\ntry:\n    # Create an organization\n    api_response = api_instance.admin_create_org(username, organization)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AdminApi->admin_create_org: %s\\n\" % e)\n\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *http://localhost:3000/api/v1*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*AdminApi* | [**admin_create_org**](docs/AdminApi.md#admin_create_org) | **POST** /admin/users/{username}/orgs | Create an organization\n*AdminApi* | [**admin_create_public_key**](docs/AdminApi.md#admin_create_public_key) | **POST** /admin/users/{username}/keys | Add a public key on behalf of a user\n*AdminApi* | [**admin_create_repo**](docs/AdminApi.md#admin_create_repo) | **POST** /admin/users/{username}/repos | Create a repository on behalf a user\n*AdminApi* | [**admin_create_user**](docs/AdminApi.md#admin_create_user) | **POST** /admin/users | Create a user\n*AdminApi* | [**admin_delete_user**](docs/AdminApi.md#admin_delete_user) | **DELETE** /admin/users/{username} | Delete a user\n*AdminApi* | [**admin_delete_user_public_key**](docs/AdminApi.md#admin_delete_user_public_key) | **DELETE** /admin/users/{username}/keys/{id} | Delete a user&#39;s public key\n*AdminApi* | [**admin_edit_user**](docs/AdminApi.md#admin_edit_user) | **PATCH** /admin/users/{username} | Edit an existing user\n*AdminApi* | [**admin_get_all_orgs**](docs/AdminApi.md#admin_get_all_orgs) | **GET** /admin/orgs | List all organizations\n*AdminApi* | [**admin_get_all_users**](docs/AdminApi.md#admin_get_all_users) | **GET** /admin/users | List all users\n*IssueApi* | [**issue_add_label**](docs/IssueApi.md#issue_add_label) | **POST** /repos/{owner}/{repo}/issues/{index}/labels | Add a label to an issue\n*IssueApi* | [**issue_add_time**](docs/IssueApi.md#issue_add_time) | **POST** /repos/{owner}/{repo}/issues/{id}/times | Add a tracked time to a issue\n*IssueApi* | [**issue_clear_labels**](docs/IssueApi.md#issue_clear_labels) | **DELETE** /repos/{owner}/{repo}/issues/{index}/labels | Remove all labels from an issue\n*IssueApi* | [**issue_create_comment**](docs/IssueApi.md#issue_create_comment) | **POST** /repos/{owner}/{repo}/issues/{index}/comments | Add a comment to an issue\n*IssueApi* | [**issue_create_issue**](docs/IssueApi.md#issue_create_issue) | **POST** /repos/{owner}/{repo}/issues | Create an issue. If using deadline only the date will be taken into account, and time of day ignored.\n*IssueApi* | [**issue_create_label**](docs/IssueApi.md#issue_create_label) | **POST** /repos/{owner}/{repo}/labels | Create a label\n*IssueApi* | [**issue_create_milestone**](docs/IssueApi.md#issue_create_milestone) | **POST** /repos/{owner}/{repo}/milestones | Create a milestone\n*IssueApi* | [**issue_delete_comment**](docs/IssueApi.md#issue_delete_comment) | **DELETE** /repos/{owner}/{repo}/issues/comments/{id} | Delete a comment\n*IssueApi* | [**issue_delete_comment_deprecated**](docs/IssueApi.md#issue_delete_comment_deprecated) | **DELETE** /repos/{owner}/{repo}/issues/{index}/comments/{id} | Delete a comment\n*IssueApi* | [**issue_delete_label**](docs/IssueApi.md#issue_delete_label) | **DELETE** /repos/{owner}/{repo}/labels/{id} | Delete a label\n*IssueApi* | [**issue_delete_milestone**](docs/IssueApi.md#issue_delete_milestone) | **DELETE** /repos/{owner}/{repo}/milestones/{id} | Delete a milestone\n*IssueApi* | [**issue_edit_comment**](docs/IssueApi.md#issue_edit_comment) | **PATCH** /repos/{owner}/{repo}/issues/comments/{id} | Edit a comment\n*IssueApi* | [**issue_edit_comment_deprecated**](docs/IssueApi.md#issue_edit_comment_deprecated) | **PATCH** /repos/{owner}/{repo}/issues/{index}/comments/{id} | Edit a comment\n*IssueApi* | [**issue_edit_issue**](docs/IssueApi.md#issue_edit_issue) | **PATCH** /repos/{owner}/{repo}/issues/{index} | Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.\n*IssueApi* | [**issue_edit_issue_deadline**](docs/IssueApi.md#issue_edit_issue_deadline) | **POST** /repos/{owner}/{repo}/issues/{index}/deadline | Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.\n*IssueApi* | [**issue_edit_label**](docs/IssueApi.md#issue_edit_label) | **PATCH** /repos/{owner}/{repo}/labels/{id} | Update a label\n*IssueApi* | [**issue_edit_milestone**](docs/IssueApi.md#issue_edit_milestone) | **PATCH** /repos/{owner}/{repo}/milestones/{id} | Update a milestone\n*IssueApi* | [**issue_get_comments**](docs/IssueApi.md#issue_get_comments) | **GET** /repos/{owner}/{repo}/issues/{index}/comments | List all comments on an issue\n*IssueApi* | [**issue_get_issue**](docs/IssueApi.md#issue_get_issue) | **GET** /repos/{owner}/{repo}/issues/{index} | Get an issue\n*IssueApi* | [**issue_get_label**](docs/IssueApi.md#issue_get_label) | **GET** /repos/{owner}/{repo}/labels/{id} | Get a single label\n*IssueApi* | [**issue_get_labels**](docs/IssueApi.md#issue_get_labels) | **GET** /repos/{owner}/{repo}/issues/{index}/labels | Get an issue&#39;s labels\n*IssueApi* | [**issue_get_milestone**](docs/IssueApi.md#issue_get_milestone) | **GET** /repos/{owner}/{repo}/milestones/{id} | Get a milestone\n*IssueApi* | [**issue_get_milestones_list**](docs/IssueApi.md#issue_get_milestones_list) | **GET** /repos/{owner}/{repo}/milestones | Get all of a repository&#39;s opened milestones\n*IssueApi* | [**issue_get_repo_comments**](docs/IssueApi.md#issue_get_repo_comments) | **GET** /repos/{owner}/{repo}/issues/comments | List all comments in a repository\n*IssueApi* | [**issue_list_issues**](docs/IssueApi.md#issue_list_issues) | **GET** /repos/{owner}/{repo}/issues | List a repository&#39;s issues\n*IssueApi* | [**issue_list_labels**](docs/IssueApi.md#issue_list_labels) | **GET** /repos/{owner}/{repo}/labels | Get all of a repository&#39;s labels\n*IssueApi* | [**issue_remove_label**](docs/IssueApi.md#issue_remove_label) | **DELETE** /repos/{owner}/{repo}/issues/{index}/labels/{id} | Remove a label from an issue\n*IssueApi* | [**issue_replace_labels**](docs/IssueApi.md#issue_replace_labels) | **PUT** /repos/{owner}/{repo}/issues/{index}/labels | Replace an issue&#39;s labels\n*IssueApi* | [**issue_start_stop_watch**](docs/IssueApi.md#issue_start_stop_watch) | **POST** /repos/{owner}/{repo}/issues/{index}/stopwatch/start | Start stopwatch on an issue.\n*IssueApi* | [**issue_stop_watch**](docs/IssueApi.md#issue_stop_watch) | **POST** /repos/{owner}/{repo}/issues/{index}/stopwatch/stop | Stop an issue&#39;s existing stopwatch.\n*IssueApi* | [**issue_tracked_times**](docs/IssueApi.md#issue_tracked_times) | **GET** /repos/{owner}/{repo}/issues/{id}/times | List an issue&#39;s tracked times\n*MiscellaneousApi* | [**get_signing_key**](docs/MiscellaneousApi.md#get_signing_key) | **GET** /signing-key.gpg | Get default signing-key.gpg\n*MiscellaneousApi* | [**get_version**](docs/MiscellaneousApi.md#get_version) | **GET** /version | Returns the version of the Gitea application\n*MiscellaneousApi* | [**render_markdown**](docs/MiscellaneousApi.md#render_markdown) | **POST** /markdown | Render a markdown document as HTML\n*MiscellaneousApi* | [**render_markdown_raw**](docs/MiscellaneousApi.md#render_markdown_raw) | **POST** /markdown/raw | Render raw markdown as HTML\n*OrganizationApi* | [**create_org_repo**](docs/OrganizationApi.md#create_org_repo) | **POST** /org/{org}/repos | Create a repository in an organization\n*OrganizationApi* | [**org_add_team_member**](docs/OrganizationApi.md#org_add_team_member) | **PUT** /teams/{id}/members/{username} | Add a team member\n*OrganizationApi* | [**org_add_team_repository**](docs/OrganizationApi.md#org_add_team_repository) | **PUT** /teams/{id}/repos/{org}/{repo} | Add a repository to a team\n*OrganizationApi* | [**org_conceal_member**](docs/OrganizationApi.md#org_conceal_member) | **DELETE** /orgs/{org}/public_members/{username} | Conceal a user&#39;s membership\n*OrganizationApi* | [**org_create**](docs/OrganizationApi.md#org_create) | **POST** /orgs | Create an organization\n*OrganizationApi* | [**org_create_hook**](docs/OrganizationApi.md#org_create_hook) | **POST** /orgs/{org}/hooks/ | Create a hook\n*OrganizationApi* | [**org_create_team**](docs/OrganizationApi.md#org_create_team) | **POST** /orgs/{org}/teams | Create a team\n*OrganizationApi* | [**org_delete**](docs/OrganizationApi.md#org_delete) | **DELETE** /orgs/{org} | Delete an organization\n*OrganizationApi* | [**org_delete_hook**](docs/OrganizationApi.md#org_delete_hook) | **DELETE** /orgs/{org}/hooks/{id} | Delete a hook\n*OrganizationApi* | [**org_delete_member**](docs/OrganizationApi.md#org_delete_member) | **DELETE** /orgs/{org}/members/{username} | Remove a member from an organization\n*OrganizationApi* | [**org_delete_team**](docs/OrganizationApi.md#org_delete_team) | **DELETE** /teams/{id} | Delete a team\n*OrganizationApi* | [**org_edit**](docs/OrganizationApi.md#org_edit) | **PATCH** /orgs/{org} | Edit an organization\n*OrganizationApi* | [**org_edit_hook**](docs/OrganizationApi.md#org_edit_hook) | **PATCH** /orgs/{org}/hooks/{id} | Update a hook\n*OrganizationApi* | [**org_edit_team**](docs/OrganizationApi.md#org_edit_team) | **PATCH** /teams/{id} | Edit a team\n*OrganizationApi* | [**org_get**](docs/OrganizationApi.md#org_get) | **GET** /orgs/{org} | Get an organization\n*OrganizationApi* | [**org_get_hook**](docs/OrganizationApi.md#org_get_hook) | **GET** /orgs/{org}/hooks/{id} | Get a hook\n*OrganizationApi* | [**org_get_team**](docs/OrganizationApi.md#org_get_team) | **GET** /teams/{id} | Get a team\n*OrganizationApi* | [**org_is_member**](docs/OrganizationApi.md#org_is_member) | **GET** /orgs/{org}/members/{username} | Check if a user is a member of an organization\n*OrganizationApi* | [**org_is_public_member**](docs/OrganizationApi.md#org_is_public_member) | **GET** /orgs/{org}/public_members/{username} | Check if a user is a public member of an organization\n*OrganizationApi* | [**org_list_current_user_orgs**](docs/OrganizationApi.md#org_list_current_user_orgs) | **GET** /user/orgs | List the current user&#39;s organizations\n*OrganizationApi* | [**org_list_hooks**](docs/OrganizationApi.md#org_list_hooks) | **GET** /orgs/{org}/hooks | List an organization&#39;s webhooks\n*OrganizationApi* | [**org_list_members**](docs/OrganizationApi.md#org_list_members) | **GET** /orgs/{org}/members | List an organization&#39;s members\n*OrganizationApi* | [**org_list_public_members**](docs/OrganizationApi.md#org_list_public_members) | **GET** /orgs/{org}/public_members | List an organization&#39;s public members\n*OrganizationApi* | [**org_list_repos**](docs/OrganizationApi.md#org_list_repos) | **GET** /orgs/{org}/repos | List an organization&#39;s repos\n*OrganizationApi* | [**org_list_team_member**](docs/OrganizationApi.md#org_list_team_member) | **GET** /teams/{id}/members/{username} | List a particular member of team\n*OrganizationApi* | [**org_list_team_members**](docs/OrganizationApi.md#org_list_team_members) | **GET** /teams/{id}/members | List a team&#39;s members\n*OrganizationApi* | [**org_list_team_repos**](docs/OrganizationApi.md#org_list_team_repos) | **GET** /teams/{id}/repos | List a team&#39;s repos\n*OrganizationApi* | [**org_list_teams**](docs/OrganizationApi.md#org_list_teams) | **GET** /orgs/{org}/teams | List an organization&#39;s teams\n*OrganizationApi* | [**org_list_user_orgs**](docs/OrganizationApi.md#org_list_user_orgs) | **GET** /users/{username}/orgs | List a user&#39;s organizations\n*OrganizationApi* | [**org_publicize_member**](docs/OrganizationApi.md#org_publicize_member) | **PUT** /orgs/{org}/public_members/{username} | Publicize a user&#39;s membership\n*OrganizationApi* | [**org_remove_team_member**](docs/OrganizationApi.md#org_remove_team_member) | **DELETE** /teams/{id}/members/{username} | Remove a team member\n*OrganizationApi* | [**org_remove_team_repository**](docs/OrganizationApi.md#org_remove_team_repository) | **DELETE** /teams/{id}/repos/{org}/{repo} | Remove a repository from a team\n*OrganizationApi* | [**team_search**](docs/OrganizationApi.md#team_search) | **GET** /orgs/{org}/teams/search | Search for teams within an organization\n*RepositoryApi* | [**create_current_user_repo**](docs/RepositoryApi.md#create_current_user_repo) | **POST** /user/repos | Create a repository\n*RepositoryApi* | [**create_fork**](docs/RepositoryApi.md#create_fork) | **POST** /repos/{owner}/{repo}/forks | Fork a repository\n*RepositoryApi* | [**get_blob**](docs/RepositoryApi.md#get_blob) | **GET** /repos/{owner}/{repo}/git/blobs/{sha} | Gets the blob of a repository.\n*RepositoryApi* | [**get_tag**](docs/RepositoryApi.md#get_tag) | **GET** /repos/{owner}/{repo}/git/tags/{sha} | Gets the tag object of an annotated tag (not lightweight tags)\n*RepositoryApi* | [**get_tree**](docs/RepositoryApi.md#get_tree) | **GET** /repos/{owner}/{repo}/git/trees/{sha} | Gets the tree of a repository.\n*RepositoryApi* | [**list_forks**](docs/RepositoryApi.md#list_forks) | **GET** /repos/{owner}/{repo}/forks | List a repository&#39;s forks\n*RepositoryApi* | [**repo_add_collaborator**](docs/RepositoryApi.md#repo_add_collaborator) | **PUT** /repos/{owner}/{repo}/collaborators/{collaborator} | Add a collaborator to a repository\n*RepositoryApi* | [**repo_add_topc**](docs/RepositoryApi.md#repo_add_topc) | **PUT** /repos/{owner}/{repo}/topics/{topic} | Add a topic to a repository\n*RepositoryApi* | [**repo_check_collaborator**](docs/RepositoryApi.md#repo_check_collaborator) | **GET** /repos/{owner}/{repo}/collaborators/{collaborator} | Check if a user is a collaborator of a repository\n*RepositoryApi* | [**repo_create_file**](docs/RepositoryApi.md#repo_create_file) | **POST** /repos/{owner}/{repo}/contents/{filepath} | Create a file in a repository\n*RepositoryApi* | [**repo_create_hook**](docs/RepositoryApi.md#repo_create_hook) | **POST** /repos/{owner}/{repo}/hooks | Create a hook\n*RepositoryApi* | [**repo_create_key**](docs/RepositoryApi.md#repo_create_key) | **POST** /repos/{owner}/{repo}/keys | Add a key to a repository\n*RepositoryApi* | [**repo_create_pull_request**](docs/RepositoryApi.md#repo_create_pull_request) | **POST** /repos/{owner}/{repo}/pulls | Create a pull request\n*RepositoryApi* | [**repo_create_release**](docs/RepositoryApi.md#repo_create_release) | **POST** /repos/{owner}/{repo}/releases | Create a release\n*RepositoryApi* | [**repo_create_release_attachment**](docs/RepositoryApi.md#repo_create_release_attachment) | **POST** /repos/{owner}/{repo}/releases/{id}/assets | Create a release attachment\n*RepositoryApi* | [**repo_create_status**](docs/RepositoryApi.md#repo_create_status) | **POST** /repos/{owner}/{repo}/statuses/{sha} | Create a commit status\n*RepositoryApi* | [**repo_delete**](docs/RepositoryApi.md#repo_delete) | **DELETE** /repos/{owner}/{repo} | Delete a repository\n*RepositoryApi* | [**repo_delete_collaborator**](docs/RepositoryApi.md#repo_delete_collaborator) | **DELETE** /repos/{owner}/{repo}/collaborators/{collaborator} | Delete a collaborator from a repository\n*RepositoryApi* | [**repo_delete_file**](docs/RepositoryApi.md#repo_delete_file) | **DELETE** /repos/{owner}/{repo}/contents/{filepath} | Delete a file in a repository\n*RepositoryApi* | [**repo_delete_git_hook**](docs/RepositoryApi.md#repo_delete_git_hook) | **DELETE** /repos/{owner}/{repo}/hooks/git/{id} | Delete a Git hook in a repository\n*RepositoryApi* | [**repo_delete_hook**](docs/RepositoryApi.md#repo_delete_hook) | **DELETE** /repos/{owner}/{repo}/hooks/{id} | Delete a hook in a repository\n*RepositoryApi* | [**repo_delete_key**](docs/RepositoryApi.md#repo_delete_key) | **DELETE** /repos/{owner}/{repo}/keys/{id} | Delete a key from a repository\n*RepositoryApi* | [**repo_delete_release**](docs/RepositoryApi.md#repo_delete_release) | **DELETE** /repos/{owner}/{repo}/releases/{id} | Delete a release\n*RepositoryApi* | [**repo_delete_release_attachment**](docs/RepositoryApi.md#repo_delete_release_attachment) | **DELETE** /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id} | Delete a release attachment\n*RepositoryApi* | [**repo_delete_topic**](docs/RepositoryApi.md#repo_delete_topic) | **DELETE** /repos/{owner}/{repo}/topics/{topic} | Delete a topic from a repository\n*RepositoryApi* | [**repo_edit**](docs/RepositoryApi.md#repo_edit) | **PATCH** /repos/{owner}/{repo} | Edit a repository&#39;s properties. Only fields that are set will be changed.\n*RepositoryApi* | [**repo_edit_git_hook**](docs/RepositoryApi.md#repo_edit_git_hook) | **PATCH** /repos/{owner}/{repo}/hooks/git/{id} | Edit a Git hook in a repository\n*RepositoryApi* | [**repo_edit_hook**](docs/RepositoryApi.md#repo_edit_hook) | **PATCH** /repos/{owner}/{repo}/hooks/{id} | Edit a hook in a repository\n*RepositoryApi* | [**repo_edit_pull_request**](docs/RepositoryApi.md#repo_edit_pull_request) | **PATCH** /repos/{owner}/{repo}/pulls/{index} | Update a pull request\n*RepositoryApi* | [**repo_edit_release**](docs/RepositoryApi.md#repo_edit_release) | **PATCH** /repos/{owner}/{repo}/releases/{id} | Update a release\n*RepositoryApi* | [**repo_edit_release_attachment**](docs/RepositoryApi.md#repo_edit_release_attachment) | **PATCH** /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id} | Edit a release attachment\n*RepositoryApi* | [**repo_get**](docs/RepositoryApi.md#repo_get) | **GET** /repos/{owner}/{repo} | Get a repository\n*RepositoryApi* | [**repo_get_all_commits**](docs/RepositoryApi.md#repo_get_all_commits) | **GET** /repos/{owner}/{repo}/commits | Get a list of all commits from a repository\n*RepositoryApi* | [**repo_get_archive**](docs/RepositoryApi.md#repo_get_archive) | **GET** /repos/{owner}/{repo}/archive/{archive} | Get an archive of a repository\n*RepositoryApi* | [**repo_get_branch**](docs/RepositoryApi.md#repo_get_branch) | **GET** /repos/{owner}/{repo}/branches/{branch} | Retrieve a specific branch from a repository\n*RepositoryApi* | [**repo_get_by_id**](docs/RepositoryApi.md#repo_get_by_id) | **GET** /repositories/{id} | Get a repository by id\n*RepositoryApi* | [**repo_get_combined_status_by_ref**](docs/RepositoryApi.md#repo_get_combined_status_by_ref) | **GET** /repos/{owner}/{repo}/commits/{ref}/statuses | Get a commit&#39;s combined status, by branch/tag/commit reference\n*RepositoryApi* | [**repo_get_contents**](docs/RepositoryApi.md#repo_get_contents) | **GET** /repos/{owner}/{repo}/contents/{filepath} | Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir\n*RepositoryApi* | [**repo_get_contents_list**](docs/RepositoryApi.md#repo_get_contents_list) | **GET** /repos/{owner}/{repo}/contents | Gets the metadata of all the entries of the root dir\n*RepositoryApi* | [**repo_get_editor_config**](docs/RepositoryApi.md#repo_get_editor_config) | **GET** /repos/{owner}/{repo}/editorconfig/{filepath} | Get the EditorConfig definitions of a file in a repository\n*RepositoryApi* | [**repo_get_git_hook**](docs/RepositoryApi.md#repo_get_git_hook) | **GET** /repos/{owner}/{repo}/hooks/git/{id} | Get a Git hook\n*RepositoryApi* | [**repo_get_hook**](docs/RepositoryApi.md#repo_get_hook) | **GET** /repos/{owner}/{repo}/hooks/{id} | Get a hook\n*RepositoryApi* | [**repo_get_key**](docs/RepositoryApi.md#repo_get_key) | **GET** /repos/{owner}/{repo}/keys/{id} | Get a repository&#39;s key by id\n*RepositoryApi* | [**repo_get_pull_request**](docs/RepositoryApi.md#repo_get_pull_request) | **GET** /repos/{owner}/{repo}/pulls/{index} | Get a pull request\n*RepositoryApi* | [**repo_get_raw_file**](docs/RepositoryApi.md#repo_get_raw_file) | **GET** /repos/{owner}/{repo}/raw/{filepath} | Get a file from a repository\n*RepositoryApi* | [**repo_get_release**](docs/RepositoryApi.md#repo_get_release) | **GET** /repos/{owner}/{repo}/releases/{id} | Get a release\n*RepositoryApi* | [**repo_get_release_attachment**](docs/RepositoryApi.md#repo_get_release_attachment) | **GET** /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id} | Get a release attachment\n*RepositoryApi* | [**repo_get_single_commit**](docs/RepositoryApi.md#repo_get_single_commit) | **GET** /repos/{owner}/{repo}/git/commits/{sha} | Get a single commit from a repository\n*RepositoryApi* | [**repo_list_all_git_refs**](docs/RepositoryApi.md#repo_list_all_git_refs) | **GET** /repos/{owner}/{repo}/git/refs | Get specified ref or filtered repository&#39;s refs\n*RepositoryApi* | [**repo_list_branches**](docs/RepositoryApi.md#repo_list_branches) | **GET** /repos/{owner}/{repo}/branches | List a repository&#39;s branches\n*RepositoryApi* | [**repo_list_collaborators**](docs/RepositoryApi.md#repo_list_collaborators) | **GET** /repos/{owner}/{repo}/collaborators | List a repository&#39;s collaborators\n*RepositoryApi* | [**repo_list_git_hooks**](docs/RepositoryApi.md#repo_list_git_hooks) | **GET** /repos/{owner}/{repo}/hooks/git | List the Git hooks in a repository\n*RepositoryApi* | [**repo_list_git_refs**](docs/RepositoryApi.md#repo_list_git_refs) | **GET** /repos/{owner}/{repo}/git/refs/{ref} | Get specified ref or filtered repository&#39;s refs\n*RepositoryApi* | [**repo_list_hooks**](docs/RepositoryApi.md#repo_list_hooks) | **GET** /repos/{owner}/{repo}/hooks | List the hooks in a repository\n*RepositoryApi* | [**repo_list_keys**](docs/RepositoryApi.md#repo_list_keys) | **GET** /repos/{owner}/{repo}/keys | List a repository&#39;s keys\n*RepositoryApi* | [**repo_list_pull_requests**](docs/RepositoryApi.md#repo_list_pull_requests) | **GET** /repos/{owner}/{repo}/pulls | List a repo&#39;s pull requests\n*RepositoryApi* | [**repo_list_release_attachments**](docs/RepositoryApi.md#repo_list_release_attachments) | **GET** /repos/{owner}/{repo}/releases/{id}/assets | List release&#39;s attachments\n*RepositoryApi* | [**repo_list_releases**](docs/RepositoryApi.md#repo_list_releases) | **GET** /repos/{owner}/{repo}/releases | List a repo&#39;s releases\n*RepositoryApi* | [**repo_list_stargazers**](docs/RepositoryApi.md#repo_list_stargazers) | **GET** /repos/{owner}/{repo}/stargazers | List a repo&#39;s stargazers\n*RepositoryApi* | [**repo_list_statuses**](docs/RepositoryApi.md#repo_list_statuses) | **GET** /repos/{owner}/{repo}/statuses/{sha} | Get a commit&#39;s statuses\n*RepositoryApi* | [**repo_list_subscribers**](docs/RepositoryApi.md#repo_list_subscribers) | **GET** /repos/{owner}/{repo}/subscribers | List a repo&#39;s watchers\n*RepositoryApi* | [**repo_list_tags**](docs/RepositoryApi.md#repo_list_tags) | **GET** /repos/{owner}/{repo}/tags | List a repository&#39;s tags\n*RepositoryApi* | [**repo_list_topics**](docs/RepositoryApi.md#repo_list_topics) | **GET** /repos/{owner}/{repo}/topics | Get list of topics that a repository has\n*RepositoryApi* | [**repo_merge_pull_request**](docs/RepositoryApi.md#repo_merge_pull_request) | **POST** /repos/{owner}/{repo}/pulls/{index}/merge | Merge a pull request\n*RepositoryApi* | [**repo_migrate**](docs/RepositoryApi.md#repo_migrate) | **POST** /repos/migrate | Migrate a remote git repository\n*RepositoryApi* | [**repo_mirror_sync**](docs/RepositoryApi.md#repo_mirror_sync) | **POST** /repos/{owner}/{repo}/mirror-sync | Sync a mirrored repository\n*RepositoryApi* | [**repo_pull_request_is_merged**](docs/RepositoryApi.md#repo_pull_request_is_merged) | **GET** /repos/{owner}/{repo}/pulls/{index}/merge | Check if a pull request has been merged\n*RepositoryApi* | [**repo_search**](docs/RepositoryApi.md#repo_search) | **GET** /repos/search | Search for repositories\n*RepositoryApi* | [**repo_signing_key**](docs/RepositoryApi.md#repo_signing_key) | **GET** /repos/{owner}/{repo}/signing-key.gpg | Get signing-key.gpg for given repository\n*RepositoryApi* | [**repo_test_hook**](docs/RepositoryApi.md#repo_test_hook) | **POST** /repos/{owner}/{repo}/hooks/{id}/tests | Test a push webhook\n*RepositoryApi* | [**repo_tracked_times**](docs/RepositoryApi.md#repo_tracked_times) | **GET** /repos/{owner}/{repo}/times | List a repo&#39;s tracked times\n*RepositoryApi* | [**repo_update_file**](docs/RepositoryApi.md#repo_update_file) | **PUT** /repos/{owner}/{repo}/contents/{filepath} | Update a file in a repository\n*RepositoryApi* | [**repo_update_topics**](docs/RepositoryApi.md#repo_update_topics) | **PUT** /repos/{owner}/{repo}/topics | Replace list of topics for a repository\n*RepositoryApi* | [**topic_search**](docs/RepositoryApi.md#topic_search) | **GET** /topics/search | search topics via keyword\n*RepositoryApi* | [**user_current_check_subscription**](docs/RepositoryApi.md#user_current_check_subscription) | **GET** /repos/{owner}/{repo}/subscription | Check if the current user is watching a repo\n*RepositoryApi* | [**user_current_delete_subscription**](docs/RepositoryApi.md#user_current_delete_subscription) | **DELETE** /repos/{owner}/{repo}/subscription | Unwatch a repo\n*RepositoryApi* | [**user_current_put_subscription**](docs/RepositoryApi.md#user_current_put_subscription) | **PUT** /repos/{owner}/{repo}/subscription | Watch a repo\n*UserApi* | [**create_current_user_repo**](docs/UserApi.md#create_current_user_repo) | **POST** /user/repos | Create a repository\n*UserApi* | [**user_add_email**](docs/UserApi.md#user_add_email) | **POST** /user/emails | Add email addresses\n*UserApi* | [**user_check_following**](docs/UserApi.md#user_check_following) | **GET** /users/{follower}/following/{followee} | Check if one user is following another user\n*UserApi* | [**user_create_token**](docs/UserApi.md#user_create_token) | **POST** /users/{username}/tokens | Create an access token\n*UserApi* | [**user_current_check_following**](docs/UserApi.md#user_current_check_following) | **GET** /user/following/{username} | Check whether a user is followed by the authenticated user\n*UserApi* | [**user_current_check_starring**](docs/UserApi.md#user_current_check_starring) | **GET** /user/starred/{owner}/{repo} | Whether the authenticated is starring the repo\n*UserApi* | [**user_current_delete_follow**](docs/UserApi.md#user_current_delete_follow) | **DELETE** /user/following/{username} | Unfollow a user\n*UserApi* | [**user_current_delete_gpg_key**](docs/UserApi.md#user_current_delete_gpg_key) | **DELETE** /user/gpg_keys/{id} | Remove a GPG key\n*UserApi* | [**user_current_delete_key**](docs/UserApi.md#user_current_delete_key) | **DELETE** /user/keys/{id} | Delete a public key\n*UserApi* | [**user_current_delete_star**](docs/UserApi.md#user_current_delete_star) | **DELETE** /user/starred/{owner}/{repo} | Unstar the given repo\n*UserApi* | [**user_current_get_gpg_key**](docs/UserApi.md#user_current_get_gpg_key) | **GET** /user/gpg_keys/{id} | Get a GPG key\n*UserApi* | [**user_current_get_key**](docs/UserApi.md#user_current_get_key) | **GET** /user/keys/{id} | Get a public key\n*UserApi* | [**user_current_list_followers**](docs/UserApi.md#user_current_list_followers) | **GET** /user/followers | List the authenticated user&#39;s followers\n*UserApi* | [**user_current_list_following**](docs/UserApi.md#user_current_list_following) | **GET** /user/following | List the users that the authenticated user is following\n*UserApi* | [**user_current_list_gpg_keys**](docs/UserApi.md#user_current_list_gpg_keys) | **GET** /user/gpg_keys | List the authenticated user&#39;s GPG keys\n*UserApi* | [**user_current_list_keys**](docs/UserApi.md#user_current_list_keys) | **GET** /user/keys | List the authenticated user&#39;s public keys\n*UserApi* | [**user_current_list_repos**](docs/UserApi.md#user_current_list_repos) | **GET** /user/repos | List the repos that the authenticated user owns or has access to\n*UserApi* | [**user_current_list_starred**](docs/UserApi.md#user_current_list_starred) | **GET** /user/starred | The repos that the authenticated user has starred\n*UserApi* | [**user_current_list_subscriptions**](docs/UserApi.md#user_current_list_subscriptions) | **GET** /user/subscriptions | List repositories watched by the authenticated user\n*UserApi* | [**user_current_post_gpg_key**](docs/UserApi.md#user_current_post_gpg_key) | **POST** /user/gpg_keys | Create a GPG key\n*UserApi* | [**user_current_post_key**](docs/UserApi.md#user_current_post_key) | **POST** /user/keys | Create a public key\n*UserApi* | [**user_current_put_follow**](docs/UserApi.md#user_current_put_follow) | **PUT** /user/following/{username} | Follow a user\n*UserApi* | [**user_current_put_star**](docs/UserApi.md#user_current_put_star) | **PUT** /user/starred/{owner}/{repo} | Star the given repo\n*UserApi* | [**user_current_tracked_times**](docs/UserApi.md#user_current_tracked_times) | **GET** /user/times | List the current user&#39;s tracked times\n*UserApi* | [**user_delete_access_token**](docs/UserApi.md#user_delete_access_token) | **DELETE** /users/{username}/tokens/{token} | delete an access token\n*UserApi* | [**user_delete_email**](docs/UserApi.md#user_delete_email) | **DELETE** /user/emails | Delete email addresses\n*UserApi* | [**user_get**](docs/UserApi.md#user_get) | **GET** /users/{username} | Get a user\n*UserApi* | [**user_get_current**](docs/UserApi.md#user_get_current) | **GET** /user | Get the authenticated user\n*UserApi* | [**user_get_heatmap_data**](docs/UserApi.md#user_get_heatmap_data) | **GET** /users/{username}/heatmap | Get a user&#39;s heatmap\n*UserApi* | [**user_get_tokens**](docs/UserApi.md#user_get_tokens) | **GET** /users/{username}/tokens | List the authenticated user&#39;s access tokens\n*UserApi* | [**user_list_emails**](docs/UserApi.md#user_list_emails) | **GET** /user/emails | List the authenticated user&#39;s email addresses\n*UserApi* | [**user_list_followers**](docs/UserApi.md#user_list_followers) | **GET** /users/{username}/followers | List the given user&#39;s followers\n*UserApi* | [**user_list_following**](docs/UserApi.md#user_list_following) | **GET** /users/{username}/following | List the users that the given user is following\n*UserApi* | [**user_list_gpg_keys**](docs/UserApi.md#user_list_gpg_keys) | **GET** /users/{username}/gpg_keys | List the given user&#39;s GPG keys\n*UserApi* | [**user_list_keys**](docs/UserApi.md#user_list_keys) | **GET** /users/{username}/keys | List the given user&#39;s public keys\n*UserApi* | [**user_list_repos**](docs/UserApi.md#user_list_repos) | **GET** /users/{username}/repos | List the repos owned by the given user\n*UserApi* | [**user_list_starred**](docs/UserApi.md#user_list_starred) | **GET** /users/{username}/starred | The repos that the given user has starred\n*UserApi* | [**user_list_subscriptions**](docs/UserApi.md#user_list_subscriptions) | **GET** /users/{username}/subscriptions | List the repositories watched by a user\n*UserApi* | [**user_list_teams**](docs/UserApi.md#user_list_teams) | **GET** /user/teams | List all the teams a user belongs to\n*UserApi* | [**user_search**](docs/UserApi.md#user_search) | **GET** /users/search | Search for users\n*UserApi* | [**user_tracked_times**](docs/UserApi.md#user_tracked_times) | **GET** /repos/{owner}/{repo}/times/{user} | List a user&#39;s tracked times in a repo\n\n\n## Documentation For Models\n\n - [APIError](docs/APIError.md)\n - [AccessToken](docs/AccessToken.md)\n - [AddCollaboratorOption](docs/AddCollaboratorOption.md)\n - [AddTimeOption](docs/AddTimeOption.md)\n - [AnnotatedTag](docs/AnnotatedTag.md)\n - [AnnotatedTagObject](docs/AnnotatedTagObject.md)\n - [Attachment](docs/Attachment.md)\n - [Branch](docs/Branch.md)\n - [Comment](docs/Comment.md)\n - [Commit](docs/Commit.md)\n - [CommitMeta](docs/CommitMeta.md)\n - [CommitUser](docs/CommitUser.md)\n - [ContentsResponse](docs/ContentsResponse.md)\n - [CreateEmailOption](docs/CreateEmailOption.md)\n - [CreateFileOptions](docs/CreateFileOptions.md)\n - [CreateForkOption](docs/CreateForkOption.md)\n - [CreateGPGKeyOption](docs/CreateGPGKeyOption.md)\n - [CreateHookOption](docs/CreateHookOption.md)\n - [CreateIssueCommentOption](docs/CreateIssueCommentOption.md)\n - [CreateIssueOption](docs/CreateIssueOption.md)\n - [CreateKeyOption](docs/CreateKeyOption.md)\n - [CreateLabelOption](docs/CreateLabelOption.md)\n - [CreateMilestoneOption](docs/CreateMilestoneOption.md)\n - [CreateOrgOption](docs/CreateOrgOption.md)\n - [CreatePullRequestOption](docs/CreatePullRequestOption.md)\n - [CreateReleaseOption](docs/CreateReleaseOption.md)\n - [CreateRepoOption](docs/CreateRepoOption.md)\n - [CreateStatusOption](docs/CreateStatusOption.md)\n - [CreateTeamOption](docs/CreateTeamOption.md)\n - [CreateUserOption](docs/CreateUserOption.md)\n - [DeleteEmailOption](docs/DeleteEmailOption.md)\n - [DeleteFileOptions](docs/DeleteFileOptions.md)\n - [DeployKey](docs/DeployKey.md)\n - [EditAttachmentOptions](docs/EditAttachmentOptions.md)\n - [EditDeadlineOption](docs/EditDeadlineOption.md)\n - [EditGitHookOption](docs/EditGitHookOption.md)\n - [EditHookOption](docs/EditHookOption.md)\n - [EditIssueCommentOption](docs/EditIssueCommentOption.md)\n - [EditIssueOption](docs/EditIssueOption.md)\n - [EditLabelOption](docs/EditLabelOption.md)\n - [EditMilestoneOption](docs/EditMilestoneOption.md)\n - [EditOrgOption](docs/EditOrgOption.md)\n - [EditPullRequestOption](docs/EditPullRequestOption.md)\n - [EditReleaseOption](docs/EditReleaseOption.md)\n - [EditRepoOption](docs/EditRepoOption.md)\n - [EditTeamOption](docs/EditTeamOption.md)\n - [EditUserOption](docs/EditUserOption.md)\n - [Email](docs/Email.md)\n - [ExternalTracker](docs/ExternalTracker.md)\n - [ExternalWiki](docs/ExternalWiki.md)\n - [FileCommitResponse](docs/FileCommitResponse.md)\n - [FileDeleteResponse](docs/FileDeleteResponse.md)\n - [FileLinksResponse](docs/FileLinksResponse.md)\n - [FileResponse](docs/FileResponse.md)\n - [GPGKey](docs/GPGKey.md)\n - [GPGKeyEmail](docs/GPGKeyEmail.md)\n - [GitBlobResponse](docs/GitBlobResponse.md)\n - [GitEntry](docs/GitEntry.md)\n - [GitHook](docs/GitHook.md)\n - [GitObject](docs/GitObject.md)\n - [GitTreeResponse](docs/GitTreeResponse.md)\n - [Hook](docs/Hook.md)\n - [Identity](docs/Identity.md)\n - [InlineResponse200](docs/InlineResponse200.md)\n - [InlineResponse2001](docs/InlineResponse2001.md)\n - [InternalTracker](docs/InternalTracker.md)\n - [Issue](docs/Issue.md)\n - [IssueDeadline](docs/IssueDeadline.md)\n - [IssueLabelsOption](docs/IssueLabelsOption.md)\n - [Label](docs/Label.md)\n - [MarkdownOption](docs/MarkdownOption.md)\n - [MergePullRequestOption](docs/MergePullRequestOption.md)\n - [MigrateRepoForm](docs/MigrateRepoForm.md)\n - [Milestone](docs/Milestone.md)\n - [Organization](docs/Organization.md)\n - [PRBranchInfo](docs/PRBranchInfo.md)\n - [PayloadCommit](docs/PayloadCommit.md)\n - [PayloadCommitVerification](docs/PayloadCommitVerification.md)\n - [PayloadUser](docs/PayloadUser.md)\n - [Permission](docs/Permission.md)\n - [PublicKey](docs/PublicKey.md)\n - [PullRequest](docs/PullRequest.md)\n - [PullRequestMeta](docs/PullRequestMeta.md)\n - [Reference](docs/Reference.md)\n - [Release](docs/Release.md)\n - [RepoCommit](docs/RepoCommit.md)\n - [RepoTopicOptions](docs/RepoTopicOptions.md)\n - [Repository](docs/Repository.md)\n - [SearchResults](docs/SearchResults.md)\n - [ServerVersion](docs/ServerVersion.md)\n - [StateType](docs/StateType.md)\n - [Status](docs/Status.md)\n - [StatusState](docs/StatusState.md)\n - [Tag](docs/Tag.md)\n - [Team](docs/Team.md)\n - [TimeStamp](docs/TimeStamp.md)\n - [TopicName](docs/TopicName.md)\n - [TopicResponse](docs/TopicResponse.md)\n - [TrackedTime](docs/TrackedTime.md)\n - [UpdateFileOptions](docs/UpdateFileOptions.md)\n - [User](docs/User.md)\n - [UserHeatmapData](docs/UserHeatmapData.md)\n - [WatchInfo](docs/WatchInfo.md)\n\n\n## Documentation For Authorization\n\n\n## AccessToken\n\n- **Type**: API key\n- **API key parameter name**: access_token\n- **Location**: URL query string\n\n## AuthorizationHeaderToken\n\n- **Type**: API key\n- **API key parameter name**: Authorization\n- **Location**: HTTP header\n\n## BasicAuth\n\n- **Type**: HTTP basic authentication\n\n## SudoHeader\n\n- **Type**: API key\n- **API key parameter name**: Sudo\n- **Location**: HTTP header\n\n## SudoParam\n\n- **Type**: API key\n- **API key parameter name**: sudo\n- **Location**: URL query string\n\n## Token\n\n- **Type**: API key\n- **API key parameter name**: token\n- **Location**: URL query string\n\n\n## Author\n* Rajesh Hegde", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dblueai/giteapy", "keywords": "gitea,git", "license": "", "maintainer": "", "maintainer_email": "", "name": "giteapy", "package_url": "https://pypi.org/project/giteapy/", "platform": "", "project_url": "https://pypi.org/project/giteapy/", "project_urls": {"Homepage": "https://github.com/dblueai/giteapy"}, "release_url": "https://pypi.org/project/giteapy/1.0.8/", "requires_dist": null, "requires_python": "", "summary": "Python SDK for Gitea - A painless, self-hosted Git service", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Gitea Python SDK</h1>\n<p>This documentation describes the Gitea API.</p>\n<p>This Python package is automatically generated by the <a href=\"https://github.com/swagger-api/swagger-codegen\" rel=\"nofollow\">Swagger Codegen</a> project:</p>\n<ul>\n<li>API version: 1.1.1</li>\n<li>Package version: 1.0.0</li>\n<li>Build package: io.swagger.codegen.languages.PythonClientCodegen</li>\n</ul>\n<h2>Requirements.</h2>\n<p>Python 2.7 and 3.4+</p>\n<h2>Installation &amp; Usage</h2>\n<h3>pip install</h3>\n<p>If the python package is hosted on Github, you can install directly from Github</p>\n<pre>pip install git+https://github.com/dblueai/giteapy.git\n</pre>\n<p>(you may need to run <code>pip</code> with root permission: <code>sudo pip install git+https://github.com/dblueai/giteapy.git</code>)</p>\n<p>Then import the package:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">giteapy</span>\n</pre>\n<h3>Setuptools</h3>\n<p>Install via <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">Setuptools</a>.</p>\n<pre>python setup.py install --user\n</pre>\n<p>(or <code>sudo python setup.py install</code> to install the package for all users)</p>\n<p>Then import the package:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">giteapy</span>\n</pre>\n<h2>Getting Started</h2>\n<p>Please follow the <a href=\"#installation--usage\" rel=\"nofollow\">installation procedure</a> and then run the following:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">giteapy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">giteapy.rest</span> <span class=\"kn\">import</span> <span class=\"n\">ApiException</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n\n<span class=\"c1\"># Configure API key authorization: AccessToken</span>\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'access_token'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_API_KEY'</span>\n<span class=\"c1\"># Uncomment below to setup prefix (e.g. Bearer) for API key, if needed</span>\n<span class=\"c1\"># configuration.api_key_prefix['access_token'] = 'Bearer'</span>\n<span class=\"c1\"># Configure API key authorization: AuthorizationHeaderToken</span>\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'Authorization'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_API_KEY'</span>\n<span class=\"c1\"># Uncomment below to setup prefix (e.g. Bearer) for API key, if needed</span>\n<span class=\"c1\"># configuration.api_key_prefix['Authorization'] = 'Bearer'</span>\n<span class=\"c1\"># Configure HTTP basic authorization: BasicAuth</span>\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_USERNAME'</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_PASSWORD'</span>\n<span class=\"c1\"># Configure API key authorization: SudoHeader</span>\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'Sudo'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_API_KEY'</span>\n<span class=\"c1\"># Uncomment below to setup prefix (e.g. Bearer) for API key, if needed</span>\n<span class=\"c1\"># configuration.api_key_prefix['Sudo'] = 'Bearer'</span>\n<span class=\"c1\"># Configure API key authorization: SudoParam</span>\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'sudo'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_API_KEY'</span>\n<span class=\"c1\"># Uncomment below to setup prefix (e.g. Bearer) for API key, if needed</span>\n<span class=\"c1\"># configuration.api_key_prefix['sudo'] = 'Bearer'</span>\n<span class=\"c1\"># Configure API key authorization: Token</span>\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s1\">'token'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'YOUR_API_KEY'</span>\n<span class=\"c1\"># Uncomment below to setup prefix (e.g. Bearer) for API key, if needed</span>\n<span class=\"c1\"># configuration.api_key_prefix['token'] = 'Bearer'</span>\n\n<span class=\"c1\"># create an instance of the API class</span>\n<span class=\"n\">api_instance</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">AdminApi</span><span class=\"p\">(</span><span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"n\">configuration</span><span class=\"p\">))</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s1\">'username_example'</span> <span class=\"c1\"># str | username of the user that will own the created organization</span>\n<span class=\"n\">organization</span> <span class=\"o\">=</span> <span class=\"n\">giteapy</span><span class=\"o\">.</span><span class=\"n\">CreateOrgOption</span><span class=\"p\">()</span> <span class=\"c1\"># CreateOrgOption |</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Create an organization</span>\n    <span class=\"n\">api_response</span> <span class=\"o\">=</span> <span class=\"n\">api_instance</span><span class=\"o\">.</span><span class=\"n\">admin_create_org</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">organization</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">api_response</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">ApiException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Exception when calling AdminApi-&gt;admin_create_org: </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n</pre>\n<h2>Documentation for API Endpoints</h2>\n<p>All URIs are relative to <em><a href=\"http://localhost:3000/api/v1\" rel=\"nofollow\">http://localhost:3000/api/v1</a></em></p>\n<table>\n<thead>\n<tr>\n<th>Class</th>\n<th>Method</th>\n<th>HTTP request</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_create_org\" rel=\"nofollow\"><strong>admin_create_org</strong></a></td>\n<td><strong>POST</strong> /admin/users/{username}/orgs</td>\n<td>Create an organization</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_create_public_key\" rel=\"nofollow\"><strong>admin_create_public_key</strong></a></td>\n<td><strong>POST</strong> /admin/users/{username}/keys</td>\n<td>Add a public key on behalf of a user</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_create_repo\" rel=\"nofollow\"><strong>admin_create_repo</strong></a></td>\n<td><strong>POST</strong> /admin/users/{username}/repos</td>\n<td>Create a repository on behalf a user</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_create_user\" rel=\"nofollow\"><strong>admin_create_user</strong></a></td>\n<td><strong>POST</strong> /admin/users</td>\n<td>Create a user</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_delete_user\" rel=\"nofollow\"><strong>admin_delete_user</strong></a></td>\n<td><strong>DELETE</strong> /admin/users/{username}</td>\n<td>Delete a user</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_delete_user_public_key\" rel=\"nofollow\"><strong>admin_delete_user_public_key</strong></a></td>\n<td><strong>DELETE</strong> /admin/users/{username}/keys/{id}</td>\n<td>Delete a user's public key</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_edit_user\" rel=\"nofollow\"><strong>admin_edit_user</strong></a></td>\n<td><strong>PATCH</strong> /admin/users/{username}</td>\n<td>Edit an existing user</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_get_all_orgs\" rel=\"nofollow\"><strong>admin_get_all_orgs</strong></a></td>\n<td><strong>GET</strong> /admin/orgs</td>\n<td>List all organizations</td>\n</tr>\n<tr>\n<td><em>AdminApi</em></td>\n<td><a href=\"docs/AdminApi.md#admin_get_all_users\" rel=\"nofollow\"><strong>admin_get_all_users</strong></a></td>\n<td><strong>GET</strong> /admin/users</td>\n<td>List all users</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_add_label\" rel=\"nofollow\"><strong>issue_add_label</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues/{index}/labels</td>\n<td>Add a label to an issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_add_time\" rel=\"nofollow\"><strong>issue_add_time</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues/{id}/times</td>\n<td>Add a tracked time to a issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_clear_labels\" rel=\"nofollow\"><strong>issue_clear_labels</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/issues/{index}/labels</td>\n<td>Remove all labels from an issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_create_comment\" rel=\"nofollow\"><strong>issue_create_comment</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues/{index}/comments</td>\n<td>Add a comment to an issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_create_issue\" rel=\"nofollow\"><strong>issue_create_issue</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues</td>\n<td>Create an issue. If using deadline only the date will be taken into account, and time of day ignored.</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_create_label\" rel=\"nofollow\"><strong>issue_create_label</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/labels</td>\n<td>Create a label</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_create_milestone\" rel=\"nofollow\"><strong>issue_create_milestone</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/milestones</td>\n<td>Create a milestone</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_delete_comment\" rel=\"nofollow\"><strong>issue_delete_comment</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/issues/comments/{id}</td>\n<td>Delete a comment</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_delete_comment_deprecated\" rel=\"nofollow\"><strong>issue_delete_comment_deprecated</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/issues/{index}/comments/{id}</td>\n<td>Delete a comment</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_delete_label\" rel=\"nofollow\"><strong>issue_delete_label</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/labels/{id}</td>\n<td>Delete a label</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_delete_milestone\" rel=\"nofollow\"><strong>issue_delete_milestone</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/milestones/{id}</td>\n<td>Delete a milestone</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_edit_comment\" rel=\"nofollow\"><strong>issue_edit_comment</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/issues/comments/{id}</td>\n<td>Edit a comment</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_edit_comment_deprecated\" rel=\"nofollow\"><strong>issue_edit_comment_deprecated</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/issues/{index}/comments/{id}</td>\n<td>Edit a comment</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_edit_issue\" rel=\"nofollow\"><strong>issue_edit_issue</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/issues/{index}</td>\n<td>Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_edit_issue_deadline\" rel=\"nofollow\"><strong>issue_edit_issue_deadline</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues/{index}/deadline</td>\n<td>Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_edit_label\" rel=\"nofollow\"><strong>issue_edit_label</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/labels/{id}</td>\n<td>Update a label</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_edit_milestone\" rel=\"nofollow\"><strong>issue_edit_milestone</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/milestones/{id}</td>\n<td>Update a milestone</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_comments\" rel=\"nofollow\"><strong>issue_get_comments</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/issues/{index}/comments</td>\n<td>List all comments on an issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_issue\" rel=\"nofollow\"><strong>issue_get_issue</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/issues/{index}</td>\n<td>Get an issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_label\" rel=\"nofollow\"><strong>issue_get_label</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/labels/{id}</td>\n<td>Get a single label</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_labels\" rel=\"nofollow\"><strong>issue_get_labels</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/issues/{index}/labels</td>\n<td>Get an issue's labels</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_milestone\" rel=\"nofollow\"><strong>issue_get_milestone</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/milestones/{id}</td>\n<td>Get a milestone</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_milestones_list\" rel=\"nofollow\"><strong>issue_get_milestones_list</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/milestones</td>\n<td>Get all of a repository's opened milestones</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_get_repo_comments\" rel=\"nofollow\"><strong>issue_get_repo_comments</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/issues/comments</td>\n<td>List all comments in a repository</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_list_issues\" rel=\"nofollow\"><strong>issue_list_issues</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/issues</td>\n<td>List a repository's issues</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_list_labels\" rel=\"nofollow\"><strong>issue_list_labels</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/labels</td>\n<td>Get all of a repository's labels</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_remove_label\" rel=\"nofollow\"><strong>issue_remove_label</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/issues/{index}/labels/{id}</td>\n<td>Remove a label from an issue</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_replace_labels\" rel=\"nofollow\"><strong>issue_replace_labels</strong></a></td>\n<td><strong>PUT</strong> /repos/{owner}/{repo}/issues/{index}/labels</td>\n<td>Replace an issue's labels</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_start_stop_watch\" rel=\"nofollow\"><strong>issue_start_stop_watch</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues/{index}/stopwatch/start</td>\n<td>Start stopwatch on an issue.</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_stop_watch\" rel=\"nofollow\"><strong>issue_stop_watch</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/issues/{index}/stopwatch/stop</td>\n<td>Stop an issue's existing stopwatch.</td>\n</tr>\n<tr>\n<td><em>IssueApi</em></td>\n<td><a href=\"docs/IssueApi.md#issue_tracked_times\" rel=\"nofollow\"><strong>issue_tracked_times</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/issues/{id}/times</td>\n<td>List an issue's tracked times</td>\n</tr>\n<tr>\n<td><em>MiscellaneousApi</em></td>\n<td><a href=\"docs/MiscellaneousApi.md#get_signing_key\" rel=\"nofollow\"><strong>get_signing_key</strong></a></td>\n<td><strong>GET</strong> /signing-key.gpg</td>\n<td>Get default signing-key.gpg</td>\n</tr>\n<tr>\n<td><em>MiscellaneousApi</em></td>\n<td><a href=\"docs/MiscellaneousApi.md#get_version\" rel=\"nofollow\"><strong>get_version</strong></a></td>\n<td><strong>GET</strong> /version</td>\n<td>Returns the version of the Gitea application</td>\n</tr>\n<tr>\n<td><em>MiscellaneousApi</em></td>\n<td><a href=\"docs/MiscellaneousApi.md#render_markdown\" rel=\"nofollow\"><strong>render_markdown</strong></a></td>\n<td><strong>POST</strong> /markdown</td>\n<td>Render a markdown document as HTML</td>\n</tr>\n<tr>\n<td><em>MiscellaneousApi</em></td>\n<td><a href=\"docs/MiscellaneousApi.md#render_markdown_raw\" rel=\"nofollow\"><strong>render_markdown_raw</strong></a></td>\n<td><strong>POST</strong> /markdown/raw</td>\n<td>Render raw markdown as HTML</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#create_org_repo\" rel=\"nofollow\"><strong>create_org_repo</strong></a></td>\n<td><strong>POST</strong> /org/{org}/repos</td>\n<td>Create a repository in an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_add_team_member\" rel=\"nofollow\"><strong>org_add_team_member</strong></a></td>\n<td><strong>PUT</strong> /teams/{id}/members/{username}</td>\n<td>Add a team member</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_add_team_repository\" rel=\"nofollow\"><strong>org_add_team_repository</strong></a></td>\n<td><strong>PUT</strong> /teams/{id}/repos/{org}/{repo}</td>\n<td>Add a repository to a team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_conceal_member\" rel=\"nofollow\"><strong>org_conceal_member</strong></a></td>\n<td><strong>DELETE</strong> /orgs/{org}/public_members/{username}</td>\n<td>Conceal a user's membership</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_create\" rel=\"nofollow\"><strong>org_create</strong></a></td>\n<td><strong>POST</strong> /orgs</td>\n<td>Create an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_create_hook\" rel=\"nofollow\"><strong>org_create_hook</strong></a></td>\n<td><strong>POST</strong> /orgs/{org}/hooks/</td>\n<td>Create a hook</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_create_team\" rel=\"nofollow\"><strong>org_create_team</strong></a></td>\n<td><strong>POST</strong> /orgs/{org}/teams</td>\n<td>Create a team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_delete\" rel=\"nofollow\"><strong>org_delete</strong></a></td>\n<td><strong>DELETE</strong> /orgs/{org}</td>\n<td>Delete an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_delete_hook\" rel=\"nofollow\"><strong>org_delete_hook</strong></a></td>\n<td><strong>DELETE</strong> /orgs/{org}/hooks/{id}</td>\n<td>Delete a hook</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_delete_member\" rel=\"nofollow\"><strong>org_delete_member</strong></a></td>\n<td><strong>DELETE</strong> /orgs/{org}/members/{username}</td>\n<td>Remove a member from an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_delete_team\" rel=\"nofollow\"><strong>org_delete_team</strong></a></td>\n<td><strong>DELETE</strong> /teams/{id}</td>\n<td>Delete a team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_edit\" rel=\"nofollow\"><strong>org_edit</strong></a></td>\n<td><strong>PATCH</strong> /orgs/{org}</td>\n<td>Edit an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_edit_hook\" rel=\"nofollow\"><strong>org_edit_hook</strong></a></td>\n<td><strong>PATCH</strong> /orgs/{org}/hooks/{id}</td>\n<td>Update a hook</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_edit_team\" rel=\"nofollow\"><strong>org_edit_team</strong></a></td>\n<td><strong>PATCH</strong> /teams/{id}</td>\n<td>Edit a team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_get\" rel=\"nofollow\"><strong>org_get</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}</td>\n<td>Get an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_get_hook\" rel=\"nofollow\"><strong>org_get_hook</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/hooks/{id}</td>\n<td>Get a hook</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_get_team\" rel=\"nofollow\"><strong>org_get_team</strong></a></td>\n<td><strong>GET</strong> /teams/{id}</td>\n<td>Get a team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_is_member\" rel=\"nofollow\"><strong>org_is_member</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/members/{username}</td>\n<td>Check if a user is a member of an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_is_public_member\" rel=\"nofollow\"><strong>org_is_public_member</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/public_members/{username}</td>\n<td>Check if a user is a public member of an organization</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_current_user_orgs\" rel=\"nofollow\"><strong>org_list_current_user_orgs</strong></a></td>\n<td><strong>GET</strong> /user/orgs</td>\n<td>List the current user's organizations</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_hooks\" rel=\"nofollow\"><strong>org_list_hooks</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/hooks</td>\n<td>List an organization's webhooks</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_members\" rel=\"nofollow\"><strong>org_list_members</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/members</td>\n<td>List an organization's members</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_public_members\" rel=\"nofollow\"><strong>org_list_public_members</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/public_members</td>\n<td>List an organization's public members</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_repos\" rel=\"nofollow\"><strong>org_list_repos</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/repos</td>\n<td>List an organization's repos</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_team_member\" rel=\"nofollow\"><strong>org_list_team_member</strong></a></td>\n<td><strong>GET</strong> /teams/{id}/members/{username}</td>\n<td>List a particular member of team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_team_members\" rel=\"nofollow\"><strong>org_list_team_members</strong></a></td>\n<td><strong>GET</strong> /teams/{id}/members</td>\n<td>List a team's members</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_team_repos\" rel=\"nofollow\"><strong>org_list_team_repos</strong></a></td>\n<td><strong>GET</strong> /teams/{id}/repos</td>\n<td>List a team's repos</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_teams\" rel=\"nofollow\"><strong>org_list_teams</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/teams</td>\n<td>List an organization's teams</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_list_user_orgs\" rel=\"nofollow\"><strong>org_list_user_orgs</strong></a></td>\n<td><strong>GET</strong> /users/{username}/orgs</td>\n<td>List a user's organizations</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_publicize_member\" rel=\"nofollow\"><strong>org_publicize_member</strong></a></td>\n<td><strong>PUT</strong> /orgs/{org}/public_members/{username}</td>\n<td>Publicize a user's membership</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_remove_team_member\" rel=\"nofollow\"><strong>org_remove_team_member</strong></a></td>\n<td><strong>DELETE</strong> /teams/{id}/members/{username}</td>\n<td>Remove a team member</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#org_remove_team_repository\" rel=\"nofollow\"><strong>org_remove_team_repository</strong></a></td>\n<td><strong>DELETE</strong> /teams/{id}/repos/{org}/{repo}</td>\n<td>Remove a repository from a team</td>\n</tr>\n<tr>\n<td><em>OrganizationApi</em></td>\n<td><a href=\"docs/OrganizationApi.md#team_search\" rel=\"nofollow\"><strong>team_search</strong></a></td>\n<td><strong>GET</strong> /orgs/{org}/teams/search</td>\n<td>Search for teams within an organization</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#create_current_user_repo\" rel=\"nofollow\"><strong>create_current_user_repo</strong></a></td>\n<td><strong>POST</strong> /user/repos</td>\n<td>Create a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#create_fork\" rel=\"nofollow\"><strong>create_fork</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/forks</td>\n<td>Fork a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#get_blob\" rel=\"nofollow\"><strong>get_blob</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/git/blobs/{sha}</td>\n<td>Gets the blob of a repository.</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#get_tag\" rel=\"nofollow\"><strong>get_tag</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/git/tags/{sha}</td>\n<td>Gets the tag object of an annotated tag (not lightweight tags)</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#get_tree\" rel=\"nofollow\"><strong>get_tree</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/git/trees/{sha}</td>\n<td>Gets the tree of a repository.</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#list_forks\" rel=\"nofollow\"><strong>list_forks</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/forks</td>\n<td>List a repository's forks</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_add_collaborator\" rel=\"nofollow\"><strong>repo_add_collaborator</strong></a></td>\n<td><strong>PUT</strong> /repos/{owner}/{repo}/collaborators/{collaborator}</td>\n<td>Add a collaborator to a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_add_topc\" rel=\"nofollow\"><strong>repo_add_topc</strong></a></td>\n<td><strong>PUT</strong> /repos/{owner}/{repo}/topics/{topic}</td>\n<td>Add a topic to a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_check_collaborator\" rel=\"nofollow\"><strong>repo_check_collaborator</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/collaborators/{collaborator}</td>\n<td>Check if a user is a collaborator of a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_file\" rel=\"nofollow\"><strong>repo_create_file</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/contents/{filepath}</td>\n<td>Create a file in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_hook\" rel=\"nofollow\"><strong>repo_create_hook</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/hooks</td>\n<td>Create a hook</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_key\" rel=\"nofollow\"><strong>repo_create_key</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/keys</td>\n<td>Add a key to a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_pull_request\" rel=\"nofollow\"><strong>repo_create_pull_request</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/pulls</td>\n<td>Create a pull request</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_release\" rel=\"nofollow\"><strong>repo_create_release</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/releases</td>\n<td>Create a release</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_release_attachment\" rel=\"nofollow\"><strong>repo_create_release_attachment</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/releases/{id}/assets</td>\n<td>Create a release attachment</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_create_status\" rel=\"nofollow\"><strong>repo_create_status</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/statuses/{sha}</td>\n<td>Create a commit status</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete\" rel=\"nofollow\"><strong>repo_delete</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}</td>\n<td>Delete a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_collaborator\" rel=\"nofollow\"><strong>repo_delete_collaborator</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/collaborators/{collaborator}</td>\n<td>Delete a collaborator from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_file\" rel=\"nofollow\"><strong>repo_delete_file</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/contents/{filepath}</td>\n<td>Delete a file in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_git_hook\" rel=\"nofollow\"><strong>repo_delete_git_hook</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/hooks/git/{id}</td>\n<td>Delete a Git hook in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_hook\" rel=\"nofollow\"><strong>repo_delete_hook</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/hooks/{id}</td>\n<td>Delete a hook in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_key\" rel=\"nofollow\"><strong>repo_delete_key</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/keys/{id}</td>\n<td>Delete a key from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_release\" rel=\"nofollow\"><strong>repo_delete_release</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/releases/{id}</td>\n<td>Delete a release</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_release_attachment\" rel=\"nofollow\"><strong>repo_delete_release_attachment</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}</td>\n<td>Delete a release attachment</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_delete_topic\" rel=\"nofollow\"><strong>repo_delete_topic</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/topics/{topic}</td>\n<td>Delete a topic from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_edit\" rel=\"nofollow\"><strong>repo_edit</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}</td>\n<td>Edit a repository's properties. Only fields that are set will be changed.</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_edit_git_hook\" rel=\"nofollow\"><strong>repo_edit_git_hook</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/hooks/git/{id}</td>\n<td>Edit a Git hook in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_edit_hook\" rel=\"nofollow\"><strong>repo_edit_hook</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/hooks/{id}</td>\n<td>Edit a hook in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_edit_pull_request\" rel=\"nofollow\"><strong>repo_edit_pull_request</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/pulls/{index}</td>\n<td>Update a pull request</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_edit_release\" rel=\"nofollow\"><strong>repo_edit_release</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/releases/{id}</td>\n<td>Update a release</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_edit_release_attachment\" rel=\"nofollow\"><strong>repo_edit_release_attachment</strong></a></td>\n<td><strong>PATCH</strong> /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}</td>\n<td>Edit a release attachment</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get\" rel=\"nofollow\"><strong>repo_get</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}</td>\n<td>Get a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_all_commits\" rel=\"nofollow\"><strong>repo_get_all_commits</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/commits</td>\n<td>Get a list of all commits from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_archive\" rel=\"nofollow\"><strong>repo_get_archive</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/archive/{archive}</td>\n<td>Get an archive of a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_branch\" rel=\"nofollow\"><strong>repo_get_branch</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/branches/{branch}</td>\n<td>Retrieve a specific branch from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_by_id\" rel=\"nofollow\"><strong>repo_get_by_id</strong></a></td>\n<td><strong>GET</strong> /repositories/{id}</td>\n<td>Get a repository by id</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_combined_status_by_ref\" rel=\"nofollow\"><strong>repo_get_combined_status_by_ref</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/commits/{ref}/statuses</td>\n<td>Get a commit's combined status, by branch/tag/commit reference</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_contents\" rel=\"nofollow\"><strong>repo_get_contents</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/contents/{filepath}</td>\n<td>Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_contents_list\" rel=\"nofollow\"><strong>repo_get_contents_list</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/contents</td>\n<td>Gets the metadata of all the entries of the root dir</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_editor_config\" rel=\"nofollow\"><strong>repo_get_editor_config</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/editorconfig/{filepath}</td>\n<td>Get the EditorConfig definitions of a file in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_git_hook\" rel=\"nofollow\"><strong>repo_get_git_hook</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/hooks/git/{id}</td>\n<td>Get a Git hook</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_hook\" rel=\"nofollow\"><strong>repo_get_hook</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/hooks/{id}</td>\n<td>Get a hook</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_key\" rel=\"nofollow\"><strong>repo_get_key</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/keys/{id}</td>\n<td>Get a repository's key by id</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_pull_request\" rel=\"nofollow\"><strong>repo_get_pull_request</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/pulls/{index}</td>\n<td>Get a pull request</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_raw_file\" rel=\"nofollow\"><strong>repo_get_raw_file</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/raw/{filepath}</td>\n<td>Get a file from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_release\" rel=\"nofollow\"><strong>repo_get_release</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/releases/{id}</td>\n<td>Get a release</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_release_attachment\" rel=\"nofollow\"><strong>repo_get_release_attachment</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}</td>\n<td>Get a release attachment</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_get_single_commit\" rel=\"nofollow\"><strong>repo_get_single_commit</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/git/commits/{sha}</td>\n<td>Get a single commit from a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_all_git_refs\" rel=\"nofollow\"><strong>repo_list_all_git_refs</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/git/refs</td>\n<td>Get specified ref or filtered repository's refs</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_branches\" rel=\"nofollow\"><strong>repo_list_branches</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/branches</td>\n<td>List a repository's branches</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_collaborators\" rel=\"nofollow\"><strong>repo_list_collaborators</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/collaborators</td>\n<td>List a repository's collaborators</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_git_hooks\" rel=\"nofollow\"><strong>repo_list_git_hooks</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/hooks/git</td>\n<td>List the Git hooks in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_git_refs\" rel=\"nofollow\"><strong>repo_list_git_refs</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/git/refs/{ref}</td>\n<td>Get specified ref or filtered repository's refs</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_hooks\" rel=\"nofollow\"><strong>repo_list_hooks</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/hooks</td>\n<td>List the hooks in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_keys\" rel=\"nofollow\"><strong>repo_list_keys</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/keys</td>\n<td>List a repository's keys</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_pull_requests\" rel=\"nofollow\"><strong>repo_list_pull_requests</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/pulls</td>\n<td>List a repo's pull requests</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_release_attachments\" rel=\"nofollow\"><strong>repo_list_release_attachments</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/releases/{id}/assets</td>\n<td>List release's attachments</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_releases\" rel=\"nofollow\"><strong>repo_list_releases</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/releases</td>\n<td>List a repo's releases</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_stargazers\" rel=\"nofollow\"><strong>repo_list_stargazers</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/stargazers</td>\n<td>List a repo's stargazers</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_statuses\" rel=\"nofollow\"><strong>repo_list_statuses</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/statuses/{sha}</td>\n<td>Get a commit's statuses</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_subscribers\" rel=\"nofollow\"><strong>repo_list_subscribers</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/subscribers</td>\n<td>List a repo's watchers</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_tags\" rel=\"nofollow\"><strong>repo_list_tags</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/tags</td>\n<td>List a repository's tags</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_list_topics\" rel=\"nofollow\"><strong>repo_list_topics</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/topics</td>\n<td>Get list of topics that a repository has</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_merge_pull_request\" rel=\"nofollow\"><strong>repo_merge_pull_request</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/pulls/{index}/merge</td>\n<td>Merge a pull request</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_migrate\" rel=\"nofollow\"><strong>repo_migrate</strong></a></td>\n<td><strong>POST</strong> /repos/migrate</td>\n<td>Migrate a remote git repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_mirror_sync\" rel=\"nofollow\"><strong>repo_mirror_sync</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/mirror-sync</td>\n<td>Sync a mirrored repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_pull_request_is_merged\" rel=\"nofollow\"><strong>repo_pull_request_is_merged</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/pulls/{index}/merge</td>\n<td>Check if a pull request has been merged</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_search\" rel=\"nofollow\"><strong>repo_search</strong></a></td>\n<td><strong>GET</strong> /repos/search</td>\n<td>Search for repositories</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_signing_key\" rel=\"nofollow\"><strong>repo_signing_key</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/signing-key.gpg</td>\n<td>Get signing-key.gpg for given repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_test_hook\" rel=\"nofollow\"><strong>repo_test_hook</strong></a></td>\n<td><strong>POST</strong> /repos/{owner}/{repo}/hooks/{id}/tests</td>\n<td>Test a push webhook</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_tracked_times\" rel=\"nofollow\"><strong>repo_tracked_times</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/times</td>\n<td>List a repo's tracked times</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_update_file\" rel=\"nofollow\"><strong>repo_update_file</strong></a></td>\n<td><strong>PUT</strong> /repos/{owner}/{repo}/contents/{filepath}</td>\n<td>Update a file in a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#repo_update_topics\" rel=\"nofollow\"><strong>repo_update_topics</strong></a></td>\n<td><strong>PUT</strong> /repos/{owner}/{repo}/topics</td>\n<td>Replace list of topics for a repository</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#topic_search\" rel=\"nofollow\"><strong>topic_search</strong></a></td>\n<td><strong>GET</strong> /topics/search</td>\n<td>search topics via keyword</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#user_current_check_subscription\" rel=\"nofollow\"><strong>user_current_check_subscription</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/subscription</td>\n<td>Check if the current user is watching a repo</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#user_current_delete_subscription\" rel=\"nofollow\"><strong>user_current_delete_subscription</strong></a></td>\n<td><strong>DELETE</strong> /repos/{owner}/{repo}/subscription</td>\n<td>Unwatch a repo</td>\n</tr>\n<tr>\n<td><em>RepositoryApi</em></td>\n<td><a href=\"docs/RepositoryApi.md#user_current_put_subscription\" rel=\"nofollow\"><strong>user_current_put_subscription</strong></a></td>\n<td><strong>PUT</strong> /repos/{owner}/{repo}/subscription</td>\n<td>Watch a repo</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#create_current_user_repo\" rel=\"nofollow\"><strong>create_current_user_repo</strong></a></td>\n<td><strong>POST</strong> /user/repos</td>\n<td>Create a repository</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_add_email\" rel=\"nofollow\"><strong>user_add_email</strong></a></td>\n<td><strong>POST</strong> /user/emails</td>\n<td>Add email addresses</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_check_following\" rel=\"nofollow\"><strong>user_check_following</strong></a></td>\n<td><strong>GET</strong> /users/{follower}/following/{followee}</td>\n<td>Check if one user is following another user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_create_token\" rel=\"nofollow\"><strong>user_create_token</strong></a></td>\n<td><strong>POST</strong> /users/{username}/tokens</td>\n<td>Create an access token</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_check_following\" rel=\"nofollow\"><strong>user_current_check_following</strong></a></td>\n<td><strong>GET</strong> /user/following/{username}</td>\n<td>Check whether a user is followed by the authenticated user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_check_starring\" rel=\"nofollow\"><strong>user_current_check_starring</strong></a></td>\n<td><strong>GET</strong> /user/starred/{owner}/{repo}</td>\n<td>Whether the authenticated is starring the repo</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_delete_follow\" rel=\"nofollow\"><strong>user_current_delete_follow</strong></a></td>\n<td><strong>DELETE</strong> /user/following/{username}</td>\n<td>Unfollow a user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_delete_gpg_key\" rel=\"nofollow\"><strong>user_current_delete_gpg_key</strong></a></td>\n<td><strong>DELETE</strong> /user/gpg_keys/{id}</td>\n<td>Remove a GPG key</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_delete_key\" rel=\"nofollow\"><strong>user_current_delete_key</strong></a></td>\n<td><strong>DELETE</strong> /user/keys/{id}</td>\n<td>Delete a public key</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_delete_star\" rel=\"nofollow\"><strong>user_current_delete_star</strong></a></td>\n<td><strong>DELETE</strong> /user/starred/{owner}/{repo}</td>\n<td>Unstar the given repo</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_get_gpg_key\" rel=\"nofollow\"><strong>user_current_get_gpg_key</strong></a></td>\n<td><strong>GET</strong> /user/gpg_keys/{id}</td>\n<td>Get a GPG key</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_get_key\" rel=\"nofollow\"><strong>user_current_get_key</strong></a></td>\n<td><strong>GET</strong> /user/keys/{id}</td>\n<td>Get a public key</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_followers\" rel=\"nofollow\"><strong>user_current_list_followers</strong></a></td>\n<td><strong>GET</strong> /user/followers</td>\n<td>List the authenticated user's followers</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_following\" rel=\"nofollow\"><strong>user_current_list_following</strong></a></td>\n<td><strong>GET</strong> /user/following</td>\n<td>List the users that the authenticated user is following</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_gpg_keys\" rel=\"nofollow\"><strong>user_current_list_gpg_keys</strong></a></td>\n<td><strong>GET</strong> /user/gpg_keys</td>\n<td>List the authenticated user's GPG keys</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_keys\" rel=\"nofollow\"><strong>user_current_list_keys</strong></a></td>\n<td><strong>GET</strong> /user/keys</td>\n<td>List the authenticated user's public keys</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_repos\" rel=\"nofollow\"><strong>user_current_list_repos</strong></a></td>\n<td><strong>GET</strong> /user/repos</td>\n<td>List the repos that the authenticated user owns or has access to</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_starred\" rel=\"nofollow\"><strong>user_current_list_starred</strong></a></td>\n<td><strong>GET</strong> /user/starred</td>\n<td>The repos that the authenticated user has starred</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_list_subscriptions\" rel=\"nofollow\"><strong>user_current_list_subscriptions</strong></a></td>\n<td><strong>GET</strong> /user/subscriptions</td>\n<td>List repositories watched by the authenticated user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_post_gpg_key\" rel=\"nofollow\"><strong>user_current_post_gpg_key</strong></a></td>\n<td><strong>POST</strong> /user/gpg_keys</td>\n<td>Create a GPG key</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_post_key\" rel=\"nofollow\"><strong>user_current_post_key</strong></a></td>\n<td><strong>POST</strong> /user/keys</td>\n<td>Create a public key</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_put_follow\" rel=\"nofollow\"><strong>user_current_put_follow</strong></a></td>\n<td><strong>PUT</strong> /user/following/{username}</td>\n<td>Follow a user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_put_star\" rel=\"nofollow\"><strong>user_current_put_star</strong></a></td>\n<td><strong>PUT</strong> /user/starred/{owner}/{repo}</td>\n<td>Star the given repo</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_current_tracked_times\" rel=\"nofollow\"><strong>user_current_tracked_times</strong></a></td>\n<td><strong>GET</strong> /user/times</td>\n<td>List the current user's tracked times</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_delete_access_token\" rel=\"nofollow\"><strong>user_delete_access_token</strong></a></td>\n<td><strong>DELETE</strong> /users/{username}/tokens/{token}</td>\n<td>delete an access token</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_delete_email\" rel=\"nofollow\"><strong>user_delete_email</strong></a></td>\n<td><strong>DELETE</strong> /user/emails</td>\n<td>Delete email addresses</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_get\" rel=\"nofollow\"><strong>user_get</strong></a></td>\n<td><strong>GET</strong> /users/{username}</td>\n<td>Get a user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_get_current\" rel=\"nofollow\"><strong>user_get_current</strong></a></td>\n<td><strong>GET</strong> /user</td>\n<td>Get the authenticated user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_get_heatmap_data\" rel=\"nofollow\"><strong>user_get_heatmap_data</strong></a></td>\n<td><strong>GET</strong> /users/{username}/heatmap</td>\n<td>Get a user's heatmap</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_get_tokens\" rel=\"nofollow\"><strong>user_get_tokens</strong></a></td>\n<td><strong>GET</strong> /users/{username}/tokens</td>\n<td>List the authenticated user's access tokens</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_emails\" rel=\"nofollow\"><strong>user_list_emails</strong></a></td>\n<td><strong>GET</strong> /user/emails</td>\n<td>List the authenticated user's email addresses</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_followers\" rel=\"nofollow\"><strong>user_list_followers</strong></a></td>\n<td><strong>GET</strong> /users/{username}/followers</td>\n<td>List the given user's followers</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_following\" rel=\"nofollow\"><strong>user_list_following</strong></a></td>\n<td><strong>GET</strong> /users/{username}/following</td>\n<td>List the users that the given user is following</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_gpg_keys\" rel=\"nofollow\"><strong>user_list_gpg_keys</strong></a></td>\n<td><strong>GET</strong> /users/{username}/gpg_keys</td>\n<td>List the given user's GPG keys</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_keys\" rel=\"nofollow\"><strong>user_list_keys</strong></a></td>\n<td><strong>GET</strong> /users/{username}/keys</td>\n<td>List the given user's public keys</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_repos\" rel=\"nofollow\"><strong>user_list_repos</strong></a></td>\n<td><strong>GET</strong> /users/{username}/repos</td>\n<td>List the repos owned by the given user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_starred\" rel=\"nofollow\"><strong>user_list_starred</strong></a></td>\n<td><strong>GET</strong> /users/{username}/starred</td>\n<td>The repos that the given user has starred</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_subscriptions\" rel=\"nofollow\"><strong>user_list_subscriptions</strong></a></td>\n<td><strong>GET</strong> /users/{username}/subscriptions</td>\n<td>List the repositories watched by a user</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_list_teams\" rel=\"nofollow\"><strong>user_list_teams</strong></a></td>\n<td><strong>GET</strong> /user/teams</td>\n<td>List all the teams a user belongs to</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_search\" rel=\"nofollow\"><strong>user_search</strong></a></td>\n<td><strong>GET</strong> /users/search</td>\n<td>Search for users</td>\n</tr>\n<tr>\n<td><em>UserApi</em></td>\n<td><a href=\"docs/UserApi.md#user_tracked_times\" rel=\"nofollow\"><strong>user_tracked_times</strong></a></td>\n<td><strong>GET</strong> /repos/{owner}/{repo}/times/{user}</td>\n<td>List a user's tracked times in a repo</td>\n</tr></tbody></table>\n<h2>Documentation For Models</h2>\n<ul>\n<li><a href=\"docs/APIError.md\" rel=\"nofollow\">APIError</a></li>\n<li><a href=\"docs/AccessToken.md\" rel=\"nofollow\">AccessToken</a></li>\n<li><a href=\"docs/AddCollaboratorOption.md\" rel=\"nofollow\">AddCollaboratorOption</a></li>\n<li><a href=\"docs/AddTimeOption.md\" rel=\"nofollow\">AddTimeOption</a></li>\n<li><a href=\"docs/AnnotatedTag.md\" rel=\"nofollow\">AnnotatedTag</a></li>\n<li><a href=\"docs/AnnotatedTagObject.md\" rel=\"nofollow\">AnnotatedTagObject</a></li>\n<li><a href=\"docs/Attachment.md\" rel=\"nofollow\">Attachment</a></li>\n<li><a href=\"docs/Branch.md\" rel=\"nofollow\">Branch</a></li>\n<li><a href=\"docs/Comment.md\" rel=\"nofollow\">Comment</a></li>\n<li><a href=\"docs/Commit.md\" rel=\"nofollow\">Commit</a></li>\n<li><a href=\"docs/CommitMeta.md\" rel=\"nofollow\">CommitMeta</a></li>\n<li><a href=\"docs/CommitUser.md\" rel=\"nofollow\">CommitUser</a></li>\n<li><a href=\"docs/ContentsResponse.md\" rel=\"nofollow\">ContentsResponse</a></li>\n<li><a href=\"docs/CreateEmailOption.md\" rel=\"nofollow\">CreateEmailOption</a></li>\n<li><a href=\"docs/CreateFileOptions.md\" rel=\"nofollow\">CreateFileOptions</a></li>\n<li><a href=\"docs/CreateForkOption.md\" rel=\"nofollow\">CreateForkOption</a></li>\n<li><a href=\"docs/CreateGPGKeyOption.md\" rel=\"nofollow\">CreateGPGKeyOption</a></li>\n<li><a href=\"docs/CreateHookOption.md\" rel=\"nofollow\">CreateHookOption</a></li>\n<li><a href=\"docs/CreateIssueCommentOption.md\" rel=\"nofollow\">CreateIssueCommentOption</a></li>\n<li><a href=\"docs/CreateIssueOption.md\" rel=\"nofollow\">CreateIssueOption</a></li>\n<li><a href=\"docs/CreateKeyOption.md\" rel=\"nofollow\">CreateKeyOption</a></li>\n<li><a href=\"docs/CreateLabelOption.md\" rel=\"nofollow\">CreateLabelOption</a></li>\n<li><a href=\"docs/CreateMilestoneOption.md\" rel=\"nofollow\">CreateMilestoneOption</a></li>\n<li><a href=\"docs/CreateOrgOption.md\" rel=\"nofollow\">CreateOrgOption</a></li>\n<li><a href=\"docs/CreatePullRequestOption.md\" rel=\"nofollow\">CreatePullRequestOption</a></li>\n<li><a href=\"docs/CreateReleaseOption.md\" rel=\"nofollow\">CreateReleaseOption</a></li>\n<li><a href=\"docs/CreateRepoOption.md\" rel=\"nofollow\">CreateRepoOption</a></li>\n<li><a href=\"docs/CreateStatusOption.md\" rel=\"nofollow\">CreateStatusOption</a></li>\n<li><a href=\"docs/CreateTeamOption.md\" rel=\"nofollow\">CreateTeamOption</a></li>\n<li><a href=\"docs/CreateUserOption.md\" rel=\"nofollow\">CreateUserOption</a></li>\n<li><a href=\"docs/DeleteEmailOption.md\" rel=\"nofollow\">DeleteEmailOption</a></li>\n<li><a href=\"docs/DeleteFileOptions.md\" rel=\"nofollow\">DeleteFileOptions</a></li>\n<li><a href=\"docs/DeployKey.md\" rel=\"nofollow\">DeployKey</a></li>\n<li><a href=\"docs/EditAttachmentOptions.md\" rel=\"nofollow\">EditAttachmentOptions</a></li>\n<li><a href=\"docs/EditDeadlineOption.md\" rel=\"nofollow\">EditDeadlineOption</a></li>\n<li><a href=\"docs/EditGitHookOption.md\" rel=\"nofollow\">EditGitHookOption</a></li>\n<li><a href=\"docs/EditHookOption.md\" rel=\"nofollow\">EditHookOption</a></li>\n<li><a href=\"docs/EditIssueCommentOption.md\" rel=\"nofollow\">EditIssueCommentOption</a></li>\n<li><a href=\"docs/EditIssueOption.md\" rel=\"nofollow\">EditIssueOption</a></li>\n<li><a href=\"docs/EditLabelOption.md\" rel=\"nofollow\">EditLabelOption</a></li>\n<li><a href=\"docs/EditMilestoneOption.md\" rel=\"nofollow\">EditMilestoneOption</a></li>\n<li><a href=\"docs/EditOrgOption.md\" rel=\"nofollow\">EditOrgOption</a></li>\n<li><a href=\"docs/EditPullRequestOption.md\" rel=\"nofollow\">EditPullRequestOption</a></li>\n<li><a href=\"docs/EditReleaseOption.md\" rel=\"nofollow\">EditReleaseOption</a></li>\n<li><a href=\"docs/EditRepoOption.md\" rel=\"nofollow\">EditRepoOption</a></li>\n<li><a href=\"docs/EditTeamOption.md\" rel=\"nofollow\">EditTeamOption</a></li>\n<li><a href=\"docs/EditUserOption.md\" rel=\"nofollow\">EditUserOption</a></li>\n<li><a href=\"docs/Email.md\" rel=\"nofollow\">Email</a></li>\n<li><a href=\"docs/ExternalTracker.md\" rel=\"nofollow\">ExternalTracker</a></li>\n<li><a href=\"docs/ExternalWiki.md\" rel=\"nofollow\">ExternalWiki</a></li>\n<li><a href=\"docs/FileCommitResponse.md\" rel=\"nofollow\">FileCommitResponse</a></li>\n<li><a href=\"docs/FileDeleteResponse.md\" rel=\"nofollow\">FileDeleteResponse</a></li>\n<li><a href=\"docs/FileLinksResponse.md\" rel=\"nofollow\">FileLinksResponse</a></li>\n<li><a href=\"docs/FileResponse.md\" rel=\"nofollow\">FileResponse</a></li>\n<li><a href=\"docs/GPGKey.md\" rel=\"nofollow\">GPGKey</a></li>\n<li><a href=\"docs/GPGKeyEmail.md\" rel=\"nofollow\">GPGKeyEmail</a></li>\n<li><a href=\"docs/GitBlobResponse.md\" rel=\"nofollow\">GitBlobResponse</a></li>\n<li><a href=\"docs/GitEntry.md\" rel=\"nofollow\">GitEntry</a></li>\n<li><a href=\"docs/GitHook.md\" rel=\"nofollow\">GitHook</a></li>\n<li><a href=\"docs/GitObject.md\" rel=\"nofollow\">GitObject</a></li>\n<li><a href=\"docs/GitTreeResponse.md\" rel=\"nofollow\">GitTreeResponse</a></li>\n<li><a href=\"docs/Hook.md\" rel=\"nofollow\">Hook</a></li>\n<li><a href=\"docs/Identity.md\" rel=\"nofollow\">Identity</a></li>\n<li><a href=\"docs/InlineResponse200.md\" rel=\"nofollow\">InlineResponse200</a></li>\n<li><a href=\"docs/InlineResponse2001.md\" rel=\"nofollow\">InlineResponse2001</a></li>\n<li><a href=\"docs/InternalTracker.md\" rel=\"nofollow\">InternalTracker</a></li>\n<li><a href=\"docs/Issue.md\" rel=\"nofollow\">Issue</a></li>\n<li><a href=\"docs/IssueDeadline.md\" rel=\"nofollow\">IssueDeadline</a></li>\n<li><a href=\"docs/IssueLabelsOption.md\" rel=\"nofollow\">IssueLabelsOption</a></li>\n<li><a href=\"docs/Label.md\" rel=\"nofollow\">Label</a></li>\n<li><a href=\"docs/MarkdownOption.md\" rel=\"nofollow\">MarkdownOption</a></li>\n<li><a href=\"docs/MergePullRequestOption.md\" rel=\"nofollow\">MergePullRequestOption</a></li>\n<li><a href=\"docs/MigrateRepoForm.md\" rel=\"nofollow\">MigrateRepoForm</a></li>\n<li><a href=\"docs/Milestone.md\" rel=\"nofollow\">Milestone</a></li>\n<li><a href=\"docs/Organization.md\" rel=\"nofollow\">Organization</a></li>\n<li><a href=\"docs/PRBranchInfo.md\" rel=\"nofollow\">PRBranchInfo</a></li>\n<li><a href=\"docs/PayloadCommit.md\" rel=\"nofollow\">PayloadCommit</a></li>\n<li><a href=\"docs/PayloadCommitVerification.md\" rel=\"nofollow\">PayloadCommitVerification</a></li>\n<li><a href=\"docs/PayloadUser.md\" rel=\"nofollow\">PayloadUser</a></li>\n<li><a href=\"docs/Permission.md\" rel=\"nofollow\">Permission</a></li>\n<li><a href=\"docs/PublicKey.md\" rel=\"nofollow\">PublicKey</a></li>\n<li><a href=\"docs/PullRequest.md\" rel=\"nofollow\">PullRequest</a></li>\n<li><a href=\"docs/PullRequestMeta.md\" rel=\"nofollow\">PullRequestMeta</a></li>\n<li><a href=\"docs/Reference.md\" rel=\"nofollow\">Reference</a></li>\n<li><a href=\"docs/Release.md\" rel=\"nofollow\">Release</a></li>\n<li><a href=\"docs/RepoCommit.md\" rel=\"nofollow\">RepoCommit</a></li>\n<li><a href=\"docs/RepoTopicOptions.md\" rel=\"nofollow\">RepoTopicOptions</a></li>\n<li><a href=\"docs/Repository.md\" rel=\"nofollow\">Repository</a></li>\n<li><a href=\"docs/SearchResults.md\" rel=\"nofollow\">SearchResults</a></li>\n<li><a href=\"docs/ServerVersion.md\" rel=\"nofollow\">ServerVersion</a></li>\n<li><a href=\"docs/StateType.md\" rel=\"nofollow\">StateType</a></li>\n<li><a href=\"docs/Status.md\" rel=\"nofollow\">Status</a></li>\n<li><a href=\"docs/StatusState.md\" rel=\"nofollow\">StatusState</a></li>\n<li><a href=\"docs/Tag.md\" rel=\"nofollow\">Tag</a></li>\n<li><a href=\"docs/Team.md\" rel=\"nofollow\">Team</a></li>\n<li><a href=\"docs/TimeStamp.md\" rel=\"nofollow\">TimeStamp</a></li>\n<li><a href=\"docs/TopicName.md\" rel=\"nofollow\">TopicName</a></li>\n<li><a href=\"docs/TopicResponse.md\" rel=\"nofollow\">TopicResponse</a></li>\n<li><a href=\"docs/TrackedTime.md\" rel=\"nofollow\">TrackedTime</a></li>\n<li><a href=\"docs/UpdateFileOptions.md\" rel=\"nofollow\">UpdateFileOptions</a></li>\n<li><a href=\"docs/User.md\" rel=\"nofollow\">User</a></li>\n<li><a href=\"docs/UserHeatmapData.md\" rel=\"nofollow\">UserHeatmapData</a></li>\n<li><a href=\"docs/WatchInfo.md\" rel=\"nofollow\">WatchInfo</a></li>\n</ul>\n<h2>Documentation For Authorization</h2>\n<h2>AccessToken</h2>\n<ul>\n<li><strong>Type</strong>: API key</li>\n<li><strong>API key parameter name</strong>: access_token</li>\n<li><strong>Location</strong>: URL query string</li>\n</ul>\n<h2>AuthorizationHeaderToken</h2>\n<ul>\n<li><strong>Type</strong>: API key</li>\n<li><strong>API key parameter name</strong>: Authorization</li>\n<li><strong>Location</strong>: HTTP header</li>\n</ul>\n<h2>BasicAuth</h2>\n<ul>\n<li><strong>Type</strong>: HTTP basic authentication</li>\n</ul>\n<h2>SudoHeader</h2>\n<ul>\n<li><strong>Type</strong>: API key</li>\n<li><strong>API key parameter name</strong>: Sudo</li>\n<li><strong>Location</strong>: HTTP header</li>\n</ul>\n<h2>SudoParam</h2>\n<ul>\n<li><strong>Type</strong>: API key</li>\n<li><strong>API key parameter name</strong>: sudo</li>\n<li><strong>Location</strong>: URL query string</li>\n</ul>\n<h2>Token</h2>\n<ul>\n<li><strong>Type</strong>: API key</li>\n<li><strong>API key parameter name</strong>: token</li>\n<li><strong>Location</strong>: URL query string</li>\n</ul>\n<h2>Author</h2>\n<ul>\n<li>Rajesh Hegde</li>\n</ul>\n\n          </div>"}, "last_serial": 6451316, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "735c24855134d96c2ea9a9696f355e65", "sha256": "dc7eea656be70d9d12aa476cdafe53efb4e32e5ecb4fc0e333e9a32741330a1d"}, "downloads": -1, "filename": "giteapy-1.0.5.tar.gz", "has_sig": false, "md5_digest": "735c24855134d96c2ea9a9696f355e65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124543, "upload_time": "2019-11-01T07:11:30", "upload_time_iso_8601": "2019-11-01T07:11:30.970099Z", "url": "https://files.pythonhosted.org/packages/ec/42/c5becf5b9f7561e7cb822d6b473bda69a0e5df5acd8b3d9d5d5b072526b0/giteapy-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "ecb46e342ee0926aed7fe31200b43eef", "sha256": "f476674f1823716f475b490809735d3b6d95153d01a4be84126f46eed1361aa3"}, "downloads": -1, "filename": "giteapy-1.0.6.tar.gz", "has_sig": false, "md5_digest": "ecb46e342ee0926aed7fe31200b43eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124560, "upload_time": "2019-11-01T10:42:12", "upload_time_iso_8601": "2019-11-01T10:42:12.299131Z", "url": "https://files.pythonhosted.org/packages/2e/b7/1806dca20776d8c23cf6f490673746df701f8fae2873f1043d842d40fe3a/giteapy-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "65c2ea27ade75415c438ac0e0bd2e488", "sha256": "a5d64c426637ffaf769bf9ec8035f3c23d4210abfd47281de1c6c9c7885eda4f"}, "downloads": -1, "filename": "giteapy-1.0.7.tar.gz", "has_sig": false, "md5_digest": "65c2ea27ade75415c438ac0e0bd2e488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124633, "upload_time": "2019-11-03T12:53:30", "upload_time_iso_8601": "2019-11-03T12:53:30.277442Z", "url": "https://files.pythonhosted.org/packages/fc/55/8ac38d7067cea5b0a0325f39eed33876757d4ad6097cb64f6bec22c76b73/giteapy-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "988b56e3c2ce57737bc5b65e432181f8", "sha256": "2078c802a4626bf311e911c969c34b7d19fbe9175e2910e1965b24ff69221470"}, "downloads": -1, "filename": "giteapy-1.0.8.tar.gz", "has_sig": false, "md5_digest": "988b56e3c2ce57737bc5b65e432181f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124673, "upload_time": "2020-01-14T11:55:04", "upload_time_iso_8601": "2020-01-14T11:55:04.216676Z", "url": "https://files.pythonhosted.org/packages/79/41/1c5643897ab6bcba33d48a7535738f758d85b0c8ecb9ba0d1dbea0881a64/giteapy-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "988b56e3c2ce57737bc5b65e432181f8", "sha256": "2078c802a4626bf311e911c969c34b7d19fbe9175e2910e1965b24ff69221470"}, "downloads": -1, "filename": "giteapy-1.0.8.tar.gz", "has_sig": false, "md5_digest": "988b56e3c2ce57737bc5b65e432181f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124673, "upload_time": "2020-01-14T11:55:04", "upload_time_iso_8601": "2020-01-14T11:55:04.216676Z", "url": "https://files.pythonhosted.org/packages/79/41/1c5643897ab6bcba33d48a7535738f758d85b0c8ecb9ba0d1dbea0881a64/giteapy-1.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:06 2020"}