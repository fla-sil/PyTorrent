{"info": {"author": "Randall Speake", "author_email": "ranspeake@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# menyou\nAn easy-to-use console-based menu module.\n\n## Requirements\n - Python >= 3.6\n - pyfiglet\n\n## Installation\n```bash\npip install menyou\n```\n\n## Basic Usage\n```python\nimport menyou as m\n\n# Create a submenu with a couple of options (Opshins)\nsub_menu = m.Menyou(\n    'My Great App',\n    'Sub Menu',\n    [m.Opshin(name='Hello World', payload=print),\n     # This option will be displayed, but disabled\n     m.Opshin(name='Five times x', payload=lambda x: x*5, disabled=True)],\n    'Pick a function to execute: '\n)\n\n# Create the main menu\nmain_menu = m.Menyou(\n    'My Great App',\n    'Main Menu',\n    [m.Opshin(name='Sub Menu', payload=sub_menu),\n    # For convenience, the Menyou class has an cross-platform exit function\n    m.Opshin(name='Exit', payload=m.Menyou.exit)],\n    'Pick a submenu to navigate to: '\n)\n\n# Display the menu\nmain_menu.display_menu()\n```\n\n## Executing Complex Payloads\nThe simplest approach would be to have a your program handle interaction with the user. You can define a parameterless function that captures user input and calls any business logic functions defined in your program. For example:\n```python\n# In your program, setup a parameterless function that handles user input, validation, and calls any necessary functions\ndef called_by_menu():\n    name = my_app.prompt_for_name()\n    my_app.greet(name)\n    age = my_app.prompt_for_age()\n    old_enough = my_app.validate_age(age)\n\n    if old_enough:\n        print(f'Congrats{name}, you are old enough.')\n    else:\n        print(f'Sorry, {name}, you are not old enough')\n\n    # Program control returns to Menyou\n\n# Instantiate the menu\nimport menyou as m\n\nmy_menu = m.Menyou(\n    'Menu Title',\n    'Menu Subtitle',\n    [m.Opshin(name='Interact with my_app', payload=called_by_menu)],\n    'Please choose an option: '\n)\n\n# Display\nmy_menu.display_menu()\n\n```\nWhen you design your program, you may want to keep all the functions that take user input within the Menyou class.\n\nIf you want to operate this way you will need to edit the payload_director function in menyou.py. You may also want to add some custom functions to the Menyou class. Here is an example of how you could prompt the user for their name before calling the greet function:\n```python\n\n# Assume you have a function in your program that greets the user with the name they provide\ndef greet(name):\n    print(f'Hello {name}')\n\n# Instantiate a menu with the greet function as a payload\nimport menyou as m\n\nmy_menu = m.menyou('My Menu Title', \n                   'My Menu Subtitle',\n                   [m.Opshin(name='Greet me', payload=greet)],\n                   'Please choose an option: ')\n\n# Add the prompt_for_name function to the Menyou class\n...\n@staticmethod\ndef prompt_for_name():\n    name = input('What is your name?')\n    return name\n\n# Add the logic to the payload_director function so that your_app's greet function gets supplied the correct parameter.\n...\ndef payload_director(fn):\n        def inner():\n            # Your 'complex' menu operations go here...\n            if fn.__name__ == your_app.greet.__name__:\n                # call the prompt function you added to the Menyou class:\n                name = self.prompt_for_name()\n                # supply the return value to the payload function:\n                fn(name)  \n            else:\n                # Default behaviour - execute the payload\n                fn()\n        return inner\n```\nAlternatively, your app could provide the functions to execute:\n```python\n# Setup a menu\nimport menyou as m\n\nmy_menu = m.menyou('My Menu Title', \n                   'My Menu Subtitle',\n                   [m.Opshin(name='Execute three functions', payload=called_by_menu)],\n                   'Please choose an option: ')\n\n# In your app:\ndef called_by_menu():\n    # return a tuple of functions to execute\n    return func1, func2, func3\n\n# In the payload_director function of the Menyou class\ndef payload_director(fn):\n        def inner():\n            # Your 'complex' menu operations go here...\n            if fn.__name__ == your_app.called_by_menu.__name__:\n                # call the payload that returns three functions:\n                func1, func2, func3 = fn()\n                # execute them \n                func1()\n                func2()\n                func3()\n            else:\n                # Default behaviour - execute the payload\n                fn()\n        return inner\n```\n\n## License\n[GNU GPLv3](LICENSE.TXT) \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/ricoflow/menyou", "keywords": "", "license": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "maintainer": "", "maintainer_email": "", "name": "menyou", "package_url": "https://pypi.org/project/menyou/", "platform": "", "project_url": "https://pypi.org/project/menyou/", "project_urls": {"Homepage": "https://gitlab.com/ricoflow/menyou"}, "release_url": "https://pypi.org/project/menyou/1.0/", "requires_dist": ["pyfiglet"], "requires_python": ">=3.6", "summary": "A easy-to-use console-based menu.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>menyou</h1>\n<p>An easy-to-use console-based menu module.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li>pyfiglet</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install menyou\n</pre>\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">menyou</span> <span class=\"k\">as</span> <span class=\"nn\">m</span>\n\n<span class=\"c1\"># Create a submenu with a couple of options (Opshins)</span>\n<span class=\"n\">sub_menu</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Menyou</span><span class=\"p\">(</span>\n    <span class=\"s1\">'My Great App'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Sub Menu'</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Hello World'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"nb\">print</span><span class=\"p\">),</span>\n     <span class=\"c1\"># This option will be displayed, but disabled</span>\n     <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Five times x'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">disabled</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)],</span>\n    <span class=\"s1\">'Pick a function to execute: '</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Create the main menu</span>\n<span class=\"n\">main_menu</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Menyou</span><span class=\"p\">(</span>\n    <span class=\"s1\">'My Great App'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Main Menu'</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Sub Menu'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">sub_menu</span><span class=\"p\">),</span>\n    <span class=\"c1\"># For convenience, the Menyou class has an cross-platform exit function</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Exit'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Menyou</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">)],</span>\n    <span class=\"s1\">'Pick a submenu to navigate to: '</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Display the menu</span>\n<span class=\"n\">main_menu</span><span class=\"o\">.</span><span class=\"n\">display_menu</span><span class=\"p\">()</span>\n</pre>\n<h2>Executing Complex Payloads</h2>\n<p>The simplest approach would be to have a your program handle interaction with the user. You can define a parameterless function that captures user input and calls any business logic functions defined in your program. For example:</p>\n<pre><span class=\"c1\"># In your program, setup a parameterless function that handles user input, validation, and calls any necessary functions</span>\n<span class=\"k\">def</span> <span class=\"nf\">called_by_menu</span><span class=\"p\">():</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">my_app</span><span class=\"o\">.</span><span class=\"n\">prompt_for_name</span><span class=\"p\">()</span>\n    <span class=\"n\">my_app</span><span class=\"o\">.</span><span class=\"n\">greet</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">my_app</span><span class=\"o\">.</span><span class=\"n\">prompt_for_age</span><span class=\"p\">()</span>\n    <span class=\"n\">old_enough</span> <span class=\"o\">=</span> <span class=\"n\">my_app</span><span class=\"o\">.</span><span class=\"n\">validate_age</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">old_enough</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Congrats</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">, you are old enough.'</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Sorry, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">, you are not old enough'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Program control returns to Menyou</span>\n\n<span class=\"c1\"># Instantiate the menu</span>\n<span class=\"kn\">import</span> <span class=\"nn\">menyou</span> <span class=\"k\">as</span> <span class=\"nn\">m</span>\n\n<span class=\"n\">my_menu</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Menyou</span><span class=\"p\">(</span>\n    <span class=\"s1\">'Menu Title'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Menu Subtitle'</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Interact with my_app'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">called_by_menu</span><span class=\"p\">)],</span>\n    <span class=\"s1\">'Please choose an option: '</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Display</span>\n<span class=\"n\">my_menu</span><span class=\"o\">.</span><span class=\"n\">display_menu</span><span class=\"p\">()</span>\n</pre>\n<p>When you design your program, you may want to keep all the functions that take user input within the Menyou class.</p>\n<p>If you want to operate this way you will need to edit the payload_director function in menyou.py. You may also want to add some custom functions to the Menyou class. Here is an example of how you could prompt the user for their name before calling the greet function:</p>\n<pre><span class=\"c1\"># Assume you have a function in your program that greets the user with the name they provide</span>\n<span class=\"k\">def</span> <span class=\"nf\">greet</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Instantiate a menu with the greet function as a payload</span>\n<span class=\"kn\">import</span> <span class=\"nn\">menyou</span> <span class=\"k\">as</span> <span class=\"nn\">m</span>\n\n<span class=\"n\">my_menu</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">menyou</span><span class=\"p\">(</span><span class=\"s1\">'My Menu Title'</span><span class=\"p\">,</span> \n                   <span class=\"s1\">'My Menu Subtitle'</span><span class=\"p\">,</span>\n                   <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Greet me'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">greet</span><span class=\"p\">)],</span>\n                   <span class=\"s1\">'Please choose an option: '</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add the prompt_for_name function to the Menyou class</span>\n<span class=\"o\">...</span>\n<span class=\"nd\">@staticmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">prompt_for_name</span><span class=\"p\">():</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s1\">'What is your name?'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">name</span>\n\n<span class=\"c1\"># Add the logic to the payload_director function so that your_app's greet function gets supplied the correct parameter.</span>\n<span class=\"o\">...</span>\n<span class=\"k\">def</span> <span class=\"nf\">payload_director</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">inner</span><span class=\"p\">():</span>\n            <span class=\"c1\"># Your 'complex' menu operations go here...</span>\n            <span class=\"k\">if</span> <span class=\"n\">fn</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"n\">your_app</span><span class=\"o\">.</span><span class=\"n\">greet</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">:</span>\n                <span class=\"c1\"># call the prompt function you added to the Menyou class:</span>\n                <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prompt_for_name</span><span class=\"p\">()</span>\n                <span class=\"c1\"># supply the return value to the payload function:</span>\n                <span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>  \n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Default behaviour - execute the payload</span>\n                <span class=\"n\">fn</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">inner</span>\n</pre>\n<p>Alternatively, your app could provide the functions to execute:</p>\n<pre><span class=\"c1\"># Setup a menu</span>\n<span class=\"kn\">import</span> <span class=\"nn\">menyou</span> <span class=\"k\">as</span> <span class=\"nn\">m</span>\n\n<span class=\"n\">my_menu</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">menyou</span><span class=\"p\">(</span><span class=\"s1\">'My Menu Title'</span><span class=\"p\">,</span> \n                   <span class=\"s1\">'My Menu Subtitle'</span><span class=\"p\">,</span>\n                   <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">Opshin</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Execute three functions'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">called_by_menu</span><span class=\"p\">)],</span>\n                   <span class=\"s1\">'Please choose an option: '</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># In your app:</span>\n<span class=\"k\">def</span> <span class=\"nf\">called_by_menu</span><span class=\"p\">():</span>\n    <span class=\"c1\"># return a tuple of functions to execute</span>\n    <span class=\"k\">return</span> <span class=\"n\">func1</span><span class=\"p\">,</span> <span class=\"n\">func2</span><span class=\"p\">,</span> <span class=\"n\">func3</span>\n\n<span class=\"c1\"># In the payload_director function of the Menyou class</span>\n<span class=\"k\">def</span> <span class=\"nf\">payload_director</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">inner</span><span class=\"p\">():</span>\n            <span class=\"c1\"># Your 'complex' menu operations go here...</span>\n            <span class=\"k\">if</span> <span class=\"n\">fn</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"n\">your_app</span><span class=\"o\">.</span><span class=\"n\">called_by_menu</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">:</span>\n                <span class=\"c1\"># call the payload that returns three functions:</span>\n                <span class=\"n\">func1</span><span class=\"p\">,</span> <span class=\"n\">func2</span><span class=\"p\">,</span> <span class=\"n\">func3</span> <span class=\"o\">=</span> <span class=\"n\">fn</span><span class=\"p\">()</span>\n                <span class=\"c1\"># execute them </span>\n                <span class=\"n\">func1</span><span class=\"p\">()</span>\n                <span class=\"n\">func2</span><span class=\"p\">()</span>\n                <span class=\"n\">func3</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Default behaviour - execute the payload</span>\n                <span class=\"n\">fn</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">inner</span>\n</pre>\n<h2>License</h2>\n<p><a href=\"LICENSE.TXT\" rel=\"nofollow\">GNU GPLv3</a></p>\n\n          </div>"}, "last_serial": 6327318, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d2d742323f7e19cbe2f533f4b252b6a4", "sha256": "644107963e55158a0f080a8a2fcc57702333114dc3ff0af75044c6bb41ecbd83"}, "downloads": -1, "filename": "menyou-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d2d742323f7e19cbe2f533f4b252b6a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17794, "upload_time": "2019-12-18T18:51:34", "upload_time_iso_8601": "2019-12-18T18:51:34.801249Z", "url": "https://files.pythonhosted.org/packages/45/f0/37d3a444d58047fddb2deb4cce5d8422532b4286fca54023da0179d20ad5/menyou-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be70a3b56d8b3126b563d7b8e212e5b1", "sha256": "8176bc39ce165cb34d90c60208cd1f0b8bbaa52457c796802c1d06834507914a"}, "downloads": -1, "filename": "menyou-1.0.tar.gz", "has_sig": false, "md5_digest": "be70a3b56d8b3126b563d7b8e212e5b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5318, "upload_time": "2019-12-18T18:51:37", "upload_time_iso_8601": "2019-12-18T18:51:37.539426Z", "url": "https://files.pythonhosted.org/packages/c8/f9/a9fe5887677a1cdc2bf9fbe4a03f6bb55e1e3f954d2ff140db6dd0348f99/menyou-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2d742323f7e19cbe2f533f4b252b6a4", "sha256": "644107963e55158a0f080a8a2fcc57702333114dc3ff0af75044c6bb41ecbd83"}, "downloads": -1, "filename": "menyou-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d2d742323f7e19cbe2f533f4b252b6a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17794, "upload_time": "2019-12-18T18:51:34", "upload_time_iso_8601": "2019-12-18T18:51:34.801249Z", "url": "https://files.pythonhosted.org/packages/45/f0/37d3a444d58047fddb2deb4cce5d8422532b4286fca54023da0179d20ad5/menyou-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be70a3b56d8b3126b563d7b8e212e5b1", "sha256": "8176bc39ce165cb34d90c60208cd1f0b8bbaa52457c796802c1d06834507914a"}, "downloads": -1, "filename": "menyou-1.0.tar.gz", "has_sig": false, "md5_digest": "be70a3b56d8b3126b563d7b8e212e5b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5318, "upload_time": "2019-12-18T18:51:37", "upload_time_iso_8601": "2019-12-18T18:51:37.539426Z", "url": "https://files.pythonhosted.org/packages/c8/f9/a9fe5887677a1cdc2bf9fbe4a03f6bb55e1e3f954d2ff140db6dd0348f99/menyou-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:16 2020"}