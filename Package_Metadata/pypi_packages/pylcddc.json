{"info": {"author": "Shenghao Yang", "author_email": "me@shenghaoyang.info", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# pylcddc\n\nA python library for interfacing with ``LCDd``, the server\ncomponent of the commonly known ``LCDproc``\n\nFeatures:\n\n- Object-oriented interface support for all native \n  ``LCDd`` widgets\n    - Full frame support, nest widget objects in frames, treat frames \n      like widget containers\n    - Support for user-created composite widgets, that can be used just \n      like native widgets (no easy API for now, changes to come later)\n\n- Decoupled thread to service ``LCDd`` screen switching responses \n- One I/O method to update screen, no funky exception handling everywhere\n\n# Installation\n``pip install pylcddc``\n\n# More TODOs\n- See ``TODO.md`` for more information and TODOs\n\n# Version support\n- Tested on ``LCDd`` packaged with ``LCDproc`` version ``0.5.9``\n- Protocol version ``0.3``\n\n# Modules for users\n- ``pylcddc.client``: client for LCDd\n- ``pylcddc.screen``: screens to attach to clients\n- ``pylcddc.widgets``: widgets to place in screens\n- ``pylcddc.exceptions``: exceptions raised by the library\n\n# Modules for developers\n- ``pylcddc.responses``: LCDd response decoder and abstractions\n- ``pylcddc.commands``: LCDd request generation\n\n# Examples\nDon't really use these for production code...\n\nSee more examples in ``/demo``\n\n## Simple usage for static display\n\n```python\nimport pylcddc.client as client\nimport pylcddc.widgets as widgets\nimport pylcddc.screen as screen\n\ntitle = widgets.Title('title_widget',\n                      'Hello, World!')\nmain_scr = screen.Screen('main', [title])\n\nc = client.Client('localhost', 13666)\nc.add_screen(main_scr)\ninput('Press any key to exit')\nc.close()\n```\n\n## Nest widgets in frames\n```python\nimport pylcddc.client as client\nimport pylcddc.widgets as widgets\nimport pylcddc.screen as screen\nimport platform\n\nflavorful_text_widgets = [widgets.String(f'flv_tx{i}', 1, 1 + i, text) for \n                          i, text in enumerate(\n        'now you see me\\nnow you dont\\nso scary\\nsuch wow'.splitlines())]\nframe_top = widgets.Frame('frame_top', flavorful_text_widgets, \n                          1, 1, 10, 1, 10, 4, \n                          widgets.Frame.Direction.VERTICAL, 8)\nplatform_text = widgets.Scroller('platform', 1, 2, 20, 1,\n                                 widgets.Scroller.Direction.HORIZONTAL, 1,\n                                 'pylcddc running on ' \n                                 + ' '.join(platform.uname()))\n\nmain_scr = screen.Screen('main', [frame_top, platform_text])\n\nc = client.Client('localhost', 13666)\nc.add_screen(main_scr)\ninput('Press any key to exit')\nc.close()\n```\n\n## Simple timed display updates and display attributes\n\n```python\nimport pylcddc.client as client\nimport pylcddc.widgets as widgets\nimport pylcddc.screen as screen\nimport pylcddc.exceptions as lcdexcept\nimport time\n\ntime_string = widgets.Scroller('time', 1, 1, 20, 2,\n                               widgets.Scroller.Direction.HORIZONTAL, 8,\n                               time.ctime())\nmain_scr = screen.Screen('main', [time_string],\n                         heartbeat=screen.ScreenAttributeValues.Heartbeat.OFF)\n\nc = client.Client('localhost', 13666)\nc.add_screen(main_scr)\n\nprint('pylcdd time demo\\nUse ^C to exit')\n\ntry:\n    while True:\n        time_string.text = time.ctime()\n        c.update_screens([main_scr])\n        print('updated time to: ', time.ctime())\n        time.sleep(0.1)\nexcept lcdexcept.RequestError as e:\n        print('LCDd refused our request', e)\nexcept lcdexcept.FatalError as e:\n        print('pylcddc fatal internal error', e)\nexcept KeyboardInterrupt:\n        print('exitting')\n\nc.close()  # there might be exceptions from OS system call failures here\n```\n\n# Licensing \nSee ``LICENSE.txt`` for more details\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shenghaoyang/pylcddc", "keywords": "lcdproc lcdd", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pylcddc", "package_url": "https://pypi.org/project/pylcddc/", "platform": "", "project_url": "https://pypi.org/project/pylcddc/", "project_urls": {"Bug Reports": "https://github.com/shenghaoyang/pylcddc/issues", "Homepage": "https://github.com/shenghaoyang/pylcddc", "Source": "https://github.com/shenghaoyang/pylcddc/"}, "release_url": "https://pypi.org/project/pylcddc/0.3.0/", "requires_dist": null, "requires_python": ">=3.6, < 4", "summary": "LCDproc LCDd client", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pylcddc</h1>\n<p>A python library for interfacing with <code>LCDd</code>, the server\ncomponent of the commonly known <code>LCDproc</code></p>\n<p>Features:</p>\n<ul>\n<li>\n<p>Object-oriented interface support for all native\n<code>LCDd</code> widgets</p>\n<ul>\n<li>Full frame support, nest widget objects in frames, treat frames\nlike widget containers</li>\n<li>Support for user-created composite widgets, that can be used just\nlike native widgets (no easy API for now, changes to come later)</li>\n</ul>\n</li>\n<li>\n<p>Decoupled thread to service <code>LCDd</code> screen switching responses</p>\n</li>\n<li>\n<p>One I/O method to update screen, no funky exception handling everywhere</p>\n</li>\n</ul>\n<h1>Installation</h1>\n<p><code>pip install pylcddc</code></p>\n<h1>More TODOs</h1>\n<ul>\n<li>See <code>TODO.md</code> for more information and TODOs</li>\n</ul>\n<h1>Version support</h1>\n<ul>\n<li>Tested on <code>LCDd</code> packaged with <code>LCDproc</code> version <code>0.5.9</code></li>\n<li>Protocol version <code>0.3</code></li>\n</ul>\n<h1>Modules for users</h1>\n<ul>\n<li><code>pylcddc.client</code>: client for LCDd</li>\n<li><code>pylcddc.screen</code>: screens to attach to clients</li>\n<li><code>pylcddc.widgets</code>: widgets to place in screens</li>\n<li><code>pylcddc.exceptions</code>: exceptions raised by the library</li>\n</ul>\n<h1>Modules for developers</h1>\n<ul>\n<li><code>pylcddc.responses</code>: LCDd response decoder and abstractions</li>\n<li><code>pylcddc.commands</code>: LCDd request generation</li>\n</ul>\n<h1>Examples</h1>\n<p>Don't really use these for production code...</p>\n<p>See more examples in <code>/demo</code></p>\n<h2>Simple usage for static display</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pylcddc.client</span> <span class=\"k\">as</span> <span class=\"nn\">client</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.widgets</span> <span class=\"k\">as</span> <span class=\"nn\">widgets</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.screen</span> <span class=\"k\">as</span> <span class=\"nn\">screen</span>\n\n<span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Title</span><span class=\"p\">(</span><span class=\"s1\">'title_widget'</span><span class=\"p\">,</span>\n                      <span class=\"s1\">'Hello, World!'</span><span class=\"p\">)</span>\n<span class=\"n\">main_scr</span> <span class=\"o\">=</span> <span class=\"n\">screen</span><span class=\"o\">.</span><span class=\"n\">Screen</span><span class=\"p\">(</span><span class=\"s1\">'main'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">title</span><span class=\"p\">])</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">13666</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add_screen</span><span class=\"p\">(</span><span class=\"n\">main_scr</span><span class=\"p\">)</span>\n<span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s1\">'Press any key to exit'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>Nest widgets in frames</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pylcddc.client</span> <span class=\"k\">as</span> <span class=\"nn\">client</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.widgets</span> <span class=\"k\">as</span> <span class=\"nn\">widgets</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.screen</span> <span class=\"k\">as</span> <span class=\"nn\">screen</span>\n<span class=\"kn\">import</span> <span class=\"nn\">platform</span>\n\n<span class=\"n\">flavorful_text_widgets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'flv_tx</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">)</span> <span class=\"k\">for</span> \n                          <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span>\n        <span class=\"s1\">'now you see me</span><span class=\"se\">\\n</span><span class=\"s1\">now you dont</span><span class=\"se\">\\n</span><span class=\"s1\">so scary</span><span class=\"se\">\\n</span><span class=\"s1\">such wow'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">())]</span>\n<span class=\"n\">frame_top</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">(</span><span class=\"s1\">'frame_top'</span><span class=\"p\">,</span> <span class=\"n\">flavorful_text_widgets</span><span class=\"p\">,</span> \n                          <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> \n                          <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"o\">.</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">VERTICAL</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"n\">platform_text</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Scroller</span><span class=\"p\">(</span><span class=\"s1\">'platform'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                                 <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Scroller</span><span class=\"o\">.</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">HORIZONTAL</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                                 <span class=\"s1\">'pylcddc running on '</span> \n                                 <span class=\"o\">+</span> <span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">uname</span><span class=\"p\">()))</span>\n\n<span class=\"n\">main_scr</span> <span class=\"o\">=</span> <span class=\"n\">screen</span><span class=\"o\">.</span><span class=\"n\">Screen</span><span class=\"p\">(</span><span class=\"s1\">'main'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">frame_top</span><span class=\"p\">,</span> <span class=\"n\">platform_text</span><span class=\"p\">])</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">13666</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add_screen</span><span class=\"p\">(</span><span class=\"n\">main_scr</span><span class=\"p\">)</span>\n<span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s1\">'Press any key to exit'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>Simple timed display updates and display attributes</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pylcddc.client</span> <span class=\"k\">as</span> <span class=\"nn\">client</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.widgets</span> <span class=\"k\">as</span> <span class=\"nn\">widgets</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.screen</span> <span class=\"k\">as</span> <span class=\"nn\">screen</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pylcddc.exceptions</span> <span class=\"k\">as</span> <span class=\"nn\">lcdexcept</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"n\">time_string</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Scroller</span><span class=\"p\">(</span><span class=\"s1\">'time'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                               <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Scroller</span><span class=\"o\">.</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">HORIZONTAL</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span>\n                               <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">())</span>\n<span class=\"n\">main_scr</span> <span class=\"o\">=</span> <span class=\"n\">screen</span><span class=\"o\">.</span><span class=\"n\">Screen</span><span class=\"p\">(</span><span class=\"s1\">'main'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">time_string</span><span class=\"p\">],</span>\n                         <span class=\"n\">heartbeat</span><span class=\"o\">=</span><span class=\"n\">screen</span><span class=\"o\">.</span><span class=\"n\">ScreenAttributeValues</span><span class=\"o\">.</span><span class=\"n\">Heartbeat</span><span class=\"o\">.</span><span class=\"n\">OFF</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">13666</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add_screen</span><span class=\"p\">(</span><span class=\"n\">main_scr</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'pylcdd time demo</span><span class=\"se\">\\n</span><span class=\"s1\">Use ^C to exit'</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">time_string</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">()</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">update_screens</span><span class=\"p\">([</span><span class=\"n\">main_scr</span><span class=\"p\">])</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'updated time to: '</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">())</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">lcdexcept</span><span class=\"o\">.</span><span class=\"n\">RequestError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'LCDd refused our request'</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">lcdexcept</span><span class=\"o\">.</span><span class=\"n\">FatalError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'pylcddc fatal internal error'</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'exitting'</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>  <span class=\"c1\"># there might be exceptions from OS system call failures here</span>\n</pre>\n<h1>Licensing</h1>\n<p>See <code>LICENSE.txt</code> for more details</p>\n\n          </div>"}, "last_serial": 4185361, "releases": {"0.0.0.dev2": [{"comment_text": "", "digests": {"md5": "4bb8b9eceeac2516ce0f6380b01b6458", "sha256": "68ca565de2a2a0add32706525871639d8a4f5b02e015c88c80704cbfa950b2da"}, "downloads": -1, "filename": "pylcddc-0.0.0.dev2.tar.gz", "has_sig": false, "md5_digest": "4bb8b9eceeac2516ce0f6380b01b6458", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, < 4", "size": 27453, "upload_time": "2018-04-18T06:24:32", "upload_time_iso_8601": "2018-04-18T06:24:32.417340Z", "url": "https://files.pythonhosted.org/packages/45/72/4f651e0d3a6776c11da9cc904758fa0cda880cba12e6563238d94d7a05c4/pylcddc-0.0.0.dev2.tar.gz", "yanked": false}], "0.0.0.dev3": [{"comment_text": "", "digests": {"md5": "63a922fa6cc422ac9ca6e94faecc1093", "sha256": "2484b86b58e4c7eb25b6386c2814b9e46f1bf035a4bd0e21f5acbf87b749c710"}, "downloads": -1, "filename": "pylcddc-0.0.0.dev3.tar.gz", "has_sig": false, "md5_digest": "63a922fa6cc422ac9ca6e94faecc1093", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, < 4", "size": 27655, "upload_time": "2018-04-18T15:19:55", "upload_time_iso_8601": "2018-04-18T15:19:55.514139Z", "url": "https://files.pythonhosted.org/packages/c6/43/052dd066581c367603b24e3120b2283361479f4052d404e81c5375976713/pylcddc-0.0.0.dev3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e0afe7c7b5359a524d2f7855f1236ad2", "sha256": "f65cd7d826b084f8ff914262745e51f25402fda80fbe8f51a53d2bd390e82a4c"}, "downloads": -1, "filename": "pylcddc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e0afe7c7b5359a524d2f7855f1236ad2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, < 4", "size": 29283, "upload_time": "2018-05-19T16:33:55", "upload_time_iso_8601": "2018-05-19T16:33:55.763041Z", "url": "https://files.pythonhosted.org/packages/d2/b1/615142b2e50037d01627124609efa032be2e31ebc2d5bfd85dbae0263e77/pylcddc-0.1.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9e97fa079ce4af9c667452079c29a41f", "sha256": "6bc890badad51cdc767f46bfbefb775d7cb8b0595cfa3a2395bb00d49ebf2a15"}, "downloads": -1, "filename": "pylcddc-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9e97fa079ce4af9c667452079c29a41f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, < 4", "size": 29282, "upload_time": "2018-08-19T14:36:55", "upload_time_iso_8601": "2018-08-19T14:36:55.024459Z", "url": "https://files.pythonhosted.org/packages/fc/61/02e79589e0ae86b88f290ad5f6a6d8286ea1d1674fd5872fc3666ec2f01f/pylcddc-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11e4c95a06f18285b4dbbc7fe0bdc834", "sha256": "066dd8d750ba91a1e2166c1405acba6b3e7d2168acc21216dc15a9c26e22cddb"}, "downloads": -1, "filename": "pylcddc-0.3.0.tar.gz", "has_sig": false, "md5_digest": "11e4c95a06f18285b4dbbc7fe0bdc834", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, < 4", "size": 30883, "upload_time": "2018-08-19T14:36:59", "upload_time_iso_8601": "2018-08-19T14:36:59.192524Z", "url": "https://files.pythonhosted.org/packages/32/e0/abf5fd4d11871dc7691b1832f63bafdc8ef79bc2387ee072b2106e6c2e02/pylcddc-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e97fa079ce4af9c667452079c29a41f", "sha256": "6bc890badad51cdc767f46bfbefb775d7cb8b0595cfa3a2395bb00d49ebf2a15"}, "downloads": -1, "filename": "pylcddc-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9e97fa079ce4af9c667452079c29a41f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, < 4", "size": 29282, "upload_time": "2018-08-19T14:36:55", "upload_time_iso_8601": "2018-08-19T14:36:55.024459Z", "url": "https://files.pythonhosted.org/packages/fc/61/02e79589e0ae86b88f290ad5f6a6d8286ea1d1674fd5872fc3666ec2f01f/pylcddc-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11e4c95a06f18285b4dbbc7fe0bdc834", "sha256": "066dd8d750ba91a1e2166c1405acba6b3e7d2168acc21216dc15a9c26e22cddb"}, "downloads": -1, "filename": "pylcddc-0.3.0.tar.gz", "has_sig": false, "md5_digest": "11e4c95a06f18285b4dbbc7fe0bdc834", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, < 4", "size": 30883, "upload_time": "2018-08-19T14:36:59", "upload_time_iso_8601": "2018-08-19T14:36:59.192524Z", "url": "https://files.pythonhosted.org/packages/32/e0/abf5fd4d11871dc7691b1832f63bafdc8ef79bc2387ee072b2106e6c2e02/pylcddc-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:17 2020"}