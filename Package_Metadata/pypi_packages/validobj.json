{"info": {"author": "Zahari Kassabov", "author_email": "zaharid@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "[![Tests](https://github.com/Zaharid/validobj/workflows/Python%20package/badge.svg)](https://github.com/Zaharid/validobj/actions?query=workflow%3A%22Python+package%22)\n[![Coverage](https://codecov.io/gh/Zaharid/validobj/branch/master/graph/badge.svg)](https://codecov.io/gh/Zaharid/validobj)\n[![PyPI](https://img.shields.io/pypi/v/validobj.svg)](https://pypi.org/project/validobj/)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/validobj.svg)](https://anaconda.org/conda-forge/validobj)\n[![RTD](https://readthedocs.org/projects/validobj/badge/)](https://readthedocs.org/projects/validobj/)\n\n# Validobj\n\nValidobj is library that takes semistructured data (for example JSON and YAML\nconfiguration files) and converts it to more structured Python objects. It\nplaces the emphasis on:\n\n  - [Good error messages](https://validobj.readthedocs.io/en/latest/errors.html)\n    (rather than avoiding extra work in the error handling\n\tcode).\n  - Schema defined in terms of\n\t[dataclasses](https://docs.python.org/3/library/dataclasses.html) and other\n\thigh level objects such as\n\t[enums](https://docs.python.org/3/library/enum.html), as well as a subset of\n\tthe [typing](https://docs.python.org/3/library/typing.html) module.\n  - Simplicity of implementation (rather than full generality).\n\nValidobj requires Python 3.7 and has no other dependencies.\n\n## Documentation\n\nhttps://validobj.readthedocs.io/en/latest/\n\n## Example\n\n\n 1. Define a using dataclasses\n\t```python\n\timport dataclasses\n\timport enum\n\tfrom typing import Mapping, Set, Tuple, List\n\n\n\n\tclass DiskPermissions(enum.Flag):\n\t\tREAD = enum.auto()\n\t\tWRITE = enum.auto()\n\t\tEXECUTE = enum.auto()\n\n\n\tclass OS(enum.Enum):\n\t\tmac = enum.auto()\n\t\twindows = enum.auto()\n\t\tlinux = enum.auto()\n\n\n\t@dataclasses.dataclass\n\tclass Job:\n\t\tname: str\n\t\tos: Set[OS]\n\t\tscript_path: str\n\t\tframework_version: Tuple[int, int] = (1, 0)\n\t\tdisk_permissions: DiskPermissions = DiskPermissions.READ\n\n\n\t@dataclasses.dataclass\n\tclass CIConf:\n\t\tstages: List[Job]\n\t\tglobal_environment: Mapping[str, str] = dataclasses.field(default_factory=dict)\n\t```\n 2. Process a dictionary input into it using Validobj\n\t```python\n\tfrom validobj import parse_input\n\n\tinp = {\n\t\t'global_environment': {'CI_ACTIVE': '1'},\n\t\t'stages': [\n\t\t\t{\n\t\t\t\t'name': 'compile',\n\t\t\t\t'os': ['linux', 'mac'],\n\t\t\t\t'script_path': 'build.sh',\n\t\t\t\t'disk_permissions': ['READ', 'WRITE', 'EXECUTE'],\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'test',\n\t\t\t\t'os': ['linux', 'mac'],\n\t\t\t\t'script_path': 'test.sh',\n\t\t\t\t'framework_version': [4, 0],\n\t\t\t},\n\t\t],\n\t}\n\tprint(parse_input(inp, CIConf))\n\t# This results in a dataclass instance with the correct types:\n\t#\n\t#CIConf(\n\t#    stages=[\n\t#        Job(\n\t#            name='compile',\n\t#            os={<OS.linux: 3>, <OS.mac:1>},\n\t#            script_path='build.sh',\n\t#            framework_version=(1, 0),\n\t#            disk_permissions=<DiskPermissions.EXECUTE|WRITE|READ: 7>,\n\t#        ),\n\t#        Job(\n\t#            name='test',\n\t#            os={<OS.linux: 3>, <OS.mac: 1>},\n\t#            script_path='test.sh',\n\t#            framework_version=(4, 0),\n\t#            disk_permissions='<DiskPermissions.READ: 1>',\n\t#        ),\n\t#    ],\n\t#    global_environment={'CI_ACTIVE': '1'},\n\t#)\n\t#\n\t```\n\nThe set of applied transformations is [described in the\ndocumentation](https://validobj.readthedocs.io/en/latest/inout.html)\n\n\n\n## Installation\n\nThe package can be installed with `pip`:\n\n```\npython3 -m pip install validobj\n```\n\nAs well as with `conda`, from the `conda-forge` channel:\n\n```\nconda install validobj -c conda-forge\n```\n\nThe code is hosted at\n\n<https://github.com/Zaharid/validobj>\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Zaharid/validobj", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "validobj", "package_url": "https://pypi.org/project/validobj/", "platform": "", "project_url": "https://pypi.org/project/validobj/", "project_urls": {"Homepage": "https://github.com/Zaharid/validobj"}, "release_url": "https://pypi.org/project/validobj/0.3.10/", "requires_dist": ["sphinx ; extra == \"doc\"", "ruamel.yaml ; extra == \"doc\"", "hypothesis ; extra == \"test\"", "pytest ; extra == \"test\"", "pytest-cov ; extra == \"test\""], "requires_python": "", "summary": "Validobj gives you valid objects", "version": "0.3.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/Zaharid/validobj/actions?query=workflow%3A%22Python+package%22\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec96a649593455f17680e02e225e0f2848555bea/68747470733a2f2f6769746875622e636f6d2f5a6168617269642f76616c69646f626a2f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/Zaharid/validobj\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aff983df076b4a63a2148f011fe8912be1aa4acb/68747470733a2f2f636f6465636f762e696f2f67682f5a6168617269642f76616c69646f626a2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/validobj/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3a04e4712a26951cf4f3dbd8d9589a0e58c53b1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76616c69646f626a2e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/validobj\" rel=\"nofollow\"><img alt=\"Conda Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a5fbee32c7aece00aa339080a246a50d3028b82/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f76616c69646f626a2e737667\"></a>\n<a href=\"https://readthedocs.org/projects/validobj/\" rel=\"nofollow\"><img alt=\"RTD\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01452f8aa20bf392aba84e88de240188a3eeb65c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f76616c69646f626a2f62616467652f\"></a></p>\n<h1>Validobj</h1>\n<p>Validobj is library that takes semistructured data (for example JSON and YAML\nconfiguration files) and converts it to more structured Python objects. It\nplaces the emphasis on:</p>\n<ul>\n<li><a href=\"https://validobj.readthedocs.io/en/latest/errors.html\" rel=\"nofollow\">Good error messages</a>\n(rather than avoiding extra work in the error handling\ncode).</li>\n<li>Schema defined in terms of\n<a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=\"nofollow\">dataclasses</a> and other\nhigh level objects such as\n<a href=\"https://docs.python.org/3/library/enum.html\" rel=\"nofollow\">enums</a>, as well as a subset of\nthe <a href=\"https://docs.python.org/3/library/typing.html\" rel=\"nofollow\">typing</a> module.</li>\n<li>Simplicity of implementation (rather than full generality).</li>\n</ul>\n<p>Validobj requires Python 3.7 and has no other dependencies.</p>\n<h2>Documentation</h2>\n<p><a href=\"https://validobj.readthedocs.io/en/latest/\" rel=\"nofollow\">https://validobj.readthedocs.io/en/latest/</a></p>\n<h2>Example</h2>\n<ol>\n<li>Define a using dataclasses\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dataclasses</span>\n<span class=\"kn\">import</span> <span class=\"nn\">enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Mapping</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">,</span> <span class=\"n\">List</span>\n\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DiskPermissions</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Flag</span><span class=\"p\">):</span>\n\t<span class=\"n\">READ</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\t<span class=\"n\">WRITE</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\t<span class=\"n\">EXECUTE</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">OS</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n\t<span class=\"n\">mac</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\t<span class=\"n\">windows</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\t<span class=\"n\">linux</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@dataclasses</span><span class=\"o\">.</span><span class=\"n\">dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Job</span><span class=\"p\">:</span>\n\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\t<span class=\"n\">os</span><span class=\"p\">:</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"n\">OS</span><span class=\"p\">]</span>\n\t<span class=\"n\">script_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\t<span class=\"n\">framework_version</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\t<span class=\"n\">disk_permissions</span><span class=\"p\">:</span> <span class=\"n\">DiskPermissions</span> <span class=\"o\">=</span> <span class=\"n\">DiskPermissions</span><span class=\"o\">.</span><span class=\"n\">READ</span>\n\n\n<span class=\"nd\">@dataclasses</span><span class=\"o\">.</span><span class=\"n\">dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">CIConf</span><span class=\"p\">:</span>\n\t<span class=\"n\">stages</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Job</span><span class=\"p\">]</span>\n\t<span class=\"n\">global_environment</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dataclasses</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">default_factory</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Process a dictionary input into it using Validobj\n<pre><span class=\"kn\">from</span> <span class=\"nn\">validobj</span> <span class=\"kn\">import</span> <span class=\"n\">parse_input</span>\n\n<span class=\"n\">inp</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'global_environment'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'CI_ACTIVE'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'stages'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n\t\t<span class=\"p\">{</span>\n\t\t\t<span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'compile'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"s1\">'os'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'linux'</span><span class=\"p\">,</span> <span class=\"s1\">'mac'</span><span class=\"p\">],</span>\n\t\t\t<span class=\"s1\">'script_path'</span><span class=\"p\">:</span> <span class=\"s1\">'build.sh'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"s1\">'disk_permissions'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'READ'</span><span class=\"p\">,</span> <span class=\"s1\">'WRITE'</span><span class=\"p\">,</span> <span class=\"s1\">'EXECUTE'</span><span class=\"p\">],</span>\n\t\t<span class=\"p\">},</span>\n\t\t<span class=\"p\">{</span>\n\t\t\t<span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"s1\">'os'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'linux'</span><span class=\"p\">,</span> <span class=\"s1\">'mac'</span><span class=\"p\">],</span>\n\t\t\t<span class=\"s1\">'script_path'</span><span class=\"p\">:</span> <span class=\"s1\">'test.sh'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"s1\">'framework_version'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n\t\t<span class=\"p\">},</span>\n\t<span class=\"p\">],</span>\n<span class=\"p\">}</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parse_input</span><span class=\"p\">(</span><span class=\"n\">inp</span><span class=\"p\">,</span> <span class=\"n\">CIConf</span><span class=\"p\">))</span>\n<span class=\"c1\"># This results in a dataclass instance with the correct types:</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#CIConf(</span>\n<span class=\"c1\">#    stages=[</span>\n<span class=\"c1\">#        Job(</span>\n<span class=\"c1\">#            name='compile',</span>\n<span class=\"c1\">#            os={&lt;OS.linux: 3&gt;, &lt;OS.mac:1&gt;},</span>\n<span class=\"c1\">#            script_path='build.sh',</span>\n<span class=\"c1\">#            framework_version=(1, 0),</span>\n<span class=\"c1\">#            disk_permissions=&lt;DiskPermissions.EXECUTE|WRITE|READ: 7&gt;,</span>\n<span class=\"c1\">#        ),</span>\n<span class=\"c1\">#        Job(</span>\n<span class=\"c1\">#            name='test',</span>\n<span class=\"c1\">#            os={&lt;OS.linux: 3&gt;, &lt;OS.mac: 1&gt;},</span>\n<span class=\"c1\">#            script_path='test.sh',</span>\n<span class=\"c1\">#            framework_version=(4, 0),</span>\n<span class=\"c1\">#            disk_permissions='&lt;DiskPermissions.READ: 1&gt;',</span>\n<span class=\"c1\">#        ),</span>\n<span class=\"c1\">#    ],</span>\n<span class=\"c1\">#    global_environment={'CI_ACTIVE': '1'},</span>\n<span class=\"c1\">#)</span>\n<span class=\"c1\">#</span>\n</pre>\n</li>\n</ol>\n<p>The set of applied transformations is <a href=\"https://validobj.readthedocs.io/en/latest/inout.html\" rel=\"nofollow\">described in the\ndocumentation</a></p>\n<h2>Installation</h2>\n<p>The package can be installed with <code>pip</code>:</p>\n<pre><code>python3 -m pip install validobj\n</code></pre>\n<p>As well as with <code>conda</code>, from the <code>conda-forge</code> channel:</p>\n<pre><code>conda install validobj -c conda-forge\n</code></pre>\n<p>The code is hosted at</p>\n<p><a href=\"https://github.com/Zaharid/validobj\" rel=\"nofollow\">https://github.com/Zaharid/validobj</a></p>\n\n          </div>"}, "last_serial": 6488907, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c83e8401cbacdb9779beaaf8a9530a6f", "sha256": "39e19310807a62a141ab55d9194677702c4492e457d3b86c7d3edf4b084937a4"}, "downloads": -1, "filename": "validobj-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c83e8401cbacdb9779beaaf8a9530a6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23812, "upload_time": "2020-01-08T12:43:09", "upload_time_iso_8601": "2020-01-08T12:43:09.417171Z", "url": "https://files.pythonhosted.org/packages/58/31/6f0526279f5123a773c3798ed419b2461f6567479fd50e3ee8796c78cb7c/validobj-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff013b291890d819acd1e4cc30866b74", "sha256": "5a2e78c18aaf7db88a9dc43eb17235c4399d019faf9690c244a74e0bb24ec33b"}, "downloads": -1, "filename": "validobj-0.1.tar.gz", "has_sig": false, "md5_digest": "ff013b291890d819acd1e4cc30866b74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17183, "upload_time": "2020-01-08T12:43:12", "upload_time_iso_8601": "2020-01-08T12:43:12.327274Z", "url": "https://files.pythonhosted.org/packages/1f/f4/c0bacb92b0e18b6c54d1fa071aa5c7347619b6ea7a6525ca548fe687777d/validobj-0.1.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6a509645a4720c8d69f3a6582eddc4a0", "sha256": "b940e9c778465bf18044e13cdb4e62a4bc12e4c9d91ef4e35cc45d6d4b030167"}, "downloads": -1, "filename": "validobj-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6a509645a4720c8d69f3a6582eddc4a0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9559, "upload_time": "2020-01-08T21:46:36", "upload_time_iso_8601": "2020-01-08T21:46:36.012102Z", "url": "https://files.pythonhosted.org/packages/88/5a/bbbc46608cf3406502d029fb0ab4d2b0f9f0022cab84b44d461c3e700011/validobj-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f00f9c0b39e5d172f025551cacbfa9", "sha256": "40057b156607fe9a9239d3b8694f7849f4e7bfdb5ba08026531c56d0085b65d5"}, "downloads": -1, "filename": "validobj-0.3.1.tar.gz", "has_sig": false, "md5_digest": "f2f00f9c0b39e5d172f025551cacbfa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17336, "upload_time": "2020-01-08T21:46:36", "upload_time_iso_8601": "2020-01-08T21:46:36.952588Z", "url": "https://files.pythonhosted.org/packages/66/5a/f0c65ab3989a33e408b56c9bf2536bb4f8665327a15ef068f6c93cbfd5b5/validobj-0.3.1.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "6414a25203022f50fec01ae775c74c3b", "sha256": "c31ce0ebf451eb520f235bb88091fccdf13154a32c48afbace8cb9148fb7e22d"}, "downloads": -1, "filename": "validobj-0.3.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6414a25203022f50fec01ae775c74c3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10173, "upload_time": "2020-01-20T17:23:07", "upload_time_iso_8601": "2020-01-20T17:23:07.314201Z", "url": "https://files.pythonhosted.org/packages/52/ef/0a95114a3375cadaac6da84128ec3808a499926568f458a5f54102897192/validobj-0.3.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f4a175591d75c2cf1d7fd3e9a1632e", "sha256": "6b9688201377b43785d41d65387fbffa83fc60bcf68c9eaeb7f5e49d4f0a15fe"}, "downloads": -1, "filename": "validobj-0.3.10.tar.gz", "has_sig": false, "md5_digest": "85f4a175591d75c2cf1d7fd3e9a1632e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18583, "upload_time": "2020-01-20T17:23:08", "upload_time_iso_8601": "2020-01-20T17:23:08.340994Z", "url": "https://files.pythonhosted.org/packages/6a/46/22efeaf6ba6322bb2928e336c219e154201ed9e36138290a960459ba48f1/validobj-0.3.10.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "999948325f2d4a0cbf9c42422650b3cf", "sha256": "1eb8ddfcb2271796612c5ded02cf233dbc3e9100056242c0e37f5d2df29e678f"}, "downloads": -1, "filename": "validobj-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "999948325f2d4a0cbf9c42422650b3cf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9577, "upload_time": "2020-01-09T22:15:20", "upload_time_iso_8601": "2020-01-09T22:15:20.539875Z", "url": "https://files.pythonhosted.org/packages/2b/11/a97f1122918ba4a16eef83d48fd73fdc32b2f6264c10011c8d13bea51064/validobj-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b77d8e2bd4482c82f0a70efa6f082e5b", "sha256": "7a8048677b89c00124ebd5d104ebd76108664ab949ee6e43c1faf9ff0999f42f"}, "downloads": -1, "filename": "validobj-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b77d8e2bd4482c82f0a70efa6f082e5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17381, "upload_time": "2020-01-09T22:15:22", "upload_time_iso_8601": "2020-01-09T22:15:22.368774Z", "url": "https://files.pythonhosted.org/packages/54/60/cf55c388ffe176cc26d9ad86204256d05c14b9165231c91812d25eea0936/validobj-0.3.2.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "15afe45f93e411cef1acf113531480b3", "sha256": "b240905d2cdfb607573eeaedc6f0a0c964f93ed5689895d331b3784427a00ab2"}, "downloads": -1, "filename": "validobj-0.3.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15afe45f93e411cef1acf113531480b3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9615, "upload_time": "2020-01-09T22:28:49", "upload_time_iso_8601": "2020-01-09T22:28:49.316204Z", "url": "https://files.pythonhosted.org/packages/41/78/e36ae4bd875a6db1031e97933c7e1a22f056110991ab728b3e94281e9acc/validobj-0.3.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c7e2b728f69e520b65cf685542ccc48", "sha256": "472f4630f248db4cfe30c8465dcd4a0005506d0648344b27324dff3d578f6c1b"}, "downloads": -1, "filename": "validobj-0.3.7.tar.gz", "has_sig": false, "md5_digest": "1c7e2b728f69e520b65cf685542ccc48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17420, "upload_time": "2020-01-09T22:28:50", "upload_time_iso_8601": "2020-01-09T22:28:50.460167Z", "url": "https://files.pythonhosted.org/packages/ac/d8/ce8d6d90288d6b258da6de7e1676018a5508b7e36904b30f7f428aedb61a/validobj-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "8a5bf71af94a3d8cbbb39648dcbf0d0b", "sha256": "9501d14a0ee4411d30ab23cde9d8e2d3f67062270a69288a88b8c26322b34943"}, "downloads": -1, "filename": "validobj-0.3.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a5bf71af94a3d8cbbb39648dcbf0d0b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9790, "upload_time": "2020-01-10T00:40:15", "upload_time_iso_8601": "2020-01-10T00:40:15.610372Z", "url": "https://files.pythonhosted.org/packages/57/48/a2e3c9d02be577d50549e531d92de83dc27ef893a82d8e5605035dc7948e/validobj-0.3.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa262061f6008ea2c01e77f0b8065a87", "sha256": "1e790b811c8c9c00dca49b5d66a64dfaa0c8e20c2e6ec76c8ebc7353f840ea41"}, "downloads": -1, "filename": "validobj-0.3.8.tar.gz", "has_sig": false, "md5_digest": "aa262061f6008ea2c01e77f0b8065a87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17979, "upload_time": "2020-01-10T00:40:17", "upload_time_iso_8601": "2020-01-10T00:40:17.095435Z", "url": "https://files.pythonhosted.org/packages/12/eb/94ab4d6c3db2075eaa8c7059be0f5a41a7836c934b516eaf514055c35da5/validobj-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "6fd8d56873c30d15ce846fc98cf0071f", "sha256": "e9e3a0d39e8b4bd7ffb87396da99eae8926b99abc9d958685d0c4e1b91f88517"}, "downloads": -1, "filename": "validobj-0.3.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fd8d56873c30d15ce846fc98cf0071f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9884, "upload_time": "2020-01-10T18:21:15", "upload_time_iso_8601": "2020-01-10T18:21:15.075139Z", "url": "https://files.pythonhosted.org/packages/f9/8c/4321d945d394e93449bb8353f8abcd31b312d3cb5641e19e54ef87e03ff4/validobj-0.3.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaef3715cdf380319893aed853032ba1", "sha256": "748dea0d24534224a3a048a5336b282c99faae7a91ddb479729176686884a900"}, "downloads": -1, "filename": "validobj-0.3.9.tar.gz", "has_sig": false, "md5_digest": "eaef3715cdf380319893aed853032ba1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18061, "upload_time": "2020-01-10T18:21:16", "upload_time_iso_8601": "2020-01-10T18:21:16.336669Z", "url": "https://files.pythonhosted.org/packages/80/94/3acd4dfaaae3346d0620e0ede469969bc8497893aa1b484dce798e299c58/validobj-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6414a25203022f50fec01ae775c74c3b", "sha256": "c31ce0ebf451eb520f235bb88091fccdf13154a32c48afbace8cb9148fb7e22d"}, "downloads": -1, "filename": "validobj-0.3.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6414a25203022f50fec01ae775c74c3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10173, "upload_time": "2020-01-20T17:23:07", "upload_time_iso_8601": "2020-01-20T17:23:07.314201Z", "url": "https://files.pythonhosted.org/packages/52/ef/0a95114a3375cadaac6da84128ec3808a499926568f458a5f54102897192/validobj-0.3.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f4a175591d75c2cf1d7fd3e9a1632e", "sha256": "6b9688201377b43785d41d65387fbffa83fc60bcf68c9eaeb7f5e49d4f0a15fe"}, "downloads": -1, "filename": "validobj-0.3.10.tar.gz", "has_sig": false, "md5_digest": "85f4a175591d75c2cf1d7fd3e9a1632e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18583, "upload_time": "2020-01-20T17:23:08", "upload_time_iso_8601": "2020-01-20T17:23:08.340994Z", "url": "https://files.pythonhosted.org/packages/6a/46/22efeaf6ba6322bb2928e336c219e154201ed9e36138290a960459ba48f1/validobj-0.3.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:04 2020"}