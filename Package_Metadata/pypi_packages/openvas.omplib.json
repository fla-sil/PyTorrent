{"info": {"author": "Hartmut Goebel", "author_email": "h.goebel@goebel-consult.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Security", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. -*- mode: rst -*-\n\n==========================\n`openvas.omplib`\n==========================\n\n------------------------------------------------------------------\nAn OMP (OpenVAS Management Protocol) client interface for Python.\n------------------------------------------------------------------\n\n:Author:  Hartmut Goebel <h.goebel@goebel-consult.de>\n:Version: Version 0.1.0\n:Copyright: GNU Public Licence v3 (GPLv3)\n:Homepage: http://www.openvas.org/\n\n`OpenVAS`__ (Open Vulnerability Assessment System) is a network security\nscanner with associated tools. OpenVAS Version 3 introduces a new core\ncomponent: The OpenVAS-Manager, a layer between OpenVAS-Scanner and\nvarious client applications such as OpenVAS-Client or Greenbone\nSecurity Assistant. Among other features, it adds server-side storage\nof scan results and it makes it unnecessary for a scan client to keep\nthe connection open until the scan finishes.\n\n__ http://www.openvas.org\n\nOpenVAS Management Protocol (OMP) is the protocol based on XML to talk\nto the OpenVAS-Manager. `openvas.omplib` is a pure-Python\nimplementation of OMP which allows easy access to the OpenVAS-Manager.\n\nThis package also includes a command line tool `omp-cli` for\ninteracting with openvas-manager. For easy of usage, this tool uses\nsub-commands much like svn or openssl does.\n\n\nExample::\n\n    manager = openvas.omplib.OMPClient(host=sensor)\n    manager.open(username, password)\n    manager.create_target(job_name, targets, comment)\n    task_id = manager.create_task(job_name, comment, config=config_name,\n                                  target=job_name)\n    report_id = manager.start_task(task_id)\n    # ... later ...\n    report = manager.get_report(report_id)\n    print etree.tostring(report)\n\n`openvas.opmlib` also supports a low-level interface where you can send\nOMP XML directly::\n\n    help_text = manager.xml('<help/>')\n\n\nExamples for `omp-cli` usage::\n\n    omp-cli --help             # get help\n    omp-cli get-report --help  # get help on subcommand get-report\n    omp-cli get-status         # list tasks with stati and report-ids\n\n                               # Retreive a report in PDF format\n    omp-cli get-report -fPDF 343435d6-91b0-11de-9478-ffd71f4c6f30 \\\n                       -o some-report.pdf\n\n.. \n  For more information please refer to the manpage or visit\n  the `project homepage <http://pdfposter.origo.ethz.ch/>`_.\n\n\nRequirements and Installation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n`openvas.omplib` requires\n\n* `Python 2.5`__ or higher with SSL support (which should be the\n   default on most platforms) (NB: Python 3.x is *not* supported)\n* `setuptools`__ for installation (see below).\n* `argparse`__ (already included in Python starting with Python 2.7)\n\n__ http://www.python.org/download/\n__ http://pypi.python.org/pypi/setuptools\n__ http://pypi.python.org/pypi/argparse\n\n\n:Hints for installing on Windows: Following the links above you will\n   find .msi and .exe-installers. Simply install them and continue\n   with `installing openvas.omplib`_.\n\n:Hints for installing on GNU/Linux: Most current GNU/Linux distributions\n   provide packages for the requirements. Look for packages names like\n   `python-setuptools` and `python-argparse`. Simply install them and\n   continue with `installing openvas.omplib`_.\n\n:Hint for installing on other platforms: Many vendors provide Python.\n   Please check your vendors software repository. Otherwise please\n   download Python 2.6 (or any higer version from the 2.x series) from\n   http://www.python.org/download/ and follow the installation\n   instructions there.\n\n   After installing Python, install `setuptools`__. You may want to\n   read `More Hints on Installing setuptools`_ first.\n\n__ http://pypi.python.org/pypi/setuptools\n\n   Using setuptools, compiling and installing the remaining\n   requirements is a piece of cake::\n\n     # if the system has network access\n     easy_install argparse\n\n     # without network access download argparse\n     # from http://pypi.python.org/pypi/argparse and run\n     easy_install argparse-*.zip\n\n\nInstalling openvas.omplib\n---------------------------------\n\nWhen you are reading this you most probably already downloaded and\nunpacked `openvas.omplib`. Thus installing is as easy as running::\n\n   python ./setup.py install\n\nOtherwise you may install directly using setuptools/easy_install. If\nyour system has network access installing `openvas.omplib` is a\nbreeze::\n\n     easy_install openvas.omplib\n\nWithout network access download `openvas.omplib` from\nhttp://pypi.python.org/pypi/openvas.omplib and run::\n\n     easy_install openvas.omplib-*.tar.gz\n\n\nMore Hints on Installing setuptools\n------------------------------------\n\n`openvas.omplib` uses setuptools for installation. Thus you need\neither\n\n  * network access, so the install script will automatically download\n    and install setuptools if they are not already installed\n\nor\n\n  * the correct version of setuptools preinstalled using the\n    `EasyInstall installation instructions`__. Those instructions also\n    have tips for dealing with firewalls as well as how to manually\n    download and install setuptools.\n\n__ http://peak.telecommunity.com/DevCenter/EasyInstall#installation-instructions\n\n\nCustom Installation Locations\n------------------------------\n\n`openvas.omplib` is just a single script (aka Python program). So you can\ncopy it where ever you want (maybe fixing the first line). But it's\neasier to just use::\n\n   # install to /usr/local/bin\n   python ./setup.py install --prefix /usr/local\n\n   # install to your Home directory (~/bin)\n   python ./setup.py install --home ~\n\n\nPlease mind: This effects also the installation of argparse (and\nsetuptools) if they are not already installed.\n\nFor more information about Custom Installation Locations please refer\nto the `Custom Installation Locations Instructions`__ before\ninstalling `openvas.omplib`.\n\n__ http://peak.telecommunity.com/DevCenter/EasyInstall#custom-installation-locations>", "description_content_type": null, "docs_url": null, "download_url": "http://wald.intevation.org/frs/?group_id=29", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.openvas.org/", "keywords": "OpenVAS,OMP,OpenVAS Management Protocol,Nessus", "license": "GPL 3.0", "maintainer": null, "maintainer_email": null, "name": "openvas.omplib", "package_url": "https://pypi.org/project/openvas.omplib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/openvas.omplib/", "project_urls": {"Download": "http://wald.intevation.org/frs/?group_id=29", "Homepage": "http://www.openvas.org/"}, "release_url": "https://pypi.org/project/openvas.omplib/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "An OMP (OpenVAS Management Protocol) client interface for Python", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Hartmut Goebel &lt;<a href=\"mailto:h.goebel%40goebel-consult.de\">h<span>.</span>goebel<span>@</span>goebel-consult<span>.</span>de</a>&gt;</td></tr>\n<tr><th>Version:</th>\n<td>Version 0.1.0</td></tr>\n<tr><th>Copyright:</th>\n<td>GNU Public Licence v3 (GPLv3)</td></tr>\n<tr><th>Homepage:</th><td><a href=\"http://www.openvas.org/\" rel=\"nofollow\">http://www.openvas.org/</a></td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"http://www.openvas.org\" rel=\"nofollow\">OpenVAS</a> (Open Vulnerability Assessment System) is a network security\nscanner with associated tools. OpenVAS Version 3 introduces a new core\ncomponent: The OpenVAS-Manager, a layer between OpenVAS-Scanner and\nvarious client applications such as OpenVAS-Client or Greenbone\nSecurity Assistant. Among other features, it adds server-side storage\nof scan results and it makes it unnecessary for a scan client to keep\nthe connection open until the scan finishes.</p>\n<p>OpenVAS Management Protocol (OMP) is the protocol based on XML to talk\nto the OpenVAS-Manager. <cite>openvas.omplib</cite> is a pure-Python\nimplementation of OMP which allows easy access to the OpenVAS-Manager.</p>\n<p>This package also includes a command line tool <cite>omp-cli</cite> for\ninteracting with openvas-manager. For easy of usage, this tool uses\nsub-commands much like svn or openssl does.</p>\n<p>Example:</p>\n<pre>manager = openvas.omplib.OMPClient(host=sensor)\nmanager.open(username, password)\nmanager.create_target(job_name, targets, comment)\ntask_id = manager.create_task(job_name, comment, config=config_name,\n                              target=job_name)\nreport_id = manager.start_task(task_id)\n# ... later ...\nreport = manager.get_report(report_id)\nprint etree.tostring(report)\n</pre>\n<p><cite>openvas.opmlib</cite> also supports a low-level interface where you can send\nOMP XML directly:</p>\n<pre>help_text = manager.xml('&lt;help/&gt;')\n</pre>\n<p>Examples for <cite>omp-cli</cite> usage:</p>\n<pre>omp-cli --help             # get help\nomp-cli get-report --help  # get help on subcommand get-report\nomp-cli get-status         # list tasks with stati and report-ids\n\n                           # Retreive a report in PDF format\nomp-cli get-report -fPDF 343435d6-91b0-11de-9478-ffd71f4c6f30 \\\n                   -o some-report.pdf\n</pre>\n<div id=\"requirements-and-installation\">\n<h2>Requirements and Installation</h2>\n<p><cite>openvas.omplib</cite> requires</p>\n<ul>\n<li><dl>\n<dt><a href=\"http://www.python.org/download/\" rel=\"nofollow\">Python 2.5</a> or higher with SSL support (which should be the</dt>\n<dd>default on most platforms) (NB: Python 3.x is <em>not</em> supported)</dd>\n</dl>\n</li>\n<li><a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a> for installation (see below).</li>\n<li><a href=\"http://pypi.python.org/pypi/argparse\" rel=\"nofollow\">argparse</a> (already included in Python starting with Python 2.7)</li>\n</ul>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Hints for installing on Windows:</th></tr>\n<tr><td>\u00a0</td><td><p>Following the links above you will\nfind .msi and .exe-installers. Simply install them and continue\nwith <a href=\"#installing-openvas-omplib\" rel=\"nofollow\">installing openvas.omplib</a>.</p>\n</td>\n</tr>\n<tr><th>Hints for installing on GNU/Linux:</th></tr>\n<tr><td>\u00a0</td><td><p>Most current GNU/Linux distributions\nprovide packages for the requirements. Look for packages names like\n<cite>python-setuptools</cite> and <cite>python-argparse</cite>. Simply install them and\ncontinue with <a href=\"#installing-openvas-omplib\" rel=\"nofollow\">installing openvas.omplib</a>.</p>\n</td>\n</tr>\n<tr><th>Hint for installing on other platforms:</th></tr>\n<tr><td>\u00a0</td><td><p>Many vendors provide Python.\nPlease check your vendors software repository. Otherwise please\ndownload Python 2.6 (or any higer version from the 2.x series) from\n<a href=\"http://www.python.org/download/\" rel=\"nofollow\">http://www.python.org/download/</a> and follow the installation\ninstructions there.</p>\n<p>After installing Python, install <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a>. You may want to\nread <a href=\"#more-hints-on-installing-setuptools\" rel=\"nofollow\">More Hints on Installing setuptools</a> first.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Using setuptools, compiling and installing the remaining\nrequirements is a piece of cake:</p>\n<pre># if the system has network access\neasy_install argparse\n\n# without network access download argparse\n# from http://pypi.python.org/pypi/argparse and run\neasy_install argparse-*.zip\n</pre>\n</blockquote>\n<div id=\"installing-openvas-omplib\">\n<h3>Installing openvas.omplib</h3>\n<p>When you are reading this you most probably already downloaded and\nunpacked <cite>openvas.omplib</cite>. Thus installing is as easy as running:</p>\n<pre>python ./setup.py install\n</pre>\n<p>Otherwise you may install directly using setuptools/easy_install. If\nyour system has network access installing <cite>openvas.omplib</cite> is a\nbreeze:</p>\n<pre>easy_install openvas.omplib\n</pre>\n<p>Without network access download <cite>openvas.omplib</cite> from\n<a href=\"http://pypi.python.org/pypi/openvas.omplib\" rel=\"nofollow\">http://pypi.python.org/pypi/openvas.omplib</a> and run:</p>\n<pre>easy_install openvas.omplib-*.tar.gz\n</pre>\n</div>\n<div id=\"more-hints-on-installing-setuptools\">\n<h3>More Hints on Installing setuptools</h3>\n<p><cite>openvas.omplib</cite> uses setuptools for installation. Thus you need\neither</p>\n<blockquote>\n<ul>\n<li>network access, so the install script will automatically download\nand install setuptools if they are not already installed</li>\n</ul>\n</blockquote>\n<p>or</p>\n<blockquote>\n<ul>\n<li>the correct version of setuptools preinstalled using the\n<a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall#installation-instructions\" rel=\"nofollow\">EasyInstall installation instructions</a>. Those instructions also\nhave tips for dealing with firewalls as well as how to manually\ndownload and install setuptools.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"custom-installation-locations\">\n<h3>Custom Installation Locations</h3>\n<p><cite>openvas.omplib</cite> is just a single script (aka Python program). So you can\ncopy it where ever you want (maybe fixing the first line). But it\u2019s\neasier to just use:</p>\n<pre># install to /usr/local/bin\npython ./setup.py install --prefix /usr/local\n\n# install to your Home directory (~/bin)\npython ./setup.py install --home ~\n</pre>\n<p>Please mind: This effects also the installation of argparse (and\nsetuptools) if they are not already installed.</p>\n<p>For more information about Custom Installation Locations please refer\nto the <a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall#custom-installation-locations&gt;\" rel=\"nofollow\">Custom Installation Locations Instructions</a> before\ninstalling <cite>openvas.omplib</cite>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 762567, "releases": {"0.0.1dev-r7491": [{"comment_text": "", "digests": {"md5": "c0050b782a989ce62983fcd87693b195", "sha256": "59b6555203471d9dc71c844d85d8bf4ac389372e366a9b5ff0c53d61db268751"}, "downloads": -1, "filename": "openvas.omplib-0.0.1dev-r7491.tar.bz2", "has_sig": false, "md5_digest": "c0050b782a989ce62983fcd87693b195", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30481, "upload_time": "2010-05-01T20:27:57", "upload_time_iso_8601": "2010-05-01T20:27:57.002563Z", "url": "https://files.pythonhosted.org/packages/2b/3d/4f20f390ae8c0ec1fa899260cdbe6cb4d7e9e425717f1d4a10dfaca79699/openvas.omplib-0.0.1dev-r7491.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "748865bab83bfbe4068172c509b19b90", "sha256": "717a7807fac029d0537768191e8c065e562ed8bce086dd233c24a2907a3761fc"}, "downloads": -1, "filename": "openvas.omplib-0.0.1dev-r7491.zip", "has_sig": false, "md5_digest": "748865bab83bfbe4068172c509b19b90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43080, "upload_time": "2010-05-01T20:28:00", "upload_time_iso_8601": "2010-05-01T20:28:00.135684Z", "url": "https://files.pythonhosted.org/packages/03/6d/b68ac38b4c8948ee6c7fed767daed9d9b8c4dc7fd07bbb8c7cf7e316847f/openvas.omplib-0.0.1dev-r7491.zip", "yanked": false}], "0.0.1dev-r7741": [{"comment_text": "", "digests": {"md5": "d3d74484ec667588e94c332b870fe6e2", "sha256": "194194bf959851b877527d84a804fb17f61cff254872d462d238ee877f9754f4"}, "downloads": -1, "filename": "openvas.omplib-0.0.1dev-r7741.tar.bz2", "has_sig": false, "md5_digest": "d3d74484ec667588e94c332b870fe6e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35915, "upload_time": "2010-05-17T20:11:01", "upload_time_iso_8601": "2010-05-17T20:11:01.709425Z", "url": "https://files.pythonhosted.org/packages/69/78/89009bfe45b56bf7f549f4061a35bd2c3da2efd394f65d6fc3f4c66f2d81/openvas.omplib-0.0.1dev-r7741.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd0232d0315e2d2273cc820dee4378e2", "sha256": "31f356635d35fc5f7e94d4966eb696e416484560a2b292a67d2fdfffd73ad97a"}, "downloads": -1, "filename": "openvas.omplib-0.0.1dev-r7741.zip", "has_sig": false, "md5_digest": "bd0232d0315e2d2273cc820dee4378e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51160, "upload_time": "2010-05-17T20:11:05", "upload_time_iso_8601": "2010-05-17T20:11:05.265265Z", "url": "https://files.pythonhosted.org/packages/77/07/4f3b2f526fff9a21db432eb6682f86d89a0b18afe9bea3280721fa885ad0/openvas.omplib-0.0.1dev-r7741.zip", "yanked": false}], "0.1.0": []}, "urls": [], "timestamp": "Fri May  8 03:02:21 2020"}