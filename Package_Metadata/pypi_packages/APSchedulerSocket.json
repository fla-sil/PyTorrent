{"info": {"author": "Rodrigo Ristow", "author_email": "rodrigo@maxttor.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "The purpose of the application is to solve the problem of having a unique 'APScheduler' object for a multithreaded application. The project aims to easily implement a client-server architecture to control the scheduled processes. Another advantage is that you can use the scheduler in distributed processes or servers.\n\nINSTALL\n=======\n\n::\n\n    $ pip install APSchedulerSocket\n\nUSAGE\n=====\n\n::\n\n    from apschedulersocket import schedulers\n    from datetime import datetime\n\n    def my_process():\n        print(\"Executing my process: Hello world!\")\n\n    # Show the protocol messages\n    schedulers.DEBUG = True\n\n    # New SchedulerServer\n    scheduler = schedulers.SchedulerServer(daemon=False)\n\n    # Check if the server was not already started by another thread/process\n    if not scheduler.client.is_server_running():\n        scheduler.add_job(func=my_process,\n                          id=\"my_process\",\n                          trigger='interval',\n                          next_run_time=datetime.now(),\n                          minutes=1)\n        # start the apscheduler and the server\n        print(\"Server started!\")\n        scheduler.start()\n\n    print(\"Server state (1=running):\",\n          scheduler.client.call([\"BackgroundScheduler\",\"state\"]))\n\n    print(\"The next run time of my_process:\",\n          scheduler.client.call([\"my_process\",\"next_run_time\"]))\n\n    print(\"Pause the job:\",\n          scheduler.client.call([\"my_process\",\"pause\"]))\n\n    print(\"Next run time of paused my_process (None=paused):\",\n          scheduler.client.call([\"my_process\",\"next_run_time\"]))\n\n    print(\"Resume the job:\",\n          scheduler.client.call([\"my_process\",\"resume\"]))\n\n    print(\"Wrong message to server:\",\n          scheduler.client.call([\"Can you also cook?\",]))\n\n    print(\"Shutdown!\",\n          scheduler.client.call([\"shutdown\",]))\n\n\nDEVELOP\n=======\n\n::\n\n    $ git clone https://github.com/rristow/APSchedulerSocket APSchedulerSocket\n    $ cd APSchedulerSocket\n    $ make\n\nRUNNING TESTS\n=============\n\n::\n\n    $ make test\n    # TODO!Changelog\n=========\n\n\n0.1 (unreleased)\n----------------\n\n- Initial release.\n  [Rodrigo Ristow]\nAPSchedulerSocket Copyright (c) 2012, Rodrigo Ristow\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. The name of the author may not be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "APSchedulerSocket", "package_url": "https://pypi.org/project/APSchedulerSocket/", "platform": "", "project_url": "https://pypi.org/project/APSchedulerSocket/", "project_urls": null, "release_url": "https://pypi.org/project/APSchedulerSocket/0.4.2/", "requires_dist": ["setuptools", "APScheduler", "zest.releaser ; extra == 'development'", "check-manifest ; extra == 'development'", "nose ; extra == 'test'", "nose-selecttests ; extra == 'test'", "coverage ; extra == 'test'", "unittest2 ; extra == 'test'", "flake8 ; extra == 'test'"], "requires_python": "", "summary": "The purpose of the application is to solve the problem of having a unique 'APScheduler' object for a multithreaded application. The project aims to easily implement a client-server architecture to control the scheduled processes. Another great advantage is that you can use the scheduler in distributed processes or servers.", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            The purpose of the application is to solve the problem of having a unique 'APScheduler' object for a multithreaded application. The project aims to easily implement a client-server architecture to control the scheduled processes. Another advantage is that you can use the scheduler in distributed processes or servers.<br><br>INSTALL<br>=======<br><br>::<br><br>    $ pip install APSchedulerSocket<br><br>USAGE<br>=====<br><br>::<br><br>    from apschedulersocket import schedulers<br>    from datetime import datetime<br><br>    def my_process():<br>        print(\"Executing my process: Hello world!\")<br><br>    # Show the protocol messages<br>    schedulers.DEBUG = True<br><br>    # New SchedulerServer<br>    scheduler = schedulers.SchedulerServer(daemon=False)<br><br>    # Check if the server was not already started by another thread/process<br>    if not scheduler.client.is_server_running():<br>        scheduler.add_job(func=my_process,<br>                          id=\"my_process\",<br>                          trigger='interval',<br>                          next_run_time=datetime.now(),<br>                          minutes=1)<br>        # start the apscheduler and the server<br>        print(\"Server started!\")<br>        scheduler.start()<br><br>    print(\"Server state (1=running):\",<br>          scheduler.client.call([\"BackgroundScheduler\",\"state\"]))<br><br>    print(\"The next run time of my_process:\",<br>          scheduler.client.call([\"my_process\",\"next_run_time\"]))<br><br>    print(\"Pause the job:\",<br>          scheduler.client.call([\"my_process\",\"pause\"]))<br><br>    print(\"Next run time of paused my_process (None=paused):\",<br>          scheduler.client.call([\"my_process\",\"next_run_time\"]))<br><br>    print(\"Resume the job:\",<br>          scheduler.client.call([\"my_process\",\"resume\"]))<br><br>    print(\"Wrong message to server:\",<br>          scheduler.client.call([\"Can you also cook?\",]))<br><br>    print(\"Shutdown!\",<br>          scheduler.client.call([\"shutdown\",]))<br><br><br>DEVELOP<br>=======<br><br>::<br><br>    $ git clone https://github.com/rristow/APSchedulerSocket APSchedulerSocket<br>    $ cd APSchedulerSocket<br>    $ make<br><br>RUNNING TESTS<br>=============<br><br>::<br><br>    $ make test<br>    # TODO!Changelog<br>=========<br><br><br>0.1 (unreleased)<br>----------------<br><br>- Initial release.<br>  [Rodrigo Ristow]<br>APSchedulerSocket Copyright (c) 2012, Rodrigo Ristow<br>All rights reserved.<br><br>Redistribution and use in source and binary forms, with or without<br>modification, are permitted provided that the following conditions<br>are met:<br>1. Redistributions of source code must retain the above copyright<br>   notice, this list of conditions and the following disclaimer.<br>2. Redistributions in binary form must reproduce the above copyright<br>   notice, this list of conditions and the following disclaimer in the<br>   documentation and/or other materials provided with the distribution.<br>3. The name of the author may not be used to endorse or promote products<br>   derived from this software without specific prior written permission.<br><br>THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR<br>IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES<br>OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.<br>IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,<br>INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT<br>NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,<br>DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY<br>THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT<br>(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF<br>THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.<br><br><br>\n          </div>"}, "last_serial": 4641385, "releases": {"0.4.2": [{"comment_text": "", "digests": {"md5": "8802ce02cd18086411a5786e13507294", "sha256": "c0e672044004c93e8e6b4bd7611a59aa2d382c2feee1fd87781bca38a871a48a"}, "downloads": -1, "filename": "APSchedulerSocket-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8802ce02cd18086411a5786e13507294", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6297, "upload_time": "2018-12-28T15:27:38", "upload_time_iso_8601": "2018-12-28T15:27:38.836109Z", "url": "https://files.pythonhosted.org/packages/df/84/4443d004c22de7a40982a2fe2d6c5c7f0334a8f9cf365d728000595c8b88/APSchedulerSocket-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54594d74be5c91853f4c1e163d7d8a64", "sha256": "9cce3e818cc7c601a5e019b7eb66a2094b4b7f3622e3aa9e4eda6019c8e399e9"}, "downloads": -1, "filename": "APSchedulerSocket-0.4.2.tar.gz", "has_sig": false, "md5_digest": "54594d74be5c91853f4c1e163d7d8a64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5094, "upload_time": "2018-12-28T15:27:40", "upload_time_iso_8601": "2018-12-28T15:27:40.047485Z", "url": "https://files.pythonhosted.org/packages/92/08/a13ea9a7e1823563d4f81e283e790f8bda14a2b03a268855b19ce39b2636/APSchedulerSocket-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8802ce02cd18086411a5786e13507294", "sha256": "c0e672044004c93e8e6b4bd7611a59aa2d382c2feee1fd87781bca38a871a48a"}, "downloads": -1, "filename": "APSchedulerSocket-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8802ce02cd18086411a5786e13507294", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6297, "upload_time": "2018-12-28T15:27:38", "upload_time_iso_8601": "2018-12-28T15:27:38.836109Z", "url": "https://files.pythonhosted.org/packages/df/84/4443d004c22de7a40982a2fe2d6c5c7f0334a8f9cf365d728000595c8b88/APSchedulerSocket-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54594d74be5c91853f4c1e163d7d8a64", "sha256": "9cce3e818cc7c601a5e019b7eb66a2094b4b7f3622e3aa9e4eda6019c8e399e9"}, "downloads": -1, "filename": "APSchedulerSocket-0.4.2.tar.gz", "has_sig": false, "md5_digest": "54594d74be5c91853f4c1e163d7d8a64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5094, "upload_time": "2018-12-28T15:27:40", "upload_time_iso_8601": "2018-12-28T15:27:40.047485Z", "url": "https://files.pythonhosted.org/packages/92/08/a13ea9a7e1823563d4f81e283e790f8bda14a2b03a268855b19ce39b2636/APSchedulerSocket-0.4.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:33 2020"}