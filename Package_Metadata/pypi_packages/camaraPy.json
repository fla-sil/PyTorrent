{"info": {"author": "Rodrigo Menegat Schuinski", "author_email": "rodrigoschuinski@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "# camaraPy\n\nO pacote camaraPy \u00e9 um wrapper, ainda em est\u00e1gio inicial de desenvolvimento, para as APIs da [C\u00e2mara dos Deputados](https://dadosabertos.camara.leg.br/).\n\nAgora, em vez de montar a requisi\u00e7\u00e3o manualmente usando pacotes como `urrlib` ou `requests`, voc\u00ea pode simplesmente instalar o **camaraPy** e fazer tudo em poucas linhas de c\u00f3digo:\n\n```\nfrom camaraPy.api_original import proposicoes\n\n# Define par\u00e2metros para a consulta\nparams = {\n    \"Tipo\"   : \"PEC\",\n    \"Numero\" : \"666\",\n    \"Ano\"    : \"2019\"\n}\n\n# Acessa as vota\u00e7\u00f5es da proposta\ndados = proposicoes.ObterVotacaoProposicao(params)\n```\n\nPor enquanto, o m\u00f3dulo funciona apenas com a [API original](https://www2.camara.leg.br/transparencia/dados-abertos/dados-abertos-legislativo), que \u00e9 mais est\u00e1vel e inclui o resultado das vota\u00e7\u00f5es em plen\u00e1rio, dado que ainda n\u00e3o est\u00e1 dispon\u00edvel no novo servi\u00e7o.\n\n## Como usar?\n\nTodas as requsi\u00e7\u00f5es descritas na [documenta\u00e7\u00e3o da C\u00e2mara](https://www2.camara.leg.br/transparencia/dados-abertos/dados-abertos-legislativo/dados-abertos-legislativo) foram implementadas, exatamente com a mesma grafia. O nome dos webservices, por\u00e9m, \u00e9 grafado seguindo um padr\u00e3o `lowercase_com_underlines`.\n\nAssim, para acessar o m\u00e9todo *ListarDiscursosPlenario* do Webservice *SessoesReunioes*, o usu\u00e1rio precisa executar o seguinte c\u00f3digo, no qual a vari\u00e1vel `params` \u00e9 um dicion\u00e1rio com os par\u00e2metros que deseja passar para a requisi\u00e7\u00e3o.\n\n```\nfrom camaraPy.api_original import sessoes_reunioes\n\nparams = { \"DataIni\" : \"10/10/2018\", \"DataFim\" : \"13/10/2018\" }\ndados = sessoes_reunioes.ListarDiscursosPlenario(params)\n```\n\nDe maneira semelhante, para acessar o m\u00e9todo *ObterDeputados* do Webservice *Deputados*, o c\u00f3digo seria o seguinte:\n```\nfrom camaraPy.api_original import deputados\n\ndados = deputados.ObterDeputados()\n```\n\nOs dados j\u00e1 v\u00eam parseados em um dicion\u00e1rio no estilo JSON, embora a API retorne os valores em formato XML. Isso \u00e9 poss\u00edvel porque o **camaraPy** usa o fenomenal pacote [`xmltodict`](https://github.com/martinblech/xmltodict)para fazer a convers\u00e3o. :heart:\n\nO **camaraPy** funciona s\u00f3 para o Python 3.6 ou superior.\n\n## Como instalar?\n\n`pip install camaraPy` \u2728\n\n\n## Coisas t\u00e9cnicas:\n\nO c\u00f3digo consiste, basicamente, em um script gen\u00e9rico que faz solicita\u00e7\u00f5es variadas para a API. Ele est\u00e1 dispon\u00edvel no diret\u00f3rio `core`. A partir desse programa, foram criadas fun\u00e7\u00f5es encapsuladoras em `deputados.py`, `orgaos.py`, `sessoes_reunioes.py` e `votacoes.py`. Elas apenas chamam as fun\u00e7\u00f5es definidas em `core.py` com os par\u00e2metros corretos.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RodrigoMenegat/camaraPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "camaraPy", "package_url": "https://pypi.org/project/camaraPy/", "platform": "", "project_url": "https://pypi.org/project/camaraPy/", "project_urls": {"Homepage": "https://github.com/RodrigoMenegat/camaraPy"}, "release_url": "https://pypi.org/project/camaraPy/0.0.5/", "requires_dist": ["requests (>=2.21.0)", "xmltodict (>=0.12.0)"], "requires_python": ">=3.6", "summary": "A wrapper for the Brazilian House of Representatives public data API", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>camaraPy</h1>\n<p>O pacote camaraPy \u00e9 um wrapper, ainda em est\u00e1gio inicial de desenvolvimento, para as APIs da <a href=\"https://dadosabertos.camara.leg.br/\" rel=\"nofollow\">C\u00e2mara dos Deputados</a>.</p>\n<p>Agora, em vez de montar a requisi\u00e7\u00e3o manualmente usando pacotes como <code>urrlib</code> ou <code>requests</code>, voc\u00ea pode simplesmente instalar o <strong>camaraPy</strong> e fazer tudo em poucas linhas de c\u00f3digo:</p>\n<pre><code>from camaraPy.api_original import proposicoes\n\n# Define par\u00e2metros para a consulta\nparams = {\n    \"Tipo\"   : \"PEC\",\n    \"Numero\" : \"666\",\n    \"Ano\"    : \"2019\"\n}\n\n# Acessa as vota\u00e7\u00f5es da proposta\ndados = proposicoes.ObterVotacaoProposicao(params)\n</code></pre>\n<p>Por enquanto, o m\u00f3dulo funciona apenas com a <a href=\"https://www2.camara.leg.br/transparencia/dados-abertos/dados-abertos-legislativo\" rel=\"nofollow\">API original</a>, que \u00e9 mais est\u00e1vel e inclui o resultado das vota\u00e7\u00f5es em plen\u00e1rio, dado que ainda n\u00e3o est\u00e1 dispon\u00edvel no novo servi\u00e7o.</p>\n<h2>Como usar?</h2>\n<p>Todas as requsi\u00e7\u00f5es descritas na <a href=\"https://www2.camara.leg.br/transparencia/dados-abertos/dados-abertos-legislativo/dados-abertos-legislativo\" rel=\"nofollow\">documenta\u00e7\u00e3o da C\u00e2mara</a> foram implementadas, exatamente com a mesma grafia. O nome dos webservices, por\u00e9m, \u00e9 grafado seguindo um padr\u00e3o <code>lowercase_com_underlines</code>.</p>\n<p>Assim, para acessar o m\u00e9todo <em>ListarDiscursosPlenario</em> do Webservice <em>SessoesReunioes</em>, o usu\u00e1rio precisa executar o seguinte c\u00f3digo, no qual a vari\u00e1vel <code>params</code> \u00e9 um dicion\u00e1rio com os par\u00e2metros que deseja passar para a requisi\u00e7\u00e3o.</p>\n<pre><code>from camaraPy.api_original import sessoes_reunioes\n\nparams = { \"DataIni\" : \"10/10/2018\", \"DataFim\" : \"13/10/2018\" }\ndados = sessoes_reunioes.ListarDiscursosPlenario(params)\n</code></pre>\n<p>De maneira semelhante, para acessar o m\u00e9todo <em>ObterDeputados</em> do Webservice <em>Deputados</em>, o c\u00f3digo seria o seguinte:</p>\n<pre><code>from camaraPy.api_original import deputados\n\ndados = deputados.ObterDeputados()\n</code></pre>\n<p>Os dados j\u00e1 v\u00eam parseados em um dicion\u00e1rio no estilo JSON, embora a API retorne os valores em formato XML. Isso \u00e9 poss\u00edvel porque o <strong>camaraPy</strong> usa o fenomenal pacote <a href=\"https://github.com/martinblech/xmltodict\" rel=\"nofollow\"><code>xmltodict</code></a>para fazer a convers\u00e3o. :heart:</p>\n<p>O <strong>camaraPy</strong> funciona s\u00f3 para o Python 3.6 ou superior.</p>\n<h2>Como instalar?</h2>\n<p><code>pip install camaraPy</code> \u2728</p>\n<h2>Coisas t\u00e9cnicas:</h2>\n<p>O c\u00f3digo consiste, basicamente, em um script gen\u00e9rico que faz solicita\u00e7\u00f5es variadas para a API. Ele est\u00e1 dispon\u00edvel no diret\u00f3rio <code>core</code>. A partir desse programa, foram criadas fun\u00e7\u00f5es encapsuladoras em <code>deputados.py</code>, <code>orgaos.py</code>, <code>sessoes_reunioes.py</code> e <code>votacoes.py</code>. Elas apenas chamam as fun\u00e7\u00f5es definidas em <code>core.py</code> com os par\u00e2metros corretos.</p>\n\n          </div>"}, "last_serial": 6490229, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "cc4f05ba373f02330651c8bfc22fb562", "sha256": "efac27af0c9ca44bca23d31f32c82384d6afac404346e4813e5904284fef3463"}, "downloads": -1, "filename": "camaraPy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cc4f05ba373f02330651c8bfc22fb562", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20972, "upload_time": "2019-04-17T19:25:25", "upload_time_iso_8601": "2019-04-17T19:25:25.416121Z", "url": "https://files.pythonhosted.org/packages/ca/ec/62beb175f12c647cd9745a3a428eb248bdbd9e4ad9a33adf3c9e61fd5cd5/camaraPy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ea671dceef2c8b5293d1b526d834c4d", "sha256": "61586c718c1c06e19815b2eea1e40761c13a58daf684389853ff5e4ec12876a8"}, "downloads": -1, "filename": "camaraPy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2ea671dceef2c8b5293d1b526d834c4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7920, "upload_time": "2019-04-17T19:25:26", "upload_time_iso_8601": "2019-04-17T19:25:26.752014Z", "url": "https://files.pythonhosted.org/packages/4a/52/6df54227eee23917287575c932d2e3feab85ef9ba75d6b58c3dfea980fd3/camaraPy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e091c0a827b38c64d2fc5f0a118f552a", "sha256": "de3f6ca9479cb961291bf789500ace03a85dcca25f124f185f2cbe33c98eb513"}, "downloads": -1, "filename": "camaraPy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e091c0a827b38c64d2fc5f0a118f552a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10868, "upload_time": "2019-04-17T19:50:32", "upload_time_iso_8601": "2019-04-17T19:50:32.611756Z", "url": "https://files.pythonhosted.org/packages/27/c3/b4175e3f0dedb7e57cf456f9e43b48e157ab54b38b331f3c361550b1ff7f/camaraPy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f4cdc5a5ef95e36e471304576569a49", "sha256": "81e20ad04f4b71043883b8bc1d744ec83cf50f59d0d2bcc73098be72005a52e8"}, "downloads": -1, "filename": "camaraPy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8f4cdc5a5ef95e36e471304576569a49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7644, "upload_time": "2019-04-17T19:50:34", "upload_time_iso_8601": "2019-04-17T19:50:34.149749Z", "url": "https://files.pythonhosted.org/packages/6a/23/b01d5dcdf4248077cb07d55fc2b3e907ed716ee8ee6ac801da50c182a301/camaraPy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5cb189942a0d552a372ede363ccbe14d", "sha256": "5e7d086e29a9433f77e4ee46b6df262da1584e46cec19e47b12575880272a24d"}, "downloads": -1, "filename": "camaraPy-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5cb189942a0d552a372ede363ccbe14d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20922, "upload_time": "2019-04-17T20:03:40", "upload_time_iso_8601": "2019-04-17T20:03:40.317310Z", "url": "https://files.pythonhosted.org/packages/88/de/9aab6771206b0d6d28b7082799f56ef69908f15f5a5fa06a4932e9cfc03c/camaraPy-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2739d9ec86f02969691af98c1cf81f9", "sha256": "c5b4f812cf38b3c9bdb28825dedf5f15e5c8de96eea17ce6829d7a5762a91913"}, "downloads": -1, "filename": "camaraPy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a2739d9ec86f02969691af98c1cf81f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7753, "upload_time": "2019-04-17T20:03:41", "upload_time_iso_8601": "2019-04-17T20:03:41.710351Z", "url": "https://files.pythonhosted.org/packages/7a/b9/e13a92288590d77f48e4e8009ba6b393be9b1c443b1fefb043ecd3cda0a0/camaraPy-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5b0617bb131e64787ca08dac21cd4ea8", "sha256": "2b198f114a7504d6a32cb1881897978e786fc3a8f1367982b265c3778519259c"}, "downloads": -1, "filename": "camaraPy-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5b0617bb131e64787ca08dac21cd4ea8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21145, "upload_time": "2020-01-20T21:07:42", "upload_time_iso_8601": "2020-01-20T21:07:42.566180Z", "url": "https://files.pythonhosted.org/packages/56/1b/cd53d3bb18658f64fb502985cc8f0c30fa0662ba924b5628368a12a431cf/camaraPy-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7fab42df1b924188e4ed32381a200e2", "sha256": "97e6402859645887d67f9a00fb9aae05bd7175d20105255115cd559938db3401"}, "downloads": -1, "filename": "camaraPy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b7fab42df1b924188e4ed32381a200e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7915, "upload_time": "2020-01-20T21:07:44", "upload_time_iso_8601": "2020-01-20T21:07:44.130003Z", "url": "https://files.pythonhosted.org/packages/73/e9/107e78b2820d1326c32928b001bbe579f8964da805f257f7f053b1ad7584/camaraPy-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b0617bb131e64787ca08dac21cd4ea8", "sha256": "2b198f114a7504d6a32cb1881897978e786fc3a8f1367982b265c3778519259c"}, "downloads": -1, "filename": "camaraPy-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5b0617bb131e64787ca08dac21cd4ea8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21145, "upload_time": "2020-01-20T21:07:42", "upload_time_iso_8601": "2020-01-20T21:07:42.566180Z", "url": "https://files.pythonhosted.org/packages/56/1b/cd53d3bb18658f64fb502985cc8f0c30fa0662ba924b5628368a12a431cf/camaraPy-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7fab42df1b924188e4ed32381a200e2", "sha256": "97e6402859645887d67f9a00fb9aae05bd7175d20105255115cd559938db3401"}, "downloads": -1, "filename": "camaraPy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b7fab42df1b924188e4ed32381a200e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7915, "upload_time": "2020-01-20T21:07:44", "upload_time_iso_8601": "2020-01-20T21:07:44.130003Z", "url": "https://files.pythonhosted.org/packages/73/e9/107e78b2820d1326c32928b001bbe579f8964da805f257f7f053b1ad7584/camaraPy-0.0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:35 2020"}