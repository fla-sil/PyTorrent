{"info": {"author": "Jacob Wunder", "author_email": "public@jacobwunder.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "Otek\n======\n\nOtek is a command line tool to help you make new projects with ease.\n\nOtek stores templates of projects so you don\u2019t have to remake the same\nfile structure every time your start developing a new idea. Just make the\ntemplate once and keep getting started from that. Otek avoids being\nopinonated because the user knows what project format is best. This is\ndifferent from projects like `yeoman`_ where the user has no control over their\nproject structure.\n\n**What's with the name?**\n\"Otek\" is a translitaterion of the hebrew word for \"copy\". I'm using hebrew because\nusing a different language is the only way to find a name that wasn't taken.\n\nInstallation\n~~~~~~~~~~~~\n\nJust use pip!\n\n.. code:: bash\n\n    pip install otek\n\n.otek Folder\n~~~~~~~~~~~~\n\nIn the `.otek` folder there's an `otekrc` which stores the defaults values for\nvariables in JSON format.  It supports full JSON.  To see how to use variables, read the next section.\n\n\nTemplates\n~~~~~~~~~\n\nTemplates let you pre-process your projects with different variables.  First\ncreate a template project in your `~/.otek` folder.  This will look like\n\n.. code:: python\n\n    # ~/.otek/example-project/main.py\n    __author__ = '<% name %>'\n\n    print('hello, world.  This is the <% PROJNAME %> ')\n\nNext create a new project for your template to be created\n\n.. code:: bash\n\n     $ mkdir example && cd example\n     $ otek create example-project\n\nNow our main python file has subsituted the `name` for `Jacob Wunder`\n\n.. code:: python\n\n    # ~/Documents/example/main.py\n    __author__ = 'Jacob Wunder'\n\n    print('hello, world.  This is the example-project ')\n\nTo change values for certain variables on a project to project basis, just use\nthe `-v` flag followed by a variable name. WARNING: only works for top-level variables.\n\n.. code:: bash\n\n    otek create example-project -v name=\"Linus Torvalds\"\n\nNow value of `name` is 'Linus Torvalds' so the `__author__` will be Linus Torvalds\n\n.. code:: python\n\n    # ~/Documents/example/main.py\n    __author__ = 'Linus Torvalds'\n\n    print('hello, world.  This is the example-project ')\n\n``create`` Script\n~~~~~~~~~~~~~~~~~\n\nNeed more than files to create your project?  Just create a file called ``create``\nwhich will be run upon creation time as a bash script.  This could be used to\nrun `npm init` or `npm install` if you already have a default package.json.\n\nRoadmap\n~~~~~~~\n\n -  Download other people\u2019s project templates using github in a similar way to homebrew formulae\n\n.. _yeoman: http://yeoman.io", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jaywunder/otek", "keywords": "project builder cli tool", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "otek", "package_url": "https://pypi.org/project/otek/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/otek/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jaywunder/otek"}, "release_url": "https://pypi.org/project/otek/0.1.13/", "requires_dist": null, "requires_python": null, "summary": "An unopinionated project builder for everyone.", "version": "0.1.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Otek is a command line tool to help you make new projects with ease.</p>\n<p>Otek stores templates of projects so you don\u2019t have to remake the same\nfile structure every time your start developing a new idea. Just make the\ntemplate once and keep getting started from that. Otek avoids being\nopinonated because the user knows what project format is best. This is\ndifferent from projects like <a href=\"http://yeoman.io\" rel=\"nofollow\">yeoman</a> where the user has no control over their\nproject structure.</p>\n<p><strong>What\u2019s with the name?</strong>\n\u201cOtek\u201d is a translitaterion of the hebrew word for \u201ccopy\u201d. I\u2019m using hebrew because\nusing a different language is the only way to find a name that wasn\u2019t taken.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Just use pip!</p>\n<pre>pip install otek\n</pre>\n</div>\n<div id=\"otek-folder\">\n<h2>.otek Folder</h2>\n<p>In the <cite>.otek</cite> folder there\u2019s an <cite>otekrc</cite> which stores the defaults values for\nvariables in JSON format.  It supports full JSON.  To see how to use variables, read the next section.</p>\n</div>\n<div id=\"templates\">\n<h2>Templates</h2>\n<p>Templates let you pre-process your projects with different variables.  First\ncreate a template project in your <cite>~/.otek</cite> folder.  This will look like</p>\n<pre><span class=\"c1\"># ~/.otek/example-project/main.py</span>\n<span class=\"n\">__author__</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;% name %&gt;'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'hello, world.  This is the &lt;% PROJNAME %&gt; '</span><span class=\"p\">)</span>\n</pre>\n<p>Next create a new project for your template to be created</p>\n<pre>$ mkdir example <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> example\n$ otek create example-project\n</pre>\n<p>Now our main python file has subsituted the <cite>name</cite> for <cite>Jacob Wunder</cite></p>\n<pre><span class=\"c1\"># ~/Documents/example/main.py</span>\n<span class=\"n\">__author__</span> <span class=\"o\">=</span> <span class=\"s1\">'Jacob Wunder'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'hello, world.  This is the example-project '</span><span class=\"p\">)</span>\n</pre>\n<p>To change values for certain variables on a project to project basis, just use\nthe <cite>-v</cite> flag followed by a variable name. WARNING: only works for top-level variables.</p>\n<pre>otek create example-project -v <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Linus Torvalds\"</span>\n</pre>\n<p>Now value of <cite>name</cite> is \u2018Linus Torvalds\u2019 so the <cite>__author__</cite> will be Linus Torvalds</p>\n<pre><span class=\"c1\"># ~/Documents/example/main.py</span>\n<span class=\"n\">__author__</span> <span class=\"o\">=</span> <span class=\"s1\">'Linus Torvalds'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'hello, world.  This is the example-project '</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"create-script\">\n<h2><tt>create</tt> Script</h2>\n<p>Need more than files to create your project?  Just create a file called <tt>create</tt>\nwhich will be run upon creation time as a bash script.  This could be used to\nrun <cite>npm init</cite> or <cite>npm install</cite> if you already have a default package.json.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<blockquote>\n<ul>\n<li>Download other people\u2019s project templates using github in a similar way to homebrew formulae</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 2085149, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "86670541d625eec4a7c2b590fe16a7be", "sha256": "a8ac7ac6164b37c893fbb82bed69caf938ceb6e504c8b3af46dfe39c4279028e"}, "downloads": -1, "filename": "otek-0.1.10.tar.gz", "has_sig": false, "md5_digest": "86670541d625eec4a7c2b590fe16a7be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4202, "upload_time": "2016-04-26T16:40:10", "upload_time_iso_8601": "2016-04-26T16:40:10.641839Z", "url": "https://files.pythonhosted.org/packages/a9/90/994116be52be9ef261a49030c4380a4e4e76a5cd08c3e333223a0a057413/otek-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "5dc22b61f24b8b2529866f425047c4a5", "sha256": "9e7d5dc8ff0a2404360e7e002c0acb7f293c957b1ab0794d0f3c3761c955f77f"}, "downloads": -1, "filename": "otek-0.1.11.tar.gz", "has_sig": false, "md5_digest": "5dc22b61f24b8b2529866f425047c4a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4238, "upload_time": "2016-04-26T16:46:33", "upload_time_iso_8601": "2016-04-26T16:46:33.495064Z", "url": "https://files.pythonhosted.org/packages/43/fb/0f98a5512de321233a7a0c927d2c925c93b98b44b827633e55f72d82696b/otek-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "ef65b3c66a4d185802ec8936d39e01e8", "sha256": "e63c85d64bead59543b5bb5e64b287b4210d8e8945f8306dd3686358dedba534"}, "downloads": -1, "filename": "otek-0.1.12.tar.gz", "has_sig": false, "md5_digest": "ef65b3c66a4d185802ec8936d39e01e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4198, "upload_time": "2016-04-26T16:54:42", "upload_time_iso_8601": "2016-04-26T16:54:42.840362Z", "url": "https://files.pythonhosted.org/packages/ef/9c/c0301d5eb06d1ba7084f7a33b65180c64d90911b9c0e7dd18191b7246da0/otek-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "10366c2c645d6a4f2e83bf2bade2cd34", "sha256": "5c2265e7d29860bf83edafdd95b06808b67fcba44e1a698806072819973aec18"}, "downloads": -1, "filename": "otek-0.1.13.tar.gz", "has_sig": false, "md5_digest": "10366c2c645d6a4f2e83bf2bade2cd34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4198, "upload_time": "2016-04-26T17:03:47", "upload_time_iso_8601": "2016-04-26T17:03:47.149854Z", "url": "https://files.pythonhosted.org/packages/45/dc/dde55ed4aa87be04a07b9e3aa018c320fe3d88afdb560780a4d4cfaed10c/otek-0.1.13.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "64f4a6b06f1def8395e2d41855b3ac32", "sha256": "7bc442f86deaa55dc31cbc99da51310a8985b5b3ee13abe1a19bf3fa06507b85"}, "downloads": -1, "filename": "otek-0.1.6.tar.gz", "has_sig": false, "md5_digest": "64f4a6b06f1def8395e2d41855b3ac32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4165, "upload_time": "2016-04-25T16:14:29", "upload_time_iso_8601": "2016-04-25T16:14:29.560308Z", "url": "https://files.pythonhosted.org/packages/fd/7a/95d7a773bfbc1ceaa12712eec874674f76bbe60563aa901f5f8781ae1486/otek-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "572d71429d75f7bbd6cbd0ac801dcb2d", "sha256": "4775fcf768d7dbba0853bf07cadd5cc76d228c47b97b9e9da6816d9d5319a53c"}, "downloads": -1, "filename": "otek-0.1.7.tar.gz", "has_sig": false, "md5_digest": "572d71429d75f7bbd6cbd0ac801dcb2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4173, "upload_time": "2016-04-26T12:43:08", "upload_time_iso_8601": "2016-04-26T12:43:08.770100Z", "url": "https://files.pythonhosted.org/packages/74/e8/7b2ac3330b1ff6586a24d1d05a6b329688bc2a92e73cea8fdc68987fe985/otek-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "79ea33eae272eeafd13ec865fa4b5b1e", "sha256": "86b198400b3d6ed5e30c5c4c2c13152050b949b2cdfe91090892a6c270bd70f0"}, "downloads": -1, "filename": "otek-0.1.8.tar.gz", "has_sig": false, "md5_digest": "79ea33eae272eeafd13ec865fa4b5b1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4174, "upload_time": "2016-04-26T16:09:36", "upload_time_iso_8601": "2016-04-26T16:09:36.236961Z", "url": "https://files.pythonhosted.org/packages/07/0a/b81f46ed5d4e55989bb5e8fc71dbaaf15cd36207b0b61db0ab995d28715b/otek-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "b03e75b643dcc2441e52352ac265af0f", "sha256": "5e4a13aa49891a526c979824a860c1dd769613a0eb1616b2e4b631706adeb5ea"}, "downloads": -1, "filename": "otek-0.1.9.tar.gz", "has_sig": false, "md5_digest": "b03e75b643dcc2441e52352ac265af0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4201, "upload_time": "2016-04-26T16:35:39", "upload_time_iso_8601": "2016-04-26T16:35:39.525911Z", "url": "https://files.pythonhosted.org/packages/9c/69/0166d566a68e5ac74268041b73eb31ace203ce85f01dfdaf0a3d19c11060/otek-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10366c2c645d6a4f2e83bf2bade2cd34", "sha256": "5c2265e7d29860bf83edafdd95b06808b67fcba44e1a698806072819973aec18"}, "downloads": -1, "filename": "otek-0.1.13.tar.gz", "has_sig": false, "md5_digest": "10366c2c645d6a4f2e83bf2bade2cd34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4198, "upload_time": "2016-04-26T17:03:47", "upload_time_iso_8601": "2016-04-26T17:03:47.149854Z", "url": "https://files.pythonhosted.org/packages/45/dc/dde55ed4aa87be04a07b9e3aa018c320fe3d88afdb560780a4d4cfaed10c/otek-0.1.13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:51 2020"}