{"info": {"author": "Dilawar Singh", "author_email": "dilawar@ncbs.res.in", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/BhallaLab/FindSim.svg?branch=stable)](https://travis-ci.org/BhallaLab/FindSim)\n\n# FindSim\n\nFramework for Integration of Neuronal Data and SIgnaling Models. The associated paper is available \nat [https://doi.org/10.3389/fninf.2018.00038](https://doi.org/10.3389/fninf.2018.00038)\n\n# About\n\nThe FindSim project maps models of neural and cellular signaling to \nexperimental protocols and readouts. It runs the experiment on the model, and\nprovides a score that reports how closely the two match.\n\n# LICENSE\nThis file and the files in this repository are licensed under GPL v3 or later.\n\n# Install \n\nOne can get `FindSim` using `python-pip`.\n\nTo install last stable release (__NOTE__ This uses moose version 3.1.4 (outdated\nwith this release))\n\n     $ pip install FindSim \n\nOr, to install the nightly built,\n\n     $ pip install FinSim --pre   # recommended \n\nAlternatively, you can download the source code and install it yourself.\n\n1. Install MOOSE which can be found here https://moose.ncbs.res.in/readthedocs/install/install.html  \n2. Install FindSim\n\n```\ngit clone https://github.com/BhallaLab/FindSim\ncd FindSim\npython setup.py install  \n```\n\nAfter successful installation, two commands are available at your disposal\n`findsim` and `findsim_parallel`. To see the help message, pass `-h` option to\neither of these commands. For example, `findsim -h` will show you following\nmessage.\n\n```\nusage: findsim [-h] [-m MODEL] [-d DUMP_SUBSET] [-p PARAM_FILE] [-t] [-hp]\n               [-hs] [-o] [-s SCALE_PARAM SCALE_PARAM SCALE_PARAM]\n               [-settle_time SETTLE_TIME]\n               script\n\nFindSim argument parser This program loads a kinetic model, and runs it with\nthe specified stimuli. The output is then compared with expected output\nspecified in the same file, to generate a model score.\n\npositional arguments:\n  script                Required: filename of experiment spec, in tsv format.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MODEL, --model MODEL\n                        Optional: model filename, .g or .xml\n  -d DUMP_SUBSET, --dump_subset DUMP_SUBSET\n                        Optional: dump selected subset of model into named\n                        file\n  -p PARAM_FILE, --param_file PARAM_FILE\n                        Optional: Generate file of tweakable params belonging\n                        to selected subset of model\n  -t, --tabulate_output\n                        Flag: Print table of plot values. Default is NOT to\n                        print table\n  -hp, --hide_plot      Hide plot output of simulation along with expected\n                        values. Default is to show plot.\n  -hs, --hide_subplots  Hide subplot output of simulation. By default the\n                        graphs include dotted lines to indicate individual\n                        quantities (e.g., states of a molecule) that are being\n                        summed to give a total response. This flag turns off\n                        just those dotted lines, while leaving the main plot\n                        intact.\n  -o, --optimize_elec   Optimize electrical computation. By default the\n                        electrical computation runs for the entire duration of\n                        the simulation. With this flag the system turns off\n                        the electrical engine except during the times when\n                        electrical stimuli are being given. This can be *much*\n                        faster.\n  -s SCALE_PARAM SCALE_PARAM SCALE_PARAM, --scale_param SCALE_PARAM SCALE_PARAM SCALE_PARAM\n                        Scale specified object.field by ratio.\n  -settle_time SETTLE_TIME, --settle_time SETTLE_TIME\n                        Run model for specified settle time and return dict of\n                        {path,conc}.\n\n```\n\nCommand `findsim_parellel` is a helper utility: it runs multiple simulations\nusing `findsim` in parellel.\n\n# Quick start\n\nTo run one of the example experiments on the default model (`synSynth7.g`) and generate a graph \nto compare model to experiment.  \n\n```\nfindsim Curated/FindSim-Jain2009-Fig2B.tsv  \n```\n\nYou can also pass the model explicitly, \n\n```\nfindsim Curated/FindSim-Jain2009-Fig2B.tsv --model models/synSynth7.g  \n```\n\n\n## Batch run\n\nTo findSim program on all tsv files in the specified directory, computes their\nscores, and prints out basic stats of the scores, you should use\n`findsim_parallel` command.\n\n```\nfindsim_parellel Curated -n 8 \n```\n\nIt will run the entire set of `Curated` experiments in parallel using 8\nindependant processes (it will be effectively if your computer has at least 8\ncores). The value of `-n` should not be more than `N+1` where `N` is the number\nof processors on your system (use system utility `nproc` to see this number).\n\nMore detailed invocation of this command looks like the following:\n\n```\nfindsim_parallel path/to/tsv/files -n 6 --model synSynth7.g\n```\n\n# Repository organization\n\n    FindSim/             \t\t: project directory  \n    FindSim/stable\t\t\t: Stable branch. Stable version of `develop` branch  \n    FindSim/Curated\t   \t\t: Folder contains FindSim worksheets to which the model is well fit.\n    FindSim/models\t\t\t: Model files \n    FindSim/findSim.py\t\t\t: Main findSim script  \n    FindSim/runAllParallel.py\t\t: Batch/parallel wrapper script.  \n    FindSim/FindSim-Exptworksheet.xlsx\t: Template worksheet with inline help and units, for Microsoft Excel.  \n    FindSim/FindSim-Exptworksheet.ods\t: Template worksheet with inline help and units, for Libre Office.  \n    FindSim/FindSim-Schema.xml \t\t: Schema for tsv files for worksheet.  \n    FindSim/README.md\t\t\t: This file  \n\n# Extra\n\nGenerating Figures for  __FindSim: a Framework for Integrating Neuronal Data\nand Signaling Models by  Nisha A. Viswan, G.V. HarshaRani, Melanie I. Stefan,\nUpinder S. Bhalla Front Neuroinform. 2018 Jun 26;12:38. doi:\n10.3389/fninf.2018.00038. eCollection 2018.__\n\nAll these are run using the branch `release.1.1.0`. Please change into the\nbranch to run these.\n\nFigure 6: bottom  \n    python findSim.py Curated/FindSim-Jain2009_Fig4F.tsv --model models/synSynth7.g  \n\nFigure 7B:  \n    python findSim.py Curated/FindSim-Bhalla1999_fig2B.tsv --model models/synSynth7.g  \n    python findSim.py Curated/FindSim-Gu2004_Fig3.tsv --model models/synSynth7.g  \n\nFigure 7C:  \n    python findSim.py Curated/FindSim-Ji2010_fig1C_ERK_acute.tsv --model models/synSynth7.g  \n\nFigure 7D:  \n    python findSim.py Curated/FindSim-Bhalla1999_fig4C.tsv --model models/synSynth7.g  \n\n\n# Other resources\n\n- The web template for experiment worksheet can be found here\nhttps://www.ncbs.res.in/faculty/bhalla-findsim/worksheet  \n\n- The MOOSE site: http://moose.ncbs.res.in. MOOSE documentation:\n  http://moose.ncbs.res.in/readthedocs/install/index_install.html\n\n- Two papers were used as the initial basis for the models, and which in turn\n  refer to a large number of experimental studies for their data:\n\n    1. Bhalla US., Iyengar R. Emergent properties of networks of biological signaling pathways. Science. 1999 Jan 15;283(5400):381-7.  \n    2. Jain P, and Bhalla, U.S. Signaling logic of activity-triggered dendritic protein synthesis: an mTOR gate but not a feedback switch. PLoS Comput Biol. 2009 Feb;5(2):e1000287. Epub 2009 Feb 13  \n\n- Two more papers were used for some of the experiments\n\n    1. Gu J, et al. Beta1,4-N-Acetylglucosaminyltransferase III down-regulates\n       neurite outgrowth induced by costimulation of epidermal growth factor and\n       integrins through the Ras/ERK signaling pathway in PC12 cells.\n       Glycobiology. 2004 Feb;14(2):177-86. Epub 2003 Oct 23\n    2. Ji Y, et al. Acute and gradual increases in BDNF concentration elicit\n       distinct signaling and functions in neurons. Nat Neurosci. 2010\n       Mar;13(3):302-9. doi: 10.1038/nn.2505. Epub 2010 Feb 21.\n\n- DOQCS database, from which models were derived: http://doqcs.ncbs.res.in\n  __Sivakumaran S. et al. The Database of Quantitative Cellular Signaling:\n  management and analysis of chemical kinetic models of signaling networks.\n  Bioinformatics. 2003. 19(3):408\u2013415__\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/BhallaLab/FindSime", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "FindSim", "package_url": "https://pypi.org/project/FindSim/", "platform": "", "project_url": "https://pypi.org/project/FindSim/", "project_urls": {"Homepage": "http://github.com/BhallaLab/FindSime"}, "release_url": "https://pypi.org/project/FindSim/1.0.2.dev20190611/", "requires_dist": ["pymoose", "scipy", "mpld3", "networkx"], "requires_python": "", "summary": "A Framework for Integrating Neuronal Data and Singalling Model", "version": "1.0.2.dev20190611", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/BhallaLab/FindSim\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f32b109d3de46cc019100dda83b852291ef378e/68747470733a2f2f7472617669732d63692e6f72672f4268616c6c614c61622f46696e6453696d2e7376673f6272616e63683d737461626c65\"></a></p>\n<h1>FindSim</h1>\n<p>Framework for Integration of Neuronal Data and SIgnaling Models. The associated paper is available\nat <a href=\"https://doi.org/10.3389/fninf.2018.00038\" rel=\"nofollow\">https://doi.org/10.3389/fninf.2018.00038</a></p>\n<h1>About</h1>\n<p>The FindSim project maps models of neural and cellular signaling to\nexperimental protocols and readouts. It runs the experiment on the model, and\nprovides a score that reports how closely the two match.</p>\n<h1>LICENSE</h1>\n<p>This file and the files in this repository are licensed under GPL v3 or later.</p>\n<h1>Install</h1>\n<p>One can get <code>FindSim</code> using <code>python-pip</code>.</p>\n<p>To install last stable release (<strong>NOTE</strong> This uses moose version 3.1.4 (outdated\nwith this release))</p>\n<pre><code> $ pip install FindSim \n</code></pre>\n<p>Or, to install the nightly built,</p>\n<pre><code> $ pip install FinSim --pre   # recommended \n</code></pre>\n<p>Alternatively, you can download the source code and install it yourself.</p>\n<ol>\n<li>Install MOOSE which can be found here <a href=\"https://moose.ncbs.res.in/readthedocs/install/install.html\" rel=\"nofollow\">https://moose.ncbs.res.in/readthedocs/install/install.html</a></li>\n<li>Install FindSim</li>\n</ol>\n<pre><code>git clone https://github.com/BhallaLab/FindSim\ncd FindSim\npython setup.py install  \n</code></pre>\n<p>After successful installation, two commands are available at your disposal\n<code>findsim</code> and <code>findsim_parallel</code>. To see the help message, pass <code>-h</code> option to\neither of these commands. For example, <code>findsim -h</code> will show you following\nmessage.</p>\n<pre><code>usage: findsim [-h] [-m MODEL] [-d DUMP_SUBSET] [-p PARAM_FILE] [-t] [-hp]\n               [-hs] [-o] [-s SCALE_PARAM SCALE_PARAM SCALE_PARAM]\n               [-settle_time SETTLE_TIME]\n               script\n\nFindSim argument parser This program loads a kinetic model, and runs it with\nthe specified stimuli. The output is then compared with expected output\nspecified in the same file, to generate a model score.\n\npositional arguments:\n  script                Required: filename of experiment spec, in tsv format.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MODEL, --model MODEL\n                        Optional: model filename, .g or .xml\n  -d DUMP_SUBSET, --dump_subset DUMP_SUBSET\n                        Optional: dump selected subset of model into named\n                        file\n  -p PARAM_FILE, --param_file PARAM_FILE\n                        Optional: Generate file of tweakable params belonging\n                        to selected subset of model\n  -t, --tabulate_output\n                        Flag: Print table of plot values. Default is NOT to\n                        print table\n  -hp, --hide_plot      Hide plot output of simulation along with expected\n                        values. Default is to show plot.\n  -hs, --hide_subplots  Hide subplot output of simulation. By default the\n                        graphs include dotted lines to indicate individual\n                        quantities (e.g., states of a molecule) that are being\n                        summed to give a total response. This flag turns off\n                        just those dotted lines, while leaving the main plot\n                        intact.\n  -o, --optimize_elec   Optimize electrical computation. By default the\n                        electrical computation runs for the entire duration of\n                        the simulation. With this flag the system turns off\n                        the electrical engine except during the times when\n                        electrical stimuli are being given. This can be *much*\n                        faster.\n  -s SCALE_PARAM SCALE_PARAM SCALE_PARAM, --scale_param SCALE_PARAM SCALE_PARAM SCALE_PARAM\n                        Scale specified object.field by ratio.\n  -settle_time SETTLE_TIME, --settle_time SETTLE_TIME\n                        Run model for specified settle time and return dict of\n                        {path,conc}.\n\n</code></pre>\n<p>Command <code>findsim_parellel</code> is a helper utility: it runs multiple simulations\nusing <code>findsim</code> in parellel.</p>\n<h1>Quick start</h1>\n<p>To run one of the example experiments on the default model (<code>synSynth7.g</code>) and generate a graph\nto compare model to experiment.</p>\n<pre><code>findsim Curated/FindSim-Jain2009-Fig2B.tsv  \n</code></pre>\n<p>You can also pass the model explicitly,</p>\n<pre><code>findsim Curated/FindSim-Jain2009-Fig2B.tsv --model models/synSynth7.g  \n</code></pre>\n<h2>Batch run</h2>\n<p>To findSim program on all tsv files in the specified directory, computes their\nscores, and prints out basic stats of the scores, you should use\n<code>findsim_parallel</code> command.</p>\n<pre><code>findsim_parellel Curated -n 8 \n</code></pre>\n<p>It will run the entire set of <code>Curated</code> experiments in parallel using 8\nindependant processes (it will be effectively if your computer has at least 8\ncores). The value of <code>-n</code> should not be more than <code>N+1</code> where <code>N</code> is the number\nof processors on your system (use system utility <code>nproc</code> to see this number).</p>\n<p>More detailed invocation of this command looks like the following:</p>\n<pre><code>findsim_parallel path/to/tsv/files -n 6 --model synSynth7.g\n</code></pre>\n<h1>Repository organization</h1>\n<pre><code>FindSim/             \t\t: project directory  \nFindSim/stable\t\t\t: Stable branch. Stable version of `develop` branch  \nFindSim/Curated\t   \t\t: Folder contains FindSim worksheets to which the model is well fit.\nFindSim/models\t\t\t: Model files \nFindSim/findSim.py\t\t\t: Main findSim script  \nFindSim/runAllParallel.py\t\t: Batch/parallel wrapper script.  \nFindSim/FindSim-Exptworksheet.xlsx\t: Template worksheet with inline help and units, for Microsoft Excel.  \nFindSim/FindSim-Exptworksheet.ods\t: Template worksheet with inline help and units, for Libre Office.  \nFindSim/FindSim-Schema.xml \t\t: Schema for tsv files for worksheet.  \nFindSim/README.md\t\t\t: This file  \n</code></pre>\n<h1>Extra</h1>\n<p>Generating Figures for  <strong>FindSim: a Framework for Integrating Neuronal Data\nand Signaling Models by  Nisha A. Viswan, G.V. HarshaRani, Melanie I. Stefan,\nUpinder S. Bhalla Front Neuroinform. 2018 Jun 26;12:38. doi:\n10.3389/fninf.2018.00038. eCollection 2018.</strong></p>\n<p>All these are run using the branch <code>release.1.1.0</code>. Please change into the\nbranch to run these.</p>\n<p>Figure 6: bottom<br>\npython findSim.py Curated/FindSim-Jain2009_Fig4F.tsv --model models/synSynth7.g</p>\n<p>Figure 7B:<br>\npython findSim.py Curated/FindSim-Bhalla1999_fig2B.tsv --model models/synSynth7.g<br>\npython findSim.py Curated/FindSim-Gu2004_Fig3.tsv --model models/synSynth7.g</p>\n<p>Figure 7C:<br>\npython findSim.py Curated/FindSim-Ji2010_fig1C_ERK_acute.tsv --model models/synSynth7.g</p>\n<p>Figure 7D:<br>\npython findSim.py Curated/FindSim-Bhalla1999_fig4C.tsv --model models/synSynth7.g</p>\n<h1>Other resources</h1>\n<ul>\n<li>\n<p>The web template for experiment worksheet can be found here\n<a href=\"https://www.ncbs.res.in/faculty/bhalla-findsim/worksheet\" rel=\"nofollow\">https://www.ncbs.res.in/faculty/bhalla-findsim/worksheet</a></p>\n</li>\n<li>\n<p>The MOOSE site: <a href=\"http://moose.ncbs.res.in\" rel=\"nofollow\">http://moose.ncbs.res.in</a>. MOOSE documentation:\n<a href=\"http://moose.ncbs.res.in/readthedocs/install/index_install.html\" rel=\"nofollow\">http://moose.ncbs.res.in/readthedocs/install/index_install.html</a></p>\n</li>\n<li>\n<p>Two papers were used as the initial basis for the models, and which in turn\nrefer to a large number of experimental studies for their data:</p>\n<ol>\n<li>Bhalla US., Iyengar R. Emergent properties of networks of biological signaling pathways. Science. 1999 Jan 15;283(5400):381-7.</li>\n<li>Jain P, and Bhalla, U.S. Signaling logic of activity-triggered dendritic protein synthesis: an mTOR gate but not a feedback switch. PLoS Comput Biol. 2009 Feb;5(2):e1000287. Epub 2009 Feb 13</li>\n</ol>\n</li>\n<li>\n<p>Two more papers were used for some of the experiments</p>\n<ol>\n<li>Gu J, et al. Beta1,4-N-Acetylglucosaminyltransferase III down-regulates\nneurite outgrowth induced by costimulation of epidermal growth factor and\nintegrins through the Ras/ERK signaling pathway in PC12 cells.\nGlycobiology. 2004 Feb;14(2):177-86. Epub 2003 Oct 23</li>\n<li>Ji Y, et al. Acute and gradual increases in BDNF concentration elicit\ndistinct signaling and functions in neurons. Nat Neurosci. 2010\nMar;13(3):302-9. doi: 10.1038/nn.2505. Epub 2010 Feb 21.</li>\n</ol>\n</li>\n<li>\n<p>DOQCS database, from which models were derived: <a href=\"http://doqcs.ncbs.res.in\" rel=\"nofollow\">http://doqcs.ncbs.res.in</a>\n<strong>Sivakumaran S. et al. The Database of Quantitative Cellular Signaling:\nmanagement and analysis of chemical kinetic models of signaling networks.\nBioinformatics. 2003. 19(3):408\u2013415</strong></p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5386495, "releases": {"1.0.0.dev20190611": [{"comment_text": "", "digests": {"md5": "b260bc402f86b74e4e07635f12f22f72", "sha256": "c8861bc8e170546116fcf40204f4d94ab7d0b1ade3296ed4ac3a8982fc0fe769"}, "downloads": -1, "filename": "FindSim-1.0.0.dev20190611-py3-none-any.whl", "has_sig": false, "md5_digest": "b260bc402f86b74e4e07635f12f22f72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39588, "upload_time": "2019-06-11T09:20:39", "upload_time_iso_8601": "2019-06-11T09:20:39.089220Z", "url": "https://files.pythonhosted.org/packages/64/cb/5ff37f1def712268b495c2894ef959c0e38288a458ee81ead914858ed47f/FindSim-1.0.0.dev20190611-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdee8a56bcd0011ce24e783938d101a4", "sha256": "51ea7cbb90b1fb6fbcdc774b65e84882f2fa1a16a140a8154326d31c6555fac4"}, "downloads": -1, "filename": "FindSim-1.0.0.dev20190611.tar.gz", "has_sig": false, "md5_digest": "cdee8a56bcd0011ce24e783938d101a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102508, "upload_time": "2019-06-11T09:20:41", "upload_time_iso_8601": "2019-06-11T09:20:41.942834Z", "url": "https://files.pythonhosted.org/packages/2d/83/b1ef00ad62b12035d982f264e1ea539d1e753823a1f79bba41e166fd3cf6/FindSim-1.0.0.dev20190611.tar.gz", "yanked": false}], "1.0.1.dev20190611": [{"comment_text": "", "digests": {"md5": "02f7a261b5d39cabc89690504246b6f0", "sha256": "6ae2cdf7a8e1ca8c245bfc5d0a87979707420daa3d21fe7c2dc845f21148a19b"}, "downloads": -1, "filename": "FindSim-1.0.1.dev20190611-py2-none-any.whl", "has_sig": false, "md5_digest": "02f7a261b5d39cabc89690504246b6f0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 39547, "upload_time": "2019-06-11T13:07:11", "upload_time_iso_8601": "2019-06-11T13:07:11.846798Z", "url": "https://files.pythonhosted.org/packages/80/85/42cffe4727388c4cc2c1da73d88eae61ffd67f0d53f806cacae266678a5a/FindSim-1.0.1.dev20190611-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb329ab2520e7672ecb4b8ae66ffd45a", "sha256": "509f15e9a9eafa2bea771cd9521c3dd9110d43f4a31fef4119e258a10fdd6eff"}, "downloads": -1, "filename": "FindSim-1.0.1.dev20190611-py3-none-any.whl", "has_sig": false, "md5_digest": "cb329ab2520e7672ecb4b8ae66ffd45a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39546, "upload_time": "2019-06-11T13:07:13", "upload_time_iso_8601": "2019-06-11T13:07:13.694961Z", "url": "https://files.pythonhosted.org/packages/4e/be/46e283710b77be6c1bc18e751d7bc691e9fd2d7ac87f89fe9d357e8b6034/FindSim-1.0.1.dev20190611-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ed615d1a3278b83758556c4122793fa", "sha256": "21ef8cad58c1bb26108b081cf4a77f10d1e224e1e16858d5175c3cb527503c45"}, "downloads": -1, "filename": "FindSim-1.0.1.dev20190611.tar.gz", "has_sig": false, "md5_digest": "7ed615d1a3278b83758556c4122793fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102738, "upload_time": "2019-06-11T13:07:16", "upload_time_iso_8601": "2019-06-11T13:07:16.044035Z", "url": "https://files.pythonhosted.org/packages/50/02/4ff90b96b1ad8dfb880079a62e88b6ab06b4c324ab16a9449970891c1bb2/FindSim-1.0.1.dev20190611.tar.gz", "yanked": false}], "1.0.2.dev20190611": [{"comment_text": "", "digests": {"md5": "b2db31978383b5c425fb240d8dabae4a", "sha256": "a8f7baf17904ed4230fff9b2d5deda6665800ee07a52390be1713c6552cfdd31"}, "downloads": -1, "filename": "FindSim-1.0.2.dev20190611-py2-none-any.whl", "has_sig": false, "md5_digest": "b2db31978383b5c425fb240d8dabae4a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 39565, "upload_time": "2019-06-11T13:08:48", "upload_time_iso_8601": "2019-06-11T13:08:48.322594Z", "url": "https://files.pythonhosted.org/packages/21/f7/3188887d763d9371106ea22c61c1556dc28f53ec4d9838062f23696f203d/FindSim-1.0.2.dev20190611-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be0759df8cf250d574cc755e91ea9c79", "sha256": "5b38555b4512a707253670e93fc6768ea0ef78d636fa6363f3739142888280ec"}, "downloads": -1, "filename": "FindSim-1.0.2.dev20190611-py3-none-any.whl", "has_sig": false, "md5_digest": "be0759df8cf250d574cc755e91ea9c79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39566, "upload_time": "2019-06-11T13:08:50", "upload_time_iso_8601": "2019-06-11T13:08:50.088428Z", "url": "https://files.pythonhosted.org/packages/e3/98/740ec29ffffbc632ab6f6a060930f2cc8b0dcfa5c578547c6648c90993ad/FindSim-1.0.2.dev20190611-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a046678c9799216385af634e52e455df", "sha256": "a28e2dec5b7806af2bbf8876c76f69d7789995af3de01ce2c654e91758409d10"}, "downloads": -1, "filename": "FindSim-1.0.2.dev20190611.tar.gz", "has_sig": false, "md5_digest": "a046678c9799216385af634e52e455df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102765, "upload_time": "2019-06-11T13:08:52", "upload_time_iso_8601": "2019-06-11T13:08:52.374643Z", "url": "https://files.pythonhosted.org/packages/c0/19/d638a4f01d9598598a6988f2aa3a0447f29807e03001c02c4848a8cc3b00/FindSim-1.0.2.dev20190611.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b2db31978383b5c425fb240d8dabae4a", "sha256": "a8f7baf17904ed4230fff9b2d5deda6665800ee07a52390be1713c6552cfdd31"}, "downloads": -1, "filename": "FindSim-1.0.2.dev20190611-py2-none-any.whl", "has_sig": false, "md5_digest": "b2db31978383b5c425fb240d8dabae4a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 39565, "upload_time": "2019-06-11T13:08:48", "upload_time_iso_8601": "2019-06-11T13:08:48.322594Z", "url": "https://files.pythonhosted.org/packages/21/f7/3188887d763d9371106ea22c61c1556dc28f53ec4d9838062f23696f203d/FindSim-1.0.2.dev20190611-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be0759df8cf250d574cc755e91ea9c79", "sha256": "5b38555b4512a707253670e93fc6768ea0ef78d636fa6363f3739142888280ec"}, "downloads": -1, "filename": "FindSim-1.0.2.dev20190611-py3-none-any.whl", "has_sig": false, "md5_digest": "be0759df8cf250d574cc755e91ea9c79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39566, "upload_time": "2019-06-11T13:08:50", "upload_time_iso_8601": "2019-06-11T13:08:50.088428Z", "url": "https://files.pythonhosted.org/packages/e3/98/740ec29ffffbc632ab6f6a060930f2cc8b0dcfa5c578547c6648c90993ad/FindSim-1.0.2.dev20190611-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a046678c9799216385af634e52e455df", "sha256": "a28e2dec5b7806af2bbf8876c76f69d7789995af3de01ce2c654e91758409d10"}, "downloads": -1, "filename": "FindSim-1.0.2.dev20190611.tar.gz", "has_sig": false, "md5_digest": "a046678c9799216385af634e52e455df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102765, "upload_time": "2019-06-11T13:08:52", "upload_time_iso_8601": "2019-06-11T13:08:52.374643Z", "url": "https://files.pythonhosted.org/packages/c0/19/d638a4f01d9598598a6988f2aa3a0447f29807e03001c02c4848a8cc3b00/FindSim-1.0.2.dev20190611.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:23 2020"}