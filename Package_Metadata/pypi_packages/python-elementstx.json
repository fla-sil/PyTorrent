{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "This Python3 module implements support for Elements transactions.\n\nIt builds on top, and is intended to be used along with python-bitcointx library.\n\n## Requirements\n\n- [python-bitcointx](https://github.com/Simplexum/python-bitcointx) (version >= 1.0.0)\n- [secp256k1-zkp](https://github.com/ElementsProject/secp256k1-zkp)\n\n  Configure parameters for `secp256k1-zkp`:\n\n```\n    ./configure --enable-experimental \\\n                --enable-module-generator \\\n                --enable-module-rangeproof \\\n                --enable-module-surjectionproof \\\n                --enable-module-ecdh \\\n                --enable-module-recovery\n```\n\n## Usage:\n\nWith contextual switch to Elements parameters:\n\n```python\nimport os\nimport elementstx\nfrom bitcointx import ChainParams, get_current_chain_params\nfrom bitcointx.wallet import CCoinKey, CCoinExtKey, CCoinAddress, P2PKHCoinAddress\n\nwith ChainParams('elements'):\n    k = CCoinExtKey.from_seed(os.urandom(32))\n    a = P2PKHCoinAddress.from_pubkey(k.derive_path(\"m/0'/0'/1\").pub)\n    print('example {} address: {}'.format(get_current_chain_params().name, a))\n    assert CCoinAddress(str(a)) == a\n```\n\nWith global switch to Elements parameters:\n\n```python\nfrom elementstx import ElementsParams\nfrom bitcointx import select_chain_params\n\nselect_chain_params('elements')\n# or, using the chain params class directly\nselect_chain_params(ElementsParams)\n\n```\n\nWithout the switch of chain parameters:\n\n```python\nfrom elementstx.core import CElementsTransaction\n\ntransaction_data = read_tx_data()\ntx = CElementsTransaction.deserialze(transaction_data)\nprint(\"Number of txout witnesses:\", len(tx.wit.vtxoutwit))\n\n```\n\n# Example Code\n\nSee `examples/` directory.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Simplexum/python-elementstx", "keywords": "bitcoin,elements", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-elementstx", "package_url": "https://pypi.org/project/python-elementstx/", "platform": "", "project_url": "https://pypi.org/project/python-elementstx/", "project_urls": {"Homepage": "https://github.com/Simplexum/python-elementstx"}, "release_url": "https://pypi.org/project/python-elementstx/0.1.3/", "requires_dist": ["python-bitcointx (<2,>=1.0.0)"], "requires_python": ">=3.6", "summary": "Elements module for python-bitcointx", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This Python3 module implements support for Elements transactions.</p>\n<p>It builds on top, and is intended to be used along with python-bitcointx library.</p>\n<h2>Requirements</h2>\n<ul>\n<li>\n<p><a href=\"https://github.com/Simplexum/python-bitcointx\" rel=\"nofollow\">python-bitcointx</a> (version &gt;= 1.0.0)</p>\n</li>\n<li>\n<p><a href=\"https://github.com/ElementsProject/secp256k1-zkp\" rel=\"nofollow\">secp256k1-zkp</a></p>\n<p>Configure parameters for <code>secp256k1-zkp</code>:</p>\n</li>\n</ul>\n<pre><code>    ./configure --enable-experimental \\\n                --enable-module-generator \\\n                --enable-module-rangeproof \\\n                --enable-module-surjectionproof \\\n                --enable-module-ecdh \\\n                --enable-module-recovery\n</code></pre>\n<h2>Usage:</h2>\n<p>With contextual switch to Elements parameters:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">elementstx</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bitcointx</span> <span class=\"kn\">import</span> <span class=\"n\">ChainParams</span><span class=\"p\">,</span> <span class=\"n\">get_current_chain_params</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bitcointx.wallet</span> <span class=\"kn\">import</span> <span class=\"n\">CCoinKey</span><span class=\"p\">,</span> <span class=\"n\">CCoinExtKey</span><span class=\"p\">,</span> <span class=\"n\">CCoinAddress</span><span class=\"p\">,</span> <span class=\"n\">P2PKHCoinAddress</span>\n\n<span class=\"k\">with</span> <span class=\"n\">ChainParams</span><span class=\"p\">(</span><span class=\"s1\">'elements'</span><span class=\"p\">):</span>\n    <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">CCoinExtKey</span><span class=\"o\">.</span><span class=\"n\">from_seed</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">urandom</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">))</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">P2PKHCoinAddress</span><span class=\"o\">.</span><span class=\"n\">from_pubkey</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">derive_path</span><span class=\"p\">(</span><span class=\"s2\">\"m/0'/0'/1\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pub</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'example </span><span class=\"si\">{}</span><span class=\"s1\"> address: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">get_current_chain_params</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">))</span>\n    <span class=\"k\">assert</span> <span class=\"n\">CCoinAddress</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">a</span>\n</pre>\n<p>With global switch to Elements parameters:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elementstx</span> <span class=\"kn\">import</span> <span class=\"n\">ElementsParams</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bitcointx</span> <span class=\"kn\">import</span> <span class=\"n\">select_chain_params</span>\n\n<span class=\"n\">select_chain_params</span><span class=\"p\">(</span><span class=\"s1\">'elements'</span><span class=\"p\">)</span>\n<span class=\"c1\"># or, using the chain params class directly</span>\n<span class=\"n\">select_chain_params</span><span class=\"p\">(</span><span class=\"n\">ElementsParams</span><span class=\"p\">)</span>\n</pre>\n<p>Without the switch of chain parameters:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elementstx.core</span> <span class=\"kn\">import</span> <span class=\"n\">CElementsTransaction</span>\n\n<span class=\"n\">transaction_data</span> <span class=\"o\">=</span> <span class=\"n\">read_tx_data</span><span class=\"p\">()</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">CElementsTransaction</span><span class=\"o\">.</span><span class=\"n\">deserialze</span><span class=\"p\">(</span><span class=\"n\">transaction_data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Number of txout witnesses:\"</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">wit</span><span class=\"o\">.</span><span class=\"n\">vtxoutwit</span><span class=\"p\">))</span>\n</pre>\n<h1>Example Code</h1>\n<p>See <code>examples/</code> directory.</p>\n\n          </div>"}, "last_serial": 6748145, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0a2c486ba0f54adeeb5a5d3bdc8f65b1", "sha256": "0ebc42bebe2eda650fdf8abf7e79021a0d867553a4d2b81d3b321a3381f18f5e"}, "downloads": -1, "filename": "python-elementstx-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0a2c486ba0f54adeeb5a5d3bdc8f65b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 390791, "upload_time": "2019-09-13T14:45:03", "upload_time_iso_8601": "2019-09-13T14:45:03.004710Z", "url": "https://files.pythonhosted.org/packages/d7/09/1bba8013249c1904015aedd3243e2e24dd3c2e791b6e966dc2b726325c19/python-elementstx-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6e3594d42963e5cb54878c30ea99da4b", "sha256": "5a20f091840ee79ea621c0c4512ac02faffd018de25975cfc1a330d4da9bfc3c"}, "downloads": -1, "filename": "python_elementstx-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6e3594d42963e5cb54878c30ea99da4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45123, "upload_time": "2019-12-26T18:21:28", "upload_time_iso_8601": "2019-12-26T18:21:28.050958Z", "url": "https://files.pythonhosted.org/packages/48/d6/664510eae9e2d7c424e9639d5ef22531848cb79ca0e864127382d233191f/python_elementstx-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "93b72d044c1fe1fbea28083c8fa24c97", "sha256": "e010f79fd5cee9b1b2c6752924cfd0ad772a48b8608671dbeef6d8e9ceaef4e0"}, "downloads": -1, "filename": "python_elementstx-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "93b72d044c1fe1fbea28083c8fa24c97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45117, "upload_time": "2020-03-04T14:22:42", "upload_time_iso_8601": "2020-03-04T14:22:42.049265Z", "url": "https://files.pythonhosted.org/packages/ac/5d/b16791db99fa9d2649f21f9f881224effcae575c12cc4e9af8cd79a38b15/python_elementstx-0.1.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93b72d044c1fe1fbea28083c8fa24c97", "sha256": "e010f79fd5cee9b1b2c6752924cfd0ad772a48b8608671dbeef6d8e9ceaef4e0"}, "downloads": -1, "filename": "python_elementstx-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "93b72d044c1fe1fbea28083c8fa24c97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45117, "upload_time": "2020-03-04T14:22:42", "upload_time_iso_8601": "2020-03-04T14:22:42.049265Z", "url": "https://files.pythonhosted.org/packages/ac/5d/b16791db99fa9d2649f21f9f881224effcae575c12cc4e9af8cd79a38b15/python_elementstx-0.1.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:17:50 2020"}