{"info": {"author": "Giuseppe Venturini and others", "author_email": "ggventurini+GITHUB@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "ahkab\n=====\n\n**a SPICE-like electronic circuit simulator written in Python**\n\nThe code should be easy to read and modify, the main language is Python\n-- 2 or 3 -- and it is platform-independent.\n\nNews!\n-----\n\n-  Ahkab v0.18 was released on July 18 2015, including new features,\n   bugfixes and improved documentation. It is recommended to upgrade.\n   Check out `the release\n   notes <https://github.com/ahkab/ahkab/releases/tag/v0.18>`__ for\n   more!\n-  The whole codebase has been going through a (yet incomplete)\n   refactoring and documenting effort. The `new documentation is\n   available on RTD <http://ahkab.readthedocs.org/en/latest/>`__.\n\nMy resources are limited these days, so the much-needed work is\nproceeding slowly, albeit hopefully steadily. If you are interested and\nyou would like to contribute to refactoring or documenting a particular\nfeature, it would be very welcome.\n\n|Build Status| |Coverage Status| |PyPi version| |GPLv2 license| |DOI|\n\nSupported simulations:\n----------------------\n\n-  Numeric:\n\n   -  **Operating point**, with guess computation to speed up the\n      solution. See example: `Downscaling current\n      mirror <https://ahkab.readthedocs.org/en/latest/examples/OP_simulation.html>`__\n   -  **DC sweep**\n   -  **Transient analysis**, available differentiation formulas:\n      implicit Euler, trapezoidal, gear orders from 2 to 5. See for\n      example the `simulation of a Colpitts\n      Oscillator <https://ahkab.readthedocs.org/en/latest/examples/Transient-Example.html>`__.\n   -  **AC analysis**\n   -  **PZ** analysis\n   -  **Periodic steady state analysis** of non-autonomous circuits,\n      *time* *domain* shooting and brute-force algorithms.\n\n-  Symbolic:\n\n   -  **Small signal analysis**, AC or DC, with extraction of transfer\n      functions, DC gain, poles and zeros. Various `symbolic analysis\n      examples on this\n      page <https://ahkab.readthedocs.org/en/latest/examples/Symbolic-simulation.html>`__.\n\nThe results are saved to disk, plotted or printed to stdout and can be\nread/processed by the most common tools (eg.\n`Octave <http://www.gnu.org/software/octave/>`__,\n`gnuplot <http://www.gnuplot.info/>`__,\n`Matlab <http://www.mathworks.com/products/matlab/>`__,\n`gwave <http://www.telltronics.org/software/gwave/>`__ and others)\n\nInstall\n-------\n\nThe program requires:\n\n-  the Python interpreter version 2 or 3 (at least v.2.6 for Python2,\n   v.3.3 for Python3),\n-  numpy>=1.7.0, scipy>=0.14.0, sympy>=0.7.6 and tabulate>=0.7.3.\n\nMatplotlib is strongly recommended and no plotting will work without.\n\nIf you need more information about the dependencies, check the `Install\nnotes <https://ahkab.readthedocs.org/en/latest/help/Install-Notes.html>`__.\n\nUsage\n-----\n\n1. ``ahkab`` can be run as a Python library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from ahkab import new_ac, run\n    from ahkab.circuit import Circuit\n    from ahkab.plotting import plot_results # calls matplotlib for you\n    import numpy as np\n\n    # Define the circuit\n    cir = Circuit('Butterworth 1kHz band-pass filter')\n    cir.add_vsource('V1', 'n1', cir.gnd, dc_value=0., ac_value=1.)\n    cir.add_resistor('R1', 'n1', 'n2', 50.)\n    cir.add_inductor('L1', 'n2', 'n3', 0.245894)\n    cir.add_capacitor('C1', 'n3', 'n4', 1.03013e-07)\n    cir.add_inductor('L2', 'n4', cir.gnd, 9.83652e-05)\n    cir.add_capacitor('C2', 'n4', cir.gnd, 0.000257513)\n    cir.add_inductor('L3', 'n4', 'n5', 0.795775)\n    cir.add_capacitor('C3', 'n5', 'n6', 3.1831e-08)\n    cir.add_inductor('L4', 'n6', cir.gnd, 9.83652e-05)\n    cir.add_capacitor('C4', 'n6', cir.gnd, 0.000257513)\n    cir.add_capacitor('C5', 'n7', 'n8', 1.03013e-07)\n    cir.add_inductor('L5', 'n6', 'n7', 0.245894)\n    cir.add_resistor('R2', 'n8', cir.gnd, 50.)\n\n    # Define the analysis\n    ac1 = new_ac(2.*np.pi*.97e3, 2.*np.pi*1.03e3, 1e2, x0=None)\n\n    # run it\n    res = run(cir, ac1)\n\n    # plot the results\n    plot_results('5th order 1kHz Butterworth filter', [('|Vn8|',\"\")], res['ac'],\n                 outfilename='bpf_transfer_fn.png')\n\n2. ``ahkab`` can be run from the command line with a netlist file\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe syntax is:\n\n::\n\n    `$ python ahkab -o graph.dat <netlist file>`\n\nSee ``ahkab --help`` for command line switches, `also online on the\ndocumentation\npages. <http://ahkab.readthedocs.org/en/latest/help/Command-Line-Help.html>`__\n\nDocumentation\n~~~~~~~~~~~~~\n\nThe `documentation is available on\nRTD <http://ahkab.readthedocs.org/en/latest/>`__.\n\nThere, you can find a\n`documentation <http://ahkab.readthedocs.org/en/latest/ahkab.html>`__\nand\n`examples <http://ahkab.readthedocs.org/en/latest/examples/Python_API.html>`__\nregarding how to simulate from a Python script.\n\nRefer to the `netlist syntax\npage <http://ahkab.readthedocs.org/en/latest/help/Netlist-Syntax.html>`__\nif you prefer to write netlist files that describe the circuit.\n\nExperience with running SPICE or related commercial simulators can be\nvery useful: this is not for the faint of heart.\n\nDevelopment model\n~~~~~~~~~~~~~~~~~\n\n-  The development happens on the `github\n   repository <https://github.com/ahkab/ahkab>`__,\n-  Mostly on the master branch, with feature branch being created only\n   for special purposes or non-trivial features.\n-  Snapshots are released on a (hopefully) regular basis and are\n   available on the `Releases pages, complete with\n   changelog <https://github.com/ahkab/ahkab/releases>`__ and on\n   `PYPI <https://pypi.python.org/pypi/ahkab/>`__\n\nPatches and pull requests are welcome!\n\nHow this project was born\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis project was born when I was an enthusistic undergrad, apparently\nwith plenty of free time, attending \"Simulazione Circuitale\" (*Circuit\nSimulation*) taught by `Prof. A.\nBrambilla <http://brambilla.dei.polimi.it/>`__ back in Italy at the\nPolytechnic University of Milan.\n\nI am grateful to prof. Brambilla for teaching one of the most\ninteresting courses of my university years. -GV\n\nBugs and patches\n~~~~~~~~~~~~~~~~\n\nDoes it work? Bugs? Do you have patches? Did you run some noteworthy\nsimulation? Let me know! Feedback is very welcome, my `email\naddress <http://tinymailto.com/5310>`__ is available after a captcha.\n\nSupport the development with a donation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you wish to support the development of ``ahkab``, ***please donate to\ncancer research:***\n\n-  `Association for International Cancer Research\n   (eng) <http://www.aicr.org.uk/donate.aspx>`__,\n\nor\n\n-  `Fond. IRCCS Istituto Nazionale dei Tumori\n   (it) <http://www.istitutotumori.mi.it/modules.php?name=Content&pa=showpage&pid=24>`__.\n\nCredits\n~~~~~~~\n\n**Authors:** `Giuseppe Venturini <https://github.com/ggventurini>`__,\nwith contributions from `Ian Daniher <https://github.com/itdaniher>`__\nand `Rob Crowther <https://github.com/weilawei>`__.\n\n**Code:** the module ``py3compat.py`` is (c) 2013 - the Jinja team.\n\n**Dependencies:** many thanks to the authors of ``numpy``, ``scipy``,\n``sympy``, ``matplotlib`` and ``tabulate``!\n\n.. |Build Status| image:: https://travis-ci.org/ahkab/ahkab.png?branch=master\n   :target: https://travis-ci.org/ahkab/ahkab\n.. |Coverage Status| image:: https://coveralls.io/repos/ahkab/ahkab/badge.png?branch=master\n   :target: https://coveralls.io/r/ahkab/ahkab?branch=master\n.. |PyPi version| image:: http://img.shields.io/badge/version-0.18-brightgreen.png\n   :target: https://pypi.python.org/pypi/ahkab/\n.. |GPLv2 license| image:: http://img.shields.io/badge/license-GPL%20v2-brightgreen.png\n   :target: https://raw.githubusercontent.com/ahkab/ahkab/master/LICENSE\n.. |DOI| image:: https://zenodo.org/badge/doi/10.5281/zenodo.17696.svg\n   :target: http://dx.doi.org/10.5281/zenodo.17696", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ahkab.github.io/ahkab/", "keywords": "electronic circuit simulator numeric symbolic", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "ahkab", "package_url": "https://pypi.org/project/ahkab/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ahkab/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://ahkab.github.io/ahkab/"}, "release_url": "https://pypi.org/project/ahkab/0.18/", "requires_dist": null, "requires_python": null, "summary": "a SPICE-like electronic circuit simulator", "version": "0.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>a SPICE-like electronic circuit simulator written in Python</strong></p>\n<p>The code should be easy to read and modify, the main language is Python\n\u2013 2 or 3 \u2013 and it is platform-independent.</p>\n<div id=\"news\">\n<h2>News!</h2>\n<ul>\n<li>Ahkab v0.18 was released on July 18 2015, including new features,\nbugfixes and improved documentation. It is recommended to upgrade.\nCheck out <a href=\"https://github.com/ahkab/ahkab/releases/tag/v0.18\" rel=\"nofollow\">the release\nnotes</a> for\nmore!</li>\n<li>The whole codebase has been going through a (yet incomplete)\nrefactoring and documenting effort. The <a href=\"http://ahkab.readthedocs.org/en/latest/\" rel=\"nofollow\">new documentation is\navailable on RTD</a>.</li>\n</ul>\n<p>My resources are limited these days, so the much-needed work is\nproceeding slowly, albeit hopefully steadily. If you are interested and\nyou would like to contribute to refactoring or documenting a particular\nfeature, it would be very welcome.</p>\n<p><a href=\"https://travis-ci.org/ahkab/ahkab\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb5287f7c13d61b21c97eff0f14d76c08b5caa28/68747470733a2f2f7472617669732d63692e6f72672f61686b61622f61686b61622e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/ahkab/ahkab?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36f87b7ecd94ea70dae7d4a6f8f8e60bc2340600/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f61686b61622f61686b61622f62616467652e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/ahkab/\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7beadd839cbd8880b3c781738eff90c7d62deb12/687474703a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e31382d627269676874677265656e2e706e67\"></a> <a href=\"https://raw.githubusercontent.com/ahkab/ahkab/master/LICENSE\" rel=\"nofollow\"><img alt=\"GPLv2 license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e37ed8f64e17701372bf339422684876d9e04dbc/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c25323076322d627269676874677265656e2e706e67\"></a> <a href=\"http://dx.doi.org/10.5281/zenodo.17696\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64c4c6ab8c99996e6e72823ad3a4ec5d729aeecd/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f646f692f31302e353238312f7a656e6f646f2e31373639362e737667\"></a></p>\n</div>\n<div id=\"supported-simulations\">\n<h2>Supported simulations:</h2>\n<ul>\n<li>Numeric:<ul>\n<li><strong>Operating point</strong>, with guess computation to speed up the\nsolution. See example: <a href=\"https://ahkab.readthedocs.org/en/latest/examples/OP_simulation.html\" rel=\"nofollow\">Downscaling current\nmirror</a></li>\n<li><strong>DC sweep</strong></li>\n<li><strong>Transient analysis</strong>, available differentiation formulas:\nimplicit Euler, trapezoidal, gear orders from 2 to 5. See for\nexample the <a href=\"https://ahkab.readthedocs.org/en/latest/examples/Transient-Example.html\" rel=\"nofollow\">simulation of a Colpitts\nOscillator</a>.</li>\n<li><strong>AC analysis</strong></li>\n<li><strong>PZ</strong> analysis</li>\n<li><strong>Periodic steady state analysis</strong> of non-autonomous circuits,\n<em>time</em> <em>domain</em> shooting and brute-force algorithms.</li>\n</ul>\n</li>\n<li>Symbolic:<ul>\n<li><strong>Small signal analysis</strong>, AC or DC, with extraction of transfer\nfunctions, DC gain, poles and zeros. Various <a href=\"https://ahkab.readthedocs.org/en/latest/examples/Symbolic-simulation.html\" rel=\"nofollow\">symbolic analysis\nexamples on this\npage</a>.</li>\n</ul>\n</li>\n</ul>\n<p>The results are saved to disk, plotted or printed to stdout and can be\nread/processed by the most common tools (eg.\n<a href=\"http://www.gnu.org/software/octave/\" rel=\"nofollow\">Octave</a>,\n<a href=\"http://www.gnuplot.info/\" rel=\"nofollow\">gnuplot</a>,\n<a href=\"http://www.mathworks.com/products/matlab/\" rel=\"nofollow\">Matlab</a>,\n<a href=\"http://www.telltronics.org/software/gwave/\" rel=\"nofollow\">gwave</a> and others)</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>The program requires:</p>\n<ul>\n<li>the Python interpreter version 2 or 3 (at least v.2.6 for Python2,\nv.3.3 for Python3),</li>\n<li>numpy&gt;=1.7.0, scipy&gt;=0.14.0, sympy&gt;=0.7.6 and tabulate&gt;=0.7.3.</li>\n</ul>\n<p>Matplotlib is strongly recommended and no plotting will work without.</p>\n<p>If you need more information about the dependencies, check the <a href=\"https://ahkab.readthedocs.org/en/latest/help/Install-Notes.html\" rel=\"nofollow\">Install\nnotes</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"ahkab-can-be-run-as-a-python-library\">\n<h3>1. <tt>ahkab</tt> can be run as a Python library</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahkab</span> <span class=\"kn\">import</span> <span class=\"n\">new_ac</span><span class=\"p\">,</span> <span class=\"n\">run</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ahkab.circuit</span> <span class=\"kn\">import</span> <span class=\"n\">Circuit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ahkab.plotting</span> <span class=\"kn\">import</span> <span class=\"n\">plot_results</span> <span class=\"c1\"># calls matplotlib for you</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># Define the circuit</span>\n<span class=\"n\">cir</span> <span class=\"o\">=</span> <span class=\"n\">Circuit</span><span class=\"p\">(</span><span class=\"s1\">'Butterworth 1kHz band-pass filter'</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_vsource</span><span class=\"p\">(</span><span class=\"s1\">'V1'</span><span class=\"p\">,</span> <span class=\"s1\">'n1'</span><span class=\"p\">,</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"n\">dc_value</span><span class=\"o\">=</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"n\">ac_value</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_resistor</span><span class=\"p\">(</span><span class=\"s1\">'R1'</span><span class=\"p\">,</span> <span class=\"s1\">'n1'</span><span class=\"p\">,</span> <span class=\"s1\">'n2'</span><span class=\"p\">,</span> <span class=\"mf\">50.</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_inductor</span><span class=\"p\">(</span><span class=\"s1\">'L1'</span><span class=\"p\">,</span> <span class=\"s1\">'n2'</span><span class=\"p\">,</span> <span class=\"s1\">'n3'</span><span class=\"p\">,</span> <span class=\"mf\">0.245894</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_capacitor</span><span class=\"p\">(</span><span class=\"s1\">'C1'</span><span class=\"p\">,</span> <span class=\"s1\">'n3'</span><span class=\"p\">,</span> <span class=\"s1\">'n4'</span><span class=\"p\">,</span> <span class=\"mf\">1.03013e-07</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_inductor</span><span class=\"p\">(</span><span class=\"s1\">'L2'</span><span class=\"p\">,</span> <span class=\"s1\">'n4'</span><span class=\"p\">,</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"mf\">9.83652e-05</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_capacitor</span><span class=\"p\">(</span><span class=\"s1\">'C2'</span><span class=\"p\">,</span> <span class=\"s1\">'n4'</span><span class=\"p\">,</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"mf\">0.000257513</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_inductor</span><span class=\"p\">(</span><span class=\"s1\">'L3'</span><span class=\"p\">,</span> <span class=\"s1\">'n4'</span><span class=\"p\">,</span> <span class=\"s1\">'n5'</span><span class=\"p\">,</span> <span class=\"mf\">0.795775</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_capacitor</span><span class=\"p\">(</span><span class=\"s1\">'C3'</span><span class=\"p\">,</span> <span class=\"s1\">'n5'</span><span class=\"p\">,</span> <span class=\"s1\">'n6'</span><span class=\"p\">,</span> <span class=\"mf\">3.1831e-08</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_inductor</span><span class=\"p\">(</span><span class=\"s1\">'L4'</span><span class=\"p\">,</span> <span class=\"s1\">'n6'</span><span class=\"p\">,</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"mf\">9.83652e-05</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_capacitor</span><span class=\"p\">(</span><span class=\"s1\">'C4'</span><span class=\"p\">,</span> <span class=\"s1\">'n6'</span><span class=\"p\">,</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"mf\">0.000257513</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_capacitor</span><span class=\"p\">(</span><span class=\"s1\">'C5'</span><span class=\"p\">,</span> <span class=\"s1\">'n7'</span><span class=\"p\">,</span> <span class=\"s1\">'n8'</span><span class=\"p\">,</span> <span class=\"mf\">1.03013e-07</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_inductor</span><span class=\"p\">(</span><span class=\"s1\">'L5'</span><span class=\"p\">,</span> <span class=\"s1\">'n6'</span><span class=\"p\">,</span> <span class=\"s1\">'n7'</span><span class=\"p\">,</span> <span class=\"mf\">0.245894</span><span class=\"p\">)</span>\n<span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">add_resistor</span><span class=\"p\">(</span><span class=\"s1\">'R2'</span><span class=\"p\">,</span> <span class=\"s1\">'n8'</span><span class=\"p\">,</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"mf\">50.</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Define the analysis</span>\n<span class=\"n\">ac1</span> <span class=\"o\">=</span> <span class=\"n\">new_ac</span><span class=\"p\">(</span><span class=\"mf\">2.</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*.</span><span class=\"mf\">97e3</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"mf\">1.03e3</span><span class=\"p\">,</span> <span class=\"mf\">1e2</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># run it</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">cir</span><span class=\"p\">,</span> <span class=\"n\">ac1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># plot the results</span>\n<span class=\"n\">plot_results</span><span class=\"p\">(</span><span class=\"s1\">'5th order 1kHz Butterworth filter'</span><span class=\"p\">,</span> <span class=\"p\">[(</span><span class=\"s1\">'|Vn8|'</span><span class=\"p\">,</span><span class=\"s2\">\"\"</span><span class=\"p\">)],</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">'ac'</span><span class=\"p\">],</span>\n             <span class=\"n\">outfilename</span><span class=\"o\">=</span><span class=\"s1\">'bpf_transfer_fn.png'</span><span class=\"p\">)</span>\n</pre>\n<div id=\"ahkab-can-be-run-from-the-command-line-with-a-netlist-file\">\n<h4>2. <tt>ahkab</tt> can be run from the command line with a netlist file</h4>\n<p>The syntax is:</p>\n<pre>`$ python ahkab -o graph.dat &lt;netlist file&gt;`\n</pre>\n<p>See <tt>ahkab <span class=\"pre\">--help</span></tt> for command line switches, <a href=\"http://ahkab.readthedocs.org/en/latest/help/Command-Line-Help.html\" rel=\"nofollow\">also online on the\ndocumentation\npages.</a></p>\n</div>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>The <a href=\"http://ahkab.readthedocs.org/en/latest/\" rel=\"nofollow\">documentation is available on\nRTD</a>.</p>\n<p>There, you can find a\n<a href=\"http://ahkab.readthedocs.org/en/latest/ahkab.html\" rel=\"nofollow\">documentation</a>\nand\n<a href=\"http://ahkab.readthedocs.org/en/latest/examples/Python_API.html\" rel=\"nofollow\">examples</a>\nregarding how to simulate from a Python script.</p>\n<p>Refer to the <a href=\"http://ahkab.readthedocs.org/en/latest/help/Netlist-Syntax.html\" rel=\"nofollow\">netlist syntax\npage</a>\nif you prefer to write netlist files that describe the circuit.</p>\n<p>Experience with running SPICE or related commercial simulators can be\nvery useful: this is not for the faint of heart.</p>\n</div>\n<div id=\"development-model\">\n<h3>Development model</h3>\n<ul>\n<li>The development happens on the <a href=\"https://github.com/ahkab/ahkab\" rel=\"nofollow\">github\nrepository</a>,</li>\n<li>Mostly on the master branch, with feature branch being created only\nfor special purposes or non-trivial features.</li>\n<li>Snapshots are released on a (hopefully) regular basis and are\navailable on the <a href=\"https://github.com/ahkab/ahkab/releases\" rel=\"nofollow\">Releases pages, complete with\nchangelog</a> and on\n<a href=\"https://pypi.python.org/pypi/ahkab/\" rel=\"nofollow\">PYPI</a></li>\n</ul>\n<p>Patches and pull requests are welcome!</p>\n</div>\n<div id=\"how-this-project-was-born\">\n<h3>How this project was born</h3>\n<p>This project was born when I was an enthusistic undergrad, apparently\nwith plenty of free time, attending \u201cSimulazione Circuitale\u201d (<em>Circuit\nSimulation</em>) taught by <a href=\"http://brambilla.dei.polimi.it/\" rel=\"nofollow\">Prof. A.\nBrambilla</a> back in Italy at the\nPolytechnic University of Milan.</p>\n<p>I am grateful to prof. Brambilla for teaching one of the most\ninteresting courses of my university years. -GV</p>\n</div>\n<div id=\"bugs-and-patches\">\n<h3>Bugs and patches</h3>\n<p>Does it work? Bugs? Do you have patches? Did you run some noteworthy\nsimulation? Let me know! Feedback is very welcome, my <a href=\"http://tinymailto.com/5310\" rel=\"nofollow\">email\naddress</a> is available after a captcha.</p>\n</div>\n<div id=\"support-the-development-with-a-donation\">\n<h3>Support the development with a donation</h3>\n<p>If you wish to support the development of <tt>ahkab</tt>, <strong>*please donate to\ncancer research:*</strong></p>\n<ul>\n<li><a href=\"http://www.aicr.org.uk/donate.aspx\" rel=\"nofollow\">Association for International Cancer Research\n(eng)</a>,</li>\n</ul>\n<p>or</p>\n<ul>\n<li><a href=\"http://www.istitutotumori.mi.it/modules.php?name=Content&amp;pa=showpage&amp;pid=24\" rel=\"nofollow\">Fond. IRCCS Istituto Nazionale dei Tumori\n(it)</a>.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p><strong>Authors:</strong> <a href=\"https://github.com/ggventurini\" rel=\"nofollow\">Giuseppe Venturini</a>,\nwith contributions from <a href=\"https://github.com/itdaniher\" rel=\"nofollow\">Ian Daniher</a>\nand <a href=\"https://github.com/weilawei\" rel=\"nofollow\">Rob Crowther</a>.</p>\n<p><strong>Code:</strong> the module <tt>py3compat.py</tt> is (c) 2013 - the Jinja team.</p>\n<p><strong>Dependencies:</strong> many thanks to the authors of <tt>numpy</tt>, <tt>scipy</tt>,\n<tt>sympy</tt>, <tt>matplotlib</tt> and <tt>tabulate</tt>!</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1630031, "releases": {"0.12": [{"comment_text": "", "digests": {"md5": "4e52690dc1bebb258aed0b37e7b30f0d", "sha256": "e3f7277f8fd95c3f3159b0eba75ac20fbefae478b8bbd2a2dc58afc7a564ac56"}, "downloads": -1, "filename": "ahkab-0.12.tar.gz", "has_sig": false, "md5_digest": "4e52690dc1bebb258aed0b37e7b30f0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127341, "upload_time": "2015-01-07T11:22:32", "upload_time_iso_8601": "2015-01-07T11:22:32.432220Z", "url": "https://files.pythonhosted.org/packages/c1/0b/4f15b7ee72e83bb400bf22e2d03e6be8fb0e30e87049c9aca43d00572a16/ahkab-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "073454e4ce35544444670378f51e9fbd", "sha256": "109b78fbba92888dba88835dd0f48ffd5fdc4dd6cf97d7fba587834cdf298c28"}, "downloads": -1, "filename": "ahkab-0.13.tar.gz", "has_sig": false, "md5_digest": "073454e4ce35544444670378f51e9fbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140331, "upload_time": "2015-02-17T17:17:53", "upload_time_iso_8601": "2015-02-17T17:17:53.101718Z", "url": "https://files.pythonhosted.org/packages/bb/04/940d34274ee4f344053145f2652cee686862c8ef11a8d15f0b936e79985e/ahkab-0.13.tar.gz", "yanked": false}], "0.14": [], "0.15": [], "0.15.1": [{"comment_text": "", "digests": {"md5": "d85b9e51c92f16bfe20536e0dacc2f99", "sha256": "b12a5847ac70b6caf27e94c360643189953239f7385694d831817d3a6e269a48"}, "downloads": -1, "filename": "ahkab-0.15.1.tar.gz", "has_sig": false, "md5_digest": "d85b9e51c92f16bfe20536e0dacc2f99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142650, "upload_time": "2015-04-20T12:32:49", "upload_time_iso_8601": "2015-04-20T12:32:49.729390Z", "url": "https://files.pythonhosted.org/packages/5d/36/60445bba2a00e41c61ee38ef4f0ebaa81799e26d1025510cc33bf6bd2831/ahkab-0.15.1.tar.gz", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "679f0758cec08278dfb67e9ae1682f3f", "sha256": "2e31d570303e26199be27e6f98b8ea1a036a7736884a86315c8bb4dec05299d3"}, "downloads": -1, "filename": "ahkab-0.16.tar.gz", "has_sig": false, "md5_digest": "679f0758cec08278dfb67e9ae1682f3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143477, "upload_time": "2015-05-03T13:17:54", "upload_time_iso_8601": "2015-05-03T13:17:54.969535Z", "url": "https://files.pythonhosted.org/packages/5d/a1/a81208574f7373cd85117bbeee682f190a7a2aaa1a1cefc48dc1612929da/ahkab-0.16.tar.gz", "yanked": false}], "0.17": [{"comment_text": "", "digests": {"md5": "f99492a8d81344ea6e6450bce934335e", "sha256": "1e5ce6eea5068155890bdea35cc3cdd0f9a7d3584e87669970d94cbf00f0e575"}, "downloads": -1, "filename": "ahkab-0.17.tar.gz", "has_sig": false, "md5_digest": "f99492a8d81344ea6e6450bce934335e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147246, "upload_time": "2015-05-17T19:53:49", "upload_time_iso_8601": "2015-05-17T19:53:49.134559Z", "url": "https://files.pythonhosted.org/packages/f7/af/48dd1f180b08e0cc0cee85d250ed39143639edb7d9aba9c14053fd4a3659/ahkab-0.17.tar.gz", "yanked": false}], "0.18": [{"comment_text": "", "digests": {"md5": "c202f8ee6fe8188eac9a20333de1a071", "sha256": "69625db9c5c8c4e20f16e6c0afe15b34cfce85c80a41049feda30891dcdbffe5"}, "downloads": -1, "filename": "ahkab-0.18.tar.gz", "has_sig": false, "md5_digest": "c202f8ee6fe8188eac9a20333de1a071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163005, "upload_time": "2015-07-12T15:34:52", "upload_time_iso_8601": "2015-07-12T15:34:52.193944Z", "url": "https://files.pythonhosted.org/packages/8b/b4/02d892780fbf27646454fc0655e5bc9df7b48bcfc544b24d1fbb52cdc033/ahkab-0.18.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c202f8ee6fe8188eac9a20333de1a071", "sha256": "69625db9c5c8c4e20f16e6c0afe15b34cfce85c80a41049feda30891dcdbffe5"}, "downloads": -1, "filename": "ahkab-0.18.tar.gz", "has_sig": false, "md5_digest": "c202f8ee6fe8188eac9a20333de1a071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163005, "upload_time": "2015-07-12T15:34:52", "upload_time_iso_8601": "2015-07-12T15:34:52.193944Z", "url": "https://files.pythonhosted.org/packages/8b/b4/02d892780fbf27646454fc0655e5bc9df7b48bcfc544b24d1fbb52cdc033/ahkab-0.18.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:15 2020"}