{"info": {"author": "Masashi Terui", "author_email": "marcy9114+pypi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "Lamvery\n=======\n\n|Build Status| |Coverage| |Scrutinizer Code Quality| |Version|\n\nDescription\n===========\n\nUser-friendly deploy and management tool for AWS Lambda function.\n\nWhy user-friendly?\n~~~~~~~~~~~~~~~~~~\n\nThe format of the configuration file is ``YAML``\\ (with ``Jinja2``)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ``YAML`` is user-friendly than ``JSON``\n-  We can avoid some redundant contents by ``Jinja2`` template engine\n\nAdditional features that are not in the standard Lambda functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  Passing the environment variables\n-  Passing the confidential information use ``KMS`` encryption\n-  Passing the confidential files use ``KMS`` encryption\n-  And more\n\nMore useful features for deploying and invoking our functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  We can build, configure, deploy, rollback and invoke with a single\n   command\n-  We can rollback **correctly** to the previous version of the alias\n-  Deply(build) hooks\n-  And more\n\nMore useful features for using and managing the related services\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  API Gateway (Swagger)\n-  CloudWatch Events\n-  CloudWatch Logs\n-  And more\n\nRequirements\n============\n\n-  Python2.7\n-  pip\n\nRecommends\n==========\n\n-  virtualenv\n   **Automatically collect the lightweighted and compiled libraries in\n   the virtualenv environment.**\n\nInstallation\n============\n\nPyPI\n----\n\n.. code:: sh\n\n    pip install lamvery\n\nApt\n---\n\n.. code:: sh\n\n    echo \"deb https://dl.bintray.com/willyworks/deb trusty main\" | sudo tee -a /etc/apt/sources.list\n    sudo apt-get update\n    sudo apt-get install lamvery\n    export PATH=/opt/lamvery/bin:$PATH\n\nYum\n---\n\n.. code:: sh\n\n    echo \"\n    [bintraybintray-willyworks-rpm]\n    name=bintray-willyworks-rpm\n    baseurl=https://dl.bintray.com/willyworks/rpm/centos/\\$releaserver/\\$basearch/\n    gpgcheck=0\n    enabled=1\n    \" | sudo tee -a /etc/yum.repos.d/bintray-willyworks-rpm.repo\n    sudo yum install lamvery\n    export PATH=/opt/lamvery/bin:$PATH\n\nSetup and configuration\n=======================\n\nFirst,\n\n.. code:: sh\n\n    lamvery init\n\n| And then edit your ``.lamvery.yml`` like so.\n| The configuration is written in YAML syntax with ``jinja2`` template.\n| Environment variables are stored in the ``env`` variable.\n\nGeneral settings (default: ``.lamvery.yml``)\n--------------------------------------------\n\n.. code:: yml\n\n    profile: private\n    region: us-east-1\n    versioning: true\n    default_alias: test\n    clean_build: false\n    configuration:\n      name: lamvery-test\n      runtime: python2.7\n      role: {{ env['AWS_LAMBDA_ROLE'] }}\n      handler: lambda_function.lambda_handler\n      description: This is sample lambda function.\n      timeout: 10\n      memory_size: 128\n      environment_variables:\n        MYENV: foobar\n      vpc_config:\n        subnets:\n        - subnet-cadf2993\n        security_groups:\n        - sg-4d095028\n\nprofile\n~~~~~~~\n\nThe name of a profile to use. If not given, it depends on ``boto3``.\n\nregion\n~~~~~~\n\n| The region name of your environment.\n| If you doesn't set this option, it depends on ``boto3``.\n\nversioning\n~~~~~~~~~~\n\nEnable the function versioning.\n\ndefault\\_alias\n~~~~~~~~~~~~~~\n\nThe alias when it has not been specified in the ``-a`` or ``--alias``\noption.\n\nclean\\_build\n~~~~~~~~~~~~\n\nBuild the archive(zip) in the temporary area.\n\nconfiguration\n~~~~~~~~~~~~~\n\n-  | name\n   | The name of your function.\n\n-  | runtime\n   | The runtime environment for the Lambda function you are uploading.\n   | Currently, ``lamvery`` supports ``python2.7`` and ``nodejs``.\n\n-  | role\n   | The Amazon Resource Name (ARN) of the IAM role for your function.\n\n-  | handler\n   | The function within your code that Lambda calls to begin execution.\n\n-  | description\n   | The description of your function.\n\n-  | timeout\n   | The function execution time(seconds) at which Lambda should\n     terminate the function.\n\n-  | memory\\_size\n   | The amount of memory for your function environment.\n\n-  | environment\\_variables\n   | Environment variables.\n\n-  vpc\\_config\n   The VPC configurations for the function to access resources in your\n   VPC.\n-  subnets\n   The Subnet ids in your VPC.\n-  | security\\_groups\n   | The SecurityGroup ids in your VPC.\n\nCloudWatch Events settings (default: ``.lamvery.event.yml``)\n------------------------------------------------------------\n\n.. code:: yml\n\n    rules:\n    - name: foo\n      description: bar\n      schedule: 'rate(5 minutes)'\n      targets:\n      - id: test-target-id\n        input:\n          this:\n          - is: a\n          - sample: input\n\nrules\n~~~~~\n\nCloudWatch Event Rules.\n\n-  | NAME\n   | The name of CloudWatch Event Rule.\n\n-  | description\n   | The description of CloudWatch Event Rule.\n\n-  | schedule\n   | The schedule expression of CloudWatch Event Rule.\n\n-  | disabled\n   | When this setting is true, change the state of CloudWatch Event\n     Rule to ``DISABLED``.\n   | default: ``false``\n\n-  targets\n   The targets of CloudWatch Event Rule.\n-  id\n   The unique target assignment ID.\n-  input\n   Arguments passed to the target.\n-  | input\\_path\n   | The value of the JSONPath that is used for extracting part of the\n     matched event when passing it to the target.\n\n*``input`` and ``input_path`` are mutually-exclusive and optional\nparameters of a target.*\n\nSecret informations (default: ``.lamvery.secret.yml``)\n------------------------------------------------------\n\n.. code:: yml\n\n    key_id: {{ env['AWS_KMS_KEY_ID'] }}\n    cipher_texts:\n      foo: CiC4xW9lg7HaxaueeN+d9yJMyY1uw1i7tYVvQz9I8+e2UBKXAQEBAgB4uMVvZYOx2sWrnnjfnfciTMmNbsNYu7WFb0M/SPPntlAAAABuMGwGCSqGSIb3DQEHBqBfMF0CAQAwWAYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAzWTJWk/69T8NTBquoCARCAK2Hg2de71hzwjiMKkfMSG2G1Olj1EjxajS+3PsFVTPZ91Oi/AjR1aMqAI8U=\n\nkey\\_id\n~~~~~~~\n\nThe ID of your encryption key on KMS.\n\ncipher\\_texts\n~~~~~~~~~~~~~\n\nThe name and cipher texts to pass to the lambda function.\n\nsecret\\_files\n~~~~~~~~~~~~~\n\nThe filename and the encrypted contents to pass to the lambda function.\n\nExcluded patterns from the archive (default: ``.lamvery.exclude.yml``)\n----------------------------------------------------------------------\n\n.. code:: yml\n\n    - ^\\.lamvery\\.yml$\n    - ^\\.lamvery\\.event\\.yml$\n    - ^\\.lamvery\\.secret\\.yml$\n    - ^\\.lamvery\\.exclude\\.yml$\n\nExclude files or directories using regular expression.\n\nAction hooks (default: ``.lamvery.hook.yml``)\n---------------------------------------------\n\n.. code:: yml\n\n    build:\n      pre:\n      - pip install -r requirements.txt -t ./\n      post: []\n\nbuild\n~~~~~\n\nThe hooks for ``build``\\ (and ``deploy``)\n\n-  | pre\n   | The commands that run before building.\n\n-  | post\n   | The commands that run after building.\n\nAPI Gateway integration (default: ``.lamvery.api.yml``)\n-------------------------------------------------------\n\n.. code:: yml\n\n    api_id: myipugal74\n    stage: dev\n    cors:\n      origin: '*'\n      methods:\n      - GET\n      - OPTION\n      headers:\n      - Content-Type\n      - X-Amz-Date\n      - Authorization\n      - X-Api-Key\n    configuration:\n      swagger: '2.0'\n      info:\n        title: Sample API\n      schemes:\n      - https\n      paths:\n        /:\n          get:\n            produces:\n            - application/json\n            parameters:\n            - name: sample\n              in: query\n              required: false\n              type: string\n            responses:\n              '200':\n                description: 200 response\n                schema:\n                  $ref: '#/definitions/Sample'\n      definitions:\n        Sample:\n          type: object\n\napi\\_id\n~~~~~~~\n\n| The id of your REST API.\n| This is written on automatically when you deployed your API with the\n  ``-w`` option.\n\nstage\n~~~~~\n\nThe name of the stage in API Gateway.\n\ncors\n~~~~\n\n| CORS (Cross-Origin Resource Sharing) options.\n| If you did not set the ``x-amazon-apigateway-integration`` option,\n  these are set automatically.\n\n-  origin\n   For the response's header that named \"Access-Control-Allow-Origin\".\n-  headers\n   For the response's header that named \"Access-Control-Allow-Headers\".\n-  methods\n   For the response's header that named \"Access-Control-Allow-Methods\".\n\nconfiguration\n~~~~~~~~~~~~~\n\n| The settings of your APIs written in the ``Swagger`` format.\n| If you did not set the ``x-amazon-apigateway-integration`` option,\n  these are set automatically.\n\nCommands\n========\n\nbuild\n~~~~~\n\n-  Build and archive your code and libraries to\n   ``<your-function-name>.zip``\n-  Store the secret informations to the archive\n\n.. code:: sh\n\n    lamvery build [-e <env-name>=<env-value>]\n\ndeploy\n~~~~~~\n\n-  Build and deploy your code and libraries\n-  Store the secret informations to the archive\n-  Update configuration of the function\n-  Set alias to a version of the function\n\n.. code:: sh\n\n    lamvery deploy [-e <env-name>=<env-value>] [-a <alias>]\n\nrollback\n~~~~~~~~\n\n-  Rollback to the previous version of the function\n\n**You must do one of the following to use this command.**\n\n-  Deploy with ``publish(-p,--publish)`` and ``alias(-a, --alias)``\n   options.\n-  Turn on(true) ``versioning`` and set a value to ``default_alias`` in\n   the configuration file.\n\n::\n\n    lamvery rollback [-a <alias>]\n\nset-alias\n~~~~~~~~~\n\n-  Set alias to a version of the function\n\n.. code:: sh\n\n    lamvery set-alias -a <alias> -v <alias-version>\n\nencrypt\n~~~~~~~\n\n-  Encrypt a text value using KMS\n\n.. code:: sh\n\n    lamvery encrypt [-s] -n <secret-name> <secret-value>\n\nencrypt-file\n~~~~~~~~~~~~\n\n-  Encrypt a file using KMS\n\n.. code:: sh\n\n    lamvery encrypt [-s] -n <filename> <local-file-path>\n\ndecrypt\n~~~~~~~\n\n-  Decrypt the secret information using KMS\n\n.. code:: sh\n\n    lamvery decrypt -n <secret-name>\n\nevents\n~~~~~~\n\n-  Apply CloudWatch Events settings\n\n.. code:: sh\n\n    lamvery events [-k] [-a <alias>]\n\ninvoke\n~~~~~~\n\n-  Invoke the function and output result\n\n.. code:: sh\n\n    lamvery invoke [-a <alias>] [-v <version>] '{\"foo\": \"bar\"}'\n\nor\n\n.. code:: sh\n\n    lamvery invoke [-a <alias>] [-v <version>] path/to/input.json\n\nlogs\n~~~~\n\n-  Watch the log events of the function\n\n.. code:: sh\n\n    lamvery logs [-f] [-F <filter>] [-s <start-time-string>] [-i <interval-seconds>]\n\napi\n~~~\n\n-  Manage your APIs\n\n.. code:: sh\n\n    lamvery api [-n] [-r] [-s <stage-name>] [-w]\n\ngenerate\n~~~~~~~~\n\n-  Generate skeleton files\n\n.. code:: sh\n\n    lamvery generate -k <kind-of-file>\n\nOptions\n-------\n\n``-a`` or ``--alias``\n~~~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the\n  ``deploy``,\\ ``set-alias``,\\ ``invoke``,\\ ``rollback``,\\ ``events``,\\ ``api``\n  commands.\n| Alias for a version of the function.\n\n``-c`` or ``--conf-file``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option needed by all commands.\n| Specify the configuration file.\n| default: ``.lamvery.yml``\n\n``-d`` or ``--dry-run``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the\n  ``deploy``,\\ ``alias``,\\ ``rollback``,\\ ``events``,\\ ``api`` commands.\n| Output the difference of configuration and the alias without updating.\n\n``-s`` or ``--single-file``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the ``archive`` and ``deploy`` command.\n| Archive only the lambda function file, so you can inline edit in the\n  AWS Management Console.\n\n``-l`` or ``--no-libs``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the ``archive`` and ``deploy`` command.\n| Archive without all libraries.\n\n``-n`` or ``--secret-name``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the ``encrypt`` and ``decrypt`` commands.\n| The name of the secret value.\n\n``-p`` or ``--publish``\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThis option is only needed by the ``deploy`` command. Publish the\nversion as an atomic operation.\n\n``-k`` or ``--keep-empty-events``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis option is only needed by the ``events`` command. Keep the empty\nCloudWatch Event Rule that does not have CloudWatch Event Target.\n\n``-s`` or ``--store``\n~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``encrypt`` command.\n| Store encripted value to configuration file (default:\n  ``.lamvery.yml``).\n| Requires the ``-n`` or ``--secret-name`` option.\n\n``-v`` or ``--version``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the ``set-alias``,\\ ``invoke``,\\ ``rollback``\n  commands.\n| Version of the function.\n\n``-f`` or ``--follow``\n~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``logs`` command.\n| Watch the log events and updates the display (like ``tail -f``).\n\n``-F`` or ``--filter``\n~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``logs`` command.\n| Filtering pattern for the log messages.\n\n``-i`` or ``--interval``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``logs`` command.\n| Intervals(seconds) to watch the log events.\n\n``-s`` or ``--start``\n~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``logs`` command.\n| Time to start the log events watching.\n| Examples: ``yesterday``,\\ ``\"-1 h\"``, ``\"2016-01-01\"``,\n  ``\"2016-01-01 10:20:30\"``\n\n``-t`` or ``--target``\n~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``set-alias`` command.\n| The alias of the version that is targeted for setting alias.\n\n``-e`` or ``--env``\n~~~~~~~~~~~~~~~~~~~\n\n| This option is needed by the ``archive`` and ``deploy`` commands.\n| Environment variables that pass to the function.\n| **This option can be used repeatedly to pass multiple variables.**\n| Examples: ``FOO=BAR``\n\n``-r`` or ``--remove``\n~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``api`` command.\n| Remove your APIs.\n\n``-s`` or ``--stage``\n~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``api`` command.\n| The name of the stage in API Gateway.\n\n``-w`` or ``--write-id``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``api`` command.\n| Write the id of your API to the configuration file (default:\n  ``.lamvery.api.yml``)\n\n``-n`` or ``--no-integrate``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``api`` command.\n| Without automatic integration.\n\n``-k`` or ``--kind``\n~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``generate`` command.\n| The kind of the file.\n| Allowed values: ``function``\n\n``-n`` or ``--name``\n~~~~~~~~~~~~~~~~~~~~\n\n| This option is only needed by the ``encrypt-file`` command.\n| The name of the secret file.\n\nHow to use the confidential information in the lambda function\n==============================================================\n\n1. Create key on KMS\n~~~~~~~~~~~~~~~~~~~~\n\nSee:\nhttps://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html\n\n2. Create IAM role for lambda function\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPolicy example:\n\n.. code:: json\n\n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"kms:Decrypt\"\n                ],\n                \"Resource\": [\n                    \"arn:aws:kms:us-east-1:<your-account-number>:key/<your-key-id>\"\n                ]\n            }\n        ]\n    }\n\n3. Set the key-id to your configuration file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConfiguration example:\n\n-  .lamvery.yml\n\n.. code:: yml\n\n    profile: default\n    region: us-east-1\n    versioning: false\n    default_alias: null\n    configuration:\n      name: sample_lambda_function\n      runtime: python2.7 # or nodejs\n      role: arn:aws:iam::000000000000:role/lambda_basic_execution\n      handler: lambda_function.lambda_handler\n      description: This is sample lambda function.\n      timeout: 10\n      memory_size: 128\n\n-  .lamvery.secret.yml\n\n.. code:: yml\n\n    key_id: xxxx-yyyy-zzzz # <-here!\n    cipher_texts: {}\n    secret_files: {}\n\n4. Encrypt and store the confidential information to your configuration file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand example:\n\n.. code:: sh\n\n    lamvery encrypt -s -n foo \"This is a secret\"\n\n5. Write your function\n~~~~~~~~~~~~~~~~~~~~~~\n\nGenerate the skeleton function by this command.\n\n.. code:: sh\n\n    lamvery generate -k function\n\nCode example:\n\n-  Python\n\n.. code:: py\n\n      import lamvery\n\n      def lambda_handler(event, context):\n          print(lamvery.secret.get('foo'))\n\n-  Node.js\n\n.. code:: js\n\n    var lamvery = require('./lamvery.js');\n\n    exports.lambda_handler = function(event, context) {\n        lamvery.secret.get('foo', function(err, data) {\n            console.log(data);\n        });\n    }\n\n6. Deploy your function\n~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand example:\n\n.. code:: sh\n\n    lamvery deploy\n\n7. Invoke your function\n~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand example:\n\n.. code:: sh\n\n    lamvery invoke {}\n\nResult example:\n\n::\n\n    START RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d Version: $LATEST\n    This is a secret\n    END RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d\n\nHow to use the confidential file in the lambda function\n=======================================================\n\n1. Create key on KMS\n~~~~~~~~~~~~~~~~~~~~\n\nSee:\nhttps://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html\n\n2. Create IAM role for lambda function\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPolicy example:\n\n.. code:: json\n\n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"kms:Decrypt\"\n                ],\n                \"Resource\": [\n                    \"arn:aws:kms:us-east-1:<your-account-number>:key/<your-key-id>\"\n                ]\n            }\n        ]\n    }\n\n3. Set the key-id to your configuration file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConfiguration example:\n\n-  .lamvery.yml\n\n.. code:: yml\n\n    profile: default\n    region: us-east-1\n    versioning: false\n    default_alias: null\n    configuration:\n      name: sample_lambda_function\n      runtime: python2.7 # or nodejs\n      role: arn:aws:iam::000000000000:role/lambda_basic_execution\n      handler: lambda_function.lambda_handler\n      description: This is sample lambda function.\n      timeout: 10\n      memory_size: 128\n\n-  .lamvery.secret.yml\n\n.. code:: yml\n\n    key_id: xxxx-yyyy-zzzz # <-here!\n    cipher_texts: {}\n    secret_files: {}\n\n4. Encrypt and store the confidential file to your configuration file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand example:\n\n.. code:: sh\n\n    lamvery encrypt-file -s -n foo.txt /path/to/local/confidential/file\n\n5. Write your function\n~~~~~~~~~~~~~~~~~~~~~~\n\nGenerate the skeleton function by this command.\n\n.. code:: sh\n\n    lamvery generate -k function\n\nCode example:\n\n-  Python\n\n.. code:: py\n\n      import lamvery\n\n      def lambda_handler(event, context):\n          print(open(lamvery.secret.file('foo.txt'), 'r').read())\n\n-  Node.js\n\n.. code:: js\n\n    var lamvery = require('./lamvery.js');\n\n    exports.lambda_handler = function(event, context) {\n        lamvery.secret.file('foo.txt', function(err, path) {\n            fs.readFile(path, 'utf-8', function(err, txt) {\n                console.log(txt);\n            });\n        });\n    }\n\n6. Deploy your function\n~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand example:\n\n.. code:: sh\n\n    lamvery deploy\n\n7. Invoke your function\n~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand example:\n\n.. code:: sh\n\n    lamvery invoke {}\n\nResult example:\n\n::\n\n    START RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d Version: $LATEST\n    This is a secret file\n    END RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d\n\nDevelopment\n-----------\n\n-  Source hosted at `GitHub <https://github.com/marcy-terui/lamvery>`__\n-  Report issues/questions/feature requests on `GitHub\n   Issues <https://github.com/marcy-terui/lamvery/issues>`__\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make. For\nexample:\n\n1. Fork the repo\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Commit your changes (``git commit -am 'Added some feature'``)\n4. Push to the branch (``git push origin my-new-feature``)\n5. Create new Pull Request\n\nAuthors\n-------\n\nCreated and maintained by `Masashi\nTerui <https://github.com/marcy-terui>`__ (marcy9114@gmail.com)\n\nLicense\n-------\n\nMIT License (see\n`LICENSE <https://github.com/marcy-terui/lamvery/blob/master/LICENSE>`__)\n\n.. |Build Status| image:: https://img.shields.io/travis/marcy-terui/lamvery/master.svg\n   :target: http://travis-ci.org/marcy-terui/lamvery\n.. |Coverage| image:: https://img.shields.io/coveralls/marcy-terui/lamvery.svg\n   :target: https://coveralls.io/github/marcy-terui/lamvery\n.. |Scrutinizer Code Quality| image:: https://scrutinizer-ci.com/g/marcy-terui/lamvery/badges/quality-score.png?b=master\n   :target: https://scrutinizer-ci.com/g/marcy-terui/lamvery/?branch=master\n.. |Version| image:: https://img.shields.io/pypi/v/lamvery.svg\n   :target: https://pypi.python.org/pypi/lamvery", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marcy-terui/lamvery", "keywords": "aws lambda", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "lamvery", "package_url": "https://pypi.org/project/lamvery/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lamvery/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/marcy-terui/lamvery"}, "release_url": "https://pypi.org/project/lamvery/0.18.2/", "requires_dist": null, "requires_python": null, "summary": "User-friendly deploy and management tool for AWS Lambda function.", "version": "0.18.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Lamvery<br>=======<br><br>|Build Status| |Coverage| |Scrutinizer Code Quality| |Version|<br><br>Description<br>===========<br><br>User-friendly deploy and management tool for AWS Lambda function.<br><br>Why user-friendly?<br>~~~~~~~~~~~~~~~~~~<br><br>The format of the configuration file is ``YAML``\\ (with ``Jinja2``)<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>-  ``YAML`` is user-friendly than ``JSON``<br>-  We can avoid some redundant contents by ``Jinja2`` template engine<br><br>Additional features that are not in the standard Lambda functions<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>-  Passing the environment variables<br>-  Passing the confidential information use ``KMS`` encryption<br>-  Passing the confidential files use ``KMS`` encryption<br>-  And more<br><br>More useful features for deploying and invoking our functions<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>-  We can build, configure, deploy, rollback and invoke with a single<br>   command<br>-  We can rollback **correctly** to the previous version of the alias<br>-  Deply(build) hooks<br>-  And more<br><br>More useful features for using and managing the related services<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>-  API Gateway (Swagger)<br>-  CloudWatch Events<br>-  CloudWatch Logs<br>-  And more<br><br>Requirements<br>============<br><br>-  Python2.7<br>-  pip<br><br>Recommends<br>==========<br><br>-  virtualenv<br>   **Automatically collect the lightweighted and compiled libraries in<br>   the virtualenv environment.**<br><br>Installation<br>============<br><br>PyPI<br>----<br><br>.. code:: sh<br><br>    pip install lamvery<br><br>Apt<br>---<br><br>.. code:: sh<br><br>    echo \"deb https://dl.bintray.com/willyworks/deb trusty main\" | sudo tee -a /etc/apt/sources.list<br>    sudo apt-get update<br>    sudo apt-get install lamvery<br>    export PATH=/opt/lamvery/bin:$PATH<br><br>Yum<br>---<br><br>.. code:: sh<br><br>    echo \"<br>    [bintraybintray-willyworks-rpm]<br>    name=bintray-willyworks-rpm<br>    baseurl=https://dl.bintray.com/willyworks/rpm/centos/\\$releaserver/\\$basearch/<br>    gpgcheck=0<br>    enabled=1<br>    \" | sudo tee -a /etc/yum.repos.d/bintray-willyworks-rpm.repo<br>    sudo yum install lamvery<br>    export PATH=/opt/lamvery/bin:$PATH<br><br>Setup and configuration<br>=======================<br><br>First,<br><br>.. code:: sh<br><br>    lamvery init<br><br>| And then edit your ``.lamvery.yml`` like so.<br>| The configuration is written in YAML syntax with ``jinja2`` template.<br>| Environment variables are stored in the ``env`` variable.<br><br>General settings (default: ``.lamvery.yml``)<br>--------------------------------------------<br><br>.. code:: yml<br><br>    profile: private<br>    region: us-east-1<br>    versioning: true<br>    default_alias: test<br>    clean_build: false<br>    configuration:<br>      name: lamvery-test<br>      runtime: python2.7<br>      role: {{ env['AWS_LAMBDA_ROLE'] }}<br>      handler: lambda_function.lambda_handler<br>      description: This is sample lambda function.<br>      timeout: 10<br>      memory_size: 128<br>      environment_variables:<br>        MYENV: foobar<br>      vpc_config:<br>        subnets:<br>        - subnet-cadf2993<br>        security_groups:<br>        - sg-4d095028<br><br>profile<br>~~~~~~~<br><br>The name of a profile to use. If not given, it depends on ``boto3``.<br><br>region<br>~~~~~~<br><br>| The region name of your environment.<br>| If you doesn't set this option, it depends on ``boto3``.<br><br>versioning<br>~~~~~~~~~~<br><br>Enable the function versioning.<br><br>default\\_alias<br>~~~~~~~~~~~~~~<br><br>The alias when it has not been specified in the ``-a`` or ``--alias``<br>option.<br><br>clean\\_build<br>~~~~~~~~~~~~<br><br>Build the archive(zip) in the temporary area.<br><br>configuration<br>~~~~~~~~~~~~~<br><br>-  | name<br>   | The name of your function.<br><br>-  | runtime<br>   | The runtime environment for the Lambda function you are uploading.<br>   | Currently, ``lamvery`` supports ``python2.7`` and ``nodejs``.<br><br>-  | role<br>   | The Amazon Resource Name (ARN) of the IAM role for your function.<br><br>-  | handler<br>   | The function within your code that Lambda calls to begin execution.<br><br>-  | description<br>   | The description of your function.<br><br>-  | timeout<br>   | The function execution time(seconds) at which Lambda should<br>     terminate the function.<br><br>-  | memory\\_size<br>   | The amount of memory for your function environment.<br><br>-  | environment\\_variables<br>   | Environment variables.<br><br>-  vpc\\_config<br>   The VPC configurations for the function to access resources in your<br>   VPC.<br>-  subnets<br>   The Subnet ids in your VPC.<br>-  | security\\_groups<br>   | The SecurityGroup ids in your VPC.<br><br>CloudWatch Events settings (default: ``.lamvery.event.yml``)<br>------------------------------------------------------------<br><br>.. code:: yml<br><br>    rules:<br>    - name: foo<br>      description: bar<br>      schedule: 'rate(5 minutes)'<br>      targets:<br>      - id: test-target-id<br>        input:<br>          this:<br>          - is: a<br>          - sample: input<br><br>rules<br>~~~~~<br><br>CloudWatch Event Rules.<br><br>-  | NAME<br>   | The name of CloudWatch Event Rule.<br><br>-  | description<br>   | The description of CloudWatch Event Rule.<br><br>-  | schedule<br>   | The schedule expression of CloudWatch Event Rule.<br><br>-  | disabled<br>   | When this setting is true, change the state of CloudWatch Event<br>     Rule to ``DISABLED``.<br>   | default: ``false``<br><br>-  targets<br>   The targets of CloudWatch Event Rule.<br>-  id<br>   The unique target assignment ID.<br>-  input<br>   Arguments passed to the target.<br>-  | input\\_path<br>   | The value of the JSONPath that is used for extracting part of the<br>     matched event when passing it to the target.<br><br>*``input`` and ``input_path`` are mutually-exclusive and optional<br>parameters of a target.*<br><br>Secret informations (default: ``.lamvery.secret.yml``)<br>------------------------------------------------------<br><br>.. code:: yml<br><br>    key_id: {{ env['AWS_KMS_KEY_ID'] }}<br>    cipher_texts:<br>      foo: CiC4xW9lg7HaxaueeN+d9yJMyY1uw1i7tYVvQz9I8+e2UBKXAQEBAgB4uMVvZYOx2sWrnnjfnfciTMmNbsNYu7WFb0M/SPPntlAAAABuMGwGCSqGSIb3DQEHBqBfMF0CAQAwWAYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAzWTJWk/69T8NTBquoCARCAK2Hg2de71hzwjiMKkfMSG2G1Olj1EjxajS+3PsFVTPZ91Oi/AjR1aMqAI8U=<br><br>key\\_id<br>~~~~~~~<br><br>The ID of your encryption key on KMS.<br><br>cipher\\_texts<br>~~~~~~~~~~~~~<br><br>The name and cipher texts to pass to the lambda function.<br><br>secret\\_files<br>~~~~~~~~~~~~~<br><br>The filename and the encrypted contents to pass to the lambda function.<br><br>Excluded patterns from the archive (default: ``.lamvery.exclude.yml``)<br>----------------------------------------------------------------------<br><br>.. code:: yml<br><br>    - ^\\.lamvery\\.yml$<br>    - ^\\.lamvery\\.event\\.yml$<br>    - ^\\.lamvery\\.secret\\.yml$<br>    - ^\\.lamvery\\.exclude\\.yml$<br><br>Exclude files or directories using regular expression.<br><br>Action hooks (default: ``.lamvery.hook.yml``)<br>---------------------------------------------<br><br>.. code:: yml<br><br>    build:<br>      pre:<br>      - pip install -r requirements.txt -t ./<br>      post: []<br><br>build<br>~~~~~<br><br>The hooks for ``build``\\ (and ``deploy``)<br><br>-  | pre<br>   | The commands that run before building.<br><br>-  | post<br>   | The commands that run after building.<br><br>API Gateway integration (default: ``.lamvery.api.yml``)<br>-------------------------------------------------------<br><br>.. code:: yml<br><br>    api_id: myipugal74<br>    stage: dev<br>    cors:<br>      origin: '*'<br>      methods:<br>      - GET<br>      - OPTION<br>      headers:<br>      - Content-Type<br>      - X-Amz-Date<br>      - Authorization<br>      - X-Api-Key<br>    configuration:<br>      swagger: '2.0'<br>      info:<br>        title: Sample API<br>      schemes:<br>      - https<br>      paths:<br>        /:<br>          get:<br>            produces:<br>            - application/json<br>            parameters:<br>            - name: sample<br>              in: query<br>              required: false<br>              type: string<br>            responses:<br>              '200':<br>                description: 200 response<br>                schema:<br>                  $ref: '#/definitions/Sample'<br>      definitions:<br>        Sample:<br>          type: object<br><br>api\\_id<br>~~~~~~~<br><br>| The id of your REST API.<br>| This is written on automatically when you deployed your API with the<br>  ``-w`` option.<br><br>stage<br>~~~~~<br><br>The name of the stage in API Gateway.<br><br>cors<br>~~~~<br><br>| CORS (Cross-Origin Resource Sharing) options.<br>| If you did not set the ``x-amazon-apigateway-integration`` option,<br>  these are set automatically.<br><br>-  origin<br>   For the response's header that named \"Access-Control-Allow-Origin\".<br>-  headers<br>   For the response's header that named \"Access-Control-Allow-Headers\".<br>-  methods<br>   For the response's header that named \"Access-Control-Allow-Methods\".<br><br>configuration<br>~~~~~~~~~~~~~<br><br>| The settings of your APIs written in the ``Swagger`` format.<br>| If you did not set the ``x-amazon-apigateway-integration`` option,<br>  these are set automatically.<br><br>Commands<br>========<br><br>build<br>~~~~~<br><br>-  Build and archive your code and libraries to<br>   ``&lt;your-function-name&gt;.zip``<br>-  Store the secret informations to the archive<br><br>.. code:: sh<br><br>    lamvery build [-e &lt;env-name&gt;=&lt;env-value&gt;]<br><br>deploy<br>~~~~~~<br><br>-  Build and deploy your code and libraries<br>-  Store the secret informations to the archive<br>-  Update configuration of the function<br>-  Set alias to a version of the function<br><br>.. code:: sh<br><br>    lamvery deploy [-e &lt;env-name&gt;=&lt;env-value&gt;] [-a &lt;alias&gt;]<br><br>rollback<br>~~~~~~~~<br><br>-  Rollback to the previous version of the function<br><br>**You must do one of the following to use this command.**<br><br>-  Deploy with ``publish(-p,--publish)`` and ``alias(-a, --alias)``<br>   options.<br>-  Turn on(true) ``versioning`` and set a value to ``default_alias`` in<br>   the configuration file.<br><br>::<br><br>    lamvery rollback [-a &lt;alias&gt;]<br><br>set-alias<br>~~~~~~~~~<br><br>-  Set alias to a version of the function<br><br>.. code:: sh<br><br>    lamvery set-alias -a &lt;alias&gt; -v &lt;alias-version&gt;<br><br>encrypt<br>~~~~~~~<br><br>-  Encrypt a text value using KMS<br><br>.. code:: sh<br><br>    lamvery encrypt [-s] -n &lt;secret-name&gt; &lt;secret-value&gt;<br><br>encrypt-file<br>~~~~~~~~~~~~<br><br>-  Encrypt a file using KMS<br><br>.. code:: sh<br><br>    lamvery encrypt [-s] -n &lt;filename&gt; &lt;local-file-path&gt;<br><br>decrypt<br>~~~~~~~<br><br>-  Decrypt the secret information using KMS<br><br>.. code:: sh<br><br>    lamvery decrypt -n &lt;secret-name&gt;<br><br>events<br>~~~~~~<br><br>-  Apply CloudWatch Events settings<br><br>.. code:: sh<br><br>    lamvery events [-k] [-a &lt;alias&gt;]<br><br>invoke<br>~~~~~~<br><br>-  Invoke the function and output result<br><br>.. code:: sh<br><br>    lamvery invoke [-a &lt;alias&gt;] [-v &lt;version&gt;] '{\"foo\": \"bar\"}'<br><br>or<br><br>.. code:: sh<br><br>    lamvery invoke [-a &lt;alias&gt;] [-v &lt;version&gt;] path/to/input.json<br><br>logs<br>~~~~<br><br>-  Watch the log events of the function<br><br>.. code:: sh<br><br>    lamvery logs [-f] [-F &lt;filter&gt;] [-s &lt;start-time-string&gt;] [-i &lt;interval-seconds&gt;]<br><br>api<br>~~~<br><br>-  Manage your APIs<br><br>.. code:: sh<br><br>    lamvery api [-n] [-r] [-s &lt;stage-name&gt;] [-w]<br><br>generate<br>~~~~~~~~<br><br>-  Generate skeleton files<br><br>.. code:: sh<br><br>    lamvery generate -k &lt;kind-of-file&gt;<br><br>Options<br>-------<br><br>``-a`` or ``--alias``<br>~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the<br>  ``deploy``,\\ ``set-alias``,\\ ``invoke``,\\ ``rollback``,\\ ``events``,\\ ``api``<br>  commands.<br>| Alias for a version of the function.<br><br>``-c`` or ``--conf-file``<br>~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option needed by all commands.<br>| Specify the configuration file.<br>| default: ``.lamvery.yml``<br><br>``-d`` or ``--dry-run``<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the<br>  ``deploy``,\\ ``alias``,\\ ``rollback``,\\ ``events``,\\ ``api`` commands.<br>| Output the difference of configuration and the alias without updating.<br><br>``-s`` or ``--single-file``<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the ``archive`` and ``deploy`` command.<br>| Archive only the lambda function file, so you can inline edit in the<br>  AWS Management Console.<br><br>``-l`` or ``--no-libs``<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the ``archive`` and ``deploy`` command.<br>| Archive without all libraries.<br><br>``-n`` or ``--secret-name``<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the ``encrypt`` and ``decrypt`` commands.<br>| The name of the secret value.<br><br>``-p`` or ``--publish``<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>This option is only needed by the ``deploy`` command. Publish the<br>version as an atomic operation.<br><br>``-k`` or ``--keep-empty-events``<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>This option is only needed by the ``events`` command. Keep the empty<br>CloudWatch Event Rule that does not have CloudWatch Event Target.<br><br>``-s`` or ``--store``<br>~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``encrypt`` command.<br>| Store encripted value to configuration file (default:<br>  ``.lamvery.yml``).<br>| Requires the ``-n`` or ``--secret-name`` option.<br><br>``-v`` or ``--version``<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the ``set-alias``,\\ ``invoke``,\\ ``rollback``<br>  commands.<br>| Version of the function.<br><br>``-f`` or ``--follow``<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``logs`` command.<br>| Watch the log events and updates the display (like ``tail -f``).<br><br>``-F`` or ``--filter``<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``logs`` command.<br>| Filtering pattern for the log messages.<br><br>``-i`` or ``--interval``<br>~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``logs`` command.<br>| Intervals(seconds) to watch the log events.<br><br>``-s`` or ``--start``<br>~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``logs`` command.<br>| Time to start the log events watching.<br>| Examples: ``yesterday``,\\ ``\"-1 h\"``, ``\"2016-01-01\"``,<br>  ``\"2016-01-01 10:20:30\"``<br><br>``-t`` or ``--target``<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``set-alias`` command.<br>| The alias of the version that is targeted for setting alias.<br><br>``-e`` or ``--env``<br>~~~~~~~~~~~~~~~~~~~<br><br>| This option is needed by the ``archive`` and ``deploy`` commands.<br>| Environment variables that pass to the function.<br>| **This option can be used repeatedly to pass multiple variables.**<br>| Examples: ``FOO=BAR``<br><br>``-r`` or ``--remove``<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``api`` command.<br>| Remove your APIs.<br><br>``-s`` or ``--stage``<br>~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``api`` command.<br>| The name of the stage in API Gateway.<br><br>``-w`` or ``--write-id``<br>~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``api`` command.<br>| Write the id of your API to the configuration file (default:<br>  ``.lamvery.api.yml``)<br><br>``-n`` or ``--no-integrate``<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``api`` command.<br>| Without automatic integration.<br><br>``-k`` or ``--kind``<br>~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``generate`` command.<br>| The kind of the file.<br>| Allowed values: ``function``<br><br>``-n`` or ``--name``<br>~~~~~~~~~~~~~~~~~~~~<br><br>| This option is only needed by the ``encrypt-file`` command.<br>| The name of the secret file.<br><br>How to use the confidential information in the lambda function<br>==============================================================<br><br>1. Create key on KMS<br>~~~~~~~~~~~~~~~~~~~~<br><br>See:<br>https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html<br><br>2. Create IAM role for lambda function<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>Policy example:<br><br>.. code:: json<br><br>    {<br>        \"Version\": \"2012-10-17\",<br>        \"Statement\": [<br>            {<br>                \"Effect\": \"Allow\",<br>                \"Action\": [<br>                    \"kms:Decrypt\"<br>                ],<br>                \"Resource\": [<br>                    \"arn:aws:kms:us-east-1:&lt;your-account-number&gt;:key/&lt;your-key-id&gt;\"<br>                ]<br>            }<br>        ]<br>    }<br><br>3. Set the key-id to your configuration file<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>Configuration example:<br><br>-  .lamvery.yml<br><br>.. code:: yml<br><br>    profile: default<br>    region: us-east-1<br>    versioning: false<br>    default_alias: null<br>    configuration:<br>      name: sample_lambda_function<br>      runtime: python2.7 # or nodejs<br>      role: arn:aws:iam::000000000000:role/lambda_basic_execution<br>      handler: lambda_function.lambda_handler<br>      description: This is sample lambda function.<br>      timeout: 10<br>      memory_size: 128<br><br>-  .lamvery.secret.yml<br><br>.. code:: yml<br><br>    key_id: xxxx-yyyy-zzzz # &lt;-here!<br>    cipher_texts: {}<br>    secret_files: {}<br><br>4. Encrypt and store the confidential information to your configuration file<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>Command example:<br><br>.. code:: sh<br><br>    lamvery encrypt -s -n foo \"This is a secret\"<br><br>5. Write your function<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>Generate the skeleton function by this command.<br><br>.. code:: sh<br><br>    lamvery generate -k function<br><br>Code example:<br><br>-  Python<br><br>.. code:: py<br><br>      import lamvery<br><br>      def lambda_handler(event, context):<br>          print(lamvery.secret.get('foo'))<br><br>-  Node.js<br><br>.. code:: js<br><br>    var lamvery = require('./lamvery.js');<br><br>    exports.lambda_handler = function(event, context) {<br>        lamvery.secret.get('foo', function(err, data) {<br>            console.log(data);<br>        });<br>    }<br><br>6. Deploy your function<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>Command example:<br><br>.. code:: sh<br><br>    lamvery deploy<br><br>7. Invoke your function<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>Command example:<br><br>.. code:: sh<br><br>    lamvery invoke {}<br><br>Result example:<br><br>::<br><br>    START RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d Version: $LATEST<br>    This is a secret<br>    END RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d<br><br>How to use the confidential file in the lambda function<br>=======================================================<br><br>1. Create key on KMS<br>~~~~~~~~~~~~~~~~~~~~<br><br>See:<br>https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html<br><br>2. Create IAM role for lambda function<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>Policy example:<br><br>.. code:: json<br><br>    {<br>        \"Version\": \"2012-10-17\",<br>        \"Statement\": [<br>            {<br>                \"Effect\": \"Allow\",<br>                \"Action\": [<br>                    \"kms:Decrypt\"<br>                ],<br>                \"Resource\": [<br>                    \"arn:aws:kms:us-east-1:&lt;your-account-number&gt;:key/&lt;your-key-id&gt;\"<br>                ]<br>            }<br>        ]<br>    }<br><br>3. Set the key-id to your configuration file<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>Configuration example:<br><br>-  .lamvery.yml<br><br>.. code:: yml<br><br>    profile: default<br>    region: us-east-1<br>    versioning: false<br>    default_alias: null<br>    configuration:<br>      name: sample_lambda_function<br>      runtime: python2.7 # or nodejs<br>      role: arn:aws:iam::000000000000:role/lambda_basic_execution<br>      handler: lambda_function.lambda_handler<br>      description: This is sample lambda function.<br>      timeout: 10<br>      memory_size: 128<br><br>-  .lamvery.secret.yml<br><br>.. code:: yml<br><br>    key_id: xxxx-yyyy-zzzz # &lt;-here!<br>    cipher_texts: {}<br>    secret_files: {}<br><br>4. Encrypt and store the confidential file to your configuration file<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>Command example:<br><br>.. code:: sh<br><br>    lamvery encrypt-file -s -n foo.txt /path/to/local/confidential/file<br><br>5. Write your function<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>Generate the skeleton function by this command.<br><br>.. code:: sh<br><br>    lamvery generate -k function<br><br>Code example:<br><br>-  Python<br><br>.. code:: py<br><br>      import lamvery<br><br>      def lambda_handler(event, context):<br>          print(open(lamvery.secret.file('foo.txt'), 'r').read())<br><br>-  Node.js<br><br>.. code:: js<br><br>    var lamvery = require('./lamvery.js');<br><br>    exports.lambda_handler = function(event, context) {<br>        lamvery.secret.file('foo.txt', function(err, path) {<br>            fs.readFile(path, 'utf-8', function(err, txt) {<br>                console.log(txt);<br>            });<br>        });<br>    }<br><br>6. Deploy your function<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>Command example:<br><br>.. code:: sh<br><br>    lamvery deploy<br><br>7. Invoke your function<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>Command example:<br><br>.. code:: sh<br><br>    lamvery invoke {}<br><br>Result example:<br><br>::<br><br>    START RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d Version: $LATEST<br>    This is a secret file<br>    END RequestId: 13829c9c-9f13-11e5-921b-6f048cff3c2d<br><br>Development<br>-----------<br><br>-  Source hosted at `GitHub &lt;https://github.com/marcy-terui/lamvery&gt;`__<br>-  Report issues/questions/feature requests on `GitHub<br>   Issues &lt;https://github.com/marcy-terui/lamvery/issues&gt;`__<br><br>Pull requests are very welcome! Make sure your patches are well tested.<br>Ideally create a topic branch for every separate change you make. For<br>example:<br><br>1. Fork the repo<br>2. Create your feature branch (``git checkout -b my-new-feature``)<br>3. Commit your changes (``git commit -am 'Added some feature'``)<br>4. Push to the branch (``git push origin my-new-feature``)<br>5. Create new Pull Request<br><br>Authors<br>-------<br><br>Created and maintained by `Masashi<br>Terui &lt;https://github.com/marcy-terui&gt;`__ (marcy9114@gmail.com)<br><br>License<br>-------<br><br>MIT License (see<br>`LICENSE &lt;https://github.com/marcy-terui/lamvery/blob/master/LICENSE&gt;`__)<br><br>.. |Build Status| image:: https://img.shields.io/travis/marcy-terui/lamvery/master.svg<br>   :target: http://travis-ci.org/marcy-terui/lamvery<br>.. |Coverage| image:: https://img.shields.io/coveralls/marcy-terui/lamvery.svg<br>   :target: https://coveralls.io/github/marcy-terui/lamvery<br>.. |Scrutinizer Code Quality| image:: https://scrutinizer-ci.com/g/marcy-terui/lamvery/badges/quality-score.png?b=master<br>   :target: https://scrutinizer-ci.com/g/marcy-terui/lamvery/?branch=master<br>.. |Version| image:: https://img.shields.io/pypi/v/lamvery.svg<br>   :target: https://pypi.python.org/pypi/lamvery\n          </div>"}, "last_serial": 2679628, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "df95fba387c275811bc0ff2f65e5be9b", "sha256": "e65148d68dc2b256dfa55a861b2a17ee2879612c5a2028885d583f4d63a56a83"}, "downloads": -1, "filename": "lamvery-0.0.1.tar.gz", "has_sig": false, "md5_digest": "df95fba387c275811bc0ff2f65e5be9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5532, "upload_time": "2015-11-12T04:34:27", "upload_time_iso_8601": "2015-11-12T04:34:27.190055Z", "url": "https://files.pythonhosted.org/packages/9f/9d/86c9f1e6deea7321f21377ba75c8e6db4270a297d6b564cf93e0c16b8101/lamvery-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "606ed81d986e9abe376ef5e9ee58abce", "sha256": "655d9635a8d6d43ff743c72824a91aae4208d76d574905755541fe1a8158b8c1"}, "downloads": -1, "filename": "lamvery-0.0.2.tar.gz", "has_sig": false, "md5_digest": "606ed81d986e9abe376ef5e9ee58abce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5603, "upload_time": "2015-11-12T04:36:41", "upload_time_iso_8601": "2015-11-12T04:36:41.997978Z", "url": "https://files.pythonhosted.org/packages/33/11/374d5b358f00243bcdfc007566e272918855bde9d75b9b0e927015a502f8/lamvery-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "bf764874813782d4e6150cac183a3adf", "sha256": "7afaa6f5bbdf5c6bbf8f3dd9f8cd0e64820c774128721c28582d0646fd331f2e"}, "downloads": -1, "filename": "lamvery-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bf764874813782d4e6150cac183a3adf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5622, "upload_time": "2015-11-12T04:59:13", "upload_time_iso_8601": "2015-11-12T04:59:13.817397Z", "url": "https://files.pythonhosted.org/packages/40/72/183f88e1831b96dd511d83eddbc043f1bfc0d7f10b1302e067ecef573579/lamvery-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e031a682744f5c40d6ca776040f10466", "sha256": "5d3348b08de1fb01a5451b14005371d220087bb958c879350cc946166e5df0db"}, "downloads": -1, "filename": "lamvery-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e031a682744f5c40d6ca776040f10466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5970, "upload_time": "2015-11-19T06:49:45", "upload_time_iso_8601": "2015-11-19T06:49:45.874267Z", "url": "https://files.pythonhosted.org/packages/f2/d9/c2ca187483b35474252ded5733ddc3e334b3788bc71e1e5514e65e03155c/lamvery-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f476f6f27de5e504d83ea7480746f3d5", "sha256": "361db0ef26f947bbc6b8782b881acb97d5eff93d5dfbb1b6696ba7661802b3c8"}, "downloads": -1, "filename": "lamvery-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f476f6f27de5e504d83ea7480746f3d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6641, "upload_time": "2015-11-20T10:56:29", "upload_time_iso_8601": "2015-11-20T10:56:29.137446Z", "url": "https://files.pythonhosted.org/packages/1f/36/6bdaf7072a2bcae23cbd53e8a94097fc0a03d71ddc6cc7cff0af748ee15c/lamvery-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "0ba921e5a41d98d30ebe66dd2e1b817f", "sha256": "81ee111ecafa89c6cc8a8974267c397ebb5bc528834ede70d123814dbd3be459"}, "downloads": -1, "filename": "lamvery-0.0.6.tar.gz", "has_sig": false, "md5_digest": "0ba921e5a41d98d30ebe66dd2e1b817f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6695, "upload_time": "2015-11-20T11:24:39", "upload_time_iso_8601": "2015-11-20T11:24:39.991884Z", "url": "https://files.pythonhosted.org/packages/1f/ea/05c0b1b0e26793d7c9f3c51df540081303321d7f7ca41b21489119e0b8af/lamvery-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "41a055dd3f78b926b1b04f3357a46783", "sha256": "5fd561b886c9a73cb2b27a9975d8b1996c6df657b48cc830e19298639b0126fb"}, "downloads": -1, "filename": "lamvery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "41a055dd3f78b926b1b04f3357a46783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6758, "upload_time": "2015-12-03T05:45:22", "upload_time_iso_8601": "2015-12-03T05:45:22.358027Z", "url": "https://files.pythonhosted.org/packages/9e/66/454c1c355deefb3d7ebed71dd691fa5ff5f1c04ccd15aba13fd4fe045202/lamvery-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "ac79ae129f8f48086e4dba48471f2aa7", "sha256": "e936c441056cbe63eb0295eee6ed50f8851ad86773dd8d20e3484cd562303347"}, "downloads": -1, "filename": "lamvery-0.10.0.tar.gz", "has_sig": false, "md5_digest": "ac79ae129f8f48086e4dba48471f2aa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18686, "upload_time": "2016-01-29T04:23:12", "upload_time_iso_8601": "2016-01-29T04:23:12.732669Z", "url": "https://files.pythonhosted.org/packages/9c/fc/f2b6f708ae418e3f2e83d5434ca94d9e88009c300950ff388d9a7716dfa2/lamvery-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "382b62b072842708094c4bcf80487d79", "sha256": "13d607f21d128a935930376d1cd6a944f9ead123f47330e963a1ac894026f817"}, "downloads": -1, "filename": "lamvery-0.10.1.tar.gz", "has_sig": false, "md5_digest": "382b62b072842708094c4bcf80487d79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16713, "upload_time": "2016-02-02T16:59:32", "upload_time_iso_8601": "2016-02-02T16:59:32.250707Z", "url": "https://files.pythonhosted.org/packages/1b/a4/a7e2a7ab67ebdaeaa2a20bc6dce0833cd70cb89cd479f52e9759813f9600/lamvery-0.10.1.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "61b1cac2a620046c1f4625371dfea73b", "sha256": "06e6931dffc761cfbac8f294b87b284904ea6b74629b1dbb515d2d4bf503ca3b"}, "downloads": -1, "filename": "lamvery-0.10.2.tar.gz", "has_sig": false, "md5_digest": "61b1cac2a620046c1f4625371dfea73b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42539, "upload_time": "2016-02-05T10:28:58", "upload_time_iso_8601": "2016-02-05T10:28:58.811406Z", "url": "https://files.pythonhosted.org/packages/0c/c3/eed25e05b52aebae4d41be9143446503da29a1396b8da422b5332b4d6f96/lamvery-0.10.2.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "4bfc93858b861a5fbe19c843f68b4a63", "sha256": "44ba73b986c11f6090b351ac327936c5706c91d7a52390e0ca6094f972bbee1e"}, "downloads": -1, "filename": "lamvery-0.11.0.tar.gz", "has_sig": false, "md5_digest": "4bfc93858b861a5fbe19c843f68b4a63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19042, "upload_time": "2016-02-08T15:57:18", "upload_time_iso_8601": "2016-02-08T15:57:18.958752Z", "url": "https://files.pythonhosted.org/packages/26/c0/fa404b0e947cee8c9d853881cde3ee88d0deb6f98027b399c247e368243a/lamvery-0.11.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "23c6512ed0fa85350df0de173a1919c2", "sha256": "98bd28a9aae3c6b38f49d82313ea7eba60314a52108e32c179b4450ffafd3934"}, "downloads": -1, "filename": "lamvery-0.11.1.tar.gz", "has_sig": false, "md5_digest": "23c6512ed0fa85350df0de173a1919c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44677, "upload_time": "2016-02-09T03:47:18", "upload_time_iso_8601": "2016-02-09T03:47:18.193295Z", "url": "https://files.pythonhosted.org/packages/22/a2/d4181e96793d5e606f428f746898b8a66c25f7f9fcfa020bdd5bec025625/lamvery-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "22fbbe579ea0fc07a73783f3a9cd25b4", "sha256": "12c005661f1180d5504eea4ebf45c57f99ef5fe8c898af69bd04247cb01db2a3"}, "downloads": -1, "filename": "lamvery-0.11.2.tar.gz", "has_sig": false, "md5_digest": "22fbbe579ea0fc07a73783f3a9cd25b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44621, "upload_time": "2016-02-09T10:41:49", "upload_time_iso_8601": "2016-02-09T10:41:49.393629Z", "url": "https://files.pythonhosted.org/packages/dc/05/6dbda8515bc93da42626ad19fd22fc4a767179f393787de6d3dd4469652a/lamvery-0.11.2.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "e6d4363b799db2a94a66fc666ebddc48", "sha256": "4984b166f915f2f210a332264e2fc087060f5cadfec98aaeb2411349746f946e"}, "downloads": -1, "filename": "lamvery-0.12.0.tar.gz", "has_sig": false, "md5_digest": "e6d4363b799db2a94a66fc666ebddc48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45385, "upload_time": "2016-02-12T02:57:38", "upload_time_iso_8601": "2016-02-12T02:57:38.123775Z", "url": "https://files.pythonhosted.org/packages/69/00/3fb4e65119f5d64ebb38288bb2e4f4efba6ede40ae24aef426e112ee3207/lamvery-0.12.0.tar.gz", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "1e6a1fb8ed427d99d2801ed7e574dc3b", "sha256": "ab1a91651247e6453da196ed99f187fdd85e9aabecc9320c94bdb72a5deb055b"}, "downloads": -1, "filename": "lamvery-0.12.1.tar.gz", "has_sig": false, "md5_digest": "1e6a1fb8ed427d99d2801ed7e574dc3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45445, "upload_time": "2016-02-15T03:44:03", "upload_time_iso_8601": "2016-02-15T03:44:03.194339Z", "url": "https://files.pythonhosted.org/packages/8a/23/274647fb8dc428c3e292751e2771c979f47e824d7583feaec26bd053ef30/lamvery-0.12.1.tar.gz", "yanked": false}], "0.12.2": [{"comment_text": "", "digests": {"md5": "2a6886d8a57f1f8ec9aeb874fe34be4e", "sha256": "a5998a925ab41f5eafab212ab2506686bbe5a713347b86df8751bcf30e885d2f"}, "downloads": -1, "filename": "lamvery-0.12.2.tar.gz", "has_sig": false, "md5_digest": "2a6886d8a57f1f8ec9aeb874fe34be4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45700, "upload_time": "2016-02-16T05:39:34", "upload_time_iso_8601": "2016-02-16T05:39:34.001087Z", "url": "https://files.pythonhosted.org/packages/3d/d9/402d910281d7dd345ee76c1557d54ca7387e1a5b01cb8cf4f013b36d4cef/lamvery-0.12.2.tar.gz", "yanked": false}], "0.12.3": [{"comment_text": "", "digests": {"md5": "0dd79b96d99d787145e3781a127f2da5", "sha256": "74dfcfb6f56bbb9af31ced30332bdb28dba2c77534077e4a5722f8f33b2defb5"}, "downloads": -1, "filename": "lamvery-0.12.3.tar.gz", "has_sig": false, "md5_digest": "0dd79b96d99d787145e3781a127f2da5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45754, "upload_time": "2016-02-16T06:33:39", "upload_time_iso_8601": "2016-02-16T06:33:39.349787Z", "url": "https://files.pythonhosted.org/packages/a0/70/5dade76b5679c07ec8cfe5fea749db4ff50c42c9d6557bc79912a2386181/lamvery-0.12.3.tar.gz", "yanked": false}], "0.12.4": [{"comment_text": "", "digests": {"md5": "36a8b8d7db4791385dce6b058a573cd3", "sha256": "5977d1efcfc4bde3fd0d764082d4f73e20731740d729a1656b65d6a043602ef5"}, "downloads": -1, "filename": "lamvery-0.12.4.tar.gz", "has_sig": false, "md5_digest": "36a8b8d7db4791385dce6b058a573cd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19465, "upload_time": "2016-02-17T12:25:53", "upload_time_iso_8601": "2016-02-17T12:25:53.846623Z", "url": "https://files.pythonhosted.org/packages/b1/1d/9a386972a4b90f9d7906df490e9c40fc923291b203f4f90510c254be05a9/lamvery-0.12.4.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "7b4c508fbe3a6cf71070444b3a37af9c", "sha256": "f0b391421810c1dd0750a9292e149b0ff59c3ac17e1c259723f0504104af5a3f"}, "downloads": -1, "filename": "lamvery-0.13.0.tar.gz", "has_sig": false, "md5_digest": "7b4c508fbe3a6cf71070444b3a37af9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20488, "upload_time": "2016-02-18T14:42:32", "upload_time_iso_8601": "2016-02-18T14:42:32.029508Z", "url": "https://files.pythonhosted.org/packages/bc/ce/7e95551524ef59271df5c5bd052874e42383a265b7f21d5d07ce0eb1741a/lamvery-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "8a39b0895b35c6164b69c601773a82e3", "sha256": "5b91db4b3c4613ac2409212b9e3c1232539e9097cfcbcc8ee921db3a42564d62"}, "downloads": -1, "filename": "lamvery-0.14.0.tar.gz", "has_sig": false, "md5_digest": "8a39b0895b35c6164b69c601773a82e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48371, "upload_time": "2016-02-25T09:29:47", "upload_time_iso_8601": "2016-02-25T09:29:47.461430Z", "url": "https://files.pythonhosted.org/packages/8f/74/5a58b3d844fa53786d5d397940dadabb2f6493352d1007f19bb8b23bfb33/lamvery-0.14.0.tar.gz", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "335e1ea4a10d167650a183ed968d4c50", "sha256": "58629323048eb0e40dde73a5e12e9cff6f9c9987855b316fe2a2bc3f204ad433"}, "downloads": -1, "filename": "lamvery-0.14.1.tar.gz", "has_sig": false, "md5_digest": "335e1ea4a10d167650a183ed968d4c50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50435, "upload_time": "2016-03-31T05:03:12", "upload_time_iso_8601": "2016-03-31T05:03:12.868711Z", "url": "https://files.pythonhosted.org/packages/28/cf/dde6c860ad0be93bb181acff2e8f6138eaa6c444fb02c0563bac77efa02b/lamvery-0.14.1.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "7fc380a02f1d70cffb98abc88f54b93c", "sha256": "58ae9dd535908ca6677a33ff2120a0e29614ad00f40ccd97bccec5097e0f1fcc"}, "downloads": -1, "filename": "lamvery-0.15.0.tar.gz", "has_sig": false, "md5_digest": "7fc380a02f1d70cffb98abc88f54b93c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57982, "upload_time": "2016-04-15T04:57:07", "upload_time_iso_8601": "2016-04-15T04:57:07.883775Z", "url": "https://files.pythonhosted.org/packages/65/5c/de910e223fdfa7146a5a5bf22776891af41864b27c584ad97a8e9c66183e/lamvery-0.15.0.tar.gz", "yanked": false}], "0.15.1": [{"comment_text": "", "digests": {"md5": "4fafed8970cc526a3e3e076ea52db96e", "sha256": "d5619ba6025de32e6c08ae8f968b5ffabee3e50ece489d8e29dafc7a1cc420f1"}, "downloads": -1, "filename": "lamvery-0.15.1.tar.gz", "has_sig": false, "md5_digest": "4fafed8970cc526a3e3e076ea52db96e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63102, "upload_time": "2016-04-15T05:59:06", "upload_time_iso_8601": "2016-04-15T05:59:06.666033Z", "url": "https://files.pythonhosted.org/packages/2f/10/989fb249bf5f0b2f8daffe6b315b13712fc885fc825b85fdd15212605e34/lamvery-0.15.1.tar.gz", "yanked": false}], "0.15.2": [{"comment_text": "", "digests": {"md5": "9209fe69d6efd97435a5071288956373", "sha256": "8fad570858891473be58cf89c65da12567a1a31544bf2b92242be63aa804fde3"}, "downloads": -1, "filename": "lamvery-0.15.2.tar.gz", "has_sig": false, "md5_digest": "9209fe69d6efd97435a5071288956373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26689, "upload_time": "2016-06-10T03:11:02", "upload_time_iso_8601": "2016-06-10T03:11:02.396971Z", "url": "https://files.pythonhosted.org/packages/2c/16/d103d601ef75d258c9e80dc3e15d6c98a781e29fa133896f868a7f755133/lamvery-0.15.2.tar.gz", "yanked": false}], "0.15.3": [{"comment_text": "", "digests": {"md5": "865ce25b02bce9b279c004387cc6d0bf", "sha256": "2b3683ecfd36d9cff51cbf78245d44dec8db27d16eb06bf366b04c4c1fed6acd"}, "downloads": -1, "filename": "lamvery-0.15.3.tar.gz", "has_sig": false, "md5_digest": "865ce25b02bce9b279c004387cc6d0bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26710, "upload_time": "2016-06-13T16:32:41", "upload_time_iso_8601": "2016-06-13T16:32:41.974923Z", "url": "https://files.pythonhosted.org/packages/59/d5/fed7b85ad867dcbcfb162200ee9b4e04076655cd759b205deceac9276118/lamvery-0.15.3.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "38785c9802d9f0e5c22b33a4a2e829da", "sha256": "9e11d4de8e9eee7ea42a1fa81f737878bc56cddad6b1678f82cb4312ee53ee45"}, "downloads": -1, "filename": "lamvery-0.16.0.tar.gz", "has_sig": false, "md5_digest": "38785c9802d9f0e5c22b33a4a2e829da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27441, "upload_time": "2016-06-27T16:44:52", "upload_time_iso_8601": "2016-06-27T16:44:52.015404Z", "url": "https://files.pythonhosted.org/packages/06/3d/662acab1654da70e23d68953fc2e5555baf8b33c7ac84191c5cb4e9499d7/lamvery-0.16.0.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "aa5fab3d4950e2a116fe8231ac7eb217", "sha256": "996e4f9f349c7018ed0681ea5b5175a29613f8d0f64b74fd9229049f3fd848bb"}, "downloads": -1, "filename": "lamvery-0.17.0.tar.gz", "has_sig": false, "md5_digest": "aa5fab3d4950e2a116fe8231ac7eb217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33287, "upload_time": "2016-07-14T13:57:12", "upload_time_iso_8601": "2016-07-14T13:57:12.324209Z", "url": "https://files.pythonhosted.org/packages/44/14/ee92a435f05d9b624ce670adabad9c59f2ded3aff82ad636b5f460c6a6aa/lamvery-0.17.0.tar.gz", "yanked": false}], "0.17.1": [{"comment_text": "", "digests": {"md5": "f974e28755f04cd24c23fd6d7f77a55d", "sha256": "8646a1a113515d4b33c275b8f550e9e0767fec4763b27e7b2e0d4dc6337dde45"}, "downloads": -1, "filename": "lamvery-0.17.1.tar.gz", "has_sig": false, "md5_digest": "f974e28755f04cd24c23fd6d7f77a55d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33305, "upload_time": "2016-08-24T08:04:43", "upload_time_iso_8601": "2016-08-24T08:04:43.848232Z", "url": "https://files.pythonhosted.org/packages/a8/c3/435060b532aa75e37b399b44ba3d51de30a948a71be54e2ba7472ddace06/lamvery-0.17.1.tar.gz", "yanked": false}], "0.17.2": [{"comment_text": "", "digests": {"md5": "29622723d90feeb6790cac24edf4e164", "sha256": "8ffdf5096f0d285fb53b7e89b9b67bb49e141ade2bd3e5c41e3e44befddaeee9"}, "downloads": -1, "filename": "lamvery-0.17.2.tar.gz", "has_sig": false, "md5_digest": "29622723d90feeb6790cac24edf4e164", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33154, "upload_time": "2016-10-05T04:23:16", "upload_time_iso_8601": "2016-10-05T04:23:16.897727Z", "url": "https://files.pythonhosted.org/packages/1f/2a/ddff5eaa43aa1ecf667d29af90afe1101f15cac7c080161b56ba3b0d0503/lamvery-0.17.2.tar.gz", "yanked": false}], "0.17.3": [{"comment_text": "", "digests": {"md5": "d31cbf05fe1d0923e26583bee96b7f56", "sha256": "04dfe4236892ee2da8151fcaecbebcd5079c40c900e588477d3a95b46290a328"}, "downloads": -1, "filename": "lamvery-0.17.3.tar.gz", "has_sig": false, "md5_digest": "d31cbf05fe1d0923e26583bee96b7f56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33143, "upload_time": "2016-11-14T06:30:17", "upload_time_iso_8601": "2016-11-14T06:30:17.752539Z", "url": "https://files.pythonhosted.org/packages/4e/99/fe261729491e8b02b64684a981dff25ecdfd8e5bd2e05c948339862bbbfe/lamvery-0.17.3.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "cb625be7e5b1338bfd02660a8718f5d0", "sha256": "432e2a75e037c3151b25e40a950ac9fb829269bb219e77f2b22e8d892af61ef2"}, "downloads": -1, "filename": "lamvery-0.18.0.tar.gz", "has_sig": false, "md5_digest": "cb625be7e5b1338bfd02660a8718f5d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32578, "upload_time": "2016-12-20T04:45:20", "upload_time_iso_8601": "2016-12-20T04:45:20.812796Z", "url": "https://files.pythonhosted.org/packages/28/73/9a4ddc1a710fc917dcc8681d1bbff134c76a0b3c4457d292ca28a7db2ecf/lamvery-0.18.0.tar.gz", "yanked": false}], "0.18.1": [{"comment_text": "", "digests": {"md5": "d9390919abcd3d6a3a8f57f6e7d147cb", "sha256": "2d01ca017df12f99e1aa41f2deeed38afdbc1b04c033908d838a8d91567d6b54"}, "downloads": -1, "filename": "lamvery-0.18.1.tar.gz", "has_sig": false, "md5_digest": "d9390919abcd3d6a3a8f57f6e7d147cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32590, "upload_time": "2017-01-25T13:57:13", "upload_time_iso_8601": "2017-01-25T13:57:13.077026Z", "url": "https://files.pythonhosted.org/packages/cf/38/b68a55218b8daf0f3b75d3731d8ab307518d28c8d69ebcd484df169372ca/lamvery-0.18.1.tar.gz", "yanked": false}], "0.18.2": [{"comment_text": "", "digests": {"md5": "c4d8fbfca03c93205a863f6f5c5dbded", "sha256": "2faaa221751705515a55b6d3ea330a22095e5db1bf5992eaaf9a055dd25ce2c8"}, "downloads": -1, "filename": "lamvery-0.18.2.tar.gz", "has_sig": false, "md5_digest": "c4d8fbfca03c93205a863f6f5c5dbded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32673, "upload_time": "2017-03-03T05:06:32", "upload_time_iso_8601": "2017-03-03T05:06:32.077751Z", "url": "https://files.pythonhosted.org/packages/90/8f/13e6b2ef3a9bb7641513b2add7989b1fd3d9bbbf88caaed8277201e49338/lamvery-0.18.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ae605cfbf6e7d3726108c374e5719554", "sha256": "5a89631c0a843170ada2366673ed5866f8fcf25cc9b978ad0004924d48ce84ba"}, "downloads": -1, "filename": "lamvery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ae605cfbf6e7d3726108c374e5719554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9094, "upload_time": "2015-12-10T08:51:52", "upload_time_iso_8601": "2015-12-10T08:51:52.938183Z", "url": "https://files.pythonhosted.org/packages/f7/60/119801f96221b601eb494da1eb1c5b2d6c6b333dded0d4ae39452d5dc147/lamvery-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "71eb627bb54ec91c34244e03fd0bde80", "sha256": "74abfd3a265553078978a6c6e58ce09e66d5b734ce0dae79e622c7635e10493a"}, "downloads": -1, "filename": "lamvery-0.3.0.tar.gz", "has_sig": false, "md5_digest": "71eb627bb54ec91c34244e03fd0bde80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6703, "upload_time": "2015-12-10T14:28:24", "upload_time_iso_8601": "2015-12-10T14:28:24.830177Z", "url": "https://files.pythonhosted.org/packages/42/75/f19541091a24d1a03e582a9f4700c59329e7fcc1fbe615e1b20b64b91878/lamvery-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6e70c3a2572e565de4ed07fe535845bf", "sha256": "9dca31bf469fe2528883501f74fb011ec9cc141b9f8f30562c2210f481eb3b09"}, "downloads": -1, "filename": "lamvery-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6e70c3a2572e565de4ed07fe535845bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6742, "upload_time": "2015-12-10T15:08:14", "upload_time_iso_8601": "2015-12-10T15:08:14.131831Z", "url": "https://files.pythonhosted.org/packages/96/91/0f371c44061c1274b8b201bfcf09f79a71f1409e53545f32183d8811ebe7/lamvery-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "15ee8a50f27c7a121791c4491dafae7c", "sha256": "42bb5dfb32728455053b29a55e4d1fd5484407603cc64e379b7c821739fb626b"}, "downloads": -1, "filename": "lamvery-0.3.2.tar.gz", "has_sig": false, "md5_digest": "15ee8a50f27c7a121791c4491dafae7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6763, "upload_time": "2015-12-11T16:33:56", "upload_time_iso_8601": "2015-12-11T16:33:56.662058Z", "url": "https://files.pythonhosted.org/packages/bf/bb/c9d3e100c284eaf40f75493c43d299fb9d15ce602b23a90d4a677d2df064/lamvery-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "0375a675d9015dc33cd94424c30b2399", "sha256": "3dcd918537cd8a8ba0f276689f3809bc611350c5c4e535d3c5e5765d55049e5d"}, "downloads": -1, "filename": "lamvery-0.3.3.tar.gz", "has_sig": false, "md5_digest": "0375a675d9015dc33cd94424c30b2399", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6781, "upload_time": "2015-12-15T14:25:08", "upload_time_iso_8601": "2015-12-15T14:25:08.046305Z", "url": "https://files.pythonhosted.org/packages/29/27/d7737d6837ec5a6e1f9c582163b4761a31dad93fb5398ab1b4a6cb7c0ab7/lamvery-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "4918ea7fc3a683d10b85578a14a5075f", "sha256": "f47b306053b63575422d568a1b8d09eef0fbce8f0d15b7c29319c0e0a6873701"}, "downloads": -1, "filename": "lamvery-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4918ea7fc3a683d10b85578a14a5075f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7259, "upload_time": "2015-12-16T04:47:12", "upload_time_iso_8601": "2015-12-16T04:47:12.882527Z", "url": "https://files.pythonhosted.org/packages/98/ee/f1ee42aa0c017cdaf9b74a98fcbd94060f223d7aa78ba69274adb09757e1/lamvery-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "7c8db7c3ec18c094922f8a77381c4ed3", "sha256": "1d5b73e37343b4c9e44d7491ff9a69e9d622de64754c277d7deb432bfdf39ec0"}, "downloads": -1, "filename": "lamvery-0.5.0.tar.gz", "has_sig": false, "md5_digest": "7c8db7c3ec18c094922f8a77381c4ed3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7638, "upload_time": "2016-01-19T05:29:34", "upload_time_iso_8601": "2016-01-19T05:29:34.854157Z", "url": "https://files.pythonhosted.org/packages/de/0f/b32729a996798801284aae0b22c3116ae28e877a0a00e1ad15e4e0da2464/lamvery-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "1a860017872fa0f240c92676478eb4fb", "sha256": "7d60916088d1b3d22c0edc73f14953cc2d51472559913ef7caaf0a03e1858257"}, "downloads": -1, "filename": "lamvery-0.5.1.tar.gz", "has_sig": false, "md5_digest": "1a860017872fa0f240c92676478eb4fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7690, "upload_time": "2016-01-19T07:39:30", "upload_time_iso_8601": "2016-01-19T07:39:30.580231Z", "url": "https://files.pythonhosted.org/packages/be/a0/46718c7dc263d1a42d66420d795d15a97febfd49f86242c75b3642a39c0f/lamvery-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "a39e3e5ab9d8f46418dcef8544546aea", "sha256": "cd46ca7edd4b298962ff82b88a47ede1c514f6ae352b8c2a083f696003d4502b"}, "downloads": -1, "filename": "lamvery-0.5.2.tar.gz", "has_sig": false, "md5_digest": "a39e3e5ab9d8f46418dcef8544546aea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7638, "upload_time": "2016-01-19T07:46:51", "upload_time_iso_8601": "2016-01-19T07:46:51.675952Z", "url": "https://files.pythonhosted.org/packages/b4/bb/b70f4481262561b315f5e4d752373eff46d8c34fc316c4dcc27d528de0a1/lamvery-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "10d414f9c9564364b91f8b523d9d1b4d", "sha256": "c7cac338b9fccd3ad386a9be3c69d85c41a8bf9d9a8778930573dd9bc6d5019a"}, "downloads": -1, "filename": "lamvery-0.6.0.tar.gz", "has_sig": false, "md5_digest": "10d414f9c9564364b91f8b523d9d1b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7648, "upload_time": "2016-01-19T11:52:16", "upload_time_iso_8601": "2016-01-19T11:52:16.453682Z", "url": "https://files.pythonhosted.org/packages/df/7c/ffeb0fddd9e4b5e13ed748bb9701727037ff93c316c3c59dc71a7e7eeaf0/lamvery-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "5b5b23667046f3f5790a151b1eb9fda0", "sha256": "a5cd1038ef8fe79bbad93f9716ce5d254fb23a3b3328d71860df398c621c9deb"}, "downloads": -1, "filename": "lamvery-0.7.0.tar.gz", "has_sig": false, "md5_digest": "5b5b23667046f3f5790a151b1eb9fda0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9532, "upload_time": "2016-01-22T16:32:30", "upload_time_iso_8601": "2016-01-22T16:32:30.220297Z", "url": "https://files.pythonhosted.org/packages/3e/8e/d174ef3a8628105b5218ce52f27cbb73ee5cfb8ba03e81cdcb686aeecdab/lamvery-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "95f18ff0d558095cba5781ef508d6986", "sha256": "c81eb0839ae7dfba40a33c67194381a3b35d3ebe8a17a8dfd609e23566c6de40"}, "downloads": -1, "filename": "lamvery-0.8.0.tar.gz", "has_sig": false, "md5_digest": "95f18ff0d558095cba5781ef508d6986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16198, "upload_time": "2016-01-26T03:58:09", "upload_time_iso_8601": "2016-01-26T03:58:09.536751Z", "url": "https://files.pythonhosted.org/packages/1d/bd/f8d8d32e81020e30abfc4e3274a20705d1b31e9e20dcf7d5a8c193d29877/lamvery-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "27745b856462206fac10b4f3f2d42ea3", "sha256": "323304c4c55e46d0c87a89148efd6bab017abfd52ee055fa158253d3bfa21c11"}, "downloads": -1, "filename": "lamvery-0.8.1.tar.gz", "has_sig": false, "md5_digest": "27745b856462206fac10b4f3f2d42ea3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17171, "upload_time": "2016-01-26T05:42:19", "upload_time_iso_8601": "2016-01-26T05:42:19.143814Z", "url": "https://files.pythonhosted.org/packages/e1/d9/52231a62ad3a24a9391b46fff52f8d43a68f1b9c30bdc932eacdb96a8339/lamvery-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "2ba078637e4a9e328613ae5de15d77cf", "sha256": "f6aaf14ea6271e5fb5e53fa362167abbce6fea62ce76de0615f14883ea52758c"}, "downloads": -1, "filename": "lamvery-0.8.2.tar.gz", "has_sig": false, "md5_digest": "2ba078637e4a9e328613ae5de15d77cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17213, "upload_time": "2016-01-26T07:13:53", "upload_time_iso_8601": "2016-01-26T07:13:53.492784Z", "url": "https://files.pythonhosted.org/packages/0e/59/2f3def714675d7cb99865ea367865fb75e61a9292952e7d21866031e0cf7/lamvery-0.8.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "7692cf4e9f4b0dfe41595ba957f3d44f", "sha256": "3b26991f25a29623d5851812e20584745eb8d0db5e8295d97c3d60b5427bd20a"}, "downloads": -1, "filename": "lamvery-0.9.0.tar.gz", "has_sig": false, "md5_digest": "7692cf4e9f4b0dfe41595ba957f3d44f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15922, "upload_time": "2016-01-27T15:04:43", "upload_time_iso_8601": "2016-01-27T15:04:43.487486Z", "url": "https://files.pythonhosted.org/packages/63/3f/843ab5e23a93bd511dfa99d86f31bf39d1abe5cfcd1bd4cce8eca5172f0a/lamvery-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4d8fbfca03c93205a863f6f5c5dbded", "sha256": "2faaa221751705515a55b6d3ea330a22095e5db1bf5992eaaf9a055dd25ce2c8"}, "downloads": -1, "filename": "lamvery-0.18.2.tar.gz", "has_sig": false, "md5_digest": "c4d8fbfca03c93205a863f6f5c5dbded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32673, "upload_time": "2017-03-03T05:06:32", "upload_time_iso_8601": "2017-03-03T05:06:32.077751Z", "url": "https://files.pythonhosted.org/packages/90/8f/13e6b2ef3a9bb7641513b2add7989b1fd3d9bbbf88caaed8277201e49338/lamvery-0.18.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:00 2020"}