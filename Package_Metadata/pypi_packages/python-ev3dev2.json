{"info": {"author": "ev3dev Python team", "author_email": "python-team@ev3dev.org", "bugtrack_url": null, "classifiers": [], "description": "Python language bindings for ev3dev\n===================================\n\n.. image:: https://travis-ci.org/ev3dev/ev3dev-lang-python.svg?branch=ev3dev-stretch\n    :target: https://travis-ci.org/ev3dev/ev3dev-lang-python\n.. image:: https://readthedocs.org/projects/python-ev3dev/badge/?version=ev3dev-stretch\n    :target: http://python-ev3dev.readthedocs.org/en/ev3dev-stretch/?badge=ev3dev-stretch\n    :alt: Documentation Status\n.. image:: https://badges.gitter.im/ev3dev/chat.svg\n    :target: https://gitter.im/ev3dev/chat\n    :alt: Chat at https://gitter.im/ev3dev/chat\n\nA Python3 library implementing an interface for ev3dev_ devices,\nletting you control motors, sensors, hardware buttons, LCD\ndisplays and more from Python code.\n\nIf you haven't written code in Python before, you can certainly use this\nlibrary to help you learn the language!\n\nGetting Started\n---------------\n\nThis library runs on ev3dev_. Before continuing, make sure that you have set up\nyour EV3 or other ev3dev device as explained in the\n`ev3dev Getting Started guide`_. Make sure you have an ev3dev-stretch version\ngreater than ``2.2.0``. You can check the kernel version by selecting\n\"About\" in Brickman and scrolling down to the \"kernel version\".\nIf you don't have a compatible version,\n`upgrade the kernel before continuing`_.\n\nUsage\n-----\n\nTo start out, you'll need a way to work with Python. We recommend the\n`ev3dev Visual Studio Code extension`_. If you're interested in using that,\ncheck out our `Python + VSCode introduction tutorial`_ and then come back\nonce you have that set up.\n\nOtherwise, you can can work with files `via an SSH connection`_ with an editor\nsuch as `nano`_, use the Python interactive REPL (type ``python3``), or roll\nyour own solution. If you don't know how to do that, you are probably\nbetter off choosing the recommended option above.\n\nThe template for a Python script\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nEvery Python program should have a few basic parts. Use this template\nto get started:\n\n.. code-block:: python\n\n   #!/usr/bin/env python3\n   from ev3dev2.motor import LargeMotor, OUTPUT_A, OUTPUT_B, SpeedPercent, MoveTank\n   from ev3dev2.sensor import INPUT_1\n   from ev3dev2.sensor.lego import TouchSensor\n   from ev3dev2.led import Leds\n\n   # TODO: Add code here\n\nThe first line should be included in every Python program you write\nfor ev3dev. It allows you to run this program from Brickman, the graphical\nmenu that you see on the device screen. The other lines are import statements\nwhich give you access to the library functionality. You will need to add\nadditional classes to the import list if you want to use other types of devices\nor additional utilities.\n\nYou should use the ``.py`` extension for your file, e.g. ``my-file.py``.\n\nIf you encounter an error such as\n``/usr/bin/env: 'python3\\r': No such file or directory``,\nyou must switch your editor's \"line endings\" setting for the file from\n\"CRLF\" to just \"LF\". This is usually in the status bar at the bottom.\nFor help, see `our FAQ page`_.\n\nImportant: Make your script executable (non-Visual Studio Code only)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo be able to run your Python file, **your program must be executable**. If\nyou are using the `ev3dev Visual Studio Code extension`_, you can skip this\nstep, as it will be automatically performed when you download your code to the\nbrick.\n\n**To mark a program as executable from the command line (often an SSH session),\nrun** ``chmod +x my-file.py``.\n\nYou can now run ``my-file.py`` via the Brickman File Browser or you can run it\nfrom the command line by preceding the file name with ``./``: ``./my-file.py``\n\nControlling the LEDs with a touch sensor\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis code will turn the LEDs red whenever the touch sensor is pressed, and\nback to green when it's released. Plug a touch sensor into any sensor port\nbefore trying this out.\n\n.. code-block:: python\n\n  ts = TouchSensor()\n  leds = Leds()\n\n  print(\"Press the touch sensor to change the LED color!\")\n\n  while True:\n      if ts.is_pressed:\n          leds.set_color(\"LEFT\", \"GREEN\")\n          leds.set_color(\"RIGHT\", \"GREEN\")\n      else:\n          leds.set_color(\"LEFT\", \"RED\")\n          leds.set_color(\"RIGHT\", \"RED\")\n\nIf you'd like to use a sensor on a specific port, specify the port like this:\n\n.. code-block:: python\n\n  ts = TouchSensor(INPUT_1)\n\n*Heads-up:* If you are using a BrickPi instead of an EV3, you will need to manually configure the sensor. See the example here: https://github.com/ev3dev/ev3dev-lang-python-demo/blob/stretch/platform/brickpi3-motor-and-sensor.py\n\nRunning a single motor\n~~~~~~~~~~~~~~~~~~~~~~\n\nThis will run a LEGO Large Motor at 75% of maximum speed for 5 rotations.\n\n.. code-block:: python\n\n  m = LargeMotor(OUTPUT_A)\n  m.on_for_rotations(SpeedPercent(75), 5)\n\nYou can also run a motor for a number of degrees, an amount of time, or simply\nstart it and let it run until you tell it to stop. Additionally, other units\nare also available. See the following pages for more information:\n\n- http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#ev3dev.motor.Motor.on_for_degrees\n- http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#units\n\nDriving with two motors\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe simplest drive control style is with the `MoveTank` class:\n\n.. code-block:: python\n\n    tank_drive = MoveTank(OUTPUT_A, OUTPUT_B)\n\n    # drive in a turn for 5 rotations of the outer motor\n    # the first two parameters can be unit classes or percentages.\n    tank_drive.on_for_rotations(SpeedPercent(50), SpeedPercent(75), 10)\n\n    # drive in a different turn for 3 seconds\n    tank_drive.on_for_seconds(SpeedPercent(60), SpeedPercent(30), 3)\n\nThere are also `MoveSteering` and `MoveJoystick` classes which provide\ndifferent styles of control. See the following pages for more information:\n\n- http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#multiple-motor-groups\n- http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#units\n\nUsing text-to-speech\n~~~~~~~~~~~~~~~~~~~~\n\nIf you want to make your robot speak, you can use the ``Sound.speak`` method:\n\n.. code-block:: python\n\n  from ev3dev2.sound import Sound\n\n  sound = Sound()\n  sound.speak('Welcome to the E V 3 dev project!')\n\nMore Demo Code\n~~~~~~~~~~~~~~\n\nThere are several demo programs that you can run to get acquainted with\nthis language binding. The programs are available\n`at this GitHub site <https://github.com/ev3dev/ev3dev-lang-python-demo>`_.\n\nYou can also copy and run the programs in the `utils` directory to\nunderstand some of the code constructs to use the EV3 motors, sensors,\nLCD console, buttons, sound, and LEDs.\n\nWe also highly recommend `ev3python.com`_ where one of our community\nmembers, @ndward, has put together a great website with detailed guides\non using this library which are targeted at beginners. If you are just\ngetting started with programming, we highly recommend that you check\nit out at `ev3python.com`_!\n\nUsing Micropython\n-----------------\n\nNormal Python too slow? Review `Micropython`_ to see if it supports the\nfeatures your project needs.\n\nLibrary Documentation\n---------------------\n\nClass documentation for this library can be found on\n`our Read the Docs page`_. You can always go there to get\ninformation on how you can use this library's functionality.\n\n\nFrequently-Asked Questions\n--------------------------\n\nExperiencing an odd error or unsure of how to do something that seems\nsimple? Check our our `FAQ`_ to see if there's an existing answer.\n\n\n.. _ev3dev: http://ev3dev.org\n.. _ev3dev.org: ev3dev_\n.. _Getting Started: ev3dev-getting-started_\n.. _ev3dev Getting Started guide: ev3dev-getting-started_\n.. _ev3dev-getting-started: http://www.ev3dev.org/docs/getting-started/\n.. _upgrade the kernel before continuing: http://www.ev3dev.org/docs/tutorials/upgrading-ev3dev/\n.. _detailed instructions for USB connections: ev3dev-usb-internet_\n.. _via an SSH connection: http://www.ev3dev.org/docs/tutorials/connecting-to-ev3dev-with-ssh/\n.. _ev3dev-usb-internet: http://www.ev3dev.org/docs/tutorials/connecting-to-the-internet-via-usb/\n.. _our Read the Docs page: http://python-ev3dev.readthedocs.org/en/ev3dev-stretch/\n.. _ev3python.com: http://ev3python.com/\n.. _FAQ: http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/faq.html\n.. _our FAQ page: FAQ_\n.. _our Issues tracker: https://github.com/ev3dev/ev3dev-lang-python/issues\n.. _EXPLOR3R: demo-robot_\n.. _demo-robot: http://robotsquare.com/2015/10/06/explor3r-building-instructions/\n.. _robot-square: http://robotsquare.com/\n.. _Python 2.x: python2_\n.. _python2: https://docs.python.org/2/\n.. _Python 3.x: python3_\n.. _python3: https://docs.python.org/3/\n.. _package repository: pypi_\n.. _pypi: https://pypi.python.org/pypi\n.. _latest version of this package: pypi-python-ev3dev_\n.. _pypi-python-ev3dev: https://pypi.python.org/pypi/python-ev3dev2\n.. _ev3dev Visual Studio Code extension: https://github.com/ev3dev/vscode-ev3dev-browser\n.. _Python + VSCode introduction tutorial: https://github.com/ev3dev/vscode-hello-python\n.. _nano: http://www.ev3dev.org/docs/tutorials/nano-cheat-sheet/\n.. _Micropython: http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/micropython.html", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ev3dev/ev3dev-lang-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-ev3dev2", "package_url": "https://pypi.org/project/python-ev3dev2/", "platform": "", "project_url": "https://pypi.org/project/python-ev3dev2/", "project_urls": {"Homepage": "https://github.com/ev3dev/ev3dev-lang-python"}, "release_url": "https://pypi.org/project/python-ev3dev2/2.1.0.post1/", "requires_dist": null, "requires_python": "", "summary": "v2.x Python language bindings for ev3dev", "version": "2.1.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/ev3dev/ev3dev-lang-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/ev3dev/ev3dev-lang-python.svg?branch=ev3dev-stretch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8504c4a61e64407f64d2b81b0a8632d32774e1e6/68747470733a2f2f7472617669732d63692e6f72672f6576336465762f6576336465762d6c616e672d707974686f6e2e7376673f6272616e63683d6576336465762d73747265746368\"></a>\n<a href=\"http://python-ev3dev.readthedocs.org/en/ev3dev-stretch/?badge=ev3dev-stretch\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/787aecb58c970916ad462b39cb2574c32c0e19d3/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974686f6e2d6576336465762f62616467652f3f76657273696f6e3d6576336465762d73747265746368\"></a>\n<a href=\"https://gitter.im/ev3dev/chat\" rel=\"nofollow\"><img alt=\"Chat at https://gitter.im/ev3dev/chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/685257d87ab8c23f8fba6afb88611f5f17c46138/68747470733a2f2f6261646765732e6769747465722e696d2f6576336465762f636861742e737667\"></a>\n<p>A Python3 library implementing an interface for <a href=\"http://ev3dev.org\" rel=\"nofollow\">ev3dev</a> devices,\nletting you control motors, sensors, hardware buttons, LCD\ndisplays and more from Python code.</p>\n<p>If you haven\u2019t written code in Python before, you can certainly use this\nlibrary to help you learn the language!</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>This library runs on <a href=\"http://ev3dev.org\" rel=\"nofollow\">ev3dev</a>. Before continuing, make sure that you have set up\nyour EV3 or other ev3dev device as explained in the\n<a href=\"http://www.ev3dev.org/docs/getting-started/\" rel=\"nofollow\">ev3dev Getting Started guide</a>. Make sure you have an ev3dev-stretch version\ngreater than <tt>2.2.0</tt>. You can check the kernel version by selecting\n\u201cAbout\u201d in Brickman and scrolling down to the \u201ckernel version\u201d.\nIf you don\u2019t have a compatible version,\n<a href=\"http://www.ev3dev.org/docs/tutorials/upgrading-ev3dev/\" rel=\"nofollow\">upgrade the kernel before continuing</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To start out, you\u2019ll need a way to work with Python. We recommend the\n<a href=\"https://github.com/ev3dev/vscode-ev3dev-browser\" rel=\"nofollow\">ev3dev Visual Studio Code extension</a>. If you\u2019re interested in using that,\ncheck out our <a href=\"https://github.com/ev3dev/vscode-hello-python\" rel=\"nofollow\">Python + VSCode introduction tutorial</a> and then come back\nonce you have that set up.</p>\n<p>Otherwise, you can can work with files <a href=\"http://www.ev3dev.org/docs/tutorials/connecting-to-ev3dev-with-ssh/\" rel=\"nofollow\">via an SSH connection</a> with an editor\nsuch as <a href=\"http://www.ev3dev.org/docs/tutorials/nano-cheat-sheet/\" rel=\"nofollow\">nano</a>, use the Python interactive REPL (type <tt>python3</tt>), or roll\nyour own solution. If you don\u2019t know how to do that, you are probably\nbetter off choosing the recommended option above.</p>\n<div id=\"the-template-for-a-python-script\">\n<h3>The template for a Python script</h3>\n<p>Every Python program should have a few basic parts. Use this template\nto get started:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ev3dev2.motor</span> <span class=\"kn\">import</span> <span class=\"n\">LargeMotor</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT_A</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT_B</span><span class=\"p\">,</span> <span class=\"n\">SpeedPercent</span><span class=\"p\">,</span> <span class=\"n\">MoveTank</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ev3dev2.sensor</span> <span class=\"kn\">import</span> <span class=\"n\">INPUT_1</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ev3dev2.sensor.lego</span> <span class=\"kn\">import</span> <span class=\"n\">TouchSensor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ev3dev2.led</span> <span class=\"kn\">import</span> <span class=\"n\">Leds</span>\n\n<span class=\"c1\"># TODO: Add code here</span>\n</pre>\n<p>The first line should be included in every Python program you write\nfor ev3dev. It allows you to run this program from Brickman, the graphical\nmenu that you see on the device screen. The other lines are import statements\nwhich give you access to the library functionality. You will need to add\nadditional classes to the import list if you want to use other types of devices\nor additional utilities.</p>\n<p>You should use the <tt>.py</tt> extension for your file, e.g. <tt><span class=\"pre\">my-file.py</span></tt>.</p>\n<p>If you encounter an error such as\n<tt>/usr/bin/env: 'python3\\r': No such file or directory</tt>,\nyou must switch your editor\u2019s \u201cline endings\u201d setting for the file from\n\u201cCRLF\u201d to just \u201cLF\u201d. This is usually in the status bar at the bottom.\nFor help, see <a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/faq.html\" rel=\"nofollow\">our FAQ page</a>.</p>\n</div>\n<div id=\"important-make-your-script-executable-non-visual-studio-code-only\">\n<h3>Important: Make your script executable (non-Visual Studio Code only)</h3>\n<p>To be able to run your Python file, <strong>your program must be executable</strong>. If\nyou are using the <a href=\"https://github.com/ev3dev/vscode-ev3dev-browser\" rel=\"nofollow\">ev3dev Visual Studio Code extension</a>, you can skip this\nstep, as it will be automatically performed when you download your code to the\nbrick.</p>\n<p><strong>To mark a program as executable from the command line (often an SSH session),\nrun</strong> <tt>chmod +x <span class=\"pre\">my-file.py</span></tt>.</p>\n<p>You can now run <tt><span class=\"pre\">my-file.py</span></tt> via the Brickman File Browser or you can run it\nfrom the command line by preceding the file name with <tt>./</tt>: <tt><span class=\"pre\">./my-file.py</span></tt></p>\n</div>\n<div id=\"controlling-the-leds-with-a-touch-sensor\">\n<h3>Controlling the LEDs with a touch sensor</h3>\n<p>This code will turn the LEDs red whenever the touch sensor is pressed, and\nback to green when it\u2019s released. Plug a touch sensor into any sensor port\nbefore trying this out.</p>\n<pre><span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">TouchSensor</span><span class=\"p\">()</span>\n<span class=\"n\">leds</span> <span class=\"o\">=</span> <span class=\"n\">Leds</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Press the touch sensor to change the LED color!\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">is_pressed</span><span class=\"p\">:</span>\n        <span class=\"n\">leds</span><span class=\"o\">.</span><span class=\"n\">set_color</span><span class=\"p\">(</span><span class=\"s2\">\"LEFT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"GREEN\"</span><span class=\"p\">)</span>\n        <span class=\"n\">leds</span><span class=\"o\">.</span><span class=\"n\">set_color</span><span class=\"p\">(</span><span class=\"s2\">\"RIGHT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"GREEN\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">leds</span><span class=\"o\">.</span><span class=\"n\">set_color</span><span class=\"p\">(</span><span class=\"s2\">\"LEFT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"RED\"</span><span class=\"p\">)</span>\n        <span class=\"n\">leds</span><span class=\"o\">.</span><span class=\"n\">set_color</span><span class=\"p\">(</span><span class=\"s2\">\"RIGHT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"RED\"</span><span class=\"p\">)</span>\n</pre>\n<p>If you\u2019d like to use a sensor on a specific port, specify the port like this:</p>\n<pre><span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">TouchSensor</span><span class=\"p\">(</span><span class=\"n\">INPUT_1</span><span class=\"p\">)</span>\n</pre>\n<p><em>Heads-up:</em> If you are using a BrickPi instead of an EV3, you will need to manually configure the sensor. See the example here: <a href=\"https://github.com/ev3dev/ev3dev-lang-python-demo/blob/stretch/platform/brickpi3-motor-and-sensor.py\" rel=\"nofollow\">https://github.com/ev3dev/ev3dev-lang-python-demo/blob/stretch/platform/brickpi3-motor-and-sensor.py</a></p>\n</div>\n<div id=\"running-a-single-motor\">\n<h3>Running a single motor</h3>\n<p>This will run a LEGO Large Motor at 75% of maximum speed for 5 rotations.</p>\n<pre><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">LargeMotor</span><span class=\"p\">(</span><span class=\"n\">OUTPUT_A</span><span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">on_for_rotations</span><span class=\"p\">(</span><span class=\"n\">SpeedPercent</span><span class=\"p\">(</span><span class=\"mi\">75</span><span class=\"p\">),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>You can also run a motor for a number of degrees, an amount of time, or simply\nstart it and let it run until you tell it to stop. Additionally, other units\nare also available. See the following pages for more information:</p>\n<ul>\n<li><a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#ev3dev.motor.Motor.on_for_degrees\" rel=\"nofollow\">http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#ev3dev.motor.Motor.on_for_degrees</a></li>\n<li><a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#units\" rel=\"nofollow\">http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#units</a></li>\n</ul>\n</div>\n<div id=\"driving-with-two-motors\">\n<h3>Driving with two motors</h3>\n<p>The simplest drive control style is with the <cite>MoveTank</cite> class:</p>\n<pre><span class=\"n\">tank_drive</span> <span class=\"o\">=</span> <span class=\"n\">MoveTank</span><span class=\"p\">(</span><span class=\"n\">OUTPUT_A</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT_B</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># drive in a turn for 5 rotations of the outer motor</span>\n<span class=\"c1\"># the first two parameters can be unit classes or percentages.</span>\n<span class=\"n\">tank_drive</span><span class=\"o\">.</span><span class=\"n\">on_for_rotations</span><span class=\"p\">(</span><span class=\"n\">SpeedPercent</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">SpeedPercent</span><span class=\"p\">(</span><span class=\"mi\">75</span><span class=\"p\">),</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># drive in a different turn for 3 seconds</span>\n<span class=\"n\">tank_drive</span><span class=\"o\">.</span><span class=\"n\">on_for_seconds</span><span class=\"p\">(</span><span class=\"n\">SpeedPercent</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">),</span> <span class=\"n\">SpeedPercent</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>There are also <cite>MoveSteering</cite> and <cite>MoveJoystick</cite> classes which provide\ndifferent styles of control. See the following pages for more information:</p>\n<ul>\n<li><a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#multiple-motor-groups\" rel=\"nofollow\">http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#multiple-motor-groups</a></li>\n<li><a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#units\" rel=\"nofollow\">http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/motors.html#units</a></li>\n</ul>\n</div>\n<div id=\"using-text-to-speech\">\n<h3>Using text-to-speech</h3>\n<p>If you want to make your robot speak, you can use the <tt>Sound.speak</tt> method:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ev3dev2.sound</span> <span class=\"kn\">import</span> <span class=\"n\">Sound</span>\n\n<span class=\"n\">sound</span> <span class=\"o\">=</span> <span class=\"n\">Sound</span><span class=\"p\">()</span>\n<span class=\"n\">sound</span><span class=\"o\">.</span><span class=\"n\">speak</span><span class=\"p\">(</span><span class=\"s1\">'Welcome to the E V 3 dev project!'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"more-demo-code\">\n<h3>More Demo Code</h3>\n<p>There are several demo programs that you can run to get acquainted with\nthis language binding. The programs are available\n<a href=\"https://github.com/ev3dev/ev3dev-lang-python-demo\" rel=\"nofollow\">at this GitHub site</a>.</p>\n<p>You can also copy and run the programs in the <cite>utils</cite> directory to\nunderstand some of the code constructs to use the EV3 motors, sensors,\nLCD console, buttons, sound, and LEDs.</p>\n<p>We also highly recommend <a href=\"http://ev3python.com/\" rel=\"nofollow\">ev3python.com</a> where one of our community\nmembers, @ndward, has put together a great website with detailed guides\non using this library which are targeted at beginners. If you are just\ngetting started with programming, we highly recommend that you check\nit out at <a href=\"http://ev3python.com/\" rel=\"nofollow\">ev3python.com</a>!</p>\n</div>\n</div>\n<div id=\"using-micropython\">\n<h2>Using Micropython</h2>\n<p>Normal Python too slow? Review <a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/micropython.html\" rel=\"nofollow\">Micropython</a> to see if it supports the\nfeatures your project needs.</p>\n</div>\n<div id=\"library-documentation\">\n<h2>Library Documentation</h2>\n<p>Class documentation for this library can be found on\n<a href=\"http://python-ev3dev.readthedocs.org/en/ev3dev-stretch/\" rel=\"nofollow\">our Read the Docs page</a>. You can always go there to get\ninformation on how you can use this library\u2019s functionality.</p>\n</div>\n<div id=\"frequently-asked-questions\">\n<h2>Frequently-Asked Questions</h2>\n<p>Experiencing an odd error or unsure of how to do something that seems\nsimple? Check our our <a href=\"http://python-ev3dev.readthedocs.io/en/ev3dev-stretch/faq.html\" rel=\"nofollow\">FAQ</a> to see if there\u2019s an existing answer.</p>\n</div>\n\n          </div>"}, "last_serial": 6863034, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "4c043def19a6f4759e25c6b09a5d1718", "sha256": "0c579aa2f537ed71bfbdce5e900e7357da839590d0811a0ed6d387a26c0a9ba0"}, "downloads": -1, "filename": "python-ev3dev2-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4c043def19a6f4759e25c6b09a5d1718", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68508, "upload_time": "2019-11-25T05:55:12", "upload_time_iso_8601": "2019-11-25T05:55:12.288531Z", "url": "https://files.pythonhosted.org/packages/d2/f6/eff18ba7c0383a9943cc77326d136e87f867ea85a37d3e5e6e9d22cbe480/python-ev3dev2-2.0.0.tar.gz", "yanked": false}], "2.0.0b1": [{"comment_text": "", "digests": {"md5": "522e1a04aa98f9c24e8868cf92330b42", "sha256": "38c098b33cc60813a4e023dd84d43faeff7e99ce2673043548d696cfbeee9423"}, "downloads": -1, "filename": "python-ev3dev2-2.0.0b1.tar.gz", "has_sig": false, "md5_digest": "522e1a04aa98f9c24e8868cf92330b42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58015, "upload_time": "2018-08-01T04:33:28", "upload_time_iso_8601": "2018-08-01T04:33:28.897091Z", "url": "https://files.pythonhosted.org/packages/83/30/304f8848efe66b2da1b317aec7b2f442936efef0f548d66183eff147f917/python-ev3dev2-2.0.0b1.tar.gz", "yanked": false}], "2.0.0b2": [{"comment_text": "", "digests": {"md5": "b3447e3d1a569bcbdff4706f8b23f68b", "sha256": "36b3884b26225444065ba071de03a7ed5b1d458f4952205ffaac1f26f77ba870"}, "downloads": -1, "filename": "python-ev3dev2-2.0.0b2.tar.gz", "has_sig": false, "md5_digest": "b3447e3d1a569bcbdff4706f8b23f68b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58112, "upload_time": "2018-09-24T17:42:33", "upload_time_iso_8601": "2018-09-24T17:42:33.822829Z", "url": "https://files.pythonhosted.org/packages/88/a9/57ba742253e489366956056d37353d4c24132336a010097cd50f98eba706/python-ev3dev2-2.0.0b2.tar.gz", "yanked": false}], "2.0.0b3": [{"comment_text": "", "digests": {"md5": "890b03a713065a4fd595bb3acacbc0c9", "sha256": "167482d4a6a5e05e19591c90bbb7360e96d8866cf39b8ed0436cf37408a2ce76"}, "downloads": -1, "filename": "python-ev3dev2-2.0.0b3.tar.gz", "has_sig": false, "md5_digest": "890b03a713065a4fd595bb3acacbc0c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64351, "upload_time": "2019-02-03T04:21:58", "upload_time_iso_8601": "2019-02-03T04:21:58.587463Z", "url": "https://files.pythonhosted.org/packages/dd/af/b22f4f4b4e1cb98a1330f8ee9765d987fe571705e7cee4f4e256eeb3f96d/python-ev3dev2-2.0.0b3.tar.gz", "yanked": false}], "2.0.0b4": [{"comment_text": "", "digests": {"md5": "e22be368fc99bee35fc807955f1636a0", "sha256": "b4be7e6a3b2c8c4fee07ef0a753e2710bbd774a16cbf9239eb527cf775195d31"}, "downloads": -1, "filename": "python-ev3dev2-2.0.0b4.tar.gz", "has_sig": false, "md5_digest": "e22be368fc99bee35fc807955f1636a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68513, "upload_time": "2019-08-18T18:54:39", "upload_time_iso_8601": "2019-08-18T18:54:39.016237Z", "url": "https://files.pythonhosted.org/packages/8d/3e/6352906a7073d822447ef7c57ba381629c63497e1ae5cd80799b57a30932/python-ev3dev2-2.0.0b4.tar.gz", "yanked": false}], "2.0.0b5": [{"comment_text": "", "digests": {"md5": "c9dcc8cc2f6e124a306472508d721d47", "sha256": "00304e0c8d7246da97424c7864eebf59da929f3b64afa0e17fcfe2a9348b2250"}, "downloads": -1, "filename": "python-ev3dev2-2.0.0b5.tar.gz", "has_sig": false, "md5_digest": "c9dcc8cc2f6e124a306472508d721d47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68518, "upload_time": "2019-08-18T18:57:15", "upload_time_iso_8601": "2019-08-18T18:57:15.220729Z", "url": "https://files.pythonhosted.org/packages/1c/83/3752b29b9309a81b25bd34859b2f96f6254bcf5f57d5d1b7954d5c5339b9/python-ev3dev2-2.0.0b5.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "8bacb3c1720fda5e2852b10d954bdfba", "sha256": "d3dffb36f39884c139748c80f6c241bca0103c7c5bf9734c0c43233bc03b2d94"}, "downloads": -1, "filename": "python-ev3dev2-2.1.0.tar.gz", "has_sig": false, "md5_digest": "8bacb3c1720fda5e2852b10d954bdfba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77740, "upload_time": "2020-03-23T02:40:58", "upload_time_iso_8601": "2020-03-23T02:40:58.648061Z", "url": "https://files.pythonhosted.org/packages/0e/54/a92f5803e1b5c7f05c06d76f6da91736f4eab667b4d91834aa4bf64123be/python-ev3dev2-2.1.0.tar.gz", "yanked": false}], "2.1.0.post1": [{"comment_text": "", "digests": {"md5": "4d3cff22a1ecf801c2b1f3df338b4541", "sha256": "0cfd69b0e8b6ae2ac8f300d7faea602032d961cc526417554d7da35cd9730949"}, "downloads": -1, "filename": "python-ev3dev2-2.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "4d3cff22a1ecf801c2b1f3df338b4541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77760, "upload_time": "2020-03-23T03:28:25", "upload_time_iso_8601": "2020-03-23T03:28:25.150118Z", "url": "https://files.pythonhosted.org/packages/8a/8c/2ddffc70572989acb5d2f60e5e1d7e93f6daf9b05200ac0e80d030e98950/python-ev3dev2-2.1.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d3cff22a1ecf801c2b1f3df338b4541", "sha256": "0cfd69b0e8b6ae2ac8f300d7faea602032d961cc526417554d7da35cd9730949"}, "downloads": -1, "filename": "python-ev3dev2-2.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "4d3cff22a1ecf801c2b1f3df338b4541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77760, "upload_time": "2020-03-23T03:28:25", "upload_time_iso_8601": "2020-03-23T03:28:25.150118Z", "url": "https://files.pythonhosted.org/packages/8a/8c/2ddffc70572989acb5d2f60e5e1d7e93f6daf9b05200ac0e80d030e98950/python-ev3dev2-2.1.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:45 2020"}