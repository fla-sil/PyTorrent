{"info": {"author": "Evan Wheeler", "author_email": "evan@leapfrog.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "RapidSMS Xray\n========================\nRapidSMS app for web and SMS split test experiments & event tracking\n\nBelow you will find basic setup instructions for the rapidsms-xray\nproject. To begin you should have the following applications installed on your\nlocal development system:\n\n- Python >= 2.6 (2.7 recommended)\n- `pip >= 1.1 <http://www.pip-installer.org/>`_\n- `Redis >= 2.6.0 <http://redis.io>`_\n\n\nInstallation\n------------\n\nPlease note: at the time of this writing, Ubuntu installs an older,\nincompatible version of Redis (prior to the introduction of the `BITOP` and\n`BITCOUNT` commands).\nYou can use the following PPA to install a more recent version::\n\n\n    sudo add-apt-repository ppa:chris-lea/redis\n    sudo apt-get update\n    sudo apt-get install redis-server\n\nInstall necessary python requirements with pip::\n\n    pip install -r requirements/base.txt\n\nIn your rapidsms project `settings.py`, add `xray` to your `INSTALLED_APPS` and\nadd `xray.context_processors.web_experiments` to your `TEMPLATE_CONTEXT_PROCESSORS`\n\nIn your rapidsms project `urls.py`, add xray's urls to `urlpatterns`::\n\n    (r'^xray/', include('xray.urls')),\n\nYou may need to run django's `collectstatic` to ensure xray's static assests are\navailable::\n\n    django-admin.py collectstatic\n\n\nExperiments\n-----------\n\nrapidsms-xray uses `Cleaver <https://github.com/ryanpetrello/cleaver>`_\nfor split testing experiments. Please note that rapidsms-xray currently uses a\ncustom fork of Cleaver pending upstream merging of the RedisBackend (which will\nbe installed properly by `python setup.py install` or `pip install -r requirements/base.txt`).\n\nTo conduct web split testing experiments, add your experiments to\nyour app's ``context_processors.py`` which makes the experiment choice\navailable in the RequestContext. You don't have to put your experiments in a\ncontext_processor -- its just a convenient location so they can all be in one place.\n\nSee `xray/context_processors.py \n<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/context_processors.py>`_\nand `thousand/templates/thousand/index.html\n<https://github.com/ewheeler/rapidsms-thousand-days/blob/master/thousand/templates/thousand/index.html>`_ for example usage.\n\nTo conduct sms split testing experiments, add your experiments to your app.py or handler and\nensure that the ``experiments`` app is listed in your setting.py's ``INSTALLED_APPS``\n`xray/app.py <https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py>`_ will deal with identifying experiment participation during the router's\n``filter`` phase, so experiments can be conducted in any of the subsequent incoming phases.\n\nPlease be aware that experiment participation is handled separately for web and sms\nsplit testing (specifically, web participant identity is cookie-based for non-logged-in\nuses and is user_id-based for logged-in users, whereas sms participant identity\nis based on mobile number) -- that is, a web experiment participant cannot be scored\nby a SMS conversion event and vice-versa.\n\nSee `xray/app.py\n<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py>`_ for example usage.\n\n\nEvents\n------\n\nrapidsms-xray uses `bitmapist <https://github.com/Doist/bitmapist>`_\nfor event tracking and cohort analysis.\n\nTo use, import and instantiate `xray.events.Tracker` and then call\n`my_tracker.web_event` or `my_tracker.sms_event` with an event name and the\nuser's cleaver identity. `xray.rolodex.Rolodex` caches identity information for\nquick user lookup and issues a unique integer for each web and sms user. These\nunique integer ids are used by bitmapist to track event participation using\nRedis bitmaps for fast, arbitrary querying. See the bitmapist documentation for\nadditional information.\nSee `xray/app.py\n<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py>`_\nand `xray/views.py \n<https://github.com/ewheeler/rapidsms-xray/blob/master/xray/views.py>`_ for example usage.\n\n\nWhen performing custom event analysis, use the *Events classes (with separate\nWeb* and SMS* classes for each time period) in `xray.events` rather than the\nbitmapist classes -- rapidsms-xray adds prefixes to namespace the bitmapist\nkeys as well as prefixes to separate sms and web events.\n`xray.events.Tracker`'s event methods add the appropriate prefixes, so you will\nonly need to worry about them if you are accessing bitmapist or the stored data\nin Redis directly.\n\n\nDashboard\n---------\n\nrapidsms-xray includes a dashboard summarizing experiment and event\nparticipation as well as drilldown pages showing experiment details and cohort\nanalysis of event participation.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ewheeler/rapidsms-xray/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "rapidsms-xray", "package_url": "https://pypi.org/project/rapidsms-xray/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rapidsms-xray/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ewheeler/rapidsms-xray/"}, "release_url": "https://pypi.org/project/rapidsms-xray/0.5.9b0/", "requires_dist": null, "requires_python": null, "summary": "RapidSMS app for web and SMS split test experiments & event tracking.", "version": "0.5.9b0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>RapidSMS app for web and SMS split test experiments &amp; event tracking</p>\n<p>Below you will find basic setup instructions for the rapidsms-xray\nproject. To begin you should have the following applications installed on your\nlocal development system:</p>\n<ul>\n<li>Python &gt;= 2.6 (2.7 recommended)</li>\n<li><a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip &gt;= 1.1</a></li>\n<li><a href=\"http://redis.io\" rel=\"nofollow\">Redis &gt;= 2.6.0</a></li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Please note: at the time of this writing, Ubuntu installs an older,\nincompatible version of Redis (prior to the introduction of the <cite>BITOP</cite> and\n<cite>BITCOUNT</cite> commands).\nYou can use the following PPA to install a more recent version:</p>\n<pre>sudo add-apt-repository ppa:chris-lea/redis\nsudo apt-get update\nsudo apt-get install redis-server\n</pre>\n<p>Install necessary python requirements with pip:</p>\n<pre>pip install -r requirements/base.txt\n</pre>\n<p>In your rapidsms project <cite>settings.py</cite>, add <cite>xray</cite> to your <cite>INSTALLED_APPS</cite> and\nadd <cite>xray.context_processors.web_experiments</cite> to your <cite>TEMPLATE_CONTEXT_PROCESSORS</cite></p>\n<p>In your rapidsms project <cite>urls.py</cite>, add xray\u2019s urls to <cite>urlpatterns</cite>:</p>\n<pre>(r'^xray/', include('xray.urls')),\n</pre>\n<p>You may need to run django\u2019s <cite>collectstatic</cite> to ensure xray\u2019s static assests are\navailable:</p>\n<pre>django-admin.py collectstatic\n</pre>\n</div>\n<div id=\"experiments\">\n<h2>Experiments</h2>\n<p>rapidsms-xray uses <a href=\"https://github.com/ryanpetrello/cleaver\" rel=\"nofollow\">Cleaver</a>\nfor split testing experiments. Please note that rapidsms-xray currently uses a\ncustom fork of Cleaver pending upstream merging of the RedisBackend (which will\nbe installed properly by <cite>python setup.py install</cite> or <cite>pip install -r requirements/base.txt</cite>).</p>\n<p>To conduct web split testing experiments, add your experiments to\nyour app\u2019s <tt>context_processors.py</tt> which makes the experiment choice\navailable in the RequestContext. You don\u2019t have to put your experiments in a\ncontext_processor \u2013 its just a convenient location so they can all be in one place.</p>\n<p>See <a href=\"https://github.com/ewheeler/rapidsms-xray/blob/master/xray/context_processors.py\" rel=\"nofollow\">xray/context_processors.py</a>\nand <a href=\"https://github.com/ewheeler/rapidsms-thousand-days/blob/master/thousand/templates/thousand/index.html\" rel=\"nofollow\">thousand/templates/thousand/index.html</a> for example usage.</p>\n<p>To conduct sms split testing experiments, add your experiments to your app.py or handler and\nensure that the <tt>experiments</tt> app is listed in your setting.py\u2019s <tt>INSTALLED_APPS</tt>\n<a href=\"https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py\" rel=\"nofollow\">xray/app.py</a> will deal with identifying experiment participation during the router\u2019s\n<tt>filter</tt> phase, so experiments can be conducted in any of the subsequent incoming phases.</p>\n<p>Please be aware that experiment participation is handled separately for web and sms\nsplit testing (specifically, web participant identity is cookie-based for non-logged-in\nuses and is user_id-based for logged-in users, whereas sms participant identity\nis based on mobile number) \u2013 that is, a web experiment participant cannot be scored\nby a SMS conversion event and vice-versa.</p>\n<p>See <a href=\"https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py\" rel=\"nofollow\">xray/app.py</a> for example usage.</p>\n</div>\n<div id=\"events\">\n<h2>Events</h2>\n<p>rapidsms-xray uses <a href=\"https://github.com/Doist/bitmapist\" rel=\"nofollow\">bitmapist</a>\nfor event tracking and cohort analysis.</p>\n<p>To use, import and instantiate <cite>xray.events.Tracker</cite> and then call\n<cite>my_tracker.web_event</cite> or <cite>my_tracker.sms_event</cite> with an event name and the\nuser\u2019s cleaver identity. <cite>xray.rolodex.Rolodex</cite> caches identity information for\nquick user lookup and issues a unique integer for each web and sms user. These\nunique integer ids are used by bitmapist to track event participation using\nRedis bitmaps for fast, arbitrary querying. See the bitmapist documentation for\nadditional information.\nSee <a href=\"https://github.com/ewheeler/rapidsms-xray/blob/master/xray/app.py\" rel=\"nofollow\">xray/app.py</a>\nand <a href=\"https://github.com/ewheeler/rapidsms-xray/blob/master/xray/views.py\" rel=\"nofollow\">xray/views.py</a> for example usage.</p>\n<p>When performing custom event analysis, use the <em>Events classes (with separate\nWeb</em> and SMS* classes for each time period) in <cite>xray.events</cite> rather than the\nbitmapist classes \u2013 rapidsms-xray adds prefixes to namespace the bitmapist\nkeys as well as prefixes to separate sms and web events.\n<cite>xray.events.Tracker</cite>\u2019s event methods add the appropriate prefixes, so you will\nonly need to worry about them if you are accessing bitmapist or the stored data\nin Redis directly.</p>\n</div>\n<div id=\"dashboard\">\n<h2>Dashboard</h2>\n<p>rapidsms-xray includes a dashboard summarizing experiment and event\nparticipation as well as drilldown pages showing experiment details and cohort\nanalysis of event participation.</p>\n</div>\n\n          </div>"}, "last_serial": 947521, "releases": {"0.5.1b0": [{"comment_text": "", "digests": {"md5": "9e431902fe53c16cad7ec73834ff34fc", "sha256": "c8d6c6cf050655c7fcf01223a2cd5085ec6f78a327fe8c6bcb1a5c50bfffea23"}, "downloads": -1, "filename": "rapidsms-xray-0.5.1b0.tar.gz", "has_sig": false, "md5_digest": "9e431902fe53c16cad7ec73834ff34fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25438, "upload_time": "2013-08-06T16:20:18", "upload_time_iso_8601": "2013-08-06T16:20:18.957026Z", "url": "https://files.pythonhosted.org/packages/f1/3a/bba401aaf7e9b6015cc09f7585f6c89a794f84f8352ca7c045a49d47c65f/rapidsms-xray-0.5.1b0.tar.gz", "yanked": false}], "0.5.2b0": [{"comment_text": "", "digests": {"md5": "a36a266d613d2e72b58155e8cc91e1c1", "sha256": "d0386924d7cfeea54c7a9aee6d5feb42324ce9e9a0cb6f8a3e773e97a74a930b"}, "downloads": -1, "filename": "rapidsms-xray-0.5.2b0.tar.gz", "has_sig": false, "md5_digest": "a36a266d613d2e72b58155e8cc91e1c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25429, "upload_time": "2013-08-06T16:24:01", "upload_time_iso_8601": "2013-08-06T16:24:01.558110Z", "url": "https://files.pythonhosted.org/packages/3e/21/8c4a904a89fcd54c02853cf2ebe96032751240d1e882b24ba4140b5ddff0/rapidsms-xray-0.5.2b0.tar.gz", "yanked": false}], "0.5.3b0": [{"comment_text": "", "digests": {"md5": "7d489831bddbb169a953ed84cbd0d74e", "sha256": "f11be570786d255bddcd9d8de5d3737b3ec6e76de5a79a1b5e6507a72385d170"}, "downloads": -1, "filename": "rapidsms-xray-0.5.3b0.tar.gz", "has_sig": false, "md5_digest": "7d489831bddbb169a953ed84cbd0d74e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25477, "upload_time": "2013-08-12T21:38:37", "upload_time_iso_8601": "2013-08-12T21:38:37.574508Z", "url": "https://files.pythonhosted.org/packages/d1/32/56e02a732d11b58a7a8986d0fef464dbcc16016a349835d026e374f30b8c/rapidsms-xray-0.5.3b0.tar.gz", "yanked": false}], "0.5.6b0": [{"comment_text": "", "digests": {"md5": "a898c1a0dbd040d4c398a2b4e6a6c992", "sha256": "74318917f4ebd4ce8e4a83a49b8d33d11185905d430f96e3ca31314b643345f2"}, "downloads": -1, "filename": "rapidsms-xray-0.5.6b0.tar.gz", "has_sig": false, "md5_digest": "a898c1a0dbd040d4c398a2b4e6a6c992", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25469, "upload_time": "2013-08-14T15:42:41", "upload_time_iso_8601": "2013-08-14T15:42:41.263366Z", "url": "https://files.pythonhosted.org/packages/3e/7d/331f85c7a367f13bfae964753e321fe70a022f621ba1b6a583e12465a6cd/rapidsms-xray-0.5.6b0.tar.gz", "yanked": false}], "0.5.9b0": [{"comment_text": "", "digests": {"md5": "fc4699bf6984caca5daad8e922d9fc16", "sha256": "d19d5b0b5471cf94c6f984f5be30eb01eb5595ffc20a66a9b98a750141a36cc1"}, "downloads": -1, "filename": "rapidsms-xray-0.5.9b0.tar.gz", "has_sig": false, "md5_digest": "fc4699bf6984caca5daad8e922d9fc16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25349, "upload_time": "2013-12-18T07:19:24", "upload_time_iso_8601": "2013-12-18T07:19:24.311224Z", "url": "https://files.pythonhosted.org/packages/3b/50/1d23b1e4472e4d158d5af09ddd9d1c162c8e38f4236a7983636dddfb0459/rapidsms-xray-0.5.9b0.tar.gz", "yanked": false}], "0.5b0": [{"comment_text": "", "digests": {"md5": "f4245991dc51816667f16de22dd5151b", "sha256": "9ea39e57584757aaa651946439df566babf73b457b0160a0a4f237028e89b739"}, "downloads": -1, "filename": "rapidsms-xray-0.5b0.tar.gz", "has_sig": false, "md5_digest": "f4245991dc51816667f16de22dd5151b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25509, "upload_time": "2013-08-06T16:16:33", "upload_time_iso_8601": "2013-08-06T16:16:33.363462Z", "url": "https://files.pythonhosted.org/packages/aa/6d/f176202f923e26ba0732143771c884fae03789e718031d1e43b507f37362/rapidsms-xray-0.5b0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc4699bf6984caca5daad8e922d9fc16", "sha256": "d19d5b0b5471cf94c6f984f5be30eb01eb5595ffc20a66a9b98a750141a36cc1"}, "downloads": -1, "filename": "rapidsms-xray-0.5.9b0.tar.gz", "has_sig": false, "md5_digest": "fc4699bf6984caca5daad8e922d9fc16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25349, "upload_time": "2013-12-18T07:19:24", "upload_time_iso_8601": "2013-12-18T07:19:24.311224Z", "url": "https://files.pythonhosted.org/packages/3b/50/1d23b1e4472e4d158d5af09ddd9d1c162c8e38f4236a7983636dddfb0459/rapidsms-xray-0.5.9b0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:25 2020"}