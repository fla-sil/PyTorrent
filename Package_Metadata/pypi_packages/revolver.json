{"info": {"author": "Michael Contento", "author_email": "michaelcontento@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Clustering", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "# [Revolver][]\n\n[![BuildStatus](https://secure.travis-ci.org/michaelcontento/revolver.png?branch=master)](http://travis-ci.org/michaelcontento/revolver)\n\n## About\n\n*TL;DR Wrapper for [Fabric][] and [Cuisine][] to achieve a clean, simple and\nfun to use interface amplified with new high-level functions to quickly \norchestrate your servers.*\n\n***\n\nLet me introduce you two other awesome tools / libraries, before I try to \nexplain the gap [Revolver][] tries to fill. First there is [Fabric][], a very \nsmall and low-level wrapper around SSH written in [Python][]. It allows you to \nstore a small *fabfile.py* next to your project, where you can define all the \nsteps required to automate something via SSH on one to multiple servers (e.g. \ninstall and configure your software stack, deploy new versions, ...). \n\nBut [Fabric][] is *really* low-level and there is a lack of fun. That's the \npoint where [Cuisine][] joins the ring, because it's a collection of useful \nmethods which really increases your amount of fun and pleasure. Unfortunately \nwith some small, but really annoying, differences that are sometimes even \nincompatible. Some examples? \n\n    # Fabric\n    run('apt-get install XYZ', use_sudo=True)\n\n    # Cuisine\n    with mode_sudo():\n        run('apt-get install XYZ')\n\nI really enjoy the contextmanager for running a block as superuser! But \n[Cuisine][] didn't patch all commands provided by [Fabric][] (`run()` in the \nexample is patched but other commands, like `put()`, aren't and you'll run into \nstrange / annoying errors). \n\nThere is also a different scheme of naming things. [Fabric][] tends to use short \nfunction names inside clean namespaces (e.g `fabric.contrib.files.append`). \nBut the API of [Cuisine][], on the other hand, follows `<object>_<operation>`\n(e.g. `cuisine.file_append`). \n\nBoth ways are reasonable and I don't wanna blame someone! Don't get me wrong!\nI simply want a \"cleaner\" or \"more compatible\" API which I can extend with my\nown new functions and keep the level of fun and pleasure high (at least for\nme). And the last sentence is a short / good description of what [Revolver][] \nis about. Just a \"unification\" wrapper for [Fabric][] and [Cuisine][] with some \nnew batteries included.\n\n## Getting started\n\nThis project is currently not published to the official python package \nrepository but it should be easy to get everything running:\n\n    sudo easy_install https://github.com/michaelcontento/revolver/tarball/master\n\nOr use the new alternate installer [Pip][]:\n\n    sudo pip install https://github.com/michaelcontento/revolver/tarball/master#egg=revolver\n\nNow [Revolver][] is installed and ready to use. But I would suggest to \nfirst read the documentation from [Fabric][] to get used with the whole \nworkflow / principle. After that it should be easy for you to dig into the \ncode, discover everything and write your first own `fabfile.py`. \n\n## Example\n\nBut for those who want to see fast results, here is a small example \n`fabfile.py`.\n\n    # -*- coding: utf-8 -*-\n\n    from revolver import user\n    from revolver import contextmanager as ctx\n    from revolver.project import Deployinator\n    from revolver.core import env\n    from revolver.tool import php\n    from revolver.tool import ruby\n\n    env.hosts = ['user@example.com']\n\n    def setup():\n        php.install(version='5.3.9')\n        ruby.ensure(version='1.9.2-p290')\n        user.ensure('own-user', home='/var/own-user')\n\n    def deploy():\n        with ctx.sudo(username='own-user'):\n            dp = Deployinator()\n            dp.run()\n\n## Contributing\n\n* Fork this project\n* Make your changes (new features, bugfixes, examples, ...)\n* Write tests for it \n* Be sure that *all other* tests are still green\n* Send me a pull request\n\nToo complicated? You just wanna mess around for yourself? Thats fine! Just \nskip everything after step two :)\n\n## License\n\n    Copyright 2009-2012 Michael Contento <michaelcontento@gmail.com>\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n  [Pip]: http://www.pip-installer.org\n  [Cuisine]: https://github.com/sebastien/cuisine\n  [Fabric]: https://github.com/fabric/fabric\n  [Python]: http://python.org\n  [Revolver]: https://github.com/michaelcontento/revolver", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/michaelcontento/revolver", "keywords": "fabric,cuisine,chef,puppet,ssh", "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "revolver", "package_url": "https://pypi.org/project/revolver/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/revolver/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/michaelcontento/revolver"}, "release_url": "https://pypi.org/project/revolver/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "Pythonic server orchestrating based on fabric / cuisine", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            # [Revolver][]<br><br>[![BuildStatus](https://secure.travis-ci.org/michaelcontento/revolver.png?branch=master)](http://travis-ci.org/michaelcontento/revolver)<br><br>## About<br><br>*TL;DR Wrapper for [Fabric][] and [Cuisine][] to achieve a clean, simple and<br>fun to use interface amplified with new high-level functions to quickly <br>orchestrate your servers.*<br><br>***<br><br>Let me introduce you two other awesome tools / libraries, before I try to <br>explain the gap [Revolver][] tries to fill. First there is [Fabric][], a very <br>small and low-level wrapper around SSH written in [Python][]. It allows you to <br>store a small *fabfile.py* next to your project, where you can define all the <br>steps required to automate something via SSH on one to multiple servers (e.g. <br>install and configure your software stack, deploy new versions, ...). <br><br>But [Fabric][] is *really* low-level and there is a lack of fun. That's the <br>point where [Cuisine][] joins the ring, because it's a collection of useful <br>methods which really increases your amount of fun and pleasure. Unfortunately <br>with some small, but really annoying, differences that are sometimes even <br>incompatible. Some examples? <br><br>    # Fabric<br>    run('apt-get install XYZ', use_sudo=True)<br><br>    # Cuisine<br>    with mode_sudo():<br>        run('apt-get install XYZ')<br><br>I really enjoy the contextmanager for running a block as superuser! But <br>[Cuisine][] didn't patch all commands provided by [Fabric][] (`run()` in the <br>example is patched but other commands, like `put()`, aren't and you'll run into <br>strange / annoying errors). <br><br>There is also a different scheme of naming things. [Fabric][] tends to use short <br>function names inside clean namespaces (e.g `fabric.contrib.files.append`). <br>But the API of [Cuisine][], on the other hand, follows `&lt;object&gt;_&lt;operation&gt;`<br>(e.g. `cuisine.file_append`). <br><br>Both ways are reasonable and I don't wanna blame someone! Don't get me wrong!<br>I simply want a \"cleaner\" or \"more compatible\" API which I can extend with my<br>own new functions and keep the level of fun and pleasure high (at least for<br>me). And the last sentence is a short / good description of what [Revolver][] <br>is about. Just a \"unification\" wrapper for [Fabric][] and [Cuisine][] with some <br>new batteries included.<br><br>## Getting started<br><br>This project is currently not published to the official python package <br>repository but it should be easy to get everything running:<br><br>    sudo easy_install https://github.com/michaelcontento/revolver/tarball/master<br><br>Or use the new alternate installer [Pip][]:<br><br>    sudo pip install https://github.com/michaelcontento/revolver/tarball/master#egg=revolver<br><br>Now [Revolver][] is installed and ready to use. But I would suggest to <br>first read the documentation from [Fabric][] to get used with the whole <br>workflow / principle. After that it should be easy for you to dig into the <br>code, discover everything and write your first own `fabfile.py`. <br><br>## Example<br><br>But for those who want to see fast results, here is a small example <br>`fabfile.py`.<br><br>    # -*- coding: utf-8 -*-<br><br>    from revolver import user<br>    from revolver import contextmanager as ctx<br>    from revolver.project import Deployinator<br>    from revolver.core import env<br>    from revolver.tool import php<br>    from revolver.tool import ruby<br><br>    env.hosts = ['user@example.com']<br><br>    def setup():<br>        php.install(version='5.3.9')<br>        ruby.ensure(version='1.9.2-p290')<br>        user.ensure('own-user', home='/var/own-user')<br><br>    def deploy():<br>        with ctx.sudo(username='own-user'):<br>            dp = Deployinator()<br>            dp.run()<br><br>## Contributing<br><br>* Fork this project<br>* Make your changes (new features, bugfixes, examples, ...)<br>* Write tests for it <br>* Be sure that *all other* tests are still green<br>* Send me a pull request<br><br>Too complicated? You just wanna mess around for yourself? Thats fine! Just <br>skip everything after step two :)<br><br>## License<br><br>    Copyright 2009-2012 Michael Contento &lt;michaelcontento@gmail.com&gt;<br><br>    Licensed under the Apache License, Version 2.0 (the \"License\");<br>    you may not use this file except in compliance with the License.<br>    You may obtain a copy of the License at<br><br>        http://www.apache.org/licenses/LICENSE-2.0<br><br>    Unless required by applicable law or agreed to in writing, software<br>    distributed under the License is distributed on an \"AS IS\" BASIS,<br>    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br>    See the License for the specific language governing permissions and<br>    limitations under the License.<br><br>  [Pip]: http://www.pip-installer.org<br>  [Cuisine]: https://github.com/sebastien/cuisine<br>  [Fabric]: https://github.com/fabric/fabric<br>  [Python]: http://python.org<br>  [Revolver]: https://github.com/michaelcontento/revolver\n          </div>"}, "last_serial": 798935, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "863553d0ba3de7036d23d1495eb35fca", "sha256": "bdb09d99e4ad8ab4c631485ccfbe192203bbef5d3d12154387745b1277a934b9"}, "downloads": -1, "filename": "revolver-0.0.4.tar.gz", "has_sig": false, "md5_digest": "863553d0ba3de7036d23d1495eb35fca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13307, "upload_time": "2012-03-16T00:46:23", "upload_time_iso_8601": "2012-03-16T00:46:23.561259Z", "url": "https://files.pythonhosted.org/packages/0d/a9/942661a0049c470cf95945c40c8c023b6c634b47a4342e801724f2320795/revolver-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "0e8dcc73e1ebc28067a2c4d70005e96d", "sha256": "09d151f14037c5a0bae5c305f92f9755b577f00dc071d0c9df6390284a73e589"}, "downloads": -1, "filename": "revolver-0.0.5.tar.gz", "has_sig": false, "md5_digest": "0e8dcc73e1ebc28067a2c4d70005e96d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22115, "upload_time": "2012-11-10T18:16:52", "upload_time_iso_8601": "2012-11-10T18:16:52.802182Z", "url": "https://files.pythonhosted.org/packages/1b/48/c6c4cc594a020190af25a62cfa2e5a537094178f41fc357d0618f6dbc721/revolver-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e8dcc73e1ebc28067a2c4d70005e96d", "sha256": "09d151f14037c5a0bae5c305f92f9755b577f00dc071d0c9df6390284a73e589"}, "downloads": -1, "filename": "revolver-0.0.5.tar.gz", "has_sig": false, "md5_digest": "0e8dcc73e1ebc28067a2c4d70005e96d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22115, "upload_time": "2012-11-10T18:16:52", "upload_time_iso_8601": "2012-11-10T18:16:52.802182Z", "url": "https://files.pythonhosted.org/packages/1b/48/c6c4cc594a020190af25a62cfa2e5a537094178f41fc357d0618f6dbc721/revolver-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:15 2020"}