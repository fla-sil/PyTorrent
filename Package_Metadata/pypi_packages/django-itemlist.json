{"info": {"author": "Michel Fodje", "author_email": "michel4j@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "========\nItemList\n========\n\nItemList is a customizable Django Admin ChangeList-like app for use outside of the admin.\nIt can be used to create versatile paginated lists of objects which can be searched, filtered\nand provide links to detail pages similarly to the admin ChangeLists.\n\nProvides a generic class-based view `ItemListView`.\n\nItemListView\n------------\n\n*class itemlist.views.ItemListView*\n    A page representing a list of objects, with a search box, list filters, sortable columns, pagination and optional\n    links to detailed pages.\n\n    *Ancestors (MRO)*\n        This view inherits methods and attributes from the following Django  views:\n\n        * django.views.generic.list.ListView\n        * django.views.generic.list.MultipleObjectTemplateResponseMixin\n        * django.views.generic.base.TemplateResponseMixin\n        * django.views.generic.list.BaseListView\n        * django.views.generic.list.MultipleObjectMixin\n        * django.views.generic.base.View\n\n    *Methods and attributes*\n        list_columns\n            A list of field names to display in columns. Supports double underscore lookups.\n\n        list_filters\n            A list of field names or `django.contrib.admin.SimpleListFilter` instances for generating filters on the list.\n\n        list_search\n            A list of field names to include in search operations. Supports double underscore lookups.\n\n        list_transforms\n            A dictionary mapping field names to functions for transforming column values before display. Transform\n            functions must take two arguments `transform(value, obj)`, where `obj` is the object corresponding\n            to the list row.\n\n        list_styles\n            A dictionary mapping field names to css style classes to add to the HTML of the columns.\n\n        link_url\n            A named url for creating links to detailed pages. If `None` (default), no links are created.\n\n        link_kwarg\n            The link kwarg parameter for `link_url`. Default is 'pk'\n\n        link_attr\n            By default links are created with the url in the href attribute of an anchor tag. The attribute can be\n            changed by setting the link_attr parameter of the view. For example setting `link_attr` to `data-link` will\n            create a tag that looks like `<a href=\"#!\" data-link=\"http://...\">...</a>`.  This is useful for loading\n            content using JavaScript into modals or for ajax. This parameter replaces `link_data` boolean in previous\n            versions.\n\n        link_field\n            Column name on which to create links. Must be one of the names included in list_columns. By default the\n            first column will be used.\n\n        get_list_columns()\n            Return the field names to display in columns. By default, simply returns the value of `list_columns`.\n\n        get_list_filters()\n            Return the list_filters to display. By default, simply returns the value of `list_filters`.\n\n        get_list_search()\n            Return the list of field names to include in search operations. By default, simply returns the value\n            of `list_search`.\n\n        get_list_transforms()\n            Return the dictionary of transforms to use for the columns. By default, simply returns the value of\n            `list_transforms`.\n\n        get_list_styles()\n            Return the dictionary of column css styles. By default, simply returns the value of `list_styles`.\n\n        get_link_url(obj)\n            Return the detail url link for the current object/row. By default, uses the named url from `link_url`, the `kwarg` from\n            `link_kwarg` and the value of the attribute.\n\n        get_link_kwarg()\n            Return the `kwarg` to use for the detail `link_url`. By default, simply returns the value of `link_kwarg`.\n\n        get_link_field()\n            Return the name of the column on which to create the detail links. By default, returns the first column.\n\n\nExample views.py:\n\n.. code-block:: python\n\n    from django.utils import timezone\n    from itemlist import ItemListView\n\n    from library.models import Topic\n\n    class TopicList(ItemListView):\n        template_name = 'myapp/topic_list.html'\n        model = Topic\n        list_filters = ['kind', 'parent']\n        list_columns = ['id', 'name', 'acronym', 'kind', 'parent__name']\n        list_search = ['name', 'kind__name']\n\n        link_url = 'library:topic-detail'\n        link_field = 'name'\n        paginate_by = 20\n\n        def get_context_data(self, **kwargs):\n            context = super().get_context_data(**kwargs)\n            context['now'] = timezone.now()\n            return context\n\nExample urls.py:\n\n.. code-block:: python\n\n    from django.urls import path\n\n    from library.views import TopicList\n\n    app_label = 'library'\n    urlpatterns = [\n        path('', TopicList.as_view(), name='topic-list'),\n    ]\n\nExamples for myapp/topic_list.html. The default template if none is specified is exactly the same as below:\n\n.. code-block:: django\n\n    {% extends \"base.html\" %}\n    {% block content %}\n        {% include \"itemlist/embed_list.html\" %}\n    {% endblock %}\n\n\nAnother template example, equivalent to above. This allows you to reorder/omit components.\n\n.. code-block:: django\n\n    {% include \"itemlist/filters.html\" %}\n    {% include \"itemlist/list.html\" %}\n    {% include \"itemlist/pagination.html\" %}\n\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/michel4j/django-itemlist", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-itemlist", "package_url": "https://pypi.org/project/django-itemlist/", "platform": "", "project_url": "https://pypi.org/project/django-itemlist/", "project_urls": {"Homepage": "https://github.com/michel4j/django-itemlist"}, "release_url": "https://pypi.org/project/django-itemlist/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "A customizable Django Admin ChangeList-like app for use outside of the admin.", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ItemList is a customizable Django Admin ChangeList-like app for use outside of the admin.\nIt can be used to create versatile paginated lists of objects which can be searched, filtered\nand provide links to detail pages similarly to the admin ChangeLists.</p>\n<p>Provides a generic class-based view <cite>ItemListView</cite>.</p>\n<div id=\"itemlistview\">\n<h2>ItemListView</h2>\n<dl>\n<dt><em>class itemlist.views.ItemListView</em></dt>\n<dd><p>A page representing a list of objects, with a search box, list filters, sortable columns, pagination and optional\nlinks to detailed pages.</p>\n<dl>\n<dt><em>Ancestors (MRO)</em></dt>\n<dd><p>This view inherits methods and attributes from the following Django  views:</p>\n<ul>\n<li>django.views.generic.list.ListView</li>\n<li>django.views.generic.list.MultipleObjectTemplateResponseMixin</li>\n<li>django.views.generic.base.TemplateResponseMixin</li>\n<li>django.views.generic.list.BaseListView</li>\n<li>django.views.generic.list.MultipleObjectMixin</li>\n<li>django.views.generic.base.View</li>\n</ul>\n</dd>\n<dt><em>Methods and attributes</em></dt>\n<dd><dl>\n<dt>list_columns</dt>\n<dd>A list of field names to display in columns. Supports double underscore lookups.</dd>\n<dt>list_filters</dt>\n<dd>A list of field names or <cite>django.contrib.admin.SimpleListFilter</cite> instances for generating filters on the list.</dd>\n<dt>list_search</dt>\n<dd>A list of field names to include in search operations. Supports double underscore lookups.</dd>\n<dt>list_transforms</dt>\n<dd>A dictionary mapping field names to functions for transforming column values before display. Transform\nfunctions must take two arguments <cite>transform(value, obj)</cite>, where <cite>obj</cite> is the object corresponding\nto the list row.</dd>\n<dt>list_styles</dt>\n<dd>A dictionary mapping field names to css style classes to add to the HTML of the columns.</dd>\n<dt>link_url</dt>\n<dd>A named url for creating links to detailed pages. If <cite>None</cite> (default), no links are created.</dd>\n<dt>link_kwarg</dt>\n<dd>The link kwarg parameter for <cite>link_url</cite>. Default is \u2018pk\u2019</dd>\n<dt>link_attr</dt>\n<dd>By default links are created with the url in the href attribute of an anchor tag. The attribute can be\nchanged by setting the link_attr parameter of the view. For example setting <cite>link_attr</cite> to <cite>data-link</cite> will\ncreate a tag that looks like <cite>&lt;a href=\u201d#!\u201d data-link=\u201dhttp://\u2026\u201d&gt;\u2026&lt;/a&gt;</cite>.  This is useful for loading\ncontent using JavaScript into modals or for ajax. This parameter replaces <cite>link_data</cite> boolean in previous\nversions.</dd>\n<dt>link_field</dt>\n<dd>Column name on which to create links. Must be one of the names included in list_columns. By default the\nfirst column will be used.</dd>\n<dt>get_list_columns()</dt>\n<dd>Return the field names to display in columns. By default, simply returns the value of <cite>list_columns</cite>.</dd>\n<dt>get_list_filters()</dt>\n<dd>Return the list_filters to display. By default, simply returns the value of <cite>list_filters</cite>.</dd>\n<dt>get_list_search()</dt>\n<dd>Return the list of field names to include in search operations. By default, simply returns the value\nof <cite>list_search</cite>.</dd>\n<dt>get_list_transforms()</dt>\n<dd>Return the dictionary of transforms to use for the columns. By default, simply returns the value of\n<cite>list_transforms</cite>.</dd>\n<dt>get_list_styles()</dt>\n<dd>Return the dictionary of column css styles. By default, simply returns the value of <cite>list_styles</cite>.</dd>\n<dt>get_link_url(obj)</dt>\n<dd>Return the detail url link for the current object/row. By default, uses the named url from <cite>link_url</cite>, the <cite>kwarg</cite> from\n<cite>link_kwarg</cite> and the value of the attribute.</dd>\n<dt>get_link_kwarg()</dt>\n<dd>Return the <cite>kwarg</cite> to use for the detail <cite>link_url</cite>. By default, simply returns the value of <cite>link_kwarg</cite>.</dd>\n<dt>get_link_field()</dt>\n<dd>Return the name of the column on which to create the detail links. By default, returns the first column.</dd>\n</dl>\n</dd>\n</dl>\n</dd>\n</dl>\n<p>Example views.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.utils</span> <span class=\"kn\">import</span> <span class=\"n\">timezone</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itemlist</span> <span class=\"kn\">import</span> <span class=\"n\">ItemListView</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">library.models</span> <span class=\"kn\">import</span> <span class=\"n\">Topic</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TopicList</span><span class=\"p\">(</span><span class=\"n\">ItemListView</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'myapp/topic_list.html'</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Topic</span>\n    <span class=\"n\">list_filters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'kind'</span><span class=\"p\">,</span> <span class=\"s1\">'parent'</span><span class=\"p\">]</span>\n    <span class=\"n\">list_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'acronym'</span><span class=\"p\">,</span> <span class=\"s1\">'kind'</span><span class=\"p\">,</span> <span class=\"s1\">'parent__name'</span><span class=\"p\">]</span>\n    <span class=\"n\">list_search</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'kind__name'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">link_url</span> <span class=\"o\">=</span> <span class=\"s1\">'library:topic-detail'</span>\n    <span class=\"n\">link_field</span> <span class=\"o\">=</span> <span class=\"s1\">'name'</span>\n    <span class=\"n\">paginate_by</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'now'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n</pre>\n<p>Example urls.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">library.views</span> <span class=\"kn\">import</span> <span class=\"n\">TopicList</span>\n\n<span class=\"n\">app_label</span> <span class=\"o\">=</span> <span class=\"s1\">'library'</span>\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">TopicList</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'topic-list'</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Examples for myapp/topic_list.html. The default template if none is specified is exactly the same as below:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">extends</span> <span class=\"s2\">\"base.html\"</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">content</span> <span class=\"cp\">%}</span><span class=\"x\">\n    </span><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">\"itemlist/embed_list.html\"</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">endblock</span> <span class=\"cp\">%}</span>\n</pre>\n<p>Another template example, equivalent to above. This allows you to reorder/omit components.</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">\"itemlist/filters.html\"</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">\"itemlist/list.html\"</span> <span class=\"cp\">%}</span><span class=\"x\">\n</span><span class=\"cp\">{%</span> <span class=\"k\">include</span> <span class=\"s2\">\"itemlist/pagination.html\"</span> <span class=\"cp\">%}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6384541, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3a3c9ffb76147233ae887caec295c59e", "sha256": "329c6c3e1f9a521b388c945fb6de2dc03b14cb9769e3940dd94b33d5a205c229"}, "downloads": -1, "filename": "django_itemlist-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3a3c9ffb76147233ae887caec295c59e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9677, "upload_time": "2019-08-26T19:08:35", "upload_time_iso_8601": "2019-08-26T19:08:35.333383Z", "url": "https://files.pythonhosted.org/packages/d9/29/d6850e907c4e635f6db4a0f9fc472c5cdb782892f01935a05897cdca9217/django_itemlist-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dffb93c9df8277c34c5d870c52d14ca2", "sha256": "a5572f14bb9359528c14b06d018281ff643a0d8f6dfdde9c7f6719b5e5a7e0f2"}, "downloads": -1, "filename": "django-itemlist-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dffb93c9df8277c34c5d870c52d14ca2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7762, "upload_time": "2019-08-26T19:08:37", "upload_time_iso_8601": "2019-08-26T19:08:37.754782Z", "url": "https://files.pythonhosted.org/packages/dc/76/5724463abc0656aeace611e735dfd4fcbc7d0a5951c7e7b76a0ec30baaa6/django-itemlist-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ede7892a0ff57e45c92600964ed9baf5", "sha256": "dcb4d04a3e8eac79d598acf7dc26ed9f44db0318087b32c4540c3549b21703bb"}, "downloads": -1, "filename": "django_itemlist-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ede7892a0ff57e45c92600964ed9baf5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9684, "upload_time": "2019-08-27T02:16:46", "upload_time_iso_8601": "2019-08-27T02:16:46.398215Z", "url": "https://files.pythonhosted.org/packages/eb/60/496a19f8638de3f64e07036f9466b488a7cc88ab8d385803f148fe9f9819/django_itemlist-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a735693aed4ea958a17022f97d04363", "sha256": "254b3a7989621c8c64b689087203b66d4ed598ba482c90153f11aa002f5e2a58"}, "downloads": -1, "filename": "django-itemlist-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9a735693aed4ea958a17022f97d04363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7765, "upload_time": "2019-08-27T02:16:47", "upload_time_iso_8601": "2019-08-27T02:16:47.946589Z", "url": "https://files.pythonhosted.org/packages/eb/06/60b9b848c87f5e02f289cd71149f596dd031eeaf748f472c09decd74c557/django-itemlist-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5d0ae703b5387ee6990c580d0a657c8a", "sha256": "8bb95d243b45aa5072e060070b01edf7a5df7fcd023f6b647f6ce21e2686045f"}, "downloads": -1, "filename": "django_itemlist-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5d0ae703b5387ee6990c580d0a657c8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14994, "upload_time": "2019-08-27T02:38:49", "upload_time_iso_8601": "2019-08-27T02:38:49.640864Z", "url": "https://files.pythonhosted.org/packages/db/e6/acc3cb5768e6406fef36754c49d54a93cea002ec27ca061a666b9f393d05/django_itemlist-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35df30b64c2207877628e1942e44f401", "sha256": "a7fcef104ed4eb8c5145eb75ed7d26795b25246123bf522f7cb0a71f2864f9b9"}, "downloads": -1, "filename": "django-itemlist-0.2.0.tar.gz", "has_sig": false, "md5_digest": "35df30b64c2207877628e1942e44f401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11863, "upload_time": "2019-08-27T02:38:51", "upload_time_iso_8601": "2019-08-27T02:38:51.557294Z", "url": "https://files.pythonhosted.org/packages/93/c2/0fcb273ac2e4b43e36041aee0653885b9593a48776ae5ce3d82398f6a027/django-itemlist-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "5d8929c6a513bdbcf7261f103b5f8739", "sha256": "59ff34f3e7d9ba6523cc2f02472aa623f73b198408fc2f7c957ca911ba9931df"}, "downloads": -1, "filename": "django_itemlist-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5d8929c6a513bdbcf7261f103b5f8739", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15006, "upload_time": "2019-09-04T19:33:46", "upload_time_iso_8601": "2019-09-04T19:33:46.868370Z", "url": "https://files.pythonhosted.org/packages/22/5b/67f11e7b6dde7c56930b658fe7e085d1fe0e0e08fa0e8c39c08526e2d572/django_itemlist-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a18e4e9dc71c72a57fa9c65673b758c6", "sha256": "edf142411ab579a56300cafe1f551367d51de78aeda0baa8d9909424dd11d888"}, "downloads": -1, "filename": "django-itemlist-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a18e4e9dc71c72a57fa9c65673b758c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11872, "upload_time": "2019-09-04T19:33:48", "upload_time_iso_8601": "2019-09-04T19:33:48.161237Z", "url": "https://files.pythonhosted.org/packages/e0/bf/cd835bdfa09b89a280ba700d9939bf3ef1b5d3c310f6480b155d3dd545b0/django-itemlist-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "722dba53888f15e9cc7d8c367e17764d", "sha256": "c833e888b1df3905037ebfc8a0cc66d9969a609c75fd209f0d2e1588ed9cf61a"}, "downloads": -1, "filename": "django_itemlist-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "722dba53888f15e9cc7d8c367e17764d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14962, "upload_time": "2019-09-08T17:10:34", "upload_time_iso_8601": "2019-09-08T17:10:34.120779Z", "url": "https://files.pythonhosted.org/packages/e8/1b/af8bfa9ba415ef4c06957afe73951fb51882c965b71c3061bf9f61ca55a0/django_itemlist-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62bda8e7662edaeeb7349647f3758e9c", "sha256": "faa09cf6c45742aac2acda93cda981cd605d8bc2cdf017e00e3ca9249d8ff50b"}, "downloads": -1, "filename": "django-itemlist-0.2.3.tar.gz", "has_sig": false, "md5_digest": "62bda8e7662edaeeb7349647f3758e9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11824, "upload_time": "2019-09-08T17:10:36", "upload_time_iso_8601": "2019-09-08T17:10:36.060778Z", "url": "https://files.pythonhosted.org/packages/20/2a/6e93fb6e3d5be3877f1b6c311a9a43a04d091297d94b3d8a5ea4de5d915c/django-itemlist-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "5ca81b62defad2d48721c2177d8a5968", "sha256": "f6af4367c9dd19e4aa676b5dddf5d2d870bf9ad7f4c077056fc5bd11136f51f3"}, "downloads": -1, "filename": "django_itemlist-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5ca81b62defad2d48721c2177d8a5968", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14358, "upload_time": "2019-11-17T22:55:48", "upload_time_iso_8601": "2019-11-17T22:55:48.004383Z", "url": "https://files.pythonhosted.org/packages/f2/ed/6e2bd4b551fbcac9659d9a2ed355bea9af8ff9ec7eb5279d4e88ae8ca771/django_itemlist-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc08744de62b79a8fe39b653a65900eb", "sha256": "c243b533b815b531715375751878f5e684e947175e7cc0b54eb51ab7c99752a1"}, "downloads": -1, "filename": "django-itemlist-0.2.4.tar.gz", "has_sig": false, "md5_digest": "cc08744de62b79a8fe39b653a65900eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12328, "upload_time": "2019-11-17T22:55:49", "upload_time_iso_8601": "2019-11-17T22:55:49.568295Z", "url": "https://files.pythonhosted.org/packages/a0/a3/a5047011d3ef62ac7dc51848c3aae17a081671b2b2548c9cb2a9876ce0ad/django-itemlist-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "517eb2cfafe6f1425e17584367b2c612", "sha256": "2ab2503c67a1024b8ce7451f4958208fa98226535a4d9f90bf69033d4c48a583"}, "downloads": -1, "filename": "django_itemlist-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "517eb2cfafe6f1425e17584367b2c612", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14440, "upload_time": "2019-12-02T01:20:15", "upload_time_iso_8601": "2019-12-02T01:20:15.993005Z", "url": "https://files.pythonhosted.org/packages/2a/ea/2baf3ca2501b2f266afdd313cdf57781458f6860333c0f07c5dcaab065ce/django_itemlist-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67b6aa13f2000bc6f3a86c8a43cf39a1", "sha256": "8a4fc7307b8e2acd311c0b5b5ae8076457f9dd62ccc6c616339f21f3cb91700c"}, "downloads": -1, "filename": "django-itemlist-0.2.5.tar.gz", "has_sig": false, "md5_digest": "67b6aa13f2000bc6f3a86c8a43cf39a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12397, "upload_time": "2019-12-02T01:20:17", "upload_time_iso_8601": "2019-12-02T01:20:17.642914Z", "url": "https://files.pythonhosted.org/packages/6e/59/d1df906fb0aeac5af82d352e106134138d1b5884203b3bff7a641b7a7538/django-itemlist-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "f65e5cb37ceb6ba95a39a264ac5918bf", "sha256": "554a39d6c75e4d57397b3b7bb0a155a291e7963af23d9274b6d6bf261aa9a9a7"}, "downloads": -1, "filename": "django_itemlist-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f65e5cb37ceb6ba95a39a264ac5918bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14458, "upload_time": "2020-01-02T05:20:49", "upload_time_iso_8601": "2020-01-02T05:20:49.654483Z", "url": "https://files.pythonhosted.org/packages/a8/30/7f928f25416738d0fd29983ff6213c954dbb384fa0cac92cc4f6e86dc063/django_itemlist-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef16d17d8f31e68b7eb47d68d3cb8b5c", "sha256": "d56baa82cb2aabb34274968fed7475446e49957ac05e9315f458f5eed397f6c7"}, "downloads": -1, "filename": "django-itemlist-0.2.6.tar.gz", "has_sig": false, "md5_digest": "ef16d17d8f31e68b7eb47d68d3cb8b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12423, "upload_time": "2020-01-02T05:20:51", "upload_time_iso_8601": "2020-01-02T05:20:51.325438Z", "url": "https://files.pythonhosted.org/packages/e9/1d/c4e3d8eba90b27ee34ba40a869ca145561fa6a38eb52f7dd90bd3c94d3ec/django-itemlist-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f65e5cb37ceb6ba95a39a264ac5918bf", "sha256": "554a39d6c75e4d57397b3b7bb0a155a291e7963af23d9274b6d6bf261aa9a9a7"}, "downloads": -1, "filename": "django_itemlist-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f65e5cb37ceb6ba95a39a264ac5918bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14458, "upload_time": "2020-01-02T05:20:49", "upload_time_iso_8601": "2020-01-02T05:20:49.654483Z", "url": "https://files.pythonhosted.org/packages/a8/30/7f928f25416738d0fd29983ff6213c954dbb384fa0cac92cc4f6e86dc063/django_itemlist-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef16d17d8f31e68b7eb47d68d3cb8b5c", "sha256": "d56baa82cb2aabb34274968fed7475446e49957ac05e9315f458f5eed397f6c7"}, "downloads": -1, "filename": "django-itemlist-0.2.6.tar.gz", "has_sig": false, "md5_digest": "ef16d17d8f31e68b7eb47d68d3cb8b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12423, "upload_time": "2020-01-02T05:20:51", "upload_time_iso_8601": "2020-01-02T05:20:51.325438Z", "url": "https://files.pythonhosted.org/packages/e9/1d/c4e3d8eba90b27ee34ba40a869ca145561fa6a38eb52f7dd90bd3c94d3ec/django-itemlist-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:32 2020"}