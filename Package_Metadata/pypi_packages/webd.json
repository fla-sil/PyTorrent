{"info": {"author": "Curt Commander", "author_email": "curtcommander@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: HTML"], "description": "# webd\n---\n`webd` (pronounced \"webbed\") is a python package for developing and optimally deploying HTML.\n\n### Installation\n---\nUse `pip` to install this package:\n```python\npip install webd\n```\n\n### Usage\n---\nImport `webd` to begin using it:\n```python\nimport webd\n```\n##### Dependencies:\n- requests\n- pandas\n\n### Functionalities\n---\n- **loc** - download remote files and alter HTML to reference local (downloaded) files\n- **unloc** - undo loc, change HTML script elements to reference original remote files\n- **indent** - regularize indentation of HTML\n- **formatter** - general formatting and clean up for HTML\n- **in_css** - internalize external CSS\n- **in_js** - inline external JavaScript\n- **minify** - minify HTML and CSS\n- **opt** - perform formatter, unloc, in_js, in_css, and minify on HTML\n\n### Levels\n---\nFor added flexibility, each of the functionalities listed above has a base level and a file level. The base level alters a python object (usually an HTML string), and the file level alters a file or a set of files in a directory (usually HTML files). For each functionality, there are two functions that correspond to the two levels. These functions have the following naming convention: *functionality* and *functionality_file*.\n\nFor example, the loc functionality's functions are `loc` and `loc_file`. The `loc` function takes an html string as input and returns an altered html string. The `loc_file` function reads an html file, passes the file's contents to the `loc` function, and then writes the returned html string to file for one file or for a set of files in a directory.\n\n### Base-Level Functions\n---\n#### webd.loc(*html*)\n---\nLocalizes HTML by downloading remote files (e.g. CSS and JavaScript) referenced therein. The downloaded files are placed in *./downloaded*. (If there is no *downloaded* directory in the current working directory, one will be created.) Then, the HTML string given as input is altered to reference the local files in the *downloaded* directory. Localizing HTML is particularly useful when working with limited data or a poor network connection.\n\nFor example, running\n```python\nwebd.loc(html)\n```\nwith the value of `html` being the following string\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n  </head>\n  <body></body>\n</html> \n```\nwill return the following\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"downloaded/jquery-3.4.1.min.js\"></script>\n    <script src=\"downloaded/popper.min.js\"></script>\n    <script src=\"downloaded/bootstrap.min.js\"></script>\n  </head>\n  <body></body>\n</html>\n```\n\n#### webd.unloc(*html*)\n---\nUndoes `loc`. Referencs in the HTML to files in the *downloaded* directory are found and replaced with references to the original URLs. Data on local files and their corresponding URLs is stored in *downloaded/register.csv*.\n\nThe following function call\n```python\nwebd.unloc(html)\n```\nwith `html` being the value returned from `webd.loc(html)` above\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"downloaded/jquery-3.4.1.min.js\"></script>\n    <script src=\"downloaded/popper.min.js\"></script>\n    <script src=\"downloaded/bootstrap.min.js\"></script>\n  </head>\n  <body></body>\n</html>\n```\nwill undo `loc` and return the original string with references to remote files\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"></script>\n  </head>\n  <body></body>\n</html> \n```\n\n#### webd.indent(*html*, *n_spaces=2*)\n---\nProperly indents HTML. The `n_spaces` parameter determines the size of the indent (number of spaces) and has a default value of two.\n\nRunning\n```python\nwebd.indent(html, n_spaces=3)\n```\nwith `html` being the following string with exaggerated improper indentation\n```html\n        <!doctype html>\n<html>\n      <head>\n  <script src=\"downloaded/jquery-3.4.1.slim.min.js\"></script>\n<script src=\"downloaded/popper.min.js\"></script>\n          <script src=\"downloaded/bootstrap.min.js\"></script>\n                            </head>\n  <body>\n    </body>\n</html> \n```\nReturns the following\n```html\n<!doctype html>\n<html>\n   <head>\n      <script src=\"downloaded/jquery-3.4.1.slim.min.js\"></script>\n      <script src=\"downloaded/popper.min.js\"></script>\n      <script src=\"downloaded/bootstrap.min.js\"></script>\n   </head>\n   <body>\n   </body>\n</html> \n```\n\n#### webd.formatter(*html*, *indent=True*, *n_spaces=2* )\n---\nApplies lightweight formatting and general cleanup for HTML. The parameter `indent` specifies whether `webd.indent` should also be called on the HTML with the value of `n_spaces` from `webd.formatter` being passed to `webd.indent`.\n\nRunning\n```python\nwebd.formatter(html)\n```\non the following `html` mess\n```html\n        <!docTYpe hTml>\n<HTML>\n      <Head>\n  <scrIPt src=\"downloaded/jquery-3.4.1.slim.min.js\"><   /script    >\n<SCRIPT       src=\"downloaded/popper.min.js\"   ></scripT>\n          <script src=\"downloaded/bootstrap.min.js\">     < /SCRIPT>\n                            </heAd>\n  <body>\n    </BODY>\n</hTmL> \n```\nwill return clean and properly-indented HTML\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"downloaded/jquery-3.4.1.slim.min.js\"></script>\n    <script src=\"downloaded/popper.min.js\"></script>\n    <script src=\"downloaded/bootstrap.min.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>\n```\n#### webd.in_js(*html*)\n---\nInlines JavaScript from external files whether they be local or remote. Deferred JavaScript is inserted right before the closing body tag. Cleans up the HTML using `webd.formatter`.\n\nFor example, calling `webd.in_js`\n```python\nwebd.in_js(html)\n```\nwith `html` having the value\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"demo_in_js.js\" defer></script>\n  </head>\n  <body>\n    <script src=\"demo_in_js.js\"></script>\n  </body>\n</html>\n```\nand *demo_in_js.js* containing the following JavaScript\n```javascript\nvar height; height = 2; console.log(height-1);\n```\nreturns the following HTML with JavaScript inlined\n```html\n<!doctype html>\n<html>\n  <head></head>\n  <body>\n    <script>var height; height=2; console.log(height-1);</script>\n    <script>var height; height=2; console.log(height-1);</script>\n  </body>\n</html>\n```\n\n#### webd.in_css(*html*)\n---\nInserts all css from links to external files into one style tag that is inserted right before the closing head tag. Removes the links referencing CSS files. Cleans up the HTML using `webd.formatter`.\n\nRunning the following\n```python\nwebd.in_css(html)\n```\nwith the value of `html` being \n```html\n<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"demo_in_css.css\">\n  </head>\n  <body>\n    <link rel=\"stylesheet\" href=\"demo_in_css.css\">\n  </body>\n</html>\n```\nand *demo_in_css.css* containing the following CSS\n```css\nbody {color: black;}\n```\nReturns the following HTML with internalized CSS\n```html\n<!doctype html>\n<html>\n  <head>\n    <style>body {color: black;}body {color: black;}</style>\n  </head>\n  <body></body>\n</html>\n```\n\n#### webd.minify(*html*)\n---\nMinifies HTML or CSS. Automatically detects which is present. If HTML, the CSS in any style tags is also minified.\n\nIn the case where HTML is to be minified, running \n```python\nwebd.minify(html)\n```\nwith `html` as \n```html\n<!doctype html>\n<html>\n  <head></head>\n  <body></body>\n</html> \n```\nreturns the following\n```html\n<!doctype html><html><head></head><body></body></html>\n```\n\n#### webd.opt(*html*)\n---\nApplies the functions `formatter`, `unloc`, `in_js`, `in_css`, and `minify` to HTML in that order. Useful for deploying HTML.\n\nFor example, running\n```python\nwebd.opt(html)\n```\nwith `html` being the following string\n```html\n<!doctype html>\n<html>\n  <head>\n    <script src=\"demo_in_js.js\" defer></script>\n  </head>\n  <body>\n    <link rel=\"stylesheet\" href=\"demo_in_css.css\">\n  </body>\n</html>\n```\nyields the following output\n```html\n<!doctype html><html><head><style>body{color:black;}</style></head><body><script>var height; height = 2; console.log(height-1);</script></body></html>\n```\n\n### File-Level Functions\n---\nFile-level functions have one required parameter -- `file_dir` -- and at least one  optional parameter -- `out`. `file_dir` is the path to either the file or the directory that the function should be applied to. `out` specficies where the output of the function should be written to. Files are overwritten by default: the default value for `out` is the value of `file_dir`. If a directory is specified for `out`, the files' names are conserved when writing to that directory.\n\nAdditional parameters for file-level functions are passed to their corresponding base-level functions. For example, the following `indent_file` function call passes the `n_spaces` parameter value to the `indent` base-level function.\n\n```python\nwebd.indent_file('file.html', n_spaces=3)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/curtcommander/webd/archive/v0.0.6.tar.gz", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "webd", "package_url": "https://pypi.org/project/webd/", "platform": "", "project_url": "https://pypi.org/project/webd/", "project_urls": {"Homepage": "https://github.com/curtcommander/webd/archive/v0.0.6.tar.gz"}, "release_url": "https://pypi.org/project/webd/0.0.6/", "requires_dist": ["requests", "pandas"], "requires_python": ">=3.5", "summary": "webd is a python package for developing and optimally deploying HTML.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>webd</h1>\n<hr>\n<p><code>webd</code> (pronounced \"webbed\") is a python package for developing and optimally deploying HTML.</p>\n<h3>Installation</h3>\n<hr>\n<p>Use <code>pip</code> to install this package:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">webd</span>\n</pre>\n<h3>Usage</h3>\n<hr>\n<p>Import <code>webd</code> to begin using it:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">webd</span>\n</pre>\n<h5>Dependencies:</h5>\n<ul>\n<li>requests</li>\n<li>pandas</li>\n</ul>\n<h3>Functionalities</h3>\n<hr>\n<ul>\n<li><strong>loc</strong> - download remote files and alter HTML to reference local (downloaded) files</li>\n<li><strong>unloc</strong> - undo loc, change HTML script elements to reference original remote files</li>\n<li><strong>indent</strong> - regularize indentation of HTML</li>\n<li><strong>formatter</strong> - general formatting and clean up for HTML</li>\n<li><strong>in_css</strong> - internalize external CSS</li>\n<li><strong>in_js</strong> - inline external JavaScript</li>\n<li><strong>minify</strong> - minify HTML and CSS</li>\n<li><strong>opt</strong> - perform formatter, unloc, in_js, in_css, and minify on HTML</li>\n</ul>\n<h3>Levels</h3>\n<hr>\n<p>For added flexibility, each of the functionalities listed above has a base level and a file level. The base level alters a python object (usually an HTML string), and the file level alters a file or a set of files in a directory (usually HTML files). For each functionality, there are two functions that correspond to the two levels. These functions have the following naming convention: <em>functionality</em> and <em>functionality_file</em>.</p>\n<p>For example, the loc functionality's functions are <code>loc</code> and <code>loc_file</code>. The <code>loc</code> function takes an html string as input and returns an altered html string. The <code>loc_file</code> function reads an html file, passes the file's contents to the <code>loc</code> function, and then writes the returned html string to file for one file or for a set of files in a directory.</p>\n<h3>Base-Level Functions</h3>\n<hr>\n<h4>webd.loc(<em>html</em>)</h4>\n<hr>\n<p>Localizes HTML by downloading remote files (e.g. CSS and JavaScript) referenced therein. The downloaded files are placed in <em>./downloaded</em>. (If there is no <em>downloaded</em> directory in the current working directory, one will be created.) Then, the HTML string given as input is altered to reference the local files in the <em>downloaded</em> directory. Localizing HTML is particularly useful when working with limited data or a poor network connection.</p>\n<p>For example, running</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>with the value of <code>html</code> being the following string</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://code.jquery.com/jquery-3.4.1.slim.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span> \n</pre>\n<p>will return the following</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/jquery-3.4.1.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>webd.unloc(<em>html</em>)</h4>\n<hr>\n<p>Undoes <code>loc</code>. Referencs in the HTML to files in the <em>downloaded</em> directory are found and replaced with references to the original URLs. Data on local files and their corresponding URLs is stored in <em>downloaded/register.csv</em>.</p>\n<p>The following function call</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">unloc</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>with <code>html</code> being the value returned from <code>webd.loc(html)</code> above</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/jquery-3.4.1.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>will undo <code>loc</code> and return the original string with references to remote files</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://code.jquery.com/jquery-3.4.1.slim.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span> \n</pre>\n<h4>webd.indent(<em>html</em>, <em>n_spaces=2</em>)</h4>\n<hr>\n<p>Properly indents HTML. The <code>n_spaces</code> parameter determines the size of the indent (number of spaces) and has a default value of two.</p>\n<p>Running</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">indent</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">,</span> <span class=\"n\">n_spaces</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>with <code>html</code> being the following string with exaggerated improper indentation</p>\n<pre>        <span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/jquery-3.4.1.slim.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n                            <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span> \n</pre>\n<p>Returns the following</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/jquery-3.4.1.slim.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span> \n</pre>\n<h4>webd.formatter(<em>html</em>, <em>indent=True</em>, <em>n_spaces=2</em> )</h4>\n<hr>\n<p>Applies lightweight formatting and general cleanup for HTML. The parameter <code>indent</code> specifies whether <code>webd.indent</code> should also be called on the HTML with the value of <code>n_spaces</code> from <code>webd.formatter</code> being passed to <code>webd.indent</code>.</p>\n<p>Running</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">formatter</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>on the following <code>html</code> mess</p>\n<pre>        <span class=\"cp\">&lt;!docTYpe hTml&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">HTML</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">Head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">scrIPt</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/jquery-3.4.1.slim.min.js\"</span><span class=\"p\">&gt;&lt;</span>   <span class=\"p\">/</span><span class=\"nt\">script</span>    <span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">SCRIPT</span>       <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/popper.min.js\"</span>   <span class=\"p\">&gt;&lt;/</span><span class=\"nt\">scripT</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/bootstrap.min.js\"</span><span class=\"p\">&gt;</span>     <span class=\"p\">&lt;</span> <span class=\"p\">/</span><span class=\"nt\">SCRIPT</span><span class=\"p\">&gt;</span>\n                            <span class=\"p\">&lt;/</span><span class=\"nt\">heAd</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">BODY</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">hTmL</span><span class=\"p\">&gt;</span> \n</pre>\n<p>will return clean and properly-indented HTML</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/jquery-3.4.1.slim.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/popper.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"downloaded/bootstrap.min.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>webd.in_js(<em>html</em>)</h4>\n<hr>\n<p>Inlines JavaScript from external files whether they be local or remote. Deferred JavaScript is inserted right before the closing body tag. Cleans up the HTML using <code>webd.formatter</code>.</p>\n<p>For example, calling <code>webd.in_js</code></p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">in_js</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>with <code>html</code> having the value</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"demo_in_js.js\"</span> <span class=\"na\">defer</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"demo_in_js.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>and <em>demo_in_js.js</em> containing the following JavaScript</p>\n<pre><span class=\"kd\">var</span> <span class=\"nx\">height</span><span class=\"p\">;</span> <span class=\"nx\">height</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">height</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n</pre>\n<p>returns the following HTML with JavaScript inlined</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">height</span><span class=\"p\">;</span> <span class=\"nx\">height</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">height</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">height</span><span class=\"p\">;</span> <span class=\"nx\">height</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">height</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>webd.in_css(<em>html</em>)</h4>\n<hr>\n<p>Inserts all css from links to external files into one style tag that is inserted right before the closing head tag. Removes the links referencing CSS files. Cleans up the HTML using <code>webd.formatter</code>.</p>\n<p>Running the following</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">in_css</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>with the value of <code>html</code> being</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"demo_in_css.css\"</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"demo_in_css.css\"</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>and <em>demo_in_css.css</em> containing the following CSS</p>\n<pre><span class=\"nt\">body</span> <span class=\"p\">{</span><span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">black</span><span class=\"p\">;}</span>\n</pre>\n<p>Returns the following HTML with internalized CSS</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span><span class=\"nt\">body</span> <span class=\"p\">{</span><span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">black</span><span class=\"p\">;}</span><span class=\"nt\">body</span> <span class=\"p\">{</span><span class=\"k\">color</span><span class=\"p\">:</span> <span class=\"kc\">black</span><span class=\"p\">;}&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>webd.minify(<em>html</em>)</h4>\n<hr>\n<p>Minifies HTML or CSS. Automatically detects which is present. If HTML, the CSS in any style tags is also minified.</p>\n<p>In the case where HTML is to be minified, running</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">minify</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>with <code>html</code> as</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span> \n</pre>\n<p>returns the following</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span><span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>webd.opt(<em>html</em>)</h4>\n<hr>\n<p>Applies the functions <code>formatter</code>, <code>unloc</code>, <code>in_js</code>, <code>in_css</code>, and <code>minify</code> to HTML in that order. Useful for deploying HTML.</p>\n<p>For example, running</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">opt</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>with <code>html</code> being the following string</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"demo_in_js.js\"</span> <span class=\"na\">defer</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"demo_in_css.css\"</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>yields the following output</p>\n<pre><span class=\"cp\">&lt;!doctype html&gt;</span><span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span><span class=\"nt\">body</span><span class=\"p\">{</span><span class=\"k\">color</span><span class=\"p\">:</span><span class=\"kc\">black</span><span class=\"p\">;}&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">height</span><span class=\"p\">;</span> <span class=\"nx\">height</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">height</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<h3>File-Level Functions</h3>\n<hr>\n<p>File-level functions have one required parameter -- <code>file_dir</code> -- and at least one  optional parameter -- <code>out</code>. <code>file_dir</code> is the path to either the file or the directory that the function should be applied to. <code>out</code> specficies where the output of the function should be written to. Files are overwritten by default: the default value for <code>out</code> is the value of <code>file_dir</code>. If a directory is specified for <code>out</code>, the files' names are conserved when writing to that directory.</p>\n<p>Additional parameters for file-level functions are passed to their corresponding base-level functions. For example, the following <code>indent_file</code> function call passes the <code>n_spaces</code> parameter value to the <code>indent</code> base-level function.</p>\n<pre><span class=\"n\">webd</span><span class=\"o\">.</span><span class=\"n\">indent_file</span><span class=\"p\">(</span><span class=\"s1\">'file.html'</span><span class=\"p\">,</span> <span class=\"n\">n_spaces</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6491408, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "d3771ee8cdbfd542720732297ebbd5f5", "sha256": "bda582989542ad80d7df550f7a82568d7723a662aab0f2335ddacd3e16f068a9"}, "downloads": -1, "filename": "webd-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d3771ee8cdbfd542720732297ebbd5f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16444, "upload_time": "2020-01-18T03:25:37", "upload_time_iso_8601": "2020-01-18T03:25:37.760418Z", "url": "https://files.pythonhosted.org/packages/ae/d7/7ffd461ceb26e40ad81865b8819a44692bd5eef1ba2603b5894176ec9e13/webd-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22fa2c43f346d9d919a407ff5c00fab8", "sha256": "4e11afa5b8654c30cbb0184242a8b0a0db0dd26dc96d7fd73334ccbbabbba070"}, "downloads": -1, "filename": "webd-0.0.2.tar.gz", "has_sig": false, "md5_digest": "22fa2c43f346d9d919a407ff5c00fab8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10090, "upload_time": "2020-01-18T03:25:40", "upload_time_iso_8601": "2020-01-18T03:25:40.304063Z", "url": "https://files.pythonhosted.org/packages/f4/56/e15995067c7e838b41fa70bb0bc4e542b780d1a63e2fa3a7b065b45b87ea/webd-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "96440df9932774d961f32d316e5be659", "sha256": "1abda9070831cf0dd404fb339a94a693c142703a4053de740054b2d84821dd7b"}, "downloads": -1, "filename": "webd-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "96440df9932774d961f32d316e5be659", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16413, "upload_time": "2020-01-18T05:42:42", "upload_time_iso_8601": "2020-01-18T05:42:42.513431Z", "url": "https://files.pythonhosted.org/packages/d5/f3/02eb44024ea3ddd0e3cc32fab172c5673d7051f06b15684d0806ab5213cc/webd-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "416df0136d360caa0478b720324bc9b6", "sha256": "1fe7f18f8705f96088bd17d935f23e43b4abfdefb78da4ef50e8ef870715b2a2"}, "downloads": -1, "filename": "webd-0.0.3.tar.gz", "has_sig": false, "md5_digest": "416df0136d360caa0478b720324bc9b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12794, "upload_time": "2020-01-18T05:42:44", "upload_time_iso_8601": "2020-01-18T05:42:44.495086Z", "url": "https://files.pythonhosted.org/packages/b3/d3/ba6864c78bd0129cc1d541e8f7c3f1cbd1ef93d5bb5421ef03e31e8eb041/webd-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2c5ca5a98ac14bcbd13b5a7e540e931f", "sha256": "92355b57e2d60c5b90b3d010f02862533f11544ec4b1ddd56c534f1a4fda4713"}, "downloads": -1, "filename": "webd-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2c5ca5a98ac14bcbd13b5a7e540e931f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16435, "upload_time": "2020-01-20T20:11:03", "upload_time_iso_8601": "2020-01-20T20:11:03.547428Z", "url": "https://files.pythonhosted.org/packages/26/00/652c0edb73a31caf17e375bd10d1b7ceb70af4ad3481153d9b87eec57e66/webd-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3dc8c2d80cd55cf15cd20b89a35581ed", "sha256": "cd22a5635d8fc5dda9ff10b58714b8f93d324c29255a13c19f4d3009d8bd52df"}, "downloads": -1, "filename": "webd-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3dc8c2d80cd55cf15cd20b89a35581ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12809, "upload_time": "2020-01-20T20:11:05", "upload_time_iso_8601": "2020-01-20T20:11:05.635217Z", "url": "https://files.pythonhosted.org/packages/a0/9c/41a27d9918819ddbf014b6a95718178ec817360bd6061e13a13a6a65c77c/webd-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f0717fa1ab70798547ecfbb2d14e3b52", "sha256": "5d508579684b6d10c88623514e49bd50d19950fbfaa04dc6a83175b48d90a803"}, "downloads": -1, "filename": "webd-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f0717fa1ab70798547ecfbb2d14e3b52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16440, "upload_time": "2020-01-20T20:43:34", "upload_time_iso_8601": "2020-01-20T20:43:34.797268Z", "url": "https://files.pythonhosted.org/packages/6b/78/3103f7e4a5bd40c4d9eae0b73a883c16ec8907f4c990a77cced5d69c2650/webd-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbf0f4849f2c69b095bd37ab990a81f7", "sha256": "a55bcd7a8d00fbc9d8e0bff2a0d2a3f8e597cd55fc4cbcd50d9842922c230a80"}, "downloads": -1, "filename": "webd-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bbf0f4849f2c69b095bd37ab990a81f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12803, "upload_time": "2020-01-20T20:43:38", "upload_time_iso_8601": "2020-01-20T20:43:38.777989Z", "url": "https://files.pythonhosted.org/packages/1d/66/be0825d714aeb63ffd7ffce15e0184fb7db5e0d84fbdf2c20f92d5bf523f/webd-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "e103e5573bcf404f501d1d22d0811f58", "sha256": "8b2ab4efea39248e407624f08b704272ed84ae6270e4c8b5ab213a4aa24fb63a"}, "downloads": -1, "filename": "webd-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e103e5573bcf404f501d1d22d0811f58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16524, "upload_time": "2020-01-21T00:52:15", "upload_time_iso_8601": "2020-01-21T00:52:15.557917Z", "url": "https://files.pythonhosted.org/packages/30/ea/3a88a2d658fec80db7518984b51320af474ef2554f7c4eac2d7534623207/webd-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b72c35b0765b8b36a5418b7e49cecf58", "sha256": "69d925ac4c1cc76e97eaceb85768e8228d67c337a64000bb80ff8f68bcba7ef8"}, "downloads": -1, "filename": "webd-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b72c35b0765b8b36a5418b7e49cecf58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12892, "upload_time": "2020-01-21T00:52:18", "upload_time_iso_8601": "2020-01-21T00:52:18.950316Z", "url": "https://files.pythonhosted.org/packages/ab/3d/57c96f2d902fe447f6e42dea0250fa2e9510fdec218a0f099448f1327e66/webd-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e103e5573bcf404f501d1d22d0811f58", "sha256": "8b2ab4efea39248e407624f08b704272ed84ae6270e4c8b5ab213a4aa24fb63a"}, "downloads": -1, "filename": "webd-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e103e5573bcf404f501d1d22d0811f58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16524, "upload_time": "2020-01-21T00:52:15", "upload_time_iso_8601": "2020-01-21T00:52:15.557917Z", "url": "https://files.pythonhosted.org/packages/30/ea/3a88a2d658fec80db7518984b51320af474ef2554f7c4eac2d7534623207/webd-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b72c35b0765b8b36a5418b7e49cecf58", "sha256": "69d925ac4c1cc76e97eaceb85768e8228d67c337a64000bb80ff8f68bcba7ef8"}, "downloads": -1, "filename": "webd-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b72c35b0765b8b36a5418b7e49cecf58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12892, "upload_time": "2020-01-21T00:52:18", "upload_time_iso_8601": "2020-01-21T00:52:18.950316Z", "url": "https://files.pythonhosted.org/packages/ab/3d/57c96f2d902fe447f6e42dea0250fa2e9510fdec218a0f099448f1327e66/webd-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:21 2020"}