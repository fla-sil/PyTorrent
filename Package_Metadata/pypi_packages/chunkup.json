{"info": {"author": "Josef Fruehwald", "author_email": "jofrhwld@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Chunkup\n=======\n\nGiven an audio file, and a tab delimited file, split up audio file into\nsmaller chunks.\n\nRequirements & Caveats\n======================\n\n-  Imports pysox, therefore has the same dependencies as pysox, namely:\n\n    `Required prerequisite are the development libraries of sox at\n    version 14.3.x, i.e. the header files and libraries to link against.\n    Specifically you need sox.h in your include path and libsox.so and\n    libsox.a in your link path. Pysox will not compile against any sox\n    version prior to\n    14.3.0. <https://pypi.python.org/pypi/pysox/0.3.6.alpha>`__\n\n-  chunkup will *only* chunk up audio. Any other effects (resampling\n   etc) should be applied to the audio file before running chunkup.\n-  At the moment, chunkup will operate fairly blindly. If you give it\n   start and end times for a chunk that actually lie outside of the\n   provided audio file, it'll return a bunch of sox errors that look\n   like:\n\n::\n\n        trim: End position is after expected end of audio.\n        trim: Last 1 position(s) not reached.\n\nInstallation\n============\n\n::\n\n    pip install chunkup\n\nAfter installing chunkup, the ``chunkup`` command line script should be\nadded to your path, and should be available from anywhere. Test it out\nby opening a new terminal and running\n\n::\n\n    chunkup -h\n\nUsage\n=====\n\nThis usage example pulls down `Episode #20: I Want to Break\nFree <http://gimletmedia.com/episode/20-i-want-to-break-free/>`__ of\nReply All. The mp3 is 41.5M. You can get ``replyallcreak.txt`` from\nhttps://github.com/JoFrhwld/chunkup/blob/master/examples/replyallcreak.txt\n\n::\n\n    curl -L -o examples/reply_all_podcast.mp3 http://bit.ly/chunkup \n    mkdir chunks\n\n    chunkup examples/reply_all_podcast.mp3 examples/replyallcreak.txt chunks/\n\nChunk naming\n------------\n\n``chunks/`` now contains 104 chunks of speech I annotated, largely to\nseparate out the three speakers in the first segment. The default naming\nconventions of chunks are:\n\n::\n\n    [n]-[basename]-[col1]-[col3].wav\n\nWhere ``[n]`` is the numeric index of the chunk, ``[basename]`` is the\nbase name of the original soundfile, ``[col1]`` is the value from column\n1 in ``replyallcreak.txt`` (in this case, speaker ID), and ``[col3]`` is\nthe value from column 3 in ``replyallcreak.txt`` (in this case, the\nonset time of the chunk in ss.ms). Available variables for naming chunks\nare:\n\n+-------------------+-----------------------------------------------------+\n| naming variable   | description                                         |\n+===================+=====================================================+\n| ``[n]``           | chunk number                                        |\n+-------------------+-----------------------------------------------------+\n| ``[basename]``    | base name of original audio file                    |\n+-------------------+-----------------------------------------------------+\n| ``[col0-9]``      | value from any the given column in the chunk file   |\n+-------------------+-----------------------------------------------------+\n\nConfiguration\n-------------\n\nYou can change the chunk naming convention either at the command line\nusig the ``-n`` or ``--naming`` flag.\n\n::\n\n    $ chunkup -n [col1]-[n].wav examples/reply_all_podcast.mp3 examples/replyallcreak.txt chunks/\n\nOther config options include\n\n+-----------------------+----------------------------------------------------------------------+\n| option                | description                                                          |\n+=======================+======================================================================+\n| ``-s``, ``--start``   | Column index (starting with 1) for the start time, in ss.ms format   |\n+-----------------------+----------------------------------------------------------------------+\n| ``-e``, ``--end``     | Column index (starting with 1) for the end time, in ss.ms format     |\n+-----------------------+----------------------------------------------------------------------+\n| ``--header``          | Include if chunk file has a header                                   |\n+-----------------------+----------------------------------------------------------------------+\n\nAll config options can be defined in a config file and passed to\nchunkup.py with the prefix ``+``. A sample config file for this data\nwould be:\n\n::\n\n    --naming\n    [n]-[basename]-[col1]-[col3].wav\n    --start\n    3\n    --end\n    4\n\nIf saved to config.txt, it could be passed to chunkup.py like so:\n\n::\n\n    $ chunkup +config.txt examples/reply_all_podcast.mp3 examples/replyallcreak.txt chunks/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JoFrhwld/chunkup", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "chunkup", "package_url": "https://pypi.org/project/chunkup/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/chunkup/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/JoFrhwld/chunkup"}, "release_url": "https://pypi.org/project/chunkup/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "chunks up audio", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"chunkup\">\n<h2>Chunkup</h2>\n<p>Given an audio file, and a tab delimited file, split up audio file into\nsmaller chunks.</p>\n</div>\n<div id=\"requirements-caveats\">\n<h2>Requirements &amp; Caveats</h2>\n<ul>\n<li><p>Imports pysox, therefore has the same dependencies as pysox, namely:</p>\n<blockquote>\n<p><a href=\"https://pypi.python.org/pypi/pysox/0.3.6.alpha\" rel=\"nofollow\">Required prerequisite are the development libraries of sox at\nversion 14.3.x, i.e. the header files and libraries to link against.\nSpecifically you need sox.h in your include path and libsox.so and\nlibsox.a in your link path. Pysox will not compile against any sox\nversion prior to\n14.3.0.</a></p>\n</blockquote>\n</li>\n<li><p>chunkup will <em>only</em> chunk up audio. Any other effects (resampling\netc) should be applied to the audio file before running chunkup.</p>\n</li>\n<li><p>At the moment, chunkup will operate fairly blindly. If you give it\nstart and end times for a chunk that actually lie outside of the\nprovided audio file, it\u2019ll return a bunch of sox errors that look\nlike:</p>\n</li>\n</ul>\n<pre>trim: End position is after expected end of audio.\ntrim: Last 1 position(s) not reached.\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install chunkup\n</pre>\n<p>After installing chunkup, the <tt>chunkup</tt> command line script should be\nadded to your path, and should be available from anywhere. Test it out\nby opening a new terminal and running</p>\n<pre>chunkup -h\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This usage example pulls down <a href=\"http://gimletmedia.com/episode/20-i-want-to-break-free/\" rel=\"nofollow\">Episode #20: I Want to Break\nFree</a> of\nReply All. The mp3 is 41.5M. You can get <tt>replyallcreak.txt</tt> from\n<a href=\"https://github.com/JoFrhwld/chunkup/blob/master/examples/replyallcreak.txt\" rel=\"nofollow\">https://github.com/JoFrhwld/chunkup/blob/master/examples/replyallcreak.txt</a></p>\n<pre>curl -L -o examples/reply_all_podcast.mp3 http://bit.ly/chunkup\nmkdir chunks\n\nchunkup examples/reply_all_podcast.mp3 examples/replyallcreak.txt chunks/\n</pre>\n<div id=\"chunk-naming\">\n<h3>Chunk naming</h3>\n<p><tt>chunks/</tt> now contains 104 chunks of speech I annotated, largely to\nseparate out the three speakers in the first segment. The default naming\nconventions of chunks are:</p>\n<pre>[n]-[basename]-[col1]-[col3].wav\n</pre>\n<p>Where <tt>[n]</tt> is the numeric index of the chunk, <tt>[basename]</tt> is the\nbase name of the original soundfile, <tt>[col1]</tt> is the value from column\n1 in <tt>replyallcreak.txt</tt> (in this case, speaker ID), and <tt>[col3]</tt> is\nthe value from column 3 in <tt>replyallcreak.txt</tt> (in this case, the\nonset time of the chunk in ss.ms). Available variables for naming chunks\nare:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>naming variable</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>[n]</tt></td>\n<td>chunk number</td>\n</tr>\n<tr><td><tt>[basename]</tt></td>\n<td>base name of original audio file</td>\n</tr>\n<tr><td><tt><span class=\"pre\">[col0-9]</span></tt></td>\n<td>value from any the given column in the chunk file</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>You can change the chunk naming convention either at the command line\nusig the <tt><span class=\"pre\">-n</span></tt> or <tt><span class=\"pre\">--naming</span></tt> flag.</p>\n<pre>$ chunkup -n [col1]-[n].wav examples/reply_all_podcast.mp3 examples/replyallcreak.txt chunks/\n</pre>\n<p>Other config options include</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>option</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt><span class=\"pre\">-s</span></tt>, <tt><span class=\"pre\">--start</span></tt></td>\n<td>Column index (starting with 1) for the start time, in ss.ms format</td>\n</tr>\n<tr><td><tt><span class=\"pre\">-e</span></tt>, <tt><span class=\"pre\">--end</span></tt></td>\n<td>Column index (starting with 1) for the end time, in ss.ms format</td>\n</tr>\n<tr><td><tt><span class=\"pre\">--header</span></tt></td>\n<td>Include if chunk file has a header</td>\n</tr>\n</tbody>\n</table>\n<p>All config options can be defined in a config file and passed to\nchunkup.py with the prefix <tt>+</tt>. A sample config file for this data\nwould be:</p>\n<pre>--naming\n[n]-[basename]-[col1]-[col3].wav\n--start\n3\n--end\n4\n</pre>\n<p>If saved to config.txt, it could be passed to chunkup.py like so:</p>\n<pre>$ chunkup +config.txt examples/reply_all_podcast.mp3 examples/replyallcreak.txt chunks/\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1511539, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "d3a33d213cadba8f931ea8bdde06bce0", "sha256": "b31cb4707f49cf5e045ba7eafea5fbc0a5832394a9c305e443ae3ebf2cecebb3"}, "downloads": -1, "filename": "chunkup-0.2.tar.gz", "has_sig": false, "md5_digest": "d3a33d213cadba8f931ea8bdde06bce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4631, "upload_time": "2015-04-19T11:25:54", "upload_time_iso_8601": "2015-04-19T11:25:54.052399Z", "url": "https://files.pythonhosted.org/packages/1e/6c/6bced1a340d0dc2d738ee19633895917f4f944fb343f14148e43699ce95f/chunkup-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "148c35851ab498d74904b02511eefd2f", "sha256": "c592a7edac70dcc4d99bf990e8248807c4d0b6bd8be9e0f0ef0afb8308aac14e"}, "downloads": -1, "filename": "chunkup-0.2.1.tar.gz", "has_sig": false, "md5_digest": "148c35851ab498d74904b02511eefd2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4638, "upload_time": "2015-04-19T15:36:30", "upload_time_iso_8601": "2015-04-19T15:36:30.760808Z", "url": "https://files.pythonhosted.org/packages/a7/d8/892e174bda2efea401ea73e227b611aa7056f50d1499a0beb5dee0a5ed2b/chunkup-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "148c35851ab498d74904b02511eefd2f", "sha256": "c592a7edac70dcc4d99bf990e8248807c4d0b6bd8be9e0f0ef0afb8308aac14e"}, "downloads": -1, "filename": "chunkup-0.2.1.tar.gz", "has_sig": false, "md5_digest": "148c35851ab498d74904b02511eefd2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4638, "upload_time": "2015-04-19T15:36:30", "upload_time_iso_8601": "2015-04-19T15:36:30.760808Z", "url": "https://files.pythonhosted.org/packages/a7/d8/892e174bda2efea401ea73e227b611aa7056f50d1499a0beb5dee0a5ed2b/chunkup-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:26 2020"}