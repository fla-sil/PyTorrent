{"info": {"author": "max13fr", "author_email": "max13fr@yozo.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Airzone Cloud\n\n- [Airzone Cloud](#airzone-cloud)\n  - [Presentation](#presentation)\n    - [Abstract](#abstract)\n    - [Module classes](#module-classes)\n  - [Usage](#usage)\n    - [Install](#install)\n    - [Start api](#start-api)\n    - [Get device status](#get-device-status)\n    - [Get system status](#get-system-status)\n    - [Get all zones status (on all devices / systems)](#get-all-zones-status-on-all-devices--systems)\n    - [Control a specific zone](#control-a-specific-zone)\n    - [HVAC mode](#hvac-mode)\n      - [Available modes](#available-modes)\n      - [Set HVAC mode on a system (and its sub-zones)](#set-hvac-mode-on-a-system-and-its-sub-zones)\n  - [API doc](#api-doc)\n    - [Constructor](#constructor)\n\n## Presentation\n\n### Abstract\n\nAllow to communicate easily with Airzone Cloud to retrieve information or to send commands (on/off, temperature, HVAC mode, ...)\n\n### Module classes\n\n* **AirzoneCloud** : represent your AirzoneCloud account. Contains a list of your **devices** :\n  * **Device** : represent one of your Airzone webserver registered. Contains a list of its **systems** :\n    * **System** : represent your climate equipment (Mitsubishi, Daikin, ...). Contains a list of its **zones** :\n      * **Zone** : represent a zone to control\n\n## Usage\n\n### Install\n\n```bash\npip3 install AirzoneCloud\n```\n\n### Start api\n\n```python\nfrom AirzoneCloud import AirzoneCloud\napi = AirzoneCloud(\"email@domain.com\", \"password\")\n```\n\n### Get device status\n\n```python\nfor device in api.devices:\n    print(\n        \"Device name={}, status={}, id={}, mac={}, pin={}\".format(\n            device.name, device.status, device.id, device.mac, device.pin\n        )\n    )\n```\n\nOutput :\n\n<pre>\nDevice name=Home, status=activated, id=5bc8ae0c4149526af90c0000, mac=AA:BB:CC:DD:EE:FF, pin=1234\n</pre>\n\n### Get system status\n\n```python\nfor system in api.device[0].systems:\n    print(\n        \"System name={}, mode={}, eco={}, velocity={}, airflow={}\".format(\n            self.name,\n            self.mode,\n            self.eco,\n            self.velocity,\n            self.airflow,\n        )\n    )\n```\n\nOutput :\n\n<pre>\nSystem name=Home, mode=heat-both, eco=eco-a, velocity=None, airflow=None\n</pre>\n\n### Get all zones status (on all devices / systems)\n\n```python\nfor zone in api.all_zones:\n    print(\n        \"Zone name={}, is_on={}, mode={}, current_temperature={}, target_temperature={}\".format(\n            zone.name,\n            zone.is_on,\n            zone.mode_name,\n            zone.current_temperature,\n            zone.target_temperature,\n        )\n    )\n```\n\nOutput :\n\n<pre>\nZone name=Baby bedroom, is_on=False, mode=heat-both, current_temperature=20.4, target_temperature=19.5\nZone name=Parents bedroom, is_on=False, mode=heat-both, current_temperature=21.1, target_temperature=17.0\nZone name=Living room, is_on=True, mode=heat-both, current_temperature=21.4, target_temperature=21.5\nZone name=Kitchen, is_on=False, mode=heat-both, current_temperature=21.2, target_temperature=19.0\n</pre>\n\n### Control a specific zone\n\n```python\nzone = api.all_zones[2]\nprint(zone)\n\n# start zone\nzone.turn_on()\n\n# set temperature\nzone.set_temperature(18.5)\n\nprint(zone)\n```\n\nOutput :\n\n<pre>\nZone(name=Living room, is_on=False, mode=heat-both, current_temp=21.6, target_temp=21.0)\nZone(name=Living room, is_on=True, mode=heat-both, current_temp=21.6, target_temp=18.5)\n</pre>\n\n### HVAC mode\n\n#### Available modes\n\n* **stop** : Stop\n* **ventilate** : Ventilate\n* **dehumidify** : Dry\n* **heat-air** : Air heating\n* **heat-radiant** : Radiant heating\n* **heat-both** : Combined heating\n* **cool-air** : Air cooling\n* **cool-radiant** : Radiant cooling\n* **cool-both** : Combined cooling\n\n#### Set HVAC mode on a system (and its sub-zones)\n\n```python\nsystem = api.devices[0].systems[0]\nprint(system)\n\n# set mode to heat-both\nsystem.set_mode(\"heat-both\")\n\nprint(system)\n```\n\nOutput :\n\n<pre>\nSystem(name=Home, mode=stop, eco=eco-a, velocity=None, airflow=None)\nSystem(name=Home, mode=heat-both, eco=eco-a, velocity=None, airflow=None)\n</pre>\n\n## API doc\n\n[API full doc](API.md)\n\n### Constructor\n\n```python\nAirzoneCloud(username, password, user_agent=None, base_url=None)\n```\n\n* **username** : you're username used to connect on Airzone Cloud website or app\n* **password** : you're password used to connect on Airzone Cloud website or app\n* **user_agent** : allow to change default user agent if set\n* **base_url** : allow to change base url of the Airzone Cloud API if set\n  * default value : _https://www.airzonecloud.com_\n  * dkn (Airzone Cloud rebranded for Daikin) : _https://dkn.airzonecloud.com_", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/max13fr/AirzoneCloud", "keywords": "airzone,airzonecloud,api", "license": "", "maintainer": "", "maintainer_email": "", "name": "AirzoneCloud", "package_url": "https://pypi.org/project/AirzoneCloud/", "platform": "", "project_url": "https://pypi.org/project/AirzoneCloud/", "project_urls": {"Homepage": "https://github.com/max13fr/AirzoneCloud"}, "release_url": "https://pypi.org/project/AirzoneCloud/0.2.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Python3 library for Airzone Cloud API", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Airzone Cloud</h1>\n<ul>\n<li><a href=\"#airzone-cloud\" rel=\"nofollow\">Airzone Cloud</a>\n<ul>\n<li><a href=\"#presentation\" rel=\"nofollow\">Presentation</a>\n<ul>\n<li><a href=\"#abstract\" rel=\"nofollow\">Abstract</a></li>\n<li><a href=\"#module-classes\" rel=\"nofollow\">Module classes</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#start-api\" rel=\"nofollow\">Start api</a></li>\n<li><a href=\"#get-device-status\" rel=\"nofollow\">Get device status</a></li>\n<li><a href=\"#get-system-status\" rel=\"nofollow\">Get system status</a></li>\n<li><a href=\"#get-all-zones-status-on-all-devices--systems\" rel=\"nofollow\">Get all zones status (on all devices / systems)</a></li>\n<li><a href=\"#control-a-specific-zone\" rel=\"nofollow\">Control a specific zone</a></li>\n<li><a href=\"#hvac-mode\" rel=\"nofollow\">HVAC mode</a>\n<ul>\n<li><a href=\"#available-modes\" rel=\"nofollow\">Available modes</a></li>\n<li><a href=\"#set-hvac-mode-on-a-system-and-its-sub-zones\" rel=\"nofollow\">Set HVAC mode on a system (and its sub-zones)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#api-doc\" rel=\"nofollow\">API doc</a>\n<ul>\n<li><a href=\"#constructor\" rel=\"nofollow\">Constructor</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Presentation</h2>\n<h3>Abstract</h3>\n<p>Allow to communicate easily with Airzone Cloud to retrieve information or to send commands (on/off, temperature, HVAC mode, ...)</p>\n<h3>Module classes</h3>\n<ul>\n<li><strong>AirzoneCloud</strong> : represent your AirzoneCloud account. Contains a list of your <strong>devices</strong> :\n<ul>\n<li><strong>Device</strong> : represent one of your Airzone webserver registered. Contains a list of its <strong>systems</strong> :\n<ul>\n<li><strong>System</strong> : represent your climate equipment (Mitsubishi, Daikin, ...). Contains a list of its <strong>zones</strong> :\n<ul>\n<li><strong>Zone</strong> : represent a zone to control</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Usage</h2>\n<h3>Install</h3>\n<pre>pip3 install AirzoneCloud\n</pre>\n<h3>Start api</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">AirzoneCloud</span> <span class=\"kn\">import</span> <span class=\"n\">AirzoneCloud</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">AirzoneCloud</span><span class=\"p\">(</span><span class=\"s2\">\"email@domain.com\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Get device status</h3>\n<pre><span class=\"k\">for</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"Device name=</span><span class=\"si\">{}</span><span class=\"s2\">, status=</span><span class=\"si\">{}</span><span class=\"s2\">, id=</span><span class=\"si\">{}</span><span class=\"s2\">, mac=</span><span class=\"si\">{}</span><span class=\"s2\">, pin=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">mac</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">pin</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Output :</p>\n<pre>Device name=Home, status=activated, id=5bc8ae0c4149526af90c0000, mac=AA:BB:CC:DD:EE:FF, pin=1234\n</pre>\n<h3>Get system status</h3>\n<pre><span class=\"k\">for</span> <span class=\"n\">system</span> <span class=\"ow\">in</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">systems</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"System name=</span><span class=\"si\">{}</span><span class=\"s2\">, mode=</span><span class=\"si\">{}</span><span class=\"s2\">, eco=</span><span class=\"si\">{}</span><span class=\"s2\">, velocity=</span><span class=\"si\">{}</span><span class=\"s2\">, airflow=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mode</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">eco</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">airflow</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Output :</p>\n<pre>System name=Home, mode=heat-both, eco=eco-a, velocity=None, airflow=None\n</pre>\n<h3>Get all zones status (on all devices / systems)</h3>\n<pre><span class=\"k\">for</span> <span class=\"n\">zone</span> <span class=\"ow\">in</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">all_zones</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"Zone name=</span><span class=\"si\">{}</span><span class=\"s2\">, is_on=</span><span class=\"si\">{}</span><span class=\"s2\">, mode=</span><span class=\"si\">{}</span><span class=\"s2\">, current_temperature=</span><span class=\"si\">{}</span><span class=\"s2\">, target_temperature=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">is_on</span><span class=\"p\">,</span>\n            <span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">mode_name</span><span class=\"p\">,</span>\n            <span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">current_temperature</span><span class=\"p\">,</span>\n            <span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">target_temperature</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Output :</p>\n<pre>Zone name=Baby bedroom, is_on=False, mode=heat-both, current_temperature=20.4, target_temperature=19.5\nZone name=Parents bedroom, is_on=False, mode=heat-both, current_temperature=21.1, target_temperature=17.0\nZone name=Living room, is_on=True, mode=heat-both, current_temperature=21.4, target_temperature=21.5\nZone name=Kitchen, is_on=False, mode=heat-both, current_temperature=21.2, target_temperature=19.0\n</pre>\n<h3>Control a specific zone</h3>\n<pre><span class=\"n\">zone</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">all_zones</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zone</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># start zone</span>\n<span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">turn_on</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># set temperature</span>\n<span class=\"n\">zone</span><span class=\"o\">.</span><span class=\"n\">set_temperature</span><span class=\"p\">(</span><span class=\"mf\">18.5</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zone</span><span class=\"p\">)</span>\n</pre>\n<p>Output :</p>\n<pre>Zone(name=Living room, is_on=False, mode=heat-both, current_temp=21.6, target_temp=21.0)\nZone(name=Living room, is_on=True, mode=heat-both, current_temp=21.6, target_temp=18.5)\n</pre>\n<h3>HVAC mode</h3>\n<h4>Available modes</h4>\n<ul>\n<li><strong>stop</strong> : Stop</li>\n<li><strong>ventilate</strong> : Ventilate</li>\n<li><strong>dehumidify</strong> : Dry</li>\n<li><strong>heat-air</strong> : Air heating</li>\n<li><strong>heat-radiant</strong> : Radiant heating</li>\n<li><strong>heat-both</strong> : Combined heating</li>\n<li><strong>cool-air</strong> : Air cooling</li>\n<li><strong>cool-radiant</strong> : Radiant cooling</li>\n<li><strong>cool-both</strong> : Combined cooling</li>\n</ul>\n<h4>Set HVAC mode on a system (and its sub-zones)</h4>\n<pre><span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">systems</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set mode to heat-both</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">set_mode</span><span class=\"p\">(</span><span class=\"s2\">\"heat-both\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n</pre>\n<p>Output :</p>\n<pre>System(name=Home, mode=stop, eco=eco-a, velocity=None, airflow=None)\nSystem(name=Home, mode=heat-both, eco=eco-a, velocity=None, airflow=None)\n</pre>\n<h2>API doc</h2>\n<p><a href=\"API.md\" rel=\"nofollow\">API full doc</a></p>\n<h3>Constructor</h3>\n<pre><span class=\"n\">AirzoneCloud</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user_agent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">base_url</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><strong>username</strong> : you're username used to connect on Airzone Cloud website or app</li>\n<li><strong>password</strong> : you're password used to connect on Airzone Cloud website or app</li>\n<li><strong>user_agent</strong> : allow to change default user agent if set</li>\n<li><strong>base_url</strong> : allow to change base url of the Airzone Cloud API if set\n<ul>\n<li>default value : <em><a href=\"https://www.airzonecloud.com\" rel=\"nofollow\">https://www.airzonecloud.com</a></em></li>\n<li>dkn (Airzone Cloud rebranded for Daikin) : <em><a href=\"https://dkn.airzonecloud.com\" rel=\"nofollow\">https://dkn.airzonecloud.com</a></em></li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7136709, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "29dac5284c8d182b9563e68bc3267f0b", "sha256": "a8481b3eb18bec60ed639b3413ce34a0e07cee89a8b0c670c65dd824d489f29c"}, "downloads": -1, "filename": "AirzoneCloud-0.0.1.tar.gz", "has_sig": false, "md5_digest": "29dac5284c8d182b9563e68bc3267f0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6267, "upload_time": "2020-04-18T17:26:35", "upload_time_iso_8601": "2020-04-18T17:26:35.151193Z", "url": "https://files.pythonhosted.org/packages/da/b2/6fa2fbf436f7264396e7d58254ce945e4ac809ce141f850fa4833c8796a0/AirzoneCloud-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "abc4cbcaeeaf9fe923190345bc67543d", "sha256": "710752cab25bb17fa7657c2bb4920434591213ffe7080670bd3ca38340b560ca"}, "downloads": -1, "filename": "AirzoneCloud-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "abc4cbcaeeaf9fe923190345bc67543d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12524, "upload_time": "2020-04-19T15:53:11", "upload_time_iso_8601": "2020-04-19T15:53:11.244126Z", "url": "https://files.pythonhosted.org/packages/09/a3/bfbdc0332cbc365b5c0e25f845ff9e1b3ccb45f77cca88b7e33e1ed86637/AirzoneCloud-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "46be701c71b2aa3f561c0939d8a552c9", "sha256": "b712498d0cad6c4cdcb06d986a8a739e76851d8e26363c6eb2bd8162c963aadd"}, "downloads": -1, "filename": "AirzoneCloud-0.2.0.tar.gz", "has_sig": false, "md5_digest": "46be701c71b2aa3f561c0939d8a552c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11048, "upload_time": "2020-04-30T11:38:29", "upload_time_iso_8601": "2020-04-30T11:38:29.956387Z", "url": "https://files.pythonhosted.org/packages/c1/6e/5eb078e50171d20513a6f97075cbfe1268819e598e172db075211bd7a820/AirzoneCloud-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46be701c71b2aa3f561c0939d8a552c9", "sha256": "b712498d0cad6c4cdcb06d986a8a739e76851d8e26363c6eb2bd8162c963aadd"}, "downloads": -1, "filename": "AirzoneCloud-0.2.0.tar.gz", "has_sig": false, "md5_digest": "46be701c71b2aa3f561c0939d8a552c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11048, "upload_time": "2020-04-30T11:38:29", "upload_time_iso_8601": "2020-04-30T11:38:29.956387Z", "url": "https://files.pythonhosted.org/packages/c1/6e/5eb078e50171d20513a6f97075cbfe1268819e598e172db075211bd7a820/AirzoneCloud-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:25 2020"}