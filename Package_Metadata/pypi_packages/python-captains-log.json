{"info": {"author": "David Thenon", "author_email": "sveetch@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. _click: https://github.com/mitsuhiko/click\n.. _colorama: https://github.com/tartley/colorama\n.. _peewee: https://github.com/coleifer/peewee\n\nIntroduction\n============\n\nCaptain's log is a simple command line utility to quickly write some text about jobs you have done.\n\nIt's a simple method for developers (that already have a terminal session opened) to write some stuff about jobs during a day, so they don't have to remember what they have done and so fill their datebook !\n\nWarning, this software should contains some *StarTrek* quotes and vocabulary.\n\nWhat\n****\n\nA simple command line utility to log what you do.\n\nThis is not a *todo list* alike, there is no check/uncheck action for entries.\n\nWhere\n*****\n\nThe app install its stuff in the user home directory by default and so should be usable from anywhere.\n\nUsers does not share their logs by default although you should be able to do an unique install for multiple users.\n\nWhy\n***\n\nTo help developers to log what they did during working days, so they always have a log resuming projects they worked on and so are more able to fill their activities in datebooks.\n\nGenerally, developers always have an opened shell session to work on, so a command line should be enough.\n\nLinks\n*****\n\n* Download his `PyPi package <http://pypi.python.org/pypi/python-captains-log>`_;\n* Clone it on his `Github repository <https://github.com/sveetch/python-captains-log>`_;\n\nRequires\n--------\n\n* `click`_ == 3.3;\n* `colorama`_ == 0.3.2;\n* `peewee`_ == 2.4.5;\n\nInstall\n=======\n\nJust install it from PyPi : ::\n\n    pip install python-captains-log\n\nDependancies are quite simple and have not sub-dependancies so it should be safe enough to install it on your system using PIP.\n\nWhen it's done, the app need a minimal config stuff to be installed before working, like it's database file and config file, see *Usage - Install*.\n\nUsage\n=====\n\nHere is the command line help: ::\n\n    Usage: captains-log [OPTIONS] COMMAND [ARGS]...\n\n    Captain's log is a command line to write simple log messages\n\n    Take care to quote your texts when they contains spaces. Also, note that\n    some characters like \"!\" will be processed by Bash as some special\n    characters and results in unwanted behaviors, avoid them if you don't know\n    how to escape them.\n\n    Options:\n    --config-dir PATH  Path to the directory where the app config resides\n    --help             Show this message and exit.\n\n    Commands:\n    add      Add a new log entry\n    del      Remove an existing log entry\n    history  Browse your logs history\n    install  Install the required config\n    reset    Restart with a new install\n\nInstall\n*******\n\nBefore the first usage, each user have to use the following command: ::\n\n    captains-log install\n\nThis will automatically install all needed stuff in a dedicated app directory, default is to do it in a ``.captains-log`` directory in the user's home directory.\n\nIf you don't do this, the app will notify you about this missing stuff and will refuse to go further.\n\nYou can use an another directory for *captain's log* stuff but you will have to specify it, there is two ways for this :\n\n* Using ``--config-dir`` option each time you invoke the command line (this is option is available for all command line actions);\n* Set a shell environment variable named ``CAPTAINSLOG_DIR`` that contains the absolute path to the directory like this: ::\n    \n    export CAPTAINSLOG_DIR=/home/foo/my-captains-log-dir\n    \n  Or you can do it in your ``.bashrc``.\n\nNote that this app stuff have to be created for each user that want to use it, although you should be able to share it between them if needed.\n\nReset\n*****\n\nSometime you will need to *reset* your install, so use this : ::\n\n    captains-log reset\n\nThis will **remove all your content** (database and config) then re-launch the install process. Take care to backup your config before if you don't want to lose them, the command line doesn't care about this for you.\n    \nAdding an entry\n***************\n\nAdd an entry message without a category: ::\n\n    captains-log add Hello\n\nAdd an entry message with a category: ::\n\n    captains-log add -c Foo Hello\n\nYou have to quote your texts if they contain spaces: ::\n\n    captains-log add -c \"Foo bar\" \"Hello world.\"\n\nAlso, note that your shell can interprets some characters like ``!`` even if quoted, just avoid them if you don't know how to escape them (when it's possible).\n\nWhen an entry is created, the command line will return its ID than you can't use to remove it if needed.\n\nRemoving an entry\n*****************\n\nJust use the entry ID you want to remove: ::\n\n    captains-log del 42\n\nRemoving the last created entry using the special keyword ``last``: ::\n\n    captains-log del last\n\nBe aware that there is no confirmation prompt before removing the entry.\n\nHistory\n*******\n\nThe history *browser* allow you to see your created entries: ::\n\n    captains-log history\n\nThis will display your history like this: ::\n\n    Monday, 12 December 2014\n    ========================\n\n     97) [10:00]                Wake up\n     98) [11:15] MyCategory     Starting to do stuff\n\n    Wednesday 25 December 2014\n    ==========================\n\n     99) [10:00]                Coffee time\n    100) [11:15] MyCategory     Ping\n    101) [17:49] Other category Hello world\n    102) [18:33] MyCategory     Pong\n\n    Friday 26 December 2014\n    =======================\n\n    103) [09:15] MyCategory     Fix a bug\n    104) [10:00]                Coffee time\n    105) [15:40] Other category Waiting answer\n    106) [17:45] MyCategory     Go to production\n\nActually, the default behavior is to display all your entries from any date period. But the command line action accepts an optional argument to give a keyword about the period you want to see: ::\n\n    # Entries of the current year\n    captains-log history year\n    \n    # Entries of the current month\n    captains-log history month\n    \n    # Entries of the current day\n    captains-log history day\n    \n    # Entries that contains \"Coffee\"\n    captains-log history -s \"Coffee\"\n\nThe history is columnized and even have colorized parts if your shell and terminal console support them. Also you can change some formatting from your settings file if needed like changing the date format, see the *Setting* part.\n\nSettings\n********\n\nIn your installed Captain's log directory from the ``install`` action, there is a ``settings.json`` file where you can change some settings that can change some behaviors.\n\n::\n\n    {\n        \"ENTRY_TIME_FORMAT\": \"%H:%M\", \n        \"LANGUAGE_CODE\": \"\", \n        \"DATABASE_NAME\": \"database.sqlite3\", \n        \"ENTRY_DATE_TEMPLATE\": \"[{0}]\", \n        \"ENTRY_ID_TEMPLATE\": \"{0})\", \n        \"ENTRY_CATEGORY_TEMPLATE\": \"{0}\", \n        \"GROUP_MONTH_FORMAT\": \"%A, %d %B %Y\", \n        \"ENTRY_MESSAGE_TEMPLATE\": \"{0}\"\n    }\n\nWhere :\n\n* ``ENTRY_TIME_FORMAT`` is the time format to use when displaying an entry time;\n* ``LANGUAGE_CODE`` is a locale code that is supported on your system like \"fr_FR.UTF-8\", let it to an empty string to automatically use your system locale;\n* ``DATABASE_NAME`` is the filename for the sqlite3 database file installed in the Captain's log directory;\n* ``ENTRY_ID_TEMPLATE`` is the template string to format the entry's ID;\n* ``ENTRY_CATEGORY_TEMPLATE`` is the template string to format the entry's category name;\n* ``ENTRY_DATE_TEMPLATE`` is the template string to format the entry's day datetime (it's string display, not the date format itself);\n* ``ENTRY_MESSAGE_TEMPLATE`` is the template string to format the entry's message;\n* ``GROUP_MONTH_FORMAT`` is the datetime format to use when displaying a day date (the title for each day group);", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sveetch/python-captains-log", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "python-captains-log", "package_url": "https://pypi.org/project/python-captains-log/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-captains-log/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sveetch/python-captains-log"}, "release_url": "https://pypi.org/project/python-captains-log/0.6.2/", "requires_dist": null, "requires_python": null, "summary": "A simple command line utility to fastly write some text about jobs you have done", "version": "0.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Captain\u2019s log is a simple command line utility to quickly write some text about jobs you have done.</p>\n<p>It\u2019s a simple method for developers (that already have a terminal session opened) to write some stuff about jobs during a day, so they don\u2019t have to remember what they have done and so fill their datebook !</p>\n<p>Warning, this software should contains some <em>StarTrek</em> quotes and vocabulary.</p>\n<div id=\"what\">\n<h3>What</h3>\n<p>A simple command line utility to log what you do.</p>\n<p>This is not a <em>todo list</em> alike, there is no check/uncheck action for entries.</p>\n</div>\n<div id=\"where\">\n<h3>Where</h3>\n<p>The app install its stuff in the user home directory by default and so should be usable from anywhere.</p>\n<p>Users does not share their logs by default although you should be able to do an unique install for multiple users.</p>\n</div>\n<div id=\"why\">\n<h3>Why</h3>\n<p>To help developers to log what they did during working days, so they always have a log resuming projects they worked on and so are more able to fill their activities in datebooks.</p>\n<p>Generally, developers always have an opened shell session to work on, so a command line should be enough.</p>\n</div>\n<div id=\"links\">\n<h3>Links</h3>\n<ul>\n<li>Download his <a href=\"http://pypi.python.org/pypi/python-captains-log\" rel=\"nofollow\">PyPi package</a>;</li>\n<li>Clone it on his <a href=\"https://github.com/sveetch/python-captains-log\" rel=\"nofollow\">Github repository</a>;</li>\n</ul>\n<div id=\"requires\">\n<h4>Requires</h4>\n<ul>\n<li><a href=\"https://github.com/mitsuhiko/click\" rel=\"nofollow\">click</a> == 3.3;</li>\n<li><a href=\"https://github.com/tartley/colorama\" rel=\"nofollow\">colorama</a> == 0.3.2;</li>\n<li><a href=\"https://github.com/coleifer/peewee\" rel=\"nofollow\">peewee</a> == 2.4.5;</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Just install it from PyPi :</p>\n<pre>pip install python-captains-log\n</pre>\n<p>Dependancies are quite simple and have not sub-dependancies so it should be safe enough to install it on your system using PIP.</p>\n<p>When it\u2019s done, the app need a minimal config stuff to be installed before working, like it\u2019s database file and config file, see <em>Usage - Install</em>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Here is the command line help:</p>\n<pre>Usage: captains-log [OPTIONS] COMMAND [ARGS]...\n\nCaptain's log is a command line to write simple log messages\n\nTake care to quote your texts when they contains spaces. Also, note that\nsome characters like \"!\" will be processed by Bash as some special\ncharacters and results in unwanted behaviors, avoid them if you don't know\nhow to escape them.\n\nOptions:\n--config-dir PATH  Path to the directory where the app config resides\n--help             Show this message and exit.\n\nCommands:\nadd      Add a new log entry\ndel      Remove an existing log entry\nhistory  Browse your logs history\ninstall  Install the required config\nreset    Restart with a new install\n</pre>\n<div id=\"id1\">\n<h3>Install</h3>\n<p>Before the first usage, each user have to use the following command:</p>\n<pre>captains-log install\n</pre>\n<p>This will automatically install all needed stuff in a dedicated app directory, default is to do it in a <tt><span class=\"pre\">.captains-log</span></tt> directory in the user\u2019s home directory.</p>\n<p>If you don\u2019t do this, the app will notify you about this missing stuff and will refuse to go further.</p>\n<p>You can use an another directory for <em>captain\u2019s log</em> stuff but you will have to specify it, there is two ways for this :</p>\n<ul>\n<li><p>Using <tt><span class=\"pre\">--config-dir</span></tt> option each time you invoke the command line (this is option is available for all command line actions);</p>\n</li>\n<li><p>Set a shell environment variable named <tt>CAPTAINSLOG_DIR</tt> that contains the absolute path to the directory like this:</p>\n<pre>export CAPTAINSLOG_DIR=/home/foo/my-captains-log-dir\n</pre>\n<p>Or you can do it in your <tt>.bashrc</tt>.</p>\n</li>\n</ul>\n<p>Note that this app stuff have to be created for each user that want to use it, although you should be able to share it between them if needed.</p>\n</div>\n<div id=\"reset\">\n<h3>Reset</h3>\n<p>Sometime you will need to <em>reset</em> your install, so use this :</p>\n<pre>captains-log reset\n</pre>\n<p>This will <strong>remove all your content</strong> (database and config) then re-launch the install process. Take care to backup your config before if you don\u2019t want to lose them, the command line doesn\u2019t care about this for you.</p>\n</div>\n<div id=\"adding-an-entry\">\n<h3>Adding an entry</h3>\n<p>Add an entry message without a category:</p>\n<pre>captains-log add Hello\n</pre>\n<p>Add an entry message with a category:</p>\n<pre>captains-log add -c Foo Hello\n</pre>\n<p>You have to quote your texts if they contain spaces:</p>\n<pre>captains-log add -c \"Foo bar\" \"Hello world.\"\n</pre>\n<p>Also, note that your shell can interprets some characters like <tt>!</tt> even if quoted, just avoid them if you don\u2019t know how to escape them (when it\u2019s possible).</p>\n<p>When an entry is created, the command line will return its ID than you can\u2019t use to remove it if needed.</p>\n</div>\n<div id=\"removing-an-entry\">\n<h3>Removing an entry</h3>\n<p>Just use the entry ID you want to remove:</p>\n<pre>captains-log del 42\n</pre>\n<p>Removing the last created entry using the special keyword <tt>last</tt>:</p>\n<pre>captains-log del last\n</pre>\n<p>Be aware that there is no confirmation prompt before removing the entry.</p>\n</div>\n<div id=\"history\">\n<h3>History</h3>\n<p>The history <em>browser</em> allow you to see your created entries:</p>\n<pre>captains-log history\n</pre>\n<p>This will display your history like this:</p>\n<pre>Monday, 12 December 2014\n========================\n\n 97) [10:00]                Wake up\n 98) [11:15] MyCategory     Starting to do stuff\n\nWednesday 25 December 2014\n==========================\n\n 99) [10:00]                Coffee time\n100) [11:15] MyCategory     Ping\n101) [17:49] Other category Hello world\n102) [18:33] MyCategory     Pong\n\nFriday 26 December 2014\n=======================\n\n103) [09:15] MyCategory     Fix a bug\n104) [10:00]                Coffee time\n105) [15:40] Other category Waiting answer\n106) [17:45] MyCategory     Go to production\n</pre>\n<p>Actually, the default behavior is to display all your entries from any date period. But the command line action accepts an optional argument to give a keyword about the period you want to see:</p>\n<pre># Entries of the current year\ncaptains-log history year\n\n# Entries of the current month\ncaptains-log history month\n\n# Entries of the current day\ncaptains-log history day\n\n# Entries that contains \"Coffee\"\ncaptains-log history -s \"Coffee\"\n</pre>\n<p>The history is columnized and even have colorized parts if your shell and terminal console support them. Also you can change some formatting from your settings file if needed like changing the date format, see the <em>Setting</em> part.</p>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p>In your installed Captain\u2019s log directory from the <tt>install</tt> action, there is a <tt>settings.json</tt> file where you can change some settings that can change some behaviors.</p>\n<pre>{\n    \"ENTRY_TIME_FORMAT\": \"%H:%M\",\n    \"LANGUAGE_CODE\": \"\",\n    \"DATABASE_NAME\": \"database.sqlite3\",\n    \"ENTRY_DATE_TEMPLATE\": \"[{0}]\",\n    \"ENTRY_ID_TEMPLATE\": \"{0})\",\n    \"ENTRY_CATEGORY_TEMPLATE\": \"{0}\",\n    \"GROUP_MONTH_FORMAT\": \"%A, %d %B %Y\",\n    \"ENTRY_MESSAGE_TEMPLATE\": \"{0}\"\n}\n</pre>\n<p>Where :</p>\n<ul>\n<li><tt>ENTRY_TIME_FORMAT</tt> is the time format to use when displaying an entry time;</li>\n<li><tt>LANGUAGE_CODE</tt> is a locale code that is supported on your system like \u201cfr_FR.UTF-8\u201d, let it to an empty string to automatically use your system locale;</li>\n<li><tt>DATABASE_NAME</tt> is the filename for the sqlite3 database file installed in the Captain\u2019s log directory;</li>\n<li><tt>ENTRY_ID_TEMPLATE</tt> is the template string to format the entry\u2019s ID;</li>\n<li><tt>ENTRY_CATEGORY_TEMPLATE</tt> is the template string to format the entry\u2019s category name;</li>\n<li><tt>ENTRY_DATE_TEMPLATE</tt> is the template string to format the entry\u2019s day datetime (it\u2019s string display, not the date format itself);</li>\n<li><tt>ENTRY_MESSAGE_TEMPLATE</tt> is the template string to format the entry\u2019s message;</li>\n<li><tt>GROUP_MONTH_FORMAT</tt> is the datetime format to use when displaying a day date (the title for each day group);</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1397819, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "f9832fb0bba3a6986854125942b0bbf3", "sha256": "b4e381209b5a638ee97e7d7bc94b209455303b3d7c39f03150fc963e50254fec"}, "downloads": -1, "filename": "python-captains-log-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f9832fb0bba3a6986854125942b0bbf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13091, "upload_time": "2015-01-01T23:33:46", "upload_time_iso_8601": "2015-01-01T23:33:46.574945Z", "url": "https://files.pythonhosted.org/packages/5d/63/48d1367355e1416b01d4b57ce74beebb49617b507c23864887dbf045cca2/python-captains-log-0.4.0.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "a7aa40ed730d8bc135d5a2824868037e", "sha256": "8929af5e95aa31edceafcd105e7e5f5d1194d15d4b48fecf61ea63cc1a58c481"}, "downloads": -1, "filename": "python-captains-log-0.4.5.tar.gz", "has_sig": false, "md5_digest": "a7aa40ed730d8bc135d5a2824868037e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13552, "upload_time": "2015-01-02T01:06:58", "upload_time_iso_8601": "2015-01-02T01:06:58.771219Z", "url": "https://files.pythonhosted.org/packages/3f/e6/aecaa1797afe5f62c266c762fd9555de2622c49f02416c77a74995f803c3/python-captains-log-0.4.5.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "b6d30a877f4a921792b53be3c746c942", "sha256": "2edb15cd4ea4406a640b323001ee89bab2e35f1a9f86e389e5ba6890872ae0a7"}, "downloads": -1, "filename": "python-captains-log-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b6d30a877f4a921792b53be3c746c942", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15485, "upload_time": "2015-01-04T00:05:51", "upload_time_iso_8601": "2015-01-04T00:05:51.152139Z", "url": "https://files.pythonhosted.org/packages/23/c1/d4b440a547ce31175c1936c8393651b4707c3d6546f2a0d042d5f5c77f3f/python-captains-log-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "43a47c4a0520ec6f9092944c6c50d252", "sha256": "cc5f4d92e1317450ab679e804ce7e2c468835fae648f600243b9e433b7a1f2e7"}, "downloads": -1, "filename": "python-captains-log-0.6.0.tar.gz", "has_sig": false, "md5_digest": "43a47c4a0520ec6f9092944c6c50d252", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17720, "upload_time": "2015-01-05T09:09:52", "upload_time_iso_8601": "2015-01-05T09:09:52.636610Z", "url": "https://files.pythonhosted.org/packages/3c/8c/b8b0ba6351e3a2adee5a41b4677dc1e51917057a1429be2d899c5817a910/python-captains-log-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "848dd756c79dbedbf7c87dd8c0ddeabf", "sha256": "58ef0ee1f33f9f9f0b1e7195bf259c6b7eb821af0d985aca10c846383c5a7b6d"}, "downloads": -1, "filename": "python-captains-log-0.6.1.tar.gz", "has_sig": false, "md5_digest": "848dd756c79dbedbf7c87dd8c0ddeabf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18853, "upload_time": "2015-01-05T14:26:11", "upload_time_iso_8601": "2015-01-05T14:26:11.616415Z", "url": "https://files.pythonhosted.org/packages/9f/dd/2a22c9aea62d284ee0c013c17e31c2d295cedd90b6e61266e321d20e0e21/python-captains-log-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "732f744beb0015d29b30dc29618149d0", "sha256": "368f020212353d90321c92bd33d3553958fd6bad0ba1b6c8247c10efb340d75d"}, "downloads": -1, "filename": "python-captains-log-0.6.2.tar.gz", "has_sig": false, "md5_digest": "732f744beb0015d29b30dc29618149d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18846, "upload_time": "2015-01-27T00:24:43", "upload_time_iso_8601": "2015-01-27T00:24:43.762045Z", "url": "https://files.pythonhosted.org/packages/0b/00/caabf8e576b96ba34364df18f310facae98b906c9511f3df257442206613/python-captains-log-0.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "732f744beb0015d29b30dc29618149d0", "sha256": "368f020212353d90321c92bd33d3553958fd6bad0ba1b6c8247c10efb340d75d"}, "downloads": -1, "filename": "python-captains-log-0.6.2.tar.gz", "has_sig": false, "md5_digest": "732f744beb0015d29b30dc29618149d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18846, "upload_time": "2015-01-27T00:24:43", "upload_time_iso_8601": "2015-01-27T00:24:43.762045Z", "url": "https://files.pythonhosted.org/packages/0b/00/caabf8e576b96ba34364df18f310facae98b906c9511f3df257442206613/python-captains-log-0.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:31 2020"}