{"info": {"author": "Marc Evanstein", "author_email": "marc@marcevanstein.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# SCAMP (Suite for Computer-Assisted Music in Python)\n\nSCAMP is an computer-assisted composition framework in Python designed to act as a hub, flexibly connecting the \ncomposer-programmer to a wide variety of resources for playback and notation. SCAMP provides functionality to \nmanage the flow of musical time, play back notes via [FluidSynth](http://www.fluidsynth.org/) or MIDI or OSC messages\nto an external synthesizer, and quantizes and exports the result to music notation in the form of MusicXML or Lilypond. \nThis framework is the distillation of years of practice composing algorithmic and computer-assisted music in Python \nand aims to address pervasive technical challenges while imposing as little as possible on the aesthetic choices \nof the user. \n\n## Features\n\n- Flexible and extensible playback: Although SCAMP comes with a basic general MIDI soundfont, \nany .sf2 soundfont can be used, and playback can also include MIDI or OSC messages to external \nprograms or synthesizers, which effectively offers limitless sonic possibilities.\n\n- Note-based, but in a broad sense: Although SCAMP conceives of music in terms of notes, notes in\nSCAMP are extremely flexible sound-objects that can include the continuous evolution of arbitrary \nplayback parameters.\n\n- Effortless microtonality: to play the G above middle C 30 cents sharp, the user has only \nto use the MIDI pitch 67.3. Behind the scenes, SCAMP manages all of the MIDI pitchbend \nmessages, placing notes on separate channels where necessary so that these pitch bends do \nnot conflict.\n\n- Effortless playback of glissandi and dynamic envelopes. Both pitch and volume can follow \narbitrary curves defined using the [_expenvelope_](https://github.com/MarcTheSpark/expenvelope) package.\n\n- Flexible and precise polyphonic tempo control using [_clockblocks_](https://github.com/MarcTheSpark/clockblocks). \nIn SCAMP, different layers of music moving at different tempi can be interweaved with one \nanother while remaining coordinated. Smooth accelerandi and ritardandi are possible, and the \nresulting music can be quantized according to the tempo of any layer.\n\n- Sensible and flexible quantization. The user has a fine degree of control over how rhythms \nare quantized and over the degree of complexity in the resulting notation.\n\n## Philosophy\n\nCompositional tools always feature some degree of trade-off between functionality and freedom; \nevery feature that is made available to the user steers them in a certain direction. For \ninstance, if a framework provides abstractions for manipulating harmonies, the user may find \nthemselves (perhaps unconsciously) pushed in the direction of a particular harmonic language. \nWhile this may be a worthwhile trade-off in many cases, it is not the goal of SCAMP. Here, \nthe goal is to provide general purpose tools, to remove the drudgery of implementing practical \nfunctionality that is needed again and again. Beyond this scope, users are encouraged to write \nand share their own extensions to suit their own compositional inclinations. (Several such \nextensions are available in the [_scamp_extensions_](https://github.com/MarcTheSpark/scamp_extensions) package.)\n\nOther key values underlying this framework are:\n\n- Playback first, notation second: SCAMP has been designed so that the user interacts with an \nensemble, not a score. This way, ideas can be quickly auditioned and iterated over based on the \nsonic result. Once the result is deemed satisfactory, the user can then export it as music notation.\n- Compact and expressive code: Efforts have been made to make user code simple and but powerful. \nOne of the ways this is accomplished is through sensible defaults; although there is a lot of \nfunctionality under the hood, it shouldn't be encountered by the user until it is needed.\n- Modularity and adherence as much as possible to the [Unix Philosophy](https://en.wikipedia.org/wiki/Unix_philosophy). \nSCAMP bundles a number of tools together for convenience, but it may be more than a given user \nneeds. For this reason, the MusicXML export capability is available separately as \n[_pymusicxml_](http://www.github.com/MarcTheSpark/pymusicxml), the flexible musical Envelope \nclass is available separately as [_expenvelope_](http://www.github.com/MarcTheSpark/expenvelope), \nand the system for managing musical time is available separately as [_clockblocks_](http://www.github.com/MarcTheSpark/clockblocks).\n\n\n## Installation & Requirements\n\nOn a properly configured computer, installing SCAMP is as simple as opening a terminal and \nrunning:\n\n`pip3 install --user scamp`\n\n(This installs it for a single user. To install it for all users on a computer, use `sudo pip3 install scamp` and enter your administrator password.)\n\nProperly configuring your computer involves:\n\n1) Installing Python 3.6 or greater\n2) (Linux only) Installing FluidSynth\n3) (Optional) Installing [_python-rtmidi_](https://spotlightkid.github.io/python-rtmidi/)\n4) (Optional) Installing [_abjad_](https://github.com/Abjad/abjad) and [LilyPond](https://lilypond.org/)\n\nEach of these steps is described in greater detail below. After configuring the computer and \nrunning `pip3 install --user scamp`, you should be able to test the installation by:\n\n1) Opening a terminal and typing `python3` to start an interactive python session.\n2) Typing in `from scamp import test_run; test_run.play()` and pressing return.\n\nIf you here a piano gesture sweeping inward towards middle C, SCAMP has installed correctly!\n\n### 1) Installing Python 3.6 or greater\n\n___Mac___\n\nYou can download and install Python 3 here: [https://www.python.org/downloads/](https://www.python.org/downloads/). After installation, open up a terminal and type:\n\n`python3 --version`\n\nYou should be greeted with \"Python 3.7.2\" or something similar in response. If so, you're all set! \nIf you get something like \"command not found\" instead, it's likely that something went wrong in the process of installation.\n\n___Windows___\n\nAs on a Mac, you can download and install Python 3 here: [https://www.python.org/downloads/](https://www.python.org/downloads/). \nIn the installer, be sure to select \"Add Python 3.7 to PATH\". This allows you to invoke python from the Command Prompt \nby typing either `python` or `py`, and this should also default to the latest version of python. Test that all went\naccording to plan by typing:\n\n`python --version`\n\nYou should be greeted with \"Python 3.7.2\" or something similar in response. If so, you're all set! For all other installation instructions below, use `python` instead of `python3` and `pip` instead of `pip3`.\n\n___Linux___\n\nOn Linux, Python 3.6 or greater is often already installed by default. Again, you can check this \nby opening a terminal and running:\n\n`python3 --version`\n\nIf your version of python is already 3.6 or greater, you're good to go. However, if your version \nof Python 3 is less than 3.6, as might happen on an older distro, you can install Python 3.6 via \na PPA, such as Felix Krull's deadsnakes PPA on Ubuntu:\n\n```\nsudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt-get update\nsudo apt-get install python3.6\n```\n\nIt might then be useful to add the following line to your `~/.bashrc` file:\n\n`alias pip3.6=\"python3.6 -m pip\"`\n\nFrom there on, you can proceed to use the commands `pip3.6` and `python3.6` in place of `pip3` \nand `python3` to install SCAMP, manage dependencies, and invoke the correct version of Python. \n(Don't do anything with the earlier version of Python; it's used by the operating system.)\n\n### 2) (Linux only) Installing FluidSynth\n\nSCAMP requires FluidSynth for soundfont playback, but on both Mac and Windows &mdash; due to\nthe lack of a default package manager &mdash; it became clear that the path of least resistance was to \ninclude the compiled FluidSynth library within the SCAMP package. For this reason, you don't need to\ntake the step of installing FluidSynth to use SCAMP on Mac or Windows.\n\nSince Linux distros have package managers, it makes more sense to have users take the extra\nstep to install FluidSynth that way. On apt-based distros like Debian, Ubuntu or Trisquel, \nit's as simple as running:\n\n`sudo apt install fluidsynth`\n\nYou are now the proud owner of a FluidSynthesizer!\n\n### 3) (Optional) Installing python-rtmidi\n\nFor midi input, and also to generate an outgoing midi stream (which could, for instance, be \nrouted to a DAW), you will need the [_python-rtmidi_](https://pypi.org/project/python-rtmidi/) \nlibrary. You can get this by running from a terminal:\n\n`pip3 install --user python-rtmidi` \n\nOn Linux, if you're running into an error you may need to first install the `python3-dev` \npackage, for instance with the command:\n\n`sudo apt install python3-dev`\n\nFor any other _python-rtmidi_ installation woes, take a look at the installation instructions \n[here](https://spotlightkid.github.io/python-rtmidi/installation.html).\n\n### 4) (Optional) Installing abjad and LilyPond\n\nFor LilyPond output, you will need the [_abjad_](http://abjad.mbrsi.org/installation.html) library. To do so, \nrun the following:\n\n```\npip3 install abjad==3.1\n```\n\nNote the '==' in the command, which specifies the exact version of abjad to install. This is the version that SCAMP \nhas been built to be compatible with. You are free to use a newer version, but it is possible there will be unexpected\nerrors due to changes in the abjad API.\n\nAfter installing _abjad_, you will also need to [download and install LilyPond](https://lilypond.org/), since it\nis a dependency of abjad.\n\n### 5) (Optional) Installing scamp_extensions\n\nThe *scamp_extensions* package is the place for models of music-theoretical concepts (e.g. scales, pitch-class sets), \nadditional conveniences for interacting with various types of input and output, and in general anything that builds \nupon SCAMP but is outside of the scope of the main framework.\n\nThe easiest way to install *scamp_extensions* is by running the command:\n\n```\npip3 install git+https://github.com/MarcTheSpark/scamp_extensions\n```\n\nThis will install the latest version from the repository.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MarcTheSpark/scamp", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "scamp", "package_url": "https://pypi.org/project/scamp/", "platform": "", "project_url": "https://pypi.org/project/scamp/", "project_urls": {"Documentation": "http://scampdocs.marcevanstein.com", "Homepage": "https://github.com/MarcTheSpark/scamp", "Source Code": "https://github.com/MarcTheSpark/scamp"}, "release_url": "https://pypi.org/project/scamp/0.5.8/", "requires_dist": ["pymusicxml (>=0.1.0)", "expenvelope (>=0.3.0)", "clockblocks (>=0.3.0)", "sf2utils", "python-osc", "abjad (==3.1) ; extra == 'lilypond'", "python-rtmidi ; extra == 'midistream'", "pynput ; extra == 'mouse_and_keyboard_input'"], "requires_python": "", "summary": "A computer-assisted composition framework that manages the flow of musical time, plays back notes via SoundFonts, MIDI or OSC, and quantizes and saves the result to music notation.", "version": "0.5.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SCAMP (Suite for Computer-Assisted Music in Python)</h1>\n<p>SCAMP is an computer-assisted composition framework in Python designed to act as a hub, flexibly connecting the\ncomposer-programmer to a wide variety of resources for playback and notation. SCAMP provides functionality to\nmanage the flow of musical time, play back notes via <a href=\"http://www.fluidsynth.org/\" rel=\"nofollow\">FluidSynth</a> or MIDI or OSC messages\nto an external synthesizer, and quantizes and exports the result to music notation in the form of MusicXML or Lilypond.\nThis framework is the distillation of years of practice composing algorithmic and computer-assisted music in Python\nand aims to address pervasive technical challenges while imposing as little as possible on the aesthetic choices\nof the user.</p>\n<h2>Features</h2>\n<ul>\n<li>\n<p>Flexible and extensible playback: Although SCAMP comes with a basic general MIDI soundfont,\nany .sf2 soundfont can be used, and playback can also include MIDI or OSC messages to external\nprograms or synthesizers, which effectively offers limitless sonic possibilities.</p>\n</li>\n<li>\n<p>Note-based, but in a broad sense: Although SCAMP conceives of music in terms of notes, notes in\nSCAMP are extremely flexible sound-objects that can include the continuous evolution of arbitrary\nplayback parameters.</p>\n</li>\n<li>\n<p>Effortless microtonality: to play the G above middle C 30 cents sharp, the user has only\nto use the MIDI pitch 67.3. Behind the scenes, SCAMP manages all of the MIDI pitchbend\nmessages, placing notes on separate channels where necessary so that these pitch bends do\nnot conflict.</p>\n</li>\n<li>\n<p>Effortless playback of glissandi and dynamic envelopes. Both pitch and volume can follow\narbitrary curves defined using the <a href=\"https://github.com/MarcTheSpark/expenvelope\" rel=\"nofollow\"><em>expenvelope</em></a> package.</p>\n</li>\n<li>\n<p>Flexible and precise polyphonic tempo control using <a href=\"https://github.com/MarcTheSpark/clockblocks\" rel=\"nofollow\"><em>clockblocks</em></a>.\nIn SCAMP, different layers of music moving at different tempi can be interweaved with one\nanother while remaining coordinated. Smooth accelerandi and ritardandi are possible, and the\nresulting music can be quantized according to the tempo of any layer.</p>\n</li>\n<li>\n<p>Sensible and flexible quantization. The user has a fine degree of control over how rhythms\nare quantized and over the degree of complexity in the resulting notation.</p>\n</li>\n</ul>\n<h2>Philosophy</h2>\n<p>Compositional tools always feature some degree of trade-off between functionality and freedom;\nevery feature that is made available to the user steers them in a certain direction. For\ninstance, if a framework provides abstractions for manipulating harmonies, the user may find\nthemselves (perhaps unconsciously) pushed in the direction of a particular harmonic language.\nWhile this may be a worthwhile trade-off in many cases, it is not the goal of SCAMP. Here,\nthe goal is to provide general purpose tools, to remove the drudgery of implementing practical\nfunctionality that is needed again and again. Beyond this scope, users are encouraged to write\nand share their own extensions to suit their own compositional inclinations. (Several such\nextensions are available in the <a href=\"https://github.com/MarcTheSpark/scamp_extensions\" rel=\"nofollow\"><em>scamp_extensions</em></a> package.)</p>\n<p>Other key values underlying this framework are:</p>\n<ul>\n<li>Playback first, notation second: SCAMP has been designed so that the user interacts with an\nensemble, not a score. This way, ideas can be quickly auditioned and iterated over based on the\nsonic result. Once the result is deemed satisfactory, the user can then export it as music notation.</li>\n<li>Compact and expressive code: Efforts have been made to make user code simple and but powerful.\nOne of the ways this is accomplished is through sensible defaults; although there is a lot of\nfunctionality under the hood, it shouldn't be encountered by the user until it is needed.</li>\n<li>Modularity and adherence as much as possible to the <a href=\"https://en.wikipedia.org/wiki/Unix_philosophy\" rel=\"nofollow\">Unix Philosophy</a>.\nSCAMP bundles a number of tools together for convenience, but it may be more than a given user\nneeds. For this reason, the MusicXML export capability is available separately as\n<a href=\"http://www.github.com/MarcTheSpark/pymusicxml\" rel=\"nofollow\"><em>pymusicxml</em></a>, the flexible musical Envelope\nclass is available separately as <a href=\"http://www.github.com/MarcTheSpark/expenvelope\" rel=\"nofollow\"><em>expenvelope</em></a>,\nand the system for managing musical time is available separately as <a href=\"http://www.github.com/MarcTheSpark/clockblocks\" rel=\"nofollow\"><em>clockblocks</em></a>.</li>\n</ul>\n<h2>Installation &amp; Requirements</h2>\n<p>On a properly configured computer, installing SCAMP is as simple as opening a terminal and\nrunning:</p>\n<p><code>pip3 install --user scamp</code></p>\n<p>(This installs it for a single user. To install it for all users on a computer, use <code>sudo pip3 install scamp</code> and enter your administrator password.)</p>\n<p>Properly configuring your computer involves:</p>\n<ol>\n<li>Installing Python 3.6 or greater</li>\n<li>(Linux only) Installing FluidSynth</li>\n<li>(Optional) Installing <a href=\"https://spotlightkid.github.io/python-rtmidi/\" rel=\"nofollow\"><em>python-rtmidi</em></a></li>\n<li>(Optional) Installing <a href=\"https://github.com/Abjad/abjad\" rel=\"nofollow\"><em>abjad</em></a> and <a href=\"https://lilypond.org/\" rel=\"nofollow\">LilyPond</a></li>\n</ol>\n<p>Each of these steps is described in greater detail below. After configuring the computer and\nrunning <code>pip3 install --user scamp</code>, you should be able to test the installation by:</p>\n<ol>\n<li>Opening a terminal and typing <code>python3</code> to start an interactive python session.</li>\n<li>Typing in <code>from scamp import test_run; test_run.play()</code> and pressing return.</li>\n</ol>\n<p>If you here a piano gesture sweeping inward towards middle C, SCAMP has installed correctly!</p>\n<h3>1) Installing Python 3.6 or greater</h3>\n<p><em><strong>Mac</strong></em></p>\n<p>You can download and install Python 3 here: <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">https://www.python.org/downloads/</a>. After installation, open up a terminal and type:</p>\n<p><code>python3 --version</code></p>\n<p>You should be greeted with \"Python 3.7.2\" or something similar in response. If so, you're all set!\nIf you get something like \"command not found\" instead, it's likely that something went wrong in the process of installation.</p>\n<p><em><strong>Windows</strong></em></p>\n<p>As on a Mac, you can download and install Python 3 here: <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">https://www.python.org/downloads/</a>.\nIn the installer, be sure to select \"Add Python 3.7 to PATH\". This allows you to invoke python from the Command Prompt\nby typing either <code>python</code> or <code>py</code>, and this should also default to the latest version of python. Test that all went\naccording to plan by typing:</p>\n<p><code>python --version</code></p>\n<p>You should be greeted with \"Python 3.7.2\" or something similar in response. If so, you're all set! For all other installation instructions below, use <code>python</code> instead of <code>python3</code> and <code>pip</code> instead of <code>pip3</code>.</p>\n<p><em><strong>Linux</strong></em></p>\n<p>On Linux, Python 3.6 or greater is often already installed by default. Again, you can check this\nby opening a terminal and running:</p>\n<p><code>python3 --version</code></p>\n<p>If your version of python is already 3.6 or greater, you're good to go. However, if your version\nof Python 3 is less than 3.6, as might happen on an older distro, you can install Python 3.6 via\na PPA, such as Felix Krull's deadsnakes PPA on Ubuntu:</p>\n<pre><code>sudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt-get update\nsudo apt-get install python3.6\n</code></pre>\n<p>It might then be useful to add the following line to your <code>~/.bashrc</code> file:</p>\n<p><code>alias pip3.6=\"python3.6 -m pip\"</code></p>\n<p>From there on, you can proceed to use the commands <code>pip3.6</code> and <code>python3.6</code> in place of <code>pip3</code>\nand <code>python3</code> to install SCAMP, manage dependencies, and invoke the correct version of Python.\n(Don't do anything with the earlier version of Python; it's used by the operating system.)</p>\n<h3>2) (Linux only) Installing FluidSynth</h3>\n<p>SCAMP requires FluidSynth for soundfont playback, but on both Mac and Windows \u2014 due to\nthe lack of a default package manager \u2014 it became clear that the path of least resistance was to\ninclude the compiled FluidSynth library within the SCAMP package. For this reason, you don't need to\ntake the step of installing FluidSynth to use SCAMP on Mac or Windows.</p>\n<p>Since Linux distros have package managers, it makes more sense to have users take the extra\nstep to install FluidSynth that way. On apt-based distros like Debian, Ubuntu or Trisquel,\nit's as simple as running:</p>\n<p><code>sudo apt install fluidsynth</code></p>\n<p>You are now the proud owner of a FluidSynthesizer!</p>\n<h3>3) (Optional) Installing python-rtmidi</h3>\n<p>For midi input, and also to generate an outgoing midi stream (which could, for instance, be\nrouted to a DAW), you will need the <a href=\"https://pypi.org/project/python-rtmidi/\" rel=\"nofollow\"><em>python-rtmidi</em></a>\nlibrary. You can get this by running from a terminal:</p>\n<p><code>pip3 install --user python-rtmidi</code></p>\n<p>On Linux, if you're running into an error you may need to first install the <code>python3-dev</code>\npackage, for instance with the command:</p>\n<p><code>sudo apt install python3-dev</code></p>\n<p>For any other <em>python-rtmidi</em> installation woes, take a look at the installation instructions\n<a href=\"https://spotlightkid.github.io/python-rtmidi/installation.html\" rel=\"nofollow\">here</a>.</p>\n<h3>4) (Optional) Installing abjad and LilyPond</h3>\n<p>For LilyPond output, you will need the <a href=\"http://abjad.mbrsi.org/installation.html\" rel=\"nofollow\"><em>abjad</em></a> library. To do so,\nrun the following:</p>\n<pre><code>pip3 install abjad==3.1\n</code></pre>\n<p>Note the '==' in the command, which specifies the exact version of abjad to install. This is the version that SCAMP\nhas been built to be compatible with. You are free to use a newer version, but it is possible there will be unexpected\nerrors due to changes in the abjad API.</p>\n<p>After installing <em>abjad</em>, you will also need to <a href=\"https://lilypond.org/\" rel=\"nofollow\">download and install LilyPond</a>, since it\nis a dependency of abjad.</p>\n<h3>5) (Optional) Installing scamp_extensions</h3>\n<p>The <em>scamp_extensions</em> package is the place for models of music-theoretical concepts (e.g. scales, pitch-class sets),\nadditional conveniences for interacting with various types of input and output, and in general anything that builds\nupon SCAMP but is outside of the scope of the main framework.</p>\n<p>The easiest way to install <em>scamp_extensions</em> is by running the command:</p>\n<pre><code>pip3 install git+https://github.com/MarcTheSpark/scamp_extensions\n</code></pre>\n<p>This will install the latest version from the repository.</p>\n\n          </div>"}, "last_serial": 6954009, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "539fe80942cb58af571334e9ad92c8a7", "sha256": "7f224b8fd7981cb220f0e0114780941b7c2e58d71f6b1e6ffbc074bdfa76deab"}, "downloads": -1, "filename": "scamp-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "539fe80942cb58af571334e9ad92c8a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10554610, "upload_time": "2019-01-12T02:57:02", "upload_time_iso_8601": "2019-01-12T02:57:02.443559Z", "url": "https://files.pythonhosted.org/packages/db/83/44aa79b6086219d7383091318bfb09d6e829b1df929a9bcbd1c23996c3cb/scamp-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd3b311256f8fde1ac7d7be92f68c50f", "sha256": "efc680986e2d7949a7264aaa08d1530dc10ab444c9a536039e03be4bca785853"}, "downloads": -1, "filename": "scamp-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bd3b311256f8fde1ac7d7be92f68c50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10534392, "upload_time": "2019-01-12T02:57:15", "upload_time_iso_8601": "2019-01-12T02:57:15.895992Z", "url": "https://files.pythonhosted.org/packages/fe/a5/ddb564674d5b4234e90dfe5e655ee6d35b33721e93ee66421f449a86738c/scamp-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "e9764848d8d1ae6ce0723ee5145109bd", "sha256": "0879963eb23d3a20f3da3d41f827367404b06cc5216b8240ad1f038e5148954e"}, "downloads": -1, "filename": "scamp-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e9764848d8d1ae6ce0723ee5145109bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10554601, "upload_time": "2019-01-12T03:04:22", "upload_time_iso_8601": "2019-01-12T03:04:22.128477Z", "url": "https://files.pythonhosted.org/packages/b4/a3/8bf21175e4b3ff2264228b84dd3049948988fb00923cf9e3b177a13223c7/scamp-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a34d30fb5cf03f2d77bc2174ddd91b4", "sha256": "3052865312017ec0eb1910293d73361b8ec9ebf401ddb94136fb8fad777341dd"}, "downloads": -1, "filename": "scamp-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2a34d30fb5cf03f2d77bc2174ddd91b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10534350, "upload_time": "2019-01-12T03:04:34", "upload_time_iso_8601": "2019-01-12T03:04:34.267013Z", "url": "https://files.pythonhosted.org/packages/9b/81/fa9430d32a1e90744535fac3d3e6d0afd0e5a5ce62047dd1c6ba0737ecfb/scamp-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "0eb281219c2f9301f2ed6b9e3f344c1e", "sha256": "53ccfc654404a6acca41fb455b440aa0a54adbc97cb52f7a352353c2e407d4ea"}, "downloads": -1, "filename": "scamp-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0eb281219c2f9301f2ed6b9e3f344c1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10554612, "upload_time": "2019-01-12T22:59:53", "upload_time_iso_8601": "2019-01-12T22:59:53.985500Z", "url": "https://files.pythonhosted.org/packages/ee/76/5820d8450596f341b937a9e86e7feb856de25112be504a743828aa213e50/scamp-0.0.7-py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "27d8e4972aecbdd43fff5aa588b878e2", "sha256": "cc5b5369f9d6d6a4e3cdb988e873ef54b3a9f223f05345e281ccb8c7947a36d6"}, "downloads": -1, "filename": "scamp-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "27d8e4972aecbdd43fff5aa588b878e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10566057, "upload_time": "2019-01-17T09:06:56", "upload_time_iso_8601": "2019-01-17T09:06:56.399226Z", "url": "https://files.pythonhosted.org/packages/d4/bb/910d27a9e9fab8e3c95fac53c5ee5dd87f2b9d1a886a0bad2f4c4580c497/scamp-0.0.8-py3-none-any.whl", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "2df1c1495880f32a1577d71de7c98deb", "sha256": "288ec4c970a43877a0ee36ec605cdaed937f7a9ab172b3568c55448bbb37662f"}, "downloads": -1, "filename": "scamp-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2df1c1495880f32a1577d71de7c98deb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10818197, "upload_time": "2019-01-18T23:51:00", "upload_time_iso_8601": "2019-01-18T23:51:00.527249Z", "url": "https://files.pythonhosted.org/packages/6f/32/b58e10407d424566f46e38204ea197fd9966cb3dc46583284ea4136e6fa8/scamp-0.0.9-py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "44b6c6f8db30f86dd4e390442a648a81", "sha256": "c09c0fb4dfc7be9da763e9112e849c31e5f80fcfb8ce12a1475887ea610936fb"}, "downloads": -1, "filename": "scamp-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "44b6c6f8db30f86dd4e390442a648a81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10818195, "upload_time": "2019-01-19T00:08:12", "upload_time_iso_8601": "2019-01-19T00:08:12.909694Z", "url": "https://files.pythonhosted.org/packages/81/2d/00fa86b6f02066820aa6627bb22736a44e0352c288fc1cb9581902489155/scamp-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a345f5b3de8a4ed2fad4f59930f0a85e", "sha256": "517392202b66743988deb58a8d513b2c123fa8c3381e80868e7192dea8c7a555"}, "downloads": -1, "filename": "scamp-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a345f5b3de8a4ed2fad4f59930f0a85e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10819267, "upload_time": "2019-01-23T00:35:14", "upload_time_iso_8601": "2019-01-23T00:35:14.341719Z", "url": "https://files.pythonhosted.org/packages/09/a1/304b67fba1becae96476003974c3109815c91ee53808c796070f0f94b008/scamp-0.1.1-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8aa43079befcb4caccc9cc5713401c27", "sha256": "5e31149f83c6198cb1365bc587a64345326f56743d23cdf57a573717015e43b0"}, "downloads": -1, "filename": "scamp-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8aa43079befcb4caccc9cc5713401c27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11335115, "upload_time": "2019-05-15T22:58:22", "upload_time_iso_8601": "2019-05-15T22:58:22.472334Z", "url": "https://files.pythonhosted.org/packages/2d/8e/683e8258dc11203c541d5199f6e0046bbe5bd032f280aab18f42ba1716d7/scamp-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ccb9ad8c7df339b795921890b39819f6", "sha256": "d623f1b520d5dfe13d29a1694157b7bc007fbccec3ebc2f8f14086fe4da42fe9"}, "downloads": -1, "filename": "scamp-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ccb9ad8c7df339b795921890b39819f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11335479, "upload_time": "2019-05-17T05:13:10", "upload_time_iso_8601": "2019-05-17T05:13:10.295009Z", "url": "https://files.pythonhosted.org/packages/2c/b6/eba56cae178c8d54207a2488ac007bdbd2b3d9590979c2c99e588207226c/scamp-0.2.1-py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dcfa0e7b4c8c35624bf0ca60f2ecc32e", "sha256": "ece168dcba819a932b85805f104d8411c8ecd7631c9f6491f21c9bf7d55fa6e4"}, "downloads": -1, "filename": "scamp-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dcfa0e7b4c8c35624bf0ca60f2ecc32e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11341189, "upload_time": "2019-06-26T15:50:24", "upload_time_iso_8601": "2019-06-26T15:50:24.992000Z", "url": "https://files.pythonhosted.org/packages/5e/fd/aea8a20b5f467ad7a17a09d07bc34f3ccc3da10a1bd8e86b3fb7604c389e/scamp-0.2.2-py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "2db870578522bffb49b58a17ba06ea94", "sha256": "d3854e22e2fceb5903b1ee5f4fd36b1a4bbb20ad4fbb9a149ed67b4f8abbadad"}, "downloads": -1, "filename": "scamp-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2db870578522bffb49b58a17ba06ea94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11341189, "upload_time": "2019-06-26T15:57:54", "upload_time_iso_8601": "2019-06-26T15:57:54.774500Z", "url": "https://files.pythonhosted.org/packages/65/de/c333cb4e82a9d051fde1e80ea23c81da6ebc8c6192eb7d85054f88f6fc8c/scamp-0.2.3-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d279aa508fd1a4e1777b7d5dc87b5695", "sha256": "52aa9196b547307b697135665668770de5aafc859732c2cacec3364474cc3cc9"}, "downloads": -1, "filename": "scamp-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d279aa508fd1a4e1777b7d5dc87b5695", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11341408, "upload_time": "2019-06-26T18:28:20", "upload_time_iso_8601": "2019-06-26T18:28:20.680631Z", "url": "https://files.pythonhosted.org/packages/df/7a/55a12d7df38a2cdaf8137d6fe93043997e92b3e17dab6a3091084a70e82b/scamp-0.3-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "47636b7cbac7a60314b57939ad4094dc", "sha256": "dfde02ec59ab187f87042ecc65e750408ed4257f4582bf07e38c34b818b89aea"}, "downloads": -1, "filename": "scamp-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "47636b7cbac7a60314b57939ad4094dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11353230, "upload_time": "2019-08-14T03:24:56", "upload_time_iso_8601": "2019-08-14T03:24:56.040825Z", "url": "https://files.pythonhosted.org/packages/b2/d7/06035dde51a45cf17b567daf024439a09c57fd4b345777a3214f46b726b1/scamp-0.3.1-py3-none-any.whl", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "3dadeea523df7b75f7eab4be7bef18cb", "sha256": "74f2e16332dde38c55fbf73b80c8f7815d0e5f3957da00c5f82bcb6389a2888d"}, "downloads": -1, "filename": "scamp-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3dadeea523df7b75f7eab4be7bef18cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13534277, "upload_time": "2020-02-15T19:56:32", "upload_time_iso_8601": "2020-02-15T19:56:32.660959Z", "url": "https://files.pythonhosted.org/packages/0b/29/32bc13d796fde51049d732d032ef136640cc1bf880ab4383c3974dce3b84/scamp-0.5-py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "5ab36ced51c2f5bb0e4a64f6807da27a", "sha256": "2db25b55a8138506a8ecf7279a454d5db9e16ecc8c81bb6063bf88fec39f3ac2"}, "downloads": -1, "filename": "scamp-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ab36ced51c2f5bb0e4a64f6807da27a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13534333, "upload_time": "2020-03-08T05:16:17", "upload_time_iso_8601": "2020-03-08T05:16:17.292129Z", "url": "https://files.pythonhosted.org/packages/bb/b3/da3bfe3f48f72c652ff0aad73fb3d12ec650645f53b554e0d320621e4727/scamp-0.5.1-py3-none-any.whl", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "82db54531e9f7da0fa7e9f9a12cc9122", "sha256": "884616ec63510a6a6eb043b05a4e818b4e475dd3ae72426ddc6f4a6f6aa0268b"}, "downloads": -1, "filename": "scamp-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "82db54531e9f7da0fa7e9f9a12cc9122", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13534331, "upload_time": "2020-03-08T05:22:00", "upload_time_iso_8601": "2020-03-08T05:22:00.147448Z", "url": "https://files.pythonhosted.org/packages/cf/90/8841593db499af48565fe7e9277c1e7d1aae0375204e54dde92476fa2faa/scamp-0.5.2-py3-none-any.whl", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "2c418c318c2382138713cb33deaa0d73", "sha256": "de7a34901a9a393b3d6f46081fa97b4f57e69286ed38d1f340c4b5099936bec5"}, "downloads": -1, "filename": "scamp-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2c418c318c2382138713cb33deaa0d73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13534406, "upload_time": "2020-03-14T04:29:53", "upload_time_iso_8601": "2020-03-14T04:29:53.084180Z", "url": "https://files.pythonhosted.org/packages/31/eb/d636139b55476339825bb7ed8e2618629ca4c5db77a7c0f874a0c296dac1/scamp-0.5.3-py3-none-any.whl", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "e891d0f5e889c402a8dc3d503acdb531", "sha256": "a528b7127be2e86fa24ba7764dbeaf205f414aa1266cbfa6694d377b7ca9948c"}, "downloads": -1, "filename": "scamp-0.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e891d0f5e889c402a8dc3d503acdb531", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13535208, "upload_time": "2020-03-15T03:28:28", "upload_time_iso_8601": "2020-03-15T03:28:28.223282Z", "url": "https://files.pythonhosted.org/packages/80/3f/a16f7c48d20e05566e8959af13da97f103f7d28da751e76db06d2a66c115/scamp-0.5.4-py3-none-any.whl", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "dd0d72cd3ad6c8687a7b01047b1a1ef2", "sha256": "45c72b396776eeae20c801911430be3cd8545f3826763e070ab9c0fff75d9e57"}, "downloads": -1, "filename": "scamp-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "dd0d72cd3ad6c8687a7b01047b1a1ef2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13535508, "upload_time": "2020-03-16T21:45:07", "upload_time_iso_8601": "2020-03-16T21:45:07.523662Z", "url": "https://files.pythonhosted.org/packages/9b/8f/21781b345068aa157d02880cbdd2caa4a74ea6825ca9c41a0ccd7db9c8af/scamp-0.5.5-py3-none-any.whl", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "43014764a9182e01b07576c9477bc306", "sha256": "31483ddfc3e4008d3804589ecfa5b5678afd1c93cc65d0d2d8f16687e1910904"}, "downloads": -1, "filename": "scamp-0.5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "43014764a9182e01b07576c9477bc306", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13541288, "upload_time": "2020-03-22T04:17:31", "upload_time_iso_8601": "2020-03-22T04:17:31.325874Z", "url": "https://files.pythonhosted.org/packages/2e/44/9acb9d142e810f4cabcf1fa6524c686af40b77b1f6758abb3a6e800c350e/scamp-0.5.6-py3-none-any.whl", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "e12a34ecc5537e585d1e421792df6a88", "sha256": "e9b47a3f50328cd777b2950ca93b750438ba0db1fc8f07c599bf40a63412b7da"}, "downloads": -1, "filename": "scamp-0.5.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e12a34ecc5537e585d1e421792df6a88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13541772, "upload_time": "2020-03-23T18:22:14", "upload_time_iso_8601": "2020-03-23T18:22:14.869412Z", "url": "https://files.pythonhosted.org/packages/59/3a/4c32da79c9aa9f6021735da55d030cad1fff10e2fb85135b4e7f8628317e/scamp-0.5.7-py3-none-any.whl", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "9dc8ce86e2d650bce6d445eda14f8f75", "sha256": "9a9269b5f630f96045809733346c7e589a1201a65d0c7e1cc6624947da41fa5d"}, "downloads": -1, "filename": "scamp-0.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "9dc8ce86e2d650bce6d445eda14f8f75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13542669, "upload_time": "2020-04-05T05:02:49", "upload_time_iso_8601": "2020-04-05T05:02:49.339399Z", "url": "https://files.pythonhosted.org/packages/d5/7f/fa99e393c45a2e7a4661d6c0b5ed1a6a569f73adf83eb19cb3c9a1a603d3/scamp-0.5.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dc8ce86e2d650bce6d445eda14f8f75", "sha256": "9a9269b5f630f96045809733346c7e589a1201a65d0c7e1cc6624947da41fa5d"}, "downloads": -1, "filename": "scamp-0.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "9dc8ce86e2d650bce6d445eda14f8f75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13542669, "upload_time": "2020-04-05T05:02:49", "upload_time_iso_8601": "2020-04-05T05:02:49.339399Z", "url": "https://files.pythonhosted.org/packages/d5/7f/fa99e393c45a2e7a4661d6c0b5ed1a6a569f73adf83eb19cb3c9a1a603d3/scamp-0.5.8-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:58:07 2020"}