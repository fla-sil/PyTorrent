{"info": {"author": "Eric Lemoine", "author_email": "eric.lemoine@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Pylons", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "papyrus_ogcproxy\n=================\n\npapyrus_ogcproxy provides an easy and convenient method for embeding\nan OGC proxy in Pyramid applications.\n\nThe source code of papyrus_ogcproxy is straightforward, so if\npapyrus_ogcproxy doesn't do what you want, open its source code, get\ninspiration, and write your own code.\n\nInstall\n-------\n\npapyrus_ogcproxy can be installed with ``easy_install``::\n\n    $ easy_install papyrus_ogcproxy\n\nOften you'll want to make papyrus_ogcproxy a dependency of your Pyramid\napplication, which is done by adding ``papyrus_ogcproxy`` to the\n``install_requires`` list defined in the Pyramid application's ``setup.py``\nfile.\n\nSet up\n------\n\nUsing papyrus_ogcproxy to set up an OGC proxy in a Pyramid application is easy.\n\nEdit the application's main file, ``__init__.py``, and register\npapyrus_ogcproxy using the ``Configurator.include`` method::\n\n    def main(global_config, **settings):\n\n        config = Configurator(settings=settings)\n\n        import papyrus_ogcproxy\n        config.include(papyrus_ogcproxy)\n\nThat's it! The OGC proxy is available at ``/ogcproxy``.\n\nHere is a test URL:\nhttp://localhost:6543/ogcproxy?url=http%3A%2F%2Fmap1.vis.earthdata.nasa.gov/wmts-geo/wmts.cgi%3FSERVICE%3DWMTS%26REQUEST%3DGetCapabilities\n\nUsing a proxy for the proxy\n---------------------------\n\nIf the requests made by the OGC proxy should be made through a proxy, the additional\npackage ``pysocks`` is required. After the installation of this package, configure\nthe proxy::\n\n\n    from papyrus_ogcproxy import views as ogcproxy_views\n    from httplib2 import ProxyInfo\n    import socks\n    ogcproxy_views.proxy_info = ProxyInfo(socks.SOCKS5, 'localhost', 1080)\n\nWith this configuration the OGC proxy will make requests through the proxy\n``localhost:1080``. For information please refer to the\ndocumentation of `PySocks <https://github.com/Anorov/PySocks>`_ and\n`httplib2 <http://httplib2.googlecode.com/hg/doc/html/libhttplib2.html#httplib2.ProxyInfo>`_.\n\n\nSet up a development environment\n--------------------------------\n\nTo set up a development environment with virtualenv, run the following\ncommands::\n\n    $ virtualenv venv\n    $ venv/bin/python setup.py develop\n    $ venv/bin/pip install -r requirements-dev.txt\n\nRun the tests\n-------------\n\nTo run the tests::\n\n    $ venv/bin/nosetests --with-coverage\n\nOne test assumes that a proxy server is running at ``localhost:1080``. To start\na proxy run::\n\n    $ ssh -N -D 0.0.0.0:1080 localhost\n\n\n0.2\n---\n\n* Do not verify certificate from the remote server. \n  https://github.com/elemoine/papyrus_ogcproxy/pull/4 from @sbrunner.\n  (We may want to revisit this later.)\n\n0.1\n---\n\n* First version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/elemoine/papyrus_ogcproxy", "keywords": "web geospatial papyrus OGC pyramid pylons", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "papyrus_ogcproxy", "package_url": "https://pypi.org/project/papyrus_ogcproxy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/papyrus_ogcproxy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/elemoine/papyrus_ogcproxy"}, "release_url": "https://pypi.org/project/papyrus_ogcproxy/0.2/", "requires_dist": null, "requires_python": null, "summary": "papyrus_ogcproxy", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>papyrus_ogcproxy provides an easy and convenient method for embeding\nan OGC proxy in Pyramid applications.</p>\n<p>The source code of papyrus_ogcproxy is straightforward, so if\npapyrus_ogcproxy doesn\u2019t do what you want, open its source code, get\ninspiration, and write your own code.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>papyrus_ogcproxy can be installed with <tt>easy_install</tt>:</p>\n<pre>$ easy_install papyrus_ogcproxy\n</pre>\n<p>Often you\u2019ll want to make papyrus_ogcproxy a dependency of your Pyramid\napplication, which is done by adding <tt>papyrus_ogcproxy</tt> to the\n<tt>install_requires</tt> list defined in the Pyramid application\u2019s <tt>setup.py</tt>\nfile.</p>\n</div>\n<div id=\"set-up\">\n<h2>Set up</h2>\n<p>Using papyrus_ogcproxy to set up an OGC proxy in a Pyramid application is easy.</p>\n<p>Edit the application\u2019s main file, <tt>__init__.py</tt>, and register\npapyrus_ogcproxy using the <tt>Configurator.include</tt> method:</p>\n<pre>def main(global_config, **settings):\n\n    config = Configurator(settings=settings)\n\n    import papyrus_ogcproxy\n    config.include(papyrus_ogcproxy)\n</pre>\n<p>That\u2019s it! The OGC proxy is available at <tt>/ogcproxy</tt>.</p>\n<p>Here is a test URL:\n<a href=\"http://localhost:6543/ogcproxy?url=http%3A%2F%2Fmap1.vis.earthdata.nasa.gov/wmts-geo/wmts.cgi%3FSERVICE%3DWMTS%26REQUEST%3DGetCapabilities\" rel=\"nofollow\">http://localhost:6543/ogcproxy?url=http%3A%2F%2Fmap1.vis.earthdata.nasa.gov/wmts-geo/wmts.cgi%3FSERVICE%3DWMTS%26REQUEST%3DGetCapabilities</a></p>\n</div>\n<div id=\"using-a-proxy-for-the-proxy\">\n<h2>Using a proxy for the proxy</h2>\n<p>If the requests made by the OGC proxy should be made through a proxy, the additional\npackage <tt>pysocks</tt> is required. After the installation of this package, configure\nthe proxy:</p>\n<pre>from papyrus_ogcproxy import views as ogcproxy_views\nfrom httplib2 import ProxyInfo\nimport socks\nogcproxy_views.proxy_info = ProxyInfo(socks.SOCKS5, 'localhost', 1080)\n</pre>\n<p>With this configuration the OGC proxy will make requests through the proxy\n<tt>localhost:1080</tt>. For information please refer to the\ndocumentation of <a href=\"https://github.com/Anorov/PySocks\" rel=\"nofollow\">PySocks</a> and\n<a href=\"http://httplib2.googlecode.com/hg/doc/html/libhttplib2.html#httplib2.ProxyInfo\" rel=\"nofollow\">httplib2</a>.</p>\n</div>\n<div id=\"set-up-a-development-environment\">\n<h2>Set up a development environment</h2>\n<p>To set up a development environment with virtualenv, run the following\ncommands:</p>\n<pre>$ virtualenv venv\n$ venv/bin/python setup.py develop\n$ venv/bin/pip install -r requirements-dev.txt\n</pre>\n</div>\n<div id=\"run-the-tests\">\n<h2>Run the tests</h2>\n<p>To run the tests:</p>\n<pre>$ venv/bin/nosetests --with-coverage\n</pre>\n<p>One test assumes that a proxy server is running at <tt>localhost:1080</tt>. To start\na proxy run:</p>\n<pre>$ ssh -N -D 0.0.0.0:1080 localhost\n</pre>\n</div>\n<div id=\"id1\">\n<h2>0.2</h2>\n<ul>\n<li>Do not verify certificate from the remote server.\n<a href=\"https://github.com/elemoine/papyrus_ogcproxy/pull/4\" rel=\"nofollow\">https://github.com/elemoine/papyrus_ogcproxy/pull/4</a> from @sbrunner.\n(We may want to revisit this later.)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.1</h2>\n<ul>\n<li>First version</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2340098, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2aa87ed08116287015aa1c3ff7f9d31a", "sha256": "b76602e47096938be339d32c4f391d2f9441572b973789dbdfaa893ae0fc8b7f"}, "downloads": -1, "filename": "papyrus_ogcproxy-0.1.tar.gz", "has_sig": false, "md5_digest": "2aa87ed08116287015aa1c3ff7f9d31a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4117, "upload_time": "2011-04-11T15:07:05", "upload_time_iso_8601": "2011-04-11T15:07:05.336641Z", "url": "https://files.pythonhosted.org/packages/b7/bc/da8aa660fd29ff8f932e959d767a669c77e624fd6e965e2afc3ead0afb2b/papyrus_ogcproxy-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "35ffd184a69cb247f166fdc6910c19df", "sha256": "ecdd52641cd8443a973727f1f4f56f6dd50a500bf2bf82de55466c42aff65057"}, "downloads": -1, "filename": "papyrus_ogcproxy-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "35ffd184a69cb247f166fdc6910c19df", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6671, "upload_time": "2016-09-13T13:12:23", "upload_time_iso_8601": "2016-09-13T13:12:23.592952Z", "url": "https://files.pythonhosted.org/packages/fd/20/aac5ebc82a6ce3fb37e7cbd3feddf4d612a51cca1a3e0c0d6f96a8b05179/papyrus_ogcproxy-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad5517e4294bfa754b26f9c0f13f4232", "sha256": "19fae5a49d2ed5d1f6e5f53354d9c829f3c98827a0fd4784cf3534339441873e"}, "downloads": -1, "filename": "papyrus_ogcproxy-0.2.tar.gz", "has_sig": false, "md5_digest": "ad5517e4294bfa754b26f9c0f13f4232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5233, "upload_time": "2016-09-13T13:12:19", "upload_time_iso_8601": "2016-09-13T13:12:19.495400Z", "url": "https://files.pythonhosted.org/packages/7c/8b/68bb248d31d06e0803606a451cccfba5caf609f2d8535103e045dfd829fe/papyrus_ogcproxy-0.2.tar.gz", "yanked": false}], "0.2dev1": [{"comment_text": "", "digests": {"md5": "d5fab12653502e2abfd04e958207f91b", "sha256": "0885176fd201c80ff27406656e05cc9f443dbbd151bef9e3d6922a9ebb060982"}, "downloads": -1, "filename": "papyrus_ogcproxy-0.2dev1.tar.gz", "has_sig": false, "md5_digest": "d5fab12653502e2abfd04e958207f91b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4550, "upload_time": "2012-12-20T20:09:29", "upload_time_iso_8601": "2012-12-20T20:09:29.250679Z", "url": "https://files.pythonhosted.org/packages/81/59/aa07333b560ccf80f7bbb2ba546078115a00f493bf3fb6cf5590de5186e4/papyrus_ogcproxy-0.2dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35ffd184a69cb247f166fdc6910c19df", "sha256": "ecdd52641cd8443a973727f1f4f56f6dd50a500bf2bf82de55466c42aff65057"}, "downloads": -1, "filename": "papyrus_ogcproxy-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "35ffd184a69cb247f166fdc6910c19df", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6671, "upload_time": "2016-09-13T13:12:23", "upload_time_iso_8601": "2016-09-13T13:12:23.592952Z", "url": "https://files.pythonhosted.org/packages/fd/20/aac5ebc82a6ce3fb37e7cbd3feddf4d612a51cca1a3e0c0d6f96a8b05179/papyrus_ogcproxy-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad5517e4294bfa754b26f9c0f13f4232", "sha256": "19fae5a49d2ed5d1f6e5f53354d9c829f3c98827a0fd4784cf3534339441873e"}, "downloads": -1, "filename": "papyrus_ogcproxy-0.2.tar.gz", "has_sig": false, "md5_digest": "ad5517e4294bfa754b26f9c0f13f4232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5233, "upload_time": "2016-09-13T13:12:19", "upload_time_iso_8601": "2016-09-13T13:12:19.495400Z", "url": "https://files.pythonhosted.org/packages/7c/8b/68bb248d31d06e0803606a451cccfba5caf609f2d8535103e045dfd829fe/papyrus_ogcproxy-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:43 2020"}