{"info": {"author": "Federico Belotti", "author_email": "belo.fede@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# py_asciimath \n\n[![Build Status](https://travis-ci.com/belerico/py_asciimath.svg?branch=master)](https://travis-ci.com/belerico/py_asciimath) [![Documentation Status](https://readthedocs.org/projects/py-asciimath/badge/?version=latest)](https://py-asciimath.readthedocs.io/en/latest/?badge=latest) [![Coverage Status](https://coveralls.io/repos/github/belerico/py_asciimath/badge.svg?branch=master)](https://coveralls.io/github/belerico/py_asciimath?branch=master) [![PyPI](https://img.shields.io/pypi/v/py_asciimath?color=light%20green)](https://pypi.org/project/py-asciimath/0.2.2/) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/py_asciimath)](https://www.python.org/)\n\npy_asciimath is a simple yet powerful Python module that:\n\n* converts an ASCIIMath ex to LaTeX or MathML\n* converts a LaTeX mathematical expression to ASCIIMath (soon also to MathML)\n* converts a MathML string to LaTeX (the conversion is done thank to the [XSLT MathML Library](https://sourceforge.net/projects/xsltml/). Please report any unexpected behavior)\n* exposes a single translation method `translate(exp, **kwargs)`, which semantic depends on the py_asciimath translator one wish to use\n* exposes a MathML parser\n\n<!-- <div align=\"center\">\n  <img src=\"https://drive.google.com/uc?export=view&id=10frWYpc-5ir0EfxsTOZJYbBGRyFaANkF\">\n</div> -->\n\n<div align=\"center\">\n  <img src=\"docs/source/_static/images/py_asciimath_translations.png\">\n</div>\n\nASCIIMath is an easy-to-write markup language for mathematics: for more information check out the main website at http://asciimath.org/. MathML is a markup language for describing mathematical notation and capturing both its structure and content: for more information check out the main website at https://www.w3.org/TR/MathML3/Overview.html. LaTeX is a high-quality typesetting system: for more information check out the main website at https://www.latex-project.org/.\n\n## Documentation\n\nRead the full documentation at https://py-asciimath.readthedocs.io/en/latest/index.html\n\n## Install\n\nTo install the package run `pip install -U --user py-asciimath` or `pip3 install -U --user py-asciimath`\n\n## Usage\n\n#### As python module\n\n```python\nfrom py_asciimath.translator.translator import (\n    ASCIIMath2MathML,\n    ASCIIMath2Tex,\n    MathML2Tex,\n    Tex2ASCIIMath\n)\n\n\nif __name__ == \"__main__\":\n    print(\"ASCIIMath to MathML\")\n    asciimath2mathml = ASCIIMath2MathML(log=False, inplace=True)\n    parsed = asciimath2mathml.translate(\n        r\"e^x > 0 forall x in RR\",\n        displaystyle=True,\n        dtd=\"mathml2\",\n        dtd_validation=True,\n        from_file=False,\n        output=\"string\",\n        network=True,\n        pprint=False,\n        to_file=None,\n        xml_declaration=True,\n        xml_pprint=True,\n    )\n\n    print(parsed, \"\\n\\nMathML to LaTeX\")\n    mathml2tex = MathML2Tex()\n    parsed = mathml2tex.translate(parsed, network=False, from_file=False,)\n\n    print(parsed, \"\\n\\nASCIIMath to LaTeX\")\n    asciimath2tex = ASCIIMath2Tex(log=False, inplace=True)\n    parsed = asciimath2tex.translate(\n        r\"e^x > 0 forall x in RR\",\n        displaystyle=True,\n        from_file=False,\n        pprint=False,\n    )\n\n    print(parsed, \"\\n\\nLaTeX to ASCIIMath\")\n    tex2asciimath = Tex2ASCIIMath(log=False, inplace=True)\n    parsed = tex2asciimath.translate(\n        parsed,\n        from_file=False,\n        pprint=False,\n    )\n    print(parsed)\n```\n\nresults in:\n\n```\nASCIIMath to MathML\nINFO:Translating...\nWARNING:No XML declaration with 'encoding' attribute set: default encoding to None\nWARNING:The XML encoding is None: default to UTF-8\nWARNING:No DTD declaration found: set to remote mathml2 DTD\nINFO:Loading dtd and validating...\n<?xml version='1.0' encoding='UTF-8'?>\n<!DOCTYPE math PUBLIC \"-//W3C//DTD MathML 2.0//EN\" \"http://www.w3.org/Math/DTD/mathml2/mathml2.dtd\">\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <mstyle displaystyle=\"true\">\n    <mrow>\n      <msup>\n        <mrow>\n          <mi>e</mi>\n        </mrow>\n        <mrow>\n          <mi>x</mi>\n        </mrow>\n      </msup>\n    </mrow>\n    <mo>&gt;</mo>\n    <mn>0</mn>\n    <mo>&ForAll;</mo>\n    <mi>x</mi>\n    <mo>&in;</mo>\n    <mo>&Ropf;</mo>\n  </mstyle>\n</math>\n\n\nMathML to LaTeX\nINFO:Translating...\nINFO:Encoding from XML declaration: UTF-8\nWARNING:Remote DTD found and network is False: replacing with local DTD\nINFO:Loading dtd and validating...\n$ {\\displaystyle {e}^{x}>0\\forall x\\in \\mathbb{R} }$ \n\nASCIIMath to LaTeX\nINFO:Translating...\n\\[{e}^{x} > 0 \\forall x \\in \\mathbb{R}\\] \n\nLaTeX to ASCIIMath\nINFO:Translating...\n(e)^(x) > 0 AA x in RR\n```\n\n#### From the command line\n\n```\npy_asciimath: a simple ASCIIMath/MathML/LaTeX converter\n\nUsage:\n  py_asciimath.py <EXP> from <ILANG> to <OLANG>\n                        [options]\n  py_asciimath.py <EXP> from <ILANG> (-o <OLANG> | --output=OLANG)\n                        [options]\n  py_asciimath.py <EXP> (-i <ILANG> | --input=ILANG) to <OLANG>\n                        [options]\n  py_asciimath.py <EXP> (-i <ILANG> | --input=ILANG) (-o <OLANG> | --output=OLANG)\n                        [options]\n  py_asciimath.py from-file <PATH>  from <ILANG> to <OLANG>\n                                    [options]\n  py_asciimath.py from-file <PATH>  from <ILANG> (-o <OLANG> | --output=OLANG)\n                                    [options]\n  py_asciimath.py from-file <PATH>  (-i <ILANG> | --input=ILANG) to <OLANG>\n                                    [options]\n  py_asciimath.py from-file <PATH>  (-i <ILANG> | --input=ILANG) (-o <OLANG> | --output=OLANG)\n                                    [options]\n  py_asciimath.py (-h | --help)\n  py_asciimath.py --version\n\nOptions:\n  --dstyle                      Add display style\n  -i <ILANG> --input=ILANG      Input language\n                                Supported input language: asciimath, latex, mathml\n  --log                         Log the transformation process\n  --network                     Works only with ILANG=mathnml or OLANG=mathml\n                                Use network to validate XML against DTD\n  -o <OLANG> --output=OLANG     Output language\n                                Supported output language: asciimath, latex, mathml\n  --pprint                      Works only with OLANG=mathml. Pretty print\n  --to-file=OPATH               Save translation to OPATH file\n  --version                     Show version\n  --xml-declaration             Works only with OLANG=mathml.Add the XML\n                                declaration at the top of the XML document\n  --xml-validate=MathMLDTD      Works only with OLANG=mathml\n                                Validate against a MathML DTD\n                                MathMLDTD can be: mathml1, mathml2 or mathml3\n```\n\nFor example, `py_asciimath \"sum_(i=1)^n i^3=((n(n+1))/2)^2\" from asciimath to latex` prints:\n\n```\nINFO:Translating...\n$\\sum_{i = 1}^{n} i^{3} = \\left(\\frac{n \\left(n + 1\\right)}{2}\\right)^{2}$\n```\n\nIf the option `--log` is present, then it prints also every transformation of the input, so `py_asciimath \"e^x > 0 forall x in RR\" from asciimath to latex --log` prints:\n\n```\nINFO:Translating...\nINFO:Calling const with args:\nINFO:   items = [Token(LETTER, 'e')]\nINFO:Calling const with args:\nINFO:   items = [Token(LETTER, 'x')]\nINFO:Calling exp_super with args:\nINFO:   items = ['e', 'x']\nINFO:Calling remove_parenthesis with args:\nINFO:   s = 'x'\nINFO:Calling symbol with args:\nINFO:   items = [Token(MORETHAN, '>')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['>']\nINFO:Calling const with args:\nINFO:   items = [Token(NUMBER, '0')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['0']\nINFO:Calling symbol with args:\nINFO:   items = [Token(FORALL, 'forall')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['\\\\forall']\nINFO:Calling const with args:\nINFO:   items = [Token(LETTER, 'x')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['x']\nINFO:Calling symbol with args:\nINFO:   items = [Token(IN, 'in')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['\\\\in']\nINFO:Calling symbol with args:\nINFO:   items = [Token(RR, 'RR')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['\\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['\\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['\\\\in', '\\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['x', '\\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['\\\\forall', 'x \\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['0', '\\\\forall x \\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['>', '0 \\\\forall x \\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['e^{x}', '> 0 \\\\forall x \\\\in \\\\mathbb{R}']\n$e^{x} > 0 \\forall x \\in \\mathbb{R}$\n```\n\n## ASCIIMath grammar\n\nThe grammar used to parse an ASCIIMath input is:\n\n```\nstart: i start* -> exp\ni: s -> exp_interm\n    | s \"/\" s -> exp_frac\n    | s \"_\" s -> exp_under\n    | s \"^\" s -> exp_super\n    | s \"_\" s \"^\" s -> exp_under_super\ns: l start? r -> exp_par\n    | u s -> exp_unary\n    | b s s -> exp_binary\n    | asciimath -> symbol\n    | c -> const\n    | QS -> q_str\nc: /d[A-Za-z]/ // derivatives\n  | NUMBER\n  | LETTER\nl: \"(\" | \"(:\" | \"[\" | \"{\" | \"{:\" | \"|:\" | \"||:\" | \"langle\" | \"<<\" // left parenthesis\nr: \")\" | \":)\" | \"]\" | \"}\" | \":}\" | \":|\" | \":||\" | \"rangle\" | \">>\" // right parenthesis\nb: {} // asciimath binary functions symbols\nu: {} // asciimath unary functions symbols\nasciimath: {} // asciimath symbols\nQS: \"\\\"\" /(?<=\").+(?=\")/ \"\\\"\" // Quoted String\n```\n\nFor the complete list of symbols, please refer to http://asciimath.org/#syntax. The only symbol that I've added is `dstyle`, that stands for `displaystyle` as a unary function.\n\n## LaTeX grammar\n\nThe grammar used to parse a LaTeX input is:\n\n```\nstart: \"\\[\" exp \"\\]\" -> exp\n    | \"$$\" exp \"$$\" -> exp\n    | \"$\" exp \"$\" -> exp\n    | exp -> exp\nexp: i exp* -> exp\ni: s -> exp_interm\n    | s \"_\" s -> exp_under\n    | s \"^\" s -> exp_super\n    | s \"_\" s \"^\" s -> exp_under_super\ns: l exp? r -> exp_par\n    | \"\\left\" (l | \".\" | \"\\vert\" | \"\\mid\") start? \"\\right\" (r | \".\" | \"\\vert\" | \"\\mid\") -> exp_par\n    | \"\\begin{matrix}\" row_mat (\"\\\\\" row_mat?)* \"\\end{matrix}\" -> exp_mat\n    | \"{\" i+ \"}\" -> exp\n    | u \"{\" exp \"}\" -> exp_unary\n    | b \"{\" exp \"}\" \"{\" exp \"}\" -> exp_binary\n    | \"\\sqrt\" \"[\" i+ \"]\" \"{{\" exp \"}}\" -> exp_binary\n    | latex -> symbol\n    | c -> const\nc: NUMBER\n    | LETTER\nrow_mat: exp (\"&\" exp?)* -> row_mat\nl: \"(\" | \"[\" | \"\\{\" | \"\\langle\" | \"\\lVert\" // left parenthesis\nr: \")\" | \"]\" | \"\\}\" | \"\\rangle\" | \"\\rVert\" // right parenthesis\nb: {} // binary functions\nu: {} // unary functions\nlatex: {} // LaTeX symbols\n```\n\nBe careful that not all the LaTeX symbols are included in the grammar: please fill in an issue if you find that some symbols are missing \n\n## Rendering (matrices and systems of equations)\n\nFor a text to be rendered as a matrix must have a structure like \n\n<div align=\"center\">\n    <code>L '[' ... (, ...)* ']', '[' ... (, ...)* ']' (, '[' ... (, ...)* ']' )* R</code> \n    <br>\n    or\n    <br>\n    <code>L '(' ... (, ...)* ')', '(' ... (, ...)* ')' (, '(' ... (, ...)* ')' )* R</code>\n</div>\n\nthat is:\n\n* It must be delimited by a left (`L`) and right (`R`) parenthesis\n* Every row can be separated by `[]` XOR `()` (if one starts with `[]`, every row will be recognized with the same parenthesis, same for `()`), followed by `,` and possibly another row\n* Every matrix must contain at least two rows\n* Every rows contains zero or more columns, where `...` can be any ASCIIMath expression\n* Every row must contain the same number of columns\n\nSince `L` and `R` can be any left or right parenthesis, and every matrices must have the same number of columns, to render a system of equation one can write something like `{[(root n x)/(x) <= 4], [x^2=e^x]:}`.  \nOn the other hand a matrix can be somenthing like `[[(root n x)/(x) <= 4, int x dx], [x^2=e^x, lim_(x to infty) 1 / (x^2)]]`.\n\n## Rendering (LaTeX)\n\nA parsed ASCIIMath string is rendered as follows:\n\n* `latex`, `u` and `c` symbols are converted to their LaTeX equivalent\n* `text` and `ul` correspond to the `\\textrm` and `\\underline` functions\n* `bb`, `bbb`, `cc`, `tt`, `fr` and `sf` correspond to the `\\boldsymbol`, `\\mathbb`, `\\mathcal`, `\\texttt`, `\\mathfrak` and `\\textsf` functions\n* `frac` is rendered as a fraction, `root n x` as the n-th root of x and `stackrel x y` displays x upon y\n* Any text placed between a pair of `\"` is rendered in the same font as normal text.\n* `/` stands for a fraction. The `_` and `^` tokens have the same behaviour as in LaTeX but the subscript must be placed before the superscript if they are both present\n\n#### Delimiters\n\nLeft and right delimiters are preceded by the `\\left` and `\\right` commands to be well-sized. `(:` and `:)` are chevrons (angle parenthesis). `{:` and `:}` are invisible delimiters like LaTeX's {. `|:` is converted to `\\lvert` , while `||:` is converted to `\\lVert`. The other delimiters are rendered as expected.  \nUseless delimiters are automatically removed in expressions like: \n\n* `(...)/(...)`\n* `(...)_(...)`, `(...)^(...)` and the combination of sub and superscript\n* `u (...)`, `b (...) (...)` where u and b are unary and binary operators\n\nIf you want them to be rendered, you have to double them, for example: `((x+y))/2` or `{: (x+y) :}/2`.\n\n## Rendering (MathML)\n\nThe translation follows the MathML specification at https://www.w3.org/TR/MathML3/.\n\n## Known issues\n\nThe MathML1 DTD validation will fail when one wish to apply a font style\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/belerico/py-asciimath", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-asciimath", "package_url": "https://pypi.org/project/py-asciimath/", "platform": "", "project_url": "https://pypi.org/project/py-asciimath/", "project_urls": {"Homepage": "https://github.com/belerico/py-asciimath"}, "release_url": "https://pypi.org/project/py-asciimath/0.3.0/", "requires_dist": ["lark-parser", "docopt", "lxml"], "requires_python": "", "summary": "A simple converter from ASCIIMath/MathML to LaTeX/MathML", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py_asciimath</h1>\n<p><a href=\"https://travis-ci.com/belerico/py_asciimath\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c729b7bbdc7c5c71c8d1c2a8dd463fc65fd9553/68747470733a2f2f7472617669732d63692e636f6d2f62656c657269636f2f70795f61736369696d6174682e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://py-asciimath.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4aa9fab1d8c30d693214acdf03063fc0105e5086/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70792d61736369696d6174682f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://coveralls.io/github/belerico/py_asciimath?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35951806a3a29b76c9e7d48906a8298c76ebb242/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f62656c657269636f2f70795f61736369696d6174682f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.org/project/py-asciimath/0.2.2/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/366fcb5d6ec9abb7071b26adc7d76d118671410d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70795f61736369696d6174683f636f6c6f723d6c69676874253230677265656e\"></a> <a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69414e550c2622759b15a950abe1aea98b3b0fe7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70795f61736369696d617468\"></a></p>\n<p>py_asciimath is a simple yet powerful Python module that:</p>\n<ul>\n<li>converts an ASCIIMath ex to LaTeX or MathML</li>\n<li>converts a LaTeX mathematical expression to ASCIIMath (soon also to MathML)</li>\n<li>converts a MathML string to LaTeX (the conversion is done thank to the <a href=\"https://sourceforge.net/projects/xsltml/\" rel=\"nofollow\">XSLT MathML Library</a>. Please report any unexpected behavior)</li>\n<li>exposes a single translation method <code>translate(exp, **kwargs)</code>, which semantic depends on the py_asciimath translator one wish to use</li>\n<li>exposes a MathML parser</li>\n</ul>\n\n<div>\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6d49c916f75373c7776a7150e5949b06f47049c/646f63732f736f757263652f5f7374617469632f696d616765732f70795f61736369696d6174685f7472616e736c6174696f6e732e706e67\">\n</div>\n<p>ASCIIMath is an easy-to-write markup language for mathematics: for more information check out the main website at <a href=\"http://asciimath.org/\" rel=\"nofollow\">http://asciimath.org/</a>. MathML is a markup language for describing mathematical notation and capturing both its structure and content: for more information check out the main website at <a href=\"https://www.w3.org/TR/MathML3/Overview.html\" rel=\"nofollow\">https://www.w3.org/TR/MathML3/Overview.html</a>. LaTeX is a high-quality typesetting system: for more information check out the main website at <a href=\"https://www.latex-project.org/\" rel=\"nofollow\">https://www.latex-project.org/</a>.</p>\n<h2>Documentation</h2>\n<p>Read the full documentation at <a href=\"https://py-asciimath.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">https://py-asciimath.readthedocs.io/en/latest/index.html</a></p>\n<h2>Install</h2>\n<p>To install the package run <code>pip install -U --user py-asciimath</code> or <code>pip3 install -U --user py-asciimath</code></p>\n<h2>Usage</h2>\n<h4>As python module</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">py_asciimath.translator.translator</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">ASCIIMath2MathML</span><span class=\"p\">,</span>\n    <span class=\"n\">ASCIIMath2Tex</span><span class=\"p\">,</span>\n    <span class=\"n\">MathML2Tex</span><span class=\"p\">,</span>\n    <span class=\"n\">Tex2ASCIIMath</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"ASCIIMath to MathML\"</span><span class=\"p\">)</span>\n    <span class=\"n\">asciimath2mathml</span> <span class=\"o\">=</span> <span class=\"n\">ASCIIMath2MathML</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">parsed</span> <span class=\"o\">=</span> <span class=\"n\">asciimath2mathml</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span>\n        <span class=\"sa\">r</span><span class=\"s2\">\"e^x &gt; 0 forall x in RR\"</span><span class=\"p\">,</span>\n        <span class=\"n\">displaystyle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">dtd</span><span class=\"o\">=</span><span class=\"s2\">\"mathml2\"</span><span class=\"p\">,</span>\n        <span class=\"n\">dtd_validation</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">from_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n        <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">pprint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">to_file</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">xml_declaration</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">xml_pprint</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s2\">MathML to LaTeX\"</span><span class=\"p\">)</span>\n    <span class=\"n\">mathml2tex</span> <span class=\"o\">=</span> <span class=\"n\">MathML2Tex</span><span class=\"p\">()</span>\n    <span class=\"n\">parsed</span> <span class=\"o\">=</span> <span class=\"n\">mathml2tex</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">from_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s2\">ASCIIMath to LaTeX\"</span><span class=\"p\">)</span>\n    <span class=\"n\">asciimath2tex</span> <span class=\"o\">=</span> <span class=\"n\">ASCIIMath2Tex</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">parsed</span> <span class=\"o\">=</span> <span class=\"n\">asciimath2tex</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span>\n        <span class=\"sa\">r</span><span class=\"s2\">\"e^x &gt; 0 forall x in RR\"</span><span class=\"p\">,</span>\n        <span class=\"n\">displaystyle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">from_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">pprint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s2\">LaTeX to ASCIIMath\"</span><span class=\"p\">)</span>\n    <span class=\"n\">tex2asciimath</span> <span class=\"o\">=</span> <span class=\"n\">Tex2ASCIIMath</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">parsed</span> <span class=\"o\">=</span> <span class=\"n\">tex2asciimath</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span>\n        <span class=\"n\">parsed</span><span class=\"p\">,</span>\n        <span class=\"n\">from_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">pprint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"p\">)</span>\n</pre>\n<p>results in:</p>\n<pre><code>ASCIIMath to MathML\nINFO:Translating...\nWARNING:No XML declaration with 'encoding' attribute set: default encoding to None\nWARNING:The XML encoding is None: default to UTF-8\nWARNING:No DTD declaration found: set to remote mathml2 DTD\nINFO:Loading dtd and validating...\n&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;!DOCTYPE math PUBLIC \"-//W3C//DTD MathML 2.0//EN\" \"http://www.w3.org/Math/DTD/mathml2/mathml2.dtd\"&gt;\n&lt;math xmlns=\"http://www.w3.org/1998/Math/MathML\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n  &lt;mstyle displaystyle=\"true\"&gt;\n    &lt;mrow&gt;\n      &lt;msup&gt;\n        &lt;mrow&gt;\n          &lt;mi&gt;e&lt;/mi&gt;\n        &lt;/mrow&gt;\n        &lt;mrow&gt;\n          &lt;mi&gt;x&lt;/mi&gt;\n        &lt;/mrow&gt;\n      &lt;/msup&gt;\n    &lt;/mrow&gt;\n    &lt;mo&gt;&amp;gt;&lt;/mo&gt;\n    &lt;mn&gt;0&lt;/mn&gt;\n    &lt;mo&gt;&amp;ForAll;&lt;/mo&gt;\n    &lt;mi&gt;x&lt;/mi&gt;\n    &lt;mo&gt;&amp;in;&lt;/mo&gt;\n    &lt;mo&gt;&amp;Ropf;&lt;/mo&gt;\n  &lt;/mstyle&gt;\n&lt;/math&gt;\n\n\nMathML to LaTeX\nINFO:Translating...\nINFO:Encoding from XML declaration: UTF-8\nWARNING:Remote DTD found and network is False: replacing with local DTD\nINFO:Loading dtd and validating...\n$ {\\displaystyle {e}^{x}&gt;0\\forall x\\in \\mathbb{R} }$ \n\nASCIIMath to LaTeX\nINFO:Translating...\n\\[{e}^{x} &gt; 0 \\forall x \\in \\mathbb{R}\\] \n\nLaTeX to ASCIIMath\nINFO:Translating...\n(e)^(x) &gt; 0 AA x in RR\n</code></pre>\n<h4>From the command line</h4>\n<pre><code>py_asciimath: a simple ASCIIMath/MathML/LaTeX converter\n\nUsage:\n  py_asciimath.py &lt;EXP&gt; from &lt;ILANG&gt; to &lt;OLANG&gt;\n                        [options]\n  py_asciimath.py &lt;EXP&gt; from &lt;ILANG&gt; (-o &lt;OLANG&gt; | --output=OLANG)\n                        [options]\n  py_asciimath.py &lt;EXP&gt; (-i &lt;ILANG&gt; | --input=ILANG) to &lt;OLANG&gt;\n                        [options]\n  py_asciimath.py &lt;EXP&gt; (-i &lt;ILANG&gt; | --input=ILANG) (-o &lt;OLANG&gt; | --output=OLANG)\n                        [options]\n  py_asciimath.py from-file &lt;PATH&gt;  from &lt;ILANG&gt; to &lt;OLANG&gt;\n                                    [options]\n  py_asciimath.py from-file &lt;PATH&gt;  from &lt;ILANG&gt; (-o &lt;OLANG&gt; | --output=OLANG)\n                                    [options]\n  py_asciimath.py from-file &lt;PATH&gt;  (-i &lt;ILANG&gt; | --input=ILANG) to &lt;OLANG&gt;\n                                    [options]\n  py_asciimath.py from-file &lt;PATH&gt;  (-i &lt;ILANG&gt; | --input=ILANG) (-o &lt;OLANG&gt; | --output=OLANG)\n                                    [options]\n  py_asciimath.py (-h | --help)\n  py_asciimath.py --version\n\nOptions:\n  --dstyle                      Add display style\n  -i &lt;ILANG&gt; --input=ILANG      Input language\n                                Supported input language: asciimath, latex, mathml\n  --log                         Log the transformation process\n  --network                     Works only with ILANG=mathnml or OLANG=mathml\n                                Use network to validate XML against DTD\n  -o &lt;OLANG&gt; --output=OLANG     Output language\n                                Supported output language: asciimath, latex, mathml\n  --pprint                      Works only with OLANG=mathml. Pretty print\n  --to-file=OPATH               Save translation to OPATH file\n  --version                     Show version\n  --xml-declaration             Works only with OLANG=mathml.Add the XML\n                                declaration at the top of the XML document\n  --xml-validate=MathMLDTD      Works only with OLANG=mathml\n                                Validate against a MathML DTD\n                                MathMLDTD can be: mathml1, mathml2 or mathml3\n</code></pre>\n<p>For example, <code>py_asciimath \"sum_(i=1)^n i^3=((n(n+1))/2)^2\" from asciimath to latex</code> prints:</p>\n<pre><code>INFO:Translating...\n$\\sum_{i = 1}^{n} i^{3} = \\left(\\frac{n \\left(n + 1\\right)}{2}\\right)^{2}$\n</code></pre>\n<p>If the option <code>--log</code> is present, then it prints also every transformation of the input, so <code>py_asciimath \"e^x &gt; 0 forall x in RR\" from asciimath to latex --log</code> prints:</p>\n<pre><code>INFO:Translating...\nINFO:Calling const with args:\nINFO:   items = [Token(LETTER, 'e')]\nINFO:Calling const with args:\nINFO:   items = [Token(LETTER, 'x')]\nINFO:Calling exp_super with args:\nINFO:   items = ['e', 'x']\nINFO:Calling remove_parenthesis with args:\nINFO:   s = 'x'\nINFO:Calling symbol with args:\nINFO:   items = [Token(MORETHAN, '&gt;')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['&gt;']\nINFO:Calling const with args:\nINFO:   items = [Token(NUMBER, '0')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['0']\nINFO:Calling symbol with args:\nINFO:   items = [Token(FORALL, 'forall')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['\\\\forall']\nINFO:Calling const with args:\nINFO:   items = [Token(LETTER, 'x')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['x']\nINFO:Calling symbol with args:\nINFO:   items = [Token(IN, 'in')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['\\\\in']\nINFO:Calling symbol with args:\nINFO:   items = [Token(RR, 'RR')]\nINFO:Calling exp_interm with args:\nINFO:   items = ['\\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['\\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['\\\\in', '\\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['x', '\\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['\\\\forall', 'x \\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['0', '\\\\forall x \\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['&gt;', '0 \\\\forall x \\\\in \\\\mathbb{R}']\nINFO:Calling exp with args:\nINFO:   items = ['e^{x}', '&gt; 0 \\\\forall x \\\\in \\\\mathbb{R}']\n$e^{x} &gt; 0 \\forall x \\in \\mathbb{R}$\n</code></pre>\n<h2>ASCIIMath grammar</h2>\n<p>The grammar used to parse an ASCIIMath input is:</p>\n<pre><code>start: i start* -&gt; exp\ni: s -&gt; exp_interm\n    | s \"/\" s -&gt; exp_frac\n    | s \"_\" s -&gt; exp_under\n    | s \"^\" s -&gt; exp_super\n    | s \"_\" s \"^\" s -&gt; exp_under_super\ns: l start? r -&gt; exp_par\n    | u s -&gt; exp_unary\n    | b s s -&gt; exp_binary\n    | asciimath -&gt; symbol\n    | c -&gt; const\n    | QS -&gt; q_str\nc: /d[A-Za-z]/ // derivatives\n  | NUMBER\n  | LETTER\nl: \"(\" | \"(:\" | \"[\" | \"{\" | \"{:\" | \"|:\" | \"||:\" | \"langle\" | \"&lt;&lt;\" // left parenthesis\nr: \")\" | \":)\" | \"]\" | \"}\" | \":}\" | \":|\" | \":||\" | \"rangle\" | \"&gt;&gt;\" // right parenthesis\nb: {} // asciimath binary functions symbols\nu: {} // asciimath unary functions symbols\nasciimath: {} // asciimath symbols\nQS: \"\\\"\" /(?&lt;=\").+(?=\")/ \"\\\"\" // Quoted String\n</code></pre>\n<p>For the complete list of symbols, please refer to <a href=\"http://asciimath.org/#syntax\" rel=\"nofollow\">http://asciimath.org/#syntax</a>. The only symbol that I've added is <code>dstyle</code>, that stands for <code>displaystyle</code> as a unary function.</p>\n<h2>LaTeX grammar</h2>\n<p>The grammar used to parse a LaTeX input is:</p>\n<pre><code>start: \"\\[\" exp \"\\]\" -&gt; exp\n    | \"$$\" exp \"$$\" -&gt; exp\n    | \"$\" exp \"$\" -&gt; exp\n    | exp -&gt; exp\nexp: i exp* -&gt; exp\ni: s -&gt; exp_interm\n    | s \"_\" s -&gt; exp_under\n    | s \"^\" s -&gt; exp_super\n    | s \"_\" s \"^\" s -&gt; exp_under_super\ns: l exp? r -&gt; exp_par\n    | \"\\left\" (l | \".\" | \"\\vert\" | \"\\mid\") start? \"\\right\" (r | \".\" | \"\\vert\" | \"\\mid\") -&gt; exp_par\n    | \"\\begin{matrix}\" row_mat (\"\\\\\" row_mat?)* \"\\end{matrix}\" -&gt; exp_mat\n    | \"{\" i+ \"}\" -&gt; exp\n    | u \"{\" exp \"}\" -&gt; exp_unary\n    | b \"{\" exp \"}\" \"{\" exp \"}\" -&gt; exp_binary\n    | \"\\sqrt\" \"[\" i+ \"]\" \"{{\" exp \"}}\" -&gt; exp_binary\n    | latex -&gt; symbol\n    | c -&gt; const\nc: NUMBER\n    | LETTER\nrow_mat: exp (\"&amp;\" exp?)* -&gt; row_mat\nl: \"(\" | \"[\" | \"\\{\" | \"\\langle\" | \"\\lVert\" // left parenthesis\nr: \")\" | \"]\" | \"\\}\" | \"\\rangle\" | \"\\rVert\" // right parenthesis\nb: {} // binary functions\nu: {} // unary functions\nlatex: {} // LaTeX symbols\n</code></pre>\n<p>Be careful that not all the LaTeX symbols are included in the grammar: please fill in an issue if you find that some symbols are missing</p>\n<h2>Rendering (matrices and systems of equations)</h2>\n<p>For a text to be rendered as a matrix must have a structure like</p>\n<div>\n    <code>L '[' ... (, ...)* ']', '[' ... (, ...)* ']' (, '[' ... (, ...)* ']' )* R</code> \n    <br>\n    or\n    <br>\n    <code>L '(' ... (, ...)* ')', '(' ... (, ...)* ')' (, '(' ... (, ...)* ')' )* R</code>\n</div>\n<p>that is:</p>\n<ul>\n<li>It must be delimited by a left (<code>L</code>) and right (<code>R</code>) parenthesis</li>\n<li>Every row can be separated by <code>[]</code> XOR <code>()</code> (if one starts with <code>[]</code>, every row will be recognized with the same parenthesis, same for <code>()</code>), followed by <code>,</code> and possibly another row</li>\n<li>Every matrix must contain at least two rows</li>\n<li>Every rows contains zero or more columns, where <code>...</code> can be any ASCIIMath expression</li>\n<li>Every row must contain the same number of columns</li>\n</ul>\n<p>Since <code>L</code> and <code>R</code> can be any left or right parenthesis, and every matrices must have the same number of columns, to render a system of equation one can write something like <code>{[(root n x)/(x) &lt;= 4], [x^2=e^x]:}</code>.<br>\nOn the other hand a matrix can be somenthing like <code>[[(root n x)/(x) &lt;= 4, int x dx], [x^2=e^x, lim_(x to infty) 1 / (x^2)]]</code>.</p>\n<h2>Rendering (LaTeX)</h2>\n<p>A parsed ASCIIMath string is rendered as follows:</p>\n<ul>\n<li><code>latex</code>, <code>u</code> and <code>c</code> symbols are converted to their LaTeX equivalent</li>\n<li><code>text</code> and <code>ul</code> correspond to the <code>\\textrm</code> and <code>\\underline</code> functions</li>\n<li><code>bb</code>, <code>bbb</code>, <code>cc</code>, <code>tt</code>, <code>fr</code> and <code>sf</code> correspond to the <code>\\boldsymbol</code>, <code>\\mathbb</code>, <code>\\mathcal</code>, <code>\\texttt</code>, <code>\\mathfrak</code> and <code>\\textsf</code> functions</li>\n<li><code>frac</code> is rendered as a fraction, <code>root n x</code> as the n-th root of x and <code>stackrel x y</code> displays x upon y</li>\n<li>Any text placed between a pair of <code>\"</code> is rendered in the same font as normal text.</li>\n<li><code>/</code> stands for a fraction. The <code>_</code> and <code>^</code> tokens have the same behaviour as in LaTeX but the subscript must be placed before the superscript if they are both present</li>\n</ul>\n<h4>Delimiters</h4>\n<p>Left and right delimiters are preceded by the <code>\\left</code> and <code>\\right</code> commands to be well-sized. <code>(:</code> and <code>:)</code> are chevrons (angle parenthesis). <code>{:</code> and <code>:}</code> are invisible delimiters like LaTeX's {. <code>|:</code> is converted to <code>\\lvert</code> , while <code>||:</code> is converted to <code>\\lVert</code>. The other delimiters are rendered as expected.<br>\nUseless delimiters are automatically removed in expressions like:</p>\n<ul>\n<li><code>(...)/(...)</code></li>\n<li><code>(...)_(...)</code>, <code>(...)^(...)</code> and the combination of sub and superscript</li>\n<li><code>u (...)</code>, <code>b (...) (...)</code> where u and b are unary and binary operators</li>\n</ul>\n<p>If you want them to be rendered, you have to double them, for example: <code>((x+y))/2</code> or <code>{: (x+y) :}/2</code>.</p>\n<h2>Rendering (MathML)</h2>\n<p>The translation follows the MathML specification at <a href=\"https://www.w3.org/TR/MathML3/\" rel=\"nofollow\">https://www.w3.org/TR/MathML3/</a>.</p>\n<h2>Known issues</h2>\n<p>The MathML1 DTD validation will fail when one wish to apply a font style</p>\n\n          </div>"}, "last_serial": 7076659, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e689fad71d55c36991c1f1f93a11be81", "sha256": "43e10d16cf4384667995748feaf5343b0e383d7506b54c1214d99e1d6472273f"}, "downloads": -1, "filename": "py_asciimath-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e689fad71d55c36991c1f1f93a11be81", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14654, "upload_time": "2020-04-06T12:41:16", "upload_time_iso_8601": "2020-04-06T12:41:16.182831Z", "url": "https://files.pythonhosted.org/packages/14/a0/c02952cddf1b14c5cf1639b02e64b011b732ce1892f05c740c9ab90ad674/py_asciimath-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "167bbce66facc3ecf4c6b0aab4661283", "sha256": "118f8835312a45db2cb2cb66f49c772046c5c7b985030022103dcb14b1a0b219"}, "downloads": -1, "filename": "py_asciimath-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "167bbce66facc3ecf4c6b0aab4661283", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14954, "upload_time": "2020-04-06T15:21:54", "upload_time_iso_8601": "2020-04-06T15:21:54.024605Z", "url": "https://files.pythonhosted.org/packages/5d/a3/83ddc2d911696a10151b08de1aef9e85793eb0963868a295aeb13ac62c09/py_asciimath-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1e2f460367ec626c7813a98660524c5d", "sha256": "27cec80871c2c7ea431fb3a311519afcb89837b12314e05bc798e33ba4651ab1"}, "downloads": -1, "filename": "py_asciimath-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1e2f460367ec626c7813a98660524c5d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 5808, "upload_time": "2020-04-06T18:07:05", "upload_time_iso_8601": "2020-04-06T18:07:05.621694Z", "url": "https://files.pythonhosted.org/packages/8e/dd/1f42cf4b036fa12e44ba6617e076891fa157f18c48d6d122a10968b3e109/py_asciimath-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "03184653f8169ee932ee7d0bd81ed863", "sha256": "04db8eaf4e03577b3f97555413c0b991d52781f887aad644c5ad968fe3a19758"}, "downloads": -1, "filename": "py_asciimath-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03184653f8169ee932ee7d0bd81ed863", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14716, "upload_time": "2020-04-06T18:32:47", "upload_time_iso_8601": "2020-04-06T18:32:47.347449Z", "url": "https://files.pythonhosted.org/packages/d5/f8/da73a79fdb2649eeb51e67387c6a69de766c3effcd2c20fe24e20baf0e60/py_asciimath-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "11b63c6ee2e0eb3325bdbecbd47a286e", "sha256": "87563f8027df1ab322592c2a584bed6d5cc1e62306689b83a4dfd2a6896dc8e5"}, "downloads": -1, "filename": "py_asciimath-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11b63c6ee2e0eb3325bdbecbd47a286e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 7007, "upload_time": "2020-04-07T09:47:14", "upload_time_iso_8601": "2020-04-07T09:47:14.164758Z", "url": "https://files.pythonhosted.org/packages/b1/aa/36a04c0c9625e01b20f758c6cf36d5150a4693240920a0e7c28eda8d04ed/py_asciimath-0.0.5-py2.py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "a8d6be9195504a254f111c0879d1ad14", "sha256": "32e2e21ddc273cfdd7e513740ec503147cc62107c341ee3e535884d88f541510"}, "downloads": -1, "filename": "py_asciimath-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8d6be9195504a254f111c0879d1ad14", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 7599, "upload_time": "2020-04-07T10:24:35", "upload_time_iso_8601": "2020-04-07T10:24:35.166062Z", "url": "https://files.pythonhosted.org/packages/97/56/e6f7dc4b704f8cefdcb7cead012d6d4834624dea6a9ae4713a6044d37dff/py_asciimath-0.0.7-py2.py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "eda99179d2d167611de23810882ea67f", "sha256": "09c287962cd1f76d3d6dbfe607d7d96a360bf5c5bc586644a978c0df3dc6944d"}, "downloads": -1, "filename": "py_asciimath-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eda99179d2d167611de23810882ea67f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 7655, "upload_time": "2020-04-07T10:38:20", "upload_time_iso_8601": "2020-04-07T10:38:20.862649Z", "url": "https://files.pythonhosted.org/packages/1c/98/0a1111ded0b3b790fee06ac8336f6a886a23688c3479b79c23d7bf5910e6/py_asciimath-0.0.8-py2.py3-none-any.whl", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "613cf30549db7ad2332100582136e4e5", "sha256": "c51425e252ecee81a79333e8814aa7953238f78544a1da4908e52bc9ef1d6634"}, "downloads": -1, "filename": "py_asciimath-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "613cf30549db7ad2332100582136e4e5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 16939, "upload_time": "2020-04-07T10:49:21", "upload_time_iso_8601": "2020-04-07T10:49:21.332545Z", "url": "https://files.pythonhosted.org/packages/43/1a/67b94baaca2b0a462cddad72515b179d9e53e9cadd31d4167d247a99320c/py_asciimath-0.0.9-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "a8e4362730b206edc307e52d823b4555", "sha256": "b0ac8da5a5c015528bb95da98cea087c4ebe73173dbee2dbdbdf7ffff6283c4c"}, "downloads": -1, "filename": "py_asciimath-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8e4362730b206edc307e52d823b4555", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 16880, "upload_time": "2020-04-07T11:04:18", "upload_time_iso_8601": "2020-04-07T11:04:18.734162Z", "url": "https://files.pythonhosted.org/packages/6c/40/2fdc74d86e5650db3dcbe2d840d13b5a19ff795b0d72a79a8a587c0585a1/py_asciimath-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "50496f9b3d72c9dd5797776ee099ee66", "sha256": "440692f16cac2f882c142426ba9bb6a8078160fff7c7a7a01607c074f60e2b2f"}, "downloads": -1, "filename": "py_asciimath-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "50496f9b3d72c9dd5797776ee099ee66", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17823, "upload_time": "2020-04-07T16:18:57", "upload_time_iso_8601": "2020-04-07T16:18:57.826260Z", "url": "https://files.pythonhosted.org/packages/fd/a2/d88409bb197cedd676c5bcf415bb2c3e723c94a0b5919fd3c3d1d4bc8af8/py_asciimath-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1fe495d4a25d331ef9bc79922fcfcac6", "sha256": "1cf8fc04960dad3d2ca6d7e3b2878306b064533069f4e57a90c682ba7c0ba61e"}, "downloads": -1, "filename": "py_asciimath-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1fe495d4a25d331ef9bc79922fcfcac6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17858, "upload_time": "2020-04-07T16:30:49", "upload_time_iso_8601": "2020-04-07T16:30:49.391374Z", "url": "https://files.pythonhosted.org/packages/77/e5/3a708ea0fe91e6ee46fdc1b6926434e8fe21826a1b9a5d9fdd4e287fc705/py_asciimath-0.1.2-py2.py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "25b371d024cee15c4065f2d2e00dcfb8", "sha256": "a8b964f5d3422f3f17fcc37a18841eb0ff9fa5869cbc513b020f35f33b22dce5"}, "downloads": -1, "filename": "py_asciimath-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25b371d024cee15c4065f2d2e00dcfb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25544, "upload_time": "2020-04-11T13:26:06", "upload_time_iso_8601": "2020-04-11T13:26:06.615870Z", "url": "https://files.pythonhosted.org/packages/22/34/e4c269b75f7d821e73a0bad3a6d427c870e7b629c6be0728d5c2fd6208b7/py_asciimath-0.1.4-py2.py3-none-any.whl", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "337b5a69e7ca0f634d9c054e92ad3abf", "sha256": "95ab5cbc2b02b4e4f1288ecda99ff698909fd2efa2605c2e0285ecca299d926f"}, "downloads": -1, "filename": "py_asciimath-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "337b5a69e7ca0f634d9c054e92ad3abf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 315814, "upload_time": "2020-04-11T13:43:14", "upload_time_iso_8601": "2020-04-11T13:43:14.730631Z", "url": "https://files.pythonhosted.org/packages/f0/8e/7a85c99f2cc933800670dcf158bc6f76394c33dceead5e13c8b7e74bc3a6/py_asciimath-0.1.5-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "de88ef0b863d72993fb25d3ef65c9ee9", "sha256": "1d44b8a3dfcd2fe94f9d03d99b37f66143805e19bc449be12c2332c806c20453"}, "downloads": -1, "filename": "py_asciimath-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de88ef0b863d72993fb25d3ef65c9ee9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 342144, "upload_time": "2020-04-13T22:46:51", "upload_time_iso_8601": "2020-04-13T22:46:51.918340Z", "url": "https://files.pythonhosted.org/packages/f3/dd/010994b50f580c6f78ba45d3ab3a40d23479792e7ce202767172d79cd47a/py_asciimath-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a4c2f92b17fa56a7df726622a368d3ae", "sha256": "26a68580b3ae8bdd6aed619c1a8642acc0db1f3876f2d39e0d4efa39485dbaff"}, "downloads": -1, "filename": "py_asciimath-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a4c2f92b17fa56a7df726622a368d3ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 343102, "upload_time": "2020-04-14T14:14:54", "upload_time_iso_8601": "2020-04-14T14:14:54.915648Z", "url": "https://files.pythonhosted.org/packages/74/10/62343703f36231e5bd9c2983db5d44fbd80003414ce05f0a9162b9a906a5/py_asciimath-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "8247e8d31363c7bfb87de25e05471048", "sha256": "1ddbd91c0a0809fc831802cf3937d8d8748e4047af1dab139aea1951a255344e"}, "downloads": -1, "filename": "py_asciimath-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8247e8d31363c7bfb87de25e05471048", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 345021, "upload_time": "2020-04-15T17:03:44", "upload_time_iso_8601": "2020-04-15T17:03:44.935437Z", "url": "https://files.pythonhosted.org/packages/d9/bc/09ce748dbc2c1c082e9a25f144f014fa75fe6e54ecfe2305d3953e6992af/py_asciimath-0.2.2-py2.py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "c38c11c141a5338fc7c5cfd27c54c67a", "sha256": "9899f1caa993ada35998626a4b7d551925d4d40487d49d0162cfff8b1bab81b9"}, "downloads": -1, "filename": "py_asciimath-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c38c11c141a5338fc7c5cfd27c54c67a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 345664, "upload_time": "2020-04-16T12:35:51", "upload_time_iso_8601": "2020-04-16T12:35:51.927855Z", "url": "https://files.pythonhosted.org/packages/d1/e7/421b1301bba411133fa11ac439a26f9b3a6ca0cd6bbd5a33fe79bea8feae/py_asciimath-0.2.3-py2.py3-none-any.whl", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "cfe0f55405a0c203563cdf4b46dccf7f", "sha256": "4ac705a41251f799b7fbc6cdf5e4383116248420d46928d4d69bcc5c75ceb18f"}, "downloads": -1, "filename": "py_asciimath-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cfe0f55405a0c203563cdf4b46dccf7f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 346624, "upload_time": "2020-04-16T22:01:29", "upload_time_iso_8601": "2020-04-16T22:01:29.636363Z", "url": "https://files.pythonhosted.org/packages/12/c6/1f8d0bb59890dd46b94f1456ba25965b3919ede9e7905573a42563f0443b/py_asciimath-0.2.4-py2.py3-none-any.whl", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "c178f49085ba3d8abab5b2bbf95fba72", "sha256": "9dc0d888bb833f9c4984d89412826c1f08c1a02d033f3149f3bb81e9fc37f035"}, "downloads": -1, "filename": "py_asciimath-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c178f49085ba3d8abab5b2bbf95fba72", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 346693, "upload_time": "2020-04-18T16:50:28", "upload_time_iso_8601": "2020-04-18T16:50:28.532731Z", "url": "https://files.pythonhosted.org/packages/24/c7/5bc2b61f5956d270557a2dca5ff80cdb126a69e13d153e80fbdbec394297/py_asciimath-0.2.5-py2.py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "feda77644fb87fe5bcc7030cc1672f13", "sha256": "36aa21779a1c4710ebcf86763a16acebd61616f875427807fe2156e7ff0bf1e0"}, "downloads": -1, "filename": "py_asciimath-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "feda77644fb87fe5bcc7030cc1672f13", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 353953, "upload_time": "2020-04-22T13:43:33", "upload_time_iso_8601": "2020-04-22T13:43:33.390179Z", "url": "https://files.pythonhosted.org/packages/3d/32/a910ae5d446c7d3f3d821ecc887d6c2a14a9afe45017aa8e96923b0e4964/py_asciimath-0.3.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "feda77644fb87fe5bcc7030cc1672f13", "sha256": "36aa21779a1c4710ebcf86763a16acebd61616f875427807fe2156e7ff0bf1e0"}, "downloads": -1, "filename": "py_asciimath-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "feda77644fb87fe5bcc7030cc1672f13", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 353953, "upload_time": "2020-04-22T13:43:33", "upload_time_iso_8601": "2020-04-22T13:43:33.390179Z", "url": "https://files.pythonhosted.org/packages/3d/32/a910ae5d446c7d3f3d821ecc887d6c2a14a9afe45017aa8e96923b0e4964/py_asciimath-0.3.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:10:11 2020"}