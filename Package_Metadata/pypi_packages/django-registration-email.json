{"info": {"author": "Martin Brochhaus", "author_email": "martin.brochhaus@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Important\n=========\n\nThis app has been discontinued due to the give-up of django-registration. Also there are a lot of well developed and more extensive alternatives on the market.\n\nWhy don't you check out ``django-allauth``: https://github.com/pennersr/django-allauth\n\nIt's already integrated in our project template (incl. templates & settings): https://github.com/bitmazk/django-project-template/\nIt's configured the way we used this app.\n\ndjango-registration-email\n==========================\n\nWe use\n[django-registration](https://bitbucket.org/ubernostrum/django-registration/overview)\nin almost all our projects. However, we don't like Django's limited username\nand would like to allow our users to sign up via email.\n\nThis project provides a custom authentication backend which allows users to\nauthenticate via email. We also provide an EmailRegistrationForm which\nchecks if an email has already been taken.\n\nSince we still have to store a username and since emails can easily be longer\nthan 30 characters, the username will be computed as a md5 hexdigest of the\nemail address.\n\nWe included a ``urls.py`` that overrides all URLs of django-registration\nand Django's auth with a clean and sane structure and you will find a default\nset of all necessary templates.\n\nUsage\n======\n\nInstall this package::\n\n    pip install -e git://github.com/bitmazk/django-registration-email#egg=registration_email\n\nAdd ``registration`` and ``registration_email`` to your ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = [\n        # all your other apps\n        'registration',\n        'registration_email',\n    ]\n\nUpdate your ``urls.py``::\n\n    url(r'^accounts/', include('registration_email.backends.default.urls')),\n\nAdd some settings to your ``settings.py``::\n\n    ACCOUNT_ACTIVATION_DAYS = 7\n    AUTHENTICATION_BACKENDS = (\n        'registration_email.auth.EmailBackend',\n    )\n    LOGIN_REDIRECT_URL = '/'\n\nRun ``syncdb``::\n\n    ./manage.py syncdb\n\nSettings\n========\n\ndjango-registration-email introduces a new setting:\n\nREGISTRATION_EMAIL_ACTIVATE_SUCCESS_URL\n---------------------------------------\n\nDefault: ``lambda request, user: '/'``\n\nFunction to return the URL to redirect to after a successful account\nactivation. If you leave this at ``lambda request, user: '/'`` it will direct\nto your base URL.\n\nREGISTRATION_EMAIL_REGISTER_SUCCESS_URL\n---------------------------------------\n\nDefault: ``lambda request, user: '/'``\n\nFunction to return the URL to redirect to after a successful account\nregistration. If you leave this at ``lambda request, user: '/'`` it will direct\nto your base URL.\n\nHow to use a custom form\n========================\n\nLet's say you want to collect the user's first name and last name when he\nregisters. In order to achieve that, you need to do the following:\n\n__1. Create a custom form__\n\nCreate a new app `my_registration` in your project and give it a `forms.py`\nwhere you override our `EmailRegistrationForm` and your desired extra\nfields:\n\n    from django import forms\n    from registration_email.forms import EmailRegistrationForm\n\n    class CustomEmailRegistrationForm(EmailRegistrationForm):\n        first_name = forms.CharField()\n        last_name = forms.CharField()\n\nDo NOT override the form's `save()` method.\n\n__2. Override the URL__\n\nNow you need to tell the registration view that it is supposed to use the\ncustom form:\n\n    # your main urls.py\n    ...\n    from django.conf import settings\n    from registration.backends.simple.views import RegistrationView\n    from my_registration.forms import CustomEmailRegistrationForm\n\n    urlpatterns = [\n        ...\n        url(\n            r'^accounts/register/$',\n            RegistrationView.as_view(\n                template_name='registration/registration_form.html',\n                form_class=CustomEmailRegistrationForm,\n                get_success_url=getattr(\n                    settings, 'REGISTRATION_EMAIL_REGISTER_SUCCESS_URL',\n                    lambda request, user: '/'),\n            ),\n            name='registration_register',\n        ),\n\n        url(r'^accounts/', include('registration_email.backends.default.urls')),\n        ...\n    ]\n\n__3. Create a signal handler__\n\nIn the `urls.py` above I'm using the `SimpleBackend`. When you have a look\nat that [backend](https://github.com/nathanborror/django-registration/blob/master/registration/backends/simple/__init__.py#L30)\nyou will see that the backend sends a signal after creating and logging in the\nuser. The signal will get all parameters that we need in order to access the\ndata that has been validated and sent by the form, so let's build a signal\nhandler:\n\n    # in my_registration.models.py\n    from django.dispatch import receiver\n    from registration.signals import user_registered\n\n    @receiver(user_registered)\n    def user_registered_handler(sender, user, request, **kwargs):\n        user.first_name = request.POST.get('first_name')\n        user.last_name = request.POST.get('last_name')\n        user.save()\n\nThis method has the drawback that you save the user two times in a row. If\nyou have concerns about performance you would have to create your own\n`my_registration.backends.CustomRegistrationBackend` class. That class would\ninherit `registration.backends.simple.SimpleBackend` and override the\n`register` method.\n\nBut really, we are talking about registration here, I can't imagine how saving\nthe user twice could do any harm.\n\n\nTroubleshooting\n================\n\nIf you had another value for ``AUTHENTICATION_BACKENDS`` in your\n``settings.py`` before it might be that it is saved in your ``django_session``\ntable. I found no other way around this than to delete the rows in that table.\n\nTODO\n=====\n\n* Password reset link points to original django template\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bitmazk/django-registration-email", "keywords": "django", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-registration-email", "package_url": "https://pypi.org/project/django-registration-email/", "platform": "", "project_url": "https://pypi.org/project/django-registration-email/", "project_urls": {"Homepage": "http://github.com/bitmazk/django-registration-email"}, "release_url": "https://pypi.org/project/django-registration-email/0.10/", "requires_dist": null, "requires_python": "", "summary": "Provides a custom authentication backend so that users can signup to the site via their email address instead of a username. Also provides a set of standard templates and sane URL mappings for the whole registration workflow.\n", "version": "0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            Important<br>=========<br><br>This app has been discontinued due to the give-up of django-registration. Also there are a lot of well developed and more extensive alternatives on the market.<br><br>Why don't you check out ``django-allauth``: https://github.com/pennersr/django-allauth<br><br>It's already integrated in our project template (incl. templates &amp; settings): https://github.com/bitmazk/django-project-template/<br>It's configured the way we used this app.<br><br>django-registration-email<br>==========================<br><br>We use<br>[django-registration](https://bitbucket.org/ubernostrum/django-registration/overview)<br>in almost all our projects. However, we don't like Django's limited username<br>and would like to allow our users to sign up via email.<br><br>This project provides a custom authentication backend which allows users to<br>authenticate via email. We also provide an EmailRegistrationForm which<br>checks if an email has already been taken.<br><br>Since we still have to store a username and since emails can easily be longer<br>than 30 characters, the username will be computed as a md5 hexdigest of the<br>email address.<br><br>We included a ``urls.py`` that overrides all URLs of django-registration<br>and Django's auth with a clean and sane structure and you will find a default<br>set of all necessary templates.<br><br>Usage<br>======<br><br>Install this package::<br><br>    pip install -e git://github.com/bitmazk/django-registration-email#egg=registration_email<br><br>Add ``registration`` and ``registration_email`` to your ``INSTALLED_APPS``::<br><br>    INSTALLED_APPS = [<br>        # all your other apps<br>        'registration',<br>        'registration_email',<br>    ]<br><br>Update your ``urls.py``::<br><br>    url(r'^accounts/', include('registration_email.backends.default.urls')),<br><br>Add some settings to your ``settings.py``::<br><br>    ACCOUNT_ACTIVATION_DAYS = 7<br>    AUTHENTICATION_BACKENDS = (<br>        'registration_email.auth.EmailBackend',<br>    )<br>    LOGIN_REDIRECT_URL = '/'<br><br>Run ``syncdb``::<br><br>    ./manage.py syncdb<br><br>Settings<br>========<br><br>django-registration-email introduces a new setting:<br><br>REGISTRATION_EMAIL_ACTIVATE_SUCCESS_URL<br>---------------------------------------<br><br>Default: ``lambda request, user: '/'``<br><br>Function to return the URL to redirect to after a successful account<br>activation. If you leave this at ``lambda request, user: '/'`` it will direct<br>to your base URL.<br><br>REGISTRATION_EMAIL_REGISTER_SUCCESS_URL<br>---------------------------------------<br><br>Default: ``lambda request, user: '/'``<br><br>Function to return the URL to redirect to after a successful account<br>registration. If you leave this at ``lambda request, user: '/'`` it will direct<br>to your base URL.<br><br>How to use a custom form<br>========================<br><br>Let's say you want to collect the user's first name and last name when he<br>registers. In order to achieve that, you need to do the following:<br><br>__1. Create a custom form__<br><br>Create a new app `my_registration` in your project and give it a `forms.py`<br>where you override our `EmailRegistrationForm` and your desired extra<br>fields:<br><br>    from django import forms<br>    from registration_email.forms import EmailRegistrationForm<br><br>    class CustomEmailRegistrationForm(EmailRegistrationForm):<br>        first_name = forms.CharField()<br>        last_name = forms.CharField()<br><br>Do NOT override the form's `save()` method.<br><br>__2. Override the URL__<br><br>Now you need to tell the registration view that it is supposed to use the<br>custom form:<br><br>    # your main urls.py<br>    ...<br>    from django.conf import settings<br>    from registration.backends.simple.views import RegistrationView<br>    from my_registration.forms import CustomEmailRegistrationForm<br><br>    urlpatterns = [<br>        ...<br>        url(<br>            r'^accounts/register/$',<br>            RegistrationView.as_view(<br>                template_name='registration/registration_form.html',<br>                form_class=CustomEmailRegistrationForm,<br>                get_success_url=getattr(<br>                    settings, 'REGISTRATION_EMAIL_REGISTER_SUCCESS_URL',<br>                    lambda request, user: '/'),<br>            ),<br>            name='registration_register',<br>        ),<br><br>        url(r'^accounts/', include('registration_email.backends.default.urls')),<br>        ...<br>    ]<br><br>__3. Create a signal handler__<br><br>In the `urls.py` above I'm using the `SimpleBackend`. When you have a look<br>at that [backend](https://github.com/nathanborror/django-registration/blob/master/registration/backends/simple/__init__.py#L30)<br>you will see that the backend sends a signal after creating and logging in the<br>user. The signal will get all parameters that we need in order to access the<br>data that has been validated and sent by the form, so let's build a signal<br>handler:<br><br>    # in my_registration.models.py<br>    from django.dispatch import receiver<br>    from registration.signals import user_registered<br><br>    @receiver(user_registered)<br>    def user_registered_handler(sender, user, request, **kwargs):<br>        user.first_name = request.POST.get('first_name')<br>        user.last_name = request.POST.get('last_name')<br>        user.save()<br><br>This method has the drawback that you save the user two times in a row. If<br>you have concerns about performance you would have to create your own<br>`my_registration.backends.CustomRegistrationBackend` class. That class would<br>inherit `registration.backends.simple.SimpleBackend` and override the<br>`register` method.<br><br>But really, we are talking about registration here, I can't imagine how saving<br>the user twice could do any harm.<br><br><br>Troubleshooting<br>================<br><br>If you had another value for ``AUTHENTICATION_BACKENDS`` in your<br>``settings.py`` before it might be that it is saved in your ``django_session``<br>table. I found no other way around this than to delete the rows in that table.<br><br>TODO<br>=====<br><br>* Password reset link points to original django template<br>\n          </div>"}, "last_serial": 3102981, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7ef9235a29f17fbfb6c6ed15b95df5a0", "sha256": "3ba83e71ac8f29f964940c0743c85f8e730fefbe80a70d9083819ed265374164"}, "downloads": -1, "filename": "django-registration-email-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7ef9235a29f17fbfb6c6ed15b95df5a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9441, "upload_time": "2012-09-27T16:15:41", "upload_time_iso_8601": "2012-09-27T16:15:41.417850Z", "url": "https://files.pythonhosted.org/packages/53/f2/22004bdf612ed4e224e70a0e7dbb3c7c488084804b21759ec2c1a1b9ed5c/django-registration-email-0.1.0.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "63fb468a5729d5e1753979c99a1428c3", "sha256": "9bc6666c14374574e0dc0dc4f8cd40270ed98a7ad1a85c405ce386e05b801277"}, "downloads": -1, "filename": "django-registration-email-0.10.tar.gz", "has_sig": false, "md5_digest": "63fb468a5729d5e1753979c99a1428c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16845, "upload_time": "2017-08-17T09:28:41", "upload_time_iso_8601": "2017-08-17T09:28:41.225558Z", "url": "https://files.pythonhosted.org/packages/b2/53/7190b97efc7fdb4062b5000b6967f3e9da6c2643cf67f8f36118487e39c3/django-registration-email-0.10.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f5694ae1a05e191d4cb9d934c2a42842", "sha256": "7c931de1236400c00f70e8db9e900f82e38c487be0f021f074346ace063fe941"}, "downloads": -1, "filename": "django-registration-email-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f5694ae1a05e191d4cb9d934c2a42842", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9822, "upload_time": "2012-09-27T17:10:41", "upload_time_iso_8601": "2012-09-27T17:10:41.545963Z", "url": "https://files.pythonhosted.org/packages/41/2d/86f53f62f254e2f0b6a208d59193f19f46682fc8f59c4b38d115755db4ba/django-registration-email-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "326ddbbace52178221c58626ba47ab08", "sha256": "18073f376b96be7c6eba6981d7b0a3cac3da866b8a7ae465ad6f5f6666d36841"}, "downloads": -1, "filename": "django-registration-email-0.2.1.tar.gz", "has_sig": false, "md5_digest": "326ddbbace52178221c58626ba47ab08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9889, "upload_time": "2012-10-17T11:55:26", "upload_time_iso_8601": "2012-10-17T11:55:26.299636Z", "url": "https://files.pythonhosted.org/packages/ac/5b/8ee57de95f649233520d02a705d52d2badd8de9bab0c84467160ddd852ba/django-registration-email-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "0b0e5bc4d488c7409c811a35a3223b23", "sha256": "d997802dd82b3d34ff3fcce69893eddd9458e22022d91a32708080216770d1d0"}, "downloads": -1, "filename": "django-registration-email-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0b0e5bc4d488c7409c811a35a3223b23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8738, "upload_time": "2012-11-02T05:42:46", "upload_time_iso_8601": "2012-11-02T05:42:46.317007Z", "url": "https://files.pythonhosted.org/packages/49/d3/4ac741296dc9066f34dc1a6f6fcd60fb643ce878633483406260e363a7ae/django-registration-email-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "7fb46550ca580731d7d3827de4d42886", "sha256": "ef2376fb867bca6d4efa5a8c246c3c341fe0437f11116731881d996412caba26"}, "downloads": -1, "filename": "django-registration-email-0.2.3.tar.gz", "has_sig": false, "md5_digest": "7fb46550ca580731d7d3827de4d42886", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8815, "upload_time": "2012-12-26T06:59:55", "upload_time_iso_8601": "2012-12-26T06:59:55.604582Z", "url": "https://files.pythonhosted.org/packages/d9/71/4337b90556040f11fba7c64465b206fde91800b4cfc9f2aa13fa83696598/django-registration-email-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "68b5d4507411d5e68a4949ac2bfd40e1", "sha256": "104411f9685a1e64c6ca5438b29708acfb40840c151f64d9f0b9a0be9538791e"}, "downloads": -1, "filename": "django-registration-email-0.2.4.tar.gz", "has_sig": false, "md5_digest": "68b5d4507411d5e68a4949ac2bfd40e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8866, "upload_time": "2012-12-27T13:13:55", "upload_time_iso_8601": "2012-12-27T13:13:55.757766Z", "url": "https://files.pythonhosted.org/packages/55/76/e9ba5bd5bd992c37c547369ef4222bb3edd6204673d749a0bbcc366da45b/django-registration-email-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "aae364d2ded205e9ed29d24ac8b27d46", "sha256": "fdbdce5b2a3d6c2ee23854ad1aefdbd40112f0aa109f32dbb029b630386b170d"}, "downloads": -1, "filename": "django-registration-email-0.3.0.tar.gz", "has_sig": false, "md5_digest": "aae364d2ded205e9ed29d24ac8b27d46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8916, "upload_time": "2013-01-09T07:49:44", "upload_time_iso_8601": "2013-01-09T07:49:44.932012Z", "url": "https://files.pythonhosted.org/packages/95/0e/d4c3bc6b1c3f0ac162d79579e4871102b87134fc38dc06936416905fd0d9/django-registration-email-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "219c1f0bd602d3552af99660919cc31d", "sha256": "f71bcac786566b33d425c50d3f6dc151787fba975cc8d7a13b5daddcf54efe62"}, "downloads": -1, "filename": "django-registration-email-0.4.0.tar.gz", "has_sig": false, "md5_digest": "219c1f0bd602d3552af99660919cc31d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9099, "upload_time": "2013-01-25T06:29:47", "upload_time_iso_8601": "2013-01-25T06:29:47.112620Z", "url": "https://files.pythonhosted.org/packages/b1/0f/b4061d1cb427378ffea3cd6749e4f1f39b10d7b0991eccda1eb606bd926b/django-registration-email-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5f70e13379e7d3ddff37dc213bb4a790", "sha256": "8536ff206dbcd1fa0bb3946d3e38662d403f306d6b22b8d76dda4d0904b42c5a"}, "downloads": -1, "filename": "django-registration-email-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5f70e13379e7d3ddff37dc213bb4a790", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9128, "upload_time": "2013-02-02T11:27:52", "upload_time_iso_8601": "2013-02-02T11:27:52.547295Z", "url": "https://files.pythonhosted.org/packages/75/5e/05e9731374b05fee4a2153294d54cb6038136fdfba5e657ce3069fdb8733/django-registration-email-0.4.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "30a11cae4c348e146491de06de5677e1", "sha256": "4dab149e4473b9bf1723bb75a4cb6317a86c5610fff7befc8544bbbe56df634a"}, "downloads": -1, "filename": "django-registration-email-0.5.tar.gz", "has_sig": false, "md5_digest": "30a11cae4c348e146491de06de5677e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12258, "upload_time": "2013-03-02T03:44:46", "upload_time_iso_8601": "2013-03-02T03:44:46.873891Z", "url": "https://files.pythonhosted.org/packages/fe/67/64067c3544b327f9c7f0e547e20fb4915c5b13cb135c7175f2e3fb6c5a3a/django-registration-email-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "b227e55f7f1f14e148b2d88ecb513fda", "sha256": "4056219996dd629bb80340f669a6d32b8e137c98df183b4f8ffe63fc6765c271"}, "downloads": -1, "filename": "django-registration-email-0.5.1.tar.gz", "has_sig": false, "md5_digest": "b227e55f7f1f14e148b2d88ecb513fda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13599, "upload_time": "2013-03-30T08:04:55", "upload_time_iso_8601": "2013-03-30T08:04:55.294056Z", "url": "https://files.pythonhosted.org/packages/d9/0a/3388bb8082ef91a536a64959bb02111ca89f163116831cc3cf5292948aa2/django-registration-email-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "80741add11377426e2454ed2b6f2662f", "sha256": "9c75b44d139b039b145b04676b05966dc1c4b08fc300c7acf5c788158c29efaa"}, "downloads": -1, "filename": "django-registration-email-0.5.2.tar.gz", "has_sig": false, "md5_digest": "80741add11377426e2454ed2b6f2662f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13627, "upload_time": "2013-05-20T04:22:05", "upload_time_iso_8601": "2013-05-20T04:22:05.582909Z", "url": "https://files.pythonhosted.org/packages/fe/06/fc68be2707a5c718f5a2956bc17a4de82f8199206989d6cc447276db70b0/django-registration-email-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "04bd1c68b60d1439bb68807945a51441", "sha256": "fe5036ec933c829796e82c512f39fb358311e27964ed67fa7a6ff5fa406ca8e5"}, "downloads": -1, "filename": "django-registration-email-0.5.3.tar.gz", "has_sig": false, "md5_digest": "04bd1c68b60d1439bb68807945a51441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15669, "upload_time": "2013-06-19T09:27:19", "upload_time_iso_8601": "2013-06-19T09:27:19.338482Z", "url": "https://files.pythonhosted.org/packages/1d/d9/e5dc2bafc6cc6ec5c4700a8e5a18ac7c464fae4c63bf43b99218888baec2/django-registration-email-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "8f40a060b56e2a1206a58b6c9e4d0020", "sha256": "d57cf559cd395dc608b4d263894e40bc942b039f7e208f89497ce5238fe9b526"}, "downloads": -1, "filename": "django-registration-email-0.5.4.tar.gz", "has_sig": false, "md5_digest": "8f40a060b56e2a1206a58b6c9e4d0020", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15823, "upload_time": "2013-06-20T12:43:24", "upload_time_iso_8601": "2013-06-20T12:43:24.527050Z", "url": "https://files.pythonhosted.org/packages/dc/8c/a1eb3aa306322c34ac7f1a17bd188bf2b6c6685948eac1ff6ff0c8161b05/django-registration-email-0.5.4.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "f72ad83d927f2854d01d6d8f6e53793e", "sha256": "513b067fd4a98497b555de8ee313b1274b4b5926e9b73f00968eea6e79dff864"}, "downloads": -1, "filename": "django-registration-email-0.6.tar.gz", "has_sig": false, "md5_digest": "f72ad83d927f2854d01d6d8f6e53793e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13700, "upload_time": "2013-08-31T08:38:49", "upload_time_iso_8601": "2013-08-31T08:38:49.008989Z", "url": "https://files.pythonhosted.org/packages/11/a0/5ee521b711f030289c95ecf6de8f8c32aaf8af9a5c01497b5c8806606bc4/django-registration-email-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "e44c05543ea85e5133e928eedf803d40", "sha256": "815beaaf7a61d8035173afacf66a7114bffd0a42cb8a64c3328577793ded1d2b"}, "downloads": -1, "filename": "django-registration-email-0.7.tar.gz", "has_sig": false, "md5_digest": "e44c05543ea85e5133e928eedf803d40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16251, "upload_time": "2013-09-06T16:25:28", "upload_time_iso_8601": "2013-09-06T16:25:28.270122Z", "url": "https://files.pythonhosted.org/packages/bf/5c/fe6fa653491ff37dbff07bf49dc279182344b945e3161d276fe032d35ea0/django-registration-email-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "a116130ddf8d1f50ace48df90ac43292", "sha256": "7d2e0606007f9854cf21083048384deb899d55b78a5eca17eeaccd054ea407be"}, "downloads": -1, "filename": "django-registration-email-0.7.1.tar.gz", "has_sig": false, "md5_digest": "a116130ddf8d1f50ace48df90ac43292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16792, "upload_time": "2013-10-23T05:44:37", "upload_time_iso_8601": "2013-10-23T05:44:37.254659Z", "url": "https://files.pythonhosted.org/packages/20/01/9c6cf5b332bc9da0d4f2961f1c19eadb8735834f5cfef5ec9cb3bd078f39/django-registration-email-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "b75e356ea691b3409f18bc92f05e7d9c", "sha256": "5cc87c44a362789a7f6fc0f786b6484999b7b920f616ec9fbda32b310408bbcc"}, "downloads": -1, "filename": "django-registration-email-0.7.2.tar.gz", "has_sig": false, "md5_digest": "b75e356ea691b3409f18bc92f05e7d9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16948, "upload_time": "2014-04-22T17:46:06", "upload_time_iso_8601": "2014-04-22T17:46:06.044337Z", "url": "https://files.pythonhosted.org/packages/73/8b/7b75fce07de3ef3c6f9473cf3c8826779f1aad36e509fba3bd23530b977b/django-registration-email-0.7.2.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "0e9ad714802941c059958476d3c2aa63", "sha256": "f93fc03bcd7c2fad9d40c388f59ac97da42663bf299cac26dc004a876015291d"}, "downloads": -1, "filename": "django-registration-email-0.8.tar.gz", "has_sig": false, "md5_digest": "0e9ad714802941c059958476d3c2aa63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16633, "upload_time": "2014-10-03T07:02:15", "upload_time_iso_8601": "2014-10-03T07:02:15.372682Z", "url": "https://files.pythonhosted.org/packages/71/07/cb57ea94b63988df4ce6c794e28c7adb4a5709ddc4809bfffafdd1e0983c/django-registration-email-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "74d76b45e491d4c9e68587acc6b0146c", "sha256": "2d0a08dab1825eb61291a065d9f1c1df18986d2e3ac168737413c5db66770279"}, "downloads": -1, "filename": "django-registration-email-0.9.tar.gz", "has_sig": false, "md5_digest": "74d76b45e491d4c9e68587acc6b0146c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16761, "upload_time": "2014-10-31T04:30:25", "upload_time_iso_8601": "2014-10-31T04:30:25.235500Z", "url": "https://files.pythonhosted.org/packages/a3/8e/d6c6523ec1bc1c523510185b039af169ad954e0c27746d0b2707a6788a09/django-registration-email-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63fb468a5729d5e1753979c99a1428c3", "sha256": "9bc6666c14374574e0dc0dc4f8cd40270ed98a7ad1a85c405ce386e05b801277"}, "downloads": -1, "filename": "django-registration-email-0.10.tar.gz", "has_sig": false, "md5_digest": "63fb468a5729d5e1753979c99a1428c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16845, "upload_time": "2017-08-17T09:28:41", "upload_time_iso_8601": "2017-08-17T09:28:41.225558Z", "url": "https://files.pythonhosted.org/packages/b2/53/7190b97efc7fdb4062b5000b6967f3e9da6c2643cf67f8f36118487e39c3/django-registration-email-0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:19 2020"}