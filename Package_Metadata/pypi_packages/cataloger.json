{"info": {"author": "Tony Flury", "author_email": "anthony.flury@btinternet.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Quality Assurance"], "description": "Manifest Checker\n================\n\nThe manifest checker is a command line tool for the creation and checking of manifest files. Typically it is intended to be\nused to confirm that a directory structure can be deployed/copied in a consistent way from a source to a target.\n\nThere is a two step process for confirming consistency :\n\n1. A manifest is created (using the `manifest create` command). This command scans the directory tree, looking for known source code files. A manifest file is created, which is a simple text file listing every source code file found, and a checksum/hash for each file - thus recording a reasonable mark of the file contents.\n\n2. Following deployment of the directory tree (including the manifest file), the manifest can be checked against the deployed copy, by executing the `manifest check` command. This command scans the directory tree, looking for the source code files, and checking the found files against the manifest file is created. During this check 3 types of exception can be reported :\n\n   - mismatched files - where the signature of the deployed file is not the same as that in the manifest file\n   - missing files - where files are listed in the manifest but not in the deployed directory tree\n   - record_extra files - where files exist in the deployed directory tree but don't exist in the manifest file\n\nThe toolset was initially designed to check a deployment of a Django based website, and therefore many of the defaults are set for DJango projects including : The source files to look for, and also which sub-directories to ignore. All of these can be overidden by command line options, and there are early plans for a configuration file as well.\n\n\n.. warning::\n    Versions early than 0.0.2rc6 incorrectly ignores missing files - this has now been fixed.\n\n\nLinks :\n\n- `Full Documentation`_\n- `Source Code`_\n\n\n.. _Full Documentation: http://cataloger.readthedocs.org/en/latest/\n.. _Source Code: https://github.com/TonyFlury/cataloger\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://upload.pypi.org/legacy/", "keywords": "Development,Deployment,Integrity Checking", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "cataloger", "package_url": "https://pypi.org/project/cataloger/", "platform": "", "project_url": "https://pypi.org/project/cataloger/", "project_urls": {"Homepage": "https://upload.pypi.org/legacy/"}, "release_url": "https://pypi.org/project/cataloger/0.1.0rc4/", "requires_dist": ["Click", "six", "templatelite", "pyfakefs; extra == 'test'", "mock; extra == 'test'"], "requires_python": "", "summary": "Simple to use tools to create and check directory contents - ideal for integrity checking", "version": "0.1.0rc4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The manifest checker is a command line tool for the creation and checking of manifest files. Typically it is intended to be\nused to confirm that a directory structure can be deployed/copied in a consistent way from a source to a target.</p>\n<p>There is a two step process for confirming consistency :</p>\n<ol>\n<li>A manifest is created (using the <cite>manifest create</cite> command). This command scans the directory tree, looking for known source code files. A manifest file is created, which is a simple text file listing every source code file found, and a checksum/hash for each file - thus recording a reasonable mark of the file contents.</li>\n<li>Following deployment of the directory tree (including the manifest file), the manifest can be checked against the deployed copy, by executing the <cite>manifest check</cite> command. This command scans the directory tree, looking for the source code files, and checking the found files against the manifest file is created. During this check 3 types of exception can be reported :<ul>\n<li>mismatched files - where the signature of the deployed file is not the same as that in the manifest file</li>\n<li>missing files - where files are listed in the manifest but not in the deployed directory tree</li>\n<li>record_extra files - where files exist in the deployed directory tree but don\u2019t exist in the manifest file</li>\n</ul>\n</li>\n</ol>\n<p>The toolset was initially designed to check a deployment of a Django based website, and therefore many of the defaults are set for DJango projects including : The source files to look for, and also which sub-directories to ignore. All of these can be overidden by command line options, and there are early plans for a configuration file as well.</p>\n<div>\n<p>Warning</p>\n<p>Versions early than 0.0.2rc6 incorrectly ignores missing files - this has now been fixed.</p>\n</div>\n<p>Links :</p>\n<ul>\n<li><a href=\"http://cataloger.readthedocs.org/en/latest/\" rel=\"nofollow\">Full Documentation</a></li>\n<li><a href=\"https://github.com/TonyFlury/cataloger\" rel=\"nofollow\">Source Code</a></li>\n</ul>\n\n          </div>"}, "last_serial": 3679271, "releases": {"0.1.0rc1": [{"comment_text": "", "digests": {"md5": "baf32db9eb76b6c5a567cca14e441bb8", "sha256": "6ec4afa95bd6be31eee67f2ff8acb168b7a29a3216ce8dd186af9b1003f8e55f"}, "downloads": -1, "filename": "cataloger-0.1.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "baf32db9eb76b6c5a567cca14e441bb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39696, "upload_time": "2018-03-17T17:55:27", "upload_time_iso_8601": "2018-03-17T17:55:27.883420Z", "url": "https://files.pythonhosted.org/packages/9a/09/560960c7ae921b256e774a147eafdc0fd76d8406fdde84f13e578e37957e/cataloger-0.1.0rc1-py2.py3-none-any.whl", "yanked": false}], "0.1.0rc2": [{"comment_text": "", "digests": {"md5": "ab52bf8690ebe5995ae27e7bcf006e20", "sha256": "29a3a36d99b9bc3243d78c039bbb2da6ef4638b8a93218f62b698bbe4b1454e1"}, "downloads": -1, "filename": "cataloger-0.1.0rc2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab52bf8690ebe5995ae27e7bcf006e20", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39726, "upload_time": "2018-03-17T17:56:53", "upload_time_iso_8601": "2018-03-17T17:56:53.863882Z", "url": "https://files.pythonhosted.org/packages/48/96/65be806dbc1adbecc046a61bfd021e59a7ce313c8d873e1efe85cf58c7a1/cataloger-0.1.0rc2-py2.py3-none-any.whl", "yanked": false}], "0.1.0rc3": [{"comment_text": "", "digests": {"md5": "6b2ce1ee2eb5bc8335fa5ebf342875a0", "sha256": "6b366dbf9d41340979e1db4771ca87a541c4b27b8ca85739689eb05328f57494"}, "downloads": -1, "filename": "cataloger-0.1.0rc3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b2ce1ee2eb5bc8335fa5ebf342875a0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39748, "upload_time": "2018-03-17T17:57:25", "upload_time_iso_8601": "2018-03-17T17:57:25.047812Z", "url": "https://files.pythonhosted.org/packages/9e/df/4ce12f63016ce377606c69ce97361d49f2d4fe9d5ebce6aebd32bf742624/cataloger-0.1.0rc3-py2.py3-none-any.whl", "yanked": false}], "0.1.0rc4": [{"comment_text": "", "digests": {"md5": "d956118073201852e80748d742dee2e0", "sha256": "e300048009635a61dc474bae56f5914ee24488a7f4428e8625d7bf17cbcc7056"}, "downloads": -1, "filename": "cataloger-0.1.0rc4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d956118073201852e80748d742dee2e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39876, "upload_time": "2018-03-17T18:02:41", "upload_time_iso_8601": "2018-03-17T18:02:41.716738Z", "url": "https://files.pythonhosted.org/packages/87/e6/8cdc57bef1fa51ff7d91f4ac174fe55d7130068b0667b84b00c4c26cf848/cataloger-0.1.0rc4-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d956118073201852e80748d742dee2e0", "sha256": "e300048009635a61dc474bae56f5914ee24488a7f4428e8625d7bf17cbcc7056"}, "downloads": -1, "filename": "cataloger-0.1.0rc4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d956118073201852e80748d742dee2e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39876, "upload_time": "2018-03-17T18:02:41", "upload_time_iso_8601": "2018-03-17T18:02:41.716738Z", "url": "https://files.pythonhosted.org/packages/87/e6/8cdc57bef1fa51ff7d91f4ac174fe55d7130068b0667b84b00c4c26cf848/cataloger-0.1.0rc4-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:35:17 2020"}