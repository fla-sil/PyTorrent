{"info": {"author": "Guanliang Meng", "author_email": "linzhi2012@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# batch-run-cmd\n\n## 1 Introduction\n\n\nSee `https://github.com/linzhi2013/batch-run-cmd`.\n\nThis is a Python3 package which will read command lines from an input file,\nand run each line of command one by one, and check their exit status.\n\nMore importantly, if one command fails, you can just jump to next command\n(`-e` option). Furthermore, you can check for the existences of result files\n(`-E` option).\n\n\n## 2 Installation\n\nwith `pip`\n\n    $ pip install batch-run-cmd\n\nThere will be a command `batch_run_cmd` created under the same directory as your `pip` command.\n\n## 3 Usage\nrun `batch_run_cmd`\n\n    $ batch_run_cmd\n\tusage: batch_run_cmd [-h] [-f <file>] [-e <int> [<int> ...]] [-E <str>]\n\n\t    To run command line by line, and check each exit status.\n\n\t    Then optionally check for the existences of result files.\n\n\t    Each line format:\n\n\t    echo \"Hello world\" && echo \"Where are you?\" ;Result-files: /path/to/resultfile1 /path/to/resultfile2\n\n\t    Internally, each line will be split by \";Result-files:\" delimiter,\n\t    and the part before \";Result-files:\" will be treated as a shell command,\n\t    the part after \";Result-files:\" will be regardeds as result files.\n\n\t    Multiple result files are allowed, seperated by blank space(s).\n\n\t    See https://github.com/linzhi2013/batch-run-cmd for more details.\n\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -f <file>             commands in a file.\n\t  -e <int> [<int> ...]  continue On Return Code for a shell command. [[0]]\n\t  -E <str>              continue On: 'a': all files must exist; 'e': at least\n\t                        one file must exist; 'o': omitted, i.e. do not check\n\t                        for existences of files [o]\n\n\n## 4 Citation\nCurrently I have no plan to publish `batch-run-cmd`.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/linzhi2013/batch-run-cmd", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "batch-run-cmd", "package_url": "https://pypi.org/project/batch-run-cmd/", "platform": "", "project_url": "https://pypi.org/project/batch-run-cmd/", "project_urls": {"Homepage": "https://github.com/linzhi2013/batch-run-cmd"}, "release_url": "https://pypi.org/project/batch-run-cmd/0.0.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "To run commands line by line, and check each exit status", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>batch-run-cmd</h1>\n<h2>1 Introduction</h2>\n<p>See <code>https://github.com/linzhi2013/batch-run-cmd</code>.</p>\n<p>This is a Python3 package which will read command lines from an input file,\nand run each line of command one by one, and check their exit status.</p>\n<p>More importantly, if one command fails, you can just jump to next command\n(<code>-e</code> option). Furthermore, you can check for the existences of result files\n(<code>-E</code> option).</p>\n<h2>2 Installation</h2>\n<p>with <code>pip</code></p>\n<pre><code>$ pip install batch-run-cmd\n</code></pre>\n<p>There will be a command <code>batch_run_cmd</code> created under the same directory as your <code>pip</code> command.</p>\n<h2>3 Usage</h2>\n<p>run <code>batch_run_cmd</code></p>\n<pre><code>$ batch_run_cmd\nusage: batch_run_cmd [-h] [-f &lt;file&gt;] [-e &lt;int&gt; [&lt;int&gt; ...]] [-E &lt;str&gt;]\n\n    To run command line by line, and check each exit status.\n\n    Then optionally check for the existences of result files.\n\n    Each line format:\n\n    echo \"Hello world\" &amp;&amp; echo \"Where are you?\" ;Result-files: /path/to/resultfile1 /path/to/resultfile2\n\n    Internally, each line will be split by \";Result-files:\" delimiter,\n    and the part before \";Result-files:\" will be treated as a shell command,\n    the part after \";Result-files:\" will be regardeds as result files.\n\n    Multiple result files are allowed, seperated by blank space(s).\n\n    See https://github.com/linzhi2013/batch-run-cmd for more details.\n\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f &lt;file&gt;             commands in a file.\n  -e &lt;int&gt; [&lt;int&gt; ...]  continue On Return Code for a shell command. [[0]]\n  -E &lt;str&gt;              continue On: 'a': all files must exist; 'e': at least\n                        one file must exist; 'o': omitted, i.e. do not check\n                        for existences of files [o]\n</code></pre>\n<h2>4 Citation</h2>\n<p>Currently I have no plan to publish <code>batch-run-cmd</code>.</p>\n\n          </div>"}, "last_serial": 5943629, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5d4951019e1a45d07de2828fadf22976", "sha256": "c1731c6d228d236730a85acf4a5acf856f4639922424d602ad78521de71d3bc7"}, "downloads": -1, "filename": "batch_run_cmd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5d4951019e1a45d07de2828fadf22976", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3443, "upload_time": "2019-09-30T05:14:29", "upload_time_iso_8601": "2019-09-30T05:14:29.418399Z", "url": "https://files.pythonhosted.org/packages/57/30/5a29330766a6e098a9cca1c6439bfc42fcbc8b34f3302e2427424e86217f/batch_run_cmd-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "da8eef52c371bafcc0a492cfbc237a9b", "sha256": "8bfe47fb00fa6caa2e1950d673598b98b79f583c42719aa7a238bf0c55eda28f"}, "downloads": -1, "filename": "batch-run-cmd-0.0.2.tar.gz", "has_sig": false, "md5_digest": "da8eef52c371bafcc0a492cfbc237a9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4174, "upload_time": "2019-10-08T08:36:30", "upload_time_iso_8601": "2019-10-08T08:36:30.352285Z", "url": "https://files.pythonhosted.org/packages/94/58/9560506686e898f652e38a67d8d762dd7257c001348360fafc28fc373d7d/batch-run-cmd-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da8eef52c371bafcc0a492cfbc237a9b", "sha256": "8bfe47fb00fa6caa2e1950d673598b98b79f583c42719aa7a238bf0c55eda28f"}, "downloads": -1, "filename": "batch-run-cmd-0.0.2.tar.gz", "has_sig": false, "md5_digest": "da8eef52c371bafcc0a492cfbc237a9b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4174, "upload_time": "2019-10-08T08:36:30", "upload_time_iso_8601": "2019-10-08T08:36:30.352285Z", "url": "https://files.pythonhosted.org/packages/94/58/9560506686e898f652e38a67d8d762dd7257c001348360fafc28fc373d7d/batch-run-cmd-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:44 2020"}