{"info": {"author": "SirJohnFranklin", "author_email": "sirjfu@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# nist-asd\nBasically a class which parses the NIST Atomic Spectra Database for energy levels and lines and saves the data to a dictionary on HDD. \n\n- You can pass a matplotlib.axis, and the emission lines will be plotted with an optional normalization factor\n- You can plot the data directly\n- You can print the emission line data and access it\n- You can print the energy level data and access it\n\nExample usage:\n\n```python\n>>> pip install nist-asd\n\nfrom nistasd import NISTLines, NISTASD\nimport matplotlib.pyplot as plt\n\nif __name__ == '__main__':\n    import pandas as pd\n\n    nist = NISTLines(spectrum='N')\n    energy_levels = nist.get_energy_levels()\n\n    for ion_stage in energy_levels:\n        print(\"Number of levels: {0} for {1}\".format(len(energy_levels[ion_stage]), ion_stage))\n        df = pd.DataFrame(energy_levels[ion_stage])\n        print(df)\n\n        break\n\n    nist = NISTLines(spectrum='O', lower_wavelength=2., upper_wavelength=50., order=1)\n\n    # plotting to existing axis with scaling parameter\n    plt.figure()\n    ax = plt.gca()\n    nist.plot_nist_lines_to_axis(ax, normalize_max=10.)\n    plt.grid()\n\n    # plotting lines to new window\n    nist.plot_lines()\n    plt.savefig('nist-asd-example-plot.pdf')\n    plt.show()\n\n    # printing information\n    nist = NISTLines(spectrum='O', lower_wavelength=17.20, upper_wavelength=17.35, order=1)\n    lines = nist.get_lines()\n    print(\"Number of lines: \", len(lines))\n\n    lines_within_range = nist.get_lines_wavelength_range()\n    print(\"Number of lines within range: \", len(lines_within_range))\n\n    print(\"Line data within range:\")\n    nist.pprint()\n```\n\nResults in:\n[Plot result](examples/nist-asd-example-plot.pdf)\n\n\n```\nNumber of energy levels: 366 for N I\n       J  configuration        ...         term  uncertainty (eV)\n0    1.5         2s22p3        ...          4S\u00c2\u00b0               NaN\n1    2.5         2s22p3        ...          2D\u00c2\u00b0               NaN\n2    1.5         2s22p3        ...          2D\u00c2\u00b0               NaN\n3    0.5         2s22p3        ...          2P\u00c2\u00b0               NaN\n4    1.5         2s22p3        ...          2P\u00c2\u00b0               NaN\n5    0.5   2s22p2(3P)3s        ...           4P               NaN\n6    1.5   2s22p2(3P)3s        ...           4P               NaN\n7    2.5   2s22p2(3P)3s        ...           4P               NaN\n8    0.5   2s22p2(3P)3s        ...           2P               NaN\n9    1.5   2s22p2(3P)3s        ...           2P               NaN\n10   2.5          2s2p4        ...           4P               NaN\n11   1.5          2s2p4        ...           4P               NaN\n12   0.5          2s2p4        ...           4P               NaN\n13   0.5   2s22p2(3P)3p        ...          2S\u00c2\u00b0               NaN\n14   0.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN\n15   1.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN\n16   2.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN\n17   3.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN\n18   0.5   2s22p2(3P)3p        ...          4P\u00c2\u00b0               NaN\n19   1.5   2s22p2(3P)3p        ...          4P\u00c2\u00b0               NaN\n20   2.5   2s22p2(3P)3p        ...          4P\u00c2\u00b0               NaN\n21   1.5   2s22p2(3P)3p        ...          4S\u00c2\u00b0               NaN\n22   1.5   2s22p2(3P)3p        ...          2D\u00c2\u00b0               NaN\n23   2.5   2s22p2(3P)3p        ...          2D\u00c2\u00b0               NaN\n24   0.5   2s22p2(3P)3p        ...          2P\u00c2\u00b0               NaN\n25   1.5   2s22p2(3P)3p        ...          2P\u00c2\u00b0               NaN\n26   2.5   2s22p2(1D)3s        ...           2D               NaN\n27   1.5   2s22p2(1D)3s        ...           2D               NaN\n28   0.5   2s22p2(3P)4s        ...           4P               NaN\n29   1.5   2s22p2(3P)4s        ...           4P               NaN\n..   ...            ...        ...          ...               ...\n336  0.5   2s2p3(5S\u00c2\u00b0)5p        ...           4P               NaN\n337  1.5   2s2p3(5S\u00c2\u00b0)5p        ...           4P               NaN\n338  2.5   2s2p3(5S\u00c2\u00b0)5p        ...           4P               NaN\n339  0.5   2s2p3(5S\u00c2\u00b0)6p        ...           4P               NaN\n340  1.5   2s2p3(5S\u00c2\u00b0)6p        ...           4P               NaN\n341  2.5   2s2p3(5S\u00c2\u00b0)6p        ...           4P               NaN\n342  0.5   2s2p3(5S\u00c2\u00b0)7p        ...           4P             0.012\n343  1.5   2s2p3(5S\u00c2\u00b0)7p        ...           4P             0.012\n344  2.5   2s2p3(5S\u00c2\u00b0)7p        ...           4P             0.012\n345  0.5   2s2p3(5S\u00c2\u00b0)8p        ...           4P               NaN\n346  1.5   2s2p3(5S\u00c2\u00b0)8p        ...           4P               NaN\n347  2.5   2s2p3(5S\u00c2\u00b0)8p        ...           4P               NaN\n348  0.5   2s2p3(5S\u00c2\u00b0)9p        ...           4P               NaN\n349  1.5   2s2p3(5S\u00c2\u00b0)9p        ...           4P               NaN\n350  2.5   2s2p3(5S\u00c2\u00b0)9p        ...           4P               NaN\n351  0.5  2s2p3(5S\u00c2\u00b0)10p        ...           4P             0.012\n352  1.5  2s2p3(5S\u00c2\u00b0)10p        ...           4P             0.012\n353  2.5  2s2p3(5S\u00c2\u00b0)10p        ...           4P             0.012\n354  0.5  2s2p3(5S\u00c2\u00b0)11p        ...           4P               NaN\n355  1.5  2s2p3(5S\u00c2\u00b0)11p        ...           4P               NaN\n356  2.5  2s2p3(5S\u00c2\u00b0)11p        ...           4P               NaN\n357  0.5  2s2p3(5S\u00c2\u00b0)12p        ...           4P               NaN\n358  1.5  2s2p3(5S\u00c2\u00b0)12p        ...           4P               NaN\n359  2.5  2s2p3(5S\u00c2\u00b0)12p        ...           4P               NaN\n360  0.5  2s2p3(5S\u00c2\u00b0)13p        ...           4P               NaN\n361  1.5  2s2p3(5S\u00c2\u00b0)13p        ...           4P               NaN\n362  2.5  2s2p3(5S\u00c2\u00b0)13p        ...           4P               NaN\n363  0.5  2s2p3(5S\u00c2\u00b0)14p        ...           4P               NaN\n364  1.5  2s2p3(5S\u00c2\u00b0)14p        ...           4P               NaN\n365  2.5  2s2p3(5S\u00c2\u00b0)14p        ...           4P               NaN\n\n[366 rows x 7 columns]\n\n\n\nNumber of lines:  5829\nNumber of lines within range:  20\nLine data within range:\n{'Acc': 'B',\n 'Aki': 29400000000.0,\n 'Ei': 0.0,\n 'Ek': 72.01311,\n 'gi': 1.0,\n 'gk': 3.0,\n 'lower_J': '0',\n 'lower_conf': '1s2.2s2',\n 'lower_term': '1S',\n 'rel_int': 450.0,\n 'rel_int_com': '',\n 'section': 0,\n 'spectrum': 'O '\n             'V',\n 'type': '',\n 'upper_J': '1',\n 'upper_conf': '1s2.2s.3p',\n 'upper_term': '1P*',\n 'wave': 17.2169,\n 'wave_obs': 17.2169,\n 'wave_ritz': 17.2169}\n\n{'Acc': 'A',\n 'Aki': 73300000000.0,\n 'Ei': 11.94898,\n 'Ek': 83.64293,\n 'gi': 2.0,\n 'gk': 4.0,\n 'lower_J': '1/2',\n 'lower_conf': '1s2.2p',\n 'lower_term': '2P*',\n 'rel_int': nan,\n 'rel_int_com': '',\n 'section': 0,\n 'spectrum': 'O '\n             'VI',\n 'type': '',\n 'upper_J': '3/2',\n 'upper_conf': '1s2.3d',\n 'upper_term': '2D',\n 'wave': 17.2935,\n 'wave_obs': nan,\n 'wave_ritz': 17.2935}\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SirJohnFranklin/nist-asd", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nist-asd", "package_url": "https://pypi.org/project/nist-asd/", "platform": "", "project_url": "https://pypi.org/project/nist-asd/", "project_urls": {"Homepage": "https://github.com/SirJohnFranklin/nist-asd"}, "release_url": "https://pypi.org/project/nist-asd/1.4/", "requires_dist": ["HTMLParser", "pprint", "logzero", "mpldatacursor", "pathlib"], "requires_python": "", "summary": "Basically a class which parses the NIST Atomic Spectra Database and saves the data to a dictionary on HDD. You can pass an matplotlib.axis, and the emissions lines will be plotted with an optional normalization factor. Parser for energy levels is also included.", "version": "1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # nist-asd<br>Basically a class which parses the NIST Atomic Spectra Database for energy levels and lines and saves the data to a dictionary on HDD. <br><br>- You can pass a matplotlib.axis, and the emission lines will be plotted with an optional normalization factor<br>- You can plot the data directly<br>- You can print the emission line data and access it<br>- You can print the energy level data and access it<br><br>Example usage:<br><br>```python<br>&gt;&gt;&gt; pip install nist-asd<br><br>from nistasd import NISTLines, NISTASD<br>import matplotlib.pyplot as plt<br><br>if __name__ == '__main__':<br>    import pandas as pd<br><br>    nist = NISTLines(spectrum='N')<br>    energy_levels = nist.get_energy_levels()<br><br>    for ion_stage in energy_levels:<br>        print(\"Number of levels: {0} for {1}\".format(len(energy_levels[ion_stage]), ion_stage))<br>        df = pd.DataFrame(energy_levels[ion_stage])<br>        print(df)<br><br>        break<br><br>    nist = NISTLines(spectrum='O', lower_wavelength=2., upper_wavelength=50., order=1)<br><br>    # plotting to existing axis with scaling parameter<br>    plt.figure()<br>    ax = plt.gca()<br>    nist.plot_nist_lines_to_axis(ax, normalize_max=10.)<br>    plt.grid()<br><br>    # plotting lines to new window<br>    nist.plot_lines()<br>    plt.savefig('nist-asd-example-plot.pdf')<br>    plt.show()<br><br>    # printing information<br>    nist = NISTLines(spectrum='O', lower_wavelength=17.20, upper_wavelength=17.35, order=1)<br>    lines = nist.get_lines()<br>    print(\"Number of lines: \", len(lines))<br><br>    lines_within_range = nist.get_lines_wavelength_range()<br>    print(\"Number of lines within range: \", len(lines_within_range))<br><br>    print(\"Line data within range:\")<br>    nist.pprint()<br>```<br><br>Results in:<br>[Plot result](examples/nist-asd-example-plot.pdf)<br><br><br>```<br>Number of energy levels: 366 for N I<br>       J  configuration        ...         term  uncertainty (eV)<br>0    1.5         2s22p3        ...          4S\u00c2\u00b0               NaN<br>1    2.5         2s22p3        ...          2D\u00c2\u00b0               NaN<br>2    1.5         2s22p3        ...          2D\u00c2\u00b0               NaN<br>3    0.5         2s22p3        ...          2P\u00c2\u00b0               NaN<br>4    1.5         2s22p3        ...          2P\u00c2\u00b0               NaN<br>5    0.5   2s22p2(3P)3s        ...           4P               NaN<br>6    1.5   2s22p2(3P)3s        ...           4P               NaN<br>7    2.5   2s22p2(3P)3s        ...           4P               NaN<br>8    0.5   2s22p2(3P)3s        ...           2P               NaN<br>9    1.5   2s22p2(3P)3s        ...           2P               NaN<br>10   2.5          2s2p4        ...           4P               NaN<br>11   1.5          2s2p4        ...           4P               NaN<br>12   0.5          2s2p4        ...           4P               NaN<br>13   0.5   2s22p2(3P)3p        ...          2S\u00c2\u00b0               NaN<br>14   0.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN<br>15   1.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN<br>16   2.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN<br>17   3.5   2s22p2(3P)3p        ...          4D\u00c2\u00b0               NaN<br>18   0.5   2s22p2(3P)3p        ...          4P\u00c2\u00b0               NaN<br>19   1.5   2s22p2(3P)3p        ...          4P\u00c2\u00b0               NaN<br>20   2.5   2s22p2(3P)3p        ...          4P\u00c2\u00b0               NaN<br>21   1.5   2s22p2(3P)3p        ...          4S\u00c2\u00b0               NaN<br>22   1.5   2s22p2(3P)3p        ...          2D\u00c2\u00b0               NaN<br>23   2.5   2s22p2(3P)3p        ...          2D\u00c2\u00b0               NaN<br>24   0.5   2s22p2(3P)3p        ...          2P\u00c2\u00b0               NaN<br>25   1.5   2s22p2(3P)3p        ...          2P\u00c2\u00b0               NaN<br>26   2.5   2s22p2(1D)3s        ...           2D               NaN<br>27   1.5   2s22p2(1D)3s        ...           2D               NaN<br>28   0.5   2s22p2(3P)4s        ...           4P               NaN<br>29   1.5   2s22p2(3P)4s        ...           4P               NaN<br>..   ...            ...        ...          ...               ...<br>336  0.5   2s2p3(5S\u00c2\u00b0)5p        ...           4P               NaN<br>337  1.5   2s2p3(5S\u00c2\u00b0)5p        ...           4P               NaN<br>338  2.5   2s2p3(5S\u00c2\u00b0)5p        ...           4P               NaN<br>339  0.5   2s2p3(5S\u00c2\u00b0)6p        ...           4P               NaN<br>340  1.5   2s2p3(5S\u00c2\u00b0)6p        ...           4P               NaN<br>341  2.5   2s2p3(5S\u00c2\u00b0)6p        ...           4P               NaN<br>342  0.5   2s2p3(5S\u00c2\u00b0)7p        ...           4P             0.012<br>343  1.5   2s2p3(5S\u00c2\u00b0)7p        ...           4P             0.012<br>344  2.5   2s2p3(5S\u00c2\u00b0)7p        ...           4P             0.012<br>345  0.5   2s2p3(5S\u00c2\u00b0)8p        ...           4P               NaN<br>346  1.5   2s2p3(5S\u00c2\u00b0)8p        ...           4P               NaN<br>347  2.5   2s2p3(5S\u00c2\u00b0)8p        ...           4P               NaN<br>348  0.5   2s2p3(5S\u00c2\u00b0)9p        ...           4P               NaN<br>349  1.5   2s2p3(5S\u00c2\u00b0)9p        ...           4P               NaN<br>350  2.5   2s2p3(5S\u00c2\u00b0)9p        ...           4P               NaN<br>351  0.5  2s2p3(5S\u00c2\u00b0)10p        ...           4P             0.012<br>352  1.5  2s2p3(5S\u00c2\u00b0)10p        ...           4P             0.012<br>353  2.5  2s2p3(5S\u00c2\u00b0)10p        ...           4P             0.012<br>354  0.5  2s2p3(5S\u00c2\u00b0)11p        ...           4P               NaN<br>355  1.5  2s2p3(5S\u00c2\u00b0)11p        ...           4P               NaN<br>356  2.5  2s2p3(5S\u00c2\u00b0)11p        ...           4P               NaN<br>357  0.5  2s2p3(5S\u00c2\u00b0)12p        ...           4P               NaN<br>358  1.5  2s2p3(5S\u00c2\u00b0)12p        ...           4P               NaN<br>359  2.5  2s2p3(5S\u00c2\u00b0)12p        ...           4P               NaN<br>360  0.5  2s2p3(5S\u00c2\u00b0)13p        ...           4P               NaN<br>361  1.5  2s2p3(5S\u00c2\u00b0)13p        ...           4P               NaN<br>362  2.5  2s2p3(5S\u00c2\u00b0)13p        ...           4P               NaN<br>363  0.5  2s2p3(5S\u00c2\u00b0)14p        ...           4P               NaN<br>364  1.5  2s2p3(5S\u00c2\u00b0)14p        ...           4P               NaN<br>365  2.5  2s2p3(5S\u00c2\u00b0)14p        ...           4P               NaN<br><br>[366 rows x 7 columns]<br><br><br><br>Number of lines:  5829<br>Number of lines within range:  20<br>Line data within range:<br>{'Acc': 'B',<br> 'Aki': 29400000000.0,<br> 'Ei': 0.0,<br> 'Ek': 72.01311,<br> 'gi': 1.0,<br> 'gk': 3.0,<br> 'lower_J': '0',<br> 'lower_conf': '1s2.2s2',<br> 'lower_term': '1S',<br> 'rel_int': 450.0,<br> 'rel_int_com': '',<br> 'section': 0,<br> 'spectrum': 'O '<br>             'V',<br> 'type': '',<br> 'upper_J': '1',<br> 'upper_conf': '1s2.2s.3p',<br> 'upper_term': '1P*',<br> 'wave': 17.2169,<br> 'wave_obs': 17.2169,<br> 'wave_ritz': 17.2169}<br><br>{'Acc': 'A',<br> 'Aki': 73300000000.0,<br> 'Ei': 11.94898,<br> 'Ek': 83.64293,<br> 'gi': 2.0,<br> 'gk': 4.0,<br> 'lower_J': '1/2',<br> 'lower_conf': '1s2.2p',<br> 'lower_term': '2P*',<br> 'rel_int': nan,<br> 'rel_int_com': '',<br> 'section': 0,<br> 'spectrum': 'O '<br>             'VI',<br> 'type': '',<br> 'upper_J': '3/2',<br> 'upper_conf': '1s2.3d',<br> 'upper_term': '2D',<br> 'wave': 17.2935,<br> 'wave_obs': nan,<br> 'wave_ritz': 17.2935}<br>```<br><br><br>\n          </div>"}, "last_serial": 3965052, "releases": {"1.2": [{"comment_text": "", "digests": {"md5": "9ab79706a8aff623ec869c124a1a76e0", "sha256": "da83600661ed8ea62ad29490c5befa18cbdb1907be9cb4ee33f190584361a822"}, "downloads": -1, "filename": "nist_asd-1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "9ab79706a8aff623ec869c124a1a76e0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7048, "upload_time": "2018-06-08T09:50:45", "upload_time_iso_8601": "2018-06-08T09:50:45.018529Z", "url": "https://files.pythonhosted.org/packages/6d/9d/743417bbe10a51bc050b07c6578534ff95d1d74a309dba4ba49d92f600a5/nist_asd-1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f213ebee992f282a328e11c7a48c4bd", "sha256": "c312e6644dfd208040b2e7773220a7af513eb5f78827ab223a144cd3ed8a3034"}, "downloads": -1, "filename": "nist_asd-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8f213ebee992f282a328e11c7a48c4bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7040, "upload_time": "2018-06-08T09:50:46", "upload_time_iso_8601": "2018-06-08T09:50:46.597663Z", "url": "https://files.pythonhosted.org/packages/b0/ba/899ee9b5e107c60eea6386d941477c7b8d848ddd979f58753aeb02f94806/nist_asd-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33b9e84b6d7dbb31d8b40b188c656901", "sha256": "dc5888b2d6757915db0af0a8ba9c25e402d47e4feaf9ad5c7a6689e4c417f4ba"}, "downloads": -1, "filename": "nist-asd-1.2.tar.gz", "has_sig": false, "md5_digest": "33b9e84b6d7dbb31d8b40b188c656901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7331, "upload_time": "2018-06-08T09:50:47", "upload_time_iso_8601": "2018-06-08T09:50:47.848127Z", "url": "https://files.pythonhosted.org/packages/b6/05/33c7d6f76a9b8b0fc1864e5f907e81c1febf98638b1c2ff4226aceb9a99a/nist-asd-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "0f4c2b1dfea5b87396a2dae7728e6f1d", "sha256": "d35f064d595ffd1e2bb5403c7bf44214c187ebdf3235c192d1c7de8fe3c59f59"}, "downloads": -1, "filename": "nist_asd-1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "0f4c2b1dfea5b87396a2dae7728e6f1d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7043, "upload_time": "2018-06-08T10:59:36", "upload_time_iso_8601": "2018-06-08T10:59:36.391833Z", "url": "https://files.pythonhosted.org/packages/8a/61/9c13a450b2a4a66e367593e61fb03b321728c7a11d2b6e5f325dc64a8e09/nist_asd-1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "404755c80b3e7ee75c19a4ef4a9b2630", "sha256": "ecd3848f649fad76e9f42201fe4892b82e63250c49d83bb933d6ac070e34a295"}, "downloads": -1, "filename": "nist_asd-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "404755c80b3e7ee75c19a4ef4a9b2630", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7031, "upload_time": "2018-06-08T10:59:37", "upload_time_iso_8601": "2018-06-08T10:59:37.477020Z", "url": "https://files.pythonhosted.org/packages/76/bb/c113cfdc8fdf9d55f85790243118835a44b302edbbae0371d18a87ad1c42/nist_asd-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "839ddbc837f047dc3e8fb9e77c54ec17", "sha256": "e7bcabe467b9108618b5ce22f7daacb85128780c3b85e6890fc25c1b3982586e"}, "downloads": -1, "filename": "nist-asd-1.3.tar.gz", "has_sig": false, "md5_digest": "839ddbc837f047dc3e8fb9e77c54ec17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7320, "upload_time": "2018-06-08T10:59:38", "upload_time_iso_8601": "2018-06-08T10:59:38.540019Z", "url": "https://files.pythonhosted.org/packages/81/df/f83184a0bcedee13345722272f94abf49041b37a11954832b4b92aa86345/nist-asd-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "0c3cfe5e88a73e3cdfc027edcb275df0", "sha256": "d56e70b66ce66f62bc4585b1f32bfcfa5dc40b239ab56f6d739ad38486ef5349"}, "downloads": -1, "filename": "nist_asd-1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0c3cfe5e88a73e3cdfc027edcb275df0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9676, "upload_time": "2018-06-15T14:24:53", "upload_time_iso_8601": "2018-06-15T14:24:53.420321Z", "url": "https://files.pythonhosted.org/packages/1e/0d/840ce6a39a0cd78936a352393459096969555ade1dd1cf335844b9d77903/nist_asd-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03133b72d87c490fe923855e22d54b89", "sha256": "85cc34b155e15c46dd094c7e8742b355b4b443e77f120b953b23a8ea7ac4d5a7"}, "downloads": -1, "filename": "nist-asd-1.4.tar.gz", "has_sig": false, "md5_digest": "03133b72d87c490fe923855e22d54b89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9898, "upload_time": "2018-06-15T14:24:54", "upload_time_iso_8601": "2018-06-15T14:24:54.571876Z", "url": "https://files.pythonhosted.org/packages/e3/27/1987bed4f863a1f85f8f68eeeb9d73449c493a413afda11369eec1800699/nist-asd-1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c3cfe5e88a73e3cdfc027edcb275df0", "sha256": "d56e70b66ce66f62bc4585b1f32bfcfa5dc40b239ab56f6d739ad38486ef5349"}, "downloads": -1, "filename": "nist_asd-1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0c3cfe5e88a73e3cdfc027edcb275df0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9676, "upload_time": "2018-06-15T14:24:53", "upload_time_iso_8601": "2018-06-15T14:24:53.420321Z", "url": "https://files.pythonhosted.org/packages/1e/0d/840ce6a39a0cd78936a352393459096969555ade1dd1cf335844b9d77903/nist_asd-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03133b72d87c490fe923855e22d54b89", "sha256": "85cc34b155e15c46dd094c7e8742b355b4b443e77f120b953b23a8ea7ac4d5a7"}, "downloads": -1, "filename": "nist-asd-1.4.tar.gz", "has_sig": false, "md5_digest": "03133b72d87c490fe923855e22d54b89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9898, "upload_time": "2018-06-15T14:24:54", "upload_time_iso_8601": "2018-06-15T14:24:54.571876Z", "url": "https://files.pythonhosted.org/packages/e3/27/1987bed4f863a1f85f8f68eeeb9d73449c493a413afda11369eec1800699/nist-asd-1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:17 2020"}