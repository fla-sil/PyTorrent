{"info": {"author": "Eric Koch and Erik Rosolowsky", "author_email": "koch.eric.w@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "FilFinder\n=========\n\n[![DOI](https://zenodo.org/badge/9172/e-koch/FilFinder.svg)](http://dx.doi.org/10.5281/zenodo.18463)\n\n[![Documentation Status](https://readthedocs.org/projects/fil-finder/badge/?version=latest)](https://readthedocs.org/projects/fil-finder/?badge=latest)\n\n[![Build Status](https://travis-ci.org/e-koch/FilFinder.svg?branch=master)](https://travis-ci.org/e-koch/FilFinder)\n\n**See tutorial here! [FilFinder Tutorial](http://nbviewer.ipython.org/github/e-koch/FilFinder/blob/master/examples/FilFinder%20Tutorial.ipynb)**\n\n**Check out our gallery page: [FilFinder Gallery](http://e-koch.github.io/FilFinder_Results/)**\n\nBrief Description\n-----------------\n**Please note: FilFinder currently only supports python 2.x. Support for python3 is planned, but not yet available.**\n\nFilFinder is a Python package for extraction and analysis of filamentary structure in molecular clouds. In particular, the algorithm is capable of uniformly extracting structure over a large dynamical range in intensity (see images below).\n\nThe algorithm proceeds through multiple steps:\n\n* FilFinder segments filamentary structure by using [adaptive thresholding](http://scikit-image.org/docs/dev/auto_examples/plot_threshold_adaptive.html). This performs thresholding over local neighborhoods, allowing for the extraction of structure over a large dynamic range.\n* The final filament mask is constructed by applying morphological operators to remove extraneous small regions. The order of these operations are:\n    * Flatten using an arctan transform - this removes the effects of small bright features (ie. cores) from effecting the filament mask.\n    * Smooth with a small median filter (half the size of the expected filament widths) - this decreases fragmentation of regions in the final mask \n    * Apply the adaptive threshold - the patch size is set to the expected filament width (0.1 pc) by default - this sets the scale of the objects to be detected. Within a factor of a few, this size does not effect the result greatly. The widths of the masked regions are not used for deriving any physical properties.\n    * Objects below a set area threshold are removed to give the final mask - For the HGBS data, we found a good threshold was $$\\sim 5\\times(0.1)^2$$ pc$$^2$$, but this may change depending on the data the algorithm is used on.\n* The final regions are reduced to skeletons via a [Medial Axis Transform](http://scikit-image.org/docs/dev/auto_examples/plot_medial_transform.html) for further analysis.\n* Pixels within each skeleton are classified by the number of connecting pixels. A pixel can be a body point, end point, or intersection point. The skeletons are broken up into a set of branches to determine the length.\n* The length is determined by converting the set of branches into a graph. Nodes on the graph are intersections and end points. The branches make up the connections and their weighting in the graph is determined by their length and average intensity. A shortest path algorithm determines the longest path through the skeleton, which is reported as the main length.\n* The skeletons are then pruned by removing branches that are: not in the main length, will not affect the connectivity of the entire graph if they are removed, and whose length and average intensity are below a set threshold. \n* The width of the filament is determined by building a radial profile using the distance from the skeleton. This is accomplished by using a Euclidean Distance Transform and binning the intensity values of the pixels based on their minimum distance from a skeleton pixel. By default, a Gaussian with a constant background is fit to the profile. A Lorentzian model and non-parametric model are also available in the package. The reported filament width is the FWHM after deconvolving with the the FWHM of the beam.\n* A measure of filament direction and curvature is found using the [Rolling Hough Transform](http://adsabs.harvard.edu/abs/2014ApJ...789...82C). This method returns a distribution of angles, from which the mean and variance are  defined using circular statistics.\n\nThese are the basic steps of the algorithm, which will return the main filament properties: local amplitude and background, width, length, orientation and curvature. Additional tools are available, such as creating a filament-only image based on the properties of the radial fits.\n\nThe resulting mask and skeletons may be saved in FITS format. Property tables may be saved as a csv, fits or latex table. See the ```fil_finder_2D``` documentation for more details.\n\n\nContributing\n------------\n\nWe welcome any user feedback on FilFinder's performance. If you find an issue with the code, or would like to request additional features, please raise an issue in the repository or send me an email at the address on [this page](https://github.com/e-koch).\n\nWe also welcome and encourage contributions to the code base! We want this package to evolve into a tool developed for the community, by the community.\n\nInstallation\n------------\n\nFilFinder can be installed via pip:\n\n```\npip install FilFinder\n```\n\nTo install from the repository, run:\n```\npython setup.py install\n```\n\n**NOTE:** Due to install conflicts amongst FilFinder's dependencies, installing the package will **NOT** install the dependencies. To check if you have the necessary packages installed, run:\n```\npython setup.py check_deps\n```\nUnfortunately, this is only available when installing from the repository.\n\nPackage Dependencies\n--------------------\n\nRequires:\n\n *   numpy >= 1.7.1\n *   matplotlib\n *   astropy >= 0.4.0\n *   scipy\n *   scikits-image >= 0.8.0\n *   networkx\n\nOptional:\n\n *  prettyplotlib (https://github.com/olgabot/prettyplotlib) - *Will eventually be removed in a future release*\n *  aplpy\n\nExample Images\n--------------\n**Want to see more results and examples? Check out our gallery page: [FilFinder Gallery](http://e-koch.github.io/FilFinder_Results/)**\n\nData shown below is from the Herschel Gould Belt Survey (Andre et al. 2010).\n\nA close-up of the Chamaeleon I at 350 microns.\n![Chameleon-350](images/chamaeleon-350_closeup.png \"Chameleon-350\")\n\n\nW3 and IC-1795 in the Aquila region also at 350 microns.\n![Aquila-350](images/aquila-350_closeup.png \"Aquila-350\")\n\nThe same region with different color scaling to show faint features surrounding the complexes.\n![Aquila-350 Scaled](images/aquila-350_closeup_faint.png \"Aquila-350 Scaled\")\n\n\nSouthern region of Orion at 350 microns.\n![OrionB-350](images/orionB-350_closeup.png \"OrionB-350\")\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/e-koch/fil_finder", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "FilFinder", "package_url": "https://pypi.org/project/FilFinder/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/FilFinder/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/e-koch/fil_finder"}, "release_url": "https://pypi.org/project/FilFinder/1.2.2/", "requires_dist": null, "requires_python": null, "summary": "Python package for analysis of filamentary structure in molecular clouds.", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>[![DOI](<a href=\"https://zenodo.org/badge/9172/e-koch/FilFinder.svg)%5D(http://dx.doi.org/10.5281/zenodo.18463\" rel=\"nofollow\">https://zenodo.org/badge/9172/e-koch/FilFinder.svg)](http://dx.doi.org/10.5281/zenodo.18463</a>)</p>\n<p>[![Documentation Status](<a href=\"https://readthedocs.org/projects/fil-finder/badge/?version=latest)%5D(https://readthedocs.org/projects/fil-finder/\" rel=\"nofollow\">https://readthedocs.org/projects/fil-finder/badge/?version=latest)](https://readthedocs.org/projects/fil-finder/</a>?badge=latest)</p>\n<p>[![Build Status](<a href=\"https://travis-ci.org/e-koch/FilFinder.svg?branch=master)%5D(https://travis-ci.org/e-koch/FilFinder\" rel=\"nofollow\">https://travis-ci.org/e-koch/FilFinder.svg?branch=master)](https://travis-ci.org/e-koch/FilFinder</a>)</p>\n<p><strong>See tutorial here! [FilFinder Tutorial](http://nbviewer.ipython.org/github/e-koch/FilFinder/blob/master/examples/FilFinder%20Tutorial.ipynb)</strong></p>\n<p><strong>Check out our gallery page: [FilFinder Gallery](http://e-koch.github.io/FilFinder_Results/)</strong></p>\n<div id=\"brief-description\">\n<h2>Brief Description</h2>\n<p><strong>Please note: FilFinder currently only supports python 2.x. Support for python3 is planned, but not yet available.</strong></p>\n<p>FilFinder is a Python package for extraction and analysis of filamentary structure in molecular clouds. In particular, the algorithm is capable of uniformly extracting structure over a large dynamical range in intensity (see images below).</p>\n<p>The algorithm proceeds through multiple steps:</p>\n<ul>\n<li>FilFinder segments filamentary structure by using [adaptive thresholding](<a href=\"http://scikit-image.org/docs/dev/auto_examples/plot_threshold_adaptive.html\" rel=\"nofollow\">http://scikit-image.org/docs/dev/auto_examples/plot_threshold_adaptive.html</a>). This performs thresholding over local neighborhoods, allowing for the extraction of structure over a large dynamic range.</li>\n<li><dl>\n<dt>The final filament mask is constructed by applying morphological operators to remove extraneous small regions. The order of these operations are:</dt>\n<dd><ul>\n<li>Flatten using an arctan transform - this removes the effects of small bright features (ie. cores) from effecting the filament mask.</li>\n<li>Smooth with a small median filter (half the size of the expected filament widths) - this decreases fragmentation of regions in the final mask</li>\n<li>Apply the adaptive threshold - the patch size is set to the expected filament width (0.1 pc) by default - this sets the scale of the objects to be detected. Within a factor of a few, this size does not effect the result greatly. The widths of the masked regions are not used for deriving any physical properties.</li>\n<li>Objects below a set area threshold are removed to give the final mask - For the HGBS data, we found a good threshold was $$sim 5times(0.1)^2$$ pc$$^2$$, but this may change depending on the data the algorithm is used on.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>The final regions are reduced to skeletons via a [Medial Axis Transform](<a href=\"http://scikit-image.org/docs/dev/auto_examples/plot_medial_transform.html\" rel=\"nofollow\">http://scikit-image.org/docs/dev/auto_examples/plot_medial_transform.html</a>) for further analysis.</li>\n<li>Pixels within each skeleton are classified by the number of connecting pixels. A pixel can be a body point, end point, or intersection point. The skeletons are broken up into a set of branches to determine the length.</li>\n<li>The length is determined by converting the set of branches into a graph. Nodes on the graph are intersections and end points. The branches make up the connections and their weighting in the graph is determined by their length and average intensity. A shortest path algorithm determines the longest path through the skeleton, which is reported as the main length.</li>\n<li>The skeletons are then pruned by removing branches that are: not in the main length, will not affect the connectivity of the entire graph if they are removed, and whose length and average intensity are below a set threshold.</li>\n<li>The width of the filament is determined by building a radial profile using the distance from the skeleton. This is accomplished by using a Euclidean Distance Transform and binning the intensity values of the pixels based on their minimum distance from a skeleton pixel. By default, a Gaussian with a constant background is fit to the profile. A Lorentzian model and non-parametric model are also available in the package. The reported filament width is the FWHM after deconvolving with the the FWHM of the beam.</li>\n<li>A measure of filament direction and curvature is found using the [Rolling Hough Transform](<a href=\"http://adsabs.harvard.edu/abs/2014ApJ...789...82C\" rel=\"nofollow\">http://adsabs.harvard.edu/abs/2014ApJ\u2026789\u202682C</a>). This method returns a distribution of angles, from which the mean and variance are  defined using circular statistics.</li>\n</ul>\n<p>These are the basic steps of the algorithm, which will return the main filament properties: local amplitude and background, width, length, orientation and curvature. Additional tools are available, such as creating a filament-only image based on the properties of the radial fits.</p>\n<p>The resulting mask and skeletons may be saved in FITS format. Property tables may be saved as a csv, fits or latex table. See the <tt>`fil_finder_2D`</tt> documentation for more details.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>We welcome any user feedback on FilFinder\u2019s performance. If you find an issue with the code, or would like to request additional features, please raise an issue in the repository or send me an email at the address on [this page](<a href=\"https://github.com/e-koch\" rel=\"nofollow\">https://github.com/e-koch</a>).</p>\n<p>We also welcome and encourage contributions to the code base! We want this package to evolve into a tool developed for the community, by the community.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>FilFinder can be installed via pip:</p>\n<p><tt>`\npip install FilFinder\n`</tt></p>\n<p>To install from the repository, run:\n<tt>`\npython setup.py install\n`</tt></p>\n<p><strong>NOTE:</strong> Due to install conflicts amongst FilFinder\u2019s dependencies, installing the package will <strong>NOT</strong> install the dependencies. To check if you have the necessary packages installed, run:\n<tt>`\npython setup.py check_deps\n`</tt>\nUnfortunately, this is only available when installing from the repository.</p>\n</div>\n<div id=\"package-dependencies\">\n<h2>Package Dependencies</h2>\n<p>Requires:</p>\n<blockquote>\n<ul>\n<li>numpy &gt;= 1.7.1</li>\n<li>matplotlib</li>\n<li>astropy &gt;= 0.4.0</li>\n<li>scipy</li>\n<li>scikits-image &gt;= 0.8.0</li>\n<li>networkx</li>\n</ul>\n</blockquote>\n<p>Optional:</p>\n<blockquote>\n<ul>\n<li>prettyplotlib (<a href=\"https://github.com/olgabot/prettyplotlib\" rel=\"nofollow\">https://github.com/olgabot/prettyplotlib</a>) - <em>Will eventually be removed in a future release</em></li>\n<li>aplpy</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"example-images\">\n<h2>Example Images</h2>\n<p><strong>Want to see more results and examples? Check out our gallery page: [FilFinder Gallery](http://e-koch.github.io/FilFinder_Results/)</strong></p>\n<p>Data shown below is from the Herschel Gould Belt Survey (Andre et al. 2010).</p>\n<p>A close-up of the Chamaeleon I at 350 microns.\n![Chameleon-350](images/chamaeleon-350_closeup.png \u201cChameleon-350\u201d)</p>\n<p>W3 and IC-1795 in the Aquila region also at 350 microns.\n![Aquila-350](images/aquila-350_closeup.png \u201cAquila-350\u201d)</p>\n<p>The same region with different color scaling to show faint features surrounding the complexes.\n![Aquila-350 Scaled](images/aquila-350_closeup_faint.png \u201cAquila-350 Scaled\u201d)</p>\n<p>Southern region of Orion at 350 microns.\n![OrionB-350](images/orionB-350_closeup.png \u201cOrionB-350\u201d)</p>\n</div>\n\n          </div>"}, "last_serial": 1794053, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e684c3504a561029f2fc93c6f375b904", "sha256": "3577df82e5e6e434384beeec066aad51aca85e473d0dc0d4e4bcccf446e2cc85"}, "downloads": -1, "filename": "FilFinder-1.0.tar.gz", "has_sig": false, "md5_digest": "e684c3504a561029f2fc93c6f375b904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35826, "upload_time": "2015-02-23T21:00:42", "upload_time_iso_8601": "2015-02-23T21:00:42.846982Z", "url": "https://files.pythonhosted.org/packages/5a/70/4cccf37031fcab32c7622e7f584681faecb9d177987894e40767a84c58b5/FilFinder-1.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "15129910931292523d9c1e39ac1b0435", "sha256": "51483ca793941f2dd734e8ef569ac0ace6629f9591ed51624a9fd886affeb677"}, "downloads": -1, "filename": "FilFinder-1.2.1.tar.gz", "has_sig": false, "md5_digest": "15129910931292523d9c1e39ac1b0435", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45323, "upload_time": "2015-07-09T21:20:15", "upload_time_iso_8601": "2015-07-09T21:20:15.563174Z", "url": "https://files.pythonhosted.org/packages/65/28/c3e1fedffae232738c839c4e41b9596007c9555917a3fa5b16ab55c721b6/FilFinder-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "36bb5ba64280d1eb21b0163fe4aa698a", "sha256": "9e21d4dd0d1937c4b353ec085d12c9a62cb650d65e3000ea118c4e7868493afc"}, "downloads": -1, "filename": "FilFinder-1.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "36bb5ba64280d1eb21b0163fe4aa698a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 44127, "upload_time": "2015-10-30T17:19:47", "upload_time_iso_8601": "2015-10-30T17:19:47.301709Z", "url": "https://files.pythonhosted.org/packages/43/33/3f3b212fd4281e8739d5a790123afc1beb9d49d2a9768b0932da72a19ddc/FilFinder-1.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d5be6633c63e3ec57099eca15ae5628", "sha256": "6d5c283d7a8a65018e756811945cc5d919c9d224fccb4a4d3636f4014bac8d54"}, "downloads": -1, "filename": "FilFinder-1.2.2.tar.gz", "has_sig": false, "md5_digest": "6d5be6633c63e3ec57099eca15ae5628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46389, "upload_time": "2015-10-30T17:19:11", "upload_time_iso_8601": "2015-10-30T17:19:11.080265Z", "url": "https://files.pythonhosted.org/packages/ff/44/b2c4be4c0a18fbee50145f9f0804ea61d8dacbd4cd36c169c713be7e8fe7/FilFinder-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36bb5ba64280d1eb21b0163fe4aa698a", "sha256": "9e21d4dd0d1937c4b353ec085d12c9a62cb650d65e3000ea118c4e7868493afc"}, "downloads": -1, "filename": "FilFinder-1.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "36bb5ba64280d1eb21b0163fe4aa698a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 44127, "upload_time": "2015-10-30T17:19:47", "upload_time_iso_8601": "2015-10-30T17:19:47.301709Z", "url": "https://files.pythonhosted.org/packages/43/33/3f3b212fd4281e8739d5a790123afc1beb9d49d2a9768b0932da72a19ddc/FilFinder-1.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d5be6633c63e3ec57099eca15ae5628", "sha256": "6d5c283d7a8a65018e756811945cc5d919c9d224fccb4a4d3636f4014bac8d54"}, "downloads": -1, "filename": "FilFinder-1.2.2.tar.gz", "has_sig": false, "md5_digest": "6d5be6633c63e3ec57099eca15ae5628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46389, "upload_time": "2015-10-30T17:19:11", "upload_time_iso_8601": "2015-10-30T17:19:11.080265Z", "url": "https://files.pythonhosted.org/packages/ff/44/b2c4be4c0a18fbee50145f9f0804ea61d8dacbd4cd36c169c713be7e8fe7/FilFinder-1.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:30 2020"}