{"info": {"author": "chaoran zhang", "author_email": "en756303625@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "MachoAnalysis\n=============\n\n**MachoAnalysis** is a collection of utils written in python2 to help\ndevelopers analysis Mach-O Binaries.At this time,it can help us to\nfigure out which module call some target functions,and the dependencies\nbetween the modules in a binary.\n\nUseAge\n------\n\n**To figure out which module call some target functions**,you can do\nthis in your python script:\n\n.. code:: python\n\n    import macho_analysis;\n\n    module_array = macho_analysis.utils.findCallingSymbolModule(\"_NSLog\",\"linkmap_path\",\"disassemblyfile_path\")];\n\nThe *findCallingSymbolModule* function take three arguments,which are\nthe name of the symbol(in this case,is the \\_NSLog),the path to the\nlinkmap file which is generated by xcode, and the path to disassembly\ncode file generated by otool(otool -t -V -arch [arch] [macho\\_path])\nutil in xcode app.It returns an array contains the name of all the\nmodules that call the symbol.\n\n**To find the dependencies between the modules**,you can do this in your\npython script:\n\n.. code:: python\n\n    import macho_analysis;\n\n    lib_dep_hash = macho_analysis.utils.findDependency(lib_path_array,'armv7');\n\nThe *findDependency* function takes two arguments,the first is an array\ncontains the paths to the libs,and the second is the arch name which\nwill be passed to the nm utils in the xcode.It returns a dictionary,the\nkey is the lib name,and its value is also a dictionary,which map the\nlib's undefined symbol to the module that defines it.\n\nPrerequisites\n-------------\n\nWe need xcode to run this tool.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eeeyes/macho_analysis.git", "keywords": "macho analysis symbol module dependencies", "license": "MIT", "maintainer": "chaoran zhang", "maintainer_email": "en756303625@163.com", "name": "macho_analysis", "package_url": "https://pypi.org/project/macho_analysis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/macho_analysis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/eeeyes/macho_analysis.git"}, "release_url": "https://pypi.org/project/macho_analysis/0.011/", "requires_dist": null, "requires_python": null, "summary": "some utils to help analysis macho files,include util to find which module call the symbol and the dependencies between the modules", "version": "0.011", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>MachoAnalysis</strong> is a collection of utils written in python2 to help\ndevelopers analysis Mach-O Binaries.At this time,it can help us to\nfigure out which module call some target functions,and the dependencies\nbetween the modules in a binary.</p>\n<div id=\"useage\">\n<h2>UseAge</h2>\n<p><strong>To figure out which module call some target functions</strong>,you can do\nthis in your python script:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">macho_analysis</span><span class=\"p\">;</span>\n\n<span class=\"n\">module_array</span> <span class=\"o\">=</span> <span class=\"n\">macho_analysis</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">findCallingSymbolModule</span><span class=\"p\">(</span><span class=\"s2\">\"_NSLog\"</span><span class=\"p\">,</span><span class=\"s2\">\"linkmap_path\"</span><span class=\"p\">,</span><span class=\"s2\">\"disassemblyfile_path\"</span><span class=\"p\">)];</span>\n</pre>\n<p>The <em>findCallingSymbolModule</em> function take three arguments,which are\nthe name of the symbol(in this case,is the _NSLog),the path to the\nlinkmap file which is generated by xcode, and the path to disassembly\ncode file generated by otool(otool -t -V -arch [arch] [macho_path])\nutil in xcode app.It returns an array contains the name of all the\nmodules that call the symbol.</p>\n<p><strong>To find the dependencies between the modules</strong>,you can do this in your\npython script:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">macho_analysis</span><span class=\"p\">;</span>\n\n<span class=\"n\">lib_dep_hash</span> <span class=\"o\">=</span> <span class=\"n\">macho_analysis</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">findDependency</span><span class=\"p\">(</span><span class=\"n\">lib_path_array</span><span class=\"p\">,</span><span class=\"s1\">'armv7'</span><span class=\"p\">);</span>\n</pre>\n<p>The <em>findDependency</em> function takes two arguments,the first is an array\ncontains the paths to the libs,and the second is the arch name which\nwill be passed to the nm utils in the xcode.It returns a dictionary,the\nkey is the lib name,and its value is also a dictionary,which map the\nlib\u2019s undefined symbol to the module that defines it.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>We need xcode to run this tool.</p>\n</div>\n\n          </div>"}, "last_serial": 2037768, "releases": {"0.01": [{"comment_text": "", "digests": {"md5": "cb9a4385e6bb487c9908541220e4fe8c", "sha256": "c0da4362355e48eb220634367ad9551d9ed00dbc3a6f4581deb9737dd72b2a00"}, "downloads": -1, "filename": "macho_analysis-0.01.tar.gz", "has_sig": false, "md5_digest": "cb9a4385e6bb487c9908541220e4fe8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4372, "upload_time": "2016-03-31T07:01:55", "upload_time_iso_8601": "2016-03-31T07:01:55.648379Z", "url": "https://files.pythonhosted.org/packages/aa/17/c167f065d0b5b458ccd0c5e9a2099dca6d76ee542e104b23f97abf96b0e8/macho_analysis-0.01.tar.gz", "yanked": false}], "0.011": [{"comment_text": "", "digests": {"md5": "1f57b414d2bdd7431a41a416ab41f363", "sha256": "8d3f14283a26050bf284678bc142f945b22e174a932b3d4164d752a5816189bb"}, "downloads": -1, "filename": "macho_analysis-0.011.tar.gz", "has_sig": false, "md5_digest": "1f57b414d2bdd7431a41a416ab41f363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4597, "upload_time": "2016-03-31T09:07:25", "upload_time_iso_8601": "2016-03-31T09:07:25.481607Z", "url": "https://files.pythonhosted.org/packages/e6/cb/2436c77189e7c50ef5bffbaba5740d0b596dec9c3f6895281f274e69495a/macho_analysis-0.011.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f57b414d2bdd7431a41a416ab41f363", "sha256": "8d3f14283a26050bf284678bc142f945b22e174a932b3d4164d752a5816189bb"}, "downloads": -1, "filename": "macho_analysis-0.011.tar.gz", "has_sig": false, "md5_digest": "1f57b414d2bdd7431a41a416ab41f363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4597, "upload_time": "2016-03-31T09:07:25", "upload_time_iso_8601": "2016-03-31T09:07:25.481607Z", "url": "https://files.pythonhosted.org/packages/e6/cb/2436c77189e7c50ef5bffbaba5740d0b596dec9c3f6895281f274e69495a/macho_analysis-0.011.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:19 2020"}