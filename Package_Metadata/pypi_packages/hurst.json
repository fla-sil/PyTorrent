{"info": {"author": "Dmitry Mottl", "author_email": "dmitry.mottl@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Mathematics"], "description": "# hurst\n## Hurst exponent evaluation and R/S-analysis\n\n![Python 2.7](https://img.shields.io/badge/python-2.7-blue.svg)\n![Python 3x](https://img.shields.io/badge/python-3.x-blue.svg)\n[![Build Status](https://travis-ci.org/Mottl/hurst.svg?branch=master)](https://travis-ci.org/Mottl/hurst)\n[![pypi](https://img.shields.io/pypi/v/hurst.svg)](https://pypi.org/project/hurst/)\n[![Downloads](https://pepy.tech/badge/hurst)](https://pepy.tech/project/hurst)\n\n**hurst** is a small Python module for analysing __random walks__ and evaluating the __Hurst exponent (H)__.\n\nH = 0.5 \u2014 Brownian motion,  \n0.5 < H < 1.0 \u2014 persistent behavior,  \n0 < H < 0.5 \u2014 anti-persistent behavior.  \n\n## Installation\nInstall **hurst** module with  \n`pip install hurst`  \nor    \n`pip install -e git+https://github.com/Mottl/hurst#egg=hurst`\n\n## Usage\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom hurst import compute_Hc, random_walk\n\n# Use random_walk() function or generate a random walk series manually:\n# series = random_walk(99999, cumprod=True)\nnp.random.seed(42)\nrandom_changes = 1. + np.random.randn(99999) / 1000.\nseries = np.cumprod(random_changes)  # create a random walk from random changes\n\n# Evaluate Hurst equation\nH, c, data = compute_Hc(series, kind='price', simplified=True)\n\n# Plot\nf, ax = plt.subplots()\nax.plot(data[0], c*data[0]**H, color=\"deepskyblue\")\nax.scatter(data[0], data[1], color=\"purple\")\nax.set_xscale('log')\nax.set_yscale('log')\nax.set_xlabel('Time interval')\nax.set_ylabel('R/S ratio')\nax.grid(True)\nplt.show()\n\nprint(\"H={:.4f}, c={:.4f}\".format(H,c))\n```\n\n![R/S analysis](https://github.com/Mottl/hurst/raw/master/examples/regression.png?raw=true \"R/S analysis\")\n\n```H=0.4964, c=1.4877```\n\n### Kinds of series\nThe `kind` parameter of the `compute_Hc` function can have the following values:  \n`'change'`: a series is just random values (i.e. `np.random.randn(...)`)  \n`'random_walk'`: a series is a cumulative sum of changes (i.e. `np.cumsum(np.random.randn(...))`)  \n`'price'`: a series is a cumulative product of changes (i.e. `np.cumprod(1+epsilon*np.random.randn(...)`)\n\n## Brownian motion, persistent and antipersistent random walks\nYou can generate random walks with `random_walk()` function as following:\n\n### Brownian\n```brownian = random_walk(99999, proba=0.5)```\n\n\n![Brownian motion](https://github.com/Mottl/hurst/raw/master/examples/Brownian_motion.png?raw=true \"Brownian motion\")\n\n### Persistent\n```persistent = random_walk(99999, proba=0.7)```\n\n\n![Persistent random walk](https://github.com/Mottl/hurst/raw/master/examples/Persistent.png?raw=true \"Persistent random walk\")\n\n### Antipersistent\n```antipersistent = random_walk(99999, proba=0.3)```\n\n\n![Antipersistent random walk](https://github.com/Mottl/hurst/raw/master/examples/Antipersistent.png?raw=true \"Antipersistent random walk\")\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Mottl/hurst", "keywords": "hurst fractal econometrics time-series", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hurst", "package_url": "https://pypi.org/project/hurst/", "platform": "", "project_url": "https://pypi.org/project/hurst/", "project_urls": {"Homepage": "https://github.com/Mottl/hurst"}, "release_url": "https://pypi.org/project/hurst/0.0.5/", "requires_dist": ["pandas (>=0.18)", "numpy (>=1.10)"], "requires_python": "", "summary": "Hurst exponent evaluation and R/S-analysis", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hurst</h1>\n<h2>Hurst exponent evaluation and R/S-analysis</h2>\n<p><img alt=\"Python 2.7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab443a453fb606db77dbc21b88fe1c3e09744428/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d322e372d626c75652e737667\">\n<img alt=\"Python 3x\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ac8280d30914a200b71cffb9decb312a7c8cfaa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e782d626c75652e737667\">\n<a href=\"https://travis-ci.org/Mottl/hurst\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5bd010a269adfd54ee72464307923850b053631/68747470733a2f2f7472617669732d63692e6f72672f4d6f74746c2f68757273742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/hurst/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0f863e4d88ae27c3866dc94a66bfe680608fef5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f68757273742e737667\"></a>\n<a href=\"https://pepy.tech/project/hurst\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a1c31290ad6f20dd9fffe5ad64b3b4595982c8a/68747470733a2f2f706570792e746563682f62616467652f6875727374\"></a></p>\n<p><strong>hurst</strong> is a small Python module for analysing <strong>random walks</strong> and evaluating the <strong>Hurst exponent (H)</strong>.</p>\n<p>H = 0.5 \u2014 Brownian motion,<br>\n0.5 &lt; H &lt; 1.0 \u2014 persistent behavior,<br>\n0 &lt; H &lt; 0.5 \u2014 anti-persistent behavior.</p>\n<h2>Installation</h2>\n<p>Install <strong>hurst</strong> module with<br>\n<code>pip install hurst</code><br>\nor<br>\n<code>pip install -e git+https://github.com/Mottl/hurst#egg=hurst</code></p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">hurst</span> <span class=\"kn\">import</span> <span class=\"n\">compute_Hc</span><span class=\"p\">,</span> <span class=\"n\">random_walk</span>\n\n<span class=\"c1\"># Use random_walk() function or generate a random walk series manually:</span>\n<span class=\"c1\"># series = random_walk(99999, cumprod=True)</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">random_changes</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">99999</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mf\">1000.</span>\n<span class=\"n\">series</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cumprod</span><span class=\"p\">(</span><span class=\"n\">random_changes</span><span class=\"p\">)</span>  <span class=\"c1\"># create a random walk from random changes</span>\n\n<span class=\"c1\"># Evaluate Hurst equation</span>\n<span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">compute_Hc</span><span class=\"p\">(</span><span class=\"n\">series</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"s1\">'price'</span><span class=\"p\">,</span> <span class=\"n\">simplified</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot</span>\n<span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">*</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"deepskyblue\"</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"purple\"</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xscale</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_yscale</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">'Time interval'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">'R/S ratio'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"H=</span><span class=\"si\">{:.4f}</span><span class=\"s2\">, c=</span><span class=\"si\">{:.4f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">H</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">))</span>\n</pre>\n<p><img alt=\"R/S analysis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a47c1c492ad0eeda6c206ef85eb4687d409d0a6b/68747470733a2f2f6769746875622e636f6d2f4d6f74746c2f68757273742f7261772f6d61737465722f6578616d706c65732f72656772657373696f6e2e706e673f7261773d74727565\"></p>\n<p><code>H=0.4964, c=1.4877</code></p>\n<h3>Kinds of series</h3>\n<p>The <code>kind</code> parameter of the <code>compute_Hc</code> function can have the following values:<br>\n<code>'change'</code>: a series is just random values (i.e. <code>np.random.randn(...)</code>)<br>\n<code>'random_walk'</code>: a series is a cumulative sum of changes (i.e. <code>np.cumsum(np.random.randn(...))</code>)<br>\n<code>'price'</code>: a series is a cumulative product of changes (i.e. <code>np.cumprod(1+epsilon*np.random.randn(...)</code>)</p>\n<h2>Brownian motion, persistent and antipersistent random walks</h2>\n<p>You can generate random walks with <code>random_walk()</code> function as following:</p>\n<h3>Brownian</h3>\n<p><code>brownian = random_walk(99999, proba=0.5)</code></p>\n<p><img alt=\"Brownian motion\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/837d252e885b24ad698bd531b41d15911ed82236/68747470733a2f2f6769746875622e636f6d2f4d6f74746c2f68757273742f7261772f6d61737465722f6578616d706c65732f42726f776e69616e5f6d6f74696f6e2e706e673f7261773d74727565\"></p>\n<h3>Persistent</h3>\n<p><code>persistent = random_walk(99999, proba=0.7)</code></p>\n<p><img alt=\"Persistent random walk\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1329c1430180460581d120bce1031f0f3404c2b6/68747470733a2f2f6769746875622e636f6d2f4d6f74746c2f68757273742f7261772f6d61737465722f6578616d706c65732f50657273697374656e742e706e673f7261773d74727565\"></p>\n<h3>Antipersistent</h3>\n<p><code>antipersistent = random_walk(99999, proba=0.3)</code></p>\n<p><img alt=\"Antipersistent random walk\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/521517b364d4e3bce47aceaaeca399e4cd9886ed/68747470733a2f2f6769746875622e636f6d2f4d6f74746c2f68757273742f7261772f6d61737465722f6578616d706c65732f416e746970657273697374656e742e706e673f7261773d74727565\"></p>\n\n          </div>"}, "last_serial": 4791132, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "b08817d322ca3a71d532de45fe173a46", "sha256": "6ad6cd31d477ebeaacf5ee463bf778aa86914a280915e2da231e32c04916a17a"}, "downloads": -1, "filename": "hurst-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b08817d322ca3a71d532de45fe173a46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4788, "upload_time": "2018-09-04T17:12:25", "upload_time_iso_8601": "2018-09-04T17:12:25.483953Z", "url": "https://files.pythonhosted.org/packages/7e/2d/79acdbd91b39f1e0a20aa5c54f8e5edf3ca244a21a4dfb3fdd835d74b0e3/hurst-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b092cceb6f9be16c476e0cc0a78a424e", "sha256": "a895c0f12fdbe895976a0a2b0d950452cae15132be984e7a159387f4ad2266db"}, "downloads": -1, "filename": "hurst-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b092cceb6f9be16c476e0cc0a78a424e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4400, "upload_time": "2018-09-04T17:12:26", "upload_time_iso_8601": "2018-09-04T17:12:26.930417Z", "url": "https://files.pythonhosted.org/packages/3f/61/044d2b018e49e45d37891f388af06afea420d2d470202353e39550f6d3d4/hurst-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9edc42da29ebff8d27b0f60217bd65a9", "sha256": "b14dd3b25e1d14ec8cece2bce38a0636ef9ed19fd8062b90c52e6f0adbe3ce26"}, "downloads": -1, "filename": "hurst-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9edc42da29ebff8d27b0f60217bd65a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4904, "upload_time": "2018-09-30T12:40:39", "upload_time_iso_8601": "2018-09-30T12:40:39.117109Z", "url": "https://files.pythonhosted.org/packages/3b/b3/fe2e6e5ac320f997152c60b5cafe0c9ec5711e7a4d9e2e2bda0d53778bd3/hurst-0.0.4-py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "42b4c739a49ead3a6ea9eb450a7161e2", "sha256": "d163f11fe2318aa8979c921d6667b8dfd6205c629924fefbed68505357cf995e"}, "downloads": -1, "filename": "hurst-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "42b4c739a49ead3a6ea9eb450a7161e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5856, "upload_time": "2019-02-07T14:07:07", "upload_time_iso_8601": "2019-02-07T14:07:07.841216Z", "url": "https://files.pythonhosted.org/packages/02/4f/d3471ce0dca03a21d4c6640da07a6040c9cc800a937233086b6cea6a7dc2/hurst-0.0.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42b4c739a49ead3a6ea9eb450a7161e2", "sha256": "d163f11fe2318aa8979c921d6667b8dfd6205c629924fefbed68505357cf995e"}, "downloads": -1, "filename": "hurst-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "42b4c739a49ead3a6ea9eb450a7161e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5856, "upload_time": "2019-02-07T14:07:07", "upload_time_iso_8601": "2019-02-07T14:07:07.841216Z", "url": "https://files.pythonhosted.org/packages/02/4f/d3471ce0dca03a21d4c6640da07a6040c9cc800a937233086b6cea6a7dc2/hurst-0.0.5-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:45 2020"}