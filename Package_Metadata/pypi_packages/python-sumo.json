{"info": {"author": "Karolina Sienkiewicz", "author_email": "sienkiewicz2k@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "\n\n.. short-description-start-marker-do-not-remove\n\n**sumo** is a command-line tool to identify molecular subtypes in multi-omics datasets. It implements a novel nonnegative matrix factorization (NMF) algorithm to identify groups of samples that share molecular signatures, and provides tools to evaluate such assignments.\n\n.. short-description-end-marker-do-not-remove\n\nInstallation\n------------\nYou can install **sumo** from PyPI, by executing command below. Please note that we require **python 3.6+**.\n\n.. code:: sh\n\n    pip install python-sumo\n\nDocumentation\n-------------\nThe official documentation is available at https://python-sumo.readthedocs.io\n\nLicense\n-------\n\n`MIT <LICENSE>`__\n\nUsage\n-----\n\nTypical workflow includes running *prepare* mode for preparation of similarity\nmatrices from feature matrices, followed by factorization of produced multiplex network (mode *run*).\nThird mode *evaluate* can be used for comparison of created cluster labels against biologically significant labels.\n\nprepare\n^^^^^^^\nGenerates similarity matrices for samples based on biological data and saves them into multiplex network files.\n\n::\n\n    usage: sumo prepare [-h] [-method METHOD] [-k K] [-alpha ALPHA]\n                        [-missing MISSING] [-atol ATOL] [-sn SN] [-fn FN] [-df DF]\n                        [-ds DS] [-logfile LOGFILE] [-log {DEBUG,INFO,WARNING}]\n                        [-plot PLOT]\n                        infile1,infile2,... outfile.npz\n\n    positional arguments:\n      infile1,infile2,...   comma-delimited list of paths to input files,\n                            containing standardized feature matrices, with samples\n                            in columns and features in rows (supported types of\n                            files: ['.txt', '.txt.gz', '.txt.bz2', '.tsv',\n                            '.tsv.gz', '.tsv.bz2'])\n      outfile.npz           path to output .npz file\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -method METHOD        either one method of sample-sample similarity\n                            calculation, or comma-separated list of methods for\n                            every layer (available methods: ['euclidean',\n                            'cosine', 'pearson', 'spearman'], default of\n                            euclidean)\n      -k K                  fraction of nearest neighbours to use for sample\n                            similarity calculation using Euclidean distance\n                            similarity (default of 0.1)\n      -alpha ALPHA          hypherparameter of RBF similarity kernel, for\n                            Euclidean distance similarity (default of 0.5)\n      -missing MISSING      acceptable fraction of available values for assessment\n                            of distance/similarity between pairs of samples -\n                            either one value or comma-delimited list for every\n                            layer (default of [0.1])\n      -atol ATOL            if input files have continuous values, sumo checks if\n                            data is standardized feature-wise, meaning all\n                            features should have mean close to zero, with standard\n                            deviation around one; use this parameter to set\n                            tolerance of standardization checks (default of 0.01)\n      -sn SN                index of row with sample names for input files\n                            (default of 0)\n      -fn FN                index of column with feature names for input files\n                            (default of 0)\n      -df DF                if percentage of missing values for feature exceeds\n                            this value, remove feature (default of 0.1)\n      -ds DS                if percentage of missing values for sample (that\n                            remains after feature dropping) exceeds this value,\n                            remove sample (default of 0.1)\n      -logfile LOGFILE      path to save log file, by default stdout is used\n      -log {DEBUG,INFO,WARNING}\n                            sets the logging level (default of INFO)\n      -plot PLOT            path to save adjacency matrix heatmap(s), by default\n                            plots are displayed on screen\n\n**Example**\n\n.. code:: sh\n\n    sumo prepare -plot plot.png methylation.txt,expression.txt prepared.data.npz\n\nrun\n^^^\nCluster multiplex network using non-negative matrix tri-factorization to identify molecular subtypes.\n\n::\n\n    usage: sumo run [-h] [-sparsity SPARSITY] [-n N]\n                    [-method {max_value,spectral}] [-max_iter MAX_ITER] [-tol TOL]\n                    [-calc_cost CALC_COST] [-logfile LOGFILE]\n                    [-log {DEBUG,INFO,WARNING}] [-h_init H_INIT] [-t T]\n                    infile.npz k outdir\n\n    positional arguments:\n      infile.npz            input .npz file containing adjacency matrices for\n                            every network layer and sample names (file created by\n                            running program with mode \"run\") - consecutive\n                            adjacency arrays in file are indexed in following way:\n                            \"0\", \"1\" ... and index of sample name vector is\n                            \"samples\"\n      k                     either one value describing number of clusters or\n                            coma-delimited range of values to check (sumo will\n                            suggest cluster structure based on cophenetic\n                            correlation coefficient)\n      outdir                path to save output files\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -sparsity SPARSITY    either one value or coma-delimited list of sparsity\n                            penalty values for H matrix (sumo will try different\n                            values and select the best results; default of [0.1])\n      -n N                  number of repetitions (default of 50)\n      -method {max_value,spectral}\n                            method of cluster extraction (default of \"max_value\")\n      -max_iter MAX_ITER    maximum number of iterations for factorization\n                            (default of 500)\n      -tol TOL              if objective cost function value fluctuation (|\u0394\u2112|) is\n                            smaller than this value, stop iterations before\n                            reaching max_iter (default of 1e-05)\n      -calc_cost CALC_COST  number of steps between every calculation of objective\n                            cost function (default of 20)\n      -logfile LOGFILE      path to save log file (by default printed to stdout)\n      -log {DEBUG,INFO,WARNING}\n                            set the logging level (default of INFO)\n      -h_init H_INIT        index of adjacency matrix to use for H matrix\n                            initialization (by default using average adjacency)\n      -t T                  number of threads (default of 1)\n\n**Example**\n\n.. code:: sh\n\n    sumo run -t 10 prepared.data.npz 2,5 results_dir\n\nevaluate\n^^^^^^^^\nEvaluate clustering results, given set of labels.\n\n::\n\n    usage: sumo evaluate [-h] [-metric {NMI,purity,ARI}] [-logfile LOGFILE]\n                         infile.tsv labels\n\n    positional arguments:\n      infile.tsv            input .tsv file containing sample names in 'sample'\n                            and clustering labels in 'label' column (clusters.tsv\n                            file created by running sumo with mode 'run')\n      labels                .tsv of the same structure as input file\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -metric {NMI,purity,ARI}\n                            metric for accuracy evaluation (by default all metrics\n                            are calculated)\n      -logfile LOGFILE      path to save log file (by default printed to stdout)\n      -log {DEBUG,INFO,WARNING}\n                        sets the logging level (default of INFO)\n\n**Example**\n\n.. code:: sh\n\n    sumo evaluate results_dir/k3/clusters.tsv labels.tsv\n\ninterpret\n^^^^^^^^^\nFind features that support clusters separation.\n\n::\n\n    usage: sumo interpret [-h] [-logfile LOGFILE] [-log {DEBUG,INFO,WARNING}]\n                          [-hits HITS] [-max_iter MAX_ITER] [-n_folds N_FOLDS]\n                          [-t T] [-seed SEED] [-sn SN] [-fn FN] [-df DF] [-ds DS]\n                          sumo_results.npz infile1,infile2,... output_prefix\n\n    positional arguments:\n      sumo_results.npz      path to sumo_results.npz (created by running program\n                            with mode \"run\")\n      infile1,infile2,...   comma-delimited list of paths to input files,\n                            containing standardized feature matrices, with samples\n                            in columns and features in rows(supported types of\n                            files: ['.txt', '.txt.gz', '.txt.bz2', '.tsv',\n                            '.tsv.gz', '.tsv.bz2'])\n      output_prefix         prefix of output files - sumo will create two output\n                            files (1) .tsv file containing matrix (features x\n                            clusters), where the value in each cell is the\n                            importance of the feature in that cluster; (2)\n                            .hits.tsv file containing features of most importance\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -logfile LOGFILE      path to save log file (by default printed to stdout)\n      -log {DEBUG,INFO,WARNING}\n                            sets the logging level (default of INFO)\n      -hits HITS            sets number of most important features for every\n                            cluster, that are logged in .hits.tsv file\n      -max_iter MAX_ITER    maximum number of iterations, while searching through\n                            hyperparameter space\n      -n_folds N_FOLDS      number of folds for model cross validation (default of\n                            5)\n      -t T                  number of threads (default of 1)\n      -seed SEED            random state (default of 1)\n      -sn SN                index of row with sample names for input files\n                            (default of 0)\n      -fn FN                index of column with feature names for input files\n                            (default of 0)\n      -df DF                if percentage of missing values for feature exceeds\n                            this value, remove feature (default of 0.1)\n      -ds DS                if percentage of missing values for sample (that\n                            remains after feature dropping) exceeds this value,\n                            remove sample (default of 0.1)\n\n**Example**\n\n.. code:: sh\n\n    sumo interpret results_dir/k3/sumo_results.npz methylation.txt,expression.txt interpret_results\n\n.. inclusion-end-marker-do-not-remove\n\nPlease refer to documentation for `example usage cases and suggestions for data preprocessing <https://python-sumo.readthedocs.io/en/latest/example.html>`_.\n\n.. \n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ratan-lab/sumo", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-sumo", "package_url": "https://pypi.org/project/python-sumo/", "platform": "", "project_url": "https://pypi.org/project/python-sumo/", "project_urls": {"Homepage": "https://github.com/ratan-lab/sumo"}, "release_url": "https://pypi.org/project/python-sumo/0.2.4/", "requires_dist": ["seaborn", "scikit-learn", "scipy", "matplotlib", "numpy", "pandas", "lightgbm", "hyperopt", "shap"], "requires_python": "", "summary": "**sumo** is a command-line tool to identify molecular subtypes in multi-omics datasets. It implements a novel nonnegative matrix factorization (NMF) algorithm to identify groups of samples that share molecular signatures, and provides tools to evaluate such assignments.", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>sumo</strong> is a command-line tool to identify molecular subtypes in multi-omics datasets. It implements a novel nonnegative matrix factorization (NMF) algorithm to identify groups of samples that share molecular signatures, and provides tools to evaluate such assignments.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <strong>sumo</strong> from PyPI, by executing command below. Please note that we require <strong>python 3.6+</strong>.</p>\n<pre>pip install python-sumo\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The official documentation is available at <a href=\"https://python-sumo.readthedocs.io\" rel=\"nofollow\">https://python-sumo.readthedocs.io</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Typical workflow includes running <em>prepare</em> mode for preparation of similarity\nmatrices from feature matrices, followed by factorization of produced multiplex network (mode <em>run</em>).\nThird mode <em>evaluate</em> can be used for comparison of created cluster labels against biologically significant labels.</p>\n<div id=\"prepare\">\n<h3>prepare</h3>\n<p>Generates similarity matrices for samples based on biological data and saves them into multiplex network files.</p>\n<pre>usage: sumo prepare [-h] [-method METHOD] [-k K] [-alpha ALPHA]\n                    [-missing MISSING] [-atol ATOL] [-sn SN] [-fn FN] [-df DF]\n                    [-ds DS] [-logfile LOGFILE] [-log {DEBUG,INFO,WARNING}]\n                    [-plot PLOT]\n                    infile1,infile2,... outfile.npz\n\npositional arguments:\n  infile1,infile2,...   comma-delimited list of paths to input files,\n                        containing standardized feature matrices, with samples\n                        in columns and features in rows (supported types of\n                        files: ['.txt', '.txt.gz', '.txt.bz2', '.tsv',\n                        '.tsv.gz', '.tsv.bz2'])\n  outfile.npz           path to output .npz file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -method METHOD        either one method of sample-sample similarity\n                        calculation, or comma-separated list of methods for\n                        every layer (available methods: ['euclidean',\n                        'cosine', 'pearson', 'spearman'], default of\n                        euclidean)\n  -k K                  fraction of nearest neighbours to use for sample\n                        similarity calculation using Euclidean distance\n                        similarity (default of 0.1)\n  -alpha ALPHA          hypherparameter of RBF similarity kernel, for\n                        Euclidean distance similarity (default of 0.5)\n  -missing MISSING      acceptable fraction of available values for assessment\n                        of distance/similarity between pairs of samples -\n                        either one value or comma-delimited list for every\n                        layer (default of [0.1])\n  -atol ATOL            if input files have continuous values, sumo checks if\n                        data is standardized feature-wise, meaning all\n                        features should have mean close to zero, with standard\n                        deviation around one; use this parameter to set\n                        tolerance of standardization checks (default of 0.01)\n  -sn SN                index of row with sample names for input files\n                        (default of 0)\n  -fn FN                index of column with feature names for input files\n                        (default of 0)\n  -df DF                if percentage of missing values for feature exceeds\n                        this value, remove feature (default of 0.1)\n  -ds DS                if percentage of missing values for sample (that\n                        remains after feature dropping) exceeds this value,\n                        remove sample (default of 0.1)\n  -logfile LOGFILE      path to save log file, by default stdout is used\n  -log {DEBUG,INFO,WARNING}\n                        sets the logging level (default of INFO)\n  -plot PLOT            path to save adjacency matrix heatmap(s), by default\n                        plots are displayed on screen\n</pre>\n<p><strong>Example</strong></p>\n<pre>sumo prepare -plot plot.png methylation.txt,expression.txt prepared.data.npz\n</pre>\n</div>\n<div id=\"run\">\n<h3>run</h3>\n<p>Cluster multiplex network using non-negative matrix tri-factorization to identify molecular subtypes.</p>\n<pre>usage: sumo run [-h] [-sparsity SPARSITY] [-n N]\n                [-method {max_value,spectral}] [-max_iter MAX_ITER] [-tol TOL]\n                [-calc_cost CALC_COST] [-logfile LOGFILE]\n                [-log {DEBUG,INFO,WARNING}] [-h_init H_INIT] [-t T]\n                infile.npz k outdir\n\npositional arguments:\n  infile.npz            input .npz file containing adjacency matrices for\n                        every network layer and sample names (file created by\n                        running program with mode \"run\") - consecutive\n                        adjacency arrays in file are indexed in following way:\n                        \"0\", \"1\" ... and index of sample name vector is\n                        \"samples\"\n  k                     either one value describing number of clusters or\n                        coma-delimited range of values to check (sumo will\n                        suggest cluster structure based on cophenetic\n                        correlation coefficient)\n  outdir                path to save output files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -sparsity SPARSITY    either one value or coma-delimited list of sparsity\n                        penalty values for H matrix (sumo will try different\n                        values and select the best results; default of [0.1])\n  -n N                  number of repetitions (default of 50)\n  -method {max_value,spectral}\n                        method of cluster extraction (default of \"max_value\")\n  -max_iter MAX_ITER    maximum number of iterations for factorization\n                        (default of 500)\n  -tol TOL              if objective cost function value fluctuation (|\u0394\u2112|) is\n                        smaller than this value, stop iterations before\n                        reaching max_iter (default of 1e-05)\n  -calc_cost CALC_COST  number of steps between every calculation of objective\n                        cost function (default of 20)\n  -logfile LOGFILE      path to save log file (by default printed to stdout)\n  -log {DEBUG,INFO,WARNING}\n                        set the logging level (default of INFO)\n  -h_init H_INIT        index of adjacency matrix to use for H matrix\n                        initialization (by default using average adjacency)\n  -t T                  number of threads (default of 1)\n</pre>\n<p><strong>Example</strong></p>\n<pre>sumo run -t <span class=\"m\">10</span> prepared.data.npz <span class=\"m\">2</span>,5 results_dir\n</pre>\n</div>\n<div id=\"evaluate\">\n<h3>evaluate</h3>\n<p>Evaluate clustering results, given set of labels.</p>\n<pre>usage: sumo evaluate [-h] [-metric {NMI,purity,ARI}] [-logfile LOGFILE]\n                     infile.tsv labels\n\npositional arguments:\n  infile.tsv            input .tsv file containing sample names in 'sample'\n                        and clustering labels in 'label' column (clusters.tsv\n                        file created by running sumo with mode 'run')\n  labels                .tsv of the same structure as input file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -metric {NMI,purity,ARI}\n                        metric for accuracy evaluation (by default all metrics\n                        are calculated)\n  -logfile LOGFILE      path to save log file (by default printed to stdout)\n  -log {DEBUG,INFO,WARNING}\n                    sets the logging level (default of INFO)\n</pre>\n<p><strong>Example</strong></p>\n<pre>sumo evaluate results_dir/k3/clusters.tsv labels.tsv\n</pre>\n</div>\n<div id=\"interpret\">\n<h3>interpret</h3>\n<p>Find features that support clusters separation.</p>\n<pre>usage: sumo interpret [-h] [-logfile LOGFILE] [-log {DEBUG,INFO,WARNING}]\n                      [-hits HITS] [-max_iter MAX_ITER] [-n_folds N_FOLDS]\n                      [-t T] [-seed SEED] [-sn SN] [-fn FN] [-df DF] [-ds DS]\n                      sumo_results.npz infile1,infile2,... output_prefix\n\npositional arguments:\n  sumo_results.npz      path to sumo_results.npz (created by running program\n                        with mode \"run\")\n  infile1,infile2,...   comma-delimited list of paths to input files,\n                        containing standardized feature matrices, with samples\n                        in columns and features in rows(supported types of\n                        files: ['.txt', '.txt.gz', '.txt.bz2', '.tsv',\n                        '.tsv.gz', '.tsv.bz2'])\n  output_prefix         prefix of output files - sumo will create two output\n                        files (1) .tsv file containing matrix (features x\n                        clusters), where the value in each cell is the\n                        importance of the feature in that cluster; (2)\n                        .hits.tsv file containing features of most importance\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -logfile LOGFILE      path to save log file (by default printed to stdout)\n  -log {DEBUG,INFO,WARNING}\n                        sets the logging level (default of INFO)\n  -hits HITS            sets number of most important features for every\n                        cluster, that are logged in .hits.tsv file\n  -max_iter MAX_ITER    maximum number of iterations, while searching through\n                        hyperparameter space\n  -n_folds N_FOLDS      number of folds for model cross validation (default of\n                        5)\n  -t T                  number of threads (default of 1)\n  -seed SEED            random state (default of 1)\n  -sn SN                index of row with sample names for input files\n                        (default of 0)\n  -fn FN                index of column with feature names for input files\n                        (default of 0)\n  -df DF                if percentage of missing values for feature exceeds\n                        this value, remove feature (default of 0.1)\n  -ds DS                if percentage of missing values for sample (that\n                        remains after feature dropping) exceeds this value,\n                        remove sample (default of 0.1)\n</pre>\n<p><strong>Example</strong></p>\n<pre>sumo interpret results_dir/k3/sumo_results.npz methylation.txt,expression.txt interpret_results\n</pre>\n<p>Please refer to documentation for <a href=\"https://python-sumo.readthedocs.io/en/latest/example.html\" rel=\"nofollow\">example usage cases and suggestions for data preprocessing</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6764871, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8e0c3f603db201b6a99890e9a4865d38", "sha256": "682ae84896ad88c36f43833b791a80c751d403a10ed279029552bff2779d3af6"}, "downloads": -1, "filename": "python_sumo-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8e0c3f603db201b6a99890e9a4865d38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33329, "upload_time": "2019-09-16T20:21:12", "upload_time_iso_8601": "2019-09-16T20:21:12.898465Z", "url": "https://files.pythonhosted.org/packages/49/bd/f7751ad7d6f54b91cc07e513f825b596795beb6503bd83854f301d17afec/python_sumo-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d0c31ce2e82c167ed9f932dfd73a440", "sha256": "db069b41166a7765879d663e9aa6f3b29bc2e1c404b62cb964f87244d874bba8"}, "downloads": -1, "filename": "python-sumo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6d0c31ce2e82c167ed9f932dfd73a440", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34632, "upload_time": "2019-09-16T20:21:15", "upload_time_iso_8601": "2019-09-16T20:21:15.505569Z", "url": "https://files.pythonhosted.org/packages/a3/ac/6cd9e7ec05d7f71d080a8c27c52bec7d05b41796d00f1d64a9997f1e55f3/python-sumo-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7b408dcc63a346391bf126f3b71608a2", "sha256": "9f0345e32ecabe7ed8b08224f7f9520822790023071cd973bc860063c70a37c2"}, "downloads": -1, "filename": "python_sumo-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b408dcc63a346391bf126f3b71608a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36305, "upload_time": "2019-09-16T21:56:43", "upload_time_iso_8601": "2019-09-16T21:56:43.275066Z", "url": "https://files.pythonhosted.org/packages/ff/38/eb0b613521971a4dd3032a055714bb80d4b6c00ae924b1b6b833fd21c8d1/python_sumo-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "328c9c3bdfd5aa0fc03f36bd6679c8de", "sha256": "d9850858c1aef1f9f84860fe6cb4c21c043e961bd5885e0cce5ca8f99a1bc95d"}, "downloads": -1, "filename": "python-sumo-0.1.1.tar.gz", "has_sig": false, "md5_digest": "328c9c3bdfd5aa0fc03f36bd6679c8de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34707, "upload_time": "2019-09-16T21:56:44", "upload_time_iso_8601": "2019-09-16T21:56:44.588972Z", "url": "https://files.pythonhosted.org/packages/a9/0a/9a5bae0a03ba6d2272891a5aac80f9d9e977340b05ae2de562581bc497fd/python-sumo-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eb6820a69af7048a28afc73d19f9c1b9", "sha256": "228bb34c952a0bec588ad5dd62abb323196deab5c80af1cb18afe2ec875dc218"}, "downloads": -1, "filename": "python_sumo-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eb6820a69af7048a28afc73d19f9c1b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33704, "upload_time": "2019-09-20T19:25:14", "upload_time_iso_8601": "2019-09-20T19:25:14.553629Z", "url": "https://files.pythonhosted.org/packages/e6/29/d2d80d41a6619d561d927cb8f272153743eb756dbb87d522397a3d0a9c7e/python_sumo-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "722d587ee7934d5b1ab9e68707db3800", "sha256": "8d2e23f91b56ec717d2ea34a17e72884ec6deece2b949acb2d2c91c8a189d85e"}, "downloads": -1, "filename": "python-sumo-0.1.2.tar.gz", "has_sig": false, "md5_digest": "722d587ee7934d5b1ab9e68707db3800", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40939, "upload_time": "2019-09-20T19:25:15", "upload_time_iso_8601": "2019-09-20T19:25:15.833494Z", "url": "https://files.pythonhosted.org/packages/51/36/736bbebc662915adaf66d7e63743837a6c7c704b67e03b9afce1a5b82cf4/python-sumo-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "de71fc3eb04f428a754fa90596e89647", "sha256": "47cab3c2f01b080303789c5f1c8aa77d0d5afc68973bcf462f69c4b073b8d579"}, "downloads": -1, "filename": "python_sumo-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de71fc3eb04f428a754fa90596e89647", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33738, "upload_time": "2020-01-21T20:50:10", "upload_time_iso_8601": "2020-01-21T20:50:10.047249Z", "url": "https://files.pythonhosted.org/packages/7f/b8/9a1c6fb96febd44565165ba7a9115bdd6424446a6d76e72e89e49bedf72e/python_sumo-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e78f2014535c0b752d00c19f66628174", "sha256": "c0b7d60ce2eb5acab1adec9f1ad8ef15ddc3c8e0e8705ca945fd6f1492892b3c"}, "downloads": -1, "filename": "python-sumo-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e78f2014535c0b752d00c19f66628174", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44194, "upload_time": "2020-01-21T20:50:11", "upload_time_iso_8601": "2020-01-21T20:50:11.392095Z", "url": "https://files.pythonhosted.org/packages/2d/98/92c7fdc74e94a6488af20567c62a10749060af4231b51c93fb2d46a4b568/python-sumo-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "79096c023dd486c9529813abecc73042", "sha256": "2301cf91fc57c8d18bcdca440d6e507e943e97990b94528a11c70878d3f64d08"}, "downloads": -1, "filename": "python_sumo-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79096c023dd486c9529813abecc73042", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36469, "upload_time": "2020-01-21T20:54:37", "upload_time_iso_8601": "2020-01-21T20:54:37.603277Z", "url": "https://files.pythonhosted.org/packages/37/75/00f50626589adb29893b53342417c55bba5a45cf17a2ee016b955555b778/python_sumo-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db6c8ed2deb4d799fde6dfde8ce0a46c", "sha256": "6c0ba4a6c13242c931cd2e3777159857d88d6a1ef4afe31bd257994b36c27526"}, "downloads": -1, "filename": "python-sumo-0.2.1.tar.gz", "has_sig": false, "md5_digest": "db6c8ed2deb4d799fde6dfde8ce0a46c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49047, "upload_time": "2020-01-21T20:54:39", "upload_time_iso_8601": "2020-01-21T20:54:39.126808Z", "url": "https://files.pythonhosted.org/packages/ea/4a/5c4a97b4c2fc7c8a2e40d2df1bc554519aa7b5c4a7ecde1c68cae5e1cec0/python-sumo-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "7eb19ce696ac4732c4353050adb89aca", "sha256": "74003ea3a5c09054feb31626f21cdbb782ed3df692d11d771a5de9bccd14168b"}, "downloads": -1, "filename": "python_sumo-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7eb19ce696ac4732c4353050adb89aca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36521, "upload_time": "2020-01-21T21:03:02", "upload_time_iso_8601": "2020-01-21T21:03:02.469571Z", "url": "https://files.pythonhosted.org/packages/43/74/82e2b8b995b6aa4ec8bd49196024c21a341292ba4d0502899e852c20d268/python_sumo-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14964ee2f103b311fd844052f46b46f8", "sha256": "5893e5c3aeeeebfa1d90cf77e92bb56e8da14cced25ae94d5a03f82d2310bee3"}, "downloads": -1, "filename": "python-sumo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "14964ee2f103b311fd844052f46b46f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49353, "upload_time": "2020-01-21T21:03:04", "upload_time_iso_8601": "2020-01-21T21:03:04.092143Z", "url": "https://files.pythonhosted.org/packages/ce/2d/ee672c6627b195a8c9b56edf6cc50f04a85e0dccfbf8c24f835113381cf4/python-sumo-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "6dbf2777c5f4c9ceb6c5c1eecc680d84", "sha256": "8eaa0ada08aa8255a4bf55552aa17d86c2bfe14acefaa2b996f9ac7fbbb933b4"}, "downloads": -1, "filename": "python_sumo-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6dbf2777c5f4c9ceb6c5c1eecc680d84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36912, "upload_time": "2020-02-25T17:59:59", "upload_time_iso_8601": "2020-02-25T17:59:59.460763Z", "url": "https://files.pythonhosted.org/packages/1b/78/e203f61cf55cdbc21b17b83c425334fef42a218abc43ee6ebe55f8887e56/python_sumo-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a2079dbc70c532b974be5cac6e27225", "sha256": "d657586174655294c7946315713cc0fc616eb0230a143ad917d14437e401d55b"}, "downloads": -1, "filename": "python-sumo-0.2.3.tar.gz", "has_sig": false, "md5_digest": "6a2079dbc70c532b974be5cac6e27225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47173, "upload_time": "2020-02-25T18:00:00", "upload_time_iso_8601": "2020-02-25T18:00:00.793985Z", "url": "https://files.pythonhosted.org/packages/eb/21/93a937f40ab87e34a919daacd6d5d3fbe926114b1a68ab10dcabd586172b/python-sumo-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "211bae236d5997f685ddef7a2870ae8f", "sha256": "b3e06f3bc3c931b57f73cccb0e54a33c0d7c397806f2c5bfec4c9a18a4bce3eb"}, "downloads": -1, "filename": "python_sumo-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "211bae236d5997f685ddef7a2870ae8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37329, "upload_time": "2020-03-06T21:43:37", "upload_time_iso_8601": "2020-03-06T21:43:37.776294Z", "url": "https://files.pythonhosted.org/packages/ef/22/776ec27440363cf7bdc800fd93bc7ccd5d8eaf1d4e51ed4df2b46d78350b/python_sumo-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9eb61996f7134b2fc91b2c3ca9613678", "sha256": "f5e7310a8f2d0b0bcbafdc354ae2c2d067d30e022db563d6187885eb177831e9"}, "downloads": -1, "filename": "python-sumo-0.2.4.tar.gz", "has_sig": false, "md5_digest": "9eb61996f7134b2fc91b2c3ca9613678", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47750, "upload_time": "2020-03-06T21:43:39", "upload_time_iso_8601": "2020-03-06T21:43:39.148297Z", "url": "https://files.pythonhosted.org/packages/c8/ce/246e8ffc5ad7d3e26e03e36bb5b68b90ed37b5bcbab70d2bc147b55f677f/python-sumo-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "211bae236d5997f685ddef7a2870ae8f", "sha256": "b3e06f3bc3c931b57f73cccb0e54a33c0d7c397806f2c5bfec4c9a18a4bce3eb"}, "downloads": -1, "filename": "python_sumo-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "211bae236d5997f685ddef7a2870ae8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37329, "upload_time": "2020-03-06T21:43:37", "upload_time_iso_8601": "2020-03-06T21:43:37.776294Z", "url": "https://files.pythonhosted.org/packages/ef/22/776ec27440363cf7bdc800fd93bc7ccd5d8eaf1d4e51ed4df2b46d78350b/python_sumo-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9eb61996f7134b2fc91b2c3ca9613678", "sha256": "f5e7310a8f2d0b0bcbafdc354ae2c2d067d30e022db563d6187885eb177831e9"}, "downloads": -1, "filename": "python-sumo-0.2.4.tar.gz", "has_sig": false, "md5_digest": "9eb61996f7134b2fc91b2c3ca9613678", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47750, "upload_time": "2020-03-06T21:43:39", "upload_time_iso_8601": "2020-03-06T21:43:39.148297Z", "url": "https://files.pythonhosted.org/packages/c8/ce/246e8ffc5ad7d3e26e03e36bb5b68b90ed37b5bcbab70d2bc147b55f677f/python-sumo-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:09 2020"}