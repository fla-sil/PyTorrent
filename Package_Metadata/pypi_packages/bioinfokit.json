{"info": {"author": "Renesh Bedre", "author_email": "reneshbe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "[![DOI](https://zenodo.org/badge/174428856.svg)](https://zenodo.org/badge/latestdoi/174428856)\n\n\nThe bioinfokit toolkit aimed to provide various easy-to-use functionalities to analyze,  \nvisualize, and interpret the biological data generated from genome-scale omics experiments.\n\n**<span style=\"color:#33a8ff\">How to install:</span>**\n\nbioinfokit requires\n- Python 3\n- NumPy \n- scikit-learn\n- seaborn\n- pandas\n- matplotlib\n- SciPy \n\n```\ngit clone https://github.com/reneshbedre/bioinfokit.git\ncd bioinfokit\npython setup.py install\n```\n\n<!--\nFrom Python package index,\n\n`pip install -i https://test.pypi.org/simple/ bioinfokit `\n\n**<span style=\"color:#33a8ff\">Functions:</span>**\n-->\n\n\n<b>Volcano plot</b>\n\n`bioinfokit.visuz.gene_exp.volcano(table, lfc, pv, lfc_thr, pv_thr, color, valpha, geneid, genenames, gfont, gstyle, sign_line,\n    dotsize, markerdot, r, dim, show, figtype, axxlabel, axylabel, axlabelfontsize, axlabelfontname, axtickfontsize, axtickfontname,\n    xlm, ylm)`\n\nParameters | Description\n------------ | -------------\n`table` |Pandas dataframe table having atleast gene IDs, log fold change, P-values or adjusted P-values columns\n`lfc` | Name of a column having log fold change values [string][default:logFC]\n`pv` | Name of a column having P-values or adjusted P-values [string][default:p_values]\n`lfc_thr` | Log fold change cutoff for up and downregulated genes [float][default:1.0]\n`pv_thr` | P-values or adjusted P-values cutoff for up and downregulated genes [float][default:0.05]\n`color` | Tuple of two colors [tuple][default: (\"green\", \"red\")]\n`valpha` | Transparency of points on volcano plot [float (between 0 and 1)][default: 1.0]\n`geneid` | Name of a column having gene Ids. This is necessary for plotting gene label on the points [string][default: None]\n`genenames` | Tuple of gene Ids to label the points. The gene Ids must be present in the geneid column. If this option set to \"deg\" it will label all genes defined by lfc_thr and pv_thr [string, tuple, dict][default: None]\n`gfont` | Font size for genenames [float][default: 10.0]. gfont not compatible with gstyle=2.\n`gstyle` | Style of the text for genenames. 1 for default text and 2 for box text [int][default: 1]\n`sign_line` | Show grid lines on plot with defined log fold change (`lfc_thr`) and P-value (`pv_thr`) threshold value [True or False][default:False]\n`dotsize`| The size of the dots in the plot [float][default: 8]\n`markerdot` | Shape of the dot marker. See more options at  https://matplotlib.org/3.1.1/api/markers_api.html [string][default: \"o\"]\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (5, 5)]\n`r` | Figure resolution in dpi [int][default: 300]. Not compatible with `show`= True\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`axxlabel` | Label for X-axis. If you provide this option, default label will be replaced [string][default: None]\n`axylabel` | Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]\n`axlabelfontsize` | Font size for axis labels [float][default: 9]\n`axlabelfontname` | Font name for axis labels [string][default: 'Arial']\n`axtickfontsize` | Font size for axis ticks [float][default: 9]\n`axtickfontname` | Font name for axis ticks [string][default: 'Arial']\n`xlm` | Range of ticks to plot on X-axis [float (left, right, interval)][default: None]\n`ylm` | Range of ticks to plot on Y-axis [float (bottom, top, interval)][default: None]\n\nReturns:\n\nVolcano plot image in same directory (volcano.png)\n<a href=\"https://reneshbedre.github.io/blog/volcano.html\" target=\"_blank\">Working example</a>\n\n<b>MA plot</b>\n\n`bioinfokit.visuz.gene_exp.ma(table, lfc, ct_count, st_count, lfc_thr, color, dim, dotsize, show, r, valpha, figtype, axxlabel,\n    axylabel, axlabelfontsize, axtickfontsize, axtickfontname, xlm, ylm)`\n\nParameters | Description\n------------ | -------------\n`table` |Pandas dataframe  table having atleast gene IDs, log fold change, and counts (control and treatment) columns\n`lfc` | Name of a column having log fold change values [default:logFC]\n`ct_count` | Name of a column having count values for control sample [default:value1]\n`st_count` | Name of a column having count values for treatment sample [default:value2]\n`lfc_thr` | Log fold change cutoff for up and downregulated genes [default:1]\n`color` | Tuple of two colors [tuple][default: (\"green\", \"red\")]\n`dotsize`| The size of the dots in the plot [float][default: 8]\n`markerdot` | Shape of the dot marker. See more options at  https://matplotlib.org/3.1.1/api/markers_api.html [string][default: \"o\"]\n`valpha` | Transparency of points on plot [float (between 0 and 1)][default: 1.0]\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (5, 5)]\n`r` | Figure resolution in dpi [int][default: 300]. Not compatible with `show`= True\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`axxlabel` | Label for X-axis. If you provide this option, default label will be replaced [string][default: None]\n`axylabel` | Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]\n`axlabelfontsize` | Font size for axis labels [float][default: 9]\n`axtickfontsize` | Font size for axis ticks [float][default: 9]\n`axtickfontname` | Font name for axis ticks [string][default: 'Arial']\n`xlm` | Range of ticks to plot on X-axis [float (left, right, interval)][default: None]\n`ylm` | Range of ticks to plot on Y-axis [float (bottom, top, interval)][default: None]\n\nReturns:\n\nMA plot image in same directory (ma.png)\n<a href=\"https://reneshbedre.github.io/blog/ma.html\" target=\"_blank\">Working example</a>\n\n<b>Inverted Volcano plot</b>\n\n`bioinfokit.visuz.gene_exp.involcano(table, lfc, pv, lfc_thr, pv_thr, color, valpha, geneid, genenames, gfont, gstyle,\n    dotsize, markerdot, r, dim, show, r, dim, show, figtype, axxlabel, axylabel, axlabelfontsize, axtickfontsize, axtickfontname)`\n\nParameters | Description\n------------ | -------------\n`table` |Pandas dataframe table having atleast gene IDs, log fold change, P-values or adjusted P-values\n`lfc` | Name of a column having log fold change values [default:logFC]\n`pv` | Name of a column having P-values or adjusted P-values [default:p_values]\n`lfc_thr` | Log fold change cutoff for up and downregulated genes [default:1]\n`pv_thr` | P-values or adjusted P-values cutoff for up and downregulated genes [default:0.05]\n`color` | Tuple of two colors [tuple][default: (\"green\", \"red\")]\n`valpha` | Transparency of points on volcano plot [float (between 0 and 1)][default: 1.0]\n`geneid` | Name of a column having gene Ids. This is necessary for plotting gene label on the points [string][default: None]\n`genenames` | Tuple of gene Ids to label the points. The gene Ids must be present in the geneid column. If this option set to \"deg\" it will label all genes defined by lfc_thr and pv_thr [string, tuple, dict][default: None]\n`gfont` | Font size for genenames [float][default: 10.0]\n`gstyle` | Style of the text for genenames. 1 for default text and 2 for box text [int][default: 1]\n`dotsize`| The size of the dots in the plot [float][default: 8]\n`markerdot` | Shape of the dot marker. See more options at  https://matplotlib.org/3.1.1/api/markers_api.html [string][default: \"o\"]\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (5, 5)]\n`r` | Figure resolution in dpi [int][default: 300]. Not compatible with `show`= True\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`axxlabel` | Label for X-axis. If you provide this option, default label will be replaced [string][default: None]\n`axylabel` | Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]\n`axlabelfontsize` | Font size for axis labels [float][default: 9]\n`axtickfontsize` | Font size for axis ticks [float][default: 9]\n`axtickfontname` | Font name for axis ticks [string][default: 'Arial']\n\n\nReturns:\n\nInverted volcano plot image in same directory (involcano.png)\n\n<a href=\"https://reneshbedre.github.io/blog/volcano.html\" target=\"_blank\">Working example</a>\n\n\n<b>Correlation matrix plot</b>\n\n`bioinfokit.visuz.stat.corr_mat(table, corm, cmap, r, dim, show, figtype, axtickfontsize, axtickfontname)`\n\nParameters | Description\n------------ | -------------\n`table` | Dataframe object with numerical variables (columns) to find correlation. Ideally, you should have three or more variables. Dataframe should not have identifier column.\n`corm` | Correlation method [pearson,kendall,spearman] [default:pearson]\n`cmap` | Color Palette for heatmap [string][default: 'seismic']. More colormaps are available at  \n         https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html\n`r` | Figure resolution in dpi [int][default: 300]. Not compatible with `show`= True\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (6, 5)]        \n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`axtickfontsize` | Font size for axis ticks [float][default: 7]\n`axtickfontname` | Font name for axis ticks [string][default: 'Arial']\n\nReturns:\n\nCorrelation matrix plot image in same directory (corr_mat.png)\n\n<a href=\"https://reneshbedre.github.io/blog/corr.html\" target=\"_blank\">Working example</a>\n\n<b>Merge VCF files</b>\n\n`bioinfokit.analys.mergevcf(file)`\n\nParameters | Description\n------------ | -------------\n`file` | Multiple vcf files and separate them by comma\n\nReturns:\n\nMerged VCF file (merge_vcf.vcf)\n\n<a href=\"https://reneshbedre.github.io/blog/mergevcf.html\" target=\"_blank\">Working example</a>\n\n\n<b>Merge VCF files</b>\n\n`bioinfokit.analys.mergevcf(file)`\n\nParameters | Description\n------------ | -------------\n`file` | Multiple vcf files and separate them by comma\n\nReturns:\n\nMerged VCF file (merge_vcf.vcf)\n\n<a href=\"https://reneshbedre.github.io/blog/mergevcf.html\" target=\"_blank\">Working example</a>\n\n\n<b>PCA</b>\n\n`bioinfokit.analys.pca(table)`\n\nParameters | Description\n------------ | -------------\n`table` | Dataframe object with numerical variables (columns). Dataframe should not have identifier column.\n\nReturns:\n\nPCA summary, scree plot (screepca.png), and 2D/3D pca plots (pcaplot_2d.png and pcaplot_3d.png)\n\n<a href=\"https://reneshbedre.github.io/blog/pca_3d.html\" target=\"_blank\">Working example</a>\n\n\n<b>Reverse complement of DNA sequence</b>\n\n`bioinfokit.analys.rev_com(sequence)`\n\nParameters | Description\n------------ | -------------\n`seq` | DNA sequence to perform reverse complement\n`file` | DNA sequence in a fasta file\n\nReturns:\n\nReverse complement of original DNA sequence\n\n<a href=\"https://reneshbedre.github.io/blog/revcom.html\" target=\"_blank\">Working example</a>\n\n<b>Sequencing coverage</b>\n\n`bioinfokit.analys.seqcov(file, gs)`\n\nParameters | Description\n------------ | -------------\n`file` | FASTQ file\n`gs` | Genome size in Mbp\n\nReturns:\n\nSequencing coverage of the given FASTQ file\n\n<a href=\"https://reneshbedre.github.io/blog/seqcov.html\" target=\"_blank\">Working example</a>\n\n<b>Convert TAB to CSV file</b>\n\n`bioinfokit.analys.tcsv(file)`\n\nParameters | Description\n------------ | -------------\n`file` | TAB delimited text file\n\nReturns:\n\nCSV delimited file (out.csv)\n\n<b>Heatmap</b>\n\n`bioinfokit.visuz.gene_exp.hmap(table, cmap='seismic', scale=True, dim=(6, 8), clus=True, zscore=None, xlabel=True, ylabel=True, \n    tickfont=(12, 12), show, r, figtype)`\n\nParameters | Description\n------------ | -------------\n`file` | CSV delimited data file. It should not have NA or missing values\n`cmap` | Color Palette for heatmap [string][default: 'seismic']\n`scale` | Draw a color key with heatmap [boolean (True or False)][default: True]\n`dim` | heatmap figure size [tuple of two floats (width, height) in inches][default: (6, 8)]\n`clus` | Draw hierarchical clustering with heatmap [boolean (True or False)][default: True]\n`zscore` | Z-score standardization of row (0) or column (1). It works when clus is True. [None, 0, 1][default: None]\n`xlable` | Plot X-label [boolean (True or False)][default: True]\n`ylable` | Plot Y-label [boolean (True or False)][default: True]\n`tickfont` | Fontsize for X and Y-axis tick labels [tuple of two floats][default: (14, 14)]\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`r` | Figure resolution in dpi [int][default: 300]. Not compatible with `show`= True\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n\nReturns:\n\nheatmap plot (heatmap.png, heatmap_clus.png)\n\n<a href=\"https://reneshbedre.github.io/blog/hmap.html\" target=\"_blank\">Working example</a>\n\n<b>Venn Diagram</b>\n\n`bioinfokit.visuz.venn(vennset, venncolor, vennalpha, vennlabel)`\n\nParameters | Description\n------------ | -------------\n`vennset` | Venn dataset for 3 and 2-way venn. Data should be in the format of (100,010,110,001,101,011,111) for 3-way venn and 2-way venn (10, 01, 11) [default: (1,1,1,1,1,1,1)]\n`venncolor` | Color Palette for Venn [color code][default: ('#00909e', '#f67280', '#ff971d')]\n`vennalpha` | Transparency of Venn  [float (0 to 1)][default: 0.5]\n`vennlabel` | Labels to Venn [string][default: ('A', 'B', 'C')]\n\nReturns:\n\nVenn plot (venn3.png, venn2.png)\n\n<a href=\"https://reneshbedre.github.io/blog/venn.html\" target=\"_blank\">Working example</a>\n\n<b>Two sample and Welch's t-test </b>\n\n`bioinfokit.analys.stat.ttsam(table, xfac, res, evar, alpha)`\n\nParameters | Description\n------------ | -------------\n`table` | Pandas dataframe. It should be stacked table with independent (xfac) and dependent (res) variable columns.\n`xfac` | Independent group column name with two levels [string][default: None]\n`res` | Response variable column name [string][default: None]\n`evar` | t-test with equal variance [bool (True or False)][default: True]\n`alpha` | Confidence level [float][default: 0.05]\n\nReturns:\n\nsummary output and group boxplot (ttsam_boxplot.png)\n\n<a href=\"https://reneshbedre.github.io/blog/ttest.html\" target=\"_blank\">Working example</a>\n\n\n<b>Chi-square test for independence</b>\n\n`bioinfokit.analys.stat.chisq(table)`\n\nParameters | Description\n------------ | -------------\n`table` | Pandas dataframe. It should be contingency table.\n\nReturns:\n\nsummary output and variable mosaic plot (mosaic.png)\n\n<a href=\"https://reneshbedre.github.io/blog/chisq.html\" target=\"_blank\">Working example</a>\n\n\n<b>File format conversions</b>\n\n`bioinfokit.analys.format`\n\nFunction | Parameters | Description\n------------|---------- | -------------\n`bioinfokit.analys.format.fqtofa(file)` | `FASTQ file` | Convert FASTQ file into FASTA format\n`bioinfokit.analys.format.hmmtocsv(file)` | `HMM file` | Convert HMM text output (from HMMER tool) to CSV format\n`bioinfokit.analys.format.tabtocsv(file)` | `TAB file` | Convert TAB file to CSV format\n`bioinfokit.analys.format.csvtotab(file)` | `CSV file` | Convert CSV file to TAB format\n\n\nReturns:\n\nOutput will be saved in same directory\n\n<a href=\"https://reneshbedre.github.io/blog/format.html\" target=\"_blank\">Working example</a>\n\n<b>One-way ANOVA</b>\n\n`bioinfokit.stat.oanova(table, res, xfac, ph, phalpha)`\n\nParameters | Description\n------------ | -------------\n`table` | Pandas dataframe in stacked table format\n`res` | Response variable (dependent variable) [string][default: None]\n`xfac` | Treatments or groups or factors (independent variable) [string][default: None]\n`ph` | perform pairwise comparisons with Tukey HSD test [bool (True or False)] [default: False]\n`phalpha` |significance level Tukey HSD test [float (0 to 1)][default: 0.05]\n\n\nReturns:\n\nANOVA summary, multiple pairwise comparisons, and assumption tests statistics\n\n<a href=\"https://reneshbedre.github.io/blog/oanova.html\" target=\"_blank\">Working example</a>\n\n\n<b>Manhatten plot</b>\n\n`bioinfokit.visuz.marker.mhat(df, chr, pv, color, dim, r, ar, gwas_sign_line, gwasp, dotsize, markeridcol, markernames, \n    gfont, valpha, show, figtype, axxlabel, axylabel, axlabelfontsize, ylm)`\n\nParameters | Description\n------------ | -------------\n`df` |Pandas dataframe object with atleast SNP, chromosome, and P-values columns\n`chr` | Name of a column having chromosome numbers [string][default:None]\n`pv` | Name of a column having P-values. Must be numeric column [string][default:None]\n`color` | List the name of the colors to be plotted. It can accept two alternate colors or the number colors equal to chromosome number. If nothing (None) provided, it will randomly assign the color to each chromosome [list][default:None]\n`gwas_sign_line` |Plot statistical significant threshold line defined by option `gwasp` [bool (True or False)][default: False]\n`gwasp` |  Statistical significant threshold to identify significant SNPs [float][default: 5E-08]\n`dotsize`| The size of the dots in the plot [float][default: 8]\n`markeridcol` | Name of a column having SNPs. This is necessary for plotting SNP names on the plot [string][default: None]\n`markernames` | The list of the SNPs to display on the plot. These SNP should be present in SNP column. Additionally, it also accepts the dict of SNPs and its associated gene name. If this option set to True, it will label all SNPs with P-value significant score defined by `gwasp` [string, list, dict][default: True]\n`gfont` | Font size for SNP names to display on the plot [float][default: 8]\n`valpha` | Transparency of points on plot [float (between 0 and 1)][default: 1.0]\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (6, 4)]\n`r` | Figure resolution in dpi [int][default: 300]\n`ar` | Rotation of X-axis labels [float][default: 90]\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`axxlabel` | Label for X-axis. If you provide this option, default label will be replaced [string][default: None]\n`axylabel` | Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]\n`axlabelfontsize` | Font size for axis labels [float][default: 9]\n`ylm` | Range of ticks to plot on Y-axis [float tuple (bottom, top, interval)][default: None]\n\n\nReturns:\n\nManhatten plot image in same directory (manhatten.png)\n\n<a href=\"https://reneshbedre.github.io/blog/manhat.html\" target=\"_blank\">Working example</a>\n\n\n<b>Extract the sequences from the FASTA file</b>\n\n`bioinfokit.analys.extract_seq(file, id)`\n\nParameters | Description\n------------ | -------------\n`file` | input FASTA file from which sequneces to be extracted\n`id` | sequence ID file\n\nReturns:\nExtracted sequences in FASTA format file in same directory (out.fasta)\n\n<b>Bar-dot plot</b>\n\n`bioinfokit.visuz.stat.bardot(df, colorbar, colordot, bw, dim, r, ar, hbsize, errorbar, dotsize, markerdot, valphabar, \n    valphadot, show, figtype, axxlabel, axylabel, axlabelfontsize, axlabelfontname, ylm, axtickfontsize, axtickfontname,\n    yerrlw, yerrcw)`\n\nParameters | Description\n------------ | -------------\n`df` |Pandas dataframe object\n`colorbar` | Color of bar graph [string or list][default:\"#bbcfff\"]\n`colordot` | Color of dots on bar [string or list][default:\"#ee8972\"]\n`bw` |Width of bar [float][default: 0.4]\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (6, 4)]\n`r` | Figure resolution in dpi [int][default: 300]\n`ar` | Rotation of X-axis labels [float][default: 0]\n`hbsize` | Horizontal bar size for standard error bars [float][default: 4]\n`errorbar` |  Draw standard error bars [bool (True or False)][default: True]\n`dotsize`| The size of the dots in the plot [float][default: 6]\n`markerdot` | Shape of the dot marker. See more options at  https://matplotlib.org/3.1.1/api/markers_api.html [string][default: \"o\"]\n`valphabar` | Transparency of bars on plot [float (between 0 and 1)][default: 1]\n`valphadot` | Transparency of dots on plot [float (between 0 and 1)][default: 1]\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`axxlabel` | Label for X-axis. If you provide this option, default label will be replaced [string][default: None]\n`axylabel` | Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]\n`axlabelfontsize` | Font size for axis labels [float][default: 9]\n`axlabelfontname` | Font name for axis labels [string][default: 'Arial']\n`ylm` | Range of ticks to plot on Y-axis [float tuple (bottom, top, interval)][default: None]\n`axtickfontsize` | Font size for axis ticks [float][default: 9]\n`axtickfontname` | Font name for axis ticks [string][default: 'Arial']\n`yerrlw` | Error bar line width [float][default: None]\n`yerrcw` | Error bar cap width [float][default: None]\n\n\nReturns:\n\nBar-dot plot image in same directory (bardot.png)\n\n<a href=\"https://reneshbedre.github.io/blog/bardot.html\" target=\"_blank\">Working Example</a>\n\n\n<b>FASTQ quality format detection</b>\n\n`bioinfokit.analys.format.fq_qual_var(file)`\n\nParameters | Description\n------------ | -------------\n`file` |FASTQ file to detect quality format [deafult: None]\n\nReturns:\n\nQuality format encoding name for FASTQ file (Supports only Sanger, Illumina 1.8+ and Illumina  1.3/1.4)\n\n<a href=\"https://reneshbedre.github.io/blog/fqqualfmt.html\" target=\"_blank\">Working Example</a>\n\n\n<b>Linear regression analysis</b>\n\n`bioinfokit.visuz.stat.lin_reg(df, x, y)`\n\nParameters | Description\n------------ | -------------\n`df` |Pandas dataframe object\n`x` | Name of column having independent X variables [list][default:None]\n`y` | Name of column having dependent Y variables [list][default:None]\n\nReturns:\n\nRegression analysis summary\n\n<a href=\"https://reneshbedre.github.io/blog/linearreg.html\" target=\"_blank\">Working Example</a>\n\n\n<b>Regression plot</b>\n\n`bioinfokit.visuz.stat.regplot(df, x, y, yhat, dim, colordot, colorline, r, ar, dotsize, markerdot, linewidth, \n    valphaline, valphadot, show, figtype, axxlabel, axylabel, axlabelfontsize, axlabelfontname, xlm, ylm, axtickfontsize,\n    axtickfontname)`\n\nParameters | Description\n------------ | -------------\n`df` | Pandas dataframe object\n`x` | Name of column having independent X variables [string][default:None]\n`y` | Name of column having dependent Y variables [string][default:None]\n`yhat` |Name of column having predicted response of Y variable (y_hat) from regression [string][default:None]\n`dim` | Figure size [tuple of two floats (width, height) in inches][default: (6, 4)]\n`r` | Figure resolution in dpi [int][default: 300]\n`ar` | Rotation of X-axis labels [float][default: 0]\n`dotsize`| The size of the dots in the plot [float][default: 6]\n`markerdot` | Shape of the dot marker. See more options at  https://matplotlib.org/3.1.1/api/markers_api.html [string][default: \"o\"]\n`valphaline` | Transparency of regression line on plot [float (between 0 and 1)][default: 1]\n`valphadot` | Transparency of dots on plot [float (between 0 and 1)][default: 1]\n`linewidth` | Width of regression line [float][default: 1]\n`figtype` | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n`show`  | Show the figure on console instead of saving in current folder [True or False][default:False]\n`axxlabel` | Label for X-axis. If you provide this option, default label will be replaced [string][default: None]\n`axylabel` | Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]\n`axlabelfontsize` | Font size for axis labels [float][default: 9]\n`axlabelfontname` | Font name for axis labels [string][default: 'Arial']\n`xlm` | Range of ticks to plot on X-axis [float tuple (bottom, top, interval)][default: None]\n`ylm` | Range of ticks to plot on Y-axis [float tuple (bottom, top, interval)][default: None]\n`axtickfontsize` | Font size for axis ticks [float][default: 9]\n`axtickfontname` | Font name for axis ticks [string][default: 'Arial']\n\n\nReturns:\n\nRegression plot image in same directory (reg_plot.png)\n\n<a href=\"https://reneshbedre.github.io/blog/linearreg.html\" target=\"_blank\">Working Example</a>\n\n\n\n\nReferences:\n- Travis E. Oliphant. A guide to NumPy, USA: Trelgol Publishing, (2006).\n- John D. Hunter. Matplotlib: A 2D Graphics Environment, Computing in Science & Engineering, 9, 90-95 (2007), DOI:10.1109/MCSE.2007.55 (publisher link)\n- Fernando P\u00e9rez and Brian E. Granger. IPython: A System for Interactive Scientific Computing, Computing in Science & Engineering, 9, 21-29 (2007), DOI:10.1109/MCSE.2007.53 (publisher link)\n- Michael Waskom, Olga Botvinnik, Joel Ostblom, Saulius Lukauskas, Paul Hobson, MaozGelbart, \u2026 Constantine Evans. (2020, January 24). mwaskom/seaborn: v0.10.0 (January 2020) (Version v0.10.0). Zenodo. http://doi.org/10.5281/zenodo.3629446\n- Fabian Pedregosa, Ga\u00ebl Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, \u00c9douard Duchesnay. Scikit-learn: Machine Learning in Python, Journal of Machine Learning Research, 12, 2825-2830 (2011)\n- Wes McKinney. Data Structures for Statistical Computing in Python, Proceedings of the 9th Python in Science Conference, 51-56 (2010)\n\nbioinfokit cited by:\n- Greaney AM, Adams TS, Raredon MS, Gubbins E, Schupp JC, Engler AJ, Ghaedi M, Yuan Y, Kaminski N, Niklason LE. Platform \n  Effects on Regeneration by Pulmonary Basal Cells as Evaluated by Single-Cell RNA Sequencing. Cell Reports. 2020 Mar \n  24;30(12):4250-65.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://reneshbedre.github.io/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bioinfokit", "package_url": "https://pypi.org/project/bioinfokit/", "platform": "", "project_url": "https://pypi.org/project/bioinfokit/", "project_urls": {"Homepage": "http://reneshbedre.github.io/"}, "release_url": "https://pypi.org/project/bioinfokit/0.7.1/", "requires_dist": null, "requires_python": "", "summary": "Bioinformatics data analysis and visualization toolkit", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://zenodo.org/badge/latestdoi/174428856\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c3d0fc7a90fd9ca02e769bb340f4d66c3adb341/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3137343432383835362e737667\"></a></p>\n<p>The bioinfokit toolkit aimed to provide various easy-to-use functionalities to analyze,<br>\nvisualize, and interpret the biological data generated from genome-scale omics experiments.</p>\n<p><strong><span>How to install:</span></strong></p>\n<p>bioinfokit requires</p>\n<ul>\n<li>Python 3</li>\n<li>NumPy</li>\n<li>scikit-learn</li>\n<li>seaborn</li>\n<li>pandas</li>\n<li>matplotlib</li>\n<li>SciPy</li>\n</ul>\n<pre><code>git clone https://github.com/reneshbedre/bioinfokit.git\ncd bioinfokit\npython setup.py install\n</code></pre>\n\n<p><b>Volcano plot</b></p>\n<p><code>bioinfokit.visuz.gene_exp.volcano(table, lfc, pv, lfc_thr, pv_thr, color, valpha, geneid, genenames, gfont, gstyle, sign_line, dotsize, markerdot, r, dim, show, figtype, axxlabel, axylabel, axlabelfontsize, axlabelfontname, axtickfontsize, axtickfontname, xlm, ylm)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Pandas dataframe table having atleast gene IDs, log fold change, P-values or adjusted P-values columns</td>\n</tr>\n<tr>\n<td><code>lfc</code></td>\n<td>Name of a column having log fold change values [string][default:logFC]</td>\n</tr>\n<tr>\n<td><code>pv</code></td>\n<td>Name of a column having P-values or adjusted P-values [string][default:p_values]</td>\n</tr>\n<tr>\n<td><code>lfc_thr</code></td>\n<td>Log fold change cutoff for up and downregulated genes [float][default:1.0]</td>\n</tr>\n<tr>\n<td><code>pv_thr</code></td>\n<td>P-values or adjusted P-values cutoff for up and downregulated genes [float][default:0.05]</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Tuple of two colors [tuple][default: (\"green\", \"red\")]</td>\n</tr>\n<tr>\n<td><code>valpha</code></td>\n<td>Transparency of points on volcano plot [float (between 0 and 1)][default: 1.0]</td>\n</tr>\n<tr>\n<td><code>geneid</code></td>\n<td>Name of a column having gene Ids. This is necessary for plotting gene label on the points [string][default: None]</td>\n</tr>\n<tr>\n<td><code>genenames</code></td>\n<td>Tuple of gene Ids to label the points. The gene Ids must be present in the geneid column. If this option set to \"deg\" it will label all genes defined by lfc_thr and pv_thr [string, tuple, dict][default: None]</td>\n</tr>\n<tr>\n<td><code>gfont</code></td>\n<td>Font size for genenames [float][default: 10.0]. gfont not compatible with gstyle=2.</td>\n</tr>\n<tr>\n<td><code>gstyle</code></td>\n<td>Style of the text for genenames. 1 for default text and 2 for box text [int][default: 1]</td>\n</tr>\n<tr>\n<td><code>sign_line</code></td>\n<td>Show grid lines on plot with defined log fold change (<code>lfc_thr</code>) and P-value (<code>pv_thr</code>) threshold value [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>dotsize</code></td>\n<td>The size of the dots in the plot [float][default: 8]</td>\n</tr>\n<tr>\n<td><code>markerdot</code></td>\n<td>Shape of the dot marker. See more options at  <a href=\"https://matplotlib.org/3.1.1/api/markers_api.html\" rel=\"nofollow\">https://matplotlib.org/3.1.1/api/markers_api.html</a> [string][default: \"o\"]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>Figure size [tuple of two floats (width, height) in inches][default: (5, 5)]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]. Not compatible with <code>show</code>= True</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>axxlabel</code></td>\n<td>Label for X-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axylabel</code></td>\n<td>Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axlabelfontsize</code></td>\n<td>Font size for axis labels [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axlabelfontname</code></td>\n<td>Font name for axis labels [string][default: 'Arial']</td>\n</tr>\n<tr>\n<td><code>axtickfontsize</code></td>\n<td>Font size for axis ticks [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontname</code></td>\n<td>Font name for axis ticks [string][default: 'Arial']</td>\n</tr>\n<tr>\n<td><code>xlm</code></td>\n<td>Range of ticks to plot on X-axis [float (left, right, interval)][default: None]</td>\n</tr>\n<tr>\n<td><code>ylm</code></td>\n<td>Range of ticks to plot on Y-axis [float (bottom, top, interval)][default: None]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Volcano plot image in same directory (volcano.png)\n<a href=\"https://reneshbedre.github.io/blog/volcano.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>MA plot</b></p>\n<p><code>bioinfokit.visuz.gene_exp.ma(table, lfc, ct_count, st_count, lfc_thr, color, dim, dotsize, show, r, valpha, figtype, axxlabel, axylabel, axlabelfontsize, axtickfontsize, axtickfontname, xlm, ylm)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Pandas dataframe  table having atleast gene IDs, log fold change, and counts (control and treatment) columns</td>\n</tr>\n<tr>\n<td><code>lfc</code></td>\n<td>Name of a column having log fold change values [default:logFC]</td>\n</tr>\n<tr>\n<td><code>ct_count</code></td>\n<td>Name of a column having count values for control sample [default:value1]</td>\n</tr>\n<tr>\n<td><code>st_count</code></td>\n<td>Name of a column having count values for treatment sample [default:value2]</td>\n</tr>\n<tr>\n<td><code>lfc_thr</code></td>\n<td>Log fold change cutoff for up and downregulated genes [default:1]</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Tuple of two colors [tuple][default: (\"green\", \"red\")]</td>\n</tr>\n<tr>\n<td><code>dotsize</code></td>\n<td>The size of the dots in the plot [float][default: 8]</td>\n</tr>\n<tr>\n<td><code>markerdot</code></td>\n<td>Shape of the dot marker. See more options at  <a href=\"https://matplotlib.org/3.1.1/api/markers_api.html\" rel=\"nofollow\">https://matplotlib.org/3.1.1/api/markers_api.html</a> [string][default: \"o\"]</td>\n</tr>\n<tr>\n<td><code>valpha</code></td>\n<td>Transparency of points on plot [float (between 0 and 1)][default: 1.0]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>Figure size [tuple of two floats (width, height) in inches][default: (5, 5)]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]. Not compatible with <code>show</code>= True</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>axxlabel</code></td>\n<td>Label for X-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axylabel</code></td>\n<td>Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axlabelfontsize</code></td>\n<td>Font size for axis labels [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontsize</code></td>\n<td>Font size for axis ticks [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontname</code></td>\n<td>Font name for axis ticks [string][default: 'Arial']</td>\n</tr>\n<tr>\n<td><code>xlm</code></td>\n<td>Range of ticks to plot on X-axis [float (left, right, interval)][default: None]</td>\n</tr>\n<tr>\n<td><code>ylm</code></td>\n<td>Range of ticks to plot on Y-axis [float (bottom, top, interval)][default: None]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>MA plot image in same directory (ma.png)\n<a href=\"https://reneshbedre.github.io/blog/ma.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Inverted Volcano plot</b></p>\n<p><code>bioinfokit.visuz.gene_exp.involcano(table, lfc, pv, lfc_thr, pv_thr, color, valpha, geneid, genenames, gfont, gstyle, dotsize, markerdot, r, dim, show, r, dim, show, figtype, axxlabel, axylabel, axlabelfontsize, axtickfontsize, axtickfontname)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Pandas dataframe table having atleast gene IDs, log fold change, P-values or adjusted P-values</td>\n</tr>\n<tr>\n<td><code>lfc</code></td>\n<td>Name of a column having log fold change values [default:logFC]</td>\n</tr>\n<tr>\n<td><code>pv</code></td>\n<td>Name of a column having P-values or adjusted P-values [default:p_values]</td>\n</tr>\n<tr>\n<td><code>lfc_thr</code></td>\n<td>Log fold change cutoff for up and downregulated genes [default:1]</td>\n</tr>\n<tr>\n<td><code>pv_thr</code></td>\n<td>P-values or adjusted P-values cutoff for up and downregulated genes [default:0.05]</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Tuple of two colors [tuple][default: (\"green\", \"red\")]</td>\n</tr>\n<tr>\n<td><code>valpha</code></td>\n<td>Transparency of points on volcano plot [float (between 0 and 1)][default: 1.0]</td>\n</tr>\n<tr>\n<td><code>geneid</code></td>\n<td>Name of a column having gene Ids. This is necessary for plotting gene label on the points [string][default: None]</td>\n</tr>\n<tr>\n<td><code>genenames</code></td>\n<td>Tuple of gene Ids to label the points. The gene Ids must be present in the geneid column. If this option set to \"deg\" it will label all genes defined by lfc_thr and pv_thr [string, tuple, dict][default: None]</td>\n</tr>\n<tr>\n<td><code>gfont</code></td>\n<td>Font size for genenames [float][default: 10.0]</td>\n</tr>\n<tr>\n<td><code>gstyle</code></td>\n<td>Style of the text for genenames. 1 for default text and 2 for box text [int][default: 1]</td>\n</tr>\n<tr>\n<td><code>dotsize</code></td>\n<td>The size of the dots in the plot [float][default: 8]</td>\n</tr>\n<tr>\n<td><code>markerdot</code></td>\n<td>Shape of the dot marker. See more options at  <a href=\"https://matplotlib.org/3.1.1/api/markers_api.html\" rel=\"nofollow\">https://matplotlib.org/3.1.1/api/markers_api.html</a> [string][default: \"o\"]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>Figure size [tuple of two floats (width, height) in inches][default: (5, 5)]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]. Not compatible with <code>show</code>= True</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>axxlabel</code></td>\n<td>Label for X-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axylabel</code></td>\n<td>Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axlabelfontsize</code></td>\n<td>Font size for axis labels [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontsize</code></td>\n<td>Font size for axis ticks [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontname</code></td>\n<td>Font name for axis ticks [string][default: 'Arial']</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Inverted volcano plot image in same directory (involcano.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/volcano.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Correlation matrix plot</b></p>\n<p><code>bioinfokit.visuz.stat.corr_mat(table, corm, cmap, r, dim, show, figtype, axtickfontsize, axtickfontname)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Dataframe object with numerical variables (columns) to find correlation. Ideally, you should have three or more variables. Dataframe should not have identifier column.</td>\n</tr>\n<tr>\n<td><code>corm</code></td>\n<td>Correlation method [pearson,kendall,spearman] [default:pearson]</td>\n</tr>\n<tr>\n<td><code>cmap</code></td>\n<td>Color Palette for heatmap [string][default: 'seismic']. More colormaps are available at</td>\n</tr></tbody></table>\n<pre><code>     https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html\n</code></pre>\n<p><code>r</code> | Figure resolution in dpi [int][default: 300]. Not compatible with <code>show</code>= True\n<code>dim</code> | Figure size [tuple of two floats (width, height) in inches][default: (6, 5)]<br>\n<code>show</code>  | Show the figure on console instead of saving in current folder [True or False][default:False]\n<code>figtype</code> | Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']\n<code>axtickfontsize</code> | Font size for axis ticks [float][default: 7]\n<code>axtickfontname</code> | Font name for axis ticks [string][default: 'Arial']</p>\n<p>Returns:</p>\n<p>Correlation matrix plot image in same directory (corr_mat.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/corr.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Merge VCF files</b></p>\n<p><code>bioinfokit.analys.mergevcf(file)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>Multiple vcf files and separate them by comma</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Merged VCF file (merge_vcf.vcf)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/mergevcf.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Merge VCF files</b></p>\n<p><code>bioinfokit.analys.mergevcf(file)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>Multiple vcf files and separate them by comma</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Merged VCF file (merge_vcf.vcf)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/mergevcf.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>PCA</b></p>\n<p><code>bioinfokit.analys.pca(table)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Dataframe object with numerical variables (columns). Dataframe should not have identifier column.</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>PCA summary, scree plot (screepca.png), and 2D/3D pca plots (pcaplot_2d.png and pcaplot_3d.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/pca_3d.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Reverse complement of DNA sequence</b></p>\n<p><code>bioinfokit.analys.rev_com(sequence)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>seq</code></td>\n<td>DNA sequence to perform reverse complement</td>\n</tr>\n<tr>\n<td><code>file</code></td>\n<td>DNA sequence in a fasta file</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Reverse complement of original DNA sequence</p>\n<p><a href=\"https://reneshbedre.github.io/blog/revcom.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Sequencing coverage</b></p>\n<p><code>bioinfokit.analys.seqcov(file, gs)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>FASTQ file</td>\n</tr>\n<tr>\n<td><code>gs</code></td>\n<td>Genome size in Mbp</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Sequencing coverage of the given FASTQ file</p>\n<p><a href=\"https://reneshbedre.github.io/blog/seqcov.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Convert TAB to CSV file</b></p>\n<p><code>bioinfokit.analys.tcsv(file)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>TAB delimited text file</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>CSV delimited file (out.csv)</p>\n<p><b>Heatmap</b></p>\n<p><code>bioinfokit.visuz.gene_exp.hmap(table, cmap='seismic', scale=True, dim=(6, 8), clus=True, zscore=None, xlabel=True, ylabel=True, tickfont=(12, 12), show, r, figtype)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>CSV delimited data file. It should not have NA or missing values</td>\n</tr>\n<tr>\n<td><code>cmap</code></td>\n<td>Color Palette for heatmap [string][default: 'seismic']</td>\n</tr>\n<tr>\n<td><code>scale</code></td>\n<td>Draw a color key with heatmap [boolean (True or False)][default: True]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>heatmap figure size [tuple of two floats (width, height) in inches][default: (6, 8)]</td>\n</tr>\n<tr>\n<td><code>clus</code></td>\n<td>Draw hierarchical clustering with heatmap [boolean (True or False)][default: True]</td>\n</tr>\n<tr>\n<td><code>zscore</code></td>\n<td>Z-score standardization of row (0) or column (1). It works when clus is True. [None, 0, 1][default: None]</td>\n</tr>\n<tr>\n<td><code>xlable</code></td>\n<td>Plot X-label [boolean (True or False)][default: True]</td>\n</tr>\n<tr>\n<td><code>ylable</code></td>\n<td>Plot Y-label [boolean (True or False)][default: True]</td>\n</tr>\n<tr>\n<td><code>tickfont</code></td>\n<td>Fontsize for X and Y-axis tick labels [tuple of two floats][default: (14, 14)]</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]. Not compatible with <code>show</code>= True</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>heatmap plot (heatmap.png, heatmap_clus.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/hmap.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Venn Diagram</b></p>\n<p><code>bioinfokit.visuz.venn(vennset, venncolor, vennalpha, vennlabel)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>vennset</code></td>\n<td>Venn dataset for 3 and 2-way venn. Data should be in the format of (100,010,110,001,101,011,111) for 3-way venn and 2-way venn (10, 01, 11) [default: (1,1,1,1,1,1,1)]</td>\n</tr>\n<tr>\n<td><code>venncolor</code></td>\n<td>Color Palette for Venn [color code][default: ('#00909e', '#f67280', '#ff971d')]</td>\n</tr>\n<tr>\n<td><code>vennalpha</code></td>\n<td>Transparency of Venn  [float (0 to 1)][default: 0.5]</td>\n</tr>\n<tr>\n<td><code>vennlabel</code></td>\n<td>Labels to Venn [string][default: ('A', 'B', 'C')]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Venn plot (venn3.png, venn2.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/venn.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Two sample and Welch's t-test </b></p>\n<p><code>bioinfokit.analys.stat.ttsam(table, xfac, res, evar, alpha)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Pandas dataframe. It should be stacked table with independent (xfac) and dependent (res) variable columns.</td>\n</tr>\n<tr>\n<td><code>xfac</code></td>\n<td>Independent group column name with two levels [string][default: None]</td>\n</tr>\n<tr>\n<td><code>res</code></td>\n<td>Response variable column name [string][default: None]</td>\n</tr>\n<tr>\n<td><code>evar</code></td>\n<td>t-test with equal variance [bool (True or False)][default: True]</td>\n</tr>\n<tr>\n<td><code>alpha</code></td>\n<td>Confidence level [float][default: 0.05]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>summary output and group boxplot (ttsam_boxplot.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/ttest.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Chi-square test for independence</b></p>\n<p><code>bioinfokit.analys.stat.chisq(table)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Pandas dataframe. It should be contingency table.</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>summary output and variable mosaic plot (mosaic.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/chisq.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>File format conversions</b></p>\n<p><code>bioinfokit.analys.format</code></p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>bioinfokit.analys.format.fqtofa(file)</code></td>\n<td><code>FASTQ file</code></td>\n<td>Convert FASTQ file into FASTA format</td>\n</tr>\n<tr>\n<td><code>bioinfokit.analys.format.hmmtocsv(file)</code></td>\n<td><code>HMM file</code></td>\n<td>Convert HMM text output (from HMMER tool) to CSV format</td>\n</tr>\n<tr>\n<td><code>bioinfokit.analys.format.tabtocsv(file)</code></td>\n<td><code>TAB file</code></td>\n<td>Convert TAB file to CSV format</td>\n</tr>\n<tr>\n<td><code>bioinfokit.analys.format.csvtotab(file)</code></td>\n<td><code>CSV file</code></td>\n<td>Convert CSV file to TAB format</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Output will be saved in same directory</p>\n<p><a href=\"https://reneshbedre.github.io/blog/format.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>One-way ANOVA</b></p>\n<p><code>bioinfokit.stat.oanova(table, res, xfac, ph, phalpha)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>table</code></td>\n<td>Pandas dataframe in stacked table format</td>\n</tr>\n<tr>\n<td><code>res</code></td>\n<td>Response variable (dependent variable) [string][default: None]</td>\n</tr>\n<tr>\n<td><code>xfac</code></td>\n<td>Treatments or groups or factors (independent variable) [string][default: None]</td>\n</tr>\n<tr>\n<td><code>ph</code></td>\n<td>perform pairwise comparisons with Tukey HSD test [bool (True or False)] [default: False]</td>\n</tr>\n<tr>\n<td><code>phalpha</code></td>\n<td>significance level Tukey HSD test [float (0 to 1)][default: 0.05]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>ANOVA summary, multiple pairwise comparisons, and assumption tests statistics</p>\n<p><a href=\"https://reneshbedre.github.io/blog/oanova.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Manhatten plot</b></p>\n<p><code>bioinfokit.visuz.marker.mhat(df, chr, pv, color, dim, r, ar, gwas_sign_line, gwasp, dotsize, markeridcol, markernames, gfont, valpha, show, figtype, axxlabel, axylabel, axlabelfontsize, ylm)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>df</code></td>\n<td>Pandas dataframe object with atleast SNP, chromosome, and P-values columns</td>\n</tr>\n<tr>\n<td><code>chr</code></td>\n<td>Name of a column having chromosome numbers [string][default:None]</td>\n</tr>\n<tr>\n<td><code>pv</code></td>\n<td>Name of a column having P-values. Must be numeric column [string][default:None]</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>List the name of the colors to be plotted. It can accept two alternate colors or the number colors equal to chromosome number. If nothing (None) provided, it will randomly assign the color to each chromosome [list][default:None]</td>\n</tr>\n<tr>\n<td><code>gwas_sign_line</code></td>\n<td>Plot statistical significant threshold line defined by option <code>gwasp</code> [bool (True or False)][default: False]</td>\n</tr>\n<tr>\n<td><code>gwasp</code></td>\n<td>Statistical significant threshold to identify significant SNPs [float][default: 5E-08]</td>\n</tr>\n<tr>\n<td><code>dotsize</code></td>\n<td>The size of the dots in the plot [float][default: 8]</td>\n</tr>\n<tr>\n<td><code>markeridcol</code></td>\n<td>Name of a column having SNPs. This is necessary for plotting SNP names on the plot [string][default: None]</td>\n</tr>\n<tr>\n<td><code>markernames</code></td>\n<td>The list of the SNPs to display on the plot. These SNP should be present in SNP column. Additionally, it also accepts the dict of SNPs and its associated gene name. If this option set to True, it will label all SNPs with P-value significant score defined by <code>gwasp</code> [string, list, dict][default: True]</td>\n</tr>\n<tr>\n<td><code>gfont</code></td>\n<td>Font size for SNP names to display on the plot [float][default: 8]</td>\n</tr>\n<tr>\n<td><code>valpha</code></td>\n<td>Transparency of points on plot [float (between 0 and 1)][default: 1.0]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>Figure size [tuple of two floats (width, height) in inches][default: (6, 4)]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]</td>\n</tr>\n<tr>\n<td><code>ar</code></td>\n<td>Rotation of X-axis labels [float][default: 90]</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>axxlabel</code></td>\n<td>Label for X-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axylabel</code></td>\n<td>Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axlabelfontsize</code></td>\n<td>Font size for axis labels [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>ylm</code></td>\n<td>Range of ticks to plot on Y-axis [float tuple (bottom, top, interval)][default: None]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Manhatten plot image in same directory (manhatten.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/manhat.html\" rel=\"nofollow\">Working example</a></p>\n<p><b>Extract the sequences from the FASTA file</b></p>\n<p><code>bioinfokit.analys.extract_seq(file, id)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>input FASTA file from which sequneces to be extracted</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>sequence ID file</td>\n</tr></tbody></table>\n<p>Returns:\nExtracted sequences in FASTA format file in same directory (out.fasta)</p>\n<p><b>Bar-dot plot</b></p>\n<p><code>bioinfokit.visuz.stat.bardot(df, colorbar, colordot, bw, dim, r, ar, hbsize, errorbar, dotsize, markerdot, valphabar, valphadot, show, figtype, axxlabel, axylabel, axlabelfontsize, axlabelfontname, ylm, axtickfontsize, axtickfontname, yerrlw, yerrcw)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>df</code></td>\n<td>Pandas dataframe object</td>\n</tr>\n<tr>\n<td><code>colorbar</code></td>\n<td>Color of bar graph [string or list][default:\"#bbcfff\"]</td>\n</tr>\n<tr>\n<td><code>colordot</code></td>\n<td>Color of dots on bar [string or list][default:\"#ee8972\"]</td>\n</tr>\n<tr>\n<td><code>bw</code></td>\n<td>Width of bar [float][default: 0.4]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>Figure size [tuple of two floats (width, height) in inches][default: (6, 4)]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]</td>\n</tr>\n<tr>\n<td><code>ar</code></td>\n<td>Rotation of X-axis labels [float][default: 0]</td>\n</tr>\n<tr>\n<td><code>hbsize</code></td>\n<td>Horizontal bar size for standard error bars [float][default: 4]</td>\n</tr>\n<tr>\n<td><code>errorbar</code></td>\n<td>Draw standard error bars [bool (True or False)][default: True]</td>\n</tr>\n<tr>\n<td><code>dotsize</code></td>\n<td>The size of the dots in the plot [float][default: 6]</td>\n</tr>\n<tr>\n<td><code>markerdot</code></td>\n<td>Shape of the dot marker. See more options at  <a href=\"https://matplotlib.org/3.1.1/api/markers_api.html\" rel=\"nofollow\">https://matplotlib.org/3.1.1/api/markers_api.html</a> [string][default: \"o\"]</td>\n</tr>\n<tr>\n<td><code>valphabar</code></td>\n<td>Transparency of bars on plot [float (between 0 and 1)][default: 1]</td>\n</tr>\n<tr>\n<td><code>valphadot</code></td>\n<td>Transparency of dots on plot [float (between 0 and 1)][default: 1]</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>axxlabel</code></td>\n<td>Label for X-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axylabel</code></td>\n<td>Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axlabelfontsize</code></td>\n<td>Font size for axis labels [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axlabelfontname</code></td>\n<td>Font name for axis labels [string][default: 'Arial']</td>\n</tr>\n<tr>\n<td><code>ylm</code></td>\n<td>Range of ticks to plot on Y-axis [float tuple (bottom, top, interval)][default: None]</td>\n</tr>\n<tr>\n<td><code>axtickfontsize</code></td>\n<td>Font size for axis ticks [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontname</code></td>\n<td>Font name for axis ticks [string][default: 'Arial']</td>\n</tr>\n<tr>\n<td><code>yerrlw</code></td>\n<td>Error bar line width [float][default: None]</td>\n</tr>\n<tr>\n<td><code>yerrcw</code></td>\n<td>Error bar cap width [float][default: None]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Bar-dot plot image in same directory (bardot.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/bardot.html\" rel=\"nofollow\">Working Example</a></p>\n<p><b>FASTQ quality format detection</b></p>\n<p><code>bioinfokit.analys.format.fq_qual_var(file)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>FASTQ file to detect quality format [deafult: None]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Quality format encoding name for FASTQ file (Supports only Sanger, Illumina 1.8+ and Illumina  1.3/1.4)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/fqqualfmt.html\" rel=\"nofollow\">Working Example</a></p>\n<p><b>Linear regression analysis</b></p>\n<p><code>bioinfokit.visuz.stat.lin_reg(df, x, y)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>df</code></td>\n<td>Pandas dataframe object</td>\n</tr>\n<tr>\n<td><code>x</code></td>\n<td>Name of column having independent X variables [list][default:None]</td>\n</tr>\n<tr>\n<td><code>y</code></td>\n<td>Name of column having dependent Y variables [list][default:None]</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Regression analysis summary</p>\n<p><a href=\"https://reneshbedre.github.io/blog/linearreg.html\" rel=\"nofollow\">Working Example</a></p>\n<p><b>Regression plot</b></p>\n<p><code>bioinfokit.visuz.stat.regplot(df, x, y, yhat, dim, colordot, colorline, r, ar, dotsize, markerdot, linewidth, valphaline, valphadot, show, figtype, axxlabel, axylabel, axlabelfontsize, axlabelfontname, xlm, ylm, axtickfontsize, axtickfontname)</code></p>\n<table>\n<thead>\n<tr>\n<th>Parameters</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>df</code></td>\n<td>Pandas dataframe object</td>\n</tr>\n<tr>\n<td><code>x</code></td>\n<td>Name of column having independent X variables [string][default:None]</td>\n</tr>\n<tr>\n<td><code>y</code></td>\n<td>Name of column having dependent Y variables [string][default:None]</td>\n</tr>\n<tr>\n<td><code>yhat</code></td>\n<td>Name of column having predicted response of Y variable (y_hat) from regression [string][default:None]</td>\n</tr>\n<tr>\n<td><code>dim</code></td>\n<td>Figure size [tuple of two floats (width, height) in inches][default: (6, 4)]</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>Figure resolution in dpi [int][default: 300]</td>\n</tr>\n<tr>\n<td><code>ar</code></td>\n<td>Rotation of X-axis labels [float][default: 0]</td>\n</tr>\n<tr>\n<td><code>dotsize</code></td>\n<td>The size of the dots in the plot [float][default: 6]</td>\n</tr>\n<tr>\n<td><code>markerdot</code></td>\n<td>Shape of the dot marker. See more options at  <a href=\"https://matplotlib.org/3.1.1/api/markers_api.html\" rel=\"nofollow\">https://matplotlib.org/3.1.1/api/markers_api.html</a> [string][default: \"o\"]</td>\n</tr>\n<tr>\n<td><code>valphaline</code></td>\n<td>Transparency of regression line on plot [float (between 0 and 1)][default: 1]</td>\n</tr>\n<tr>\n<td><code>valphadot</code></td>\n<td>Transparency of dots on plot [float (between 0 and 1)][default: 1]</td>\n</tr>\n<tr>\n<td><code>linewidth</code></td>\n<td>Width of regression line [float][default: 1]</td>\n</tr>\n<tr>\n<td><code>figtype</code></td>\n<td>Format of figure to save. Supported format are eps, pdf, pgf, png, ps, raw, rgba, svg, svgz [string][default:'png']</td>\n</tr>\n<tr>\n<td><code>show</code></td>\n<td>Show the figure on console instead of saving in current folder [True or False][default:False]</td>\n</tr>\n<tr>\n<td><code>axxlabel</code></td>\n<td>Label for X-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axylabel</code></td>\n<td>Label for Y-axis. If you provide this option, default label will be replaced [string][default: None]</td>\n</tr>\n<tr>\n<td><code>axlabelfontsize</code></td>\n<td>Font size for axis labels [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axlabelfontname</code></td>\n<td>Font name for axis labels [string][default: 'Arial']</td>\n</tr>\n<tr>\n<td><code>xlm</code></td>\n<td>Range of ticks to plot on X-axis [float tuple (bottom, top, interval)][default: None]</td>\n</tr>\n<tr>\n<td><code>ylm</code></td>\n<td>Range of ticks to plot on Y-axis [float tuple (bottom, top, interval)][default: None]</td>\n</tr>\n<tr>\n<td><code>axtickfontsize</code></td>\n<td>Font size for axis ticks [float][default: 9]</td>\n</tr>\n<tr>\n<td><code>axtickfontname</code></td>\n<td>Font name for axis ticks [string][default: 'Arial']</td>\n</tr></tbody></table>\n<p>Returns:</p>\n<p>Regression plot image in same directory (reg_plot.png)</p>\n<p><a href=\"https://reneshbedre.github.io/blog/linearreg.html\" rel=\"nofollow\">Working Example</a></p>\n<p>References:</p>\n<ul>\n<li>Travis E. Oliphant. A guide to NumPy, USA: Trelgol Publishing, (2006).</li>\n<li>John D. Hunter. Matplotlib: A 2D Graphics Environment, Computing in Science &amp; Engineering, 9, 90-95 (2007), DOI:10.1109/MCSE.2007.55 (publisher link)</li>\n<li>Fernando P\u00e9rez and Brian E. Granger. IPython: A System for Interactive Scientific Computing, Computing in Science &amp; Engineering, 9, 21-29 (2007), DOI:10.1109/MCSE.2007.53 (publisher link)</li>\n<li>Michael Waskom, Olga Botvinnik, Joel Ostblom, Saulius Lukauskas, Paul Hobson, MaozGelbart, \u2026 Constantine Evans. (2020, January 24). mwaskom/seaborn: v0.10.0 (January 2020) (Version v0.10.0). Zenodo. <a href=\"http://doi.org/10.5281/zenodo.3629446\" rel=\"nofollow\">http://doi.org/10.5281/zenodo.3629446</a></li>\n<li>Fabian Pedregosa, Ga\u00ebl Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, \u00c9douard Duchesnay. Scikit-learn: Machine Learning in Python, Journal of Machine Learning Research, 12, 2825-2830 (2011)</li>\n<li>Wes McKinney. Data Structures for Statistical Computing in Python, Proceedings of the 9th Python in Science Conference, 51-56 (2010)</li>\n</ul>\n<p>bioinfokit cited by:</p>\n<ul>\n<li>Greaney AM, Adams TS, Raredon MS, Gubbins E, Schupp JC, Engler AJ, Ghaedi M, Yuan Y, Kaminski N, Niklason LE. Platform\nEffects on Regeneration by Pulmonary Basal Cells as Evaluated by Single-Cell RNA Sequencing. Cell Reports. 2020 Mar\n24;30(12):4250-65.</li>\n</ul>\n\n          </div>"}, "last_serial": 7098409, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "b39f6f39a973e6507fa80b84322f7252", "sha256": "7303d77894728ea54f4f03b7aef5c74e53f2ff39f09347d9e404f0e58cf5ff38"}, "downloads": -1, "filename": "bioinfokit-0.3-py3.7.egg", "has_sig": false, "md5_digest": "b39f6f39a973e6507fa80b84322f7252", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 30248, "upload_time": "2020-03-11T18:06:01", "upload_time_iso_8601": "2020-03-11T18:06:01.586772Z", "url": "https://files.pythonhosted.org/packages/30/de/eb12a692a6c3252ebccc734e5ec7326e0ba697e6f26eb77745a0d1d1cfab/bioinfokit-0.3-py3.7.egg", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b0d0e46639a017ed1a5cdfb30d00f731", "sha256": "ddbacc24428b66ebad6484256558814c93c5bb43f5bef8bab966cfd5e5737be9"}, "downloads": -1, "filename": "bioinfokit-0.4.tar.gz", "has_sig": false, "md5_digest": "b0d0e46639a017ed1a5cdfb30d00f731", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19813, "upload_time": "2020-03-12T14:33:58", "upload_time_iso_8601": "2020-03-12T14:33:58.742884Z", "url": "https://files.pythonhosted.org/packages/9d/80/506b63f846c4698e9da552e0ac522a460a1ece03eaefdc52f5cf3766317a/bioinfokit-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "601bef3ad165e41beb940a27897c3fac", "sha256": "0fdb64035efefd20ea875016b95a21627f2b5dcfede9684734ed7fd9eb932cf6"}, "downloads": -1, "filename": "bioinfokit-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "601bef3ad165e41beb940a27897c3fac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21027, "upload_time": "2020-03-30T07:23:27", "upload_time_iso_8601": "2020-03-30T07:23:27.064018Z", "url": "https://files.pythonhosted.org/packages/2d/2b/73a662127ed5bd385a829047dbf8e7b6c0bcb09947d149f76558c3946cc5/bioinfokit-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "919a40e910a99d807a87099f72fba5e6", "sha256": "f73f26ff61c5641d5cb78b4d8ba01d9a69a809b4a108bba513b5cf1f723dcb2c"}, "downloads": -1, "filename": "bioinfokit-0.5.tar.gz", "has_sig": false, "md5_digest": "919a40e910a99d807a87099f72fba5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23671, "upload_time": "2020-03-30T07:23:28", "upload_time_iso_8601": "2020-03-30T07:23:28.510038Z", "url": "https://files.pythonhosted.org/packages/e1/c8/0e2330b63465583ca52a8003c6c8d7d0acf214994c70768784e6f288c202/bioinfokit-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "be6679ecfec8f17b2564debdcf2052ba", "sha256": "e6ba64b36775cd256331d39cc5483e1758461b79e07b6b60b20bcd07cbcbf49b"}, "downloads": -1, "filename": "bioinfokit-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "be6679ecfec8f17b2564debdcf2052ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21072, "upload_time": "2020-04-10T17:39:57", "upload_time_iso_8601": "2020-04-10T17:39:57.615912Z", "url": "https://files.pythonhosted.org/packages/8f/0c/8e074d44050491a628ccf2b70cb4e16529b4e152a82152566c0a4da96eca/bioinfokit-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad7fc6860ffc083a64c22fe1e0d208ba", "sha256": "0876ae0ae823dcb8dd260b2bb0d6624dac903245b41eeea41b9078efed9806ba"}, "downloads": -1, "filename": "bioinfokit-0.6.tar.gz", "has_sig": false, "md5_digest": "ad7fc6860ffc083a64c22fe1e0d208ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25424, "upload_time": "2020-04-10T17:39:59", "upload_time_iso_8601": "2020-04-10T17:39:59.822896Z", "url": "https://files.pythonhosted.org/packages/f0/93/4074a1818c7a30dc51284e89d2a95de6ded4dd41f0154df3c21f9860e6e5/bioinfokit-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "9ff4bf933ee3b073b5a51d7572561a98", "sha256": "0518466763c8654e9bf080050d72748c7cd7cf3cd3635df6267ba965d8b52a6c"}, "downloads": -1, "filename": "bioinfokit-0.7.tar.gz", "has_sig": false, "md5_digest": "9ff4bf933ee3b073b5a51d7572561a98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26428, "upload_time": "2020-04-17T03:11:03", "upload_time_iso_8601": "2020-04-17T03:11:03.627329Z", "url": "https://files.pythonhosted.org/packages/d3/f7/29a34075bb2011f7a1c5d0678b9ee886f88383f0b9cb4f9febd552771a23/bioinfokit-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "e3113346b9b1b5ed85ef122368893f6c", "sha256": "4321d06d1bac562eb1f15ed707ab1f636b8c4c08d1c0f2e9d7dd6c4e8156b3f4"}, "downloads": -1, "filename": "bioinfokit-0.7.1-py3.7.egg", "has_sig": false, "md5_digest": "e3113346b9b1b5ed85ef122368893f6c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 42830, "upload_time": "2020-04-25T08:16:33", "upload_time_iso_8601": "2020-04-25T08:16:33.798975Z", "url": "https://files.pythonhosted.org/packages/66/dc/1e51af3b8998fc095983d2862000065e2b96efc07aece4fb5076bcd9c915/bioinfokit-0.7.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cc707a599985a59173c2eb5bd11eafe", "sha256": "ebfb3a6353286c8586ae726b32be78e4e91425a0088aef0e18702cca416623bf"}, "downloads": -1, "filename": "bioinfokit-0.7.1.tar.gz", "has_sig": false, "md5_digest": "2cc707a599985a59173c2eb5bd11eafe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26965, "upload_time": "2020-04-25T08:16:35", "upload_time_iso_8601": "2020-04-25T08:16:35.061810Z", "url": "https://files.pythonhosted.org/packages/e5/06/61f32cb506bb1237e8288fa6337a3772c20df1f7818d0f3b797be31e175b/bioinfokit-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3113346b9b1b5ed85ef122368893f6c", "sha256": "4321d06d1bac562eb1f15ed707ab1f636b8c4c08d1c0f2e9d7dd6c4e8156b3f4"}, "downloads": -1, "filename": "bioinfokit-0.7.1-py3.7.egg", "has_sig": false, "md5_digest": "e3113346b9b1b5ed85ef122368893f6c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 42830, "upload_time": "2020-04-25T08:16:33", "upload_time_iso_8601": "2020-04-25T08:16:33.798975Z", "url": "https://files.pythonhosted.org/packages/66/dc/1e51af3b8998fc095983d2862000065e2b96efc07aece4fb5076bcd9c915/bioinfokit-0.7.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cc707a599985a59173c2eb5bd11eafe", "sha256": "ebfb3a6353286c8586ae726b32be78e4e91425a0088aef0e18702cca416623bf"}, "downloads": -1, "filename": "bioinfokit-0.7.1.tar.gz", "has_sig": false, "md5_digest": "2cc707a599985a59173c2eb5bd11eafe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26965, "upload_time": "2020-04-25T08:16:35", "upload_time_iso_8601": "2020-04-25T08:16:35.061810Z", "url": "https://files.pythonhosted.org/packages/e5/06/61f32cb506bb1237e8288fa6337a3772c20df1f7818d0f3b797be31e175b/bioinfokit-0.7.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:25 2020"}