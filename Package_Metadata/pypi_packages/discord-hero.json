{"info": {"author": "monospacedmagic", "author_email": "luci@monospacedmagic.dev", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Other Environment", "Environment :: Web Environment", "Framework :: AsyncIO", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: Apache Software License", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Communications :: Chat", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "discord-hero\n============\n\ndiscord-hero (or d-hero for short) is an **asynchronous, fully modular\napplication framework for humans** allowing you to write\napplications that connect to `Discord <https://discordapp.com/>`_ via\na bot user. It is intended for:\n\n-  developers interested in an **easy way to develop a powerful public\n   or private Discord bot** with a clean, readable, pythonic,\n   persistent storage solution and easy-to-use caching\n-  managers of Discord communities who want to **automate tasks on\n   Discord** in a highly customizable way and/or without relying on\n   external solutions\n-  beginner and intermediate level developers who are interested in\n   asynchronous concurrency with Python using asyncio\n-  any developer who's interested in trying something new and\n   wants to give this project a chance!\n\nAlthough discord-hero is **easy to get started with**, it comes with all\nthe tools experienced developers enjoy using to build production-ready\napplications for communities, games or companies on Discord:\n\n-  a **Discord bot** built on top of\n   `discord.py <https://github.com/Rapptz/discord.py/tree/rewrite>`_\n-  [TODO] a **GraphQL API** powered by\n   `Graphene <https://graphene-python.org/>`_ via\n   `Starlette <https://www.starlette.io/>`_\n-  a **familiar asynchronous ORM** based on\n   `Django <https://www.djangoproject.com/>`_\n-  an **easy-to-use cache system**, optionally powered by Redis, via\n   `aiocache <https://github.com/argaen/aiocache>`_ and\n   `aioredis <https://github.com/aio-libs/aioredis>`_\n-  full modularity thanks to a clever Extension system\n\nGetting started\n---------------\n\n**Note:** In this section, the content of every code block is intended\nto be entered in a terminal / command prompt.\n\nRequirements\n~~~~~~~~~~~~\n\nYou need `Python 3.7 or above <https://www.python.org/downloads/>`_,\n`Git <https://git-scm.com/downloads>`_, ``cookiecutter`` and ``pipenv``.\nOn Windows you may also need the\n`Visual C++ Build Tools <https://visualstudio.microsoft.com/visual-cpp-build-tools/>`_\nif you run into errors when trying to install discord-hero.\nInstall ``cookiecutter`` and ``pipenv`` if you haven\u2019t yet:\n\nLinux / Mac: ::\n\n   python3 install --user -U cookiecutter\n   python3 install --user -U --pre pipenv\n\nWindows: ::\n\n   py -3 -m pip install -U cookiecutter\n   py -3 -m pip install -U --pre pipenv\n\nIf you\u2019re just testing things out, it\u2019s probably fine to just use the\ndefault database and cache solutions (SQLite3 and simple memory cache).\nHowever, if you want to use discord-hero for a production application,\nit is recommended to run it on a Linux VPS, dedicated\nserver or something equally powerful, and use PostgreSQL for storing\ndata and Redis for caching. To do the latter two changes, check your\n`.env` file and make the following changes: ::\n\n    export DB_TYPE=postgres\n    export CACHE_TYPE=redis\n\nYou will be promped for further configuration details the next time\nyou run your bot in production mode (``--prod``).\n\n**Note:** ``mysql`` is also an option for ``DB_TYPE``, however it is not\nofficially supported.\n\nInstallation\n~~~~~~~~~~~~\n\nReplace ``<your_directory_name>`` with the project name you will have\nentered by then. ::\n\n   cookiecutter https://github.com/monospacedmagic/discord-hero-cookiecutter.git\n   cd <your_directory_name>\n   pipenv install --three\n\nFor production applications: ::\n\n   pipenv install discord-hero[postgresql,redis]\n\nRun discord-hero in test mode: ::\n\n   cd <your_project_path>\n   pipenv run hero --test\n\nRun discord-hero in production mode: ::\n\n   cd <your_project_path>\n   pipenv run hero --prod\n\n**Note:** You have the option to enter completely different configuration\ndetails for test mode and production mode, including your bot token,\nmeaning you can test with a different bot account, out of the box.\n\nFeatures\n--------\n\nCore\n~~~~\n\nThe central control unit that exposes all extensions and connects all\nthe moving parts of the application. Inherits from\n```discord.ext.commands.Bot <https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Bot>`_``.\n\nExtensions\n~~~~~~~~~~\n\nExtensions are discord-hero\u2019s plug-ins. They can be disabled, enabled,\ninstalled and uninstalled at runtime (TODO).\n\nCogs\n~~~~\n\nCogs are the main building blocks of an extension. They are essentially\nsimple classes that inherit from ``hero.Cog``. By inheriting from\n``hero.Cog``, the class is automatically added to the ``Core``\\ \u2019s cogs\nunless the extension it belongs to is disabled.\ndiscord-hero Cogs are based on discord.py Cogs, thus they inherit\nall of their functionalities. For a documentation on discord.py Cogs,\n`check here <https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Cog>`_.\n\nCommands\n~~~~~~~~\n\nDecorate a ``Cog``\\ \u2019s coroutine method with ``hero.command(**options)``\nto create a ``Command``. ::\n\n   @hero.command()\n   @hero.guild_only()  # A check ensuring that the command can only be invoked on a Discord server (Guild)\n   async def set_channel_name(self, ctx: hero.Context, name: str, channel: hero.Channel=None):\n       # !set channel name <new name> [channel]\n       # TODO actually set the channel name\n       pass\n\nEvent listeners\n~~~~~~~~~~~~~~~\n\nStart a coroutine method\u2019s name with ``on_`` to turn it into an event\nlistener. Valid listener names and parameters can be looked up\n`here <https://discordpy.readthedocs.io/en/rewrite/api.html#event-reference>`__. ::\n\n   async def on_message(self, message: discord.Message):\n       # essentially be a stereotypical parrot\n       if message.author != self.bot.user:\n           await message.channel.send(message.content)\n\nControllers\n~~~~~~~~~~~\n\ndiscord-hero encourages the Model-View-Controller pattern by\nautomatically adding an Extension's Controller to its Cogs.\nTo make that happen, you just need to subclass ``hero.Controller``\nin your Extension's ``controller`` module.\n\nModels\n~~~~~~\n\nStructure your data by writing subclasses of ``hero.models.Model``. This will\nautomatically set up your database schema when discord-hero launches or\nwhen the extension the cog belongs to is installed. If you\u2019re coming\nfrom Django, you might already be familiar with the basic API. ::\n\n   # Every Guild can have their own currency\n   class Currency(models.Model):\n       guild = fields.GuildField(pk=True, on_delete=fields.CASCADE)\n       name = fields.CharField(max_length=64)\n\n   # Every Member can have bank account with an amount of the Guild's currency\n   class BankAccount(models.Model):\n       member = fields.MemberField(pk=True, on_delete=fields.CASCADE)\n       balance = fields.IntegerField(db_index=True)\n\ndiscord-hero comes with a few built-in models: User, Guild, TextChannel,\nVoiceChannel, Role, Emoji, Member and Message. Each of them have a\ncorresponding field, e.g. UserField, GuildField, etc., that works like\na ForeignKey and allows you to easily reference the model in your own models.\n\nSettings\n~~~~~~~~\n\nSettings are a special type of Models, you can define one of these Model\nclasses by subclassing ``hero.models.Settings``.\n\nGraphQL schemas\n~~~~~~~~~~~~~~~\n\n# TODO\n\nThe GraphQL schemas generated automatically, you just need to configure\nyour models accordingly. If you want to overwrite the default\npermissions, you can use the web interface. You can still add custom permissions.\n\nUsage\n-----\n\nWriting a discord-hero Extension\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n**Structure:**\n\n**\\_\\_init\\_\\_**\n\nRequired for the Extension to be recognized.\n\n**cogs**\n\nThis is where your Cogs live. Cogs are a part of a discord-hero Extension that\nenhance the bot by adding commands, event listeners, and optional state and\nmethods that you want to make available inside the Cog. For more information\nsee below.\n\n**cogs.\\_\\_init\\_\\_**\n\nYour Cogs can be anywhere inside the `cogs` package as long as you\nimport them here so discord-hero's Extension loader can find them.\n\n**models**\n\nThis is where your Models live.\n\n**Additional features**\n\nNew in discord-hero are the following features available from inside a Cog:\n\n*await* `self.db.load(discord_obj)`\n\nUsed to connect a given Discord object to the database and load data\nrelated to it that is stored in the database.\n\n- Returns: an instance of the hero Model that is associated to the class\n  the `discord_obj` is an instance of. This object wraps the Discord\n  object and exposes all of its attributes and methods, which means\n  it can be used like one as well.\n\nExample: ::\n\n    @hero.command()\n    @hero.guild_only()\n    async def get_balance(self, ctx):\n        member = await self.db.load(ctx.author)\n        await ctx.send(f\"You have {member.balance} currency.\")\n\n*Hero Models as parameters*\n\nYou can define a discord-hero Model as a parameter type for a command.\nThis will automatically parse the user input and pass a (loaded) instance\nof the Model to your command. Example: ::\n\n    @hero.command()\n    @hero.guild_only()\n    async def get_balance(self, ctx, member: hero.Member):\n        await ctx.send(f\"{member.name} has {member.balance} currency.\")\n\n*Automatic grouping of commands*\n\ndiscord-hero automatically interprets a ``_`` in a command name as a\nspace. This means there is no need to manually group commands anymore,\nand you can use groups introduced by other Extensions or discord-hero\nitself to create commands that are closer to natural language and\nthus more intuitive to use for the general audience.\n\n`self.cache`\n\nThis is a `hero.Cache` instance that allows you to set or get\na given key into the database. There are more methods available\nto you than just get or set; for now, check out the source code\nfor those.\n\n`self.ctl`\n\nYour Extension's Controller. ``None`` if your Extension doesn't have\na ``hero.Controller`` subclass (you can only have one per Extension).\n\n`self.settings`\n\nYour Extension's Settings. ``None`` if your Extension doesn't have\na ``hero.Settings`` subclass (you can only have one per Extension).\n\n**Note:** You need at least one Cog for your extension to work.\nAlternatively, you can define a (non-async) function called ``setup``\nthat takes one argument, a ``hero.Core`` instance.\nThis function will be called when discord-hero loads the Extension.\nIt needs to be imported to ``cogs.__init__`` if it isn't defined there,\nit needs to instantiate all the Cog classes you have created, and\nit needs to pass each Cog instance to the Core's ``add_cog`` method.\n\nNew in discord-hero are the following features regarding (Django) Models:\n\n*async*\n\nDjango's ORM has been made to work well with asyncio with the help of asgiref.\ndiscord-hero introduces a decorator ``hero.async_using_db`` that turns a\nsynchronous function or method into an async one (that needs to be awaited)\nand also makes any database operations in it work, magically. What happens\nbehind the scenes is that these database operations are executed in order\nin a single, separate thread.\n\nFurthermore, discord-hero adds async versions of QuerySet and Model instance\nmethods that are prefixed with ``async_`` (only for those methods that\nactually operate on the database to load, create, update or delete data).\nThis is a temporary solution until Django's ORM officially supports async,\nbut for the time being it works extremely well!\n\nLegal stuff\n-----------\n\nDiscord is a registered trademark of Discord Inc.\n\nExcept as otherwise noted, discord-hero is licensed under the Apache\nLicense, Version 2.0 (`<LICENSE.Apache-2.0>`__ or\n`<http://www.apache.org/licenses/LICENSE-2.0>`__) or\nthe MIT license `<LICENSE.MIT>`__ or\n`<http://opensource.org/licenses/MIT>`__, at your option.\n\nSPDX-License-Identifier: Apache-2.0 OR MIT\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/monospacedmagic/discord-hero", "keywords": "discord bot framework", "license": "Apache-2.0 OR MIT", "maintainer": "", "maintainer_email": "", "name": "discord-hero", "package_url": "https://pypi.org/project/discord-hero/", "platform": "", "project_url": "https://pypi.org/project/discord-hero/", "project_urls": {"Homepage": "https://github.com/monospacedmagic/discord-hero"}, "release_url": "https://pypi.org/project/discord-hero/0.1.0a5/", "requires_dist": ["django", "discord.py", "aiocache", "click", "aiologger", "aiofiles", "python-dotenv", "colorama", "uvloop; sys_platform != \"win32\" and implementation_name == \"cpython\"", "aiomcache (>=0.5.2); extra == 'memcached'", "psycopg2; extra == 'postgresql'", "aioredis (>=1.0.0); extra == 'redis'", "pynacl; extra == 'voice'"], "requires_python": ">= 3.7.0", "summary": "discord-hero is an asynchronous, fully modular application framework for humans allowing you to write applications that connect to Discord as a bot.", "version": "0.1.0a5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>discord-hero (or d-hero for short) is an <strong>asynchronous, fully modular\napplication framework for humans</strong> allowing you to write\napplications that connect to <a href=\"https://discordapp.com/\" rel=\"nofollow\">Discord</a> via\na bot user. It is intended for:</p>\n<ul>\n<li>developers interested in an <strong>easy way to develop a powerful public\nor private Discord bot</strong> with a clean, readable, pythonic,\npersistent storage solution and easy-to-use caching</li>\n<li>managers of Discord communities who want to <strong>automate tasks on\nDiscord</strong> in a highly customizable way and/or without relying on\nexternal solutions</li>\n<li>beginner and intermediate level developers who are interested in\nasynchronous concurrency with Python using asyncio</li>\n<li>any developer who\u2019s interested in trying something new and\nwants to give this project a chance!</li>\n</ul>\n<p>Although discord-hero is <strong>easy to get started with</strong>, it comes with all\nthe tools experienced developers enjoy using to build production-ready\napplications for communities, games or companies on Discord:</p>\n<ul>\n<li>a <strong>Discord bot</strong> built on top of\n<a href=\"https://github.com/Rapptz/discord.py/tree/rewrite\" rel=\"nofollow\">discord.py</a></li>\n<li>[TODO] a <strong>GraphQL API</strong> powered by\n<a href=\"https://graphene-python.org/\" rel=\"nofollow\">Graphene</a> via\n<a href=\"https://www.starlette.io/\" rel=\"nofollow\">Starlette</a></li>\n<li>a <strong>familiar asynchronous ORM</strong> based on\n<a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a></li>\n<li>an <strong>easy-to-use cache system</strong>, optionally powered by Redis, via\n<a href=\"https://github.com/argaen/aiocache\" rel=\"nofollow\">aiocache</a> and\n<a href=\"https://github.com/aio-libs/aioredis\" rel=\"nofollow\">aioredis</a></li>\n<li>full modularity thanks to a clever Extension system</li>\n</ul>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p><strong>Note:</strong> In this section, the content of every code block is intended\nto be entered in a terminal / command prompt.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>You need <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python 3.7 or above</a>,\n<a href=\"https://git-scm.com/downloads\" rel=\"nofollow\">Git</a>, <tt>cookiecutter</tt> and <tt>pipenv</tt>.\nOn Windows you may also need the\n<a href=\"https://visualstudio.microsoft.com/visual-cpp-build-tools/\" rel=\"nofollow\">Visual C++ Build Tools</a>\nif you run into errors when trying to install discord-hero.\nInstall <tt>cookiecutter</tt> and <tt>pipenv</tt> if you haven\u2019t yet:</p>\n<p>Linux / Mac:</p>\n<pre>python3 install --user -U cookiecutter\npython3 install --user -U --pre pipenv\n</pre>\n<p>Windows:</p>\n<pre>py -3 -m pip install -U cookiecutter\npy -3 -m pip install -U --pre pipenv\n</pre>\n<p>If you\u2019re just testing things out, it\u2019s probably fine to just use the\ndefault database and cache solutions (SQLite3 and simple memory cache).\nHowever, if you want to use discord-hero for a production application,\nit is recommended to run it on a Linux VPS, dedicated\nserver or something equally powerful, and use PostgreSQL for storing\ndata and Redis for caching. To do the latter two changes, check your\n<cite>.env</cite> file and make the following changes:</p>\n<pre>export DB_TYPE=postgres\nexport CACHE_TYPE=redis\n</pre>\n<p>You will be promped for further configuration details the next time\nyou run your bot in production mode (<tt><span class=\"pre\">--prod</span></tt>).</p>\n<p><strong>Note:</strong> <tt>mysql</tt> is also an option for <tt>DB_TYPE</tt>, however it is not\nofficially supported.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Replace <tt>&lt;your_directory_name&gt;</tt> with the project name you will have\nentered by then.</p>\n<pre>cookiecutter https://github.com/monospacedmagic/discord-hero-cookiecutter.git\ncd &lt;your_directory_name&gt;\npipenv install --three\n</pre>\n<p>For production applications:</p>\n<pre>pipenv install discord-hero[postgresql,redis]\n</pre>\n<p>Run discord-hero in test mode:</p>\n<pre>cd &lt;your_project_path&gt;\npipenv run hero --test\n</pre>\n<p>Run discord-hero in production mode:</p>\n<pre>cd &lt;your_project_path&gt;\npipenv run hero --prod\n</pre>\n<p><strong>Note:</strong> You have the option to enter completely different configuration\ndetails for test mode and production mode, including your bot token,\nmeaning you can test with a different bot account, out of the box.</p>\n</div>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<div id=\"core\">\n<h3>Core</h3>\n<p>The central control unit that exposes all extensions and connects all\nthe moving parts of the application. Inherits from\n<tt>`discord.ext.commands.Bot <span class=\"pre\">&lt;https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Bot&gt;`_</span></tt>.</p>\n</div>\n<div id=\"extensions\">\n<h3>Extensions</h3>\n<p>Extensions are discord-hero\u2019s plug-ins. They can be disabled, enabled,\ninstalled and uninstalled at runtime (TODO).</p>\n</div>\n<div id=\"cogs\">\n<h3>Cogs</h3>\n<p>Cogs are the main building blocks of an extension. They are essentially\nsimple classes that inherit from <tt>hero.Cog</tt>. By inheriting from\n<tt>hero.Cog</tt>, the class is automatically added to the <tt>Core</tt>\u2019s cogs\nunless the extension it belongs to is disabled.\ndiscord-hero Cogs are based on discord.py Cogs, thus they inherit\nall of their functionalities. For a documentation on discord.py Cogs,\n<a href=\"https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Cog\" rel=\"nofollow\">check here</a>.</p>\n</div>\n<div id=\"commands\">\n<h3>Commands</h3>\n<p>Decorate a <tt>Cog</tt>\u2019s coroutine method with <tt><span class=\"pre\">hero.command(**options)</span></tt>\nto create a <tt>Command</tt>.</p>\n<pre>@hero.command()\n@hero.guild_only()  # A check ensuring that the command can only be invoked on a Discord server (Guild)\nasync def set_channel_name(self, ctx: hero.Context, name: str, channel: hero.Channel=None):\n    # !set channel name &lt;new name&gt; [channel]\n    # TODO actually set the channel name\n    pass\n</pre>\n</div>\n<div id=\"event-listeners\">\n<h3>Event listeners</h3>\n<p>Start a coroutine method\u2019s name with <tt>on_</tt> to turn it into an event\nlistener. Valid listener names and parameters can be looked up\n<a href=\"https://discordpy.readthedocs.io/en/rewrite/api.html#event-reference\" rel=\"nofollow\">here</a>.</p>\n<pre>async def on_message(self, message: discord.Message):\n    # essentially be a stereotypical parrot\n    if message.author != self.bot.user:\n        await message.channel.send(message.content)\n</pre>\n</div>\n<div id=\"controllers\">\n<h3>Controllers</h3>\n<p>discord-hero encourages the Model-View-Controller pattern by\nautomatically adding an Extension\u2019s Controller to its Cogs.\nTo make that happen, you just need to subclass <tt>hero.Controller</tt>\nin your Extension\u2019s <tt>controller</tt> module.</p>\n</div>\n<div id=\"models\">\n<h3>Models</h3>\n<p>Structure your data by writing subclasses of <tt>hero.models.Model</tt>. This will\nautomatically set up your database schema when discord-hero launches or\nwhen the extension the cog belongs to is installed. If you\u2019re coming\nfrom Django, you might already be familiar with the basic API.</p>\n<pre># Every Guild can have their own currency\nclass Currency(models.Model):\n    guild = fields.GuildField(pk=True, on_delete=fields.CASCADE)\n    name = fields.CharField(max_length=64)\n\n# Every Member can have bank account with an amount of the Guild's currency\nclass BankAccount(models.Model):\n    member = fields.MemberField(pk=True, on_delete=fields.CASCADE)\n    balance = fields.IntegerField(db_index=True)\n</pre>\n<p>discord-hero comes with a few built-in models: User, Guild, TextChannel,\nVoiceChannel, Role, Emoji, Member and Message. Each of them have a\ncorresponding field, e.g. UserField, GuildField, etc., that works like\na ForeignKey and allows you to easily reference the model in your own models.</p>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p>Settings are a special type of Models, you can define one of these Model\nclasses by subclassing <tt>hero.models.Settings</tt>.</p>\n</div>\n<div id=\"graphql-schemas\">\n<h3>GraphQL schemas</h3>\n<p># TODO</p>\n<p>The GraphQL schemas generated automatically, you just need to configure\nyour models accordingly. If you want to overwrite the default\npermissions, you can use the web interface. You can still add custom permissions.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<h2 id=\"writing-a-discord-hero-extension\"><span class=\"section-subtitle\">Writing a discord-hero Extension</span></h2>\n<p><strong>Structure:</strong></p>\n<p><strong>__init__</strong></p>\n<p>Required for the Extension to be recognized.</p>\n<p><strong>cogs</strong></p>\n<p>This is where your Cogs live. Cogs are a part of a discord-hero Extension that\nenhance the bot by adding commands, event listeners, and optional state and\nmethods that you want to make available inside the Cog. For more information\nsee below.</p>\n<p><strong>cogs.__init__</strong></p>\n<p>Your Cogs can be anywhere inside the <cite>cogs</cite> package as long as you\nimport them here so discord-hero\u2019s Extension loader can find them.</p>\n<p><strong>models</strong></p>\n<p>This is where your Models live.</p>\n<p><strong>Additional features</strong></p>\n<p>New in discord-hero are the following features available from inside a Cog:</p>\n<p><em>await</em> <cite>self.db.load(discord_obj)</cite></p>\n<p>Used to connect a given Discord object to the database and load data\nrelated to it that is stored in the database.</p>\n<ul>\n<li>Returns: an instance of the hero Model that is associated to the class\nthe <cite>discord_obj</cite> is an instance of. This object wraps the Discord\nobject and exposes all of its attributes and methods, which means\nit can be used like one as well.</li>\n</ul>\n<p>Example:</p>\n<pre>@hero.command()\n@hero.guild_only()\nasync def get_balance(self, ctx):\n    member = await self.db.load(ctx.author)\n    await ctx.send(f\"You have {member.balance} currency.\")\n</pre>\n<p><em>Hero Models as parameters</em></p>\n<p>You can define a discord-hero Model as a parameter type for a command.\nThis will automatically parse the user input and pass a (loaded) instance\nof the Model to your command. Example:</p>\n<pre>@hero.command()\n@hero.guild_only()\nasync def get_balance(self, ctx, member: hero.Member):\n    await ctx.send(f\"{member.name} has {member.balance} currency.\")\n</pre>\n<p><em>Automatic grouping of commands</em></p>\n<p>discord-hero automatically interprets a <tt>_</tt> in a command name as a\nspace. This means there is no need to manually group commands anymore,\nand you can use groups introduced by other Extensions or discord-hero\nitself to create commands that are closer to natural language and\nthus more intuitive to use for the general audience.</p>\n<p><cite>self.cache</cite></p>\n<p>This is a <cite>hero.Cache</cite> instance that allows you to set or get\na given key into the database. There are more methods available\nto you than just get or set; for now, check out the source code\nfor those.</p>\n<p><cite>self.ctl</cite></p>\n<p>Your Extension\u2019s Controller. <tt>None</tt> if your Extension doesn\u2019t have\na <tt>hero.Controller</tt> subclass (you can only have one per Extension).</p>\n<p><cite>self.settings</cite></p>\n<p>Your Extension\u2019s Settings. <tt>None</tt> if your Extension doesn\u2019t have\na <tt>hero.Settings</tt> subclass (you can only have one per Extension).</p>\n<p><strong>Note:</strong> You need at least one Cog for your extension to work.\nAlternatively, you can define a (non-async) function called <tt>setup</tt>\nthat takes one argument, a <tt>hero.Core</tt> instance.\nThis function will be called when discord-hero loads the Extension.\nIt needs to be imported to <tt>cogs.__init__</tt> if it isn\u2019t defined there,\nit needs to instantiate all the Cog classes you have created, and\nit needs to pass each Cog instance to the Core\u2019s <tt>add_cog</tt> method.</p>\n<p>New in discord-hero are the following features regarding (Django) Models:</p>\n<p><em>async</em></p>\n<p>Django\u2019s ORM has been made to work well with asyncio with the help of asgiref.\ndiscord-hero introduces a decorator <tt>hero.async_using_db</tt> that turns a\nsynchronous function or method into an async one (that needs to be awaited)\nand also makes any database operations in it work, magically. What happens\nbehind the scenes is that these database operations are executed in order\nin a single, separate thread.</p>\n<p>Furthermore, discord-hero adds async versions of QuerySet and Model instance\nmethods that are prefixed with <tt>async_</tt> (only for those methods that\nactually operate on the database to load, create, update or delete data).\nThis is a temporary solution until Django\u2019s ORM officially supports async,\nbut for the time being it works extremely well!</p>\n</div>\n<div id=\"legal-stuff\">\n<h2>Legal stuff</h2>\n<p>Discord is a registered trademark of Discord Inc.</p>\n<p>Except as otherwise noted, discord-hero is licensed under the Apache\nLicense, Version 2.0 (<a href=\"LICENSE.Apache-2.0\" rel=\"nofollow\">LICENSE.Apache-2.0</a> or\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a>) or\nthe MIT license <a href=\"LICENSE.MIT\" rel=\"nofollow\">LICENSE.MIT</a> or\n<a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">http://opensource.org/licenses/MIT</a>, at your option.</p>\n<p>SPDX-License-Identifier: Apache-2.0 OR MIT</p>\n</div>\n\n          </div>"}, "last_serial": 7172469, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6e9ed88de6a12f8bc705e32b49aec61d", "sha256": "93914136937eacfb48533430acc43570a123ea820833f5402d83bddbc04ec6c6"}, "downloads": -1, "filename": "discord_hero-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e9ed88de6a12f8bc705e32b49aec61d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 12456, "upload_time": "2019-02-06T23:38:12", "upload_time_iso_8601": "2019-02-06T23:38:12.820193Z", "url": "https://files.pythonhosted.org/packages/f5/58/cfe9e862ffd78f495e47093ee394205742c2059dc42f203a7320a47a422a/discord_hero-0.0.1-py3-none-any.whl", "yanked": true}, {"comment_text": "", "digests": {"md5": "fd3c086985582669b0914564f1bf6fe5", "sha256": "e14e22184c561ef8489ee9441f871f42b614a14bae67e41360dacce2e0916cbe"}, "downloads": -1, "filename": "discord-hero-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fd3c086985582669b0914564f1bf6fe5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 16811, "upload_time": "2019-02-06T23:38:15", "upload_time_iso_8601": "2019-02-06T23:38:15.033106Z", "url": "https://files.pythonhosted.org/packages/a9/0d/26d25b543e97601e42b17daada5314db4a5a1f058f31f8fc5611631c45f1/discord-hero-0.0.1.tar.gz", "yanked": true}], "0.1.0a0": [{"comment_text": "", "digests": {"md5": "4841bc3be0d94270876d570d3ea1e605", "sha256": "4376d1e00c43b26edd7e37c0e88a5b3028ed8647a8b40bc72039920253bdd35f"}, "downloads": -1, "filename": "discord_hero-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "4841bc3be0d94270876d570d3ea1e605", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.7.0", "size": 35119, "upload_time": "2020-05-03T02:58:34", "upload_time_iso_8601": "2020-05-03T02:58:34.482404Z", "url": "https://files.pythonhosted.org/packages/33/de/c951622f3a4597b5646e886ea70d36baf70179d6cc802146f1dd025d40d3/discord_hero-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ce5d24f77630df80c0928cde33fe986", "sha256": "434a1c12b4f76c4669be70df9d954e8052c8287aa61dcb66424fa6d9bcba2576"}, "downloads": -1, "filename": "discord-hero-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "5ce5d24f77630df80c0928cde33fe986", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.7.0", "size": 36224, "upload_time": "2020-05-03T02:58:35", "upload_time_iso_8601": "2020-05-03T02:58:35.786926Z", "url": "https://files.pythonhosted.org/packages/b9/dc/9d76b5c8a0fb22cc0f2b702c557860ed8c2631761044cc49667710c2ad65/discord-hero-0.1.0a0.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "e1e6d39e2bc1b96b24ac8c5baf4b43d4", "sha256": "c146a0d7d5d0d23734b10717e209ed13704a404300bf2655a334b82032108bc4"}, "downloads": -1, "filename": "discord_hero-0.1.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1e6d39e2bc1b96b24ac8c5baf4b43d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.7.0", "size": 35122, "upload_time": "2020-05-03T10:44:53", "upload_time_iso_8601": "2020-05-03T10:44:53.866050Z", "url": "https://files.pythonhosted.org/packages/56/b8/bfcbfcdf4535857f1837acb6fabbdba6f7d158256a69af3595ebd0e28470/discord_hero-0.1.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17ff727e68b57e6a6aca55de8c4810f1", "sha256": "ed136548041dcdecda801bd2debb6296d8fca26711853a5e30fbb18e0e706a39"}, "downloads": -1, "filename": "discord-hero-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "17ff727e68b57e6a6aca55de8c4810f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.7.0", "size": 36208, "upload_time": "2020-05-03T10:44:55", "upload_time_iso_8601": "2020-05-03T10:44:55.069437Z", "url": "https://files.pythonhosted.org/packages/0d/b8/7bc7ad583b1df8041cc9d93c056acedd83b27f2faafe8c791df49670a511/discord-hero-0.1.0a2.tar.gz", "yanked": false}], "0.1.0a3": [{"comment_text": "", "digests": {"md5": "1252c3f8ac3792efd28dc28596f2a82a", "sha256": "71d63fbc47c08728ebaf23d7af08fd5a401f62a8cc8d8ef83974aab45a56f536"}, "downloads": -1, "filename": "discord_hero-0.1.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "1252c3f8ac3792efd28dc28596f2a82a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.7.0", "size": 35114, "upload_time": "2020-05-04T15:31:33", "upload_time_iso_8601": "2020-05-04T15:31:33.862263Z", "url": "https://files.pythonhosted.org/packages/81/82/886bb0ac776eb48820c569ab4a1087ed92dc3b93248c2286e873ecbadf75/discord_hero-0.1.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1356732ab6eb084fc859b512d9b7dc26", "sha256": "4e7d64f5fb4b6030f4bdafd4bf08c966b4c70fe24e1851cefd7d97465ea93968"}, "downloads": -1, "filename": "discord-hero-0.1.0a3.tar.gz", "has_sig": false, "md5_digest": "1356732ab6eb084fc859b512d9b7dc26", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.7.0", "size": 36038, "upload_time": "2020-05-04T15:31:35", "upload_time_iso_8601": "2020-05-04T15:31:35.136033Z", "url": "https://files.pythonhosted.org/packages/9c/48/18b9e0d66033defc5a90dda774d4a62e4f622caceea21365802ff2a1f2be/discord-hero-0.1.0a3.tar.gz", "yanked": false}], "0.1.0a4": [{"comment_text": "", "digests": {"md5": "084c40748a540af0a86be830f5ecb83b", "sha256": "2690abec98ccff23561e5438c5eeee9915172626f3e0eabb37f9be1dcda3408f"}, "downloads": -1, "filename": "discord_hero-0.1.0a4-py3-none-any.whl", "has_sig": false, "md5_digest": "084c40748a540af0a86be830f5ecb83b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.7.0", "size": 35277, "upload_time": "2020-05-05T12:55:20", "upload_time_iso_8601": "2020-05-05T12:55:20.005036Z", "url": "https://files.pythonhosted.org/packages/c3/07/c8782c80d0860820f3a1fee8911b678d21fdb47e107f34cac61f0c13ed06/discord_hero-0.1.0a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fb075b81032bdc8658706c9b7ac59c6", "sha256": "70b621090c8ab81d5b1cffc5cfb016cc8bfed409db31a34abcac19dee1cacb4b"}, "downloads": -1, "filename": "discord-hero-0.1.0a4.tar.gz", "has_sig": false, "md5_digest": "2fb075b81032bdc8658706c9b7ac59c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.7.0", "size": 36243, "upload_time": "2020-05-05T12:55:21", "upload_time_iso_8601": "2020-05-05T12:55:21.397139Z", "url": "https://files.pythonhosted.org/packages/8b/f9/a145f4e86e2985e90a1653d679f105a55a88081c0b1dbf842fd9831add9f/discord-hero-0.1.0a4.tar.gz", "yanked": false}], "0.1.0a5": [{"comment_text": "", "digests": {"md5": "11f9d3ee91bd8090a4a07c36b34140b4", "sha256": "f5997e1ee9935a1c3d9ff9c63dd57e2f36fad5d8dbc63ea77869570cb4484430"}, "downloads": -1, "filename": "discord_hero-0.1.0a5-py3-none-any.whl", "has_sig": false, "md5_digest": "11f9d3ee91bd8090a4a07c36b34140b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.7.0", "size": 35406, "upload_time": "2020-05-05T14:48:29", "upload_time_iso_8601": "2020-05-05T14:48:29.660682Z", "url": "https://files.pythonhosted.org/packages/be/5a/a20e70a37877029946ca0a29ef6a11a8b064ba9a6203fe3852ae924d675f/discord_hero-0.1.0a5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8963f26d81aca94e5ea374460c9cd1b0", "sha256": "79cd5f9838d3e4fe9ff71ac922ddae273388c0834261e8599eb5c3c2d9d10cbd"}, "downloads": -1, "filename": "discord-hero-0.1.0a5.tar.gz", "has_sig": false, "md5_digest": "8963f26d81aca94e5ea374460c9cd1b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.7.0", "size": 36376, "upload_time": "2020-05-05T14:48:31", "upload_time_iso_8601": "2020-05-05T14:48:31.304037Z", "url": "https://files.pythonhosted.org/packages/64/5f/98f0f09daf3051a9f4fa53b7b0e8ff0c247ac5ea9d4780e4442708b853a9/discord-hero-0.1.0a5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11f9d3ee91bd8090a4a07c36b34140b4", "sha256": "f5997e1ee9935a1c3d9ff9c63dd57e2f36fad5d8dbc63ea77869570cb4484430"}, "downloads": -1, "filename": "discord_hero-0.1.0a5-py3-none-any.whl", "has_sig": false, "md5_digest": "11f9d3ee91bd8090a4a07c36b34140b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.7.0", "size": 35406, "upload_time": "2020-05-05T14:48:29", "upload_time_iso_8601": "2020-05-05T14:48:29.660682Z", "url": "https://files.pythonhosted.org/packages/be/5a/a20e70a37877029946ca0a29ef6a11a8b064ba9a6203fe3852ae924d675f/discord_hero-0.1.0a5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8963f26d81aca94e5ea374460c9cd1b0", "sha256": "79cd5f9838d3e4fe9ff71ac922ddae273388c0834261e8599eb5c3c2d9d10cbd"}, "downloads": -1, "filename": "discord-hero-0.1.0a5.tar.gz", "has_sig": false, "md5_digest": "8963f26d81aca94e5ea374460c9cd1b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.7.0", "size": 36376, "upload_time": "2020-05-05T14:48:31", "upload_time_iso_8601": "2020-05-05T14:48:31.304037Z", "url": "https://files.pythonhosted.org/packages/64/5f/98f0f09daf3051a9f4fa53b7b0e8ff0c247ac5ea9d4780e4442708b853a9/discord-hero-0.1.0a5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:12 2020"}