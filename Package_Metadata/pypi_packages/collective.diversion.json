{"info": {"author": "Matthew Wilkes", "author_email": "matthew@matthewwilkes.co.uk", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Internet"], "description": "collective.diversion\r\n====================\r\n\r\ncollective.diversion wraps the existing behaviour for broken objects in the ZODB and provides a lookup table that will\r\nbe processed in advance of passing down requests. This allows developers to declare old locations of their classes and\r\nhave them be automatically and seamlessly migrated to the new code on load.\r\n\r\n.. image :: https://secure.travis-ci.org/collective/collective.diversion.png?branch=master\r\n   :target: http://travis-ci.org/collective/collective.diversion\r\n\r\nUsage\r\n-----\r\n\r\nSimply include the following ZCML declaration in your code::\r\n\r\n    <configure\r\n        xmlns=\"http://namespaces.zope.org/zope\"\r\n        xmlns:diversion=\"http://namespaces.plone.org/diversion\">\r\n\r\n        <diversion:class\r\n            old=\"Products.example.oldlocation\"\r\n            new=\"collective.example.shiny\"\r\n            />\r\n\r\n    </configure>\r\n\r\nCaveats\r\n-------\r\n\r\nDiverted classes will persist their new class when they are written.  However, when ZODB stores references to persistent objects it stores both the oid and the name of the class.  Those class name references will only be updated when the persistent object they are attached to is re-serialised (modified).  Unfortunately this package cannot do this for you as there is no way to find the set of objects which reference a particular object (quickly).  You'll have to leave the diversion directives in your package until you can confirm that all instances and all references have been updated.\r\n\r\nChangelog\r\n=========\r\n\r\n1.0 (Unreleased)\r\n----------------\r\n\r\n* Overrides the cPickle.Unpickler class in ZODB ExportImport to allow for copy/paste as well as export.\r\n  (MatthewWilkes)\r\n* Rebind the class factory to existing DB connections on initialization\r\n  (MatthewWilkes)\r\n* ZCML declaration to register diversions\r\n* Implementation of classFactory that uses diversions\r\n\r\nContributors\r\n============\r\n\r\nTom Blockley\r\nAlan Hoey\r\nMatthew Wilkes\r\n\r\nSponsored by\r\n------------\r\n\r\nTeam Rubber, Bristol", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.diversion", "keywords": "Zope ZODB", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.diversion", "package_url": "https://pypi.org/project/collective.diversion/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.diversion/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.diversion"}, "release_url": "https://pypi.org/project/collective.diversion/1.0/", "requires_dist": null, "requires_python": null, "summary": "collective.diversion wraps the existing behaviour for broken objects in the ZODB to allow developers to declare old locations of their classes and have them be automatically migrated", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"collective-diversion\">\n<h2>collective.diversion</h2>\n<p>collective.diversion wraps the existing behaviour for broken objects in the ZODB and provides a lookup table that will\nbe processed in advance of passing down requests. This allows developers to declare old locations of their classes and\nhave them be automatically and seamlessly migrated to the new code on load.</p>\n<a href=\"http://travis-ci.org/collective/collective.diversion\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/collective/collective.diversion.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdc337ed3970163e2cd23e1448c7af44d1e2bf7d/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e646976657273696f6e2e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Simply include the following ZCML declaration in your code:</p>\n<pre>&lt;configure\n    xmlns=\"http://namespaces.zope.org/zope\"\n    xmlns:diversion=\"http://namespaces.plone.org/diversion\"&gt;\n\n    &lt;diversion:class\n        old=\"Products.example.oldlocation\"\n        new=\"collective.example.shiny\"\n        /&gt;\n\n&lt;/configure&gt;\n</pre>\n</div>\n<div id=\"caveats\">\n<h3>Caveats</h3>\n<p>Diverted classes will persist their new class when they are written.  However, when ZODB stores references to persistent objects it stores both the oid and the name of the class.  Those class name references will only be updated when the persistent object they are attached to is re-serialised (modified).  Unfortunately this package cannot do this for you as there is no way to find the set of objects which reference a particular object (quickly).  You\u2019ll have to leave the diversion directives in your package until you can confirm that all instances and all references have been updated.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"unreleased\"><span class=\"section-subtitle\">1.0 (Unreleased)</span></h2>\n<ul>\n<li>Overrides the cPickle.Unpickler class in ZODB ExportImport to allow for copy/paste as well as export.\n(MatthewWilkes)</li>\n<li>Rebind the class factory to existing DB connections on initialization\n(MatthewWilkes)</li>\n<li>ZCML declaration to register diversions</li>\n<li>Implementation of classFactory that uses diversions</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Tom Blockley\nAlan Hoey\nMatthew Wilkes</p>\n<div id=\"sponsored-by\">\n<h3>Sponsored by</h3>\n<p>Team Rubber, Bristol</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 787759, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e960990eade40a34d55695b423ae5cc1", "sha256": "fd8b4cfd6ff5d2f0dbca0c872564e69c78f3faa70fe3823e497effea881d140b"}, "downloads": -1, "filename": "collective.diversion-1.0.zip", "has_sig": false, "md5_digest": "e960990eade40a34d55695b423ae5cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26670, "upload_time": "2013-04-22T13:42:35", "upload_time_iso_8601": "2013-04-22T13:42:35.351454Z", "url": "https://files.pythonhosted.org/packages/c4/5e/1fbdef96f300c410d7e01adf42b9aaf82848b9bf844fcd358e1957478d3f/collective.diversion-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e960990eade40a34d55695b423ae5cc1", "sha256": "fd8b4cfd6ff5d2f0dbca0c872564e69c78f3faa70fe3823e497effea881d140b"}, "downloads": -1, "filename": "collective.diversion-1.0.zip", "has_sig": false, "md5_digest": "e960990eade40a34d55695b423ae5cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26670, "upload_time": "2013-04-22T13:42:35", "upload_time_iso_8601": "2013-04-22T13:42:35.351454Z", "url": "https://files.pythonhosted.org/packages/c4/5e/1fbdef96f300c410d7e01adf42b9aaf82848b9bf844fcd358e1957478d3f/collective.diversion-1.0.zip", "yanked": false}], "timestamp": "Thu May  7 22:17:56 2020"}