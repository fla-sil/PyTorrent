{"info": {"author": "shivam Panwar", "author_email": "panwar.shivam199@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "*************\nDocumentation\n*************\nThis is the repository of the xl_bert package. This library helps you find sentence embedding for your sentence using SOTA language models such as Bert and XLNET.\n\n    This library takes in an input seven paramters :\n\n    **sentence_list,model_name,model_dir,token_model_dir,n_layers,strategy,max_len**. Each parameter has been explained below.\n\n    **sentence_list** : List of sentences you want to get embedding of. \n\n    **model_name** : Name of model which you want to use, currently can be 'bert' or 'xlnet'.\n\n    **model_dir** : Directory path of pretrained/finetuned Bert/XLNet language model. Default is 'xlnet-base-cased'. Pretrained language models can be seen from here:\n\n\n    <http://huggingface.co/transformers/pretrained_models.html>`_\n\n\n    **token_model_dir** : Directory path of tokenizer. Default is 'xlnet-base-cased'\n\n\n    **n_layers** :  Number of layers you want to use to get sentence embedding.Default is 1\n\n    **Strategy** : This is where it gets interesting. Strategy is categorised in four choices.\n\n        'avg': We average each layer individually and then average n_layers.\n        'cat': We concatenate each layer individually, then we concatenate n_layers\n        'avgcat': We average each layer individually and then concat n_layers\n        'catavg': We concat each individual layer and then average n_layers. \n\n    **max_len** : Maximum length of sentence you want. Default 50\n\n================\n Installation\n================\n    pip install xl_bert\n\n\n**Usage with Bert as well as XLNet**\n\n    get_sentence_embedding(['I am playing','let me dance'],model_name='xlnet',model_dir='xlnet- \n    large-cased',token_model_dir='xlnet-large-cased',n_layers=2,strategy='avg',max_len=50) \n\n**Contribution**\n\n Package author and current maintainer is Shivam Panwar (panwar.shivam199@gmail.com); You are more than welcome to approach him for help. Contributions are very welcomed, especially since this package is very much in its infancy.\n\n\nCreated by Shivam Panwar (panwar.shivam199@gmail.com)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Shivampanwar/xl_bert", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xl-bert", "package_url": "https://pypi.org/project/xl-bert/", "platform": "", "project_url": "https://pypi.org/project/xl-bert/", "project_urls": {"Homepage": "https://github.com/Shivampanwar/xl_bert"}, "release_url": "https://pypi.org/project/xl-bert/0.0.4/", "requires_dist": ["torch", "transformers", "keras"], "requires_python": ">=3.5", "summary": "This lets you find sentence embedding using word embedding from XLNet and Bert", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <hr>\n<p>Documentation</p>\n<hr>\n<p>This is the repository of the xl_bert package. This library helps you find sentence embedding for your sentence using SOTA language models such as Bert and XLNET.</p>\n<pre><code>This library takes in an input seven paramters :\n\n**sentence_list,model_name,model_dir,token_model_dir,n_layers,strategy,max_len**. Each parameter has been explained below.\n\n**sentence_list** : List of sentences you want to get embedding of. \n\n**model_name** : Name of model which you want to use, currently can be 'bert' or 'xlnet'.\n\n**model_dir** : Directory path of pretrained/finetuned Bert/XLNet language model. Default is 'xlnet-base-cased'. Pretrained language models can be seen from here:\n\n\n&lt;http://huggingface.co/transformers/pretrained_models.html&gt;`_\n\n\n**token_model_dir** : Directory path of tokenizer. Default is 'xlnet-base-cased'\n\n\n**n_layers** :  Number of layers you want to use to get sentence embedding.Default is 1\n\n**Strategy** : This is where it gets interesting. Strategy is categorised in four choices.\n\n    'avg': We average each layer individually and then average n_layers.\n    'cat': We concatenate each layer individually, then we concatenate n_layers\n    'avgcat': We average each layer individually and then concat n_layers\n    'catavg': We concat each individual layer and then average n_layers. \n\n**max_len** : Maximum length of sentence you want. Default 50\n</code></pre>\n<h1>================\nInstallation</h1>\n<pre><code>pip install xl_bert\n</code></pre>\n<p><strong>Usage with Bert as well as XLNet</strong></p>\n<pre><code>get_sentence_embedding(['I am playing','let me dance'],model_name='xlnet',model_dir='xlnet- \nlarge-cased',token_model_dir='xlnet-large-cased',n_layers=2,strategy='avg',max_len=50) \n</code></pre>\n<p><strong>Contribution</strong></p>\n<p>Package author and current maintainer is Shivam Panwar (<a href=\"mailto:panwar.shivam199@gmail.com\">panwar.shivam199@gmail.com</a>); You are more than welcome to approach him for help. Contributions are very welcomed, especially since this package is very much in its infancy.</p>\n<p>Created by Shivam Panwar (<a href=\"mailto:panwar.shivam199@gmail.com\">panwar.shivam199@gmail.com</a>)</p>\n\n          </div>"}, "last_serial": 6628869, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b1d23d263d989c4b38b7720a8afd06c7", "sha256": "331b3488272d03654570e351f15fad6c047eabc20604e25abb08069f189e80b9"}, "downloads": -1, "filename": "xl_bert-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b1d23d263d989c4b38b7720a8afd06c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2097, "upload_time": "2020-02-10T10:51:02", "upload_time_iso_8601": "2020-02-10T10:51:02.120864Z", "url": "https://files.pythonhosted.org/packages/f3/b9/be85763b9901932efeb583a542a1156f0ef958994f737a422c6cfc573767/xl_bert-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11519f02acbae4fcce94a170b25a766f", "sha256": "4ab46f4df2d9233b90f211e8d858d114270dfb6aa2b46dc28f30039f42ad0bbb"}, "downloads": -1, "filename": "xl_bert-0.0.1.tar.gz", "has_sig": false, "md5_digest": "11519f02acbae4fcce94a170b25a766f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 1226, "upload_time": "2020-02-10T10:51:06", "upload_time_iso_8601": "2020-02-10T10:51:06.625247Z", "url": "https://files.pythonhosted.org/packages/cf/a3/79ebd7e7c61d638dd80159dcaa6ba74fcd64aeaa51d3528b6ba09d5d49b9/xl_bert-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9938bb936f0e162fa67f1955a90378d8", "sha256": "d2b559a10fd6678b732ceae833116fe9bb43d96f4133ef9facc07db6bce42557"}, "downloads": -1, "filename": "xl_bert-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9938bb936f0e162fa67f1955a90378d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2090, "upload_time": "2020-02-14T05:56:22", "upload_time_iso_8601": "2020-02-14T05:56:22.418778Z", "url": "https://files.pythonhosted.org/packages/1b/cf/a1e705b21157812eaeae1fe6423dda905898f80c932afefd07d3f4578768/xl_bert-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e4d435ee49799ccdd3acbf036363f9d", "sha256": "4b57b49ed8329361c588153748a9cd8a2ed9fde0ea10a6c6bd72480cd78abda1"}, "downloads": -1, "filename": "xl_bert-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4e4d435ee49799ccdd3acbf036363f9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 1192, "upload_time": "2020-02-14T05:56:24", "upload_time_iso_8601": "2020-02-14T05:56:24.818284Z", "url": "https://files.pythonhosted.org/packages/e2/35/e998ffa6d64947df3d05715dcf0b9d2a3766a610dbbd82919c5f321dd2b7/xl_bert-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "04badf60cf03f4a9a81675d122a3ff82", "sha256": "7439839549b39fd5ff521bb1870b2c42afc5113dba92ba0cff2eb78521cc914f"}, "downloads": -1, "filename": "xl_bert-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "04badf60cf03f4a9a81675d122a3ff82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2903, "upload_time": "2020-02-14T07:59:37", "upload_time_iso_8601": "2020-02-14T07:59:37.379848Z", "url": "https://files.pythonhosted.org/packages/0d/d0/f98451a37bff35be93c228daa75e5d248db21221dd0dba93fecf408a88df/xl_bert-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5144d85396fb308fe960dc32e106ad05", "sha256": "13494f92f9fc4a82ae5b1c4eea19f8079210e4aa81a7116c214978c8afbbe199"}, "downloads": -1, "filename": "xl_bert-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5144d85396fb308fe960dc32e106ad05", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2912, "upload_time": "2020-02-14T08:04:47", "upload_time_iso_8601": "2020-02-14T08:04:47.296977Z", "url": "https://files.pythonhosted.org/packages/f5/d8/35f3965114305023b243fedc2a74558169b23a67d601c22c34ce78dcdbf7/xl_bert-0.0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5144d85396fb308fe960dc32e106ad05", "sha256": "13494f92f9fc4a82ae5b1c4eea19f8079210e4aa81a7116c214978c8afbbe199"}, "downloads": -1, "filename": "xl_bert-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5144d85396fb308fe960dc32e106ad05", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2912, "upload_time": "2020-02-14T08:04:47", "upload_time_iso_8601": "2020-02-14T08:04:47.296977Z", "url": "https://files.pythonhosted.org/packages/f5/d8/35f3965114305023b243fedc2a74558169b23a67d601c22c34ce78dcdbf7/xl_bert-0.0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:25:22 2020"}