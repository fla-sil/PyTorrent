{"info": {"author": "Shlomi Fish", "author_email": "shlomif@cpan.org", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "==============================================================================\nSum walker.  Iterate over sums of a certain number of elements\n==============================================================================\n:Info: This is the README file for Sum walker.\n:Author: Shlomi Fish <shlomif@cpan.org>\n:Copyright: \u00a9 2020, Shlomi Fish.\n:Date: 2020-02-25\n:Version: 0.8.1\n\n.. index: README\n.. image:: https://travis-ci.org/shlomif/sum_walker.svg?branch=master\n   :target: https://travis-ci.org/shlomif/sum_walker\n\nPURPOSE\n-------\n\nThe sum_walker PyPI distribution allows one to iterate over increasing\nsums of a certain number (e.g: 2 or 3) of elements out of a stream of\nincreasing integers.\n\nINSTALLATION\n------------\n\npip3 install sum_walker\n\nUSAGE\n-----\n\nA simple example of printing sums of two integers:\n\n::\n\n    #! /usr/bin/env python3\n    # -*- coding: utf-8 -*-\n    # vim:fenc=utf-8\n    #\n    # Copyright \u00a9 2020 Shlomi Fish <shlomif@cpan.org>\n    #\n    # Distributed under the terms of the MIT license.\n    #\n    # This program displays increasing sums of two positive integers\n\n    from six import print_\n\n    from sum_walker import DWIM_SumWalker\n\n\n    def main():\n        seq = [1, 2, 3, 4]\n\n        def request_more():\n            nonlocal seq\n            seq.append(seq[-1] + 1)\n\n        it = DWIM_SumWalker(2, seq, request_more)\n\n        def print_next():\n            nonlocal it\n            sum_, coords = next(it)\n            print_(\"{} = {}\".format(\n                sum_, \" ; \".join(\n                    [\" + \".join([str(seq[x]) for x in permutation])\n                     for permutation in coords])))\n\n        # Prints \u00ab2 = 1 + 1\u00bb\n        print_next()\n\n        # Prints \u00ab3 = 1 + 2\u00bb\n        print_next()\n\n        # Prints \u00ab4 = 1 + 3 ; 2 + 2\u00bb\n        print_next()\n\n        # Prints \u00ab5 = 1 + 4 ; 2 + 3\u00bb\n        print_next()\n\n        # Prints \u00ab6 = 1 + 5 ; 2 + 4 ; 3 + 3\u00bb\n        print_next()\n\n\n    main()\n\nA more interesting example:\n\n::\n\n    # Finding sums of two powers of 3 (= i**3 ) in two or more\n    # different ways:\n    #\n    # https://en.wikipedia.org/wiki/Taxicab_number\n    from sum_walker import DWIM_SumWalker\n\n    seq = [0, 1]\n    reached = 2\n\n    def request_more():\n        nonlocal reached\n        nonlocal seq\n        seq.append(reached ** 3)\n        reached += 1\n\n    it = DWIM_SumWalker(2, seq, request_more)\n    for sum_, coords in it:\n        len_ = len(coords)\n        if len_ > 1:\n            print(\"{}\\t{}\\t{}\".format(\n                len_, sum_, \" ; \".join(\n                    [\" + \".join([\"{} ** 3\".format(x) for x in c])\n                     for c in coords])))\n\nNOTES\n-----\n\nCOPYRIGHT\n---------\nCopyright \u00a9 2020, Shlomi Fish.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions, and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions, and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the author of this software nor the names of\n   contributors to this software may be used to endorse or promote\n   products derived from this software without specific prior written\n   consent.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shlomif/sum_walker", "keywords": "sum_walker", "license": "3-clause BSD", "maintainer": "", "maintainer_email": "", "name": "sum-walker", "package_url": "https://pypi.org/project/sum-walker/", "platform": "any", "project_url": "https://pypi.org/project/sum-walker/", "project_urls": {"Homepage": "https://github.com/shlomif/sum_walker"}, "release_url": "https://pypi.org/project/sum-walker/0.8.1/", "requires_dist": null, "requires_python": "", "summary": "Iterate over sums of a certain number of elements", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Info:</th><td>This is the README file for Sum walker.</td>\n</tr>\n<tr><th>Author:</th>\n<td>Shlomi Fish &lt;<a href=\"mailto:shlomif%40cpan.org\">shlomif<span>@</span>cpan<span>.</span>org</a>&gt;</td></tr>\n<tr><th>Copyright:</th>\n<td>\u00a9 2020, Shlomi Fish.</td></tr>\n<tr><th>Date:</th>\n<td>2020-02-25</td></tr>\n<tr><th>Version:</th>\n<td>0.8.1</td></tr>\n</tbody>\n</table>\n<a href=\"https://travis-ci.org/shlomif/sum_walker\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/shlomif/sum_walker.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b67fa29362f8169ac7235dab5cb697a583fec4cb/68747470733a2f2f7472617669732d63692e6f72672f73686c6f6d69662f73756d5f77616c6b65722e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"purpose\">\n<h2>PURPOSE</h2>\n<p>The sum_walker PyPI distribution allows one to iterate over increasing\nsums of a certain number (e.g: 2 or 3) of elements out of a stream of\nincreasing integers.</p>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<p>pip3 install sum_walker</p>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<p>A simple example of printing sums of two integers:</p>\n<pre>#! /usr/bin/env python3\n# -*- coding: utf-8 -*-\n# vim:fenc=utf-8\n#\n# Copyright \u00a9 2020 Shlomi Fish &lt;shlomif@cpan.org&gt;\n#\n# Distributed under the terms of the MIT license.\n#\n# This program displays increasing sums of two positive integers\n\nfrom six import print_\n\nfrom sum_walker import DWIM_SumWalker\n\n\ndef main():\n    seq = [1, 2, 3, 4]\n\n    def request_more():\n        nonlocal seq\n        seq.append(seq[-1] + 1)\n\n    it = DWIM_SumWalker(2, seq, request_more)\n\n    def print_next():\n        nonlocal it\n        sum_, coords = next(it)\n        print_(\"{} = {}\".format(\n            sum_, \" ; \".join(\n                [\" + \".join([str(seq[x]) for x in permutation])\n                 for permutation in coords])))\n\n    # Prints \u00ab2 = 1 + 1\u00bb\n    print_next()\n\n    # Prints \u00ab3 = 1 + 2\u00bb\n    print_next()\n\n    # Prints \u00ab4 = 1 + 3 ; 2 + 2\u00bb\n    print_next()\n\n    # Prints \u00ab5 = 1 + 4 ; 2 + 3\u00bb\n    print_next()\n\n    # Prints \u00ab6 = 1 + 5 ; 2 + 4 ; 3 + 3\u00bb\n    print_next()\n\n\nmain()\n</pre>\n<p>A more interesting example:</p>\n<pre># Finding sums of two powers of 3 (= i**3 ) in two or more\n# different ways:\n#\n# https://en.wikipedia.org/wiki/Taxicab_number\nfrom sum_walker import DWIM_SumWalker\n\nseq = [0, 1]\nreached = 2\n\ndef request_more():\n    nonlocal reached\n    nonlocal seq\n    seq.append(reached ** 3)\n    reached += 1\n\nit = DWIM_SumWalker(2, seq, request_more)\nfor sum_, coords in it:\n    len_ = len(coords)\n    if len_ &gt; 1:\n        print(\"{}\\t{}\\t{}\".format(\n            len_, sum_, \" ; \".join(\n                [\" + \".join([\"{} ** 3\".format(x) for x in c])\n                 for c in coords])))\n</pre>\n</div>\n<div id=\"notes\">\n<h2>NOTES</h2>\n</div>\n<div id=\"copyright\">\n<h2>COPYRIGHT</h2>\n<p>Copyright \u00a9 2020, Shlomi Fish.\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<ol>\n<li>Redistributions of source code must retain the above copyright\nnotice, this list of conditions, and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions, and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.</li>\n<li>Neither the name of the author of this software nor the names of\ncontributors to this software may be used to endorse or promote\nproducts derived from this software without specific prior written\nconsent.</li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 7164337, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "b514d5c2bddffdc21334e446cf735aff", "sha256": "145cd3400107b0b1dc335e5c63052056cbbb385dfb3cd5796629a80746ef5cea"}, "downloads": -1, "filename": "sum_walker-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b514d5c2bddffdc21334e446cf735aff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11276, "upload_time": "2020-02-25T16:13:31", "upload_time_iso_8601": "2020-02-25T16:13:31.858742Z", "url": "https://files.pythonhosted.org/packages/6b/fa/85453ed0f6231be5a6137394c6a7008d8c5980bc9f88e57c891e984e4e75/sum_walker-0.2.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "9d1308b9945b5b0dc4bb83cb24cf6362", "sha256": "0b668a21ff401c308acd9e8724068c09f78d7c575e0cecb21d5c210320987f5a"}, "downloads": -1, "filename": "sum_walker-0.4.0.tar.gz", "has_sig": false, "md5_digest": "9d1308b9945b5b0dc4bb83cb24cf6362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12250, "upload_time": "2020-03-01T12:50:14", "upload_time_iso_8601": "2020-03-01T12:50:14.955467Z", "url": "https://files.pythonhosted.org/packages/14/8f/a6dd97dbcd4c7991cba23ac2e3f9277e71e2e465220ae23c6f018a27cc4a/sum_walker-0.4.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "b3a526f96a727b10f1b3181145a4a321", "sha256": "6a6f4659761ce5217d6fe284b6373883511036cc1925e242b3fa4de87d073525"}, "downloads": -1, "filename": "sum_walker-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b3a526f96a727b10f1b3181145a4a321", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12698, "upload_time": "2020-03-03T12:54:33", "upload_time_iso_8601": "2020-03-03T12:54:33.173960Z", "url": "https://files.pythonhosted.org/packages/92/19/fe8ab24731d96adee7904ff6ecce3b0fc6a6485fa2751163cb63d49c0122/sum_walker-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "c4d58809cb56996be8094e8adb8611e0", "sha256": "849c67833e9fbe4dfa5372f62b61d3c684ba876cd9142d39f24cbb931a56873c"}, "downloads": -1, "filename": "sum_walker-0.6.1.tar.gz", "has_sig": false, "md5_digest": "c4d58809cb56996be8094e8adb8611e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13138, "upload_time": "2020-03-03T13:32:45", "upload_time_iso_8601": "2020-03-03T13:32:45.202007Z", "url": "https://files.pythonhosted.org/packages/18/03/13f9039628b1d2dd7535e9d123a4d2f3f04694985131d4fff5264723a3d8/sum_walker-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "c4124985f491eb8664ab2cc415e5c9ff", "sha256": "9bad402616b2c99a87d395ebce33499045aff69da521a707348b6002f71152be"}, "downloads": -1, "filename": "sum_walker-0.6.2.tar.gz", "has_sig": false, "md5_digest": "c4124985f491eb8664ab2cc415e5c9ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13254, "upload_time": "2020-03-06T09:22:42", "upload_time_iso_8601": "2020-03-06T09:22:42.388037Z", "url": "https://files.pythonhosted.org/packages/97/4a/c52d311f98dcc5bc68ccb3d1a1931b0e1846afb9c400cab97762d92a4940/sum_walker-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "40ca887dec0e6cbbcc8746d036238b0b", "sha256": "a9a7da9f03b2a00dbd7e88f7be540b9bf067b0a4f17852f2c442665b0acae245"}, "downloads": -1, "filename": "sum_walker-0.6.3.tar.gz", "has_sig": false, "md5_digest": "40ca887dec0e6cbbcc8746d036238b0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13367, "upload_time": "2020-03-06T10:40:51", "upload_time_iso_8601": "2020-03-06T10:40:51.152735Z", "url": "https://files.pythonhosted.org/packages/63/7a/61ecc054fb81705d588ffeea2de0b78c99b92d8d387098c6a055279d8614/sum_walker-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "db3bef69069d698ee56b9a5b88559047", "sha256": "9dc8cb94cb7cdd061b5135adcb7f85495417aa473dfdd9d4dc9666767f8cdc2a"}, "downloads": -1, "filename": "sum_walker-0.6.4.tar.gz", "has_sig": false, "md5_digest": "db3bef69069d698ee56b9a5b88559047", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13553, "upload_time": "2020-03-07T09:47:26", "upload_time_iso_8601": "2020-03-07T09:47:26.365138Z", "url": "https://files.pythonhosted.org/packages/b9/bb/3792773dc6d4309f29c8ed7c015dc8d06716e314dd758e9a820e05724123/sum_walker-0.6.4.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "431acbc2603f6908b97cd074e7a045cc", "sha256": "14dfb2d70d8b11ea87db405cd8f5fec519e35103fc6f188483ac167d9eefbd2d"}, "downloads": -1, "filename": "sum_walker-0.8.0.tar.gz", "has_sig": false, "md5_digest": "431acbc2603f6908b97cd074e7a045cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14935, "upload_time": "2020-05-04T12:17:18", "upload_time_iso_8601": "2020-05-04T12:17:18.297015Z", "url": "https://files.pythonhosted.org/packages/f7/a2/841ac402670601302c56a7423f5b9fed491d6a2e59eb72f33433bad3e8c7/sum_walker-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "d40770018baae0d9eb8c8ee29be27799", "sha256": "d4ccb0cea945d0a34622c4747f808a027a8305457b6821dda667ea009a817eab"}, "downloads": -1, "filename": "sum_walker-0.8.1.tar.gz", "has_sig": false, "md5_digest": "d40770018baae0d9eb8c8ee29be27799", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14282, "upload_time": "2020-05-04T13:21:53", "upload_time_iso_8601": "2020-05-04T13:21:53.379499Z", "url": "https://files.pythonhosted.org/packages/61/74/a00459ab2a23477db18018613bec031b703da5fcf875496f8da99299a38c/sum_walker-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d40770018baae0d9eb8c8ee29be27799", "sha256": "d4ccb0cea945d0a34622c4747f808a027a8305457b6821dda667ea009a817eab"}, "downloads": -1, "filename": "sum_walker-0.8.1.tar.gz", "has_sig": false, "md5_digest": "d40770018baae0d9eb8c8ee29be27799", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14282, "upload_time": "2020-05-04T13:21:53", "upload_time_iso_8601": "2020-05-04T13:21:53.379499Z", "url": "https://files.pythonhosted.org/packages/61/74/a00459ab2a23477db18018613bec031b703da5fcf875496f8da99299a38c/sum_walker-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:24 2020"}