{"info": {"author": "Ryan Hope", "author_email": "rmh3093@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2", "Topic :: Utilities"], "description": "==========\njsonConfig\n==========\n\n``jsonConfig`` is a Python package that provides sparse JSON based config files with GUI editor.\nThe config files are referred to as being sparse because only those settings which are different than\nthe default values are stored in the config files. Default config options are defined programmatically\nwhich allows defaults to be updated with out overwriting a users options.\n\nUsage\n=====\n\nCreating defaults\n-----------------\n::\n\n  from jsonConfig import *\n\n  cfg = Config()\n  cfg.add_setting( 'Category 1', 'option1', 'Value1', alias = 'Option #1', options = ['Value1', 'Value2'], type = CT_COMBO, about = 'An example option.' )\n  cfg.add_setting( 'Category 1', 'option2', True, alias = 'Option #2', type = CT_CHECKBOX )\n  cfg.add_setting( 'Category 2', 'option1', 'value', type = CT_LINEEDIT)\n  \n\nAccessing values\n----------------\n::\n \n  >>> cfg\n  {'Category 2': {'option1': 'value'}, 'Category 1': {'option2': True, 'option1': 'Value1'}}\n  \n  >>> cfg['Category 1']['option1']\n  'Value1'\n  \nLoading config file\n-------------------\n\nconfig.json\n::\n\n  {\n    \"Category 1\": {\n      \"option1\": {\n        \"value\": \"Value2\"\n      }\n    }\n  }\n  \n::\n\n  cfg.set_user_file(\"config.json\")\n  >>> cfg\n  {'Category 2': {'option1': 'value'}, 'Category 1': {'option2': True, 'option1': 'Value2'}}\n  \nGUI Editor\n----------\n::\n\n  from PySide.QtGui import *\n  from jsonConfig import ConfigEditor\n\n  app = QApplication([])\n  editor = ConfigEditor(app, cfg, 'Demo Config Editor')\n  editor.setup()\n  app.exec_()\n  \n.. image:: http://ompldr.org/vZnRscg", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RyanHope/jsonConfig", "keywords": null, "license": "GPL-3", "maintainer": null, "maintainer_email": null, "name": "jsonConfig", "package_url": "https://pypi.org/project/jsonConfig/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jsonConfig/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/RyanHope/jsonConfig"}, "release_url": "https://pypi.org/project/jsonConfig/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Sparse JSON based config files with GUI editor.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>jsonConfig</tt> is a Python package that provides sparse JSON based config files with GUI editor.\nThe config files are referred to as being sparse because only those settings which are different than\nthe default values are stored in the config files. Default config options are defined programmatically\nwhich allows defaults to be updated with out overwriting a users options.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"creating-defaults\">\n<h3>Creating defaults</h3>\n<pre>from jsonConfig import *\n\ncfg = Config()\ncfg.add_setting( 'Category 1', 'option1', 'Value1', alias = 'Option #1', options = ['Value1', 'Value2'], type = CT_COMBO, about = 'An example option.' )\ncfg.add_setting( 'Category 1', 'option2', True, alias = 'Option #2', type = CT_CHECKBOX )\ncfg.add_setting( 'Category 2', 'option1', 'value', type = CT_LINEEDIT)\n</pre>\n</div>\n<div id=\"accessing-values\">\n<h3>Accessing values</h3>\n<pre>&gt;&gt;&gt; cfg\n{'Category 2': {'option1': 'value'}, 'Category 1': {'option2': True, 'option1': 'Value1'}}\n\n&gt;&gt;&gt; cfg['Category 1']['option1']\n'Value1'\n</pre>\n</div>\n<div id=\"loading-config-file\">\n<h3>Loading config file</h3>\n<p>config.json</p>\n<pre>{\n  \"Category 1\": {\n    \"option1\": {\n      \"value\": \"Value2\"\n    }\n  }\n}\n</pre>\n<pre>cfg.set_user_file(\"config.json\")\n&gt;&gt;&gt; cfg\n{'Category 2': {'option1': 'value'}, 'Category 1': {'option2': True, 'option1': 'Value2'}}\n</pre>\n</div>\n<div id=\"gui-editor\">\n<h3>GUI Editor</h3>\n<pre>from PySide.QtGui import *\nfrom jsonConfig import ConfigEditor\n\napp = QApplication([])\neditor = ConfigEditor(app, cfg, 'Demo Config Editor')\neditor.setup()\napp.exec_()\n</pre>\n<img alt=\"http://ompldr.org/vZnRscg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/624e98cccfbb98e174b831515853c65140436cec/687474703a2f2f6f6d706c64722e6f72672f765a6e52736367\">\n</div>\n</div>\n\n          </div>"}, "last_serial": 793805, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dc496acbd8bc78497fc394f3f9658612", "sha256": "204bdcb87e1d143e6d96acc495043af22b8bba6c8767d67aadc664849bd71edb"}, "downloads": -1, "filename": "jsonConfig-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dc496acbd8bc78497fc394f3f9658612", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15832, "upload_time": "2012-10-10T05:21:15", "upload_time_iso_8601": "2012-10-10T05:21:15.352574Z", "url": "https://files.pythonhosted.org/packages/b7/7d/be9b8e5ab99249792b1a4ea7cc1c7b193fe4b8a5851eb75492cc6d59f835/jsonConfig-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8abf708e892866dee29ce75581f68a2e", "sha256": "7144397811c3dcd8c5ea349ce4239e86d4b63919b49da6f4cf8854b5066635a9"}, "downloads": -1, "filename": "jsonConfig-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8abf708e892866dee29ce75581f68a2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15793, "upload_time": "2012-10-11T03:21:34", "upload_time_iso_8601": "2012-10-11T03:21:34.973769Z", "url": "https://files.pythonhosted.org/packages/4d/50/0c9d1f531d076b431166c0bd81b03f83d6b144338728e997767099c6ec08/jsonConfig-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "88f7c092b7dca99344ac289189ef3f07", "sha256": "fb9eb0d4df4f954c5efbc99c8a0c2b5ed0c511f740886a8d7a736463754ce715"}, "downloads": -1, "filename": "jsonConfig-0.1.2.tar.gz", "has_sig": false, "md5_digest": "88f7c092b7dca99344ac289189ef3f07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15778, "upload_time": "2012-10-12T21:50:14", "upload_time_iso_8601": "2012-10-12T21:50:14.085623Z", "url": "https://files.pythonhosted.org/packages/da/d5/f915a696f68edfead69e0fc9f7ca0f6ebe41189cf60be80ca39732c0fd33/jsonConfig-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88f7c092b7dca99344ac289189ef3f07", "sha256": "fb9eb0d4df4f954c5efbc99c8a0c2b5ed0c511f740886a8d7a736463754ce715"}, "downloads": -1, "filename": "jsonConfig-0.1.2.tar.gz", "has_sig": false, "md5_digest": "88f7c092b7dca99344ac289189ef3f07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15778, "upload_time": "2012-10-12T21:50:14", "upload_time_iso_8601": "2012-10-12T21:50:14.085623Z", "url": "https://files.pythonhosted.org/packages/da/d5/f915a696f68edfead69e0fc9f7ca0f6ebe41189cf60be80ca39732c0fd33/jsonConfig-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:51 2020"}