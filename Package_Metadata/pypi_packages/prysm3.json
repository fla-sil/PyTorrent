{"info": {"author": "Sylvia Dee, Amir Allam, and Feng Zhu", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "=======\nPRYSM\n=====\nopen-source tools for PRoxY System Modeling, v1.0: oxygen-isotope systems\n\nIntroduction\n---------------------------\nThe paper, published in JAMES: http://onlinelibrary.wiley.com/doi/10.1002/2015MS000447/full\n\nProxy system modeling can be used in paleoclimatology to improve the interpretation of \npaleoclimate data. Existing forward models for climate proxies are somewhat scattered in \nthe literature, making their integration difficult. Further, each model has been coded \nseparately, according to disparate conventions. Here, we present a comprehensive, consistently \nformatted package of forward models for water-isotope based climate proxies (ice cores, corals, \ntree ring cellulose, and speleothem calcite) [PRYSM]. This suite of Python-scripted models requires\na standard set of climate inputs and can be used to simulate the proxy variable of interest by proxy class. \nBy making this forward modeling toolbox publicly available, PRYSM provides an accessible platform that maximizes\nthe utility of proxy data and facilitates proxy-climate (simulated or historical) comparisons. Many of these codes \nhave been employed in past studies; we review modeling approaches for each proxy class, and compare \nresults when forced with an isotope-enabled climate simulation. Applications of multi-proxy forward \nmodeling including parameter estimation, the effects of physical processes (such as karst transit times \nor firn diffusion in ice cores) on the simulated climate signal, as well as explicit modeling of \ntime uncertainties are used to demonstrate the utility of PRYSM for a broad array of climate studies. \n\n![Icecore Proxy System Model](examples/images/PSM_icecore_ex.png)\n\nDependencies\n---------------------------\npython 2.7 (https://www.python.org/download/releases/2.7/)\n\nnumpy (http://www.numpy.org/)  \nscipy (http://www.scipy.org/)  \nrpy2 (http://rpy.sourceforge.net/) (For BCHRON)  \n\nOptional:\n  matplotlib (http://matplotlib.org/) (For plotting tools)\n  \n![Age Uncertainties](examples/images/age_uncertainties.png)\n\nInstallation\n---------------------------\nMake sure the dependencies are installed, then download and unzip this package, and then:  \n  python setup.py install\n\nAlternately, you can use pip:  \n  pip install git+https://github.com/sylvia-dee/PRYSM.git\n\nEither method will add a module named 'psm' to your default lib/python2.7/site-packages/ directory.\n\nIf you lack root access:  \n python setup.py install --user\n \nFor git users:\n git clone https://github.com/sylvia-dee/PRYSM.git\n python setup.py install\n\nTesting\n---------------------------\nFrom the examples/ directory, run each of the example driver scripts and each of the plotting examples. For just the icecore example:  \npython icecore_driver.py  \n\nThis will create numpy array output files in examples/results/:  \nice_Xn.npy\nice_time_d.npy\nice_depth.npy\nice_diffused.npy\n\nTo plot (requires matplotlib):  \npython plot_icecore_example.py\n\nThis will reproduce paper figure 3.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fzhu2e/PRYSM", "keywords": "prysm3", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "prysm3", "package_url": "https://pypi.org/project/prysm3/", "platform": "", "project_url": "https://pypi.org/project/prysm3/", "project_urls": {"Homepage": "https://github.com/fzhu2e/PRYSM"}, "release_url": "https://pypi.org/project/prysm3/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "open-source tools for PRoxY System Modeling", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>=======\nPRYSM</h1>\n<p>open-source tools for PRoxY System Modeling, v1.0: oxygen-isotope systems</p>\n<h2>Introduction</h2>\n<p>The paper, published in JAMES: <a href=\"http://onlinelibrary.wiley.com/doi/10.1002/2015MS000447/full\" rel=\"nofollow\">http://onlinelibrary.wiley.com/doi/10.1002/2015MS000447/full</a></p>\n<p>Proxy system modeling can be used in paleoclimatology to improve the interpretation of\npaleoclimate data. Existing forward models for climate proxies are somewhat scattered in\nthe literature, making their integration difficult. Further, each model has been coded\nseparately, according to disparate conventions. Here, we present a comprehensive, consistently\nformatted package of forward models for water-isotope based climate proxies (ice cores, corals,\ntree ring cellulose, and speleothem calcite) [PRYSM]. This suite of Python-scripted models requires\na standard set of climate inputs and can be used to simulate the proxy variable of interest by proxy class.\nBy making this forward modeling toolbox publicly available, PRYSM provides an accessible platform that maximizes\nthe utility of proxy data and facilitates proxy-climate (simulated or historical) comparisons. Many of these codes\nhave been employed in past studies; we review modeling approaches for each proxy class, and compare\nresults when forced with an isotope-enabled climate simulation. Applications of multi-proxy forward\nmodeling including parameter estimation, the effects of physical processes (such as karst transit times\nor firn diffusion in ice cores) on the simulated climate signal, as well as explicit modeling of\ntime uncertainties are used to demonstrate the utility of PRYSM for a broad array of climate studies.</p>\n<p><img alt=\"Icecore Proxy System Model\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a44ce9aba7e060cc3619dfcf3e9eca0f5ca14d4f/6578616d706c65732f696d616765732f50534d5f696365636f72655f65782e706e67\"></p>\n<h2>Dependencies</h2>\n<p>python 2.7 (<a href=\"https://www.python.org/download/releases/2.7/\" rel=\"nofollow\">https://www.python.org/download/releases/2.7/</a>)</p>\n<p>numpy (<a href=\"http://www.numpy.org/\" rel=\"nofollow\">http://www.numpy.org/</a>)<br>\nscipy (<a href=\"http://www.scipy.org/\" rel=\"nofollow\">http://www.scipy.org/</a>)<br>\nrpy2 (<a href=\"http://rpy.sourceforge.net/\" rel=\"nofollow\">http://rpy.sourceforge.net/</a>) (For BCHRON)</p>\n<p>Optional:\nmatplotlib (<a href=\"http://matplotlib.org/\" rel=\"nofollow\">http://matplotlib.org/</a>) (For plotting tools)</p>\n<p><img alt=\"Age Uncertainties\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08a5db0bd6ca9b97b6b666e7cb2229b409b1ffc6/6578616d706c65732f696d616765732f6167655f756e6365727461696e746965732e706e67\"></p>\n<h2>Installation</h2>\n<p>Make sure the dependencies are installed, then download and unzip this package, and then:<br>\npython setup.py install</p>\n<p>Alternately, you can use pip:<br>\npip install git+<a href=\"https://github.com/sylvia-dee/PRYSM.git\" rel=\"nofollow\">https://github.com/sylvia-dee/PRYSM.git</a></p>\n<p>Either method will add a module named 'psm' to your default lib/python2.7/site-packages/ directory.</p>\n<p>If you lack root access:<br>\npython setup.py install --user</p>\n<p>For git users:\ngit clone <a href=\"https://github.com/sylvia-dee/PRYSM.git\" rel=\"nofollow\">https://github.com/sylvia-dee/PRYSM.git</a>\npython setup.py install</p>\n<h2>Testing</h2>\n<p>From the examples/ directory, run each of the example driver scripts and each of the plotting examples. For just the icecore example:<br>\npython icecore_driver.py</p>\n<p>This will create numpy array output files in examples/results/:<br>\nice_Xn.npy\nice_time_d.npy\nice_depth.npy\nice_diffused.npy</p>\n<p>To plot (requires matplotlib):<br>\npython plot_icecore_example.py</p>\n<p>This will reproduce paper figure 3.</p>\n\n          </div>"}, "last_serial": 4603739, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "067c0ba1d44e2619d0b3f880055fea78", "sha256": "ffe278a21a8918d100e3ecca951f87dcf51c4ee48554656e53da45aa27e8656f"}, "downloads": -1, "filename": "prysm3-0.2.tar.gz", "has_sig": false, "md5_digest": "067c0ba1d44e2619d0b3f880055fea78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29086, "upload_time": "2018-12-15T21:49:37", "upload_time_iso_8601": "2018-12-15T21:49:37.610520Z", "url": "https://files.pythonhosted.org/packages/6c/86/6b0a9c6a0f9d601c8cde911ed7f00ea11d916fba7df79f2c01337f272ed8/prysm3-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ffc2365483c25fb41c5cbffeea2594b1", "sha256": "9e0ec8cdc47b16d9f34b4e6bb8176cf1b69276cafd24b91ee19c0478dd6974a2"}, "downloads": -1, "filename": "prysm3-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ffc2365483c25fb41c5cbffeea2594b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29102, "upload_time": "2018-12-15T21:53:34", "upload_time_iso_8601": "2018-12-15T21:53:34.494716Z", "url": "https://files.pythonhosted.org/packages/eb/fe/f6ad02a646f2fcfed226498964edc19939d351a0d5dcd0a29e3a14544747/prysm3-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ffc2365483c25fb41c5cbffeea2594b1", "sha256": "9e0ec8cdc47b16d9f34b4e6bb8176cf1b69276cafd24b91ee19c0478dd6974a2"}, "downloads": -1, "filename": "prysm3-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ffc2365483c25fb41c5cbffeea2594b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29102, "upload_time": "2018-12-15T21:53:34", "upload_time_iso_8601": "2018-12-15T21:53:34.494716Z", "url": "https://files.pythonhosted.org/packages/eb/fe/f6ad02a646f2fcfed226498964edc19939d351a0d5dcd0a29e3a14544747/prysm3-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:11 2020"}