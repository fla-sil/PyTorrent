{"info": {"author": "Tommy Carpenter, E. Scott Daniels", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Communications"], "description": ".. This work is licensed under a Creative Commons Attribution 4.0 International License.\n.. SPDX-License-Identifier: CC-BY-4.0\n.. Copyright (C) 2020 AT&T Intellectual Property\n\nFramework Overview\n==================\n\nThis package is a framework for writing Xapps in python. The framework\nreduces the amount of code required in an Xapp by providing common\nfeatures needed by all Python-based Xapps including communication with\nthe RIC message router (RMR) and the Shared Data Layer (SDL).\n\nThe framework was designed to suport many types of Xapps, including\napplications that are purely reactive to RMR messages, and\napplications that initiate actions according to other criteria.\n\nReactive Xapps\n--------------\n\nA reactive Xapp acts on messages that are delivered (pushed) via RMR.\nThe Xapp only takes action upon receipt of an RMR message. The Xapp\nnever takes action at another time.\n\nThis type of application is constructed by creating callback functions\nand registering them with the framework by message type.  When an RMR\nmessage arrives, the appropriate callback is invoked.  An Xapp may\ndefine and register a separate callback for each expected message\ntype.  Every Xapp must define a default callback function, which is\ninvoked when a message arrives for which no type-specific callback was\nregistered.  An analogy of this is AWS Lambda: \"execute this code\nevery time an event comes in\" (the code to execute can depend on the\ntype of event).\n\nGeneral Xapps\n-------------\n\nA general Xapp acts according to its own criteria, which may include\nreceipt of RMR messages.\n\nThis type of application is constructed by creating a function that\ngets invoked by the framework.  Typically that function contains a\n`while (something)` event loop.  If the function returns, the Xapp\nstops.  In this type of Xapp, the Xapp must fetch its own data, either\nfrom RMR, SDL or other source.  The framework does less work for a\ngeneral application compared to a reactive application.  The framework\nsets up an RMR thread and an SDL connection, then invokes the\nclient-provided function.\n\nThreading in the Framework\n--------------------------\n\nRMR interactions are processed in a thread started by the framework.\nThis implementation detail is documented here for transparency, but\nmost users will not have to worry about this.\n\nIn both types of Xapp, the framework launches a separate thread whose\nonly job is to read from RMR and deposit all messages (and their\nsummaries) into a thread-safe queue.  When the client Xapp reads from\nRMR using the framework (this read is done by the framework itself in\nthe RMR Xapp, but by the client in a general Xapp), the read is done\nfrom the framework-managed queue.  The framework is implemented this\nway so that a long-running client function (e.g., consume) will not\nblock RMR reads.  This is important because RMR is *not* a persistent\nmessage bus, if an RMR client does not read fast enough, messages can\nbe lost.  So in this framework the client code is not in the same\nthread as the RMR reads, to ensure that long-running client code will\nnot cause message loss.\n\nIn the case of RMR Xapps, there are currently 3 potential threads; the\nthread that reads from RMR directly, and the user can optionally have\nthe RMR queue read run in a thread, returning execution back to the\nuser thread.  The default is only two threads however, where `.run`\ndoes not return back execution and the user code is finished at that\npoint.\n\nHealthchecks\n------------\n\nThe framework provides a default RMR healthcheck probe handler for\nreactive Xapps.  When an RMR healthcheck message arrives, this handler\nchecks that the RMR thread is healthy (of course the Xapp cannot even\nreply if the thread is not healthy!), and that the SDL connection is\nhealthy.  The handler responds accordingly via RMA.  The Xapp can\noverride this probe handler by registering a new callback for the\nappropriate message type.\n\nThe framework provides no healthcheck handler for general Xapps. Those\napplications must handle healthcheck probe messages appropriately when\nthey read their RMR mailboxes.\n\nThere is no http service in the framework, so there is no support for\nHTTP-based healthcheck probes, such as what a deployment manager like\nKubernetes may use.\n\nExamples\n--------\n\nTwo sample Xapps using this framework are provided in the `examples`\ndirectory of the git repository.  The first, `ping`, is a general Xapp\nthat defines a main function that reads its RMR mailbox in addition to\nother work.  The second, `pong`, is a reactive Xapp that only takes\naction when a message is received.\n\nTo run a demonstration, build the Docker images for both examples\nusing the supplied Dockerfiles.  Then start the Pong container (the\nlistener) followed by the Ping container (the sender).  The Ping\napplication sends a message, the pong application receives the message\nand use RMR's return-to-sender feature to reply.  Ping then reads its\nown mailbox and demonstrates other functionality.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gerrit.o-ran-sc.org/r/admin/repos/ric-plt/xapp-frame-py", "keywords": "RIC xapp", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "ricxappframe", "package_url": "https://pypi.org/project/ricxappframe/", "platform": "", "project_url": "https://pypi.org/project/ricxappframe/", "project_urls": {"Homepage": "https://gerrit.o-ran-sc.org/r/admin/repos/ric-plt/xapp-frame-py"}, "release_url": "https://pypi.org/project/ricxappframe/1.1.1/", "requires_dist": ["msgpack", "mdclogpy", "ricsdl (<3.0.0,>=2.0.3)"], "requires_python": ">=3.7", "summary": "Xapp and RMR framework for python", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package is a framework for writing Xapps in python. The framework\nreduces the amount of code required in an Xapp by providing common\nfeatures needed by all Python-based Xapps including communication with\nthe RIC message router (RMR) and the Shared Data Layer (SDL).</p>\n<p>The framework was designed to suport many types of Xapps, including\napplications that are purely reactive to RMR messages, and\napplications that initiate actions according to other criteria.</p>\n<div id=\"reactive-xapps\">\n<h2>Reactive Xapps</h2>\n<p>A reactive Xapp acts on messages that are delivered (pushed) via RMR.\nThe Xapp only takes action upon receipt of an RMR message. The Xapp\nnever takes action at another time.</p>\n<p>This type of application is constructed by creating callback functions\nand registering them with the framework by message type.  When an RMR\nmessage arrives, the appropriate callback is invoked.  An Xapp may\ndefine and register a separate callback for each expected message\ntype.  Every Xapp must define a default callback function, which is\ninvoked when a message arrives for which no type-specific callback was\nregistered.  An analogy of this is AWS Lambda: \u201cexecute this code\nevery time an event comes in\u201d (the code to execute can depend on the\ntype of event).</p>\n</div>\n<div id=\"general-xapps\">\n<h2>General Xapps</h2>\n<p>A general Xapp acts according to its own criteria, which may include\nreceipt of RMR messages.</p>\n<p>This type of application is constructed by creating a function that\ngets invoked by the framework.  Typically that function contains a\n<cite>while (something)</cite> event loop.  If the function returns, the Xapp\nstops.  In this type of Xapp, the Xapp must fetch its own data, either\nfrom RMR, SDL or other source.  The framework does less work for a\ngeneral application compared to a reactive application.  The framework\nsets up an RMR thread and an SDL connection, then invokes the\nclient-provided function.</p>\n</div>\n<div id=\"threading-in-the-framework\">\n<h2>Threading in the Framework</h2>\n<p>RMR interactions are processed in a thread started by the framework.\nThis implementation detail is documented here for transparency, but\nmost users will not have to worry about this.</p>\n<p>In both types of Xapp, the framework launches a separate thread whose\nonly job is to read from RMR and deposit all messages (and their\nsummaries) into a thread-safe queue.  When the client Xapp reads from\nRMR using the framework (this read is done by the framework itself in\nthe RMR Xapp, but by the client in a general Xapp), the read is done\nfrom the framework-managed queue.  The framework is implemented this\nway so that a long-running client function (e.g., consume) will not\nblock RMR reads.  This is important because RMR is <em>not</em> a persistent\nmessage bus, if an RMR client does not read fast enough, messages can\nbe lost.  So in this framework the client code is not in the same\nthread as the RMR reads, to ensure that long-running client code will\nnot cause message loss.</p>\n<p>In the case of RMR Xapps, there are currently 3 potential threads; the\nthread that reads from RMR directly, and the user can optionally have\nthe RMR queue read run in a thread, returning execution back to the\nuser thread.  The default is only two threads however, where <cite>.run</cite>\ndoes not return back execution and the user code is finished at that\npoint.</p>\n</div>\n<div id=\"healthchecks\">\n<h2>Healthchecks</h2>\n<p>The framework provides a default RMR healthcheck probe handler for\nreactive Xapps.  When an RMR healthcheck message arrives, this handler\nchecks that the RMR thread is healthy (of course the Xapp cannot even\nreply if the thread is not healthy!), and that the SDL connection is\nhealthy.  The handler responds accordingly via RMA.  The Xapp can\noverride this probe handler by registering a new callback for the\nappropriate message type.</p>\n<p>The framework provides no healthcheck handler for general Xapps. Those\napplications must handle healthcheck probe messages appropriately when\nthey read their RMR mailboxes.</p>\n<p>There is no http service in the framework, so there is no support for\nHTTP-based healthcheck probes, such as what a deployment manager like\nKubernetes may use.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Two sample Xapps using this framework are provided in the <cite>examples</cite>\ndirectory of the git repository.  The first, <cite>ping</cite>, is a general Xapp\nthat defines a main function that reads its RMR mailbox in addition to\nother work.  The second, <cite>pong</cite>, is a reactive Xapp that only takes\naction when a message is received.</p>\n<p>To run a demonstration, build the Docker images for both examples\nusing the supplied Dockerfiles.  Then start the Pong container (the\nlistener) followed by the Ping container (the sender).  The Ping\napplication sends a message, the pong application receives the message\nand use RMR\u2019s return-to-sender feature to reply.  Ping then reads its\nown mailbox and demonstrates other functionality.</p>\n</div>\n\n          </div>"}, "last_serial": 7192084, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "97d567a516440c66ab5dcbe27e17faff", "sha256": "eb161f2bf53227c8dc3e91edc6763f9efd51a0a6f2322d4e751bf6dc58fa0433"}, "downloads": -1, "filename": "ricxappframe-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "97d567a516440c66ab5dcbe27e17faff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12070, "upload_time": "2020-03-04T15:26:48", "upload_time_iso_8601": "2020-03-04T15:26:48.658187Z", "url": "https://files.pythonhosted.org/packages/ac/88/5611483873bb5f7cba8f6c68d736f45aef78bfb8d2a3d953737717c56a20/ricxappframe-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d282fbb7fee1961a43c9094d824d671e", "sha256": "92fd5bddd66e76f248fed651f5a7e06e3a76a51b7dd2b80858c7018487580cb7"}, "downloads": -1, "filename": "ricxappframe-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d282fbb7fee1961a43c9094d824d671e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8521, "upload_time": "2020-03-04T15:26:50", "upload_time_iso_8601": "2020-03-04T15:26:50.712496Z", "url": "https://files.pythonhosted.org/packages/8a/55/501c2eb391d49edba643635a74d05fe2694a60547842803aa42f8fbcb1de/ricxappframe-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2b1f2a6af6c81c138496e6b92b808496", "sha256": "77d34314dde029d3329446ca2191c4f57470d74cf73ba7a0f81cfe4b8f79718c"}, "downloads": -1, "filename": "ricxappframe-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1f2a6af6c81c138496e6b92b808496", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12408, "upload_time": "2020-03-11T13:45:09", "upload_time_iso_8601": "2020-03-11T13:45:09.743165Z", "url": "https://files.pythonhosted.org/packages/9e/3c/dd0e9b72908cb9bfebe3422c237ca75abbc9f354efc8d288be1247a6152a/ricxappframe-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0f69a9caa6f07c144ef816ca5342b38", "sha256": "b545523862a22af6fbfef851207bad523f2ba3d03b2844973a5806f913a3d7f6"}, "downloads": -1, "filename": "ricxappframe-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e0f69a9caa6f07c144ef816ca5342b38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8917, "upload_time": "2020-03-11T13:45:10", "upload_time_iso_8601": "2020-03-11T13:45:10.693299Z", "url": "https://files.pythonhosted.org/packages/44/27/d4e3215e8e223de2a8bb82fa4b26ec7ec41ced4dd3bf0a8b19bddb51c077/ricxappframe-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "aa364e902533f41991fc950f03af5814", "sha256": "9ee010bb3d91ff0c0813043292f3305d45f1b6f3a69a9559708d8a6a10f4389a"}, "downloads": -1, "filename": "ricxappframe-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aa364e902533f41991fc950f03af5814", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12535, "upload_time": "2020-03-16T12:45:30", "upload_time_iso_8601": "2020-03-16T12:45:30.253071Z", "url": "https://files.pythonhosted.org/packages/c4/ec/f3c5483939091b4ac18441eaa5f15431a2812b1046564211205393d4911f/ricxappframe-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e41b5f5dcccbf82d2233b6c3346b9bd2", "sha256": "99e91bc84cacf302ad7504124d75fbe8679577452e195addc7c0249e7fe53827"}, "downloads": -1, "filename": "ricxappframe-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e41b5f5dcccbf82d2233b6c3346b9bd2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9035, "upload_time": "2020-03-16T12:45:31", "upload_time_iso_8601": "2020-03-16T12:45:31.212589Z", "url": "https://files.pythonhosted.org/packages/42/2b/ddc57e4eb4c015546b46360258c5856f8584fbaf1f448c447bc4b6718a9a/ricxappframe-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "20fedb19759a7eaf58b38bb47f648e89", "sha256": "d7b1af62678fefdaf54ca219de481df14cbbd9d73030df285ce0125dbe41f1ac"}, "downloads": -1, "filename": "ricxappframe-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "20fedb19759a7eaf58b38bb47f648e89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12554, "upload_time": "2020-03-23T12:24:15", "upload_time_iso_8601": "2020-03-23T12:24:15.188596Z", "url": "https://files.pythonhosted.org/packages/ab/73/97365a0073d4d318ee07f48916c9bb1f09bdcfae12994afd94eba4130eb3/ricxappframe-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5400a29279cc8c8b81499599d526eab", "sha256": "583487b3d9156e54b2cd790e0823e1cbabd7d288251db80e1e62f4f7d7ace616"}, "downloads": -1, "filename": "ricxappframe-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b5400a29279cc8c8b81499599d526eab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9086, "upload_time": "2020-03-23T12:24:16", "upload_time_iso_8601": "2020-03-23T12:24:16.291229Z", "url": "https://files.pythonhosted.org/packages/22/58/704a7be6dd87d5eff5a9543055d6197e433d419d1699aafb68ad14504f55/ricxappframe-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "36f74081fa1e012682f93a34d1bf9ce7", "sha256": "1dc08232bbed21e78ddf55942ff881af0a0f1f160420d95f1cfc0c0abf57312a"}, "downloads": -1, "filename": "ricxappframe-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36f74081fa1e012682f93a34d1bf9ce7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12554, "upload_time": "2020-03-25T18:31:47", "upload_time_iso_8601": "2020-03-25T18:31:47.951664Z", "url": "https://files.pythonhosted.org/packages/98/50/e625d766d04829c6c09fa87c241542c6307d08f94c08211091cb42ce402f/ricxappframe-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "893f5d4cf2360c89a207773ab9c9a6a2", "sha256": "e12ce40165058ef62a492716cad5e02521fbea8e1331003d11081bd9ebfc21e1"}, "downloads": -1, "filename": "ricxappframe-0.6.0.tar.gz", "has_sig": false, "md5_digest": "893f5d4cf2360c89a207773ab9c9a6a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9091, "upload_time": "2020-03-25T18:31:49", "upload_time_iso_8601": "2020-03-25T18:31:49.154785Z", "url": "https://files.pythonhosted.org/packages/5e/c5/09d926f5c60058010940f2a4097e5880bc365aed83f3a356ede7fdc759b5/ricxappframe-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "f57cb6263d2b76d1afc06b3dc0ecd0e4", "sha256": "c9745426120b4117ab04b2b1f211f072fc3c3a8f73bca4fd1e3c6fb51312822d"}, "downloads": -1, "filename": "ricxappframe-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f57cb6263d2b76d1afc06b3dc0ecd0e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12973, "upload_time": "2020-04-03T14:34:12", "upload_time_iso_8601": "2020-04-03T14:34:12.466411Z", "url": "https://files.pythonhosted.org/packages/b3/f2/2f71b3b4b85bdceafec6fcebbbc6cc15391aada61dc2267d565aaf8056da/ricxappframe-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d3cc734e188bcb7e528019ab8fd9d84", "sha256": "127ac8958a698d81a1189443acfd66d5508f6ce876b547030a1041fff29275ed"}, "downloads": -1, "filename": "ricxappframe-0.7.0.tar.gz", "has_sig": false, "md5_digest": "6d3cc734e188bcb7e528019ab8fd9d84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 9476, "upload_time": "2020-04-03T14:34:13", "upload_time_iso_8601": "2020-04-03T14:34:13.323572Z", "url": "https://files.pythonhosted.org/packages/b8/55/da494d10e7998b00560c7f5c093ced970e91bbb9bf4748e810169d97d895/ricxappframe-0.7.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a29b9c1ec106ad0115f40769ff0f45f0", "sha256": "fe67822e2347c9a88c1824d61b432a77dad5a7c6ee030f3f2ee9f28cd0bafe91"}, "downloads": -1, "filename": "ricxappframe-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a29b9c1ec106ad0115f40769ff0f45f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 23278, "upload_time": "2020-04-07T11:59:29", "upload_time_iso_8601": "2020-04-07T11:59:29.894734Z", "url": "https://files.pythonhosted.org/packages/27/71/d19482389d8cb4317ab2fb2dea12c0ca10f9eced1f974162b6c523143582/ricxappframe-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62c8ba902064a0254d343a33f749e94d", "sha256": "5a76e3c64b777b8a8ae45a98eba36d29df127ecba3a9b1c040bb116de177e3c6"}, "downloads": -1, "filename": "ricxappframe-1.0.0.tar.gz", "has_sig": false, "md5_digest": "62c8ba902064a0254d343a33f749e94d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16558, "upload_time": "2020-04-07T11:59:31", "upload_time_iso_8601": "2020-04-07T11:59:31.154374Z", "url": "https://files.pythonhosted.org/packages/ce/76/7bec5f323f54761731c6b738e18bd76ed16afe75daac65bac2e6a61a0533/ricxappframe-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a3a86095c2a8c481bce22fa0995170f9", "sha256": "a825fb355753e6eb913992ee261a85bb24acf91ae9e828aabfbd81238adeeadb"}, "downloads": -1, "filename": "ricxappframe-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a3a86095c2a8c481bce22fa0995170f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 25913, "upload_time": "2020-04-14T14:29:00", "upload_time_iso_8601": "2020-04-14T14:29:00.585933Z", "url": "https://files.pythonhosted.org/packages/ee/6a/44891eeb0f0898b7c45d101852ce2c04c2650043465e90c71357eb4a89f4/ricxappframe-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d89acab5ee90913693bfcc1d155b3f1", "sha256": "8c165b07b7f07666dde4c8f1c8e93d8ba6695ae20e058ab7cb738030ccecdf3a"}, "downloads": -1, "filename": "ricxappframe-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6d89acab5ee90913693bfcc1d155b3f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18140, "upload_time": "2020-04-14T14:29:01", "upload_time_iso_8601": "2020-04-14T14:29:01.821361Z", "url": "https://files.pythonhosted.org/packages/6e/32/afdac22587dd8655df6fd0c0f76e5b009cc70dc6710d014909c7a5cf55a3/ricxappframe-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6ed90ce67722a7cf45d1fd7e0f0a7ac5", "sha256": "64c6a3f4d8895f9ac157ecd20cd6146f31393370ae9d1f18911a695344b5b5b1"}, "downloads": -1, "filename": "ricxappframe-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6ed90ce67722a7cf45d1fd7e0f0a7ac5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 25912, "upload_time": "2020-05-01T13:05:59", "upload_time_iso_8601": "2020-05-01T13:05:59.215506Z", "url": "https://files.pythonhosted.org/packages/13/d4/13d3b738f82135c1713338dd268c01be5b87feee17d8996e9fd01d929c28/ricxappframe-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79fd8152b6ceb5a083cda49dd842511a", "sha256": "6d3d6078ef86e85e675c61b5fc4d5f9a653049a4c5279a69e0d8e5c6b608fcba"}, "downloads": -1, "filename": "ricxappframe-1.0.2.tar.gz", "has_sig": false, "md5_digest": "79fd8152b6ceb5a083cda49dd842511a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18152, "upload_time": "2020-05-01T13:06:00", "upload_time_iso_8601": "2020-05-01T13:06:00.358391Z", "url": "https://files.pythonhosted.org/packages/43/5d/7431884cdf8e60bcea5f6812ce811f54d7f72e4255cb29bb64ead06c78e1/ricxappframe-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "16a899d0e8292f8855d21072617fd3f8", "sha256": "9a17bce1799bdd45281eae195bbc7c13309d529b8bbdacda8c378da98001a2a7"}, "downloads": -1, "filename": "ricxappframe-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "16a899d0e8292f8855d21072617fd3f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26640, "upload_time": "2020-05-07T12:13:16", "upload_time_iso_8601": "2020-05-07T12:13:16.840169Z", "url": "https://files.pythonhosted.org/packages/b2/7e/ae3d6350f08aec69024cf082a2cf56a42d5bac8fee726c1801837d99c7f3/ricxappframe-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9d327e565c202e50f81a66cd4397c64", "sha256": "726aef3cfb9ac1d09e931443663943d832a876c46cf85dc671c9461d94662fb9"}, "downloads": -1, "filename": "ricxappframe-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c9d327e565c202e50f81a66cd4397c64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 18702, "upload_time": "2020-05-07T12:13:17", "upload_time_iso_8601": "2020-05-07T12:13:17.782119Z", "url": "https://files.pythonhosted.org/packages/be/f7/532e13e9023bf5ba5fa17255e24b982e18f0e53ccfc50ea8d6687263f796/ricxappframe-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "fb5e2bc5e443dec26be3c877d6b72fd3", "sha256": "9b463c439069074d6824636cc4873826e8144ea976af4034a9ee0efd22da4007"}, "downloads": -1, "filename": "ricxappframe-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb5e2bc5e443dec26be3c877d6b72fd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 27113, "upload_time": "2020-05-07T21:55:10", "upload_time_iso_8601": "2020-05-07T21:55:10.493190Z", "url": "https://files.pythonhosted.org/packages/8e/e5/819cd3d2a5d2d906f2664a08bccaf7e0dc2fbba2584e3214260ef0440c52/ricxappframe-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1a65c4e4fa445e5e145b01f9435095a", "sha256": "15e9db41d79e626b04641adbc3342399c3e33a08a58ef1e6c903b6cc8c433fbe"}, "downloads": -1, "filename": "ricxappframe-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b1a65c4e4fa445e5e145b01f9435095a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 19240, "upload_time": "2020-05-07T21:55:11", "upload_time_iso_8601": "2020-05-07T21:55:11.353101Z", "url": "https://files.pythonhosted.org/packages/60/9d/7ce792f1d3c6dbcad7b5e6edb527253e7ce608ce4974b7dfa5ab8212bad7/ricxappframe-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb5e2bc5e443dec26be3c877d6b72fd3", "sha256": "9b463c439069074d6824636cc4873826e8144ea976af4034a9ee0efd22da4007"}, "downloads": -1, "filename": "ricxappframe-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb5e2bc5e443dec26be3c877d6b72fd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 27113, "upload_time": "2020-05-07T21:55:10", "upload_time_iso_8601": "2020-05-07T21:55:10.493190Z", "url": "https://files.pythonhosted.org/packages/8e/e5/819cd3d2a5d2d906f2664a08bccaf7e0dc2fbba2584e3214260ef0440c52/ricxappframe-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1a65c4e4fa445e5e145b01f9435095a", "sha256": "15e9db41d79e626b04641adbc3342399c3e33a08a58ef1e6c903b6cc8c433fbe"}, "downloads": -1, "filename": "ricxappframe-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b1a65c4e4fa445e5e145b01f9435095a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 19240, "upload_time": "2020-05-07T21:55:11", "upload_time_iso_8601": "2020-05-07T21:55:11.353101Z", "url": "https://files.pythonhosted.org/packages/60/9d/7ce792f1d3c6dbcad7b5e6edb527253e7ce608ce4974b7dfa5ab8212bad7/ricxappframe-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:44 2020"}