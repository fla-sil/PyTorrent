{"info": {"author": "Openlabs Technologies & Consulting (P) Limited", "author_email": "info@openlabs.co.in", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\"Untested code is broken code\"\n==============================\n\nIt's broken helps you to write unit tests for broken OpenERP modules since\nOpenERP does not have much in testing capabilities. If you find strange\nresemblance to `Tryton <http://tryton.org>`_ test cases, do not be\nconfused, this work is inspired by Tryton testing.\n\nMaster\n------\n\n.. image:: https://travis-ci.org/openlabs/itsbroken.png?branch=master\n\nDevelop\n-------\n\n.. image:: https://travis-ci.org/openlabs/itsbroken.png?branch=develop\n\nLicense tl;dr;\n--------------\n\nIf you intend to publish modules that you use, this program comes with an\nAGPL license.\n\nIf you wish to use this program in a module which you don't intend to make\npublic, you should have met the following conditions:\n\n  * You have tweeted atleast once with the #sorryopenerp tag \n    (Frequent bugs in Open ERP will push you in the right \n    direction)\n  * You have visited the `Tryton website <http://tryton.org>`_ atleast once.\n  * You believe that code without test is broken code (like \n    Hollywood is incomplete without Julia Roberts)\n  * You do not use OpenERP or any modules with the \"OpenERP \n    AGPL + Private Use License\"\n\nThe detailed version of the license can be see in the LICENSE file.\n\nWhy this license mess ?\n~~~~~~~~~~~~~~~~~~~~~~~\n\nWhile we are 100% committed to Open Source (see also our FAQ), we understand \nthat end-users may sometimes require to use private software. To address this\nneed, OpenERP Enterprise comes with a special additional permission, granted\nto each subscriber of OpenERP Enterprise, but exclusively in the context of\nprivate use. We think this is stupid exploitation of work by a greedy\ncompany. \n\nExample usage\n-------------\n\n.. code-block:: python\n\n    import unittest\n\n    from itsbroken.transaction import Transaction\n    from itsbroken.testing import DB_NAME, POOL, USER, CONTEXT, \\\n        install_module, drop_database\n\n\n    class TestItsBroken(unittest.TestCase):\n        \"\"\"\n        Test the itsbroken library by connecting to an instance of\n        OpenERP.\n\n        By defualt OpenERP has the partner module and other core modules\n        installed, so most of the test uses those modules.\n        \"\"\"\n        def setUp(self):\n            install_module('product')\n\n        def test_0010_create(self):\n            \"\"\"\n            Test by creating a new product\n            \"\"\"\n            with Transaction().start(DB_NAME, USER, CONTEXT) as txn:\n                product_obj = POOL.get('product.product')\n\n                values = {\n                    'name': 'Sharoon Thomas'\n                }\n                id = product_obj.create(\n                    txn.cursor, txn.user, values, txn.context\n                )\n                product = product_obj.browse(txn.cursor, txn.user, id)\n                self.assertEqual(product.name, values['name'])\n\n\n    if __name__ == '__main__':\n        unittest.main()\n\n\nMore examples\n-------------\n\nTests of this module itself is a good example of how to use itsbroken for\ntesting. See `tests/test_itsbroken.py <https://github.com/openlabs/itsbroken/blob/develop/tests/test_itsbroken.py>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/openlabs/itsbroken/", "keywords": null, "license": "GNU Affero General Public License v3", "maintainer": null, "maintainer_email": null, "name": "itsbroken", "package_url": "https://pypi.org/project/itsbroken/", "platform": "any", "project_url": "https://pypi.org/project/itsbroken/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/openlabs/itsbroken/"}, "release_url": "https://pypi.org/project/itsbroken/0.2/", "requires_dist": null, "requires_python": null, "summary": "OpenERP Unittesting Toolkit", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>It\u2019s broken helps you to write unit tests for broken OpenERP modules since\nOpenERP does not have much in testing capabilities. If you find strange\nresemblance to <a href=\"http://tryton.org\" rel=\"nofollow\">Tryton</a> test cases, do not be\nconfused, this work is inspired by Tryton testing.</p>\n<div id=\"master\">\n<h2>Master</h2>\n<img alt=\"https://travis-ci.org/openlabs/itsbroken.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0825cdfdd36c614a6412b3928458e1faec8dcba/68747470733a2f2f7472617669732d63692e6f72672f6f70656e6c6162732f69747362726f6b656e2e706e673f6272616e63683d6d6173746572\">\n</div>\n<div id=\"develop\">\n<h2>Develop</h2>\n<img alt=\"https://travis-ci.org/openlabs/itsbroken.png?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58988653446800f249267bc63709168cc443ebbe/68747470733a2f2f7472617669732d63692e6f72672f6f70656e6c6162732f69747362726f6b656e2e706e673f6272616e63683d646576656c6f70\">\n</div>\n<div id=\"license-tl-dr\">\n<h2>License tl;dr;</h2>\n<p>If you intend to publish modules that you use, this program comes with an\nAGPL license.</p>\n<p>If you wish to use this program in a module which you don\u2019t intend to make\npublic, you should have met the following conditions:</p>\n<blockquote>\n<ul>\n<li>You have tweeted atleast once with the #sorryopenerp tag\n(Frequent bugs in Open ERP will push you in the right\ndirection)</li>\n<li>You have visited the <a href=\"http://tryton.org\" rel=\"nofollow\">Tryton website</a> atleast once.</li>\n<li>You believe that code without test is broken code (like\nHollywood is incomplete without Julia Roberts)</li>\n<li>You do not use OpenERP or any modules with the \u201cOpenERP\nAGPL + Private Use License\u201d</li>\n</ul>\n</blockquote>\n<p>The detailed version of the license can be see in the LICENSE file.</p>\n<div id=\"why-this-license-mess\">\n<h3>Why this license mess ?</h3>\n<p>While we are 100% committed to Open Source (see also our FAQ), we understand\nthat end-users may sometimes require to use private software. To address this\nneed, OpenERP Enterprise comes with a special additional permission, granted\nto each subscriber of OpenERP Enterprise, but exclusively in the context of\nprivate use. We think this is stupid exploitation of work by a greedy\ncompany.</p>\n</div>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">unittest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">itsbroken.transaction</span> <span class=\"kn\">import</span> <span class=\"n\">Transaction</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itsbroken.testing</span> <span class=\"kn\">import</span> <span class=\"n\">DB_NAME</span><span class=\"p\">,</span> <span class=\"n\">POOL</span><span class=\"p\">,</span> <span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"n\">CONTEXT</span><span class=\"p\">,</span> \\\n    <span class=\"n\">install_module</span><span class=\"p\">,</span> <span class=\"n\">drop_database</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestItsBroken</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    Test the itsbroken library by connecting to an instance of\n    OpenERP.\n\n    By defualt OpenERP has the partner module and other core modules\n    installed, so most of the test uses those modules.\n    \"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setUp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">install_module</span><span class=\"p\">(</span><span class=\"s1\">'product'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_0010_create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n        Test by creating a new product\n        \"\"\"</span>\n        <span class=\"k\">with</span> <span class=\"n\">Transaction</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">DB_NAME</span><span class=\"p\">,</span> <span class=\"n\">USER</span><span class=\"p\">,</span> <span class=\"n\">CONTEXT</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">txn</span><span class=\"p\">:</span>\n            <span class=\"n\">product_obj</span> <span class=\"o\">=</span> <span class=\"n\">POOL</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'product.product'</span><span class=\"p\">)</span>\n\n            <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Sharoon Thomas'</span>\n            <span class=\"p\">}</span>\n            <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">product_obj</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n                <span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">,</span> <span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">context</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"n\">product_obj</span><span class=\"o\">.</span><span class=\"n\">browse</span><span class=\"p\">(</span><span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">,</span> <span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">product</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">])</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"more-examples\">\n<h2>More examples</h2>\n<p>Tests of this module itself is a good example of how to use itsbroken for\ntesting. See <a href=\"https://github.com/openlabs/itsbroken/blob/develop/tests/test_itsbroken.py\" rel=\"nofollow\">tests/test_itsbroken.py</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 780172, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a4a1b7fcb422908f11dd65ca3263c971", "sha256": "ff434f0c028618e533c7db0d27f20e8f5481d3388eaad1e788eb7947196549d1"}, "downloads": -1, "filename": "itsbroken-0.1.tar.gz", "has_sig": false, "md5_digest": "a4a1b7fcb422908f11dd65ca3263c971", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4638, "upload_time": "2013-06-26T12:40:39", "upload_time_iso_8601": "2013-06-26T12:40:39.987272Z", "url": "https://files.pythonhosted.org/packages/dc/3f/965513bb8d8f23464e9b4b9ab0d84fafa14f2b7366f04a62590cc52181b6/itsbroken-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "58bfdf8c333c9869e371a4573787d382", "sha256": "5536574784681c22f946271544ba57037043db69fdd7dbc6788f3a6534dd7f00"}, "downloads": -1, "filename": "itsbroken-0.2.tar.gz", "has_sig": false, "md5_digest": "58bfdf8c333c9869e371a4573787d382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5830, "upload_time": "2013-06-26T13:06:08", "upload_time_iso_8601": "2013-06-26T13:06:08.188239Z", "url": "https://files.pythonhosted.org/packages/70/bc/a476275e91b9f5230bf377d7cfbaa1cb8054e1212ac11833fd4a6cb7ffa2/itsbroken-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "58bfdf8c333c9869e371a4573787d382", "sha256": "5536574784681c22f946271544ba57037043db69fdd7dbc6788f3a6534dd7f00"}, "downloads": -1, "filename": "itsbroken-0.2.tar.gz", "has_sig": false, "md5_digest": "58bfdf8c333c9869e371a4573787d382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5830, "upload_time": "2013-06-26T13:06:08", "upload_time_iso_8601": "2013-06-26T13:06:08.188239Z", "url": "https://files.pythonhosted.org/packages/70/bc/a476275e91b9f5230bf377d7cfbaa1cb8054e1212ac11833fd4a6cb7ffa2/itsbroken-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:37 2020"}