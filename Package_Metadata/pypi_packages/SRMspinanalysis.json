{"info": {"author": "Matthew D. Morse", "author_email": "morse.mattd@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2"], "description": "# SRMspinanalysis\n\n## About\nSRMspinanalysis package contains modules for analyzing dynamic effects of small launch vehicles in zero gravity utilizing solid rocket motors for spin-stabilization.\n\n## Module Descriptions\n\n### get\\_data.py\nPulls data from thrustcurve.org url for RASP engine data and organizes data into a class.\n\n#### class SolidRocketMotor()\n\nContains information about the chosen solid rocket motor. Output of the extract_RASP_data function.\n* motor name\n* motor diameter (mm)\n* motor length (mm)\n* motor delays\n* motor propellant weight (kg)\n* motor total weight (kg)\n* motor manufacturer\n\nAlso contains the thrust-time data.\n* thrust vector (N)\n* time vector (s)\n\nContains function to add an ignition delay to the chosen motor.\n\n#### def extract\\_RASP\\_data(url)\nGiven a url for RASP engine data from thrustcurve.org, this function parses the html and extracts the appropriate data into a SolidRocketMotor class.\n\n#### def is\\_comment(line)\nDetermines if a string is a RASP file comment. Comments begin with a ';' character.\n\n### solver.py\nContains dynamic model and necessary functions to solve equations of motion.\n\n#### def compute\\_moments(params, thrust\\_motor\\_1, thrust\\_motor\\_2)\nComputes moment vector given thrust information from two oppositely pointed SRM's and a set of design parameters.\n\n#### def interpolate\\_thrust\\_data(t, motor\\_time\\_data, motor\\_thrust\\_data):\nPerforms a linear interpolation on motor thrust data and extracts the value at a desired time.\n\n#### def euler\\_eom(f, t, design\\_params, SRM1, SRM2):\nNumerically computes the time derivatives of the specified function variables. To be used for numerical integration.\n\n### sizing.py\nSimple module that can be used to size a motor given design constraints.\n\n#### def compute\\_total\\_impulse(spin\\_rate, roll\\_inertia, radial\\_distance)\nComputes total impulse required to spin a rocket design (i.e. known roll inertia and radial location of motors) at a desired spin rate.\n\n#### def compute\\_impulse\\_per\\_motor(total\\_impulse)\nComputes impulse for a single motor from the total impulse.\n\n\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [0.1.0] - 2018-05-29\n### Added\n- Something here.\n\n### Changed\n- Something here.\n\n### Fixed\n- Something here.\n\n### Removed\n- Something here.\n\n[Unreleased]: https://github.com/olivierlacan/keep-a-changelog/compare/v1.0.0...HEAD\n[0.1.0]: https://github", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SoftwareDevEngResearch/SRMspinanalysis", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "SRMspinanalysis", "package_url": "https://pypi.org/project/SRMspinanalysis/", "platform": "", "project_url": "https://pypi.org/project/SRMspinanalysis/", "project_urls": {"Homepage": "https://github.com/SoftwareDevEngResearch/SRMspinanalysis"}, "release_url": "https://pypi.org/project/SRMspinanalysis/0.1.0/", "requires_dist": null, "requires_python": ">=2", "summary": "Spin-stabilization Analysis for Solid Rocket Motor Systems", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># SRMspinanalysis</p>\n<p>## About\nSRMspinanalysis package contains modules for analyzing dynamic effects of small launch vehicles in zero gravity utilizing solid rocket motors for spin-stabilization.</p>\n<p>## Module Descriptions</p>\n<p>### get_data.py\nPulls data from thrustcurve.org url for RASP engine data and organizes data into a class.</p>\n<p>#### class SolidRocketMotor()</p>\n<p>Contains information about the chosen solid rocket motor. Output of the extract_RASP_data function.\n* motor name\n* motor diameter (mm)\n* motor length (mm)\n* motor delays\n* motor propellant weight (kg)\n* motor total weight (kg)\n* motor manufacturer</p>\n<p>Also contains the thrust-time data.\n* thrust vector (N)\n* time vector (s)</p>\n<p>Contains function to add an ignition delay to the chosen motor.</p>\n<p>#### def extract_RASP_data(url)\nGiven a url for RASP engine data from thrustcurve.org, this function parses the html and extracts the appropriate data into a SolidRocketMotor class.</p>\n<p>#### def is_comment(line)\nDetermines if a string is a RASP file comment. Comments begin with a \u2018;\u2019 character.</p>\n<p>### solver.py\nContains dynamic model and necessary functions to solve equations of motion.</p>\n<p>#### def compute_moments(params, thrust_motor_1, thrust_motor_2)\nComputes moment vector given thrust information from two oppositely pointed SRM\u2019s and a set of design parameters.</p>\n<p>#### def interpolate_thrust_data(t, motor_time_data, motor_thrust_data):\nPerforms a linear interpolation on motor thrust data and extracts the value at a desired time.</p>\n<p>#### def euler_eom(f, t, design_params, SRM1, SRM2):\nNumerically computes the time derivatives of the specified function variables. To be used for numerical integration.</p>\n<p>### sizing.py\nSimple module that can be used to size a motor given design constraints.</p>\n<p>#### def compute_total_impulse(spin_rate, roll_inertia, radial_distance)\nComputes total impulse required to spin a rocket design (i.e. known roll inertia and radial location of motors) at a desired spin rate.</p>\n<p>#### def compute_impulse_per_motor(total_impulse)\nComputes impulse for a single motor from the total impulse.</p>\n<p># Changelog\nAll notable changes to this project will be documented in this file.</p>\n<p>The format is based on [Keep a Changelog](<a href=\"http://keepachangelog.com/en/1.0.0/\" rel=\"nofollow\">http://keepachangelog.com/en/1.0.0/</a>)\nand this project adheres to [Semantic Versioning](<a href=\"http://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">http://semver.org/spec/v2.0.0.html</a>).</p>\n<p>## [Unreleased]</p>\n<p>## [0.1.0] - 2018-05-29\n### Added\n- Something here.</p>\n<p>### Changed\n- Something here.</p>\n<p>### Fixed\n- Something here.</p>\n<p>### Removed\n- Something here.</p>\n<p>[Unreleased]: <a href=\"https://github.com/olivierlacan/keep-a-changelog/compare/v1.0.0...HEAD\" rel=\"nofollow\">https://github.com/olivierlacan/keep-a-changelog/compare/v1.0.0\u2026HEAD</a>\n[0.1.0]: <a href=\"https://github\" rel=\"nofollow\">https://github</a></p>\n\n          </div>"}, "last_serial": 3911020, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "531f14e15ec78e2466b21d9fe00f1889", "sha256": "d802602c1fe5222769aebef8ad8da4745829b446c9a0bdef983c543b60dff26a"}, "downloads": -1, "filename": "SRMspinanalysis-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "531f14e15ec78e2466b21d9fe00f1889", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": ">=2", "size": 21384, "upload_time": "2018-05-30T00:48:23", "upload_time_iso_8601": "2018-05-30T00:48:23.766708Z", "url": "https://files.pythonhosted.org/packages/da/62/d06883e79ed046ce4a36eb4200825463a91e7dbff9c3887a81eaf89c44fb/SRMspinanalysis-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cc6e4f348f517b4c7176d0c9b7f8681", "sha256": "dd03b6364d00ac4e76acc650cd0c2993cbeafe01bdf6609d6131134e3e545b98"}, "downloads": -1, "filename": "SRMspinanalysis-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1cc6e4f348f517b4c7176d0c9b7f8681", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2", "size": 10049, "upload_time": "2018-05-30T00:48:26", "upload_time_iso_8601": "2018-05-30T00:48:26.007321Z", "url": "https://files.pythonhosted.org/packages/4c/90/5eb0f1fb95730c65b65a342b758b33f8e0b21980136c1ac4710c931c9a67/SRMspinanalysis-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "531f14e15ec78e2466b21d9fe00f1889", "sha256": "d802602c1fe5222769aebef8ad8da4745829b446c9a0bdef983c543b60dff26a"}, "downloads": -1, "filename": "SRMspinanalysis-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "531f14e15ec78e2466b21d9fe00f1889", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": ">=2", "size": 21384, "upload_time": "2018-05-30T00:48:23", "upload_time_iso_8601": "2018-05-30T00:48:23.766708Z", "url": "https://files.pythonhosted.org/packages/da/62/d06883e79ed046ce4a36eb4200825463a91e7dbff9c3887a81eaf89c44fb/SRMspinanalysis-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cc6e4f348f517b4c7176d0c9b7f8681", "sha256": "dd03b6364d00ac4e76acc650cd0c2993cbeafe01bdf6609d6131134e3e545b98"}, "downloads": -1, "filename": "SRMspinanalysis-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1cc6e4f348f517b4c7176d0c9b7f8681", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2", "size": 10049, "upload_time": "2018-05-30T00:48:26", "upload_time_iso_8601": "2018-05-30T00:48:26.007321Z", "url": "https://files.pythonhosted.org/packages/4c/90/5eb0f1fb95730c65b65a342b758b33f8e0b21980136c1ac4710c931c9a67/SRMspinanalysis-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:19 2020"}