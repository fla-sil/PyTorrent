{"info": {"author": "Stefano Cavallari", "author_email": "spiky.kiwi@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==========\nSPIlib\n==========\n\nSPIlib is a thin wrapper to interact with SPI devices using the Linux\n\"SPIdev\" interface [#Spidev]_\n\nSee the accelerometer example in the examples directory.\n\n\nUsage\n=====\n\nUsage is quite simple.\nFirst you have to build a Transfer::\n\n    from spi import spi_transfer, SPIDev\n    transfer, buf, _ = spi_transfer(chr(0x1b), readlen=0)\n\nThis prepares a transfer which sends one byte (first parameter) and reads none\n(second parameter).\nIt returns binary data which is then passed to SPIDev (the transfer buffer, the\nwrite buffer and the read buffer, the last ignored in the example).\nIt is possible to change the write and read buffer beetween transfers (without\naltering their lenght of course!).\n\nTo actually do the transfer use do_transfer::\n\n    myspidev = SPIDev('/dev/spidev0.0')\n    myspidev.do_transfers([transfer])\n\ndo_transfers takes a list of transfers to do in a single \"session\", maintaining\nthe device selected.\nFor examples by using three transfers you can write one byte, read and write\none at the same time, read one byte.\nNote that it is not possible to interact with data during a single \"session\"\nbecause of a limit of the Linux SPIDev interface (and thus of this interface)\n\n.. [#Spidev] http://www.kernel.org/doc/Documentation/spi/spidev", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/SPIlib/", "keywords": null, "license": "Public Domain (WTFPL2)", "maintainer": null, "maintainer_email": null, "name": "SPIlib", "package_url": "https://pypi.org/project/SPIlib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/SPIlib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/SPIlib/"}, "release_url": "https://pypi.org/project/SPIlib/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A small library to use the SPIdev linux interface", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SPIlib is a thin wrapper to interact with SPI devices using the Linux\n\u201cSPIdev\u201d interface <a href=\"#spidev\" id=\"id1\" rel=\"nofollow\">[1]</a></p>\n<p>See the accelerometer example in the examples directory.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Usage is quite simple.\nFirst you have to build a Transfer:</p>\n<pre>from spi import spi_transfer, SPIDev\ntransfer, buf, _ = spi_transfer(chr(0x1b), readlen=0)\n</pre>\n<p>This prepares a transfer which sends one byte (first parameter) and reads none\n(second parameter).\nIt returns binary data which is then passed to SPIDev (the transfer buffer, the\nwrite buffer and the read buffer, the last ignored in the example).\nIt is possible to change the write and read buffer beetween transfers (without\naltering their lenght of course!).</p>\n<p>To actually do the transfer use do_transfer:</p>\n<pre>myspidev = SPIDev('/dev/spidev0.0')\nmyspidev.do_transfers([transfer])\n</pre>\n<p>do_transfers takes a list of transfers to do in a single \u201csession\u201d, maintaining\nthe device selected.\nFor examples by using three transfers you can write one byte, read and write\none at the same time, read one byte.\nNote that it is not possible to interact with data during a single \u201csession\u201d\nbecause of a limit of the Linux SPIDev interface (and thus of this interface)</p>\n<table id=\"spidev\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><a href=\"http://www.kernel.org/doc/Documentation/spi/spidev\" rel=\"nofollow\">http://www.kernel.org/doc/Documentation/spi/spidev</a></td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 785569, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8b8ea5df1bc6543c48087126a79cbbca", "sha256": "10f54e2370e84b2de32b6226e3bd2ea3d93b6a04a23fc5910e290fa037b5235e"}, "downloads": -1, "filename": "SPIlib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b8ea5df1bc6543c48087126a79cbbca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3206, "upload_time": "2012-07-02T16:36:05", "upload_time_iso_8601": "2012-07-02T16:36:05.299656Z", "url": "https://files.pythonhosted.org/packages/74/b6/538a276bcf1882c3afd082ff2c83f67c11a38ac2defa871bb640f0b28a9f/SPIlib-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b8ea5df1bc6543c48087126a79cbbca", "sha256": "10f54e2370e84b2de32b6226e3bd2ea3d93b6a04a23fc5910e290fa037b5235e"}, "downloads": -1, "filename": "SPIlib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b8ea5df1bc6543c48087126a79cbbca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3206, "upload_time": "2012-07-02T16:36:05", "upload_time_iso_8601": "2012-07-02T16:36:05.299656Z", "url": "https://files.pythonhosted.org/packages/74/b6/538a276bcf1882c3afd082ff2c83f67c11a38ac2defa871bb640f0b28a9f/SPIlib-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:50 2020"}