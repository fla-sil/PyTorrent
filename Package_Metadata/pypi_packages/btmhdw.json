{"info": {"author": "Meheret Tesfaye", "author_email": "meherett@zoho.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# btmhdw\n\n*The implementation of Hierarchical Deterministic (HD) wallets generator for Bytom blockchain.*\n\n[![Build Status](https://travis-ci.org/meherett/btmhdw.svg?branch=master)](https://travis-ci.org/meherett/btmhdw)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/btmhdw.svg)\n![PyPI License](https://img.shields.io/pypi/l/btmhdw.svg?color=black)\n![PyPI Version](https://img.shields.io/pypi/v/btmhdw.svg?color=blue)\n[![Coverage Status](https://coveralls.io/repos/github/meherett/btmhdw/badge.svg)](https://coveralls.io/github/meherett/btmhdw)\n\n## Installation\nInstall btmhdw\n```\npip install btmhdw\n```\n\n## Development\nClone the repository and then run\n```\npip install -e . -r requirements.txt\n```\n\n## Running the test\nYou can run the tests with:\n```\npip install -r test-requirements.txt\n\npytest tests\n```\nOr use `tox` to run the complete suite against the full set of build targets, or pytest to run specific \ntests against a specific version of Python.\n\n## Usage\n#### Create a new Bytom wallet\n```python\nfrom btmhdw import BTMHDW\n\n# init BTMHDW\nbtmhdw = BTMHDW()\n\n# Generate mnemonic english/japanese\nmnemonic = btmhdw.generate_mnemonic(\"english\")\n\n# Checking mnemonic language\nif not btmhdw.check_mnemonic(mnemonic, \"english\"):\n    exit()\n\n# Create a new wallet\nwallet = btmhdw.create(mnemonic=mnemonic, network=\"mainnet\")\n\nprint(wallet)\n```\n`OUTPUT`\n```json5\n{\n  'mnemonic': 'gauge base climb fit output toast brave crush vacant predict hire remind',\n  'address': 'bm1qn6g0tky8lx44j2ccz8cu88ngn4snfqr74d9ndw',\n  'seed': 'b699dee73ef9be58fbf3490dab6e49071f96df97c5d2614a465b1fd3b76373f56edbac4e24b137f6226402e59902f0eaa882603f94b83618384500db1e30585b',\n  'xprivate': '8007196f3e0841bbdf90d97df172a19cb18edda007466d362fa2d5ff23822a40189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e',\n  'xpublic': 'd47ece6097f93b5d19259886d210dab017f5b37520b4dad8160712fd5b1065e7189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e',\n  'program': '001468029bfd7635cec9100ed21ab6aee3a41986db71',\n  'path': 'm/44/153/1/0/1',\n}\n```\n\n#### Get wallet from XPrivate key\n```python\nfrom btmhdw import BTMHDW\n\nXPRIVATE = \"8007196f3e0841bbdf90d97df172a19cb18edda007466d362fa2d5ff23822a40189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e\"\n\n# init BTMHDW\nbtmhdw = BTMHDW()\n\n# Wallet from xprivate\nwallet = btmhdw.from_xprivate(xprivate=XPRIVATE, network=\"mainnet\")\n\nprint(wallet)\n```\n`OUTPUT`\n```json5\n{\n  'address': 'bm1qn6g0tky8lx44j2ccz8cu88ngn4snfqr74d9ndw',\n  'xprivate': '8007196f3e0841bbdf90d97df172a19cb18edda007466d362fa2d5ff23822a40189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e',\n  'xpublic': 'd47ece6097f93b5d19259886d210dab017f5b37520b4dad8160712fd5b1065e7189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e', \n  'program': '001468029bfd7635cec9100ed21ab6aee3a41986db71',\n  'path': 'm/44/153/1/0/1'\n}\n```\n\n## Example\nHere are more [btmhdw/example](https://github.com/meherett/btmhdw/blob/master/examples/example.py)\n\n## Meta\n\nMeheret Tesfaye \u2013 [@meherett](https://github.com/meherett) \u2013 meherett@zoho.com\n\nDistributed under the MIT license. See ``LICENSE`` for more information.\n\n[https://github.com/meherett/btmhdw](LICENSE)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n\n## API\n\n### Class BTMHDW()\n**`generate_mnemonic()`**: It is to generate new mnemonic.\n\n**Parameters**\n\n`Optional`:\n- `String` - *strength*, 128.\n- `String` - *passphrase*, password of the key.\n- `String` - *language*, mnemonic language of the key.\n\n**Returns**\n\n`Object`:\n- `String` - *mnemonic*, generated mnemonic 12 words.\n\n**Example**\n\n```python\nprint(btmhdw.generate_mnemonic(language=\"english\", passphrase=\"meherett\"))\nprint(btmhdw.generate_mnemonic(language=\"japanese\", passphrase=\"meherett\"))\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"spare uniform possible grief attitude machine peace update tornado area evolve spread\"\n\"\u3042\u3051\u304b\u3099\u305f\u00e3\u0080\u0080\u3072\u3066\u3044\u00e3\u0080\u0080\u304d\u3099\u3057\u3099\u304b\u304b\u3099\u304f\u00e3\u0080\u0080\u304f\u3046\u304d\u00e3\u0080\u0080\u3068\u3099\u3046\u304f\u3099\u00e3\u0080\u0080\u305f\u3099\u3057\u3099\u3083\u308c\u00e3\u0080\u0080\u304a\u304a\u3046\u00e3\u0080\u0080\u308a\u306d\u3093\u00e3\u0080\u0080\u3053\u3093\u305f\u3099\u3066\u00e3\u0080\u0080\u3066\u308f\u305f\u3057\u00e3\u0080\u0080\u306f\u3075\u3099\u3089\u3057\u00e3\u0080\u0080\u3061\u3044\u304d\"\n```\n</details>\n\n----\n\n**`check_mnemonic()`**: It is to check mnemonic language.\n\n**Parameters**\n\n`Object`:\n- `String` - *mnemonic*, mnemonic 12 words.\n\n`Optional`:\n- `String` - *language*, english/japanese by default english.\n\n**Returns**\n\n`Object`:\n- `Boolean` - *boolean*, True/False.\n\n**Example**\n\n```python\nMNEMONIC = \"ancient young hurt bone shuffle deposit congress normal crack six boost despair\"\n\nprint(btmhdw.check_mnemonic(MNEMONIC, \"english\"))\nprint(btmhdw.check_mnemonic(MNEMONIC, \"japanese\"))\n```\n<details>\n<summary>Output</summary>\n\n```python\nTrue\nFalse\n```\n</details>\n\n----\n\n**`generate_entropy()`**: It is to generate new entropy.\n\n**Returns**\n\n`Object`:\n- `String` - *entropy*, generated entropy 32 length.\n\n**Example**\n\n```python\nprint(btmhdw.generate_entropy())\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"fbb9d20ec1fb94762b56dbc9cd184e23\"\n```\n</details>\n\n**`create()`**: It is to create new Bytom wallet.\n\n**Parameters**\n\n`Optional`:\n- `String` - *mnemonic*, from mnemonic 12 words.\n- `String` - *passphrase*, password of the key.\n- `String` - *account*, account path index by default 1.\n- `String` - *change*, change path index 0 or 1 by default 0.\n- `String` - *address*, address path index by default 1.\n- `String` - *path*, string of index.\n- `Array` - *indexes*, array of index.\n- `String` - *network*, mainnet(bm)/testnet(tm)/solonet(sm) by default sm.\n\n**Returns**\n\n`Object`:\n- `Object` - *object*, keys are `entropy`, `mnemonic`, `address`, `seed`, `xprivate`, `xpublic`, `program` and `path`\n\n**Example**\n\n```python\nmnemonic = btmhdw.generate_mnemonic(\"english\")\n\ncreatedWallet = btmhdw.create(mnemonic=mnemonic, \n                                    network=\"mainnet\")\nprint(createdWallet['address'])\nprint(createdWallet['xprivate'], '\\n')\nprint(createdWallet)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"bm1qsv6u5z2uxtefnehkyuetyx4llu27umqscu8vtk\"\n\"983fc70dc7c4a26ff9af39af4c0cc3057565b8f70a31158a6f37e1804ae6414ea6cade89861c53fafa461e5f0e116f47a816b11ba05585b79c577531c6000ffe\" \n\n{\n  'mnemonic': 'alarm fix day evoke void hawk pistol pulp impact farm average mask',\n  'address': 'bm1qsv6u5z2uxtefnehkyuetyx4llu27umqscu8vtk',\n  'seed': '6e269a33fb2c65b9a1966bc9579628869630d7d647792eaa3692fdae1db1a719ff4dfef17acf6027fb20ba7ce04e4715460ea2d280f69f646df1f2a6ef6ffea1',\n  'xprivate': '983fc70dc7c4a26ff9af39af4c0cc3057565b8f70a31158a6f37e1804ae6414ea6cade89861c53fafa461e5f0e116f47a816b11ba05585b79c577531c6000ffe',\n  'xpublic': '4a7bfcbccbe97aa3f92795c761697f98b6b2350597ab73c85109b025301db1aaa6cade89861c53fafa461e5f0e116f47a816b11ba05585b79c577531c6000ffe',\n  'program': '0014312b5e9ee3625a50847ffd5244dbc0d8f01b8566',\n  'path': 'm/44/153/1/0/1',\n}\n```\n</details>\n\n----\n\n**`from_xprivate()`**: It is to get wallet from xprivate key.\n\n**Parameters**\n\n`Object`:\n- `String` - *xprivate*, xprivate key.\n\n`Optional`:\n- `String` - *account*, account path index by default 1.\n- `String` - *change*, change path index 0 or 1 by default 0.\n- `String` - *address*, address path index by default 1.\n- `String` - *path*, string of index.\n- `Array` - *indexes*, array of index.\n- `String` - *network*, mainnet(bm)/testnet(tm)/solonet(sm) by default sm.\n\n**Returns**\n\n`Object`:\n- `Object` - *object*, keys are `address`, `xprivate`, `xpublic`, `program` and `path`\n\n**Example**\n\n```python\nXPRIVATE = \"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"\n\nwallet_from_xprivate = btmhdw.from_xprivate(xprivate=XPRIVATE, network=\"mainnet\")\n\nprint(wallet_from_xprivate['address'])\nprint(wallet_from_xprivate['xprivate'], '\\n')\nprint(wallet_from_xprivate)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"bm1qtzg058tt5eyf2qqfy2650erxqxhfkt4p236708\"\n\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\" \n\n{\n  'address': 'bm1qtzg058tt5eyf2qqfy2650erxqxhfkt4p236708', \n  'xprivate': 'c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c',\n  'xpublic': '1b0541a7664cee929edb54d9ef21996b90546918a920a77e1cd6015d97c56563d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c',\n  'program': '0014dcf6b21d83c978d3125d1330c928c38fee315200',\n  'path': 'm/44/153/1/0/1',\n}\n```\n</details>\n\n----\n\n### Class BytomHDWallet()\n\n**`master_key_from_mnemonic()`**: It is to get master key from mnemonic.\n\n**Parameters**\n\n`Object`:\n- `String` - *mnemonic*, mnemonic 12 words.\n\n`Optional`:\n- `String` - *passphrase*, password of the key.\n\n**Returns**\n\n`Object`:\n- `Object` - *BytomHDWallet*, class.\n\n**Example**\n\n```python\nMNEMONIC = \"ancient young hurt bone shuffle deposit congress normal crack six boost despair\"\n\nbytomHDWallet = BytomHDWallet.master_key_from_mnemonic(mnemonic=MNEMONIC, \n                                                       passphrase=\"Meheret Tesfaye\")\n```\n\n----\n\n**`master_key_from_xprivate()`**: It is to get master key from XPrivate.\n\n**Parameters**\n\n`Object`:\n- `String` - *xprivate*, xprivate key.\n\n**Returns**\n\n`Object`:\n- `Object` - *BytomHDWallet*, class.\n\n**Example**\n\n```python\nXPRIVATE = \"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"\n\nbytomHDWallet = BytomHDWallet.master_key_from_xprivate(xprivate=XPRIVATE)\n```\n\n----\n\n**`generate_entropy()`**: It is to generate new entropy.\n\n**Returns**\n\n`Object`:\n- `String` - *entropy*, generated entropy.\n\n**Example**\n\n```python\nprint(bytomHDWallet.generate_entropy().hex())\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"7184af4506fb1b51c52d2e73251cc3a7\"\n```\n</details>\n\n----\n\n**`master_key_from_entropy()`**: It is to get master key from mnemonic.\n\n**Parameters**\n\n`Optional`:\n- `String` - *entropy*, from entropy.\n- `String` - *strength*, 128.\n- `String` - *passphrase*, password of the key.\n- `String` - *language*, mnemonic language of the key.\n\n**Returns**\n\n`Object`:\n- `Object` - *BytomHDWallet*, class.\n- `String` - *mnemonic*, generated mnemonic 12 words.\n\n**Example**\n\n```python\nentropy = bytomHDWallet.generate_entropy()\n\nbytomHDWallet, mnemonic = bytomHDWallet.master_key_from_entropy(entropy=entropy,\n                                                                passphrase=\"meherett\",\n                                                                language=\"japanese\")\nprint(mnemonic)\nprint(bytomHDWallet)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"\u305f\u3044\u3080\u00e3\u0080\u0080\u304a\u307e\u3044\u308a\u00e3\u0080\u0080\u305f\u3093\u3081\u3044\u00e3\u0080\u0080\u304d\u3061\u3087\u3046\u00e3\u0080\u0080\u308d\u3093\u3075\u3099\u3093\u00e3\u0080\u0080\u3044\u306a\u304b\u00e3\u0080\u0080\u3057\u306a\u304d\u3099\u308c\u00e3\u0080\u0080\u307b\u3048\u308b\u00e3\u0080\u0080\u3044\u3082\u3046\u3068\u00e3\u0080\u0080\u3072\u3057\u3087\u00e3\u0080\u0080\u3057\u3099\u3086\u3046\u00e3\u0080\u0080\u306b\u3093\u3080\"\n<btmhdw.BytomHDWallet object at 0x7f3374618cf8>\n```\n</details>\n\n----\n\n**`xprivate_key()`**: It is to get XPrivate key.\n\n**Returns**\n\n`Object`:\n- `String` - *xprivate*, xprivate from master key.\n\n**Example**\n\n```python\nMNEMONIC = \"ancient young hurt bone shuffle deposit congress normal crack six boost despair\"\n\nbytomHDWallet = BytomHDWallet()\nbytomHDWallet = bytomHDWallet.master_key_from_mnemonic(mnemonic=MNEMONIC)\nbytomHDWallet.from_path(\"m/44/153/1/0/1\")\n\nprint(bytomHDWallet.xprivate_key())\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"302a25c7c0a68a83fa043f594a2db8b44bc871fced553a8a33144b31bc7fb84887c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"\n```\n</details>\n\n----\n\n**`xpublic_key()`**: It is to get XPublic key.\n\n**Parameters**\n\n`Optional`:\n- `String` - *xprivate*, from xprivate key.\n\n**Returns**\n\n`Object`:\n- `String` - *xpublic*, xpublic from xprivate/master key.\n\n**Example**\n\n```python\nXPRIVATE = \"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"\n\nprint(bytomHDWallet.xpublic_key(xprivate=XPRIVATE))\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"302a25c7c0a68a83fa043f594a2db8b44bc871fced553a8a33144b31bc7fb84887c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"\n```\n</details>\n\n----\n\n**`expand_xprivate_key()`**: It is to get Expand XPrivate key.\n\n**Parameters**\n\n`Optional`:\n- `String` - *xprivate*, from xprivate key.\n\n**Returns**\n\n`Object`:\n- `String` - *expandPrivate*, expand private key from xprivate/master key.\n\n**Example**\n\n```python\nXPRIVATE = \"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"\n\nprint(bytomHDWallet.expand_xprivate_key(xprivate=XPRIVATE))\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759b47fcbbf006db960004839862e694fb3647fdc081ae109bbfe3b07de83e39807\"\n```\n</details>\n\n----\n\n**`public_key()`**: It is to get public key(length 64).\n\n**Parameters**\n\n`Optional`:\n- `String` - *xpublic*, from xpublic key.\n\n**Returns**\n\n`Object`:\n- `String` - *public*, public key(length 64) from xpublic/master key.\n\n**Example**\n\n```python\nXPUBLIC = \"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20c5eebd1c26ccad4de5142d7c339bf62cc1fb79a8b3e42a708cd521368dbc9286\"\n\nprint(bytomHDWallet.public_key(xpublic=XPUBLIC))\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20\"\n```\n</details>\n\n----\n\n**`from_indexes()`**: It is to set collection of index.\n\n**Parameters**\n\n`Object`:\n- `Array` - *indexes*, array of index.\n\n**Returns**\n\n`Object`:\n- `Object` - *BytomHDWallet*, class.\n\n**Example**\n\n```python\nINDEXES = ['2c000000', '99000000', '01000000', '01000000', '99000000']\n\nbytomHDWallet = bytomHDWallet.from_indexes(indexes=INDEXES)\n```\n\n----\n\n**`from_index()`**: It is to set index.\n\n**Parameters**\n\n`Object`:\n- `Number` - *index*, number.\n\n**Returns**\n\n`Object`:\n- `Object` - *BytomHDWallet*, class.\n\n**Example**\n\n```python\nbytomHDWallet = BytomHDWallet()\n\nbytomHDWallet.from_index(44)\nbytomHDWallet.from_index(153)\nbytomHDWallet.from_index(1)  # account\nbytomHDWallet.from_index(0)  # change 0 or 1\nbytomHDWallet.from_index(1)  # address\n\n# Advanced BTMHDW_HARDEN\n\nbytomHDWallet.from_index(44)\nbytomHDWallet.from_index(153 + BTMHDW_HARDEN)\nbytomHDWallet.from_index(1 + BTMHDW_HARDEN)\nbytomHDWallet.from_index(0)\nbytomHDWallet.from_index(1)\n```\n\n----\n\n**`from_path()`**: It is to set index from path.\n\n**Parameters**\n\n`Object`:\n- `String` - *path*, string of index.\n\n**Returns**\n\n`Object`:\n- `Object` - *BytomHDWallet*, class.\n\n**Example**\n\n```python\nbytomHDWallet = BytomHDWallet()\n\nbytomHDWallet.from_path(\"m/44/153/1/0/1\")\n\n# Advanced BTMHDW_HARDEN using \"'\"\n\nbytomHDWallet.from_path(\"m/44/153'/1'/0/1\")\n```\n\n----\n\n**`get_indexes()`**: It is to get collection of index.\n\n**Returns**\n\n`Object`:\n- `Array` - *indexes*, collection of index.\n\n**Example**\n\n```python\nprint(bytomHDWallet.get_indexes())\n```\n<details>\n<summary>Output</summary>\n\n```json5\n['2c000000', '99000000', '01000000', '01000000', '99000000']\n```\n</details>\n\n----\n\n**`get_path()`**: It is to get path of indexes.\n\n**Parameters**\n\n`Optional`:\n- `String` - *indexes*, from array of index.\n\n**Returns**\n\n`Object`:\n- `String` - *path*, string of index from indexes/master key.\n\n**Example**\n\n```python\nfrom btmhdw import INDEXES\n\nprint(bytomHDWallet.get_path(indexes=INDEXES))\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"m/44/153/1/0/1\"\n```\n</details>\n\n----\n\n**`child_xprivate_key()`**: It is to get child of XPrivate key.\n\n**Parameters**\n\n`Optional`:\n- `String` - *xprivate*, from xprivate key.\n- `String` - *indexes*, collection of index.\n- `String` - *path*, path of index.\n\n**Returns**\n\n`Object`:\n- `String` - *childXPrivate*, child xprivate key from xprivate/indexes/master key.\n\n**Example**\n\n```python\nfrom btmhdw import INDEXES\n\nXPRIVATE = \"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"\n\nchild_xprivate_key = bytomHDWallet.child_xprivate_key(xprivate=XPRIVATE,\n                                                      indexes=INDEXES)\nprint(child_xprivate_key)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"d01acc504811886d732ea6ea19c066b0f1fb4d0b2a0b97414d1d3916c70c47596aca269da2343d4d7588ffa3c8b9244a156748276114e5f2b86fa69ec241b62a\"\n```\n</details>\n\n----\n\n**`sing()`**: Singing message.\n\n**Parameters**\n\n`Object`:\n- `String` - *message*, message to sing.\n\n`Optional`:\n- `String` - *xprivate*, xprivate key.\n\n**Returns**\n\n`Object`:\n- `String` - *signature*, signed message.\n\n**Example**\n\n```python\n\nMESSAGE = \"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"\n\nsignature = bytomHDWallet.sign(message=MESSAGE)\n\nprint(signature)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"75ca5b6cf7ba40c7a51f20e1fd03686666e09cf58d0d2978ab6072d8057cbbd3072eabbdefe96eefcbb0c8ec654239b82fa5efcbe24e8704c7d06efd79c40d0a\"\n```\n</details>\n\n----\n\n**`verify()`**: Verifying signed message.\n\n**Parameters**\n\n`Object`:\n- `String` - *message*, message to sing.\n- `String` - *signature*, signed message.\n\n`Optional`:\n- `String` - *xpublic*, xpublic key.\n\n**Returns**\n\n`Object`:\n- `Boolean` - *bool*, true or false.\n\n**Example**\n\n```python\nMESSAGE = \"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"\n\nverify_signature = bytomHDWallet.verify(message=MESSAGE, signature=signature)\n\nprint(verify_signature)\n```\n<details>\n<summary>Output</summary>\n\n```python\nTrue\n```\n</details>\n\n----\n\n**`child_xpublic_key()`**: It is to get child of XPublic key.\n\n**Parameters**\n\n`Optional`:\n- `String` - *xpublic*, from xpublic key.\n- `String` - *indexes*, collection of index.\n- `String` - *path*, path of index.\n\n**Returns**\n\n`Object`:\n- `String` - *child_xpublic_key*, child xpublic key from xpublic/indexes/master key.\n\n**Example**\n\n```python\nfrom btmhdw import INDEXES\n\nXPUBLIC = \"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20c5eebd1c26ccad4de5142d7c339bf62cc1fb79a8b3e42a708cd521368dbc9286\"\n\nchild_xpublic_key = bytomHDWallet.child_xpublic_key(xpublic=XPUBLIC,\n                                                    indexes=INDEXES)\nprint(child_xpublic_key)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"e87ca3acdebdcad9a1d0f2caecf8ce0dbfc73d060807a210c6f2254883479614bcde9cf9e8ee322097d639b33b398c2e419de4092409bf43b3632ddefc4beae9\"\n```\n</details>\n\n----\n\n**`program()`**: It is to get control program.\n\n**Parameters**\n\n`Optional`:\n- `String` - *xpublic*, from xpublic key.\n- `String` - *path*, path of index.\n- `String` - *indexes*, collection of index.\n\n**Returns**\n\n`Object`:\n- `String` - *program*, control program from xpublic/master key.\n\n**Example**\n```python\nfrom btmhdw import INDEXES, PATH\n\n# Getting contract Program from xpublic and path or indexes\nprint(BytomHDWallet().program(xpublic=XPUBLIC, path=\"m/44/153/2/0/8\"))\nprint(BytomHDWallet().program(xpublic=XPUBLIC, path=PATH))\nprint(BytomHDWallet().program(xpublic=XPUBLIC, indexes=INDEXES))\nprint(BytomHDWallet().program(xpublic=XPUBLIC, indexes=['2c000000', '99000000', '01000000', '01000000', '01000000']))\nprint(BytomHDWallet().program(public=PUBLIC))\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"00140afb404c13a122306ee86f5ff9b177334d8e23b7\"\n\"0014052620b86a6d5e07311d5019dffa3864ccc8a6bd\"\n\"00140afb404c13a122306ee86f5ff9b177334d8e23b7\"\n\"0014052620b86a6d5e07311d5019dffa3864ccc8a6bd\"\n\"001478c3aa31753389fcde04d33d0779bdc2840f0ad4\"\n```\n</details>\n\n----\n\n**`address()`**: It is to get address.\n\n**Parameters**\n\n`Optional`:\n- `String` - *program*, from control program.\n- `String` - *network*, mainnet(bm)/testnet(tm)/solonet(sm) by default sm.\n\n**Returns**\n\n`Object`:\n- `String` - *address*, address from control program/master key.\n\n**Example**\n\n```python\nXPUBLIC = \"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20c5eebd1c26ccad4de5142d7c339bf62cc1fb79a8b3e42a708cd521368dbc9286\"\n\nprogram = BytomHDWallet().program(xpublic=XPUBLIC, path=\"m/44/153/2/0/8\")\nprint(bytomHDWallet.address(program=program,\n                            network='mainnet'))  # or network bm\nprint(bytomHDWallet.address(program=program,\n                            network='testnet'))  # or network tm\nprint(bytomHDWallet.address(program=program,\n                            network='solonet'))  # or network sm\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"bm1qpta5qnqn5y3rqmhgda0lnvthxdxcugahcpaum5\"\n\"tm1qpta5qnqn5y3rqmhgda0lnvthxdxcugahuhucm9\"\n\"sm1qpta5qnqn5y3rqmhgda0lnvthxdxcugahesham6\"\n```\n</details>\n\n----\n\n### Extra Functions\n\n**`sing()`**: Singing message.\n\n**Parameters**\n\n`Object`:\n- `String` - *message*, message to sing.\n- `String` - *xprivate*, xprivate key.\n\n**Returns**\n\n`Object`:\n- `String` - *signature*, signed message.\n\n**Example**\n\n```python\nfrom btmhdw import sign\n\nMESSAGE = \"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"\nXPRIVATE = \"302a25c7c0a68a83fa043f594a2db8b44bc871fced553a8a33144b31bc7fb84887c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"\n\nsignature = sign(message=MESSAGE, xprivate=XPRIVATE)\n\nprint(signature)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n\"a39045f6c8b87b3adce39057e448b37c2300bb3dfce0d8b6034a28bbcccfa4353fc23cb158a310990205fed302bbdfa64255b49f7b1eb2fb502756f164922309\"\n```\n</details>\n\n----\n\n**`verify()`**: Verifying signed message.\n\n**Parameters**\n\n`Object`:\n- `String` - *message*, message to sing.\n- `String` - *signature*, signed message.\n- `String` - *xpublic*, xpublic key.\n\n**Returns**\n\n`Object`:\n- `Boolean` - *bool*, true or false.\n\n**Example**\n\n```python\nfrom btmhdw import verify\n\nMESSAGE = \"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"\nSIGNATURE = \"a39045f6c8b87b3adce39057e448b37c2300bb3dfce0d8b6034a28bbcccfa4353fc23cb158a310990205fed302bbdfa64255b49f7b1eb2fb502756f164922309\"\nXPUBLIC = \"9407d490e9dbc7762c924122368e6c5743d5829ff2a1e2eb4b219a08e080499687c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"\n\nverify_signature = verify(message=MESSAGE, signature=SIGNATURE, xpublic=XPUBLIC)\n\nprint(verify_signature)\n```\n<details>\n<summary>Output</summary>\n\n```python\nTrue\n```\n</details>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/meherett/btmhdw", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "btmhdw", "package_url": "https://pypi.org/project/btmhdw/", "platform": "", "project_url": "https://pypi.org/project/btmhdw/", "project_urls": {"Homepage": "https://github.com/meherett/btmhdw"}, "release_url": "https://pypi.org/project/btmhdw/2.2.2/", "requires_dist": ["mnemonic (<1,>=0.19)", "ed25519 (<2,>=1.5)"], "requires_python": ">=3.5,<4", "summary": "The implementation of Hierarchical Deterministic (HD) wallets generator for Bytom blockchain", "version": "2.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>btmhdw</h1>\n<p><em>The implementation of Hierarchical Deterministic (HD) wallets generator for Bytom blockchain.</em></p>\n<p><a href=\"https://travis-ci.org/meherett/btmhdw\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ac50f2e9ed9eac1ce6a13fa0794fef541857768/68747470733a2f2f7472617669732d63692e6f72672f6d656865726574742f62746d6864772e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df19b03879a224f6bd9fe9d4f4233d90e73bb133/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f62746d6864772e737667\">\n<img alt=\"PyPI License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c108dc29a8e11cb52ed89cbdb256d2f9257c120d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f62746d6864772e7376673f636f6c6f723d626c61636b\">\n<img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/debf35f652e6eefe827c7cfeea2aa8c0c5ab0159/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f62746d6864772e7376673f636f6c6f723d626c7565\">\n<a href=\"https://coveralls.io/github/meherett/btmhdw\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85ba04cd7ccd1ac36b644b7c483ad5ceac008b6f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d656865726574742f62746d6864772f62616467652e737667\"></a></p>\n<h2>Installation</h2>\n<p>Install btmhdw</p>\n<pre><code>pip install btmhdw\n</code></pre>\n<h2>Development</h2>\n<p>Clone the repository and then run</p>\n<pre><code>pip install -e . -r requirements.txt\n</code></pre>\n<h2>Running the test</h2>\n<p>You can run the tests with:</p>\n<pre><code>pip install -r test-requirements.txt\n\npytest tests\n</code></pre>\n<p>Or use <code>tox</code> to run the complete suite against the full set of build targets, or pytest to run specific\ntests against a specific version of Python.</p>\n<h2>Usage</h2>\n<h4>Create a new Bytom wallet</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">BTMHDW</span>\n\n<span class=\"c1\"># init BTMHDW</span>\n<span class=\"n\">btmhdw</span> <span class=\"o\">=</span> <span class=\"n\">BTMHDW</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Generate mnemonic english/japanese</span>\n<span class=\"n\">mnemonic</span> <span class=\"o\">=</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">generate_mnemonic</span><span class=\"p\">(</span><span class=\"s2\">\"english\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Checking mnemonic language</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">check_mnemonic</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"p\">,</span> <span class=\"s2\">\"english\"</span><span class=\"p\">):</span>\n    <span class=\"n\">exit</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a new wallet</span>\n<span class=\"n\">wallet</span> <span class=\"o\">=</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"o\">=</span><span class=\"n\">mnemonic</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s2\">\"mainnet\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"p\">)</span>\n</pre>\n<p><code>OUTPUT</code></p>\n<pre>{\n  'mnemonic': 'gauge base climb fit output toast brave crush vacant predict hire remind',\n  'address': 'bm1qn6g0tky8lx44j2ccz8cu88ngn4snfqr74d9ndw',\n  'seed': 'b699dee73ef9be58fbf3490dab6e49071f96df97c5d2614a465b1fd3b76373f56edbac4e24b137f6226402e59902f0eaa882603f94b83618384500db1e30585b',\n  'xprivate': '8007196f3e0841bbdf90d97df172a19cb18edda007466d362fa2d5ff23822a40189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e',\n  'xpublic': 'd47ece6097f93b5d19259886d210dab017f5b37520b4dad8160712fd5b1065e7189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e',\n  'program': '001468029bfd7635cec9100ed21ab6aee3a41986db71',\n  'path': 'm/44/153/1/0/1',\n}\n</pre>\n<h4>Get wallet from XPrivate key</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">BTMHDW</span>\n\n<span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"8007196f3e0841bbdf90d97df172a19cb18edda007466d362fa2d5ff23822a40189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e\"</span>\n\n<span class=\"c1\"># init BTMHDW</span>\n<span class=\"n\">btmhdw</span> <span class=\"o\">=</span> <span class=\"n\">BTMHDW</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Wallet from xprivate</span>\n<span class=\"n\">wallet</span> <span class=\"o\">=</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">from_xprivate</span><span class=\"p\">(</span><span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s2\">\"mainnet\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wallet</span><span class=\"p\">)</span>\n</pre>\n<p><code>OUTPUT</code></p>\n<pre>{\n  'address': 'bm1qn6g0tky8lx44j2ccz8cu88ngn4snfqr74d9ndw',\n  'xprivate': '8007196f3e0841bbdf90d97df172a19cb18edda007466d362fa2d5ff23822a40189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e',\n  'xpublic': 'd47ece6097f93b5d19259886d210dab017f5b37520b4dad8160712fd5b1065e7189b8b295cc023e0b2c78f79725f859ac512afdfebc0b94cfd83faa59e42d82e', \n  'program': '001468029bfd7635cec9100ed21ab6aee3a41986db71',\n  'path': 'm/44/153/1/0/1'\n}\n</pre>\n<h2>Example</h2>\n<p>Here are more <a href=\"https://github.com/meherett/btmhdw/blob/master/examples/example.py\" rel=\"nofollow\">btmhdw/example</a></p>\n<h2>Meta</h2>\n<p>Meheret Tesfaye \u2013 <a href=\"https://github.com/meherett\" rel=\"nofollow\">@meherett</a> \u2013 <a href=\"mailto:meherett@zoho.com\">meherett@zoho.com</a></p>\n<p>Distributed under the MIT license. See <code>LICENSE</code> for more information.</p>\n<p><a href=\"LICENSE\" rel=\"nofollow\">https://github.com/meherett/btmhdw</a></p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n<h2>API</h2>\n<h3>Class BTMHDW()</h3>\n<p><strong><code>generate_mnemonic()</code></strong>: It is to generate new mnemonic.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>strength</em>, 128.</li>\n<li><code>String</code> - <em>passphrase</em>, password of the key.</li>\n<li><code>String</code> - <em>language</em>, mnemonic language of the key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>mnemonic</em>, generated mnemonic 12 words.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">generate_mnemonic</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"english\"</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s2\">\"meherett\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">generate_mnemonic</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"japanese\"</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s2\">\"meherett\"</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"spare uniform possible grief attitude machine peace update tornado area evolve spread\"\n\"\u3042\u3051\u304b\u3099\u305f\u00e3\u0080\u0080\u3072\u3066\u3044\u00e3\u0080\u0080\u304d\u3099\u3057\u3099\u304b\u304b\u3099\u304f\u00e3\u0080\u0080\u304f\u3046\u304d\u00e3\u0080\u0080\u3068\u3099\u3046\u304f\u3099\u00e3\u0080\u0080\u305f\u3099\u3057\u3099\u3083\u308c\u00e3\u0080\u0080\u304a\u304a\u3046\u00e3\u0080\u0080\u308a\u306d\u3093\u00e3\u0080\u0080\u3053\u3093\u305f\u3099\u3066\u00e3\u0080\u0080\u3066\u308f\u305f\u3057\u00e3\u0080\u0080\u306f\u3075\u3099\u3089\u3057\u00e3\u0080\u0080\u3061\u3044\u304d\"\n</pre>\n</details>\n<hr>\n<p><strong><code>check_mnemonic()</code></strong>: It is to check mnemonic language.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>mnemonic</em>, mnemonic 12 words.</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>language</em>, english/japanese by default english.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Boolean</code> - <em>boolean</em>, True/False.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">MNEMONIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"ancient young hurt bone shuffle deposit congress normal crack six boost despair\"</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">check_mnemonic</span><span class=\"p\">(</span><span class=\"n\">MNEMONIC</span><span class=\"p\">,</span> <span class=\"s2\">\"english\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">check_mnemonic</span><span class=\"p\">(</span><span class=\"n\">MNEMONIC</span><span class=\"p\">,</span> <span class=\"s2\">\"japanese\"</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre><span class=\"kc\">True</span>\n<span class=\"kc\">False</span>\n</pre>\n</details>\n<hr>\n<p><strong><code>generate_entropy()</code></strong>: It is to generate new entropy.</p>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>entropy</em>, generated entropy 32 length.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">generate_entropy</span><span class=\"p\">())</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"fbb9d20ec1fb94762b56dbc9cd184e23\"\n</pre>\n</details>\n<p><strong><code>create()</code></strong>: It is to create new Bytom wallet.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>mnemonic</em>, from mnemonic 12 words.</li>\n<li><code>String</code> - <em>passphrase</em>, password of the key.</li>\n<li><code>String</code> - <em>account</em>, account path index by default 1.</li>\n<li><code>String</code> - <em>change</em>, change path index 0 or 1 by default 0.</li>\n<li><code>String</code> - <em>address</em>, address path index by default 1.</li>\n<li><code>String</code> - <em>path</em>, string of index.</li>\n<li><code>Array</code> - <em>indexes</em>, array of index.</li>\n<li><code>String</code> - <em>network</em>, mainnet(bm)/testnet(tm)/solonet(sm) by default sm.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>object</em>, keys are <code>entropy</code>, <code>mnemonic</code>, <code>address</code>, <code>seed</code>, <code>xprivate</code>, <code>xpublic</code>, <code>program</code> and <code>path</code></li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">mnemonic</span> <span class=\"o\">=</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">generate_mnemonic</span><span class=\"p\">(</span><span class=\"s2\">\"english\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">createdWallet</span> <span class=\"o\">=</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"o\">=</span><span class=\"n\">mnemonic</span><span class=\"p\">,</span> \n                                    <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s2\">\"mainnet\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">createdWallet</span><span class=\"p\">[</span><span class=\"s1\">'address'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">createdWallet</span><span class=\"p\">[</span><span class=\"s1\">'xprivate'</span><span class=\"p\">],</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">createdWallet</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"bm1qsv6u5z2uxtefnehkyuetyx4llu27umqscu8vtk\"\n\"983fc70dc7c4a26ff9af39af4c0cc3057565b8f70a31158a6f37e1804ae6414ea6cade89861c53fafa461e5f0e116f47a816b11ba05585b79c577531c6000ffe\" \n\n{\n  'mnemonic': 'alarm fix day evoke void hawk pistol pulp impact farm average mask',\n  'address': 'bm1qsv6u5z2uxtefnehkyuetyx4llu27umqscu8vtk',\n  'seed': '6e269a33fb2c65b9a1966bc9579628869630d7d647792eaa3692fdae1db1a719ff4dfef17acf6027fb20ba7ce04e4715460ea2d280f69f646df1f2a6ef6ffea1',\n  'xprivate': '983fc70dc7c4a26ff9af39af4c0cc3057565b8f70a31158a6f37e1804ae6414ea6cade89861c53fafa461e5f0e116f47a816b11ba05585b79c577531c6000ffe',\n  'xpublic': '4a7bfcbccbe97aa3f92795c761697f98b6b2350597ab73c85109b025301db1aaa6cade89861c53fafa461e5f0e116f47a816b11ba05585b79c577531c6000ffe',\n  'program': '0014312b5e9ee3625a50847ffd5244dbc0d8f01b8566',\n  'path': 'm/44/153/1/0/1',\n}\n</pre>\n</details>\n<hr>\n<p><strong><code>from_xprivate()</code></strong>: It is to get wallet from xprivate key.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, xprivate key.</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>account</em>, account path index by default 1.</li>\n<li><code>String</code> - <em>change</em>, change path index 0 or 1 by default 0.</li>\n<li><code>String</code> - <em>address</em>, address path index by default 1.</li>\n<li><code>String</code> - <em>path</em>, string of index.</li>\n<li><code>Array</code> - <em>indexes</em>, array of index.</li>\n<li><code>String</code> - <em>network</em>, mainnet(bm)/testnet(tm)/solonet(sm) by default sm.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>object</em>, keys are <code>address</code>, <code>xprivate</code>, <code>xpublic</code>, <code>program</code> and <code>path</code></li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"</span>\n\n<span class=\"n\">wallet_from_xprivate</span> <span class=\"o\">=</span> <span class=\"n\">btmhdw</span><span class=\"o\">.</span><span class=\"n\">from_xprivate</span><span class=\"p\">(</span><span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s2\">\"mainnet\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wallet_from_xprivate</span><span class=\"p\">[</span><span class=\"s1\">'address'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wallet_from_xprivate</span><span class=\"p\">[</span><span class=\"s1\">'xprivate'</span><span class=\"p\">],</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wallet_from_xprivate</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"bm1qtzg058tt5eyf2qqfy2650erxqxhfkt4p236708\"\n\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\" \n\n{\n  'address': 'bm1qtzg058tt5eyf2qqfy2650erxqxhfkt4p236708', \n  'xprivate': 'c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c',\n  'xpublic': '1b0541a7664cee929edb54d9ef21996b90546918a920a77e1cd6015d97c56563d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c',\n  'program': '0014dcf6b21d83c978d3125d1330c928c38fee315200',\n  'path': 'm/44/153/1/0/1',\n}\n</pre>\n</details>\n<hr>\n<h3>Class BytomHDWallet()</h3>\n<p><strong><code>master_key_from_mnemonic()</code></strong>: It is to get master key from mnemonic.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>mnemonic</em>, mnemonic 12 words.</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>passphrase</em>, password of the key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>BytomHDWallet</em>, class.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">MNEMONIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"ancient young hurt bone shuffle deposit congress normal crack six boost despair\"</span>\n\n<span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">BytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">master_key_from_mnemonic</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"o\">=</span><span class=\"n\">MNEMONIC</span><span class=\"p\">,</span> \n                                                       <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s2\">\"Meheret Tesfaye\"</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<p><strong><code>master_key_from_xprivate()</code></strong>: It is to get master key from XPrivate.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, xprivate key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>BytomHDWallet</em>, class.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"</span>\n\n<span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">BytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">master_key_from_xprivate</span><span class=\"p\">(</span><span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<p><strong><code>generate_entropy()</code></strong>: It is to generate new entropy.</p>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>entropy</em>, generated entropy.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">generate_entropy</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">())</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"7184af4506fb1b51c52d2e73251cc3a7\"\n</pre>\n</details>\n<hr>\n<p><strong><code>master_key_from_entropy()</code></strong>: It is to get master key from mnemonic.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>entropy</em>, from entropy.</li>\n<li><code>String</code> - <em>strength</em>, 128.</li>\n<li><code>String</code> - <em>passphrase</em>, password of the key.</li>\n<li><code>String</code> - <em>language</em>, mnemonic language of the key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>BytomHDWallet</em>, class.</li>\n<li><code>String</code> - <em>mnemonic</em>, generated mnemonic 12 words.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">entropy</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">generate_entropy</span><span class=\"p\">()</span>\n\n<span class=\"n\">bytomHDWallet</span><span class=\"p\">,</span> <span class=\"n\">mnemonic</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">master_key_from_entropy</span><span class=\"p\">(</span><span class=\"n\">entropy</span><span class=\"o\">=</span><span class=\"n\">entropy</span><span class=\"p\">,</span>\n                                                                <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s2\">\"meherett\"</span><span class=\"p\">,</span>\n                                                                <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"japanese\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"\u305f\u3044\u3080\u00e3\u0080\u0080\u304a\u307e\u3044\u308a\u00e3\u0080\u0080\u305f\u3093\u3081\u3044\u00e3\u0080\u0080\u304d\u3061\u3087\u3046\u00e3\u0080\u0080\u308d\u3093\u3075\u3099\u3093\u00e3\u0080\u0080\u3044\u306a\u304b\u00e3\u0080\u0080\u3057\u306a\u304d\u3099\u308c\u00e3\u0080\u0080\u307b\u3048\u308b\u00e3\u0080\u0080\u3044\u3082\u3046\u3068\u00e3\u0080\u0080\u3072\u3057\u3087\u00e3\u0080\u0080\u3057\u3099\u3086\u3046\u00e3\u0080\u0080\u306b\u3093\u3080\"\n&lt;btmhdw.BytomHDWallet object at 0x7f3374618cf8&gt;\n</pre>\n</details>\n<hr>\n<p><strong><code>xprivate_key()</code></strong>: It is to get XPrivate key.</p>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, xprivate from master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">MNEMONIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"ancient young hurt bone shuffle deposit congress normal crack six boost despair\"</span>\n\n<span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span>\n<span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">master_key_from_mnemonic</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"o\">=</span><span class=\"n\">MNEMONIC</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_path</span><span class=\"p\">(</span><span class=\"s2\">\"m/44/153/1/0/1\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">xprivate_key</span><span class=\"p\">())</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"302a25c7c0a68a83fa043f594a2db8b44bc871fced553a8a33144b31bc7fb84887c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"\n</pre>\n</details>\n<hr>\n<p><strong><code>xpublic_key()</code></strong>: It is to get XPublic key.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, from xprivate key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>xpublic</em>, xpublic from xprivate/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">xpublic_key</span><span class=\"p\">(</span><span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"302a25c7c0a68a83fa043f594a2db8b44bc871fced553a8a33144b31bc7fb84887c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"\n</pre>\n</details>\n<hr>\n<p><strong><code>expand_xprivate_key()</code></strong>: It is to get Expand XPrivate key.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, from xprivate key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>expandPrivate</em>, expand private key from xprivate/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">expand_xprivate_key</span><span class=\"p\">(</span><span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759b47fcbbf006db960004839862e694fb3647fdc081ae109bbfe3b07de83e39807\"\n</pre>\n</details>\n<hr>\n<p><strong><code>public_key()</code></strong>: It is to get public key(length 64).</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xpublic</em>, from xpublic key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>public</em>, public key(length 64) from xpublic/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">XPUBLIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20c5eebd1c26ccad4de5142d7c339bf62cc1fb79a8b3e42a708cd521368dbc9286\"</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">public_key</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20\"\n</pre>\n</details>\n<hr>\n<p><strong><code>from_indexes()</code></strong>: It is to set collection of index.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Array</code> - <em>indexes</em>, array of index.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>BytomHDWallet</em>, class.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">INDEXES</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'2c000000'</span><span class=\"p\">,</span> <span class=\"s1\">'99000000'</span><span class=\"p\">,</span> <span class=\"s1\">'01000000'</span><span class=\"p\">,</span> <span class=\"s1\">'01000000'</span><span class=\"p\">,</span> <span class=\"s1\">'99000000'</span><span class=\"p\">]</span>\n\n<span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_indexes</span><span class=\"p\">(</span><span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"n\">INDEXES</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<p><strong><code>from_index()</code></strong>: It is to set index.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Number</code> - <em>index</em>, number.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>BytomHDWallet</em>, class.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span>\n\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">44</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">153</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># account</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>  <span class=\"c1\"># change 0 or 1</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># address</span>\n\n<span class=\"c1\"># Advanced BTMHDW_HARDEN</span>\n\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">44</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">153</span> <span class=\"o\">+</span> <span class=\"n\">BTMHDW_HARDEN</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">BTMHDW_HARDEN</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<p><strong><code>from_path()</code></strong>: It is to set index from path.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>path</em>, string of index.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Object</code> - <em>BytomHDWallet</em>, class.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">bytomHDWallet</span> <span class=\"o\">=</span> <span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span>\n\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_path</span><span class=\"p\">(</span><span class=\"s2\">\"m/44/153/1/0/1\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Advanced BTMHDW_HARDEN using \"'\"</span>\n\n<span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">from_path</span><span class=\"p\">(</span><span class=\"s2\">\"m/44/153'/1'/0/1\"</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<p><strong><code>get_indexes()</code></strong>: It is to get collection of index.</p>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Array</code> - <em>indexes</em>, collection of index.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">get_indexes</span><span class=\"p\">())</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>['2c000000', '99000000', '01000000', '01000000', '99000000']\n</pre>\n</details>\n<hr>\n<p><strong><code>get_path()</code></strong>: It is to get path of indexes.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>indexes</em>, from array of index.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>path</em>, string of index from indexes/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">INDEXES</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">get_path</span><span class=\"p\">(</span><span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"n\">INDEXES</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"m/44/153/1/0/1\"\n</pre>\n</details>\n<hr>\n<p><strong><code>child_xprivate_key()</code></strong>: It is to get child of XPrivate key.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, from xprivate key.</li>\n<li><code>String</code> - <em>indexes</em>, collection of index.</li>\n<li><code>String</code> - <em>path</em>, path of index.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>childXPrivate</em>, child xprivate key from xprivate/indexes/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">INDEXES</span>\n\n<span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"c003f4bcccf9ad6f05ad2c84fa5ff98430eb8e73de5de232bc29334c7d074759d513bc370335cac51d77f0be5dfe84de024cfee562530b4d873b5f5e2ff4f57c\"</span>\n\n<span class=\"n\">child_xprivate_key</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">child_xprivate_key</span><span class=\"p\">(</span><span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">,</span>\n                                                      <span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"n\">INDEXES</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">child_xprivate_key</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"d01acc504811886d732ea6ea19c066b0f1fb4d0b2a0b97414d1d3916c70c47596aca269da2343d4d7588ffa3c8b9244a156748276114e5f2b86fa69ec241b62a\"\n</pre>\n</details>\n<hr>\n<p><strong><code>sing()</code></strong>: Singing message.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>message</em>, message to sing.</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xprivate</em>, xprivate key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>signature</em>, signed message.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">MESSAGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"</span>\n\n<span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">MESSAGE</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">signature</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"75ca5b6cf7ba40c7a51f20e1fd03686666e09cf58d0d2978ab6072d8057cbbd3072eabbdefe96eefcbb0c8ec654239b82fa5efcbe24e8704c7d06efd79c40d0a\"\n</pre>\n</details>\n<hr>\n<p><strong><code>verify()</code></strong>: Verifying signed message.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>message</em>, message to sing.</li>\n<li><code>String</code> - <em>signature</em>, signed message.</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xpublic</em>, xpublic key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Boolean</code> - <em>bool</em>, true or false.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">MESSAGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"</span>\n\n<span class=\"n\">verify_signature</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">MESSAGE</span><span class=\"p\">,</span> <span class=\"n\">signature</span><span class=\"o\">=</span><span class=\"n\">signature</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">verify_signature</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre><span class=\"kc\">True</span>\n</pre>\n</details>\n<hr>\n<p><strong><code>child_xpublic_key()</code></strong>: It is to get child of XPublic key.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xpublic</em>, from xpublic key.</li>\n<li><code>String</code> - <em>indexes</em>, collection of index.</li>\n<li><code>String</code> - <em>path</em>, path of index.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>child_xpublic_key</em>, child xpublic key from xpublic/indexes/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">INDEXES</span>\n\n<span class=\"n\">XPUBLIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20c5eebd1c26ccad4de5142d7c339bf62cc1fb79a8b3e42a708cd521368dbc9286\"</span>\n\n<span class=\"n\">child_xpublic_key</span> <span class=\"o\">=</span> <span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">child_xpublic_key</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"n\">INDEXES</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">child_xpublic_key</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"e87ca3acdebdcad9a1d0f2caecf8ce0dbfc73d060807a210c6f2254883479614bcde9cf9e8ee322097d639b33b398c2e419de4092409bf43b3632ddefc4beae9\"\n</pre>\n</details>\n<hr>\n<p><strong><code>program()</code></strong>: It is to get control program.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>xpublic</em>, from xpublic key.</li>\n<li><code>String</code> - <em>path</em>, path of index.</li>\n<li><code>String</code> - <em>indexes</em>, collection of index.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>program</em>, control program from xpublic/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">INDEXES</span><span class=\"p\">,</span> <span class=\"n\">PATH</span>\n\n<span class=\"c1\"># Getting contract Program from xpublic and path or indexes</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">program</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"m/44/153/2/0/8\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">program</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">PATH</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">program</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">,</span> <span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"n\">INDEXES</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">program</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">,</span> <span class=\"n\">indexes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'2c000000'</span><span class=\"p\">,</span> <span class=\"s1\">'99000000'</span><span class=\"p\">,</span> <span class=\"s1\">'01000000'</span><span class=\"p\">,</span> <span class=\"s1\">'01000000'</span><span class=\"p\">,</span> <span class=\"s1\">'01000000'</span><span class=\"p\">]))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">program</span><span class=\"p\">(</span><span class=\"n\">public</span><span class=\"o\">=</span><span class=\"n\">PUBLIC</span><span class=\"p\">))</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"00140afb404c13a122306ee86f5ff9b177334d8e23b7\"\n\"0014052620b86a6d5e07311d5019dffa3864ccc8a6bd\"\n\"00140afb404c13a122306ee86f5ff9b177334d8e23b7\"\n\"0014052620b86a6d5e07311d5019dffa3864ccc8a6bd\"\n\"001478c3aa31753389fcde04d33d0779bdc2840f0ad4\"\n</pre>\n</details>\n<hr>\n<p><strong><code>address()</code></strong>: It is to get address.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>program</em>, from control program.</li>\n<li><code>String</code> - <em>network</em>, mainnet(bm)/testnet(tm)/solonet(sm) by default sm.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>address</em>, address from control program/master key.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">XPUBLIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"3c6664244d2d57168d173c4691dbf8741a67d972b2d3e1b0067eb825e2005d20c5eebd1c26ccad4de5142d7c339bf62cc1fb79a8b3e42a708cd521368dbc9286\"</span>\n\n<span class=\"n\">program</span> <span class=\"o\">=</span> <span class=\"n\">BytomHDWallet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">program</span><span class=\"p\">(</span><span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"m/44/153/2/0/8\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">(</span><span class=\"n\">program</span><span class=\"o\">=</span><span class=\"n\">program</span><span class=\"p\">,</span>\n                            <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'mainnet'</span><span class=\"p\">))</span>  <span class=\"c1\"># or network bm</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">(</span><span class=\"n\">program</span><span class=\"o\">=</span><span class=\"n\">program</span><span class=\"p\">,</span>\n                            <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'testnet'</span><span class=\"p\">))</span>  <span class=\"c1\"># or network tm</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">bytomHDWallet</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">(</span><span class=\"n\">program</span><span class=\"o\">=</span><span class=\"n\">program</span><span class=\"p\">,</span>\n                            <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'solonet'</span><span class=\"p\">))</span>  <span class=\"c1\"># or network sm</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"bm1qpta5qnqn5y3rqmhgda0lnvthxdxcugahcpaum5\"\n\"tm1qpta5qnqn5y3rqmhgda0lnvthxdxcugahuhucm9\"\n\"sm1qpta5qnqn5y3rqmhgda0lnvthxdxcugahesham6\"\n</pre>\n</details>\n<hr>\n<h3>Extra Functions</h3>\n<p><strong><code>sing()</code></strong>: Singing message.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>message</em>, message to sing.</li>\n<li><code>String</code> - <em>xprivate</em>, xprivate key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>signature</em>, signed message.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">sign</span>\n\n<span class=\"n\">MESSAGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"</span>\n<span class=\"n\">XPRIVATE</span> <span class=\"o\">=</span> <span class=\"s2\">\"302a25c7c0a68a83fa043f594a2db8b44bc871fced553a8a33144b31bc7fb84887c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"</span>\n\n<span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">MESSAGE</span><span class=\"p\">,</span> <span class=\"n\">xprivate</span><span class=\"o\">=</span><span class=\"n\">XPRIVATE</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">signature</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>\"a39045f6c8b87b3adce39057e448b37c2300bb3dfce0d8b6034a28bbcccfa4353fc23cb158a310990205fed302bbdfa64255b49f7b1eb2fb502756f164922309\"\n</pre>\n</details>\n<hr>\n<p><strong><code>verify()</code></strong>: Verifying signed message.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>message</em>, message to sing.</li>\n<li><code>String</code> - <em>signature</em>, signed message.</li>\n<li><code>String</code> - <em>xpublic</em>, xpublic key.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>Boolean</code> - <em>bool</em>, true or false.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">btmhdw</span> <span class=\"kn\">import</span> <span class=\"n\">verify</span>\n\n<span class=\"n\">MESSAGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"27c42b40a7a35a6d489fb2e41bde15bdb4b4c276045bd0628525b88c2abbc4c0\"</span>\n<span class=\"n\">SIGNATURE</span> <span class=\"o\">=</span> <span class=\"s2\">\"a39045f6c8b87b3adce39057e448b37c2300bb3dfce0d8b6034a28bbcccfa4353fc23cb158a310990205fed302bbdfa64255b49f7b1eb2fb502756f164922309\"</span>\n<span class=\"n\">XPUBLIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"9407d490e9dbc7762c924122368e6c5743d5829ff2a1e2eb4b219a08e080499687c9e75915bb6ba3fd0b9f94a60b7a5897ab9db6a48f888c2559132dba9152b0\"</span>\n\n<span class=\"n\">verify_signature</span> <span class=\"o\">=</span> <span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">MESSAGE</span><span class=\"p\">,</span> <span class=\"n\">signature</span><span class=\"o\">=</span><span class=\"n\">SIGNATURE</span><span class=\"p\">,</span> <span class=\"n\">xpublic</span><span class=\"o\">=</span><span class=\"n\">XPUBLIC</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">verify_signature</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre><span class=\"kc\">True</span>\n</pre>\n</details>\n\n          </div>"}, "last_serial": 6884257, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "123f1c4184028914c8512c828681d840", "sha256": "56e4adeef254a7e03f4d3b825798fe4ee8c9ce6a96dd86c06f781bac7855e185"}, "downloads": -1, "filename": "btmhdw-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "123f1c4184028914c8512c828681d840", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14738, "upload_time": "2019-06-02T06:17:05", "upload_time_iso_8601": "2019-06-02T06:17:05.292690Z", "url": "https://files.pythonhosted.org/packages/e0/55/72324502c27d74be9fbb2e72b6afab2ad73dd5394ba8fe61820c36fc5e21/btmhdw-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff6f37b8eb8f13aace7d2ef31a587922", "sha256": "d36ccfcc4dcf60590701cc49608579dd7a4d199f39ba88f919cc819c3b0d8c30"}, "downloads": -1, "filename": "btmhdw-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ff6f37b8eb8f13aace7d2ef31a587922", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14638, "upload_time": "2019-06-02T06:17:07", "upload_time_iso_8601": "2019-06-02T06:17:07.592708Z", "url": "https://files.pythonhosted.org/packages/5c/95/453b932cd7d4c718df9aab4d102927e260403f179b3434952cb8c077d621/btmhdw-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ce2f6cfc43509bae9dd49f2bb013c84a", "sha256": "0243b80c710c92ccafeac7ab5f541484afa41d628af1b916bfb4151e59c9c7b5"}, "downloads": -1, "filename": "btmhdw-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce2f6cfc43509bae9dd49f2bb013c84a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14768, "upload_time": "2019-07-31T09:29:11", "upload_time_iso_8601": "2019-07-31T09:29:11.922780Z", "url": "https://files.pythonhosted.org/packages/38/9c/7f272d8686dcd3299e681864e7a7194711ee6164c90105eeeee6e82e9e0f/btmhdw-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0abc8cc145b8f5b2789a7772f667dbb5", "sha256": "bffaf452507c673854a0229284d3a54e2aa51ef7e5b80888ae9f99ddc0f201da"}, "downloads": -1, "filename": "btmhdw-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0abc8cc145b8f5b2789a7772f667dbb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18909, "upload_time": "2019-07-31T09:29:14", "upload_time_iso_8601": "2019-07-31T09:29:14.380137Z", "url": "https://files.pythonhosted.org/packages/5e/ef/6eb4a732d54145bd17af1ede1c7d41083e18b7fadd4ac84f728a5b3032ee/btmhdw-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b75bd34be0c6fbb8c48cb03dc88b0d46", "sha256": "3958e6e8fc2002ea5f0f4b76dbedbf5bd41003c4cefbee402bef393319a8ba50"}, "downloads": -1, "filename": "btmhdw-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b75bd34be0c6fbb8c48cb03dc88b0d46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 14942, "upload_time": "2019-07-31T15:10:19", "upload_time_iso_8601": "2019-07-31T15:10:19.846927Z", "url": "https://files.pythonhosted.org/packages/31/e1/154c6f92781c2864fa455d6de13c304b4c533b9cd9f85155223118b2e5b1/btmhdw-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fc5713783a50b5578cf83f6cfbc6ac2", "sha256": "90a030fc0b7ba9c90bd485b10f3b738ea3ebc60d07ce3c0b2df3fcb0e9854a8e"}, "downloads": -1, "filename": "btmhdw-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4fc5713783a50b5578cf83f6cfbc6ac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 20332, "upload_time": "2019-07-31T15:10:22", "upload_time_iso_8601": "2019-07-31T15:10:22.495797Z", "url": "https://files.pythonhosted.org/packages/b5/63/42dc9c14c8cc213fce653c68a7c6638961bd028d41f28c1ad7de28364b02/btmhdw-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3c61e3fc8fd9ece5f31b3d3bec415022", "sha256": "7ef0b6e902a4ca917f0cf505df0145642386cab40eed683207a3db2cb4ad8cba"}, "downloads": -1, "filename": "btmhdw-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3c61e3fc8fd9ece5f31b3d3bec415022", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 15008, "upload_time": "2019-08-02T06:00:28", "upload_time_iso_8601": "2019-08-02T06:00:28.124177Z", "url": "https://files.pythonhosted.org/packages/ac/c6/a205cc67810d1a0781f35bbc7d52016245c419c02dbeacb9a6098731abf8/btmhdw-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "681534a99ecb1c74b4f85fbbb19810c9", "sha256": "ba52953ecf3517b82323b1b93bf04101a1a8d52167482189bf8cdb2ab74068e6"}, "downloads": -1, "filename": "btmhdw-1.0.2.tar.gz", "has_sig": false, "md5_digest": "681534a99ecb1c74b4f85fbbb19810c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 20481, "upload_time": "2019-08-02T06:00:30", "upload_time_iso_8601": "2019-08-02T06:00:30.767265Z", "url": "https://files.pythonhosted.org/packages/96/0c/53aca1ae559477aaaedd1e7c63ac4065339aa45513214e53223f638780df/btmhdw-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "48e121c7661a11d6cea8a047b6b83979", "sha256": "aa282955bdf6230e3e1a71d16ea66d4552651fb0f6b53c2b4491b7ba3a0f421e"}, "downloads": -1, "filename": "btmhdw-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "48e121c7661a11d6cea8a047b6b83979", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 15117, "upload_time": "2019-08-20T15:39:23", "upload_time_iso_8601": "2019-08-20T15:39:23.883607Z", "url": "https://files.pythonhosted.org/packages/3a/2d/73c4f9f4f81207002f85fc2a9e777659f8accb6d2eb87d692be614894955/btmhdw-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89aae76030fd13c2193b16b2c148cd7b", "sha256": "c49b646b3f51cbcbe521de622dfc990c942ffdc73d9389205fe9d25f34edee21"}, "downloads": -1, "filename": "btmhdw-1.0.3.tar.gz", "has_sig": false, "md5_digest": "89aae76030fd13c2193b16b2c148cd7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 20712, "upload_time": "2019-08-20T15:39:26", "upload_time_iso_8601": "2019-08-20T15:39:26.506780Z", "url": "https://files.pythonhosted.org/packages/af/c3/f96843bf2ecde2dbda303af4f254a1a1cee80ebc1a8f3fc64e87a2c1544c/btmhdw-1.0.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "1898ebd08b30676fa6ef2cf6c7e1cc5f", "sha256": "8fdcce09273def58746ea5ed61388881ebb4244e390aeb1a0ec0c36dc6e63ce7"}, "downloads": -1, "filename": "btmhdw-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1898ebd08b30676fa6ef2cf6c7e1cc5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17604, "upload_time": "2020-01-07T17:58:58", "upload_time_iso_8601": "2020-01-07T17:58:58.870697Z", "url": "https://files.pythonhosted.org/packages/c1/0a/38e4231114f85f552f292013c4a37def21133b7c713865d74fb73f5700a3/btmhdw-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf415b388780c879955a742fa1694ece", "sha256": "00e3f5dfa2f8df5abf741c26a769af122c9502759d4ecdf33e0ed932342eb2f7"}, "downloads": -1, "filename": "btmhdw-2.0.0.tar.gz", "has_sig": false, "md5_digest": "bf415b388780c879955a742fa1694ece", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 23085, "upload_time": "2020-01-07T17:59:04", "upload_time_iso_8601": "2020-01-07T17:59:04.738099Z", "url": "https://files.pythonhosted.org/packages/f7/40/9e2a17d5388f751e0daa976cae5113f518bdb52a1269a8ff1e4c6c99d179/btmhdw-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "033224f2c3034d2fb1e9c0ee5e2bbe16", "sha256": "8de0f59278bb2d1ff8a5b58b158a1691f3d27e20ed0466dffee539d16050fe3c"}, "downloads": -1, "filename": "btmhdw-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "033224f2c3034d2fb1e9c0ee5e2bbe16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17637, "upload_time": "2020-01-09T05:42:17", "upload_time_iso_8601": "2020-01-09T05:42:17.437365Z", "url": "https://files.pythonhosted.org/packages/c3/12/15e9afd28e7ad0ddf5f1598dd3395387b69e4233aa68515b40cdf7547f41/btmhdw-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8453fca8cca012c577603caf9bc6df6b", "sha256": "91be7747b869555d0f5c59137ec8bc5ec5323669a131a4a9981960b7c7ade03e"}, "downloads": -1, "filename": "btmhdw-2.1.0.tar.gz", "has_sig": false, "md5_digest": "8453fca8cca012c577603caf9bc6df6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 23124, "upload_time": "2020-01-09T05:42:21", "upload_time_iso_8601": "2020-01-09T05:42:21.751433Z", "url": "https://files.pythonhosted.org/packages/8b/5f/50205a442fe0b2585cf0b11e9c02e0cd471909c42a5650ceb7deca5abbcc/btmhdw-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "7be3b07e06aec14e9e24eccb67b3139b", "sha256": "fc6cd35b190f6648c3ab1ca8cc7f548fe3872a57409294506f7ade5de1d1d0fb"}, "downloads": -1, "filename": "btmhdw-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7be3b07e06aec14e9e24eccb67b3139b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17629, "upload_time": "2020-01-09T05:56:21", "upload_time_iso_8601": "2020-01-09T05:56:21.823585Z", "url": "https://files.pythonhosted.org/packages/53/11/9a2ec31e8709204de8b24241e57e9d630097f716455f446a566c44aa5d71/btmhdw-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87862b4e30bc60e39fb4a410de29238a", "sha256": "1aad631b8a26eb8196fe3426bad5a513478e2c28ea8aacfae40a82143f4aee1a"}, "downloads": -1, "filename": "btmhdw-2.1.1.tar.gz", "has_sig": false, "md5_digest": "87862b4e30bc60e39fb4a410de29238a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 23102, "upload_time": "2020-01-09T05:56:34", "upload_time_iso_8601": "2020-01-09T05:56:34.649976Z", "url": "https://files.pythonhosted.org/packages/46/dd/b6de91f4794927941c4fe3cbf1bf630e4da4f597427d3d25eb3b604ed947/btmhdw-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "a6a47d5b9c0cd393ff9305a7a0765363", "sha256": "9d5334b389ea1fb65cc651e8cbb7faad717ae2d4d4a4a9a85ffe1484e824fd87"}, "downloads": -1, "filename": "btmhdw-2.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a6a47d5b9c0cd393ff9305a7a0765363", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17645, "upload_time": "2020-01-10T09:13:43", "upload_time_iso_8601": "2020-01-10T09:13:43.041551Z", "url": "https://files.pythonhosted.org/packages/52/98/cdb34d4c13755094dd9c3d510166547feee6e003acc61ac1b08d1676b87f/btmhdw-2.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d1a13911345d214e17950656ac53e80", "sha256": "cac27128f76023c091615e5b18b88c50a9a7551c43f10c2f69b3c18c624d227c"}, "downloads": -1, "filename": "btmhdw-2.1.2.tar.gz", "has_sig": false, "md5_digest": "6d1a13911345d214e17950656ac53e80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 23136, "upload_time": "2020-01-10T09:13:47", "upload_time_iso_8601": "2020-01-10T09:13:47.033093Z", "url": "https://files.pythonhosted.org/packages/28/4d/fd3c8ec0e6219f790667bf42c29630f9c1341b4262f7b2d4bf5b5b52021d/btmhdw-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "fed487c14524045aebd7d907428150ac", "sha256": "3e12c11821f541dfc9e0a944d9d8c113726e89666b6b63bfa062e5ec4b299a0a"}, "downloads": -1, "filename": "btmhdw-2.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fed487c14524045aebd7d907428150ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17618, "upload_time": "2020-01-10T18:24:58", "upload_time_iso_8601": "2020-01-10T18:24:58.194783Z", "url": "https://files.pythonhosted.org/packages/ae/57/0b417b90d6d8720ad91ac7ae4c9c280b8815b1a120e4602e88068ad6627f/btmhdw-2.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "083ab76ef79c48e8ba9ee07eb8a0cc3f", "sha256": "64090e80959c9ebb7d4a75a08ced8a233357c4d3cc31f4454f7b1131d88fa397"}, "downloads": -1, "filename": "btmhdw-2.1.3.tar.gz", "has_sig": false, "md5_digest": "083ab76ef79c48e8ba9ee07eb8a0cc3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 23071, "upload_time": "2020-01-10T18:25:03", "upload_time_iso_8601": "2020-01-10T18:25:03.172467Z", "url": "https://files.pythonhosted.org/packages/98/3b/76595dbd2aa9c8f8be6c3dcc7c6e2fbcd20fd275a8592743a3c121a07f0e/btmhdw-2.1.3.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "c0fb5bddb08e53ef0359c1f859f25104", "sha256": "0624d3bf4b44299f84e7ccc191c28ccc6f65b523abf987dd225757f4031cba01"}, "downloads": -1, "filename": "btmhdw-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c0fb5bddb08e53ef0359c1f859f25104", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17601, "upload_time": "2020-02-26T17:55:08", "upload_time_iso_8601": "2020-02-26T17:55:08.370784Z", "url": "https://files.pythonhosted.org/packages/41/ec/fcca8d86a9c478979c867a04fe591d5d9f7e937e56238b64664a5da0ac89/btmhdw-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db77417af4719445538382c21121a482", "sha256": "ddb857a35e2d476081d9d4f946433d8fa34eafac3a7e082da23d14a5b167ff7f"}, "downloads": -1, "filename": "btmhdw-2.2.0.tar.gz", "has_sig": false, "md5_digest": "db77417af4719445538382c21121a482", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 24136, "upload_time": "2020-02-26T17:55:12", "upload_time_iso_8601": "2020-02-26T17:55:12.343129Z", "url": "https://files.pythonhosted.org/packages/5f/0a/85055c7b40f421b851f8e22e1d1df8fceacaf499b933eda003330f365185/btmhdw-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "ceca68d30cef49d96751212537a8da5e", "sha256": "2b8c779578336cc0d92eef399f48bb5c81f4fb0fa1362615c4917aa5f9066ff4"}, "downloads": -1, "filename": "btmhdw-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ceca68d30cef49d96751212537a8da5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 17599, "upload_time": "2020-02-26T18:02:41", "upload_time_iso_8601": "2020-02-26T18:02:41.567340Z", "url": "https://files.pythonhosted.org/packages/92/5b/ade66fb56d27037afba0226112e781a82a76b16602518628fd5fc16e11cc/btmhdw-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "772adac5a6701c3ee04ff34ce1e88be0", "sha256": "e89e5b7412c65a15d9a85d07e1c6c3e0e3df5b908be88c9c940639881bf6e975"}, "downloads": -1, "filename": "btmhdw-2.2.1.tar.gz", "has_sig": false, "md5_digest": "772adac5a6701c3ee04ff34ce1e88be0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 24135, "upload_time": "2020-02-26T18:02:45", "upload_time_iso_8601": "2020-02-26T18:02:45.706197Z", "url": "https://files.pythonhosted.org/packages/68/c8/d501abfe21e9c251165d625b3eb1ea706b02583aa1fda1c565248782f9ff/btmhdw-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "f126249bf3184cd37079ef0f372746cd", "sha256": "d4fb3ae4a25f21c318ad3daafe57677f0e2e8144606f4736d3f9230969bf8d3b"}, "downloads": -1, "filename": "btmhdw-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f126249bf3184cd37079ef0f372746cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 21350, "upload_time": "2020-03-25T19:59:39", "upload_time_iso_8601": "2020-03-25T19:59:39.782565Z", "url": "https://files.pythonhosted.org/packages/1a/1d/7a388721d1eb5bf55013ae82d5ac067ae62edd4013969ab0e158aee8c8d3/btmhdw-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebe1b8f9f6c1aa1c4b29822274f9a6c1", "sha256": "841665a12295f19d0ae7039d3443d79de2b7533271167f537c872545eef8ffc3"}, "downloads": -1, "filename": "btmhdw-2.2.2.tar.gz", "has_sig": false, "md5_digest": "ebe1b8f9f6c1aa1c4b29822274f9a6c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 27743, "upload_time": "2020-03-25T19:59:44", "upload_time_iso_8601": "2020-03-25T19:59:44.382202Z", "url": "https://files.pythonhosted.org/packages/23/a1/2528df721c2ac9d742bb4a31bd38de8256f5c38da93c8ae44f48afe4644a/btmhdw-2.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f126249bf3184cd37079ef0f372746cd", "sha256": "d4fb3ae4a25f21c318ad3daafe57677f0e2e8144606f4736d3f9230969bf8d3b"}, "downloads": -1, "filename": "btmhdw-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f126249bf3184cd37079ef0f372746cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4", "size": 21350, "upload_time": "2020-03-25T19:59:39", "upload_time_iso_8601": "2020-03-25T19:59:39.782565Z", "url": "https://files.pythonhosted.org/packages/1a/1d/7a388721d1eb5bf55013ae82d5ac067ae62edd4013969ab0e158aee8c8d3/btmhdw-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebe1b8f9f6c1aa1c4b29822274f9a6c1", "sha256": "841665a12295f19d0ae7039d3443d79de2b7533271167f537c872545eef8ffc3"}, "downloads": -1, "filename": "btmhdw-2.2.2.tar.gz", "has_sig": false, "md5_digest": "ebe1b8f9f6c1aa1c4b29822274f9a6c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4", "size": 27743, "upload_time": "2020-03-25T19:59:44", "upload_time_iso_8601": "2020-03-25T19:59:44.382202Z", "url": "https://files.pythonhosted.org/packages/23/a1/2528df721c2ac9d742bb4a31bd38de8256f5c38da93c8ae44f48afe4644a/btmhdw-2.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:09 2020"}