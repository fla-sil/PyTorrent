{"info": {"author": "Brad Reisfeld", "author_email": "brad.reisfeld@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering", "Topic :: Utilities"], "description": "clplot\n======\n\n`clplot` is a command line utility to create plots and pages of plots from\ncsv-like files.\n\nIt is a thin wrapper over matplotlib with a few conveniences built in.\n\n\t\nRationale\n=========\n\nIf you find yourself opening a csv file in a spreadsheet-like program to quickly plot and visualize your results, `clplot` may be a useful alternative for you. \n\nIt allows you to get summary information about columns in your dataset, plot given variables, plot all variables, and specify the manner in which plots (or pages of plots) are formatted.\n\n\nInstallation\n============\n\n::\n\n    $ pip install git+https://breisfeld@github.com/breisfeld/clplot.git\n\n\t\nDependencies\n------------\n\n-  numpy\n-  matplotlib\t\n\t\nUsage\n=====\n\n\t\nExamples\n--------\n\nAssume that the data file is named `myfile.csv` and that it has a header\nrow with the names of the columns. Each subsequent row is assumed to\nhave numerical values corresponding to the header field names. For the\nexamples below, the header would have, at least, the field names (column\nheaders) `y1`, `y2`, `y3`, `y4`, `y5`, and `v1`.\n\n*Show the help:*\n\n::\n\n    $ clplot-script.py -h\n\n*Don't make any plots; just list all of the column names that are present in the data\nfile:*\n\n::\n  \n    $ clplot-script.py -l myfile.csv\n\n*Don't make any plots; just list some statistics and information about columns 'y1' and\n'y2':*\n\n::\n\n    $ clplot-script.py -i -c y1 -c y2 myfile.csv\n\n*Plot all of the columns in the file using the default independent variable (the one in the first column):*\n\n::\n\n    $ clplot-script.py myfile.csv\n\n*Plot just the columns 'y1' and 'y2' and use 'v1' as the independent\nvariable:*\n\n::\n\n    $ clplot-script.py -c y1 -c y2 -x v1 myfile.csv\n\n*Plot all of the columns except 'y3' and 'y4', put 12 plots on each\nfigure, and make the axis font size large:*\n\n::\n\n    $ clplot-script.py  -e y3 -e y4 -n 12 --fontsize=20.0 myfile.csv\n\n*Plot columns matching the regular expression 'y.*\\ (1\\|5)' and put nine plots on each figure:\\*\n\n::\n\n    $ clplot-script.py -n 9 -cr 'y.*(1|5)' myfile.csv\n\n*(The regular expression may need different quoting, depending on the OS\nor shell)*\n\n*Plot all of the data columns using red, dashed, thick lines:*\n\n::\n\n    $ clplot-script.py --linecolor='red' --linestyle='--' --linewidth=5 myfile.csv\n\n*Plot all of the data except those column names matching the regular\nexpression '.*\\ y.\\ *1', and assume that the entries in the file are\nseparated by tabs instead of commas:*\n\n::\n\n    $ clplot-script.py -er '.*y.*1' -d '\\t' myfile.csv\n\n\t\nOn Windows, use `clplot.exe` instead of `clplot-script.py` in the\nlines above.\n\n\nLicense\n=======\n\nThis program is freely available for anyone to use under an MIT license.\nPlease consult the MIT-LICENSE file.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/breisfeld/clplot", "keywords": "plotting,matplotlib", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "clplot", "package_url": "https://pypi.org/project/clplot/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/clplot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/breisfeld/clplot"}, "release_url": "https://pypi.org/project/clplot/0.2.1a0/", "requires_dist": null, "requires_python": null, "summary": "clplot is a command line utility to create plots and pages of plots from csv-like files.", "version": "0.2.1a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"clplot\">\n<h2>clplot</h2>\n<p><cite>clplot</cite> is a command line utility to create plots and pages of plots from\ncsv-like files.</p>\n<p>It is a thin wrapper over matplotlib with a few conveniences built in.</p>\n</div>\n<div id=\"rationale\">\n<h2>Rationale</h2>\n<p>If you find yourself opening a csv file in a spreadsheet-like program to quickly plot and visualize your results, <cite>clplot</cite> may be a useful alternative for you.</p>\n<p>It allows you to get summary information about columns in your dataset, plot given variables, plot all variables, and specify the manner in which plots (or pages of plots) are formatted.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install git+https://breisfeld@github.com/breisfeld/clplot.git\n</pre>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<ul>\n<li>numpy</li>\n<li>matplotlib</li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<h2 id=\"examples\"><span class=\"section-subtitle\">Examples</span></h2>\n<p>Assume that the data file is named <cite>myfile.csv</cite> and that it has a header\nrow with the names of the columns. Each subsequent row is assumed to\nhave numerical values corresponding to the header field names. For the\nexamples below, the header would have, at least, the field names (column\nheaders) <cite>y1</cite>, <cite>y2</cite>, <cite>y3</cite>, <cite>y4</cite>, <cite>y5</cite>, and <cite>v1</cite>.</p>\n<p><em>Show the help:</em></p>\n<pre>$ clplot-script.py -h\n</pre>\n<p><em>Don\u2019t make any plots; just list all of the column names that are present in the data\nfile:</em></p>\n<pre>$ clplot-script.py -l myfile.csv\n</pre>\n<p><em>Don\u2019t make any plots; just list some statistics and information about columns \u2018y1\u2019 and\n\u2018y2\u2019:</em></p>\n<pre>$ clplot-script.py -i -c y1 -c y2 myfile.csv\n</pre>\n<p><em>Plot all of the columns in the file using the default independent variable (the one in the first column):</em></p>\n<pre>$ clplot-script.py myfile.csv\n</pre>\n<p><em>Plot just the columns \u2018y1\u2019 and \u2018y2\u2019 and use \u2018v1\u2019 as the independent\nvariable:</em></p>\n<pre>$ clplot-script.py -c y1 -c y2 -x v1 myfile.csv\n</pre>\n<p><em>Plot all of the columns except \u2018y3\u2019 and \u2018y4\u2019, put 12 plots on each\nfigure, and make the axis font size large:</em></p>\n<pre>$ clplot-script.py  -e y3 -e y4 -n 12 --fontsize=20.0 myfile.csv\n</pre>\n<p><em>Plot columns matching the regular expression \u2018y.</em>(1|5)\u2019 and put nine plots on each figure:*</p>\n<pre>$ clplot-script.py -n 9 -cr 'y.*(1|5)' myfile.csv\n</pre>\n<p><em>(The regular expression may need different quoting, depending on the OS\nor shell)</em></p>\n<p><em>Plot all of the data columns using red, dashed, thick lines:</em></p>\n<pre>$ clplot-script.py --linecolor='red' --linestyle='--' --linewidth=5 myfile.csv\n</pre>\n<p><em>Plot all of the data except those column names matching the regular\nexpression \u2018.</em>y.<em>1\u2019, and assume that the entries in the file are\nseparated by tabs instead of commas:</em></p>\n<pre>$ clplot-script.py -er '.*y.*1' -d '\\t' myfile.csv\n</pre>\n<p>On Windows, use <cite>clplot.exe</cite> instead of <cite>clplot-script.py</cite> in the\nlines above.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This program is freely available for anyone to use under an MIT license.\nPlease consult the MIT-LICENSE file.</p>\n</div>\n\n          </div>"}, "last_serial": 904812, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "6217f22f73c0fc06a76dac0d24b5d21e", "sha256": "d574131b58c652a0cf40a900af4881203d31d810f692020c3ae44422682c0a01"}, "downloads": -1, "filename": "clplot-0.1a0.zip", "has_sig": false, "md5_digest": "6217f22f73c0fc06a76dac0d24b5d21e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10832, "upload_time": "2013-10-21T05:40:29", "upload_time_iso_8601": "2013-10-21T05:40:29.243114Z", "url": "https://files.pythonhosted.org/packages/b2/d2/e3d6c67a239f42a626eaede8671730c644e6acf7894cbee27763a509137f/clplot-0.1a0.zip", "yanked": false}], "0.2.1a0": [{"comment_text": "", "digests": {"md5": "49b1662e91a7dacef998ef901becfc80", "sha256": "f8bd3a1bf3218e00ac3b7b359108fafe0543c7a04fa2db832c5b36e585762b1e"}, "downloads": -1, "filename": "clplot-0.2.1a0.zip", "has_sig": false, "md5_digest": "49b1662e91a7dacef998ef901becfc80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11298, "upload_time": "2013-10-28T02:23:30", "upload_time_iso_8601": "2013-10-28T02:23:30.786008Z", "url": "https://files.pythonhosted.org/packages/a4/e2/b4f63edba00d5e6d532c9f4c1ecf987dfcacb27bb8aac3e4fe5c5c830975/clplot-0.2.1a0.zip", "yanked": false}], "0.2a0": [{"comment_text": "", "digests": {"md5": "b97de067c3d60ed523ed96585a8957b3", "sha256": "a1746a1041ba298df9dabe4d14f8eba4beb5825b077ed128b385e62b977a09a7"}, "downloads": -1, "filename": "clplot-0.2a0.zip", "has_sig": false, "md5_digest": "b97de067c3d60ed523ed96585a8957b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11464, "upload_time": "2013-10-28T00:10:41", "upload_time_iso_8601": "2013-10-28T00:10:41.309895Z", "url": "https://files.pythonhosted.org/packages/6d/6a/166513ab8e87b8f700c6be473b23b53556686122cbf4735bbc53f1346cb0/clplot-0.2a0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49b1662e91a7dacef998ef901becfc80", "sha256": "f8bd3a1bf3218e00ac3b7b359108fafe0543c7a04fa2db832c5b36e585762b1e"}, "downloads": -1, "filename": "clplot-0.2.1a0.zip", "has_sig": false, "md5_digest": "49b1662e91a7dacef998ef901becfc80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11298, "upload_time": "2013-10-28T02:23:30", "upload_time_iso_8601": "2013-10-28T02:23:30.786008Z", "url": "https://files.pythonhosted.org/packages/a4/e2/b4f63edba00d5e6d532c9f4c1ecf987dfcacb27bb8aac3e4fe5c5c830975/clplot-0.2.1a0.zip", "yanked": false}], "timestamp": "Thu May  7 22:18:41 2020"}