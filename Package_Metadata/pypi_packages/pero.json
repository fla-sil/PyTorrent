{"info": {"author": "Martin Strohalm", "author_email": "pero@bymartin.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Scientific/Engineering"], "description": "# Pero\n\nThe main motivation behind the *pero* library is to provide unified API for multiple drawing backends like\n[PyQt5](https://pypi.org/project/PyQt5/), [wxPython](https://pypi.org/project/wxPython/),\n[PyCairo](https://pypi.org/project/pycairo/), [PyMuPDF](https://pypi.org/project/PyMuPDF/),\n[Pythonista](http://omz-software.com/pythonista/) (and possibly more), which is easy to understand and use. Beside the\ncommon drawing capabilities, numerous pre-build glyphs are available, as well as an easy to use path, matrix\ntransformations etc. Depending on available backend libraries, drawings can be viewed directly or exported into various\nimage formats.\n\nEver since I discovered the wonderful [d3js](https://d3js.org) JavaScript library, I wanted to have the same amazing\nconcept of dynamic properties within Python drawings. In fact, this has been the trigger to start working on the *pero*\nlibrary. Finally, it is now available.\n\nPlease see the *examples* folder or in-code documentation of classes and functions to learn more about the *pero*\nlibrary capabilities.\n\n\n```python\n\nimport pero\n\nimg = pero.Image(width=200, height=200)\n\nimg.line_cap = pero.ROUND\nimg.line_join = pero.ROUND\n\n# fill\nimg.fill(\"w\")\n\n# body\nimg.line_width = 2\nimg.line_color = pero.colors.Orange.darker(.1)\nimg.fill_color = pero.colors.Orange\nimg.draw_circle(100, 100, 75)\n\n# shadow\nimg.line_color = None\nimg.fill_color = pero.colors.White.darker(.1)\nimg.draw_ellipse(100, 185, 70, 10)\n\n# eyes\nimg.fill_color = pero.colors.Black\nimg.draw_circle(70, 85, 15)\nimg.draw_circle(130, 85, 15)\n\n# eyebrows\nimg.line_color = pero.colors.Black\nimg.fill_color = None\nimg.line_width = 3\nimg.draw_arc(70, 85, 23, pero.rads(-100), pero.rads(-20))\nimg.draw_arc(130, 85, 23, pero.rads(200), pero.rads(280))\n\n# mouth\nimg.line_width = 5\nimg.draw_arc(100, 100, 50, pero.rads(40), pero.rads(80))\n\n# highlight\nimg.line_color = pero.colors.Orange.lighter(.3)\nimg.draw_arc(100, 100, 68, pero.rads(220), pero.rads(260))\n\n# hat\npath = pero.Path(pero.WINDING)\npath.ellipse(100, 27, 40, 10)\npath.ellipse(100, 17, 30, 10)\npath.rect(85, 17, 30, 10)\n\nmat = pero.Matrix().rotate(pero.rads(20), 100, 100)\npath.transform(mat)\n\nimg.line_color = None\nimg.fill_color = pero.colors.Black\nimg.draw_path(path)\n\n# show image\nimg.show()\n```\n\n![Final Image](https://raw.githubusercontent.com/xxao/pero/master/examples/drawing/image.png)\n\n\n## Requirements\n\n- [Python 3.6+](https://www.python.org)\n- [Numpy](https://pypi.org/project/numpy/)\n- [PIL (Pillow)](https://pypi.org/project/Pillow/)\n\n\n## Supported Backends\n\n- [PyQt5](https://pypi.org/project/PyQt5/)\n- [wxPython](https://pypi.org/project/wxPython/)\n- [PyCairo](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pycairo)\n- [PyMuPDF](https://pypi.org/project/PyMuPDF/)\n- [Pythonista iOS App](http://omz-software.com/pythonista/)\n\n\n## Installation\n\nThe *pero* library is fully implemented in Python. No additional compiler is necessary. After downloading the source\ncode just run the following command from the *pero* folder:\n\n```$ python setup.py install```\n\nor simply use pip\n\n```$ pip install pero```\n\n\n## Disclaimer\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\nwarranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nPlease note that the *pero* library is still in an alpha state. Any changes in its API may occur.\n\n\n## Examples\n\n\n### Using default backend\n\nIf you just want to draw an image using whatever the default backend is (for requested format), or show the image\ndirectly (requires [PyQt5](https://pypi.org/project/PyQt5/), [wxPython](https://pypi.org/project/wxPython/) or\n[Pythonista iOS App](http://omz-software.com/pythonista/)), just create an *image* and use it as any other *pero* canvas:\n\n```python\n\nimport pero\n\n# init size\nwidth = 200\nheight = 200\n\n# init image\nimg = pero.Image(width=width, height=height)\n\n# draw graphics\nimg.line_color = \"b\"\nimg.fill_color = \"w\"\nimg.fill()\nimg.draw_circle(100, 100, 75)\n\n# save to file\nimg.export('image.png')\n\n# show in viewer\nimg.show()\n```\n\n### Using PyQt5\n\nInside a *QWidget* you can create a *QPainter* and encapsulate it into the *pero* canvas:\n\n```python\n\nimport pero\nfrom PyQt5.QtGui import QPainter\n\n# init size\nwidth = 200\nheight = 200\n\n# init painter\nqp = QPainter()\nqp.begin(self)\nqp.setRenderHint(QPainter.Antialiasing)\n\n# init canvas\ncanvas = pero.qt.QtCanvas(qp, width=width, height=height)\n\n# draw graphics\ncanvas.line_color = \"b\"\ncanvas.fill_color = \"w\"\ncanvas.fill()\ncanvas.draw_circle(100, 100, 75)\n\n# end drawing\nqp.end()\n```\n\n\n### Using wxPython\n\nInside a *wxApp* you can use just about any *wxDC* you want and encapsulate it into the *pero* canvas:\n\n```python\n\nimport pero\nimport wx\n\n# init size\nwidth = 200\nheight = 200\n\n# create DC\nbitmap = wx.Bitmap(width, height)\ndc = wx.MemoryDC()\ndc.SelectObject(bitmap)\n\n# use GCDC\nif 'wxMac' not in wx.PlatformInfo:\n    dc = wx.GCDC(dc)\n\n# init canvas\ncanvas = pero.wx.WXCanvas(dc, width=width, height=height)\n\n# draw graphics\ncanvas.line_color = \"b\"\ncanvas.fill_color = \"w\"\ncanvas.fill()\ncanvas.draw_circle(100, 100, 75)\n```\n\n### Using PyCairo\n\nDepending on the final image format, choose appropriate *cairo* surface, get the drawing context and encapsulate it into\nthe *pero* canvas:\n\n```python\n\nimport pero\nimport cairo\n\n# init size\nwidth = 200\nheight = 200\n\n# create cairo drawing context\nsurface = cairo.PSSurface('image.eps', width, height)\ndc = cairo.Context(surface)\n\n# init canvas\ncanvas = pero.cairo.CairoCanvas(dc, width=width, height=height)\n\n# draw graphics\ncanvas.line_color = \"b\"\ncanvas.fill_color = \"w\"\ncanvas.fill()\ncanvas.draw_circle(100, 100, 75)\n\n# save to file\ndc.show_page()\n```\n\n### Using PyMuPDF\n\nCreate a document, add new page and encapsulate it into the *pero* canvas:\n\n```python\n\nimport pero\nimport fitz\n\n# init size\nwidth = 200\nheight = 200\n\n# init document\ndoc = fitz.open()\npage = doc.newPage(width=width, height=height)\n\n# init canvas\ncanvas = pero.mupdf.MuPDFCanvas(page)\n\n# draw graphics\ncanvas.line_color = \"b\"\ncanvas.fill_color = \"w\"\ncanvas.fill()\ncanvas.draw_circle(100, 100, 75)\n\n# save to file\ndoc.save('image.pdf')\ndoc.close()\n```\n\n### Using SVG\n\nThe *pero* library implements its own way to draw and save SVG files Just create a *pero* canvas:\n\n```python\n\nimport pero\n\n# init size\nwidth = 200\nheight = 200\n\n# init canvas\ncanvas = pero.svg.SVGCanvas(width=width, height=height)\n\n# draw graphics\ncanvas.line_color = \"b\"\ncanvas.fill_color = \"w\"\ncanvas.fill()\ncanvas.draw_circle(100, 100, 75)\n\n# save to file\nwith open('test.svg', 'w', encoding='utf-8') as f:\n    f.write(canvas.get_xml())\n```\n\n### Using Pythonista\n\nInitialize a new *ui.ImageContext* and create a *pero* canvas:\n\n```python\n\nimport pero\nimport ui\n\n# init size\nwidth = 200\nheight = 200\n\n# open context\nwith ui.ImageContext(width, height) as ctx:\n\n    # init canvas\n    canvas = pero.pythonista.UICanvas(width=width, height=height)\n\n    # draw graphics\n    canvas.line_color = \"b\"\n    canvas.fill_color = \"w\"\n    canvas.fill()\n    canvas.draw_circle(100, 100, 75)\n\n    # show image\n    img = ctx.get_image()\n    img.show()\n```\n\n### Using glyphs and dynamic properties\n\nSimilar to [d3js](https://d3js.org>) JavaScript library, most of the properties of pre-build *pero.Glyphs* objects can\nbe specified as a function, to which given data source is automatically provided. Together with *pero.scales* (and maybe\nthe *pero.Axis)* this can be used to make simple plots easily.\n\n```python\n\nimport pero\nimport numpy\n\n# init size\nwidth = 400\nheight = 300\npadding = 50\n\n# init data\nx_data = numpy.linspace(-numpy.pi, numpy.pi, 50)\ny_data = numpy.sin(x_data)\n\n# init scales\nx_scale = pero.LinScale(\n    in_range = (min(x_data), max(x_data)),\n    out_range = (padding, width-padding))\n\ny_scale = pero.LinScale(\n    in_range = (-1, 1),\n    out_range = (height-padding, padding))\n\ncolor_scale = pero.GradientScale(\n    in_range = (-1, 1),\n    out_range = pero.colors.Spectral)\n\n# init marker\nmarker = pero.Circle(\n    size = 8,\n    x = lambda d: x_scale.scale(d[0]),\n    y = lambda d: y_scale.scale(d[1]),\n    line_color = lambda d: color_scale.scale(d[1]).darker(.2),\n    fill_color = lambda d: color_scale.scale(d[1]))\n\n# init image\nimage = pero.Image(width=width, height=height)\n\n# fill\nimage.fill(\"w\")\n\n# draw points\nmarker.draw_many(image, zip(x_data, y_data))\n\n# show image\nimage.show()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xxao/pero", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pero", "package_url": "https://pypi.org/project/pero/", "platform": "", "project_url": "https://pypi.org/project/pero/", "project_urls": {"Homepage": "https://github.com/xxao/pero"}, "release_url": "https://pypi.org/project/pero/0.14.0/", "requires_dist": ["numpy", "Pillow"], "requires_python": "", "summary": "Draw consistently with various backends", "version": "0.14.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pero</h1>\n<p>The main motivation behind the <em>pero</em> library is to provide unified API for multiple drawing backends like\n<a href=\"https://pypi.org/project/PyQt5/\" rel=\"nofollow\">PyQt5</a>, <a href=\"https://pypi.org/project/wxPython/\" rel=\"nofollow\">wxPython</a>,\n<a href=\"https://pypi.org/project/pycairo/\" rel=\"nofollow\">PyCairo</a>, <a href=\"https://pypi.org/project/PyMuPDF/\" rel=\"nofollow\">PyMuPDF</a>,\n<a href=\"http://omz-software.com/pythonista/\" rel=\"nofollow\">Pythonista</a> (and possibly more), which is easy to understand and use. Beside the\ncommon drawing capabilities, numerous pre-build glyphs are available, as well as an easy to use path, matrix\ntransformations etc. Depending on available backend libraries, drawings can be viewed directly or exported into various\nimage formats.</p>\n<p>Ever since I discovered the wonderful <a href=\"https://d3js.org\" rel=\"nofollow\">d3js</a> JavaScript library, I wanted to have the same amazing\nconcept of dynamic properties within Python drawings. In fact, this has been the trigger to start working on the <em>pero</em>\nlibrary. Finally, it is now available.</p>\n<p>Please see the <em>examples</em> folder or in-code documentation of classes and functions to learn more about the <em>pero</em>\nlibrary capabilities.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_cap</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">ROUND</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_join</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">ROUND</span>\n\n<span class=\"c1\"># fill</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"s2\">\"w\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># body</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_width</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Orange</span><span class=\"o\">.</span><span class=\"n\">darker</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Orange</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># shadow</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">White</span><span class=\"o\">.</span><span class=\"n\">darker</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_ellipse</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">185</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># eyes</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Black</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># eyebrows</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Black</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_width</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_arc</span><span class=\"p\">(</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">),</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">20</span><span class=\"p\">))</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_arc</span><span class=\"p\">(</span><span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">),</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">280</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># mouth</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_width</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_arc</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">40</span><span class=\"p\">),</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># highlight</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Orange</span><span class=\"o\">.</span><span class=\"n\">lighter</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_arc</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">68</span><span class=\"p\">,</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">220</span><span class=\"p\">),</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">260</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># hat</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">WINDING</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">ellipse</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">ellipse</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">rect</span><span class=\"p\">(</span><span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">rads</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Black</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># show image</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Final Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/351839ce4ea4fe9b3da017d8933fdc120d7d4ab0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7878616f2f7065726f2f6d61737465722f6578616d706c65732f64726177696e672f696d6167652e706e67\"></p>\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.python.org\" rel=\"nofollow\">Python 3.6+</a></li>\n<li><a href=\"https://pypi.org/project/numpy/\" rel=\"nofollow\">Numpy</a></li>\n<li><a href=\"https://pypi.org/project/Pillow/\" rel=\"nofollow\">PIL (Pillow)</a></li>\n</ul>\n<h2>Supported Backends</h2>\n<ul>\n<li><a href=\"https://pypi.org/project/PyQt5/\" rel=\"nofollow\">PyQt5</a></li>\n<li><a href=\"https://pypi.org/project/wxPython/\" rel=\"nofollow\">wxPython</a></li>\n<li><a href=\"https://www.lfd.uci.edu/%7Egohlke/pythonlibs/#pycairo\" rel=\"nofollow\">PyCairo</a></li>\n<li><a href=\"https://pypi.org/project/PyMuPDF/\" rel=\"nofollow\">PyMuPDF</a></li>\n<li><a href=\"http://omz-software.com/pythonista/\" rel=\"nofollow\">Pythonista iOS App</a></li>\n</ul>\n<h2>Installation</h2>\n<p>The <em>pero</em> library is fully implemented in Python. No additional compiler is necessary. After downloading the source\ncode just run the following command from the <em>pero</em> folder:</p>\n<p><code>$ python setup.py install</code></p>\n<p>or simply use pip</p>\n<p><code>$ pip install pero</code></p>\n<h2>Disclaimer</h2>\n<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied\nwarranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n<p>Please note that the <em>pero</em> library is still in an alpha state. Any changes in its API may occur.</p>\n<h2>Examples</h2>\n<h3>Using default backend</h3>\n<p>If you just want to draw an image using whatever the default backend is (for requested format), or show the image\ndirectly (requires <a href=\"https://pypi.org/project/PyQt5/\" rel=\"nofollow\">PyQt5</a>, <a href=\"https://pypi.org/project/wxPython/\" rel=\"nofollow\">wxPython</a> or\n<a href=\"http://omz-software.com/pythonista/\" rel=\"nofollow\">Pythonista iOS App</a>), just create an <em>image</em> and use it as any other <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># init image</span>\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw graphics</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># save to file</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"p\">(</span><span class=\"s1\">'image.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># show in viewer</span>\n<span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h3>Using PyQt5</h3>\n<p>Inside a <em>QWidget</em> you can create a <em>QPainter</em> and encapsulate it into the <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PyQt5.QtGui</span> <span class=\"kn\">import</span> <span class=\"n\">QPainter</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># init painter</span>\n<span class=\"n\">qp</span> <span class=\"o\">=</span> <span class=\"n\">QPainter</span><span class=\"p\">()</span>\n<span class=\"n\">qp</span><span class=\"o\">.</span><span class=\"n\">begin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n<span class=\"n\">qp</span><span class=\"o\">.</span><span class=\"n\">setRenderHint</span><span class=\"p\">(</span><span class=\"n\">QPainter</span><span class=\"o\">.</span><span class=\"n\">Antialiasing</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># init canvas</span>\n<span class=\"n\">canvas</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">qt</span><span class=\"o\">.</span><span class=\"n\">QtCanvas</span><span class=\"p\">(</span><span class=\"n\">qp</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw graphics</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># end drawing</span>\n<span class=\"n\">qp</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">()</span>\n</pre>\n<h3>Using wxPython</h3>\n<p>Inside a <em>wxApp</em> you can use just about any <em>wxDC</em> you want and encapsulate it into the <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n<span class=\"kn\">import</span> <span class=\"nn\">wx</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># create DC</span>\n<span class=\"n\">bitmap</span> <span class=\"o\">=</span> <span class=\"n\">wx</span><span class=\"o\">.</span><span class=\"n\">Bitmap</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">)</span>\n<span class=\"n\">dc</span> <span class=\"o\">=</span> <span class=\"n\">wx</span><span class=\"o\">.</span><span class=\"n\">MemoryDC</span><span class=\"p\">()</span>\n<span class=\"n\">dc</span><span class=\"o\">.</span><span class=\"n\">SelectObject</span><span class=\"p\">(</span><span class=\"n\">bitmap</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># use GCDC</span>\n<span class=\"k\">if</span> <span class=\"s1\">'wxMac'</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">wx</span><span class=\"o\">.</span><span class=\"n\">PlatformInfo</span><span class=\"p\">:</span>\n    <span class=\"n\">dc</span> <span class=\"o\">=</span> <span class=\"n\">wx</span><span class=\"o\">.</span><span class=\"n\">GCDC</span><span class=\"p\">(</span><span class=\"n\">dc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># init canvas</span>\n<span class=\"n\">canvas</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">wx</span><span class=\"o\">.</span><span class=\"n\">WXCanvas</span><span class=\"p\">(</span><span class=\"n\">dc</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw graphics</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n</pre>\n<h3>Using PyCairo</h3>\n<p>Depending on the final image format, choose appropriate <em>cairo</em> surface, get the drawing context and encapsulate it into\nthe <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cairo</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># create cairo drawing context</span>\n<span class=\"n\">surface</span> <span class=\"o\">=</span> <span class=\"n\">cairo</span><span class=\"o\">.</span><span class=\"n\">PSSurface</span><span class=\"p\">(</span><span class=\"s1\">'image.eps'</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">)</span>\n<span class=\"n\">dc</span> <span class=\"o\">=</span> <span class=\"n\">cairo</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># init canvas</span>\n<span class=\"n\">canvas</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">cairo</span><span class=\"o\">.</span><span class=\"n\">CairoCanvas</span><span class=\"p\">(</span><span class=\"n\">dc</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw graphics</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># save to file</span>\n<span class=\"n\">dc</span><span class=\"o\">.</span><span class=\"n\">show_page</span><span class=\"p\">()</span>\n</pre>\n<h3>Using PyMuPDF</h3>\n<p>Create a document, add new page and encapsulate it into the <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n<span class=\"kn\">import</span> <span class=\"nn\">fitz</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># init document</span>\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">fitz</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">newPage</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># init canvas</span>\n<span class=\"n\">canvas</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">mupdf</span><span class=\"o\">.</span><span class=\"n\">MuPDFCanvas</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw graphics</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># save to file</span>\n<span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'image.pdf'</span><span class=\"p\">)</span>\n<span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h3>Using SVG</h3>\n<p>The <em>pero</em> library implements its own way to draw and save SVG files Just create a <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># init canvas</span>\n<span class=\"n\">canvas</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">svg</span><span class=\"o\">.</span><span class=\"n\">SVGCanvas</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw graphics</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># save to file</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test.svg'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">get_xml</span><span class=\"p\">())</span>\n</pre>\n<h3>Using Pythonista</h3>\n<p>Initialize a new <em>ui.ImageContext</em> and create a <em>pero</em> canvas:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ui</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># open context</span>\n<span class=\"k\">with</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">ImageContext</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ctx</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># init canvas</span>\n    <span class=\"n\">canvas</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">pythonista</span><span class=\"o\">.</span><span class=\"n\">UICanvas</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># draw graphics</span>\n    <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"b\"</span>\n    <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"s2\">\"w\"</span>\n    <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">()</span>\n    <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">draw_circle</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># show image</span>\n    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">get_image</span><span class=\"p\">()</span>\n    <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h3>Using glyphs and dynamic properties</h3>\n<p>Similar to <a href=\"https://d3js.org%3E\" rel=\"nofollow\">d3js</a> JavaScript library, most of the properties of pre-build <em>pero.Glyphs</em> objects can\nbe specified as a function, to which given data source is automatically provided. Together with <em>pero.scales</em> (and maybe\nthe <em>pero.Axis)</em> this can be used to make simple plots easily.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pero</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n\n<span class=\"c1\"># init size</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">400</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>\n<span class=\"n\">padding</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>\n\n<span class=\"c1\"># init data</span>\n<span class=\"n\">x_data</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"n\">y_data</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x_data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># init scales</span>\n<span class=\"n\">x_scale</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">LinScale</span><span class=\"p\">(</span>\n    <span class=\"n\">in_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_data</span><span class=\"p\">),</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">x_data</span><span class=\"p\">)),</span>\n    <span class=\"n\">out_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">padding</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">-</span><span class=\"n\">padding</span><span class=\"p\">))</span>\n\n<span class=\"n\">y_scale</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">LinScale</span><span class=\"p\">(</span>\n    <span class=\"n\">in_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">out_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">height</span><span class=\"o\">-</span><span class=\"n\">padding</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"p\">))</span>\n\n<span class=\"n\">color_scale</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">GradientScale</span><span class=\"p\">(</span>\n    <span class=\"n\">in_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">out_range</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">Spectral</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># init marker</span>\n<span class=\"n\">marker</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"p\">(</span>\n    <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">8</span><span class=\"p\">,</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">x_scale</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">y_scale</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n    <span class=\"n\">line_color</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">color_scale</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">darker</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n    <span class=\"n\">fill_color</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">color_scale</span><span class=\"o\">.</span><span class=\"n\">scale</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># init image</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">pero</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># fill</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"s2\">\"w\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw points</span>\n<span class=\"n\">marker</span><span class=\"o\">.</span><span class=\"n\">draw_many</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x_data</span><span class=\"p\">,</span> <span class=\"n\">y_data</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># show image</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 7075007, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "807c87b0c54b031895e3eb296d5f2298", "sha256": "48ee2aa28d5ede123bfbde344a80f924e2dfecd4c9acfcb6d0c85968c636270d"}, "downloads": -1, "filename": "pero-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "807c87b0c54b031895e3eb296d5f2298", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 290479, "upload_time": "2019-10-20T19:29:15", "upload_time_iso_8601": "2019-10-20T19:29:15.626718Z", "url": "https://files.pythonhosted.org/packages/36/c2/1e8811fede6aa6c6418f1a8f85cfe44cfffb7c5649505acad0dd49bc8889/pero-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c53c4aa7db6c91df696381acee8f21", "sha256": "3ceb987eda10d25927f19ef5af07c236df70663c92f94e3f5cb269c3a01b0909"}, "downloads": -1, "filename": "pero-0.10.0.tar.gz", "has_sig": false, "md5_digest": "a7c53c4aa7db6c91df696381acee8f21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204925, "upload_time": "2019-10-20T19:29:41", "upload_time_iso_8601": "2019-10-20T19:29:41.738779Z", "url": "https://files.pythonhosted.org/packages/5c/2d/b95c3c47cbe3681f80327f7c5d1e05ca7a99799bccadf2a698a78e8ae4a8/pero-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "95e6e2f31145007e946794f82aa37dad", "sha256": "bab41c6e3eaf2d74eaee48f61677c4fab162a4184cbd483f0834b29d3c990453"}, "downloads": -1, "filename": "pero-0.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "95e6e2f31145007e946794f82aa37dad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 296385, "upload_time": "2020-01-22T07:00:59", "upload_time_iso_8601": "2020-01-22T07:00:59.664818Z", "url": "https://files.pythonhosted.org/packages/76/f8/7ac89bd9ee84945302b54778d7beef03041c90425905de3fee4ea1e53443/pero-0.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21ac56c7c2904cf49470449199bbbad0", "sha256": "bc01ec860027478d0c90b9b165420af5378a1afbc662d70d99534bb774d84c58"}, "downloads": -1, "filename": "pero-0.11.0.tar.gz", "has_sig": false, "md5_digest": "21ac56c7c2904cf49470449199bbbad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208621, "upload_time": "2020-01-22T07:01:06", "upload_time_iso_8601": "2020-01-22T07:01:06.095737Z", "url": "https://files.pythonhosted.org/packages/78/07/30497808fd72a905c7463fe9ee932105995158a06f3d1c0539def8a6d74e/pero-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "ed8cef39826dbe4d602fe3d21c08a1c2", "sha256": "85fc0e9582beeb7647ae56407617e371530ed04932783d6b0ff4416619a1571e"}, "downloads": -1, "filename": "pero-0.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ed8cef39826dbe4d602fe3d21c08a1c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 295432, "upload_time": "2020-01-30T19:56:33", "upload_time_iso_8601": "2020-01-30T19:56:33.942718Z", "url": "https://files.pythonhosted.org/packages/10/48/4b574cb4fe9eca8b466f9fb48b41d9fbcb11401f6458e7088575518f41e1/pero-0.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f6de0389d602b5ce531be1a93bd5295", "sha256": "def96223650701e3c9df868863cfa1591d423ea65525441185cb194ce9c3940d"}, "downloads": -1, "filename": "pero-0.12.0.tar.gz", "has_sig": false, "md5_digest": "5f6de0389d602b5ce531be1a93bd5295", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208612, "upload_time": "2020-01-30T19:56:37", "upload_time_iso_8601": "2020-01-30T19:56:37.491097Z", "url": "https://files.pythonhosted.org/packages/f5/13/8b734943706a368547e5be35298b6c85ac7dcbd474412e749cea60a19dbb/pero-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "358406b8b38b3abbc7d84381bedb892c", "sha256": "ea021c671ebe0ebf4267d8d2b18f6a384340b46b73e34d461e73f60ac9baef9f"}, "downloads": -1, "filename": "pero-0.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "358406b8b38b3abbc7d84381bedb892c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 295069, "upload_time": "2020-04-21T16:09:52", "upload_time_iso_8601": "2020-04-21T16:09:52.520779Z", "url": "https://files.pythonhosted.org/packages/19/dc/a5b19642ce0c2998e93a53778da588a38390941c4ac732dc9b776fd05f41/pero-0.13.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39f92da1b9024906f9b5f72dde74accf", "sha256": "24d879f6d0ffd359aefbff1e5b32cb90c6e70502397e3d67356dc250824b2f2e"}, "downloads": -1, "filename": "pero-0.13.0.tar.gz", "has_sig": false, "md5_digest": "39f92da1b9024906f9b5f72dde74accf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205566, "upload_time": "2020-04-21T16:09:54", "upload_time_iso_8601": "2020-04-21T16:09:54.115726Z", "url": "https://files.pythonhosted.org/packages/a3/a5/eaa7d4ce04bd34c20f083598eaf4e38e67d3dfe0e55bf471f55be45dbe63/pero-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "76ffe822e2a33c937f0dd81f78c1fd49", "sha256": "3526fa1252a720ebcbc1498264e663c796bf8089b6f70c8717f24f0eafaee288"}, "downloads": -1, "filename": "pero-0.14.0-py3-none-any.whl", "has_sig": false, "md5_digest": "76ffe822e2a33c937f0dd81f78c1fd49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 295262, "upload_time": "2020-04-22T08:49:29", "upload_time_iso_8601": "2020-04-22T08:49:29.752485Z", "url": "https://files.pythonhosted.org/packages/1b/21/5b10a01abd5fe7256a05b1189f0106f70707f75f41a566fca9415c93dc93/pero-0.14.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c53d55ed71ac57ed29be2cced4a8e763", "sha256": "1f310d8e40bad1ed2a6a8d97c1dfa0a0fe0cbc197cc99568a6b665478a30ef0d"}, "downloads": -1, "filename": "pero-0.14.0.tar.gz", "has_sig": false, "md5_digest": "c53d55ed71ac57ed29be2cced4a8e763", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205731, "upload_time": "2020-04-22T08:49:31", "upload_time_iso_8601": "2020-04-22T08:49:31.665956Z", "url": "https://files.pythonhosted.org/packages/b7/91/70a020cf4a8c5a3a56fb7d9a32f70ccaa3c5ea67aac528529b4a186bdf7d/pero-0.14.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "68e74ae48c573f7e453801999133c77e", "sha256": "2b99ee32da291c82177de79ff33800f9ad8753f1e9683d476ab9cc21849e3d9a"}, "downloads": -1, "filename": "pero-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "68e74ae48c573f7e453801999133c77e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 206611, "upload_time": "2019-06-17T11:26:00", "upload_time_iso_8601": "2019-06-17T11:26:00.779762Z", "url": "https://files.pythonhosted.org/packages/6a/47/59c4b4c25a70a42cdf5176a6fabd3ed18b5255e399c41a816e4bca3f04c1/pero-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fc3b5c7a70c9ca7747d9d37ee870bb0", "sha256": "3f78ca1fd04ef458d0ac54bcfd08a604997122df9d0899680173fc47b61e5ff7"}, "downloads": -1, "filename": "pero-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6fc3b5c7a70c9ca7747d9d37ee870bb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 164631, "upload_time": "2019-06-17T11:26:03", "upload_time_iso_8601": "2019-06-17T11:26:03.605623Z", "url": "https://files.pythonhosted.org/packages/e7/e8/22c208c60fce3f8017b0ab5abec3c75732497f13f2d3e2af4062f806d8ba/pero-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4084cd863057b98d11d034ebd679da8b", "sha256": "0bc13971517e066dc5b1484334796c4678b2830908412b43aea5132596825e3f"}, "downloads": -1, "filename": "pero-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4084cd863057b98d11d034ebd679da8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 206618, "upload_time": "2019-06-17T12:04:25", "upload_time_iso_8601": "2019-06-17T12:04:25.085364Z", "url": "https://files.pythonhosted.org/packages/c6/bb/bb32620a77b03a2f5dd9a556d147b984f63007c715e46a6d8a54bbe3562e/pero-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a42215978c0a99fbef424b8a78caaa22", "sha256": "f221a6fe395672138c52b0f7765a82e37adb1b457c009e376fd846089c112271"}, "downloads": -1, "filename": "pero-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a42215978c0a99fbef424b8a78caaa22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 164640, "upload_time": "2019-06-17T12:04:27", "upload_time_iso_8601": "2019-06-17T12:04:27.871524Z", "url": "https://files.pythonhosted.org/packages/05/1a/16a3c9ae6f8fffa7736d47afd85f7558244e2b6a02689ff24e4dc96285f8/pero-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "01d6c9b21953b13be2ccd3df79d1bf61", "sha256": "ab545874a86c3306a3d26aba39a23fbe48337ade7b94d65da9689a4ddb46c8a4"}, "downloads": -1, "filename": "pero-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "01d6c9b21953b13be2ccd3df79d1bf61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 206917, "upload_time": "2019-07-02T10:44:42", "upload_time_iso_8601": "2019-07-02T10:44:42.924330Z", "url": "https://files.pythonhosted.org/packages/2d/21/6c8456fd919a9990bad3d235af9e816a2c292956bd71afc6f20087364141/pero-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9908972abcbeb608c6701438ee20fd60", "sha256": "e79a2331871804b0b4b45489ed27dd556790aee677ff92de687a2fcca9d749de"}, "downloads": -1, "filename": "pero-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9908972abcbeb608c6701438ee20fd60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159308, "upload_time": "2019-07-02T10:44:47", "upload_time_iso_8601": "2019-07-02T10:44:47.809225Z", "url": "https://files.pythonhosted.org/packages/3f/ed/2250b2deda8d65b97051cc70463d7a2323216c8e59cd9f597cd2ce72298b/pero-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "6e97197513bfbd9c08ddc8387d1a2a69", "sha256": "5b581a5f258ba9fbd6dfed52b1f48e92813bddb2af40d59652feb5ddcbe14ccf"}, "downloads": -1, "filename": "pero-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6e97197513bfbd9c08ddc8387d1a2a69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 216119, "upload_time": "2019-07-09T21:03:11", "upload_time_iso_8601": "2019-07-09T21:03:11.288424Z", "url": "https://files.pythonhosted.org/packages/00/5a/ea90a52c6ffcb36731034f5912b2d8ca23138bfd2d15f5b4bf53bfff19a6/pero-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2bb01411f3de4c3f427ba99273f60b2", "sha256": "5fef05ef646fe600337b3b73c74ed1f0733214684debf1dcc80ed699ce876627"}, "downloads": -1, "filename": "pero-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e2bb01411f3de4c3f427ba99273f60b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 166773, "upload_time": "2019-07-09T21:03:18", "upload_time_iso_8601": "2019-07-09T21:03:18.239107Z", "url": "https://files.pythonhosted.org/packages/ce/4b/c10e6861a3a79cfe5d274a1c30b59842f6d760aad2a870e28f967ec876fd/pero-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "b1a98c8f3f0243766eb3c8526fc0dc3c", "sha256": "b34e350825a3be591604748655f90c5af8ed76f639fbe7df1dd26bf8e8c9bf48"}, "downloads": -1, "filename": "pero-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1a98c8f3f0243766eb3c8526fc0dc3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 220141, "upload_time": "2019-07-12T13:19:47", "upload_time_iso_8601": "2019-07-12T13:19:47.348961Z", "url": "https://files.pythonhosted.org/packages/49/1a/ee2c3dfa3d08f10dfa41b90045ddbd9afa73047ba66a476f123e3692b7ce/pero-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de27078c2275f57cff9cf3c69f8b760a", "sha256": "22e09710680b6f80fbcb98bb097d103ab6001e22608627cdf2d58bc947eb6eb0"}, "downloads": -1, "filename": "pero-0.5.0.tar.gz", "has_sig": false, "md5_digest": "de27078c2275f57cff9cf3c69f8b760a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 170456, "upload_time": "2019-07-12T13:19:56", "upload_time_iso_8601": "2019-07-12T13:19:56.680413Z", "url": "https://files.pythonhosted.org/packages/47/e2/2fa0eefe71558c7c690411dd630aff7880ad72fe4211fcb2d0f78ebfab47/pero-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "06bffa0158e6a2f24a08df4c61e1e2f6", "sha256": "9c88d3f72882c40a1271c001d3d0f9d47210a8c72d93e0f6db71025ae2dc5bdc"}, "downloads": -1, "filename": "pero-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "06bffa0158e6a2f24a08df4c61e1e2f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 224983, "upload_time": "2019-09-18T15:27:52", "upload_time_iso_8601": "2019-09-18T15:27:52.861832Z", "url": "https://files.pythonhosted.org/packages/b9/1d/46c97bbbefe1fd3fac254dcb7412aa0a30675827e02e9aad5f2b60fbd4ef/pero-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca2b2df5570dd918aae31dfb436ac483", "sha256": "f96136fa6862cc8226fe456b266da402718393a322b154e6ea3ace48318bb8f4"}, "downloads": -1, "filename": "pero-0.6.0.tar.gz", "has_sig": false, "md5_digest": "ca2b2df5570dd918aae31dfb436ac483", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 176001, "upload_time": "2019-09-18T15:28:03", "upload_time_iso_8601": "2019-09-18T15:28:03.302342Z", "url": "https://files.pythonhosted.org/packages/88/f7/dea055d445e62af3d017a51b0b8fec64c554c3fcdaf27332bcce374a39d1/pero-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "f057ec3e6f9c5f2498b2d50202144d75", "sha256": "1d4c302b93c40aaa6e23669c87925a83266da2d1840deabf0744da21d4d61422"}, "downloads": -1, "filename": "pero-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f057ec3e6f9c5f2498b2d50202144d75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 227775, "upload_time": "2019-09-20T07:31:54", "upload_time_iso_8601": "2019-09-20T07:31:54.603324Z", "url": "https://files.pythonhosted.org/packages/40/1b/08ce1863086b580e54657f18139d5436a4f7fc652c4abe25e5f5cc163448/pero-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "149f58ed1535755a48df563b9753d263", "sha256": "bd9846b2ddcd3e57340715ab34fb5cb7503f0289f4c8749ee9eccf4146c96458"}, "downloads": -1, "filename": "pero-0.7.0.tar.gz", "has_sig": false, "md5_digest": "149f58ed1535755a48df563b9753d263", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178573, "upload_time": "2019-09-20T07:32:11", "upload_time_iso_8601": "2019-09-20T07:32:11.920096Z", "url": "https://files.pythonhosted.org/packages/2b/23/045bc725dbac0e778fcec33e37214552bbf13c70cee50d708f4506684cdf/pero-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "68c04ae4aada7aab97ee45db809a6351", "sha256": "0f214c8b9da75c0fb05b9efd9164b75ac60a689a193e7e85ab8bca0361b1ab77"}, "downloads": -1, "filename": "pero-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "68c04ae4aada7aab97ee45db809a6351", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 231219, "upload_time": "2019-09-26T09:28:41", "upload_time_iso_8601": "2019-09-26T09:28:41.235004Z", "url": "https://files.pythonhosted.org/packages/7d/f6/fb50126a6fff33bf4c400fba40abea9b3bfedea904fc83f154ae9865150b/pero-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc09927842b5e4e314f5842a53126133", "sha256": "96e8daa80ebb65a8f68e093e567f594e51bc923e2be9cc9f8f7914ac93e1dfd0"}, "downloads": -1, "filename": "pero-0.8.0.tar.gz", "has_sig": false, "md5_digest": "cc09927842b5e4e314f5842a53126133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 183554, "upload_time": "2019-09-26T09:28:57", "upload_time_iso_8601": "2019-09-26T09:28:57.774978Z", "url": "https://files.pythonhosted.org/packages/e4/e5/245000fd72e1d059105335948eb927a12cf32e3dec47606de08ecd3f6481/pero-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "b1e874a65a5366add260646f5d515674", "sha256": "20c2162bb2ddfe2353e20d2aeab5e4c586e56205cee6f9f8610f8381567b0404"}, "downloads": -1, "filename": "pero-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1e874a65a5366add260646f5d515674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 231213, "upload_time": "2019-10-16T09:42:24", "upload_time_iso_8601": "2019-10-16T09:42:24.327367Z", "url": "https://files.pythonhosted.org/packages/ab/6c/77f00ec1f1a9a32558d5c3501164faec6cc41221d6f1eda51d20ccacfe84/pero-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c9ab59c61ec35d13736291635b2991d", "sha256": "92d2f5ca4d695e01318658ecc96637131f61581f47b44c53808fdf3f051093c6"}, "downloads": -1, "filename": "pero-0.9.0.tar.gz", "has_sig": false, "md5_digest": "5c9ab59c61ec35d13736291635b2991d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 183584, "upload_time": "2019-10-16T09:42:45", "upload_time_iso_8601": "2019-10-16T09:42:45.549538Z", "url": "https://files.pythonhosted.org/packages/61/29/939602db862b10c183c445a23943a65d7c07b2d861f7ebb316ff8b7abfb0/pero-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76ffe822e2a33c937f0dd81f78c1fd49", "sha256": "3526fa1252a720ebcbc1498264e663c796bf8089b6f70c8717f24f0eafaee288"}, "downloads": -1, "filename": "pero-0.14.0-py3-none-any.whl", "has_sig": false, "md5_digest": "76ffe822e2a33c937f0dd81f78c1fd49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 295262, "upload_time": "2020-04-22T08:49:29", "upload_time_iso_8601": "2020-04-22T08:49:29.752485Z", "url": "https://files.pythonhosted.org/packages/1b/21/5b10a01abd5fe7256a05b1189f0106f70707f75f41a566fca9415c93dc93/pero-0.14.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c53d55ed71ac57ed29be2cced4a8e763", "sha256": "1f310d8e40bad1ed2a6a8d97c1dfa0a0fe0cbc197cc99568a6b665478a30ef0d"}, "downloads": -1, "filename": "pero-0.14.0.tar.gz", "has_sig": false, "md5_digest": "c53d55ed71ac57ed29be2cced4a8e763", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205731, "upload_time": "2020-04-22T08:49:31", "upload_time_iso_8601": "2020-04-22T08:49:31.665956Z", "url": "https://files.pythonhosted.org/packages/b7/91/70a020cf4a8c5a3a56fb7d9a32f70ccaa3c5ea67aac528529b4a186bdf7d/pero-0.14.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:14 2020"}