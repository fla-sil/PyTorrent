{"info": {"author": "Martin Blais", "author_email": "blais@furius.ca", "bugtrack_url": null, "classifiers": [], "description": "This module provide automatic bash completion support for programs that use the\noptparse module.  The premise is that the optparse options parser specifies\nenough information (and more) for us to be able to generate completion strings\nesily.  Another advantage of this over traditional completion schemes where the\ncompletion strings are hard-coded in a separate bash source file, is that the\nsame code that parses the options is used to generate the completions, so the\ncompletions is always up-to-date with the program itself.\n\nIn addition, we allow you specify a list of regular expressions or code that\ndefine what kinds of files should be proposed as completions to this file if\nneeded.  If you want to implement more complex behaviour, you can instead\nspecify a function, which will be called with the current directory as an\nargument.\n\nYou need to activate bash completion using the shell script function that comes\nwith optcomplete (see http://furius.ca/optcomplete for more details).", "description_content_type": null, "docs_url": null, "download_url": "http://bitbucket.org/blais/optcomplete", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://furius.ca/optcomplete", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "optcomplete", "package_url": "https://pypi.org/project/optcomplete/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/optcomplete/", "project_urls": {"Download": "http://bitbucket.org/blais/optcomplete", "Homepage": "http://furius.ca/optcomplete"}, "release_url": "https://pypi.org/project/optcomplete/1.2.1/", "requires_dist": null, "requires_python": null, "summary": "Automatic shell completion support for scripts that use optparse.", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module provide automatic bash completion support for programs that use the\noptparse module.  The premise is that the optparse options parser specifies\nenough information (and more) for us to be able to generate completion strings\nesily.  Another advantage of this over traditional completion schemes where the\ncompletion strings are hard-coded in a separate bash source file, is that the\nsame code that parses the options is used to generate the completions, so the\ncompletions is always up-to-date with the program itself.</p>\n<p>In addition, we allow you specify a list of regular expressions or code that\ndefine what kinds of files should be proposed as completions to this file if\nneeded.  If you want to implement more complex behaviour, you can instead\nspecify a function, which will be called with the current directory as an\nargument.</p>\n<p>You need to activate bash completion using the shell script function that comes\nwith optcomplete (see <a href=\"http://furius.ca/optcomplete\" rel=\"nofollow\">http://furius.ca/optcomplete</a> for more details).</p>\n\n          </div>"}, "last_serial": 1434280, "releases": {"1.2": [], "1.2-devel": [{"comment_text": "", "digests": {"md5": "6392cd0a7154b3394004d5ad9d913d59", "sha256": "a3244b2bedc61e1d2c356137638ce559427258d38a89e3eb1bdf5c3f5d64b82d"}, "downloads": -1, "filename": "optcomplete-1.2-devel.tar.gz", "has_sig": false, "md5_digest": "6392cd0a7154b3394004d5ad9d913d59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37600, "upload_time": "2009-03-31T23:09:37", "upload_time_iso_8601": "2009-03-31T23:09:37.688973Z", "url": "https://files.pythonhosted.org/packages/47/93/94b1ae1bce12c54bd4823d2d6e020c806cdab582683ff0d7782cb54e5a1a/optcomplete-1.2-devel.tar.gz", "yanked": false}], "1.2.1": []}, "urls": [], "timestamp": "Fri May  8 03:02:05 2020"}