{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "\n.. image:: https://travis-ci.com/trollfot/trinket.svg?branch=master\n\n=======\nTrinket\n=======\n\n**A Curio HTTP server.**\n\n************\nInstallation\n************\n\nTrinket requires python3.7+\n\n.. code-block:: bash\n\n    git clone https://github.com/trollfot/trinket.git\n    python3.7 -m venv trinket_env\n    source trinket_env/bin/activate\n    pip install -e trinket trinket[test]\n    pytest trinket/tests\n\n\n*******\nExample\n*******\n\n.. code-block:: python\n    \n    from trinket import Trinket, Response\n    from trinket.response import file_iterator\n    from trinket.extensions import logger\n    \n    bauble = logger(Trinket())\n    \n    \n    @bauble.route('/')\n    async def hello(request):\n        return Response.raw(b'Hello World !')\n    \n    \n    @bauble.route('/raw', methods=['POST'])\n    async def raw(request):\n        return Response.raw(b'You got here')\n    \n    \n    @bauble.route('/read', methods=['POST'])\n    async def reader(request):\n        await request.parse_body()\n        files = list(request.files.keys())\n        return Response.raw(\"You got here and it's all read: {}\".format(files))\n    \n    \n    @bauble.route('/hello/full/with/{one}/and/{two}')\n    async def json(request, one, two):    \n        response = Response.json({\n            'parameters': f'{one} and {two}',\n            'query': request.query.get('query'),\n            'cookie': request.cookies['test'],\n        })\n        response.cookies.set(name='bench', value='value')\n        return response\n    \n    \n    @bauble.route('/websocket')\n    async def serve_websocket(request):\n        response = Response.streamer(file_iterator('myfile.ext'))\n        return response\n    \n    \n    @bauble.websocket('/chat')\n    async def chat(request, websocket):\n        while True:\n            msg = await websocket.recv()\n            for ws in bauble.websockets:\n                if ws is not websocket:\n                    await ws.send(msg)\n    \n    \n    bauble.start()\n\n\n***************\nAcknowledgments\n***************\n\nTrinket relies heavily on packages from https://github.com/pyrates:\nvery good re-useable components with Cython-improved performances.\n\n\n*********\nChangelog\n*********\n\n0.1.5 (2019-12-18)\n==================\n\n* Fixed body duplication on raw_body calls, due to the concatenation\n  already happening in on_body, triggered by the reader.\n\n0.1.4 (2019-12-16)\n==================\n\n* Dependencies maintenance : bumping versions to latest stable.\n\n0.1.3 (2019-01-24)\n==================\n\n* Pinned specific package versions\n* Updated to use the last version of wsproto (0.13)\n* The Trinket application now inherits from dict to allow arbitrary storage\n* Decoupled the TCP serving/socket creation from the actual application\n\n0.1.2 (2019-01-18)\n==================\n\n* Updated distribution files\n\n0.1.1 (2019-01-18)\n==================\n\n* Added tests and testing utilities\n* Fixed missing imports\n\n0.1 (2019-01-17)\n================\n\n* Initial release\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "Curio HTTP", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "trinket", "package_url": "https://pypi.org/project/trinket/", "platform": "", "project_url": "https://pypi.org/project/trinket/", "project_urls": null, "release_url": "https://pypi.org/project/trinket/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Curio-based web framework", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://travis-ci.com/trollfot/trinket.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5bf573e6c6a8f2092095ef8c84352fccb44c6e10/68747470733a2f2f7472617669732d63692e636f6d2f74726f6c6c666f742f7472696e6b65742e7376673f6272616e63683d6d6173746572\">\n<div id=\"trinket\">\n<h2>Trinket</h2>\n<p><strong>A Curio HTTP server.</strong></p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Trinket requires python3.7+</p>\n<pre>git clone https://github.com/trollfot/trinket.git\npython3.7 -m venv trinket_env\n<span class=\"nb\">source</span> trinket_env/bin/activate\npip install -e trinket trinket<span class=\"o\">[</span>test<span class=\"o\">]</span>\npytest trinket/tests\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">trinket</span> <span class=\"kn\">import</span> <span class=\"n\">Trinket</span><span class=\"p\">,</span> <span class=\"n\">Response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trinket.response</span> <span class=\"kn\">import</span> <span class=\"n\">file_iterator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">trinket.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">logger</span>\n\n<span class=\"n\">bauble</span> <span class=\"o\">=</span> <span class=\"n\">logger</span><span class=\"p\">(</span><span class=\"n\">Trinket</span><span class=\"p\">())</span>\n\n\n<span class=\"nd\">@bauble</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">raw</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'Hello World !'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@bauble</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/raw'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">raw</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">raw</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'You got here'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@bauble</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/read'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">reader</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">await</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">parse_body</span><span class=\"p\">()</span>\n    <span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">raw</span><span class=\"p\">(</span><span class=\"s2\">\"You got here and it's all read: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">))</span>\n\n\n<span class=\"nd\">@bauble</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/hello/full/with/</span><span class=\"si\">{one}</span><span class=\"s1\">/and/</span><span class=\"si\">{two}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">json</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">one</span><span class=\"p\">,</span> <span class=\"n\">two</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">({</span>\n        <span class=\"s1\">'parameters'</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">one</span><span class=\"si\">}</span><span class=\"s1\"> and </span><span class=\"si\">{</span><span class=\"n\">two</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'query'</span><span class=\"p\">:</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'query'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'cookie'</span><span class=\"p\">:</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">cookies</span><span class=\"p\">[</span><span class=\"s1\">'test'</span><span class=\"p\">],</span>\n    <span class=\"p\">})</span>\n    <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">cookies</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'bench'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'value'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n\n<span class=\"nd\">@bauble</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/websocket'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">serve_websocket</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">Response</span><span class=\"o\">.</span><span class=\"n\">streamer</span><span class=\"p\">(</span><span class=\"n\">file_iterator</span><span class=\"p\">(</span><span class=\"s1\">'myfile.ext'</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n\n<span class=\"nd\">@bauble</span><span class=\"o\">.</span><span class=\"n\">websocket</span><span class=\"p\">(</span><span class=\"s1\">'/chat'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">chat</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">websocket</span><span class=\"p\">):</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">recv</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">ws</span> <span class=\"ow\">in</span> <span class=\"n\">bauble</span><span class=\"o\">.</span><span class=\"n\">websockets</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">ws</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">websocket</span><span class=\"p\">:</span>\n                <span class=\"k\">await</span> <span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">bauble</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"acknowledgments\">\n<h3>Acknowledgments</h3>\n<p>Trinket relies heavily on packages from <a href=\"https://github.com/pyrates\" rel=\"nofollow\">https://github.com/pyrates</a>:\nvery good re-useable components with Cython-improved performances.</p>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<div id=\"id1\">\n<h4>0.1.5 (2019-12-18)</h4>\n<ul>\n<li>Fixed body duplication on raw_body calls, due to the concatenation\nalready happening in on_body, triggered by the reader.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>0.1.4 (2019-12-16)</h4>\n<ul>\n<li>Dependencies maintenance : bumping versions to latest stable.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>0.1.3 (2019-01-24)</h4>\n<ul>\n<li>Pinned specific package versions</li>\n<li>Updated to use the last version of wsproto (0.13)</li>\n<li>The Trinket application now inherits from dict to allow arbitrary storage</li>\n<li>Decoupled the TCP serving/socket creation from the actual application</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>0.1.2 (2019-01-18)</h4>\n<ul>\n<li>Updated distribution files</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h4>0.1.1 (2019-01-18)</h4>\n<ul>\n<li>Added tests and testing utilities</li>\n<li>Fixed missing imports</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>0.1 (2019-01-17)</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6321423, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bffa5f0c292d82cc366ffc12bf886466", "sha256": "ce38c789f39e37423a55a12a9f94a555f2f6b8e15061f52ce1d9ef7f994e332e"}, "downloads": -1, "filename": "trinket-0.1.tar.gz", "has_sig": false, "md5_digest": "bffa5f0c292d82cc366ffc12bf886466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11982, "upload_time": "2019-01-17T23:40:41", "upload_time_iso_8601": "2019-01-17T23:40:41.915462Z", "url": "https://files.pythonhosted.org/packages/84/06/b9058d2f5d7ed4b2945d33856c5d77ef80e4360a1c9536d72516975b633c/trinket-0.1.tar.gz", "yanked": false}], "0.1.1": [], "0.1.2": [{"comment_text": "", "digests": {"md5": "761ab9c737b0763d7486787708240b7d", "sha256": "3a5695770c77a5e09c0f76c144f8cd56a2655e91ce655fa9f3975788c210a2e9"}, "downloads": -1, "filename": "trinket-0.1.2.tar.gz", "has_sig": false, "md5_digest": "761ab9c737b0763d7486787708240b7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12503, "upload_time": "2019-01-18T19:22:45", "upload_time_iso_8601": "2019-01-18T19:22:45.992364Z", "url": "https://files.pythonhosted.org/packages/1d/3d/7d135d8ef6bddab88139fc0ef2838c34f088f980982733ea4878668a5f5b/trinket-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b59ddeefc4241f79873d54c6408ce891", "sha256": "3b38da188010427554e467e0d91ad59ad49afe4e93964afab5e95342f00f05df"}, "downloads": -1, "filename": "trinket-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b59ddeefc4241f79873d54c6408ce891", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18894, "upload_time": "2019-01-24T14:36:44", "upload_time_iso_8601": "2019-01-24T14:36:44.312917Z", "url": "https://files.pythonhosted.org/packages/6e/b6/42647cf09bd3884f6e5212b41413d05988d684bf15ccc8663303538c4d1c/trinket-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3057f92cfa9cc8f8497ceb8d8069aa53", "sha256": "d4d63a9c203e4399203825fd524196895eeaafd399ff1606dd070ee4de73f7e2"}, "downloads": -1, "filename": "trinket-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3057f92cfa9cc8f8497ceb8d8069aa53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19081, "upload_time": "2019-12-16T18:38:29", "upload_time_iso_8601": "2019-12-16T18:38:29.143671Z", "url": "https://files.pythonhosted.org/packages/a3/0f/0a45ffada9a2b75f437992e8fb1dfd89417a0b0f20bfaa20eceb9d4e4412/trinket-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "e700b03d8624aea403c0e993494ad9da", "sha256": "9f66064d5c1af2350ff9643540f7a74eb0fd02198d101ce8aa97f296c868a342"}, "downloads": -1, "filename": "trinket-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e700b03d8624aea403c0e993494ad9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19400, "upload_time": "2019-12-17T23:53:26", "upload_time_iso_8601": "2019-12-17T23:53:26.097300Z", "url": "https://files.pythonhosted.org/packages/1d/a5/0cad5f1db6ad37455d9e9d8f5a07e1fdc993da607dd14a81492d5ddf6cc8/trinket-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e700b03d8624aea403c0e993494ad9da", "sha256": "9f66064d5c1af2350ff9643540f7a74eb0fd02198d101ce8aa97f296c868a342"}, "downloads": -1, "filename": "trinket-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e700b03d8624aea403c0e993494ad9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19400, "upload_time": "2019-12-17T23:53:26", "upload_time_iso_8601": "2019-12-17T23:53:26.097300Z", "url": "https://files.pythonhosted.org/packages/1d/a5/0cad5f1db6ad37455d9e9d8f5a07e1fdc993da607dd14a81492d5ddf6cc8/trinket-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:06 2020"}