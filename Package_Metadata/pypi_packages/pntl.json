{"info": {"author": "Jawahar S", "author_email": "jawahar273@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "\n\n==================\npractNLPTools-lite\n==================\n\n\nCreating practNLPTools in lite mode.[ get the old coding in `devbranch`_  or old stable code `properbranch`_]\n\n|Author|\n\n|Build Status| - on click this built this might take you to build of\n`practNLPTools`_ which is testing ground for this repository so don\u2019t\nworry.\n\n\nPractical Natural Language Processing Tools for Humans.\npractNLPTools is a pythonic library over `SENNA`_ and Stanford\nDependency Extractor.\n\n.. |pypi status| image:: https://img.shields.io/pypi/v/practNLPTools-lite.svg\n        :target: https://pypi.python.org/pypi/pntl\n\n.. |travis status| image:: https://img.shields.io/travis/jawahar273/practNLPTools-lite.svg\n        :target: https://travis-ci.org/jawahar273/practNLPTools-lite\n\n.. |doc status| image:: https://readthedocs.org/projects/pntl/badge/?version=latest\n        :target: https://pntl.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. |dep status| image:: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/shield.svg\n     :target: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/\n     :alt: Updates\n\n.. |blocker status| image:: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/python-3-shield.svg\n     :target: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/\n     :alt: Python 3\n\n.. |Wercker status| image:: https://app.wercker.com/status/758bf4fa0e3bb9066d118385ee4aac1f/s/master\n   :target: https://app.wercker.com/project/byKey/758bf4fa0e3bb9066d118385ee4aac1f\n\n+-----------------+-----------------+\n|    name         | status          |\n+=================+=================+\n| Wercker status  | |Wercker status||\n+-----------------+-----------------+\n| PyPi            |    |pypi status||\n+-----------------+-----------------+\n| travis          |  |travis status||\n+-----------------+-----------------+\n| Documentation   |     |doc status||\n+-----------------+-----------------+\n| dependency      |     |dep status||\n+-----------------+-----------------+\n| blocker Pyupbot | |blocker status||\n+-----------------+-----------------+\n| FOSSA           |   |FOSSA Status||\n+-----------------+-----------------+\n\n* Documentation: https://pntl.readthedocs.io\n\nQuickStart \n==========\n\nDownlarding Stanford Parser JAR\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo downlard the stanford-parser from github automatically and placing them inside the install direction.\n\n.. code:: bash\n\n   pntl -I true\n   # downlards required file from github.\n\nRunning Predefine Examples Sentences\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo run exiting example for batch(which has more than one list of examples).\n\n.. code:: bash\n\n   pntl -SE home/user/senna -B true\n\nTo run predefine example for one sentence.\n\n.. code:: bash\n\n   pntl -SE home/user/senna\n\nRunning user given sentence\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo run user given example using `-S` is\n\n.. code:: bash\n\n   pntl -SE home/user/senna -S 'I am gonna make him an offer he can not refuse.'\n\n\nFunctionality\n=============\n\n-  Semantic Role Labeling.\n-  Syntactic Parsing.\n-  Part of Speech Tagging (POS Tagging).\n-  Named Entity Recognisation (NER).\n-  Dependency Parsing.\n-  Shallow Chunking.\n-  Skip-gram(in-case).\n-  find the senna path if is install in the system.\n-  stanford parser and depPaser file into installed direction.\n\nFuture work\n===========\n-  tag2file(new)\n-  creating depParser for corresponding os environment\n-  custome input format for stanford parser insted of tree format\n\n\nFeatures\n========\n\n#. Fast: `SENNA`_ is written is C. So it is Fast.\n#. We use only dependency Extractor Component of Stanford Parser, which\n   takes in Syntactic Parse from SENNA and applies dependency\n   Extraction. So there is no need to load parsing models for Stanford\n   Parser, which takes time.\n#. Easy to use.\n#. Platform Supported - Windows, Linux and Mac\n#. Automatic finds stanford parsing jar if it is present in install path[pntl].\n\n.. note::\n\n    SENNA pipeline has a fixed maximum size of the sentences that it\n    can read. By default it is 1024 token/sentence. If you have larger\n    sentences, changing the MAX\\_SENTENCE\\_SIZE value in SENNA\\_main.c should beconsidered and your system specific binary should be rebuilt. Otherwise this could introduce misalignment errors.\n\nInstallation\n============\n\nRequires:\n~~~~~~~~~\n  A computer with 500mb memory, Java Runtime Environment (1.7\n  preferably, works with 1.6 too, but didnt test.) installed and python.\n\nLinux:\n```````\nrun:\n\n::\n\n    sudo python setup.py install \n\nwindows:\n````````\nrun this commands as administrator:\n\n::\n\n    python setup.py install\n\n\nBench Mark comparsion\n=====================\n\nBy using the ``time`` command in ubuntu on running the ``testsrl.py`` on\nthis `link`_ and along with ``tools.py`` on ``pntl``\n\n.. _link: https://github.com/jawahar273/SRLTagger\n\n\n+-----------------+-----------------+-----------------+\n|                 | pntl            | NLTK-senna      |\n+=================+=================+=================+\n| at fist run     |                 |                 |\n+-----------------+-----------------+-----------------+\n|                 | real 0m1.674s   | real 0m2.484s   |\n+-----------------+-----------------+-----------------+\n|                 | user 0m1.564s   | user 0m1.868s   |\n+-----------------+-----------------+-----------------+\n|                 | sys 0m0.228s    | sys 0m0.524s    |\n+-----------------+-----------------+-----------------+\n| at second run   |                 |                 |\n+-----------------+-----------------+-----------------+\n|                 | real 0m1.245s   | real 0m3.359s   |\n+-----------------+-----------------+-----------------+\n|                 | user 0m1.560s   | user 0m2.016s   |\n+-----------------+-----------------+-----------------+\n|                 | sys 0m0.152s    | sys 0m1.168s    |\n+-----------------+-----------------+-----------------+\n\n\n.. note:: \n\n   this bench mark may differt accouding to system\u2019s working and to restult present here is exact same result in my system ububtu 4Gb RAM\n   and i3 process. If I find another good benchmark techinque then I will\n   change to it.\n\n\n.. _practNLPTools: https://github.com/jawahar273/practNLPTools-lite\n.. _SENNA: http://ronan.collobert.com/senna/\n.. _properbranch: https://github.com/jawahar273/practNLPTools-lite/tree/pyup-update-pytest-3.2.2-to-3.2.3\n.. _devbranch: https://github.com/jawahar273/practNLPTools-lite/tree/dev\n\n.. |Author| image:: https://img.shields.io/badge/Author-jawahar-blue.svg\n.. |Python-version-3| image:: https://img.shields.io/badge/Py-version-Python--3.5-green.svg\n.. |Build Status| image:: https://travis-ci.org/jawahar273/practNLPTools.svg?branch=master\n   :target: https://travis-ci.org/jawahar273/practNLPTools\n.. |FOSSA Status| image:: https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fjawahar273%2FpractNLPTools-lite.svg?type=small\n   :target: https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fjawahar273%2FpractNLPTools-lite?ref=badge_small\n\n\n.. Features\n.. --------\n\n.. * TODO\n\nCredits\n=======\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.2.3-beta\n----------\n* Proper release for PyPI version.\n\n0.2.0 4-alpha\n------------------\n* Marking standard tools for `pntl`. \n\n0.1.1 (2017-09-17)\n------------------\n\n* Planing to release on PyPI.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jawahar273/practNLPTools-lite", "keywords": "practnlptools-lite,senna,python,pntl,pysenna", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pntl", "package_url": "https://pypi.org/project/pntl/", "platform": "", "project_url": "https://pypi.org/project/pntl/", "project_urls": {"Homepage": "https://github.com/jawahar273/practNLPTools-lite"}, "release_url": "https://pypi.org/project/pntl/0.2.4/", "requires_dist": ["Click (>=6.0)", "colorama (>=0.3.9)"], "requires_python": "", "summary": "used to interface with Senna and stanford-parser.jar for dependency parsing", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br><br>==================<br>practNLPTools-lite<br>==================<br><br><br>Creating practNLPTools in lite mode.[ get the old coding in `devbranch`_  or old stable code `properbranch`_]<br><br>|Author|<br><br>|Build Status| - on click this built this might take you to build of<br>`practNLPTools`_ which is testing ground for this repository so don\u2019t<br>worry.<br><br><br>Practical Natural Language Processing Tools for Humans.<br>practNLPTools is a pythonic library over `SENNA`_ and Stanford<br>Dependency Extractor.<br><br>.. |pypi status| image:: https://img.shields.io/pypi/v/practNLPTools-lite.svg<br>        :target: https://pypi.python.org/pypi/pntl<br><br>.. |travis status| image:: https://img.shields.io/travis/jawahar273/practNLPTools-lite.svg<br>        :target: https://travis-ci.org/jawahar273/practNLPTools-lite<br><br>.. |doc status| image:: https://readthedocs.org/projects/pntl/badge/?version=latest<br>        :target: https://pntl.readthedocs.io/en/latest/?badge=latest<br>        :alt: Documentation Status<br><br>.. |dep status| image:: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/shield.svg<br>     :target: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/<br>     :alt: Updates<br><br>.. |blocker status| image:: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/python-3-shield.svg<br>     :target: https://pyup.io/repos/github/jawahar273/practNLPTools-lite/<br>     :alt: Python 3<br><br>.. |Wercker status| image:: https://app.wercker.com/status/758bf4fa0e3bb9066d118385ee4aac1f/s/master<br>   :target: https://app.wercker.com/project/byKey/758bf4fa0e3bb9066d118385ee4aac1f<br><br>+-----------------+-----------------+<br>|    name         | status          |<br>+=================+=================+<br>| Wercker status  | |Wercker status||<br>+-----------------+-----------------+<br>| PyPi            |    |pypi status||<br>+-----------------+-----------------+<br>| travis          |  |travis status||<br>+-----------------+-----------------+<br>| Documentation   |     |doc status||<br>+-----------------+-----------------+<br>| dependency      |     |dep status||<br>+-----------------+-----------------+<br>| blocker Pyupbot | |blocker status||<br>+-----------------+-----------------+<br>| FOSSA           |   |FOSSA Status||<br>+-----------------+-----------------+<br><br>* Documentation: https://pntl.readthedocs.io<br><br>QuickStart <br>==========<br><br>Downlarding Stanford Parser JAR<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>To downlard the stanford-parser from github automatically and placing them inside the install direction.<br><br>.. code:: bash<br><br>   pntl -I true<br>   # downlards required file from github.<br><br>Running Predefine Examples Sentences<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>To run exiting example for batch(which has more than one list of examples).<br><br>.. code:: bash<br><br>   pntl -SE home/user/senna -B true<br><br>To run predefine example for one sentence.<br><br>.. code:: bash<br><br>   pntl -SE home/user/senna<br><br>Running user given sentence<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>To run user given example using `-S` is<br><br>.. code:: bash<br><br>   pntl -SE home/user/senna -S 'I am gonna make him an offer he can not refuse.'<br><br><br>Functionality<br>=============<br><br>-  Semantic Role Labeling.<br>-  Syntactic Parsing.<br>-  Part of Speech Tagging (POS Tagging).<br>-  Named Entity Recognisation (NER).<br>-  Dependency Parsing.<br>-  Shallow Chunking.<br>-  Skip-gram(in-case).<br>-  find the senna path if is install in the system.<br>-  stanford parser and depPaser file into installed direction.<br><br>Future work<br>===========<br>-  tag2file(new)<br>-  creating depParser for corresponding os environment<br>-  custome input format for stanford parser insted of tree format<br><br><br>Features<br>========<br><br>#. Fast: `SENNA`_ is written is C. So it is Fast.<br>#. We use only dependency Extractor Component of Stanford Parser, which<br>   takes in Syntactic Parse from SENNA and applies dependency<br>   Extraction. So there is no need to load parsing models for Stanford<br>   Parser, which takes time.<br>#. Easy to use.<br>#. Platform Supported - Windows, Linux and Mac<br>#. Automatic finds stanford parsing jar if it is present in install path[pntl].<br><br>.. note::<br><br>    SENNA pipeline has a fixed maximum size of the sentences that it<br>    can read. By default it is 1024 token/sentence. If you have larger<br>    sentences, changing the MAX\\_SENTENCE\\_SIZE value in SENNA\\_main.c should beconsidered and your system specific binary should be rebuilt. Otherwise this could introduce misalignment errors.<br><br>Installation<br>============<br><br>Requires:<br>~~~~~~~~~<br>  A computer with 500mb memory, Java Runtime Environment (1.7<br>  preferably, works with 1.6 too, but didnt test.) installed and python.<br><br>Linux:<br>```````<br>run:<br><br>::<br><br>    sudo python setup.py install <br><br>windows:<br>````````<br>run this commands as administrator:<br><br>::<br><br>    python setup.py install<br><br><br>Bench Mark comparsion<br>=====================<br><br>By using the ``time`` command in ubuntu on running the ``testsrl.py`` on<br>this `link`_ and along with ``tools.py`` on ``pntl``<br><br>.. _link: https://github.com/jawahar273/SRLTagger<br><br><br>+-----------------+-----------------+-----------------+<br>|                 | pntl            | NLTK-senna      |<br>+=================+=================+=================+<br>| at fist run     |                 |                 |<br>+-----------------+-----------------+-----------------+<br>|                 | real 0m1.674s   | real 0m2.484s   |<br>+-----------------+-----------------+-----------------+<br>|                 | user 0m1.564s   | user 0m1.868s   |<br>+-----------------+-----------------+-----------------+<br>|                 | sys 0m0.228s    | sys 0m0.524s    |<br>+-----------------+-----------------+-----------------+<br>| at second run   |                 |                 |<br>+-----------------+-----------------+-----------------+<br>|                 | real 0m1.245s   | real 0m3.359s   |<br>+-----------------+-----------------+-----------------+<br>|                 | user 0m1.560s   | user 0m2.016s   |<br>+-----------------+-----------------+-----------------+<br>|                 | sys 0m0.152s    | sys 0m1.168s    |<br>+-----------------+-----------------+-----------------+<br><br><br>.. note:: <br><br>   this bench mark may differt accouding to system\u2019s working and to restult present here is exact same result in my system ububtu 4Gb RAM<br>   and i3 process. If I find another good benchmark techinque then I will<br>   change to it.<br><br><br>.. _practNLPTools: https://github.com/jawahar273/practNLPTools-lite<br>.. _SENNA: http://ronan.collobert.com/senna/<br>.. _properbranch: https://github.com/jawahar273/practNLPTools-lite/tree/pyup-update-pytest-3.2.2-to-3.2.3<br>.. _devbranch: https://github.com/jawahar273/practNLPTools-lite/tree/dev<br><br>.. |Author| image:: https://img.shields.io/badge/Author-jawahar-blue.svg<br>.. |Python-version-3| image:: https://img.shields.io/badge/Py-version-Python--3.5-green.svg<br>.. |Build Status| image:: https://travis-ci.org/jawahar273/practNLPTools.svg?branch=master<br>   :target: https://travis-ci.org/jawahar273/practNLPTools<br>.. |FOSSA Status| image:: https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fjawahar273%2FpractNLPTools-lite.svg?type=small<br>   :target: https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fjawahar273%2FpractNLPTools-lite?ref=badge_small<br><br><br>.. Features<br>.. --------<br><br>.. * TODO<br><br>Credits<br>=======<br><br>This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.<br><br>.. _Cookiecutter: https://github.com/audreyr/cookiecutter<br>.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage<br><br><br>=======<br>History<br>=======<br><br>0.2.3-beta<br>----------<br>* Proper release for PyPI version.<br><br>0.2.0 4-alpha<br>------------------<br>* Marking standard tools for `pntl`. <br><br>0.1.1 (2017-09-17)<br>------------------<br><br>* Planing to release on PyPI.<br><br><br>\n          </div>"}, "last_serial": 3530551, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "571f6c230ed0fa94b99867fda64b7121", "sha256": "31990f7c870fedf818c52172f499675622ca7ee4d6b212eb69983214ef100340"}, "downloads": -1, "filename": "pntl-0.2.0-py3.6.egg", "has_sig": false, "md5_digest": "571f6c230ed0fa94b99867fda64b7121", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 22413, "upload_time": "2017-10-05T16:52:02", "upload_time_iso_8601": "2017-10-05T16:52:02.611603Z", "url": "https://files.pythonhosted.org/packages/1e/58/2cb70cf57312fb6aabcc2ef2bc700e952c804e9c3057e4f231e141e53945/pntl-0.2.0-py3.6.egg", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "49d497ba6fe639f5dc1efdab0c2a1c7c", "sha256": "da0e63e4c104126a271edf7985b3bc6c4e90c3b808023bef74815860b118e8a8"}, "downloads": -1, "filename": "pntl-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49d497ba6fe639f5dc1efdab0c2a1c7c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2451395, "upload_time": "2017-10-05T16:51:59", "upload_time_iso_8601": "2017-10-05T16:51:59.329606Z", "url": "https://files.pythonhosted.org/packages/db/ad/9bab823d7045f180d46c846eb4a586fbea64160433bba05c82bd73ae40ac/pntl-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c0a7eeea97e26f4db24d0105bdee50b9", "sha256": "758abc93ab924f8e8671b1c1968b7258d5f4580a4ca23b481d328c4240b4d887"}, "downloads": -1, "filename": "pntl-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0a7eeea97e26f4db24d0105bdee50b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2450808, "upload_time": "2017-10-09T17:01:04", "upload_time_iso_8601": "2017-10-09T17:01:04.165556Z", "url": "https://files.pythonhosted.org/packages/bb/d0/93c63461d6eac3527f7baacf644ca42311578d502352f9df103211c1f4de/pntl-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41bf76a0b38014074d56ead36d962592", "sha256": "595371e01798092134e6d9d885e41de27660991614eb3d942e77bc8bea85adc5"}, "downloads": -1, "filename": "pntl-0.2.2.tar.gz", "has_sig": false, "md5_digest": "41bf76a0b38014074d56ead36d962592", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2462929, "upload_time": "2017-10-09T17:03:02", "upload_time_iso_8601": "2017-10-09T17:03:02.327069Z", "url": "https://files.pythonhosted.org/packages/42/68/46ee00eb03dfa4c1b1f79dacec6ebb9766e6c859571bea58e74fe33f82d2/pntl-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "52b6545637dc2a60676204cb2729482b", "sha256": "d443f805d26abc4c3030b7ccfb36fa0dfe09037f2c8b42b34895160b036b2bec"}, "downloads": -1, "filename": "pntl-0.2.3-py3.6.egg", "has_sig": false, "md5_digest": "52b6545637dc2a60676204cb2729482b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 2458450, "upload_time": "2017-11-18T17:24:26", "upload_time_iso_8601": "2017-11-18T17:24:26.353367Z", "url": "https://files.pythonhosted.org/packages/05/05/29e5cd34ac2d6649dd0b1c4478e2de3018efecc652fdd23efee7a92aa6ec/pntl-0.2.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8636ad51007521a2260068ccda8f39c4", "sha256": "9102b28fe0cde6f4c92f595cb9939d877eddfb5515120a4ccb5258c0a0e69ca4"}, "downloads": -1, "filename": "pntl-0.2.3.tar.gz", "has_sig": false, "md5_digest": "8636ad51007521a2260068ccda8f39c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2462928, "upload_time": "2017-11-18T17:24:41", "upload_time_iso_8601": "2017-11-18T17:24:41.381455Z", "url": "https://files.pythonhosted.org/packages/5c/bf/3e7b7d6252a6896513b74044fad100b7b3a4f3fa4ca8aba8b167a39ecf9f/pntl-0.2.3.tar.gz", "yanked": false}], "0.2.3.2": [{"comment_text": "", "digests": {"md5": "4106b1ca6f32d3a416755ce8306545d9", "sha256": "2ef3bbdbaf7db21f22ef2d2638e3d72278b5fb2a3f39fd043f8d11b803422a7b"}, "downloads": -1, "filename": "pntl-0.2.3.2-py3.6.egg", "has_sig": false, "md5_digest": "4106b1ca6f32d3a416755ce8306545d9", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 2461496, "upload_time": "2017-12-23T18:00:41", "upload_time_iso_8601": "2017-12-23T18:00:41.710616Z", "url": "https://files.pythonhosted.org/packages/9a/c0/4f2dd3e7ff3ee9f44474b198366a9e52499100c52623e57fb29ab1babfe0/pntl-0.2.3.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "037079209593c56f19bf72d3b8a0a57b", "sha256": "9036a9c017515ea6d4c107d07b6ad0f4868250a009a2dca51892aed4d3f6a6f1"}, "downloads": -1, "filename": "pntl-0.2.3.2.tar.gz", "has_sig": false, "md5_digest": "037079209593c56f19bf72d3b8a0a57b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2474888, "upload_time": "2017-12-23T18:00:48", "upload_time_iso_8601": "2017-12-23T18:00:48.938118Z", "url": "https://files.pythonhosted.org/packages/c5/a2/1281a20b6cc223f39caf6167dd3b6dbb796ce89935b6482e46e80670abb6/pntl-0.2.3.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "dfce95100169de8020e3713fa4cf1934", "sha256": "44939d0404fbef5bd016d72355956c6ac457d2ea33fab6a951ba9ee0500128cd"}, "downloads": -1, "filename": "pntl-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dfce95100169de8020e3713fa4cf1934", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2451723, "upload_time": "2018-01-29T05:58:04", "upload_time_iso_8601": "2018-01-29T05:58:04.919009Z", "url": "https://files.pythonhosted.org/packages/a4/95/2d76e2c2e6f08949e7d8ba6ee56e4f2233f51c129b487bd4008f0cf7f833/pntl-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0eff9455dac499deabe8cc3f42855af1", "sha256": "b258746d667714c292f09a66d3b8919c6b4ab797014edcced73c9937d7ac165a"}, "downloads": -1, "filename": "pntl-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0eff9455dac499deabe8cc3f42855af1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2466592, "upload_time": "2018-01-29T05:58:18", "upload_time_iso_8601": "2018-01-29T05:58:18.566669Z", "url": "https://files.pythonhosted.org/packages/db/a3/64ab82e23b5cca360d83134ed43ed48bbf826b42fe91d35dfb6b0de67a3c/pntl-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfce95100169de8020e3713fa4cf1934", "sha256": "44939d0404fbef5bd016d72355956c6ac457d2ea33fab6a951ba9ee0500128cd"}, "downloads": -1, "filename": "pntl-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dfce95100169de8020e3713fa4cf1934", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 2451723, "upload_time": "2018-01-29T05:58:04", "upload_time_iso_8601": "2018-01-29T05:58:04.919009Z", "url": "https://files.pythonhosted.org/packages/a4/95/2d76e2c2e6f08949e7d8ba6ee56e4f2233f51c129b487bd4008f0cf7f833/pntl-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0eff9455dac499deabe8cc3f42855af1", "sha256": "b258746d667714c292f09a66d3b8919c6b4ab797014edcced73c9937d7ac165a"}, "downloads": -1, "filename": "pntl-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0eff9455dac499deabe8cc3f42855af1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2466592, "upload_time": "2018-01-29T05:58:18", "upload_time_iso_8601": "2018-01-29T05:58:18.566669Z", "url": "https://files.pythonhosted.org/packages/db/a3/64ab82e23b5cca360d83134ed43ed48bbf826b42fe91d35dfb6b0de67a3c/pntl-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:12 2020"}