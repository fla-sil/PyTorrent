{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# MSVDD + Bloc\n\n(Microsoft + DataKind AI in Cities Virtual Accelerator - DataDive) + (Bloc)\n\n## setup\n\n1. **Clone this repository** to a directory on your local machine:\n\n    ```\n    $ cd /path/to/your/preferred/directory\n    $ git clone git@github.com:datakind/msvdd_Bloc.git\n    $ cd msvdd_Bloc\n    ```\n\n1. **Create a virtual environment** to isolate our project's dependencies from your other projects'. Use whichever tool you prefer (e.g. `virtualenv`, `pyenv`, `pipenv`). Here's an example using `pyenv`:\n\n    ```\n    msvdd_Bloc(master)$ pyenv virtualenv 3.7.4 bloc-env\n    msvdd_Bloc(master)$ pyenv shell bloc-env\n    ```\n\n1. **Install the package** in one of two ways.\n   - To use the `msvdd_bloc` code as-is without further development, installation is simple:\n\n        ```\n        (bloc-env) msvdd_Bloc(master)$ pip install .\n        ```\n\n   - To further develop the code, install the package in locally-editable (aka develop) mode, plus a few additional dependencies:\n\n        ```\n        (bloc-env) msvdd_Bloc(master)$ pip install -e .\n        (bloc-env) msvdd_Bloc(master)$ pip install -r requirements-dev.txt\n        ```\n\n1. **Create a branch** with a descriptive name for you to hack on, as needed:\n\n    ```\n    (bloc-env) msvdd_Bloc(master)$ git pull\n    (bloc-env) msvdd_Bloc(master)$ git checkout -b my-example-branch-name\n    ```\n\n## documentation\n\nStand-alone doc files live under the top-level `docs/` directory and are written in [reStructured Text format](http://docutils.sourceforge.net/docs/user/rst/quickref.html). They are built using `sphinx`:\n\n```\n$ cd docs\n$ make html\n```\n\nAs needed, commit the latest version of the built HTML docs to the project's `master` branch:\n\n```\n$ git commit -am \"Update built HTML docs\"\n$ git push origin master\n```\n\nThese files are automatically published through GitHub Pages, and are accessible via web browser at https://datakind.github.io/msvdd_Bloc.\n\nIn-code docstrings follow [Google style](https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings). These docstrings are automatically incorporated into the main docs via `sphinx.ext.sphinx-autodoc`. Refer to the [sphinx site](https://www.sphinx-doc.org/en/master/) for details.\n\n\n## tests\n\nTest modules live under the top-level `tests/` directory. They are run using `pytest`:\n\n```\n$ cd tests\n$ pytest -vv .\n```\n\nA coverage report may additionally be generated using `pytest-cov`:\n\n```\n$ pytest -vv --cov=msvdd_bloc --cov-report=term-missing .\n```\n\nRefer to the [pytest site](https://docs.pytest.org/en/latest/) for details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datakind/msvdd_Bloc", "keywords": "", "license": "", "maintainer": "Burton DeWilde", "maintainer_email": "burtdewilde@gmail.com", "name": "hiphopscrap", "package_url": "https://pypi.org/project/hiphopscrap/", "platform": "", "project_url": "https://pypi.org/project/hiphopscrap/", "project_urls": {"Homepage": "https://github.com/datakind/msvdd_Bloc"}, "release_url": "https://pypi.org/project/hiphopscrap/0.1.1/", "requires_dist": ["beautifulsoup4 (>=4.7.0)", "Faker (>=2.0.0)", "ftfy (>=5.6)", "glom (>=19.0.0)", "marshmallow (>=3.0.0)", "matplotlib (>=3.0.0)", "pandas (>=0.25.0)", "probablepeople (>=0.5.4)", "python-crfsuite (>=0.9.6)", "requests (>=2.20.0)", "spacy (<2.2,>=2.1)", "textacy (>=0.9.0)", "tika (>=1.19)", "toolz (>=0.10.0)", "usaddress (>=0.5.10)", "watermark (>=1.8.0)", "yapdfminer (>=1.2.0)"], "requires_python": ">=3.6", "summary": "fetch, munge, and parse r\u00e9sum\u00e9s and job postings", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MSVDD + Bloc</h1>\n<p>(Microsoft + DataKind AI in Cities Virtual Accelerator - DataDive) + (Bloc)</p>\n<h2>setup</h2>\n<ol>\n<li>\n<p><strong>Clone this repository</strong> to a directory on your local machine:</p>\n<pre><code>$ cd /path/to/your/preferred/directory\n$ git clone git@github.com:datakind/msvdd_Bloc.git\n$ cd msvdd_Bloc\n</code></pre>\n</li>\n<li>\n<p><strong>Create a virtual environment</strong> to isolate our project's dependencies from your other projects'. Use whichever tool you prefer (e.g. <code>virtualenv</code>, <code>pyenv</code>, <code>pipenv</code>). Here's an example using <code>pyenv</code>:</p>\n<pre><code>msvdd_Bloc(master)$ pyenv virtualenv 3.7.4 bloc-env\nmsvdd_Bloc(master)$ pyenv shell bloc-env\n</code></pre>\n</li>\n<li>\n<p><strong>Install the package</strong> in one of two ways.</p>\n<ul>\n<li>\n<p>To use the <code>msvdd_bloc</code> code as-is without further development, installation is simple:</p>\n<pre><code>(bloc-env) msvdd_Bloc(master)$ pip install .\n</code></pre>\n</li>\n<li>\n<p>To further develop the code, install the package in locally-editable (aka develop) mode, plus a few additional dependencies:</p>\n<pre><code>(bloc-env) msvdd_Bloc(master)$ pip install -e .\n(bloc-env) msvdd_Bloc(master)$ pip install -r requirements-dev.txt\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Create a branch</strong> with a descriptive name for you to hack on, as needed:</p>\n<pre><code>(bloc-env) msvdd_Bloc(master)$ git pull\n(bloc-env) msvdd_Bloc(master)$ git checkout -b my-example-branch-name\n</code></pre>\n</li>\n</ol>\n<h2>documentation</h2>\n<p>Stand-alone doc files live under the top-level <code>docs/</code> directory and are written in <a href=\"http://docutils.sourceforge.net/docs/user/rst/quickref.html\" rel=\"nofollow\">reStructured Text format</a>. They are built using <code>sphinx</code>:</p>\n<pre><code>$ cd docs\n$ make html\n</code></pre>\n<p>As needed, commit the latest version of the built HTML docs to the project's <code>master</code> branch:</p>\n<pre><code>$ git commit -am \"Update built HTML docs\"\n$ git push origin master\n</code></pre>\n<p>These files are automatically published through GitHub Pages, and are accessible via web browser at <a href=\"https://datakind.github.io/msvdd_Bloc\" rel=\"nofollow\">https://datakind.github.io/msvdd_Bloc</a>.</p>\n<p>In-code docstrings follow <a href=\"https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings\" rel=\"nofollow\">Google style</a>. These docstrings are automatically incorporated into the main docs via <code>sphinx.ext.sphinx-autodoc</code>. Refer to the <a href=\"https://www.sphinx-doc.org/en/master/\" rel=\"nofollow\">sphinx site</a> for details.</p>\n<h2>tests</h2>\n<p>Test modules live under the top-level <code>tests/</code> directory. They are run using <code>pytest</code>:</p>\n<pre><code>$ cd tests\n$ pytest -vv .\n</code></pre>\n<p>A coverage report may additionally be generated using <code>pytest-cov</code>:</p>\n<pre><code>$ pytest -vv --cov=msvdd_bloc --cov-report=term-missing .\n</code></pre>\n<p>Refer to the <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest site</a> for details.</p>\n\n          </div>"}, "last_serial": 6723413, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "d576653b31df65a3fbbffcf89fd7d020", "sha256": "d6f615acf23ad4a1d0e10e19ebcf424a450f6676412b521d2ab23517906b32fc"}, "downloads": -1, "filename": "hiphopscrap-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d576653b31df65a3fbbffcf89fd7d020", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 65634, "upload_time": "2020-02-29T07:29:48", "upload_time_iso_8601": "2020-02-29T07:29:48.182788Z", "url": "https://files.pythonhosted.org/packages/7b/24/43575087f72e9f43338e0e2791145583797c6ed4a66f78410eed17f0c13e/hiphopscrap-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "772bcb65f03d97f559066b8bb03739d9", "sha256": "eeee247eaece36f02ff22702b69247a82e56f031a4f0c566115caf0cde5dac60"}, "downloads": -1, "filename": "hiphopscrap-0.1.1.tar.gz", "has_sig": false, "md5_digest": "772bcb65f03d97f559066b8bb03739d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53445, "upload_time": "2020-02-29T07:29:50", "upload_time_iso_8601": "2020-02-29T07:29:50.398941Z", "url": "https://files.pythonhosted.org/packages/b4/7d/6967dfdc826eebf86957b25ea285809b6a72f9ffb05939988c09e4aac8ee/hiphopscrap-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d576653b31df65a3fbbffcf89fd7d020", "sha256": "d6f615acf23ad4a1d0e10e19ebcf424a450f6676412b521d2ab23517906b32fc"}, "downloads": -1, "filename": "hiphopscrap-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d576653b31df65a3fbbffcf89fd7d020", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 65634, "upload_time": "2020-02-29T07:29:48", "upload_time_iso_8601": "2020-02-29T07:29:48.182788Z", "url": "https://files.pythonhosted.org/packages/7b/24/43575087f72e9f43338e0e2791145583797c6ed4a66f78410eed17f0c13e/hiphopscrap-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "772bcb65f03d97f559066b8bb03739d9", "sha256": "eeee247eaece36f02ff22702b69247a82e56f031a4f0c566115caf0cde5dac60"}, "downloads": -1, "filename": "hiphopscrap-0.1.1.tar.gz", "has_sig": false, "md5_digest": "772bcb65f03d97f559066b8bb03739d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53445, "upload_time": "2020-02-29T07:29:50", "upload_time_iso_8601": "2020-02-29T07:29:50.398941Z", "url": "https://files.pythonhosted.org/packages/b4/7d/6967dfdc826eebf86957b25ea285809b6a72f9ffb05939988c09e4aac8ee/hiphopscrap-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:10 2020"}