{"info": {"author": "J\u00e1nos M\u00e1rkus", "author_email": "aresius423@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# WTFormsValidator\nA python library for generating client side validation functions from [WTForms](https://wtforms.readthedocs.io/) for various validator libraries.\n\nDeveloped and tested with Python 3.8 and WTForms 2.3.1\nCompatible with Python 3.6 and Python 3.7\n\n## Table of Contents\n\n* [Supported validators](#supported-validators)\n* [Setup](#setup)\n* [Running the sample application](#running-the-sample-application)\n* [Usage](#usage)\n    * [Integrating with YairEO](#integrating-with-yaireo)\n    * [Integrating with ParsleyJS](#integrating-with-parsleyjs)\n    * [Integrating with Bouncer.js](#integrating-with-bouncerjs)\n    * [Implementing custom behaviour](#implementing-custom-behaviour)\n\n## Supported validators\n\nHere you can see which libraries are currently supported or planned to be added, and which WTForms validators are supported by them.  \nValidators marked with an R are supported via regexes. Using multiple regex-backed validators concurrently will disable all but the last one.\n\n| WTForms validator | [YairEO](https://github.com/yairEO/validator) | [ParsleyJS](https://parsleyjs.org/doc/examples.html)  | [Bouncer.js](https://github.com/cferdinandi/bouncer) | [just-validate](https://github.com/horprogs/Just-validate) | [Pristine](https://github.com/sha256/Pristine) | [jQuery validation](https://github.com/jquery-validation/jquery-validation) |\n|-------------------|---------|-----------|-------------|---------------|----------|-------------------|\n| DataRequired      |  \u2714\ufe0f      |  \u2714\ufe0f        | \u2714\ufe0f           |    TODO       | TODO     | TODO              |\n| Email             |\u2714\ufe0f\\|R\u00b9    | \u2714\ufe0f\\|R\u00b9     | \u2714\ufe0f\\|R\u00b9       |               |          |                   |\n| EqualTo           | \u2714\ufe0f       |  \u2714\ufe0f        | \u274c          |               |          |                   |\n| InputRequired     | \u2714\ufe0f\u00b2      |  \u2714\ufe0f\u00b2       | \u2714\ufe0f\u00b2          |               |          |                   |\n| IPAddress         | R       | R         | R           |               |          |                   |\n| Length            | \u2714\ufe0f       |  \u2714\ufe0f        | \u2714\ufe0f           |               |          |                   |\n| MacAddress        | R       | R         | R           |               |          |                   |\n| NumberRange       | \u2714\ufe0f       |  \u2714\ufe0f        | \u2714\ufe0f           |               |          |                   |\n| Optional          | \u2714\ufe0f\u00b3      |  \u2714\ufe0f        | \u2714\ufe0f           |               |          |                   |\n| Regexp            | \u2714\ufe0f       | \u2714\ufe0f         | \u2714\ufe0f           |               |          |                   |\n| URL               | \u2714\ufe0f\\|R\u00b9   | \u2714\ufe0f\\|R\u00b9     | \u2714\ufe0f\\|R\u00b9       |               |          |                   |\n| UUID              | R       | R         | R           |               |          |                   |\n| AnyOf             | R       | R         | R           |               |          |                   |\n| NoneOf            | R       | R         | R           |               |          |                   |\n| Custom validators | \u274c      | \u274c        | \u274c          |               |          |                   |\n| Custom errors     | \u274c\u2074     | \u2714\ufe0f         | \u2714\ufe0f           |               |          |                   | \n\n\u00b9 These libraries have built-in support for e-mail and URL validation, but you can choose to use the WTFormsValidation's regex validators instead. Defaults to built-in, unless that requires WTFormsValidation to change the field's type (in the case of YairEO and Bouncer.js)  \n\u00b2 Same behaviour as DataRequired  \n\u00b3 Due to a bug in YairEO, only fields marked as required are validated, so currently this should have no effect  \n\u2074 With YairEO currently you can only override the default messages\n\n## Setup\n\nInstall it with pip, in your preferred virtual environment:\n\n```pip install WTFormsValidation```\n\n## Running the sample application\n\n* Create a virtualenv ```virtualenv -p python3.8 venv```\n* Activate it ```. venv/bin/activate```\n* Install the sample's requirements ```pip install -r sample/requirements.txt```\n* Run ```python -m sample.sample_app```\n* Use the navbar to select which validator's demo you wish to examine.\n\n## Usage\n\nAdding the validator library's boilerplate code should be done according to their documentation. Integrate WTFormsValidator as described below.\n\n### Integrating with YairEO\n\nUsing the default settings for the tagger class:\n```\nfrom WTFormsValidation import yairify\n...\nrender_template('your_template.html', form=yairify(form))\n```\n\nor by instantiating the tagger class yourself:\n```\nfrom WTFormsValidation.tagging.yaireo import YairEOtagger\nyaireo_tagger = YairEOtagger(email_builtin=True, url_builtin=True)  # defaults negated\n...\nrender_template('your_template.html', form=yaireo_tagger.extend(form))\n```\n\n### Integrating with ParsleyJS\n\nUsing the default settings for the tagger class:\n```\nfrom WTFormsValidation import parslify\n...\nrender_template('your_template.html', form=parslify(form))\n```\n\nor by instantiating the tagger class yourself:\n```\nfrom WTFormsValidation.tagging.parsley import ParsleyTagger\nparsley_tagger = ParsleyTagger(email_builtin=False, url_builtin=False)  # defaults negated\n...\nrender_template('your_template.html', form=parsley_tagger.extend(form))\n```\n\n### Integrating with Bouncer.js\n\nUsing the default settings for the tagger class:\n```\nfrom WTFormsValidation import bouncify\n...\nrender_template('your_template.html', form=bouncify(form))\n```\n\nor by instantiating the tagger class yourself:\n```\nfrom WTFormsValidation.tagging.bouncer import BouncerTagger\nbouncer_tagger = BouncerTagger(email_builtin=True, url_builtin=True)  # defaults negated\n...\nrender_template('your_template.html', form=bouncer_tagger.extend(form))\n```\n\n## Implementing custom behaviour\n\nYou can inherit from the default tagger classes (YairEOtagger, ParsleyTagger, BouncerTagger) and override any handler functions to suit your use case.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Aresius423/WTFormsValidation", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "WTFormsValidation", "package_url": "https://pypi.org/project/WTFormsValidation/", "platform": "", "project_url": "https://pypi.org/project/WTFormsValidation/", "project_urls": {"Homepage": "https://github.com/Aresius423/WTFormsValidation"}, "release_url": "https://pypi.org/project/WTFormsValidation/0.1.0/", "requires_dist": ["wtforms"], "requires_python": ">=3.6", "summary": "A python library for generating client side validation functions from WTForms for various validator libraries.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WTFormsValidator</h1>\n<p>A python library for generating client side validation functions from <a href=\"https://wtforms.readthedocs.io/\" rel=\"nofollow\">WTForms</a> for various validator libraries.</p>\n<p>Developed and tested with Python 3.8 and WTForms 2.3.1\nCompatible with Python 3.6 and Python 3.7</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#supported-validators\" rel=\"nofollow\">Supported validators</a></li>\n<li><a href=\"#setup\" rel=\"nofollow\">Setup</a></li>\n<li><a href=\"#running-the-sample-application\" rel=\"nofollow\">Running the sample application</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#integrating-with-yaireo\" rel=\"nofollow\">Integrating with YairEO</a></li>\n<li><a href=\"#integrating-with-parsleyjs\" rel=\"nofollow\">Integrating with ParsleyJS</a></li>\n<li><a href=\"#integrating-with-bouncerjs\" rel=\"nofollow\">Integrating with Bouncer.js</a></li>\n<li><a href=\"#implementing-custom-behaviour\" rel=\"nofollow\">Implementing custom behaviour</a></li>\n</ul>\n</li>\n</ul>\n<h2>Supported validators</h2>\n<p>Here you can see which libraries are currently supported or planned to be added, and which WTForms validators are supported by them.<br>\nValidators marked with an R are supported via regexes. Using multiple regex-backed validators concurrently will disable all but the last one.</p>\n<table>\n<thead>\n<tr>\n<th>WTForms validator</th>\n<th><a href=\"https://github.com/yairEO/validator\" rel=\"nofollow\">YairEO</a></th>\n<th><a href=\"https://parsleyjs.org/doc/examples.html\" rel=\"nofollow\">ParsleyJS</a></th>\n<th><a href=\"https://github.com/cferdinandi/bouncer\" rel=\"nofollow\">Bouncer.js</a></th>\n<th><a href=\"https://github.com/horprogs/Just-validate\" rel=\"nofollow\">just-validate</a></th>\n<th><a href=\"https://github.com/sha256/Pristine\" rel=\"nofollow\">Pristine</a></th>\n<th><a href=\"https://github.com/jquery-validation/jquery-validation\" rel=\"nofollow\">jQuery validation</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DataRequired</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td>TODO</td>\n<td>TODO</td>\n<td>TODO</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>\u2714\ufe0f|R\u00b9</td>\n<td>\u2714\ufe0f|R\u00b9</td>\n<td>\u2714\ufe0f|R\u00b9</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>EqualTo</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td>\u274c</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>InputRequired</td>\n<td>\u2714\ufe0f\u00b2</td>\n<td>\u2714\ufe0f\u00b2</td>\n<td>\u2714\ufe0f\u00b2</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>IPAddress</td>\n<td>R</td>\n<td>R</td>\n<td>R</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Length</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MacAddress</td>\n<td>R</td>\n<td>R</td>\n<td>R</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>NumberRange</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Optional</td>\n<td>\u2714\ufe0f\u00b3</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Regexp</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>URL</td>\n<td>\u2714\ufe0f|R\u00b9</td>\n<td>\u2714\ufe0f|R\u00b9</td>\n<td>\u2714\ufe0f|R\u00b9</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>UUID</td>\n<td>R</td>\n<td>R</td>\n<td>R</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>AnyOf</td>\n<td>R</td>\n<td>R</td>\n<td>R</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>NoneOf</td>\n<td>R</td>\n<td>R</td>\n<td>R</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Custom validators</td>\n<td>\u274c</td>\n<td>\u274c</td>\n<td>\u274c</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Custom errors</td>\n<td>\u274c\u2074</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n<td></td>\n<td></td>\n<td></td>\n</tr></tbody></table>\n<p>\u00b9 These libraries have built-in support for e-mail and URL validation, but you can choose to use the WTFormsValidation's regex validators instead. Defaults to built-in, unless that requires WTFormsValidation to change the field's type (in the case of YairEO and Bouncer.js)<br>\n\u00b2 Same behaviour as DataRequired<br>\n\u00b3 Due to a bug in YairEO, only fields marked as required are validated, so currently this should have no effect<br>\n\u2074 With YairEO currently you can only override the default messages</p>\n<h2>Setup</h2>\n<p>Install it with pip, in your preferred virtual environment:</p>\n<p><code>pip install WTFormsValidation</code></p>\n<h2>Running the sample application</h2>\n<ul>\n<li>Create a virtualenv <code>virtualenv -p python3.8 venv</code></li>\n<li>Activate it <code>. venv/bin/activate</code></li>\n<li>Install the sample's requirements <code>pip install -r sample/requirements.txt</code></li>\n<li>Run <code>python -m sample.sample_app</code></li>\n<li>Use the navbar to select which validator's demo you wish to examine.</li>\n</ul>\n<h2>Usage</h2>\n<p>Adding the validator library's boilerplate code should be done according to their documentation. Integrate WTFormsValidator as described below.</p>\n<h3>Integrating with YairEO</h3>\n<p>Using the default settings for the tagger class:</p>\n<pre><code>from WTFormsValidation import yairify\n...\nrender_template('your_template.html', form=yairify(form))\n</code></pre>\n<p>or by instantiating the tagger class yourself:</p>\n<pre><code>from WTFormsValidation.tagging.yaireo import YairEOtagger\nyaireo_tagger = YairEOtagger(email_builtin=True, url_builtin=True)  # defaults negated\n...\nrender_template('your_template.html', form=yaireo_tagger.extend(form))\n</code></pre>\n<h3>Integrating with ParsleyJS</h3>\n<p>Using the default settings for the tagger class:</p>\n<pre><code>from WTFormsValidation import parslify\n...\nrender_template('your_template.html', form=parslify(form))\n</code></pre>\n<p>or by instantiating the tagger class yourself:</p>\n<pre><code>from WTFormsValidation.tagging.parsley import ParsleyTagger\nparsley_tagger = ParsleyTagger(email_builtin=False, url_builtin=False)  # defaults negated\n...\nrender_template('your_template.html', form=parsley_tagger.extend(form))\n</code></pre>\n<h3>Integrating with Bouncer.js</h3>\n<p>Using the default settings for the tagger class:</p>\n<pre><code>from WTFormsValidation import bouncify\n...\nrender_template('your_template.html', form=bouncify(form))\n</code></pre>\n<p>or by instantiating the tagger class yourself:</p>\n<pre><code>from WTFormsValidation.tagging.bouncer import BouncerTagger\nbouncer_tagger = BouncerTagger(email_builtin=True, url_builtin=True)  # defaults negated\n...\nrender_template('your_template.html', form=bouncer_tagger.extend(form))\n</code></pre>\n<h2>Implementing custom behaviour</h2>\n<p>You can inherit from the default tagger classes (YairEOtagger, ParsleyTagger, BouncerTagger) and override any handler functions to suit your use case.</p>\n\n          </div>"}, "last_serial": 7163301, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bb5f5ab96f3441080861f2162fc6f40f", "sha256": "056e04232555baf0b67ffc7d3bdcb23784a5c310b29f98a9ad7f2229440fd24d"}, "downloads": -1, "filename": "WTFormsValidation-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb5f5ab96f3441080861f2162fc6f40f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10200, "upload_time": "2020-05-04T10:36:31", "upload_time_iso_8601": "2020-05-04T10:36:31.855955Z", "url": "https://files.pythonhosted.org/packages/c6/fa/5fb16a1a9f8cf11c79f2517e5536fd1c8995937603792e1c25996563ecc0/WTFormsValidation-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca82366c885592debf307822d7245f76", "sha256": "cd5cac1b2e3e0045aa5c60c1ab6d3af048885d8c041dc1484155024dd8500741"}, "downloads": -1, "filename": "WTFormsValidation-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ca82366c885592debf307822d7245f76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8274, "upload_time": "2020-05-04T10:36:33", "upload_time_iso_8601": "2020-05-04T10:36:33.938672Z", "url": "https://files.pythonhosted.org/packages/7c/bd/85643434701ac9518f4ac9614d3bccdee2b80766a265cab235e5f3db7252/WTFormsValidation-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb5f5ab96f3441080861f2162fc6f40f", "sha256": "056e04232555baf0b67ffc7d3bdcb23784a5c310b29f98a9ad7f2229440fd24d"}, "downloads": -1, "filename": "WTFormsValidation-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb5f5ab96f3441080861f2162fc6f40f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10200, "upload_time": "2020-05-04T10:36:31", "upload_time_iso_8601": "2020-05-04T10:36:31.855955Z", "url": "https://files.pythonhosted.org/packages/c6/fa/5fb16a1a9f8cf11c79f2517e5536fd1c8995937603792e1c25996563ecc0/WTFormsValidation-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca82366c885592debf307822d7245f76", "sha256": "cd5cac1b2e3e0045aa5c60c1ab6d3af048885d8c041dc1484155024dd8500741"}, "downloads": -1, "filename": "WTFormsValidation-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ca82366c885592debf307822d7245f76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8274, "upload_time": "2020-05-04T10:36:33", "upload_time_iso_8601": "2020-05-04T10:36:33.938672Z", "url": "https://files.pythonhosted.org/packages/7c/bd/85643434701ac9518f4ac9614d3bccdee2b80766a265cab235e5f3db7252/WTFormsValidation-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:50 2020"}