{"info": {"author": "MSI Shafik", "author_email": "shafik.te@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "=============================\nServices-Communicator\n=============================\n\n.. image:: https://badge.fury.io/py/services_communicator.svg\n    :target: https://badge.fury.io/py/services_communicator\n\n.. image:: https://travis-ci.org/eshafik/services_communicator.svg?branch=master\n    :target: https://travis-ci.org/eshafik/services_communicator\n\n.. image:: https://codecov.io/gh/eshafik/services_communicator/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/eshafik/services_communicator\n\nCommunicator for internal services\n\nDocumentation\n-------------\n\nThe full documentation is at https://services_communicator.readthedocs.io.\n\nQuickstart\n----------\n\nInstall Services-Communicator::\n\n    pip install services_communicator\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'services_communicator.apps.services_communicator',\n        ...\n    )\n\nMake migrate to database::\n\n    python manage.py migrate\n\n\nAdd CREDENTIALS on settings.py file::\n\n    CREDENTIALS = { <service id>: {\"username\": <username>, \"password\": <password>},\n                    <service id>: {\"username\": <username>, \"password\": <password>},\n                    ..........................................................\n                    }\n    or,\n    CREDENTIALS = { \"<service slug>\": {\"username\": <username>, \"password\": <password>},\n                    \"<service slug>\": {\"username\": <username>, \"password\": <password>},\n                    ..........................................................\n                    }\n    or,\n    CREDENTIALS = { \"<service guid>\": {\"username\": <username>, \"password\": <password>},\n                    \"<service guid>\": {\"username\": <username>, \"password\": <password>},\n                    ..........................................................\n                    }\n\n\n\nNow make your own Communicator:\n\n.. code-block:: python\n\n\n    from services_communicator.communicator import Communicator\n\n    class CustomCommunicator(Communicator):\n        \"\"\" Create your custom method here like this by inheriting Communicator\"\"\"\n\n        def get_roles(self, *args, **kwargs):\n            \"\"\"\n                - To get other service roles\n            :return:\n            \"\"\"\n            path = self.service.get_full_url + \"/users/get_role/\" # service url extension to do this task\n            response = self._get_action(path=path, headers=self._token())\n            return response.json()\n\n        def post_roles(self, *args, **kwargs):\n            \"\"\"\n                - To create other service roles\n            :return:\n            \"\"\"\n            data = data\n            path = self.service.get_full_url + \"/users/create_role/\" # service url extension to do this task\n            response = self._post_action(path=path, data=data, headers=self._token())\n            return response.json()\n\n        def patch_roles(self, *args, **kwargs):\n            \"\"\"\n                - To create other service roles\n            :return:\n            \"\"\"\n            data = data\n            path = self.service.get_full_url + \"/users/update_role/\" # service url extension to do this task\n            response = self._patch_action(path=path, data=data, headers=self._token())\n            return response.json()\n\n\nTo perform action, initialize your CustomCommunicator and call your required methods:\n\n.. code-block:: python\n\n    service_communicator = CustomCommunicator(**{\"service_id\": <id>})\n    or,\n    service_communicator = CustomCommunicator(**{\"service_slug\": \"<service slug>\"})\n    or,\n    service_communicator = CustomCommunicator(**{\"service_guid\": \"<service guid>\"})\n\n    Now you can call your methods to perform specific task:\n\n    response = service_communicator.get_roles()\n\n\n\nPrecaution\n----------\n\n* This module is designed only for the personal development purpose.\n\n\n\n\n\nHistory\n-------\n\n0.1.0 (2020-01-13)\n++++++++++++++++++\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eshafik/services_communicator", "keywords": "services_communicator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "services-communicator", "package_url": "https://pypi.org/project/services-communicator/", "platform": "", "project_url": "https://pypi.org/project/services-communicator/", "project_urls": {"Homepage": "https://github.com/eshafik/services_communicator"}, "release_url": "https://pypi.org/project/services-communicator/0.2.3/", "requires_dist": ["django-model-utils (>=2.0)"], "requires_python": "", "summary": "Communicator for internal services", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/services_communicator\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/services_communicator.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/592f230638dd55b754182a0463348cf1bf6920fe/68747470733a2f2f62616467652e667572792e696f2f70792f73657276696365735f636f6d6d756e696361746f722e737667\"></a>\n<a href=\"https://travis-ci.org/eshafik/services_communicator\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/eshafik/services_communicator.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45b9fbfdb74f9bffcda50810cd4eef04a83ff8df/68747470733a2f2f7472617669732d63692e6f72672f6573686166696b2f73657276696365735f636f6d6d756e696361746f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/eshafik/services_communicator\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/eshafik/services_communicator/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29aea4bee3492b53f64638ba492b94027ef0546c/68747470733a2f2f636f6465636f762e696f2f67682f6573686166696b2f73657276696365735f636f6d6d756e696361746f722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Communicator for internal services</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"https://services_communicator.readthedocs.io\" rel=\"nofollow\">https://services_communicator.readthedocs.io</a>.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install Services-Communicator:</p>\n<pre>pip install services_communicator\n</pre>\n<p>Add it to your <cite>INSTALLED_APPS</cite>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'services_communicator.apps.services_communicator'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Make migrate to database:</p>\n<pre>python manage.py migrate\n</pre>\n<p>Add CREDENTIALS on settings.py file:</p>\n<pre>CREDENTIALS = { &lt;service id&gt;: {\"username\": &lt;username&gt;, \"password\": &lt;password&gt;},\n                &lt;service id&gt;: {\"username\": &lt;username&gt;, \"password\": &lt;password&gt;},\n                ..........................................................\n                }\nor,\nCREDENTIALS = { \"&lt;service slug&gt;\": {\"username\": &lt;username&gt;, \"password\": &lt;password&gt;},\n                \"&lt;service slug&gt;\": {\"username\": &lt;username&gt;, \"password\": &lt;password&gt;},\n                ..........................................................\n                }\nor,\nCREDENTIALS = { \"&lt;service guid&gt;\": {\"username\": &lt;username&gt;, \"password\": &lt;password&gt;},\n                \"&lt;service guid&gt;\": {\"username\": &lt;username&gt;, \"password\": &lt;password&gt;},\n                ..........................................................\n                }\n</pre>\n<p>Now make your own Communicator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">services_communicator.communicator</span> <span class=\"kn\">import</span> <span class=\"n\">Communicator</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomCommunicator</span><span class=\"p\">(</span><span class=\"n\">Communicator</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" Create your custom method here like this by inheriting Communicator\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_roles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n            - To get other service roles\n        :return:\n        \"\"\"</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">get_full_url</span> <span class=\"o\">+</span> <span class=\"s2\">\"/users/get_role/\"</span> <span class=\"c1\"># service url extension to do this task</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_action</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_token</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">post_roles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n            - To create other service roles\n        :return:\n        \"\"\"</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">get_full_url</span> <span class=\"o\">+</span> <span class=\"s2\">\"/users/create_role/\"</span> <span class=\"c1\"># service url extension to do this task</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_post_action</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_token</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">patch_roles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n            - To create other service roles\n        :return:\n        \"\"\"</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">get_full_url</span> <span class=\"o\">+</span> <span class=\"s2\">\"/users/update_role/\"</span> <span class=\"c1\"># service url extension to do this task</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_patch_action</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_token</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n</pre>\n<p>To perform action, initialize your CustomCommunicator and call your required methods:</p>\n<pre><span class=\"n\">service_communicator</span> <span class=\"o\">=</span> <span class=\"n\">CustomCommunicator</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s2\">\"service_id\"</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"p\">})</span>\n<span class=\"ow\">or</span><span class=\"p\">,</span>\n<span class=\"n\">service_communicator</span> <span class=\"o\">=</span> <span class=\"n\">CustomCommunicator</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s2\">\"service_slug\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;service slug&gt;\"</span><span class=\"p\">})</span>\n<span class=\"ow\">or</span><span class=\"p\">,</span>\n<span class=\"n\">service_communicator</span> <span class=\"o\">=</span> <span class=\"n\">CustomCommunicator</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s2\">\"service_guid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;service guid&gt;\"</span><span class=\"p\">})</span>\n\n<span class=\"n\">Now</span> <span class=\"n\">you</span> <span class=\"n\">can</span> <span class=\"n\">call</span> <span class=\"n\">your</span> <span class=\"n\">methods</span> <span class=\"n\">to</span> <span class=\"n\">perform</span> <span class=\"n\">specific</span> <span class=\"n\">task</span><span class=\"p\">:</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">service_communicator</span><span class=\"o\">.</span><span class=\"n\">get_roles</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"precaution\">\n<h2>Precaution</h2>\n<ul>\n<li>This module is designed only for the personal development purpose.</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2020-01-13)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7108643, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9729d7a3c361cbd17e9639056231c178", "sha256": "c359e82989970653beb47839cf5942a21f86e5efb9abab49d5717c3ce3f130e7"}, "downloads": -1, "filename": "services_communicator-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9729d7a3c361cbd17e9639056231c178", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9456, "upload_time": "2020-01-13T12:09:43", "upload_time_iso_8601": "2020-01-13T12:09:43.411763Z", "url": "https://files.pythonhosted.org/packages/4a/19/192db63f709b183787a056327a38e4359651d2840b391eb07d66c895da44/services_communicator-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aa7bd2a3782d1903164a68de467382b", "sha256": "128db631b4a30ce1dade4f7947879d6ff46da78e28f150934ef8238f553820f1"}, "downloads": -1, "filename": "services_communicator-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9aa7bd2a3782d1903164a68de467382b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8193, "upload_time": "2020-01-13T12:09:46", "upload_time_iso_8601": "2020-01-13T12:09:46.451405Z", "url": "https://files.pythonhosted.org/packages/36/01/dd1728fe8d3ede69473ac141b1b5a4afe9242ecf9da3f46e663063034688/services_communicator-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "49b097e787889bcf11d672a52fbc3a37", "sha256": "30fee94422ca6dd38dfd6dd71f55ccea2fd8eda4ed0b368f8fc09e91bb1b51c5"}, "downloads": -1, "filename": "services_communicator-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49b097e787889bcf11d672a52fbc3a37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9958, "upload_time": "2020-01-14T04:57:03", "upload_time_iso_8601": "2020-01-14T04:57:03.450511Z", "url": "https://files.pythonhosted.org/packages/d4/4f/2f3ad6e197e99de15eb14cc743712fd5995c4d2fdbfff30293ba977213b6/services_communicator-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e6ae1abcdc904ca0452ef7cafc37945", "sha256": "02cfcc6b89676ded23d9b3a00d66ffd6ecd7854c73b0c992a0cd8ca3ae09f396"}, "downloads": -1, "filename": "services_communicator-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4e6ae1abcdc904ca0452ef7cafc37945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9277, "upload_time": "2020-01-14T04:57:05", "upload_time_iso_8601": "2020-01-14T04:57:05.310776Z", "url": "https://files.pythonhosted.org/packages/06/92/963f51151f2b921c9beeab2d4eaead7165bb1c106a44c818dcff00bb2d0f/services_communicator-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "81b2a0f4f343809385e6c0e1129fa05c", "sha256": "5f7eddc9310979adc7e998ade52aac3d0cb352f9e6cb5ecfcb543fc42bc5f111"}, "downloads": -1, "filename": "services_communicator-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "81b2a0f4f343809385e6c0e1129fa05c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10049, "upload_time": "2020-01-27T09:35:29", "upload_time_iso_8601": "2020-01-27T09:35:29.809622Z", "url": "https://files.pythonhosted.org/packages/cb/31/fa58937481a8650da6b73ccc6b1707a45a5114b6aafba69aa180f087cb51/services_communicator-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e52a289cc8fd353778e728846a5134b", "sha256": "63e3a7cd7a07d76b59444329bc69f1668bae45a83e098f02f0876e25468560f1"}, "downloads": -1, "filename": "services_communicator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3e52a289cc8fd353778e728846a5134b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9355, "upload_time": "2020-01-27T09:35:32", "upload_time_iso_8601": "2020-01-27T09:35:32.082583Z", "url": "https://files.pythonhosted.org/packages/cd/f3/bed954eaab640d8a21ba9f1615aa0724bdad12f265c4e55d39f99343b7dc/services_communicator-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "da920a79e4717f119d7f2cefd030260d", "sha256": "3fde440e6588b2219e6b9557214dae8dc50ce71f5d0c54556ed34880e6832247"}, "downloads": -1, "filename": "services_communicator-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da920a79e4717f119d7f2cefd030260d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10111, "upload_time": "2020-03-29T06:17:18", "upload_time_iso_8601": "2020-03-29T06:17:18.857167Z", "url": "https://files.pythonhosted.org/packages/fa/c0/7e1e38a835739999e25a637060b84400716f5b58461b898aaea97674fe0e/services_communicator-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f302c83b47396fb522d6a242d2b8ef4", "sha256": "3fe4228d79a43e740f08bc29f658d7530b9c69dfcc54c4266b2ba24681d521fc"}, "downloads": -1, "filename": "services_communicator-0.1.3.tar.gz", "has_sig": false, "md5_digest": "3f302c83b47396fb522d6a242d2b8ef4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9411, "upload_time": "2020-03-29T06:17:21", "upload_time_iso_8601": "2020-03-29T06:17:21.127771Z", "url": "https://files.pythonhosted.org/packages/b4/84/9e6011ff1f2f80548dbb2cd0583af2506c68088080e3a85fa4d92834c4b6/services_communicator-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "8a8178ecaa1779fc43b729ee708b5c18", "sha256": "aa117078cfb716591c451dd4cebcd16bdf2efc32c5027c4355165b0fc0e8f014"}, "downloads": -1, "filename": "services_communicator-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a8178ecaa1779fc43b729ee708b5c18", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10110, "upload_time": "2020-03-29T07:10:38", "upload_time_iso_8601": "2020-03-29T07:10:38.678654Z", "url": "https://files.pythonhosted.org/packages/57/23/5b921c9e8265359655d0fd8baefa25c08ea4ad28b8a24ecdadc1d06d682d/services_communicator-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36b2161dce0f8738f298362c6ce5a754", "sha256": "9de9540c6c8be3f048236adee54ed609571acf9fb37e95c45740a4e37a0d4af3"}, "downloads": -1, "filename": "services_communicator-0.1.4.tar.gz", "has_sig": false, "md5_digest": "36b2161dce0f8738f298362c6ce5a754", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9399, "upload_time": "2020-03-29T07:10:41", "upload_time_iso_8601": "2020-03-29T07:10:41.306796Z", "url": "https://files.pythonhosted.org/packages/1b/f3/1149d703239f971e504d2e600d821ae5697dbe48ebe062377bc34d9cec45/services_communicator-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "06a3587b617c04a9d845fe8a3da80c94", "sha256": "4c42ab655ce8d878690a122848947f185c8179639762e336ffa6351abb84dd8b"}, "downloads": -1, "filename": "services_communicator-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "06a3587b617c04a9d845fe8a3da80c94", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10154, "upload_time": "2020-03-29T07:36:18", "upload_time_iso_8601": "2020-03-29T07:36:18.190466Z", "url": "https://files.pythonhosted.org/packages/99/4e/e40a526aec5bf49da4b518909b3ef78d861eb5db5e4705db74024670b21d/services_communicator-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a335b7477fcc41c48e3aed9a324a416f", "sha256": "2a92dc85737a983c88b742765f879ae5ba3f236958eb46f831937a710837293c"}, "downloads": -1, "filename": "services_communicator-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a335b7477fcc41c48e3aed9a324a416f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9443, "upload_time": "2020-03-29T07:36:22", "upload_time_iso_8601": "2020-03-29T07:36:22.401362Z", "url": "https://files.pythonhosted.org/packages/3e/00/a1c0aefd206339b95dbfaaf969488d479b25cf87af2aa71cd9511d368cbd/services_communicator-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "13d9e2e122f5734829e63173778fc561", "sha256": "854838dbf24fdf3a54ff8efbff32e409adff19a73fc75fb841f1399ae5baba13"}, "downloads": -1, "filename": "services_communicator-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13d9e2e122f5734829e63173778fc561", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10076, "upload_time": "2020-03-29T13:32:08", "upload_time_iso_8601": "2020-03-29T13:32:08.109518Z", "url": "https://files.pythonhosted.org/packages/23/8d/3b162bad8bedfe0e95e05fc67acd48cbf700388e24a471e96a7d1b63d4b6/services_communicator-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8ac62ded4d802b3f9a4cb6d74d3bcaa", "sha256": "0ef8bc7ab4207c8b6d70fefb489af9404bb6b61fe0eed11d8293dcd15e419d5c"}, "downloads": -1, "filename": "services_communicator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a8ac62ded4d802b3f9a4cb6d74d3bcaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9382, "upload_time": "2020-03-29T13:32:13", "upload_time_iso_8601": "2020-03-29T13:32:13.950714Z", "url": "https://files.pythonhosted.org/packages/40/15/c1160c46e86ec5e9466fb220d3ea81a102b7e510bd27ba71d2cb1b3f8f05/services_communicator-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fdb258483def5e48472bc64f507f0633", "sha256": "a0ab422ab0ef51d3abd9de7e7d172bb43062121399061bf41d2d72e5609c4431"}, "downloads": -1, "filename": "services_communicator-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fdb258483def5e48472bc64f507f0633", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10068, "upload_time": "2020-03-31T05:25:47", "upload_time_iso_8601": "2020-03-31T05:25:47.918355Z", "url": "https://files.pythonhosted.org/packages/95/94/3ad5551cbf6d98bf8e05219ffb53bfe57cb4d7feea2792174ad10b7ff035/services_communicator-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74bb00f9c98bf3619465e1388f64b4a3", "sha256": "64f2974580cf8567a8ef8e41957156cc704ec6930be51541bfe579755b558fa8"}, "downloads": -1, "filename": "services_communicator-0.2.1.tar.gz", "has_sig": false, "md5_digest": "74bb00f9c98bf3619465e1388f64b4a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9379, "upload_time": "2020-03-31T05:25:50", "upload_time_iso_8601": "2020-03-31T05:25:50.686709Z", "url": "https://files.pythonhosted.org/packages/eb/ec/6a8e661f52eaec7c805b8a3539afc5717c34d7b8dc8247273592ae9f3706/services_communicator-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "da19da21be4deaa50d5e1f4bedf9a30d", "sha256": "713715ecf174162524331d53d0b6c7c4f350a2934ecb67c18c6168939c90e9a2"}, "downloads": -1, "filename": "services_communicator-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da19da21be4deaa50d5e1f4bedf9a30d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10072, "upload_time": "2020-03-31T05:47:20", "upload_time_iso_8601": "2020-03-31T05:47:20.610588Z", "url": "https://files.pythonhosted.org/packages/d7/b2/f163463ddd9e6352b958fd8da14a8db9dec1fcb3f3247b00038f3f967794/services_communicator-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bd6a6f9bd46cdeffa5f2e5e839e7522", "sha256": "94eb60e7c13fe11df47b573e537ad96fba49e0a51edd33cda62b938668d3232a"}, "downloads": -1, "filename": "services_communicator-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4bd6a6f9bd46cdeffa5f2e5e839e7522", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9380, "upload_time": "2020-03-31T05:47:24", "upload_time_iso_8601": "2020-03-31T05:47:24.571116Z", "url": "https://files.pythonhosted.org/packages/f0/d0/2ae8edf46495e1d66fc080b53c28c3549eae821baf6c91f30788148e6fcb/services_communicator-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b3f6f2ef40257956659e6111a820d5f9", "sha256": "d099624123f5592ad6c8650c2e52d4c068e1547ff219846f3faf17341a3a8f56"}, "downloads": -1, "filename": "services_communicator-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3f6f2ef40257956659e6111a820d5f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10346, "upload_time": "2020-04-27T04:49:44", "upload_time_iso_8601": "2020-04-27T04:49:44.875687Z", "url": "https://files.pythonhosted.org/packages/d0/63/3fe8f51461bcab5a13d1192c3302e00b08fa6d2725f754330f1b57b19b2f/services_communicator-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4f67bcb6209269d7ac15425bcc5986f", "sha256": "a5663290383e62b6177a6cbe1850cfe1ec346179e983ff2969e44b05c40e11bd"}, "downloads": -1, "filename": "services_communicator-0.2.3.tar.gz", "has_sig": false, "md5_digest": "a4f67bcb6209269d7ac15425bcc5986f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9645, "upload_time": "2020-04-27T04:49:48", "upload_time_iso_8601": "2020-04-27T04:49:48.311661Z", "url": "https://files.pythonhosted.org/packages/53/c6/9ab1d7edfd1e1001f45e6c0808fd67b9e01d8a3342320fecd74e7b3e39fa/services_communicator-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3f6f2ef40257956659e6111a820d5f9", "sha256": "d099624123f5592ad6c8650c2e52d4c068e1547ff219846f3faf17341a3a8f56"}, "downloads": -1, "filename": "services_communicator-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3f6f2ef40257956659e6111a820d5f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10346, "upload_time": "2020-04-27T04:49:44", "upload_time_iso_8601": "2020-04-27T04:49:44.875687Z", "url": "https://files.pythonhosted.org/packages/d0/63/3fe8f51461bcab5a13d1192c3302e00b08fa6d2725f754330f1b57b19b2f/services_communicator-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4f67bcb6209269d7ac15425bcc5986f", "sha256": "a5663290383e62b6177a6cbe1850cfe1ec346179e983ff2969e44b05c40e11bd"}, "downloads": -1, "filename": "services_communicator-0.2.3.tar.gz", "has_sig": false, "md5_digest": "a4f67bcb6209269d7ac15425bcc5986f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9645, "upload_time": "2020-04-27T04:49:48", "upload_time_iso_8601": "2020-04-27T04:49:48.311661Z", "url": "https://files.pythonhosted.org/packages/53/c6/9ab1d7edfd1e1001f45e6c0808fd67b9e01d8a3342320fecd74e7b3e39fa/services_communicator-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:53 2020"}