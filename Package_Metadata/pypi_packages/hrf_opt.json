{"info": {"author": "Marian Schneider", "author_email": "marian.schneider@maastrichtuniversity.nl", "bugtrack_url": null, "classifiers": [], "description": "hrf_opt\n=======\n\nOptimize hemodynamic response function parameters.\n\nA free & open source package for finding best-fitting hemodynamic\nresponse function (HRF) parameters for fMRI data. Optimization takes\nplace within the framework of population receptive field (pRF)\nparameters.\n\nThe fitting process requires, for every voxel of fMRI data, optimized\npRF parameters. These can be obtained using\n`pyprf_feature <https://github.com/MSchnei/pyprf_feature>`__.\n\nInstallation\n------------\n\nFor installation, follow these steps:\n\n0. (Optional) Create conda environment\n\n.. code:: bash\n\n    conda create -n env_hrf_opt python=2.7\n    source activate env_hrf_opt\n    conda install pip\n\n1. Clone repository\n\n.. code:: bash\n\n    git clone https://github.com/MSchnei/hrf_opt.git\n\n2. Install hrf_opt with pip\n\n.. code:: bash\n\n    pip install /path/to/cloned/hrf_opt\n\nHow to use\n----------\n\n1. Run pyprf_feature to obtain an initial guess of the pRF parameters\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSee `here <https://github.com/MSchnei/pyprf_feature>`__ for more\ninformation on how to use pyprf_feature. In brief, open a terminal and\nrun:\n\n::\n\n    pyprf_feature -config path/to/custom_pRF_config.csv\n\n2. Obtain model responses for every voxel for best-fitting pRF model\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen pyprf_feature is done, run it again with -save_tc and -mdl_rsp\nflag. This will save the fitted pRF model time courses and corresponding\nneural responses to disk:\n\n::\n\n    pyprf_feature -config path/to/custom_pRF_config.csv -save_tc -mdl_rsp\n\n3. Adjust the csv file for hrf_opt\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAdjust the information in the config_default.csv file in the hrf_opt\nfolder, such that the provided information is correct. It is recommended\nto make a specific copy of the csv file for every subject.\n\n4. Run hrf_opt\n~~~~~~~~~~~~~~\n\nOpen a terminal and run:\n\n::\n\n    hrf_opt -config path/to/custom_hrf_opt_config.csv\n\nReferences\n----------\n\nThis application is based on the following work:\n\n-  Dumoulin, S. O., & Wandell, B. A. (2008). Population receptive field\n   estimates in human visual cortex. NeuroImage, 39(2), 647\u2013660.\n   https://doi.org/10.1016/j.neuroimage.2007.09.034\n\n-  Harvey, B. M., & Dumoulin, S. O. (2011). The Relationship between\n   Cortical Magnification Factor and Population Receptive Field Size in\n   Human Visual Cortex: Constancies in Cortical Architecture. Journal of\n   Neuroscience, 31(38), 13604\u201313612.\n   https://doi.org/10.1523/JNEUROSCI.2572-11.2011\n\nLicense\n-------\n\nThe project is licensed under `GNU General Public License Version\n3 <http://www.gnu.org/licenses/gpl.html>`__.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MSchnei/hrf_opt", "keywords": "pRF", "license": "GNU General Public License Version 3", "maintainer": "", "maintainer_email": "", "name": "hrf_opt", "package_url": "https://pypi.org/project/hrf_opt/", "platform": "", "project_url": "https://pypi.org/project/hrf_opt/", "project_urls": {"Homepage": "https://github.com/MSchnei/hrf_opt"}, "release_url": "https://pypi.org/project/hrf_opt/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Optimize hemodynamic response function parameters.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Optimize hemodynamic response function parameters.</p>\n<p>A free &amp; open source package for finding best-fitting hemodynamic\nresponse function (HRF) parameters for fMRI data. Optimization takes\nplace within the framework of population receptive field (pRF)\nparameters.</p>\n<p>The fitting process requires, for every voxel of fMRI data, optimized\npRF parameters. These can be obtained using\n<a href=\"https://github.com/MSchnei/pyprf_feature\" rel=\"nofollow\">pyprf_feature</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For installation, follow these steps:</p>\n<ol>\n<li>(Optional) Create conda environment</li>\n</ol>\n<pre>conda create -n env_hrf_opt <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">2</span>.7\n<span class=\"nb\">source</span> activate env_hrf_opt\nconda install pip\n</pre>\n<ol>\n<li>Clone repository</li>\n</ol>\n<pre>git clone https://github.com/MSchnei/hrf_opt.git\n</pre>\n<ol>\n<li>Install hrf_opt with pip</li>\n</ol>\n<pre>pip install /path/to/cloned/hrf_opt\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<div id=\"run-pyprf-feature-to-obtain-an-initial-guess-of-the-prf-parameters\">\n<h3>1. Run pyprf_feature to obtain an initial guess of the pRF parameters</h3>\n<p>See <a href=\"https://github.com/MSchnei/pyprf_feature\" rel=\"nofollow\">here</a> for more\ninformation on how to use pyprf_feature. In brief, open a terminal and\nrun:</p>\n<pre>pyprf_feature -config path/to/custom_pRF_config.csv\n</pre>\n</div>\n<div id=\"obtain-model-responses-for-every-voxel-for-best-fitting-prf-model\">\n<h3>2. Obtain model responses for every voxel for best-fitting pRF model</h3>\n<p>When pyprf_feature is done, run it again with -save_tc and -mdl_rsp\nflag. This will save the fitted pRF model time courses and corresponding\nneural responses to disk:</p>\n<pre>pyprf_feature -config path/to/custom_pRF_config.csv -save_tc -mdl_rsp\n</pre>\n</div>\n<div id=\"adjust-the-csv-file-for-hrf-opt\">\n<h3>3. Adjust the csv file for hrf_opt</h3>\n<p>Adjust the information in the config_default.csv file in the hrf_opt\nfolder, such that the provided information is correct. It is recommended\nto make a specific copy of the csv file for every subject.</p>\n</div>\n<div id=\"run-hrf-opt\">\n<h3>4. Run hrf_opt</h3>\n<p>Open a terminal and run:</p>\n<pre>hrf_opt -config path/to/custom_hrf_opt_config.csv\n</pre>\n</div>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<p>This application is based on the following work:</p>\n<ul>\n<li>Dumoulin, S. O., &amp; Wandell, B. A. (2008). Population receptive field\nestimates in human visual cortex. NeuroImage, 39(2), 647\u2013660.\n<a href=\"https://doi.org/10.1016/j.neuroimage.2007.09.034\" rel=\"nofollow\">https://doi.org/10.1016/j.neuroimage.2007.09.034</a></li>\n<li>Harvey, B. M., &amp; Dumoulin, S. O. (2011). The Relationship between\nCortical Magnification Factor and Population Receptive Field Size in\nHuman Visual Cortex: Constancies in Cortical Architecture. Journal of\nNeuroscience, 31(38), 13604\u201313612.\n<a href=\"https://doi.org/10.1523/JNEUROSCI.2572-11.2011\" rel=\"nofollow\">https://doi.org/10.1523/JNEUROSCI.2572-11.2011</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The project is licensed under <a href=\"http://www.gnu.org/licenses/gpl.html\" rel=\"nofollow\">GNU General Public License Version\n3</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4568420, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "6cd49991b4569dfef4c69bb1150564f6", "sha256": "9554e6b77355bdcf6305ed953d9412f745ccb805a20b5e46c78e010fe4730381"}, "downloads": -1, "filename": "hrf_opt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6cd49991b4569dfef4c69bb1150564f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14566, "upload_time": "2018-10-27T11:22:31", "upload_time_iso_8601": "2018-10-27T11:22:31.760290Z", "url": "https://files.pythonhosted.org/packages/22/34/18909fe68046a62955118885010d01d15bd032239ff5a96fa0217bbb8ef9/hrf_opt-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a30e8fecdf4af15a11a220c808d437a0", "sha256": "8431c2f8637a13689da50efeca898c1e7c788711634dc28867c3109a6f73c6f7"}, "downloads": -1, "filename": "hrf_opt-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a30e8fecdf4af15a11a220c808d437a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14556, "upload_time": "2018-11-20T12:44:56", "upload_time_iso_8601": "2018-11-20T12:44:56.318860Z", "url": "https://files.pythonhosted.org/packages/2c/25/49a2439de5176988558f2db90998bf453e1c29089949b4012b7e4821fddd/hrf_opt-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f2e7b5fc958204c5a05070c3c9f64a57", "sha256": "b6a80e4ce638aa7c062a3c97a476abec6221f2288e3e346a17249bef68464833"}, "downloads": -1, "filename": "hrf_opt-1.0.3.tar.gz", "has_sig": false, "md5_digest": "f2e7b5fc958204c5a05070c3c9f64a57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14539, "upload_time": "2018-12-06T16:04:45", "upload_time_iso_8601": "2018-12-06T16:04:45.567549Z", "url": "https://files.pythonhosted.org/packages/69/28/e34ea684e646ec315172a15410a05f2d1db102534e1617e84062b8bef37d/hrf_opt-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f2e7b5fc958204c5a05070c3c9f64a57", "sha256": "b6a80e4ce638aa7c062a3c97a476abec6221f2288e3e346a17249bef68464833"}, "downloads": -1, "filename": "hrf_opt-1.0.3.tar.gz", "has_sig": false, "md5_digest": "f2e7b5fc958204c5a05070c3c9f64a57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14539, "upload_time": "2018-12-06T16:04:45", "upload_time_iso_8601": "2018-12-06T16:04:45.567549Z", "url": "https://files.pythonhosted.org/packages/69/28/e34ea684e646ec315172a15410a05f2d1db102534e1617e84062b8bef37d/hrf_opt-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:24 2020"}