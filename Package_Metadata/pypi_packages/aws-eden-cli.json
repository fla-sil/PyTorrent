{"info": {"author": "Tamirlan Torgayev", "author_email": "torgayev@me.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# aws-eden-cli: ECS Dynamic Environment Manager [![PyPi version](https://img.shields.io/pypi/v/aws-eden-cli.svg)](https://pypi.python.org/pypi/aws-eden-cli/) ![](https://img.shields.io/badge/python-3.6+-blue.svg) ![t](https://img.shields.io/badge/status-beta-orange.svg) \n\n\nClone Amazon ECS environments easily. \nProvide eden with a Amazon ECS service and eden will clone it. \n\neden is provided in CLI and Terraform module (Lambda with HTTP API) flavors. \nYou can use HTTP API from CI of your choice on Pull Request open/close, \nnew commit pushes to fully automate environment creation. \nFor API flavor, see eden API at [GitHub](https://github.com/baikonur-oss/terraform-aws-lambda-eden-api).\n\nWorks only with Python 3.6+.\n\n## Developing with eden\n\n![simple-figure](figures/aws-eden-simple-en.png)\n\n## Requirements:\n1. Config JSON file in a S3 bucket with structure described below\n2. A reference ECS Service with Target Group Attached\n3. An ALB with HTTPS Listener\n    - Will be reused by all environments with Host Header Listener Rules\n    - Separate from what reference service uses\n    - Listener must have wildcard certificate for target dynamic zone\n4. Simple ALB usage\n    - No multiple path rules etc.\n    - One ALB per one ECS Service\n\n## What it does\n### Resources created/deleted\neden creates\n1. ECS Task Definition \n    -  Cloned from reference service\n2. ALB (elbv2) Target Group \n    - Settings cloned from Target Group attached to reference service\n3. ECS Service\n    - Created in the same cluster as reference service\n4. ALB Listener Rule\n    - Host Header rule\n5. Route 53 CNAME record\n    - Points at common ALB\n6. An entry is added to config JSON file\n\neden deletes resources in reverse order.\n\n### Config JSON file\nConfig file is used to:\n1. Check what environments exist and where their endpoints are\n2. Tell client apps what is available\n\nConfig file format:\n```json\n{\n    \"environments\": [\n        {\n            \"env\": \"dev\",\n            \"name\": \"dev-dynamic-test\",\n            \"api_endpoint\": \"api-test.dev.example.com\"\n        }\n    ]\n}\n```\nExample above presumes `config_update_key = api_endpoint`. You can use multiple Lambdas/invoke eden-cli multiple times with different update keys to have multiple endpoints within single environment.\n\nFor example, you may want to have API, administration tool and a frontend service created as a single environment. Your environment file could look like this:\n```json\n{\n    \"environments\": [\n        {\n            \"env\": \"dev\",\n            \"name\": \"dev-dynamic-test\",\n            \"api_endpoint\": \"api-test.dev.example.com\",\n            \"admin_endpoint\": \"admin-test.dev.example.com\",\n            \"frontend_endpoint\": \"test.dev.example.com\"\n        }\n    ]\n}\n```\n\n## Usage (CLI interface)\n### Installation\n```\n$ pip3 install aws-eden-cli \n\n$ eden -h\nusage: eden [-h] {create,delete,config} ...\n\nECS Dynamic Environment Manager. Clone Amazon ECS environments easily.\n\npositional arguments:\n  {create,delete,config}\n    create              Create environment or deploy to existent\n    delete              Delete environment\n    config              Configure eden\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\nHint: you can use -h on subcommands as well:\n```\n$ eden config -h\n usage: eden config [-h] {setup,check,push,remote-rm} ...\n\npositional arguments:\n  {setup,check,push,remote-rm}\n    setup               Setup profiles for other commands\n    check               Check configuration file integrity\n    push                Push local profile to DynamoDB for use by eden API\n    remote-rm           Remove remote profile from DynamoDB\n\noptional arguments:\n  -h, --help            show this help message and exit\n\n$ eden config push -h\nusage: eden config push [-h] [-p PROFILE] [-c CONFIG_PATH] [-v]\n                        [--remote-table-name REMOTE_TABLE_NAME]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PROFILE, --profile PROFILE\n                        profile name in eden configuration file\n  -c CONFIG_PATH, --config-path CONFIG_PATH\n                        eden configuration file path\n  -v, --verbose\n  --remote-table-name REMOTE_TABLE_NAME\n                        profile name in eden configuration file\n```\n\n### Configure\n```\n# let's create a profile to work with, \n# so we won't have to specify all the parameters every time\n\n$ eden config setup --config-bucket-key endpoints.json\n$ eden config setup --config-bucket-name servicename-config\n$ eden config setup --config-update-key api_endpoint\n$ eden config setup --config-name-prefix servicename-dev\n$ eden config setup --domain-name-prefix api\n$ eden config setup --dynamic-zone-id Zxxxxxxxxxxxx\n$ eden config setup --dynamic-zone-name dev.example.com.\n$ eden config setup --master-alb-arn arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxxxx:loadbalancer/app/dev-alb-api-dynamic/xxxxxxxxxx\n$ eden config setup --name-prefix dev-dynamic\n$ eden config setup --reference-service-arn arn:aws:ecs:ap-northeast-1:xxxxxxxxxxxx:service/dev/dev01-api\n$ eden config setup --target-cluster dev\n$ eden config setup --target-container-name api\n\n# you can also edit ~/.eden/config directly\n# (you can see that commands above created a \"default\" profile)\n\n$ cat ~/.eden/config\n[api]\nname_prefix = dev-dynamic\nreference_service_arn = arn:aws:ecs:ap-northeast-1:xxxxxxxxxxxx:service/dev/dev01-api\ntarget_cluster = dev\ndomain_name_prefix = api\nmaster_alb_arn = arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxxxx:loadbalancer/app/dev-alb-api-dynamic/xxxxxxxxxx\ndynamic_zone_name = dev.example.com.\ndynamic_zone_id = Zxxxxxxxxxxxx\nconfig_bucket_name = servicename-config\nconfig_bucket_key = endpoints.json\nconfig_update_key = api_endpoint\nconfig_env_type = dev\nconfig_name_prefix = servicename-dev\ntarget_container_name = api\n\n# don't forget to check configuration file integrity\n\n$ eden config check\nNo errors found\n```\n\n### Profiles\n```\n# you can specify multiple profiles in configuration\n# and select a profile with -p profile_name\n\n$ eden config check -p api\nNo errors found\n\n# we can push profiles to DynamoDB for use by eden API\n# (if eden table does not exist, aws-eden-cli will create it)\n\n$ eden config push -p api\nWaiting for table creation...\nSuccessfully pushed profile api to DynamoDB\n\n# use the same command to overwrite existing profiles\n# (push to existing profile will result in overwrite)\n\n$ eden config push -p api\nSuccessfully pushed profile api to DynamoDB table eden\n\n# use remote-rm to remove remote profiles\n\n$ eden config remote-rm -p api\nSuccessfully removed profile api from DynamoDB table eden\n```\n\n### Execute commands\n```\n$ eden create -p api --name foo --image-uri xxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/api:latest\nChecking if image xxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/api:latest exists\nImage exists\nRetrieved reference service arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:service/dev/api\nRetrieved reference task definition from arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:task-definition/api:20\nRegistered new task definition: arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:task-definition/dev-dynamic-api-foo:1\nRegistered new task definition: arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:task-definition/dev-dynamic-api-foo:1\nRetrieved reference target group: arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/api/xxxxxxxxxxxx\nExisting target group dev-dynamic-api-foo not found, will create new\nCreated target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx\nELBv2 listener rule for target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx and host api-foo.dev.example.com does not exist, will create new listener rule\nECS Service dev-dynamic-api-foo does not exist, will create new service\nChecking if record api-foo.dev.example.com. exists in zone Zxxxxxxxxx\nSuccessfully created CNAME: api-foo.dev.example.com -> dev-alb-api-dynamic-297517510.ap-northeast-1.elb.amazonaws.com\nUpdating config file s3://example-com-config/endpoints.json, environment example-api-foo: nodeDomain -> api-foo.dev.example.com\nExisting environment not found, adding new\nSuccessfully updated config file\nSuccessfully finished creating environment dev-dynamic-api-foo\n\n$ eden ls\nProfile api:\ndev-dynamic-api-foo api-foo.dev.example.com (last updated: 2019-11-20T19:44:10.179760)\n\n$ eden delete -p api --name foo\nUpdating config file s3://example-com-config/endpoints.json, delete environment example-api-foo: nodeDomain -> api-foo.dev.example.com\nExisting environment found, and the only optional key is nodeDomain,deleting environment\nSuccessfully updated config file\nChecking if record api-foo.dev.example.com. exists in zone Zxxxxxxxxx\nFound existing record api-foo.dev.example.com. in zone Zxxxxxxxxx\nSuccessfully removed CNAME record api-foo.dev.example.com\nECS Service dev-dynamic-api-foo exists, will delete\nSuccessfully deleted service dev-dynamic-api-foo from cluster dev\nELBv2 listener rule for target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx and host api-foo.dev.example.com found, will delete\nDeleted target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx\nDeleted all task definitions for family: dev-dynamic-api-foo, 1 tasks deleted total\nSuccessfully finished deleting environment dev-dynamic-api-foo\n\n$ eden ls\nNo environments available\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/baikonur-oss/aws-eden-cli", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aws-eden-cli", "package_url": "https://pypi.org/project/aws-eden-cli/", "platform": "", "project_url": "https://pypi.org/project/aws-eden-cli/", "project_urls": {"Homepage": "https://github.com/baikonur-oss/aws-eden-cli", "Source Code": "https://github.com/baikonur-oss/aws-eden-cli"}, "release_url": "https://pypi.org/project/aws-eden-cli/0.1.5/", "requires_dist": ["aws-eden-core (==0.1.2)", "botocore", "boto3"], "requires_python": "", "summary": "ECS Dynamic Environment Manager (eden) CLI", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aws-eden-cli: ECS Dynamic Environment Manager <a href=\"https://pypi.python.org/pypi/aws-eden-cli/\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1abd20aa24346e8bf7a52cc2c7c491787d7e6f68/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6177732d6564656e2d636c692e737667\"></a> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a042d910c74fbce532a01da853019c164ef42a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d626c75652e737667\"> <img alt=\"t\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66a7f7d2d409d68edc5afdbf2111ea3fe73e41c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d626574612d6f72616e67652e737667\"></h1>\n<p>Clone Amazon ECS environments easily.\nProvide eden with a Amazon ECS service and eden will clone it.</p>\n<p>eden is provided in CLI and Terraform module (Lambda with HTTP API) flavors.\nYou can use HTTP API from CI of your choice on Pull Request open/close,\nnew commit pushes to fully automate environment creation.\nFor API flavor, see eden API at <a href=\"https://github.com/baikonur-oss/terraform-aws-lambda-eden-api\" rel=\"nofollow\">GitHub</a>.</p>\n<p>Works only with Python 3.6+.</p>\n<h2>Developing with eden</h2>\n<p><img alt=\"simple-figure\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a132901325e9d4e2e0b8b28ad0a961fde26e234c/666967757265732f6177732d6564656e2d73696d706c652d656e2e706e67\"></p>\n<h2>Requirements:</h2>\n<ol>\n<li>Config JSON file in a S3 bucket with structure described below</li>\n<li>A reference ECS Service with Target Group Attached</li>\n<li>An ALB with HTTPS Listener\n<ul>\n<li>Will be reused by all environments with Host Header Listener Rules</li>\n<li>Separate from what reference service uses</li>\n<li>Listener must have wildcard certificate for target dynamic zone</li>\n</ul>\n</li>\n<li>Simple ALB usage\n<ul>\n<li>No multiple path rules etc.</li>\n<li>One ALB per one ECS Service</li>\n</ul>\n</li>\n</ol>\n<h2>What it does</h2>\n<h3>Resources created/deleted</h3>\n<p>eden creates</p>\n<ol>\n<li>ECS Task Definition\n<ul>\n<li>Cloned from reference service</li>\n</ul>\n</li>\n<li>ALB (elbv2) Target Group\n<ul>\n<li>Settings cloned from Target Group attached to reference service</li>\n</ul>\n</li>\n<li>ECS Service\n<ul>\n<li>Created in the same cluster as reference service</li>\n</ul>\n</li>\n<li>ALB Listener Rule\n<ul>\n<li>Host Header rule</li>\n</ul>\n</li>\n<li>Route 53 CNAME record\n<ul>\n<li>Points at common ALB</li>\n</ul>\n</li>\n<li>An entry is added to config JSON file</li>\n</ol>\n<p>eden deletes resources in reverse order.</p>\n<h3>Config JSON file</h3>\n<p>Config file is used to:</p>\n<ol>\n<li>Check what environments exist and where their endpoints are</li>\n<li>Tell client apps what is available</li>\n</ol>\n<p>Config file format:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"environments\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"env\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dev\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dev-dynamic-test\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"api_endpoint\"</span><span class=\"p\">:</span> <span class=\"s2\">\"api-test.dev.example.com\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Example above presumes <code>config_update_key = api_endpoint</code>. You can use multiple Lambdas/invoke eden-cli multiple times with different update keys to have multiple endpoints within single environment.</p>\n<p>For example, you may want to have API, administration tool and a frontend service created as a single environment. Your environment file could look like this:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"environments\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"env\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dev\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dev-dynamic-test\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"api_endpoint\"</span><span class=\"p\">:</span> <span class=\"s2\">\"api-test.dev.example.com\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"admin_endpoint\"</span><span class=\"p\">:</span> <span class=\"s2\">\"admin-test.dev.example.com\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"frontend_endpoint\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test.dev.example.com\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Usage (CLI interface)</h2>\n<h3>Installation</h3>\n<pre><code>$ pip3 install aws-eden-cli \n\n$ eden -h\nusage: eden [-h] {create,delete,config} ...\n\nECS Dynamic Environment Manager. Clone Amazon ECS environments easily.\n\npositional arguments:\n  {create,delete,config}\n    create              Create environment or deploy to existent\n    delete              Delete environment\n    config              Configure eden\n\noptional arguments:\n  -h, --help            show this help message and exit\n</code></pre>\n<p>Hint: you can use -h on subcommands as well:</p>\n<pre><code>$ eden config -h\n usage: eden config [-h] {setup,check,push,remote-rm} ...\n\npositional arguments:\n  {setup,check,push,remote-rm}\n    setup               Setup profiles for other commands\n    check               Check configuration file integrity\n    push                Push local profile to DynamoDB for use by eden API\n    remote-rm           Remove remote profile from DynamoDB\n\noptional arguments:\n  -h, --help            show this help message and exit\n\n$ eden config push -h\nusage: eden config push [-h] [-p PROFILE] [-c CONFIG_PATH] [-v]\n                        [--remote-table-name REMOTE_TABLE_NAME]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PROFILE, --profile PROFILE\n                        profile name in eden configuration file\n  -c CONFIG_PATH, --config-path CONFIG_PATH\n                        eden configuration file path\n  -v, --verbose\n  --remote-table-name REMOTE_TABLE_NAME\n                        profile name in eden configuration file\n</code></pre>\n<h3>Configure</h3>\n<pre><code># let's create a profile to work with, \n# so we won't have to specify all the parameters every time\n\n$ eden config setup --config-bucket-key endpoints.json\n$ eden config setup --config-bucket-name servicename-config\n$ eden config setup --config-update-key api_endpoint\n$ eden config setup --config-name-prefix servicename-dev\n$ eden config setup --domain-name-prefix api\n$ eden config setup --dynamic-zone-id Zxxxxxxxxxxxx\n$ eden config setup --dynamic-zone-name dev.example.com.\n$ eden config setup --master-alb-arn arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxxxx:loadbalancer/app/dev-alb-api-dynamic/xxxxxxxxxx\n$ eden config setup --name-prefix dev-dynamic\n$ eden config setup --reference-service-arn arn:aws:ecs:ap-northeast-1:xxxxxxxxxxxx:service/dev/dev01-api\n$ eden config setup --target-cluster dev\n$ eden config setup --target-container-name api\n\n# you can also edit ~/.eden/config directly\n# (you can see that commands above created a \"default\" profile)\n\n$ cat ~/.eden/config\n[api]\nname_prefix = dev-dynamic\nreference_service_arn = arn:aws:ecs:ap-northeast-1:xxxxxxxxxxxx:service/dev/dev01-api\ntarget_cluster = dev\ndomain_name_prefix = api\nmaster_alb_arn = arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxxxx:loadbalancer/app/dev-alb-api-dynamic/xxxxxxxxxx\ndynamic_zone_name = dev.example.com.\ndynamic_zone_id = Zxxxxxxxxxxxx\nconfig_bucket_name = servicename-config\nconfig_bucket_key = endpoints.json\nconfig_update_key = api_endpoint\nconfig_env_type = dev\nconfig_name_prefix = servicename-dev\ntarget_container_name = api\n\n# don't forget to check configuration file integrity\n\n$ eden config check\nNo errors found\n</code></pre>\n<h3>Profiles</h3>\n<pre><code># you can specify multiple profiles in configuration\n# and select a profile with -p profile_name\n\n$ eden config check -p api\nNo errors found\n\n# we can push profiles to DynamoDB for use by eden API\n# (if eden table does not exist, aws-eden-cli will create it)\n\n$ eden config push -p api\nWaiting for table creation...\nSuccessfully pushed profile api to DynamoDB\n\n# use the same command to overwrite existing profiles\n# (push to existing profile will result in overwrite)\n\n$ eden config push -p api\nSuccessfully pushed profile api to DynamoDB table eden\n\n# use remote-rm to remove remote profiles\n\n$ eden config remote-rm -p api\nSuccessfully removed profile api from DynamoDB table eden\n</code></pre>\n<h3>Execute commands</h3>\n<pre><code>$ eden create -p api --name foo --image-uri xxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/api:latest\nChecking if image xxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/api:latest exists\nImage exists\nRetrieved reference service arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:service/dev/api\nRetrieved reference task definition from arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:task-definition/api:20\nRegistered new task definition: arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:task-definition/dev-dynamic-api-foo:1\nRegistered new task definition: arn:aws:ecs:ap-northeast-1:xxxxxxxxxx:task-definition/dev-dynamic-api-foo:1\nRetrieved reference target group: arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/api/xxxxxxxxxxxx\nExisting target group dev-dynamic-api-foo not found, will create new\nCreated target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx\nELBv2 listener rule for target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx and host api-foo.dev.example.com does not exist, will create new listener rule\nECS Service dev-dynamic-api-foo does not exist, will create new service\nChecking if record api-foo.dev.example.com. exists in zone Zxxxxxxxxx\nSuccessfully created CNAME: api-foo.dev.example.com -&gt; dev-alb-api-dynamic-297517510.ap-northeast-1.elb.amazonaws.com\nUpdating config file s3://example-com-config/endpoints.json, environment example-api-foo: nodeDomain -&gt; api-foo.dev.example.com\nExisting environment not found, adding new\nSuccessfully updated config file\nSuccessfully finished creating environment dev-dynamic-api-foo\n\n$ eden ls\nProfile api:\ndev-dynamic-api-foo api-foo.dev.example.com (last updated: 2019-11-20T19:44:10.179760)\n\n$ eden delete -p api --name foo\nUpdating config file s3://example-com-config/endpoints.json, delete environment example-api-foo: nodeDomain -&gt; api-foo.dev.example.com\nExisting environment found, and the only optional key is nodeDomain,deleting environment\nSuccessfully updated config file\nChecking if record api-foo.dev.example.com. exists in zone Zxxxxxxxxx\nFound existing record api-foo.dev.example.com. in zone Zxxxxxxxxx\nSuccessfully removed CNAME record api-foo.dev.example.com\nECS Service dev-dynamic-api-foo exists, will delete\nSuccessfully deleted service dev-dynamic-api-foo from cluster dev\nELBv2 listener rule for target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx and host api-foo.dev.example.com found, will delete\nDeleted target group arn:aws:elasticloadbalancing:ap-northeast-1:xxxxxxxxxx:targetgroup/dev-dynamic-api-foo/xxxxxxxxxxxx\nDeleted all task definitions for family: dev-dynamic-api-foo, 1 tasks deleted total\nSuccessfully finished deleting environment dev-dynamic-api-foo\n\n$ eden ls\nNo environments available\n\n</code></pre>\n\n          </div>"}, "last_serial": 6218310, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "79e3247a804f3f61d85bd417303964f4", "sha256": "5f88c26f5f74738960b16acdb321315630a207ee4b29e9f4c60cce81e7d789f0"}, "downloads": -1, "filename": "aws_eden_cli-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79e3247a804f3f61d85bd417303964f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8033, "upload_time": "2019-08-22T08:15:20", "upload_time_iso_8601": "2019-08-22T08:15:20.030288Z", "url": "https://files.pythonhosted.org/packages/b8/a5/76c7e070a32b1e02c3480b16acd6e7f0842abe9c639da66219338b7f83bc/aws_eden_cli-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51310c485d3bbe1a236513acf390ea9f", "sha256": "829eb83598f6ddf03c7813f64c66e9a6fe5cd858824debede1504ce48414239e"}, "downloads": -1, "filename": "aws_eden_cli-0.1.1.tar.gz", "has_sig": false, "md5_digest": "51310c485d3bbe1a236513acf390ea9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7570, "upload_time": "2019-08-22T08:15:23", "upload_time_iso_8601": "2019-08-22T08:15:23.191025Z", "url": "https://files.pythonhosted.org/packages/ff/38/e61b48328cf92dfa53f4e8b3acd181647a3f05360b7a8741d3fc1947d388/aws_eden_cli-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ec453233250db32bc95229be255965c6", "sha256": "137e83b46fe04cbdea2fbae3e08143414cf7257e1b6b088403574938a84a612b"}, "downloads": -1, "filename": "aws_eden_cli-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ec453233250db32bc95229be255965c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8180, "upload_time": "2019-11-08T11:27:46", "upload_time_iso_8601": "2019-11-08T11:27:46.684188Z", "url": "https://files.pythonhosted.org/packages/c1/a0/fa190defc9df39e65b3859c252c056e2d7aa3bb3b4ba9c32bd11aacbcf84/aws_eden_cli-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "504ce9a8552840201bd61b504c2d526b", "sha256": "d3a28fb29f5ac34b2e74ffb13844cbfa5d81e1509ec2e90b3c4f3defdd955fe8"}, "downloads": -1, "filename": "aws_eden_cli-0.1.2.tar.gz", "has_sig": false, "md5_digest": "504ce9a8552840201bd61b504c2d526b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7730, "upload_time": "2019-11-08T11:27:48", "upload_time_iso_8601": "2019-11-08T11:27:48.303413Z", "url": "https://files.pythonhosted.org/packages/98/58/44503f47828384c7d2665e9905e986df39f4e373eebb68226139cc1fd78a/aws_eden_cli-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4dcc25d8dd1954f5e6454f5a96fca25d", "sha256": "6c6264aee5ccbf0284756f840d5862de1e8e9a2f3d1a26c10384600e38308503"}, "downloads": -1, "filename": "aws_eden_cli-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4dcc25d8dd1954f5e6454f5a96fca25d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8170, "upload_time": "2019-11-08T11:46:26", "upload_time_iso_8601": "2019-11-08T11:46:26.811888Z", "url": "https://files.pythonhosted.org/packages/6f/30/a12152a81e7089421634ae473ee2162b09e76c9b0dd46e86eb7b28bd9bcc/aws_eden_cli-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16206ed8ed66dce8daf6b994b80e6a56", "sha256": "6779be02680e2f5707de37682fbe0ca0e1999af20aa36096f3a115ee66348d7a"}, "downloads": -1, "filename": "aws_eden_cli-0.1.3.tar.gz", "has_sig": false, "md5_digest": "16206ed8ed66dce8daf6b994b80e6a56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7733, "upload_time": "2019-11-08T11:46:28", "upload_time_iso_8601": "2019-11-08T11:46:28.881499Z", "url": "https://files.pythonhosted.org/packages/04/b5/164863b9892de1a3615a32e16ed37b29117007cab73867a74e82602d4b32/aws_eden_cli-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "78f2729adcc3568caa8b20e8123b3a77", "sha256": "40ae3e6295e936c7a699980eed1e0ae39fbeb67e8da1d58424eea9aef9eb0288"}, "downloads": -1, "filename": "aws_eden_cli-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "78f2729adcc3568caa8b20e8123b3a77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11108, "upload_time": "2019-11-29T13:18:20", "upload_time_iso_8601": "2019-11-29T13:18:20.870001Z", "url": "https://files.pythonhosted.org/packages/e4/cf/fb2232f8c1118ddebc1c434b8cd0d1de59b7008786fc34a5c1e2e35b9c00/aws_eden_cli-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ae56f5bc74402ce5759cbf492a220cb", "sha256": "352d9bbccbb5c6e28a57a07be28c1ad77f9bfe390d103202300858eeeaa2a014"}, "downloads": -1, "filename": "aws_eden_cli-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2ae56f5bc74402ce5759cbf492a220cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11944, "upload_time": "2019-11-29T13:18:22", "upload_time_iso_8601": "2019-11-29T13:18:22.466867Z", "url": "https://files.pythonhosted.org/packages/23/07/feffd7833348ad43365e5d70e66a3dd3333b9a19e7dce150f1db474c79a6/aws_eden_cli-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "78f2729adcc3568caa8b20e8123b3a77", "sha256": "40ae3e6295e936c7a699980eed1e0ae39fbeb67e8da1d58424eea9aef9eb0288"}, "downloads": -1, "filename": "aws_eden_cli-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "78f2729adcc3568caa8b20e8123b3a77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11108, "upload_time": "2019-11-29T13:18:20", "upload_time_iso_8601": "2019-11-29T13:18:20.870001Z", "url": "https://files.pythonhosted.org/packages/e4/cf/fb2232f8c1118ddebc1c434b8cd0d1de59b7008786fc34a5c1e2e35b9c00/aws_eden_cli-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ae56f5bc74402ce5759cbf492a220cb", "sha256": "352d9bbccbb5c6e28a57a07be28c1ad77f9bfe390d103202300858eeeaa2a014"}, "downloads": -1, "filename": "aws_eden_cli-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2ae56f5bc74402ce5759cbf492a220cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11944, "upload_time": "2019-11-29T13:18:22", "upload_time_iso_8601": "2019-11-29T13:18:22.466867Z", "url": "https://files.pythonhosted.org/packages/23/07/feffd7833348ad43365e5d70e66a3dd3333b9a19e7dce150f1db474c79a6/aws_eden_cli-0.1.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:41 2020"}