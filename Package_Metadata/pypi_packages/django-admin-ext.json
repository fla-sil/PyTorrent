{"info": {"author": "Aaron Madison and Matthew J Morrison", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "Extensions to Django's admin site.\n\nCurrently Includes:\n - BaseCustomUrlAdmin: hook to provide additional urls to your model admin.\n\n - BaseAjaxModelAdmin: hook to have a form that gets some of it's form\n                       fields dynamically depending on a certain field choice.\n\n - BaseAjaxModelForm: form to help setup and save dynamic fields based\n                      on other fields chosen.\n\nUSAGE:\nTake a look at the example project for a more detailed example.\n\nBaseCustomUrlAdmin:\n  - in your ModelAdmin, subclass BaseCustomUrlAdmin and implement\n    the 'get_custom_urls' function\n\nBaseAjaxModelAdmin:\n  - in your ModelAdmin, subclass BaseAjaxModelAdmin and make sure\n    your form is pointing to your dynamic form.\n\n  - there will be a new url that ends with /ajax/ that handles the\n    ajax request.\n\n  - Django's ModelAdmin will only display fields declared in a fieldset\n    so we make sure the Ajax fields don't display when they don't have\n    enough data to be present, and that they do display when they do.\n    Because of this, we currently are not respecting any fieldsets\n    you might have declared in your ModelAdmin. If you know of a\n    good way to lift this restriction, please submit a patch.\n\n\nBaseAjaxModelForm:\n  - set the ajax_change_field to be the name of the form field whose\n    change triggers the ajax call OR set the ajax_change_fields to a\n    list of field names whose change triggers the ajax call\n\n  - in your form, set the dynamic_fields property to return a dictionary\n    whose keys are the field names and values are the instantiated fields.\n\n    @property\n    def dynamic_fields(self):\n        return {\n            'my_field': CharField(initial=\"hello world!\", label=\"Greeting\"),\n        }\n\n    when the change field is present either in a forms initial data or\n    submitted data, the form will add all your dynamic fields to it, and\n    when saving, the form will make sure all your dynamic field values\n    are saved to the instance.\n\n  - make sure the file in djadmin_ext/static/djadmin_ext/admin_ajax.js\n    is available in your static content.\n\n  - The ajax call gets the new form and replaces all\n    the elements with the class of '.module' with the updated form.\n\n    NOTE: this will blow out any inline forms you have declared, so\n    if you need inline forms, we'd be happy to accept a patch making\n    it possible.\n\nTesting:\nTo test the admin, we wrote selenium tests. The tests will try\nto start django's test server, open a firefox browser window,\nexecute the tests and verify the actions on the page behave as\nexpected.\n\npython setup.py test", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/imtapps/django-admin-ext", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-admin-ext", "package_url": "https://pypi.org/project/django-admin-ext/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-admin-ext/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/imtapps/django-admin-ext"}, "release_url": "https://pypi.org/project/django-admin-ext/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "Extensions to Django's admin site to add an ajax view.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Extensions to Django's admin site.<br><br>Currently Includes:<br> - BaseCustomUrlAdmin: hook to provide additional urls to your model admin.<br><br> - BaseAjaxModelAdmin: hook to have a form that gets some of it's form<br>                       fields dynamically depending on a certain field choice.<br><br> - BaseAjaxModelForm: form to help setup and save dynamic fields based<br>                      on other fields chosen.<br><br>USAGE:<br>Take a look at the example project for a more detailed example.<br><br>BaseCustomUrlAdmin:<br>  - in your ModelAdmin, subclass BaseCustomUrlAdmin and implement<br>    the 'get_custom_urls' function<br><br>BaseAjaxModelAdmin:<br>  - in your ModelAdmin, subclass BaseAjaxModelAdmin and make sure<br>    your form is pointing to your dynamic form.<br><br>  - there will be a new url that ends with /ajax/ that handles the<br>    ajax request.<br><br>  - Django's ModelAdmin will only display fields declared in a fieldset<br>    so we make sure the Ajax fields don't display when they don't have<br>    enough data to be present, and that they do display when they do.<br>    Because of this, we currently are not respecting any fieldsets<br>    you might have declared in your ModelAdmin. If you know of a<br>    good way to lift this restriction, please submit a patch.<br><br><br>BaseAjaxModelForm:<br>  - set the ajax_change_field to be the name of the form field whose<br>    change triggers the ajax call OR set the ajax_change_fields to a<br>    list of field names whose change triggers the ajax call<br><br>  - in your form, set the dynamic_fields property to return a dictionary<br>    whose keys are the field names and values are the instantiated fields.<br><br>    @property<br>    def dynamic_fields(self):<br>        return {<br>            'my_field': CharField(initial=\"hello world!\", label=\"Greeting\"),<br>        }<br><br>    when the change field is present either in a forms initial data or<br>    submitted data, the form will add all your dynamic fields to it, and<br>    when saving, the form will make sure all your dynamic field values<br>    are saved to the instance.<br><br>  - make sure the file in djadmin_ext/static/djadmin_ext/admin_ajax.js<br>    is available in your static content.<br><br>  - The ajax call gets the new form and replaces all<br>    the elements with the class of '.module' with the updated form.<br><br>    NOTE: this will blow out any inline forms you have declared, so<br>    if you need inline forms, we'd be happy to accept a patch making<br>    it possible.<br><br>Testing:<br>To test the admin, we wrote selenium tests. The tests will try<br>to start django's test server, open a firefox browser window,<br>execute the tests and verify the actions on the page behave as<br>expected.<br><br>python setup.py test\n          </div>"}, "last_serial": 989737, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "38c515c9181beb5995635312235062a1", "sha256": "fdac339475249e61060f14f68e2cf4bcfb789c31a9cf7c82785e84f1cca410e9"}, "downloads": -1, "filename": "django-admin-ext-0.1.0.tar.gz", "has_sig": false, "md5_digest": "38c515c9181beb5995635312235062a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4546, "upload_time": "2011-07-12T17:33:27", "upload_time_iso_8601": "2011-07-12T17:33:27.829889Z", "url": "https://files.pythonhosted.org/packages/f4/78/58a1aa768a1aaa891cc0857533ee0aee53d1af31bf922424e61c935253ce/django-admin-ext-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "24fb188782ccac2bc9c5c9da0a4d5fc8", "sha256": "49c986fd99988e85cabccd1a6ff40b94ce125f14bdde9290271cce0d93f40fc9"}, "downloads": -1, "filename": "django-admin-ext-0.1.1.tar.gz", "has_sig": false, "md5_digest": "24fb188782ccac2bc9c5c9da0a4d5fc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6105, "upload_time": "2011-07-12T18:08:59", "upload_time_iso_8601": "2011-07-12T18:08:59.709165Z", "url": "https://files.pythonhosted.org/packages/9f/c9/303ab25a0d968f355786819d4b889f0a0c7cd1758f65f396391e120eed02/django-admin-ext-0.1.1.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "eab44a644d1a65ccbf4806bd07bc3f37", "sha256": "8dae0c8818c0020977d1ee89af30fd128a621790f0ce92f2a597c8173b73a1a4"}, "downloads": -1, "filename": "django-admin-ext-0.1.4.tar.gz", "has_sig": false, "md5_digest": "eab44a644d1a65ccbf4806bd07bc3f37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6051, "upload_time": "2011-07-22T14:44:30", "upload_time_iso_8601": "2011-07-22T14:44:30.145428Z", "url": "https://files.pythonhosted.org/packages/6b/ac/b2b11e611aad158542cdcd246457c0da6ff1e5a838d5025a37efbc4467e1/django-admin-ext-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "29185aa0cd4dae0930c87f6d8009f0c0", "sha256": "abb9af5568d3f05d24ac9affd75687e1acc19dc2be2e04d951701f0f51259155"}, "downloads": -1, "filename": "django-admin-ext-0.1.5.tar.gz", "has_sig": false, "md5_digest": "29185aa0cd4dae0930c87f6d8009f0c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6307, "upload_time": "2011-11-03T18:57:22", "upload_time_iso_8601": "2011-11-03T18:57:22.922045Z", "url": "https://files.pythonhosted.org/packages/6c/cc/732e1e39ff9c8ad71872ed8f0a91078ef79e1e5810252b6cafc924e54de0/django-admin-ext-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "a367e357820d82b1afc94ef4b7fbca0d", "sha256": "76d4a6312acb67a6cb33c8f61f771338a80d11e8cb6ba75df0ee779de4784b9a"}, "downloads": -1, "filename": "django-admin-ext-0.1.6.tar.gz", "has_sig": false, "md5_digest": "a367e357820d82b1afc94ef4b7fbca0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6324, "upload_time": "2011-11-03T20:33:36", "upload_time_iso_8601": "2011-11-03T20:33:36.599422Z", "url": "https://files.pythonhosted.org/packages/2a/b6/6a561d7c38fccf58d258b2d21a571283107a7f39eae7a9bd6a343d27d398/django-admin-ext-0.1.6.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "30fddeb15886cb878f15dbb314f2d026", "sha256": "21936e4203c7880814e4e9e7c905a3bd8cf8e0f60781882af38efbd10d6f3166"}, "downloads": -1, "filename": "django-admin-ext-1.0.1.tar.gz", "has_sig": false, "md5_digest": "30fddeb15886cb878f15dbb314f2d026", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6365, "upload_time": "2014-02-03T19:46:47", "upload_time_iso_8601": "2014-02-03T19:46:47.602702Z", "url": "https://files.pythonhosted.org/packages/84/57/2c50e1d75357d7696ea234a34ebd1f18694ccf8ad64da3cd939895bd5ad1/django-admin-ext-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5ad4a408468782ed3e4f41a55ff4b150", "sha256": "57f3f1ee0a5393793a656f201a6dfa1dea9a51594fa3bce5db83f24ae21d7758"}, "downloads": -1, "filename": "django-admin-ext-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5ad4a408468782ed3e4f41a55ff4b150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6365, "upload_time": "2014-02-03T19:56:12", "upload_time_iso_8601": "2014-02-03T19:56:12.112055Z", "url": "https://files.pythonhosted.org/packages/3f/3a/16613d0ebc7065c728db9d853b0546b7f973958e25fc2ce73f5145be4f01/django-admin-ext-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ad4a408468782ed3e4f41a55ff4b150", "sha256": "57f3f1ee0a5393793a656f201a6dfa1dea9a51594fa3bce5db83f24ae21d7758"}, "downloads": -1, "filename": "django-admin-ext-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5ad4a408468782ed3e4f41a55ff4b150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6365, "upload_time": "2014-02-03T19:56:12", "upload_time_iso_8601": "2014-02-03T19:56:12.112055Z", "url": "https://files.pythonhosted.org/packages/3f/3a/16613d0ebc7065c728db9d853b0546b7f973958e25fc2ce73f5145be4f01/django-admin-ext-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:50 2020"}