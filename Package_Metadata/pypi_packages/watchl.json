{"info": {"author": "Florimond Manca", "author_email": "florimond.manca@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only"], "description": "# watchl\n\n[![build status](https://travis-ci.com/florimondmanca/watchl.svg?token=2WTbCxyyjrjzR5LpHFc3&branch=master)](https://travis-ci.com/florimondmanca/watchl)\n[![codecov](https://codecov.io/gh/florimondmanca/watchl/branch/master/graph/badge.svg?token=O5ZSL569hc)](https://codecov.io/gh/florimondmanca/watchl)\n[![code style](https://img.shields.io/badge/code_style-black-black)](https://github.com/psf/black)\n![license](https://img.shields.io/badge/license-MIT-green)\n\nLightweight HTTP log monitoring and alerting console tool written in Python.\n\n**Note**: only [W3C-formatted logs](https://www.w3.org/Daemon/User/Config/Logging.html) are supported for now. See [here](https://raw.githubusercontent.com/elastic/examples/master/Common%20Data%20Formats/apache_logs/apache_logs) for an example W3C-formatted log file.\n\n## Features\n\n- Live tail of log files.\n- Stats reporting in the console: top hit sections, traffic, throughput, etc.\n- Live alerting and recovery detection with customizable thresholds and delays.\n- Friendly command line interface.\n- Detailed and machine-readable JSON-formatted output.\n- Asynchronous architecture with low resources footprint.\n- Optional Docker-based execution.\n\nExample command:\n\n```\n$ watchl -f access.log --report-every=2 --alert-tick=2 --traffic-up=1 --traffic-down=1\n```\n\nOutput (JSON prettification by piping into [jq](https://stedolan.github.io/jq/)):\n\n```json\n{\n  \"levelname\": \"INFO\",\n  \"message\": \"process started\",\n  \"timestamp\": \"2019-07-30T21:02:30.652107\",\n  \"pid\": 2417\n}\n{\n  \"levelname\": \"INFO\",\n  \"message\": \"watching logs\",\n  \"timestamp\": \"2019-07-30T21:02:30.653034\",\n  \"path\": \"access.log\"\n}\n{\n  \"levelname\": \"INFO\",\n  \"message\": \"activity in the past 2.0 seconds\",\n  \"timestamp\": \"2019-07-30T21:02:32.708673\",\n  \"sections.count\": {\n    \"unit\": \"hits\",\n    \"value\": [\n      {\n        \"key\": \"/presentations\",\n        \"count\": 68\n      },\n      {\n        \"key\": \"/images\",\n        \"count\": 13\n      },\n      {\n        \"key\": \"/blog\",\n        \"count\": 9\n      }\n    ]\n  },\n  \"requests.total\": {\n    \"unit\": \"req\",\n    \"value\": 135\n  },\n  \"requests.average\": {\n    \"unit\": \"req/s\",\n    \"value\": 67.5\n  },\n  \"transfer.average\": {\n    \"unit\": \"bytes/s\",\n    \"value\": 3064559\n  },\n  \"transfer.mean\": {\n    \"unit\": \"bytes/req\",\n    \"value\": 45400.874074074076\n  }\n}\n{\n  \"levelname\": \"WARNING\",\n  \"message\": \"alert status changed\",\n  \"timestamp\": \"2019-07-30T21:02:34.773988\",\n  \"status\": \"active\",\n  \"previous_status\": \"activating\",\n  \"value\": 89.5,\n  \"reason\": \"stayed above threshold for longer than up delay\",\n  \"metric\": \"requests.average\",\n  \"threshold\": 10,\n  \"up\": \"0:00:01\",\n  \"down\": \"0:00:01\"\n}\n...\n```\n\n## Installation\n\n- If you have Python 3.6+ installed, you can install `watchl` from PyPI:\n\n```bash\npip install watchl\n```\n\nor locally by cloning the repository and running:\n\n```bash\npip install .\n```\n\n- If you have Docker installed, you can build the image by cloning the repository and running:\n\n```bash\ndocker build -t watchl .\n```\n\n## Usage\n\n### General notes\n\n`watchl` exposes a command line executable named `watchl`.\n\nWhen run without any other options, `watchl` will read logs from `/tmp/access.log` (this is configurable \u2014 see [CLI reference](#cli-reference) for options) and consume them as they are written to the file.\n\n> **Known limitation**: `watchl` does not handle log rotation yet. If the log file is renamed, truncated or moved, `watchl` won't be able to read new logs anymore, and will need to be restarted. See [#9](https://github.com/florimondmanca/watchl/issues/9).\n\nIf using Docker, and assuming you have a log file somewhere on your machine, you can run a `watchl` container using:\n\n```\ndocker run -it --rm -v /host/path/to/access.log:/tmp/access.log watchl <options>\n```\n\nBy default, `watchl` works on relatively long time scales (minutes). For quicker feedback (e.g. when trying `watchl` for the first time), you can try the following options:\n\n```bash\nwatchl --report-every=5 --alert-tick=1 --traffic-up=1 --traffic-down=1\n```\n\n### CLI reference\n\n```\nUsage: watchl [OPTIONS]\n\nOptions:\n  -f PATH                         Path to an actively written-to log file.\n                                  [default: /tmp/access.log]\n  --report-every FLOAT            Number of seconds between stats reports.\n                                  [default: 10]\n  --sections-top INTEGER          Number of most hit website sections to\n                                  display in the report.  [default: 3]\n  --traffic-threshold FLOAT       [default: 10]\n  --traffic-up FLOAT              Number of seconds to trigger an alert after\n                                  traffic exceeded the threshold.  [default:\n                                  120]\n  --traffic-down FLOAT            Number of seconds to stop an alert after\n                                  traffic dropped below the threshold.\n                                  [default: 120]\n  --alert-tick FLOAT              Number of seconds between evaluation of\n                                  stats for alerting purposes.  [default: 10]\n  --tick FLOAT                    Number of seconds between system event\n                                  checks. Note: lower values increase CPU\n                                  usage.  [default: 0.5]\n  --log-level [debug|info|warning|critical|error]\n                                  Level for internal log messages  [default:\n                                  info]\n  --limit-max-log-lines INTEGER   Limit the number of log lines to ingest\n                                  before terminating the process.\n  --help                          Show this message and exit.\n```\n\n## Contributing\n\nSee [Contributing guidelines](https://github.com/florimondmanca/watchl/blob/master/CONTRIBUTING.md).\n\n## License\n\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/florimondmanca/watchl.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "watchl", "package_url": "https://pypi.org/project/watchl/", "platform": "", "project_url": "https://pypi.org/project/watchl/", "project_urls": {"Homepage": "https://github.com/florimondmanca/watchl.git"}, "release_url": "https://pypi.org/project/watchl/0.2/", "requires_dist": ["trio (<0.13,>=0.12)", "click (<8,>=7)", "python-json-logger", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "codecov ; extra == 'dev'", "black ; extra == 'dev'", "pylint ; extra == 'dev'", "rope ; extra == 'dev'", "mypy ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Lightweight HTTP log monitoring and alerting tool", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>watchl</h1>\n<p><a href=\"https://travis-ci.com/florimondmanca/watchl\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ed1e1b808440925767647466d13380eb840ed6d/68747470733a2f2f7472617669732d63692e636f6d2f666c6f72696d6f6e646d616e63612f77617463686c2e7376673f746f6b656e3d32575462437879796a726a7a52354c7048466333266272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/florimondmanca/watchl\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d00a5cbc280b2b6fa75660633966bca716f5b3d4/68747470733a2f2f636f6465636f762e696f2f67682f666c6f72696d6f6e646d616e63612f77617463686c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4f355a534c3536396863\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"code style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34226811cd79a5e0ac09f3efe8b010e0be872b26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d626c61636b2d626c61636b\"></a>\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d74b889724a6b53a30744b633cba43dca8f56767/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e\"></p>\n<p>Lightweight HTTP log monitoring and alerting console tool written in Python.</p>\n<p><strong>Note</strong>: only <a href=\"https://www.w3.org/Daemon/User/Config/Logging.html\" rel=\"nofollow\">W3C-formatted logs</a> are supported for now. See <a href=\"https://raw.githubusercontent.com/elastic/examples/master/Common%20Data%20Formats/apache_logs/apache_logs\" rel=\"nofollow\">here</a> for an example W3C-formatted log file.</p>\n<h2>Features</h2>\n<ul>\n<li>Live tail of log files.</li>\n<li>Stats reporting in the console: top hit sections, traffic, throughput, etc.</li>\n<li>Live alerting and recovery detection with customizable thresholds and delays.</li>\n<li>Friendly command line interface.</li>\n<li>Detailed and machine-readable JSON-formatted output.</li>\n<li>Asynchronous architecture with low resources footprint.</li>\n<li>Optional Docker-based execution.</li>\n</ul>\n<p>Example command:</p>\n<pre><code>$ watchl -f access.log --report-every=2 --alert-tick=2 --traffic-up=1 --traffic-down=1\n</code></pre>\n<p>Output (JSON prettification by piping into <a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow\">jq</a>):</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"levelname\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"process started\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2019-07-30T21:02:30.652107\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"pid\"</span><span class=\"p\">:</span> <span class=\"mi\">2417</span>\n<span class=\"p\">}</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"levelname\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"watching logs\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2019-07-30T21:02:30.653034\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"access.log\"</span>\n<span class=\"p\">}</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"levelname\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"activity in the past 2.0 seconds\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2019-07-30T21:02:32.708673\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"sections.count\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"unit\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hits\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/presentations\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"count\"</span><span class=\"p\">:</span> <span class=\"mi\">68</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/images\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"count\"</span><span class=\"p\">:</span> <span class=\"mi\">13</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/blog\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"count\"</span><span class=\"p\">:</span> <span class=\"mi\">9</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"requests.total\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"unit\"</span><span class=\"p\">:</span> <span class=\"s2\">\"req\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">135</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"requests.average\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"unit\"</span><span class=\"p\">:</span> <span class=\"s2\">\"req/s\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mf\">67.5</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"transfer.average\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"unit\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bytes/s\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">3064559</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"transfer.mean\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"unit\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bytes/req\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mf\">45400.874074074076</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"levelname\"</span><span class=\"p\">:</span> <span class=\"s2\">\"WARNING\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"alert status changed\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2019-07-30T21:02:34.773988\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"active\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"previous_status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"activating\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mf\">89.5</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"reason\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stayed above threshold for longer than up delay\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"metric\"</span><span class=\"p\">:</span> <span class=\"s2\">\"requests.average\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"threshold\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"up\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0:00:01\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"down\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0:00:01\"</span>\n<span class=\"p\">}</span>\n<span class=\"err\">...</span>\n</pre>\n<h2>Installation</h2>\n<ul>\n<li>If you have Python 3.6+ installed, you can install <code>watchl</code> from PyPI:</li>\n</ul>\n<pre>pip install watchl\n</pre>\n<p>or locally by cloning the repository and running:</p>\n<pre>pip install .\n</pre>\n<ul>\n<li>If you have Docker installed, you can build the image by cloning the repository and running:</li>\n</ul>\n<pre>docker build -t watchl .\n</pre>\n<h2>Usage</h2>\n<h3>General notes</h3>\n<p><code>watchl</code> exposes a command line executable named <code>watchl</code>.</p>\n<p>When run without any other options, <code>watchl</code> will read logs from <code>/tmp/access.log</code> (this is configurable \u2014 see <a href=\"#cli-reference\" rel=\"nofollow\">CLI reference</a> for options) and consume them as they are written to the file.</p>\n<blockquote>\n<p><strong>Known limitation</strong>: <code>watchl</code> does not handle log rotation yet. If the log file is renamed, truncated or moved, <code>watchl</code> won't be able to read new logs anymore, and will need to be restarted. See <a href=\"https://github.com/florimondmanca/watchl/issues/9\" rel=\"nofollow\">#9</a>.</p>\n</blockquote>\n<p>If using Docker, and assuming you have a log file somewhere on your machine, you can run a <code>watchl</code> container using:</p>\n<pre><code>docker run -it --rm -v /host/path/to/access.log:/tmp/access.log watchl &lt;options&gt;\n</code></pre>\n<p>By default, <code>watchl</code> works on relatively long time scales (minutes). For quicker feedback (e.g. when trying <code>watchl</code> for the first time), you can try the following options:</p>\n<pre>watchl --report-every<span class=\"o\">=</span><span class=\"m\">5</span> --alert-tick<span class=\"o\">=</span><span class=\"m\">1</span> --traffic-up<span class=\"o\">=</span><span class=\"m\">1</span> --traffic-down<span class=\"o\">=</span><span class=\"m\">1</span>\n</pre>\n<h3>CLI reference</h3>\n<pre><code>Usage: watchl [OPTIONS]\n\nOptions:\n  -f PATH                         Path to an actively written-to log file.\n                                  [default: /tmp/access.log]\n  --report-every FLOAT            Number of seconds between stats reports.\n                                  [default: 10]\n  --sections-top INTEGER          Number of most hit website sections to\n                                  display in the report.  [default: 3]\n  --traffic-threshold FLOAT       [default: 10]\n  --traffic-up FLOAT              Number of seconds to trigger an alert after\n                                  traffic exceeded the threshold.  [default:\n                                  120]\n  --traffic-down FLOAT            Number of seconds to stop an alert after\n                                  traffic dropped below the threshold.\n                                  [default: 120]\n  --alert-tick FLOAT              Number of seconds between evaluation of\n                                  stats for alerting purposes.  [default: 10]\n  --tick FLOAT                    Number of seconds between system event\n                                  checks. Note: lower values increase CPU\n                                  usage.  [default: 0.5]\n  --log-level [debug|info|warning|critical|error]\n                                  Level for internal log messages  [default:\n                                  info]\n  --limit-max-log-lines INTEGER   Limit the number of log lines to ingest\n                                  before terminating the process.\n  --help                          Show this message and exit.\n</code></pre>\n<h2>Contributing</h2>\n<p>See <a href=\"https://github.com/florimondmanca/watchl/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">Contributing guidelines</a>.</p>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 5628077, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8e3fba0aeb52b372be6166a59cf2b449", "sha256": "cbd11ce7779f2407c83010bcb6667195f1070ae74de7fbe36111db38dff0b475"}, "downloads": -1, "filename": "watchl-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8e3fba0aeb52b372be6166a59cf2b449", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13759, "upload_time": "2019-07-30T23:18:35", "upload_time_iso_8601": "2019-07-30T23:18:35.881628Z", "url": "https://files.pythonhosted.org/packages/64/a3/d8b7d322ecce3b81401d438bbf713f439c9e0ef7b50a8801bfe8cd9ae62b/watchl-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1833e14966a165d480a5bbd1e554335f", "sha256": "78eb0d859906176adc372344f984eb2c344cff80077f66a2c2a9d81907bf1d27"}, "downloads": -1, "filename": "watchl-0.1.tar.gz", "has_sig": false, "md5_digest": "1833e14966a165d480a5bbd1e554335f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12387, "upload_time": "2019-07-30T23:18:38", "upload_time_iso_8601": "2019-07-30T23:18:38.040679Z", "url": "https://files.pythonhosted.org/packages/68/44/02a117d3b383484a7c7a79a09702be272655a8b77911126b778f807d80c7/watchl-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "850ffaf2d89a3ea2c7b73008cf610217", "sha256": "cf6e08f612b2409b54c35c01ddcb53d2aaab897e479b317140eec048a59484ab"}, "downloads": -1, "filename": "watchl-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "850ffaf2d89a3ea2c7b73008cf610217", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14149, "upload_time": "2019-07-31T07:52:25", "upload_time_iso_8601": "2019-07-31T07:52:25.514462Z", "url": "https://files.pythonhosted.org/packages/ee/bc/0ae5ed52d7ef3ddfa5c72709bbbe0679974c57b3b6b41e51c07c8443279b/watchl-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7708f508325cdf7c6f9cf3241371e94", "sha256": "68da1246f01088e546e91538c0f468c96e58d8f54594832e942abc983f80649d"}, "downloads": -1, "filename": "watchl-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c7708f508325cdf7c6f9cf3241371e94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12657, "upload_time": "2019-07-31T07:52:27", "upload_time_iso_8601": "2019-07-31T07:52:27.035694Z", "url": "https://files.pythonhosted.org/packages/15/9a/568772fcbcb2373d8cd384e69aa6a49440e1b7fd37bc16d04012931b95f3/watchl-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "45abff42e206494ebb45353ad6eaa7bd", "sha256": "6d77dce0d56858af1330b4daccde5781de1cb9874538d28ff37999a7eb2617dc"}, "downloads": -1, "filename": "watchl-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "45abff42e206494ebb45353ad6eaa7bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13573, "upload_time": "2019-08-03T12:23:25", "upload_time_iso_8601": "2019-08-03T12:23:25.889893Z", "url": "https://files.pythonhosted.org/packages/4c/e6/fc7671dfefb4e664c79e7c5ab8b5db5d0440f49b4fb4a019f465187d7b9f/watchl-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bc31203fbefa900a51d2b82259dc3c9", "sha256": "ddd268a31d092e2f08de15dbb02fe16c352c45e125f9afab07777fe519cbf01a"}, "downloads": -1, "filename": "watchl-0.2.tar.gz", "has_sig": false, "md5_digest": "0bc31203fbefa900a51d2b82259dc3c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12229, "upload_time": "2019-08-03T12:23:27", "upload_time_iso_8601": "2019-08-03T12:23:27.508735Z", "url": "https://files.pythonhosted.org/packages/18/53/89f0072776171c87574401e2726351e1360dc9ee0d4a655c9e2550ed2973/watchl-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "45abff42e206494ebb45353ad6eaa7bd", "sha256": "6d77dce0d56858af1330b4daccde5781de1cb9874538d28ff37999a7eb2617dc"}, "downloads": -1, "filename": "watchl-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "45abff42e206494ebb45353ad6eaa7bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13573, "upload_time": "2019-08-03T12:23:25", "upload_time_iso_8601": "2019-08-03T12:23:25.889893Z", "url": "https://files.pythonhosted.org/packages/4c/e6/fc7671dfefb4e664c79e7c5ab8b5db5d0440f49b4fb4a019f465187d7b9f/watchl-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bc31203fbefa900a51d2b82259dc3c9", "sha256": "ddd268a31d092e2f08de15dbb02fe16c352c45e125f9afab07777fe519cbf01a"}, "downloads": -1, "filename": "watchl-0.2.tar.gz", "has_sig": false, "md5_digest": "0bc31203fbefa900a51d2b82259dc3c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12229, "upload_time": "2019-08-03T12:23:27", "upload_time_iso_8601": "2019-08-03T12:23:27.508735Z", "url": "https://files.pythonhosted.org/packages/18/53/89f0072776171c87574401e2726351e1360dc9ee0d4a655c9e2550ed2973/watchl-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:11 2020"}