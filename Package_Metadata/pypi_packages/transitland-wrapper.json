{"info": {"author": "Kyle Barron", "author_email": "kylebarron2@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Transit.land API wrapper\n\nSimple Python wrapper around <https://transit.land> API.\n\n## Install\n\n```\npip install transitland_wrapper\n```\n\n## CLI\n\nAll CLI commands write a list of GeoJSON `Feature`s to stdout. This way minimal\nresults are kept in memory at once. If a `geometry` is passed, the geometry's\nbounding box is given to the transit.land API, and results are tested for\nintersection with the original geometry. The `geometry` file must be readable by\nGeoPandas and will automatically be reprojected to EPSG 4326 if necessary. The\ngeometry type must be either `Point`, `Polygon`, `MultiPolygon`, `LineString`,\nor `MultiLineString`.\n\n### Operators\n\n```\nUsage: transitland operators [OPTIONS]\n\n  Request operators info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  -r, --radius FLOAT          radius in meters to search around, default 100m\n                              for Point geometries. Used only for Point\n                              geometries.\n  --gtfs-id TEXT              ID used in a GTFS feed's agencies.txt file\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n```\n\n\n### Routes\n\n```\nUsage: transitland routes [OPTIONS]\n\n  Request routes info\n\nOptions:\n  -b, --bbox TEXT                 Bounding box to search within\n  -g, --geometry PATH             File with geometry to use. Must be readable\n                                  by GeoPandas\n  -r, --radius FLOAT              radius in meters to search around, default\n                                  100m for Point geometries. Used only for\n                                  Point geometries.\n  --operated-by TEXT              search by operator onestop_id or route\n                                  onestop_id\n  --vehicle-type TEXT             find all routes with vehicle type(s) by\n                                  integer or string. Possible values defined\n                                  by the GTFS spec for the route_type column\n                                  and the Extended GTFS Route Types\n  --gtfs-id TEXT                  ID used in a GTFS feed's routes.txt file\n  --include-geometry / --no-include-geometry\n                                  Include route geometry  [default: True]\n  -p, --per-page INTEGER          Number of results per page  [default: 50]\n  --page-all / --no-page-all      Page over all responses  [default: False]\n  --help                          Show this message and exit.\n```\n\n### Stops\n\n```\nUsage: transitland stops [OPTIONS]\n\n  Request stops info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  -r, --radius FLOAT          radius in meters to search around, default 100m\n                              for Point geometries. Used only for Point\n                              geometries.\n  --served-by TEXT            search by operator onestop_id or route\n                              onestop_id\n  --gtfs-id TEXT              ID used in a GTFS feed's stops.txt file\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n```\n\n### Route Stop Patterns\n\n```\nUsage: transitland route-stop-patterns [OPTIONS]\n\n  Request routes info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  --traversed-by TEXT         find all Route Stop Patterns belonging to route\n  --stops-visited TEXT        any one or more stop Onestop IDs, separated by\n                              comma. Finds Route Stop Patterns with\n                              stops_visited in stop_pattern\n  --trips TEXT                any one or more trip ids, separated by comma.\n                              Finds Route Stop Patterns with specified trips\n                              in trips\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n```\n\n### Schedule Stop Pairs\n\n```\nUsage: transitland schedule-stop-pairs [OPTIONS]\n\n  Request schedule stop pairs info\n\nOptions:\n  -b, --bbox TEXT                 Bounding box to search within\n  -g, --geometry PATH             File with geometry to use. Must be readable\n                                  by GeoPandas\n  --origin-onestop-id TEXT        Find all Schedule Stop Pairs from origin\n  --destination-onestop-id TEXT   Find all Schedule Stop Pairs to a\n                                  destination\n  --date TEXT                     Find all Schedule Stop Pairs from origin on\n                                  date\n  --service-from-date TEXT        Find all Schedule Stop Pairs in effect from\n                                  a date\n  --service-before-date TEXT      Find all Schedule Stop Pairs in effect\n                                  before a date\n  --origin-departure-between TEXT\n                                  Find all Schedule Stop Pairs with\n                                  origin_departure_time in a range\n  --trip TEXT                     Find all Schedule Stop Pairs by trip\n                                  identifier\n  --route-onestop-id TEXT         Find all Schedule Stop Pairs by route\n  --operator-onestop-id TEXT      Find all Schedule Stop Pairs by operator\n  --active / --no-active          Schedule Stop Pairs from active FeedVersions\n                                  [default: True]\n  -p, --per-page INTEGER          Number of results per page  [default: 50]\n  --page-all / --no-page-all      Page over all responses  [default: False]\n  --help                          Show this message and exit.\n```\n\n### Onestop ID\n\n```\nUsage: transitland onestop-id [OPTIONS]\n\n  Request onestop_id info\n\nOptions:\n  --oid TEXT       a Onestop ID for any type of entity (for example, a stop or\n                   an operator)\n  -f, --file PATH  a file with one or more Onestop IDs, with each on their own\n                   line.\n  --help           Show this message and exit.\n```\n\n### Feeds\n\n```\nUsage: transitland feeds [OPTIONS]\n\n  Request feeds info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n```\n\n## Python API\n\nEach function returns a _generator_ of results, because there could be an\nunknown amount of paging involved. Each item of the iterator is a list of\nGeoJSON `Feature`s.\n\n```py\nimport transitland_wrapper\ntransitland_wrapper.stops()\ntransitland_wrapper.operators()\ntransitland_wrapper.routes()\ntransitland_wrapper.route_stop_patterns()\ntransitland_wrapper.schedule_stop_pairs()\ntransitland_wrapper.onestop_id()\ntransitland_wrapper.feeds()\n```\n\n### Stops\n\n```\n- geometry: either Point, to search a radius around a point, or a\n  Polygon or MultiPolygon, to search for stops within the geometry. If a\n  Polygon or MultiPolygon is provided, the search will be done by\n  bounding box, and then results will be filtered for intersection.\n- radius: radius in meters to search around, default 100m for Point\n  geometries. Not used for Polygon geometries.\n- served_by: search by operator onestop_id or route onestop_id\n- gtfs_id: ID used in a GTFS feed's stops.txt file\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n```\n\n### Operators\n\n```\n- geometry: either Point, to search a radius around a point, or a\n  Polygon or MultiPolygon, to search for stops within the geometry. If a\n  Polygon or MultiPolygon is provided, the search will be done by\n  bounding box, and then results will be filtered for intersection.\n- radius: radius in meters to search around, default 100m for Point\n  geometries. Not used for Polygon geometries.\n- gtfs_id: ID used in a GTFS feed's agencies.txt file\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n```\n\n### Routes\n\n```\n- geometry: either Point, to search a radius around a point, or a\n  Polygon or MultiPolygon, to search for stops within the geometry. If a\n  Polygon or MultiPolygon is provided, the search will be done by\n  bounding box, and then results will be filtered for intersection.\n- radius: radius in meters to search around, default 100m for Point\n  geometries. Not used for Polygon geometries.\n- operated_by: search by operator onestop_id\n- vehicle_type: find all routes with vehicle type(s) by integer or\n  string. Possible values defined by the GTFS spec for the route_type\n  column and the Extended GTFS Route Types.\n- include_geometry: If True, includes route geometry. Default: True\n- gtfs_id: ID used in a GTFS feed's routes.txt file\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n```\n\n### Route Stop Patterns\n\n```\n- geometry: either Polygon or MultiPolygon, to search for stops within\n  the geometry. If a Polygon or MultiPolygon is provided, the search\n  will be done by bounding box, and then results will be filtered for\n  intersection.\n- traversed_by: find all Route Stop Patterns belonging to route\n- stops_visited: any one or more stop Onestop IDs, separated by comma. Finds Route Stop Patterns with stops_visited in stop_pattern.\n- trips: any one or more trip ids, separated by comma. Finds Route Stop Patterns with specified trips in trips.\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n```\n\n### Schedule Stop Pairs\n\n```\n- geometry: either Polygon or MultiPolygon, to search for stops within\n  the geometry. If a Polygon or MultiPolygon is provided, the search\n  will be done by bounding box, and then results will be filtered for\n  intersection.\n- origin_onestop_id: Find all Schedule Stop Pairs from origin. Accepts multiple Onestop IDs, separated by commas\n- destination_onestop_id: Find all Schedule Stop Pairs to a destination. Accepts multiple Onestop IDs, separated by commas\n- date: Find all Schedule Stop Pairs from origin on date\n- service_from_date: Find all Schedule Stop Pairs in effect from a date\n- service_before_date: Find all Schedule Stop Pairs in effect before a date\n- origin_departure_between: Find all Schedule Stop Pairs with origin_departure_time in a range\n- trip: Find all Schedule Stop Pairs by trip identifier\n- route_onestop_id: Find all Schedule Stop Pairs by route. Accepts multiple Onestop IDs, separated by commas.\n- operator_onestop_id: Find all Schedule Stop Pairs by operator. Accepts multiple Onestop IDs, separated by commas.\n- active: Schedule Stop Pairs from active FeedVersions\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n```\n\n### Onestop ID\n\n```\n- oid: a Onestop ID for any type of entity (for example, a stop or an operator)\n```\n\n### Feeds\n\n```\n- geometry: either Polygon or MultiPolygon, to search for stops within\n  the geometry. If a Polygon or MultiPolygon is provided, the search\n  will be done by bounding box, and then results will be filtered for\n  intersection.\n```\n\n## Contributing\n\nTo release to PyPI:\n```\nbumpversion minor\npython setup.py sdist\ntwine upload dist/transitland_wrapper-0.1.0.tar.gz\n```\n\n\n# Changelog\n\n## [0.5.0] - 2020-02-23\n\n- Add feeds endpoint\n- Set `page-all` to false by default\n\n## [0.4.2] - 2020-02-19\n\n- Fix bug where a string was treated as an iterable to be joined\n\n## [0.4.1] - 2020-02-19\n\n- Fix bug where the routes cli used the operators API endpoint\n\n## [0.4.0] - 2020-02-09\n\n- Add argument for paging size\n- Add option to not page over all responses\n\n## [0.3.0] - 2020-02-09\n\n- Add onestop_id endpoint\n\n## [0.2.0] - 2020-02-08\n\n- Add route stop patterns and schedule stop pairs endpoints\n\n## [0.1.1] - 2020-02-08\n\n- Try to fix PyPI bundle\n\n## [0.1.0] - 2020-02-08\n\n- Initial release on PyPI", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kylebarron/transitland_wrapper", "keywords": "transitland_wrapper", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "transitland-wrapper", "package_url": "https://pypi.org/project/transitland-wrapper/", "platform": "", "project_url": "https://pypi.org/project/transitland-wrapper/", "project_urls": {"Homepage": "https://github.com/kylebarron/transitland_wrapper"}, "release_url": "https://pypi.org/project/transitland-wrapper/0.5.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Wrapper around transit.land API", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Transit.land API wrapper</h1>\n<p>Simple Python wrapper around <a href=\"https://transit.land\" rel=\"nofollow\">https://transit.land</a> API.</p>\n<h2>Install</h2>\n<pre><code>pip install transitland_wrapper\n</code></pre>\n<h2>CLI</h2>\n<p>All CLI commands write a list of GeoJSON <code>Feature</code>s to stdout. This way minimal\nresults are kept in memory at once. If a <code>geometry</code> is passed, the geometry's\nbounding box is given to the transit.land API, and results are tested for\nintersection with the original geometry. The <code>geometry</code> file must be readable by\nGeoPandas and will automatically be reprojected to EPSG 4326 if necessary. The\ngeometry type must be either <code>Point</code>, <code>Polygon</code>, <code>MultiPolygon</code>, <code>LineString</code>,\nor <code>MultiLineString</code>.</p>\n<h3>Operators</h3>\n<pre><code>Usage: transitland operators [OPTIONS]\n\n  Request operators info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  -r, --radius FLOAT          radius in meters to search around, default 100m\n                              for Point geometries. Used only for Point\n                              geometries.\n  --gtfs-id TEXT              ID used in a GTFS feed's agencies.txt file\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n</code></pre>\n<h3>Routes</h3>\n<pre><code>Usage: transitland routes [OPTIONS]\n\n  Request routes info\n\nOptions:\n  -b, --bbox TEXT                 Bounding box to search within\n  -g, --geometry PATH             File with geometry to use. Must be readable\n                                  by GeoPandas\n  -r, --radius FLOAT              radius in meters to search around, default\n                                  100m for Point geometries. Used only for\n                                  Point geometries.\n  --operated-by TEXT              search by operator onestop_id or route\n                                  onestop_id\n  --vehicle-type TEXT             find all routes with vehicle type(s) by\n                                  integer or string. Possible values defined\n                                  by the GTFS spec for the route_type column\n                                  and the Extended GTFS Route Types\n  --gtfs-id TEXT                  ID used in a GTFS feed's routes.txt file\n  --include-geometry / --no-include-geometry\n                                  Include route geometry  [default: True]\n  -p, --per-page INTEGER          Number of results per page  [default: 50]\n  --page-all / --no-page-all      Page over all responses  [default: False]\n  --help                          Show this message and exit.\n</code></pre>\n<h3>Stops</h3>\n<pre><code>Usage: transitland stops [OPTIONS]\n\n  Request stops info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  -r, --radius FLOAT          radius in meters to search around, default 100m\n                              for Point geometries. Used only for Point\n                              geometries.\n  --served-by TEXT            search by operator onestop_id or route\n                              onestop_id\n  --gtfs-id TEXT              ID used in a GTFS feed's stops.txt file\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n</code></pre>\n<h3>Route Stop Patterns</h3>\n<pre><code>Usage: transitland route-stop-patterns [OPTIONS]\n\n  Request routes info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  --traversed-by TEXT         find all Route Stop Patterns belonging to route\n  --stops-visited TEXT        any one or more stop Onestop IDs, separated by\n                              comma. Finds Route Stop Patterns with\n                              stops_visited in stop_pattern\n  --trips TEXT                any one or more trip ids, separated by comma.\n                              Finds Route Stop Patterns with specified trips\n                              in trips\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n</code></pre>\n<h3>Schedule Stop Pairs</h3>\n<pre><code>Usage: transitland schedule-stop-pairs [OPTIONS]\n\n  Request schedule stop pairs info\n\nOptions:\n  -b, --bbox TEXT                 Bounding box to search within\n  -g, --geometry PATH             File with geometry to use. Must be readable\n                                  by GeoPandas\n  --origin-onestop-id TEXT        Find all Schedule Stop Pairs from origin\n  --destination-onestop-id TEXT   Find all Schedule Stop Pairs to a\n                                  destination\n  --date TEXT                     Find all Schedule Stop Pairs from origin on\n                                  date\n  --service-from-date TEXT        Find all Schedule Stop Pairs in effect from\n                                  a date\n  --service-before-date TEXT      Find all Schedule Stop Pairs in effect\n                                  before a date\n  --origin-departure-between TEXT\n                                  Find all Schedule Stop Pairs with\n                                  origin_departure_time in a range\n  --trip TEXT                     Find all Schedule Stop Pairs by trip\n                                  identifier\n  --route-onestop-id TEXT         Find all Schedule Stop Pairs by route\n  --operator-onestop-id TEXT      Find all Schedule Stop Pairs by operator\n  --active / --no-active          Schedule Stop Pairs from active FeedVersions\n                                  [default: True]\n  -p, --per-page INTEGER          Number of results per page  [default: 50]\n  --page-all / --no-page-all      Page over all responses  [default: False]\n  --help                          Show this message and exit.\n</code></pre>\n<h3>Onestop ID</h3>\n<pre><code>Usage: transitland onestop-id [OPTIONS]\n\n  Request onestop_id info\n\nOptions:\n  --oid TEXT       a Onestop ID for any type of entity (for example, a stop or\n                   an operator)\n  -f, --file PATH  a file with one or more Onestop IDs, with each on their own\n                   line.\n  --help           Show this message and exit.\n</code></pre>\n<h3>Feeds</h3>\n<pre><code>Usage: transitland feeds [OPTIONS]\n\n  Request feeds info\n\nOptions:\n  -b, --bbox TEXT             Bounding box to search within\n  -g, --geometry PATH         File with geometry to use. Must be readable by\n                              GeoPandas\n  -p, --per-page INTEGER      Number of results per page  [default: 50]\n  --page-all / --no-page-all  Page over all responses  [default: False]\n  --help                      Show this message and exit.\n</code></pre>\n<h2>Python API</h2>\n<p>Each function returns a <em>generator</em> of results, because there could be an\nunknown amount of paging involved. Each item of the iterator is a list of\nGeoJSON <code>Feature</code>s.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">transitland_wrapper</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">stops</span><span class=\"p\">()</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">operators</span><span class=\"p\">()</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">routes</span><span class=\"p\">()</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">route_stop_patterns</span><span class=\"p\">()</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">schedule_stop_pairs</span><span class=\"p\">()</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">onestop_id</span><span class=\"p\">()</span>\n<span class=\"n\">transitland_wrapper</span><span class=\"o\">.</span><span class=\"n\">feeds</span><span class=\"p\">()</span>\n</pre>\n<h3>Stops</h3>\n<pre><code>- geometry: either Point, to search a radius around a point, or a\n  Polygon or MultiPolygon, to search for stops within the geometry. If a\n  Polygon or MultiPolygon is provided, the search will be done by\n  bounding box, and then results will be filtered for intersection.\n- radius: radius in meters to search around, default 100m for Point\n  geometries. Not used for Polygon geometries.\n- served_by: search by operator onestop_id or route onestop_id\n- gtfs_id: ID used in a GTFS feed's stops.txt file\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n</code></pre>\n<h3>Operators</h3>\n<pre><code>- geometry: either Point, to search a radius around a point, or a\n  Polygon or MultiPolygon, to search for stops within the geometry. If a\n  Polygon or MultiPolygon is provided, the search will be done by\n  bounding box, and then results will be filtered for intersection.\n- radius: radius in meters to search around, default 100m for Point\n  geometries. Not used for Polygon geometries.\n- gtfs_id: ID used in a GTFS feed's agencies.txt file\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n</code></pre>\n<h3>Routes</h3>\n<pre><code>- geometry: either Point, to search a radius around a point, or a\n  Polygon or MultiPolygon, to search for stops within the geometry. If a\n  Polygon or MultiPolygon is provided, the search will be done by\n  bounding box, and then results will be filtered for intersection.\n- radius: radius in meters to search around, default 100m for Point\n  geometries. Not used for Polygon geometries.\n- operated_by: search by operator onestop_id\n- vehicle_type: find all routes with vehicle type(s) by integer or\n  string. Possible values defined by the GTFS spec for the route_type\n  column and the Extended GTFS Route Types.\n- include_geometry: If True, includes route geometry. Default: True\n- gtfs_id: ID used in a GTFS feed's routes.txt file\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n</code></pre>\n<h3>Route Stop Patterns</h3>\n<pre><code>- geometry: either Polygon or MultiPolygon, to search for stops within\n  the geometry. If a Polygon or MultiPolygon is provided, the search\n  will be done by bounding box, and then results will be filtered for\n  intersection.\n- traversed_by: find all Route Stop Patterns belonging to route\n- stops_visited: any one or more stop Onestop IDs, separated by comma. Finds Route Stop Patterns with stops_visited in stop_pattern.\n- trips: any one or more trip ids, separated by comma. Finds Route Stop Patterns with specified trips in trips.\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n</code></pre>\n<h3>Schedule Stop Pairs</h3>\n<pre><code>- geometry: either Polygon or MultiPolygon, to search for stops within\n  the geometry. If a Polygon or MultiPolygon is provided, the search\n  will be done by bounding box, and then results will be filtered for\n  intersection.\n- origin_onestop_id: Find all Schedule Stop Pairs from origin. Accepts multiple Onestop IDs, separated by commas\n- destination_onestop_id: Find all Schedule Stop Pairs to a destination. Accepts multiple Onestop IDs, separated by commas\n- date: Find all Schedule Stop Pairs from origin on date\n- service_from_date: Find all Schedule Stop Pairs in effect from a date\n- service_before_date: Find all Schedule Stop Pairs in effect before a date\n- origin_departure_between: Find all Schedule Stop Pairs with origin_departure_time in a range\n- trip: Find all Schedule Stop Pairs by trip identifier\n- route_onestop_id: Find all Schedule Stop Pairs by route. Accepts multiple Onestop IDs, separated by commas.\n- operator_onestop_id: Find all Schedule Stop Pairs by operator. Accepts multiple Onestop IDs, separated by commas.\n- active: Schedule Stop Pairs from active FeedVersions\n- per_page: number of results per page, by default 50\n- page_all: page over all responses\n</code></pre>\n<h3>Onestop ID</h3>\n<pre><code>- oid: a Onestop ID for any type of entity (for example, a stop or an operator)\n</code></pre>\n<h3>Feeds</h3>\n<pre><code>- geometry: either Polygon or MultiPolygon, to search for stops within\n  the geometry. If a Polygon or MultiPolygon is provided, the search\n  will be done by bounding box, and then results will be filtered for\n  intersection.\n</code></pre>\n<h2>Contributing</h2>\n<p>To release to PyPI:</p>\n<pre><code>bumpversion minor\npython setup.py sdist\ntwine upload dist/transitland_wrapper-0.1.0.tar.gz\n</code></pre>\n<h1>Changelog</h1>\n<h2>[0.5.0] - 2020-02-23</h2>\n<ul>\n<li>Add feeds endpoint</li>\n<li>Set <code>page-all</code> to false by default</li>\n</ul>\n<h2>[0.4.2] - 2020-02-19</h2>\n<ul>\n<li>Fix bug where a string was treated as an iterable to be joined</li>\n</ul>\n<h2>[0.4.1] - 2020-02-19</h2>\n<ul>\n<li>Fix bug where the routes cli used the operators API endpoint</li>\n</ul>\n<h2>[0.4.0] - 2020-02-09</h2>\n<ul>\n<li>Add argument for paging size</li>\n<li>Add option to not page over all responses</li>\n</ul>\n<h2>[0.3.0] - 2020-02-09</h2>\n<ul>\n<li>Add onestop_id endpoint</li>\n</ul>\n<h2>[0.2.0] - 2020-02-08</h2>\n<ul>\n<li>Add route stop patterns and schedule stop pairs endpoints</li>\n</ul>\n<h2>[0.1.1] - 2020-02-08</h2>\n<ul>\n<li>Try to fix PyPI bundle</li>\n</ul>\n<h2>[0.1.0] - 2020-02-08</h2>\n<ul>\n<li>Initial release on PyPI</li>\n</ul>\n\n          </div>"}, "last_serial": 6686512, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0e61466235a6fc6fc37faebe8e2f2323", "sha256": "7424fea3dbbd351b313b42ccbb3fe986497d31623eb6aad69226110ead2e9c4a"}, "downloads": -1, "filename": "transitland_wrapper-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0e61466235a6fc6fc37faebe8e2f2323", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5170, "upload_time": "2020-02-08T18:16:25", "upload_time_iso_8601": "2020-02-08T18:16:25.792335Z", "url": "https://files.pythonhosted.org/packages/f1/c0/188a5598844fbca4de287fc459f738aca656b5a51c6001d5f7897d10f0b9/transitland_wrapper-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ddc9e57e5411b62551399ebe1df8db49", "sha256": "4400d1a8014efaadc5ab0d12095230d2e1608e0e0534dea5d86bcdeafb47371d"}, "downloads": -1, "filename": "transitland_wrapper-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ddc9e57e5411b62551399ebe1df8db49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7314, "upload_time": "2020-02-08T18:20:52", "upload_time_iso_8601": "2020-02-08T18:20:52.042589Z", "url": "https://files.pythonhosted.org/packages/b1/da/49e413646649deb201e03456a7d284a2a0e1d5e2792561a2a90e76eb1cdb/transitland_wrapper-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "463522a4b0ee96e2c48b7f8692feb142", "sha256": "17742ae1b083a265320846e679c60ff0d3172783a788f027c1b3ca93fa9d87af"}, "downloads": -1, "filename": "transitland_wrapper-0.2.0.tar.gz", "has_sig": false, "md5_digest": "463522a4b0ee96e2c48b7f8692feb142", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10146, "upload_time": "2020-02-09T03:08:59", "upload_time_iso_8601": "2020-02-09T03:08:59.018254Z", "url": "https://files.pythonhosted.org/packages/c8/d6/7d8b67e71892089a029d0cdea9576930c512cdb7c0f46f74d073b5ca8292/transitland_wrapper-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "25e6854adb781ea620f21b2d3b77e5a5", "sha256": "27479f1824e01c62a5fdd18ac8d843724f55a48ad029356b4bbc1eb00c56c59a"}, "downloads": -1, "filename": "transitland_wrapper-0.3.0.tar.gz", "has_sig": false, "md5_digest": "25e6854adb781ea620f21b2d3b77e5a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10722, "upload_time": "2020-02-09T06:03:06", "upload_time_iso_8601": "2020-02-09T06:03:06.406826Z", "url": "https://files.pythonhosted.org/packages/ef/92/34c298380f35818437873b98b374e3260ea50f55f179a43385b328a4a684/transitland_wrapper-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "fc2034e08b4114b5cb38f33128873ef3", "sha256": "0e0ac8f8b7685014a7d8aa4d708b8da231b6634030fe7511827ca0ec28430390"}, "downloads": -1, "filename": "transitland_wrapper-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fc2034e08b4114b5cb38f33128873ef3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11352, "upload_time": "2020-02-10T03:46:10", "upload_time_iso_8601": "2020-02-10T03:46:10.090217Z", "url": "https://files.pythonhosted.org/packages/43/b2/9b2c81c8e69e9fbaa16c39d4a6ff6ccabb5ff18e4ea640d285e95b659737/transitland_wrapper-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5a8d39ef7b15d8c17f8a517bb601a634", "sha256": "f94b9a0b01391de06ba81f9657a646386ace8adccaae2a66dd4f33ccc08998db"}, "downloads": -1, "filename": "transitland_wrapper-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5a8d39ef7b15d8c17f8a517bb601a634", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11434, "upload_time": "2020-02-19T06:34:56", "upload_time_iso_8601": "2020-02-19T06:34:56.445483Z", "url": "https://files.pythonhosted.org/packages/08/80/ce0164ec44664bd05b07074c6a8181a26a1c1059a018a4146c93e9222129/transitland_wrapper-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "6ad146f33ca2fc25949f46a9ca124ea4", "sha256": "7b96621a5994c0acc3e70f7da25ddae5c12ad062b481e71c6e9f4707c9164fd1"}, "downloads": -1, "filename": "transitland_wrapper-0.4.2.tar.gz", "has_sig": false, "md5_digest": "6ad146f33ca2fc25949f46a9ca124ea4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11534, "upload_time": "2020-02-19T06:46:05", "upload_time_iso_8601": "2020-02-19T06:46:05.040632Z", "url": "https://files.pythonhosted.org/packages/ec/96/a738cf3bccdd6aa7e8caa5be61a572856d2a31642c1dd2b7d3e74f79c173/transitland_wrapper-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "79f6e00cfbb55c7041a547deb8169d70", "sha256": "427fba6999c070cf225771da62799c5922bb8c7f702608bf8e5ca5a7e9db517c"}, "downloads": -1, "filename": "transitland_wrapper-0.5.0.tar.gz", "has_sig": false, "md5_digest": "79f6e00cfbb55c7041a547deb8169d70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11890, "upload_time": "2020-02-24T04:55:29", "upload_time_iso_8601": "2020-02-24T04:55:29.814867Z", "url": "https://files.pythonhosted.org/packages/92/52/ef2253d11481e9a1749f41343ea22d41a448ef6034fc8905f9b189b57d42/transitland_wrapper-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79f6e00cfbb55c7041a547deb8169d70", "sha256": "427fba6999c070cf225771da62799c5922bb8c7f702608bf8e5ca5a7e9db517c"}, "downloads": -1, "filename": "transitland_wrapper-0.5.0.tar.gz", "has_sig": false, "md5_digest": "79f6e00cfbb55c7041a547deb8169d70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11890, "upload_time": "2020-02-24T04:55:29", "upload_time_iso_8601": "2020-02-24T04:55:29.814867Z", "url": "https://files.pythonhosted.org/packages/92/52/ef2253d11481e9a1749f41343ea22d41a448ef6034fc8905f9b189b57d42/transitland_wrapper-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:09 2020"}