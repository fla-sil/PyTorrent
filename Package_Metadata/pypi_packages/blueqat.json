{"info": {"author": "The Blueqat Developers", "author_email": "kato@mdrft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3"], "description": ".. image:: https://raw.githubusercontent.com/Blueqat/Blueqat/master/MDR_Blueqat_color.png\n    :target: https://github.com/Blueqat/Blueqat\n    :alt: Blueqat\n\n=======\nblueqat\n=======\n\nA quantum computing SDK\n\nVersion\n=======\n.. image:: https://badge.fury.io/py/blueqat.svg\n    :target: https://badge.fury.io/py/blueqat\n\nBuild info\n==========\n.. image:: https://circleci.com/gh/Blueqat/Blueqat.svg?style=svg\n    :target: https://circleci.com/gh/Blueqat/Blueqat\n\nTutorial\n========\nhttps://github.com/Blueqat/Blueqat-tutorials\n\nInstall\n=======\n\n.. code-block:: sh\n\n    git clone https://github.com/Blueqat/Blueqat\n    cd Blueqat\n    pip3 install -e .\n\nor\n\n.. code-block:: sh\n\n    pip3 install blueqat\n\nCircuit\n=======\n\n.. code-block:: python\n\n    from blueqat import Circuit\n    import math\n\n    #number of qubit is not specified\n    c = Circuit()\n\n    #if you want to specified the number of qubit\n    c = Circuit(3) #3qubits\n\nMethod Chain\n============\n\n.. code-block:: python\n\n    # write as chain\n    Circuit().h[0].x[0].z[0]\n\n    # write in separately\n    c = Circuit().h[0]\n    c.x[0].z[0]\n\nSlice\n=====\n\n.. code-block:: python\n\n    Circuit().z[1:3] # Zgate on 1,2\n    Circuit().x[:3] # Xgate on (0, 1, 2)\n    Circuit().h[:] # Hgate on all qubits\n    Circuit().x[1, 2] # 1qubit gate with comma\n\nRotation Gate\n=============\n\n.. code-block:: python\n\n    Circuit().rz(math.pi / 4)[0]\n\nMeasurement\n===========\n\n.. code-block:: python\n\n    Circuit().m[0]\n\nRun()\n=====\n\n.. code-block:: python\n\n    Circuit().h[0].cx[0,1].run()\n\nRun(shots=n)\n============\n\n.. code-block:: python\n\n    c = Circuit().h[0].cx[0,1].m[:]\n    c.run(shots=100) # => Counter({'00': 48, '11': 52}) (random value.)\n\nHamiltonian\n===========\n\n.. code-block:: python\n\n    from blueqat.pauli import *\n\n    hamiltonian1 = (1.23 * Z[0] + 4.56 * X[1] * Z[2]) ** 2\n    hamiltonian2 = (2.46 * Y[0] + 5.55 * Z[1] * X[2] * X[1]) ** 2\n    hamiltonian = hamiltonian1 + hamiltonian2\n    print(hamiltonian)\n\nsimplify the hamiltonian\n\n.. code-block:: python\n\n    hamiltonian = hamiltonian.simplify()\n    print(hamiltonian)\n\nVQE\n===\n\n.. code-block:: python\n\n    from blueqat import vqe\n    from blueqat.pauli import qubo_bit as q\n\n    hamiltonian = -3*q(0)-3*q(1)-3*q(2)-3*q(3)-3*q(4)+2*q(0)*q(1)+2*q(0)*q(2)+2*q(0)*q(3)+2*q(0)*q(4)+2*q(1)*q(2)+2*q(1)*q(3)+2*q(1)*q(4)+2*q(2)*q(3)+2*q(2)*q(4)+2*q(3)*q(4)\n    step = 2\n\n    result = vqe.Vqe(vqe.QaoaAnsatz(hamiltonian, step)).run()\n    print(result.most_common(12))\n\nIf you want to create an ising model hamiltonian use Z(x) instead of q(x) in the equation\n\n.. code-block:: python\n\n    hamiltonian = Z(0)-3*Z(1)+2*Z(0)*Z(1)+2*Z(0)*Z(2)\n\nBlueqat to Qiskit\n=================\n\n.. code-block:: python\n\n    qiskit.register(APItoken)\n    sampler = blueqat.vqe.get_qiskit_sampler(backend=\"backend name\")\n    result = blueqat.vqe.Vqe(QaoaAnsatz(...), sampler=sampler).run(verbose=True)\n\nBlueqat to QASM\n===============\n\n.. code-block:: python\n\n    Circuit.to_qasm()\n\n    #OPENQASM 2.0;\n    #include \"qelib1.inc\";\n    #qreg q[1];\n    #creg c[1];\n    #h q[0];\n\nExample\n=======\n\n2-qubit Grover\n--------------\n\n.. code-block:: python\n\n    from blueqat import Circuit\n    c = Circuit().h[:2].cz[0,1].h[:].x[:].cz[0,1].x[:].h[:].m[:]\n    print(c.run(shots=1))\n\nMaxcut QAOA\n-----------\n\n.. code-block:: python\n\n    from blueqat import vqe, pauli\n    edges = [(0, 1), (1, 2), (2, 3), (3, 0), (1, 3), (0, 2), (4, 0), (4, 3)]\n    ansatz = vqe.QaoaAnsatz(sum([pauli.Z(i) * pauli.Z(j) for i, j in edges]), 1)\n    result = vqe.Vqe(ansatz).run()\n    print(\n    \"\"\"   {4}\n      / \\\\\n     {0}---{3}\n     | x |\n     {1}---{2}\"\"\".format(*result.most_common()[0][0]))\n\nOptimization\n-------------------------\n\n.. code-block:: python\n\n    from blueqat.opt import Opt\n    c = Opt().add([[1,1],[1,1]]).add(\"(q0+q1)^2\")\n\n    #qaoa\n    print(c.qaoa().most_common(5))\n    #=>(((0, 0), 0.7639901896866), ((1, 0), 0.10321404014639714), ((0, 1), 0.10321404014639707), ((1, 1), 0.029581730020605202))\n\n    #annealing\n    print(c.run())\n    [0, 0]\n\n\nSA Annealing\n-----------------\n\n.. code-block:: python\n\n    import blueqat.opt as wq\n    a = wq.opt()\n    a.qubo = wq.sel(3,1) #creating QUBO matrix\n    result = a.sa(shots=100,sampler=\"fast\")\n    wq.counter(result)\n\n    Counter({'010': 29, '100': 34, '001': 37})\n\nSA Parameters\n-----------------\n\nSome parameters for simualtion is adjustable\n\n.. code-block:: python\n\n    #for sa\n    a.Ts  = 10    #default 5\n    a.R   = 0.99  #default 0.95\n    a.ite = 10000 #default 1000\n\nSA Energy Function\n------------------\n\nEnergy function of the calculation is stored in attribute E as an array.\n\n.. code-block:: python\n\n    print(a.E[-1]) #=>[0.0]\n\n    #if you want to check the time evolution\n    a.plot()\n\nSA Sampling\n-----------------\n\nSampling and counter function with number of shots.\n\n.. code-block:: python\n\n    result = a.sa(shots=100,sampler=\"fast\")\n\n    print(result)\n\n    [[0, 1, 0],\n     [0, 0, 1],\n     [0, 1, 0],\n     [0, 0, 1],\n     [0, 1, 0],\n\n     counter(result) # => Counter({'001': 37, '010': 25, '100': 38})\n\nConnection to D-Wave cloud\n-----------------------------\n\nDirect connection to D-Wave machine with apitoken\nhttps://github.com/dwavesystems/dwave-cloud-client is required\n\n.. code-block:: python\n\n    from blueqat.opt import Opt\n    a = Opt()\n    a.dwavetoken = \"your token here\"\n    a.qubo = [[0,0,0,0,-4],[0,2,0,0,-4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,4]] \n    a.dw()\n\n    # => [1,1,-1,1,1,0,0,0,0,0,0]\n\nQUBO Functions\n-----------------\n\nsel(N,K,array)\nAutomatically create QUBO which select K qubits from N qubits\n\n.. code-block:: python\n\n    print(wq.sel(5,2))\n    #=>\n    [[-3  2  2  2  2]\n     [ 0 -3  2  2  2]\n     [ 0  0 -3  2  2]\n     [ 0  0  0 -3  2]\n     [ 0  0  0  0 -3]]\n\nif you set array on the 3rd params, the result likely to choose the nth qubit in the array\n\n.. code-block:: python\n\n    print(wq.sel(5,2,[0,2]))\n    #=>\n    [[-3.5  2.   2.   2.   2. ]\n     [ 0.  -3.   2.   2.   2. ]\n     [ 0.   0.  -3.5  2.   2. ]\n     [ 0.   0.   0.  -3.   2. ]\n     [ 0.   0.   0.   0.  -3. ]]\n\nnet(arr,N)\nAutomatically create QUBO which has value 1 for all connectivity defined by array of edges and graph size N\n\n.. code-block:: python\n\n    print(wq.net([[0,1],[1,2]],4))\n    #=>\n    [[0. 1. 0. 0.]\n     [0. 0. 1. 0.]\n     [0. 0. 0. 0.]\n     [0. 0. 0. 0.]]\n\nthis create 4*4 QUBO and put value 1 on connection between 0th and 1st qubit, 1st and 2nd qubit\n\nzeros(N) Create QUBO with all element value as 0\n\n.. code-block:: python\n\n    print(wq.zeros(3))\n    #=>\n    [[0. 0. 0.]\n     [0. 0. 0.]\n     [0. 0. 0.]]\n\ndiag(list) Create QUBO with diag from list\n\n.. code-block:: python\n\n    print(wq.diag([1,2,1]))\n    #=>\n    [[1 0 0]\n     [0 2 0]\n     [0 0 1]]\n\nrands(N) Create QUBO with random number\n\n.. code-block:: python\n\n    print(wq.rands(2))\n    #=>\n    [[0.89903411 0.68839641]\n     [0.         0.28554602]]\n\nDocument\n========\n\nhttps://blueqat.readthedocs.io/en/latest/\n\nAuthor\n======\nTakumi Kato (MDR), Yuichiro Minato (MDR), Yuma Murata (D Slit Technologies), Satoshi Takezawa (TerraSky)\n\nDisclaimer\n==========\nCopyright 2019 The Blueqat Developers.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Blueqat/Blueqat", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "blueqat", "package_url": "https://pypi.org/project/blueqat/", "platform": "", "project_url": "https://pypi.org/project/blueqat/", "project_urls": {"Homepage": "https://github.com/Blueqat/Blueqat"}, "release_url": "https://pypi.org/project/blueqat/0.3.13/", "requires_dist": ["numpy (~=1.12)", "scipy (>=1.1.0)"], "requires_python": "", "summary": "Quantum gate simulator", "version": "0.3.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/Blueqat/Blueqat\" rel=\"nofollow\"><img alt=\"Blueqat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd44bc1dfde085a766b3decb5f166c3f0ab279f2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f426c75657161742f426c75657161742f6d61737465722f4d44525f426c75657161745f636f6c6f722e706e67\"></a>\n<div id=\"blueqat\">\n<h2>blueqat</h2>\n<p>A quantum computing SDK</p>\n<div id=\"version\">\n<h3>Version</h3>\n<a href=\"https://badge.fury.io/py/blueqat\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/blueqat.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9717dbb7e434bd717b30cc9f75f1bf2e8b87fd8/68747470733a2f2f62616467652e667572792e696f2f70792f626c75657161742e737667\"></a>\n</div>\n<div id=\"build-info\">\n<h3>Build info</h3>\n<a href=\"https://circleci.com/gh/Blueqat/Blueqat\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/Blueqat/Blueqat.svg?style=svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e65028815b98aa12ae7ead2fb2c58056622b5341/68747470733a2f2f636972636c6563692e636f6d2f67682f426c75657161742f426c75657161742e7376673f7374796c653d737667\"></a>\n</div>\n<div id=\"tutorial\">\n<h3>Tutorial</h3>\n<p><a href=\"https://github.com/Blueqat/Blueqat-tutorials\" rel=\"nofollow\">https://github.com/Blueqat/Blueqat-tutorials</a></p>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>git clone https://github.com/Blueqat/Blueqat\n<span class=\"nb\">cd</span> Blueqat\npip3 install -e .\n</pre>\n<p>or</p>\n<pre>pip3 install blueqat\n</pre>\n</div>\n<div id=\"circuit\">\n<h3>Circuit</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat</span> <span class=\"kn\">import</span> <span class=\"n\">Circuit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"c1\">#number of qubit is not specified</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Circuit</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#if you want to specified the number of qubit</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Circuit</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"c1\">#3qubits</span>\n</pre>\n</div>\n<div id=\"method-chain\">\n<h3>Method Chain</h3>\n<pre><span class=\"c1\"># write as chain</span>\n<span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># write in separately</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"slice\">\n<h3>Slice</h3>\n<pre><span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"c1\"># Zgate on 1,2</span>\n<span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"c1\"># Xgate on (0, 1, 2)</span>\n<span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[:]</span> <span class=\"c1\"># Hgate on all qubits</span>\n<span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"c1\"># 1qubit gate with comma</span>\n</pre>\n</div>\n<div id=\"rotation-gate\">\n<h3>Rotation Gate</h3>\n<pre><span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">rz</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"measurement\">\n<h3>Measurement</h3>\n<pre><span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"run\">\n<h3>Run()</h3>\n<pre><span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cx</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"run-shots-n\">\n<h3>Run(shots=n)</h3>\n<pre><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cx</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"p\">[:]</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">shots</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; Counter({'00': 48, '11': 52}) (random value.)</span>\n</pre>\n</div>\n<div id=\"hamiltonian\">\n<h3>Hamiltonian</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat.pauli</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">hamiltonian1</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">1.23</span> <span class=\"o\">*</span> <span class=\"n\">Z</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">4.56</span> <span class=\"o\">*</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">Z</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"n\">hamiltonian2</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">2.46</span> <span class=\"o\">*</span> <span class=\"n\">Y</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">5.55</span> <span class=\"o\">*</span> <span class=\"n\">Z</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"n\">hamiltonian</span> <span class=\"o\">=</span> <span class=\"n\">hamiltonian1</span> <span class=\"o\">+</span> <span class=\"n\">hamiltonian2</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hamiltonian</span><span class=\"p\">)</span>\n</pre>\n<p>simplify the hamiltonian</p>\n<pre><span class=\"n\">hamiltonian</span> <span class=\"o\">=</span> <span class=\"n\">hamiltonian</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">hamiltonian</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"vqe\">\n<h3>VQE</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat</span> <span class=\"kn\">import</span> <span class=\"n\">vqe</span>\n<span class=\"kn\">from</span> <span class=\"nn\">blueqat.pauli</span> <span class=\"kn\">import</span> <span class=\"n\">qubo_bit</span> <span class=\"k\">as</span> <span class=\"n\">q</span>\n\n<span class=\"n\">hamiltonian</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">step</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">vqe</span><span class=\"o\">.</span><span class=\"n\">Vqe</span><span class=\"p\">(</span><span class=\"n\">vqe</span><span class=\"o\">.</span><span class=\"n\">QaoaAnsatz</span><span class=\"p\">(</span><span class=\"n\">hamiltonian</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">most_common</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">))</span>\n</pre>\n<p>If you want to create an ising model hamiltonian use Z(x) instead of q(x) in the equation</p>\n<pre><span class=\"n\">hamiltonian</span> <span class=\"o\">=</span> <span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"blueqat-to-qiskit\">\n<h3>Blueqat to Qiskit</h3>\n<pre><span class=\"n\">qiskit</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">APItoken</span><span class=\"p\">)</span>\n<span class=\"n\">sampler</span> <span class=\"o\">=</span> <span class=\"n\">blueqat</span><span class=\"o\">.</span><span class=\"n\">vqe</span><span class=\"o\">.</span><span class=\"n\">get_qiskit_sampler</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"s2\">\"backend name\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">blueqat</span><span class=\"o\">.</span><span class=\"n\">vqe</span><span class=\"o\">.</span><span class=\"n\">Vqe</span><span class=\"p\">(</span><span class=\"n\">QaoaAnsatz</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">),</span> <span class=\"n\">sampler</span><span class=\"o\">=</span><span class=\"n\">sampler</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"blueqat-to-qasm\">\n<h3>Blueqat to QASM</h3>\n<pre><span class=\"n\">Circuit</span><span class=\"o\">.</span><span class=\"n\">to_qasm</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#OPENQASM 2.0;</span>\n<span class=\"c1\">#include \"qelib1.inc\";</span>\n<span class=\"c1\">#qreg q[1];</span>\n<span class=\"c1\">#creg c[1];</span>\n<span class=\"c1\">#h q[0];</span>\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<div id=\"qubit-grover\">\n<h4>2-qubit Grover</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat</span> <span class=\"kn\">import</span> <span class=\"n\">Circuit</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Circuit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cz</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[:]</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[:]</span><span class=\"o\">.</span><span class=\"n\">cz</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[:]</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">[:]</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"p\">[:]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">shots</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"maxcut-qaoa\">\n<h4>Maxcut QAOA</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat</span> <span class=\"kn\">import</span> <span class=\"n\">vqe</span><span class=\"p\">,</span> <span class=\"n\">pauli</span>\n<span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"n\">ansatz</span> <span class=\"o\">=</span> <span class=\"n\">vqe</span><span class=\"o\">.</span><span class=\"n\">QaoaAnsatz</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">pauli</span><span class=\"o\">.</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">pauli</span><span class=\"o\">.</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">edges</span><span class=\"p\">]),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">vqe</span><span class=\"o\">.</span><span class=\"n\">Vqe</span><span class=\"p\">(</span><span class=\"n\">ansatz</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n<span class=\"sd\">\"\"\"   {4}\n  / \\\\\n {0}---{3}\n | x |\n {1}---{2}\"\"\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">most_common</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n</pre>\n</div>\n<div id=\"optimization\">\n<h4>Optimization</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat.opt</span> <span class=\"kn\">import</span> <span class=\"n\">Opt</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Opt</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"(q0+q1)^2\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#qaoa</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">qaoa</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">most_common</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"c1\">#=&gt;(((0, 0), 0.7639901896866), ((1, 0), 0.10321404014639714), ((0, 1), 0.10321404014639707), ((1, 1), 0.029581730020605202))</span>\n\n<span class=\"c1\">#annealing</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"sa-annealing\">\n<h4>SA Annealing</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">blueqat.opt</span> <span class=\"k\">as</span> <span class=\"nn\">wq</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">opt</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">qubo</span> <span class=\"o\">=</span> <span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\">#creating QUBO matrix</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">sa</span><span class=\"p\">(</span><span class=\"n\">shots</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"n\">sampler</span><span class=\"o\">=</span><span class=\"s2\">\"fast\"</span><span class=\"p\">)</span>\n<span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">counter</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"n\">Counter</span><span class=\"p\">({</span><span class=\"s1\">'010'</span><span class=\"p\">:</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"s1\">'100'</span><span class=\"p\">:</span> <span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"s1\">'001'</span><span class=\"p\">:</span> <span class=\"mi\">37</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"sa-parameters\">\n<h4>SA Parameters</h4>\n<p>Some parameters for simualtion is adjustable</p>\n<pre><span class=\"c1\">#for sa</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">Ts</span>  <span class=\"o\">=</span> <span class=\"mi\">10</span>    <span class=\"c1\">#default 5</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">R</span>   <span class=\"o\">=</span> <span class=\"mf\">0.99</span>  <span class=\"c1\">#default 0.95</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">ite</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span> <span class=\"c1\">#default 1000</span>\n</pre>\n</div>\n<div id=\"sa-energy-function\">\n<h4>SA Energy Function</h4>\n<p>Energy function of the calculation is stored in attribute E as an array.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">E</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"c1\">#=&gt;[0.0]</span>\n\n<span class=\"c1\">#if you want to check the time evolution</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"sa-sampling\">\n<h4>SA Sampling</h4>\n<p>Sampling and counter function with number of shots.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">sa</span><span class=\"p\">(</span><span class=\"n\">shots</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"n\">sampler</span><span class=\"o\">=</span><span class=\"s2\">\"fast\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n\n <span class=\"n\">counter</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; Counter({'001': 37, '010': 25, '100': 38})</span>\n</pre>\n</div>\n<div id=\"connection-to-d-wave-cloud\">\n<h4>Connection to D-Wave cloud</h4>\n<p>Direct connection to D-Wave machine with apitoken\n<a href=\"https://github.com/dwavesystems/dwave-cloud-client\" rel=\"nofollow\">https://github.com/dwavesystems/dwave-cloud-client</a> is required</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">blueqat.opt</span> <span class=\"kn\">import</span> <span class=\"n\">Opt</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Opt</span><span class=\"p\">()</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dwavetoken</span> <span class=\"o\">=</span> <span class=\"s2\">\"your token here\"</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">qubo</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]]</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dw</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># =&gt; [1,1,-1,1,1,0,0,0,0,0,0]</span>\n</pre>\n</div>\n<div id=\"qubo-functions\">\n<h4>QUBO Functions</h4>\n<p>sel(N,K,array)\nAutomatically create QUBO which select K qubits from N qubits</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"c1\">#=&gt;</span>\n<span class=\"p\">[[</span><span class=\"o\">-</span><span class=\"mi\">3</span>  <span class=\"mi\">2</span>  <span class=\"mi\">2</span>  <span class=\"mi\">2</span>  <span class=\"mi\">2</span><span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"mi\">3</span>  <span class=\"mi\">2</span>  <span class=\"mi\">2</span>  <span class=\"mi\">2</span><span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mi\">0</span>  <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"mi\">3</span>  <span class=\"mi\">2</span>  <span class=\"mi\">2</span><span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mi\">0</span>  <span class=\"mi\">0</span>  <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"mi\">3</span>  <span class=\"mi\">2</span><span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mi\">0</span>  <span class=\"mi\">0</span>  <span class=\"mi\">0</span>  <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]]</span>\n</pre>\n<p>if you set array on the 3rd params, the result likely to choose the nth qubit in the array</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n<span class=\"c1\">#=&gt;</span>\n<span class=\"p\">[[</span><span class=\"o\">-</span><span class=\"mf\">3.5</span>  <span class=\"mf\">2.</span>   <span class=\"mf\">2.</span>   <span class=\"mf\">2.</span>   <span class=\"mf\">2.</span> <span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mf\">0.</span>  <span class=\"o\">-</span><span class=\"mf\">3.</span>   <span class=\"mf\">2.</span>   <span class=\"mf\">2.</span>   <span class=\"mf\">2.</span> <span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mf\">0.</span>   <span class=\"mf\">0.</span>  <span class=\"o\">-</span><span class=\"mf\">3.5</span>  <span class=\"mf\">2.</span>   <span class=\"mf\">2.</span> <span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mf\">0.</span>   <span class=\"mf\">0.</span>   <span class=\"mf\">0.</span>  <span class=\"o\">-</span><span class=\"mf\">3.</span>   <span class=\"mf\">2.</span> <span class=\"p\">]</span>\n <span class=\"p\">[</span> <span class=\"mf\">0.</span>   <span class=\"mf\">0.</span>   <span class=\"mf\">0.</span>   <span class=\"mf\">0.</span>  <span class=\"o\">-</span><span class=\"mf\">3.</span> <span class=\"p\">]]</span>\n</pre>\n<p>net(arr,N)\nAutomatically create QUBO which has value 1 for all connectivity defined by array of edges and graph size N</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">net</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]],</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"c1\">#=&gt;</span>\n<span class=\"p\">[[</span><span class=\"mf\">0.</span> <span class=\"mf\">1.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">1.</span> <span class=\"mf\">0.</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span><span class=\"p\">]]</span>\n</pre>\n<p>this create 4*4 QUBO and put value 1 on connection between 0th and 1st qubit, 1st and 2nd qubit</p>\n<p>zeros(N) Create QUBO with all element value as 0</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"c1\">#=&gt;</span>\n<span class=\"p\">[[</span><span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span> <span class=\"mf\">0.</span> <span class=\"mf\">0.</span><span class=\"p\">]]</span>\n</pre>\n<p>diag(list) Create QUBO with diag from list</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n<span class=\"c1\">#=&gt;</span>\n<span class=\"p\">[[</span><span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n</pre>\n<p>rands(N) Create QUBO with random number</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wq</span><span class=\"o\">.</span><span class=\"n\">rands</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"c1\">#=&gt;</span>\n<span class=\"p\">[[</span><span class=\"mf\">0.89903411</span> <span class=\"mf\">0.68839641</span><span class=\"p\">]</span>\n <span class=\"p\">[</span><span class=\"mf\">0.</span>         <span class=\"mf\">0.28554602</span><span class=\"p\">]]</span>\n</pre>\n</div>\n</div>\n<div id=\"document\">\n<h3>Document</h3>\n<p><a href=\"https://blueqat.readthedocs.io/en/latest/\" rel=\"nofollow\">https://blueqat.readthedocs.io/en/latest/</a></p>\n</div>\n<div id=\"author\">\n<h3>Author</h3>\n<p>Takumi Kato (MDR), Yuichiro Minato (MDR), Yuma Murata (D Slit Technologies), Satoshi Takezawa (TerraSky)</p>\n</div>\n<div id=\"disclaimer\">\n<h3>Disclaimer</h3>\n<p>Copyright 2019 The Blueqat Developers.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6530020, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2715fdfa6f93591d64d2ded0a23795b0", "sha256": "a274e922ea6fc3767fbc53128812ef279219f1a6c895a0884d30b712b399ee77"}, "downloads": -1, "filename": "blueqat-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2715fdfa6f93591d64d2ded0a23795b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1771, "upload_time": "2018-08-02T00:46:54", "upload_time_iso_8601": "2018-08-02T00:46:54.479650Z", "url": "https://files.pythonhosted.org/packages/1f/50/11fe9d90b65e4bc2d9e11314f657246cae2eda363e0447951c4c051c05fb/blueqat-0.0.1.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "9f8f55495b65c7196271fcc437d4148c", "sha256": "afa104c9d450536d502e31db3b957497dfdeee6745305183a416b33eff98f8c9"}, "downloads": -1, "filename": "blueqat-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9f8f55495b65c7196271fcc437d4148c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8042, "upload_time": "2018-09-11T11:25:02", "upload_time_iso_8601": "2018-09-11T11:25:02.556353Z", "url": "https://files.pythonhosted.org/packages/e3/5c/f20242446eb9b0e742e61f0cc10cb11857874bcbdd5ed6e6967660bba00c/blueqat-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba552041c62b4de0cabc54846771be6b", "sha256": "a8313d71cf5bb8398a64db8b3e6554727871198d005cee4c2cc695a4de123bcd"}, "downloads": -1, "filename": "blueqat-0.1.tar.gz", "has_sig": false, "md5_digest": "ba552041c62b4de0cabc54846771be6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10570, "upload_time": "2018-09-04T22:15:03", "upload_time_iso_8601": "2018-09-04T22:15:03.466929Z", "url": "https://files.pythonhosted.org/packages/02/57/7662e0d0f37f503008f3f657c37e420180b18d808ccb00b25357fe9c2c0b/blueqat-0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6d70adfe1ab8333c1daea055113e6585", "sha256": "9170ab84d1998231f2dde5667dbfefd68b841a81d11feb3a6417154e39033ca8"}, "downloads": -1, "filename": "blueqat-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6d70adfe1ab8333c1daea055113e6585", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8398, "upload_time": "2018-09-07T12:20:15", "upload_time_iso_8601": "2018-09-07T12:20:15.087957Z", "url": "https://files.pythonhosted.org/packages/69/85/fa9f750862ec56a140666f26c58a53dc6c4784c028fdfe6f8ee10d9955c8/blueqat-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6d8578286ab89e9b541bfd723c23b551", "sha256": "900f5fbc3a2fc39fadab5b67655ea4c997b24b465a3d7ca68570d9094a47de1b"}, "downloads": -1, "filename": "blueqat-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6d8578286ab89e9b541bfd723c23b551", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10667, "upload_time": "2018-09-11T11:25:04", "upload_time_iso_8601": "2018-09-11T11:25:04.483105Z", "url": "https://files.pythonhosted.org/packages/7c/3a/db5c14f464b1aa72ae4a3c67ccae0eeac0a102cd2a98c2b5a501fd7e601a/blueqat-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65c023a03a1493dfbb04ef7096040a9d", "sha256": "fe11623dd8aa27054813c244776e9b0e40508ce62800c309f2c0899e499df322"}, "downloads": -1, "filename": "blueqat-0.1.3.tar.gz", "has_sig": false, "md5_digest": "65c023a03a1493dfbb04ef7096040a9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9546, "upload_time": "2018-09-11T11:25:18", "upload_time_iso_8601": "2018-09-11T11:25:18.750072Z", "url": "https://files.pythonhosted.org/packages/1b/2d/5574164708c8d59097f81ecabbcb510881a59850828c694d44699deee452/blueqat-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "446e35305a2e5913407f1ce5ae7b7a7a", "sha256": "2950254053ac74e4b3db1a5e7907171f09c7d8493c5c9ef8c74cf81b6beff573"}, "downloads": -1, "filename": "blueqat-0.1.4.tar.gz", "has_sig": false, "md5_digest": "446e35305a2e5913407f1ce5ae7b7a7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9562, "upload_time": "2018-09-19T14:18:56", "upload_time_iso_8601": "2018-09-19T14:18:56.093104Z", "url": "https://files.pythonhosted.org/packages/0c/9e/fb2d8bca8b945b3958750ddfdb6ac76702220530cd5df237ee5b9f368406/blueqat-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1f6a7d0511a532b102875fb4d1c57fb5", "sha256": "c209d69e12ffdabb20d68775c38eb601859a67355527603cf73be3890a513230"}, "downloads": -1, "filename": "blueqat-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1f6a7d0511a532b102875fb4d1c57fb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9836, "upload_time": "2018-09-28T00:34:41", "upload_time_iso_8601": "2018-09-28T00:34:41.201066Z", "url": "https://files.pythonhosted.org/packages/1a/40/b0d4b8e4d1c2583d464c794ce1548ed40f3aa14bd49b55ea3d42feccadc0/blueqat-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "cf8f82ca543eb40a214d8f2dddd0e4a0", "sha256": "dde022b4cdfaa2c23bef764872ad676741b27d1cf869b9594d01e17c87130405"}, "downloads": -1, "filename": "blueqat-0.1.6.tar.gz", "has_sig": false, "md5_digest": "cf8f82ca543eb40a214d8f2dddd0e4a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10185, "upload_time": "2018-10-02T23:42:37", "upload_time_iso_8601": "2018-10-02T23:42:37.790323Z", "url": "https://files.pythonhosted.org/packages/e9/81/9fb77886eedd0d1b578570142624f1806673dc0957adfb5d3dc69a1e4b81/blueqat-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "a1e3b19bb23ee1c176f5c2efe3e2de4e", "sha256": "5a230466c2d769b12c7031dea985b69c9c4cadece55074d236fc151c82ca17d3"}, "downloads": -1, "filename": "blueqat-0.1.7.tar.gz", "has_sig": false, "md5_digest": "a1e3b19bb23ee1c176f5c2efe3e2de4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10317, "upload_time": "2018-10-04T10:35:22", "upload_time_iso_8601": "2018-10-04T10:35:22.716061Z", "url": "https://files.pythonhosted.org/packages/6b/41/13d8ac7f829790198e9a4e982d866ec966391f4a282190636b651be873cc/blueqat-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "9ce4f3cf5bee29922ef92f17739ecf09", "sha256": "49f743f1a5732bb17355a6037378d575eb0e19e41d9e8780c4672b4d571baedd"}, "downloads": -1, "filename": "blueqat-0.1.8.tar.gz", "has_sig": false, "md5_digest": "9ce4f3cf5bee29922ef92f17739ecf09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11426, "upload_time": "2018-10-08T01:32:44", "upload_time_iso_8601": "2018-10-08T01:32:44.266356Z", "url": "https://files.pythonhosted.org/packages/99/3f/c76b12d646a449a46a17bf8f1fd7df2fd8d04e0fe696a4059504233a84fb/blueqat-0.1.8.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "525825f3813bb29b0156350f6af43354", "sha256": "84947d14a19dde986aaa21f5bd828576992a61652dda622e9cc6b08a8e52894c"}, "downloads": -1, "filename": "blueqat-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "525825f3813bb29b0156350f6af43354", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16738, "upload_time": "2018-10-28T13:00:58", "upload_time_iso_8601": "2018-10-28T13:00:58.512888Z", "url": "https://files.pythonhosted.org/packages/df/a9/2802a8a7916042994fea76fed788008cbd925d0bc103b7d4debfc5f9efc9/blueqat-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8ad658cff738954ef730a8d1080edec", "sha256": "fa0a8c36f8c00938530b248bceea61a6be02d549e144fa9a712c67a9e7fb4178"}, "downloads": -1, "filename": "blueqat-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d8ad658cff738954ef730a8d1080edec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12853, "upload_time": "2018-10-28T13:01:00", "upload_time_iso_8601": "2018-10-28T13:01:00.098547Z", "url": "https://files.pythonhosted.org/packages/dc/d3/efd6e5d0be65995bd264704034ed534ec2d6d57a2dea5af0987b051c08d6/blueqat-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "8e42203f5aeb79a67f48e75f237fc1a7", "sha256": "a1a3ebf2fd62962fbf87afc80db156447ff8a870a27245da7de83ac4ac40e8a8"}, "downloads": -1, "filename": "blueqat-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8e42203f5aeb79a67f48e75f237fc1a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16632, "upload_time": "2018-11-22T02:21:51", "upload_time_iso_8601": "2018-11-22T02:21:51.145213Z", "url": "https://files.pythonhosted.org/packages/73/4a/51a70ae9da7618e53ec3ebb3fec59992fa7436eb8e4f1d1e54f1bb4f614d/blueqat-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b93734290acbb6d60f2faf0fba535e6", "sha256": "e3898334c07f27805c6e12e9279e94d9ef8e7559389e4de8cd74bcce2704e256"}, "downloads": -1, "filename": "blueqat-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0b93734290acbb6d60f2faf0fba535e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12607, "upload_time": "2018-11-22T02:21:53", "upload_time_iso_8601": "2018-11-22T02:21:53.152870Z", "url": "https://files.pythonhosted.org/packages/7b/2c/fd383464978fc7b2a42277c0c27b901d3fd6472a5ba2543d1e5fa3d28784/blueqat-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "00ab7fb36ee05232e5330e96604732f0", "sha256": "7b7414a5c05851b47921b92a4fd85caca3d83c5599a89514c32bc663b2b4ce3e"}, "downloads": -1, "filename": "blueqat-0.3.0.tar.gz", "has_sig": false, "md5_digest": "00ab7fb36ee05232e5330e96604732f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13089, "upload_time": "2018-12-02T04:26:31", "upload_time_iso_8601": "2018-12-02T04:26:31.097700Z", "url": "https://files.pythonhosted.org/packages/a8/c0/d3c90ac211acee519162fae17b9bf7763d1d5770e020f6251dd05156a93e/blueqat-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "58886304494dc96ded43c731a45ba09f", "sha256": "7ee67d73b8a07b5e66b6edd95ee3abff2593051b2c295744bd068d5a9c9c08a1"}, "downloads": -1, "filename": "blueqat-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "58886304494dc96ded43c731a45ba09f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23327, "upload_time": "2018-12-04T04:10:06", "upload_time_iso_8601": "2018-12-04T04:10:06.988758Z", "url": "https://files.pythonhosted.org/packages/c5/6a/6853e8e6fb54e4fd34cccbfae3773b4e23163f69efae116bc07a511dab96/blueqat-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b5b6cc4b9442d43cf29bc486bcd2d77", "sha256": "ff706d64350b6b643adaabba5d09a07b4ca85ad1428f6bade962bf7e562904e6"}, "downloads": -1, "filename": "blueqat-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1b5b6cc4b9442d43cf29bc486bcd2d77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17195, "upload_time": "2018-12-04T04:10:09", "upload_time_iso_8601": "2018-12-04T04:10:09.444096Z", "url": "https://files.pythonhosted.org/packages/c6/a4/b81c53cd8c3497a82f92c944ea84bdde9849b13cb593d848d735ab9aece1/blueqat-0.3.1.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "2762a2f91491d4dab557e55951eec38f", "sha256": "9c42c6c1f64ea4fb13a87ecab49a0588ffef3e2fbeed66f8ba84e0e41b7a2333"}, "downloads": -1, "filename": "blueqat-0.3.10-py3-none-any.whl", "has_sig": false, "md5_digest": "2762a2f91491d4dab557e55951eec38f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46550, "upload_time": "2019-09-19T12:11:32", "upload_time_iso_8601": "2019-09-19T12:11:32.146778Z", "url": "https://files.pythonhosted.org/packages/bb/86/1b72a7cbe500b861d63e84cc6383fbf3730f08ae69fcd85146ae8e3b8873/blueqat-0.3.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1df24f59f81aaea825db1229efd9a052", "sha256": "ebd78ae5f6a58b47d15f9ee02cf322157945a6dfbf9c873383a4620b252f0e6d"}, "downloads": -1, "filename": "blueqat-0.3.10.tar.gz", "has_sig": false, "md5_digest": "1df24f59f81aaea825db1229efd9a052", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32336, "upload_time": "2019-09-19T12:11:35", "upload_time_iso_8601": "2019-09-19T12:11:35.158781Z", "url": "https://files.pythonhosted.org/packages/23/ca/fb45757c4633fa70759e3062c38ac8726302e4d76079ad1ec758b06c1f6f/blueqat-0.3.10.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "879fc25f35ae68143b9d33ade0e31961", "sha256": "89c38278ae72eab6a74e4b5adb26b3e3d4b8fef7e0021e12a63a0c7477de0261"}, "downloads": -1, "filename": "blueqat-0.3.11-py3-none-any.whl", "has_sig": false, "md5_digest": "879fc25f35ae68143b9d33ade0e31961", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49378, "upload_time": "2020-01-14T06:12:30", "upload_time_iso_8601": "2020-01-14T06:12:30.321491Z", "url": "https://files.pythonhosted.org/packages/50/16/54ff432eaa48042156d238c2c2e69a045e4b0f7a65881e4864dde7f984e3/blueqat-0.3.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eaacfe926ec2edd2730712ed55d15b5", "sha256": "a9733108a559d112c37691efe3ac25250920320743c6d930ff6fab471a5ae997"}, "downloads": -1, "filename": "blueqat-0.3.11.tar.gz", "has_sig": false, "md5_digest": "1eaacfe926ec2edd2730712ed55d15b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36012, "upload_time": "2020-01-14T06:12:33", "upload_time_iso_8601": "2020-01-14T06:12:33.383524Z", "url": "https://files.pythonhosted.org/packages/af/9a/bd39dd91656cc169b4909d4908e887aceb33a103a8ad0d9c173a80a9326f/blueqat-0.3.11.tar.gz", "yanked": false}], "0.3.12": [{"comment_text": "", "digests": {"md5": "3b66b91f751d4638fc01b6dc56bef77c", "sha256": "a673df3e69bb9c609d050267afe9222e621d7d635b77ec051626b81952320987"}, "downloads": -1, "filename": "blueqat-0.3.12-py3-none-any.whl", "has_sig": false, "md5_digest": "3b66b91f751d4638fc01b6dc56bef77c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48278, "upload_time": "2020-01-20T12:33:37", "upload_time_iso_8601": "2020-01-20T12:33:37.546785Z", "url": "https://files.pythonhosted.org/packages/e1/72/1da318024e41ba11109345517df7a573babd9c06345539d871ed4b83a3d4/blueqat-0.3.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65a164becd0cc0f3f22d480bc766afb9", "sha256": "7a4c1c2ad1cb43ae68626b54ac0c5de8a8cf424eed2aac8cf9a6af407fbacdb4"}, "downloads": -1, "filename": "blueqat-0.3.12.tar.gz", "has_sig": false, "md5_digest": "65a164becd0cc0f3f22d480bc766afb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36440, "upload_time": "2020-01-20T12:33:40", "upload_time_iso_8601": "2020-01-20T12:33:40.262807Z", "url": "https://files.pythonhosted.org/packages/de/b0/db810989c942c177d1032c0909e329ce76a35b3d6610ce5071406a34c6bf/blueqat-0.3.12.tar.gz", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "55053c1bf6482c556040a689a0e787b9", "sha256": "ff1ed26a306b679c2a95f87c59c3aa8bd99e567b0ae26c1e8cd5d4420d29b282"}, "downloads": -1, "filename": "blueqat-0.3.13-py3-none-any.whl", "has_sig": false, "md5_digest": "55053c1bf6482c556040a689a0e787b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50780, "upload_time": "2020-01-28T03:03:39", "upload_time_iso_8601": "2020-01-28T03:03:39.229364Z", "url": "https://files.pythonhosted.org/packages/f6/73/20f9cff48caee1f69190f2e1ea93c4d7d0a745fc48defb5d3072d8337583/blueqat-0.3.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df6ce28cfa166d5f341f4b42329dd467", "sha256": "57470db23b6e59b14fa98c449658a5c026cc12e0d190d944f3a37a587119c8fd"}, "downloads": -1, "filename": "blueqat-0.3.13.tar.gz", "has_sig": false, "md5_digest": "df6ce28cfa166d5f341f4b42329dd467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36437, "upload_time": "2020-01-28T03:03:42", "upload_time_iso_8601": "2020-01-28T03:03:42.189852Z", "url": "https://files.pythonhosted.org/packages/68/6d/fb51193a62e6280074c4c2897a2ea9ad6cf97b4013bd4a40af98535aa84f/blueqat-0.3.13.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "dc2c10219aea36b4b38f9514cdfd4b3e", "sha256": "41ceaaf8215a34431a50c6cf9114355ddbbb6fc392e79d242004fc6b38202bdd"}, "downloads": -1, "filename": "blueqat-0.3.2.tar.gz", "has_sig": false, "md5_digest": "dc2c10219aea36b4b38f9514cdfd4b3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20041, "upload_time": "2019-01-17T13:38:49", "upload_time_iso_8601": "2019-01-17T13:38:49.896587Z", "url": "https://files.pythonhosted.org/packages/9d/76/81e3a505ba8dcac97e02ee8b48cd64b5f73be5efcb778a9c76491bc9798c/blueqat-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "f35681f3b8d121e681855d9152608f21", "sha256": "b28c96212ff09bbe63459b69b024d0d944da0125441c55be634e447b954d97ba"}, "downloads": -1, "filename": "blueqat-0.3.3.tar.gz", "has_sig": false, "md5_digest": "f35681f3b8d121e681855d9152608f21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20307, "upload_time": "2019-01-19T10:47:40", "upload_time_iso_8601": "2019-01-19T10:47:40.850839Z", "url": "https://files.pythonhosted.org/packages/d1/30/d951c9f4ef590b5b0bcc2af2e7f6f63091c204951316784cabc078cb0fc8/blueqat-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "99aba546653b1f1d735b37cfad304784", "sha256": "e23afca9391bfb09118eb62786ea2b365922c1d7a58464a4435780e55fd17ea9"}, "downloads": -1, "filename": "blueqat-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "99aba546653b1f1d735b37cfad304784", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34008, "upload_time": "2019-01-28T01:46:52", "upload_time_iso_8601": "2019-01-28T01:46:52.578684Z", "url": "https://files.pythonhosted.org/packages/ce/4a/682acae1779187afe1907332ee6406c7379d6f268372ec7594b440a9cf82/blueqat-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4c6a629ce0b0b59c725102116f3f849", "sha256": "7b66a37f206eda4668f448b34d8b751d6caf57b3c26e62d2b6758716263b93e7"}, "downloads": -1, "filename": "blueqat-0.3.4.tar.gz", "has_sig": false, "md5_digest": "a4c6a629ce0b0b59c725102116f3f849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20338, "upload_time": "2019-01-20T05:34:50", "upload_time_iso_8601": "2019-01-20T05:34:50.632258Z", "url": "https://files.pythonhosted.org/packages/0d/78/07df822b0542ab4922a7419c2084c3b50f1e3bf42dad027fa30af3e3c192/blueqat-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "02cfc6c3975275c40509e9a592d61aab", "sha256": "622fbe3ad9583799e036a0349200715f9c6fc5729122ecd6eada2ba202a4eabb"}, "downloads": -1, "filename": "blueqat-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "02cfc6c3975275c40509e9a592d61aab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34009, "upload_time": "2019-01-28T01:48:54", "upload_time_iso_8601": "2019-01-28T01:48:54.699739Z", "url": "https://files.pythonhosted.org/packages/e7/b4/45ff17baafd9ff909dd44749c28d735fcb25ee727da37bab8429b80826ec/blueqat-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce7019ee4ee07624bc1a60c01078ac0a", "sha256": "0436c32086b4cf65e430f1cdc28e4d4cf5b5ad5d66110a37defd858934bf5968"}, "downloads": -1, "filename": "blueqat-0.3.5.tar.gz", "has_sig": false, "md5_digest": "ce7019ee4ee07624bc1a60c01078ac0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26494, "upload_time": "2019-01-28T01:48:56", "upload_time_iso_8601": "2019-01-28T01:48:56.470458Z", "url": "https://files.pythonhosted.org/packages/e0/9b/75c63a0b30ae7e3735a669f43fedf1e5bf03e92c5f45ec6851b12492c1e9/blueqat-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "115508308ea1583a7311240fae03ef54", "sha256": "528883cdb59df30a5d4b517636b334dd9751669ee04fba7ee53c4e6fb503afc0"}, "downloads": -1, "filename": "blueqat-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "115508308ea1583a7311240fae03ef54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34007, "upload_time": "2019-01-31T04:56:50", "upload_time_iso_8601": "2019-01-31T04:56:50.353069Z", "url": "https://files.pythonhosted.org/packages/53/06/57af3d1de91886ee9e6c183c6e32d67ecedccbe741c17f394c2f6c197e47/blueqat-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc6579888bf2532186679fab57447dd0", "sha256": "41fc6c3b63689dd58883d2d11279bc5cd72facef73e0486dd9579bf54fba6067"}, "downloads": -1, "filename": "blueqat-0.3.6.tar.gz", "has_sig": false, "md5_digest": "cc6579888bf2532186679fab57447dd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26503, "upload_time": "2019-01-31T04:56:52", "upload_time_iso_8601": "2019-01-31T04:56:52.367389Z", "url": "https://files.pythonhosted.org/packages/82/1f/e4d38d0dd5d86d205d760d28b06de0042fd02b33dfceccb69c00f2312df5/blueqat-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "42ff7a7d51b82072ac787f47c4d713bb", "sha256": "7baa78102cf8446878469365027b8af56fc31ef3edc4c9372b10379403609bec"}, "downloads": -1, "filename": "blueqat-0.3.7-py3-none-any.whl", "has_sig": false, "md5_digest": "42ff7a7d51b82072ac787f47c4d713bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34883, "upload_time": "2019-03-25T10:10:41", "upload_time_iso_8601": "2019-03-25T10:10:41.128798Z", "url": "https://files.pythonhosted.org/packages/e2/0a/01812c846251da08f78b3f730b60c4061af8543aa6b79ce46e9345a02475/blueqat-0.3.7-py3-none-any.whl", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "4a58280ed0da73d192752e72353080f7", "sha256": "75a1eff3387e998c8f1d0ffd51a2d37ed8043b77de2a69c210cef1efa2560e3a"}, "downloads": -1, "filename": "blueqat-0.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "4a58280ed0da73d192752e72353080f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46376, "upload_time": "2019-07-29T06:17:26", "upload_time_iso_8601": "2019-07-29T06:17:26.557456Z", "url": "https://files.pythonhosted.org/packages/55/94/0e80926933ec8d69a5c98454b59db4c772a7d7d1699f574a55aa53271941/blueqat-0.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d9c7124a8569744ec59b7d3a339e358", "sha256": "cb1f2a6ab785ea8b1f39469dba434e14238da1937933f82cb443006654dacf82"}, "downloads": -1, "filename": "blueqat-0.3.8.tar.gz", "has_sig": false, "md5_digest": "1d9c7124a8569744ec59b7d3a339e358", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32120, "upload_time": "2019-07-29T06:17:28", "upload_time_iso_8601": "2019-07-29T06:17:28.742780Z", "url": "https://files.pythonhosted.org/packages/95/ba/728fcbc237f90fd850d2caf142c1d7f568144dfb5746eb6b3c8075af2b7b/blueqat-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "2cec6466652d322ea2c014eb6b54ee90", "sha256": "f6b2ee7dcf32ea9cc6313eb8a3186c0f5b4e112a1d7359599129ac99f7e7ccab"}, "downloads": -1, "filename": "blueqat-0.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2cec6466652d322ea2c014eb6b54ee90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46518, "upload_time": "2019-08-02T06:20:20", "upload_time_iso_8601": "2019-08-02T06:20:20.723661Z", "url": "https://files.pythonhosted.org/packages/11/0d/7b44a4a2dd6556418bf6a3053615eb2d58662723ec774f853de0eeaaa3dd/blueqat-0.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f81e9607b0c579edd3322ac962151193", "sha256": "f7b7f8d519b6f0050aeb5c5603d21d973017c751283192b3039504aeef3ce0ce"}, "downloads": -1, "filename": "blueqat-0.3.9.tar.gz", "has_sig": false, "md5_digest": "f81e9607b0c579edd3322ac962151193", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32334, "upload_time": "2019-08-02T06:20:22", "upload_time_iso_8601": "2019-08-02T06:20:22.766030Z", "url": "https://files.pythonhosted.org/packages/33/bf/79906dcb148e2ac70dccc87ab20f14e6a3969639943f9e12f711928186fd/blueqat-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "55053c1bf6482c556040a689a0e787b9", "sha256": "ff1ed26a306b679c2a95f87c59c3aa8bd99e567b0ae26c1e8cd5d4420d29b282"}, "downloads": -1, "filename": "blueqat-0.3.13-py3-none-any.whl", "has_sig": false, "md5_digest": "55053c1bf6482c556040a689a0e787b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50780, "upload_time": "2020-01-28T03:03:39", "upload_time_iso_8601": "2020-01-28T03:03:39.229364Z", "url": "https://files.pythonhosted.org/packages/f6/73/20f9cff48caee1f69190f2e1ea93c4d7d0a745fc48defb5d3072d8337583/blueqat-0.3.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df6ce28cfa166d5f341f4b42329dd467", "sha256": "57470db23b6e59b14fa98c449658a5c026cc12e0d190d944f3a37a587119c8fd"}, "downloads": -1, "filename": "blueqat-0.3.13.tar.gz", "has_sig": false, "md5_digest": "df6ce28cfa166d5f341f4b42329dd467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36437, "upload_time": "2020-01-28T03:03:42", "upload_time_iso_8601": "2020-01-28T03:03:42.189852Z", "url": "https://files.pythonhosted.org/packages/68/6d/fb51193a62e6280074c4c2897a2ea9ad6cf97b4013bd4a40af98535aa84f/blueqat-0.3.13.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:58 2020"}