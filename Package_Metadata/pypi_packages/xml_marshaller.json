{"info": {"author": "Nicolas Delaby", "author_email": "nicolas@nexedi.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Python License (CNRI Python License)", "Operating System :: OS Independent", "Topic :: Text Processing :: Markup :: XML"], "description": "Introduction\n============\n\nThis module allows one to marshal simple Python data types into a\ncustom XML format.  The Marshaller and Unmarshaller classes can be\nsubclassed in order to implement marshalling into a different XML DTD.\nOriginal Authors are XML-SIG (xml-sig@python.org).\n\nFully compatible with PyXML implementation, enables namespace support\nfor XML Input/Output.\n\nImplemented with lxml\n\nInstallation\n============\n\npython setup.py install\n\n\nTesting\n=======\n\npython setup.py test\n\nUsage\n=====\n\nFor simple serialisation and unserialisation::\n\n\n  >>> from xml_marshaller import xml_marshaller\n  >>> xml_marshaller.dumps(['item1', {'key1': 1, 'key2': 'string'}])\n  '<marshal><list id=\"i2\"><string>item1</string><dictionary id=\"i3\"><string>key1</string><int>1</int><string>key2</string><string>string</string></dictionary></list></marshal>'\n  >>> xml_marshaller.loads(xml_marshaller.dumps(['item1', {'key1': 1, 'key2': 'string'}]))\n  ['item1', {'key2': 'string', 'key1': 1}]\n\nCan works with file like objects::\n\n\n  >>> from xml_marshaller import xml_marshaller\n  >>> from StringIO import StringIO\n  >>> file_like_object = StringIO()\n  >>> xml_marshaller.dump('Hello World !', file_like_object)\n  >>> file_like_object.seek(0)\n  >>> file_like_object.read()\n  '<marshal><string>Hello World !</string></marshal>'\n  >>> file_like_object.seek(0)\n  >>> xml_marshaller.load(file_like_object)\n  'Hello World !'\n\nxml_marshaller can also output xml with qualified names::\n\n\n  >>> from xml_marshaller import xml_marshaller\n  >>> xml_marshaller.dumps_ns('Hello World !')\n  '<marshal:marshal xmlns:marshal=\"http://www.erp5.org/namespaces/marshaller\"><marshal:string>Hello World !</marshal:string></marshal:marshal>'\n\n\nYou can also use your own URI::\n\n  >>> from xml_marshaller.xml_marshaller import Marshaller\n  >>> marshaller = Marshaller(namespace_uri='http://my-custom-namespace-uri/namespace')\n  >>> marshaller.dumps('Hello World !')\n  '<marshal:marshal xmlns:marshal=\"http://my-custom-namespace-uri/namespace\"><marshal:string>Hello World !</marshal:string></marshal:marshal>'\n\n\nHistory\n=======\n\n1.0.2 (2019-02-25)\n------------------\n\n- Python 2 fixups.\n\n1.0.1 (2018-11-12)\n------------------\n\n- Fix changelog.\n\n1.0 (2018-11-12)\n----------------\n\n- Stop distinguish unicode and bytes and always return 'str'\n\n0.10 (2018-09-12)\n-----------------\n\n- Add support for Python 3\n\n0.9.7 (2010-10-30)\n------------------\n\n- Enhance egg folder structure\n  [nicolas Delaby]\n- Improve tests\n  [nicolas Delaby]\n- add XSD Schema\n  [nicolas Delaby]\n\n0.9.6 (2010-10-12)\n------------------\n\n- [fix] Support boolean transformation\n  [Nicolas Delaby]\n\n0.9.5 (2010-09-01)\n------------------\n\n- [fix] Formatting of documentation\n  [Lukasz Nowak]\n\n0.9.4 (2010-09-01)\n------------------\n\n- [fix] Instances are now correctly unmarshalled.\n  [Cedric de Saint Martin]\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.python.org/community/sigs/current/xml-sig/", "keywords": "XML marshaller", "license": "Python License (CNRI Python License)", "maintainer": "", "maintainer_email": "", "name": "xml_marshaller", "package_url": "https://pypi.org/project/xml_marshaller/", "platform": "", "project_url": "https://pypi.org/project/xml_marshaller/", "project_urls": {"Homepage": "http://www.python.org/community/sigs/current/xml-sig/"}, "release_url": "https://pypi.org/project/xml_marshaller/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Converting Python objects to XML and back again.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This module allows one to marshal simple Python data types into a\ncustom XML format.  The Marshaller and Unmarshaller classes can be\nsubclassed in order to implement marshalling into a different XML DTD.\nOriginal Authors are XML-SIG (<a href=\"mailto:xml-sig%40python.org\">xml-sig<span>@</span>python<span>.</span>org</a>).</p>\n<p>Fully compatible with PyXML implementation, enables namespace support\nfor XML Input/Output.</p>\n<p>Implemented with lxml</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>python setup.py install</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>python setup.py test</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For simple serialisation and unserialisation:</p>\n<pre>&gt;&gt;&gt; from xml_marshaller import xml_marshaller\n&gt;&gt;&gt; xml_marshaller.dumps(['item1', {'key1': 1, 'key2': 'string'}])\n'&lt;marshal&gt;&lt;list id=\"i2\"&gt;&lt;string&gt;item1&lt;/string&gt;&lt;dictionary id=\"i3\"&gt;&lt;string&gt;key1&lt;/string&gt;&lt;int&gt;1&lt;/int&gt;&lt;string&gt;key2&lt;/string&gt;&lt;string&gt;string&lt;/string&gt;&lt;/dictionary&gt;&lt;/list&gt;&lt;/marshal&gt;'\n&gt;&gt;&gt; xml_marshaller.loads(xml_marshaller.dumps(['item1', {'key1': 1, 'key2': 'string'}]))\n['item1', {'key2': 'string', 'key1': 1}]\n</pre>\n<p>Can works with file like objects:</p>\n<pre>&gt;&gt;&gt; from xml_marshaller import xml_marshaller\n&gt;&gt;&gt; from StringIO import StringIO\n&gt;&gt;&gt; file_like_object = StringIO()\n&gt;&gt;&gt; xml_marshaller.dump('Hello World !', file_like_object)\n&gt;&gt;&gt; file_like_object.seek(0)\n&gt;&gt;&gt; file_like_object.read()\n'&lt;marshal&gt;&lt;string&gt;Hello World !&lt;/string&gt;&lt;/marshal&gt;'\n&gt;&gt;&gt; file_like_object.seek(0)\n&gt;&gt;&gt; xml_marshaller.load(file_like_object)\n'Hello World !'\n</pre>\n<p>xml_marshaller can also output xml with qualified names:</p>\n<pre>&gt;&gt;&gt; from xml_marshaller import xml_marshaller\n&gt;&gt;&gt; xml_marshaller.dumps_ns('Hello World !')\n'&lt;marshal:marshal xmlns:marshal=\"http://www.erp5.org/namespaces/marshaller\"&gt;&lt;marshal:string&gt;Hello World !&lt;/marshal:string&gt;&lt;/marshal:marshal&gt;'\n</pre>\n<p>You can also use your own URI:</p>\n<pre>&gt;&gt;&gt; from xml_marshaller.xml_marshaller import Marshaller\n&gt;&gt;&gt; marshaller = Marshaller(namespace_uri='http://my-custom-namespace-uri/namespace')\n&gt;&gt;&gt; marshaller.dumps('Hello World !')\n'&lt;marshal:marshal xmlns:marshal=\"http://my-custom-namespace-uri/namespace\"&gt;&lt;marshal:string&gt;Hello World !&lt;/marshal:string&gt;&lt;/marshal:marshal&gt;'\n</pre>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.0.2 (2019-02-25)</h3>\n<ul>\n<li>Python 2 fixups.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.1 (2018-11-12)</h3>\n<ul>\n<li>Fix changelog.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0 (2018-11-12)</h3>\n<ul>\n<li>Stop distinguish unicode and bytes and always return \u2018str\u2019</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.10 (2018-09-12)</h3>\n<ul>\n<li>Add support for Python 3</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9.7 (2010-10-30)</h3>\n<ul>\n<li>Enhance egg folder structure\n[nicolas Delaby]</li>\n<li>Improve tests\n[nicolas Delaby]</li>\n<li>add XSD Schema\n[nicolas Delaby]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.9.6 (2010-10-12)</h3>\n<ul>\n<li>[fix] Support boolean transformation\n[Nicolas Delaby]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.9.5 (2010-09-01)</h3>\n<ul>\n<li>[fix] Formatting of documentation\n[Lukasz Nowak]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9.4 (2010-09-01)</h3>\n<ul>\n<li>[fix] Instances are now correctly unmarshalled.\n[Cedric de Saint Martin]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4863942, "releases": {"0.9": [], "0.9.1": [], "0.9.2": [{"comment_text": "", "digests": {"md5": "5cf106818c527830d4e2e252d0bd07e9", "sha256": "647c16edd0599e4aeb46061c5b599f61f9d9e43b2ad548cb4aa2aa4f0d9fe56e"}, "downloads": -1, "filename": "xml_marshaller-0.9.2.tar.gz", "has_sig": false, "md5_digest": "5cf106818c527830d4e2e252d0bd07e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7562, "upload_time": "2010-07-05T13:11:43", "upload_time_iso_8601": "2010-07-05T13:11:43.395767Z", "url": "https://files.pythonhosted.org/packages/aa/a0/4a61e21ef06bc2f3df175831d0fd9659764b3c01f6480abfbae0575d15ad/xml_marshaller-0.9.2.tar.gz", "yanked": false}], "0.9.3": [], "0.9.4": [{"comment_text": "", "digests": {"md5": "7e4fcfbbf288b1a7dae2c3c4dc6d3ad1", "sha256": "1b219ef6da6bc258b6f5a8e19363fe8c999a28eb10b53b05e4097f1359bbae1f"}, "downloads": -1, "filename": "xml_marshaller-0.9.4.tar.gz", "has_sig": false, "md5_digest": "7e4fcfbbf288b1a7dae2c3c4dc6d3ad1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8097, "upload_time": "2010-09-01T07:45:30", "upload_time_iso_8601": "2010-09-01T07:45:30.129491Z", "url": "https://files.pythonhosted.org/packages/f3/05/31cc2137323f29f6e49df3b995aca7015f631b06dc7c6671d0809e31a24b/xml_marshaller-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "c5fb6cda98b82b3e03f4e583e585e858", "sha256": "0e3131c82b2a976fa8c86c66c18860a2f313ef184c4c051d9a625d64809afa11"}, "downloads": -1, "filename": "xml_marshaller-0.9.5.tar.gz", "has_sig": false, "md5_digest": "c5fb6cda98b82b3e03f4e583e585e858", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8166, "upload_time": "2010-09-01T07:50:47", "upload_time_iso_8601": "2010-09-01T07:50:47.447883Z", "url": "https://files.pythonhosted.org/packages/36/1b/c5664f4db98639b457cb919d2e46fa36f9465554dbdc0e155fd9b9859ed4/xml_marshaller-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "64306fc65571b75e8bf3b43617eef13c", "sha256": "63d043c9acf8c578c7dc8ecf26a23f9355ce11dd5621178f7501ad5c027a3b01"}, "downloads": -1, "filename": "xml_marshaller-0.9.6.tar.gz", "has_sig": false, "md5_digest": "64306fc65571b75e8bf3b43617eef13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8488, "upload_time": "2010-10-12T16:52:45", "upload_time_iso_8601": "2010-10-12T16:52:45.187103Z", "url": "https://files.pythonhosted.org/packages/e9/4c/9d44656b24613058c3eda7f3a791bf2ac746fd093b2c26bb1a9dde4a4d5b/xml_marshaller-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "de083e7b6997f899335729accd8e928c", "sha256": "c34fadb91e445d781d9483ffb07a60218ebe2d75568faee30a472489f310b90c"}, "downloads": -1, "filename": "xml_marshaller-0.9.7.tar.gz", "has_sig": false, "md5_digest": "de083e7b6997f899335729accd8e928c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11290, "upload_time": "2010-10-30T19:15:14", "upload_time_iso_8601": "2010-10-30T19:15:14.559995Z", "url": "https://files.pythonhosted.org/packages/fd/68/2334848608f731ffbb49e836a0e37e8af961dde9865142b9afa332de714e/xml_marshaller-0.9.7.tar.gz", "yanked": false}], "0.9a": [], "1.0": [{"comment_text": "", "digests": {"md5": "eebc838f1e01cd230ed6a9427817759d", "sha256": "7e3769b5b68b5156486a7a4f25fefdf63c287c734fc158ff9150f37589984ad9"}, "downloads": -1, "filename": "xml_marshaller-1.0.tar.gz", "has_sig": true, "md5_digest": "eebc838f1e01cd230ed6a9427817759d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10132, "upload_time": "2018-11-12T09:51:09", "upload_time_iso_8601": "2018-11-12T09:51:09.388537Z", "url": "https://files.pythonhosted.org/packages/7b/b9/042ed79ae6c7d421c4ee5259d3565a9097dcaa5338bad6070c0f593e8630/xml_marshaller-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e5a914a8ae741f74d47872e33bc7d412", "sha256": "5e6bbf83a36b34904afe52d9f615eb0ea9d40c87180987e2987c1b794531ff79"}, "downloads": -1, "filename": "xml_marshaller-1.0.1.tar.gz", "has_sig": true, "md5_digest": "e5a914a8ae741f74d47872e33bc7d412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10278, "upload_time": "2018-11-12T12:58:46", "upload_time_iso_8601": "2018-11-12T12:58:46.450096Z", "url": "https://files.pythonhosted.org/packages/4a/6f/a82827b06dcdc2cb655b46d9b4f908eca4be1d9f296da1c00e823aa72b1d/xml_marshaller-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "54a010c29d3b0e26e4b3d5ef6f5d6d5a", "sha256": "42f0402cb0c3f28e67650e59e1b7a66e169d2ba8dcc9d58a42925a4a61aaa893"}, "downloads": -1, "filename": "xml_marshaller-1.0.2.tar.gz", "has_sig": true, "md5_digest": "54a010c29d3b0e26e4b3d5ef6f5d6d5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10320, "upload_time": "2019-02-25T10:21:13", "upload_time_iso_8601": "2019-02-25T10:21:13.309276Z", "url": "https://files.pythonhosted.org/packages/ee/b8/f97f1c4a39f89bf2a3571b7c14f7b6108e7f4b2253931a1b9e09a86ecd74/xml_marshaller-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "54a010c29d3b0e26e4b3d5ef6f5d6d5a", "sha256": "42f0402cb0c3f28e67650e59e1b7a66e169d2ba8dcc9d58a42925a4a61aaa893"}, "downloads": -1, "filename": "xml_marshaller-1.0.2.tar.gz", "has_sig": true, "md5_digest": "54a010c29d3b0e26e4b3d5ef6f5d6d5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10320, "upload_time": "2019-02-25T10:21:13", "upload_time_iso_8601": "2019-02-25T10:21:13.309276Z", "url": "https://files.pythonhosted.org/packages/ee/b8/f97f1c4a39f89bf2a3571b7c14f7b6108e7f4b2253931a1b9e09a86ecd74/xml_marshaller-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:59 2020"}