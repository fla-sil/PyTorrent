{"info": {"author": "Tobias Heinke", "author_email": "tobias.heinke@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Documentation", "Topic :: Software Development", "Topic :: Software Development :: Documentation", "Topic :: Text Editors", "Topic :: Text Editors :: Documentation", "Topic :: Text Editors :: Text Processing", "Topic :: Text Processing", "Topic :: Text Processing :: Markup"], "description": "\n# Monostyle\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/monostyle.svg)](https://pypi.python.org/pypi/monostyle/)\n[![GPLv3 license](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://github.com/tobiasHeinke/monostyle/blob/master/LICENSE)\n\nMonostyle is a framework for style checking and linting covering all parts of a style guide.\n\nIts tools are applied on new or changed content\nwhich makes it fast and it allows a wider range of tools,\nbecause they can have false positives. \nFor example style guide rules that have exceptions which can't be filtered away.\n\nMonostyle is build as a framework and not as a ready-made tool\nbecause the tools require customization like markup filtering or you might not want to use Chicago style title case. \nIt includes its own RST parser and a port of the [Reflow line wrapper](https://metacpan.org/pod/Text::Reflow).\nIts utilities can also be used for text editing with scripts.\n\n\n## Setup\n\nRequirements: The SVN command line client tools need to be installed.\n\nFor the spell-checking a dictionary has to build.\nOn first run you have to confirm to start this (or also if the dictionary file is not found).\n\nThe dictionary has to be updated from time to time or after a bigger portion of content has been added\nto include the new words (of cause the whole project has to be spell-checked).\nTo do this run the `spelling` script:\n```sh\npython -m monostyle.spelling\n```\n\n## Running Monostyle\n\nMonostyle has four modes:\n\n<dl>\n  <dt>internal -i</dt>\n  <dd>To check your own changes.</dd>\n  <dt>external -e</dt>\n  <dd>\n      To check changes by others made to the repository.\n      Run this before you update your repository with SVN.\n   </dd>\n  <dt>patch -p</dt>\n  <dd>To check changes in a patch-file.</dd>\n  <dt>file -f</dt>\n  <dd>To check whole files/directories.</dd>\n  <dt>root -r</dt>\n  <dd>\n      The root is (absolute) path to the local project directory or where the patch file was created.\n      If not set the directory where Monostyle is run from is used as the root.\n  </dd>\n</dl>\n\nPost processing:\n\n<dl>\n  <dt>update -u</dt>\n  <dd>Update the local copy.</dd>\n  <dt>autofix -a</dt>\n  <dd>Apply autofixes. This also does an update if the changes are from external.</dd>\n  <dt>open -o</dt>\n  <dd>Open a file in a text editor if the report has a severity higher than specified.</dd>\n</dl>\n\nFor more info on command line arguments use the `--help` command.\nThe tools can be applied individually by executing the script files. Then the tools will loop over the whole project.\nRunning Monostyle doesn't replaces building the project with Sphinx.\nMarkup errors can lead to false negatives, so Monostyle has to be run again or\nthe section has to be checked manually.\n\n\n### Advanced\n\nYou can set a revision for internal, external and update.\nIt can be colon separated or dash separated for the \"change\" syntax.\nWhen a side is kept empty e.g. \":ARG\" it will default to BASE (your local copy) on the left and\non the right to HEAD (the latest revision in the repository).\nExternal revision uses the \"change\" syntax for single arguments \"ARG\".\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/monostyle/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tobiasHeinke/monostyle", "keywords": "linter,rst,documentation,style guide", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "monostyle", "package_url": "https://pypi.org/project/monostyle/", "platform": "any", "project_url": "https://pypi.org/project/monostyle/", "project_urls": {"Code": "https://github.com/tobiasHeinke/monostyle", "Download": "https://pypi.org/project/monostyle/", "Homepage": "https://github.com/tobiasHeinke/monostyle", "Issue tracker": "https://github.com/tobiasHeinke/monostyle/issues"}, "release_url": "https://pypi.org/project/monostyle/0.0.1rc2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A framework for style checking and linting", "version": "0.0.1rc2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Monostyle</h1>\n<p><a href=\"https://pypi.python.org/pypi/monostyle/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebc9d498a423b969cb136f9656dc47320eefbce1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6f6e6f7374796c652e737667\"></a>\n<a href=\"https://github.com/tobiasHeinke/monostyle/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GPLv3 license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a></p>\n<p>Monostyle is a framework for style checking and linting covering all parts of a style guide.</p>\n<p>Its tools are applied on new or changed content\nwhich makes it fast and it allows a wider range of tools,\nbecause they can have false positives.\nFor example style guide rules that have exceptions which can't be filtered away.</p>\n<p>Monostyle is build as a framework and not as a ready-made tool\nbecause the tools require customization like markup filtering or you might not want to use Chicago style title case.\nIt includes its own RST parser and a port of the <a href=\"https://metacpan.org/pod/Text::Reflow\" rel=\"nofollow\">Reflow line wrapper</a>.\nIts utilities can also be used for text editing with scripts.</p>\n<h2>Setup</h2>\n<p>Requirements: The SVN command line client tools need to be installed.</p>\n<p>For the spell-checking a dictionary has to build.\nOn first run you have to confirm to start this (or also if the dictionary file is not found).</p>\n<p>The dictionary has to be updated from time to time or after a bigger portion of content has been added\nto include the new words (of cause the whole project has to be spell-checked).\nTo do this run the <code>spelling</code> script:</p>\n<pre>python -m monostyle.spelling\n</pre>\n<h2>Running Monostyle</h2>\n<p>Monostyle has four modes:</p>\n<dl>\n  <dt>internal -i</dt>\n  <dd>To check your own changes.</dd>\n  <dt>external -e</dt>\n  <dd>\n      To check changes by others made to the repository.\n      Run this before you update your repository with SVN.\n   </dd>\n  <dt>patch -p</dt>\n  <dd>To check changes in a patch-file.</dd>\n  <dt>file -f</dt>\n  <dd>To check whole files/directories.</dd>\n  <dt>root -r</dt>\n  <dd>\n      The root is (absolute) path to the local project directory or where the patch file was created.\n      If not set the directory where Monostyle is run from is used as the root.\n  </dd>\n</dl>\n<p>Post processing:</p>\n<dl>\n  <dt>update -u</dt>\n  <dd>Update the local copy.</dd>\n  <dt>autofix -a</dt>\n  <dd>Apply autofixes. This also does an update if the changes are from external.</dd>\n  <dt>open -o</dt>\n  <dd>Open a file in a text editor if the report has a severity higher than specified.</dd>\n</dl>\n<p>For more info on command line arguments use the <code>--help</code> command.\nThe tools can be applied individually by executing the script files. Then the tools will loop over the whole project.\nRunning Monostyle doesn't replaces building the project with Sphinx.\nMarkup errors can lead to false negatives, so Monostyle has to be run again or\nthe section has to be checked manually.</p>\n<h3>Advanced</h3>\n<p>You can set a revision for internal, external and update.\nIt can be colon separated or dash separated for the \"change\" syntax.\nWhen a side is kept empty e.g. \":ARG\" it will default to BASE (your local copy) on the left and\non the right to HEAD (the latest revision in the repository).\nExternal revision uses the \"change\" syntax for single arguments \"ARG\".</p>\n\n          </div>"}, "last_serial": 7172017, "releases": {"0.0.1b0": [{"comment_text": "", "digests": {"md5": "088c333961dc1e67a5df685c2c54637b", "sha256": "87c7445d4b526c8926f91470889fe012f0806688abb4aaf23b62972919767138"}, "downloads": -1, "filename": "monostyle-0.0.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "088c333961dc1e67a5df685c2c54637b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15200, "upload_time": "2020-04-24T21:57:09", "upload_time_iso_8601": "2020-04-24T21:57:09.283821Z", "url": "https://files.pythonhosted.org/packages/ec/53/13adbb3de1fd981b718acd5bd703abc9be23041c18edccc5b6995f1acc05/monostyle-0.0.1b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60666bc2265271594ebd52890c3c7bc1", "sha256": "0c335fa710334239b7725c64f8203f37dc5f78c8f2bec92f27fc0e10381cffa3"}, "downloads": -1, "filename": "monostyle-0.0.1b0.tar.gz", "has_sig": false, "md5_digest": "60666bc2265271594ebd52890c3c7bc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2958, "upload_time": "2020-04-24T21:57:11", "upload_time_iso_8601": "2020-04-24T21:57:11.382483Z", "url": "https://files.pythonhosted.org/packages/77/95/814c2fa9d599b9f982e17c79c3b8384c4bce7642fb753038f354dd87a8d0/monostyle-0.0.1b0.tar.gz", "yanked": false}], "0.0.1rc1": [{"comment_text": "", "digests": {"md5": "5c0383976c0d0ada5e88d7dfb9208312", "sha256": "5177e1b9fd2429bd07d944abc9fdd06265aa535f3d7d1359f7587657b12539ab"}, "downloads": -1, "filename": "monostyle-0.0.1rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "5c0383976c0d0ada5e88d7dfb9208312", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 102029, "upload_time": "2020-05-03T20:37:59", "upload_time_iso_8601": "2020-05-03T20:37:59.112523Z", "url": "https://files.pythonhosted.org/packages/c1/55/131be2ffb5fa6baaec2c43f3486ee419d11e2c6ff5e8b1a036dab2df12b5/monostyle-0.0.1rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "852e32f1cc0aa8f1ad689e5f82cf5050", "sha256": "4b63f35617878c962e69eba1d03c91cd3442a0aa6e912e0177530f0e05c9d2ee"}, "downloads": -1, "filename": "monostyle-0.0.1rc1.tar.gz", "has_sig": false, "md5_digest": "852e32f1cc0aa8f1ad689e5f82cf5050", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 134713, "upload_time": "2020-05-03T20:38:02", "upload_time_iso_8601": "2020-05-03T20:38:02.738818Z", "url": "https://files.pythonhosted.org/packages/e1/5e/2db7a6a82918c9951b935e65d83920b4eb68e457a33d923dde79960b7cdf/monostyle-0.0.1rc1.tar.gz", "yanked": false}], "0.0.1rc2": [{"comment_text": "", "digests": {"md5": "9c3cc21e874b458dfbd5b83e4813d7d9", "sha256": "a41bde53313ce27f4bfc3bd85863cf5806ecd10371c310e9d8a41f38ad6a069d"}, "downloads": -1, "filename": "monostyle-0.0.1rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "9c3cc21e874b458dfbd5b83e4813d7d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 102454, "upload_time": "2020-05-05T13:33:35", "upload_time_iso_8601": "2020-05-05T13:33:35.759527Z", "url": "https://files.pythonhosted.org/packages/85/2f/acc598997bd274bf57ff3c47460721f8649f43d891921f05c4a3781fa49a/monostyle-0.0.1rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ac4ab0d0afe65d1c99dd6536563f76a", "sha256": "5569ff3e5dd919a634506611d9b8b1cabab4398eb8cb3a80be105c679da22df3"}, "downloads": -1, "filename": "monostyle-0.0.1rc2.tar.gz", "has_sig": false, "md5_digest": "8ac4ab0d0afe65d1c99dd6536563f76a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 89547, "upload_time": "2020-05-05T13:33:39", "upload_time_iso_8601": "2020-05-05T13:33:39.144606Z", "url": "https://files.pythonhosted.org/packages/83/9d/4e751d0d342b306c5077fc3a8296a004d04dd0fb698a934e51c06926b8ec/monostyle-0.0.1rc2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c3cc21e874b458dfbd5b83e4813d7d9", "sha256": "a41bde53313ce27f4bfc3bd85863cf5806ecd10371c310e9d8a41f38ad6a069d"}, "downloads": -1, "filename": "monostyle-0.0.1rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "9c3cc21e874b458dfbd5b83e4813d7d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 102454, "upload_time": "2020-05-05T13:33:35", "upload_time_iso_8601": "2020-05-05T13:33:35.759527Z", "url": "https://files.pythonhosted.org/packages/85/2f/acc598997bd274bf57ff3c47460721f8649f43d891921f05c4a3781fa49a/monostyle-0.0.1rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ac4ab0d0afe65d1c99dd6536563f76a", "sha256": "5569ff3e5dd919a634506611d9b8b1cabab4398eb8cb3a80be105c679da22df3"}, "downloads": -1, "filename": "monostyle-0.0.1rc2.tar.gz", "has_sig": false, "md5_digest": "8ac4ab0d0afe65d1c99dd6536563f76a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 89547, "upload_time": "2020-05-05T13:33:39", "upload_time_iso_8601": "2020-05-05T13:33:39.144606Z", "url": "https://files.pythonhosted.org/packages/83/9d/4e751d0d342b306c5077fc3a8296a004d04dd0fb698a934e51c06926b8ec/monostyle-0.0.1rc2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:06 2020"}