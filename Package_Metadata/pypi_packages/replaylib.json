{"info": {"author": "Scott Torborg, Mike Spindel", "author_email": "storborg@mit.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Programming Language :: Python", "Topic :: Internet", "Topic :: Software Development :: Testing"], "description": "==================================================================================\nreplaylib - Make better tests when using remote HTTP services\n==================================================================================\n\n:Authors:\n    Scott Torborg (storborg)\n    Mike Spindel (deactivated)\n:Version: 0.1\n\nThis (very experimental) library allows you to install replacement stubs\nfor httplib methods which record interactions with remote servers, and then\nplay them back. Because urllib depends on httplib functionality, replaylib\nwill record and play back urllib interactions as well.\n\nIt is intended to allow streamlined tests for services which interact with\nremote services: e.g. payment processors, shipping APIs, etc. To use it, just:\n\n1. Run your test suite while recording with replaylib.\n2. On subsequent runs, play back from replaylib. Tests will run faster, and\n   won't require external services.\n\nIt is fully tested, with 100% line and branch coverage, and works well with all\nAPIs we have tried it on \"in the wild\".\n\n*Note* Use at your own risk!\n\nInstallation\n============\n\nSimple as::\n\n    $ easy_install replaylib\n\nOr if you prefer, download the source and then::\n\n    $ python setup.py build\n    $ python setup.py install\n\nExample\n=======\n\n>>> import replaylib\n>>> import urllib\n\n>>> replaylib.start_record()\n# Do some stuff with urllib.\n>>> urllib.urlopen('http://www.google.com')\n>>> replaylib.stop_record('activity.pkl')\n\n>>> replaylib.start_playback('activity.pkl')\n# Won't actually make a request to google.com\n>>> urllib.urlopen('http://www.google.com')\n>>> replaylib.stop_playback()\n\nNose Plugin\n===========\n\nReplayLib also comes with a nose plugin to make recording and playing back the\ninteractions used by your test suites even simpler::\n\n    $ nosetests --replaylib-record=test.pkl\n    $ nosetests --replaylib-playback=test.pkl\n\n\nLicense\n=======\n\nReplayLib is released under the GNU General Public License (GPL). See the\nLICENSE file for full text of the license.\n\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/storborg/replaylib", "keywords": "testing web replay", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "replaylib", "package_url": "https://pypi.org/project/replaylib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/replaylib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/storborg/replaylib"}, "release_url": "https://pypi.org/project/replaylib/0.1/", "requires_dist": null, "requires_python": null, "summary": "Record and replay httplib actions for testing.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Authors:</th>\n<td>Scott Torborg (storborg)\nMike Spindel (deactivated)</td></tr>\n<tr><th>Version:</th>\n<td>0.1</td></tr>\n</tbody>\n</table>\n<p>This (very experimental) library allows you to install replacement stubs\nfor httplib methods which record interactions with remote servers, and then\nplay them back. Because urllib depends on httplib functionality, replaylib\nwill record and play back urllib interactions as well.</p>\n<p>It is intended to allow streamlined tests for services which interact with\nremote services: e.g. payment processors, shipping APIs, etc. To use it, just:</p>\n<ol>\n<li>Run your test suite while recording with replaylib.</li>\n<li>On subsequent runs, play back from replaylib. Tests will run faster, and\nwon\u2019t require external services.</li>\n</ol>\n<p>It is fully tested, with 100% line and branch coverage, and works well with all\nAPIs we have tried it on \u201cin the wild\u201d.</p>\n<p><em>Note</em> Use at your own risk!</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Simple as:</p>\n<pre>$ easy_install replaylib\n</pre>\n<p>Or if you prefer, download the source and then:</p>\n<pre>$ python setup.py build\n$ python setup.py install\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>&gt;&gt;&gt; import replaylib\n&gt;&gt;&gt; import urllib\n</pre>\n<pre>&gt;&gt;&gt; replaylib.start_record()\n# Do some stuff with urllib.\n&gt;&gt;&gt; urllib.urlopen('http://www.google.com')\n&gt;&gt;&gt; replaylib.stop_record('activity.pkl')\n</pre>\n<pre>&gt;&gt;&gt; replaylib.start_playback('activity.pkl')\n# Won't actually make a request to google.com\n&gt;&gt;&gt; urllib.urlopen('http://www.google.com')\n&gt;&gt;&gt; replaylib.stop_playback()\n</pre>\n</div>\n<div id=\"nose-plugin\">\n<h2>Nose Plugin</h2>\n<p>ReplayLib also comes with a nose plugin to make recording and playing back the\ninteractions used by your test suites even simpler:</p>\n<pre>$ nosetests --replaylib-record=test.pkl\n$ nosetests --replaylib-playback=test.pkl\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>ReplayLib is released under the GNU General Public License (GPL). See the\nLICENSE file for full text of the license.</p>\n</div>\n\n          </div>"}, "last_serial": 798778, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "40f8be15e588c238c72f143320d68611", "sha256": "0664b00a84a18af14fa00698209afe68d818c3a0571f84d79795204913981c4f"}, "downloads": -1, "filename": "replaylib-0.1-py2.6.egg", "has_sig": false, "md5_digest": "40f8be15e588c238c72f143320d68611", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21619, "upload_time": "2010-06-22T05:49:37", "upload_time_iso_8601": "2010-06-22T05:49:37.689712Z", "url": "https://files.pythonhosted.org/packages/db/79/b2899aec2781b5e847fc0a4b706c0f67ba21d735ec91405cd37ae34d41aa/replaylib-0.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0000000caafef38b4df4663171b1dba7", "sha256": "d77b29d993233287c8c7c35d41a059c461bd841b4f83a509e85922f7ea27b02a"}, "downloads": -1, "filename": "replaylib-0.1.tar.gz", "has_sig": false, "md5_digest": "0000000caafef38b4df4663171b1dba7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20560, "upload_time": "2010-06-22T05:49:47", "upload_time_iso_8601": "2010-06-22T05:49:47.087192Z", "url": "https://files.pythonhosted.org/packages/aa/a4/da3c4f1f8a8fe582b222da9c3374ac0667fda0f0b36dff0e6100c960976f/replaylib-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "40f8be15e588c238c72f143320d68611", "sha256": "0664b00a84a18af14fa00698209afe68d818c3a0571f84d79795204913981c4f"}, "downloads": -1, "filename": "replaylib-0.1-py2.6.egg", "has_sig": false, "md5_digest": "40f8be15e588c238c72f143320d68611", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21619, "upload_time": "2010-06-22T05:49:37", "upload_time_iso_8601": "2010-06-22T05:49:37.689712Z", "url": "https://files.pythonhosted.org/packages/db/79/b2899aec2781b5e847fc0a4b706c0f67ba21d735ec91405cd37ae34d41aa/replaylib-0.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0000000caafef38b4df4663171b1dba7", "sha256": "d77b29d993233287c8c7c35d41a059c461bd841b4f83a509e85922f7ea27b02a"}, "downloads": -1, "filename": "replaylib-0.1.tar.gz", "has_sig": false, "md5_digest": "0000000caafef38b4df4663171b1dba7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20560, "upload_time": "2010-06-22T05:49:47", "upload_time_iso_8601": "2010-06-22T05:49:47.087192Z", "url": "https://files.pythonhosted.org/packages/aa/a4/da3c4f1f8a8fe582b222da9c3374ac0667fda0f0b36dff0e6100c960976f/replaylib-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:38 2020"}