{"info": {"author": "Kyle Wilcox", "author_email": "kyle@axiomdatascience.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Scientific/Engineering"], "description": "# codar2netcdf  [![Build Status](https://travis-ci.org/axiom-data-science/codar2netcdf.svg?branch=master)](https://travis-ci.org/axiom-data-science/codar2netcdf)\n\nConverting CODAR Total ASCII files (the final total current speed and direction\nof the combined radial data) into CF NetCDF files.\n\n## Installation\n\n```\n# pip\n$ pip install codar2netcdf\n\n# conda\n$ conda install -c ioos codar2netcdf\n```\n\n## Usage\n\n```python\nIn [1]: from codar2netcdf import CodarAsciiTotals\nIn [2]: w = CodarAsciiTotals('totals.txt')\n\n# Pandas dataframe of the data\nIn [3]: w.data.head()\nOut[3]:\n   Longitude   Latitude  U comp  V comp  VectorFlag  U StdDev  V StdDev\n0 -83.004520  25.569613 -14.822  43.085           0     12.89     23.04\n1 -82.905005  25.569578 -19.047  45.790           0     14.71     24.21\n2 -82.805491  25.569473   1.059   9.831           0     12.31     18.06\n3 -83.104110  25.659845  -7.531  38.266           0      9.61     22.19\n4 -83.004520  25.659880 -17.075  44.413           0     11.82     23.51\n...\n\n# Export to netCDF file\nIn [4]: w.export('out.nc', ascii_grid='grid.txt')\n\nIn [5]: import netCDF4\nIn [6]: netCDF4.Dataset('out.nc').variables\nOut[6]:\nOrderedDict([('time', <class 'netCDF4._netCDF4.Variable'>\n              int64 time(time)\n                  _FillValue: -999\n                  units: seconds since 1970-01-01 00:00:00\n                  standard_name: time\n                  calendar: gregorian\n                  long_name: time\n              unlimited dimensions:\n              current shape = (1,)\n              filling on),\n\n              ('lat', <class 'netCDF4._netCDF4.Variable'>\n              float64 lat(x, y)\n                  _FillValue: -999.9\n                  units: degrees_north\n                  standard_name: latitude\n                  axis: Y\n                  long_name: latitude\n              unlimited dimensions:\n              current shape = (130, 210)\n              filling on),\n\n              ('lon', <class 'netCDF4._netCDF4.Variable'>\n              float64 lon(x, y)\n                  _FillValue: -999.9\n                  units: degrees_east\n                  standard_name: longitude\n                  axis: X\n                  long_name: longitude\n              unlimited dimensions:\n              current shape = (130, 210)\n              filling on),\n\n              ('z', <class 'netCDF4._netCDF4.Variable'>\n              int64 z(z)\n                  _FillValue: -999\n                  units: m\n                  standard_name: depth\n                  positive: down\n                  axis: Z\n                  long_name: depth\n              unlimited dimensions:\n              current shape = (1,)\n              filling on),\n\n              ('u', <class 'netCDF4._netCDF4.Variable'>\n              float64 u(time, x, y)\n                  _FillValue: -999.9\n                  standard_name: eastward_sea_water_velocity\n                  long_name: Eastward Surface Current (cm/s)\n                  units: cm/s\n                  coordinates: time lon lat\n              unlimited dimensions:\n              current shape = (1, 130, 210)\n              filling on),\n\n              ('v', <class 'netCDF4._netCDF4.Variable'>\n              float64 v(time, x, y)\n                  _FillValue: -999.9\n                  standard_name: northward_sea_water_velocity\n                  long_name: Northward Surface Current (cm/s)\n                  units: cm/s\n                  coordinates: time lon lat\n              unlimited dimensions:\n              current shape = (1, 130, 210)\n              filling on),\n\n              ('crs', <class 'netCDF4._netCDF4.Variable'>\n              int32 crs()\n                  long_name: http://www.opengis.net/def/crs/EPSG/0/4326\n                  grid_mapping_name: latitude_longitude\n                  epsg_code: EPSG:4326\n                  inverse_flattening: 298.257223563\n                  semi_major_axis: 6378137.0\n              unlimited dimensions:\n              current shape = ()\n              filling on, default _FillValue of -2147483647 used)\n])\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axiom-data-science/codar2netcdf", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "codar2netcdf", "package_url": "https://pypi.org/project/codar2netcdf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/codar2netcdf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/axiom-data-science/codar2netcdf"}, "release_url": "https://pypi.org/project/codar2netcdf/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "A utility to convert CODAR total ASCII files into CF NetCDF files.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # codar2netcdf  [![Build Status](https://travis-ci.org/axiom-data-science/codar2netcdf.svg?branch=master)](https://travis-ci.org/axiom-data-science/codar2netcdf)<br><br>Converting CODAR Total ASCII files (the final total current speed and direction<br>of the combined radial data) into CF NetCDF files.<br><br>## Installation<br><br>```<br># pip<br>$ pip install codar2netcdf<br><br># conda<br>$ conda install -c ioos codar2netcdf<br>```<br><br>## Usage<br><br>```python<br>In [1]: from codar2netcdf import CodarAsciiTotals<br>In [2]: w = CodarAsciiTotals('totals.txt')<br><br># Pandas dataframe of the data<br>In [3]: w.data.head()<br>Out[3]:<br>   Longitude   Latitude  U comp  V comp  VectorFlag  U StdDev  V StdDev<br>0 -83.004520  25.569613 -14.822  43.085           0     12.89     23.04<br>1 -82.905005  25.569578 -19.047  45.790           0     14.71     24.21<br>2 -82.805491  25.569473   1.059   9.831           0     12.31     18.06<br>3 -83.104110  25.659845  -7.531  38.266           0      9.61     22.19<br>4 -83.004520  25.659880 -17.075  44.413           0     11.82     23.51<br>...<br><br># Export to netCDF file<br>In [4]: w.export('out.nc', ascii_grid='grid.txt')<br><br>In [5]: import netCDF4<br>In [6]: netCDF4.Dataset('out.nc').variables<br>Out[6]:<br>OrderedDict([('time', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              int64 time(time)<br>                  _FillValue: -999<br>                  units: seconds since 1970-01-01 00:00:00<br>                  standard_name: time<br>                  calendar: gregorian<br>                  long_name: time<br>              unlimited dimensions:<br>              current shape = (1,)<br>              filling on),<br><br>              ('lat', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              float64 lat(x, y)<br>                  _FillValue: -999.9<br>                  units: degrees_north<br>                  standard_name: latitude<br>                  axis: Y<br>                  long_name: latitude<br>              unlimited dimensions:<br>              current shape = (130, 210)<br>              filling on),<br><br>              ('lon', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              float64 lon(x, y)<br>                  _FillValue: -999.9<br>                  units: degrees_east<br>                  standard_name: longitude<br>                  axis: X<br>                  long_name: longitude<br>              unlimited dimensions:<br>              current shape = (130, 210)<br>              filling on),<br><br>              ('z', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              int64 z(z)<br>                  _FillValue: -999<br>                  units: m<br>                  standard_name: depth<br>                  positive: down<br>                  axis: Z<br>                  long_name: depth<br>              unlimited dimensions:<br>              current shape = (1,)<br>              filling on),<br><br>              ('u', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              float64 u(time, x, y)<br>                  _FillValue: -999.9<br>                  standard_name: eastward_sea_water_velocity<br>                  long_name: Eastward Surface Current (cm/s)<br>                  units: cm/s<br>                  coordinates: time lon lat<br>              unlimited dimensions:<br>              current shape = (1, 130, 210)<br>              filling on),<br><br>              ('v', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              float64 v(time, x, y)<br>                  _FillValue: -999.9<br>                  standard_name: northward_sea_water_velocity<br>                  long_name: Northward Surface Current (cm/s)<br>                  units: cm/s<br>                  coordinates: time lon lat<br>              unlimited dimensions:<br>              current shape = (1, 130, 210)<br>              filling on),<br><br>              ('crs', &lt;class 'netCDF4._netCDF4.Variable'&gt;<br>              int32 crs()<br>                  long_name: http://www.opengis.net/def/crs/EPSG/0/4326<br>                  grid_mapping_name: latitude_longitude<br>                  epsg_code: EPSG:4326<br>                  inverse_flattening: 298.257223563<br>                  semi_major_axis: 6378137.0<br>              unlimited dimensions:<br>              current shape = ()<br>              filling on, default _FillValue of -2147483647 used)<br>])<br>```\n          </div>"}, "last_serial": 1999370, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "17f18a793ccd16330f53e67174d0d8bb", "sha256": "7629cdad1dd085efbb8fbd91a93622de6e2df73cb90474de4cdd4fd64e2ea18f"}, "downloads": -1, "filename": "codar2netcdf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "17f18a793ccd16330f53e67174d0d8bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5956, "upload_time": "2016-02-29T15:25:19", "upload_time_iso_8601": "2016-02-29T15:25:19.681633Z", "url": "https://files.pythonhosted.org/packages/a3/c8/fa1572ca1aaa3e913164cfb02a5c49bf7f193fbeb74b82385162465422e7/codar2netcdf-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "30163273ed1d8e8578249731e6d99e73", "sha256": "db8872b21bc0d97f365f551c9b8a6e297811a14bbbde10a8fe62d0bcf15b48e7"}, "downloads": -1, "filename": "codar2netcdf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "30163273ed1d8e8578249731e6d99e73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6049, "upload_time": "2016-03-10T14:17:12", "upload_time_iso_8601": "2016-03-10T14:17:12.812253Z", "url": "https://files.pythonhosted.org/packages/1e/c8/856a83e9cc306f0e25453c0754da20e3306828754602db9825ad2585d970/codar2netcdf-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30163273ed1d8e8578249731e6d99e73", "sha256": "db8872b21bc0d97f365f551c9b8a6e297811a14bbbde10a8fe62d0bcf15b48e7"}, "downloads": -1, "filename": "codar2netcdf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "30163273ed1d8e8578249731e6d99e73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6049, "upload_time": "2016-03-10T14:17:12", "upload_time_iso_8601": "2016-03-10T14:17:12.812253Z", "url": "https://files.pythonhosted.org/packages/1e/c8/856a83e9cc306f0e25453c0754da20e3306828754602db9825ad2585d970/codar2netcdf-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:18 2020"}