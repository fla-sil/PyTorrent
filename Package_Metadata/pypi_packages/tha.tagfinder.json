{"info": {"author": "The Health Agency", "author_email": "techniek@thehealthagency.com", "bugtrack_url": null, "classifiers": [], "description": "tha.tagfinder\n=============\n\ntha.tagfinder is a library for finding trunks and tags in an svn hierarchy.\nIncluding options for not descending into specific directories and so.\n\nMade by `Reinout van Rees <http://reinout.vanrees.org>`_ at `The Health Agency\n<http://www.thehealthagency.com>`_. \n\nMore details in src/tha/tagfinder/USAGE.txt .\n\n\nUsage of tha.tagfinder\n======================\n\n.. :doctest:\n\nThe goal of tha.tagfinder is to traverse though an svn structure and return\ntags and trunks.\n\nThree imports are needed:\n\n    >>> from tha.tagfinder import extracter\n    >>> from tha.tagfinder import finder\n    >>> from tha.tagfinder import lister\n\nYou need a startpoint, which is either an svn url or a directory name.  Our\ntest fixture provides an svn repository:\n\n    >>> repo_url\n    'file://.../repo'\n\nGive your startpoint to a lister, in this case an SvnLister, with an optional\nlist of directory names that should be ignored:\n\n    >>> startpoint = lister.SvnLister(repo_url, ignore=['sandbox'])\n\nChoose an extractor.  Normally the BaseExtracter, but you can subclass it:\n\n    >>> info_extracter = extracter.BaseExtracter\n\nLastly, set up a finder with the startpoint and the extractor.  Optionally\npass in stop_indicators that, when found in a directory, will stop the finder\nfrom recursing in that directory:\n\n    >>> info = finder.Finder(startpoint, info_extracter,\n    ...                      stop_indicators=[])\n\nThe main usage is to query this info object for the projects it has found:\n\n    >>> print(info.projects)\n    [<tha.tagfinder.extracter.BaseExtracter object at ...,\n     <tha.tagfinder.extracter.BaseExtracter object at ...]\n\nEvery project object has attributes that are provided by the extracter.  So\nsubclass the extracter if you need extra attributes of your own:\n\n    >>> project = info.projects[1]\n    >>> project.name\n    'project1'\n    >>> project.location\n    'file://.../repo/project1'\n    >>> project.tags\n    ['0.1', '0.2', '0.3-bugfix']\n    >>> project.tag_location('0.2')\n    'file://.../repo/project1/tags/0.2'\n\n\nTODO\n====\n\n- Nothing at the moment.\n\n\nChangelog of tha.tagfinder\n==========================\n\n1.2 (2009-12-18)\n----------------\n\n- Nothing changed yet.\n\n\n1.1 (2009-12-18)\n----------------\n\n- Updated test setup to use compattest.  [reinout]\n\n- Documentation cleanup.  [reinout]\n\n\n1.0 (2009-10-06)\n----------------\n\n- Working around a difference when running the test from an svn checkout and\n  when running them from a released egg.  [reinout]\n\n\n0.4 (2009-10-06)\n----------------\n\n- Fixed test-all setup.  [reinout]\n\n- Added small files to currently-empty directories in the test fixture to\n  prevent them from being omitted in the egg.  [reinout]\n\n\n0.3 (2009-10-05)\n----------------\n\n- Preparing for pypi release by removing some internal The Health Agency\n  development tools.  [reinout]\n\n\n0.2 (2009-10-05)\n----------------\n\n- Updated documentation with a basic example in USAGE.txt.  [reinout]\n\n\n0.1 (2009-10-05)\n----------------\n\n- Copied most of the original tha.taglist code, but cleaned up and tested.\n  [reinout]\n\n- Initial library skeleton created by thaskel.  [reinout]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.thehealthagency.com", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "tha.tagfinder", "package_url": "https://pypi.org/project/tha.tagfinder/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tha.tagfinder/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.thehealthagency.com"}, "release_url": "https://pypi.org/project/tha.tagfinder/1.2/", "requires_dist": null, "requires_python": null, "summary": "Library to find tags and trunks in an svn repo", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tha-tagfinder\">\n<h2>tha.tagfinder</h2>\n<p>tha.tagfinder is a library for finding trunks and tags in an svn hierarchy.\nIncluding options for not descending into specific directories and so.</p>\n<p>Made by <a href=\"http://reinout.vanrees.org\" rel=\"nofollow\">Reinout van Rees</a> at <a href=\"http://www.thehealthagency.com\" rel=\"nofollow\">The Health Agency</a>.</p>\n<p>More details in src/tha/tagfinder/USAGE.txt .</p>\n</div>\n<div id=\"usage-of-tha-tagfinder\">\n<h2>Usage of tha.tagfinder</h2>\n<p>The goal of tha.tagfinder is to traverse though an svn structure and return\ntags and trunks.</p>\n<p>Three imports are needed:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from tha.tagfinder import extracter\n&gt;&gt;&gt; from tha.tagfinder import finder\n&gt;&gt;&gt; from tha.tagfinder import lister\n</pre>\n</blockquote>\n<p>You need a startpoint, which is either an svn url or a directory name.  Our\ntest fixture provides an svn repository:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; repo_url\n'file://.../repo'\n</pre>\n</blockquote>\n<p>Give your startpoint to a lister, in this case an SvnLister, with an optional\nlist of directory names that should be ignored:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; startpoint = lister.SvnLister(repo_url, ignore=['sandbox'])\n</pre>\n</blockquote>\n<p>Choose an extractor.  Normally the BaseExtracter, but you can subclass it:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; info_extracter = extracter.BaseExtracter\n</pre>\n</blockquote>\n<p>Lastly, set up a finder with the startpoint and the extractor.  Optionally\npass in stop_indicators that, when found in a directory, will stop the finder\nfrom recursing in that directory:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; info = finder.Finder(startpoint, info_extracter,\n...                      stop_indicators=[])\n</pre>\n</blockquote>\n<p>The main usage is to query this info object for the projects it has found:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print(info.projects)\n[&lt;tha.tagfinder.extracter.BaseExtracter object at ...,\n &lt;tha.tagfinder.extracter.BaseExtracter object at ...]\n</pre>\n</blockquote>\n<p>Every project object has attributes that are provided by the extracter.  So\nsubclass the extracter if you need extra attributes of your own:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; project = info.projects[1]\n&gt;&gt;&gt; project.name\n'project1'\n&gt;&gt;&gt; project.location\n'file://.../repo/project1'\n&gt;&gt;&gt; project.tags\n['0.1', '0.2', '0.3-bugfix']\n&gt;&gt;&gt; project.tag_location('0.2')\n'file://.../repo/project1/tags/0.2'\n</pre>\n</blockquote>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Nothing at the moment.</li>\n</ul>\n</div>\n<div id=\"changelog-of-tha-tagfinder\">\n<h2>Changelog of tha.tagfinder</h2>\n<div id=\"id1\">\n<h3>1.2 (2009-12-18)</h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1 (2009-12-18)</h3>\n<ul>\n<li>Updated test setup to use compattest.  [reinout]</li>\n<li>Documentation cleanup.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0 (2009-10-06)</h3>\n<ul>\n<li>Working around a difference when running the test from an svn checkout and\nwhen running them from a released egg.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.4 (2009-10-06)</h3>\n<ul>\n<li>Fixed test-all setup.  [reinout]</li>\n<li>Added small files to currently-empty directories in the test fixture to\nprevent them from being omitted in the egg.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.3 (2009-10-05)</h3>\n<ul>\n<li>Preparing for pypi release by removing some internal The Health Agency\ndevelopment tools.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2 (2009-10-05)</h3>\n<ul>\n<li>Updated documentation with a basic example in USAGE.txt.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1 (2009-10-05)</h3>\n<ul>\n<li>Copied most of the original tha.taglist code, but cleaned up and tested.\n[reinout]</li>\n<li>Initial library skeleton created by thaskel.  [reinout]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 800542, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "d2dac6cb7cd5daabf22be541628a80d9", "sha256": "6605c89bd9fccbd760fe5030b47766526fc7d67110414f3990f76ad12fc5c561"}, "downloads": -1, "filename": "tha.tagfinder-0.3.tar.gz", "has_sig": false, "md5_digest": "d2dac6cb7cd5daabf22be541628a80d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11383, "upload_time": "2009-10-05T21:01:59", "upload_time_iso_8601": "2009-10-05T21:01:59.867939Z", "url": "https://files.pythonhosted.org/packages/e1/9f/abe14ee786ed9af039b69aac20e3f8219ab2866079d735e002b7fef35b51/tha.tagfinder-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0d6653875577ed440b99462e412746fd", "sha256": "79ef9f05b1ca653ff97b7b58e880db00ff83b500b5cb8aa555632daf616f5f9d"}, "downloads": -1, "filename": "tha.tagfinder-0.4.tar.gz", "has_sig": false, "md5_digest": "0d6653875577ed440b99462e412746fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13080, "upload_time": "2009-10-06T13:04:55", "upload_time_iso_8601": "2009-10-06T13:04:55.759374Z", "url": "https://files.pythonhosted.org/packages/ce/45/e37f5182c37c7067388a3de2caba1ab0c9a5d7d394e8969da3bded780385/tha.tagfinder-0.4.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "612417366a6c31889329dd22256d46e3", "sha256": "851b8da95ab7fb0cf4783ae6187c2cc1dd3f4bf98cde7b4a1b9c778acf054230"}, "downloads": -1, "filename": "tha.tagfinder-1.0.tar.gz", "has_sig": false, "md5_digest": "612417366a6c31889329dd22256d46e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13316, "upload_time": "2009-10-06T14:13:54", "upload_time_iso_8601": "2009-10-06T14:13:54.735442Z", "url": "https://files.pythonhosted.org/packages/c5/07/197c9f72d575a615011aae3547ccd3af9b8569584df99a85479ad13298a8/tha.tagfinder-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "6ac850cae38ac8acbed846d9829ad865", "sha256": "29eded9cbeb6450750445d70b34ee2810648be23af1f109a2a317781a47e4cdd"}, "downloads": -1, "filename": "tha.tagfinder-1.1.tar.gz", "has_sig": false, "md5_digest": "6ac850cae38ac8acbed846d9829ad865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13357, "upload_time": "2009-12-18T16:23:15", "upload_time_iso_8601": "2009-12-18T16:23:15.607603Z", "url": "https://files.pythonhosted.org/packages/57/22/6fda6531bb5421f14abec931ed4bc08aae2a560f61d78c9b8a6e96d20d8c/tha.tagfinder-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "42db412175d6e4f043d412c59a46b8fd", "sha256": "b84f8182dab3ee913c25bf26a2c5c34946d5eec0f4d1696504a93a1e5a1f85bc"}, "downloads": -1, "filename": "tha.tagfinder-1.2.tar.gz", "has_sig": false, "md5_digest": "42db412175d6e4f043d412c59a46b8fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13422, "upload_time": "2009-12-18T16:28:36", "upload_time_iso_8601": "2009-12-18T16:28:36.637897Z", "url": "https://files.pythonhosted.org/packages/3d/f6/c573ab0e0eb533056332fcd74a6af3c4e520a9565ce350cd47fa56cdcad3/tha.tagfinder-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42db412175d6e4f043d412c59a46b8fd", "sha256": "b84f8182dab3ee913c25bf26a2c5c34946d5eec0f4d1696504a93a1e5a1f85bc"}, "downloads": -1, "filename": "tha.tagfinder-1.2.tar.gz", "has_sig": false, "md5_digest": "42db412175d6e4f043d412c59a46b8fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13422, "upload_time": "2009-12-18T16:28:36", "upload_time_iso_8601": "2009-12-18T16:28:36.637897Z", "url": "https://files.pythonhosted.org/packages/3d/f6/c573ab0e0eb533056332fcd74a6af3c4e520a9565ce350cd47fa56cdcad3/tha.tagfinder-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:09 2020"}