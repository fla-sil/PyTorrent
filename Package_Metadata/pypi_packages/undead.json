{"info": {"author": "Daniel Waardal", "author_email": "waawal@boom.ws", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing", "Topic :: System :: Systems Administration"], "description": "undead\n======\n\nDead Easy POSIX Daemons for Python!\n\n-------------------------------------------------------------------------\n\n.. code:: python\n\n    #!/usr/bin/python\n    import undead\n\n    @undead\n    def my_daemon_process():\n        \"\"\" This function will be daemonized. \"\"\"\n        from time import sleep\n        while True:\n            sleep(10)\n\n-------------------------------------------------------------------------\n\nInstallation\n------------\n::\n\n    pip install undead\n\nSettings\n--------\n\nundead.name\n  Name of the logger and process.\n\n  Default: ``__name__`` of decorated callable\n\nundead.pidfile\n  Path to pidfile.  \n\n  Default: ``~/.{undead.name}/{undead.name}.pid``\n\nundead.log_level\n  Log level.  \n\n  Default: ``\"WARNING\"``\n\nundead.process_name\n  The name of the process (that shows up in ps etc.)\n\n  Default: None (No manipulation of process name)\n\nExample\n*******\n\n.. code:: python\n\n    import undead\n\n    undead.name = \"my-first-daemon\"\n    undead.process_name = \"leDeamon\"\n\n    @undead\n    def my_daemon_process():\n        \"\"\" This function will be daemonized. \"\"\"\n        # ...\n\nLogging within the decorated handler\n------------------------------------\n\nJust add ``log`` to your decorated signature, and the logger will be passed down. Log away captain!\n\n.. code:: python\n\n    import undead\n\n    @undead\n    def i_am_undead(log):\n        log.warning(\"I'm warning you!\")\n        log.info(\"Soap, 2 for $1.99\")\n\nThe logfile will be created in ``~/.i_am_undead``\n\nLicense\n-------\n\nMIT", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/waawal/undead", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "undead", "package_url": "https://pypi.org/project/undead/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/undead/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/waawal/undead"}, "release_url": "https://pypi.org/project/undead/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Dead Easy UNIX Daemons!", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Dead Easy POSIX Daemons for Python!</p>\n<hr class=\"docutils\">\n<pre><span class=\"ch\">#!/usr/bin/python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">undead</span>\n\n<span class=\"nd\">@undead</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_daemon_process</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\" This function will be daemonized. \"\"\"</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<hr class=\"docutils\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install undead\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<dl>\n<dt>undead.name</dt>\n<dd><p>Name of the logger and process.</p>\n<p>Default: <tt>__name__</tt> of decorated callable</p>\n</dd>\n<dt>undead.pidfile</dt>\n<dd><p>Path to pidfile.</p>\n<p>Default: <tt><span class=\"pre\">~/.{undead.name}/{undead.name}.pid</span></tt></p>\n</dd>\n<dt>undead.log_level</dt>\n<dd><p>Log level.</p>\n<p>Default: <tt>\"WARNING\"</tt></p>\n</dd>\n<dt>undead.process_name</dt>\n<dd><p>The name of the process (that shows up in ps etc.)</p>\n<p>Default: None (No manipulation of process name)</p>\n</dd>\n</dl>\n<div id=\"example\">\n<h3>Example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">undead</span>\n\n<span class=\"n\">undead</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"my-first-daemon\"</span>\n<span class=\"n\">undead</span><span class=\"o\">.</span><span class=\"n\">process_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"leDeamon\"</span>\n\n<span class=\"nd\">@undead</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_daemon_process</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\" This function will be daemonized. \"\"\"</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n</div>\n</div>\n<div id=\"logging-within-the-decorated-handler\">\n<h2>Logging within the decorated handler</h2>\n<p>Just add <tt>log</tt> to your decorated signature, and the logger will be passed down. Log away captain!</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">undead</span>\n\n<span class=\"nd\">@undead</span>\n<span class=\"k\">def</span> <span class=\"nf\">i_am_undead</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"p\">):</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">\"I'm warning you!\"</span><span class=\"p\">)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Soap, 2 for $1.99\"</span><span class=\"p\">)</span>\n</pre>\n<p>The logfile will be created in <tt><span class=\"pre\">~/.i_am_undead</span></tt></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n\n          </div>"}, "last_serial": 813565, "releases": {"0.0.0": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "04ea61119d0a37d0d74afcf30fb624e7", "sha256": "e6821e013a38ffffdb5cdce1ec47e8852822d311b158f8f6a816c808366cb6d4"}, "downloads": -1, "filename": "undead-0.1.0.tar.gz", "has_sig": false, "md5_digest": "04ea61119d0a37d0d74afcf30fb624e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3252, "upload_time": "2013-07-08T21:01:00", "upload_time_iso_8601": "2013-07-08T21:01:00.450105Z", "url": "https://files.pythonhosted.org/packages/c7/dd/a1f6e1d4badb817c5245a1dfc56d6ac4955c76a944f25a39036fe7ff66b9/undead-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5b8f21f5901214032086ba53d0c9239a", "sha256": "0b0e39c49846dc8fc19172272dcb2d83ae6879ff47cd1c8c0651c2db872641cf"}, "downloads": -1, "filename": "undead-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5b8f21f5901214032086ba53d0c9239a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3376, "upload_time": "2013-07-08T23:12:19", "upload_time_iso_8601": "2013-07-08T23:12:19.739787Z", "url": "https://files.pythonhosted.org/packages/42/e8/deec0ed44f71c953279bcd6892a36549e16305a3275ca575bcab6bdb6d8d/undead-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d06c72f77bbee1fb208a6c83df5a6595", "sha256": "adb163f9ab70b75a75391a7f00476832812d7da20f2731c4b23c34bfd18dcb25"}, "downloads": -1, "filename": "undead-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d06c72f77bbee1fb208a6c83df5a6595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3311, "upload_time": "2013-07-11T16:20:45", "upload_time_iso_8601": "2013-07-11T16:20:45.606140Z", "url": "https://files.pythonhosted.org/packages/cb/9e/6eff7b49e3af6b4e7ea1eee4f1dfbe7fe1aec22b575051c54c3597e11dde/undead-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "3deba4c5e55f41c48f412fa503e36c5c", "sha256": "3ec8d5e2d933dcd2e3fcf9896f6b10412d1f8bf7a915fb4bbd8ecc24ce80339e"}, "downloads": -1, "filename": "undead-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3deba4c5e55f41c48f412fa503e36c5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3294, "upload_time": "2013-07-11T16:53:21", "upload_time_iso_8601": "2013-07-11T16:53:21.858710Z", "url": "https://files.pythonhosted.org/packages/dc/a1/09d7ed3f9ccb711dc11e0201753f3a4452b422790fa6f7da51e0af140388/undead-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3deba4c5e55f41c48f412fa503e36c5c", "sha256": "3ec8d5e2d933dcd2e3fcf9896f6b10412d1f8bf7a915fb4bbd8ecc24ce80339e"}, "downloads": -1, "filename": "undead-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3deba4c5e55f41c48f412fa503e36c5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3294, "upload_time": "2013-07-11T16:53:21", "upload_time_iso_8601": "2013-07-11T16:53:21.858710Z", "url": "https://files.pythonhosted.org/packages/dc/a1/09d7ed3f9ccb711dc11e0201753f3a4452b422790fa6f7da51e0af140388/undead-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:53 2020"}