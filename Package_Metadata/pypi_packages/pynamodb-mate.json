{"info": {"author": "Sanhe Hu", "author_email": "husanhe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. image:: https://readthedocs.org/projects/pynamodb_mate/badge/?version=latest\n    :target: https://pynamodb_mate.readthedocs.io/index.html\n    :alt: Documentation Status\n\n.. image:: https://travis-ci.org/MacHu-GWU/pynamodb_mate-project.svg?branch=master\n    :target: https://travis-ci.org/MacHu-GWU/pynamodb_mate-project?branch=master\n\n.. image:: https://codecov.io/gh/MacHu-GWU/pynamodb_mate-project/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/MacHu-GWU/pynamodb_mate-project\n\n.. image:: https://img.shields.io/pypi/v/pynamodb_mate.svg\n    :target: https://pypi.python.org/pypi/pynamodb_mate\n\n.. image:: https://img.shields.io/pypi/l/pynamodb_mate.svg\n    :target: https://pypi.python.org/pypi/pynamodb_mate\n\n.. image:: https://img.shields.io/pypi/pyversions/pynamodb_mate.svg\n    :target: https://pypi.python.org/pypi/pynamodb_mate\n\n.. image:: https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social\n    :target: https://github.com/MacHu-GWU/pynamodb_mate-project\n\n------\n\n\n.. image:: https://img.shields.io/badge/Link-Document-blue.svg\n      :target: https://pynamodb_mate.readthedocs.io/index.html\n\n.. image:: https://img.shields.io/badge/Link-API-blue.svg\n      :target: https://pynamodb_mate.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/Link-Source_Code-blue.svg\n      :target: https://pynamodb_mate.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/Link-Install-blue.svg\n      :target: `install`_\n\n.. image:: https://img.shields.io/badge/Link-GitHub-blue.svg\n      :target: https://github.com/MacHu-GWU/pynamodb_mate-project\n\n.. image:: https://img.shields.io/badge/Link-Submit_Issue-blue.svg\n      :target: https://github.com/MacHu-GWU/pynamodb_mate-project/issues\n\n.. image:: https://img.shields.io/badge/Link-Request_Feature-blue.svg\n      :target: https://github.com/MacHu-GWU/pynamodb_mate-project/issues\n\n.. image:: https://img.shields.io/badge/Link-Download-blue.svg\n      :target: https://pypi.org/pypi/pynamodb_mate#files\n\n\nWelcome to ``pynamodb_mate`` Documentation\n==============================================================================\n\n\nFeature1. Store Large Binary Object in S3, only store S3 URI in DynamoDB\n------------------------------------------------------------------------------\n\nDynamoDB is a very good choice for **Pay-as-you-go**, **high-concurrent** key value database. Somestimes, you want to store large binary object along with Dynamodb items. Especially, in web crawler app. But Dynamodb has a limitation that one item can not be larger than 250KB. How could you solve the problem?\n\nA easy solution is to store large binary object in s3, and only store the s3 uri in Dynamodb. ``pynamodb_mate`` library provides this feature on top of ``pynamodb`` project (A DynamoDB ORM layer in Python).\n\nHere's how you define your ORM layer:\n\n.. code-block:: python\n\n    from pynamodb.models import Model\n    from pynamodb.attributes import UnicodeAttribute\n    from pynamodb_mate.s3_backed_attribute import (\n        S3BackedBinaryAttribute,\n        S3BackedUnicodeAttribute,\n        S3BackedMixin,\n        s3_key_safe_b64encode,\n    )\n\n    BUCKET_NAME = \"my-bucket\"\n    URI_PREFIX = \"s3://{BUCKET_NAME}/\".format(BUCKET_NAME=BUCKET_NAME)\n\n    class PageModel(Model, S3BackedMixin):\n        class Meta:\n            table_name = \"pynamodb_mate-pages\"\n            region = \"us-east-1\"\n\n        url = UnicodeAttribute(hash_key=True)\n        cover_image_url = UnicodeAttribute(null=True)\n\n        # this field is for html content string\n        html_content = S3BackedUnicodeAttribute(\n            s3_uri_getter=lambda obj: URI_PREFIX + s3_key_safe_b64encode(obj.url) + \".html\",\n            compress=True,\n        )\n        # this field is for image binary content\n        cover_image_content = S3BackedBinaryAttribute(\n            s3_uri_getter=lambda obj: URI_PREFIX + s3_key_safe_b64encode(obj.cover_image_url) + \".jpg\",\n            compress=True,\n        )\n\nHere's how you store large binary to s3:\n\n.. code-block:: python\n\n    url = \"http://www.python.org\"\n    url_cover_image = \"http://www.python.org/logo.jpg\"\n\n    html_content = \"Hello World!\\n\" * 1000\n    cover_image_content = (\"this is a dummy image!\\n\" * 1000).encode(\"utf-8\")\n\n    page = PageModel(url=url, cover_image_url=url_cover_image)\n\n    # create, if something wrong with s3.put_object in the middle,\n    # dirty s3 object will be cleaned up\n    page.atomic_save(\n        s3_backed_data=[\n            page.html_content.set_to(html_content),\n            page.cover_image_content.set_to(cover_image_content)\n        ]\n    )\n\n    # update, if something wrong with s3.put_object in the middle,\n    # partially done new s3 object will be roll back\n    html_content_new = \"Good Bye!\\n\" * 1000\n    cover_image_content_new = (\"this is another dummy image!\\n\" * 1000).encode(\"utf-8\")\n\n    page.atomic_update(\n        s3_backed_data=[\n            page.html_content.set_to(html_content_new),\n            page.cover_image_content.set_to(cover_image_content_new),\n        ]\n    )\n\n    # delete, make sure s3 object are all gone\n    page.atomic_delete()\n\n\n.. _install:\n\nInstall\n------------------------------------------------------------------------------\n\n``pynamodb_mate`` is released on PyPI, so all you need is:\n\n.. code-block:: console\n\n    $ pip install pynamodb_mate\n\nTo upgrade to latest version:\n\n.. code-block:: console\n\n    $ pip install --upgrade pynamodb_mate\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/pynamodb_mate/0.0.2#downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MacHu-GWU/", "keywords": "", "license": "MIT", "maintainer": "Unknown", "maintainer_email": "", "name": "pynamodb-mate", "package_url": "https://pypi.org/project/pynamodb-mate/", "platform": "Windows", "project_url": "https://pypi.org/project/pynamodb-mate/", "project_urls": {"Download": "https://pypi.python.org/pypi/pynamodb_mate/0.0.2#downloads", "Homepage": "https://github.com/MacHu-GWU/"}, "release_url": "https://pypi.org/project/pynamodb-mate/0.0.2/", "requires_dist": ["pynamodb", "sphinx (==1.8.1) ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinx-jinja ; extra == 'docs'", "sphinx-copybutton ; extra == 'docs'", "docfly (>=0.0.17) ; extra == 'docs'", "rstobj (>=0.0.5) ; extra == 'docs'", "pygments ; extra == 'docs'", "pytest (==3.2.3) ; extra == 'tests'", "pytest-cov (==2.5.1) ; extra == 'tests'", "windtalker (==0.0.7) ; extra == 'tests'"], "requires_python": "", "summary": "Provide Addtional Features for pynamodb", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pynamodb_mate.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae7d025e61d53627106eec67a62759f142165b6b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796e616d6f64625f6d6174652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/MacHu-GWU/pynamodb_mate-project?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/MacHu-GWU/pynamodb_mate-project.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed9fe31d5cbdfec61ffa01601fc087b28c537581/68747470733a2f2f7472617669732d63692e6f72672f4d616348752d4757552f70796e616d6f64625f6d6174652d70726f6a6563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/MacHu-GWU/pynamodb_mate-project\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/MacHu-GWU/pynamodb_mate-project/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee04ab43e63668916cba160a5255780c76264b14/68747470733a2f2f636f6465636f762e696f2f67682f4d616348752d4757552f70796e616d6f64625f6d6174652d70726f6a6563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pynamodb_mate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pynamodb_mate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f5e6b5ece44b35a2739aa051428c70a81073a4b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e616d6f64625f6d6174652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pynamodb_mate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/pynamodb_mate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1b8a883137080248a5b09f5e8b422908ab2a9b6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70796e616d6f64625f6d6174652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pynamodb_mate\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pynamodb_mate.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e088f2fb58293b1f9bae9eda53961c91934089a5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796e616d6f64625f6d6174652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/pynamodb_mate-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88cea09b708639318e023fda9ac4a3d3dbd4913e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f535441525f4d655f6f6e5f476974487562212d2d4e6f6e652e7376673f7374796c653d736f6369616c\"></a>\n<hr class=\"docutils\">\n<a href=\"https://pynamodb_mate.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Document-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72169197d626e9423d781eb78da036701b9d9a98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f63756d656e742d626c75652e737667\"></a>\n<a href=\"https://pynamodb_mate.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-API-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5c039f4ebca0e2653e6f930d982271fae9b6c62/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4150492d626c75652e737667\"></a>\n<a href=\"https://pynamodb_mate.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Source_Code-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0d422b71b3e2a98ca914c3f9b07a6fd0ccbf6f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d536f757263655f436f64652d626c75652e737667\"></a>\n<a href=\"#install\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Install-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7bf0296a17baff5c64335b1557b8c99de518863/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d496e7374616c6c2d626c75652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/pynamodb_mate-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-GitHub-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40760fc6f9c2f034b2f44fb3441622fd43d33f71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4769744875622d626c75652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/pynamodb_mate-project/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Submit_Issue-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aaf85195ff7754d210475d1a26ab797376626e70/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d5375626d69745f49737375652d626c75652e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/pynamodb_mate-project/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Request_Feature-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/028fe51c7aa4c503e85a901affc8519722c888fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d526571756573745f466561747572652d626c75652e737667\"></a>\n<a href=\"https://pypi.org/pypi/pynamodb_mate#files\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Download-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01616d53c2f6efee987f922046ed988550b12ff9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f776e6c6f61642d626c75652e737667\"></a>\n<div id=\"welcome-to-pynamodb-mate-documentation\">\n<h2>Welcome to <tt>pynamodb_mate</tt> Documentation</h2>\n<div id=\"feature1-store-large-binary-object-in-s3-only-store-s3-uri-in-dynamodb\">\n<h3>Feature1. Store Large Binary Object in S3, only store S3 URI in DynamoDB</h3>\n<p>DynamoDB is a very good choice for <strong>Pay-as-you-go</strong>, <strong>high-concurrent</strong> key value database. Somestimes, you want to store large binary object along with Dynamodb items. Especially, in web crawler app. But Dynamodb has a limitation that one item can not be larger than 250KB. How could you solve the problem?</p>\n<p>A easy solution is to store large binary object in s3, and only store the s3 uri in Dynamodb. <tt>pynamodb_mate</tt> library provides this feature on top of <tt>pynamodb</tt> project (A DynamoDB ORM layer in Python).</p>\n<p>Here\u2019s how you define your ORM layer:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynamodb.models</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pynamodb.attributes</span> <span class=\"kn\">import</span> <span class=\"n\">UnicodeAttribute</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pynamodb_mate.s3_backed_attribute</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">S3BackedBinaryAttribute</span><span class=\"p\">,</span>\n    <span class=\"n\">S3BackedUnicodeAttribute</span><span class=\"p\">,</span>\n    <span class=\"n\">S3BackedMixin</span><span class=\"p\">,</span>\n    <span class=\"n\">s3_key_safe_b64encode</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">BUCKET_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"my-bucket\"</span>\n<span class=\"n\">URI_PREFIX</span> <span class=\"o\">=</span> <span class=\"s2\">\"s3://</span><span class=\"si\">{BUCKET_NAME}</span><span class=\"s2\">/\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">BUCKET_NAME</span><span class=\"o\">=</span><span class=\"n\">BUCKET_NAME</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PageModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">S3BackedMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">table_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"pynamodb_mate-pages\"</span>\n        <span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"s2\">\"us-east-1\"</span>\n\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">UnicodeAttribute</span><span class=\"p\">(</span><span class=\"n\">hash_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">cover_image_url</span> <span class=\"o\">=</span> <span class=\"n\">UnicodeAttribute</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># this field is for html content string</span>\n    <span class=\"n\">html_content</span> <span class=\"o\">=</span> <span class=\"n\">S3BackedUnicodeAttribute</span><span class=\"p\">(</span>\n        <span class=\"n\">s3_uri_getter</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">URI_PREFIX</span> <span class=\"o\">+</span> <span class=\"n\">s3_key_safe_b64encode</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\".html\"</span><span class=\"p\">,</span>\n        <span class=\"n\">compress</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"c1\"># this field is for image binary content</span>\n    <span class=\"n\">cover_image_content</span> <span class=\"o\">=</span> <span class=\"n\">S3BackedBinaryAttribute</span><span class=\"p\">(</span>\n        <span class=\"n\">s3_uri_getter</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">URI_PREFIX</span> <span class=\"o\">+</span> <span class=\"n\">s3_key_safe_b64encode</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">cover_image_url</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\".jpg\"</span><span class=\"p\">,</span>\n        <span class=\"n\">compress</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Here\u2019s how you store large binary to s3:</p>\n<pre><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://www.python.org\"</span>\n<span class=\"n\">url_cover_image</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://www.python.org/logo.jpg\"</span>\n\n<span class=\"n\">html_content</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hello World!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>\n<span class=\"n\">cover_image_content</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"this is a dummy image!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">PageModel</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">cover_image_url</span><span class=\"o\">=</span><span class=\"n\">url_cover_image</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create, if something wrong with s3.put_object in the middle,</span>\n<span class=\"c1\"># dirty s3 object will be cleaned up</span>\n<span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">atomic_save</span><span class=\"p\">(</span>\n    <span class=\"n\">s3_backed_data</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">html_content</span><span class=\"o\">.</span><span class=\"n\">set_to</span><span class=\"p\">(</span><span class=\"n\">html_content</span><span class=\"p\">),</span>\n        <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">cover_image_content</span><span class=\"o\">.</span><span class=\"n\">set_to</span><span class=\"p\">(</span><span class=\"n\">cover_image_content</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># update, if something wrong with s3.put_object in the middle,</span>\n<span class=\"c1\"># partially done new s3 object will be roll back</span>\n<span class=\"n\">html_content_new</span> <span class=\"o\">=</span> <span class=\"s2\">\"Good Bye!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>\n<span class=\"n\">cover_image_content_new</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"this is another dummy image!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">atomic_update</span><span class=\"p\">(</span>\n    <span class=\"n\">s3_backed_data</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">html_content</span><span class=\"o\">.</span><span class=\"n\">set_to</span><span class=\"p\">(</span><span class=\"n\">html_content_new</span><span class=\"p\">),</span>\n        <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">cover_image_content</span><span class=\"o\">.</span><span class=\"n\">set_to</span><span class=\"p\">(</span><span class=\"n\">cover_image_content_new</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># delete, make sure s3 object are all gone</span>\n<span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">atomic_delete</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"id1\">\n<span id=\"install\"></span><h3>Install</h3>\n<p><tt>pynamodb_mate</tt> is released on PyPI, so all you need is:</p>\n<pre><span class=\"gp\">$</span> pip install pynamodb_mate\n</pre>\n<p>To upgrade to latest version:</p>\n<pre><span class=\"gp\">$</span> pip install --upgrade pynamodb_mate\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6751845, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "47b425870cb247a6186a27a4b1d87e90", "sha256": "1f1f91613574b1f4eee1e11a542467060e562f058e4f234aa16d05faa4117108"}, "downloads": -1, "filename": "pynamodb_mate-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "47b425870cb247a6186a27a4b1d87e90", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11632, "upload_time": "2019-06-17T21:36:16", "upload_time_iso_8601": "2019-06-17T21:36:16.712416Z", "url": "https://files.pythonhosted.org/packages/54/4d/2f4e351134c341ec57dddc64bf4affb7870cc7e0c65c4adfbaec35f69a40/pynamodb_mate-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f6ca5a7fc768f2bcc97dc291e2d61cf", "sha256": "1775b2dbb95919b633bd8ba119c6c019b4d8fb65e87f8c5b5c3d700853533c0d"}, "downloads": -1, "filename": "pynamodb_mate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8f6ca5a7fc768f2bcc97dc291e2d61cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13444, "upload_time": "2019-06-17T21:36:19", "upload_time_iso_8601": "2019-06-17T21:36:19.205967Z", "url": "https://files.pythonhosted.org/packages/70/af/b74a0a76da887d9f21db6df8a75761a19a820c20a12cca0fb5206e2621dc/pynamodb_mate-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6e244dacf05b3a59992880b98fb6b31d", "sha256": "ad0ec0962b48e1e06fa1ee8150383b029ac59ae747648d4b2da0acb02f9dcab6"}, "downloads": -1, "filename": "pynamodb_mate-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6e244dacf05b3a59992880b98fb6b31d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13702, "upload_time": "2020-03-05T00:15:49", "upload_time_iso_8601": "2020-03-05T00:15:49.254639Z", "url": "https://files.pythonhosted.org/packages/56/d1/417a9017d47035a64b4aca6f845001fe466b79d649353aacb6c0e1ecc0d9/pynamodb_mate-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "630159388267631c2b32be61b89bf7c0", "sha256": "f8ea5c2a8ee4304cdf3cb5dc30056ae14c2b8fff6c5c6cb1c11771934454e365"}, "downloads": -1, "filename": "pynamodb_mate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "630159388267631c2b32be61b89bf7c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14677, "upload_time": "2020-03-05T00:15:51", "upload_time_iso_8601": "2020-03-05T00:15:51.017438Z", "url": "https://files.pythonhosted.org/packages/21/1c/971f97f6adfdbb3d9451657cef8211bab31440cc04ba4bab7b27405bdb27/pynamodb_mate-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e244dacf05b3a59992880b98fb6b31d", "sha256": "ad0ec0962b48e1e06fa1ee8150383b029ac59ae747648d4b2da0acb02f9dcab6"}, "downloads": -1, "filename": "pynamodb_mate-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6e244dacf05b3a59992880b98fb6b31d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13702, "upload_time": "2020-03-05T00:15:49", "upload_time_iso_8601": "2020-03-05T00:15:49.254639Z", "url": "https://files.pythonhosted.org/packages/56/d1/417a9017d47035a64b4aca6f845001fe466b79d649353aacb6c0e1ecc0d9/pynamodb_mate-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "630159388267631c2b32be61b89bf7c0", "sha256": "f8ea5c2a8ee4304cdf3cb5dc30056ae14c2b8fff6c5c6cb1c11771934454e365"}, "downloads": -1, "filename": "pynamodb_mate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "630159388267631c2b32be61b89bf7c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14677, "upload_time": "2020-03-05T00:15:51", "upload_time_iso_8601": "2020-03-05T00:15:51.017438Z", "url": "https://files.pythonhosted.org/packages/21/1c/971f97f6adfdbb3d9451657cef8211bab31440cc04ba4bab7b27405bdb27/pynamodb_mate-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:23 2020"}