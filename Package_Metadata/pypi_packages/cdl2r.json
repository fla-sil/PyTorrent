{"info": {"author": "Moriaki Saigusa", "author_email": "moriaki3193@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "# cdl2r\nCombination Dependent Learning to Rank (\u7d44\u5408\u305b\u4f9d\u5b58\u578b\u30e9\u30f3\u30ad\u30f3\u30b0\u5b66\u7fd2).\n\n## requirements\n- Python 3.6.x ~, 3.7.x ~\n\n## dependencies\n- NumPy\n- Pandas\n\n## installation\n```shell\n$ pip install cdl2r\n```\n\n## usage\n### 1. prepare your dataset\nThe dataset format is like SVM-rank one.\nThe difference is `eid` must be specified in a line.\nHere is a definition of a line.\n`|` symbol means `OR` (so `<str>|<int>` means the value must have either str or int type).\n\n```txt\n<line>     .=. <label> qid:<qid> eid:<eid> <features>#<comments>\n\n<label>    .=. <float>|<str as a class>\n<qid>      .=. <str>|<int>\n<eid>      .=. <str>|<int>\n<features> .=. <dim>:<value>\n<dim>      .=. <0 or Natural Number>\n<value>    .=. <float>\n<comments> .=. <Any text will do>\n```\n\nLet me show you an example.\n\n```txt\n0.5 qid:1 eid:x 1:0.1 2:-0.2 3:0.3#comment A\n0.0 qid:1 eid:y 1:-0.1 2:0.2 4:0.4\n-0.5 qid:1 eid:z 2:-0.2 3:0.3 4:-0.4#comment C\n0.5 qid:2 eid:y 1:0.1 2:-0.2 3:0.3\n0.0 qid:2 eid:z 1:-0.1 2:0.2 4:0.4\n-0.5 qid:2 eid:w 2:-0.2 3:0.3 4:-0.4#comment E\n```\n\n### 2. loading your dataset\n```python\nfrom cdl2r.dataset import load_data\n\n# loading dataset as a DataFrame object\ndata_path = '/path/to/dataset'\nn_dimensions = 10\ntrain = load_data(data_path, n_dimensions)\n# train.columns\n# >>> Index(['label', 'qid', 'eid', 'features'], dtype='object')\n```\n\n### 3. fitting the model\n```python\nfrom cdl2r.models import CDFMRegressor\n\n# define your model\nmodel = CDFMRegressor(n_factors=8, n_iterations=300, init_eta=1e-2)\n# fitting, printing out epoch losses if verbose is True\nmodel.fit(train, verbose=True)\n```\n\n### 4. save the model\n```python\nimport pickle\n\nwith open('/path/to/file.pkl', mode='wb') as fp:\n    pickle.dump(model, fp)\n```\n\n### 5. make prediction\n```python\n# loading test dataset\ntest = load_data(test_path, n_dimensions)\npred = model.predict(test)\n# pred.columns\n# >>> Index(['pred_label', 'qid', 'eid', 'features'], dtype='object')\n```\n\n## development\n### build Cython modules\n```shell\n$ python setup.py build_ext --inplace\n```\n\n### profiling\n```shell\n# decorate a method with `@profile` in a script where you want to profile.\n$ kernprof -l -v <script>.py\n```\n\n### pylint\n- max-line-length: 130\n- disable snake-case\n\n### release\n```shell\n# build\n$ python setup.py bdist_whell\n\n# testing upload\n$ twine upload --repository testpypi dist/<cdl2r-version-pkg>\n$ pip install --index-url https://test.pypi.org/simple/<cdl2r-version-pkg>\n\n# upload\n$ twine upload --repository pypi dist<cdl2r-version-pkg>\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/moriaki3193/cdl2r", "keywords": "cdl2r L2R LETOR", "license": "Type license() to see the full license text", "maintainer": "", "maintainer_email": "", "name": "cdl2r", "package_url": "https://pypi.org/project/cdl2r/", "platform": "", "project_url": "https://pypi.org/project/cdl2r/", "project_urls": {"Homepage": "https://github.com/moriaki3193/cdl2r"}, "release_url": "https://pypi.org/project/cdl2r/0.1.2/", "requires_dist": ["numpy", "pandas"], "requires_python": "", "summary": "Combination Dependent Learning to Rank", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # cdl2r<br>Combination Dependent Learning to Rank (\u7d44\u5408\u305b\u4f9d\u5b58\u578b\u30e9\u30f3\u30ad\u30f3\u30b0\u5b66\u7fd2).<br><br>## requirements<br>- Python 3.6.x ~, 3.7.x ~<br><br>## dependencies<br>- NumPy<br>- Pandas<br><br>## installation<br>```shell<br>$ pip install cdl2r<br>```<br><br>## usage<br>### 1. prepare your dataset<br>The dataset format is like SVM-rank one.<br>The difference is `eid` must be specified in a line.<br>Here is a definition of a line.<br>`|` symbol means `OR` (so `&lt;str&gt;|&lt;int&gt;` means the value must have either str or int type).<br><br>```txt<br>&lt;line&gt;     .=. &lt;label&gt; qid:&lt;qid&gt; eid:&lt;eid&gt; &lt;features&gt;#&lt;comments&gt;<br><br>&lt;label&gt;    .=. &lt;float&gt;|&lt;str as a class&gt;<br>&lt;qid&gt;      .=. &lt;str&gt;|&lt;int&gt;<br>&lt;eid&gt;      .=. &lt;str&gt;|&lt;int&gt;<br>&lt;features&gt; .=. &lt;dim&gt;:&lt;value&gt;<br>&lt;dim&gt;      .=. &lt;0 or Natural Number&gt;<br>&lt;value&gt;    .=. &lt;float&gt;<br>&lt;comments&gt; .=. &lt;Any text will do&gt;<br>```<br><br>Let me show you an example.<br><br>```txt<br>0.5 qid:1 eid:x 1:0.1 2:-0.2 3:0.3#comment A<br>0.0 qid:1 eid:y 1:-0.1 2:0.2 4:0.4<br>-0.5 qid:1 eid:z 2:-0.2 3:0.3 4:-0.4#comment C<br>0.5 qid:2 eid:y 1:0.1 2:-0.2 3:0.3<br>0.0 qid:2 eid:z 1:-0.1 2:0.2 4:0.4<br>-0.5 qid:2 eid:w 2:-0.2 3:0.3 4:-0.4#comment E<br>```<br><br>### 2. loading your dataset<br>```python<br>from cdl2r.dataset import load_data<br><br># loading dataset as a DataFrame object<br>data_path = '/path/to/dataset'<br>n_dimensions = 10<br>train = load_data(data_path, n_dimensions)<br># train.columns<br># &gt;&gt;&gt; Index(['label', 'qid', 'eid', 'features'], dtype='object')<br>```<br><br>### 3. fitting the model<br>```python<br>from cdl2r.models import CDFMRegressor<br><br># define your model<br>model = CDFMRegressor(n_factors=8, n_iterations=300, init_eta=1e-2)<br># fitting, printing out epoch losses if verbose is True<br>model.fit(train, verbose=True)<br>```<br><br>### 4. save the model<br>```python<br>import pickle<br><br>with open('/path/to/file.pkl', mode='wb') as fp:<br>    pickle.dump(model, fp)<br>```<br><br>### 5. make prediction<br>```python<br># loading test dataset<br>test = load_data(test_path, n_dimensions)<br>pred = model.predict(test)<br># pred.columns<br># &gt;&gt;&gt; Index(['pred_label', 'qid', 'eid', 'features'], dtype='object')<br>```<br><br>## development<br>### build Cython modules<br>```shell<br>$ python setup.py build_ext --inplace<br>```<br><br>### profiling<br>```shell<br># decorate a method with `@profile` in a script where you want to profile.<br>$ kernprof -l -v &lt;script&gt;.py<br>```<br><br>### pylint<br>- max-line-length: 130<br>- disable snake-case<br><br>### release<br>```shell<br># build<br>$ python setup.py bdist_whell<br><br># testing upload<br>$ twine upload --repository testpypi dist/&lt;cdl2r-version-pkg&gt;<br>$ pip install --index-url https://test.pypi.org/simple/&lt;cdl2r-version-pkg&gt;<br><br># upload<br>$ twine upload --repository pypi dist&lt;cdl2r-version-pkg&gt;<br>```<br><br><br>\n          </div>"}, "last_serial": 4615255, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e67c91ff00dc6f863b4d95422f3f143d", "sha256": "895888134da92248ac00baa27acbb1d6a82af4ac69b9b1a931de44a0d06bc73c"}, "downloads": -1, "filename": "cdl2r-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e67c91ff00dc6f863b4d95422f3f143d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17965, "upload_time": "2018-12-17T09:21:16", "upload_time_iso_8601": "2018-12-17T09:21:16.709349Z", "url": "https://files.pythonhosted.org/packages/3d/25/04ae85f53effc5b4298cfac2fcc2b30cb747a861c2bb29706994d19b4192/cdl2r-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2b43a236465824bb8bde907414470c57", "sha256": "1f447bd4607c97d94d20b79ade4d19d14bb649a49a647eac04d0b84a461c2daf"}, "downloads": -1, "filename": "cdl2r-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b43a236465824bb8bde907414470c57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18426, "upload_time": "2018-12-18T12:59:42", "upload_time_iso_8601": "2018-12-18T12:59:42.717038Z", "url": "https://files.pythonhosted.org/packages/61/3b/0dfc164c2f7c1ee5e03a4d0e7c5ef2909ce498998021fd41d4a505cc1cde/cdl2r-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e5b42973da349b38225fa569f30ae794", "sha256": "54ca7c0cab90838bb89a5344de16a41f3c6d760b591d07a1cc0ff51a2ce7e391"}, "downloads": -1, "filename": "cdl2r-0.1.2-cp36-cp36m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "e5b42973da349b38225fa569f30ae794", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 35376, "upload_time": "2018-12-19T06:19:43", "upload_time_iso_8601": "2018-12-19T06:19:43.937603Z", "url": "https://files.pythonhosted.org/packages/96/be/9c399c83d3667bd618d6f814911d2be229ca56f69ae7d77ea5ff9466d535/cdl2r-0.1.2-cp36-cp36m-macosx_10_14_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5b42973da349b38225fa569f30ae794", "sha256": "54ca7c0cab90838bb89a5344de16a41f3c6d760b591d07a1cc0ff51a2ce7e391"}, "downloads": -1, "filename": "cdl2r-0.1.2-cp36-cp36m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "e5b42973da349b38225fa569f30ae794", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 35376, "upload_time": "2018-12-19T06:19:43", "upload_time_iso_8601": "2018-12-19T06:19:43.937603Z", "url": "https://files.pythonhosted.org/packages/96/be/9c399c83d3667bd618d6f814911d2be229ca56f69ae7d77ea5ff9466d535/cdl2r-0.1.2-cp36-cp36m-macosx_10_14_x86_64.whl", "yanked": false}], "timestamp": "Thu May  7 22:34:56 2020"}