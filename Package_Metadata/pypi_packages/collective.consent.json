{"info": {"author": "Maik Derstappen", "author_email": "md@derico.de", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.0"], "description": "==================\ncollective.consent\n==================\n\nProvides a functionality to ask authenticated users for consent to different topics, before they can continue. One can add multiple consent items and define which user will have to give there consent based on there permission roles. Each of this users have to give the consent before they can continue to work.\n\n.. figure:: collective.consent-demo.gif\n\n   Demo\n\nThis is realized by viewlet which will check a list of consents for each user/consent_item combination and redirect the user to the consent item case they still have to give there consent.\n`Soup <https://pypi.org/project/souper/>`_\nInternally the consents are stored in a soup on the ConsentsContainer ('/consents') object.\n\n\nFeatures\n--------\n\n- Allows you to add multiple consent items (documents).\n- A consent item consists of a Title, Description, RichText and a custom button text.\n- Also you can define an update period, when the user has to give the consent again.\n- For every consent item one can choose the target permission roles and consent update period.\n- Users are only ask for consent on published consent items.\n- One can reset (invalidate) all existing consents for a consent item.\n\n\nToDo\n----\n\n- Add a global list of consents, sorted per user (maybe)\n- remove Anonymous from roles vocab, as we only support authenticated users\n\n\nInstallation\n------------\n\nInstall collective.consent by adding it to your buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        collective.consent\n\n\nand then running ``bin/buildout``, start Plone and activate the add-on in the add-on's control panel. Then add a ConsentContainer on the top-level (portal-root).\n\n\nThanks\n------\n\nInitial implementation by: Derico - https://derico.de\nSponsored by https://www.uni-giessen.de\n\n\nContributors\n------------\n\n- Maik Derstappen (MrTango) - md@derio.de\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/collective/collective.consent/issues\n- Source Code: https://github.com/collective/collective.consent\n\n\nSupport\n-------\n\nIf you are having issues, please let us know.\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n\nContributors\n============\n\n- Maik Derstappen, md@derico.de\n\n\nChangelog\n=========\n\n\n1.0b2 (2019-11-19)\n------------------\n\n- add plone.app.contenttypes as dependency\n  [MrTango]\n\n- sync travis config with tox config\n  [MrTango]\n\n- remove plone.app.contenttypes dependency and define RichText field our self.\n  [MrTango]\n\n- Add some german translations\n  [MrTango]\n\n- Fix i18n domain, add styles, refacture views, exclude consents container from nav\n  [MrTango]\n\n\n1.0b1 (2019-05-16)\n------------------\n\n- Initial release.\n  [MrTango]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/collective.consent", "keywords": "Python Plone", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "collective.consent", "package_url": "https://pypi.org/project/collective.consent/", "platform": "", "project_url": "https://pypi.org/project/collective.consent/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/collective.consent"}, "release_url": "https://pypi.org/project/collective.consent/1.0b2/", "requires_dist": null, "requires_python": "", "summary": "Provides a functionality to ask users for consent to different topics.", "version": "1.0b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Provides a functionality to ask authenticated users for consent to different topics, before they can continue. One can add multiple consent items and define which user will have to give there consent based on there permission roles. Each of this users have to give the consent before they can continue to work.</p>\n<div>\n<img alt=\"collective.consent-demo.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6908afdf15c8e4e7c625d238725f33c38b4544d/636f6c6c6563746976652e636f6e73656e742d64656d6f2e676966\">\n<p>Demo</p>\n</div>\n<p>This is realized by viewlet which will check a list of consents for each user/consent_item combination and redirect the user to the consent item case they still have to give there consent.\n<a href=\"https://pypi.org/project/souper/\" rel=\"nofollow\">Soup</a>\nInternally the consents are stored in a soup on the ConsentsContainer (\u2018/consents\u2019) object.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Allows you to add multiple consent items (documents).</li>\n<li>A consent item consists of a Title, Description, RichText and a custom button text.</li>\n<li>Also you can define an update period, when the user has to give the consent again.</li>\n<li>For every consent item one can choose the target permission roles and consent update period.</li>\n<li>Users are only ask for consent on published consent items.</li>\n<li>One can reset (invalidate) all existing consents for a consent item.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>ToDo</h2>\n<ul>\n<li>Add a global list of consents, sorted per user (maybe)</li>\n<li>remove Anonymous from roles vocab, as we only support authenticated users</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install collective.consent by adding it to your buildout:</p>\n<pre>[buildout]\n\n...\n\neggs =\n    collective.consent\n</pre>\n<p>and then running <tt>bin/buildout</tt>, start Plone and activate the add-on in the add-on\u2019s control panel. Then add a ConsentContainer on the top-level (portal-root).</p>\n</div>\n<div id=\"thanks\">\n<h2>Thanks</h2>\n<p>Initial implementation by: Derico - <a href=\"https://derico.de\" rel=\"nofollow\">https://derico.de</a>\nSponsored by <a href=\"https://www.uni-giessen.de\" rel=\"nofollow\">https://www.uni-giessen.de</a></p>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Maik Derstappen (MrTango) - <a href=\"mailto:md%40derio.de\">md<span>@</span>derio<span>.</span>de</a></li>\n</ul>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/collective/collective.consent/issues\" rel=\"nofollow\">https://github.com/collective/collective.consent/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/collective/collective.consent\" rel=\"nofollow\">https://github.com/collective/collective.consent</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you are having issues, please let us know.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The project is licensed under the GPLv2.</p>\n<div id=\"id1\">\n<h3>Contributors</h3>\n<ul>\n<li>Maik Derstappen, <a href=\"mailto:md%40derico.de\">md<span>@</span>derico<span>.</span>de</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"b2-2019-11-19\">\n<h2>1.0b2 (2019-11-19)</h2>\n<ul>\n<li>add plone.app.contenttypes as dependency\n[MrTango]</li>\n<li>sync travis config with tox config\n[MrTango]</li>\n<li>remove plone.app.contenttypes dependency and define RichText field our self.\n[MrTango]</li>\n<li>Add some german translations\n[MrTango]</li>\n<li>Fix i18n domain, add styles, refacture views, exclude consents container from nav\n[MrTango]</li>\n</ul>\n</div>\n<div id=\"b1-2019-05-16\">\n<h2>1.0b1 (2019-05-16)</h2>\n<ul>\n<li>Initial release.\n[MrTango]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6162817, "releases": {"1.0b1": [{"comment_text": "", "digests": {"md5": "a47555a18ac43315298c85e9dc5bae8f", "sha256": "4c81120f1ef13dcc58f2fc0201c8dc0951d1f9d35c9e15638675eb27a23a4627"}, "downloads": -1, "filename": "collective.consent-1.0b1.tar.gz", "has_sig": false, "md5_digest": "a47555a18ac43315298c85e9dc5bae8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20736, "upload_time": "2019-05-16T12:02:16", "upload_time_iso_8601": "2019-05-16T12:02:16.161058Z", "url": "https://files.pythonhosted.org/packages/b2/90/3436627a0783f6734f620d59f585ef23ed3f00c1b6f45f1389f79a21d759/collective.consent-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "5c41d05a3f394ef88487e610ab2ebcce", "sha256": "5286b3ee6734e9b2645cd6fc7b34f88abbe4e34bdd3292349d4bdea501cec3a6"}, "downloads": -1, "filename": "collective.consent-1.0b2.tar.gz", "has_sig": false, "md5_digest": "5c41d05a3f394ef88487e610ab2ebcce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23023, "upload_time": "2019-11-19T16:10:29", "upload_time_iso_8601": "2019-11-19T16:10:29.474132Z", "url": "https://files.pythonhosted.org/packages/bc/df/96a322698a49d9332a6cd86a5ec9ffc7de21b3684df4a2e364a18143a2d1/collective.consent-1.0b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c41d05a3f394ef88487e610ab2ebcce", "sha256": "5286b3ee6734e9b2645cd6fc7b34f88abbe4e34bdd3292349d4bdea501cec3a6"}, "downloads": -1, "filename": "collective.consent-1.0b2.tar.gz", "has_sig": false, "md5_digest": "5c41d05a3f394ef88487e610ab2ebcce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23023, "upload_time": "2019-11-19T16:10:29", "upload_time_iso_8601": "2019-11-19T16:10:29.474132Z", "url": "https://files.pythonhosted.org/packages/bc/df/96a322698a49d9332a6cd86a5ec9ffc7de21b3684df4a2e364a18143a2d1/collective.consent-1.0b2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:59 2020"}