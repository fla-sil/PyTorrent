{"info": {"author": "hfpython", "author_email": "hfpython@headfirstlabs.com", "bugtrack_url": null, "classifiers": [], "description": "This is Python version 3.5.0\n============================\n\nCopyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n2012, 2013, 2014, 2015 Python Software Foundation.  All rights reserved.\n\nPython 3.x is a new version of the language, which is incompatible with the\n2.x line of releases.  The language is mostly the same, but many details,\nespecially how built-in objects like dictionaries and strings work,\nhave changed considerably, and a lot of deprecated features have finally\nbeen removed.\n\n\nBuild Instructions\n------------------\n\nOn Unix, Linux, BSD, OSX, and Cygwin:\n\n    ./configure\n    make\n    make test\n    sudo make install\n\nThis will install Python as python3.\n\nYou can pass many options to the configure script; run \"./configure --help\" to\nfind out more.  On OSX and Cygwin, the executable is called python.exe;\nelsewhere it's just python.\n\nOn Mac OS X, if you have configured Python with --enable-framework, you should\nuse \"make frameworkinstall\" to do the installation.  Note that this installs\nthe Python executable in a place that is not normally on your PATH, you may\nwant to set up a symlink in /usr/local/bin.\n\nOn Windows, see PCbuild/readme.txt.\n\nIf you wish, you can create a subdirectory and invoke configure from there.\nFor example:\n\n    mkdir debug\n    cd debug\n    ../configure --with-pydebug\n    make\n    make test\n\n(This will fail if you *also* built at the top-level directory.\nYou should do a \"make clean\" at the toplevel first.)\n\n\nWhat's New\n----------\n\nWe have a comprehensive overview of the changes in the \"What's New in\nPython 3.5\" document, found at\n\n    http://docs.python.org/3.5/whatsnew/3.5.html\n\nFor a more detailed change log, read Misc/NEWS (though this file, too,\nis incomplete, and also doesn't list anything merged in from the 2.7\nrelease under development).\n\nIf you want to install multiple versions of Python see the section below\nentitled \"Installing multiple versions\".\n\n\nDocumentation\n-------------\n\nDocumentation for Python 3.5 is online, updated daily:\n\n    http://docs.python.org/3.5/\n\nIt can also be downloaded in many formats for faster access.  The documentation\nis downloadable in HTML, PDF, and reStructuredText formats; the latter version\nis primarily for documentation authors, translators, and people with special\nformatting requirements.\n\nIf you would like to contribute to the development of Python, relevant\ndocumentation is available at:\n\n    http://docs.python.org/devguide/\n\nFor information about building Python's documentation, refer to Doc/README.txt.\n\n\nConverting From Python 2.x to 3.x\n---------------------------------\n\nPython starting with 2.6 contains features to help locating code that needs to\nbe changed, such as optional warnings when deprecated features are used, and\nbackported versions of certain key Python 3.x features.\n\nA source-to-source translation tool, \"2to3\", can take care of the mundane task\nof converting large amounts of source code.  It is not a complete solution but\nis complemented by the deprecation warnings in 2.6.  See\nhttp://docs.python.org/3.5/library/2to3.html for more information.\n\n\nTesting\n-------\n\nTo test the interpreter, type \"make test\" in the top-level directory.\nThe test set produces some output.  You can generally ignore the messages\nabout skipped tests due to optional features which can't be imported.\nIf a message is printed about a failed test or a traceback or core dump\nis produced, something is wrong.\n\nBy default, tests are prevented from overusing resources like disk space and\nmemory.  To enable these tests, run \"make testall\".\n\nIMPORTANT: If the tests fail and you decide to mail a bug report, *don't*\ninclude the output of \"make test\".  It is useless.  Run the failing test\nmanually, as follows:\n\n        ./python -m test -v test_whatever\n\n(substituting the top of the source tree for '.' if you built in a different\ndirectory).  This runs the test in verbose mode.\n\n\nInstalling multiple versions\n----------------------------\n\nOn Unix and Mac systems if you intend to install multiple versions of Python\nusing the same installation prefix (--prefix argument to the configure script)\nyou must take care that your primary python executable is not overwritten by\nthe installation of a different version.  All files and directories installed\nusing \"make altinstall\" contain the major and minor version and can thus live\nside-by-side.  \"make install\" also creates ${prefix}/bin/python3 which refers\nto ${prefix}/bin/pythonX.Y.  If you intend to install multiple versions using\nthe same prefix you must decide which version (if any) is your \"primary\"\nversion.  Install that version using \"make install\".  Install all other\nversions using \"make altinstall\".\n\nFor example, if you want to install Python 2.6, 2.7 and 3.5 with 2.7 being the\nprimary version, you would execute \"make install\" in your 2.7 build directory\nand \"make altinstall\" in the others.\n\n\nIssue Tracker and Mailing List\n------------------------------\n\nWe're soliciting bug reports about all aspects of the language.  Fixes are also\nwelcome, preferably in unified diff format.  Please use the issue tracker:\n\n    http://bugs.python.org/\n\nIf you're not sure whether you're dealing with a bug or a feature, use the\nmailing list:\n\n    python-dev@python.org\n\nTo subscribe to the list, use the mailman form:\n\n    http://mail.python.org/mailman/listinfo/python-dev/\n\n\nProposals for enhancement\n-------------------------\n\nIf you have a proposal to change Python, you may want to send an email to the\ncomp.lang.python or python-ideas mailing lists for inital feedback.  A Python\nEnhancement Proposal (PEP) may be submitted if your idea gains ground.  All\ncurrent PEPs, as well as guidelines for submitting a new PEP, are listed at\nhttp://www.python.org/dev/peps/.\n\n\nRelease Schedule\n----------------\n\nSee PEP 478 for release details: http://www.python.org/dev/peps/pep-0478/\n\n\nCopyright and License Information\n---------------------------------\n\nCopyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n2012, 2013, 2014, 2015 Python Software Foundation.  All rights reserved.\n\nCopyright (c) 2000 BeOpen.com.  All rights reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.  All\nrights reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.\n\nSee the file \"LICENSE\" for information on the history of this software,\nterms & conditions for usage, and a DISCLAIMER OF ALL WARRANTIES.\n\nThis Python distribution contains *no* GNU General Public License (GPL) code,\nso it may be used in proprietary projects.  There are interfaces to some GNU\ncode but these are entirely optional.\n\nAll trademarks referenced herein are property of their respective holders.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.headfirstlabs.com", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "tian_nester", "package_url": "https://pypi.org/project/tian_nester/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tian_nester/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.headfirstlabs.com"}, "release_url": "https://pypi.org/project/tian_nester/1.2.0/", "requires_dist": null, "requires_python": null, "summary": "A simple printer of nested lists", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n2012, 2013, 2014, 2015 Python Software Foundation.  All rights reserved.</p>\n<p>Python 3.x is a new version of the language, which is incompatible with the\n2.x line of releases.  The language is mostly the same, but many details,\nespecially how built-in objects like dictionaries and strings work,\nhave changed considerably, and a lot of deprecated features have finally\nbeen removed.</p>\n<div id=\"build-instructions\">\n<h2>Build Instructions</h2>\n<p>On Unix, Linux, BSD, OSX, and Cygwin:</p>\n<blockquote>\n./configure\nmake\nmake test\nsudo make install</blockquote>\n<p>This will install Python as python3.</p>\n<p>You can pass many options to the configure script; run \u201c./configure \u2013help\u201d to\nfind out more.  On OSX and Cygwin, the executable is called python.exe;\nelsewhere it\u2019s just python.</p>\n<p>On Mac OS X, if you have configured Python with \u2013enable-framework, you should\nuse \u201cmake frameworkinstall\u201d to do the installation.  Note that this installs\nthe Python executable in a place that is not normally on your PATH, you may\nwant to set up a symlink in /usr/local/bin.</p>\n<p>On Windows, see PCbuild/readme.txt.</p>\n<p>If you wish, you can create a subdirectory and invoke configure from there.\nFor example:</p>\n<blockquote>\nmkdir debug\ncd debug\n../configure \u2013with-pydebug\nmake\nmake test</blockquote>\n<p>(This will fail if you <em>also</em> built at the top-level directory.\nYou should do a \u201cmake clean\u201d at the toplevel first.)</p>\n</div>\n<div id=\"what-s-new\">\n<h2>What\u2019s New</h2>\n<p>We have a comprehensive overview of the changes in the \u201cWhat\u2019s New in\nPython 3.5\u201d document, found at</p>\n<blockquote>\n<a href=\"http://docs.python.org/3.5/whatsnew/3.5.html\" rel=\"nofollow\">http://docs.python.org/3.5/whatsnew/3.5.html</a></blockquote>\n<p>For a more detailed change log, read Misc/NEWS (though this file, too,\nis incomplete, and also doesn\u2019t list anything merged in from the 2.7\nrelease under development).</p>\n<p>If you want to install multiple versions of Python see the section below\nentitled \u201cInstalling multiple versions\u201d.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation for Python 3.5 is online, updated daily:</p>\n<blockquote>\n<a href=\"http://docs.python.org/3.5/\" rel=\"nofollow\">http://docs.python.org/3.5/</a></blockquote>\n<p>It can also be downloaded in many formats for faster access.  The documentation\nis downloadable in HTML, PDF, and reStructuredText formats; the latter version\nis primarily for documentation authors, translators, and people with special\nformatting requirements.</p>\n<p>If you would like to contribute to the development of Python, relevant\ndocumentation is available at:</p>\n<blockquote>\n<a href=\"http://docs.python.org/devguide/\" rel=\"nofollow\">http://docs.python.org/devguide/</a></blockquote>\n<p>For information about building Python\u2019s documentation, refer to Doc/README.txt.</p>\n</div>\n<div id=\"converting-from-python-2-x-to-3-x\">\n<h2>Converting From Python 2.x to 3.x</h2>\n<p>Python starting with 2.6 contains features to help locating code that needs to\nbe changed, such as optional warnings when deprecated features are used, and\nbackported versions of certain key Python 3.x features.</p>\n<p>A source-to-source translation tool, \u201c2to3\u201d, can take care of the mundane task\nof converting large amounts of source code.  It is not a complete solution but\nis complemented by the deprecation warnings in 2.6.  See\n<a href=\"http://docs.python.org/3.5/library/2to3.html\" rel=\"nofollow\">http://docs.python.org/3.5/library/2to3.html</a> for more information.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To test the interpreter, type \u201cmake test\u201d in the top-level directory.\nThe test set produces some output.  You can generally ignore the messages\nabout skipped tests due to optional features which can\u2019t be imported.\nIf a message is printed about a failed test or a traceback or core dump\nis produced, something is wrong.</p>\n<p>By default, tests are prevented from overusing resources like disk space and\nmemory.  To enable these tests, run \u201cmake testall\u201d.</p>\n<p>IMPORTANT: If the tests fail and you decide to mail a bug report, <em>don\u2019t</em>\ninclude the output of \u201cmake test\u201d.  It is useless.  Run the failing test\nmanually, as follows:</p>\n<blockquote>\n./python -m test -v test_whatever</blockquote>\n<p>(substituting the top of the source tree for \u2018.\u2019 if you built in a different\ndirectory).  This runs the test in verbose mode.</p>\n</div>\n<div id=\"installing-multiple-versions\">\n<h2>Installing multiple versions</h2>\n<p>On Unix and Mac systems if you intend to install multiple versions of Python\nusing the same installation prefix (\u2013prefix argument to the configure script)\nyou must take care that your primary python executable is not overwritten by\nthe installation of a different version.  All files and directories installed\nusing \u201cmake altinstall\u201d contain the major and minor version and can thus live\nside-by-side.  \u201cmake install\u201d also creates ${prefix}/bin/python3 which refers\nto ${prefix}/bin/pythonX.Y.  If you intend to install multiple versions using\nthe same prefix you must decide which version (if any) is your \u201cprimary\u201d\nversion.  Install that version using \u201cmake install\u201d.  Install all other\nversions using \u201cmake altinstall\u201d.</p>\n<p>For example, if you want to install Python 2.6, 2.7 and 3.5 with 2.7 being the\nprimary version, you would execute \u201cmake install\u201d in your 2.7 build directory\nand \u201cmake altinstall\u201d in the others.</p>\n</div>\n<div id=\"issue-tracker-and-mailing-list\">\n<h2>Issue Tracker and Mailing List</h2>\n<p>We\u2019re soliciting bug reports about all aspects of the language.  Fixes are also\nwelcome, preferably in unified diff format.  Please use the issue tracker:</p>\n<blockquote>\n<a href=\"http://bugs.python.org/\" rel=\"nofollow\">http://bugs.python.org/</a></blockquote>\n<p>If you\u2019re not sure whether you\u2019re dealing with a bug or a feature, use the\nmailing list:</p>\n<blockquote>\n<a href=\"mailto:python-dev%40python.org\">python-dev<span>@</span>python<span>.</span>org</a></blockquote>\n<p>To subscribe to the list, use the mailman form:</p>\n<blockquote>\n<a href=\"http://mail.python.org/mailman/listinfo/python-dev/\" rel=\"nofollow\">http://mail.python.org/mailman/listinfo/python-dev/</a></blockquote>\n</div>\n<div id=\"proposals-for-enhancement\">\n<h2>Proposals for enhancement</h2>\n<p>If you have a proposal to change Python, you may want to send an email to the\ncomp.lang.python or python-ideas mailing lists for inital feedback.  A Python\nEnhancement Proposal (PEP) may be submitted if your idea gains ground.  All\ncurrent PEPs, as well as guidelines for submitting a new PEP, are listed at\n<a href=\"http://www.python.org/dev/peps/\" rel=\"nofollow\">http://www.python.org/dev/peps/</a>.</p>\n</div>\n<div id=\"release-schedule\">\n<h2>Release Schedule</h2>\n<p>See PEP 478 for release details: <a href=\"http://www.python.org/dev/peps/pep-0478/\" rel=\"nofollow\">http://www.python.org/dev/peps/pep-0478/</a></p>\n</div>\n<div id=\"copyright-and-license-information\">\n<h2>Copyright and License Information</h2>\n<p>Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n2012, 2013, 2014, 2015 Python Software Foundation.  All rights reserved.</p>\n<p>Copyright (c) 2000 BeOpen.com.  All rights reserved.</p>\n<p>Copyright (c) 1995-2001 Corporation for National Research Initiatives.  All\nrights reserved.</p>\n<p>Copyright (c) 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.</p>\n<p>See the file \u201cLICENSE\u201d for information on the history of this software,\nterms &amp; conditions for usage, and a DISCLAIMER OF ALL WARRANTIES.</p>\n<p>This Python distribution contains <em>no</em> GNU General Public License (GPL) code,\nso it may be used in proprietary projects.  There are interfaces to some GNU\ncode but these are entirely optional.</p>\n<p>All trademarks referenced herein are property of their respective holders.</p>\n</div>\n\n          </div>"}, "last_serial": 2018626, "releases": {"1.0.0": [], "1.1.0": [{"comment_text": "", "digests": {"md5": "fd0edde440461d53c598e7d962a1e505", "sha256": "6533b2f4695fdd011be248441813823145209621a592871a18627c11603d9095"}, "downloads": -1, "filename": "tian_nester-1.1.0.zip", "has_sig": false, "md5_digest": "fd0edde440461d53c598e7d962a1e505", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1058, "upload_time": "2016-03-19T13:39:00", "upload_time_iso_8601": "2016-03-19T13:39:00.441573Z", "url": "https://files.pythonhosted.org/packages/fe/af/9b8a1bbb1833533f385568e22977c1544f8ea40f3a9098410c8c581775bd/tian_nester-1.1.0.zip", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "621d644791e9e4d43129930cabe80873", "sha256": "b52729039c502cc2bcaf73082bd074b95e82a021d1a94018a4f9398e5c716f5e"}, "downloads": -1, "filename": "tian_nester-1.2.0.zip", "has_sig": false, "md5_digest": "621d644791e9e4d43129930cabe80873", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3340, "upload_time": "2016-03-21T13:21:19", "upload_time_iso_8601": "2016-03-21T13:21:19.763936Z", "url": "https://files.pythonhosted.org/packages/e2/63/125bf373aba530838f2320d7015fdbad7e8a05c613a1c4b0bc0073ed9bdf/tian_nester-1.2.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "621d644791e9e4d43129930cabe80873", "sha256": "b52729039c502cc2bcaf73082bd074b95e82a021d1a94018a4f9398e5c716f5e"}, "downloads": -1, "filename": "tian_nester-1.2.0.zip", "has_sig": false, "md5_digest": "621d644791e9e4d43129930cabe80873", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3340, "upload_time": "2016-03-21T13:21:19", "upload_time_iso_8601": "2016-03-21T13:21:19.763936Z", "url": "https://files.pythonhosted.org/packages/e2/63/125bf373aba530838f2320d7015fdbad7e8a05c613a1c4b0bc0073ed9bdf/tian_nester-1.2.0.zip", "yanked": false}], "timestamp": "Fri May  8 02:53:33 2020"}