{"info": {"author": "sysid", "author_email": "sysid@gmx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP"], "description": "# Server Sent Events for [Starlette](https://github.com/encode/starlette)\n\nInstallation:\n\n```shell\npip install sse-starlette\n```\n\nUsage:\n\n```python\nimport asyncio\nimport uvicorn\nfrom starlette.applications import Starlette\nfrom starlette.routing import Route\nfrom sse_starlette.sse import EventSourceResponse\n\nasync def numbers(minimum, maximum):\n    for i in range(minimum, maximum + 1):\n        await asyncio.sleep(0.9)\n        yield dict(data=i)\n\nasync def sse(request):\n    generator = numbers(1, 5)\n    return EventSourceResponse(generator)\n\nroutes = [\n    Route(\"/\", endpoint=sse)\n]\n\napp = Starlette(debug=True, routes=routes)\n\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000, log_level='info')\n```\n\nOutput:  \n![output](output.png)\n\n**Caveat:** SSE streaming does not work in combination with GZipMiddleware.\n\nBe aware that for proper server shutdown the application must stop all\nrunning tasks (generators). Otherwise you might experience the following warnings\nat shutdown: `Waiting for background tasks to complete. (CTRL+C to force quit)`.\n\nClient disconnects need to be handled in the Request handler (see example.py):\n```python\nasync def endless(req: Request):\n    async def event_publisher():\n        i = 0\n        while True:\n            disconnected = await req.is_disconnected()\n            if disconnected:\n                _log.info(f\"Disconnecting client {req.client}\")\n                break\n            i += 1\n            yield dict(data=i)\n            await asyncio.sleep(0.2)\n        _log.info(f\"Disconnected from client {req.client}\")\n\n    return EventSourceResponse(event_publisher())\n```\n\nRun the tests:\n```python\nmake test\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sysid/sse-starlette", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sse-starlette", "package_url": "https://pypi.org/project/sse-starlette/", "platform": "", "project_url": "https://pypi.org/project/sse-starlette/", "project_urls": {"Homepage": "https://github.com/sysid/sse-starlette"}, "release_url": "https://pypi.org/project/sse-starlette/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "SSE plugin for Starlette", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Server Sent Events for <a href=\"https://github.com/encode/starlette\" rel=\"nofollow\">Starlette</a></h1>\n<p>Installation:</p>\n<pre>pip install sse-starlette\n</pre>\n<p>Usage:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uvicorn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">starlette.applications</span> <span class=\"kn\">import</span> <span class=\"n\">Starlette</span>\n<span class=\"kn\">from</span> <span class=\"nn\">starlette.routing</span> <span class=\"kn\">import</span> <span class=\"n\">Route</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sse_starlette.sse</span> <span class=\"kn\">import</span> <span class=\"n\">EventSourceResponse</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">numbers</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"p\">,</span> <span class=\"n\">maximum</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">minimum</span><span class=\"p\">,</span> <span class=\"n\">maximum</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.9</span><span class=\"p\">)</span>\n        <span class=\"k\">yield</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">sse</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">EventSourceResponse</span><span class=\"p\">(</span><span class=\"n\">generator</span><span class=\"p\">)</span>\n\n<span class=\"n\">routes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">Route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"n\">sse</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Starlette</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">routes</span><span class=\"o\">=</span><span class=\"n\">routes</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">uvicorn</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8000</span><span class=\"p\">,</span> <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s1\">'info'</span><span class=\"p\">)</span>\n</pre>\n<p>Output:<br>\n<img alt=\"output\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/919c0dd749850777879d8819237f0ea03c25c0e9/6f75747075742e706e67\"></p>\n<p><strong>Caveat:</strong> SSE streaming does not work in combination with GZipMiddleware.</p>\n<p>Be aware that for proper server shutdown the application must stop all\nrunning tasks (generators). Otherwise you might experience the following warnings\nat shutdown: <code>Waiting for background tasks to complete. (CTRL+C to force quit)</code>.</p>\n<p>Client disconnects need to be handled in the Request handler (see example.py):</p>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">endless</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">event_publisher</span><span class=\"p\">():</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">disconnected</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">is_disconnected</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">disconnected</span><span class=\"p\">:</span>\n                <span class=\"n\">_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Disconnecting client </span><span class=\"si\">{</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n                <span class=\"k\">break</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">yield</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n        <span class=\"n\">_log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Disconnected from client </span><span class=\"si\">{</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">EventSourceResponse</span><span class=\"p\">(</span><span class=\"n\">event_publisher</span><span class=\"p\">())</span>\n</pre>\n<p>Run the tests:</p>\n<pre><span class=\"n\">make</span> <span class=\"n\">test</span>\n</pre>\n\n          </div>"}, "last_serial": 7086890, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "42dafff48b6910f3be37f589a9d4626d", "sha256": "2c357644a1732d680247f46ebc98f4aa4c3ea1d14b3dc1420567a4eca04ccb7e"}, "downloads": -1, "filename": "sse-starlette-0.1.0.tar.gz", "has_sig": false, "md5_digest": "42dafff48b6910f3be37f589a9d4626d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4140, "upload_time": "2020-02-21T12:42:33", "upload_time_iso_8601": "2020-02-21T12:42:33.805402Z", "url": "https://files.pythonhosted.org/packages/de/41/1d5fe911be92898047c67cb39ee1ffe3dc5ff524c782a3ddb6258294f5a1/sse-starlette-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d9bd0a07a79d37d2bb90058c70f08e64", "sha256": "8867debaceaf72cfb6d562ce5950b8369213f036ba0c6fdd3c957d66efd6db8f"}, "downloads": -1, "filename": "sse-starlette-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d9bd0a07a79d37d2bb90058c70f08e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4472, "upload_time": "2020-02-21T14:34:52", "upload_time_iso_8601": "2020-02-21T14:34:52.769770Z", "url": "https://files.pythonhosted.org/packages/df/32/cda901e684c1ece4ce20aa2ae9a1dddd9c12ef3a39715680d2773e01babc/sse-starlette-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "544f08c5e298dfc7a2ee982c1bd941eb", "sha256": "6456050e9f4e1daba7351e97376ed0fc1e9e2a30eb357fc711c5b63b8eaef3c4"}, "downloads": -1, "filename": "sse-starlette-0.2.1.tar.gz", "has_sig": false, "md5_digest": "544f08c5e298dfc7a2ee982c1bd941eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4466, "upload_time": "2020-02-21T14:49:29", "upload_time_iso_8601": "2020-02-21T14:49:29.552890Z", "url": "https://files.pythonhosted.org/packages/cf/c5/dfab7a2795880c4b9962221ee3783096cba0f5df75b16389e068bc8370d9/sse-starlette-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "63131e0e9bd828c455e5545c14ce0981", "sha256": "562cdf46ecfe9681eef5a03c2bb32528b87d891985b104190f1dd8f895d0deb4"}, "downloads": -1, "filename": "sse-starlette-0.2.2.tar.gz", "has_sig": false, "md5_digest": "63131e0e9bd828c455e5545c14ce0981", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4475, "upload_time": "2020-02-21T15:03:08", "upload_time_iso_8601": "2020-02-21T15:03:08.974492Z", "url": "https://files.pythonhosted.org/packages/56/ca/8265157666f185774e9bf6f2e94645e66f702f77fb18d5114daa06301090/sse-starlette-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4187d44af4838356c198693f23e1a04d", "sha256": "2a672fb07c27485b869ad0b5f8e3978ddf9bac798784edbf322be78e54527b6f"}, "downloads": -1, "filename": "sse-starlette-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4187d44af4838356c198693f23e1a04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4680, "upload_time": "2020-04-23T16:24:19", "upload_time_iso_8601": "2020-04-23T16:24:19.837265Z", "url": "https://files.pythonhosted.org/packages/c4/d5/6b18ed32881f31d0bdbeeb4bdaf2cb54e88299a23cdbb733a901ed9a48b3/sse-starlette-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "21624a95421b08600f68038edc019403", "sha256": "c7d43dd9093c5613b1de3b87c307e066a3ab1e173e21dae470fc1de1e31dbbf6"}, "downloads": -1, "filename": "sse-starlette-0.3.1.tar.gz", "has_sig": false, "md5_digest": "21624a95421b08600f68038edc019403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5053, "upload_time": "2020-04-23T19:47:52", "upload_time_iso_8601": "2020-04-23T19:47:52.357953Z", "url": "https://files.pythonhosted.org/packages/dc/37/37843218ae6838a1f9d1f813188c635cb041d3203b3bf43eb08e19c0cb46/sse-starlette-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21624a95421b08600f68038edc019403", "sha256": "c7d43dd9093c5613b1de3b87c307e066a3ab1e173e21dae470fc1de1e31dbbf6"}, "downloads": -1, "filename": "sse-starlette-0.3.1.tar.gz", "has_sig": false, "md5_digest": "21624a95421b08600f68038edc019403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5053, "upload_time": "2020-04-23T19:47:52", "upload_time_iso_8601": "2020-04-23T19:47:52.357953Z", "url": "https://files.pythonhosted.org/packages/dc/37/37843218ae6838a1f9d1f813188c635cb041d3203b3bf43eb08e19c0cb46/sse-starlette-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:13 2020"}