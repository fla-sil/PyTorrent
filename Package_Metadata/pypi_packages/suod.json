{"info": {"author": "Yue Zhao", "author_email": "zhaoy@cmu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "SUOD: A Scalable Unsupervised Outlier Detection Framework\n=========================================================\n\n**Deployment & Documentation & Stats**\n\n.. image:: https://img.shields.io/pypi/v/suod.svg?color=brightgreen\n   :target: https://pypi.org/project/suod/\n   :alt: PyPI version\n\n\n.. image:: https://readthedocs.org/projects/suod/badge/?version=latest\n   :target: https://suod.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n\n.. image:: https://img.shields.io/github/stars/yzhao062/suod.svg\n   :target: https://github.com/yzhao062/suod/stargazers\n   :alt: GitHub stars\n\n\n.. image:: https://img.shields.io/github/forks/yzhao062/suod.svg?color=blue\n   :target: https://github.com/yzhao062/suod/network\n   :alt: GitHub forks\n\n\n.. image:: https://pepy.tech/badge/suod\n   :target: https://pepy.tech/project/suod\n   :alt: Downloads\n\n\n.. image:: https://pepy.tech/badge/suod/month\n   :target: https://pepy.tech/project/suod\n   :alt: Downloads\n\n\n----\n\n\n**Build Status & Coverage & Maintainability & License**\n\n\n.. image:: https://travis-ci.org/yzhao062/suod.svg?branch=master\n   :target: https://travis-ci.org/yzhao062/suod\n   :alt: Build Status\n\n\n.. image:: https://circleci.com/gh/yzhao062/SUOD.svg?style=svg\n   :target: https://circleci.com/gh/yzhao062/SUOD\n   :alt: Circle CI\n\n\n.. image:: https://ci.appveyor.com/api/projects/status/5kp8psvntp5m1d6m/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/yzhao062/combo/branch/master\n   :alt: Appveyor\n\n\n.. image:: https://coveralls.io/repos/github/yzhao062/SUOD/badge.svg\n   :target: https://coveralls.io/github/yzhao062/SUOD\n   :alt: Coverage Status\n\n.. image:: https://img.shields.io/github/license/yzhao062/suod.svg\n   :target: https://github.com/yzhao062/suod/blob/master/LICENSE\n   :alt: License\n\n\n----\n\n\n**SUOD** (**S**\\calable **U**\\nsupervised **O**\\utlier **D**\\etection) is an **acceleration framework for large-scale unsupervised outlier detector training and prediction**.\nNotably, anomaly detection is often formulated as an unsupervised problem since the ground truth is expensive to acquire.\nTo compensate for the unstable nature of unsupervised algorithms, practitioners often build a large number of models for further combination and analysis, e.g., taking the average or majority vote.\n**However, this poses scalability challenges in high-dimensional, large datasets**, especially for proximity-base models operating in Euclidean space.\n\n**SUOD** is therefore proposed to address the challenge at three complementary levels:  random projection (**data level**), pseudo-supervised approximation (**model level**), and balanced parallel scheduling (**system level**).\nAs mentioned, the key focus is to **accelerate the training and prediction when a large number of anomaly detectors are presented**, while preserving the prediction capacity.\nSince its inception in Jan 2019, SUOD has been successfully used in various academic researches and industry applications, include PyOD [#Zhao2019PyOD]_ and `IQVIA <https://www.iqvia.com/>`_ medical claim analysis.\n\n\n.. image:: https://raw.githubusercontent.com/yzhao062/SUOD/master/figs/system_overview.png\n   :target: https://raw.githubusercontent.com/yzhao062/SUOD/master/figs/system_overview.png\n   :alt: SUOD Flowchart\n\nSUOD is featured for:\n\n* **Unified APIs, detailed documentation, and examples** for the easy use.\n* **Optimized performance with JIT and parallelization** when possible, using `numba <https://github.com/numba/numba>`_ and `joblib <https://github.com/joblib/joblib>`_.\n* **Fully compatible with the models in PyOD**.\n* **Customizable modules and flexible design**: each module may be turned on/off or totally replaced by custom functions.\n\n----\n\n**API Demo**\\ :\n\n\n   .. code-block:: python\n\n\n       from suod.models.base import SUOD\n\n       # initialize a set of base outlier detectors to train and predict on\n       base_estimators = [\n           LOF(n_neighbors=5, contamination=contamination),\n           LOF(n_neighbors=15, contamination=contamination),\n           LOF(n_neighbors=25, contamination=contamination),\n           HBOS(contamination=contamination),\n           PCA(contamination=contamination),\n           OCSVM(contamination=contamination),\n           KNN(n_neighbors=5, contamination=contamination),\n           KNN(n_neighbors=15, contamination=contamination),\n           KNN(n_neighbors=25, contamination=contamination)]\n\n       # initialize a SUOD model with all features turned on\n       model = SUOD(base_estimators=base_estimators, n_jobs=6,  # number of workers\n                    rp_flag_global=True,  # global flag for random projection\n                    bps_flag=True,  # global flag for balanced parallel scheduling\n                    approx_flag_global=False,  # global flag for model approximation\n                    contamination=contamination)\n\n       model.fit(X_train)  # fit all models with X\n       model.approximate(X_train)  # conduct model approximation if it is enabled\n       predicted_labels = model.predict(X_test)  # predict labels\n       predicted_scores = model.decision_function(X_test)  # predict scores\n       predicted_probs = model.predict_proba(X_test)  # predict outlying probability\n\n----\n\nA preliminary version (`accepted at AAAI-20 Security Workshop <http://aics.site/AICS2020/>`_) can be accessed on `arxiv <https://www.andrew.cmu.edu/user/yuezhao2/papers/20-preprint-suod.pdf>`_.\nThe extended version (under submission at `KDD 2020 (ADS track) <https://www.kdd.org/kdd2020/>`_) can be accessed `here <http://www.andrew.cmu.edu/user/yuezhao2/papers/20-kdd-insubmission-suod.pdf>`_.\n\n\nIf you use SUOD in a scientific publication, we would appreciate citations to the following paper::\n\n    @inproceedings{zhao2020suod,\n      author  = {Zhao, Yue and Ding, Xueying and Yang, Jianing and Haoping Bai},\n      title   = {{SUOD}: Toward Scalable Unsupervised Outlier Detection},\n      journal = {Workshops at the Thirty-Fourth AAAI Conference on Artificial Intelligence},\n      year    = {2020}\n    }\n\n::\n\n    Yue Zhao, Xueying Ding, Jianing Yang, Haoping Bai, \"Toward Scalable Unsupervised Outlier Detection\". Workshops at the Thirty-Fourth AAAI Conference on Artificial Intelligence, 2020.\n\n\n**Table of Contents**\\ :\n\n\n* `Installation <#installation>`_\n* `API Cheatsheet & Reference <#api-cheatsheet--reference>`_\n* `Examples <#examples>`_\n\n\n------------\n\n\nInstallation\n^^^^^^^^^^^^\n\nIt is recommended to use **pip** for installation. Please make sure\n**the latest version** is installed, as suod is updated frequently:\n\n.. code-block:: bash\n\n   pip install suod            # normal install\n   pip install --upgrade suod  # or update if needed\n   pip install --pre suod      # or include pre-release version for new features\n\nAlternatively, you could clone and run setup.py file:\n\n.. code-block:: bash\n\n   git clone https://github.com/yzhao062/suod.git\n   cd suod\n   pip install .\n\n\n**Required Dependencies**\\ :\n\n\n* Python 3.5, 3.6, or 3.7\n* joblib\n* numpy>=1.13\n* pandas (**optional for building the cost forecast model**)\n* pyod\n* scipy>=0.19.1\n* scikit_learn>=0.19.1\n\n\n**Note on Python 2**\\ :\nThe maintenance of Python 2.7 will be stopped by January 1, 2020 (see `official announcement <https://github.com/python/devguide/pull/344>`_).\nTo be consistent with the Python change and suod's dependent libraries, e.g., scikit-learn,\n**SUOD only supports Python 3.5+** and we encourage you to use\nPython 3.5 or newer for the latest functions and bug fixes. More information can\nbe found at `Moving to require Python 3 <https://python3statement.org/>`_.\n\n\n------------\n\n\nAPI Cheatsheet & Reference\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFull API Reference: (https://suod.readthedocs.io/en/latest/api.html).\n\n* **fit(X, y)**\\ : Fit estimator. y is optional for unsupervised methods.\n* **approximate(X)**\\ : Use supervised models to approximate unsupervised base detectors. Fit should be invoked first.\n* **predict(X)**\\ : Predict on a particular sample once the estimator is fitted.\n* **predict_proba(X)**\\ : Predict the probability of a sample belonging to each class once the estimator is fitted.\n\n\nExamples\n^^^^^^^^\n\nAll three modules can be **executed separately** and the demo codes are in /examples/module_examples/{M1_RP, M2_BPS, and M3_PSA}.\nFor instance, you could navigate to /M1_RP/demo_random_projection.py. Demo codes all start with \"demo_*.py\".\n\n**The examples for the full framework** can be found under /examples folder; run \"demo_base.py\" for\na simplified example. Run \"demo_full.py\" for a full example.\n\nIt is noted the best performance may be achieved with multiple cores available.\n\n------------\n\n\n**More to come...**\nLast updated on April 20th, 2020.\n\nFeel free to star for the future update :)\n\n----\n\nReferences\n----------\n\n.. [#Johnson1984Extensions] Johnson, W.B. and Lindenstrauss, J., 1984. Extensions of Lipschitz mappings into a Hilbert space. *Contemporary mathematics*, 26(189-206), p.1.\n\n.. [#Zhao2019PyOD] Zhao, Y., Nasrullah, Z. and Li, Z., 2019. PyOD: A Python Toolbox for Scalable Outlier Detection. *Journal of Machine Learning Research*, 20, pp.1-7.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/yzhao062/suod/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yzhao062/suod", "keywords": "ensemble learning,anomaly detection,outlier ensembles,data mining,machine learning,python", "license": "", "maintainer": "", "maintainer_email": "", "name": "suod", "package_url": "https://pypi.org/project/suod/", "platform": "", "project_url": "https://pypi.org/project/suod/", "project_urls": {"Download": "https://github.com/yzhao062/suod/archive/master.zip", "Homepage": "https://github.com/yzhao062/suod"}, "release_url": "https://pypi.org/project/suod/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A Scalable Framework for Unsupervised Outlier Detection (Anomaly Detection)", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Deployment &amp; Documentation &amp; Stats</strong></p>\n<a href=\"https://pypi.org/project/suod/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18eee0b4b7caec293e19f30b4f8f2b539a48390d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73756f642e7376673f636f6c6f723d627269676874677265656e\"></a>\n<a href=\"https://suod.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/613ac03dc31f6499871efcde79f01055af2145b5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73756f642f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/yzhao062/suod/stargazers\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28d489c7ea1905ff1f0cd46049a04c5688fe61c9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f797a68616f3036322f73756f642e737667\"></a>\n<a href=\"https://github.com/yzhao062/suod/network\" rel=\"nofollow\"><img alt=\"GitHub forks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1a10c52a3de426cb11788c4a2ff37d2e27618fe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f797a68616f3036322f73756f642e7376673f636f6c6f723d626c7565\"></a>\n<a href=\"https://pepy.tech/project/suod\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f942f62bac5e6ef6e7b7ae08369836b997277b52/68747470733a2f2f706570792e746563682f62616467652f73756f64\"></a>\n<a href=\"https://pepy.tech/project/suod\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41109ddbe63febb36ba66a599a1ad5adf55fb84b/68747470733a2f2f706570792e746563682f62616467652f73756f642f6d6f6e7468\"></a>\n<hr class=\"docutils\">\n<p><strong>Build Status &amp; Coverage &amp; Maintainability &amp; License</strong></p>\n<a href=\"https://travis-ci.org/yzhao062/suod\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a10d71c99cdb97e5d96297196eef6d39f71fca6/68747470733a2f2f7472617669732d63692e6f72672f797a68616f3036322f73756f642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://circleci.com/gh/yzhao062/SUOD\" rel=\"nofollow\"><img alt=\"Circle CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc4c83472e0f322da3241a407b684c9e18a824b0/68747470733a2f2f636972636c6563692e636f6d2f67682f797a68616f3036322f53554f442e7376673f7374796c653d737667\"></a>\n<a href=\"https://ci.appveyor.com/project/yzhao062/combo/branch/master\" rel=\"nofollow\"><img alt=\"Appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91a02fada1906bbb769b68a797649a432cb93b1e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f356b70387073766e7470356d3164366d2f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://coveralls.io/github/yzhao062/SUOD\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a5a25536d7cb0db03ba17086f7821fe84f33e4d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f797a68616f3036322f53554f442f62616467652e737667\"></a>\n<a href=\"https://github.com/yzhao062/suod/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18a2eb44ce5f83102c9bf4d3ecbe8b7bdcd0a416/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f797a68616f3036322f73756f642e737667\"></a>\n<hr class=\"docutils\">\n<p><strong>SUOD</strong> (<strong>S</strong>calable <strong>U</strong>nsupervised <strong>O</strong>utlier <strong>D</strong>etection) is an <strong>acceleration framework for large-scale unsupervised outlier detector training and prediction</strong>.\nNotably, anomaly detection is often formulated as an unsupervised problem since the ground truth is expensive to acquire.\nTo compensate for the unstable nature of unsupervised algorithms, practitioners often build a large number of models for further combination and analysis, e.g., taking the average or majority vote.\n<strong>However, this poses scalability challenges in high-dimensional, large datasets</strong>, especially for proximity-base models operating in Euclidean space.</p>\n<p><strong>SUOD</strong> is therefore proposed to address the challenge at three complementary levels:  random projection (<strong>data level</strong>), pseudo-supervised approximation (<strong>model level</strong>), and balanced parallel scheduling (<strong>system level</strong>).\nAs mentioned, the key focus is to <strong>accelerate the training and prediction when a large number of anomaly detectors are presented</strong>, while preserving the prediction capacity.\nSince its inception in Jan 2019, SUOD has been successfully used in various academic researches and industry applications, include PyOD <a href=\"#zhao2019pyod\" id=\"id1\" rel=\"nofollow\">[2]</a> and <a href=\"https://www.iqvia.com/\" rel=\"nofollow\">IQVIA</a> medical claim analysis.</p>\n<a href=\"https://raw.githubusercontent.com/yzhao062/SUOD/master/figs/system_overview.png\" rel=\"nofollow\"><img alt=\"SUOD Flowchart\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5162df2fea4cf3aac7c4d29a734b99373dd5542d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f797a68616f3036322f53554f442f6d61737465722f666967732f73797374656d5f6f766572766965772e706e67\"></a>\n<p>SUOD is featured for:</p>\n<ul>\n<li><strong>Unified APIs, detailed documentation, and examples</strong> for the easy use.</li>\n<li><strong>Optimized performance with JIT and parallelization</strong> when possible, using <a href=\"https://github.com/numba/numba\" rel=\"nofollow\">numba</a> and <a href=\"https://github.com/joblib/joblib\" rel=\"nofollow\">joblib</a>.</li>\n<li><strong>Fully compatible with the models in PyOD</strong>.</li>\n<li><strong>Customizable modules and flexible design</strong>: each module may be turned on/off or totally replaced by custom functions.</li>\n</ul>\n<hr class=\"docutils\">\n<p><strong>API Demo</strong>:</p>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">suod.models.base</span> <span class=\"kn\">import</span> <span class=\"n\">SUOD</span>\n\n<span class=\"c1\"># initialize a set of base outlier detectors to train and predict on</span>\n<span class=\"n\">base_estimators</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">LOF</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">LOF</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">LOF</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">HBOS</span><span class=\"p\">(</span><span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">PCA</span><span class=\"p\">(</span><span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">OCSVM</span><span class=\"p\">(</span><span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">KNN</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">KNN</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">),</span>\n    <span class=\"n\">KNN</span><span class=\"p\">(</span><span class=\"n\">n_neighbors</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">)]</span>\n\n<span class=\"c1\"># initialize a SUOD model with all features turned on</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SUOD</span><span class=\"p\">(</span><span class=\"n\">base_estimators</span><span class=\"o\">=</span><span class=\"n\">base_estimators</span><span class=\"p\">,</span> <span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"c1\"># number of workers</span>\n             <span class=\"n\">rp_flag_global</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># global flag for random projection</span>\n             <span class=\"n\">bps_flag</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># global flag for balanced parallel scheduling</span>\n             <span class=\"n\">approx_flag_global</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># global flag for model approximation</span>\n             <span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"n\">contamination</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>  <span class=\"c1\"># fit all models with X</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">approximate</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>  <span class=\"c1\"># conduct model approximation if it is enabled</span>\n<span class=\"n\">predicted_labels</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>  <span class=\"c1\"># predict labels</span>\n<span class=\"n\">predicted_scores</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">decision_function</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>  <span class=\"c1\"># predict scores</span>\n<span class=\"n\">predicted_probs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>  <span class=\"c1\"># predict outlying probability</span>\n</pre>\n</blockquote>\n<hr class=\"docutils\">\n<p>A preliminary version (<a href=\"http://aics.site/AICS2020/\" rel=\"nofollow\">accepted at AAAI-20 Security Workshop</a>) can be accessed on <a href=\"https://www.andrew.cmu.edu/user/yuezhao2/papers/20-preprint-suod.pdf\" rel=\"nofollow\">arxiv</a>.\nThe extended version (under submission at <a href=\"https://www.kdd.org/kdd2020/\" rel=\"nofollow\">KDD 2020 (ADS track)</a>) can be accessed <a href=\"http://www.andrew.cmu.edu/user/yuezhao2/papers/20-kdd-insubmission-suod.pdf\" rel=\"nofollow\">here</a>.</p>\n<p>If you use SUOD in a scientific publication, we would appreciate citations to the following paper:</p>\n<pre>@inproceedings{zhao2020suod,\n  author  = {Zhao, Yue and Ding, Xueying and Yang, Jianing and Haoping Bai},\n  title   = {{SUOD}: Toward Scalable Unsupervised Outlier Detection},\n  journal = {Workshops at the Thirty-Fourth AAAI Conference on Artificial Intelligence},\n  year    = {2020}\n}\n</pre>\n<pre>Yue Zhao, Xueying Ding, Jianing Yang, Haoping Bai, \"Toward Scalable Unsupervised Outlier Detection\". Workshops at the Thirty-Fourth AAAI Conference on Artificial Intelligence, 2020.\n</pre>\n<p><strong>Table of Contents</strong>:</p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#api-cheatsheet--reference\" rel=\"nofollow\">API Cheatsheet &amp; Reference</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a></li>\n</ul>\n<hr class=\"docutils\">\n<div id=\"id2\">\n<h2>Installation</h2>\n<p>It is recommended to use <strong>pip</strong> for installation. Please make sure\n<strong>the latest version</strong> is installed, as suod is updated frequently:</p>\n<pre>pip install suod            <span class=\"c1\"># normal install\n</span>pip install --upgrade suod  <span class=\"c1\"># or update if needed\n</span>pip install --pre suod      <span class=\"c1\"># or include pre-release version for new features</span>\n</pre>\n<p>Alternatively, you could clone and run setup.py file:</p>\n<pre>git clone https://github.com/yzhao062/suod.git\n<span class=\"nb\">cd</span> suod\npip install .\n</pre>\n<p><strong>Required Dependencies</strong>:</p>\n<ul>\n<li>Python 3.5, 3.6, or 3.7</li>\n<li>joblib</li>\n<li>numpy&gt;=1.13</li>\n<li>pandas (<strong>optional for building the cost forecast model</strong>)</li>\n<li>pyod</li>\n<li>scipy&gt;=0.19.1</li>\n<li>scikit_learn&gt;=0.19.1</li>\n</ul>\n<p><strong>Note on Python 2</strong>:\nThe maintenance of Python 2.7 will be stopped by January 1, 2020 (see <a href=\"https://github.com/python/devguide/pull/344\" rel=\"nofollow\">official announcement</a>).\nTo be consistent with the Python change and suod\u2019s dependent libraries, e.g., scikit-learn,\n<strong>SUOD only supports Python 3.5+</strong> and we encourage you to use\nPython 3.5 or newer for the latest functions and bug fixes. More information can\nbe found at <a href=\"https://python3statement.org/\" rel=\"nofollow\">Moving to require Python 3</a>.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"id3\">\n<h2>API Cheatsheet &amp; Reference</h2>\n<p>Full API Reference: (<a href=\"https://suod.readthedocs.io/en/latest/api.html\" rel=\"nofollow\">https://suod.readthedocs.io/en/latest/api.html</a>).</p>\n<ul>\n<li><strong>fit(X, y)</strong>: Fit estimator. y is optional for unsupervised methods.</li>\n<li><strong>approximate(X)</strong>: Use supervised models to approximate unsupervised base detectors. Fit should be invoked first.</li>\n<li><strong>predict(X)</strong>: Predict on a particular sample once the estimator is fitted.</li>\n<li><strong>predict_proba(X)</strong>: Predict the probability of a sample belonging to each class once the estimator is fitted.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>Examples</h2>\n<p>All three modules can be <strong>executed separately</strong> and the demo codes are in /examples/module_examples/{M1_RP, M2_BPS, and M3_PSA}.\nFor instance, you could navigate to /M1_RP/demo_random_projection.py. Demo codes all start with \u201cdemo_*.py\u201d.</p>\n<p><strong>The examples for the full framework</strong> can be found under /examples folder; run \u201cdemo_base.py\u201d for\na simplified example. Run \u201cdemo_full.py\u201d for a full example.</p>\n<p>It is noted the best performance may be achieved with multiple cores available.</p>\n<hr class=\"docutils\">\n<p><strong>More to come\u2026</strong>\nLast updated on April 20th, 2020.</p>\n<p>Feel free to star for the future update :)</p>\n<hr class=\"docutils\">\n<div id=\"references\">\n<h3>References</h3>\n<table id=\"johnson1984extensions\">\n<col><col>\n<tbody>\n<tr><td>[1]</td><td>Johnson, W.B. and Lindenstrauss, J., 1984. Extensions of Lipschitz mappings into a Hilbert space. <em>Contemporary mathematics</em>, 26(189-206), p.1.</td></tr>\n</tbody>\n</table>\n<table id=\"zhao2019pyod\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[2]</a></td><td>Zhao, Y., Nasrullah, Z. and Li, Z., 2019. PyOD: A Python Toolbox for Scalable Outlier Detection. <em>Journal of Machine Learning Research</em>, 20, pp.1-7.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7062433, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "854681cea45e50cbcbdc9784a16959c4", "sha256": "9401e37cce58f3e8dc748433d6d03a36aa2af5307fa01ba595c3c44eef595e1a"}, "downloads": -1, "filename": "suod-0.0.0.tar.gz", "has_sig": false, "md5_digest": "854681cea45e50cbcbdc9784a16959c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8121, "upload_time": "2019-12-28T02:09:50", "upload_time_iso_8601": "2019-12-28T02:09:50.018463Z", "url": "https://files.pythonhosted.org/packages/25/7b/295d003e6d8e1b9fd8ee370c9a98e5b3d7c882f710349469acfda0e2c851/suod-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "13a08a3adb0c4bc524e5e36dd05829b0", "sha256": "1369f25b0dc1bdc99b5e39de672ccd0c1ac6fd48112af117cec0f144b3831d9f"}, "downloads": -1, "filename": "suod-0.0.1.tar.gz", "has_sig": false, "md5_digest": "13a08a3adb0c4bc524e5e36dd05829b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1908606, "upload_time": "2020-01-05T20:21:15", "upload_time_iso_8601": "2020-01-05T20:21:15.219384Z", "url": "https://files.pythonhosted.org/packages/4b/59/b84f49d785fd69d3865e64387cfe729cc0e5d58ed8809279ef2c8d5f432c/suod-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "243fa0ab774ad89ad0ee223c4da1d5f2", "sha256": "1f3946e3b86ce186bce1ca6d9b7ac242fb9bcaa5f0bede37d1f49c1fc49c026d"}, "downloads": -1, "filename": "suod-0.0.2.tar.gz", "has_sig": false, "md5_digest": "243fa0ab774ad89ad0ee223c4da1d5f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2105638, "upload_time": "2020-01-15T00:42:49", "upload_time_iso_8601": "2020-01-15T00:42:49.155377Z", "url": "https://files.pythonhosted.org/packages/98/1f/cb5f3567ee8537e058bab70e8d60f78fdff43fee7c40ac3fe8209a765237/suod-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "23a4ae8a7217e8d414de4081b8b95fe7", "sha256": "be05cab5b4a2dfb7bbb4e376d32731146ca233a9386f2090534f0ddbe7591470"}, "downloads": -1, "filename": "suod-0.0.3.tar.gz", "has_sig": false, "md5_digest": "23a4ae8a7217e8d414de4081b8b95fe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2109482, "upload_time": "2020-02-22T20:02:11", "upload_time_iso_8601": "2020-02-22T20:02:11.806996Z", "url": "https://files.pythonhosted.org/packages/8b/b9/aeaa3371f71fc039da982979ea6d6ffd9e356926c9fc630f42a5dc9d494e/suod-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5094b04277af1c215eaa4ebf7a60cdb3", "sha256": "6103582c5badc55263034af758dd46c0ca9abf2deeb7c0124eb7853706b8bd40"}, "downloads": -1, "filename": "suod-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5094b04277af1c215eaa4ebf7a60cdb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2110169, "upload_time": "2020-04-20T19:41:31", "upload_time_iso_8601": "2020-04-20T19:41:31.724325Z", "url": "https://files.pythonhosted.org/packages/a1/87/9170cabe1b5e10a7d095c0e28f2e30e7c1886a13f063de85d3cfacc06f4b/suod-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5094b04277af1c215eaa4ebf7a60cdb3", "sha256": "6103582c5badc55263034af758dd46c0ca9abf2deeb7c0124eb7853706b8bd40"}, "downloads": -1, "filename": "suod-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5094b04277af1c215eaa4ebf7a60cdb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2110169, "upload_time": "2020-04-20T19:41:31", "upload_time_iso_8601": "2020-04-20T19:41:31.724325Z", "url": "https://files.pythonhosted.org/packages/a1/87/9170cabe1b5e10a7d095c0e28f2e30e7c1886a13f063de85d3cfacc06f4b/suod-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:19 2020"}