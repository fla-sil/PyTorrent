{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "gaussian_process\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nWrapper for `\"sklearn.gp_minimize\"` for a simpler parameter specification using nested dictionaries.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install gaussian_process\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime get slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nKeras model optimization using a gaussian process\n-------------------------------------------------------------\nThe following example show a complete usage of GaussianProcess\nfor tuning the parameters of a Keras model.\n\n.. code:: python\n\n    import silence_tensorflow\n    from keras.models import Sequential\n    from keras.layers import Dense, Dropout\n    from keras.datasets import boston_housing\n    from extra_keras_utils import set_seed\n    from typing import Callable, Dict\n    import numpy as np\n    from holdouts_generator import holdouts_generator, random_holdouts\n    from gaussian_process import TQDMGaussianProcess, Space, GaussianProcess\n\n\n    class MLP:\n        def __init__(self, holdouts:Callable):\n            self._holdouts = holdouts\n        \n        def mlp(self, dense_layers:Dict, dropout_rate:float)->Sequential:\n            return Sequential([\n                *[Dense(**kwargs) for kwargs in dense_layers],\n                Dropout(dropout_rate),\n                Dense(1, activation=\"relu\"),\n            ])\n\n        def model_score(self, train:np.ndarray, test:np.ndarray, structure:Dict, fit:Dict):\n            model = self.mlp(**structure)\n            model.compile(\n                optimizer=\"nadam\",\n                loss=\"mse\"\n            )\n\n            return model.fit(\n                *train,\n                epochs=1,\n                validation_data=test,\n                verbose=0,\n                **fit\n            ).history[\"val_loss\"][-1]\n\n\n        def score(self, structure:Dict, fit:Dict):\n            return -np.mean([\n                self.model_score(training, test, structure, fit) for (training, test), _ in self._holdouts()\n            ])\n\n    if __name__ == \"__main__\":\n        set_seed(42)\n\n        generator = holdouts_generator(\n            *boston_housing.load_data()[0],\n            holdouts=random_holdouts([0.1], [2])\n        )\n\n        mlp = MLP(generator)\n\n        space = Space({\n            \"structure\":{\n                \"dense_layers\":[{\n                    \"units\":(8,16,32),\n                    \"activation\":(\"relu\", \"selu\")\n                },\n                {\n                    \"units\":[8,16,32],\n                    \"activation\":(\"relu\", \"selu\")\n                }],\n                \"dropout_rate\":[0.0,1.0]\n            },\n            \"fit\":{\n                \"batch_size\":[100,1000]\n            }\n        })\n\n        gp = GaussianProcess(mlp.score, space)\n        \n        n_calls = 3\n        results = gp.minimize(\n            n_calls=n_calls,\n            n_random_starts=1,\n            callback=[TQDMGaussianProcess(n_calls=n_calls)],\n            random_state=42\n        )\n        results = gp.minimize(\n            n_calls=n_calls,\n            n_random_starts=1,\n            callback=[TQDMGaussianProcess(n_calls=n_calls)],\n            random_state=42\n        )\n        print(gp.best_parameters)\n        print(gp.best_optimized_parameters)\n        gp.clear_cache()\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/gaussian_process.png\n   :target: https://travis-ci.org/LucaCappelletti94/gaussian_process\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_gaussian_process&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_gaussian_process\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_gaussian_process&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_gaussian_process\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_gaussian_process&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_gaussian_process\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/gaussian_process/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/gaussian_process?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/gaussian-process.svg\n    :target: https://badge.fury.io/py/gaussian-process\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/gaussian-process\n    :target: https://pepy.tech/badge/gaussian-process\n    :alt: Pypi total project downloads \n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/0a674ed703f44793a27936462ca05080\n    :target: https://www.codacy.com/app/LucaCappelletti94/gaussian_process?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/gaussian_process&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/aabe32e918c9ba7cd773/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/gaussian_process/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/aabe32e918c9ba7cd773/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/gaussian_process/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/gaussian_process", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gaussian-process", "package_url": "https://pypi.org/project/gaussian-process/", "platform": "", "project_url": "https://pypi.org/project/gaussian-process/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/gaussian_process"}, "release_url": "https://pypi.org/project/gaussian-process/0.0.14/", "requires_dist": null, "requires_python": "", "summary": "Wrapper for sklearn.gp_minimize for a simpler parameter specification using nested dictionaries.", "version": "0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/gaussian_process\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da4988b07d4f7951e0e22a573e727d51e5147a6d/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f676175737369616e5f70726f636573732e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_gaussian_process\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3537b16082d9d1639b4fea10095a481e6c70cd7/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f676175737369616e5f70726f63657373266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_gaussian_process\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abe600e702bf09d1cddcad4b1a0c2d00f15bcb2d/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f676175737369616e5f70726f63657373266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/app/LucaCappelletti94/gaussian_process?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/gaussian_process&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/969fa91809d6b0a1bc3eb53ec6b0300ecc9ec607/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3061363734656437303366343437393361323739333634363263613035303830\"></a>\n<a href=\"https://codeclimate.com/github/LucaCappelletti94/gaussian_process/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72d8138c17430c17e0510007f8ab925855eb279f/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f61616265333265393138633962613763643737332f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/gaussian-process\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ed2890d50122f8b4c9debbabf0331021a022496/68747470733a2f2f62616467652e667572792e696f2f70792f676175737369616e2d70726f636573732e737667\"></a> <a href=\"https://pepy.tech/badge/gaussian-process\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd318f3aae33b196bad8d3faf3c3158424e86852/68747470733a2f2f706570792e746563682f62616467652f676175737369616e2d70726f63657373\"></a></p>\n<p>Wrapper for <cite>\u201csklearn.gp_minimize\u201d</cite> for a simpler parameter specification using nested dictionaries.</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install gaussian_process\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime get slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/gaussian_process?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d1732881a24499283c817d8b50a48e9f12355c8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f676175737369616e5f70726f636573732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_gaussian_process\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/386aaec090d9e39f2de00aa9cc9c60f7bd791d0b/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f676175737369616e5f70726f63657373266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/gaussian_process/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76b481ab80460d5e7384126b3a1ea687bb5efed3/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f61616265333265393138633962613763643737332f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"keras-model-optimization-using-a-gaussian-process\">\n<h2>Keras model optimization using a gaussian process</h2>\n<p>The following example show a complete usage of GaussianProcess\nfor tuning the parameters of a Keras model.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">silence_tensorflow</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras.models</span> <span class=\"kn\">import</span> <span class=\"n\">Sequential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras.layers</span> <span class=\"kn\">import</span> <span class=\"n\">Dense</span><span class=\"p\">,</span> <span class=\"n\">Dropout</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keras.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">boston_housing</span>\n<span class=\"kn\">from</span> <span class=\"nn\">extra_keras_utils</span> <span class=\"kn\">import</span> <span class=\"n\">set_seed</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">Dict</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">holdouts_generator</span> <span class=\"kn\">import</span> <span class=\"n\">holdouts_generator</span><span class=\"p\">,</span> <span class=\"n\">random_holdouts</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gaussian_process</span> <span class=\"kn\">import</span> <span class=\"n\">TQDMGaussianProcess</span><span class=\"p\">,</span> <span class=\"n\">Space</span><span class=\"p\">,</span> <span class=\"n\">GaussianProcess</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MLP</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">holdouts</span><span class=\"p\">:</span><span class=\"n\">Callable</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_holdouts</span> <span class=\"o\">=</span> <span class=\"n\">holdouts</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">mlp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dense_layers</span><span class=\"p\">:</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">dropout_rate</span><span class=\"p\">:</span><span class=\"nb\">float</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">Sequential</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">Sequential</span><span class=\"p\">([</span>\n            <span class=\"o\">*</span><span class=\"p\">[</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">kwargs</span> <span class=\"ow\">in</span> <span class=\"n\">dense_layers</span><span class=\"p\">],</span>\n            <span class=\"n\">Dropout</span><span class=\"p\">(</span><span class=\"n\">dropout_rate</span><span class=\"p\">),</span>\n            <span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s2\">\"relu\"</span><span class=\"p\">),</span>\n        <span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">model_score</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">train</span><span class=\"p\">:</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">test</span><span class=\"p\">:</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"p\">:</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">fit</span><span class=\"p\">:</span><span class=\"n\">Dict</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mlp</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">structure</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span>\n            <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s2\">\"nadam\"</span><span class=\"p\">,</span>\n            <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s2\">\"mse\"</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span>\n            <span class=\"o\">*</span><span class=\"n\">train</span><span class=\"p\">,</span>\n            <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"n\">test</span><span class=\"p\">,</span>\n            <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">fit</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">[</span><span class=\"s2\">\"val_loss\"</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">score</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"p\">:</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">fit</span><span class=\"p\">:</span><span class=\"n\">Dict</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_score</span><span class=\"p\">(</span><span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"p\">,</span> <span class=\"n\">fit</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">training</span><span class=\"p\">,</span> <span class=\"n\">test</span><span class=\"p\">),</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_holdouts</span><span class=\"p\">()</span>\n        <span class=\"p\">])</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">set_seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n    <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">holdouts_generator</span><span class=\"p\">(</span>\n        <span class=\"o\">*</span><span class=\"n\">boston_housing</span><span class=\"o\">.</span><span class=\"n\">load_data</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"n\">holdouts</span><span class=\"o\">=</span><span class=\"n\">random_holdouts</span><span class=\"p\">([</span><span class=\"mf\">0.1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">mlp</span> <span class=\"o\">=</span> <span class=\"n\">MLP</span><span class=\"p\">(</span><span class=\"n\">generator</span><span class=\"p\">)</span>\n\n    <span class=\"n\">space</span> <span class=\"o\">=</span> <span class=\"n\">Space</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"structure\"</span><span class=\"p\">:{</span>\n            <span class=\"s2\">\"dense_layers\"</span><span class=\"p\">:[{</span>\n                <span class=\"s2\">\"units\"</span><span class=\"p\">:(</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">),</span>\n                <span class=\"s2\">\"activation\"</span><span class=\"p\">:(</span><span class=\"s2\">\"relu\"</span><span class=\"p\">,</span> <span class=\"s2\">\"selu\"</span><span class=\"p\">)</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"units\"</span><span class=\"p\">:[</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">],</span>\n                <span class=\"s2\">\"activation\"</span><span class=\"p\">:(</span><span class=\"s2\">\"relu\"</span><span class=\"p\">,</span> <span class=\"s2\">\"selu\"</span><span class=\"p\">)</span>\n            <span class=\"p\">}],</span>\n            <span class=\"s2\">\"dropout_rate\"</span><span class=\"p\">:[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"mf\">1.0</span><span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">\"fit\"</span><span class=\"p\">:{</span>\n            <span class=\"s2\">\"batch_size\"</span><span class=\"p\">:[</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GaussianProcess</span><span class=\"p\">(</span><span class=\"n\">mlp</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">space</span><span class=\"p\">)</span>\n\n    <span class=\"n\">n_calls</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">(</span>\n        <span class=\"n\">n_calls</span><span class=\"o\">=</span><span class=\"n\">n_calls</span><span class=\"p\">,</span>\n        <span class=\"n\">n_random_starts</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">TQDMGaussianProcess</span><span class=\"p\">(</span><span class=\"n\">n_calls</span><span class=\"o\">=</span><span class=\"n\">n_calls</span><span class=\"p\">)],</span>\n        <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">(</span>\n        <span class=\"n\">n_calls</span><span class=\"o\">=</span><span class=\"n\">n_calls</span><span class=\"p\">,</span>\n        <span class=\"n\">n_random_starts</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">TQDMGaussianProcess</span><span class=\"p\">(</span><span class=\"n\">n_calls</span><span class=\"o\">=</span><span class=\"n\">n_calls</span><span class=\"p\">)],</span>\n        <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span>\n    <span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">best_parameters</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">best_optimized_parameters</span><span class=\"p\">)</span>\n    <span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">clear_cache</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6637935, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "43ae782039872179343e0c5882da48cd", "sha256": "ae7c55f75fd19efbfc29d711f0a6bcad684dd37ceb7e9ef78a66b265ce7ae366"}, "downloads": -1, "filename": "gaussian_process-0.0.1.tar.gz", "has_sig": false, "md5_digest": "43ae782039872179343e0c5882da48cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5455, "upload_time": "2019-05-26T16:24:13", "upload_time_iso_8601": "2019-05-26T16:24:13.991781Z", "url": "https://files.pythonhosted.org/packages/23/7b/7f5cf753694d3f955973f804eb0df64ae30f4edffa75e05d5fa9927940b6/gaussian_process-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "fdcb611cfd55a61e3a9d51bb50655f96", "sha256": "ce68cf2b05643e92bf875283b1e9227d36478020a9a5e7f903f25776fdbc4294"}, "downloads": -1, "filename": "gaussian_process-0.0.10.tar.gz", "has_sig": false, "md5_digest": "fdcb611cfd55a61e3a9d51bb50655f96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5701, "upload_time": "2019-06-02T16:45:36", "upload_time_iso_8601": "2019-06-02T16:45:36.138226Z", "url": "https://files.pythonhosted.org/packages/11/9d/827e7f1a93dfd118ab22992f6d4226f7365d7f8002e50c71ea0d73590dd6/gaussian_process-0.0.10.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "b934b784e82e452df5a094f179961042", "sha256": "e6a8dcc421fbc85f7e389ab7a25a89f7af9ead4e3a83fd14e39b8efcee5d0453"}, "downloads": -1, "filename": "gaussian_process-0.0.12.tar.gz", "has_sig": false, "md5_digest": "b934b784e82e452df5a094f179961042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5819, "upload_time": "2020-02-15T16:41:45", "upload_time_iso_8601": "2020-02-15T16:41:45.968048Z", "url": "https://files.pythonhosted.org/packages/91/c9/ac1ef68125643213163cc247db545dc8b44a4fe6661d9e7c61f18ad653a1/gaussian_process-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "46ff867a611191c249f5a565d141e09a", "sha256": "5fe66778858f8e9240137b3376d63e3a414dada5f8cf330bb50b8888d2ccad22"}, "downloads": -1, "filename": "gaussian_process-0.0.13.tar.gz", "has_sig": false, "md5_digest": "46ff867a611191c249f5a565d141e09a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5841, "upload_time": "2020-02-15T22:34:04", "upload_time_iso_8601": "2020-02-15T22:34:04.328273Z", "url": "https://files.pythonhosted.org/packages/ac/8c/016b82f65d78870d1757c4a0a58c989915a641d362c4a79ebe7737ca041e/gaussian_process-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "d89ccec7438c8c31f6c0cfbb9aaefc9b", "sha256": "1939ddce64bb1aaf43e33c1b1a9dba92250ba0ad4f00c5b9da86dd9d06383673"}, "downloads": -1, "filename": "gaussian_process-0.0.14.tar.gz", "has_sig": false, "md5_digest": "d89ccec7438c8c31f6c0cfbb9aaefc9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5848, "upload_time": "2020-02-15T22:44:55", "upload_time_iso_8601": "2020-02-15T22:44:55.451326Z", "url": "https://files.pythonhosted.org/packages/d0/1e/b7ba00f83ace6c6679656f20552d55f46c36784ac76f8f02d98c5dbc332c/gaussian_process-0.0.14.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a88e769e3b80491be1ece7ef2d09b767", "sha256": "cd17c7c0af274c78024c2637749aee886d9892244ab4a4c04d67540a2a02fca7"}, "downloads": -1, "filename": "gaussian_process-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a88e769e3b80491be1ece7ef2d09b767", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5550, "upload_time": "2019-05-27T21:09:52", "upload_time_iso_8601": "2019-05-27T21:09:52.869941Z", "url": "https://files.pythonhosted.org/packages/19/ca/bff5db8c971bade33aae02aad57c2b9ff544cad52a3cc35289df0ba26eb2/gaussian_process-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "735b78b96e5287539b74d5179b4211d2", "sha256": "ca45fce0d4502a1949531c9c0a6c424abaa6261d2250ea3eb5513d9a49692ce0"}, "downloads": -1, "filename": "gaussian_process-0.0.4.tar.gz", "has_sig": false, "md5_digest": "735b78b96e5287539b74d5179b4211d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5586, "upload_time": "2019-05-29T08:28:15", "upload_time_iso_8601": "2019-05-29T08:28:15.483907Z", "url": "https://files.pythonhosted.org/packages/11/82/7619c5b6a5171a060a32717c97dc390b3e74af0e2f2df56a6a2a0ce5ed3e/gaussian_process-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "de2b9cb3f96d161c78bde45337441c29", "sha256": "b6f8700adc8f967dc12a69eea650e1732fb8447a82b1821fbff0bd759c801876"}, "downloads": -1, "filename": "gaussian_process-0.0.5.tar.gz", "has_sig": false, "md5_digest": "de2b9cb3f96d161c78bde45337441c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5598, "upload_time": "2019-05-31T05:16:45", "upload_time_iso_8601": "2019-05-31T05:16:45.599526Z", "url": "https://files.pythonhosted.org/packages/c0/eb/8575f41066ae93f834f66f893d0dca2ab24463bfc74a055f0410de29ae13/gaussian_process-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "97244531c909e9c7ab225dfb3f78a281", "sha256": "f5767da8e76783aea8963ae4a16fd94803b41fc92f25a531c3b12bbf88308876"}, "downloads": -1, "filename": "gaussian_process-0.0.6.tar.gz", "has_sig": false, "md5_digest": "97244531c909e9c7ab225dfb3f78a281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5642, "upload_time": "2019-05-31T05:20:13", "upload_time_iso_8601": "2019-05-31T05:20:13.151144Z", "url": "https://files.pythonhosted.org/packages/22/88/e7e470e3f4c1a1343e2cb9f41bce5f88fb8e4f94a1fb4f1d795961954c0b/gaussian_process-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "a686f0a58f566576b923e7d7be1aa9ba", "sha256": "289254bc47171b5d406ca5be37a17741f8276c9ee596266bad3d2941ba4d6243"}, "downloads": -1, "filename": "gaussian_process-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a686f0a58f566576b923e7d7be1aa9ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5644, "upload_time": "2019-05-31T05:29:50", "upload_time_iso_8601": "2019-05-31T05:29:50.391420Z", "url": "https://files.pythonhosted.org/packages/34/ed/64eabf569efe54e35e4494b063ec2a46b72baa2ae2378b3e7cf3dfb372e8/gaussian_process-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "b3d9248a521ae673668f7443c0ac77ed", "sha256": "e18323e13d5f9cc3421d5565579e1447bc1855376a2bab711a79a4cf70c7be27"}, "downloads": -1, "filename": "gaussian_process-0.0.8.tar.gz", "has_sig": false, "md5_digest": "b3d9248a521ae673668f7443c0ac77ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5631, "upload_time": "2019-05-31T15:06:46", "upload_time_iso_8601": "2019-05-31T15:06:46.300925Z", "url": "https://files.pythonhosted.org/packages/16/97/b2194bd52931ab1e261ebdf4b4f53ce3aaa7db9199fd1cb7721bc052c40f/gaussian_process-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "3ce895cb1cf21345de71c29333bcb4f7", "sha256": "d6f3afc7d2af7ce3b01d2469fc91ca6cc04e56d221402a08dbfb087ac378f0cd"}, "downloads": -1, "filename": "gaussian_process-0.0.9.tar.gz", "has_sig": false, "md5_digest": "3ce895cb1cf21345de71c29333bcb4f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5644, "upload_time": "2019-06-01T14:50:33", "upload_time_iso_8601": "2019-06-01T14:50:33.133752Z", "url": "https://files.pythonhosted.org/packages/8b/0d/4d4e6414cb0bcee7550ae665da7e15d8612ca97d0f77fb3f037e2082499d/gaussian_process-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d89ccec7438c8c31f6c0cfbb9aaefc9b", "sha256": "1939ddce64bb1aaf43e33c1b1a9dba92250ba0ad4f00c5b9da86dd9d06383673"}, "downloads": -1, "filename": "gaussian_process-0.0.14.tar.gz", "has_sig": false, "md5_digest": "d89ccec7438c8c31f6c0cfbb9aaefc9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5848, "upload_time": "2020-02-15T22:44:55", "upload_time_iso_8601": "2020-02-15T22:44:55.451326Z", "url": "https://files.pythonhosted.org/packages/d0/1e/b7ba00f83ace6c6679656f20552d55f46c36784ac76f8f02d98c5dbc332c/gaussian_process-0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:59 2020"}