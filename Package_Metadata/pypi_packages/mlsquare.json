{"info": {"author": "MLSquare", "author_email": "info@mlsquare.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============================================\n[ML]\u00b2 :  Machine Learning for Machine Learning\n==============================================\n\n.. image:: https://circleci.com/gh/mlsquare/mlsquare/tree/dev.svg?style=svg\n    :target: https://circleci.com/gh/mlsquare/mlsquare/tree/dev\n\n.. image:: https://api.codacy.com/project/badge/Grade/5b23c72bf17246e6b3df610a798f8935\n    :target: https://www.codacy.com/app/shakkeel1330/mlsquare?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mlsquare/mlsquare&amp;utm_campaign=Badge_Grade\n\n.. image:: https://api.codacy.com/project/badge/Coverage/5b23c72bf17246e6b3df610a798f8935\n    :target: https://www.codacy.com/app/shakkeel1330/mlsquare?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mlsquare/mlsquare&amp;utm_campaign=Badge_Coverage\n\n.. image:: https://mybinder.org/badge_logo.svg\n    :target: https://mybinder.org/v2/gh/mlsquare/mlsquare/master\n\nML Square is python library that utilises deep learning techniques to enable interoperability \nbetween existing standard machine learning frameworks.\n\n================\nGetting Started!\n================\n\nSetting up ``mlsquare`` is simple and easy\n\n    1. Create a Virtual Environment\n\n    .. code-block:: bash\n\n        virtualenv ~/.venv\n        source ~/.venv/bin/activate\n\n    2. Install ``mlsquare`` package\n\n    .. code-block:: bash\n\n        pip install mlsquare\n\n    3. Import ``dope`` function from ``mlsquare`` and pass the ``sklearn`` model object\n\n    .. code-block:: python\n\n        >>> from mlsquare import dope\n        >>> from sklearn.linear_model import LinearRegression\n        >>> from sklearn.preprocessing import StandardScaler\n        >>> from sklearn.model_selection import train_test_split\n        >>> import pandas as pd\n        >>> from sklearn.datasets import load_diabetes\n\n        >>> model = LinearRegression()\n        >>> diabetes = load_diabetes()\n\n        >>> X = diabetes.data\n        >>> sc = StandardScaler()\n        >>> X = sc.fit_transform(X)\n        >>> Y = diabetes.target\n        >>> x_train, x_test, y_train, y_test =\n            train_test_split(X, Y, test_size=0.60, random_state=0)\n\n        >>> m = dope(model)\n\n        >>> # All sklearn operations can be performed on m, except that the underlying implementation uses DNN\n        >>> m.fit(x_train, y_train)\n        >>> m.score(x_test, y_test)\n\n========\nTutorial\n========\n\nFor a comprehensive tutorial please do checkout this `link <https://github.com/mlsquare/mlsquare/blob/master/examples/dope.ipynb>`__\n\n==========\nContribute\n==========\n\nTo get started with contributing, refer our devoloper guide `here <https://github.com/mlsquare/mlsquare/blob/master/docs/developer.rst>`__\n\n\nFor detailed documentation refer `documentation <http://mlsquare.readthedocs.io>`__\n\n\nWe would love to hear your feedback. Drop us a mail at *info@mlsquare.org*\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://mlsquare.org", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mlsquare", "package_url": "https://pypi.org/project/mlsquare/", "platform": "any", "project_url": "https://pypi.org/project/mlsquare/", "project_urls": {"Homepage": "https://mlsquare.org"}, "release_url": "https://pypi.org/project/mlsquare/0.2.1/", "requires_dist": ["keras", "numpy", "onnx", "onnxmltools", "pandas", "pickleshare", "scikit-learn", "scipy", "setproctitle", "Theano", "tensorflow (==1.13.1)", "ray (==0.6.5)", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": ">=3.6", "summary": "Machine Learning for Machine Learning", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ml-2-machine-learning-for-machine-learning\">\n<h2>[ML]\u00b2 :  Machine Learning for Machine Learning</h2>\n<a href=\"https://circleci.com/gh/mlsquare/mlsquare/tree/dev\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/mlsquare/mlsquare/tree/dev.svg?style=svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454af15aefe55b9848076aa34e6980d632593d73/68747470733a2f2f636972636c6563692e636f6d2f67682f6d6c7371756172652f6d6c7371756172652f747265652f6465762e7376673f7374796c653d737667\"></a>\n<a href=\"https://www.codacy.com/app/shakkeel1330/mlsquare?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=mlsquare/mlsquare&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Grade/5b23c72bf17246e6b3df610a798f8935\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a5fb809ac87afd490065dc16c3e60b707cd3bbf/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3562323363373262663137323436653662336466363130613739386638393335\"></a>\n<a href=\"https://www.codacy.com/app/shakkeel1330/mlsquare?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=mlsquare/mlsquare&amp;amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Coverage/5b23c72bf17246e6b3df610a798f8935\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa1929d4fd86b3c141edf2b13a94ad7125f25896/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f3562323363373262663137323436653662336466363130613739386638393335\"></a>\n<a href=\"https://mybinder.org/v2/gh/mlsquare/mlsquare/master\" rel=\"nofollow\"><img alt=\"https://mybinder.org/badge_logo.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<p>ML Square is python library that utilises deep learning techniques to enable interoperability\nbetween existing standard machine learning frameworks.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started!</h2>\n<p>Setting up <tt>mlsquare</tt> is simple and easy</p>\n<blockquote>\n<ol>\n<li>Create a Virtual Environment</li>\n</ol>\n<pre>virtualenv ~/.venv\n<span class=\"nb\">source</span> ~/.venv/bin/activate\n</pre>\n<ol>\n<li>Install <tt>mlsquare</tt> package</li>\n</ol>\n<pre>pip install mlsquare\n</pre>\n<ol>\n<li>Import <tt>dope</tt> function from <tt>mlsquare</tt> and pass the <tt>sklearn</tt> model object</li>\n</ol>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">mlsquare</span> <span class=\"kn\">import</span> <span class=\"n\">dope</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">LinearRegression</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">StandardScaler</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_diabetes</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">LinearRegression</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">diabetes</span> <span class=\"o\">=</span> <span class=\"n\">load_diabetes</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">diabetes</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sc</span> <span class=\"o\">=</span> <span class=\"n\">StandardScaler</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">sc</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">diabetes</span><span class=\"o\">.</span><span class=\"n\">target</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span>\n    <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.60</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">dope</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># All sklearn operations can be performed on m, except that the underlying implementation uses DNN</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<p>For a comprehensive tutorial please do checkout this <a href=\"https://github.com/mlsquare/mlsquare/blob/master/examples/dope.ipynb\" rel=\"nofollow\">link</a></p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>To get started with contributing, refer our devoloper guide <a href=\"https://github.com/mlsquare/mlsquare/blob/master/docs/developer.rst\" rel=\"nofollow\">here</a></p>\n<p>For detailed documentation refer <a href=\"http://mlsquare.readthedocs.io\" rel=\"nofollow\">documentation</a></p>\n<p>We would love to hear your feedback. Drop us a mail at <em>info@mlsquare.org</em></p>\n</div>\n\n          </div>"}, "last_serial": 6092087, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1856891c57555dde77f5ca7ddbf39911", "sha256": "3485ce55d7a63ea4d6808ee21d6f5fdeb635464053ffb18e96ddee9b028f0b6e"}, "downloads": -1, "filename": "mlsquare-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1856891c57555dde77f5ca7ddbf39911", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14334, "upload_time": "2019-04-06T15:09:49", "upload_time_iso_8601": "2019-04-06T15:09:49.411417Z", "url": "https://files.pythonhosted.org/packages/85/c0/5ebe2678e69fda45304fcd603f3e83e45c99ae5463aef7102effcebcc751/mlsquare-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "479c990ee0d229233f5a8bdaf953f3b9", "sha256": "94e1e801da01b059f23ff26ed4b1fa2753d2f34aa5a2ef24e178b9322456ec5c"}, "downloads": -1, "filename": "mlsquare-0.1.1.tar.gz", "has_sig": false, "md5_digest": "479c990ee0d229233f5a8bdaf953f3b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1229776, "upload_time": "2019-04-06T15:09:53", "upload_time_iso_8601": "2019-04-06T15:09:53.007168Z", "url": "https://files.pythonhosted.org/packages/b6/f1/2141ab6c99e09ee1d0922207b375c85c4b0552fa91ad860a99adea02c4bc/mlsquare-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8b10df6badb3dceaf19f437570561f43", "sha256": "7df8604fa51960a24a24dd017bd89b5a309c41a60b40c332b593521ddb01c045"}, "downloads": -1, "filename": "mlsquare-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b10df6badb3dceaf19f437570561f43", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 30914, "upload_time": "2019-11-07T05:49:55", "upload_time_iso_8601": "2019-11-07T05:49:55.309129Z", "url": "https://files.pythonhosted.org/packages/3d/05/e5b6b4792423195169a9d51c8691224383f48a18f016bc7f3d266b9e6d3d/mlsquare-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "242c3954b28f3e39ec67bb8d5133916f", "sha256": "2476e8e7ffc781a6bc1aed517dbf00e4eac2b28c1c6bd347b5430119053363df"}, "downloads": -1, "filename": "mlsquare-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "242c3954b28f3e39ec67bb8d5133916f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 30920, "upload_time": "2019-11-07T08:48:06", "upload_time_iso_8601": "2019-11-07T08:48:06.689857Z", "url": "https://files.pythonhosted.org/packages/38/0f/398f0d48536a148aaecec10347157bd4fc8304493f7e6510a0e738716ff3/mlsquare-0.2.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "242c3954b28f3e39ec67bb8d5133916f", "sha256": "2476e8e7ffc781a6bc1aed517dbf00e4eac2b28c1c6bd347b5430119053363df"}, "downloads": -1, "filename": "mlsquare-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "242c3954b28f3e39ec67bb8d5133916f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 30920, "upload_time": "2019-11-07T08:48:06", "upload_time_iso_8601": "2019-11-07T08:48:06.689857Z", "url": "https://files.pythonhosted.org/packages/38/0f/398f0d48536a148aaecec10347157bd4fc8304493f7e6510a0e738716ff3/mlsquare-0.2.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:22 2020"}