{"info": {"author": "Roberto De Almeida", "author_email": "roberto@dealmeida.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database :: Front-Ends", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "This module allows you to access a (DB API 2) SQL table using nothing but Python to build the query::\n\n    import re\n    import sqlite3\n    from simpleql.table import Table\n\n    conn = sqlite3.connect(\":memory:\")\n    curs = conn.cursor()\n    curs.execute(\"CREATE TABLE test (a integer, b char(1))\")\n    curs.executemany(\"INSERT INTO test (a, b) VALUES (?, ?)\", ([1,'a'], [2,'b'], [3,'c']))\n    conn.commit()\n\n    table = Table(conn, \"test\", verbose=1)\n    for row in table:\n        print row\n\nThis will print::\n\n    SELECT a, b FROM test;\n    {'a': 1, 'b': u'a'}\n    {'a': 2, 'b': u'b'}\n    {'a': 3, 'b': u'c'}\n\nNote that each row in the table is a dictionary. We can filter this using a generator expression::\n\n    aspan = (1, 3)\n    for row in (t for t in table if min(aspan) < t['a'] < max(aspan)):\n        print row\n\nThis will print::\n\n    SELECT a, b FROM test WHERE (1<a) AND (a<3);\n    {'a': 2, 'b': u'b'}\n\nAs you can see, the query string is built from a generator expression.  You can also use list comprehensions. Regular expressions are supported by the use of the ``re.search`` method::\n\n    filtered = [t for t in table if re.search('a', t['b'])]\n    print filtered\n\nWhich outputs::\n\n    SELECT a, b FROM test WHERE b LIKE \"%a%\";\n    [{'a': 1, 'b': u'a'}]\n\nNote that since the module has to analyse the source code it doesn't work on the interactive shell.\n\nThe advantage of this approach over the `similar recipe <http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/442447>`_ is that if the (efficient) query builder fails when it encounters a complex filter the data will still be filtered (unefficiently) by the generator expression.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/robertodealmeida/simpleql/", "keywords": "sql pythonic", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "simpleQL", "package_url": "https://pypi.org/project/simpleQL/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/simpleQL/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/robertodealmeida/simpleql/"}, "release_url": "https://pypi.org/project/simpleQL/0.2/", "requires_dist": null, "requires_python": null, "summary": "Efficient filtering of SQL tables with generator expressions.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module allows you to access a (DB API 2) SQL table using nothing but Python to build the query:</p>\n<pre>import re\nimport sqlite3\nfrom simpleql.table import Table\n\nconn = sqlite3.connect(\":memory:\")\ncurs = conn.cursor()\ncurs.execute(\"CREATE TABLE test (a integer, b char(1))\")\ncurs.executemany(\"INSERT INTO test (a, b) VALUES (?, ?)\", ([1,'a'], [2,'b'], [3,'c']))\nconn.commit()\n\ntable = Table(conn, \"test\", verbose=1)\nfor row in table:\n    print row\n</pre>\n<p>This will print:</p>\n<pre>SELECT a, b FROM test;\n{'a': 1, 'b': u'a'}\n{'a': 2, 'b': u'b'}\n{'a': 3, 'b': u'c'}\n</pre>\n<p>Note that each row in the table is a dictionary. We can filter this using a generator expression:</p>\n<pre>aspan = (1, 3)\nfor row in (t for t in table if min(aspan) &lt; t['a'] &lt; max(aspan)):\n    print row\n</pre>\n<p>This will print:</p>\n<pre>SELECT a, b FROM test WHERE (1&lt;a) AND (a&lt;3);\n{'a': 2, 'b': u'b'}\n</pre>\n<p>As you can see, the query string is built from a generator expression.  You can also use list comprehensions. Regular expressions are supported by the use of the <tt>re.search</tt> method:</p>\n<pre>filtered = [t for t in table if re.search('a', t['b'])]\nprint filtered\n</pre>\n<p>Which outputs:</p>\n<pre>SELECT a, b FROM test WHERE b LIKE \"%a%\";\n[{'a': 1, 'b': u'a'}]\n</pre>\n<p>Note that since the module has to analyse the source code it doesn\u2019t work on the interactive shell.</p>\n<p>The advantage of this approach over the <a href=\"http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/442447\" rel=\"nofollow\">similar recipe</a> is that if the (efficient) query builder fails when it encounters a complex filter the data will still be filtered (unefficiently) by the generator expression.</p>\n\n          </div>"}, "last_serial": 799557, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ef2d757fe75f8f287f1115c5f6298df4", "sha256": "c21415be1ab0d92a13b31e9a85ff68d5752ce370e361d5fe95139bd19217aa0e"}, "downloads": -1, "filename": "simpleQL-0.1-py2.4.egg", "has_sig": false, "md5_digest": "ef2d757fe75f8f287f1115c5f6298df4", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12539, "upload_time": "2006-09-20T12:19:05", "upload_time_iso_8601": "2006-09-20T12:19:05Z", "url": "https://files.pythonhosted.org/packages/c4/d3/fbcb95dd0e12af7d17b8f71154940abe60bbd2dd563d424a8c637147d095/simpleQL-0.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "40af070838846f664e8c8174a35c701b", "sha256": "f95729fd42e7e9da787e928e951a43e4214dee6a03b277727fc3df8e4dfdf602"}, "downloads": -1, "filename": "simpleQL-0.1.tar.gz", "has_sig": false, "md5_digest": "40af070838846f664e8c8174a35c701b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5437, "upload_time": "2006-09-20T12:18:58", "upload_time_iso_8601": "2006-09-20T12:18:58Z", "url": "https://files.pythonhosted.org/packages/8f/d9/1a137333aa1ce4735d51b23a69c7833e19fb898e494f313c85dc127bd1bd/simpleQL-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "de85b9609a8a3d6312369f3ea9a2eef8", "sha256": "6abfb779c0f1fa88433f956a108156e9d36b45dbc87b74ac6fd5949e9f09a51d"}, "downloads": -1, "filename": "simpleQL-0.1.1-py2.4.egg", "has_sig": false, "md5_digest": "de85b9609a8a3d6312369f3ea9a2eef8", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12851, "upload_time": "2006-09-21T12:00:42", "upload_time_iso_8601": "2006-09-21T12:00:42Z", "url": "https://files.pythonhosted.org/packages/ae/cb/5a5f5abea140286d45a0053eaa50d1ad173f24d5ab4955fc550e7088e7d9/simpleQL-0.1.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ef5bf4b6b1cc79a5e48a19eebc6a524", "sha256": "340ed10a666212424bb18e6d5c71fc4048f6098639a5164f66438bcbf88df7e9"}, "downloads": -1, "filename": "simpleQL-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3ef5bf4b6b1cc79a5e48a19eebc6a524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5594, "upload_time": "2006-09-21T11:58:29", "upload_time_iso_8601": "2006-09-21T11:58:29Z", "url": "https://files.pythonhosted.org/packages/43/63/9ba2b9005ffd1466c5096d6ae0a491e23d89b29df87d176b89609447d7df/simpleQL-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c7bfc0a5cba80f7a18135c36b738deb3", "sha256": "1d93446683d1bb041cc486edf58f09f94618b003ba79fa7482819015ff932aa3"}, "downloads": -1, "filename": "simpleQL-0.1.2-py2.4.egg", "has_sig": false, "md5_digest": "c7bfc0a5cba80f7a18135c36b738deb3", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12920, "upload_time": "2006-09-21T13:01:40", "upload_time_iso_8601": "2006-09-21T13:01:40Z", "url": "https://files.pythonhosted.org/packages/a0/be/0acf9b590792051072d110956e0b7e84813312620300d29d9a0cc221dcc6/simpleQL-0.1.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e70e2172307c0ac252c75c7d13b4bc4", "sha256": "2abfb21f3dbd2ab13032a03550880921fddae11970d8906b9f04dc1b92a68fc1"}, "downloads": -1, "filename": "simpleQL-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6e70e2172307c0ac252c75c7d13b4bc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5643, "upload_time": "2006-09-21T13:01:31", "upload_time_iso_8601": "2006-09-21T13:01:31Z", "url": "https://files.pythonhosted.org/packages/f2/36/99d043e315bc05ab9d6bddce12d1c6712a58602eb088de66c0a3500a170e/simpleQL-0.1.2.tar.gz", "yanked": false}], "0.1.2.1": [{"comment_text": "", "digests": {"md5": "b5b678a8bd750fa75fa5baebce1f56f5", "sha256": "d2bf5edf9e6138acdb4fb73e15b899f6cb538a9f116c3872766d6ab216b33a41"}, "downloads": -1, "filename": "simpleQL-0.1.2.1-py2.4.egg", "has_sig": false, "md5_digest": "b5b678a8bd750fa75fa5baebce1f56f5", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12884, "upload_time": "2006-09-21T16:42:46", "upload_time_iso_8601": "2006-09-21T16:42:46Z", "url": "https://files.pythonhosted.org/packages/f1/df/7983929f65419eebc6a06d28f3feb59d4c2b6c0fa62639af04b00cf5467b/simpleQL-0.1.2.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "31cea8ffc1cb953b6f5f2d82f4c18dbe", "sha256": "fd4375d36f9541b847f2ea1cec30d58c8f3cc7ed32562956cf066f4c44f95c01"}, "downloads": -1, "filename": "simpleQL-0.1.2.1.tar.gz", "has_sig": false, "md5_digest": "31cea8ffc1cb953b6f5f2d82f4c18dbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5645, "upload_time": "2006-09-21T16:42:43", "upload_time_iso_8601": "2006-09-21T16:42:43Z", "url": "https://files.pythonhosted.org/packages/f1/7b/d78a8053bd9a36d29bdf49efb5298ea8acff9e6aa9939dcabfa2b49cd7f2/simpleQL-0.1.2.1.tar.gz", "yanked": false}], "0.1.2.2": [{"comment_text": "", "digests": {"md5": "31cee499e70ff4bfe52617fffd69646b", "sha256": "92109d39f1fe8084543c3313e5199b1d287824ed75b0f9fd9714506b317ef4e9"}, "downloads": -1, "filename": "simpleQL-0.1.2.2-py2.4.egg", "has_sig": false, "md5_digest": "31cee499e70ff4bfe52617fffd69646b", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12946, "upload_time": "2006-10-16T16:36:00", "upload_time_iso_8601": "2006-10-16T16:36:00Z", "url": "https://files.pythonhosted.org/packages/9c/e0/d0478a677ff0917a474941ef455091500f37195e472b3fe4f16ef42eacc3/simpleQL-0.1.2.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "00aa8221a906932ee4f7cb0f03159448", "sha256": "1afb1eb639ebeb75453aa63ac600504f3135a63de1019bf1e162ab848c118964"}, "downloads": -1, "filename": "simpleQL-0.1.2.2.tar.gz", "has_sig": false, "md5_digest": "00aa8221a906932ee4f7cb0f03159448", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5693, "upload_time": "2006-10-16T16:35:37", "upload_time_iso_8601": "2006-10-16T16:35:37Z", "url": "https://files.pythonhosted.org/packages/46/17/4946a9f89a43faccbc05d7127301a40e894923978650d9e7f22c0fdee219/simpleQL-0.1.2.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0b59573ceea62b8c08f61bf91da8c04d", "sha256": "93228658b1f39ff2f36681dec26367c228d98ea91cccf5eb9b5e1e9be7824f16"}, "downloads": -1, "filename": "simpleQL-0.2-py2.6.egg", "has_sig": false, "md5_digest": "0b59573ceea62b8c08f61bf91da8c04d", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12755, "upload_time": "2011-04-11T00:39:46", "upload_time_iso_8601": "2011-04-11T00:39:46.757605Z", "url": "https://files.pythonhosted.org/packages/71/a6/84592535886f35b2140fc9510d7cff06c9a8659131929b4f5c44be0030a2/simpleQL-0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfb5ace31e94d9680134d835a500285a", "sha256": "d6b1ec591068b1faa4500d12c76a71d04723cf5230f784dc3643b505090f6941"}, "downloads": -1, "filename": "simpleQL-0.2.tar.gz", "has_sig": false, "md5_digest": "bfb5ace31e94d9680134d835a500285a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5645, "upload_time": "2011-04-11T00:39:36", "upload_time_iso_8601": "2011-04-11T00:39:36.712793Z", "url": "https://files.pythonhosted.org/packages/06/38/2cef04b5ee06a10fdf746f5a31b7fece84420b6de745ec6491830854763e/simpleQL-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b59573ceea62b8c08f61bf91da8c04d", "sha256": "93228658b1f39ff2f36681dec26367c228d98ea91cccf5eb9b5e1e9be7824f16"}, "downloads": -1, "filename": "simpleQL-0.2-py2.6.egg", "has_sig": false, "md5_digest": "0b59573ceea62b8c08f61bf91da8c04d", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12755, "upload_time": "2011-04-11T00:39:46", "upload_time_iso_8601": "2011-04-11T00:39:46.757605Z", "url": "https://files.pythonhosted.org/packages/71/a6/84592535886f35b2140fc9510d7cff06c9a8659131929b4f5c44be0030a2/simpleQL-0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfb5ace31e94d9680134d835a500285a", "sha256": "d6b1ec591068b1faa4500d12c76a71d04723cf5230f784dc3643b505090f6941"}, "downloads": -1, "filename": "simpleQL-0.2.tar.gz", "has_sig": false, "md5_digest": "bfb5ace31e94d9680134d835a500285a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5645, "upload_time": "2011-04-11T00:39:36", "upload_time_iso_8601": "2011-04-11T00:39:36.712793Z", "url": "https://files.pythonhosted.org/packages/06/38/2cef04b5ee06a10fdf746f5a31b7fece84420b6de745ec6491830854763e/simpleQL-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:18 2020"}