{"info": {"author": "meadsteve", "author_email": "meadsteve@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# Lagom - Dependency injection container\n[![Build Status](https://travis-ci.org/meadsteve/lagom.svg?branch=master)](https://travis-ci.org/meadsteve/lagom)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/meadsteve/lagom/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/meadsteve/lagom/?branch=master)\n[![Code Coverage](https://scrutinizer-ci.com/g/meadsteve/lagom/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/meadsteve/lagom/?branch=master)\n![PyPI](https://img.shields.io/pypi/v/lagom.svg?style=plastic)\n\n## What\nLagom is a dependency injection container designed to give you \"just enough\"\nhelp with building your dependencies. The intention is that almost\nall of your code doesn't know about or rely on lagom. Lagom will\nonly be involved at the top level to pull everything together.\n\nAn example usage can be found here: [github.com/meadsteve/lagom-example-repo](https://github.com/meadsteve/lagom-example-repo)\n\n## Installation\n```bash\npip install lagom\n# or: \n# pipenv install lagom\n# poetry add lagom\n```\n## Usage\nEverything in Lagom is based on types. To create an object\nyou pass the type to the container:\n```python\ncontainer = Container()\nsome_thing = container[SomeClass]\n```\n\n### Defining a singleton\n```python\ncontainer[SomeExpensiveToCreateClass] = SomeExpensiveToCreateClass(\"up\", \"left\")\n```\nalternatively if you want to defer construction until it's needed:\n```python\ncontainer[SomeExpensiveToCreateClass] = Singleton(SomeExpensiveToCreateClass)\n```\n\n\n### Defining a type that gets recreated every time\n```python\ncontainer[SomeClass] = lambda: SomeClass(\"down\", \"spiral\")\n```\nif the type needs things from the container the lambda can take a\nsingle argument which is the container:\n```python\ncontainer[SomeClass] = lambda c: SomeClass(c[SomeOtherDep], \"spinning\")\n```\n\nif your construction logic is longer than would fit in a lambda a\nfunction can also be bound to the container:\n```python\n@dependency_definition(container)\ndef my_constructor() -> MyComplexDep:\n    # Really long\n    # stuff goes here\n    return MyComplexDep(some_number=5)\n```\n\n### Alias a concrete instance to an ABC\n```python\ncontainer[SomeAbc] = ConcreteClass\n```\n\n### Partially bind a function\nApply a function decorator to any function.\n```python\n@bind_to_container(container)\ndef handle_some_request(request: typing.Dict, game: Game):\n    # do something to the game\n    pass\n```\n\nThis function can now be called omitting any arguments \nthat the container knows how to build.\n```python\n# we can now call the following. the game argument will automagically\n# come from the container\nhandle_some_request(request={\"roll_dice\": 5})\n```\n\n\n### Invocation level caching\nSuppose you have a function and you want all the dependencies\nto share an instance of an object then you can define invocation\nlevel shared dependencies.\n\n```python\n\nclass ProfileLoader:\n    def __init__(self, loader: DataLoader):\n        pass\n\nclass AvatarLoader:\n    def __init__(self, loader: DataLoader):\n        pass\n\n@bind_to_container(container, shared=[DataLoader])\ndef handle_some_request(request: typing.Dict, profile: ProfileLoader, user_avatar: AvatarLoader):\n    # do something to the game\n    pass\n```\n\nnow each invocation of handle_some_request will get the same instance\nof loader so this class can cache values for the invocation lifetime.\n\n### Alternative to decorator\nThe above example can also be used without a decorator if you want\nto keep the pure unaltered function available for testing.\n\n```python\ndef handle_some_request(request: typing.Dict, game: Game):\n    pass\n\n# This new function can be bound to a route or used wherever\n# need\nfunc_with_injection = container.partial(handle_some_request)\n```\n## Full Example\n\n### App setup\n```python\nfrom abc import ABC\nfrom dataclasses import dataclass\n\nfrom lagom import Container\n\n#--------------------------------------------------------------\n# Here is an example of some classes your application may be built from\n\n\nDiceApiUrl = NewType(\"DiceApiUrl\", str)\n\n\nclass RateLimitingConfig:\n    pass\n\n\nclass DiceClient(ABC):\n    pass\n\n\nclass HttpDiceClient(DiceClient):\n\n    def __init__(self, url: DiceApiUrl, limiting: RateLimitingConfig):\n        pass\n\n\nclass Game:\n    def __init__(self, dice_roller: DiceClient):\n        pass\n\n#--------------------------------------------------------------\n# Next we setup some definitions\n\ncontainer = Container()\n# We need a specific url\ncontainer[DiceApiUrl] = DiceApiUrl(\"https://roll.diceapi.com\")\n# Wherever our code wants a DiceClient we get the http one\ncontainer[DiceClient] = HttpDiceClient\n\n#--------------------------------------------------------------\n# Now the container can build the game object\n\ngame = container[Game]\n\n```\n\n### Modifying the container instead of patching in tests\nTaking the container from above we can now swap out\nthe dice client to a test double/fake. When we get an\ninstance of the `Game` class it will have the new\nfake dice client injected in.\n\n```python\ndef container_fixture():\n    from my_app.prod_container import container\n    return container.clone() # Cloning enables overwriting deps\n\ndef test_something(container_fixture: Container):\n    container_fixture[DiceClient] = FakeDice(always_roll=6)\n    game_to_test = container_fixture[Game]\n    # TODO: act & assert on something\n```\n\n## Integrations\n\n### Starlette (https://www.starlette.io/)\nTo make integration with starlette simpler a special container is provided\nthat can generate starlette routes.\n\nStarlette endpoints are defined in the normal way. Any extra arguments are\nthen provided by the container:\n```python\nasync def homepage(request, db: DBConnection):\n    user = db.fetch_data_for_user(request.user)\n    return PlainTextResponse(f\"Hello {user.name}\")\n\n\ncontainer = StarletteContainer()\ncontainer[DBConnection] = DB(\"DSN_CONNECTION_GOES_HERE\")\n\n\nroutes = [\n    # This function takes the same arguments as starlette.routing.Route\n    container.route(\"/\", endpoint=homepage),\n]\n\napp = Starlette(routes=routes)\n```\n\n### FastAPI (https://fastapi.tiangolo.com/)\nFastAPI already provides a method for dependency injection however\nif you'd like to use lagom instead a special container is provided.\n\nCalling the method `.depends` will provide a dependency in the format\nthat FastAPI expects:\n\n```python\ncontainer = FastApiContainer()\ncontainer[DBConnection] = DB(\"DSN_CONNECTION_GOES_HERE\")\n\napp = FastAPI()\n\n@app.get(\"/\")\nasync def homepage(request, db = container.depends(DBConnection)):\n    user = db.fetch_data_for_user(request.user)\n    return PlainTextResponse(f\"Hello {user.name}\")\n\n```\n\n### Flask API (https://www.flaskapi.org/)\nA special container is provided for flask. It takes the flask app\nthen provides a wrapped `route` decorator to use:\n\n```python\napp = Flask(__name__)\ncontainer = FlaskContainer(app)\ncontainer[Database] = Singleton(lambda: Database(\"connection details\"))\n\n\n@container.route(\"/save_it/<string:thing_to_save>\", methods=['POST'])\ndef save_to_db(thing_to_save, db: Database):\n    db.save(thing_to_save)\n    return 'saved'\n\n```\n(taken from https://github.com/meadsteve/lagom-flask-example/)\n\nThe decorator leaves the original function unaltered so it can be\nused directly in tests.\n\n## Developing/Contributing\nContributions and PRS are welcome. For any large changes please open\nan issue to discuss first. All PRs should pass the tests, type checking\nand styling. To get development setup locally:\n```bash\nmake install # sets up the pipenv virtualenv\n```\nthen \n```bash\nmake format # To format the code\nmake test # To make sure the build will pass\n```\n\n### Design Goals\n* The API should expose sensible typing (for use in pycharm/mypy)\n* Everything should be done by type. No reliance on names.\n* All domain code should remain unmodified. No special decorators.\n* Usage of the container should encourage code to be testable without monkey patching.\n* Embrace modern python features (3.7 at the time of creation)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lagom", "package_url": "https://pypi.org/project/lagom/", "platform": "", "project_url": "https://pypi.org/project/lagom/", "project_urls": null, "release_url": "https://pypi.org/project/lagom/0.7.1/", "requires_dist": null, "requires_python": "~=3.6", "summary": "Lagom, a type based dependency injection container", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Lagom - Dependency injection container</h1>\n<p><a href=\"https://travis-ci.org/meadsteve/lagom\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3be7463f6167369f003f2143e08b61d2a3cef3c6/68747470733a2f2f7472617669732d63692e6f72672f6d65616473746576652f6c61676f6d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://scrutinizer-ci.com/g/meadsteve/lagom/?branch=master\" rel=\"nofollow\"><img alt=\"Scrutinizer Code Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34cf01574864a043fbc38a12d76130140a0b5fe6/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f6d65616473746576652f6c61676f6d2f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a>\n<a href=\"https://scrutinizer-ci.com/g/meadsteve/lagom/?branch=master\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e39e71d5f17be31f05b4d4c706f4c2b5c909d224/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f6d65616473746576652f6c61676f6d2f6261646765732f636f7665726167652e706e673f623d6d6173746572\"></a>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/301b4b45c0b5df169de21a0fcb97622e88eaa9a5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c61676f6d2e7376673f7374796c653d706c6173746963\"></p>\n<h2>What</h2>\n<p>Lagom is a dependency injection container designed to give you \"just enough\"\nhelp with building your dependencies. The intention is that almost\nall of your code doesn't know about or rely on lagom. Lagom will\nonly be involved at the top level to pull everything together.</p>\n<p>An example usage can be found here: <a href=\"https://github.com/meadsteve/lagom-example-repo\" rel=\"nofollow\">github.com/meadsteve/lagom-example-repo</a></p>\n<h2>Installation</h2>\n<pre>pip install lagom\n<span class=\"c1\"># or: </span>\n<span class=\"c1\"># pipenv install lagom</span>\n<span class=\"c1\"># poetry add lagom</span>\n</pre>\n<h2>Usage</h2>\n<p>Everything in Lagom is based on types. To create an object\nyou pass the type to the container:</p>\n<pre><span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">Container</span><span class=\"p\">()</span>\n<span class=\"n\">some_thing</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">SomeClass</span><span class=\"p\">]</span>\n</pre>\n<h3>Defining a singleton</h3>\n<pre><span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">SomeExpensiveToCreateClass</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">SomeExpensiveToCreateClass</span><span class=\"p\">(</span><span class=\"s2\">\"up\"</span><span class=\"p\">,</span> <span class=\"s2\">\"left\"</span><span class=\"p\">)</span>\n</pre>\n<p>alternatively if you want to defer construction until it's needed:</p>\n<pre><span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">SomeExpensiveToCreateClass</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Singleton</span><span class=\"p\">(</span><span class=\"n\">SomeExpensiveToCreateClass</span><span class=\"p\">)</span>\n</pre>\n<h3>Defining a type that gets recreated every time</h3>\n<pre><span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">SomeClass</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">SomeClass</span><span class=\"p\">(</span><span class=\"s2\">\"down\"</span><span class=\"p\">,</span> <span class=\"s2\">\"spiral\"</span><span class=\"p\">)</span>\n</pre>\n<p>if the type needs things from the container the lambda can take a\nsingle argument which is the container:</p>\n<pre><span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">SomeClass</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"n\">SomeClass</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">SomeOtherDep</span><span class=\"p\">],</span> <span class=\"s2\">\"spinning\"</span><span class=\"p\">)</span>\n</pre>\n<p>if your construction logic is longer than would fit in a lambda a\nfunction can also be bound to the container:</p>\n<pre><span class=\"nd\">@dependency_definition</span><span class=\"p\">(</span><span class=\"n\">container</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_constructor</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">MyComplexDep</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Really long</span>\n    <span class=\"c1\"># stuff goes here</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyComplexDep</span><span class=\"p\">(</span><span class=\"n\">some_number</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h3>Alias a concrete instance to an ABC</h3>\n<pre><span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">SomeAbc</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ConcreteClass</span>\n</pre>\n<h3>Partially bind a function</h3>\n<p>Apply a function decorator to any function.</p>\n<pre><span class=\"nd\">@bind_to_container</span><span class=\"p\">(</span><span class=\"n\">container</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">handle_some_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"p\">:</span> <span class=\"n\">Game</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do something to the game</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>This function can now be called omitting any arguments\nthat the container knows how to build.</p>\n<pre><span class=\"c1\"># we can now call the following. the game argument will automagically</span>\n<span class=\"c1\"># come from the container</span>\n<span class=\"n\">handle_some_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"roll_dice\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n</pre>\n<h3>Invocation level caching</h3>\n<p>Suppose you have a function and you want all the dependencies\nto share an instance of an object then you can define invocation\nlevel shared dependencies.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ProfileLoader</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">loader</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AvatarLoader</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">loader</span><span class=\"p\">:</span> <span class=\"n\">DataLoader</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"nd\">@bind_to_container</span><span class=\"p\">(</span><span class=\"n\">container</span><span class=\"p\">,</span> <span class=\"n\">shared</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">DataLoader</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">handle_some_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">:</span> <span class=\"n\">ProfileLoader</span><span class=\"p\">,</span> <span class=\"n\">user_avatar</span><span class=\"p\">:</span> <span class=\"n\">AvatarLoader</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do something to the game</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>now each invocation of handle_some_request will get the same instance\nof loader so this class can cache values for the invocation lifetime.</p>\n<h3>Alternative to decorator</h3>\n<p>The above example can also be used without a decorator if you want\nto keep the pure unaltered function available for testing.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">handle_some_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"p\">:</span> <span class=\"n\">Game</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"c1\"># This new function can be bound to a route or used wherever</span>\n<span class=\"c1\"># need</span>\n<span class=\"n\">func_with_injection</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">handle_some_request</span><span class=\"p\">)</span>\n</pre>\n<h2>Full Example</h2>\n<h3>App setup</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">lagom</span> <span class=\"kn\">import</span> <span class=\"n\">Container</span>\n\n<span class=\"c1\">#--------------------------------------------------------------</span>\n<span class=\"c1\"># Here is an example of some classes your application may be built from</span>\n\n\n<span class=\"n\">DiceApiUrl</span> <span class=\"o\">=</span> <span class=\"n\">NewType</span><span class=\"p\">(</span><span class=\"s2\">\"DiceApiUrl\"</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RateLimitingConfig</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DiceClient</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HttpDiceClient</span><span class=\"p\">(</span><span class=\"n\">DiceClient</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">DiceApiUrl</span><span class=\"p\">,</span> <span class=\"n\">limiting</span><span class=\"p\">:</span> <span class=\"n\">RateLimitingConfig</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Game</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dice_roller</span><span class=\"p\">:</span> <span class=\"n\">DiceClient</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"c1\">#--------------------------------------------------------------</span>\n<span class=\"c1\"># Next we setup some definitions</span>\n\n<span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">Container</span><span class=\"p\">()</span>\n<span class=\"c1\"># We need a specific url</span>\n<span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">DiceApiUrl</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DiceApiUrl</span><span class=\"p\">(</span><span class=\"s2\">\"https://roll.diceapi.com\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Wherever our code wants a DiceClient we get the http one</span>\n<span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">DiceClient</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">HttpDiceClient</span>\n\n<span class=\"c1\">#--------------------------------------------------------------</span>\n<span class=\"c1\"># Now the container can build the game object</span>\n\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">Game</span><span class=\"p\">]</span>\n</pre>\n<h3>Modifying the container instead of patching in tests</h3>\n<p>Taking the container from above we can now swap out\nthe dice client to a test double/fake. When we get an\ninstance of the <code>Game</code> class it will have the new\nfake dice client injected in.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">container_fixture</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">my_app.prod_container</span> <span class=\"kn\">import</span> <span class=\"n\">container</span>\n    <span class=\"k\">return</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span> <span class=\"c1\"># Cloning enables overwriting deps</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">container_fixture</span><span class=\"p\">:</span> <span class=\"n\">Container</span><span class=\"p\">):</span>\n    <span class=\"n\">container_fixture</span><span class=\"p\">[</span><span class=\"n\">DiceClient</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">FakeDice</span><span class=\"p\">(</span><span class=\"n\">always_roll</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n    <span class=\"n\">game_to_test</span> <span class=\"o\">=</span> <span class=\"n\">container_fixture</span><span class=\"p\">[</span><span class=\"n\">Game</span><span class=\"p\">]</span>\n    <span class=\"c1\"># TODO: act &amp; assert on something</span>\n</pre>\n<h2>Integrations</h2>\n<h3>Starlette (<a href=\"https://www.starlette.io/\" rel=\"nofollow\">https://www.starlette.io/</a>)</h3>\n<p>To make integration with starlette simpler a special container is provided\nthat can generate starlette routes.</p>\n<p>Starlette endpoints are defined in the normal way. Any extra arguments are\nthen provided by the container:</p>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">homepage</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">DBConnection</span><span class=\"p\">):</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">fetch_data_for_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">PlainTextResponse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Hello </span><span class=\"si\">{</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">StarletteContainer</span><span class=\"p\">()</span>\n<span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">DBConnection</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DB</span><span class=\"p\">(</span><span class=\"s2\">\"DSN_CONNECTION_GOES_HERE\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">routes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># This function takes the same arguments as starlette.routing.Route</span>\n    <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"n\">homepage</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Starlette</span><span class=\"p\">(</span><span class=\"n\">routes</span><span class=\"o\">=</span><span class=\"n\">routes</span><span class=\"p\">)</span>\n</pre>\n<h3>FastAPI (<a href=\"https://fastapi.tiangolo.com/\" rel=\"nofollow\">https://fastapi.tiangolo.com/</a>)</h3>\n<p>FastAPI already provides a method for dependency injection however\nif you'd like to use lagom instead a special container is provided.</p>\n<p>Calling the method <code>.depends</code> will provide a dependency in the format\nthat FastAPI expects:</p>\n<pre><span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">FastApiContainer</span><span class=\"p\">()</span>\n<span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">DBConnection</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DB</span><span class=\"p\">(</span><span class=\"s2\">\"DSN_CONNECTION_GOES_HERE\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">homepage</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">depends</span><span class=\"p\">(</span><span class=\"n\">DBConnection</span><span class=\"p\">)):</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">fetch_data_for_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">PlainTextResponse</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Hello </span><span class=\"si\">{</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Flask API (<a href=\"https://www.flaskapi.org/\" rel=\"nofollow\">https://www.flaskapi.org/</a>)</h3>\n<p>A special container is provided for flask. It takes the flask app\nthen provides a wrapped <code>route</code> decorator to use:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">FlaskContainer</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">container</span><span class=\"p\">[</span><span class=\"n\">Database</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Singleton</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s2\">\"connection details\"</span><span class=\"p\">))</span>\n\n\n<span class=\"nd\">@container</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/save_it/&lt;string:thing_to_save&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">save_to_db</span><span class=\"p\">(</span><span class=\"n\">thing_to_save</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">Database</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">thing_to_save</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'saved'</span>\n</pre>\n<p>(taken from <a href=\"https://github.com/meadsteve/lagom-flask-example/\" rel=\"nofollow\">https://github.com/meadsteve/lagom-flask-example/</a>)</p>\n<p>The decorator leaves the original function unaltered so it can be\nused directly in tests.</p>\n<h2>Developing/Contributing</h2>\n<p>Contributions and PRS are welcome. For any large changes please open\nan issue to discuss first. All PRs should pass the tests, type checking\nand styling. To get development setup locally:</p>\n<pre>make install <span class=\"c1\"># sets up the pipenv virtualenv</span>\n</pre>\n<p>then</p>\n<pre>make format <span class=\"c1\"># To format the code</span>\nmake <span class=\"nb\">test</span> <span class=\"c1\"># To make sure the build will pass</span>\n</pre>\n<h3>Design Goals</h3>\n<ul>\n<li>The API should expose sensible typing (for use in pycharm/mypy)</li>\n<li>Everything should be done by type. No reliance on names.</li>\n<li>All domain code should remain unmodified. No special decorators.</li>\n<li>Usage of the container should encourage code to be testable without monkey patching.</li>\n<li>Embrace modern python features (3.7 at the time of creation)</li>\n</ul>\n\n          </div>"}, "last_serial": 7172326, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8dc2fd6de6d43471d57587b1e8dc62fe", "sha256": "e740e63a543816a83a594c07bbb8a2b88ae132117cc72f1af0321612894f2993"}, "downloads": -1, "filename": "lagom-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8dc2fd6de6d43471d57587b1e8dc62fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7555, "upload_time": "2019-06-02T11:28:14", "upload_time_iso_8601": "2019-06-02T11:28:14.914806Z", "url": "https://files.pythonhosted.org/packages/f1/c9/f3af210317a26c15a244314c2e7a6ae6fdb5936f2adbda5c432f9ec47f66/lagom-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2591b60b9043077e632454b1da593f0c", "sha256": "10f97c23e113882d4a6d2d337ae58f7228218ea73b9f35cfff473bd0ce0364a2"}, "downloads": -1, "filename": "lagom-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2591b60b9043077e632454b1da593f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10355, "upload_time": "2019-06-02T11:28:21", "upload_time_iso_8601": "2019-06-02T11:28:21.641083Z", "url": "https://files.pythonhosted.org/packages/e6/53/8174b5076c0f172cdde6c84e25edcf2dd7d072219a83217406ac761f3ba0/lagom-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "abf5e753ecc98ad88000b71fc41f6f7b", "sha256": "4800cc9016cb0fbe37c9642f423b049b31bdeee8be0ad6f0f9e3c95263e99e5b"}, "downloads": -1, "filename": "lagom-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "abf5e753ecc98ad88000b71fc41f6f7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 8517, "upload_time": "2019-06-02T11:45:53", "upload_time_iso_8601": "2019-06-02T11:45:53.786929Z", "url": "https://files.pythonhosted.org/packages/23/80/4d0ad9a911be1b8b3b33fbad3b4b3c22ce21c81329ee70c69834ec88c053/lagom-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c81d20005ad6d551dd997c1049e746b", "sha256": "32dbafa7c3866d82db2af821846b90f971320d863da7664b9e268668819a4d05"}, "downloads": -1, "filename": "lagom-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6c81d20005ad6d551dd997c1049e746b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 10750, "upload_time": "2019-06-02T11:45:57", "upload_time_iso_8601": "2019-06-02T11:45:57.727717Z", "url": "https://files.pythonhosted.org/packages/df/6b/848715f89f24993f62b69aa8ad64cf33aa9254e467c6fb99081fb039c7b5/lagom-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "082cb04baff085db2faefd162f9a7cdb", "sha256": "e7637d004de4f703392fd5f0955317c33f0588a213734452c18ef3a6c899f975"}, "downloads": -1, "filename": "lagom-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "082cb04baff085db2faefd162f9a7cdb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 10014, "upload_time": "2019-06-06T12:21:37", "upload_time_iso_8601": "2019-06-06T12:21:37.916647Z", "url": "https://files.pythonhosted.org/packages/21/ee/64d67ef0f1ebad3cdadd64e90f9ee57f3aff6f801cf836c98ca8fe1303bf/lagom-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1e152b58f834753216939edffd1b674", "sha256": "25e448af0ea46bb0fb912bf520722250da1b67aeb07ec9936ec943051bb1667b"}, "downloads": -1, "filename": "lagom-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e1e152b58f834753216939edffd1b674", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 14119, "upload_time": "2019-06-06T12:21:43", "upload_time_iso_8601": "2019-06-06T12:21:43.962729Z", "url": "https://files.pythonhosted.org/packages/bc/85/6796ba28efcf4e18f72d63aa2a13237ed941f60bc6c5fb4bc31b2d39e2d4/lagom-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "84d32d1ab63c1276dc6196e516225f05", "sha256": "cf3858ad86525a5612c8732c5550e0ec8927e6d0ca7c881dc11852c473ccd6ec"}, "downloads": -1, "filename": "lagom-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "84d32d1ab63c1276dc6196e516225f05", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 10225, "upload_time": "2019-08-01T07:01:21", "upload_time_iso_8601": "2019-08-01T07:01:21.938319Z", "url": "https://files.pythonhosted.org/packages/47/fe/00d3b947e81310cc17039f5a4a3773070c5147d3ea9e6d5be5d6fbe19949/lagom-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d8c21b96700492c04dedd50252538d1", "sha256": "8b837285692b333215cd9b3aec4f69c9d516d4f555b175db91a868d589feb0f6"}, "downloads": -1, "filename": "lagom-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7d8c21b96700492c04dedd50252538d1", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 14121, "upload_time": "2019-08-01T07:01:28", "upload_time_iso_8601": "2019-08-01T07:01:28.605478Z", "url": "https://files.pythonhosted.org/packages/a3/e3/cd0cc0b0c307cdded439738647cf72c311056d32b30b53874f997e568af4/lagom-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "eb8d687e2623ba46d90fd7cecc78ea1e", "sha256": "ed6ef7b5d0fa44cfe069ce792ff4269bfae340e93057caee75f639fe88e82943"}, "downloads": -1, "filename": "lagom-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eb8d687e2623ba46d90fd7cecc78ea1e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 10434, "upload_time": "2019-08-10T10:53:13", "upload_time_iso_8601": "2019-08-10T10:53:13.554428Z", "url": "https://files.pythonhosted.org/packages/d4/88/68c70acbc5e13c73d4327739c23cdf01486ccdfca2ea9cb560fd2c0ddbe0/lagom-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38b1af6af587d6876cbdefd50dbc0d0e", "sha256": "1f10f0ebddf0f89010957a47e72ebf5d6f666e644a2452a6b9007b35dd780e56"}, "downloads": -1, "filename": "lagom-0.3.1.tar.gz", "has_sig": false, "md5_digest": "38b1af6af587d6876cbdefd50dbc0d0e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 14655, "upload_time": "2019-08-10T10:53:17", "upload_time_iso_8601": "2019-08-10T10:53:17.765643Z", "url": "https://files.pythonhosted.org/packages/1c/e7/c46518471530664078b93d48f4aad9ddf0af693aba91c76758e166c97098/lagom-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "3c3e45a43f44e8d7ec83126c6227241f", "sha256": "8ca013d33ab8efd4ac8d9c48ad6418975c87f0bcbb78dce5172f9c48c0048b84"}, "downloads": -1, "filename": "lagom-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c3e45a43f44e8d7ec83126c6227241f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 10277, "upload_time": "2019-08-18T12:17:43", "upload_time_iso_8601": "2019-08-18T12:17:43.739376Z", "url": "https://files.pythonhosted.org/packages/c8/06/62c28a8903d71853546ae77ff62155b3bb8c1851dfaafec7c2d38df29033/lagom-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6775214fdc83e8d8679bd8aa298be628", "sha256": "fc0d066ed1b102ccdf43fe70326cf962c1c75bb44ca1f53d10edf0f537c48b4a"}, "downloads": -1, "filename": "lagom-0.3.2.tar.gz", "has_sig": false, "md5_digest": "6775214fdc83e8d8679bd8aa298be628", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 14800, "upload_time": "2019-08-18T12:17:48", "upload_time_iso_8601": "2019-08-18T12:17:48.920322Z", "url": "https://files.pythonhosted.org/packages/f5/01/44a91e50aa938b2fb8e04a3f650cce8922f952d5fa857e7e1d4b99eadbef/lagom-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "661e2a49c20ec00a4dbfc5844d4ef89a", "sha256": "23112197f6a3939242e25d955828c03d791589dfd6369828edf98350aa9d0399"}, "downloads": -1, "filename": "lagom-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "661e2a49c20ec00a4dbfc5844d4ef89a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 11350, "upload_time": "2020-02-03T14:00:50", "upload_time_iso_8601": "2020-02-03T14:00:50.885253Z", "url": "https://files.pythonhosted.org/packages/ab/ef/5f0d03e36bbbbd1407120c1b1a40e50618fd4cde62c11eff8ac6635ab159/lagom-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "705a2d6f4351522ba30609b270a7e28a", "sha256": "b03b4bdeaccd14866078100e36534f32f739d8036507b6ab77d5ee5897723d9e"}, "downloads": -1, "filename": "lagom-0.4.0.tar.gz", "has_sig": false, "md5_digest": "705a2d6f4351522ba30609b270a7e28a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 15528, "upload_time": "2020-02-03T14:00:57", "upload_time_iso_8601": "2020-02-03T14:00:57.110794Z", "url": "https://files.pythonhosted.org/packages/9c/57/4d5f6cd233c3ae78854cf00774ad4091489f99491a07c202f85676f655f6/lagom-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "356514bd419df9fa6352f78de77b6377", "sha256": "463e6734170fc14b126bb47edf716a7707712d02589abd42edb1624b43f902a1"}, "downloads": -1, "filename": "lagom-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "356514bd419df9fa6352f78de77b6377", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 13271, "upload_time": "2020-02-03T15:22:03", "upload_time_iso_8601": "2020-02-03T15:22:03.166290Z", "url": "https://files.pythonhosted.org/packages/89/00/0bbd4fac8e5997be16003292fb3e3657aa5423af845b6a83e2658e39c5b7/lagom-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "439ebc02012831bc49c9e8d8357efa85", "sha256": "b6a05eb15fc4ce418440c815b9b9658692d49960807c147efa1c09f680327969"}, "downloads": -1, "filename": "lagom-0.4.1.tar.gz", "has_sig": false, "md5_digest": "439ebc02012831bc49c9e8d8357efa85", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 16735, "upload_time": "2020-02-03T15:22:06", "upload_time_iso_8601": "2020-02-03T15:22:06.759271Z", "url": "https://files.pythonhosted.org/packages/ab/80/7d2a46804bb564dbbe3144aea00f8521219399b98badc980378c9673b8d5/lagom-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "2f1ec8589791e7f1ff8b76b43fe37616", "sha256": "8d8515cce7596bb4f6199ddfd09d20ed94052d44a679576960811eabb5a9bd81"}, "downloads": -1, "filename": "lagom-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2f1ec8589791e7f1ff8b76b43fe37616", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 13516, "upload_time": "2020-02-04T08:29:00", "upload_time_iso_8601": "2020-02-04T08:29:00.375535Z", "url": "https://files.pythonhosted.org/packages/22/1f/c8b15dff41a07b644116b161606211f16f3c082213ac984d58e7d640261b/lagom-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3a9ba53ab09e7fb4655332366a07c69", "sha256": "ec0ebf0d6ca50e24934944a015b69896ddfd729adf025a278e7bae867122904a"}, "downloads": -1, "filename": "lagom-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a3a9ba53ab09e7fb4655332366a07c69", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 17517, "upload_time": "2020-02-04T08:29:04", "upload_time_iso_8601": "2020-02-04T08:29:04.224733Z", "url": "https://files.pythonhosted.org/packages/13/9e/ad8c9e1793f0aa28e557254b730273b99ea74a1a4d339c46d4eaf4bb6cee/lagom-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "26a66b7a398cb5cb89ad85b2c92ba96c", "sha256": "94d016240aa04bba4aac2e4966805015b91125210fde7842536038a182d5176f"}, "downloads": -1, "filename": "lagom-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26a66b7a398cb5cb89ad85b2c92ba96c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 13899, "upload_time": "2020-02-04T08:54:44", "upload_time_iso_8601": "2020-02-04T08:54:44.463936Z", "url": "https://files.pythonhosted.org/packages/07/88/5cdd1023515f1c0488ebf40a9b021b3ad469e87365ce0e12c7efaf5154ab/lagom-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16fb37daa9d58d5ed1471e8a25116ec8", "sha256": "fad4487039b11749596856024cfaa5129dfad75088211c86aaad728bdc4a0642"}, "downloads": -1, "filename": "lagom-0.5.1.tar.gz", "has_sig": false, "md5_digest": "16fb37daa9d58d5ed1471e8a25116ec8", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 17747, "upload_time": "2020-02-04T08:54:49", "upload_time_iso_8601": "2020-02-04T08:54:49.346545Z", "url": "https://files.pythonhosted.org/packages/94/b9/fd56401e97efb0c4ce6391a4f5e901ce8087245f3a685809216a2e5e45e0/lagom-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "f598e68de9af447bfbf949294942c0ab", "sha256": "940c0c7a1bf9f2cea03904d75f3e73022c5163be0305e589477c546e0c4aca2f"}, "downloads": -1, "filename": "lagom-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f598e68de9af447bfbf949294942c0ab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 14119, "upload_time": "2020-02-04T09:25:51", "upload_time_iso_8601": "2020-02-04T09:25:51.589851Z", "url": "https://files.pythonhosted.org/packages/1f/f7/24e076a11de205a2ae150c76b94bfa1890fb56ecf6351c794cc656c3c536/lagom-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed3e1206b3360b8feab5c46e949c6890", "sha256": "d12cd8fac129c571bcc682444230cb8f9d997d1e93f8fbf0f88168c039f5023d"}, "downloads": -1, "filename": "lagom-0.5.2.tar.gz", "has_sig": false, "md5_digest": "ed3e1206b3360b8feab5c46e949c6890", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 18182, "upload_time": "2020-02-04T09:25:55", "upload_time_iso_8601": "2020-02-04T09:25:55.320816Z", "url": "https://files.pythonhosted.org/packages/a2/e0/c6723faa143442ff9f4132585cee42b0ad06f77c17db4264b12e60f31544/lagom-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "bdd455d1c0aa91615c80d1c9920b899f", "sha256": "1bcdabd956605e80d743d0bcb9984d3d9bf101c98d7719bdb3ea1348b33b59ca"}, "downloads": -1, "filename": "lagom-0.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdd455d1c0aa91615c80d1c9920b899f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 14599, "upload_time": "2020-02-04T09:44:10", "upload_time_iso_8601": "2020-02-04T09:44:10.109346Z", "url": "https://files.pythonhosted.org/packages/68/ed/52f4a7d273e03c459b98117b0af7e381ad6cb4d20689be547019a77cdab2/lagom-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "def846cc5ad0b4c55d746e94a8848b53", "sha256": "be7ba5652d7fca441f78812f95fbda4e67c6017756d85f4fdc3e1e316a238580"}, "downloads": -1, "filename": "lagom-0.5.3.tar.gz", "has_sig": false, "md5_digest": "def846cc5ad0b4c55d746e94a8848b53", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 18283, "upload_time": "2020-02-04T09:44:13", "upload_time_iso_8601": "2020-02-04T09:44:13.807271Z", "url": "https://files.pythonhosted.org/packages/7b/f0/85a7c3ca4b86fffaabd13d9b1725b793b96843aff16b140fa2b5af899e0f/lagom-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "6143ff51657f6e8e0bc24cd858ea3f91", "sha256": "97e5acb8111bdf6e7141acf1565712425fbd9d3cf3bce8e3aae2f473af90ccbb"}, "downloads": -1, "filename": "lagom-0.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6143ff51657f6e8e0bc24cd858ea3f91", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 14629, "upload_time": "2020-02-04T10:13:09", "upload_time_iso_8601": "2020-02-04T10:13:09.615869Z", "url": "https://files.pythonhosted.org/packages/65/63/7f6c08c759cd2a604679641c54337869a095dcaff0154bd6a7fa6f682411/lagom-0.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a0d27728bef28f0cf7d4a544f964f70", "sha256": "799e500245a3f9f71cbe922db94218943dc9aa29274c34710f6e4f001e01a707"}, "downloads": -1, "filename": "lagom-0.5.4.tar.gz", "has_sig": false, "md5_digest": "3a0d27728bef28f0cf7d4a544f964f70", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 18389, "upload_time": "2020-02-04T10:13:13", "upload_time_iso_8601": "2020-02-04T10:13:13.465972Z", "url": "https://files.pythonhosted.org/packages/4a/b7/f2369c8aa7d3d437867a37d1c3c47545d80d0dbece4af8ea0c0510a832a6/lagom-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "6d58e1c45dbdd13639e91664f3e8553c", "sha256": "4864872d1bda0f44d8bcd39d547216f7faccd9058e19d5074c7b7dc8996611be"}, "downloads": -1, "filename": "lagom-0.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d58e1c45dbdd13639e91664f3e8553c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 14947, "upload_time": "2020-02-04T10:47:43", "upload_time_iso_8601": "2020-02-04T10:47:43.917879Z", "url": "https://files.pythonhosted.org/packages/3e/ba/b27b6bf820b9964d322c0aa2661abac4fc874599c1e247dabc5cb18fb0bf/lagom-0.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c39904ba2c38dd35fab9f97f650967e", "sha256": "4c8a235fac4e465a3bf422481a21685ff92b6482c5840317a705805ab16ca268"}, "downloads": -1, "filename": "lagom-0.5.5.tar.gz", "has_sig": false, "md5_digest": "4c39904ba2c38dd35fab9f97f650967e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 18571, "upload_time": "2020-02-04T10:47:48", "upload_time_iso_8601": "2020-02-04T10:47:48.006391Z", "url": "https://files.pythonhosted.org/packages/50/87/c8ca113300b319756f2ead53db8723ead08f97379da258eb2bd35994a606/lagom-0.5.5.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "8aacf8148c09e1943b656cc1c9a3139e", "sha256": "12396371d767620107f974a5f827fbfb5bc3da1fda41db70882cb84e4d6c2068"}, "downloads": -1, "filename": "lagom-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8aacf8148c09e1943b656cc1c9a3139e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 15175, "upload_time": "2020-02-04T13:05:15", "upload_time_iso_8601": "2020-02-04T13:05:15.874448Z", "url": "https://files.pythonhosted.org/packages/c6/cc/39b4ddf2f05055a49210aa2b6397451bedc9a04f5787fc1d254c83dea0c1/lagom-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "772cd78050f30b7393b9e64d3e66e168", "sha256": "d3fbf14eee3c0bd52bc841329f9b15e98a9476befbd6c6587218914ac654c424"}, "downloads": -1, "filename": "lagom-0.6.0.tar.gz", "has_sig": false, "md5_digest": "772cd78050f30b7393b9e64d3e66e168", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 18675, "upload_time": "2020-02-04T13:05:19", "upload_time_iso_8601": "2020-02-04T13:05:19.840635Z", "url": "https://files.pythonhosted.org/packages/b0/48/47d2627aecac1c256d97dd7b1912cadbb6a410376981d4e3a9f6aa81c8eb/lagom-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "74a70e978c6612dbe763094ea0f52807", "sha256": "ee47bd4c670877fe64bf71cd4884edbcf3f7e2f0d6fbe2380cbedbb3957a4035"}, "downloads": -1, "filename": "lagom-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "74a70e978c6612dbe763094ea0f52807", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 17318, "upload_time": "2020-02-05T12:30:01", "upload_time_iso_8601": "2020-02-05T12:30:01.714350Z", "url": "https://files.pythonhosted.org/packages/87/aa/52443088c7677806b643d63c7f9cae7af476794ed22856cc15ea1d93e28a/lagom-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e6515034b529ab9517adffabdf5e13c", "sha256": "3b22060b4f5ce7d46addfd96708126b8a73d7d800a20f85634cc2afd95f6714b"}, "downloads": -1, "filename": "lagom-0.6.1.tar.gz", "has_sig": false, "md5_digest": "8e6515034b529ab9517adffabdf5e13c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 20812, "upload_time": "2020-02-05T12:30:05", "upload_time_iso_8601": "2020-02-05T12:30:05.113085Z", "url": "https://files.pythonhosted.org/packages/85/b3/2c6333d93320e9732c594f1344d3f5214dce970f0941846740de9ed80f1c/lagom-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "978bba41f1f666dc511729d402a105e7", "sha256": "8d759c10e3db0642268fc7b139ceba2d56432cddea62614284ed925812dce30a"}, "downloads": -1, "filename": "lagom-0.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "978bba41f1f666dc511729d402a105e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 17394, "upload_time": "2020-02-05T12:55:36", "upload_time_iso_8601": "2020-02-05T12:55:36.616857Z", "url": "https://files.pythonhosted.org/packages/9a/f6/fc234330ecaa1610e19139f2ac9e6192eaf03753080f536dc3f08d26c606/lagom-0.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dc513ad5dd260627555b98c1036e49a", "sha256": "440677e86d50656cd76389aac5f23f57470119d195ca8c5e9b793dee338d711e"}, "downloads": -1, "filename": "lagom-0.6.2.tar.gz", "has_sig": false, "md5_digest": "2dc513ad5dd260627555b98c1036e49a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 20950, "upload_time": "2020-02-05T12:55:41", "upload_time_iso_8601": "2020-02-05T12:55:41.071528Z", "url": "https://files.pythonhosted.org/packages/d7/15/d9f12ff5f90581f1e837dcaa79e0a93918e6dbe166c73d497d564d67bdd7/lagom-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "6978e56eae31249c6ec061cd807262e1", "sha256": "fcaa2f7afa0476ffd9d7c1e6aac97f42f100b6f6ed6b316d9161ed475fb5e9f3"}, "downloads": -1, "filename": "lagom-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6978e56eae31249c6ec061cd807262e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.7", "size": 17963, "upload_time": "2020-02-05T14:08:04", "upload_time_iso_8601": "2020-02-05T14:08:04.562790Z", "url": "https://files.pythonhosted.org/packages/22/39/08d425d903e7a369fc0cb40388ca99dddc11e64289f0ad83e445ec5724f7/lagom-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f836fb82dcb31e0a9b966af8bfcb4c62", "sha256": "5fb73395741a83e492cce6ffa1e8e25280c53207c3a307774f40d6219e7698fa"}, "downloads": -1, "filename": "lagom-0.6.3.tar.gz", "has_sig": false, "md5_digest": "f836fb82dcb31e0a9b966af8bfcb4c62", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.7", "size": 22074, "upload_time": "2020-02-05T14:08:09", "upload_time_iso_8601": "2020-02-05T14:08:09.169883Z", "url": "https://files.pythonhosted.org/packages/1e/ab/69d8350bf89d4c2e4aaf9c7dfbbe75907e6952cc9574178fbeb02afc48e9/lagom-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "bf4b41d461e5e62549aa78a266b5e7e8", "sha256": "e3084b146df1ef96f4b65a83ba425e2b002576840022619cb2e75ac71e176b7d"}, "downloads": -1, "filename": "lagom-0.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf4b41d461e5e62549aa78a266b5e7e8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 17960, "upload_time": "2020-02-05T14:40:05", "upload_time_iso_8601": "2020-02-05T14:40:05.394905Z", "url": "https://files.pythonhosted.org/packages/1c/6e/67331476e49b4bd49b0537b2f34aab673d866afae10b77a2a10658f3ff24/lagom-0.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6257f1028aa829262f112baff38657eb", "sha256": "9502ca4685ad173a348e9505003a2f959812b68bd52145a15f4dfa2ef81c5457"}, "downloads": -1, "filename": "lagom-0.6.4.tar.gz", "has_sig": false, "md5_digest": "6257f1028aa829262f112baff38657eb", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 22089, "upload_time": "2020-02-05T14:40:09", "upload_time_iso_8601": "2020-02-05T14:40:09.595095Z", "url": "https://files.pythonhosted.org/packages/a7/68/b34960ca27beadfac35d07a0b1a2c73c411e997b8978b536902ce74d2eff/lagom-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "fe588c995a95f7e8d16800818e2c633f", "sha256": "946c25de63aef258229a1d4cafeedde37d5e93285442d4305f722dc500c5b533"}, "downloads": -1, "filename": "lagom-0.6.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fe588c995a95f7e8d16800818e2c633f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 18902, "upload_time": "2020-02-06T10:01:20", "upload_time_iso_8601": "2020-02-06T10:01:20.661258Z", "url": "https://files.pythonhosted.org/packages/ec/19/bdfccc972b537b8457b1e66085d61aa38108ad47cb869997b2a7b699ba44/lagom-0.6.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cee63af64c3880b62c80d85bd6ca3548", "sha256": "2e64257e485f7c9946209ff076939b8b8bcdf1a94337811e0b17ca160193967b"}, "downloads": -1, "filename": "lagom-0.6.5.tar.gz", "has_sig": false, "md5_digest": "cee63af64c3880b62c80d85bd6ca3548", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 24703, "upload_time": "2020-02-06T10:01:24", "upload_time_iso_8601": "2020-02-06T10:01:24.791964Z", "url": "https://files.pythonhosted.org/packages/3c/57/59af9ac213be3ca91858f4f44eb277efdccfc8d94c11558bfed379c93994/lagom-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "ccc442d07cdeeef80968326ed00bcb65", "sha256": "e91005da3137048e34867e12cd35445a55d095c290208cb993d570e9de94cbf3"}, "downloads": -1, "filename": "lagom-0.6.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ccc442d07cdeeef80968326ed00bcb65", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 19456, "upload_time": "2020-02-06T14:24:21", "upload_time_iso_8601": "2020-02-06T14:24:21.484424Z", "url": "https://files.pythonhosted.org/packages/6e/2b/1df07c17b40a498da8f7eb702d9d8c5293f089a4610b60a198dc01159f1c/lagom-0.6.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11b89511aa28ac1892c2cc7a3f8400d4", "sha256": "e6a8fc08f5efd88b0748e5f5f2237419de7b868aa95e8d25197ea3e66a65a893"}, "downloads": -1, "filename": "lagom-0.6.6.tar.gz", "has_sig": false, "md5_digest": "11b89511aa28ac1892c2cc7a3f8400d4", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25026, "upload_time": "2020-02-06T14:24:25", "upload_time_iso_8601": "2020-02-06T14:24:25.790785Z", "url": "https://files.pythonhosted.org/packages/ec/b4/f87d24ef9ed8d463baef4e502979c43068b65c5d2ebe1b3ceb5f77470a70/lagom-0.6.6.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "8bb537bca951aa140096362f96cad08e", "sha256": "e85a5b6ffba14b66489a3d1e7f136ca337713117c5582f500e6cdb1c1fe22248"}, "downloads": -1, "filename": "lagom-0.6.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8bb537bca951aa140096362f96cad08e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 18981, "upload_time": "2020-02-07T07:17:06", "upload_time_iso_8601": "2020-02-07T07:17:06.249355Z", "url": "https://files.pythonhosted.org/packages/3d/ea/4fa3b6ea9c0f9418efe6a3ce65df4225efc89a95e2542e1a924e5dda8cfc/lagom-0.6.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1894b056058bf7836756fefa022b95cb", "sha256": "f01f72870312a835e45966f6914aead603a33005ca3e95eb246a5acbc6f72f34"}, "downloads": -1, "filename": "lagom-0.6.7.tar.gz", "has_sig": false, "md5_digest": "1894b056058bf7836756fefa022b95cb", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 25148, "upload_time": "2020-02-07T07:17:10", "upload_time_iso_8601": "2020-02-07T07:17:10.815920Z", "url": "https://files.pythonhosted.org/packages/83/cf/884abdc588f71d82e646efc7a4181b30b0fe5e2b386c839833f8ac958383/lagom-0.6.7.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "cee9403d47f8eedeb3ebe4f0c05ddafb", "sha256": "8ef44986c3f0cb065ccf3317a6a1c4f2679f8d65b9e5e65aa79a1ed33c902358"}, "downloads": -1, "filename": "lagom-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cee9403d47f8eedeb3ebe4f0c05ddafb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 26335, "upload_time": "2020-05-03T18:46:41", "upload_time_iso_8601": "2020-05-03T18:46:41.880897Z", "url": "https://files.pythonhosted.org/packages/bb/29/6781a07980a9cc9d6f3d9e444b7e5f0a974d0afafac60ae82a3c45949e92/lagom-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0400beae202688f5a198e1661ad4b685", "sha256": "0be6aec9bd1a20baca4f75a1be024f0505ab92d7e9c06ad7e5df8d5e3d0e01f9"}, "downloads": -1, "filename": "lagom-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0400beae202688f5a198e1661ad4b685", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 29826, "upload_time": "2020-05-03T18:46:45", "upload_time_iso_8601": "2020-05-03T18:46:45.973078Z", "url": "https://files.pythonhosted.org/packages/c8/c2/2e34adc39f3b2f315272ee7d0fb7acc9dbe5610fe08c4782acbd0a8957fd/lagom-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "abfba53693d5ebb3a23cf689c004860a", "sha256": "5b22d0bdc1526ce0be0c29a413a5a06461097414978fe3fd47d2ef0c558f9bff"}, "downloads": -1, "filename": "lagom-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "abfba53693d5ebb3a23cf689c004860a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 27431, "upload_time": "2020-05-05T14:24:00", "upload_time_iso_8601": "2020-05-05T14:24:00.413220Z", "url": "https://files.pythonhosted.org/packages/0c/13/62b5714fcc7e889558e181c30d7f9137f92ce51eca6a06d201352e3c7cba/lagom-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e2e57b4f913dd1679517cb371e8af9f", "sha256": "636c336564d96c71122194222707780a2340b18c9326bf3a2d2a26e1d6887150"}, "downloads": -1, "filename": "lagom-0.7.1.tar.gz", "has_sig": false, "md5_digest": "2e2e57b4f913dd1679517cb371e8af9f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 30494, "upload_time": "2020-05-05T14:24:06", "upload_time_iso_8601": "2020-05-05T14:24:06.313493Z", "url": "https://files.pythonhosted.org/packages/02/db/3a18a52e4c6ffd9a60ba3b4efd3d0f22757a2fe10363d3979859316dc2d0/lagom-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abfba53693d5ebb3a23cf689c004860a", "sha256": "5b22d0bdc1526ce0be0c29a413a5a06461097414978fe3fd47d2ef0c558f9bff"}, "downloads": -1, "filename": "lagom-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "abfba53693d5ebb3a23cf689c004860a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=3.6", "size": 27431, "upload_time": "2020-05-05T14:24:00", "upload_time_iso_8601": "2020-05-05T14:24:00.413220Z", "url": "https://files.pythonhosted.org/packages/0c/13/62b5714fcc7e889558e181c30d7f9137f92ce51eca6a06d201352e3c7cba/lagom-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e2e57b4f913dd1679517cb371e8af9f", "sha256": "636c336564d96c71122194222707780a2340b18c9326bf3a2d2a26e1d6887150"}, "downloads": -1, "filename": "lagom-0.7.1.tar.gz", "has_sig": false, "md5_digest": "2e2e57b4f913dd1679517cb371e8af9f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 30494, "upload_time": "2020-05-05T14:24:06", "upload_time_iso_8601": "2020-05-05T14:24:06.313493Z", "url": "https://files.pythonhosted.org/packages/02/db/3a18a52e4c6ffd9a60ba3b4efd3d0f22757a2fe10363d3979859316dc2d0/lagom-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:16 2020"}