{"info": {"author": "Sagor Sarker", "author_email": "sagorhem3532@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "# Bengal Language Model\nBengali language model is build with fastai's [ULMFit]() and ready for `prediction` and `classfication` task.\n\n\nNB: \n* This tool mostly followed [inltk](https://github.com/goru001/inltk)\n* We separated `Bengali` part with better evaluation results\n\n# Installation\n\n`pip install bnlm`\n\n\n# Evaluation Result\n\n## Language Model\n* Accuracy 48.26% on validation dataset\n* Perplexity: ~22.79\n\n## Training\nTo train with your own corpus follow [this](https://github.com/sagorbrur/Bengali-Language-Model) repository\n\n# Features and API\n\n## Download pretrained Model\nTo start, first download pretrained Language Model and Sentencepiece model\n\n```py\nfrom bnlm.bnlm import download_models\n\ndownload_models()\n\n```\n## Predict N Words\n```py\nfrom bnlm.bnlm import BengaliTokenizer\nfrom bnlm.bnlm import predict_n_words\nmodel_path = 'model'\ninput_sen = \"\u0986\u09ae\u09bf \u09ac\u09be\u099c\u09be\u09b0\u09c7\"\noutput = predict_n_words(input_sen, 3, model_path)\nprint(\"Word Prediction: \", output)\n\n```\n\n## Get Sentence Encoding\n```py\nfrom bnlm.bnlm import BengaliTokenizer\nfrom bnlm.bnlm import get_sentence_encoding\nmodel_path = 'model'\nsp_model = \"model/bn_spm.model\"\ninput_sentence = \"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"\nencoding = get_sentence_encoding(input_sentence, model_path, sp_model)\nprint(\"sentence encoding is: \", encoding)\n\n```\n\n## Get Embedding Vectors\n```py\nfrom bnlm.bnlm import BengaliTokenizer\nfrom bnlm.bnlm import get_embedding_vectors\nmodel_path = 'model'\nsp_model = \"model/bn_spm.model\"\ninput_sentence = \"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"\nembed = get_embedding_vectors(input_sentence, model_path, sp_model)\nprint(\"sentence embedding is : \", embed)\n\n\n```\n\n\n## Sentence Similarity\n```py\nfrom bnlm.bnlm import BengaliTokenizer\nfrom bnlm.bnlm import get_sentence_encoding\nfrom bnlm.bnlm import get_similar_sentences\nmodel_path = 'model'\nsp_model = \"model/bn_spm.model\"\nsentence_1 = \"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"\nsentence_2 = \"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"\nsim = get_sentence_similarity(sentence_1, sentence_2, model_path, sp_model)\nprint(\"similarity is: \", sim)\n\n```\n\n## Get Simillar Sentences\n```py\nfrom bnlm.bnlm import BengaliTokenizer\nfrom bnlm.bnlm import get_embedding_vectors\nfrom bnlm.bnlm import get_similar_sentences\n\nmodel_path = 'model'\nsp_model = \"model/bn_spm.model\"\n\ninput_sentence = \"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"\nsen_pred = get_similar_sentences(input_sentence, 3, model_path, sp_model)\nprint(sen_pred)\n\n\n```\n\n\n## Classification\n```upcomming```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sagorbrur/bnlm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bnlm", "package_url": "https://pypi.org/project/bnlm/", "platform": "", "project_url": "https://pypi.org/project/bnlm/", "project_urls": {"Homepage": "https://github.com/sagorbrur/bnlm"}, "release_url": "https://pypi.org/project/bnlm/1.0.0/", "requires_dist": ["aiohttp (>=3.5.4)", "async-timeout (>=3.0.1)", "bottleneck", "fastprogress (>=0.1.19)", "matplotlib", "numexpr", "numpy (>=1.15)", "nvidia-ml-py3", "packaging", "pandas", "pyyaml", "requests", "scipy", "spacy (>=2.0.18)", "typing", "fastai (==1.0.57)", "sentencepiece", "pynvx (>=1.0.0) ; platform_system == \"Darwin\"", "dataclasses ; python_version < \"3.7\""], "requires_python": "", "summary": "Bengali Language Model", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Bengal Language Model</h1>\n<p>Bengali language model is build with fastai's <a href=\"\" rel=\"nofollow\">ULMFit</a> and ready for <code>prediction</code> and <code>classfication</code> task.</p>\n<p>NB:</p>\n<ul>\n<li>This tool mostly followed <a href=\"https://github.com/goru001/inltk\" rel=\"nofollow\">inltk</a></li>\n<li>We separated <code>Bengali</code> part with better evaluation results</li>\n</ul>\n<h1>Installation</h1>\n<p><code>pip install bnlm</code></p>\n<h1>Evaluation Result</h1>\n<h2>Language Model</h2>\n<ul>\n<li>Accuracy 48.26% on validation dataset</li>\n<li>Perplexity: ~22.79</li>\n</ul>\n<h2>Training</h2>\n<p>To train with your own corpus follow <a href=\"https://github.com/sagorbrur/Bengali-Language-Model\" rel=\"nofollow\">this</a> repository</p>\n<h1>Features and API</h1>\n<h2>Download pretrained Model</h2>\n<p>To start, first download pretrained Language Model and Sentencepiece model</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">download_models</span>\n\n<span class=\"n\">download_models</span><span class=\"p\">()</span>\n</pre>\n<h2>Predict N Words</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">BengaliTokenizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">predict_n_words</span>\n<span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"s1\">'model'</span>\n<span class=\"n\">input_sen</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u0986\u09ae\u09bf \u09ac\u09be\u099c\u09be\u09b0\u09c7\"</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">predict_n_words</span><span class=\"p\">(</span><span class=\"n\">input_sen</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Word Prediction: \"</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">)</span>\n</pre>\n<h2>Get Sentence Encoding</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">BengaliTokenizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">get_sentence_encoding</span>\n<span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"s1\">'model'</span>\n<span class=\"n\">sp_model</span> <span class=\"o\">=</span> <span class=\"s2\">\"model/bn_spm.model\"</span>\n<span class=\"n\">input_sentence</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"</span>\n<span class=\"n\">encoding</span> <span class=\"o\">=</span> <span class=\"n\">get_sentence_encoding</span><span class=\"p\">(</span><span class=\"n\">input_sentence</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">sp_model</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"sentence encoding is: \"</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"p\">)</span>\n</pre>\n<h2>Get Embedding Vectors</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">BengaliTokenizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">get_embedding_vectors</span>\n<span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"s1\">'model'</span>\n<span class=\"n\">sp_model</span> <span class=\"o\">=</span> <span class=\"s2\">\"model/bn_spm.model\"</span>\n<span class=\"n\">input_sentence</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"</span>\n<span class=\"n\">embed</span> <span class=\"o\">=</span> <span class=\"n\">get_embedding_vectors</span><span class=\"p\">(</span><span class=\"n\">input_sentence</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">sp_model</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"sentence embedding is : \"</span><span class=\"p\">,</span> <span class=\"n\">embed</span><span class=\"p\">)</span>\n</pre>\n<h2>Sentence Similarity</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">BengaliTokenizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">get_sentence_encoding</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">get_similar_sentences</span>\n<span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"s1\">'model'</span>\n<span class=\"n\">sp_model</span> <span class=\"o\">=</span> <span class=\"s2\">\"model/bn_spm.model\"</span>\n<span class=\"n\">sentence_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"</span>\n<span class=\"n\">sentence_2</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"</span>\n<span class=\"n\">sim</span> <span class=\"o\">=</span> <span class=\"n\">get_sentence_similarity</span><span class=\"p\">(</span><span class=\"n\">sentence_1</span><span class=\"p\">,</span> <span class=\"n\">sentence_2</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">sp_model</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"similarity is: \"</span><span class=\"p\">,</span> <span class=\"n\">sim</span><span class=\"p\">)</span>\n</pre>\n<h2>Get Simillar Sentences</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">BengaliTokenizer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">get_embedding_vectors</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bnlm.bnlm</span> <span class=\"kn\">import</span> <span class=\"n\">get_similar_sentences</span>\n\n<span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"s1\">'model'</span>\n<span class=\"n\">sp_model</span> <span class=\"o\">=</span> <span class=\"s2\">\"model/bn_spm.model\"</span>\n\n<span class=\"n\">input_sentence</span> <span class=\"o\">=</span> <span class=\"s2\">\"\u0986\u09ae\u09bf \u09ad\u09be\u09a4 \u0996\u09be\u0987\u0964\"</span>\n<span class=\"n\">sen_pred</span> <span class=\"o\">=</span> <span class=\"n\">get_similar_sentences</span><span class=\"p\">(</span><span class=\"n\">input_sentence</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">sp_model</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sen_pred</span><span class=\"p\">)</span>\n</pre>\n<h2>Classification</h2>\n<p><code>upcomming</code></p>\n\n          </div>"}, "last_serial": 6363926, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c415dd79555b2682432f608f89ed7f53", "sha256": "142135b438c5b361d455aa9ef876c2bd239a1b2ab2fc6a3d8123633cbb60eb80"}, "downloads": -1, "filename": "bnlm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c415dd79555b2682432f608f89ed7f53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6470, "upload_time": "2019-12-27T04:33:07", "upload_time_iso_8601": "2019-12-27T04:33:07.902974Z", "url": "https://files.pythonhosted.org/packages/91/cc/de65b81d2b4c013bd5d829e83b919ae1b7f62691f4cced31a6aab6a75fe5/bnlm-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3edaa9076ff313573733f3d9355fb02", "sha256": "d5eb8d80c80fc25beee0a16035974f60ed58c2d71532eab5bec97f4f8979d649"}, "downloads": -1, "filename": "bnlm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a3edaa9076ff313573733f3d9355fb02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4531, "upload_time": "2019-12-27T04:33:10", "upload_time_iso_8601": "2019-12-27T04:33:10.491864Z", "url": "https://files.pythonhosted.org/packages/cc/75/369394d455c7b5068091cca7609bacb50ad120c56cb1f13d33014ad38758/bnlm-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c415dd79555b2682432f608f89ed7f53", "sha256": "142135b438c5b361d455aa9ef876c2bd239a1b2ab2fc6a3d8123633cbb60eb80"}, "downloads": -1, "filename": "bnlm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c415dd79555b2682432f608f89ed7f53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6470, "upload_time": "2019-12-27T04:33:07", "upload_time_iso_8601": "2019-12-27T04:33:07.902974Z", "url": "https://files.pythonhosted.org/packages/91/cc/de65b81d2b4c013bd5d829e83b919ae1b7f62691f4cced31a6aab6a75fe5/bnlm-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3edaa9076ff313573733f3d9355fb02", "sha256": "d5eb8d80c80fc25beee0a16035974f60ed58c2d71532eab5bec97f4f8979d649"}, "downloads": -1, "filename": "bnlm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a3edaa9076ff313573733f3d9355fb02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4531, "upload_time": "2019-12-27T04:33:10", "upload_time_iso_8601": "2019-12-27T04:33:10.491864Z", "url": "https://files.pythonhosted.org/packages/cc/75/369394d455c7b5068091cca7609bacb50ad120c56cb1f13d33014ad38758/bnlm-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:55 2020"}