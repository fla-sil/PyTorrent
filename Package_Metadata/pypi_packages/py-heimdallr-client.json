{"info": {"author": "Element Robot LLC", "author_email": "dev@elementrobot.co", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Topic :: Software Development :: Build Tools"], "description": "This module is a Python API for `Heimdallr <https://heimdallr.co/>`__.\n\nInstallation\n------------\n\n``pip install py-heimdallr-client``\n\nContributing\n------------\n\nPlease use a linter to help follow PEP8 style guidelines. We use Vincent\nDriessen's\n`git-flow <http://nvie.com/posts/a-successful-git-branching-model/>`__\nso please make pull requests to the develop branch. For any new features\nyou might add please add the corresponding documentation and tests. To\nsetup the project for development you need\n`virtualenv <https://virtualenv.pypa.io/en/stable/>`__. Once you have\nvirtualenv installed and setup can run:\n\n::\n\n    mkvirtualenv py-heimdallr-client\n    workon py-heimdallr-client\n    git clone git@github.com:Layer3DLab/py-heimdallr-client.git\n    cd py-heimdallr-client\n    git checkout develop\n    npm install\n    pip install -r dev_requirements.txt\n\nNOTE: if you're on OSX and cryptography fails to install you may need to\nfollow these\n`directions <https://cryptography.io/en/latest/installation/#building-cryptography-on-os-x>`__.\n\nAdding Documentation\n~~~~~~~~~~~~~~~~~~~~\n\nWe use `Sphinx <http://www.sphinx-doc.org/en/stable/index.html>`__ with\nthe autodoc and napoleon extensions to generate the documentation for\nthis module. So to add documentation simply add Python docstrings to\nwhatever classes, methods, etc. that you add. We use Google style\ndocstrings (examples\n`here <http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`__).\nTo build the docs run the following from the project directory:\n\n::\n\n    cd docs\n    make html\n\nAdding Tests\n~~~~~~~~~~~~\n\nWe use `unittest <https://docs.python.org/2.7/library/unittest.html>`__\nfor our testing suite. To run the tests you can just call\n``python setup.py test`` from the project directory. To run them\ndirectly you can just call ``python tests/__init__.py`` To run coverage\ntests and generate an HTML report run:\n\n::\n\n    coverage  run --source=\"./heimdallr_client\" --branch -m unittest tests\n    coverage html", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ElementRobot/py-heimdallr-client", "keywords": "heimdallr,rtc,websockets", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-heimdallr-client", "package_url": "https://pypi.org/project/py-heimdallr-client/", "platform": "", "project_url": "https://pypi.org/project/py-heimdallr-client/", "project_urls": {"Homepage": "https://github.com/ElementRobot/py-heimdallr-client"}, "release_url": "https://pypi.org/project/py-heimdallr-client/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python API for Heimdallr", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module is a Python API for <a href=\"https://heimdallr.co/\" rel=\"nofollow\">Heimdallr</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install <span class=\"pre\">py-heimdallr-client</span></tt></p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please use a linter to help follow PEP8 style guidelines. We use Vincent\nDriessen\u2019s\n<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" rel=\"nofollow\">git-flow</a>\nso please make pull requests to the develop branch. For any new features\nyou might add please add the corresponding documentation and tests. To\nsetup the project for development you need\n<a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a>. Once you have\nvirtualenv installed and setup can run:</p>\n<pre>mkvirtualenv py-heimdallr-client\nworkon py-heimdallr-client\ngit clone git@github.com:Layer3DLab/py-heimdallr-client.git\ncd py-heimdallr-client\ngit checkout develop\nnpm install\npip install -r dev_requirements.txt\n</pre>\n<p>NOTE: if you\u2019re on OSX and cryptography fails to install you may need to\nfollow these\n<a href=\"https://cryptography.io/en/latest/installation/#building-cryptography-on-os-x\" rel=\"nofollow\">directions</a>.</p>\n<div id=\"adding-documentation\">\n<h3>Adding Documentation</h3>\n<p>We use <a href=\"http://www.sphinx-doc.org/en/stable/index.html\" rel=\"nofollow\">Sphinx</a> with\nthe autodoc and napoleon extensions to generate the documentation for\nthis module. So to add documentation simply add Python docstrings to\nwhatever classes, methods, etc. that you add. We use Google style\ndocstrings (examples\n<a href=\"http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\" rel=\"nofollow\">here</a>).\nTo build the docs run the following from the project directory:</p>\n<pre>cd docs\nmake html\n</pre>\n</div>\n<div id=\"adding-tests\">\n<h3>Adding Tests</h3>\n<p>We use <a href=\"https://docs.python.org/2.7/library/unittest.html\" rel=\"nofollow\">unittest</a>\nfor our testing suite. To run the tests you can just call\n<tt>python setup.py test</tt> from the project directory. To run them\ndirectly you can just call <tt>python tests/__init__.py</tt> To run coverage\ntests and generate an HTML report run:</p>\n<pre>coverage  run --source=\"./heimdallr_client\" --branch -m unittest tests\ncoverage html\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2448085, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "fa1d46aabfe40f93f8ae806ccc20f965", "sha256": "afdaa6e2924ab21417654c3504a44c985fd7ae70afd40f09c5170b656601c85f"}, "downloads": -1, "filename": "py-heimdallr-client-0.0.0.tar.gz", "has_sig": false, "md5_digest": "fa1d46aabfe40f93f8ae806ccc20f965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9463, "upload_time": "2016-06-25T23:46:57", "upload_time_iso_8601": "2016-06-25T23:46:57.287375Z", "url": "https://files.pythonhosted.org/packages/f5/1c/46d643b5d403365e546db50de6c0baa887817fbec94e4968f4edad87730d/py-heimdallr-client-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "cd0650726fa40c859a4f5660c0b09b27", "sha256": "de60a9ad9fdb2856db607e18caead27abb74dca0f74ae4a5174b3062df389b85"}, "downloads": -1, "filename": "py-heimdallr-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cd0650726fa40c859a4f5660c0b09b27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9788, "upload_time": "2016-10-10T22:45:22", "upload_time_iso_8601": "2016-10-10T22:45:22.102445Z", "url": "https://files.pythonhosted.org/packages/d3/2a/31f4ac1558e831d1e11d1516a29e0c9c576067bc940ad4edd46628950f31/py-heimdallr-client-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "482f3babac7caa4cf411597171a62ffa", "sha256": "1fea7f6892fcbb7fb34c5376c7f3f156d726c2046feef196d3cc731fe44891c2"}, "downloads": -1, "filename": "py-heimdallr-client-0.0.2.tar.gz", "has_sig": false, "md5_digest": "482f3babac7caa4cf411597171a62ffa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9944, "upload_time": "2016-11-07T23:32:37", "upload_time_iso_8601": "2016-11-07T23:32:37.454492Z", "url": "https://files.pythonhosted.org/packages/49/56/66264e51fe161eddbe6bc201255ecc3621e5b6e30d580ac46da79573b78f/py-heimdallr-client-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "482f3babac7caa4cf411597171a62ffa", "sha256": "1fea7f6892fcbb7fb34c5376c7f3f156d726c2046feef196d3cc731fe44891c2"}, "downloads": -1, "filename": "py-heimdallr-client-0.0.2.tar.gz", "has_sig": false, "md5_digest": "482f3babac7caa4cf411597171a62ffa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9944, "upload_time": "2016-11-07T23:32:37", "upload_time_iso_8601": "2016-11-07T23:32:37.454492Z", "url": "https://files.pythonhosted.org/packages/49/56/66264e51fe161eddbe6bc201255ecc3621e5b6e30d580ac46da79573b78f/py-heimdallr-client-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:26 2020"}