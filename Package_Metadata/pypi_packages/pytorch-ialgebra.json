{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "<script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default\"></script>\n\n# Pytorch iAlgebra\n\n**[Document]()|[Paper]()|[References]()**\n\n*Pytorch iAlgebra* is an interactive interpretation library for deep learning on [Pytorch](https://pytorch.org).\n\n\nPytorch iAlgebra provides an interactive frame for interpreting a group of deep leanring models using a set of interpretation methods.\n\n----\n**iAlgebra Operations**\n----\n\n**Operators**\n\n*Identity*\n\n\n$$\n[\\phi(x)]_{i}=\\frac{1}{d} \\sum_{k=0}^{d-1} \\mathbb{E}_{I_{k}}\\left[f\\left(x_{I_{k} \\cup\\{i\\}}\\right)-f\\left(x_{I_{k}}\\right)\\right]\n$$\n\n\n*Projection*\n\n$$\n\\left[\\Pi_{w}(x)\\right]_{i}=\\left\\{\\begin{array}{cc}{\\frac{1}{|w|} \\sum_{k=0}^{|w|-1} \\mathbb{E}_{I_{k}}\\left[f\\left(x_{I_{k} \\cup\\{i\\}}\\right)-f\\left(x_{I_{k}}\\right)\\right]} & {i \\in w} \\\\ {0} & {i \\notin w}\\end{array}\\right.\n$$\n\n\n*Selection*\n$$\n\\left[\\sigma_{l}(x)\\right]_{i}=\\left[\\phi\\left(x ; \\bar{x}, f_{l}\\right)\\right]_{i}\n$$\n\n*Join*\n\n$$\n\\left[x \\bowtie x^{\\prime}\\right]_{i}=\\frac{1}{2}\\left([\\phi(x ; \\bar{x}, f)]_{i}+\\left[\\phi\\left(x^{\\prime} ; \\bar{x}, f\\right)\\right]_{i}\\right)\n$$\n\n\n*Anti-Join*\n\n$$\n\\left[x \\diamond x^{\\prime}\\right]_{i}=\\left(\\left[\\phi\\left(x ; x^{\\prime}, f\\right)\\right]_{i},\\left[\\phi\\left(x^{\\prime} ; x, f\\right)\\right]_{i}\\right)\n$$\n\n\n----\n**Supportive DNN and Interpretation Models**\n----\n\n**DNN Models**\n\nModel Performance on dataset *Mnist*\n\n| Dataset     |                Models  |         |\n| ----------- | -----------    | -----------     |\n| Mnist       | LeNet-L1  | LeNet-L2   |\n| Accuracy    | 98.866%        |99.020%          |\n\n\nModel Performance on dataset *Cifar10*\n\n| Dataset     |                Models  |         |\n| ----------- | -----------    | -----------     |\n| Cifar10     | Vgg19 -L1      | Vgg19-L2        |\n| Accuracy    | 98.866%        | 99.020%          |\n\n\n\n**Interpretation Methods**\n\n\nIn detail, we implement the following interpretation methods as the *identity* in Pytorch-iAlgebra.\n\n* **GradSaliency** from Simonyan *et al.*:[Deep Inside Convolutional Networks: Visualising Image Classification Models and Saliency Maps](https://arxiv.org/pdf/1312.6034.pdf) (CVPR 2013)\n\n* **SmoothGrad** from Smilkov *et al.*:[SmoothGrad: removing noise by adding noise](https://arxiv.org/pdf/1706.03825.pdf)\n\n* **Mask** from Fong *et al.*:[Interpretable Explanations of Black Boxes by Meaningful Perturbation](https://arxiv.org/pdf/1704.03296.pdf) (ICCV 2017)\n\n* **GradCam** from Selvaraju *et al.*: [Grad-CAM:\nVisual Explanations from Deep Networks via Gradient-based Localization](https://arxiv.org/abs/1610.02391) (ICCV 2017)\n\n* **GuidedBackpropGrad** from Springenberg *et al.*:[Striving for Simplicity: The All Convolutional Net](https://arxiv.org/pdf/1412.6806.pdf) (ICLR 2015)\n\n<!-- * **GuidedBackpropSmoothGrad** -->\n\n------\n\n\n**Installation**\n----\nLibrary dependencies for the *Pytorch-iAlgebra*. Before installation, you need to install these with\n\n```python\n$ pip install -r requirements.txt\n```\n\nThen *Pytorch-iAlgebra* can be installed by:\n\n```python\n$ pip install pytorch-ialgebra\n```\n\n\n\n\n\n\n<!-- \n\nA sample project that exists as an aid to the [Python Packaging User\nGuide][packaging guide]'s [Tutorial on Packaging and Distributing\nProjects][distribution tutorial].\n\nThis project does not aim to cover best practices for Python project\ndevelopment as a whole. For example, it does not provide guidance or tool\nrecommendations for version control, documentation, or testing.\n\n[The source for this project is available here][src].\n\nMost of the configuration for a Python project is done in the `setup.py` file,\nan example of which is included in this project. You should edit this file\naccordingly to adapt this sample project to your needs.\n\n----\n\nThis is the README file for the project.\n\nThe file should use UTF-8 encoding and can be written using\n[reStructuredText][rst] or [markdown][md use] with the appropriate [key set][md\nuse]. It will be used to generate the project webpage on PyPI and will be\ndisplayed as the project homepage on common code-hosting services, and should be\nwritten for that purpose.\n\nTypical contents for this file would include an overview of the project, basic\nusage examples, etc. Generally, including the project changelog in here is not a\ngood idea, although a simple \u201cWhat's New\u201d section for the most recent version\nmay be appropriate.\n\n[packaging guide]: https://packaging.python.org\n[distribution tutorial]: https://packaging.python.org/tutorials/packaging-projects/\n[src]: https://github.com/pypa/sampleproject\n[rst]: http://docutils.sourceforge.net/rst.html\n[md]: https://tools.ietf.org/html/rfc7764#section-3.5 \"CommonMark variant\"\n[md use]: https://packaging.python.org/specifications/core-metadata/#description-content-type-optional -->\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "sample setuptools development", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytorch-ialgebra", "package_url": "https://pypi.org/project/pytorch-ialgebra/", "platform": "", "project_url": "https://pypi.org/project/pytorch-ialgebra/", "project_urls": {"Bug Reports": "https://github.com/pypa/sampleproject/issues", "Funding": "https://donate.pypi.org", "Say Thanks!": "http://saythanks.io/to/example", "Source": "https://github.com/pypa/sampleproject/"}, "release_url": "https://pypi.org/project/pytorch-ialgebra/1.0.1/", "requires_dist": ["peppercorn", "check-manifest ; extra == 'dev'", "coverage ; extra == 'test'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "summary": "demo", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            &lt;script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default\"&gt;&lt;/script&gt;\n<h1>Pytorch iAlgebra</h1>\n<p><strong><a href=\"\" rel=\"nofollow\">Document</a>|<a href=\"\" rel=\"nofollow\">Paper</a>|<a href=\"\" rel=\"nofollow\">References</a></strong></p>\n<p><em>Pytorch iAlgebra</em> is an interactive interpretation library for deep learning on <a href=\"https://pytorch.org\" rel=\"nofollow\">Pytorch</a>.</p>\n<p>Pytorch iAlgebra provides an interactive frame for interpreting a group of deep leanring models using a set of interpretation methods.</p>\n<hr>\n<h2><strong>iAlgebra Operations</strong></h2>\n<p><strong>Operators</strong></p>\n<p><em>Identity</em></p>\n<p>$$\n[\\phi(x)]<em>{i}=\\frac{1}{d} \\sum</em>{k=0}^{d-1} \\mathbb{E}<em>{I</em>{k}}\\left[f\\left(x_{I_{k} \\cup{i}}\\right)-f\\left(x_{I_{k}}\\right)\\right]\n$$</p>\n<p><em>Projection</em></p>\n<p>$$\n\\left[\\Pi_{w}(x)\\right]<em>{i}=\\left{\\begin{array}{cc}{\\frac{1}{|w|} \\sum</em>{k=0}^{|w|-1} \\mathbb{E}<em>{I</em>{k}}\\left[f\\left(x_{I_{k} \\cup{i}}\\right)-f\\left(x_{I_{k}}\\right)\\right]} &amp; {i \\in w} \\ {0} &amp; {i \\notin w}\\end{array}\\right.\n$$</p>\n<p><em>Selection</em>\n$$\n\\left[\\sigma_{l}(x)\\right]<em>{i}=\\left[\\phi\\left(x ; \\bar{x}, f</em>{l}\\right)\\right]_{i}\n$$</p>\n<p><em>Join</em></p>\n<p>$$\n\\left[x \\bowtie x^{\\prime}\\right]<em>{i}=\\frac{1}{2}\\left([\\phi(x ; \\bar{x}, f)]</em>{i}+\\left[\\phi\\left(x^{\\prime} ; \\bar{x}, f\\right)\\right]_{i}\\right)\n$$</p>\n<p><em>Anti-Join</em></p>\n<p>$$\n\\left[x \\diamond x^{\\prime}\\right]<em>{i}=\\left(\\left[\\phi\\left(x ; x^{\\prime}, f\\right)\\right]</em>{i},\\left[\\phi\\left(x^{\\prime} ; x, f\\right)\\right]_{i}\\right)\n$$</p>\n<hr>\n<h2><strong>Supportive DNN and Interpretation Models</strong></h2>\n<p><strong>DNN Models</strong></p>\n<p>Model Performance on dataset <em>Mnist</em></p>\n<table>\n<thead>\n<tr>\n<th>Dataset</th>\n<th>Models</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Mnist</td>\n<td>LeNet-L1</td>\n<td>LeNet-L2</td>\n</tr>\n<tr>\n<td>Accuracy</td>\n<td>98.866%</td>\n<td>99.020%</td>\n</tr></tbody></table>\n<p>Model Performance on dataset <em>Cifar10</em></p>\n<table>\n<thead>\n<tr>\n<th>Dataset</th>\n<th>Models</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cifar10</td>\n<td>Vgg19 -L1</td>\n<td>Vgg19-L2</td>\n</tr>\n<tr>\n<td>Accuracy</td>\n<td>98.866%</td>\n<td>99.020%</td>\n</tr></tbody></table>\n<p><strong>Interpretation Methods</strong></p>\n<p>In detail, we implement the following interpretation methods as the <em>identity</em> in Pytorch-iAlgebra.</p>\n<ul>\n<li>\n<p><strong>GradSaliency</strong> from Simonyan <em>et al.</em>:<a href=\"https://arxiv.org/pdf/1312.6034.pdf\" rel=\"nofollow\">Deep Inside Convolutional Networks: Visualising Image Classification Models and Saliency Maps</a> (CVPR 2013)</p>\n</li>\n<li>\n<p><strong>SmoothGrad</strong> from Smilkov <em>et al.</em>:<a href=\"https://arxiv.org/pdf/1706.03825.pdf\" rel=\"nofollow\">SmoothGrad: removing noise by adding noise</a></p>\n</li>\n<li>\n<p><strong>Mask</strong> from Fong <em>et al.</em>:<a href=\"https://arxiv.org/pdf/1704.03296.pdf\" rel=\"nofollow\">Interpretable Explanations of Black Boxes by Meaningful Perturbation</a> (ICCV 2017)</p>\n</li>\n<li>\n<p><strong>GradCam</strong> from Selvaraju <em>et al.</em>: <a href=\"https://arxiv.org/abs/1610.02391\" rel=\"nofollow\">Grad-CAM:\nVisual Explanations from Deep Networks via Gradient-based Localization</a> (ICCV 2017)</p>\n</li>\n<li>\n<p><strong>GuidedBackpropGrad</strong> from Springenberg <em>et al.</em>:<a href=\"https://arxiv.org/pdf/1412.6806.pdf\" rel=\"nofollow\">Striving for Simplicity: The All Convolutional Net</a> (ICLR 2015)</p>\n</li>\n</ul>\n\n<hr>\n<h2><strong>Installation</strong></h2>\n<p>Library dependencies for the <em>Pytorch-iAlgebra</em>. Before installation, you need to install these with</p>\n<pre><span class=\"err\">$</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">requirements</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n</pre>\n<p>Then <em>Pytorch-iAlgebra</em> can be installed by:</p>\n<pre><span class=\"err\">$</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pytorch</span><span class=\"o\">-</span><span class=\"n\">ialgebra</span>\n</pre>\n\n\n          </div>"}, "last_serial": 6625946, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ec6e8a8b244f99db5f0c696c30a1e17b", "sha256": "cd7d2eb248248cf274ee76f3a0cd9692f99091fa2b1d3cda72dde8167f124da0"}, "downloads": -1, "filename": "pytorch_ialgebra-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec6e8a8b244f99db5f0c696c30a1e17b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 27753, "upload_time": "2019-12-30T03:17:40", "upload_time_iso_8601": "2019-12-30T03:17:40.283083Z", "url": "https://files.pythonhosted.org/packages/d1/0a/7756a67095411124fb65d5a73253bb5f56b59e15e5d33ffe14668e7b444e/pytorch_ialgebra-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "884d72016745916dedba27c37fc0f18b", "sha256": "b846b45a5c24063f81cb9bcdddd13d085fcd3533129b1e85162d587ec4c4310a"}, "downloads": -1, "filename": "pytorch-ialgebra-1.0.0.tar.gz", "has_sig": false, "md5_digest": "884d72016745916dedba27c37fc0f18b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 21819, "upload_time": "2019-12-30T03:17:42", "upload_time_iso_8601": "2019-12-30T03:17:42.647089Z", "url": "https://files.pythonhosted.org/packages/d1/5e/318d9cb75298b04cb1a941da546747564c517bbafe8b1ae0eb06650b238f/pytorch-ialgebra-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "90b3ae0622c69cf21a91504ecd927493", "sha256": "8811313b615969963f190ad3e9ef1b869fefb051dc2ec1939bff4b0477af0cf5"}, "downloads": -1, "filename": "pytorch_ialgebra-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "90b3ae0622c69cf21a91504ecd927493", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 28937, "upload_time": "2020-02-13T21:25:34", "upload_time_iso_8601": "2020-02-13T21:25:34.814871Z", "url": "https://files.pythonhosted.org/packages/89/12/2fa3195c26bd7b4dd3bbb55df51299801ebba4d10b2abe8e751778e8a9c4/pytorch_ialgebra-1.0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90b3ae0622c69cf21a91504ecd927493", "sha256": "8811313b615969963f190ad3e9ef1b869fefb051dc2ec1939bff4b0477af0cf5"}, "downloads": -1, "filename": "pytorch_ialgebra-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "90b3ae0622c69cf21a91504ecd927493", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 28937, "upload_time": "2020-02-13T21:25:34", "upload_time_iso_8601": "2020-02-13T21:25:34.814871Z", "url": "https://files.pythonhosted.org/packages/89/12/2fa3195c26bd7b4dd3bbb55df51299801ebba4d10b2abe8e751778e8a9c4/pytorch_ialgebra-1.0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:13:55 2020"}