{"info": {"author": "ddelange", "author_email": "david@delange.dev", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Archiving :: Packaging", "Topic :: System :: Installation/Setup", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "# pipgrip\n\n[![build](https://img.shields.io/github/workflow/status/ddelange/pipgrip/GH/master?logo=github&cacheSeconds=86400)](https://github.com/ddelange/pipgrip/actions?query=branch%3Amaster)\n[![codecov](https://img.shields.io/codecov/c/github/ddelange/pipgrip/master?logo=codecov&logoColor=white)](https://codecov.io/gh/ddelange/pipgrip)\n[![pypi Version](https://img.shields.io/pypi/v/pipgrip.svg?logo=pypi&logoColor=white)](https://pypi.org/project/pipgrip/)\n[![python](https://img.shields.io/pypi/pyversions/pipgrip.svg?logo=python&logoColor=white)](https://pypi.org/project/pipgrip/)\n[![downloads](https://pepy.tech/badge/pipgrip)](https://pypistats.org/packages/pipgrip)\n[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\n[pipgrip](https://github.com/ddelange/pipgrip) is a lightweight pip dependency resolver with deptree preview functionality based on the [PubGrub algorithm](https://medium.com/@nex3/pubgrub-2fb6470504f), which is also used by [poetry](https://github.com/python-poetry/poetry). For one or more [PEP 508](https://www.python.org/dev/peps/pep-0508/) dependency specifications, pipgrip recursively fetches/builds the Python wheels necessary for version solving, and optionally renders the full resulting dependency tree.\n\n<!--\n  give example with multiple packages\n  reversed tree\n  two times pypi.org in `looking in indexes`?\n  multicore pip?\n-->\n\n#### pipgrip vs. poetry\n\n[poetry](https://github.com/python-poetry/poetry) offers package management with dependency resolution, essentially replacing pip/setuptools. This means that poetry packages don't contain `setup.py`, and hence are not compatible with `pip install -e`: poetry projects would have to be converted to setuptools-based projects with e.g. [dephell](https://github.com/dephell/dephell). To avoid such hassle, pipgrip only requires the selected package(s) + dependencies to be available to pip in the ususal way.\n\n#### pipgrip vs. pipdeptree\n\nFor offline usage, [pipdeptree](https://github.com/naiquevin/pipdeptree) can inspect the current environment and show how the currently installed packages relate to each other. This however requires the packages to be pip-installed, and (despite warnings about e.g. cyclic dependencies) offers no form of dependency resolution since it's only based on the (single) package versions installed in the environment. Such shortcomings are avoided when using pipgrip, since packages don't need to be installed and all versions available to pip are considered.\n\n\n## Installation\n\nThis pure-Python, OS independent package is available on [PyPI](https://pypi.org/project/pipgrip/):\n\n```\npip install pipgrip\n```\n\n\n## Usage\n\nThis package can be used to:\n- **Render** an exhaustive dependency tree for any given pip-compatible package(s) with `--tree`\n- **Alleviate** [Python dependency hell](https://medium.com/knerd/the-nine-circles-of-python-dependency-hell-481d53e3e025) by resolving the latest viable combination of required packages\n- **Avoid** bugs by running pipgrip as a stage in CI pipelines\n- **Detect** version conflicts for given constraints and give human readable feedback about it\n- **Warn** for cyclic dependencies in local projects [and install them anyway]:\n  - `pipgrip -v --tree . [--install -e]`\n- **Install** complex packages without worries using:\n  - `pipgrip --install aiobotocore[awscli]`\n  - `pipgrip --lock aiobotocore[awscli] && pip install aiobotocore[awscli] --constraint ./pipgrip.lock`\n- **Generate** a lockfile with a complete working set of dependencies for worriless installs:\n  - `pipgrip --lock --install --tree -v aiobotocore[awscli]`\n  - `pipgrip --lock -tree aiobotocore[awscli] && pip install -U --no-deps -r ./pipgrip.lock`\n  <!-- - `pipgrip aiobotocore[awscli] | pip install -U --no-deps -r /dev/stdin` -->\n- **Combine** dependency trees of multiple packages into one unified set of pinned packages:\n  - `pipgrip --lock --install --tree -v .[boto3] s3transfer==0.2.1`\n\nSee also [known caveats](#known-caveats).\n\n```\n$ pipgrip --help\n\nUsage: pipgrip [OPTIONS] [DEPENDENCIES]...\n\n  pipgrip is a lightweight pip dependency resolver with deptree preview\n  functionality based on the PubGrub algorithm, which is also used by poetry.\n  For one or more PEP 508 dependency specifications, pipgrip recursively\n  fetches/builds the Python wheels necessary for version solving, and optionally\n  renders the full resulting dependency tree.\n\nOptions:\n  --install                     Install full dependency tree after resolving.\n  -e, --editable                Install a project in editable mode.\n  -r, --requirements-file FILE  Install from the given requirements file. This\n                                option can be used multiple times.\n  --lock                        Write out pins to './pipgrip.lock'.\n  --pipe                        Output space-separated pins instead of newline-\n                                separated pins.\n  --json                        Output pins as json dict instead of newline-\n                                separated pins.\n  --tree                        Output human readable dependency tree (top-down).\n  --reversed-tree               Output human readable dependency tree (bottom-up).\n  --max-depth INTEGER           Maximum tree rendering depth (defaults to -1).\n  --cache-dir DIRECTORY         Use a custom cache dir.\n  --no-cache-dir                Disable pip cache for the wheels downloaded by\n                                pipper. Overrides --cache-dir.\n  --index-url TEXT              Base URL of the Python Package Index (default\n                                https://pypi.org/simple).\n  --extra-index-url TEXT        Extra URLs of package indexes to use in addition\n                                to --index-url.\n  --pre                         Include pre-release and development versions. By\n                                default, pip only finds stable versions.\n  -v, --verbose                 Control verbosity: -v will print cyclic\n                                dependencies (WARNING), -vv will show solving\n                                decisions (INFO), -vvv for development (DEBUG).\n  -h, --help                    Show this message and exit.\n```\n\n#### Dependency trees\n\nExhaustive dependency trees without the need to install any packages (at most build some wheels).\n```\n$ pipgrip --tree pipgrip\n\npipgrip (0.2.1)\n\u251c\u2500\u2500 anytree (2.8.0)\n\u2502   \u2514\u2500\u2500 six>=1.9.0 (1.14.0)\n\u251c\u2500\u2500 click (7.1.1)\n\u251c\u2500\u2500 packaging>=17 (20.3)\n\u2502   \u251c\u2500\u2500 pyparsing>=2.0.2 (2.4.7)\n\u2502   \u2514\u2500\u2500 six (1.14.0)\n\u251c\u2500\u2500 pip>=7.1.0 (20.0.2)\n\u251c\u2500\u2500 pkginfo>=1.4.2 (1.5.0.1)\n\u251c\u2500\u2500 setuptools>=38.3 (46.1.3)\n\u2514\u2500\u2500 wheel (0.34.2)\n```\n\n#### Lockfile generation\n\nUsing the `--lock` option, resolved (pinned) dependencies are additionally written to `./pipgrip.lock`.\n```\n$ pipgrip --tree --lock botocore==1.13.48 'boto3>=1.10,<1.10.50'\n\nbotocore==1.13.48 (1.13.48)\n\u251c\u2500\u2500 docutils<0.16,>=0.10 (0.15.2)\n\u251c\u2500\u2500 jmespath<1.0.0,>=0.7.1 (0.9.5)\n\u251c\u2500\u2500 python-dateutil<3.0.0,>=2.1 (2.8.1)\n\u2502   \u2514\u2500\u2500 six>=1.5 (1.14.0)\n\u2514\u2500\u2500 urllib3<1.26,>=1.20 (1.25.8)\nboto3<1.10.50,>=1.10 (1.10.48)\n\u251c\u2500\u2500 botocore<1.14.0,>=1.13.48 (1.13.48)\n\u2502   \u251c\u2500\u2500 docutils<0.16,>=0.10 (0.15.2)\n\u2502   \u251c\u2500\u2500 jmespath<1.0.0,>=0.7.1 (0.9.5)\n\u2502   \u251c\u2500\u2500 python-dateutil<3.0.0,>=2.1 (2.8.1)\n\u2502   \u2502   \u2514\u2500\u2500 six>=1.5 (1.14.0)\n\u2502   \u2514\u2500\u2500 urllib3<1.26,>=1.20 (1.25.8)\n\u251c\u2500\u2500 jmespath<1.0.0,>=0.7.1 (0.9.5)\n\u2514\u2500\u2500 s3transfer<0.3.0,>=0.2.0 (0.2.1)\n    \u2514\u2500\u2500 botocore<2.0.0,>=1.12.36 (1.13.48)\n        \u251c\u2500\u2500 docutils<0.16,>=0.10 (0.15.2)\n        \u251c\u2500\u2500 jmespath<1.0.0,>=0.7.1 (0.9.5)\n        \u251c\u2500\u2500 python-dateutil<3.0.0,>=2.1 (2.8.1)\n        \u2502   \u2514\u2500\u2500 six>=1.5 (1.14.0)\n        \u2514\u2500\u2500 urllib3<1.26,>=1.20 (1.25.8)\n\n$ cat ./pipgrip.lock\n\nbotocore==1.13.48\ndocutils==0.15.2\njmespath==0.9.5\npython-dateutil==2.8.1\nsix==1.14.0\nurllib3==1.25.8\nboto3==1.10.48\ns3transfer==0.2.1\n```\nNOTE:\nSince the selected botocore version is older than the one required by the recent versions of boto3, all boto3 versions will be checked for compatibility with botocore==1.13.48.\n\n#### Version conflicts\n\nIf version conflicts exist for the given (ranges of) package version(s), a verbose explanation is raised.\n```\n$ pipgrip auto-sklearn~=0.6 dragnet==2.0.4\n\nError: Because dragnet (2.0.4) depends on scikit-learn (>=0.15.2,<0.21.0)\n and auto-sklearn (0.6.0) depends on scikit-learn (<0.22,>=0.21.0), dragnet (2.0.4) is incompatible with auto-sklearn (0.6.0).\nAnd because no versions of auto-sklearn match >0.6.0,<1.0, dragnet (2.0.4) is incompatible with auto-sklearn (>=0.6.0,<1.0).\nSo, because root depends on both auto-sklearn (~=0.6) and dragnet (==2.0.4), version solving failed.\n```\nNOTE:\nIf older versions of auto-sklearn are allowed, PubGrub will try all acceptable versions of auto-sklearn. In this case, auto-sklearn==0.5.2 requires scikit-learn (<0.20,>=0.19), making it compatible with dragnet==2.0.4.\n\n#### Cyclic dependencies\n\nIf cyclic dependencies are found, it is noted in the resulting tree.\n```\n$ pipgrip --tree -v keras==2.2.2\n\nWARNING: Cyclic dependency found: keras depends on keras-applications and vice versa.\nWARNING: Cyclic dependency found: keras depends on keras-preprocessing and vice versa.\nkeras==2.2.2 (2.2.2)\n\u251c\u2500\u2500 h5py (2.10.0)\n\u2502   \u251c\u2500\u2500 numpy>=1.7 (1.18.1)\n\u2502   \u2514\u2500\u2500 six (1.14.0)\n\u251c\u2500\u2500 keras-applications==1.0.4 (1.0.4)\n\u2502   \u251c\u2500\u2500 h5py (2.10.0)\n\u2502   \u2502   \u251c\u2500\u2500 numpy>=1.7 (1.18.1)\n\u2502   \u2502   \u2514\u2500\u2500 six (1.14.0)\n\u2502   \u251c\u2500\u2500 keras>=2.1.6 (2.2.2, cyclic)\n\u2502   \u2514\u2500\u2500 numpy>=1.9.1 (1.18.1)\n\u251c\u2500\u2500 keras-preprocessing==1.0.2 (1.0.2)\n\u2502   \u251c\u2500\u2500 keras>=2.1.6 (2.2.2, cyclic)\n\u2502   \u251c\u2500\u2500 numpy>=1.9.1 (1.18.1)\n\u2502   \u251c\u2500\u2500 scipy>=0.14 (1.4.1)\n\u2502   \u2502   \u2514\u2500\u2500 numpy>=1.13.3 (1.18.1)\n\u2502   \u2514\u2500\u2500 six>=1.9.0 (1.14.0)\n\u251c\u2500\u2500 numpy>=1.9.1 (1.18.1)\n\u251c\u2500\u2500 pyyaml (5.3)\n\u251c\u2500\u2500 scipy>=0.14 (1.4.1)\n\u2502   \u2514\u2500\u2500 numpy>=1.13.3 (1.18.1)\n\u2514\u2500\u2500 six>=1.9.0 (1.14.0)\n```\n\n\n## Known caveats\n\n- ``pip install -U `pipgrip --pipe package` `` without `--no-deps` is unsafe while pip doesn't [yet](https://twitter.com/di_codes/status/1193980331004743680) have a built-in dependency resolver, and leaves room for interpretation by pip\n- Package names are canonicalised in wheel metadata, resulting in e.g. `path.py -> path-py` and `keras_preprocessing -> keras-preprocessing` in output\n- [VCS Support](https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support) isn't implemented yet\n- `--reversed-tree` isn't implemented yet\n- Since `pip install -r` does not accept `.` as requirement, it is omitted from lockfiles, so `--install` or `--pipe` should be used when installing local projects\n- The equivalent of e.g. `pip install ../aiobotocore[boto3]` is not yet implemented. However, e.g. `pipgrip --install .[boto3]` is allowed.\n\n\n## Development\n\n[![gitmoji](https://img.shields.io/badge/gitmoji-%20%F0%9F%98%9C%20%F0%9F%98%8D-ffdd67)](https://github.com/carloscuesta/gitmoji-cli)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)\n\nFirst, create a virtual environment. Then, get ready to develop:\n\n```\nmake install\n```\n\nThis [make-command](Makefile) is equivalent to the following steps:\n\nInstall pre-commit and other continous integration dependencies in order to make commits and run tests.\n\n```\npip install -r requirements/ci.txt\npre-commit install\n```\n\nWith requirements installed, `make lint` and `make test` can now be run. There is also `make clean`, and `make all` which runs all three.\n\nTo import the package in the python environment, install the package (`-e` for editable installation, upon import, python will read directly from the repository).\n\n```\npip install -e .\n```\n\n\n## See also\n\n- [PubGrub spec](https://github.com/dart-lang/pub/blob/SDK-2.2.1-dev.3.0/doc/solver.md)\n- [pip needs a dependency resolver](https://github.com/pypa/pip/issues/988)\n- [pipdeptree](https://github.com/naiquevin/pipdeptree)\n- [mixology](https://github.com/sdispater/mixology)\n- [poetry-semver](https://github.com/python-poetry/semver)\n- [johnnydep](https://github.com/wimglenn/johnnydep)\n\n-----\n\nBSD 3-Clause License\n\nCopyright (c) 2020, ddelange\\\nAll rights reserved.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ddelange/pipgrip/", "keywords": "pure-Python pip exhaustive package dependency version conflict resolver PyPI PubGrub pipdeptree", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "pipgrip", "package_url": "https://pypi.org/project/pipgrip/", "platform": "", "project_url": "https://pypi.org/project/pipgrip/", "project_urls": {"Homepage": "https://github.com/ddelange/pipgrip/"}, "release_url": "https://pypi.org/project/pipgrip/0.2.2/", "requires_dist": ["anytree", "click", "packaging (>=17)", "pkginfo (>=1.4.2)", "setuptools (>=38.3)", "wheel", "pip (>=7.1.0)", "enum34 ; python_version == \"2.7\"", "typing ; python_version == \"2.7\""], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Lightweight pip dependency resolver with deptree preview functionality based on the PubGrub algorithm", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pipgrip</h1>\n<p><a href=\"https://github.com/ddelange/pipgrip/actions?query=branch%3Amaster\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e78edb8152416d48ddc3d6dbec33cf3b377bcb86/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6464656c616e67652f706970677269702f47482f6d61737465723f6c6f676f3d6769746875622663616368655365636f6e64733d3836343030\"></a>\n<a href=\"https://codecov.io/gh/ddelange/pipgrip\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c992860cdaad19218ab2c5b119dca54f14bfce8d/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6464656c616e67652f706970677269702f6d61737465723f6c6f676f3d636f6465636f76266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://pypi.org/project/pipgrip/\" rel=\"nofollow\"><img alt=\"pypi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e78d91374c6f23689bd2bd6682cb89f0952206f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706970677269702e7376673f6c6f676f3d70797069266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://pypi.org/project/pipgrip/\" rel=\"nofollow\"><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3f9876635db25edc30dc0253881751cbd8c71b04/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706970677269702e7376673f6c6f676f3d707974686f6e266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://pypistats.org/packages/pipgrip\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8cff2c28585ee225d3cd5ef2968458033432e93/68747470733a2f2f706570792e746563682f62616467652f70697067726970\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><a href=\"https://github.com/ddelange/pipgrip\" rel=\"nofollow\">pipgrip</a> is a lightweight pip dependency resolver with deptree preview functionality based on the <a href=\"https://medium.com/@nex3/pubgrub-2fb6470504f\" rel=\"nofollow\">PubGrub algorithm</a>, which is also used by <a href=\"https://github.com/python-poetry/poetry\" rel=\"nofollow\">poetry</a>. For one or more <a href=\"https://www.python.org/dev/peps/pep-0508/\" rel=\"nofollow\">PEP 508</a> dependency specifications, pipgrip recursively fetches/builds the Python wheels necessary for version solving, and optionally renders the full resulting dependency tree.</p>\n\n<h4>pipgrip vs. poetry</h4>\n<p><a href=\"https://github.com/python-poetry/poetry\" rel=\"nofollow\">poetry</a> offers package management with dependency resolution, essentially replacing pip/setuptools. This means that poetry packages don't contain <code>setup.py</code>, and hence are not compatible with <code>pip install -e</code>: poetry projects would have to be converted to setuptools-based projects with e.g. <a href=\"https://github.com/dephell/dephell\" rel=\"nofollow\">dephell</a>. To avoid such hassle, pipgrip only requires the selected package(s) + dependencies to be available to pip in the ususal way.</p>\n<h4>pipgrip vs. pipdeptree</h4>\n<p>For offline usage, <a href=\"https://github.com/naiquevin/pipdeptree\" rel=\"nofollow\">pipdeptree</a> can inspect the current environment and show how the currently installed packages relate to each other. This however requires the packages to be pip-installed, and (despite warnings about e.g. cyclic dependencies) offers no form of dependency resolution since it's only based on the (single) package versions installed in the environment. Such shortcomings are avoided when using pipgrip, since packages don't need to be installed and all versions available to pip are considered.</p>\n<h2>Installation</h2>\n<p>This pure-Python, OS independent package is available on <a href=\"https://pypi.org/project/pipgrip/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre><code>pip install pipgrip\n</code></pre>\n<h2>Usage</h2>\n<p>This package can be used to:</p>\n<ul>\n<li><strong>Render</strong> an exhaustive dependency tree for any given pip-compatible package(s) with <code>--tree</code></li>\n<li><strong>Alleviate</strong> <a href=\"https://medium.com/knerd/the-nine-circles-of-python-dependency-hell-481d53e3e025\" rel=\"nofollow\">Python dependency hell</a> by resolving the latest viable combination of required packages</li>\n<li><strong>Avoid</strong> bugs by running pipgrip as a stage in CI pipelines</li>\n<li><strong>Detect</strong> version conflicts for given constraints and give human readable feedback about it</li>\n<li><strong>Warn</strong> for cyclic dependencies in local projects [and install them anyway]:\n<ul>\n<li><code>pipgrip -v --tree . [--install -e]</code></li>\n</ul>\n</li>\n<li><strong>Install</strong> complex packages without worries using:\n<ul>\n<li><code>pipgrip --install aiobotocore[awscli]</code></li>\n<li><code>pipgrip --lock aiobotocore[awscli] &amp;&amp; pip install aiobotocore[awscli] --constraint ./pipgrip.lock</code></li>\n</ul>\n</li>\n<li><strong>Generate</strong> a lockfile with a complete working set of dependencies for worriless installs:\n<ul>\n<li><code>pipgrip --lock --install --tree -v aiobotocore[awscli]</code></li>\n<li><code>pipgrip --lock -tree aiobotocore[awscli] &amp;&amp; pip install -U --no-deps -r ./pipgrip.lock</code></li>\n</ul>\n\n</li>\n<li><strong>Combine</strong> dependency trees of multiple packages into one unified set of pinned packages:\n<ul>\n<li><code>pipgrip --lock --install --tree -v .[boto3] s3transfer==0.2.1</code></li>\n</ul>\n</li>\n</ul>\n<p>See also <a href=\"#known-caveats\" rel=\"nofollow\">known caveats</a>.</p>\n<pre><code>$ pipgrip --help\n\nUsage: pipgrip [OPTIONS] [DEPENDENCIES]...\n\n  pipgrip is a lightweight pip dependency resolver with deptree preview\n  functionality based on the PubGrub algorithm, which is also used by poetry.\n  For one or more PEP 508 dependency specifications, pipgrip recursively\n  fetches/builds the Python wheels necessary for version solving, and optionally\n  renders the full resulting dependency tree.\n\nOptions:\n  --install                     Install full dependency tree after resolving.\n  -e, --editable                Install a project in editable mode.\n  -r, --requirements-file FILE  Install from the given requirements file. This\n                                option can be used multiple times.\n  --lock                        Write out pins to './pipgrip.lock'.\n  --pipe                        Output space-separated pins instead of newline-\n                                separated pins.\n  --json                        Output pins as json dict instead of newline-\n                                separated pins.\n  --tree                        Output human readable dependency tree (top-down).\n  --reversed-tree               Output human readable dependency tree (bottom-up).\n  --max-depth INTEGER           Maximum tree rendering depth (defaults to -1).\n  --cache-dir DIRECTORY         Use a custom cache dir.\n  --no-cache-dir                Disable pip cache for the wheels downloaded by\n                                pipper. Overrides --cache-dir.\n  --index-url TEXT              Base URL of the Python Package Index (default\n                                https://pypi.org/simple).\n  --extra-index-url TEXT        Extra URLs of package indexes to use in addition\n                                to --index-url.\n  --pre                         Include pre-release and development versions. By\n                                default, pip only finds stable versions.\n  -v, --verbose                 Control verbosity: -v will print cyclic\n                                dependencies (WARNING), -vv will show solving\n                                decisions (INFO), -vvv for development (DEBUG).\n  -h, --help                    Show this message and exit.\n</code></pre>\n<h4>Dependency trees</h4>\n<p>Exhaustive dependency trees without the need to install any packages (at most build some wheels).</p>\n<pre><code>$ pipgrip --tree pipgrip\n\npipgrip (0.2.1)\n\u251c\u2500\u2500 anytree (2.8.0)\n\u2502   \u2514\u2500\u2500 six&gt;=1.9.0 (1.14.0)\n\u251c\u2500\u2500 click (7.1.1)\n\u251c\u2500\u2500 packaging&gt;=17 (20.3)\n\u2502   \u251c\u2500\u2500 pyparsing&gt;=2.0.2 (2.4.7)\n\u2502   \u2514\u2500\u2500 six (1.14.0)\n\u251c\u2500\u2500 pip&gt;=7.1.0 (20.0.2)\n\u251c\u2500\u2500 pkginfo&gt;=1.4.2 (1.5.0.1)\n\u251c\u2500\u2500 setuptools&gt;=38.3 (46.1.3)\n\u2514\u2500\u2500 wheel (0.34.2)\n</code></pre>\n<h4>Lockfile generation</h4>\n<p>Using the <code>--lock</code> option, resolved (pinned) dependencies are additionally written to <code>./pipgrip.lock</code>.</p>\n<pre><code>$ pipgrip --tree --lock botocore==1.13.48 'boto3&gt;=1.10,&lt;1.10.50'\n\nbotocore==1.13.48 (1.13.48)\n\u251c\u2500\u2500 docutils&lt;0.16,&gt;=0.10 (0.15.2)\n\u251c\u2500\u2500 jmespath&lt;1.0.0,&gt;=0.7.1 (0.9.5)\n\u251c\u2500\u2500 python-dateutil&lt;3.0.0,&gt;=2.1 (2.8.1)\n\u2502   \u2514\u2500\u2500 six&gt;=1.5 (1.14.0)\n\u2514\u2500\u2500 urllib3&lt;1.26,&gt;=1.20 (1.25.8)\nboto3&lt;1.10.50,&gt;=1.10 (1.10.48)\n\u251c\u2500\u2500 botocore&lt;1.14.0,&gt;=1.13.48 (1.13.48)\n\u2502   \u251c\u2500\u2500 docutils&lt;0.16,&gt;=0.10 (0.15.2)\n\u2502   \u251c\u2500\u2500 jmespath&lt;1.0.0,&gt;=0.7.1 (0.9.5)\n\u2502   \u251c\u2500\u2500 python-dateutil&lt;3.0.0,&gt;=2.1 (2.8.1)\n\u2502   \u2502   \u2514\u2500\u2500 six&gt;=1.5 (1.14.0)\n\u2502   \u2514\u2500\u2500 urllib3&lt;1.26,&gt;=1.20 (1.25.8)\n\u251c\u2500\u2500 jmespath&lt;1.0.0,&gt;=0.7.1 (0.9.5)\n\u2514\u2500\u2500 s3transfer&lt;0.3.0,&gt;=0.2.0 (0.2.1)\n    \u2514\u2500\u2500 botocore&lt;2.0.0,&gt;=1.12.36 (1.13.48)\n        \u251c\u2500\u2500 docutils&lt;0.16,&gt;=0.10 (0.15.2)\n        \u251c\u2500\u2500 jmespath&lt;1.0.0,&gt;=0.7.1 (0.9.5)\n        \u251c\u2500\u2500 python-dateutil&lt;3.0.0,&gt;=2.1 (2.8.1)\n        \u2502   \u2514\u2500\u2500 six&gt;=1.5 (1.14.0)\n        \u2514\u2500\u2500 urllib3&lt;1.26,&gt;=1.20 (1.25.8)\n\n$ cat ./pipgrip.lock\n\nbotocore==1.13.48\ndocutils==0.15.2\njmespath==0.9.5\npython-dateutil==2.8.1\nsix==1.14.0\nurllib3==1.25.8\nboto3==1.10.48\ns3transfer==0.2.1\n</code></pre>\n<p>NOTE:\nSince the selected botocore version is older than the one required by the recent versions of boto3, all boto3 versions will be checked for compatibility with botocore==1.13.48.</p>\n<h4>Version conflicts</h4>\n<p>If version conflicts exist for the given (ranges of) package version(s), a verbose explanation is raised.</p>\n<pre><code>$ pipgrip auto-sklearn~=0.6 dragnet==2.0.4\n\nError: Because dragnet (2.0.4) depends on scikit-learn (&gt;=0.15.2,&lt;0.21.0)\n and auto-sklearn (0.6.0) depends on scikit-learn (&lt;0.22,&gt;=0.21.0), dragnet (2.0.4) is incompatible with auto-sklearn (0.6.0).\nAnd because no versions of auto-sklearn match &gt;0.6.0,&lt;1.0, dragnet (2.0.4) is incompatible with auto-sklearn (&gt;=0.6.0,&lt;1.0).\nSo, because root depends on both auto-sklearn (~=0.6) and dragnet (==2.0.4), version solving failed.\n</code></pre>\n<p>NOTE:\nIf older versions of auto-sklearn are allowed, PubGrub will try all acceptable versions of auto-sklearn. In this case, auto-sklearn==0.5.2 requires scikit-learn (&lt;0.20,&gt;=0.19), making it compatible with dragnet==2.0.4.</p>\n<h4>Cyclic dependencies</h4>\n<p>If cyclic dependencies are found, it is noted in the resulting tree.</p>\n<pre><code>$ pipgrip --tree -v keras==2.2.2\n\nWARNING: Cyclic dependency found: keras depends on keras-applications and vice versa.\nWARNING: Cyclic dependency found: keras depends on keras-preprocessing and vice versa.\nkeras==2.2.2 (2.2.2)\n\u251c\u2500\u2500 h5py (2.10.0)\n\u2502   \u251c\u2500\u2500 numpy&gt;=1.7 (1.18.1)\n\u2502   \u2514\u2500\u2500 six (1.14.0)\n\u251c\u2500\u2500 keras-applications==1.0.4 (1.0.4)\n\u2502   \u251c\u2500\u2500 h5py (2.10.0)\n\u2502   \u2502   \u251c\u2500\u2500 numpy&gt;=1.7 (1.18.1)\n\u2502   \u2502   \u2514\u2500\u2500 six (1.14.0)\n\u2502   \u251c\u2500\u2500 keras&gt;=2.1.6 (2.2.2, cyclic)\n\u2502   \u2514\u2500\u2500 numpy&gt;=1.9.1 (1.18.1)\n\u251c\u2500\u2500 keras-preprocessing==1.0.2 (1.0.2)\n\u2502   \u251c\u2500\u2500 keras&gt;=2.1.6 (2.2.2, cyclic)\n\u2502   \u251c\u2500\u2500 numpy&gt;=1.9.1 (1.18.1)\n\u2502   \u251c\u2500\u2500 scipy&gt;=0.14 (1.4.1)\n\u2502   \u2502   \u2514\u2500\u2500 numpy&gt;=1.13.3 (1.18.1)\n\u2502   \u2514\u2500\u2500 six&gt;=1.9.0 (1.14.0)\n\u251c\u2500\u2500 numpy&gt;=1.9.1 (1.18.1)\n\u251c\u2500\u2500 pyyaml (5.3)\n\u251c\u2500\u2500 scipy&gt;=0.14 (1.4.1)\n\u2502   \u2514\u2500\u2500 numpy&gt;=1.13.3 (1.18.1)\n\u2514\u2500\u2500 six&gt;=1.9.0 (1.14.0)\n</code></pre>\n<h2>Known caveats</h2>\n<ul>\n<li><code>pip install -U `pipgrip --pipe package`</code> without <code>--no-deps</code> is unsafe while pip doesn't <a href=\"https://twitter.com/di_codes/status/1193980331004743680\" rel=\"nofollow\">yet</a> have a built-in dependency resolver, and leaves room for interpretation by pip</li>\n<li>Package names are canonicalised in wheel metadata, resulting in e.g. <code>path.py -&gt; path-py</code> and <code>keras_preprocessing -&gt; keras-preprocessing</code> in output</li>\n<li><a href=\"https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support\" rel=\"nofollow\">VCS Support</a> isn't implemented yet</li>\n<li><code>--reversed-tree</code> isn't implemented yet</li>\n<li>Since <code>pip install -r</code> does not accept <code>.</code> as requirement, it is omitted from lockfiles, so <code>--install</code> or <code>--pipe</code> should be used when installing local projects</li>\n<li>The equivalent of e.g. <code>pip install ../aiobotocore[boto3]</code> is not yet implemented. However, e.g. <code>pipgrip --install .[boto3]</code> is allowed.</li>\n</ul>\n<h2>Development</h2>\n<p><a href=\"https://github.com/carloscuesta/gitmoji-cli\" rel=\"nofollow\"><img alt=\"gitmoji\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/297b33b7fc1d592a39151eb7ec30088170eabfcf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746d6f6a692d2532302546302539462539382539432532302546302539462539382538442d666664643637\"></a>\n<a href=\"https://github.com/pre-commit/pre-commit\" rel=\"nofollow\"><img alt=\"pre-commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d861174d9af84b80d393b2e7c89badabc5e04097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7072652d2d636f6d6d69742d656e61626c65642d627269676874677265656e3f6c6f676f3d7072652d636f6d6d6974266c6f676f436f6c6f723d7768697465\"></a></p>\n<p>First, create a virtual environment. Then, get ready to develop:</p>\n<pre><code>make install\n</code></pre>\n<p>This <a href=\"Makefile\" rel=\"nofollow\">make-command</a> is equivalent to the following steps:</p>\n<p>Install pre-commit and other continous integration dependencies in order to make commits and run tests.</p>\n<pre><code>pip install -r requirements/ci.txt\npre-commit install\n</code></pre>\n<p>With requirements installed, <code>make lint</code> and <code>make test</code> can now be run. There is also <code>make clean</code>, and <code>make all</code> which runs all three.</p>\n<p>To import the package in the python environment, install the package (<code>-e</code> for editable installation, upon import, python will read directly from the repository).</p>\n<pre><code>pip install -e .\n</code></pre>\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://github.com/dart-lang/pub/blob/SDK-2.2.1-dev.3.0/doc/solver.md\" rel=\"nofollow\">PubGrub spec</a></li>\n<li><a href=\"https://github.com/pypa/pip/issues/988\" rel=\"nofollow\">pip needs a dependency resolver</a></li>\n<li><a href=\"https://github.com/naiquevin/pipdeptree\" rel=\"nofollow\">pipdeptree</a></li>\n<li><a href=\"https://github.com/sdispater/mixology\" rel=\"nofollow\">mixology</a></li>\n<li><a href=\"https://github.com/python-poetry/semver\" rel=\"nofollow\">poetry-semver</a></li>\n<li><a href=\"https://github.com/wimglenn/johnnydep\" rel=\"nofollow\">johnnydep</a></li>\n</ul>\n<hr>\n<p>BSD 3-Clause License</p>\n<p>Copyright (c) 2020, ddelange<br>\nAll rights reserved.</p>\n\n          </div>"}, "last_serial": 7136009, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3f4d382be65b90af18d38f67564ee427", "sha256": "effc44bc01cc08770c6c080711698c779c4597b001d1d940f09dbfdc9481d6c4"}, "downloads": -1, "filename": "pipgrip-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f4d382be65b90af18d38f67564ee427", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 46400, "upload_time": "2020-01-09T22:30:58", "upload_time_iso_8601": "2020-01-09T22:30:58.768376Z", "url": "https://files.pythonhosted.org/packages/20/4d/6d7a519cf9efee16d240e6913df5d9b3a26b3418e71ce142a8b57f37c091/pipgrip-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79ffa5863566da339b82452f2cafe623", "sha256": "dcb8b6d874e77abeff5fb74495e21fbdcd19b6806adbed71e77e5b702b1adb61"}, "downloads": -1, "filename": "pipgrip-0.0.1.tar.gz", "has_sig": false, "md5_digest": "79ffa5863566da339b82452f2cafe623", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 40796, "upload_time": "2020-01-09T22:31:00", "upload_time_iso_8601": "2020-01-09T22:31:00.252987Z", "url": "https://files.pythonhosted.org/packages/9f/c0/04435c7735b8f2e38ef97d0d83de6fa81eed39d6583b39096bb6c20ba974/pipgrip-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "203915a12fbc9bb9e2db5ff90289cd9d", "sha256": "263ddff7766d1fc8905a55ba1ccb9d55eba3fbe1946f6f03bd4ba0c8cf3e888b"}, "downloads": -1, "filename": "pipgrip-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "203915a12fbc9bb9e2db5ff90289cd9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 46440, "upload_time": "2020-01-22T15:34:41", "upload_time_iso_8601": "2020-01-22T15:34:41.707694Z", "url": "https://files.pythonhosted.org/packages/dd/c3/69d31f1ef572d23989c523b4cd8b78356f75ddd19c5a4d8095cadc004c8b/pipgrip-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1b4cb3cde43605ca5f2dc21557ccc4a", "sha256": "504f014653a0a76feed48d58739d693d5c8f5bb1f88215c1a06c46797d79c4fc"}, "downloads": -1, "filename": "pipgrip-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c1b4cb3cde43605ca5f2dc21557ccc4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 40894, "upload_time": "2020-01-22T15:34:43", "upload_time_iso_8601": "2020-01-22T15:34:43.285325Z", "url": "https://files.pythonhosted.org/packages/0b/46/aabf5047213e43f83b6b3de84223ef51b5e17e7b8b156ce7c885c1d05937/pipgrip-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ec5ec5329c075d8f5b5bf913b77355ad", "sha256": "53c7afea15639c1b4288d0cf7dcad3ed227fd062c579d0ef9f4964a15ec8818e"}, "downloads": -1, "filename": "pipgrip-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec5ec5329c075d8f5b5bf913b77355ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 47517, "upload_time": "2020-01-23T15:25:31", "upload_time_iso_8601": "2020-01-23T15:25:31.500524Z", "url": "https://files.pythonhosted.org/packages/44/12/a8e0dafde834690df36892f03e0b7b3280dd4dd3f36a9f8547d84c6df3e8/pipgrip-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c10aa043cc4795994191ba41ee4bf580", "sha256": "c61eedbed66a842a4dfbff9dec182d77e399bff784b541982f0ba0f51f590877"}, "downloads": -1, "filename": "pipgrip-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c10aa043cc4795994191ba41ee4bf580", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 42295, "upload_time": "2020-01-23T15:25:33", "upload_time_iso_8601": "2020-01-23T15:25:33.020596Z", "url": "https://files.pythonhosted.org/packages/09/c1/def698f098198aa1c7144a896a5289fa7b54693277d8bdc029239d477a16/pipgrip-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "29218d5dbdfb5f56bf96a8aa1d878728", "sha256": "c820ca45e4611549b522caf408a64ae3ab32c8578f7e7253d1b60f1f9581f018"}, "downloads": -1, "filename": "pipgrip-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "29218d5dbdfb5f56bf96a8aa1d878728", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 48830, "upload_time": "2020-01-26T21:42:10", "upload_time_iso_8601": "2020-01-26T21:42:10.666084Z", "url": "https://files.pythonhosted.org/packages/b1/72/9f7fc89510db7f0c015105e43f04119174fac21c6cbcf0ceb093a4cdd754/pipgrip-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3e4fae840311c95203317465b7f5c46", "sha256": "e3cc0617eb2258d82bfe11488968b4514957e0060bd33d56cdbceab3d29d3673"}, "downloads": -1, "filename": "pipgrip-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b3e4fae840311c95203317465b7f5c46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 44284, "upload_time": "2020-01-26T21:42:12", "upload_time_iso_8601": "2020-01-26T21:42:12.133700Z", "url": "https://files.pythonhosted.org/packages/8f/f1/6a242c6c12749678ea40b626ce65e46952d9403f4ccdd315866d4cd87613/pipgrip-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bd66715c904582bc68454c0bc6ee6216", "sha256": "b34fae70f7df971120dc343b90ea70508c9f24ff7642de5fc2cdd418f1029d37"}, "downloads": -1, "filename": "pipgrip-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd66715c904582bc68454c0bc6ee6216", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 49415, "upload_time": "2020-03-09T14:10:05", "upload_time_iso_8601": "2020-03-09T14:10:05.843580Z", "url": "https://files.pythonhosted.org/packages/88/f8/fccdd9a3a78818c587743c598946f0935da246203ce11ac5674f27459bd0/pipgrip-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "decb55da6dc25e2da6347e1d93d42b14", "sha256": "51d96c6726263e7c1aba963f9032c8aa6ffbf0d424d1fafe05384e98377d4a85"}, "downloads": -1, "filename": "pipgrip-0.2.0.tar.gz", "has_sig": false, "md5_digest": "decb55da6dc25e2da6347e1d93d42b14", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 44823, "upload_time": "2020-03-09T14:10:07", "upload_time_iso_8601": "2020-03-09T14:10:07.080008Z", "url": "https://files.pythonhosted.org/packages/29/f6/9b634d5c7e055cba169f5d387a224c555534513fed196dd3d75142bdf736/pipgrip-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a3c5c28343ae495b87c7e9800ff6fdcc", "sha256": "5395f54c83b2d80a3e4279b4a595885070a431369a8b292785ef6e591a2c95dc"}, "downloads": -1, "filename": "pipgrip-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3c5c28343ae495b87c7e9800ff6fdcc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 49605, "upload_time": "2020-04-18T08:14:16", "upload_time_iso_8601": "2020-04-18T08:14:16.195865Z", "url": "https://files.pythonhosted.org/packages/c1/97/6b3d7166873b0bb0c5b69b8cbe2967580368e486c2802f8abd23f0a3326e/pipgrip-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a6b939324c3fb08ccc255aadacc628d", "sha256": "e5d6e50d2ae6f499496d8e80305f4f8292b2358e0a24f4d00907767c5026c2d5"}, "downloads": -1, "filename": "pipgrip-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2a6b939324c3fb08ccc255aadacc628d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 45134, "upload_time": "2020-04-18T08:14:17", "upload_time_iso_8601": "2020-04-18T08:14:17.413283Z", "url": "https://files.pythonhosted.org/packages/7e/75/4ef2f492d1bff74a9d66afe2df6f0a237cb07d73e0d0648ddc5c534a54d9/pipgrip-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "6ae97d4b5cd1e48637d0d68c97598d39", "sha256": "d3214b8885bf7d6e61697a52ca0aa5490fd5afb4d525a5cb196e8f91ca1d1064"}, "downloads": -1, "filename": "pipgrip-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ae97d4b5cd1e48637d0d68c97598d39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 49826, "upload_time": "2020-04-30T09:06:45", "upload_time_iso_8601": "2020-04-30T09:06:45.923569Z", "url": "https://files.pythonhosted.org/packages/9c/92/80caf2944e44a8954484562b9b17bfa64c200c6d5bc7b0690db4226bacaf/pipgrip-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e53aae45c319ca842600d62c196915b", "sha256": "1711f65d293b6da69e71e01094c0feb37b208dc3c69df28f2e0d08ea2cc92c4c"}, "downloads": -1, "filename": "pipgrip-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4e53aae45c319ca842600d62c196915b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 45332, "upload_time": "2020-04-30T09:06:47", "upload_time_iso_8601": "2020-04-30T09:06:47.401394Z", "url": "https://files.pythonhosted.org/packages/e5/02/828bff63ed75595565b9bd29aa189b2d5f89ac7e31437a8db81f4a77b4a8/pipgrip-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ae97d4b5cd1e48637d0d68c97598d39", "sha256": "d3214b8885bf7d6e61697a52ca0aa5490fd5afb4d525a5cb196e8f91ca1d1064"}, "downloads": -1, "filename": "pipgrip-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ae97d4b5cd1e48637d0d68c97598d39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 49826, "upload_time": "2020-04-30T09:06:45", "upload_time_iso_8601": "2020-04-30T09:06:45.923569Z", "url": "https://files.pythonhosted.org/packages/9c/92/80caf2944e44a8954484562b9b17bfa64c200c6d5bc7b0690db4226bacaf/pipgrip-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e53aae45c319ca842600d62c196915b", "sha256": "1711f65d293b6da69e71e01094c0feb37b208dc3c69df28f2e0d08ea2cc92c4c"}, "downloads": -1, "filename": "pipgrip-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4e53aae45c319ca842600d62c196915b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 45332, "upload_time": "2020-04-30T09:06:47", "upload_time_iso_8601": "2020-04-30T09:06:47.401394Z", "url": "https://files.pythonhosted.org/packages/e5/02/828bff63ed75595565b9bd29aa189b2d5f89ac7e31437a8db81f4a77b4a8/pipgrip-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:14 2020"}