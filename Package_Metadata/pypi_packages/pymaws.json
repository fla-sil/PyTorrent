{"info": {"author": "Ofer Shamir", "author_email": "ofer.shamir@mail.huji.ac.il", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## pymaws: Matsuno Analytical Wave Solution implemented in Python \nA python module for evaluating the initial conditions used in: [The Matsuno baroclinic wave test case](https://www.geosci-model-dev-discuss.net/gmd-2018-260/) (under review for GEOSCI. MODEL DEV.).\n\n### Installation\n\npymaws has minimal requirements of:\n\n- Python 3.4 to 3.7\n- numpy  1.16\n\nThe package can be installed using ``pip``:\n\n  \t$ pip install pymaws\n\n### Testing\nThe testing procedure tests all the parts of pymaws and should take anywhere from a few seconds upto 20 seconds due to random elements in the tests.\nTo run the tests, use python3 in the command line:\n\n\t$ python test_pymaws.py\n  You should get ``OK`` in the last line.\n\n### Getting Started\nIn the python environmnet, start by importing pymaws with the command:\n\n\t$ from pymaws import *\nThe main function ``eval_field`` was loaded to your environment and a dictionary named ``Earth`` that stores the planetary parameters used in this package. (if you want to run ``eval_field`` with different parameters , see below)\n\n\n### Example\nLet's begin with a regular grid of lat/lon on a 20 second time interval:\n\n\t$ import numpy as np\n\t$ nlats = 100\n\t$ nlons = 200\n\t$ ntime = 50\n\t$ lats = np.deg2rad(np.linspace(-80, 80, nlats))\n\t$ lons = np.deg2rad(np.linspace(-180, 180, nlons))\n\t$ time = np.linspace(0.0, 20, ntime)\nNow, let's evaluate the meridional velocity field of an Eastward propagating Inertia-Gravity (EIG) wave:\n\n    $ v = np.zeros((ntime, nlats, nlons))\n    $ for t in range(ntime):\n    $     for j in range(nlats):\n    $         for i in range(nlons):\n    $             v[t, j, i] = eval_field(lats[j], lons[i], time[t], \n    $                                           field='v', wave_type='EIG')\n\n\t$ v.shape\n\t$ (50, 200, 100)\nNote that the default arguments of ``eval_field`` are ``n=1, k=5, amp=1e-5, wave_type='Rossby'`` and ``parameters=Earth``. \nThis package does not include visualizations of any kind, but you can use ``matplotlib``, e.g.\n\n    $ from matplotlib import pyplot as plt\n    $ plt.contourf(np.rad2deg(lons), np.rad2deg(lats), v[0, :, :])\n    $ plt.xlim(-36,36)\n    $ plt.ylim(-30,30)\n\n![Meridional velocity at t=0](https://github.com/ofershamir/matsuno/raw/master/example_v.png) \n*Meridional velocity at t=0*\n\n\n\n### Caveats\n\nThis version of pymaws does not solve Matsuno equations for n, k < 1, \n\n### Planetary Parameters:\nThe default parameters in ``pymaws`` are stored in a dictionary named ``Earth``:\n\n\t$  {'angular_frequency': 7.29212e-05,\n\t      'gravitational_acceleration': 9.80616,\n\t      'mean_radius': 6371220.0,\n\t      'layer_mean_depth': 30.0}\nIf you want to use different planetary parameters,  just copy the dictionary ``Earth`` and replace the appropriate values. For example lets change the ``layer_mean_depth`` parameter to 10 meters: \n\n\t$   Earth_1 = Earth.copy()\n\t$   Earth_1['layer_mean_depth'] = 10.0\nWhen you run ``eval_field``, remember to use the argument ``parameters=Earth_1``.\n### How to cite pymaws\n\nIf you use pymaws in your academic work and publish a paper, we kindly ask that you cite pymaws using the following DOI:\n\n### License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n### Authors\n\n* **Ofer Shamir** - *ofer.shamir@mail.huji.ac.il*\n* **Shlomi Ziskin Ziv** - *shlomiziskin@gmail.com*\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ofershamir/matsuno", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pymaws", "package_url": "https://pypi.org/project/pymaws/", "platform": "", "project_url": "https://pypi.org/project/pymaws/", "project_urls": {"Homepage": "https://github.com/ofershamir/matsuno"}, "release_url": "https://pypi.org/project/pymaws/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Matsuno Analytical Wave Solution implemented in Python", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>pymaws: Matsuno Analytical Wave Solution implemented in Python</h2>\n<p>A python module for evaluating the initial conditions used in: <a href=\"https://www.geosci-model-dev-discuss.net/gmd-2018-260/\" rel=\"nofollow\">The Matsuno baroclinic wave test case</a> (under review for GEOSCI. MODEL DEV.).</p>\n<h3>Installation</h3>\n<p>pymaws has minimal requirements of:</p>\n<ul>\n<li>Python 3.4 to 3.7</li>\n<li>numpy  1.16</li>\n</ul>\n<p>The package can be installed using <code>pip</code>:</p>\n<pre><code>$ pip install pymaws\n</code></pre>\n<h3>Testing</h3>\n<p>The testing procedure tests all the parts of pymaws and should take anywhere from a few seconds upto 20 seconds due to random elements in the tests.\nTo run the tests, use python3 in the command line:</p>\n<pre><code>$ python test_pymaws.py\n</code></pre>\n<p>You should get <code>OK</code> in the last line.</p>\n<h3>Getting Started</h3>\n<p>In the python environmnet, start by importing pymaws with the command:</p>\n<pre><code>$ from pymaws import *\n</code></pre>\n<p>The main function <code>eval_field</code> was loaded to your environment and a dictionary named <code>Earth</code> that stores the planetary parameters used in this package. (if you want to run <code>eval_field</code> with different parameters , see below)</p>\n<h3>Example</h3>\n<p>Let's begin with a regular grid of lat/lon on a 20 second time interval:</p>\n<pre><code>$ import numpy as np\n$ nlats = 100\n$ nlons = 200\n$ ntime = 50\n$ lats = np.deg2rad(np.linspace(-80, 80, nlats))\n$ lons = np.deg2rad(np.linspace(-180, 180, nlons))\n$ time = np.linspace(0.0, 20, ntime)\n</code></pre>\n<p>Now, let's evaluate the meridional velocity field of an Eastward propagating Inertia-Gravity (EIG) wave:</p>\n<pre><code>$ v = np.zeros((ntime, nlats, nlons))\n$ for t in range(ntime):\n$     for j in range(nlats):\n$         for i in range(nlons):\n$             v[t, j, i] = eval_field(lats[j], lons[i], time[t], \n$                                           field='v', wave_type='EIG')\n\n$ v.shape\n$ (50, 200, 100)\n</code></pre>\n<p>Note that the default arguments of <code>eval_field</code> are <code>n=1, k=5, amp=1e-5, wave_type='Rossby'</code> and <code>parameters=Earth</code>.\nThis package does not include visualizations of any kind, but you can use <code>matplotlib</code>, e.g.</p>\n<pre><code>$ from matplotlib import pyplot as plt\n$ plt.contourf(np.rad2deg(lons), np.rad2deg(lats), v[0, :, :])\n$ plt.xlim(-36,36)\n$ plt.ylim(-30,30)\n</code></pre>\n<p><img alt=\"Meridional velocity at t=0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5954a68ae807fa98de7197dfe040d4dd82fadb35/68747470733a2f2f6769746875622e636f6d2f6f6665727368616d69722f6d617473756e6f2f7261772f6d61737465722f6578616d706c655f762e706e67\">\n<em>Meridional velocity at t=0</em></p>\n<h3>Caveats</h3>\n<p>This version of pymaws does not solve Matsuno equations for n, k &lt; 1,</p>\n<h3>Planetary Parameters:</h3>\n<p>The default parameters in <code>pymaws</code> are stored in a dictionary named <code>Earth</code>:</p>\n<pre><code>$  {'angular_frequency': 7.29212e-05,\n      'gravitational_acceleration': 9.80616,\n      'mean_radius': 6371220.0,\n      'layer_mean_depth': 30.0}\n</code></pre>\n<p>If you want to use different planetary parameters,  just copy the dictionary <code>Earth</code> and replace the appropriate values. For example lets change the <code>layer_mean_depth</code> parameter to 10 meters:</p>\n<pre><code>$   Earth_1 = Earth.copy()\n$   Earth_1['layer_mean_depth'] = 10.0\n</code></pre>\n<p>When you run <code>eval_field</code>, remember to use the argument <code>parameters=Earth_1</code>.</p>\n<h3>How to cite pymaws</h3>\n<p>If you use pymaws in your academic work and publish a paper, we kindly ask that you cite pymaws using the following DOI:</p>\n<h3>License</h3>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n<h3>Authors</h3>\n<ul>\n<li><strong>Ofer Shamir</strong> - <em><a href=\"mailto:ofer.shamir@mail.huji.ac.il\">ofer.shamir@mail.huji.ac.il</a></em></li>\n<li><strong>Shlomi Ziskin Ziv</strong> - <em><a href=\"mailto:shlomiziskin@gmail.com\">shlomiziskin@gmail.com</a></em></li>\n</ul>\n\n          </div>"}, "last_serial": 4979871, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bd1c59fc06fcdef442a824304887b293", "sha256": "95f0511edc9a1f70b7118481325a4ca71a1d3ddafff7358b85b7804cdfbf9e72"}, "downloads": -1, "filename": "pymaws-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd1c59fc06fcdef442a824304887b293", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10379, "upload_time": "2019-03-24T21:02:55", "upload_time_iso_8601": "2019-03-24T21:02:55.208854Z", "url": "https://files.pythonhosted.org/packages/8e/91/94e19d95ef13382fa1476239c8ee2e844e41980e4033f8a928431ade1d24/pymaws-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73dffc85d4f1d861e550b40e5ee57993", "sha256": "cdfd371c89ec288b04233b4b2a857899da896f904af60197cc91d96233c7d0dd"}, "downloads": -1, "filename": "pymaws-0.1.0.tar.gz", "has_sig": false, "md5_digest": "73dffc85d4f1d861e550b40e5ee57993", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9873, "upload_time": "2019-03-24T21:02:57", "upload_time_iso_8601": "2019-03-24T21:02:57.545647Z", "url": "https://files.pythonhosted.org/packages/b1/d0/6f089e33ed1babcbb810d51806a134c8f0e92fd6622072bd25d103eff27c/pymaws-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd1c59fc06fcdef442a824304887b293", "sha256": "95f0511edc9a1f70b7118481325a4ca71a1d3ddafff7358b85b7804cdfbf9e72"}, "downloads": -1, "filename": "pymaws-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd1c59fc06fcdef442a824304887b293", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10379, "upload_time": "2019-03-24T21:02:55", "upload_time_iso_8601": "2019-03-24T21:02:55.208854Z", "url": "https://files.pythonhosted.org/packages/8e/91/94e19d95ef13382fa1476239c8ee2e844e41980e4033f8a928431ade1d24/pymaws-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73dffc85d4f1d861e550b40e5ee57993", "sha256": "cdfd371c89ec288b04233b4b2a857899da896f904af60197cc91d96233c7d0dd"}, "downloads": -1, "filename": "pymaws-0.1.0.tar.gz", "has_sig": false, "md5_digest": "73dffc85d4f1d861e550b40e5ee57993", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9873, "upload_time": "2019-03-24T21:02:57", "upload_time_iso_8601": "2019-03-24T21:02:57.545647Z", "url": "https://files.pythonhosted.org/packages/b1/d0/6f089e33ed1babcbb810d51806a134c8f0e92fd6622072bd25d103eff27c/pymaws-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:25 2020"}