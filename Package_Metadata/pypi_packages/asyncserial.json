{"info": {"author": "Matthias Riegler", "author_email": "matthias@xvzf.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "============================\nAsyncio wrapper for pyserial\n============================\n\n.. image:: https://badge.fury.io/py/asyncserial.svg\n   :target: https://badge.fury.io/py/asyncserial\n   :alt: PyPI version\n\n.. image:: https://img.shields.io/pypi/pyversions/asyncserial.svg\n   :target: https://pypi.org/project/asyncserial/\n   :alt: Python Versions\n\n.. image:: https://readthedocs.org/projects/asyncserial/badge/?version=latest\n   :target: http://asyncserial.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n\n`asyncserial` is a a wrapper for the `pyserial` library providing an async interface based on `async def` and `await`.\n\n\nInstallation\n============\n\n.. code-block:: sh\n  pip install asyncserial\n\n\nDocumentation\n=============\nhttps://asyncserial.readthedocs.io\n\n\nExamples\n========\n.. code-block:: python\n\n   import asyncio\n   from asyncserial import Serial\n\n   loop = asyncio.get_event_loop()\n\n   test_serial = Serial(loop, \"/dev/ttyACM0\", baudrate=115200)\n\n   async def test():\n       await test_serial.read() # Drop anything that was already received\n       while True:\n           line = await test_serial.readline() # Read a line\n           print(\"[+] Serial read: {}\".format(line))\n           await asyncio.sleep(0) # Let's be a bit greedy, should be adjust to your needs\n\n\n   asyncio.ensure_future(test())\n\n   print(\"[+] Starting eventloop\")\n   loop.run_forever()\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xvzf/asyncserial-py", "keywords": "serial pyserial async asyncio", "license": "", "maintainer": "", "maintainer_email": "", "name": "asyncserial", "package_url": "https://pypi.org/project/asyncserial/", "platform": "", "project_url": "https://pypi.org/project/asyncserial/", "project_urls": {"Bug Reports": "https://github.com/xvzf/asyncserial-py/issues", "Homepage": "https://github.com/xvzf/asyncserial-py", "Source": "https://github.com/xvzf/asyncserial-py/"}, "release_url": "https://pypi.org/project/asyncserial/0.1.0/", "requires_dist": ["pyserial", "uvloop; extra == 'uvloop support'"], "requires_python": ">=3.5", "summary": "Asyncio wrapper for pyserial", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ============================<br>Asyncio wrapper for pyserial<br>============================<br><br>.. image:: https://badge.fury.io/py/asyncserial.svg<br>   :target: https://badge.fury.io/py/asyncserial<br>   :alt: PyPI version<br><br>.. image:: https://img.shields.io/pypi/pyversions/asyncserial.svg<br>   :target: https://pypi.org/project/asyncserial/<br>   :alt: Python Versions<br><br>.. image:: https://readthedocs.org/projects/asyncserial/badge/?version=latest<br>   :target: http://asyncserial.readthedocs.io/en/latest/?badge=latest<br>   :alt: Documentation Status<br><br><br>`asyncserial` is a a wrapper for the `pyserial` library providing an async interface based on `async def` and `await`.<br><br><br>Installation<br>============<br><br>.. code-block:: sh<br>  pip install asyncserial<br><br><br>Documentation<br>=============<br>https://asyncserial.readthedocs.io<br><br><br>Examples<br>========<br>.. code-block:: python<br><br>   import asyncio<br>   from asyncserial import Serial<br><br>   loop = asyncio.get_event_loop()<br><br>   test_serial = Serial(loop, \"/dev/ttyACM0\", baudrate=115200)<br><br>   async def test():<br>       await test_serial.read() # Drop anything that was already received<br>       while True:<br>           line = await test_serial.readline() # Read a line<br>           print(\"[+] Serial read: {}\".format(line))<br>           await asyncio.sleep(0) # Let's be a bit greedy, should be adjust to your needs<br><br><br>   asyncio.ensure_future(test())<br><br>   print(\"[+] Starting eventloop\")<br>   loop.run_forever()<br><br><br>\n          </div>"}, "last_serial": 3813466, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "30f8004f9bbde27a9b0163f08a3612d0", "sha256": "fb2d76878d913753ce122b74cf905e0bd6e94f4a2d956a830b60d9ccb88daf4b"}, "downloads": -1, "filename": "asyncserial-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30f8004f9bbde27a9b0163f08a3612d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8904, "upload_time": "2018-04-27T09:28:29", "upload_time_iso_8601": "2018-04-27T09:28:29.570663Z", "url": "https://files.pythonhosted.org/packages/f3/6f/291e0ee1c53b14d6799210793fa18cd48a7c32e2e05bff3a166fab2b52eb/asyncserial-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38870276caeb2d2f77c4530debbd8cbc", "sha256": "bc264b1928509565e6629ad2fa40688f8e2a488f3e952ceabf3c089ab8948536"}, "downloads": -1, "filename": "asyncserial-0.1.0.tar.gz", "has_sig": false, "md5_digest": "38870276caeb2d2f77c4530debbd8cbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8010, "upload_time": "2018-04-27T09:28:31", "upload_time_iso_8601": "2018-04-27T09:28:31.061744Z", "url": "https://files.pythonhosted.org/packages/cb/d0/adc22ce65d89c4a06dd8594c6b687674f2f969328359f342ae5aab2c9999/asyncserial-0.1.0.tar.gz", "yanked": false}], "0.1.0b2": [{"comment_text": "", "digests": {"md5": "95e2c030c6cc898e540bb8fc0af10db5", "sha256": "82d520afb7f5e7ea4a4aba74332a0f42be184eb562aaf348bf7555493b8e3497"}, "downloads": -1, "filename": "asyncserial-0.1.0b2-py3-none-any.whl", "has_sig": false, "md5_digest": "95e2c030c6cc898e540bb8fc0af10db5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7540, "upload_time": "2018-04-22T17:35:49", "upload_time_iso_8601": "2018-04-22T17:35:49.074524Z", "url": "https://files.pythonhosted.org/packages/b5/6a/59656088392582d169169a4f26cdda9b6c6e3cceb010e9f20010ead5371e/asyncserial-0.1.0b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2396e26f28ba84d60005d2b4d2690e0", "sha256": "fef23d1119449c08c8299069a94de29c0869a400cd2164a2f11afdbbacfc7f19"}, "downloads": -1, "filename": "asyncserial-0.1.0b2.tar.gz", "has_sig": false, "md5_digest": "d2396e26f28ba84d60005d2b4d2690e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7326, "upload_time": "2018-04-22T17:35:50", "upload_time_iso_8601": "2018-04-22T17:35:50.411350Z", "url": "https://files.pythonhosted.org/packages/34/c6/72b4c4ac452c01d6c2114fd4db436a550a9d100a2ced72d86280d16a6ae2/asyncserial-0.1.0b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30f8004f9bbde27a9b0163f08a3612d0", "sha256": "fb2d76878d913753ce122b74cf905e0bd6e94f4a2d956a830b60d9ccb88daf4b"}, "downloads": -1, "filename": "asyncserial-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30f8004f9bbde27a9b0163f08a3612d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8904, "upload_time": "2018-04-27T09:28:29", "upload_time_iso_8601": "2018-04-27T09:28:29.570663Z", "url": "https://files.pythonhosted.org/packages/f3/6f/291e0ee1c53b14d6799210793fa18cd48a7c32e2e05bff3a166fab2b52eb/asyncserial-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38870276caeb2d2f77c4530debbd8cbc", "sha256": "bc264b1928509565e6629ad2fa40688f8e2a488f3e952ceabf3c089ab8948536"}, "downloads": -1, "filename": "asyncserial-0.1.0.tar.gz", "has_sig": false, "md5_digest": "38870276caeb2d2f77c4530debbd8cbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8010, "upload_time": "2018-04-27T09:28:31", "upload_time_iso_8601": "2018-04-27T09:28:31.061744Z", "url": "https://files.pythonhosted.org/packages/cb/d0/adc22ce65d89c4a06dd8594c6b687674f2f969328359f342ae5aab2c9999/asyncserial-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:40 2020"}