{"info": {"author": "Kevin Gill", "author_email": "kevin@movieextras.ie", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Framework :: Plone :: Addon", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": ".. contents:: Table of Contents\n\nIntroduction\n============\n\nProvides a field with a datagrid (table), where each row is a sub form.\n\nIt is a `z3c.form <https://z3cform.readthedocs.io/en/latest/>`_ implementation of the `Products.DataGridField <http://plone.org/products/datagridfield>`_ .\n\nThis product was developed for use with Plone and Dexterity.\n\n.. image:: https://travis-ci.org/collective/collective.z3cform.datagridfield.png\n   :target: http://travis-ci.org/collective/collective.z3cform.datagridfield\n\n\nRequirements\n------------\n\n* Versions >= 1.4 are for Plone 5+, if you use Plone 4.3, use versions 1.3.x\n* For Python 3.7 at least PyYAML 4.2b1\n* z3c.forms\n* A browser with javascript support\n* jquery 1.4.3 or later\n\n\nInstallation\n============\n\nAdd collective.z3cform.datagridfield to your buildout eggs:\n\n.. code-block:: ini\n\n    [buildout]\n    ...\n    eggs =\n        collective.z3cform.datagridfield\n\n\nExample usage\n=============\n\nThis piece of code demonstrates a schema which has a table within it.\nThe layout of the table is defined by a second schema:\n\n.. code-block:: python\n\n    from collective.z3cform.datagridfield import DataGridFieldFactory\n    from collective.z3cform.datagridfield import DictRow\n    from z3c.form import field\n    from z3c.form import form\n    from z3c.form.form import extends\n    from zope import interface\n    from zope import component\n    from zope import schema\n\n\n    class ITableRowSchema(interface.Interface):\n        one = schema.TextLine(title=u\"One\")\n        two = schema.TextLine(title=u\"Two\")\n        three = schema.TextLine(title=u\"Three\")\n\n\n    class IFormSchema(interface.Interface):\n        four = schema.TextLine(title=u\"Four\")\n        table = schema.List(title=u\"Table\",\n            value_type=DictRow(title=u\"tablerow\", schema=ITableRowSchema))\n\n    @component.adapter(IFormSchema)\n    class EditForm(form.EditForm):\n\n        fields = field.Fields(IFormSchema)\n        label=u\"Demo Usage of DataGridField\"\n\n        fields['table'].widgetFactory = DataGridFieldFactory\n\nConfigured like so:\n\n.. code-block:: xml\n\n    <browser:page\n        name=\"editform--example\"\n        class=\".editform.EditForm\"\n        for=\"*\"\n        permission=\"zope2.View\"\n        />\n\n\nAlso it can be used from a supermodel XML:\n\n.. code-block:: xml\n\n    <field name=\"table\" type=\"zope.schema.List\">\n      <description/>\n      <title>Table</title>\n      <value_type type=\"collective.z3cform.datagridfield.DictRow\">\n        <schema>your.package.interfaces.ITableRowSchema</schema>\n      </value_type>\n      <form:widget type=\"collective.z3cform.datagridfield.DataGridFieldFactory\"/>\n    </field>\n\n\nStorage\n-------\n\nThe data can be stored as either a list of dicts or a list of objects.\nIf the data is a list of dicts, the value_type is DictRow.\nOtherwise, the value_type is 'schema.Object'.\n\nIf you are providing an Object content type (as opposed to dicts) you must provide your own conversion class.\nThe default conversion class returns a list of dicts,\nnot of your object class.\nSee the demos.\n\n\nConfiguration\n=============\n\n\nRow editor handles\n------------------\n\nThe widget can be customised via the updateWidgets method.\n\n.. code-block:: python\n\n    def updateWidgets(self):\n        super(EditForm, self).updateWidgets()\n        self.widgets['table'].allow_insert = False # Enable/Disable the insert button on the right\n        self.widgets['table'].allow_delete = False # Enable/Disable the delete button on the right\n        self.widgets['table'].auto_append = False  # Enable/Disable the auto-append feature\n        self.widgets['table'].allow_reorder = False  # Enable/Disable the re-order rows feature\n        self.widgets['table'].main_table_css_class = 'my_custom_class'  # Change the class applied on the main table when the field is displayed\n\nThe widget contains an attribute 'columns' which is manipulated to hide column\ntitles.\n\n\nBlock edit mode\n---------------\n\nA widget class variation ``BlockDataGridField`` is provided.\nThis widget renders subform widgets vertically in blocks instead of horizontally in cells.\nIt makes sense when there are many subform fields and they have problem to fit on the screen once.\n\nExample:\n\n.. code-block:: python\n\n    class EditForm9(EditForm):\n        label = u'Rendering widgets as blocks instead of cells'\n\n        grok.name('demo-collective.z3cform.datagrid-block-edit')\n\n        def update(self):\n            # Set a custom widget for a field for this form instance only\n            self.fields['address'].widgetFactory = BlockDataGridFieldFactory\n            super(EditForm9, self).update()\n\n\nManipulating the Sub-form\n-------------------------\n\nThe DataGridField makes use of a subform to build each line.\nThe main DataGridField contains a DataGridFieldObject for each line in the table.\nThe DataGridFieldObject in turn creates the DataGridFieldObjectSubForm to store the fields.\n\nThere are two callbacks to your main form:\n\n**datagridInitialise(subform, widget)**\n\n* This is called when the subform fields have been initialised,\n  but before the widgets have been created. Field based configuration could occur here.\n\n**datagridUpdateWidgets(subform, widgets, widget)**\n\n* This is called when the subform widgets have been created.\n  At this point,  you can configure the widgets, e.g. specify the size of a widget.\n\nHere is an example how one can customize per-field widgets for the data grid field:\n\n.. code-block:: python\n\n    from .widget import DGFTreeSelectFieldWidget\n    from collective.z3cform.datagridfield import DataGridFieldFactory\n    from collective.z3cform.datagridfield import DictRow\n    from Products.CMFCore.interfaces import ISiteRoot\n    from z3c.form import form\n    from zope import interface\n    from zope import schema\n\n\n    class ITableRowSchema(form.Schema):\n\n        form.widget(one=DGFTreeSelectFieldWidget)\n        one = schema.TextLine(title=u\"Level 1\")\n\n        form.widget(two=DGFTreeSelectFieldWidget)\n        two = schema.TextLine(title=u\"Level 2\")\n\n        # Uses the default widget\n        three = schema.TextLine(title=u\"Level 3\")\n\n\n    class IFormSchema(form.Schema):\n\n        form.widget(table=DataGridFieldFactory)\n        table = schema.List(\n            title=u\"Nested selection tree test\",\n            value_type=DictRow(\n                title=u\"tablerow\",\n                schema=ITableRowSchema\n            )\n        )\n\n\nWorking with plone.app.registry\n-------------------------------\n\nTo use the field with plone.app.registry, you'll have to use\na version of the field that has PersistentField as it's base\nclass:\n\n.. code-block:: python\n\n    from collective.z3cform.datagridfield.registry import DictRow\n\n\nJavaScript events\n-----------------\n\n``collective.z3cform.datagridfield`` fires jQuery events,\nso that you can hook them in your own Javascript for DataGridField\nbehavior customization.\n\nThe following events are currently fired against ``table.datagridwidget-table-view``\n\n* ``beforeaddrow`` [datagridfield, newRow]\n\n* ``afteraddrow`` [datagridfield, newRow]\n\n* ``beforeaddrowauto`` [datagridfield, newRow]\n\n* ``afteraddrowauto`` [datagridfield, newRow]\n\n* ``aftermoverow`` [datagridfield]\n\n* ``afterdatagridfieldinit`` - All DGFs on the page have been initialized\n\nExample usage:\n\n.. code-block:: javascript\n\n    var handleDGFInsert = function(event, dgf, row) {\n        row = $(row);\n        console.log(\"Got new row:\");\n        console.log(row);\n    };\n\n    // Bind all DGF handlers on the page\n    $(document).on('beforeaddrow beforeaddrowauto', '.datagridwidget-table-view', handleDGFInsert);\n\n\nDemo\n====\n\nMore examples are in the demo subfolder of this package.\n\n\nChangelog\n=========\n\n1.5.3 (2020-03-03)\n------------------\n\n- Bug fix for multiple datagridfields per form.\n  Multiple lines were auto added when more than one datagrid was present.\n  Fixes `issue 96 <https://github.com/collective/collective.z3cform.datagridfield/issues/96>`_.\n  [maurits]\n\n\n1.5.2 (2020-01-07)\n------------------\n\n- Fix \"Unknown directive widgetTemplate\"\n  [agitator]\n\n- Bug fix: auto appending row.\n  [ksuess]\n\n\n1.5.1 (2019-03-21)\n------------------\n\n- Add missing upgrade profile to_2\n  [agitator]\n\n\n1.5.0 (2019-03-09)\n------------------\n\n- Add support for Python 3 and Plone 5.2.\n  [pbauer, agitator]\n\n\n1.4.0 (2019-02-21)\n------------------\n\n- Drop support for Plone 4.\n  [pbauer]\n\n- Use Ressource-Registry (Pat-Registry), Update JS/CSS, Add Uninstall\n  [2silver]\n\n- use Plone5 glyphicons instead of images\n  [2silver]\n\n- Added missing upgrade step, calling browserlayer setup.\n  [sgeulette]\n\n- Display column description if provided in schema `field.description`.\n  [gbastien, bleybaert]\n\n- Specify in README.rst that versions >= 1.4 are for Plone 5+ and\n  versions < 1.4 are for Plone 4.\n  [gbastien]\n\n- Usability change: add an (hidden) label inside the add commands\n  [keul]\n\n- Compatibility with Plone 5 modals/overlay from mockup\n  [keul]\n\n1.3.1 (2019-02-21)\n------------------\n\n- Extend uninstall profile.\n  [thet]\n\n- Wrapped commands inside ``A`` tags, required for accessibility reason (change backported from Products.DataGridField).\n  This also simplify customizing icons with pure CSS.\n  [keul]\n\n- Replaced minus icon with a more usable delete icon.\n  [keul]\n\n- Removed ols-school ``*`` chars for marking fields as required.\n  [keul]\n\n- Fix object access\n  [tomgross]\n\n- Fix usage of related items widget in subforms\n  https://github.com/plone/Products.CMFPlone/issues/2446\n  [tomgross]\n\n1.3.0 (2017-11-22)\n------------------\n\n- Set widget mode on cell widget in order to support autoform mode directive. [jone]\n\n- Bugfix: do not try to update readonly fields. [jone]\n\n- Cleanup: utf8 headers, isort, code-style. [jensens]\n\n- Remove dependency on plone.directives.form in setup.py,\n  it was not used any longer. [jensens]\n\n- Feature/Fix: Support widgets using patternslib in a DictRow.\n  [jensens]\n\n- Fix: #36 remove grok from all documentation since grok is no longer supported.\n  [jensens]\n\n- Copy relevant parts of ObjectSubform from z3c.form 3.2.10 over here, it was removed in later versions.\n  [jensens]\n\n- Add Browserlayer and use it, also add uninstall step.\n  [jensens]\n\n- Move Demo package to in here.\n  [jensens]\n\n\n1.2 (2017-03-08)\n----------------\n\n- Fix validation exception on readonly fields.\n  [rodfersou]\n- Fix bug for widget.klass is NonType in the block view when defining the class for the field.\n- Allow deletion of last row in non-auto-append mode.\n  [gaudenz]\n- fixed binding for IChoice fields during validation [djay]\n- plone 5 compatibility and fixed travis testing for plone 5 [djay]\n\n\n1.1 (2014-07-25)\n----------------\n\n- Removed JS code that relies on firefox being used.\n  [neilferreira]\n\n- Stopped referencing the 'event' element when creating a new row as the event\n  that triggered the content of an input changing may have been from another element.\n  [neilferreira]\n\n\n1.0 (2014-06-02)\n----------------\n\n- Add 'form-widgets-field_id' as widget css id (consistency with other widgets).\n  [thomasdesvenain]\n\n- Fix package dependencies.\n  [hvelarde]\n\n- Use BlockDataGridFieldObject for rows in a BlockDataGridField.\n  [gaudenz]\n\n- Filter out any auto append or template rows in updateWidgets.\n  [gaudenz]\n\n- Add row parameter to aftermoverow JS event\n  [gaudenz]\n\n- Don't reset class attribute on cloned template rows\n  [gaudenz]\n\n- Replace row index in all template row elements, not just input elements.\n  Replace the index in id, name, for, href and data-fieldname attributes\n  when cloning the template row.\n  [gaudenz]\n\n\n0.15 (2013-09-24)\n-----------------\n\n- Added possibility to define the CSS class for the main table when the field is displayed.\n  This way, you can use common Plone existing classes (like 'listing').\n  [gbastien]\n\n- Fixed auto-append bug when there is more than one datagrid field in page auto-appending one field binds\n  \"change.dgf\" to another field also. added \"$(dgf).find(..\" in datagridfield.js line 138 so it binds to right element only.\n  [tareqalam]\n\n- Only abort moveRow if the row is really not found and not if the row idx just happens to be 0.\n  [gaudenz]\n\n- Also update hidden data rows when reindexing in row mode. This fix was previously somehow only done for block mode.\n  [gaudenz]\n\n- Relax requirements for markup, don't assume inputs are direct childs of table cells. This makes useing custom\n  templates much easier.\n  [gaudenz]\n\n- Fix validate function signature for IValidator API. The API requires a \"force\" argument.\n  [gaudenz]\n\n- Register the SubformAdapter for IPloneForm layer to avoid that the Adapter from plone.app.z3cform\n  takes precedence.\n  [gaudenz]\n\n\n0.14 (2013-05-24)\n-----------------\n\n- Align travis setup to other packages.\n  [saily]\n\n- Add new V1 ``bootstrap.py``.\n  [saily]\n\n- Added CSS classes to tbody rows (``row-(1...n)``) and thead columns\n  (``cell-(1...m)``) to allow more styling in edit forms.\n  [saily]\n\n- Fixed wrong template in display mode when set editing to block edit mode [miohtama]\n\n- Added CSS classes (widget.klass attribute) for DataGridField, to separate it from other MultiWidgets [miohtama]\n\n\n0.13 (2013-04-09)\n-----------------\n\n- Add travis-ci configs [jaroel]\n\n- Convert tests to plone.app.testing [jaroel]\n\n- Fix to expect ``zope.schema.interfaces.ValidationError`` to work better\n  with *TooLong* and *TooShort* exceptions. [datakurre]\n\n- Fix IE7 failing on `<label>` for manipulation [miohtama]\n\n- Deal with situations where there is zero rows on DGF and no auto-append row available [miohtama]\n\n- Correctly bind DGF events on DOM content loaded, not when Javascript is parsed [miohtama]\n\n- Don't display movement handles if the row cannot be moved [miohtama]\n\n- Changed move up and down handlers to stay in fixed positions to make cells stay in the same width regardless of moving [miohtama]\n\n- Fixed checkbox saving, was broken by nested DGF support [miohtama]\n\n- Added block edit mode [miohtama]\n\n- \"use strict;\" and ECMAScript 5 compatible Javascript clean-up [miohtama]\n\n- Added *afterrowmoved* JS event [miohtama]\n\n\n0.12 (2012-10-30)\n--------------------\n\n- Updated empty row selection. [jstegle]\n\n- Nested DataGridField support (yo dawg...) [miohtama]\n\n- Support plone.autoform and grok'ed row schemas [miohtama]\n\n- Added ``DataGridField.extra`` parameter, so you can pass out\n  application specific data to Javascript [miohtama]\n\n\n0.11 (2012-05-16)\n-----------------\n\n- be able to use with plone.app.registry\n  [vangheem]\n\n\n0.10 (2012-02-12)\n-----------------\n\n- Fix bug with moving the last row up.\n  [m-martinez]\n\n\n0.9 (2011-10-27)\n----------------\n\n- Clone events when adding new row - fixes bug where browse button of\n  plone.formwidget.contenttree did nothing for new rows\n  [anthonygerrard]\n\n- Reindex more indexed attributes of cloned row\n  [anthonygerrard]\n\n\n0.8 (2011-09-24)\n----------------\n\n- Avoid using the \"row\" CSS class.\n  [davisagli]\n\n- Fixes to work with jQuery 1.3.x (use .remove() instead of .detach(), fetch data\n  attributes a different way, and avoid live binding the change event).\n  [davisagli]\n\n- Don't error out when getting a ``FormatterValidationError``, pass\n  it on to z3c.form instead.\n  [claytron]\n\n- Give manipulator images a relative src rather than absolute. This\n  previously meant the widget didn't work on sites without Plone/Zope at the\n  root of the domain.\n  [davidjb]\n\n- During auto-insert, add our new row into the document first, before reindexing\n  it and changing its elements' IDs. This allows Javascript that depends on\n  these IDs (such as plone.formwidget.autocomplete) to pick up the correct\n  fields.\n  [davidjb]\n\n- Tidying up and reducing complexity of auto-insert functionality\n  [davidjb]\n\n- Removing unnecessary auto-insert bind and unbind as this is already covered\n  by jQuery's `live()` function against the `auto-append` class. Adding/removing\n  this class against rows automatically does this.\n  [davidjb]\n\n- Resolved issue with auto-insert functionality not working by removing\n  table-specific check in Javascript.\n  [davidjb]\n\n\n0.7 (2011-07-01)\n----------------\n\n- Changed markup/javascript to prevent duplicate HTML id attributes. Changed\n  Javascript to allow for datagrid page templates that don't use tables.\n  [dextermilo]\n\n- Improve spacing in CSS.\n  [davisagli]\n\n- Revert my fix to ensure that blank rows are added, because it duplicated\n  a fix in z3c.form resulting in extra rows.\n  [davisagli]\n\n\n0.6 (2011-05-17)\n----------------\n\n- Search for datagridInitialise and datagridUpdateWidgets on the\n  parent form, also when in a fieldset.\n  [maurits]\n\n- Register templates on plone.app.z3cform.interfaces.IPloneFormLayer to\n  take precedence over that packages list widget templates.\n  [elro]\n\n- Make sure that updateWidgets is called to add blank rows even if the\n  widget has no value.\n  [davisagli]\n\n- When extracting a row value fails due to a validation error, convert\n  widget values to field values so the value can be successfully applied\n  to the grid widget.\n  [davisagli]\n\n- Register a plone.supermodel handler for the DictRow so it can be used\n  in supermodel models.\n  [davisagli]\n\n- Depend on collective.z3cform.datagridfield_demo as a test extra;\n  use the browser view from this package in the tests.\n  [maurits]\n\n- _validate still used when import/exporting, fix up code so it works\n  [lentinj]\n\n- Add a DictRow serializer for transmogrify.dexterity\n  [lentinj]\n\n- Only use width:100% on input cells that are the only element in the cell\n  [lentinj]\n\n- Reorder row indices backwards when adding rows. This means that adjacent\n  rows don't share the same index temporarily, for example:-\n  - Row 1 and 2 contain input:radio based widgets\n  - Row 0 added, row renumbering starts\n  - Row 1 widgets renamed 2\n  - Both sets of input:radio share the same name, one deselected\n  - Row 2 widgets renamed 3\n  - . . .\n  [lentinj]\n\n- Use jQuery to clone rows, and clone the jQuery events on the rows.\n  [lentinj]\n\n- Implemented reorder functionality\n\n\n0.5 (2011-02-08)\n----------------\n\n- Put in the DictRow class (tks Martin Aspeli)\n\n- Moved the demo code out to a separate package collective.z3cform.datagridfield_demo\n  (tks Laurence Rowe).\n\n- Removed superfluous lines from setup.py (tks Laurence Rowe).\n\n- Removed unnessary dependency on dexterity (tks Laurence Rowe).\n\n- Removed unnessary dependency on grok (tks Laurence Rowe).\n\n\n0.4 (2011-02-06)\n----------------\n\n- Renamed the demo pages. The starting point is now @@demo-collective.z3cform.datagrid .\n\n- The widget can now be configured via the updateWidgets method. It\n  is no longer necessary to create a custom factory.\n\n- The columns can now be omitted.\n\n- Provide a set of demo views for Object access.\n\n\n0.3 (2011-02-04)\n----------------\n\n- The auto-append functionality did not bind correctly for popup forms.\n  I switched to using jQuery.live() instead of binding at document load time.\n\n- Added a menu to the demo pages\n\n- Added a display only form option.\n\n- Fixed the restructured text of the main README.txt so that it will show\n  more friendly in PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.z3cform.datagridfield", "keywords": "Plone,Dexterity,z3c.form,table,grid,sub-fields", "license": "GNU General Public License v2 (GPLv2)", "maintainer": "", "maintainer_email": "", "name": "collective.z3cform.datagridfield", "package_url": "https://pypi.org/project/collective.z3cform.datagridfield/", "platform": "", "project_url": "https://pypi.org/project/collective.z3cform.datagridfield/", "project_urls": {"Homepage": "https://github.com/collective/collective.z3cform.datagridfield"}, "release_url": "https://pypi.org/project/collective.z3cform.datagridfield/1.5.3/", "requires_dist": ["plone.app.z3cform", "plone.autoform", "Products.CMFPlone (>=5.0)", "plone.api", "setuptools", "z3c.form (>=2.4.3dev)", "plone.app.robotframework[debug] ; extra == 'test'"], "requires_python": "", "summary": "Fields with repeatable data grid (table-like) for z3.cform", "version": "1.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id24\" rel=\"nofollow\">Introduction</a><ul>\n<li><a href=\"#requirements\" id=\"id25\" rel=\"nofollow\">Requirements</a></li>\n</ul>\n</li>\n<li><a href=\"#installation\" id=\"id26\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#example-usage\" id=\"id27\" rel=\"nofollow\">Example usage</a><ul>\n<li><a href=\"#storage\" id=\"id28\" rel=\"nofollow\">Storage</a></li>\n</ul>\n</li>\n<li><a href=\"#configuration\" id=\"id29\" rel=\"nofollow\">Configuration</a><ul>\n<li><a href=\"#row-editor-handles\" id=\"id30\" rel=\"nofollow\">Row editor handles</a></li>\n<li><a href=\"#block-edit-mode\" id=\"id31\" rel=\"nofollow\">Block edit mode</a></li>\n<li><a href=\"#manipulating-the-sub-form\" id=\"id32\" rel=\"nofollow\">Manipulating the Sub-form</a></li>\n<li><a href=\"#working-with-plone-app-registry\" id=\"id33\" rel=\"nofollow\">Working with plone.app.registry</a></li>\n<li><a href=\"#javascript-events\" id=\"id34\" rel=\"nofollow\">JavaScript events</a></li>\n</ul>\n</li>\n<li><a href=\"#demo\" id=\"id35\" rel=\"nofollow\">Demo</a></li>\n<li><a href=\"#changelog\" id=\"id36\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id37\" rel=\"nofollow\">1.5.3 (2020-03-03)</a></li>\n<li><a href=\"#id2\" id=\"id38\" rel=\"nofollow\">1.5.2 (2020-01-07)</a></li>\n<li><a href=\"#id3\" id=\"id39\" rel=\"nofollow\">1.5.1 (2019-03-21)</a></li>\n<li><a href=\"#id4\" id=\"id40\" rel=\"nofollow\">1.5.0 (2019-03-09)</a></li>\n<li><a href=\"#id5\" id=\"id41\" rel=\"nofollow\">1.4.0 (2019-02-21)</a></li>\n<li><a href=\"#id6\" id=\"id42\" rel=\"nofollow\">1.3.1 (2019-02-21)</a></li>\n<li><a href=\"#id7\" id=\"id43\" rel=\"nofollow\">1.3.0 (2017-11-22)</a></li>\n<li><a href=\"#id8\" id=\"id44\" rel=\"nofollow\">1.2 (2017-03-08)</a></li>\n<li><a href=\"#id9\" id=\"id45\" rel=\"nofollow\">1.1 (2014-07-25)</a></li>\n<li><a href=\"#id10\" id=\"id46\" rel=\"nofollow\">1.0 (2014-06-02)</a></li>\n<li><a href=\"#id11\" id=\"id47\" rel=\"nofollow\">0.15 (2013-09-24)</a></li>\n<li><a href=\"#id12\" id=\"id48\" rel=\"nofollow\">0.14 (2013-05-24)</a></li>\n<li><a href=\"#id13\" id=\"id49\" rel=\"nofollow\">0.13 (2013-04-09)</a></li>\n<li><a href=\"#id14\" id=\"id50\" rel=\"nofollow\">0.12 (2012-10-30)</a></li>\n<li><a href=\"#id15\" id=\"id51\" rel=\"nofollow\">0.11 (2012-05-16)</a></li>\n<li><a href=\"#id16\" id=\"id52\" rel=\"nofollow\">0.10 (2012-02-12)</a></li>\n<li><a href=\"#id17\" id=\"id53\" rel=\"nofollow\">0.9 (2011-10-27)</a></li>\n<li><a href=\"#id18\" id=\"id54\" rel=\"nofollow\">0.8 (2011-09-24)</a></li>\n<li><a href=\"#id19\" id=\"id55\" rel=\"nofollow\">0.7 (2011-07-01)</a></li>\n<li><a href=\"#id20\" id=\"id56\" rel=\"nofollow\">0.6 (2011-05-17)</a></li>\n<li><a href=\"#id21\" id=\"id57\" rel=\"nofollow\">0.5 (2011-02-08)</a></li>\n<li><a href=\"#id22\" id=\"id58\" rel=\"nofollow\">0.4 (2011-02-06)</a></li>\n<li><a href=\"#id23\" id=\"id59\" rel=\"nofollow\">0.3 (2011-02-04)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id24\" rel=\"nofollow\">Introduction</a></h2>\n<p>Provides a field with a datagrid (table), where each row is a sub form.</p>\n<p>It is a <a href=\"https://z3cform.readthedocs.io/en/latest/\" rel=\"nofollow\">z3c.form</a> implementation of the <a href=\"http://plone.org/products/datagridfield\" rel=\"nofollow\">Products.DataGridField</a> .</p>\n<p>This product was developed for use with Plone and Dexterity.</p>\n<a href=\"http://travis-ci.org/collective/collective.z3cform.datagridfield\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/collective/collective.z3cform.datagridfield.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c6d152fc5e125777cf32bbd908210b9d1e3947d/68747470733a2f2f7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e7a3363666f726d2e64617461677269646669656c642e706e67\"></a>\n<div id=\"requirements\">\n<h3><a href=\"#id25\" rel=\"nofollow\">Requirements</a></h3>\n<ul>\n<li>Versions &gt;= 1.4 are for Plone 5+, if you use Plone 4.3, use versions 1.3.x</li>\n<li>For Python 3.7 at least PyYAML 4.2b1</li>\n<li>z3c.forms</li>\n<li>A browser with javascript support</li>\n<li>jquery 1.4.3 or later</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id26\" rel=\"nofollow\">Installation</a></h2>\n<p>Add collective.z3cform.datagridfield to your buildout eggs:</p>\n<pre><span class=\"k\">[buildout]</span>\n<span class=\"na\">...</span>\n<span class=\"na\">eggs</span> <span class=\"o\">=</span><span class=\"s\">\n    collective.z3cform.datagridfield</span>\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2><a href=\"#id27\" rel=\"nofollow\">Example usage</a></h2>\n<p>This piece of code demonstrates a schema which has a table within it.\nThe layout of the table is defined by a second schema:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collective.z3cform.datagridfield</span> <span class=\"kn\">import</span> <span class=\"n\">DataGridFieldFactory</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collective.z3cform.datagridfield</span> <span class=\"kn\">import</span> <span class=\"n\">DictRow</span>\n<span class=\"kn\">from</span> <span class=\"nn\">z3c.form</span> <span class=\"kn\">import</span> <span class=\"n\">field</span>\n<span class=\"kn\">from</span> <span class=\"nn\">z3c.form</span> <span class=\"kn\">import</span> <span class=\"n\">form</span>\n<span class=\"kn\">from</span> <span class=\"nn\">z3c.form.form</span> <span class=\"kn\">import</span> <span class=\"n\">extends</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope</span> <span class=\"kn\">import</span> <span class=\"n\">interface</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope</span> <span class=\"kn\">import</span> <span class=\"n\">component</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope</span> <span class=\"kn\">import</span> <span class=\"n\">schema</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ITableRowSchema</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Interface</span><span class=\"p\">):</span>\n    <span class=\"n\">one</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"One\"</span><span class=\"p\">)</span>\n    <span class=\"n\">two</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Two\"</span><span class=\"p\">)</span>\n    <span class=\"n\">three</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Three\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">IFormSchema</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Interface</span><span class=\"p\">):</span>\n    <span class=\"n\">four</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Four\"</span><span class=\"p\">)</span>\n    <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Table\"</span><span class=\"p\">,</span>\n        <span class=\"n\">value_type</span><span class=\"o\">=</span><span class=\"n\">DictRow</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"tablerow\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">ITableRowSchema</span><span class=\"p\">))</span>\n\n<span class=\"nd\">@component</span><span class=\"o\">.</span><span class=\"n\">adapter</span><span class=\"p\">(</span><span class=\"n\">IFormSchema</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">EditForm</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">EditForm</span><span class=\"p\">):</span>\n\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">Fields</span><span class=\"p\">(</span><span class=\"n\">IFormSchema</span><span class=\"p\">)</span>\n    <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Demo Usage of DataGridField\"</span>\n\n    <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s1\">'table'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">widgetFactory</span> <span class=\"o\">=</span> <span class=\"n\">DataGridFieldFactory</span>\n</pre>\n<p>Configured like so:</p>\n<pre><span class=\"nt\">&lt;browser:page</span>\n    <span class=\"na\">name=</span><span class=\"s\">\"editform--example\"</span>\n    <span class=\"na\">class=</span><span class=\"s\">\".editform.EditForm\"</span>\n    <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n    <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span>\n    <span class=\"nt\">/&gt;</span>\n</pre>\n<p>Also it can be used from a supermodel XML:</p>\n<pre><span class=\"nt\">&lt;field</span> <span class=\"na\">name=</span><span class=\"s\">\"table\"</span> <span class=\"na\">type=</span><span class=\"s\">\"zope.schema.List\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;description/&gt;</span>\n  <span class=\"nt\">&lt;title&gt;</span>Table<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;value_type</span> <span class=\"na\">type=</span><span class=\"s\">\"collective.z3cform.datagridfield.DictRow\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;schema&gt;</span>your.package.interfaces.ITableRowSchema<span class=\"nt\">&lt;/schema&gt;</span>\n  <span class=\"nt\">&lt;/value_type&gt;</span>\n  <span class=\"nt\">&lt;form:widget</span> <span class=\"na\">type=</span><span class=\"s\">\"collective.z3cform.datagridfield.DataGridFieldFactory\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/field&gt;</span>\n</pre>\n<div id=\"storage\">\n<h3><a href=\"#id28\" rel=\"nofollow\">Storage</a></h3>\n<p>The data can be stored as either a list of dicts or a list of objects.\nIf the data is a list of dicts, the value_type is DictRow.\nOtherwise, the value_type is \u2018schema.Object\u2019.</p>\n<p>If you are providing an Object content type (as opposed to dicts) you must provide your own conversion class.\nThe default conversion class returns a list of dicts,\nnot of your object class.\nSee the demos.</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2><a href=\"#id29\" rel=\"nofollow\">Configuration</a></h2>\n<div id=\"row-editor-handles\">\n<h3><a href=\"#id30\" rel=\"nofollow\">Row editor handles</a></h3>\n<p>The widget can be customised via the updateWidgets method.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">updateWidgets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">EditForm</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">updateWidgets</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">widgets</span><span class=\"p\">[</span><span class=\"s1\">'table'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">allow_insert</span> <span class=\"o\">=</span> <span class=\"kc\">False</span> <span class=\"c1\"># Enable/Disable the insert button on the right</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">widgets</span><span class=\"p\">[</span><span class=\"s1\">'table'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">allow_delete</span> <span class=\"o\">=</span> <span class=\"kc\">False</span> <span class=\"c1\"># Enable/Disable the delete button on the right</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">widgets</span><span class=\"p\">[</span><span class=\"s1\">'table'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">auto_append</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Enable/Disable the auto-append feature</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">widgets</span><span class=\"p\">[</span><span class=\"s1\">'table'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">allow_reorder</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Enable/Disable the re-order rows feature</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">widgets</span><span class=\"p\">[</span><span class=\"s1\">'table'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">main_table_css_class</span> <span class=\"o\">=</span> <span class=\"s1\">'my_custom_class'</span>  <span class=\"c1\"># Change the class applied on the main table when the field is displayed</span>\n</pre>\n<p>The widget contains an attribute \u2018columns\u2019 which is manipulated to hide column\ntitles.</p>\n</div>\n<div id=\"block-edit-mode\">\n<h3><a href=\"#id31\" rel=\"nofollow\">Block edit mode</a></h3>\n<p>A widget class variation <tt>BlockDataGridField</tt> is provided.\nThis widget renders subform widgets vertically in blocks instead of horizontally in cells.\nIt makes sense when there are many subform fields and they have problem to fit on the screen once.</p>\n<p>Example:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">EditForm9</span><span class=\"p\">(</span><span class=\"n\">EditForm</span><span class=\"p\">):</span>\n    <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"sa\">u</span><span class=\"s1\">'Rendering widgets as blocks instead of cells'</span>\n\n    <span class=\"n\">grok</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">(</span><span class=\"s1\">'demo-collective.z3cform.datagrid-block-edit'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Set a custom widget for a field for this form instance only</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s1\">'address'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">widgetFactory</span> <span class=\"o\">=</span> <span class=\"n\">BlockDataGridFieldFactory</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">EditForm9</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"manipulating-the-sub-form\">\n<h3><a href=\"#id32\" rel=\"nofollow\">Manipulating the Sub-form</a></h3>\n<p>The DataGridField makes use of a subform to build each line.\nThe main DataGridField contains a DataGridFieldObject for each line in the table.\nThe DataGridFieldObject in turn creates the DataGridFieldObjectSubForm to store the fields.</p>\n<p>There are two callbacks to your main form:</p>\n<p><strong>datagridInitialise(subform, widget)</strong></p>\n<ul>\n<li>This is called when the subform fields have been initialised,\nbut before the widgets have been created. Field based configuration could occur here.</li>\n</ul>\n<p><strong>datagridUpdateWidgets(subform, widgets, widget)</strong></p>\n<ul>\n<li>This is called when the subform widgets have been created.\nAt this point,  you can configure the widgets, e.g. specify the size of a widget.</li>\n</ul>\n<p>Here is an example how one can customize per-field widgets for the data grid field:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">.widget</span> <span class=\"kn\">import</span> <span class=\"n\">DGFTreeSelectFieldWidget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collective.z3cform.datagridfield</span> <span class=\"kn\">import</span> <span class=\"n\">DataGridFieldFactory</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collective.z3cform.datagridfield</span> <span class=\"kn\">import</span> <span class=\"n\">DictRow</span>\n<span class=\"kn\">from</span> <span class=\"nn\">Products.CMFCore.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">ISiteRoot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">z3c.form</span> <span class=\"kn\">import</span> <span class=\"n\">form</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope</span> <span class=\"kn\">import</span> <span class=\"n\">interface</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope</span> <span class=\"kn\">import</span> <span class=\"n\">schema</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ITableRowSchema</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n\n    <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"p\">(</span><span class=\"n\">one</span><span class=\"o\">=</span><span class=\"n\">DGFTreeSelectFieldWidget</span><span class=\"p\">)</span>\n    <span class=\"n\">one</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Level 1\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"p\">(</span><span class=\"n\">two</span><span class=\"o\">=</span><span class=\"n\">DGFTreeSelectFieldWidget</span><span class=\"p\">)</span>\n    <span class=\"n\">two</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Level 2\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Uses the default widget</span>\n    <span class=\"n\">three</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">TextLine</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Level 3\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">IFormSchema</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n\n    <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">widget</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"n\">DataGridFieldFactory</span><span class=\"p\">)</span>\n    <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">(</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Nested selection tree test\"</span><span class=\"p\">,</span>\n        <span class=\"n\">value_type</span><span class=\"o\">=</span><span class=\"n\">DictRow</span><span class=\"p\">(</span>\n            <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"tablerow\"</span><span class=\"p\">,</span>\n            <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">ITableRowSchema</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"working-with-plone-app-registry\">\n<h3><a href=\"#id33\" rel=\"nofollow\">Working with plone.app.registry</a></h3>\n<p>To use the field with plone.app.registry, you\u2019ll have to use\na version of the field that has PersistentField as it\u2019s base\nclass:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collective.z3cform.datagridfield.registry</span> <span class=\"kn\">import</span> <span class=\"n\">DictRow</span>\n</pre>\n</div>\n<div id=\"javascript-events\">\n<h3><a href=\"#id34\" rel=\"nofollow\">JavaScript events</a></h3>\n<p><tt>collective.z3cform.datagridfield</tt> fires jQuery events,\nso that you can hook them in your own Javascript for DataGridField\nbehavior customization.</p>\n<p>The following events are currently fired against <tt><span class=\"pre\">table.datagridwidget-table-view</span></tt></p>\n<ul>\n<li><tt>beforeaddrow</tt> [datagridfield, newRow]</li>\n<li><tt>afteraddrow</tt> [datagridfield, newRow]</li>\n<li><tt>beforeaddrowauto</tt> [datagridfield, newRow]</li>\n<li><tt>afteraddrowauto</tt> [datagridfield, newRow]</li>\n<li><tt>aftermoverow</tt> [datagridfield]</li>\n<li><tt>afterdatagridfieldinit</tt> - All DGFs on the page have been initialized</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"kd\">var</span> <span class=\"nx\">handleDGFInsert</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">,</span> <span class=\"nx\">dgf</span><span class=\"p\">,</span> <span class=\"nx\">row</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">row</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">row</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Got new row:\"</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">row</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// Bind all DGF handlers on the page\n</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'beforeaddrow beforeaddrowauto'</span><span class=\"p\">,</span> <span class=\"s1\">'.datagridwidget-table-view'</span><span class=\"p\">,</span> <span class=\"nx\">handleDGFInsert</span><span class=\"p\">);</span>\n</pre>\n</div>\n</div>\n<div id=\"demo\">\n<h2><a href=\"#id35\" rel=\"nofollow\">Demo</a></h2>\n<p>More examples are in the demo subfolder of this package.</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id36\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id37\" rel=\"nofollow\">1.5.3 (2020-03-03)</a></h3>\n<ul>\n<li>Bug fix for multiple datagridfields per form.\nMultiple lines were auto added when more than one datagrid was present.\nFixes <a href=\"https://github.com/collective/collective.z3cform.datagridfield/issues/96\" rel=\"nofollow\">issue 96</a>.\n[maurits]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id38\" rel=\"nofollow\">1.5.2 (2020-01-07)</a></h3>\n<ul>\n<li>Fix \u201cUnknown directive widgetTemplate\u201d\n[agitator]</li>\n<li>Bug fix: auto appending row.\n[ksuess]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id39\" rel=\"nofollow\">1.5.1 (2019-03-21)</a></h3>\n<ul>\n<li>Add missing upgrade profile to_2\n[agitator]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id40\" rel=\"nofollow\">1.5.0 (2019-03-09)</a></h3>\n<ul>\n<li>Add support for Python 3 and Plone 5.2.\n[pbauer, agitator]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id41\" rel=\"nofollow\">1.4.0 (2019-02-21)</a></h3>\n<ul>\n<li>Drop support for Plone 4.\n[pbauer]</li>\n<li>Use Ressource-Registry (Pat-Registry), Update JS/CSS, Add Uninstall\n[2silver]</li>\n<li>use Plone5 glyphicons instead of images\n[2silver]</li>\n<li>Added missing upgrade step, calling browserlayer setup.\n[sgeulette]</li>\n<li>Display column description if provided in schema <cite>field.description</cite>.\n[gbastien, bleybaert]</li>\n<li>Specify in README.rst that versions &gt;= 1.4 are for Plone 5+ and\nversions &lt; 1.4 are for Plone 4.\n[gbastien]</li>\n<li>Usability change: add an (hidden) label inside the add commands\n[keul]</li>\n<li>Compatibility with Plone 5 modals/overlay from mockup\n[keul]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id42\" rel=\"nofollow\">1.3.1 (2019-02-21)</a></h3>\n<ul>\n<li>Extend uninstall profile.\n[thet]</li>\n<li>Wrapped commands inside <tt>A</tt> tags, required for accessibility reason (change backported from Products.DataGridField).\nThis also simplify customizing icons with pure CSS.\n[keul]</li>\n<li>Replaced minus icon with a more usable delete icon.\n[keul]</li>\n<li>Removed ols-school <tt>*</tt> chars for marking fields as required.\n[keul]</li>\n<li>Fix object access\n[tomgross]</li>\n<li>Fix usage of related items widget in subforms\n<a href=\"https://github.com/plone/Products.CMFPlone/issues/2446\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/2446</a>\n[tomgross]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id43\" rel=\"nofollow\">1.3.0 (2017-11-22)</a></h3>\n<ul>\n<li>Set widget mode on cell widget in order to support autoform mode directive. [jone]</li>\n<li>Bugfix: do not try to update readonly fields. [jone]</li>\n<li>Cleanup: utf8 headers, isort, code-style. [jensens]</li>\n<li>Remove dependency on plone.directives.form in setup.py,\nit was not used any longer. [jensens]</li>\n<li>Feature/Fix: Support widgets using patternslib in a DictRow.\n[jensens]</li>\n<li>Fix: #36 remove grok from all documentation since grok is no longer supported.\n[jensens]</li>\n<li>Copy relevant parts of ObjectSubform from z3c.form 3.2.10 over here, it was removed in later versions.\n[jensens]</li>\n<li>Add Browserlayer and use it, also add uninstall step.\n[jensens]</li>\n<li>Move Demo package to in here.\n[jensens]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id44\" rel=\"nofollow\">1.2 (2017-03-08)</a></h3>\n<ul>\n<li>Fix validation exception on readonly fields.\n[rodfersou]</li>\n<li>Fix bug for widget.klass is NonType in the block view when defining the class for the field.</li>\n<li>Allow deletion of last row in non-auto-append mode.\n[gaudenz]</li>\n<li>fixed binding for IChoice fields during validation [djay]</li>\n<li>plone 5 compatibility and fixed travis testing for plone 5 [djay]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id45\" rel=\"nofollow\">1.1 (2014-07-25)</a></h3>\n<ul>\n<li>Removed JS code that relies on firefox being used.\n[neilferreira]</li>\n<li>Stopped referencing the \u2018event\u2019 element when creating a new row as the event\nthat triggered the content of an input changing may have been from another element.\n[neilferreira]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id46\" rel=\"nofollow\">1.0 (2014-06-02)</a></h3>\n<ul>\n<li>Add \u2018form-widgets-field_id\u2019 as widget css id (consistency with other widgets).\n[thomasdesvenain]</li>\n<li>Fix package dependencies.\n[hvelarde]</li>\n<li>Use BlockDataGridFieldObject for rows in a BlockDataGridField.\n[gaudenz]</li>\n<li>Filter out any auto append or template rows in updateWidgets.\n[gaudenz]</li>\n<li>Add row parameter to aftermoverow JS event\n[gaudenz]</li>\n<li>Don\u2019t reset class attribute on cloned template rows\n[gaudenz]</li>\n<li>Replace row index in all template row elements, not just input elements.\nReplace the index in id, name, for, href and data-fieldname attributes\nwhen cloning the template row.\n[gaudenz]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id47\" rel=\"nofollow\">0.15 (2013-09-24)</a></h3>\n<ul>\n<li>Added possibility to define the CSS class for the main table when the field is displayed.\nThis way, you can use common Plone existing classes (like \u2018listing\u2019).\n[gbastien]</li>\n<li>Fixed auto-append bug when there is more than one datagrid field in page auto-appending one field binds\n\u201cchange.dgf\u201d to another field also. added \u201c$(dgf).find(..\u201d in datagridfield.js line 138 so it binds to right element only.\n[tareqalam]</li>\n<li>Only abort moveRow if the row is really not found and not if the row idx just happens to be 0.\n[gaudenz]</li>\n<li>Also update hidden data rows when reindexing in row mode. This fix was previously somehow only done for block mode.\n[gaudenz]</li>\n<li>Relax requirements for markup, don\u2019t assume inputs are direct childs of table cells. This makes useing custom\ntemplates much easier.\n[gaudenz]</li>\n<li>Fix validate function signature for IValidator API. The API requires a \u201cforce\u201d argument.\n[gaudenz]</li>\n<li>Register the SubformAdapter for IPloneForm layer to avoid that the Adapter from plone.app.z3cform\ntakes precedence.\n[gaudenz]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id48\" rel=\"nofollow\">0.14 (2013-05-24)</a></h3>\n<ul>\n<li>Align travis setup to other packages.\n[saily]</li>\n<li>Add new V1 <tt>bootstrap.py</tt>.\n[saily]</li>\n<li>Added CSS classes to tbody rows (<tt><span class=\"pre\">row-(1...n)</span></tt>) and thead columns\n(<tt><span class=\"pre\">cell-(1...m)</span></tt>) to allow more styling in edit forms.\n[saily]</li>\n<li>Fixed wrong template in display mode when set editing to block edit mode [miohtama]</li>\n<li>Added CSS classes (widget.klass attribute) for DataGridField, to separate it from other MultiWidgets [miohtama]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id49\" rel=\"nofollow\">0.13 (2013-04-09)</a></h3>\n<ul>\n<li>Add travis-ci configs [jaroel]</li>\n<li>Convert tests to plone.app.testing [jaroel]</li>\n<li>Fix to expect <tt>zope.schema.interfaces.ValidationError</tt> to work better\nwith <em>TooLong</em> and <em>TooShort</em> exceptions. [datakurre]</li>\n<li>Fix IE7 failing on <cite>&lt;label&gt;</cite> for manipulation [miohtama]</li>\n<li>Deal with situations where there is zero rows on DGF and no auto-append row available [miohtama]</li>\n<li>Correctly bind DGF events on DOM content loaded, not when Javascript is parsed [miohtama]</li>\n<li>Don\u2019t display movement handles if the row cannot be moved [miohtama]</li>\n<li>Changed move up and down handlers to stay in fixed positions to make cells stay in the same width regardless of moving [miohtama]</li>\n<li>Fixed checkbox saving, was broken by nested DGF support [miohtama]</li>\n<li>Added block edit mode [miohtama]</li>\n<li>\u201cuse strict;\u201d and ECMAScript 5 compatible Javascript clean-up [miohtama]</li>\n<li>Added <em>afterrowmoved</em> JS event [miohtama]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id50\" rel=\"nofollow\">0.12 (2012-10-30)</a></h3>\n<ul>\n<li>Updated empty row selection. [jstegle]</li>\n<li>Nested DataGridField support (yo dawg\u2026) [miohtama]</li>\n<li>Support plone.autoform and grok\u2019ed row schemas [miohtama]</li>\n<li>Added <tt>DataGridField.extra</tt> parameter, so you can pass out\napplication specific data to Javascript [miohtama]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id51\" rel=\"nofollow\">0.11 (2012-05-16)</a></h3>\n<ul>\n<li>be able to use with plone.app.registry\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id52\" rel=\"nofollow\">0.10 (2012-02-12)</a></h3>\n<ul>\n<li>Fix bug with moving the last row up.\n[m-martinez]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id53\" rel=\"nofollow\">0.9 (2011-10-27)</a></h3>\n<ul>\n<li>Clone events when adding new row - fixes bug where browse button of\nplone.formwidget.contenttree did nothing for new rows\n[anthonygerrard]</li>\n<li>Reindex more indexed attributes of cloned row\n[anthonygerrard]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id54\" rel=\"nofollow\">0.8 (2011-09-24)</a></h3>\n<ul>\n<li>Avoid using the \u201crow\u201d CSS class.\n[davisagli]</li>\n<li>Fixes to work with jQuery 1.3.x (use .remove() instead of .detach(), fetch data\nattributes a different way, and avoid live binding the change event).\n[davisagli]</li>\n<li>Don\u2019t error out when getting a <tt>FormatterValidationError</tt>, pass\nit on to z3c.form instead.\n[claytron]</li>\n<li>Give manipulator images a relative src rather than absolute. This\npreviously meant the widget didn\u2019t work on sites without Plone/Zope at the\nroot of the domain.\n[davidjb]</li>\n<li>During auto-insert, add our new row into the document first, before reindexing\nit and changing its elements\u2019 IDs. This allows Javascript that depends on\nthese IDs (such as plone.formwidget.autocomplete) to pick up the correct\nfields.\n[davidjb]</li>\n<li>Tidying up and reducing complexity of auto-insert functionality\n[davidjb]</li>\n<li>Removing unnecessary auto-insert bind and unbind as this is already covered\nby jQuery\u2019s <cite>live()</cite> function against the <cite>auto-append</cite> class. Adding/removing\nthis class against rows automatically does this.\n[davidjb]</li>\n<li>Resolved issue with auto-insert functionality not working by removing\ntable-specific check in Javascript.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id55\" rel=\"nofollow\">0.7 (2011-07-01)</a></h3>\n<ul>\n<li>Changed markup/javascript to prevent duplicate HTML id attributes. Changed\nJavascript to allow for datagrid page templates that don\u2019t use tables.\n[dextermilo]</li>\n<li>Improve spacing in CSS.\n[davisagli]</li>\n<li>Revert my fix to ensure that blank rows are added, because it duplicated\na fix in z3c.form resulting in extra rows.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3><a href=\"#id56\" rel=\"nofollow\">0.6 (2011-05-17)</a></h3>\n<ul>\n<li>Search for datagridInitialise and datagridUpdateWidgets on the\nparent form, also when in a fieldset.\n[maurits]</li>\n<li>Register templates on plone.app.z3cform.interfaces.IPloneFormLayer to\ntake precedence over that packages list widget templates.\n[elro]</li>\n<li>Make sure that updateWidgets is called to add blank rows even if the\nwidget has no value.\n[davisagli]</li>\n<li>When extracting a row value fails due to a validation error, convert\nwidget values to field values so the value can be successfully applied\nto the grid widget.\n[davisagli]</li>\n<li>Register a plone.supermodel handler for the DictRow so it can be used\nin supermodel models.\n[davisagli]</li>\n<li>Depend on collective.z3cform.datagridfield_demo as a test extra;\nuse the browser view from this package in the tests.\n[maurits]</li>\n<li>_validate still used when import/exporting, fix up code so it works\n[lentinj]</li>\n<li>Add a DictRow serializer for transmogrify.dexterity\n[lentinj]</li>\n<li>Only use width:100% on input cells that are the only element in the cell\n[lentinj]</li>\n<li>Reorder row indices backwards when adding rows. This means that adjacent\nrows don\u2019t share the same index temporarily, for example:-\n- Row 1 and 2 contain input:radio based widgets\n- Row 0 added, row renumbering starts\n- Row 1 widgets renamed 2\n- Both sets of input:radio share the same name, one deselected\n- Row 2 widgets renamed 3\n- \u2026\n[lentinj]</li>\n<li>Use jQuery to clone rows, and clone the jQuery events on the rows.\n[lentinj]</li>\n<li>Implemented reorder functionality</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3><a href=\"#id57\" rel=\"nofollow\">0.5 (2011-02-08)</a></h3>\n<ul>\n<li>Put in the DictRow class (tks Martin Aspeli)</li>\n<li>Moved the demo code out to a separate package collective.z3cform.datagridfield_demo\n(tks Laurence Rowe).</li>\n<li>Removed superfluous lines from setup.py (tks Laurence Rowe).</li>\n<li>Removed unnessary dependency on dexterity (tks Laurence Rowe).</li>\n<li>Removed unnessary dependency on grok (tks Laurence Rowe).</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3><a href=\"#id58\" rel=\"nofollow\">0.4 (2011-02-06)</a></h3>\n<ul>\n<li>Renamed the demo pages. The starting point is now @@demo-collective.z3cform.datagrid .</li>\n<li>The widget can now be configured via the updateWidgets method. It\nis no longer necessary to create a custom factory.</li>\n<li>The columns can now be omitted.</li>\n<li>Provide a set of demo views for Object access.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3><a href=\"#id59\" rel=\"nofollow\">0.3 (2011-02-04)</a></h3>\n<ul>\n<li>The auto-append functionality did not bind correctly for popup forms.\nI switched to using jQuery.live() instead of binding at document load time.</li>\n<li>Added a menu to the demo pages</li>\n<li>Added a display only form option.</li>\n<li>Fixed the restructured text of the main README.txt so that it will show\nmore friendly in PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6743218, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "d9cca222dda08df25c108e5b224ff103", "sha256": "d4c8c38631eacbfaab9140ea740666ef89274a8f5556a8d5044a5445fae0fa71"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.10.zip", "has_sig": false, "md5_digest": "d9cca222dda08df25c108e5b224ff103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45725, "upload_time": "2012-02-13T05:58:49", "upload_time_iso_8601": "2012-02-13T05:58:49.937105Z", "url": "https://files.pythonhosted.org/packages/34/2b/b3f5675837043ddadc478a1f8336c3d1cd71056ebb5723f690bf87bc1854/collective.z3cform.datagridfield-0.10.zip", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "c9210337b91305314864da42c12d04c2", "sha256": "54280b244f9ac6d023e254c2401d2869d3a3291d7dae2a59c8084162cee9ece3"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.11.zip", "has_sig": false, "md5_digest": "c9210337b91305314864da42c12d04c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46518, "upload_time": "2012-05-17T05:07:09", "upload_time_iso_8601": "2012-05-17T05:07:09.953206Z", "url": "https://files.pythonhosted.org/packages/a2/17/37ce7542b55b888c128ac8075b9f366584e40040fa5a641c2678dfa2bedf/collective.z3cform.datagridfield-0.11.zip", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "83baff3f9de30dc4a30461a657945268", "sha256": "9250e4365744d83626d0d9e4add37fe665b7f24aae96e7dece6ed4feb2aa3416"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.12.zip", "has_sig": false, "md5_digest": "83baff3f9de30dc4a30461a657945268", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48809, "upload_time": "2012-10-30T18:05:23", "upload_time_iso_8601": "2012-10-30T18:05:23.721698Z", "url": "https://files.pythonhosted.org/packages/b0/c6/bf3df75b78f948884d339ffcece2394e26ee2fd8fa282387bd12c14fb9ba/collective.z3cform.datagridfield-0.12.zip", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "3f418b8cc904ad44ebae3401516e2675", "sha256": "f402a8d8cd563328d59d65436a251baaab9e45c0fa26d8b60c6ae1934b0a27a1"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.13.zip", "has_sig": false, "md5_digest": "3f418b8cc904ad44ebae3401516e2675", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64964, "upload_time": "2013-04-09T20:54:19", "upload_time_iso_8601": "2013-04-09T20:54:19.230954Z", "url": "https://files.pythonhosted.org/packages/a1/d5/f93fa8e4fed625a9ad668d50e12706505917121d1c6db451222a2acbe419/collective.z3cform.datagridfield-0.13.zip", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "efda55866ad569d97ab0f6b543afe152", "sha256": "a1c13477c103805af577aedfae2d5951d74b860fc7506a42b12ad2c64207c43a"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.14.zip", "has_sig": false, "md5_digest": "efda55866ad569d97ab0f6b543afe152", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61586, "upload_time": "2013-05-24T09:02:26", "upload_time_iso_8601": "2013-05-24T09:02:26.708133Z", "url": "https://files.pythonhosted.org/packages/33/2d/1a409761756eb9c001e0cb82fe5192ae63b1eaea713b46bfca9e0f6b4853/collective.z3cform.datagridfield-0.14.zip", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "17ab2198df4914effec9f5854da4aa4c", "sha256": "a61a9547560f49f6657b08965e3078557fc71bf2917024c733ad9dfe68a7c001"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.15.zip", "has_sig": false, "md5_digest": "17ab2198df4914effec9f5854da4aa4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63508, "upload_time": "2013-09-24T12:41:02", "upload_time_iso_8601": "2013-09-24T12:41:02.846095Z", "url": "https://files.pythonhosted.org/packages/49/c9/716b5f43de1801e9deabd29d259f8d06f995b71a5d9f79ad4072a9776f69/collective.z3cform.datagridfield-0.15.zip", "yanked": false}], "0.1a": [{"comment_text": "", "digests": {"md5": "c120860bfaef6a902947cd6f4d1d5edc", "sha256": "0d01b339f89d015f87f8054dafe7a72839ab3f03ea8282254a21916c4a168145"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.1a.tar.gz", "has_sig": false, "md5_digest": "c120860bfaef6a902947cd6f4d1d5edc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22092, "upload_time": "2011-02-02T17:29:51", "upload_time_iso_8601": "2011-02-02T17:29:51.349541Z", "url": "https://files.pythonhosted.org/packages/1b/2c/d3292d34603ad7072f4e8b94bd058273951097fe8797ecb79a1bb1632767/collective.z3cform.datagridfield-0.1a.tar.gz", "yanked": false}], "0.2a": [{"comment_text": "", "digests": {"md5": "1de4f8a3068389ae3f5a202bd98a0e88", "sha256": "c8d1963cd81a1df20533c53637e9743492c16632eaa186305994e3f1acf0b0d2"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.2a.tar.gz", "has_sig": false, "md5_digest": "1de4f8a3068389ae3f5a202bd98a0e88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24391, "upload_time": "2011-02-03T03:22:35", "upload_time_iso_8601": "2011-02-03T03:22:35.565736Z", "url": "https://files.pythonhosted.org/packages/4a/1b/f0f33a8636eb50870bfa8b9e48d88e683cfb57eb7ec0abee19f857043237/collective.z3cform.datagridfield-0.2a.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d66ff4410b9519a0ab3e78ca94a99b7f", "sha256": "7d2362d3947a6a976595dbd8e060c714ea334799f10e78e646ab8445031286c2"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.3.tar.gz", "has_sig": false, "md5_digest": "d66ff4410b9519a0ab3e78ca94a99b7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27162, "upload_time": "2011-02-05T01:10:57", "upload_time_iso_8601": "2011-02-05T01:10:57.444044Z", "url": "https://files.pythonhosted.org/packages/04/46/d4d91970c5783a8eb3db3009753d488b17dfd1d17f74b860b35e9cf92b2d/collective.z3cform.datagridfield-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6093638b93084ed65ce2855874496a77", "sha256": "027acfc9b09a3316905729e6d72040cdcd4af29c257e73656e7ebe444a6e1c21"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.4.tar.gz", "has_sig": false, "md5_digest": "6093638b93084ed65ce2855874496a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30098, "upload_time": "2011-02-06T20:38:27", "upload_time_iso_8601": "2011-02-06T20:38:27.905840Z", "url": "https://files.pythonhosted.org/packages/0d/c5/f3af3eef349dd5876a15634151917c622afb32c70c500209acd40d7328b4/collective.z3cform.datagridfield-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "1b3c1d6eed2867c8aea0c861ec237f18", "sha256": "9dd47a866d9dd572e1b4dbc887d18a8e48e3cfc0329757e0d949dcd15c736264"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.5.tar.gz", "has_sig": false, "md5_digest": "1b3c1d6eed2867c8aea0c861ec237f18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25354, "upload_time": "2011-02-08T23:59:49", "upload_time_iso_8601": "2011-02-08T23:59:49.283554Z", "url": "https://files.pythonhosted.org/packages/a6/54/9f70026277c772c2666f7973d89aca8541d5c959c489e8b7ac62574806a7/collective.z3cform.datagridfield-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "0b5721dd6c6a709f2c9fa6f85168cae0", "sha256": "0088f28f470e0c6a0778aa441e30533501c5480ea6a93ab514d726cc7b655f52"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.6.zip", "has_sig": false, "md5_digest": "0b5721dd6c6a709f2c9fa6f85168cae0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43296, "upload_time": "2011-05-17T11:57:55", "upload_time_iso_8601": "2011-05-17T11:57:55.269112Z", "url": "https://files.pythonhosted.org/packages/7f/0d/ff420ee9c6d29d9434eca6be9bdcf07f7fac0a7f00a81f1699bcd083c6fe/collective.z3cform.datagridfield-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "4428fddbfb1ae4b5b0fc64249fb8e315", "sha256": "04ccfcab8a7ebfb284fc5581d8dabd51b066a6861b15b327eeb6e938b7a337ec"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.7.zip", "has_sig": false, "md5_digest": "4428fddbfb1ae4b5b0fc64249fb8e315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43378, "upload_time": "2011-07-01T19:33:43", "upload_time_iso_8601": "2011-07-01T19:33:43.649400Z", "url": "https://files.pythonhosted.org/packages/41/7a/64b98f66103bd3a246b994481c245503f8d19a975534987858d7747a77a6/collective.z3cform.datagridfield-0.7.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "13abf0b790b05597f71f434776387c2b", "sha256": "8539e06b4c9dc0ce9d200848169b799fa2215a0937ac07c7b8186b13de265549"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.8.zip", "has_sig": false, "md5_digest": "13abf0b790b05597f71f434776387c2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45147, "upload_time": "2011-09-24T22:18:39", "upload_time_iso_8601": "2011-09-24T22:18:39.383562Z", "url": "https://files.pythonhosted.org/packages/66/f6/88fc137cc256f6465e01337b0c4c9bfcc3daa92b8b24f5868669cf8f5185/collective.z3cform.datagridfield-0.8.zip", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "0c181ca13380afffaf378dd54e684b59", "sha256": "1c9591c7c7e49d154f51b2b04f57917a5828ebd3b3759859655c7619586b50a9"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-0.9.zip", "has_sig": false, "md5_digest": "0c181ca13380afffaf378dd54e684b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45501, "upload_time": "2011-10-27T15:30:11", "upload_time_iso_8601": "2011-10-27T15:30:11.638148Z", "url": "https://files.pythonhosted.org/packages/d2/be/a1860a5d7f069f4d8e1b3d704a2be29cc47185d68efba5730898d5f009d2/collective.z3cform.datagridfield-0.9.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "64cf707da78b68e6200b20695f3d7b8d", "sha256": "6cfb2b297240995deb423a57f9046e63a970ee03a70a9bf8ee1b26dfb0aced1c"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.0.zip", "has_sig": false, "md5_digest": "64cf707da78b68e6200b20695f3d7b8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63623, "upload_time": "2014-06-02T10:46:00", "upload_time_iso_8601": "2014-06-02T10:46:00.002259Z", "url": "https://files.pythonhosted.org/packages/64/fa/c985ff4e237490a2cf013b2c2a142a04af1eff32c18a352e24f1cda8e22a/collective.z3cform.datagridfield-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "5eaeb420942c45b568d86d18c4253a15", "sha256": "b871ff8838cf18def0105b55a264d728c5f532f4fbff7bf30d54569f2b73a397"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.1.zip", "has_sig": false, "md5_digest": "5eaeb420942c45b568d86d18c4253a15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64002, "upload_time": "2014-07-25T22:37:38", "upload_time_iso_8601": "2014-07-25T22:37:38.822917Z", "url": "https://files.pythonhosted.org/packages/0c/1c/dd17e0a37af26d8f66b875dfd23bf8191324f9391dce02cf17697e926683/collective.z3cform.datagridfield-1.1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "79cf7444c87328e807b83c50b8b12c68", "sha256": "cb7b1b1ced521d7f599d5eec75cb35ab8adf9019e57aeb14dc44a2823017cf2d"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.2.tar.gz", "has_sig": false, "md5_digest": "79cf7444c87328e807b83c50b8b12c68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45563, "upload_time": "2017-03-08T16:05:07", "upload_time_iso_8601": "2017-03-08T16:05:07.064534Z", "url": "https://files.pythonhosted.org/packages/ad/05/033b8b1f8663ceef17be9755c54ea4472fca8e91a05c4e7a044552a8229a/collective.z3cform.datagridfield-1.2.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "d8d7b8b9f5725dc5122b3b5867d50959", "sha256": "373f045916931e6ba52bde1afbd6f91e9ef7a880d8d967d4976a775be5cddcdf"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.3.0.tar.gz", "has_sig": false, "md5_digest": "d8d7b8b9f5725dc5122b3b5867d50959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43520, "upload_time": "2017-11-22T16:20:52", "upload_time_iso_8601": "2017-11-22T16:20:52.415937Z", "url": "https://files.pythonhosted.org/packages/dd/e4/93edd03e56bb9f42532a6a30f14548545556a7bd38f4c2f25ff952ef36f2/collective.z3cform.datagridfield-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "192255a290c0356e6097766fd0f55684", "sha256": "f53aa7bd70048e697fbc6090177354f85ac7d4caf64522b0cf4f15478d94591f"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.3.1.tar.gz", "has_sig": false, "md5_digest": "192255a290c0356e6097766fd0f55684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55069, "upload_time": "2019-02-21T09:36:14", "upload_time_iso_8601": "2019-02-21T09:36:14.493755Z", "url": "https://files.pythonhosted.org/packages/0e/8b/5df33cc6005c8275f958c63e8d66e18e4a6762c2f4d30ae714e0aa6341aa/collective.z3cform.datagridfield-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "38d8872d1501ad6c01117bd6e59002d3", "sha256": "dcf260b48d0221be67bd825dd25901c25cf94bba82be9aded58b5d0a97a4ae98"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.3.2.tar.gz", "has_sig": false, "md5_digest": "38d8872d1501ad6c01117bd6e59002d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54655, "upload_time": "2019-05-22T12:15:34", "upload_time_iso_8601": "2019-05-22T12:15:34.218729Z", "url": "https://files.pythonhosted.org/packages/fb/39/324a0046da8cba84f6d0914b671652624fbdb1a4ef1370fb31d89ddf8dc4/collective.z3cform.datagridfield-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "5f68b43c155a597315bc7cb26f70b0c4", "sha256": "eeaa077f1704d80fa5b0e0f6caea5b8101593c46c90581e58a609ad0dca515f7"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.3.3.tar.gz", "has_sig": false, "md5_digest": "5f68b43c155a597315bc7cb26f70b0c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47966, "upload_time": "2019-06-09T12:07:24", "upload_time_iso_8601": "2019-06-09T12:07:24.483504Z", "url": "https://files.pythonhosted.org/packages/b2/a2/6f8b4d0a43bd793899d2c45fadbd28128d44162475c3eafaeb519d701eac/collective.z3cform.datagridfield-1.3.3.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "3a9d6d03cdd3cc2cc336dd044870378f", "sha256": "fcae578a9bdd704ffb9b046b4a4cc13d8f6b059326f8613a0d25c570cb7607a0"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.4.0.tar.gz", "has_sig": false, "md5_digest": "3a9d6d03cdd3cc2cc336dd044870378f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56515, "upload_time": "2019-02-21T09:42:04", "upload_time_iso_8601": "2019-02-21T09:42:04.988020Z", "url": "https://files.pythonhosted.org/packages/6f/c0/5c6337d8cf41eb6e267126fbe77b55f5b9e573b2070719f6dbf96d9acf19/collective.z3cform.datagridfield-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "fb4bb417c52a14870c1b76436974e552", "sha256": "f7397cf3aa0b64bccce2e69d584438ac7bdc74398b50b922505fcf3e42db0bd7"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.0.tar.gz", "has_sig": false, "md5_digest": "fb4bb417c52a14870c1b76436974e552", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52241, "upload_time": "2019-03-08T23:01:41", "upload_time_iso_8601": "2019-03-08T23:01:41.383184Z", "url": "https://files.pythonhosted.org/packages/fc/dc/09164b7372234c31e21a9100e6612af1ac21864d66f368e2360398913429/collective.z3cform.datagridfield-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "83f47e8b45c25f9dbb80c8866cbb3ae6", "sha256": "9d9d3fc0e90ad0df1637cabe3d9493b3dddcee50cbb9c22944127339986ebec1"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.1.tar.gz", "has_sig": false, "md5_digest": "83f47e8b45c25f9dbb80c8866cbb3ae6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52384, "upload_time": "2019-03-21T13:05:30", "upload_time_iso_8601": "2019-03-21T13:05:30.840152Z", "url": "https://files.pythonhosted.org/packages/d2/66/577e3d1869225aea31dd4534688300a4fa4c5cb2157375e5ea7c4b3ea635/collective.z3cform.datagridfield-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "0a7a5909ba5aee316a68d4d5c79b578b", "sha256": "b6473bb5f5a86edb07dd7a53255a34c284adb655e5d2eeced2624080d1be0847"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0a7a5909ba5aee316a68d4d5c79b578b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51534, "upload_time": "2020-01-07T15:53:55", "upload_time_iso_8601": "2020-01-07T15:53:55.560945Z", "url": "https://files.pythonhosted.org/packages/b2/7b/93cc810ae93e931b3968de7ff370b2f378ef657814b897fae779b9855218/collective.z3cform.datagridfield-1.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd959a03ce1a657e24878c8993532939", "sha256": "f358f7f1fe5700e49f6dd9361724e4892b48cefdbe2aa0c1c8df9f9d2ee382cb"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.2.tar.gz", "has_sig": false, "md5_digest": "bd959a03ce1a657e24878c8993532939", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58851, "upload_time": "2020-01-07T15:53:57", "upload_time_iso_8601": "2020-01-07T15:53:57.959273Z", "url": "https://files.pythonhosted.org/packages/dc/79/eac68e9956fb5e39294e60a04965b808b0875298d2f8e0e7709f5833d9e6/collective.z3cform.datagridfield-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "5d2c08535e7cbf90001921e5ae1bb2f0", "sha256": "5ac02240dc8b96af88d8793250a5649e96cb02a34a8496c719675d6c0bd0f8e0"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5d2c08535e7cbf90001921e5ae1bb2f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51672, "upload_time": "2020-03-03T20:11:17", "upload_time_iso_8601": "2020-03-03T20:11:17.452951Z", "url": "https://files.pythonhosted.org/packages/53/51/6490244f746efded57f87bced2db25fbed6e080da3bee3de687c9566ac0b/collective.z3cform.datagridfield-1.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f2407ce2432ee62b11b7d98738e6748", "sha256": "0bafd1a8272c506ca9568a7b1dcf37d23cad524d65abf0065717975fdf01777b"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.3.tar.gz", "has_sig": false, "md5_digest": "0f2407ce2432ee62b11b7d98738e6748", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59120, "upload_time": "2020-03-03T20:11:20", "upload_time_iso_8601": "2020-03-03T20:11:20.419362Z", "url": "https://files.pythonhosted.org/packages/e3/6a/05a24f3ebeeb677763bf80b7a3107a17027a582cb170fe597af674153263/collective.z3cform.datagridfield-1.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d2c08535e7cbf90001921e5ae1bb2f0", "sha256": "5ac02240dc8b96af88d8793250a5649e96cb02a34a8496c719675d6c0bd0f8e0"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5d2c08535e7cbf90001921e5ae1bb2f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 51672, "upload_time": "2020-03-03T20:11:17", "upload_time_iso_8601": "2020-03-03T20:11:17.452951Z", "url": "https://files.pythonhosted.org/packages/53/51/6490244f746efded57f87bced2db25fbed6e080da3bee3de687c9566ac0b/collective.z3cform.datagridfield-1.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f2407ce2432ee62b11b7d98738e6748", "sha256": "0bafd1a8272c506ca9568a7b1dcf37d23cad524d65abf0065717975fdf01777b"}, "downloads": -1, "filename": "collective.z3cform.datagridfield-1.5.3.tar.gz", "has_sig": false, "md5_digest": "0f2407ce2432ee62b11b7d98738e6748", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59120, "upload_time": "2020-03-03T20:11:20", "upload_time_iso_8601": "2020-03-03T20:11:20.419362Z", "url": "https://files.pythonhosted.org/packages/e3/6a/05a24f3ebeeb677763bf80b7a3107a17027a582cb170fe597af674153263/collective.z3cform.datagridfield-1.5.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:41 2020"}