{"info": {"author": "Tonzh", "author_email": "tong.zhang@kikatech.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Indexing", "Topic :: Utilities"], "description": "# Tonzh \u57fa\u4e8eHATT \u4e8c\u6b21\u5f00\u53d1\n\n\u539f\u7406\uff1a\u57fa\u4e8eandroid uiautomator\u8ddfadb\n\n\u73af\u5883\uff1apython2.7.x+android sdk\n\n\u529f\u80fd\uff1a\u652f\u6301\u529f\u80fd\u3001\u6027\u80fd\u3001\u7a33\u5b9a\u6027\n\n\u4f18\u70b9\uff1a\u65e0\u9700\u5b89\u88c5\u4efb\u4f55apk\u6216\u5176\u4ed6\u63d2\u4ef6\uff0c\u652f\u6301\u8de8\u5e94\u7528\uff0c\u65e0\u7b7e\u540d\u70e6\u607c\n\n\u7f3a\u70b9\uff1a\u4e0d\u652f\u6301webview\u3001\u52a8\u6001\u9875\u9762\u3001\u4e2d\u6587\u8f93\u5165\u53ca\u67e5\u627e\n\n\u4ee5\u4e0b\u662fdemo\n\n```python\n__author__ = 'Tonzh'\n#coding=utf-8\n#import moudles\nfrom Core.Utils.surface_collector import SurfaceStatsCollector\nfrom Core.Action.action import Action\nfrom Core.Info.element import Element\nfrom Core.Info.performance import PerformanceInfo\nfrom Core.Action.Monkey.monkey import Monkey\nimport Core.Info.keycode as key\ns=SurfaceStatsCollector()\na=Action()Tonzh\ne=Element()\np=PerformanceInfo()\nm=Monkey()\n\"\"\"\nPerformance Test\n\"\"\"\n#Fps Test\ns.DisableWarningAboutEmptyData()\ns.Start()\n#steps\nfor x in range(3):\n    a.swipeToUp()\ns.Stop()\n#print result\nfor x in s.GetResults():\n    if \"avg_surface_fps\" in x.name:\n        print x.name,x.value,x.unit\n\n#Cpu Test\n#steps\nfor x in range(3):\n    a.swipeToUp()\n    #print result\n    cpunInfo=p.getCpuFromDump(\"com.android.launch\")\n    #or\n    cpunInfo=p.getCpuFromTop(\"com.android.launch\")\n\n\n# Mem Test\n#steps\nfor x in range(3):\n    a.swipeToUp()\n    #print result\n    memInfo=p.getMemFromDump(\"com.android.launch\")\n    #or if you install procrank\n    menInfo=p.getMemFromProcrank(\"com.android.launch\")\n\n\n#LaunchTime Test\n#steps\nfor x in range(3):\n    a.swipeToUp()\n#print result\nstartInfo=p.getAppStartTotalTime(\"com.android.launch/.LaunchActivity\")\n\n\n#Flow Test\n#steps\nflowInfoBefore=p.getCurFlowFromProc(\"com.android.launch\")\n#do something\nfor x in range(3):\n    a.swipeToUp()\nflowInfoAfter=p.getCurFlowFromProc(\"com.android.launch\")\n#print result\nflowInfo=flowInfoAfter-flowInfoBefore\n\n#Battery Test\n#steps\nbatteryInfoBefore=p.getBatteryLevel()\n#do something\nfor x in range(3):\n    a.swipeToUp()\nbatteryInfoAfter=p.getBatteryLevel()\n#batteryInfo=(batteryInfoBefore-batteryInfoAfter)*batteryCount\n\n\n\"\"\"\nFunction Test\n\"\"\"\n#click element\n#1.get by class\nelm=e.findElementByClass(\"TextView\")\n#or by id\nelm=e.findElementById(\"dd\")\n#or by text\nelm=e.findElementByName(\"tt\")\n#or by content-desc\nelm=e.findElementByContent(\"tt\")\n#2.then do something\n#click\na.touch(elm)\na.touchByElement(elm)\na.touchByRatio(0.5,0.2)\na.touch(300,400)\n#long click\na.longPress(elm)\n#send text\na.sendText(\"dd\")\n#send keyevent\na.sendKeyEvent(key.BACK)\n#swipe\na.swipeToDown()\na.swipeToLeft()\na.swipeToRight()\na.swipeToUp()\na.swipe(elm,elm)\na.swipe(100,100,100,100)\n\n#check currentview hava element\n#by class\ne.searchForByClass(\"TextView\")\n#by name\ne.searchForByName(\"dd\")\n#by id\ne.searchForById(\"dd\")\n#by content-desc\ne.searchForByContent(\"dd\")\n\n\n\"\"\"\nMonkey Test\n\"\"\"\n#steps\nm.StartOne(\"com.android.browser\",1000,1000,1000)\n#wait for monkey stop or new script and run m.Stop()\n#if you see monkey stop you can run\nm.Stop()\n\n\n```\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/HATT-add-on/", "keywords": "", "license": "1.0.1", "maintainer": "", "maintainer_email": "", "name": "HATT-add-on", "package_url": "https://pypi.org/project/HATT-add-on/", "platform": "", "project_url": "https://pypi.org/project/HATT-add-on/", "project_urls": {"Homepage": "https://pypi.org/project/HATT-add-on/"}, "release_url": "https://pypi.org/project/HATT-add-on/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "this is a second develop from HATT", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Tonzh \u57fa\u4e8eHATT \u4e8c\u6b21\u5f00\u53d1<br><br>\u539f\u7406\uff1a\u57fa\u4e8eandroid uiautomator\u8ddfadb<br><br>\u73af\u5883\uff1apython2.7.x+android sdk<br><br>\u529f\u80fd\uff1a\u652f\u6301\u529f\u80fd\u3001\u6027\u80fd\u3001\u7a33\u5b9a\u6027<br><br>\u4f18\u70b9\uff1a\u65e0\u9700\u5b89\u88c5\u4efb\u4f55apk\u6216\u5176\u4ed6\u63d2\u4ef6\uff0c\u652f\u6301\u8de8\u5e94\u7528\uff0c\u65e0\u7b7e\u540d\u70e6\u607c<br><br>\u7f3a\u70b9\uff1a\u4e0d\u652f\u6301webview\u3001\u52a8\u6001\u9875\u9762\u3001\u4e2d\u6587\u8f93\u5165\u53ca\u67e5\u627e<br><br>\u4ee5\u4e0b\u662fdemo<br><br>```python<br>__author__ = 'Tonzh'<br>#coding=utf-8<br>#import moudles<br>from Core.Utils.surface_collector import SurfaceStatsCollector<br>from Core.Action.action import Action<br>from Core.Info.element import Element<br>from Core.Info.performance import PerformanceInfo<br>from Core.Action.Monkey.monkey import Monkey<br>import Core.Info.keycode as key<br>s=SurfaceStatsCollector()<br>a=Action()Tonzh<br>e=Element()<br>p=PerformanceInfo()<br>m=Monkey()<br>\"\"\"<br>Performance Test<br>\"\"\"<br>#Fps Test<br>s.DisableWarningAboutEmptyData()<br>s.Start()<br>#steps<br>for x in range(3):<br>    a.swipeToUp()<br>s.Stop()<br>#print result<br>for x in s.GetResults():<br>    if \"avg_surface_fps\" in x.name:<br>        print x.name,x.value,x.unit<br><br>#Cpu Test<br>#steps<br>for x in range(3):<br>    a.swipeToUp()<br>    #print result<br>    cpunInfo=p.getCpuFromDump(\"com.android.launch\")<br>    #or<br>    cpunInfo=p.getCpuFromTop(\"com.android.launch\")<br><br><br># Mem Test<br>#steps<br>for x in range(3):<br>    a.swipeToUp()<br>    #print result<br>    memInfo=p.getMemFromDump(\"com.android.launch\")<br>    #or if you install procrank<br>    menInfo=p.getMemFromProcrank(\"com.android.launch\")<br><br><br>#LaunchTime Test<br>#steps<br>for x in range(3):<br>    a.swipeToUp()<br>#print result<br>startInfo=p.getAppStartTotalTime(\"com.android.launch/.LaunchActivity\")<br><br><br>#Flow Test<br>#steps<br>flowInfoBefore=p.getCurFlowFromProc(\"com.android.launch\")<br>#do something<br>for x in range(3):<br>    a.swipeToUp()<br>flowInfoAfter=p.getCurFlowFromProc(\"com.android.launch\")<br>#print result<br>flowInfo=flowInfoAfter-flowInfoBefore<br><br>#Battery Test<br>#steps<br>batteryInfoBefore=p.getBatteryLevel()<br>#do something<br>for x in range(3):<br>    a.swipeToUp()<br>batteryInfoAfter=p.getBatteryLevel()<br>#batteryInfo=(batteryInfoBefore-batteryInfoAfter)*batteryCount<br><br><br>\"\"\"<br>Function Test<br>\"\"\"<br>#click element<br>#1.get by class<br>elm=e.findElementByClass(\"TextView\")<br>#or by id<br>elm=e.findElementById(\"dd\")<br>#or by text<br>elm=e.findElementByName(\"tt\")<br>#or by content-desc<br>elm=e.findElementByContent(\"tt\")<br>#2.then do something<br>#click<br>a.touch(elm)<br>a.touchByElement(elm)<br>a.touchByRatio(0.5,0.2)<br>a.touch(300,400)<br>#long click<br>a.longPress(elm)<br>#send text<br>a.sendText(\"dd\")<br>#send keyevent<br>a.sendKeyEvent(key.BACK)<br>#swipe<br>a.swipeToDown()<br>a.swipeToLeft()<br>a.swipeToRight()<br>a.swipeToUp()<br>a.swipe(elm,elm)<br>a.swipe(100,100,100,100)<br><br>#check currentview hava element<br>#by class<br>e.searchForByClass(\"TextView\")<br>#by name<br>e.searchForByName(\"dd\")<br>#by id<br>e.searchForById(\"dd\")<br>#by content-desc<br>e.searchForByContent(\"dd\")<br><br><br>\"\"\"<br>Monkey Test<br>\"\"\"<br>#steps<br>m.StartOne(\"com.android.browser\",1000,1000,1000)<br>#wait for monkey stop or new script and run m.Stop()<br>#if you see monkey stop you can run<br>m.Stop()<br><br><br>```<br>\n          </div>"}, "last_serial": 3948711, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "d040c8ebe8ca92d55e959a8e06fc4d66", "sha256": "f83a0c1298949bb7a0a95d3f5933473f6ebef03666180654841ca0c254730917"}, "downloads": -1, "filename": "HATT-add-on-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d040c8ebe8ca92d55e959a8e06fc4d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17472, "upload_time": "2018-06-11T03:26:26", "upload_time_iso_8601": "2018-06-11T03:26:26.474536Z", "url": "https://files.pythonhosted.org/packages/d4/1e/73dd43860215e6434a9fbd737cb9fc6141367bf461be86f67de8ce13006a/HATT-add-on-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d040c8ebe8ca92d55e959a8e06fc4d66", "sha256": "f83a0c1298949bb7a0a95d3f5933473f6ebef03666180654841ca0c254730917"}, "downloads": -1, "filename": "HATT-add-on-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d040c8ebe8ca92d55e959a8e06fc4d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17472, "upload_time": "2018-06-11T03:26:26", "upload_time_iso_8601": "2018-06-11T03:26:26.474536Z", "url": "https://files.pythonhosted.org/packages/d4/1e/73dd43860215e6434a9fbd737cb9fc6141367bf461be86f67de8ce13006a/HATT-add-on-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:15 2020"}