{"info": {"author": "xMistt", "author_email": "xmistt@github.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Better Crayons: Text UI colors for Python.\n===================================\n\n[![pypi](https://img.shields.io/pypi/v/better_crayons.svg)](https://pypi.python.org/pypi/better_crayons)\n[![build](https://travis-ci.com/xMistt/better_crayons.svg?branch=master)](https://pypi.python.org/pypi/better_crayons)\n[![license](https://img.shields.io/pypi/l/better_crayons.svg)](https://pypi.python.org/pypi/better_crayons)\n[![wheel](https://img.shields.io/pypi/wheel/better_crayons.svg)](https://pypi.python.org/pypi/better_crayons)\n[![python](https://img.shields.io/pypi/pyversions/better_crayons.svg)](https://pypi.python.org/pypi/better_crayons)\n\nThis module is really simple, it gives you colored strings for terminal\nusage. Included colors are ``red``, ``green``, ``yellow``, ``blue``, ``black``, ``magenta``, ``cyan``, ``white``, and ``normal`` ( as well as ``clean`` and ``disable``).\n\n**Better Crayons** is nice because it automatically wraps a given string in both the foreground color, as well as returning to the original state after the string is complete. Most terminal color libraries make you manage this yourself.\n\n\n![example](https://i.imgur.com/eob4G6m.png)\n\nArguments include ``always=True`` and ``bold=True``.\n\nFeatures\n--------\n\n- If you call ``disable()``, all future calls to colors will be ignored.\n- If you call ``normal()``, color is reset to default foreground color\n- If the current process is not in a TTY (e.g. being piped), no colors will be displayed.\n- Length of ColoredStrings can be properly calculated.\n- Powered by colorama.\n\nUsage is simple\n---------------\n\n    # red is red, white is white.\n    >>> print('{} white'.format(better_crayons.red('red')))\n    red white\n\nThat's it!\n\nInstallation\n------------\n\n    $ pip install better_crayons\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xMistt/better_crayons", "keywords": "", "license": "MIT", "maintainer": "xMistt", "maintainer_email": "xmistt@github.com", "name": "better-crayons", "package_url": "https://pypi.org/project/better-crayons/", "platform": "", "project_url": "https://pypi.org/project/better-crayons/", "project_urls": {"Homepage": "https://github.com/xMistt/better_crayons"}, "release_url": "https://pypi.org/project/better-crayons/0.0.2/", "requires_dist": ["colorama"], "requires_python": "", "summary": "TextUI colors for Python.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Better Crayons: Text UI colors for Python.</h1>\n<p><a href=\"https://pypi.python.org/pypi/better_crayons\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/671ee2717a9995261bc2ca1d2a4ea20f6b87bd11/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6265747465725f637261796f6e732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/better_crayons\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6252de6fe4387e799d65eaa64e194eb28197d127/68747470733a2f2f7472617669732d63692e636f6d2f784d697374742f6265747465725f637261796f6e732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/better_crayons\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f706a996c3d5bc14f78a9a2795abc2ed226c85a3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6265747465725f637261796f6e732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/better_crayons\" rel=\"nofollow\"><img alt=\"wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/782b4b58169c0effae6ce007292e1843f54a21cc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6265747465725f637261796f6e732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/better_crayons\" rel=\"nofollow\"><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2bbbbdab59aed4dd0deb9049ba359169a4f10fa/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6265747465725f637261796f6e732e737667\"></a></p>\n<p>This module is really simple, it gives you colored strings for terminal\nusage. Included colors are <code>red</code>, <code>green</code>, <code>yellow</code>, <code>blue</code>, <code>black</code>, <code>magenta</code>, <code>cyan</code>, <code>white</code>, and <code>normal</code> ( as well as <code>clean</code> and <code>disable</code>).</p>\n<p><strong>Better Crayons</strong> is nice because it automatically wraps a given string in both the foreground color, as well as returning to the original state after the string is complete. Most terminal color libraries make you manage this yourself.</p>\n<p><img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f0d8db37f5c0fa2fb208a70ff054d1030a7bfb7/68747470733a2f2f692e696d6775722e636f6d2f656f623447366d2e706e67\"></p>\n<p>Arguments include <code>always=True</code> and <code>bold=True</code>.</p>\n<h2>Features</h2>\n<ul>\n<li>If you call <code>disable()</code>, all future calls to colors will be ignored.</li>\n<li>If you call <code>normal()</code>, color is reset to default foreground color</li>\n<li>If the current process is not in a TTY (e.g. being piped), no colors will be displayed.</li>\n<li>Length of ColoredStrings can be properly calculated.</li>\n<li>Powered by colorama.</li>\n</ul>\n<h2>Usage is simple</h2>\n<pre><code># red is red, white is white.\n&gt;&gt;&gt; print('{} white'.format(better_crayons.red('red')))\nred white\n</code></pre>\n<p>That's it!</p>\n<h2>Installation</h2>\n<pre><code>$ pip install better_crayons\n</code></pre>\n\n          </div>"}, "last_serial": 6811102, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "29a123c1bec07fdbb5583365f0db9fe7", "sha256": "d0a2e38dc4bd204ecf3c5384f47993e0b185201f73e225c035b26873c8947fd0"}, "downloads": -1, "filename": "better_crayons-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "29a123c1bec07fdbb5583365f0db9fe7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2051, "upload_time": "2020-03-14T11:49:49", "upload_time_iso_8601": "2020-03-14T11:49:49.946787Z", "url": "https://files.pythonhosted.org/packages/9a/ec/8fbd3aef6a740e4037b7a7566dacbdecb791de0e2046d1de9b506c6b90dd/better_crayons-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "089d0e540b79406850d6d874f156eeeb", "sha256": "770d396fa2f7543d79b362ec6403ef02a6471b65def896d42ffb6fe2b69733c5"}, "downloads": -1, "filename": "better_crayons-0.0.1.tar.gz", "has_sig": false, "md5_digest": "089d0e540b79406850d6d874f156eeeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2231, "upload_time": "2020-03-14T11:49:51", "upload_time_iso_8601": "2020-03-14T11:49:51.903944Z", "url": "https://files.pythonhosted.org/packages/2c/51/1e3975ea97dd6b90aa92167190ca0acbd8847bd990731f4e4d68265f8255/better_crayons-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c30cd5204f7175cbd91937646d6740f6", "sha256": "5807eb743d79dba5a9ff9e39f4a46af2adf17f2a9ae5b359e3330b0e46729cb8"}, "downloads": -1, "filename": "better_crayons-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c30cd5204f7175cbd91937646d6740f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1964, "upload_time": "2020-03-14T12:00:54", "upload_time_iso_8601": "2020-03-14T12:00:54.988626Z", "url": "https://files.pythonhosted.org/packages/90/2d/cfc8c944a942ed010ad44bdc195907765ee59273bfc6e603a0011208212b/better_crayons-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e18bea33ebd96998e6dc3d3890b85c7b", "sha256": "b1a617acf59c84c0a9523153085e3ba4433e6da7baabcbf2918c83606d11f9cb"}, "downloads": -1, "filename": "better_crayons-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e18bea33ebd96998e6dc3d3890b85c7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2020-03-14T12:00:56", "upload_time_iso_8601": "2020-03-14T12:00:56.611920Z", "url": "https://files.pythonhosted.org/packages/1b/02/f7c002813be06cce5d02f20b95f018061b1ce4317d20ca00477a1935b7dd/better_crayons-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c30cd5204f7175cbd91937646d6740f6", "sha256": "5807eb743d79dba5a9ff9e39f4a46af2adf17f2a9ae5b359e3330b0e46729cb8"}, "downloads": -1, "filename": "better_crayons-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c30cd5204f7175cbd91937646d6740f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1964, "upload_time": "2020-03-14T12:00:54", "upload_time_iso_8601": "2020-03-14T12:00:54.988626Z", "url": "https://files.pythonhosted.org/packages/90/2d/cfc8c944a942ed010ad44bdc195907765ee59273bfc6e603a0011208212b/better_crayons-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e18bea33ebd96998e6dc3d3890b85c7b", "sha256": "b1a617acf59c84c0a9523153085e3ba4433e6da7baabcbf2918c83606d11f9cb"}, "downloads": -1, "filename": "better_crayons-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e18bea33ebd96998e6dc3d3890b85c7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2020-03-14T12:00:56", "upload_time_iso_8601": "2020-03-14T12:00:56.611920Z", "url": "https://files.pythonhosted.org/packages/1b/02/f7c002813be06cce5d02f20b95f018061b1ce4317d20ca00477a1935b7dd/better_crayons-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:42 2020"}