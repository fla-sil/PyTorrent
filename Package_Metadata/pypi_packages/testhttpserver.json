{"info": {"author": "Philip Cristiano", "author_email": "testhttpserver@philipcristiano.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python"], "description": "Test HTTP Server\n================\n\nThis is a simple HTTP server that will respond to a single HTTP request and\nrecord some of the data. It is still an early version and doesn't do\neverything you probably want.\n\n[![Build Status](https://secure.travis-ci.org/philipcristiano/testhttpserver.png?branch=master)](http://travis-ci.org/philipcristiano/testhttpserver)\n\nInstalling\n==========\n\n    pip install testhttpserver\n\nUsing in your tests\n===================\n\nTo create a test server import the server\n\n    from testhttpserver import Server\n\nAnd then create a new instance including the port, response status and\ncontent.\n\n    server = Server(8000, response_status=200, response_content='Content')\n\nAfter you make your request to http://localhost:8000/ . If you POST to the\nserver it will have ``request_headers``, ``request_content``, and\n``request_path``  available.\n\nWhen you are done remember to ``join()``!\n\n    server.join()\n\nSee ``tests/test_server.py`` for an example!\n\n\nServer Parameters\n================\nport - The port the server will listen on\n\nresponse_status - int of the status to return\n\nresponse_content - string of content to return\n\nresponse_headers - a list of tuples to return as headers\n\ntimeout - number of seconds before the server timesout and returns", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/philipcristiano/testhttpserver", "keywords": "testing", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "testhttpserver", "package_url": "https://pypi.org/project/testhttpserver/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/testhttpserver/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/philipcristiano/testhttpserver"}, "release_url": "https://pypi.org/project/testhttpserver/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "A HTTP server to use for testing", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            Test HTTP Server<br>================<br><br>This is a simple HTTP server that will respond to a single HTTP request and<br>record some of the data. It is still an early version and doesn't do<br>everything you probably want.<br><br>[![Build Status](https://secure.travis-ci.org/philipcristiano/testhttpserver.png?branch=master)](http://travis-ci.org/philipcristiano/testhttpserver)<br><br>Installing<br>==========<br><br>    pip install testhttpserver<br><br>Using in your tests<br>===================<br><br>To create a test server import the server<br><br>    from testhttpserver import Server<br><br>And then create a new instance including the port, response status and<br>content.<br><br>    server = Server(8000, response_status=200, response_content='Content')<br><br>After you make your request to http://localhost:8000/ . If you POST to the<br>server it will have ``request_headers``, ``request_content``, and<br>``request_path``  available.<br><br>When you are done remember to ``join()``!<br><br>    server.join()<br><br>See ``tests/test_server.py`` for an example!<br><br><br>Server Parameters<br>================<br>port - The port the server will listen on<br><br>response_status - int of the status to return<br><br>response_content - string of content to return<br><br>response_headers - a list of tuples to return as headers<br><br>timeout - number of seconds before the server timesout and returns\n          </div>"}, "last_serial": 800486, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "71cb91786cdf74f0b33a26c04ba54b61", "sha256": "5fa6c29e0969d20c2f804972ba222309cdfc57991ae832622bbaef6a8bed68a1"}, "downloads": -1, "filename": "testhttpserver-0.1.0.tar.gz", "has_sig": false, "md5_digest": "71cb91786cdf74f0b33a26c04ba54b61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7832, "upload_time": "2011-07-04T17:21:05", "upload_time_iso_8601": "2011-07-04T17:21:05.565088Z", "url": "https://files.pythonhosted.org/packages/3b/81/4d53e1b968c9c14c9f25f8109975bbf446c17ee5dcac14cf07e01ad3fb19/testhttpserver-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "469f187a269785f948f62742f88b1864", "sha256": "56ba3ffe31e65166dc9bca65130683abdd17d662bebfd6cc9a66bd853cc35469"}, "downloads": -1, "filename": "testhttpserver-0.1.1.tar.gz", "has_sig": false, "md5_digest": "469f187a269785f948f62742f88b1864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7882, "upload_time": "2011-07-05T23:42:17", "upload_time_iso_8601": "2011-07-05T23:42:17.355186Z", "url": "https://files.pythonhosted.org/packages/87/cf/1a65e4683ec6f6f46777cce5503c697bab8b46267bacf500747629886a45/testhttpserver-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "326592ea6b4c98be4185a9c184565bdb", "sha256": "514a1e81116fc37e24ab70b253b36f294d49122b9be1965e5197bc6f1306d2e4"}, "downloads": -1, "filename": "testhttpserver-0.1.2.tar.gz", "has_sig": false, "md5_digest": "326592ea6b4c98be4185a9c184565bdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7939, "upload_time": "2011-07-06T23:56:39", "upload_time_iso_8601": "2011-07-06T23:56:39.250326Z", "url": "https://files.pythonhosted.org/packages/7b/84/c8b0eccdc4b35c734354899fe4394ee3b7db881e1517b704eff587a87d6c/testhttpserver-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "77a7fc6d8d85831a982f1d87cda31e13", "sha256": "c2875a7acf38fe33bb8e03a1f3b87e18809aaf020e40d985863cae64f2655d41"}, "downloads": -1, "filename": "testhttpserver-0.1.3.tar.gz", "has_sig": false, "md5_digest": "77a7fc6d8d85831a982f1d87cda31e13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8190, "upload_time": "2011-07-27T23:22:37", "upload_time_iso_8601": "2011-07-27T23:22:37.200241Z", "url": "https://files.pythonhosted.org/packages/d2/14/d53c0fac8733234d96c915189a3285ffe49efeeff4dc3daa32b571e47f9d/testhttpserver-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "235541838ca96eb3fbd2b74e8e96cf42", "sha256": "d4f535f0f8552aa0ca63df34519234c64273d431a51f31297cf113a0de770caf"}, "downloads": -1, "filename": "testhttpserver-0.1.4.tar.gz", "has_sig": false, "md5_digest": "235541838ca96eb3fbd2b74e8e96cf42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2610, "upload_time": "2012-12-06T01:15:53", "upload_time_iso_8601": "2012-12-06T01:15:53.270585Z", "url": "https://files.pythonhosted.org/packages/80/b3/a435c18f1643cc9cf751260a16572a438779f16a029f836138eb616d7256/testhttpserver-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "235541838ca96eb3fbd2b74e8e96cf42", "sha256": "d4f535f0f8552aa0ca63df34519234c64273d431a51f31297cf113a0de770caf"}, "downloads": -1, "filename": "testhttpserver-0.1.4.tar.gz", "has_sig": false, "md5_digest": "235541838ca96eb3fbd2b74e8e96cf42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2610, "upload_time": "2012-12-06T01:15:53", "upload_time_iso_8601": "2012-12-06T01:15:53.270585Z", "url": "https://files.pythonhosted.org/packages/80/b3/a435c18f1643cc9cf751260a16572a438779f16a029f836138eb616d7256/testhttpserver-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:33 2020"}