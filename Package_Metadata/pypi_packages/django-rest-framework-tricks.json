{"info": {"author": "Artur Barseghyan", "author_email": "artur.barseghyan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "============================\ndjango-rest-framework-tricks\n============================\nCollection of various tricks for\n`Django REST framework <https://pypi.python.org/pypi/djangorestframework>`_.\n\n.. image:: https://img.shields.io/pypi/v/django-rest-framework-tricks.svg\n   :target: https://pypi.python.org/pypi/django-rest-framework-tricks\n   :alt: PyPI Version\n\n.. image:: https://img.shields.io/pypi/pyversions/django-rest-framework-tricks.svg\n    :target: https://pypi.python.org/pypi/django-rest-framework-tricks/\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/travis/barseghyanartur/django-rest-framework-tricks/master.svg\n   :target: http://travis-ci.org/barseghyanartur/django-rest-framework-tricks\n   :alt: Build Status\n\n.. image:: https://img.shields.io/badge/license-GPL--2.0--only%20OR%20LGPL--2.1--or--later-blue.svg\n   :target: https://github.com/barseghyanartur/django-rest-framework-tricks/#License\n   :alt: GPL-2.0-only OR LGPL-2.1-or-later\n\n.. image:: https://coveralls.io/repos/github/barseghyanartur/django-rest-framework-tricks/badge.svg?branch=master\n    :target: https://coveralls.io/github/barseghyanartur/django-rest-framework-tricks?branch=master\n    :alt: Coverage\n\nPrerequisites\n=============\n\n- Django 1.8, 1.9, 1.10, 1.11, 2.0, 2.1, 2.2 and 3.0.\n- Python 2.7, 3.5, 3.6, 3.7, 3.8\n\nDependencies\n============\n\n- djangorestframework: Written with 3.6.3, tested with >=3.5.0,<=3.11.0. May\n  work on earlier versions, although not guaranteed.\n\nInstallation\n============\n\n(1) Install latest stable version from PyPI:\n\n    .. code-block:: sh\n\n        pip install django-rest-framework-tricks\n\n    or latest stable version from GitHub:\n\n    .. code-block:: sh\n\n        pip install https://github.com/barseghyanartur/django-rest-framework-tricks/archive/stable.tar.gz\n\n    or latest stable version from BitBucket:\n\n    .. code-block:: sh\n\n        pip install https://bitbucket.org/barseghyanartur/django-rest-framework-tricks/get/stable.tar.gz\n\n(2) Add ``rest_framework`` and ``rest_framework_tricks`` to ``INSTALLED_APPS``:\n\n    .. code-block:: python\n\n        INSTALLED_APPS = (\n            # ...\n            # REST framework\n            'rest_framework',\n\n            # REST framework tricks (this package)\n            'rest_framework_tricks',\n\n            # ...\n        )\n\nDocumentation\n=============\n\nDocumentation is available on `Read the Docs\n<http://django-rest-framework-tricks.readthedocs.io/>`_.\n\nMain features and highlights\n============================\n\n- `Nested serializers`_: Nested serializers for non-relational fields.\n- `Ordering filter`_: Developer friendly names for ordering options (for\n  instance, for related field names).\n\nUsage examples\n==============\n\nNested serializers\n------------------\n\nNested serializers for non-relational fields.\n\nOur imaginary ``Book`` model consists of the following (non-relational) Django\nmodel fields:\n\n- ``title``: ``CharField``\n- ``description``: ``TextField``\n- ``summary``: ``TextField``\n- ``publication_date``: ``DateTimeField``\n- ``state``: ``CharField`` (with choices)\n- ``isbn``: ``CharField``\n- ``price``: ``DecimalField``\n- ``pages``: ``IntegerField``\n- ``stock_count``: ``IntegerField``\n\nIn our REST API, we want to split the Book serializer into parts using nested\nserializers to have the following structure:\n\n.. code-block:: javascript\n\n    {\n        \"id\": \"\",\n        \"title\": \"\",\n        \"description\": \"\",\n        \"summary\": \"\",\n        \"publishing_information\": {\n            \"publication_date\": \"\",\n            \"isbn\": \"\",\n            \"pages\": \"\"\n        },\n        \"stock_information\": {\n            \"stock_count\": \"\",\n            \"price\": \"\",\n            \"state\": \"\"\n        }\n    }\n\nSample model\n~~~~~~~~~~~~\n\nThe only variation from standard implementation here is that we declare two\n``NestedProxyField`` fields on the ``Book`` model level for to be used in\n``BookSerializer`` serializer.\n\nNote, that the change does not cause model change (no migrations or\nwhatsoever).\n\nRequired imports\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from django.db import models\n\n    from rest_framework_tricks.models.fields import NestedProxyField\n\nModel definition\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    BOOK_PUBLISHING_STATUS_PUBLISHED = 'published'\n    BOOK_PUBLISHING_STATUS_NOT_PUBLISHED = 'not_published'\n    BOOK_PUBLISHING_STATUS_IN_PROGRESS = 'in_progress'\n    BOOK_PUBLISHING_STATUS_CHOICES = (\n        (BOOK_PUBLISHING_STATUS_PUBLISHED, \"Published\"),\n        (BOOK_PUBLISHING_STATUS_NOT_PUBLISHED, \"Not published\"),\n        (BOOK_PUBLISHING_STATUS_IN_PROGRESS, \"In progress\"),\n    )\n    BOOK_PUBLISHING_STATUS_DEFAULT = BOOK_PUBLISHING_STATUS_PUBLISHED\n\n\n    class Book(models.Model):\n        \"\"\"Book.\"\"\"\n\n        title = models.CharField(max_length=100)\n        description = models.TextField(null=True, blank=True)\n        summary = models.TextField(null=True, blank=True)\n        publication_date = models.DateField()\n        state = models.CharField(max_length=100,\n                                 choices=BOOK_PUBLISHING_STATUS_CHOICES,\n                                 default=BOOK_PUBLISHING_STATUS_DEFAULT)\n        isbn = models.CharField(max_length=100, unique=True)\n        price = models.DecimalField(max_digits=10, decimal_places=2)\n        pages = models.PositiveIntegerField(default=200)\n        stock_count = models.PositiveIntegerField(default=30)\n\n        # List the fields for `PublishingInformationSerializer` nested\n        # serializer. This does not cause a model change.\n        publishing_information = NestedProxyField(\n            'publication_date',\n            'isbn',\n            'pages',\n        )\n\n        # List the fields for `StockInformationSerializer` nested serializer.\n        # This does not cause a model change.\n        stock_information = NestedProxyField(\n            'stock_count',\n            'price',\n            'state',\n        )\n\n        class Meta(object):\n            \"\"\"Meta options.\"\"\"\n\n            ordering = [\"isbn\"]\n\n        def __str__(self):\n            return self.title\n\nSample serializers\n~~~~~~~~~~~~~~~~~~\n\nAt first, we add ``nested_proxy_field`` property to the ``Meta`` class\ndefinitions  of ``PublishingInformationSerializer`` and\n``StockInformationSerializer`` nested serializers.\n\nThen we define our (main) ``BookSerializer`` class, which is going to be\nused as a ``serializer_class`` of the ``BookViewSet``. We inherit the\n``BookSerializer`` from\n``rest_framework_tricks.serializers.HyperlinkedModelSerializer``\ninstead of the one of the Django REST framework. There's also a\n``rest_framework_tricks.serializers.ModelSerializer`` available.\n\nRequired imports\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from rest_framework import serializers\n    from rest_framework_tricks.serializers import (\n        HyperlinkedModelSerializer,\n    )\n\n    from .models import Book\n\nDefining the serializers\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. note::\n\n    If you get validation errors about null-values, add ``allow_null=True``\n    next to the ``required=False`` for serializer field definitions.\n\n**Nested serializer**\n\n.. code-block:: python\n\n    class PublishingInformationSerializer(serializers.ModelSerializer):\n        \"\"\"Publishing information serializer.\"\"\"\n\n        publication_date = serializers.DateField(required=False)\n        isbn = serializers.CharField(required=False)\n        pages = serializers.IntegerField(required=False)\n\n        class Meta(object):\n            \"\"\"Meta options.\"\"\"\n\n            model = Book\n            fields = (\n                'publication_date',\n                'isbn',\n                'pages',\n            )\n            # Note, that this should be set to True to identify that\n            # this serializer is going to be used as `NestedProxyField`.\n            nested_proxy_field = True\n\n**Nested serializer**\n\n.. code-block:: python\n\n    class StockInformationSerializer(serializers.ModelSerializer):\n        \"\"\"Stock information serializer.\"\"\"\n\n        class Meta(object):\n            \"\"\"Meta options.\"\"\"\n\n            model = Book\n            fields = (\n                'stock_count',\n                'price',\n                'state',\n            )\n            # Note, that this should be set to True to identify that\n            # this serializer is going to be used as `NestedProxyField`.\n            nested_proxy_field = True\n\n**Main serializer to be used in the ViewSet**\n\n.. code-block:: python\n\n    # Note, that we are importing the ``HyperlinkedModelSerializer`` from\n    # the `rest_framework_tricks.serializers`. Names of the serializers\n    # should match the names of model properties set with ``NestedProxyField``\n    # fields.\n    class BookSerializer(HyperlinkedModelSerializer):\n        \"\"\"Book serializer.\"\"\"\n\n        publishing_information = PublishingInformationSerializer(required=False)\n        stock_information = StockInformationSerializer(required=False)\n\n        class Meta(object):\n            \"\"\"Meta options.\"\"\"\n\n            model = Book\n            fields = (\n                'url',\n                'id',\n                'title',\n                'description',\n                'summary',\n                'publishing_information',\n                'stock_information',\n            )\n\nSample ViewSet\n~~~~~~~~~~~~~~\n\nAbsolutely no variations from standard implementation here.\n\nRequired imports\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from rest_framework.viewsets import ModelViewSet\n    from rest_framework.permissions import AllowAny\n\n    from .models import Book\n    from .serializers import BookSerializer\n\nViewSet definition\n^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    class BookViewSet(ModelViewSet):\n        \"\"\"Book ViewSet.\"\"\"\n\n        queryset = Book.objects.all()\n        serializer_class = BookSerializer\n        permission_classes = [AllowAny]\n\nSample OPTIONS call\n^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: text\n\n    OPTIONS /books/api/books/\n    HTTP 200 OK\n    Allow: GET, POST, HEAD, OPTIONS\n    Content-Type: application/json\n    Vary: Accept\n\n.. code-block:: javascript\n\n    {\n        \"name\": \"Book List\",\n        \"description\": \"Book ViewSet.\",\n        \"renders\": [\n            \"application/json\",\n            \"text/html\"\n        ],\n        \"parses\": [\n            \"application/json\",\n            \"application/x-www-form-urlencoded\",\n            \"multipart/form-data\"\n        ],\n        \"actions\": {\n            \"POST\": {\n                \"id\": {\n                    \"type\": \"integer\",\n                    \"required\": false,\n                    \"read_only\": true,\n                    \"label\": \"ID\"\n                },\n                \"title\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"read_only\": false,\n                    \"label\": \"Title\",\n                    \"max_length\": 100\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"required\": false,\n                    \"read_only\": false,\n                    \"label\": \"Description\"\n                },\n                \"summary\": {\n                    \"type\": \"string\",\n                    \"required\": false,\n                    \"read_only\": false,\n                    \"label\": \"Summary\"\n                },\n                \"publishing_information\": {\n                    \"type\": \"nested object\",\n                    \"required\": false,\n                    \"read_only\": false,\n                    \"label\": \"Publishing information\",\n                    \"children\": {\n                        \"publication_date\": {\n                            \"type\": \"date\",\n                            \"required\": false,\n                            \"read_only\": false,\n                            \"label\": \"Publication date\"\n                        },\n                        \"isbn\": {\n                            \"type\": \"string\",\n                            \"required\": false,\n                            \"read_only\": false,\n                            \"label\": \"Isbn\"\n                        },\n                        \"pages\": {\n                            \"type\": \"integer\",\n                            \"required\": false,\n                            \"read_only\": false,\n                            \"label\": \"Pages\"\n                        }\n                    }\n                },\n                \"stock_information\": {\n                    \"type\": \"nested object\",\n                    \"required\": false,\n                    \"read_only\": false,\n                    \"label\": \"Stock information\",\n                    \"children\": {\n                        \"stock_count\": {\n                            \"type\": \"integer\",\n                            \"required\": false,\n                            \"read_only\": false,\n                            \"label\": \"Stock count\"\n                        },\n                        \"price\": {\n                            \"type\": \"decimal\",\n                            \"required\": true,\n                            \"read_only\": false,\n                            \"label\": \"Price\"\n                        },\n                        \"state\": {\n                            \"type\": \"choice\",\n                            \"required\": false,\n                            \"read_only\": false,\n                            \"label\": \"State\",\n                            \"choices\": [\n                                {\n                                    \"value\": \"published\",\n                                    \"display_name\": \"Published\"\n                                },\n                                {\n                                    \"value\": \"not_published\",\n                                    \"display_name\": \"Not published\"\n                                },\n                                {\n                                    \"value\": \"in_progress\",\n                                    \"display_name\": \"In progress\"\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        }\n    }\n\nUnlimited nesting depth\n~~~~~~~~~~~~~~~~~~~~~~~\n\nUnlimited nesting depth is supported.\n\nOur imaginary ``Author`` model could consist of the following (non-relational)\nDjango model fields:\n\n- ``salutation``: ``CharField``\n- ``name``: ``CharField``\n- ``email``: ``EmailField``\n- ``birth_date``: ``DateField``\n- ``biography``: ``TextField``\n- ``phone_number``: ``CharField``\n- ``website``: ``URLField``\n- ``company``: ``CharField``\n- ``company_phone_number``: ``CharField``\n- ``company_email``: ``EmailField``\n- ``company_website``: ``URLField``\n\nIn our REST API, we could split the Author serializer into parts using\nnested serializers to have the following structure:\n\n.. code-block:: javascript\n\n    {\n        \"id\": \"\",\n        \"salutation\": \"\",\n        \"name\": \"\",\n        \"birth_date\": \"\",\n        \"biography\": \"\",\n        \"contact_information\": {\n            \"personal_contact_information\": {\n                \"email\": \"\",\n                \"phone_number\": \"\",\n                \"website\": \"\"\n            },\n            \"business_contact_information\": {\n                \"company\": \"\",\n                \"company_email\": \"\",\n                \"company_phone_number\": \"\",\n                \"company_website\": \"\"\n            }\n        }\n    }\n\nOur model would have to be defined as follows (see ``Advanced usage examples``\nfor complete model definition):\n\n.. code-block:: python\n\n    class Author(models.Model):\n        \"\"\"Author.\"\"\"\n\n        # ...\n\n        # List the fields for `PersonalContactInformationSerializer` nested\n        # serializer. This does not cause a model change.\n        personal_contact_information = NestedProxyField(\n            'email',\n            'phone_number',\n            'website',\n        )\n\n        # List the fields for `BusinessContactInformationSerializer` nested\n        # serializer. This does not cause a model change.\n        business_contact_information = NestedProxyField(\n            'company',\n            'company_email',\n            'company_phone_number',\n            'company_website',\n        )\n\n        # List the fields for `ContactInformationSerializer` nested\n        # serializer. This does not cause a model change.\n        contact_information = NestedProxyField(\n            'personal_contact_information',\n            'business_contact_information',\n        )\n\n        # ...\n\nSee the `Advanced usage examples\n<https://github.com/barseghyanartur/django-rest-framework-tricks/blob/master/ADVANCED_USAGE_EXAMPLES.rst#nested-serializers>`_\nfor complete example.\n\nOrdering filter\n---------------\nDeveloper friendly names for ordering options (for instance, for related field\nnames) for making better APIs.\n\nSample model\n~~~~~~~~~~~~\n\nAbsolutely no variations from standard implementation here.\n\nRequired imports\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from django.db import models\n\n\nModel definition\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    class Profile(models.Model):\n        \"\"\"Profile.\"\"\"\n\n        user = models.ForeignKey('auth.User')\n        biography = models.TextField()\n        hobbies = models.TextField()\n\n\nSample serializer\n~~~~~~~~~~~~~~~~~\n\nAbsolutely no variations from standard implementation here.\n\nRequired imports\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from rest_framework import serializers\n\n    from .models import Profile\n\nDefining the serializers\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    class ProfileSerializer(serializers.ModelSerializer):\n        \"\"\"Profile serializer.\"\"\"\n\n        username = serializers.CharField(source='user.username', read_only=True)\n        full_name = serializers.SerializerMethodField()\n        email = serializers.CharField(source='user.email', read_only=True)\n\n        class Meta(object):\n\n        model = Profile\n        fields = (\n            'id',\n            'username',\n            'full_name',\n            'email',\n            'biography',\n            'hobbies',\n        )\n\n        def get_full_name(self, obj):\n            return obj.user.get_full_name()\n\nSample ViewSet\n~~~~~~~~~~~~~~\n\nThe only variation from standard implementation here is that we\nuse ``rest_frameworks_tricks.filters.OrderingFilter`` instead\nof ``rest_framework.filters.OrderingFilter``.\n\nRequired imports\n^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from rest_framework.viewsets import ModelViewSet\n    from rest_framework.permissions import AllowAny\n    from rest_framework_tricks.filters import OrderingFilter\n\n    from .models import Profile\n    from .serializers import ProfileSerializer\n\nViewSet definition\n^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    class ProfileViewSet(ModelViewSet):\n        \"\"\"Profile ViewSet.\"\"\"\n\n        queryset = Profile.objects.all()\n        serializer_class = ProfileSerializer\n        permission_classes = [AllowAny]\n        filter_backends = (OrderingFilter,)\n        ordering_fields = {\n            'id': 'id',\n            'username': 'user__username',\n            'email': 'user__email',\n            'full_name': ['user__first_name', 'user__last_name']\n        }\n        ordering = ('id',)\n\nSample GET calls\n^^^^^^^^^^^^^^^^\n\nNote, that our ordering options are now equal to the field names in the\nserializer (JSON response). API becomes easier to use/understand that way.\n\n.. code-block:: text\n\n    GET /api/profile/?ordering=email\n    GET /api/profile/?ordering=-username\n    GET /api/profile/?ordering=full_name\n    GET /api/profile/?ordering=-full_name\n\nDemo\n====\nRun demo locally\n----------------\nIn order to be able to quickly evaluate the ``django-rest-framework-tricks``,\na demo app (with a quick installer) has been created (works on Ubuntu/Debian,\nmay work on other Linux systems as well, although not guaranteed). Follow the\ninstructions below to have the demo running within a minute.\n\nGrab and run the latest ``rest_framework_tricks_demo_installer.sh`` demo\ninstaller:\n\n.. code-block:: sh\n\n    wget -O - https://raw.github.com/barseghyanartur/django-rest-framework-tricks/master/examples/rest_framework_tricks_demo_installer.sh | bash\n\nOpen your browser and test the app.\n\n.. code-block:: text\n\n    http://127.0.0.1:8001/books/api/\n\nTesting\n=======\n\nProject is covered with tests.\n\nTo test with all supported Python/Django versions type:\n\n.. code-block:: sh\n\n    tox\n\nTo test against specific environment, type:\n\n.. code-block:: sh\n\n    tox -e py38-django30\n\nTo test just your working environment type:\n\n.. code-block:: sh\n\n    ./runtests.py\n\nTo run a single test in your working environment type:\n\n.. code-block:: sh\n\n    ./runtests.py src/rest_framework_tricks/tests/test_nested_proxy_field.py\n\nOr:\n\n.. code-block:: sh\n\n    ./manage.py test rest_framework_tricks.tests.test_nested_proxy_field\n\nIt's assumed that you have all the requirements installed. If not, first\ninstall the test requirements:\n\n.. code-block:: sh\n\n    pip install -r examples/requirements/test.txt\n\nWriting documentation\n=====================\n\nKeep the following hierarchy.\n\n.. code-block:: text\n\n    =====\n    title\n    =====\n\n    header\n    ======\n\n    sub-header\n    ----------\n\n    sub-sub-header\n    ~~~~~~~~~~~~~~\n\n    sub-sub-sub-header\n    ^^^^^^^^^^^^^^^^^^\n\n    sub-sub-sub-sub-header\n    ++++++++++++++++++++++\n\n    sub-sub-sub-sub-sub-header\n    **************************\n\nLicense\n=======\n\nGPL-2.0-only OR LGPL-2.1-or-later\n\nSupport\n=======\n\nFor any issues contact me at the e-mail given in the `Author`_ section.\n\nAuthor\n======\n\nArtur Barseghyan <artur.barseghyan@gmail.com>\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/barseghyanartur/django-rest-framework-tricks/", "keywords": "django", "license": "GPL-2.0-only OR LGPL-2.1-or-later", "maintainer": "", "maintainer_email": "", "name": "django-rest-framework-tricks", "package_url": "https://pypi.org/project/django-rest-framework-tricks/", "platform": "", "project_url": "https://pypi.org/project/django-rest-framework-tricks/", "project_urls": {"Homepage": "https://github.com/barseghyanartur/django-rest-framework-tricks/"}, "release_url": "https://pypi.org/project/django-rest-framework-tricks/0.2.11/", "requires_dist": null, "requires_python": "", "summary": "Collection of various tricks for Django REST framework.", "version": "0.2.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Collection of various tricks for\n<a href=\"https://pypi.python.org/pypi/djangorestframework\" rel=\"nofollow\">Django REST framework</a>.</p>\n<a href=\"https://pypi.python.org/pypi/django-rest-framework-tricks\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5da83250eec344934f6ea9c0341f5ad8228922f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d726573742d6672616d65776f726b2d747269636b732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-rest-framework-tricks/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30d1b749e3d8732d9b8c9cc1c5eac113f3338e0a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d726573742d6672616d65776f726b2d747269636b732e737667\"></a>\n<a href=\"http://travis-ci.org/barseghyanartur/django-rest-framework-tricks\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f87e4607dd37139bd4015b30654f1ed7db10055/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6261727365676879616e61727475722f646a616e676f2d726573742d6672616d65776f726b2d747269636b732f6d61737465722e737667\"></a>\n<a href=\"https://github.com/barseghyanartur/django-rest-framework-tricks/#License\" rel=\"nofollow\"><img alt=\"GPL-2.0-only OR LGPL-2.1-or-later\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1684db4c3f51e18482ec17d469e976a9ce8d37f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d2d322e302d2d6f6e6c792532304f522532304c47504c2d2d322e312d2d6f722d2d6c617465722d626c75652e737667\"></a>\n<a href=\"https://coveralls.io/github/barseghyanartur/django-rest-framework-tricks?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f182e50e86a877be32f8aeb44fcb7cace22c9bb/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6261727365676879616e61727475722f646a616e676f2d726573742d6672616d65776f726b2d747269636b732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li>Django 1.8, 1.9, 1.10, 1.11, 2.0, 2.1, 2.2 and 3.0.</li>\n<li>Python 2.7, 3.5, 3.6, 3.7, 3.8</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>djangorestframework: Written with 3.6.3, tested with &gt;=3.5.0,&lt;=3.11.0. May\nwork on earlier versions, although not guaranteed.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install latest stable version from PyPI:</p>\n<pre>pip install django-rest-framework-tricks\n</pre>\n<p>or latest stable version from GitHub:</p>\n<pre>pip install https://github.com/barseghyanartur/django-rest-framework-tricks/archive/stable.tar.gz\n</pre>\n<p>or latest stable version from BitBucket:</p>\n<pre>pip install https://bitbucket.org/barseghyanartur/django-rest-framework-tricks/get/stable.tar.gz\n</pre>\n</li>\n<li><p>Add <tt>rest_framework</tt> and <tt>rest_framework_tricks</tt> to <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"c1\"># REST framework</span>\n    <span class=\"s1\">'rest_framework'</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># REST framework tricks (this package)</span>\n    <span class=\"s1\">'rest_framework_tricks'</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation is available on <a href=\"http://django-rest-framework-tricks.readthedocs.io/\" rel=\"nofollow\">Read the Docs</a>.</p>\n</div>\n<div id=\"main-features-and-highlights\">\n<h2>Main features and highlights</h2>\n<ul>\n<li><a href=\"#nested-serializers\" rel=\"nofollow\">Nested serializers</a>: Nested serializers for non-relational fields.</li>\n<li><a href=\"#ordering-filter\" rel=\"nofollow\">Ordering filter</a>: Developer friendly names for ordering options (for\ninstance, for related field names).</li>\n</ul>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<div id=\"nested-serializers\">\n<h3>Nested serializers</h3>\n<p>Nested serializers for non-relational fields.</p>\n<p>Our imaginary <tt>Book</tt> model consists of the following (non-relational) Django\nmodel fields:</p>\n<ul>\n<li><tt>title</tt>: <tt>CharField</tt></li>\n<li><tt>description</tt>: <tt>TextField</tt></li>\n<li><tt>summary</tt>: <tt>TextField</tt></li>\n<li><tt>publication_date</tt>: <tt>DateTimeField</tt></li>\n<li><tt>state</tt>: <tt>CharField</tt> (with choices)</li>\n<li><tt>isbn</tt>: <tt>CharField</tt></li>\n<li><tt>price</tt>: <tt>DecimalField</tt></li>\n<li><tt>pages</tt>: <tt>IntegerField</tt></li>\n<li><tt>stock_count</tt>: <tt>IntegerField</tt></li>\n</ul>\n<p>In our REST API, we want to split the Book serializer into parts using nested\nserializers to have the following structure:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"id\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"title\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"description\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"summary\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"publishing_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"publication_date\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"isbn\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"pages\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"stock_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"stock_count\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"price\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"state\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<div id=\"sample-model\">\n<h4>Sample model</h4>\n<p>The only variation from standard implementation here is that we declare two\n<tt>NestedProxyField</tt> fields on the <tt>Book</tt> model level for to be used in\n<tt>BookSerializer</tt> serializer.</p>\n<p>Note, that the change does not cause model change (no migrations or\nwhatsoever).</p>\n<div id=\"required-imports\">\n<h5>Required imports</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework_tricks.models.fields</span> <span class=\"kn\">import</span> <span class=\"n\">NestedProxyField</span>\n</pre>\n</div>\n<div id=\"model-definition\">\n<h5>Model definition</h5>\n<pre><span class=\"n\">BOOK_PUBLISHING_STATUS_PUBLISHED</span> <span class=\"o\">=</span> <span class=\"s1\">'published'</span>\n<span class=\"n\">BOOK_PUBLISHING_STATUS_NOT_PUBLISHED</span> <span class=\"o\">=</span> <span class=\"s1\">'not_published'</span>\n<span class=\"n\">BOOK_PUBLISHING_STATUS_IN_PROGRESS</span> <span class=\"o\">=</span> <span class=\"s1\">'in_progress'</span>\n<span class=\"n\">BOOK_PUBLISHING_STATUS_CHOICES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"n\">BOOK_PUBLISHING_STATUS_PUBLISHED</span><span class=\"p\">,</span> <span class=\"s2\">\"Published\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"n\">BOOK_PUBLISHING_STATUS_NOT_PUBLISHED</span><span class=\"p\">,</span> <span class=\"s2\">\"Not published\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"n\">BOOK_PUBLISHING_STATUS_IN_PROGRESS</span><span class=\"p\">,</span> <span class=\"s2\">\"In progress\"</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">BOOK_PUBLISHING_STATUS_DEFAULT</span> <span class=\"o\">=</span> <span class=\"n\">BOOK_PUBLISHING_STATUS_PUBLISHED</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Book.\"\"\"</span>\n\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">summary</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">publication_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n    <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n                             <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">BOOK_PUBLISHING_STATUS_CHOICES</span><span class=\"p\">,</span>\n                             <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">BOOK_PUBLISHING_STATUS_DEFAULT</span><span class=\"p\">)</span>\n    <span class=\"n\">isbn</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">price</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DecimalField</span><span class=\"p\">(</span><span class=\"n\">max_digits</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">decimal_places</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveIntegerField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">stock_count</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveIntegerField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># List the fields for `PublishingInformationSerializer` nested</span>\n    <span class=\"c1\"># serializer. This does not cause a model change.</span>\n    <span class=\"n\">publishing_information</span> <span class=\"o\">=</span> <span class=\"n\">NestedProxyField</span><span class=\"p\">(</span>\n        <span class=\"s1\">'publication_date'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'isbn'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'pages'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># List the fields for `StockInformationSerializer` nested serializer.</span>\n    <span class=\"c1\"># This does not cause a model change.</span>\n    <span class=\"n\">stock_information</span> <span class=\"o\">=</span> <span class=\"n\">NestedProxyField</span><span class=\"p\">(</span>\n        <span class=\"s1\">'stock_count'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'price'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'state'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Meta options.\"\"\"</span>\n\n        <span class=\"n\">ordering</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"isbn\"</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">title</span>\n</pre>\n</div>\n</div>\n<div id=\"sample-serializers\">\n<h4>Sample serializers</h4>\n<p>At first, we add <tt>nested_proxy_field</tt> property to the <tt>Meta</tt> class\ndefinitions  of <tt>PublishingInformationSerializer</tt> and\n<tt>StockInformationSerializer</tt> nested serializers.</p>\n<p>Then we define our (main) <tt>BookSerializer</tt> class, which is going to be\nused as a <tt>serializer_class</tt> of the <tt>BookViewSet</tt>. We inherit the\n<tt>BookSerializer</tt> from\n<tt>rest_framework_tricks.serializers.HyperlinkedModelSerializer</tt>\ninstead of the one of the Django REST framework. There\u2019s also a\n<tt>rest_framework_tricks.serializers.ModelSerializer</tt> available.</p>\n<div id=\"id1\">\n<h5>Required imports</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework_tricks.serializers</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">HyperlinkedModelSerializer</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span>\n</pre>\n</div>\n<div id=\"defining-the-serializers\">\n<h5>Defining the serializers</h5>\n<div>\n<p>Note</p>\n<p>If you get validation errors about null-values, add <tt>allow_null=True</tt>\nnext to the <tt>required=False</tt> for serializer field definitions.</p>\n</div>\n<p><strong>Nested serializer</strong></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">PublishingInformationSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Publishing information serializer.\"\"\"</span>\n\n    <span class=\"n\">publication_date</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">isbn</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Meta options.\"\"\"</span>\n\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"s1\">'publication_date'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'isbn'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'pages'</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Note, that this should be set to True to identify that</span>\n        <span class=\"c1\"># this serializer is going to be used as `NestedProxyField`.</span>\n        <span class=\"n\">nested_proxy_field</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p><strong>Nested serializer</strong></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">StockInformationSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Stock information serializer.\"\"\"</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Meta options.\"\"\"</span>\n\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"s1\">'stock_count'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'price'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'state'</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Note, that this should be set to True to identify that</span>\n        <span class=\"c1\"># this serializer is going to be used as `NestedProxyField`.</span>\n        <span class=\"n\">nested_proxy_field</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p><strong>Main serializer to be used in the ViewSet</strong></p>\n<pre><span class=\"c1\"># Note, that we are importing the ``HyperlinkedModelSerializer`` from</span>\n<span class=\"c1\"># the `rest_framework_tricks.serializers`. Names of the serializers</span>\n<span class=\"c1\"># should match the names of model properties set with ``NestedProxyField``</span>\n<span class=\"c1\"># fields.</span>\n<span class=\"k\">class</span> <span class=\"nc\">BookSerializer</span><span class=\"p\">(</span><span class=\"n\">HyperlinkedModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Book serializer.\"\"\"</span>\n\n    <span class=\"n\">publishing_information</span> <span class=\"o\">=</span> <span class=\"n\">PublishingInformationSerializer</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">stock_information</span> <span class=\"o\">=</span> <span class=\"n\">StockInformationSerializer</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Meta options.\"\"\"</span>\n\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"s1\">'url'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'id'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'title'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'description'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'summary'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'publishing_information'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'stock_information'</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"sample-viewset\">\n<h4>Sample ViewSet</h4>\n<p>Absolutely no variations from standard implementation here.</p>\n<div id=\"id2\">\n<h5>Required imports</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework.viewsets</span> <span class=\"kn\">import</span> <span class=\"n\">ModelViewSet</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework.permissions</span> <span class=\"kn\">import</span> <span class=\"n\">AllowAny</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">BookSerializer</span>\n</pre>\n</div>\n<div id=\"viewset-definition\">\n<h5>ViewSet definition</h5>\n<pre><span class=\"k\">class</span> <span class=\"nc\">BookViewSet</span><span class=\"p\">(</span><span class=\"n\">ModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Book ViewSet.\"\"\"</span>\n\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">Book</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">BookSerializer</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AllowAny</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"sample-options-call\">\n<h5>Sample OPTIONS call</h5>\n<pre>OPTIONS /books/api/books/\nHTTP 200 OK\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nVary: Accept\n</pre>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Book List\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"description\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Book ViewSet.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"renders\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"application/json\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"text/html\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"parses\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"application/json\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"application/x-www-form-urlencoded\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"multipart/form-data\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"actions\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"POST\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"id\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"ID\"</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"title\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Title\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"max_length\"</span><span class=\"o\">:</span> <span class=\"mi\">100</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"description\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Description\"</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"summary\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Summary\"</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"publishing_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"nested object\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Publishing information\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"children\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"publication_date\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"date\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Publication date\"</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"s2\">\"isbn\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Isbn\"</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"s2\">\"pages\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Pages\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">\"stock_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"nested object\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Stock information\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"children\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"stock_count\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"integer\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Stock count\"</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"s2\">\"price\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"decimal\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Price\"</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"s2\">\"state\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">\"type\"</span><span class=\"o\">:</span> <span class=\"s2\">\"choice\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"required\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"read_only\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"label\"</span><span class=\"o\">:</span> <span class=\"s2\">\"State\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"choices\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">\"value\"</span><span class=\"o\">:</span> <span class=\"s2\">\"published\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"display_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Published\"</span>\n                            <span class=\"p\">},</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">\"value\"</span><span class=\"o\">:</span> <span class=\"s2\">\"not_published\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"display_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Not published\"</span>\n                            <span class=\"p\">},</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">\"value\"</span><span class=\"o\">:</span> <span class=\"s2\">\"in_progress\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"display_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"In progress\"</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">]</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"unlimited-nesting-depth\">\n<h4>Unlimited nesting depth</h4>\n<p>Unlimited nesting depth is supported.</p>\n<p>Our imaginary <tt>Author</tt> model could consist of the following (non-relational)\nDjango model fields:</p>\n<ul>\n<li><tt>salutation</tt>: <tt>CharField</tt></li>\n<li><tt>name</tt>: <tt>CharField</tt></li>\n<li><tt>email</tt>: <tt>EmailField</tt></li>\n<li><tt>birth_date</tt>: <tt>DateField</tt></li>\n<li><tt>biography</tt>: <tt>TextField</tt></li>\n<li><tt>phone_number</tt>: <tt>CharField</tt></li>\n<li><tt>website</tt>: <tt>URLField</tt></li>\n<li><tt>company</tt>: <tt>CharField</tt></li>\n<li><tt>company_phone_number</tt>: <tt>CharField</tt></li>\n<li><tt>company_email</tt>: <tt>EmailField</tt></li>\n<li><tt>company_website</tt>: <tt>URLField</tt></li>\n</ul>\n<p>In our REST API, we could split the Author serializer into parts using\nnested serializers to have the following structure:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"id\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"salutation\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"birth_date\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"biography\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"contact_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"personal_contact_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"email\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"phone_number\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"website\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">\"business_contact_information\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"company\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"company_email\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"company_phone_number\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"company_website\"</span><span class=\"o\">:</span> <span class=\"s2\">\"\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Our model would have to be defined as follows (see <tt>Advanced usage examples</tt>\nfor complete model definition):</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Author</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Author.\"\"\"</span>\n\n    <span class=\"c1\"># ...</span>\n\n    <span class=\"c1\"># List the fields for `PersonalContactInformationSerializer` nested</span>\n    <span class=\"c1\"># serializer. This does not cause a model change.</span>\n    <span class=\"n\">personal_contact_information</span> <span class=\"o\">=</span> <span class=\"n\">NestedProxyField</span><span class=\"p\">(</span>\n        <span class=\"s1\">'email'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'phone_number'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'website'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># List the fields for `BusinessContactInformationSerializer` nested</span>\n    <span class=\"c1\"># serializer. This does not cause a model change.</span>\n    <span class=\"n\">business_contact_information</span> <span class=\"o\">=</span> <span class=\"n\">NestedProxyField</span><span class=\"p\">(</span>\n        <span class=\"s1\">'company'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'company_email'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'company_phone_number'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'company_website'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># List the fields for `ContactInformationSerializer` nested</span>\n    <span class=\"c1\"># serializer. This does not cause a model change.</span>\n    <span class=\"n\">contact_information</span> <span class=\"o\">=</span> <span class=\"n\">NestedProxyField</span><span class=\"p\">(</span>\n        <span class=\"s1\">'personal_contact_information'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'business_contact_information'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># ...</span>\n</pre>\n<p>See the <a href=\"https://github.com/barseghyanartur/django-rest-framework-tricks/blob/master/ADVANCED_USAGE_EXAMPLES.rst#nested-serializers\" rel=\"nofollow\">Advanced usage examples</a>\nfor complete example.</p>\n</div>\n</div>\n<div id=\"ordering-filter\">\n<h3>Ordering filter</h3>\n<p>Developer friendly names for ordering options (for instance, for related field\nnames) for making better APIs.</p>\n<div id=\"id3\">\n<h4>Sample model</h4>\n<p>Absolutely no variations from standard implementation here.</p>\n<div id=\"id4\">\n<h5>Required imports</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n</pre>\n</div>\n<div id=\"id5\">\n<h5>Model definition</h5>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Profile</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Profile.\"\"\"</span>\n\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'auth.User'</span><span class=\"p\">)</span>\n    <span class=\"n\">biography</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">hobbies</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"sample-serializer\">\n<h4>Sample serializer</h4>\n<p>Absolutely no variations from standard implementation here.</p>\n<div id=\"id6\">\n<h5>Required imports</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Profile</span>\n</pre>\n</div>\n<div id=\"id7\">\n<h5>Defining the serializers</h5>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ProfileSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Profile serializer.\"\"\"</span>\n\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'user.username'</span><span class=\"p\">,</span> <span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">full_name</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">SerializerMethodField</span><span class=\"p\">()</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'user.email'</span><span class=\"p\">,</span> <span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Profile</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'username'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'full_name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'email'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'biography'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'hobbies'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_full_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_full_name</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"id8\">\n<h4>Sample ViewSet</h4>\n<p>The only variation from standard implementation here is that we\nuse <tt>rest_frameworks_tricks.filters.OrderingFilter</tt> instead\nof <tt>rest_framework.filters.OrderingFilter</tt>.</p>\n<div id=\"id9\">\n<h5>Required imports</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework.viewsets</span> <span class=\"kn\">import</span> <span class=\"n\">ModelViewSet</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework.permissions</span> <span class=\"kn\">import</span> <span class=\"n\">AllowAny</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework_tricks.filters</span> <span class=\"kn\">import</span> <span class=\"n\">OrderingFilter</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Profile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">ProfileSerializer</span>\n</pre>\n</div>\n<div id=\"id10\">\n<h5>ViewSet definition</h5>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ProfileViewSet</span><span class=\"p\">(</span><span class=\"n\">ModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Profile ViewSet.\"\"\"</span>\n\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">Profile</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">ProfileSerializer</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AllowAny</span><span class=\"p\">]</span>\n    <span class=\"n\">filter_backends</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">OrderingFilter</span><span class=\"p\">,)</span>\n    <span class=\"n\">ordering_fields</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'id'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'user__username'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'user__email'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'full_name'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'user__first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'user__last_name'</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">ordering</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,)</span>\n</pre>\n</div>\n<div id=\"sample-get-calls\">\n<h5>Sample GET calls</h5>\n<p>Note, that our ordering options are now equal to the field names in the\nserializer (JSON response). API becomes easier to use/understand that way.</p>\n<pre>GET /api/profile/?ordering=email\nGET /api/profile/?ordering=-username\nGET /api/profile/?ordering=full_name\nGET /api/profile/?ordering=-full_name\n</pre>\n</div>\n</div>\n</div>\n</div>\n<div id=\"demo\">\n<h2>Demo</h2>\n<h2 id=\"run-demo-locally\"><span class=\"section-subtitle\">Run demo locally</span></h2>\n<p>In order to be able to quickly evaluate the <tt><span class=\"pre\">django-rest-framework-tricks</span></tt>,\na demo app (with a quick installer) has been created (works on Ubuntu/Debian,\nmay work on other Linux systems as well, although not guaranteed). Follow the\ninstructions below to have the demo running within a minute.</p>\n<p>Grab and run the latest <tt>rest_framework_tricks_demo_installer.sh</tt> demo\ninstaller:</p>\n<pre>wget -O - https://raw.github.com/barseghyanartur/django-rest-framework-tricks/master/examples/rest_framework_tricks_demo_installer.sh <span class=\"p\">|</span> bash\n</pre>\n<p>Open your browser and test the app.</p>\n<pre>http://127.0.0.1:8001/books/api/\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Project is covered with tests.</p>\n<p>To test with all supported Python/Django versions type:</p>\n<pre>tox\n</pre>\n<p>To test against specific environment, type:</p>\n<pre>tox -e py38-django30\n</pre>\n<p>To test just your working environment type:</p>\n<pre>./runtests.py\n</pre>\n<p>To run a single test in your working environment type:</p>\n<pre>./runtests.py src/rest_framework_tricks/tests/test_nested_proxy_field.py\n</pre>\n<p>Or:</p>\n<pre>./manage.py <span class=\"nb\">test</span> rest_framework_tricks.tests.test_nested_proxy_field\n</pre>\n<p>It\u2019s assumed that you have all the requirements installed. If not, first\ninstall the test requirements:</p>\n<pre>pip install -r examples/requirements/test.txt\n</pre>\n</div>\n<div id=\"writing-documentation\">\n<h2>Writing documentation</h2>\n<p>Keep the following hierarchy.</p>\n<pre>=====\ntitle\n=====\n\nheader\n======\n\nsub-header\n----------\n\nsub-sub-header\n~~~~~~~~~~~~~~\n\nsub-sub-sub-header\n^^^^^^^^^^^^^^^^^^\n\nsub-sub-sub-sub-header\n++++++++++++++++++++++\n\nsub-sub-sub-sub-sub-header\n**************************\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>GPL-2.0-only OR LGPL-2.1-or-later</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>For any issues contact me at the e-mail given in the <a href=\"#author\" rel=\"nofollow\">Author</a> section.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Artur Barseghyan &lt;<a href=\"mailto:artur.barseghyan%40gmail.com\">artur<span>.</span>barseghyan<span>@</span>gmail<span>.</span>com</a>&gt;</p>\n</div>\n\n          </div>"}, "last_serial": 6363351, "releases": {"0.1.8": [{"comment_text": "", "digests": {"md5": "9848100edc107833335786fb83584615", "sha256": "99f41fbadd68a6319dce78d8ca71a0fbdaaca0f2f5f178ca471892298ad0e76b"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9848100edc107833335786fb83584615", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 16822, "upload_time": "2017-06-30T22:22:32", "upload_time_iso_8601": "2017-06-30T22:22:32.348148Z", "url": "https://files.pythonhosted.org/packages/9b/68/667df6f0cf56db2eeb0b921517d8bda4858a36867245c0ae27fb50f61e7c/django_rest_framework_tricks-0.1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ae4eff37a362500a8dea6c8a38a4293", "sha256": "cac51b239ea13f9421f286f49244ac4598687026fa59d128dd7fda8abe48f407"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.1.8.tar.gz", "has_sig": false, "md5_digest": "9ae4eff37a362500a8dea6c8a38a4293", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29135, "upload_time": "2017-06-30T22:22:30", "upload_time_iso_8601": "2017-06-30T22:22:30.591187Z", "url": "https://files.pythonhosted.org/packages/71/b5/ae85f76ac616fb16de9d5cf6fab518d977a4175014d77cd577c46451b878/django-rest-framework-tricks-0.1.8.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "83629816e12788b06869426d9ac3d586", "sha256": "aff85fca18f6b7871f0a26e6e6db5eeb34a3c1ebc9a2e0cbfda879b334f603c9"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83629816e12788b06869426d9ac3d586", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19544, "upload_time": "2017-07-02T21:56:43", "upload_time_iso_8601": "2017-07-02T21:56:43.881462Z", "url": "https://files.pythonhosted.org/packages/56/a1/1a988b51151580e5863962a7ca8628554c987a3bee23120b1bc366159de9/django_rest_framework_tricks-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "304dd5288c867b0ae6d397e59493d50f", "sha256": "23e965fb89bf280c83885d83adecec4ca59de3eda67372913a0ca0024323a758"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.tar.gz", "has_sig": false, "md5_digest": "304dd5288c867b0ae6d397e59493d50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32344, "upload_time": "2017-07-02T21:56:42", "upload_time_iso_8601": "2017-07-02T21:56:42.405808Z", "url": "https://files.pythonhosted.org/packages/e2/c4/3df3ca88478437c194153b654cd2e578e5018de62d88c3c9c6cedb3826ca/django-rest-framework-tricks-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "afc56aabd80d9ce6512781ffae81d715", "sha256": "2738fc167dc13428a255eb7b449753537ebbde21396fb045c93bb16002648af7"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "afc56aabd80d9ce6512781ffae81d715", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19605, "upload_time": "2017-07-04T00:24:44", "upload_time_iso_8601": "2017-07-04T00:24:44.842300Z", "url": "https://files.pythonhosted.org/packages/4d/2f/8568ad7166af66427afece3cd43f27a233fa75d8fcb4f7b6b579e126db7f/django_rest_framework_tricks-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98f5c83826a3d6863bd43c97ff1927ce", "sha256": "2e17e666945d3b62a40bd85d9bc3696065e27ae3abd6a1b240d39ac9a7c2f230"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.1.tar.gz", "has_sig": false, "md5_digest": "98f5c83826a3d6863bd43c97ff1927ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32410, "upload_time": "2017-07-04T00:24:42", "upload_time_iso_8601": "2017-07-04T00:24:42.989653Z", "url": "https://files.pythonhosted.org/packages/19/0c/cecdcb4e57a9650a964879556792b2333e73c2e2fc7fac2a3de310c63b62/django-rest-framework-tricks-0.2.1.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "61def1f9e5f2bada40c1850c2ffe82f0", "sha256": "2e0b1b46a5b35a770b499d856a74829410822328da2f04fd19907a7d37adfc2d"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61def1f9e5f2bada40c1850c2ffe82f0", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 36069, "upload_time": "2019-04-11T09:38:49", "upload_time_iso_8601": "2019-04-11T09:38:49.882531Z", "url": "https://files.pythonhosted.org/packages/1b/75/60fe8f397df96f11727cc30055832e1b4640d94454cedff30f5de6965303/django_rest_framework_tricks-0.2.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50093b25285c62b8093c01e938a4482e", "sha256": "c85cb3ce55cc2216c80ae1e7153f3534decbaa333e553a41e7c373331be37513"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.10.tar.gz", "has_sig": false, "md5_digest": "50093b25285c62b8093c01e938a4482e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37453, "upload_time": "2019-04-11T09:38:47", "upload_time_iso_8601": "2019-04-11T09:38:47.712227Z", "url": "https://files.pythonhosted.org/packages/03/4d/292a706fb457281479b0df943d0338f70c1c097fe5ec9266754e5a065f39/django-rest-framework-tricks-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "30270447d73d367d34885c53a40c3751", "sha256": "3ca473bc965060de589b03d1382e0036e6ff5f3edc9a2c371c1e863da54b0f61"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "30270447d73d367d34885c53a40c3751", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 36504, "upload_time": "2019-12-27T00:35:07", "upload_time_iso_8601": "2019-12-27T00:35:07.064216Z", "url": "https://files.pythonhosted.org/packages/79/ca/86a566184abec1548455234f986c27ebedbc47ab02db758e17522a94074b/django_rest_framework_tricks-0.2.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0282533547dfe4e365064ad2af9e0050", "sha256": "43117f49c91bc64607475b8ffc76cf03f78a3c735fc67252b27cda2ae7224bc5"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.11.tar.gz", "has_sig": false, "md5_digest": "0282533547dfe4e365064ad2af9e0050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55375, "upload_time": "2019-12-27T00:35:04", "upload_time_iso_8601": "2019-12-27T00:35:04.477614Z", "url": "https://files.pythonhosted.org/packages/3f/37/b639b781fe3758471b62b4fcff7d2de06d34bdcfae3e956c1a6ae00e220b/django-rest-framework-tricks-0.2.11.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "3368aaa63e505be960ea281c8f54ad23", "sha256": "10260f862e9f321aa2a53c44923a194df77303dc808a4b664626717cbe5db786"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3368aaa63e505be960ea281c8f54ad23", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19842, "upload_time": "2017-07-04T20:33:11", "upload_time_iso_8601": "2017-07-04T20:33:11.093800Z", "url": "https://files.pythonhosted.org/packages/67/c5/f89041709d855eb41b4be282f6242eef37bc84bdf9c036481190b3a5aa78/django_rest_framework_tricks-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "517f39255ecf78ab3880d454d35ca62f", "sha256": "621d6fa9fb7870c696b5d69c308cc70b2854531f9b2072c9677b73225d6586f4"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.2.tar.gz", "has_sig": false, "md5_digest": "517f39255ecf78ab3880d454d35ca62f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32662, "upload_time": "2017-07-04T20:33:09", "upload_time_iso_8601": "2017-07-04T20:33:09.087581Z", "url": "https://files.pythonhosted.org/packages/eb/6f/ad8cf3aacbb9ebe69886cb02fff1fd8a8ddce575929998e15c6189e243d2/django-rest-framework-tricks-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "bcdf51f9cec35d93ddc3ede2a64bf533", "sha256": "8c46d08303c50d5b272dc16d9c9dd9f7f1ee55d3707013035c6438c33c83ecbf"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bcdf51f9cec35d93ddc3ede2a64bf533", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 20469, "upload_time": "2017-07-13T19:18:08", "upload_time_iso_8601": "2017-07-13T19:18:08.560084Z", "url": "https://files.pythonhosted.org/packages/1d/71/24ff27e6a5eedd1dbe87566b994f8e5bbc2d9dc6e8a5f811da47ab2d55f9/django_rest_framework_tricks-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec88cbf24e2d4cf83a6b2d6d122a8f8a", "sha256": "0243e7277f961059974e0a1946da8328c6f10f6685847db366434068361a5151"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ec88cbf24e2d4cf83a6b2d6d122a8f8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33304, "upload_time": "2017-07-13T19:18:04", "upload_time_iso_8601": "2017-07-13T19:18:04.934345Z", "url": "https://files.pythonhosted.org/packages/6d/43/923673a697f63bfc9b7646b3621f8d230b4ca6b899f96f0c84261c579680/django-rest-framework-tricks-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "46213edce7ec102ce94e0030decf08c3", "sha256": "f259c083955146fa0ba9e0506a5c256e928830af4fd13146e49e1a5a05129c79"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46213edce7ec102ce94e0030decf08c3", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 20707, "upload_time": "2017-07-14T20:26:16", "upload_time_iso_8601": "2017-07-14T20:26:16.131216Z", "url": "https://files.pythonhosted.org/packages/fa/6d/9f42b74dc3b23a2ff81c6b08668e7b7882ad01d7f92282c2c363565cf25c/django_rest_framework_tricks-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "672675322ac71263ab3399ee35b602c3", "sha256": "31e6e53258008c7da21523214977f5af88b98aab19a1892c2a6131d150f50249"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.4.tar.gz", "has_sig": false, "md5_digest": "672675322ac71263ab3399ee35b602c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33580, "upload_time": "2017-07-14T20:26:14", "upload_time_iso_8601": "2017-07-14T20:26:14.531872Z", "url": "https://files.pythonhosted.org/packages/48/af/a0d767d8979ab32a46abfd04b3a332b476373d5f46527aa37e228178fa1d/django-rest-framework-tricks-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "f3eee8dec32bad9324037155ed861ddb", "sha256": "7705fa2dd24489569af36f526be8dc14fd6f438649fee22ebcd34035e91de677"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f3eee8dec32bad9324037155ed861ddb", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 20807, "upload_time": "2017-12-30T20:55:09", "upload_time_iso_8601": "2017-12-30T20:55:09.476577Z", "url": "https://files.pythonhosted.org/packages/8e/7d/644aa1ee3909e3a424a0937567fa242fd579903dca9849e5ca4fb3937d30/django_rest_framework_tricks-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "196e72d5dc441f66bdc3ca183c232514", "sha256": "29ee6b065bfa7ff22ee525bc6d6f5160ebc0c87d5194a0e7a161b76b723a8124"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.5.tar.gz", "has_sig": false, "md5_digest": "196e72d5dc441f66bdc3ca183c232514", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29815, "upload_time": "2017-12-30T20:55:06", "upload_time_iso_8601": "2017-12-30T20:55:06.010248Z", "url": "https://files.pythonhosted.org/packages/e2/34/95809bd737ead244aa1b723f826e0878568eb72e6de78b7f33cd94032a44/django-rest-framework-tricks-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "646bf0910c5d1b1f97fcb29533ec96f2", "sha256": "8fe2dad131815f68dcad345c06560cd2cebd52c0661175c619a5a210a488f1c8"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "646bf0910c5d1b1f97fcb29533ec96f2", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 24474, "upload_time": "2018-01-28T00:39:11", "upload_time_iso_8601": "2018-01-28T00:39:11.497959Z", "url": "https://files.pythonhosted.org/packages/cc/fb/c9c7d39cdd21d2c77e44bf662ceb248b8b5da5b3257674dee5e07aa9fc5f/django_rest_framework_tricks-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b3acfd40e8c2e143b7259084a028047", "sha256": "77e9c49fbfd627b1df6f0b50afbab8f63f7d7fdfaff192e6184579b5e81689d2"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.6.tar.gz", "has_sig": false, "md5_digest": "0b3acfd40e8c2e143b7259084a028047", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32366, "upload_time": "2018-01-28T00:39:09", "upload_time_iso_8601": "2018-01-28T00:39:09.537009Z", "url": "https://files.pythonhosted.org/packages/ca/f4/16d294fbed9dcba358f4d53f790c59499a87b4ace7b01d57e0123485fb58/django-rest-framework-tricks-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "1c0eb8aecec82ac3f371b1fcea4267c6", "sha256": "473977b309ef816d5ed030b941bcfde817e4832c6830fd738a018dfb53e0b90b"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c0eb8aecec82ac3f371b1fcea4267c6", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 24488, "upload_time": "2018-01-28T00:58:02", "upload_time_iso_8601": "2018-01-28T00:58:02.299829Z", "url": "https://files.pythonhosted.org/packages/1a/02/bee6e309558c5619f58050885133082cc3e9d7931e0600e587cf61bee977/django_rest_framework_tricks-0.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a9fd1a0dc8a890081dbb3c741599a80", "sha256": "d1cf3c16a0ed3bcf74c2231386446d9b6e0265be522a0f11d96f33ab27d57e84"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.7.tar.gz", "has_sig": false, "md5_digest": "6a9fd1a0dc8a890081dbb3c741599a80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32402, "upload_time": "2018-01-28T00:57:59", "upload_time_iso_8601": "2018-01-28T00:57:59.965509Z", "url": "https://files.pythonhosted.org/packages/94/29/194b6a83157b6c69134a56c3577b3262d07ea67eef819f6c00377b8523de/django-rest-framework-tricks-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "0f5469c8d59b5b089a435a09756d9fd9", "sha256": "7368f7c3f06683bec9847d7e5521357b0a7021da54e7e4feeaa0d721c4babe63"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f5469c8d59b5b089a435a09756d9fd9", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 24707, "upload_time": "2018-01-31T21:03:42", "upload_time_iso_8601": "2018-01-31T21:03:42.108116Z", "url": "https://files.pythonhosted.org/packages/04/1a/2330f9f4b0bd6d2e5114af64f9870dfe5b398690cd218464f2df50c4dbf5/django_rest_framework_tricks-0.2.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27f5dc28c10cafb1c0d59e3700c15848", "sha256": "984921095b667b3766c42de2da58eb0a67f295a754f5d28170becaf7f1d8abf1"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.8.tar.gz", "has_sig": false, "md5_digest": "27f5dc28c10cafb1c0d59e3700c15848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32643, "upload_time": "2018-01-31T21:03:40", "upload_time_iso_8601": "2018-01-31T21:03:40.074791Z", "url": "https://files.pythonhosted.org/packages/78/e7/db428180894ccce425b70b9bdd417c0f7b4f7d9e0206c7f8132bf2c1ab1a/django-rest-framework-tricks-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "c09658e6ffa66a0aa99ec3da0844c21a", "sha256": "eedfc4a2618e6b10b46ee03f7719f91d40a9ac7246357179586d894b38de236e"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c09658e6ffa66a0aa99ec3da0844c21a", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 25092, "upload_time": "2018-02-02T22:23:29", "upload_time_iso_8601": "2018-02-02T22:23:29.126511Z", "url": "https://files.pythonhosted.org/packages/65/3b/6246a3b5b5f58dfb0fefc1121310c5af47f8c166168246f0668d0aa49f94/django_rest_framework_tricks-0.2.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93361d074da6c145b779bb2ab116fcf0", "sha256": "0f3447f3bcc28efc829111d5ed101fa3f247f8ddb0c61639e78e0dd705061c3b"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.9.tar.gz", "has_sig": false, "md5_digest": "93361d074da6c145b779bb2ab116fcf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33052, "upload_time": "2018-02-02T22:23:25", "upload_time_iso_8601": "2018-02-02T22:23:25.422361Z", "url": "https://files.pythonhosted.org/packages/20/a5/9a7bf67aaf5f40fcbd6d373f664ae4acaa553494e29b0d46296743b458d6/django-rest-framework-tricks-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30270447d73d367d34885c53a40c3751", "sha256": "3ca473bc965060de589b03d1382e0036e6ff5f3edc9a2c371c1e863da54b0f61"}, "downloads": -1, "filename": "django_rest_framework_tricks-0.2.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "30270447d73d367d34885c53a40c3751", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 36504, "upload_time": "2019-12-27T00:35:07", "upload_time_iso_8601": "2019-12-27T00:35:07.064216Z", "url": "https://files.pythonhosted.org/packages/79/ca/86a566184abec1548455234f986c27ebedbc47ab02db758e17522a94074b/django_rest_framework_tricks-0.2.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0282533547dfe4e365064ad2af9e0050", "sha256": "43117f49c91bc64607475b8ffc76cf03f78a3c735fc67252b27cda2ae7224bc5"}, "downloads": -1, "filename": "django-rest-framework-tricks-0.2.11.tar.gz", "has_sig": false, "md5_digest": "0282533547dfe4e365064ad2af9e0050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55375, "upload_time": "2019-12-27T00:35:04", "upload_time_iso_8601": "2019-12-27T00:35:04.477614Z", "url": "https://files.pythonhosted.org/packages/3f/37/b639b781fe3758471b62b4fcff7d2de06d34bdcfae3e956c1a6ae00e220b/django-rest-framework-tricks-0.2.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:03 2020"}