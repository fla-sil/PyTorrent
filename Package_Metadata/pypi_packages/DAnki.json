{"info": {"author": "Diego Leivas", "author_email": "dileivas@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# DAnki: Automate deck creation for Anki to learn german\n\n`DAnki` automate the work of creating decks for Anki to learn german. From the export of your Kindle's notes\nor a csv file, DAnki can generate cards with the translation of the word for 8 different languages including\nthe german pronunciation sound.\n\n*This library and its author(s) are not affiliated/associated with the main Anki project in any way.*\n\nIt was created for my german students to develop their vocabular. Using Kindle you can just highlight the\ngerman words or expressions you want to practice, export these notes to your email and use the csv file\nwith this program. It also create tags for Anki with the page number.\n\n*Note:* Your Kindle's language must be in *portuguese* or *english* .\n\n## How to use\n\nHere is an exemple using a csv file from kindle.\n\n```python\nlanguage = 'en'\ncsv_filepath = r'csv_exemple_files/sherlock_highlights_from_kindle_english.csv'\ndeck_name = 'sherlock_en'\nfrom_kindle = True\n\nmyDanki = DAnki(language, csv_filepath, deck_name, from_kindle)\nmyDanki.create_translated_deck()\n```\n\nHere is an exemple using a csv file with only 2 columns: German Word and Tag.\n\n```python\nlanguage = 'ch'\ncsv_filepath = r'csv_exemple_files/not_from_kindle.csv'\ndeck_name = 'not_from_kindle'\nfrom_kindle = False\n\nmyDanki = DAnki(language, csv_filepath, deck_name, from_kindle)\nmyDanki.create_translated_deck()\n```\n\n*You can find the csv exemple files [HERE](https://github.com/dileivas/DAnki/tree/master/csv_exemple_files).*\n\n## Available languages\n\nDAnki uses [leo.org](leo.org) to find a translation from german, so the available languages are:\n\n('pt' - portuguese) ('en' - english) ('fr' - french) ('es' - spanich) \n('it' - italian) ('ch' - chinese) ('ru' - russian) ('pl' - polish)\n\n## Must\n\nYou must add 'de_DE_frami.dic' and 'de_DE_frami.aff' files in \n`C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\enchant\\data\\mingw64\\share\\enchant\\hunspell`\n\nDictionary link:  https://extensions.openoffice.org/en/project/german-de-de-frami-dictionaries\n\nFor more information: https://pyenchant.github.io/pyenchant/tutorial.html\n\n## Credits\n\nMy thanks to:\n\n[genanki](https://github.com/kerrickstaley/genanki)\n\n[HanTa](https://github.com/wartaal/HanTa) - I don't use this library, but allowed me to understand lemmatization.\n\n[Vorverarbeitung von Texten mit Python und NLTK](http://textmining.wp.hs-hannover.de/Preprocessing.html)\n\n[treetaggerwrapper](https://treetaggerwrapper.readthedocs.io/en/)\n\n[gTTS](https://github.com/pndurette/gTTS)\n\n[LEO GmbH](leo.org)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dileivas/DAnki", "keywords": "anki,flashcards,memorization,german,deutsch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "DAnki", "package_url": "https://pypi.org/project/DAnki/", "platform": "", "project_url": "https://pypi.org/project/DAnki/", "project_urls": {"Homepage": "https://github.com/dileivas/DAnki"}, "release_url": "https://pypi.org/project/DAnki/1.0.1/", "requires_dist": ["pandas", "googletrans", "pyenchant", "requests", "bs4", "treetaggerwrapper", "gtts", "genanki"], "requires_python": "", "summary": "Automate deck creation for Anki to learn german", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DAnki: Automate deck creation for Anki to learn german</h1>\n<p><code>DAnki</code> automate the work of creating decks for Anki to learn german. From the export of your Kindle's notes\nor a csv file, DAnki can generate cards with the translation of the word for 8 different languages including\nthe german pronunciation sound.</p>\n<p><em>This library and its author(s) are not affiliated/associated with the main Anki project in any way.</em></p>\n<p>It was created for my german students to develop their vocabular. Using Kindle you can just highlight the\ngerman words or expressions you want to practice, export these notes to your email and use the csv file\nwith this program. It also create tags for Anki with the page number.</p>\n<p><em>Note:</em> Your Kindle's language must be in <em>portuguese</em> or <em>english</em> .</p>\n<h2>How to use</h2>\n<p>Here is an exemple using a csv file from kindle.</p>\n<pre><span class=\"n\">language</span> <span class=\"o\">=</span> <span class=\"s1\">'en'</span>\n<span class=\"n\">csv_filepath</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">'csv_exemple_files/sherlock_highlights_from_kindle_english.csv'</span>\n<span class=\"n\">deck_name</span> <span class=\"o\">=</span> <span class=\"s1\">'sherlock_en'</span>\n<span class=\"n\">from_kindle</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<span class=\"n\">myDanki</span> <span class=\"o\">=</span> <span class=\"n\">DAnki</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"p\">,</span> <span class=\"n\">csv_filepath</span><span class=\"p\">,</span> <span class=\"n\">deck_name</span><span class=\"p\">,</span> <span class=\"n\">from_kindle</span><span class=\"p\">)</span>\n<span class=\"n\">myDanki</span><span class=\"o\">.</span><span class=\"n\">create_translated_deck</span><span class=\"p\">()</span>\n</pre>\n<p>Here is an exemple using a csv file with only 2 columns: German Word and Tag.</p>\n<pre><span class=\"n\">language</span> <span class=\"o\">=</span> <span class=\"s1\">'ch'</span>\n<span class=\"n\">csv_filepath</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">'csv_exemple_files/not_from_kindle.csv'</span>\n<span class=\"n\">deck_name</span> <span class=\"o\">=</span> <span class=\"s1\">'not_from_kindle'</span>\n<span class=\"n\">from_kindle</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">myDanki</span> <span class=\"o\">=</span> <span class=\"n\">DAnki</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"p\">,</span> <span class=\"n\">csv_filepath</span><span class=\"p\">,</span> <span class=\"n\">deck_name</span><span class=\"p\">,</span> <span class=\"n\">from_kindle</span><span class=\"p\">)</span>\n<span class=\"n\">myDanki</span><span class=\"o\">.</span><span class=\"n\">create_translated_deck</span><span class=\"p\">()</span>\n</pre>\n<p><em>You can find the csv exemple files <a href=\"https://github.com/dileivas/DAnki/tree/master/csv_exemple_files\" rel=\"nofollow\">HERE</a>.</em></p>\n<h2>Available languages</h2>\n<p>DAnki uses <a href=\"leo.org\" rel=\"nofollow\">leo.org</a> to find a translation from german, so the available languages are:</p>\n<p>('pt' - portuguese) ('en' - english) ('fr' - french) ('es' - spanich)\n('it' - italian) ('ch' - chinese) ('ru' - russian) ('pl' - polish)</p>\n<h2>Must</h2>\n<p>You must add 'de_DE_frami.dic' and 'de_DE_frami.aff' files in\n<code>C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\enchant\\data\\mingw64\\share\\enchant\\hunspell</code></p>\n<p>Dictionary link:  <a href=\"https://extensions.openoffice.org/en/project/german-de-de-frami-dictionaries\" rel=\"nofollow\">https://extensions.openoffice.org/en/project/german-de-de-frami-dictionaries</a></p>\n<p>For more information: <a href=\"https://pyenchant.github.io/pyenchant/tutorial.html\" rel=\"nofollow\">https://pyenchant.github.io/pyenchant/tutorial.html</a></p>\n<h2>Credits</h2>\n<p>My thanks to:</p>\n<p><a href=\"https://github.com/kerrickstaley/genanki\" rel=\"nofollow\">genanki</a></p>\n<p><a href=\"https://github.com/wartaal/HanTa\" rel=\"nofollow\">HanTa</a> - I don't use this library, but allowed me to understand lemmatization.</p>\n<p><a href=\"http://textmining.wp.hs-hannover.de/Preprocessing.html\" rel=\"nofollow\">Vorverarbeitung von Texten mit Python und NLTK</a></p>\n<p><a href=\"https://treetaggerwrapper.readthedocs.io/en/\" rel=\"nofollow\">treetaggerwrapper</a></p>\n<p><a href=\"https://github.com/pndurette/gTTS\" rel=\"nofollow\">gTTS</a></p>\n<p><a href=\"leo.org\" rel=\"nofollow\">LEO GmbH</a></p>\n\n          </div>"}, "last_serial": 7127057, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "610a4cb3ce28e5f1b63d177f9ee38b58", "sha256": "1654a6382aecd779d621d6dacebb56a0cfde44a302ac97669884849c0505aa1d"}, "downloads": -1, "filename": "DAnki-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "610a4cb3ce28e5f1b63d177f9ee38b58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8187, "upload_time": "2020-04-29T08:36:18", "upload_time_iso_8601": "2020-04-29T08:36:18.007300Z", "url": "https://files.pythonhosted.org/packages/27/45/de3e0dfdda18bfbf0a4e8bc0b22ff547277d81e27b7946a2a042d4708a90/DAnki-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08fcfb6ed22aa47dd6bd847d7bff6b8c", "sha256": "86a502fbfc4e92e99b23c1d253423a3063dce2c1f42fce5e8b0ccc434574149d"}, "downloads": -1, "filename": "DAnki-1.0.1.tar.gz", "has_sig": false, "md5_digest": "08fcfb6ed22aa47dd6bd847d7bff6b8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7087, "upload_time": "2020-04-29T08:36:19", "upload_time_iso_8601": "2020-04-29T08:36:19.038513Z", "url": "https://files.pythonhosted.org/packages/92/5e/828ba991a720939babcaf6f618370c6dfa982659d3b3918179d6b9000e07/DAnki-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "610a4cb3ce28e5f1b63d177f9ee38b58", "sha256": "1654a6382aecd779d621d6dacebb56a0cfde44a302ac97669884849c0505aa1d"}, "downloads": -1, "filename": "DAnki-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "610a4cb3ce28e5f1b63d177f9ee38b58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8187, "upload_time": "2020-04-29T08:36:18", "upload_time_iso_8601": "2020-04-29T08:36:18.007300Z", "url": "https://files.pythonhosted.org/packages/27/45/de3e0dfdda18bfbf0a4e8bc0b22ff547277d81e27b7946a2a042d4708a90/DAnki-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08fcfb6ed22aa47dd6bd847d7bff6b8c", "sha256": "86a502fbfc4e92e99b23c1d253423a3063dce2c1f42fce5e8b0ccc434574149d"}, "downloads": -1, "filename": "DAnki-1.0.1.tar.gz", "has_sig": false, "md5_digest": "08fcfb6ed22aa47dd6bd847d7bff6b8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7087, "upload_time": "2020-04-29T08:36:19", "upload_time_iso_8601": "2020-04-29T08:36:19.038513Z", "url": "https://files.pythonhosted.org/packages/92/5e/828ba991a720939babcaf6f618370c6dfa982659d3b3918179d6b9000e07/DAnki-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:43 2020"}