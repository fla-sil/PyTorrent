{"info": {"author": "Maverick", "author_email": "maverickjet@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "# YahooFinanceDataLoader\n\nYahooFinanceDataLoader allows to download historical quotes data in bulk\nfrom the YahooFinance website. The downloaded data is in csv format.\n\n## API\n\n#### Implemented methods:  \n- download_bulk_data  \n- get_assets_from_csv\n\n\n**download_bulk_data** ( assetsList, start_date, end_date, interval, data_directory, maxNThreads=20, nTrials=3 )\n\nMethod description: downloads stocks historical data from YahooFinance in csv format.\n\n**Return Value**: a list of symbols for which download has failed\n\n###### Parameters:\n- assetsList - list of assets, for example ['AAPL', 'MSFT', 'NVDA']\n- start_date - start date for your download ('yyyy-mm-dd'), for example '2019-01-01'\n- end_date - end date for your download ('yyyy-mm-dd'), for example '2019-01-31'\n- interval - download interval, '1d' for daily, '1wk' for weekly, '1mo'\n- data_directory - directory location to save downloaded data\n\n###### Optional parameters:\n- maxNThreads - maximum number of threads to use for data download, \n\t\tthe default value is 20.\n- nTrials - number of trials to be used for download, the default\n\t\tvalue is 3. Explanation: due to connectivity issues your download may fail, \n\t\tand it is worth trying to re-send your download request.\n\n###### Example:\n\n```python\nfrom YahooFinanceDataLoader import download_bulk_data\n\nassetsList = ['AAPL', 'ADBE', 'AMZN', 'CSCO', 'FB', 'GOOGL', 'FAKE'] \nstart_date = '2018-01-01'\nend_date = '2018-01-31'\ninterval = '1d'\ndata_directory = '/home/user_name/stock_price_data'\nmaxNThreads = 20\nnTrials = 3\n\nfailed_downloads = download_bulk_data(assetsList, start_date, end_date, interval, \n\t\t\t\t\tdata_directory, maxNThreads, nTrials)\nprint('Failed downloads: ', failed_downloads)\n```\n\n**get_assets_from_csv** ( csv_file, field_list = ['Symbol', 'Company'] )\n\n\nMethod description: reads assets from the csv file and returns a list of assets.\n\tcsv file has to have a header, and the column containing stock symbols has\n\tto be named 'Symbol'\n\n**Return Value**: a list of asset symbols read from the csv file\n\n###### Parameters:\n- csv_file - path to the csv file containing assets data\n\n###### Optional parameters:\n- field_list - a list containing csv file header names, \n      for example ['Symbol', 'Company']\n\n###### Example:\n\n```python\nfrom YahooFinanceDataLoader import download_bulk_data\n\nassetsList = get_assets_from_csv('/home/user_name/assets.csv', ['Symbol', 'Company'])\nstart_date = '2018-01-01'\nend_date = '2018-01-31'\ninterval = '1d'\ndata_directory = '/home/user_name/stock_price_data'\nmaxNThreads = 20\nnTrials = 3\n\nfailed_downloads = download_bulk_data(assetsList, start_date, end_date, interval, \n\t\t\t\t\tdata_directory, maxNThreads, nTrials)\nprint('Failed downloads: ', failed_downloads)\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alv2017/Python---YahooFinanceDataLoader", "keywords": "Yahoo Finance stock price csv", "license": "", "maintainer": "", "maintainer_email": "", "name": "YahooFinanceDataLoader", "package_url": "https://pypi.org/project/YahooFinanceDataLoader/", "platform": "", "project_url": "https://pypi.org/project/YahooFinanceDataLoader/", "project_urls": {"Homepage": "https://github.com/alv2017/Python---YahooFinanceDataLoader"}, "release_url": "https://pypi.org/project/YahooFinanceDataLoader/0.1.0/", "requires_dist": ["requests (~=2.20.00)"], "requires_python": "~=3.6", "summary": "Allows to download YahooFinance stock data to your local disk.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>YahooFinanceDataLoader</h1>\n<p>YahooFinanceDataLoader allows to download historical quotes data in bulk\nfrom the YahooFinance website. The downloaded data is in csv format.</p>\n<h2>API</h2>\n<h4>Implemented methods:</h4>\n<ul>\n<li>download_bulk_data</li>\n<li>get_assets_from_csv</li>\n</ul>\n<p><strong>download_bulk_data</strong> ( assetsList, start_date, end_date, interval, data_directory, maxNThreads=20, nTrials=3 )</p>\n<p>Method description: downloads stocks historical data from YahooFinance in csv format.</p>\n<p><strong>Return Value</strong>: a list of symbols for which download has failed</p>\n<h6>Parameters:</h6>\n<ul>\n<li>assetsList - list of assets, for example ['AAPL', 'MSFT', 'NVDA']</li>\n<li>start_date - start date for your download ('yyyy-mm-dd'), for example '2019-01-01'</li>\n<li>end_date - end date for your download ('yyyy-mm-dd'), for example '2019-01-31'</li>\n<li>interval - download interval, '1d' for daily, '1wk' for weekly, '1mo'</li>\n<li>data_directory - directory location to save downloaded data</li>\n</ul>\n<h6>Optional parameters:</h6>\n<ul>\n<li>maxNThreads - maximum number of threads to use for data download,\nthe default value is 20.</li>\n<li>nTrials - number of trials to be used for download, the default\nvalue is 3. Explanation: due to connectivity issues your download may fail,\nand it is worth trying to re-send your download request.</li>\n</ul>\n<h6>Example:</h6>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">YahooFinanceDataLoader</span> <span class=\"kn\">import</span> <span class=\"n\">download_bulk_data</span>\n\n<span class=\"n\">assetsList</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'AAPL'</span><span class=\"p\">,</span> <span class=\"s1\">'ADBE'</span><span class=\"p\">,</span> <span class=\"s1\">'AMZN'</span><span class=\"p\">,</span> <span class=\"s1\">'CSCO'</span><span class=\"p\">,</span> <span class=\"s1\">'FB'</span><span class=\"p\">,</span> <span class=\"s1\">'GOOGL'</span><span class=\"p\">,</span> <span class=\"s1\">'FAKE'</span><span class=\"p\">]</span> \n<span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"s1\">'2018-01-01'</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"s1\">'2018-01-31'</span>\n<span class=\"n\">interval</span> <span class=\"o\">=</span> <span class=\"s1\">'1d'</span>\n<span class=\"n\">data_directory</span> <span class=\"o\">=</span> <span class=\"s1\">'/home/user_name/stock_price_data'</span>\n<span class=\"n\">maxNThreads</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n<span class=\"n\">nTrials</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">failed_downloads</span> <span class=\"o\">=</span> <span class=\"n\">download_bulk_data</span><span class=\"p\">(</span><span class=\"n\">assetsList</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"p\">,</span> \n\t\t\t\t\t<span class=\"n\">data_directory</span><span class=\"p\">,</span> <span class=\"n\">maxNThreads</span><span class=\"p\">,</span> <span class=\"n\">nTrials</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Failed downloads: '</span><span class=\"p\">,</span> <span class=\"n\">failed_downloads</span><span class=\"p\">)</span>\n</pre>\n<p><strong>get_assets_from_csv</strong> ( csv_file, field_list = ['Symbol', 'Company'] )</p>\n<p>Method description: reads assets from the csv file and returns a list of assets.\ncsv file has to have a header, and the column containing stock symbols has\nto be named 'Symbol'</p>\n<p><strong>Return Value</strong>: a list of asset symbols read from the csv file</p>\n<h6>Parameters:</h6>\n<ul>\n<li>csv_file - path to the csv file containing assets data</li>\n</ul>\n<h6>Optional parameters:</h6>\n<ul>\n<li>field_list - a list containing csv file header names,\nfor example ['Symbol', 'Company']</li>\n</ul>\n<h6>Example:</h6>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">YahooFinanceDataLoader</span> <span class=\"kn\">import</span> <span class=\"n\">download_bulk_data</span>\n\n<span class=\"n\">assetsList</span> <span class=\"o\">=</span> <span class=\"n\">get_assets_from_csv</span><span class=\"p\">(</span><span class=\"s1\">'/home/user_name/assets.csv'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'Symbol'</span><span class=\"p\">,</span> <span class=\"s1\">'Company'</span><span class=\"p\">])</span>\n<span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"s1\">'2018-01-01'</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"s1\">'2018-01-31'</span>\n<span class=\"n\">interval</span> <span class=\"o\">=</span> <span class=\"s1\">'1d'</span>\n<span class=\"n\">data_directory</span> <span class=\"o\">=</span> <span class=\"s1\">'/home/user_name/stock_price_data'</span>\n<span class=\"n\">maxNThreads</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n<span class=\"n\">nTrials</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">failed_downloads</span> <span class=\"o\">=</span> <span class=\"n\">download_bulk_data</span><span class=\"p\">(</span><span class=\"n\">assetsList</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"p\">,</span> \n\t\t\t\t\t<span class=\"n\">data_directory</span><span class=\"p\">,</span> <span class=\"n\">maxNThreads</span><span class=\"p\">,</span> <span class=\"n\">nTrials</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Failed downloads: '</span><span class=\"p\">,</span> <span class=\"n\">failed_downloads</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5896756, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b1ab64a452cd14218d2e961080d8e483", "sha256": "fa890d06d21ac2dcc6666368f7212d2503514e75ed7b30cb1f8f937449cbfff3"}, "downloads": -1, "filename": "YahooFinanceDataLoader-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1ab64a452cd14218d2e961080d8e483", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 15621, "upload_time": "2019-09-27T15:39:59", "upload_time_iso_8601": "2019-09-27T15:39:59.649146Z", "url": "https://files.pythonhosted.org/packages/62/f4/2dc0b686d8f9dbd5cab5e8a1bb6a85a722a30fede141e7cebd4cf8af1c10/YahooFinanceDataLoader-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "351bde9b3d924544908bcd8f58329c96", "sha256": "42551aad86bbe753d72a17f1f3870b7f0bdc77e95868c7e4bcdaf9e32fcdac4d"}, "downloads": -1, "filename": "YahooFinanceDataLoader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "351bde9b3d924544908bcd8f58329c96", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 8865, "upload_time": "2019-09-27T15:40:02", "upload_time_iso_8601": "2019-09-27T15:40:02.569347Z", "url": "https://files.pythonhosted.org/packages/18/3a/7030714b4b094b60e950f5c38107d681e585b76f2019dee126934dadc3c7/YahooFinanceDataLoader-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1ab64a452cd14218d2e961080d8e483", "sha256": "fa890d06d21ac2dcc6666368f7212d2503514e75ed7b30cb1f8f937449cbfff3"}, "downloads": -1, "filename": "YahooFinanceDataLoader-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1ab64a452cd14218d2e961080d8e483", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.6", "size": 15621, "upload_time": "2019-09-27T15:39:59", "upload_time_iso_8601": "2019-09-27T15:39:59.649146Z", "url": "https://files.pythonhosted.org/packages/62/f4/2dc0b686d8f9dbd5cab5e8a1bb6a85a722a30fede141e7cebd4cf8af1c10/YahooFinanceDataLoader-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "351bde9b3d924544908bcd8f58329c96", "sha256": "42551aad86bbe753d72a17f1f3870b7f0bdc77e95868c7e4bcdaf9e32fcdac4d"}, "downloads": -1, "filename": "YahooFinanceDataLoader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "351bde9b3d924544908bcd8f58329c96", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 8865, "upload_time": "2019-09-27T15:40:02", "upload_time_iso_8601": "2019-09-27T15:40:02.569347Z", "url": "https://files.pythonhosted.org/packages/18/3a/7030714b4b094b60e950f5c38107d681e585b76f2019dee126934dadc3c7/YahooFinanceDataLoader-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:36 2020"}