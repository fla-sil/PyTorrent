{"info": {"author": "Daniel Fairhead", "author_email": "danthedeckie@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "HTML5Validate\n========================\n\n.. image:: https://travis-ci.org/danthedeckie/html5validate.svg?branch=master\n   :target: https://travis-ci.org/danthedeckie/html5validate\n   :alt: Build Status\n\n.. image:: https://coveralls.io/repos/github/danthedeckie/html5validate/badge.svg?branch=master\n   :target: https://coveralls.io/r/danthedeckie/html5validate?branch=master\n   :alt: Coverage Status\n\n.. image:: https://badge.fury.io/py/html5validate.svg\n   :target: https://badge.fury.io/py/html5validate\n   :alt: PyPI Version\n\nHTML5 text validation, provided by HTML5lib.  Designed to integrate easily in\ndjango or other web development environments, to ensure templates actually render\nas intented, without dangling tags, or other nonsense.\n\nCurrently just uses HTML5lib's parsing and linting, which is enough for me\nright now - it would be nice to have some more comprehensive checking, and\npossibly even write some valid-attribute checking - although that's a BIG\nproject.\n\nUsage:\n------\n\n.. code-block:: python\n\n   >>> from html5validate import validate\n   >>> validate('<!doctype html><html><body><h1>Hi World!</h1></body></html>')\n   None\n   >>> validate('<!doctype html><html><body><h1>Hi World!</body></html>')\n   Traceback (most recent call last):\n   ...\n   html5lib.html5parser.ParseError: Expected closing tag. Unexpected end of file.\n\n\nSo.  You run 'validate' on some text, and it either returns None, or throws\nsome kind of error at you.\n\nWith Django in tests:\n---------------------\n\n.. code-block:: python\n\n   from django.test import TestCase\n   from html5validate import validate\n\n   class TestIndexViewValid(TestCase):\n      def test_basic_index(self):\n         validate(self.client.get(reverse('index'), follow=True))\n\n\nStatus:\n-------\n\nVery Early - I just pulled this out of some django view testing code in one of\nmy other projects, as it seemed more sensible to have it as a stand-alone\nlibrary that could be unit-tested and stuff, and I can use again easily.\n\nInitial basic tests are here - but it should really have a LOT of tests written.\n\nRoadmap:\n--------\n\n- Write a bunch of tests to see how strict it really is.\n- Write some extra tree walkers and checkers to look for valid tags, and throw\n  some decent exceptions, and have customisability, specify what tags users\n  want, etc.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/danthedeckie/html5validate/tarball/0.0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danthedeckie/html5validate", "keywords": "html5,validation,web,lint", "license": "", "maintainer": "", "maintainer_email": "", "name": "html5validate", "package_url": "https://pypi.org/project/html5validate/", "platform": "", "project_url": "https://pypi.org/project/html5validate/", "project_urls": {"Download": "https://github.com/danthedeckie/html5validate/tarball/0.0.2", "Homepage": "https://github.com/danthedeckie/html5validate"}, "release_url": "https://pypi.org/project/html5validate/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Pure Python Basic HTML validatation library - for CI, django tests, etc.  Based on HTML5lib", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/danthedeckie/html5validate\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86094152193958a84b191afc9f22715c6ad5692e/68747470733a2f2f7472617669732d63692e6f72672f64616e7468656465636b69652f68746d6c3576616c69646174652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/danthedeckie/html5validate?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c9ad8082b1d0b17e6005c3e3c91775e6b226361/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f64616e7468656465636b69652f68746d6c3576616c69646174652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/html5validate\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cda3a4aff543429cac23a6160a669f5b343bd24d/68747470733a2f2f62616467652e667572792e696f2f70792f68746d6c3576616c69646174652e737667\"></a>\n<p>HTML5 text validation, provided by HTML5lib.  Designed to integrate easily in\ndjango or other web development environments, to ensure templates actually render\nas intented, without dangling tags, or other nonsense.</p>\n<p>Currently just uses HTML5lib\u2019s parsing and linting, which is enough for me\nright now - it would be nice to have some more comprehensive checking, and\npossibly even write some valid-attribute checking - although that\u2019s a BIG\nproject.</p>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">html5validate</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s1\">'&lt;!doctype html&gt;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hi World!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;'</span><span class=\"p\">)</span>\n<span class=\"kc\">None</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s1\">'&lt;!doctype html&gt;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hi World!&lt;/body&gt;&lt;/html&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"n\">html5lib</span><span class=\"o\">.</span><span class=\"n\">html5parser</span><span class=\"o\">.</span><span class=\"n\">ParseError</span><span class=\"p\">:</span> <span class=\"n\">Expected</span> <span class=\"n\">closing</span> <span class=\"n\">tag</span><span class=\"o\">.</span> <span class=\"n\">Unexpected</span> <span class=\"n\">end</span> <span class=\"n\">of</span> <span class=\"n\">file</span><span class=\"o\">.</span>\n</pre>\n<p>So.  You run \u2018validate\u2019 on some text, and it either returns None, or throws\nsome kind of error at you.</p>\n</div>\n<div id=\"with-django-in-tests\">\n<h2>With Django in tests:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.test</span> <span class=\"kn\">import</span> <span class=\"n\">TestCase</span>\n<span class=\"kn\">from</span> <span class=\"nn\">html5validate</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestIndexViewValid</span><span class=\"p\">(</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n   <span class=\"k\">def</span> <span class=\"nf\">test_basic_index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n      <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'index'</span><span class=\"p\">),</span> <span class=\"n\">follow</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"status\">\n<h2>Status:</h2>\n<p>Very Early - I just pulled this out of some django view testing code in one of\nmy other projects, as it seemed more sensible to have it as a stand-alone\nlibrary that could be unit-tested and stuff, and I can use again easily.</p>\n<p>Initial basic tests are here - but it should really have a LOT of tests written.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap:</h2>\n<ul>\n<li>Write a bunch of tests to see how strict it really is.</li>\n<li>Write some extra tree walkers and checkers to look for valid tags, and throw\nsome decent exceptions, and have customisability, specify what tags users\nwant, etc.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5577857, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "13e5ccd860b136c04d10d93fef3f3171", "sha256": "a1c5dd3fafdc783f435636d17ed558d06893743645a7c2b54a085812c61a69ff"}, "downloads": -1, "filename": "html5validate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "13e5ccd860b136c04d10d93fef3f3171", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3371, "upload_time": "2019-07-24T14:00:41", "upload_time_iso_8601": "2019-07-24T14:00:41.378417Z", "url": "https://files.pythonhosted.org/packages/be/d7/f3df1503abe95d80e0c6e8e342e837bdead000b91a806f7d1b5ad90b417e/html5validate-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0d1fc741411f9efe7e834ae1b6a8f883", "sha256": "13a2b743f7d5e92c6cb6e5ae440d0eab9d5f9a384c9e9b9a23a0d5a7d8df1519"}, "downloads": -1, "filename": "html5validate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0d1fc741411f9efe7e834ae1b6a8f883", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3470, "upload_time": "2019-07-24T14:23:10", "upload_time_iso_8601": "2019-07-24T14:23:10.136886Z", "url": "https://files.pythonhosted.org/packages/3f/c0/396e5ef2718404e447fe1bef077e4f636cdfaf1e08fc1c4d7853d6683d2f/html5validate-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d1fc741411f9efe7e834ae1b6a8f883", "sha256": "13a2b743f7d5e92c6cb6e5ae440d0eab9d5f9a384c9e9b9a23a0d5a7d8df1519"}, "downloads": -1, "filename": "html5validate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0d1fc741411f9efe7e834ae1b6a8f883", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3470, "upload_time": "2019-07-24T14:23:10", "upload_time_iso_8601": "2019-07-24T14:23:10.136886Z", "url": "https://files.pythonhosted.org/packages/3f/c0/396e5ef2718404e447fe1bef077e4f636cdfaf1e08fc1c4d7853d6683d2f/html5validate-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:17 2020"}