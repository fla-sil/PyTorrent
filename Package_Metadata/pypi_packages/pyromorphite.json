{"info": {"author": "Radu-Andrei Coanda", "author_email": "radu.coanda@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# \u26cfpyromorphite\ud83d\udc8e\nProcess mining in python.\n\n# <a name=\"get_the_source_code\"></a>Get the Source Code\nPyromorphite is actively developed on GitHub, where the code is [always available](https://github.com/xcavation/pyromorphite).\n\nYou can clone the public repository:\n\n```\n$ git clone git://github.com/xcavation/pyromorphite.git \n```\n\nOnce you have a copy of the source, you can embed it in your own Python package, or install it into your site-packages easily:\n\n```\n$ cd requests\n$ pip install .\n```\n\n# Quickstart\nThis is a quick introduction to Pyromorphite. Before proceeding, make sure that Pyromorphite is [installed](#get_the_source_code).\n\n## Import a Log \ud83d\udcdc\nReading in event log files in Pyromorphite is super easy. It supports [XES](http://xes-standard.org/), CSV, and Excel files.\n\n### XES Files\nBegin by importing the Pyromorphite module:\n```python\n>>> import pyromorphite as pm\n```\n\nWe'll try now to get an xes file from a web repository. For [this](https://data.4tu.nl/repository/uuid:c1e9137e-2877-410d-a76a-21ce7f97a239) dataset:\n```python\n>>> log = pm.read_xes(\"https://data.4tu.nl/repository/uuid:c1e9137e-2877-410d-a76a-21ce7f97a239/DATA1\")\n```\n\nSimilarly we would do if we would like to read a local file. Let's assume that under `/path/to/file.xes` lies our file. We can then do:\n```python\n>>> log = pm.read_xes(\"/path/to/file.xes\")\n```\n\n### CSV Files\nAlthough not part of Pyromorphite, reading a csv file can be done with the [pandas]() library.\n\nBegin by import the pandas module:\n```python\n>>> import pandas as pd\n```\n\nWe'll try now to get an xes file from a web repository. For [this](https://data.4tu.nl/repository/uuid:d5ccb355-ca67-480f-8739-289b9b593aaf) dataset:\n```python\n>>> log = pd.read_csv(\"https://data.4tu.nl/repository/uuid:d5ccb355-ca67-480f-8739-289b9b593aaf/DATA\")\n```\n\n## Construct a Bag \ud83c\udf92\nHaving parsed a log into a pandas `DataFrame` we can simply extract the traces of events, with\ntogehter with their frequency in the log.\n\n```python\n>>> bag = pm.as_bag(log)\n```\n\nIf we consider that everybody might use different column names, we can specify the case, timestamp\nand activity columns when creating the bag in the following way:\n\n```python\n>>> bag = pm.as_bag(log, case='CI Name (aff)', time='Actual Start', activity='Change Type')\n```\n\n## Does this Trace Conform to the Event Log?\nFor this task we are going to use a model called [Log Skeleton](https://arxiv.org/abs/1806.08247). \n\n```python\n>>> bag = pm.as_bag(pm.read_xes(os.path.join(\"B1.xes\")))\n>>> traces = [(\"a1\", \"a4\", \"a5\", \"a7\")]\n>>> pred = pm.skeleton.classify(bag, traces)\n>>> [False]\n```\n\n**NOTE**: Log `B1.xes` is equal to the multiset <img src=\"https://render.githubusercontent.com/render/math?math=L_1\"/> that can be found [here](https://arxiv.org/abs/1806.08247).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pyromorphite.readthedocs.io", "keywords": "", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "pyromorphite", "package_url": "https://pypi.org/project/pyromorphite/", "platform": "", "project_url": "https://pypi.org/project/pyromorphite/", "project_urls": {"Documentation": "https://pyromorphite.readthedocs.io", "Homepage": "https://pyromorphite.readthedocs.io", "Source": "https://github.com/xcavation/pyromorphite"}, "release_url": "https://pypi.org/project/pyromorphite/0.0.3/", "requires_dist": ["pandas (==0.25.3)", "lxml (==4.4.2networkx==2.4.0)"], "requires_python": ">=3.5", "summary": "A simple and efficient tool for process mining.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\u26cfpyromorphite\ud83d\udc8e</h1>\n<p>Process mining in python.</p>\n<h1><a></a>Get the Source Code</h1>\n<p>Pyromorphite is actively developed on GitHub, where the code is <a href=\"https://github.com/xcavation/pyromorphite\" rel=\"nofollow\">always available</a>.</p>\n<p>You can clone the public repository:</p>\n<pre><code>$ git clone git://github.com/xcavation/pyromorphite.git \n</code></pre>\n<p>Once you have a copy of the source, you can embed it in your own Python package, or install it into your site-packages easily:</p>\n<pre><code>$ cd requests\n$ pip install .\n</code></pre>\n<h1>Quickstart</h1>\n<p>This is a quick introduction to Pyromorphite. Before proceeding, make sure that Pyromorphite is <a href=\"#get_the_source_code\" rel=\"nofollow\">installed</a>.</p>\n<h2>Import a Log \ud83d\udcdc</h2>\n<p>Reading in event log files in Pyromorphite is super easy. It supports <a href=\"http://xes-standard.org/\" rel=\"nofollow\">XES</a>, CSV, and Excel files.</p>\n<h3>XES Files</h3>\n<p>Begin by importing the Pyromorphite module:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pyromorphite</span> <span class=\"k\">as</span> <span class=\"nn\">pm</span>\n</pre>\n<p>We'll try now to get an xes file from a web repository. For <a href=\"https://data.4tu.nl/repository/uuid:c1e9137e-2877-410d-a76a-21ce7f97a239\" rel=\"nofollow\">this</a> dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">read_xes</span><span class=\"p\">(</span><span class=\"s2\">\"https://data.4tu.nl/repository/uuid:c1e9137e-2877-410d-a76a-21ce7f97a239/DATA1\"</span><span class=\"p\">)</span>\n</pre>\n<p>Similarly we would do if we would like to read a local file. Let's assume that under <code>/path/to/file.xes</code> lies our file. We can then do:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">read_xes</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/file.xes\"</span><span class=\"p\">)</span>\n</pre>\n<h3>CSV Files</h3>\n<p>Although not part of Pyromorphite, reading a csv file can be done with the <a href=\"\" rel=\"nofollow\">pandas</a> library.</p>\n<p>Begin by import the pandas module:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n</pre>\n<p>We'll try now to get an xes file from a web repository. For <a href=\"https://data.4tu.nl/repository/uuid:d5ccb355-ca67-480f-8739-289b9b593aaf\" rel=\"nofollow\">this</a> dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"https://data.4tu.nl/repository/uuid:d5ccb355-ca67-480f-8739-289b9b593aaf/DATA\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Construct a Bag \ud83c\udf92</h2>\n<p>Having parsed a log into a pandas <code>DataFrame</code> we can simply extract the traces of events, with\ntogehter with their frequency in the log.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bag</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">as_bag</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"p\">)</span>\n</pre>\n<p>If we consider that everybody might use different column names, we can specify the case, timestamp\nand activity columns when creating the bag in the following way:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bag</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">as_bag</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"p\">,</span> <span class=\"n\">case</span><span class=\"o\">=</span><span class=\"s1\">'CI Name (aff)'</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s1\">'Actual Start'</span><span class=\"p\">,</span> <span class=\"n\">activity</span><span class=\"o\">=</span><span class=\"s1\">'Change Type'</span><span class=\"p\">)</span>\n</pre>\n<h2>Does this Trace Conform to the Event Log?</h2>\n<p>For this task we are going to use a model called <a href=\"https://arxiv.org/abs/1806.08247\" rel=\"nofollow\">Log Skeleton</a>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bag</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">as_bag</span><span class=\"p\">(</span><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">read_xes</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s2\">\"B1.xes\"</span><span class=\"p\">)))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">traces</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"a1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a5\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a7\"</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pred</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">skeleton</span><span class=\"o\">.</span><span class=\"n\">classify</span><span class=\"p\">(</span><span class=\"n\">bag</span><span class=\"p\">,</span> <span class=\"n\">traces</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">]</span>\n</pre>\n<p><strong>NOTE</strong>: Log <code>B1.xes</code> is equal to the multiset <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8228fd490e08eb05be5301cfea8adedac580bce/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d4c5f31\"> that can be found <a href=\"https://arxiv.org/abs/1806.08247\" rel=\"nofollow\">here</a>.</p>\n\n          </div>"}, "last_serial": 6793426, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7fea83668543a4e6da1f47693a32ee2b", "sha256": "a82f6919235ae7d19b14c91c291f12784e57f22957d383ef7e5951f94de28c1d"}, "downloads": -1, "filename": "pyromorphite-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7fea83668543a4e6da1f47693a32ee2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13460, "upload_time": "2020-03-11T16:09:07", "upload_time_iso_8601": "2020-03-11T16:09:07.236221Z", "url": "https://files.pythonhosted.org/packages/3b/d5/efdfe3cfe25e69f1c5dbc5fce3a3cda9e2018e1f7612a430d8ec9bc08295/pyromorphite-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "35d1814120b91408373b8bc91de383a5", "sha256": "aa67195f9fc64789aac16d70d11789b9275a4de27d86d66b5dd8000d29afd6e1"}, "downloads": -1, "filename": "pyromorphite-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "35d1814120b91408373b8bc91de383a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13462, "upload_time": "2020-03-11T16:18:01", "upload_time_iso_8601": "2020-03-11T16:18:01.630357Z", "url": "https://files.pythonhosted.org/packages/f6/12/704e2ad09565a34b651d9ce5b74668953d2a566cb6ba2e7cbbdff0f5a065/pyromorphite-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69561772757aacbfb1faa966478ec965", "sha256": "e0f6224f3ae8bfa215067bc7d7a97864ac929c19c4928ad12ae07d20db5e57aa"}, "downloads": -1, "filename": "pyromorphite-0.0.3.tar.gz", "has_sig": false, "md5_digest": "69561772757aacbfb1faa966478ec965", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12407, "upload_time": "2020-03-11T16:18:02", "upload_time_iso_8601": "2020-03-11T16:18:02.904423Z", "url": "https://files.pythonhosted.org/packages/f5/7f/9ec4cc5e22dcd28c1539dd9bf4fad857904205778d5c6ad4f236ece1b59f/pyromorphite-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35d1814120b91408373b8bc91de383a5", "sha256": "aa67195f9fc64789aac16d70d11789b9275a4de27d86d66b5dd8000d29afd6e1"}, "downloads": -1, "filename": "pyromorphite-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "35d1814120b91408373b8bc91de383a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13462, "upload_time": "2020-03-11T16:18:01", "upload_time_iso_8601": "2020-03-11T16:18:01.630357Z", "url": "https://files.pythonhosted.org/packages/f6/12/704e2ad09565a34b651d9ce5b74668953d2a566cb6ba2e7cbbdff0f5a065/pyromorphite-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69561772757aacbfb1faa966478ec965", "sha256": "e0f6224f3ae8bfa215067bc7d7a97864ac929c19c4928ad12ae07d20db5e57aa"}, "downloads": -1, "filename": "pyromorphite-0.0.3.tar.gz", "has_sig": false, "md5_digest": "69561772757aacbfb1faa966478ec965", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12407, "upload_time": "2020-03-11T16:18:02", "upload_time_iso_8601": "2020-03-11T16:18:02.904423Z", "url": "https://files.pythonhosted.org/packages/f5/7f/9ec4cc5e22dcd28c1539dd9bf4fad857904205778d5c6ad4f236ece1b59f/pyromorphite-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:39 2020"}