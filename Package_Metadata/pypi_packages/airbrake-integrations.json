{"info": {"author": "Zach Goldstein", "author_email": "zach@airbrake.io", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development"], "description": "Airbrake python notifier integrations\n=====================================\n\n<img src=\"http://f.cl.ly/items/3Z1A202C1U2j3E1O1N0n/python%2009.19.32.jpg\" width=800px>\n\n* [Airbrake Python Integrations README](https://github.com/airbrake/airbrake-python-integrations)\n* [Airbrake Python README](https://github.com/airbrake/airbrake-python)\n\nIntegrations built on top of the airbrake python notifier for quick use with popular frameworks and libraries.\n\n### Introduction\n\n[Airbrake](https://airbrake.io/) is an online tool that provides robust exception\ntracking in any of your Python applications. In doing so, it allows you to easily\nreview errors, tie an error to an individual piece of code, and trace the cause\nback to recent changes. The Airbrake dashboard provides easy categorization,\nsearching, and prioritization of exceptions so that when errors occur, your team\ncan quickly determine the root cause.\n\n### Key features\n\nThis library is built on top of [Airbrake Python](https://github.com/airbrake/airbrake-python). The difference\nbetween _Airbrake Python_ and _Airbrake Python Integrations_ is that the\n`airbrake-integrations` package is just a collection of integrations\nwith frameworks or other libraries. The `airbrake` package is the core library\nthat performs exception sending and other heavy lifting.\n\nNormally, you just need to depend on this package, select the integration you are\ninterested in and follow the instructions for it. If the framework or\napplication you use does not have an integration available, you can depend on\nthe `airbrake` package and ignore this package entirely.\n\nThe list of integrations that are available in this package includes:\n\n* Django\n* Flask\n* Twisted\n\n### Installation\n\nTo install airbrake-integrations, run:\n```bash\npip install airbrake-integrations\n```\n\nIt's highly suggested that you add the package to your `requirements.txt` file:\n\n```bash\npip freeze > requirements.txt\n```\n\n### Configuration\n\n#### Django\n\nTo install the middleware and catch exceptions in your views:\n\n- Add the following to your `settings.py` file; replacing the value with your\nproject's id and key:\n\n```python\nAIRBAKE = {\n    \"PROJECT_ID\": 123,\n    \"API_KEY\": \"123abcde\",\n    \"ENVIRONMENT\": \"test\"\n}\n```\n\n- Add the middleware to your `settings.py` file; making sure that the\nairbrake middleware is at the top of the list. Django processes middleware\nin order from the end of this list to start, so placing it at the end will\ncatch all exceptions before it.\n\n```python\nMIDDLEWARE = [\n    'airbrake_integrations.django.middleware.AirbrakeNotifierMiddleware',\n    ...\n]\n```\n\nNote that any middleware that catches exceptions and does not allow them to\nflow through will not be sent to airbrake. It's important to make sure any\nmiddleware that also process exceptions will raise the original exception:\n\n```python\ndef process_exception(self, request, exception):\n    raise exception\n```\n\nAn example django app can be found in /examples/django\n\n#### Flask\n\nTo catch exceptions, use the Airbrake extension:\n\nMake sure the airbrake configuration fields are set:\n```\nAIRBRAKE_PROJECT_ID = 123456\nAIRBRAKE_API_KEY = '1290180gsdf8snfaslfa0'\nAIRBRAKE_ENVIRONMENT = \"production\"\n```\n\nAnd then install the extension!\n```python\nfrom airbrake_integrations.flask.app import AirbrakeApp\n\napp = Flask(__name__)\napp.config.from_pyfile('config.cfg')\nab = AirbrakeApp(app)\n```\n\nAn example flask app can be found in /examples/flask\n\nTo run the example:\n```bash\nexport FLASK_APP=example.py\nflask run\n```\n\n#### Twisted\n\n```python\nfrom airbrake_integrations.twisted.observer import AirbrakeLogObserver\nfrom twisted.logger import globalLogBeginner, Logger\n\nsettings = {\n    \"AIRBRAKE\": {\n        \"PROJECT_ID\": 1234,\n        \"API_KEY\": \"1234567890asdfghjkl\"\n    }\n}\n\nobservers = [AirbrakeLogObserver(settings)]\n\nglobalLogBeginner.beginLoggingTo(observers, redirectStandardIO=False)\n\nlog = Logger()\ntry:\n    raise Exception(\"A gremlin in the system is angry\")\nexcept:\n    log.failure(\"Error\")\n```\n\nThis creates an observer that looks the `globalLogPublisher` twisted object, and checks all events for any possible exceptions.\n\nAn example flask app can be found in /examples/twisted", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/airbrake/airbrake-python-integrations", "keywords": "airbrake exceptions airbrake.io b7398048", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "airbrake-integrations", "package_url": "https://pypi.org/project/airbrake-integrations/", "platform": "", "project_url": "https://pypi.org/project/airbrake-integrations/", "project_urls": {"Homepage": "https://github.com/airbrake/airbrake-python-integrations"}, "release_url": "https://pypi.org/project/airbrake-integrations/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Python Integrations for airbrake.io", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Airbrake python notifier integrations</h1>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/920fbd31590ac81927013d90313251ee87990e5c/687474703a2f2f662e636c2e6c792f6974656d732f335a3141323032433155326a3345314f314e306e2f707974686f6e25323030392e31392e33322e6a7067\" width=\"800px\">\n<ul>\n<li><a href=\"https://github.com/airbrake/airbrake-python-integrations\" rel=\"nofollow\">Airbrake Python Integrations README</a></li>\n<li><a href=\"https://github.com/airbrake/airbrake-python\" rel=\"nofollow\">Airbrake Python README</a></li>\n</ul>\n<p>Integrations built on top of the airbrake python notifier for quick use with popular frameworks and libraries.</p>\n<h3>Introduction</h3>\n<p><a href=\"https://airbrake.io/\" rel=\"nofollow\">Airbrake</a> is an online tool that provides robust exception\ntracking in any of your Python applications. In doing so, it allows you to easily\nreview errors, tie an error to an individual piece of code, and trace the cause\nback to recent changes. The Airbrake dashboard provides easy categorization,\nsearching, and prioritization of exceptions so that when errors occur, your team\ncan quickly determine the root cause.</p>\n<h3>Key features</h3>\n<p>This library is built on top of <a href=\"https://github.com/airbrake/airbrake-python\" rel=\"nofollow\">Airbrake Python</a>. The difference\nbetween <em>Airbrake Python</em> and <em>Airbrake Python Integrations</em> is that the\n<code>airbrake-integrations</code> package is just a collection of integrations\nwith frameworks or other libraries. The <code>airbrake</code> package is the core library\nthat performs exception sending and other heavy lifting.</p>\n<p>Normally, you just need to depend on this package, select the integration you are\ninterested in and follow the instructions for it. If the framework or\napplication you use does not have an integration available, you can depend on\nthe <code>airbrake</code> package and ignore this package entirely.</p>\n<p>The list of integrations that are available in this package includes:</p>\n<ul>\n<li>Django</li>\n<li>Flask</li>\n<li>Twisted</li>\n</ul>\n<h3>Installation</h3>\n<p>To install airbrake-integrations, run:</p>\n<pre>pip install airbrake-integrations\n</pre>\n<p>It's highly suggested that you add the package to your <code>requirements.txt</code> file:</p>\n<pre>pip freeze &gt; requirements.txt\n</pre>\n<h3>Configuration</h3>\n<h4>Django</h4>\n<p>To install the middleware and catch exceptions in your views:</p>\n<ul>\n<li>Add the following to your <code>settings.py</code> file; replacing the value with your\nproject's id and key:</li>\n</ul>\n<pre><span class=\"n\">AIRBAKE</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"PROJECT_ID\"</span><span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"API_KEY\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123abcde\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ENVIRONMENT\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test\"</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>Add the middleware to your <code>settings.py</code> file; making sure that the\nairbrake middleware is at the top of the list. Django processes middleware\nin order from the end of this list to start, so placing it at the end will\ncatch all exceptions before it.</li>\n</ul>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'airbrake_integrations.django.middleware.AirbrakeNotifierMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Note that any middleware that catches exceptions and does not allow them to\nflow through will not be sent to airbrake. It's important to make sure any\nmiddleware that also process exceptions will raise the original exception:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">process_exception</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">exception</span><span class=\"p\">):</span>\n    <span class=\"k\">raise</span> <span class=\"n\">exception</span>\n</pre>\n<p>An example django app can be found in /examples/django</p>\n<h4>Flask</h4>\n<p>To catch exceptions, use the Airbrake extension:</p>\n<p>Make sure the airbrake configuration fields are set:</p>\n<pre><code>AIRBRAKE_PROJECT_ID = 123456\nAIRBRAKE_API_KEY = '1290180gsdf8snfaslfa0'\nAIRBRAKE_ENVIRONMENT = \"production\"\n</code></pre>\n<p>And then install the extension!</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">airbrake_integrations.flask.app</span> <span class=\"kn\">import</span> <span class=\"n\">AirbrakeApp</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'config.cfg'</span><span class=\"p\">)</span>\n<span class=\"n\">ab</span> <span class=\"o\">=</span> <span class=\"n\">AirbrakeApp</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<p>An example flask app can be found in /examples/flask</p>\n<p>To run the example:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">FLASK_APP</span><span class=\"o\">=</span>example.py\nflask run\n</pre>\n<h4>Twisted</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">airbrake_integrations.twisted.observer</span> <span class=\"kn\">import</span> <span class=\"n\">AirbrakeLogObserver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">twisted.logger</span> <span class=\"kn\">import</span> <span class=\"n\">globalLogBeginner</span><span class=\"p\">,</span> <span class=\"n\">Logger</span>\n\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"AIRBRAKE\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"PROJECT_ID\"</span><span class=\"p\">:</span> <span class=\"mi\">1234</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"API_KEY\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1234567890asdfghjkl\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">observers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">AirbrakeLogObserver</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)]</span>\n\n<span class=\"n\">globalLogBeginner</span><span class=\"o\">.</span><span class=\"n\">beginLoggingTo</span><span class=\"p\">(</span><span class=\"n\">observers</span><span class=\"p\">,</span> <span class=\"n\">redirectStandardIO</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">Logger</span><span class=\"p\">()</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">\"A gremlin in the system is angry\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">failure</span><span class=\"p\">(</span><span class=\"s2\">\"Error\"</span><span class=\"p\">)</span>\n</pre>\n<p>This creates an observer that looks the <code>globalLogPublisher</code> twisted object, and checks all events for any possible exceptions.</p>\n<p>An example flask app can be found in /examples/twisted</p>\n\n          </div>"}, "last_serial": 6501707, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "870c364fc7fc6a5f0330f441cb98df93", "sha256": "80b4d846a18111999caa6be20555d5adcbd63d77cf490f3356609e76a6a07fe1"}, "downloads": -1, "filename": "airbrake-integrations-0.1.2.tar.gz", "has_sig": false, "md5_digest": "870c364fc7fc6a5f0330f441cb98df93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7385, "upload_time": "2017-08-25T19:17:30", "upload_time_iso_8601": "2017-08-25T19:17:30.788512Z", "url": "https://files.pythonhosted.org/packages/ac/95/dd06cd355afbff5477b233c504cfd77270f93bda4c294d940a2842899499/airbrake-integrations-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ffd99393828fd8d56f18273a23bc2d4f", "sha256": "15d30ec4b05aa0dcf5f66c9ebe757a3e767d145557fb8fc1a7ac9ffbdeb02bbd"}, "downloads": -1, "filename": "airbrake_integrations-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ffd99393828fd8d56f18273a23bc2d4f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10346, "upload_time": "2019-03-07T21:17:51", "upload_time_iso_8601": "2019-03-07T21:17:51.497154Z", "url": "https://files.pythonhosted.org/packages/c4/38/4816f2e4e1da38a8d6945655bc7c3b039d58d8a1fbdb00cc8a12ea66ef59/airbrake_integrations-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3edc45413ea05296ef2ede915033b28c", "sha256": "ec967235a93dd59ffe3b8430158091401228d1e6283330510881e31537c3a2ba"}, "downloads": -1, "filename": "airbrake-integrations-0.1.3.tar.gz", "has_sig": false, "md5_digest": "3edc45413ea05296ef2ede915033b28c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9318, "upload_time": "2019-03-07T21:17:52", "upload_time_iso_8601": "2019-03-07T21:17:52.911152Z", "url": "https://files.pythonhosted.org/packages/a9/43/d1e8999c3c4df0118dfe49a77df019b33df9bbc25f76a2005a0f21f00fce/airbrake-integrations-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a663e34a6c93dc0a00d0eac7cec8559b", "sha256": "1f406012459e44ef8928569bf463c10eef9f8a2ae5e968cd0cc66e54060f5cf7"}, "downloads": -1, "filename": "airbrake_integrations-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a663e34a6c93dc0a00d0eac7cec8559b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10372, "upload_time": "2019-09-04T19:31:44", "upload_time_iso_8601": "2019-09-04T19:31:44.115679Z", "url": "https://files.pythonhosted.org/packages/05/47/49e3d2a21633bc274ebb7b511db285f66756c79494ddd5ce1a9b011d6cdc/airbrake_integrations-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa6b009b882cc298de9716bf75a49b9f", "sha256": "3be575ea40f7a8d7f2b33da240b9f129cdc3ee4ae7487a46b17852ab156c8655"}, "downloads": -1, "filename": "airbrake-integrations-0.1.4.tar.gz", "has_sig": false, "md5_digest": "aa6b009b882cc298de9716bf75a49b9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9351, "upload_time": "2019-09-04T19:31:45", "upload_time_iso_8601": "2019-09-04T19:31:45.674780Z", "url": "https://files.pythonhosted.org/packages/14/a9/30241b9a68261752e1e99d311925203d1f1eaf059b96b5af266edab15a0a/airbrake-integrations-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "bc3672b718f5a110bb1759c1e941a98a", "sha256": "85548a1c83ab782d33c4472d9400ea5d12eac155b7ee2ab3bf471c503355a6f1"}, "downloads": -1, "filename": "airbrake-integrations-0.1.5.tar.gz", "has_sig": false, "md5_digest": "bc3672b718f5a110bb1759c1e941a98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8806, "upload_time": "2020-01-22T18:02:38", "upload_time_iso_8601": "2020-01-22T18:02:38.128202Z", "url": "https://files.pythonhosted.org/packages/47/26/8e8c5cd24f694973935f8bee5a02ee84ce1c1eeb5c8809318c7b4ce9d652/airbrake-integrations-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc3672b718f5a110bb1759c1e941a98a", "sha256": "85548a1c83ab782d33c4472d9400ea5d12eac155b7ee2ab3bf471c503355a6f1"}, "downloads": -1, "filename": "airbrake-integrations-0.1.5.tar.gz", "has_sig": false, "md5_digest": "bc3672b718f5a110bb1759c1e941a98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8806, "upload_time": "2020-01-22T18:02:38", "upload_time_iso_8601": "2020-01-22T18:02:38.128202Z", "url": "https://files.pythonhosted.org/packages/47/26/8e8c5cd24f694973935f8bee5a02ee84ce1c1eeb5c8809318c7b4ce9d652/airbrake-integrations-0.1.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:33 2020"}