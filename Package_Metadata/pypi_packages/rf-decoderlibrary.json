{"info": {"author": "Joshua Kim Rivera", "author_email": "joshua.rivera@mnltechnology.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Robot Framework", "Framework :: Robot Framework :: Library", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Testing"], "description": "DecoderLibrary\n================\n\nVersion = __0.1.1a9__  \nLibrary Scope: __GLOBAL__  \nCreated: __12/20/2019 14:46 UTC-8__  \n\n\nAuthor: __Joshua Kim Rivera | email:joshua.rivera@mnltechnology.com__\n\nCompany: [__Spiralworks Technologies Inc.__](http://www.spiralwrks.com/)\n\n##### Contents:\n- [DecoderLibrary](#googlesheetslibrary)\n    - [Contents](#contents)\n    - [Introduction](#introduction)\n    - [Installation](#installation)\n    - [Usage](#usage)\n    - [Generating Documentation](#generating-documentation)\n    - [Dependencies](#dependencies)\n\n\n### Introduction\n**DecoderLibrary** is a [Robotframework](https://www.robotframework.org) Test Library for interfacing tests with \nGoogle Sheets using __Google Sheets API v4__.  \n![PyPI](https://img.shields.io/pypi/v/rf-googlesheetslibrary?style=for-the-badge)\n![PyPI - Downloads](https://img.shields.io/pypi/dd/rf-googlesheetslibrary?style=for-the-badge)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/rf-googlesheetslibrary?style=for-the-badge)\n\nView the latest keyword [Documentation here.](https://mainsystemdev.github.io/GoogleSheetsLibrary/)\n\n### Installation\n**Option 1**  \nInstall using pypi, run:\n```bash\npip install rf-decoderlibrary\n```\n\n### Usage\nTo use DecoderLibrary in Robot Framework tests, the library needs to\nfirst be imported using the `Library` setting as any other library.\n\n```robotframework\n*** Settings ***\nDocumentation                   Simple example using GoogleSheetsLibrary\nLibrary                         GoogleSheetsLibrary\n...                             scopes=['https://www.googleapis.com/auth/spreadsheets']\nLibrary                         Collections\n\n# Initialize the connection to the spreadsheet.\nSuite Setup                     Initialize Spreadsheet\n...                             spreadsheetId=sampleSpreadsheetId\n...                             tokenFile=path/to/token.pickle\n\n*** Variables ***\n@{sample_range}                 Sheet!A1:E                  Sheet1!A1:E2\n\n@{row_1}                        sample                      string\n...                             written                     using\n...                             googlesheets api v4\n@{row_2}                        hello                       world\n...                             i am                        using\n...                             googlesheets api v4\n\n@{values}                       ${row_1}                    ${row_2}\n\n&{body}                         values=${values}\n\n*** Test Cases ***\nSample Fetch Data\n    [Documentation]             Fetch data from the initialized sheet.\n    ${single_range_data}        Fetch Single Range          range_name=Sheet!A1:E1\n    Log To Console              ${single_range_data}\n    ${multiple_range_data}      Fetch Multiple Range        ranges=${sample_range}\n    Log To Console              ${multiple_range_data}\n\nSample Write Data\n    [Documentation]             Writes data to the initialized sheet.\n    ${response}                 Write To Range              range_name=Sheet!A3:E4\n    ...                         body=${body}\n    Log To Console              ${response}\n\nSample Data Append\n    [Documentation]             Append Data to the sheet.\n    ${append_response}          Append Values               range_name=Sheet1\n    ...                         body=${body}\n    Log To Console              ${append_response}\n\n```\n\n\n### Generating Documentation\nTo Generate the keyword Documentation, simple run:\n```bash\npython -m robot.libdoc DecoderLibrary documentation.html\n```\nNote that the library must first be installed before generating a documentation.\n\n\n### Dependencies\n* [Requests](https://pypi.org/project/requests/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MainSystemDev", "keywords": "", "license": "Type license() to see the full license text", "maintainer": "", "maintainer_email": "", "name": "rf-decoderlibrary", "package_url": "https://pypi.org/project/rf-decoderlibrary/", "platform": "any", "project_url": "https://pypi.org/project/rf-decoderlibrary/", "project_urls": {"Homepage": "https://github.com/MainSystemDev"}, "release_url": "https://pypi.org/project/rf-decoderlibrary/0.1.1a1/", "requires_dist": ["certifi (==2019.11.28)", "chardet (==3.0.4)", "idna (==2.8)", "Pillow (==6.2.0)", "pypng (==0.0.20)", "PyQRCode (==1.2.1)", "pyzbar (==0.1.8)", "requests (==2.22.0)", "robotframework (==3.1.2)", "robotlibcore-temp (==1.0.2)", "urllib3 (==1.25.7)"], "requires_python": "", "summary": "Test Library for Decoding Encoded Data.", "version": "0.1.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DecoderLibrary</h1>\n<p>Version = <strong>0.1.1a9</strong><br>\nLibrary Scope: <strong>GLOBAL</strong><br>\nCreated: <strong>12/20/2019 14:46 UTC-8</strong></p>\n<p>Author: <strong>Joshua Kim Rivera | email:<a href=\"mailto:joshua.rivera@mnltechnology.com\">joshua.rivera@mnltechnology.com</a></strong></p>\n<p>Company: <a href=\"http://www.spiralwrks.com/\" rel=\"nofollow\"><strong>Spiralworks Technologies Inc.</strong></a></p>\n<h5>Contents:</h5>\n<ul>\n<li><a href=\"#googlesheetslibrary\" rel=\"nofollow\">DecoderLibrary</a>\n<ul>\n<li><a href=\"#contents\" rel=\"nofollow\">Contents</a></li>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#generating-documentation\" rel=\"nofollow\">Generating Documentation</a></li>\n<li><a href=\"#dependencies\" rel=\"nofollow\">Dependencies</a></li>\n</ul>\n</li>\n</ul>\n<h3>Introduction</h3>\n<p><strong>DecoderLibrary</strong> is a <a href=\"https://www.robotframework.org\" rel=\"nofollow\">Robotframework</a> Test Library for interfacing tests with\nGoogle Sheets using <strong>Google Sheets API v4</strong>.<br>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2bdfb747c744ac93ba25c2ba6f54ebc97ae133c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72662d676f6f676c657368656574736c6962726172793f7374796c653d666f722d7468652d6261646765\">\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/343df6db15e4a307c438c5cb41d2c5d3e76df8e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64642f72662d676f6f676c657368656574736c6962726172793f7374796c653d666f722d7468652d6261646765\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21656274130189e5e930e85f33d8d846baf6fcf5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f72662d676f6f676c657368656574736c6962726172793f7374796c653d666f722d7468652d6261646765\"></p>\n<p>View the latest keyword <a href=\"https://mainsystemdev.github.io/GoogleSheetsLibrary/\" rel=\"nofollow\">Documentation here.</a></p>\n<h3>Installation</h3>\n<p><strong>Option 1</strong><br>\nInstall using pypi, run:</p>\n<pre>pip install rf-decoderlibrary\n</pre>\n<h3>Usage</h3>\n<p>To use DecoderLibrary in Robot Framework tests, the library needs to\nfirst be imported using the <code>Library</code> setting as any other library.</p>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\"></span>\n<span class=\"kn\">Documentation</span><span class=\"p\">                   </span><span class=\"s\">Simple example using GoogleSheetsLibrary</span><span class=\"p\"></span>\n<span class=\"kn\">Library</span><span class=\"p\">                         </span><span class=\"nn\">GoogleSheetsLibrary</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">scopes=['https://www.googleapis.com/auth/spreadsheets']</span><span class=\"p\"></span>\n<span class=\"kn\">Library</span><span class=\"p\">                         </span><span class=\"nn\">Collections</span><span class=\"p\"></span>\n\n<span class=\"c\"># Initialize the connection to the spreadsheet.</span>\n<span class=\"kn\">Suite Setup</span><span class=\"p\">                     </span><span class=\"nf\">Initialize Spreadsheet</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">spreadsheetId=sampleSpreadsheetId</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">tokenFile=path/to/token.pickle</span><span class=\"p\"></span>\n\n<span class=\"gh\">*** Variables ***</span><span class=\"p\"></span>\n<span class=\"p\">@{</span><span class=\"nv\">sample_range</span><span class=\"p\">}                 </span><span class=\"s\">Sheet!A1:E</span><span class=\"p\">                  </span><span class=\"s\">Sheet1!A1:E2</span><span class=\"p\"></span>\n\n<span class=\"p\">@{</span><span class=\"nv\">row_1</span><span class=\"p\">}                        </span><span class=\"s\">sample</span><span class=\"p\">                      </span><span class=\"s\">string</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">written</span><span class=\"p\">                     </span><span class=\"s\">using</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">googlesheets api v4</span><span class=\"p\"></span>\n<span class=\"p\">@{</span><span class=\"nv\">row_2</span><span class=\"p\">}                        </span><span class=\"s\">hello</span><span class=\"p\">                       </span><span class=\"s\">world</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">i am</span><span class=\"p\">                        </span><span class=\"s\">using</span><span class=\"p\"></span>\n<span class=\"p\">...                             </span><span class=\"s\">googlesheets api v4</span><span class=\"p\"></span>\n\n<span class=\"p\">@{</span><span class=\"nv\">values</span><span class=\"p\">}                       ${</span><span class=\"nv\">row_1</span><span class=\"p\">}                    ${</span><span class=\"nv\">row_2</span><span class=\"p\">}</span>\n\n<span class=\"p\">&amp;{</span><span class=\"nv\">body</span><span class=\"p\">}                         </span><span class=\"s\">values=</span><span class=\"p\">${</span><span class=\"nv\">values</span><span class=\"p\">}</span>\n\n<span class=\"gh\">*** Test Cases ***</span><span class=\"p\"></span>\n<span class=\"gu\">Sample Fetch Data</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]             </span><span class=\"s\">Fetch data from the initialized sheet.</span><span class=\"p\"></span>\n<span class=\"p\">    ${</span><span class=\"nv\">single_range_data</span><span class=\"p\">}        </span><span class=\"nf\">Fetch Single Range</span><span class=\"p\">          </span><span class=\"s\">range_name=Sheet!A1:E1</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Log To Console</span><span class=\"p\">              ${</span><span class=\"nv\">single_range_data</span><span class=\"p\">}</span>\n<span class=\"p\">    ${</span><span class=\"nv\">multiple_range_data</span><span class=\"p\">}      </span><span class=\"nf\">Fetch Multiple Range</span><span class=\"p\">        </span><span class=\"s\">ranges=</span><span class=\"p\">${</span><span class=\"nv\">sample_range</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">Log To Console</span><span class=\"p\">              ${</span><span class=\"nv\">multiple_range_data</span><span class=\"p\">}</span>\n\n<span class=\"gu\">Sample Write Data</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]             </span><span class=\"s\">Writes data to the initialized sheet.</span><span class=\"p\"></span>\n<span class=\"p\">    ${</span><span class=\"nv\">response</span><span class=\"p\">}                 </span><span class=\"nf\">Write To Range</span><span class=\"p\">              </span><span class=\"s\">range_name=Sheet!A3:E4</span><span class=\"p\"></span>\n<span class=\"p\">    ...                         </span><span class=\"s\">body=</span><span class=\"p\">${</span><span class=\"nv\">body</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">Log To Console</span><span class=\"p\">              ${</span><span class=\"nv\">response</span><span class=\"p\">}</span>\n\n<span class=\"gu\">Sample Data Append</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]             </span><span class=\"s\">Append Data to the sheet.</span><span class=\"p\"></span>\n<span class=\"p\">    ${</span><span class=\"nv\">append_response</span><span class=\"p\">}          </span><span class=\"nf\">Append Values</span><span class=\"p\">               </span><span class=\"s\">range_name=Sheet1</span><span class=\"p\"></span>\n<span class=\"p\">    ...                         </span><span class=\"s\">body=</span><span class=\"p\">${</span><span class=\"nv\">body</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">Log To Console</span><span class=\"p\">              ${</span><span class=\"nv\">append_response</span><span class=\"p\">}</span>\n</pre>\n<h3>Generating Documentation</h3>\n<p>To Generate the keyword Documentation, simple run:</p>\n<pre>python -m robot.libdoc DecoderLibrary documentation.html\n</pre>\n<p>Note that the library must first be installed before generating a documentation.</p>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://pypi.org/project/requests/\" rel=\"nofollow\">Requests</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6443329, "releases": {"0.1.1a1": [{"comment_text": "", "digests": {"md5": "5951c74f01b6c89146de73b604f12270", "sha256": "a962c43ccc32d2abc8ec38796ee9fe10ecb8e59673446e10ecb513e53e73ea57"}, "downloads": -1, "filename": "rf_decoderlibrary-0.1.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "5951c74f01b6c89146de73b604f12270", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6026, "upload_time": "2020-01-06T14:26:24", "upload_time_iso_8601": "2020-01-06T14:26:24.451596Z", "url": "https://files.pythonhosted.org/packages/36/c8/f959f6ac82411001a912c1cc2bca9b17af79117252720fc6e73895716cb7/rf_decoderlibrary-0.1.1a1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5951c74f01b6c89146de73b604f12270", "sha256": "a962c43ccc32d2abc8ec38796ee9fe10ecb8e59673446e10ecb513e53e73ea57"}, "downloads": -1, "filename": "rf_decoderlibrary-0.1.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "5951c74f01b6c89146de73b604f12270", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6026, "upload_time": "2020-01-06T14:26:24", "upload_time_iso_8601": "2020-01-06T14:26:24.451596Z", "url": "https://files.pythonhosted.org/packages/36/c8/f959f6ac82411001a912c1cc2bca9b17af79117252720fc6e73895716cb7/rf_decoderlibrary-0.1.1a1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:08 2020"}