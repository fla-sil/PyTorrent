{"info": {"author": "Jose Molina Colmenero", "author_email": "molina@bity.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Crypto Address Validation\n\nSimple crypto address validator. Currently it supports the following crypto addresses:\n\n* Bitcoin\n* Ethereum\n* Litecoin\n\n\n## Supported Python versions\n\nOnly supported in `python >= 3.5`.\n\n\n## Installation\n\n```bash\n$ pip install cryptoaddress\n```\n\n\n## API\n\n### The BitcoinAddress class\n\n**BitcoinAddress(address [, network_type='mainnet'])**\n\n_Parameters_\n\n* `address`: the Bitcoin address to validate.\n* `network_type`: Optional. Use either 'mainnet' or 'testnet'.\n\n> Raises `ValueError` if the provided address is not a valid Bitcoin address\n\n\n### The EthereumAddress class\n\n**EthereumAddress(address)**\n\n_Parameters_\n\n* `address`: the Ethereum address to validate.\n\n> Raises `ValueError` if the provided address is not a valid Ethereum address\n\n\n### The LitecoinAddress class\n\n**LitecoinAddress(address [, network_type='mainnet'])**\n\n_Parameters_\n\n* `address`: the Litecoin address to validate.\n* `network_type`: Optional. Use either 'mainnet' or 'testnet'.\n\n> Raises `ValueError` if the provided address is not a valid Litecoin address\n\n\n## Usage example\n\nYou can use directly a subclass of `CryptoAddress`:\n\n```python\nfrom cryptoaddress import BitcoinAddress\n\ntry:\n    bitcoin_address = BitcoinAddress('17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem', network_type='mainnet')\n    print('The address \"%s\" is valid.' % str(bitcoin_address))\nexcept ValueError:\n    print('The address is invalid.')\n\n# Prints 'The address \"17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem\" is valid.'\n```\n\nOr you can use the `get_crypto_address` utility function:\n\n```python\nfrom cryptoaddress import get_crypto_address\n\ntry:\n    bitcoin_address = get_crypto_address('BTC', '17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem', network_type='mainnet')\n    print('The address \"%s\" is valid.' % str(bitcoin_address))\nexcept ValueError:\n    print('The address is invalid.')\n\n# Prints 'The address \"17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem\" is valid.'\n```\n\n\n## Upload to pypi\n\nAfter creating a semantic versioning tag proceed in the following way:\n\n* Install all required packages:\n\n```bash\n$ python3 -m pip install --user --upgrade setuptools wheel twine\n```\n\n* Generate the package:\n\n```bash\n$ python3 setup.py sdist bdist_wheel\n```\n\nThis will create a `dist/` folder whose content has to be uploaded.\n\n\n* Upload the new package to pypi:\n\n```bash\n$ python3 -m twine upload dist/*\n````\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cryptoaddress", "package_url": "https://pypi.org/project/cryptoaddress/", "platform": "", "project_url": "https://pypi.org/project/cryptoaddress/", "project_urls": null, "release_url": "https://pypi.org/project/cryptoaddress/0.2.1/", "requires_dist": ["pysha3"], "requires_python": "", "summary": "Python library to verify crypto addresses.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Crypto Address Validation</h1>\n<p>Simple crypto address validator. Currently it supports the following crypto addresses:</p>\n<ul>\n<li>Bitcoin</li>\n<li>Ethereum</li>\n<li>Litecoin</li>\n</ul>\n<h2>Supported Python versions</h2>\n<p>Only supported in <code>python &gt;= 3.5</code>.</p>\n<h2>Installation</h2>\n<pre>$ pip install cryptoaddress\n</pre>\n<h2>API</h2>\n<h3>The BitcoinAddress class</h3>\n<p><strong>BitcoinAddress(address [, network_type='mainnet'])</strong></p>\n<p><em>Parameters</em></p>\n<ul>\n<li><code>address</code>: the Bitcoin address to validate.</li>\n<li><code>network_type</code>: Optional. Use either 'mainnet' or 'testnet'.</li>\n</ul>\n<blockquote>\n<p>Raises <code>ValueError</code> if the provided address is not a valid Bitcoin address</p>\n</blockquote>\n<h3>The EthereumAddress class</h3>\n<p><strong>EthereumAddress(address)</strong></p>\n<p><em>Parameters</em></p>\n<ul>\n<li><code>address</code>: the Ethereum address to validate.</li>\n</ul>\n<blockquote>\n<p>Raises <code>ValueError</code> if the provided address is not a valid Ethereum address</p>\n</blockquote>\n<h3>The LitecoinAddress class</h3>\n<p><strong>LitecoinAddress(address [, network_type='mainnet'])</strong></p>\n<p><em>Parameters</em></p>\n<ul>\n<li><code>address</code>: the Litecoin address to validate.</li>\n<li><code>network_type</code>: Optional. Use either 'mainnet' or 'testnet'.</li>\n</ul>\n<blockquote>\n<p>Raises <code>ValueError</code> if the provided address is not a valid Litecoin address</p>\n</blockquote>\n<h2>Usage example</h2>\n<p>You can use directly a subclass of <code>CryptoAddress</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cryptoaddress</span> <span class=\"kn\">import</span> <span class=\"n\">BitcoinAddress</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">bitcoin_address</span> <span class=\"o\">=</span> <span class=\"n\">BitcoinAddress</span><span class=\"p\">(</span><span class=\"s1\">'17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem'</span><span class=\"p\">,</span> <span class=\"n\">network_type</span><span class=\"o\">=</span><span class=\"s1\">'mainnet'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The address \"</span><span class=\"si\">%s</span><span class=\"s1\">\" is valid.'</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">bitcoin_address</span><span class=\"p\">))</span>\n<span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The address is invalid.'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints 'The address \"17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem\" is valid.'</span>\n</pre>\n<p>Or you can use the <code>get_crypto_address</code> utility function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cryptoaddress</span> <span class=\"kn\">import</span> <span class=\"n\">get_crypto_address</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">bitcoin_address</span> <span class=\"o\">=</span> <span class=\"n\">get_crypto_address</span><span class=\"p\">(</span><span class=\"s1\">'BTC'</span><span class=\"p\">,</span> <span class=\"s1\">'17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem'</span><span class=\"p\">,</span> <span class=\"n\">network_type</span><span class=\"o\">=</span><span class=\"s1\">'mainnet'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The address \"</span><span class=\"si\">%s</span><span class=\"s1\">\" is valid.'</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">bitcoin_address</span><span class=\"p\">))</span>\n<span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The address is invalid.'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints 'The address \"17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem\" is valid.'</span>\n</pre>\n<h2>Upload to pypi</h2>\n<p>After creating a semantic versioning tag proceed in the following way:</p>\n<ul>\n<li>Install all required packages:</li>\n</ul>\n<pre>$ python3 -m pip install --user --upgrade setuptools wheel twine\n</pre>\n<ul>\n<li>Generate the package:</li>\n</ul>\n<pre>$ python3 setup.py sdist bdist_wheel\n</pre>\n<p>This will create a <code>dist/</code> folder whose content has to be uploaded.</p>\n<ul>\n<li>Upload the new package to pypi:</li>\n</ul>\n<pre>$ python3 -m twine upload dist/*\n</pre>\n\n          </div>"}, "last_serial": 5144216, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ee2893afe4f857c9b977d776cdd90408", "sha256": "c2e5b1761b887f28dc3848787ffce22c43f97fccd0f1e191c2cc76e4d470bb58"}, "downloads": -1, "filename": "cryptoaddress-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ee2893afe4f857c9b977d776cdd90408", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5979, "upload_time": "2019-04-09T11:09:09", "upload_time_iso_8601": "2019-04-09T11:09:09.586706Z", "url": "https://files.pythonhosted.org/packages/ae/91/759c3970c863e6ec0444b0bbbf215768e5a78cd67f5bcca8f2aa9d1df362/cryptoaddress-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d380127f6f276df028b7af31dc947de", "sha256": "bf0019355711544cb5a1415f758cf70bcd1acd2b3780de071137fac5d293078f"}, "downloads": -1, "filename": "cryptoaddress-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8d380127f6f276df028b7af31dc947de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8094, "upload_time": "2019-04-09T11:09:11", "upload_time_iso_8601": "2019-04-09T11:09:11.746778Z", "url": "https://files.pythonhosted.org/packages/12/d0/42bc8674162c648b266cb7d8ba443b0b10957338b6facaa8a4843ef1af3d/cryptoaddress-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5c9f6bf1a2c454b315822991073be4d3", "sha256": "ed4b08e84f04bad70e5ebf73836bb178fdfe739f59ba2a6941e51cc9d20aacec"}, "downloads": -1, "filename": "cryptoaddress-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5c9f6bf1a2c454b315822991073be4d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6503, "upload_time": "2019-04-15T08:43:31", "upload_time_iso_8601": "2019-04-15T08:43:31.481403Z", "url": "https://files.pythonhosted.org/packages/23/b7/667b2214d6bf2842438dc01e553c67cee4ade908b5c0d43ed584d20a4bf5/cryptoaddress-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84a22adf84d1cf32988be1c29fa54602", "sha256": "7c8df692119ac5badb1879045cc927bc1d851fd1d1ed70ea96bf4f84919bf4f6"}, "downloads": -1, "filename": "cryptoaddress-0.2.0.tar.gz", "has_sig": false, "md5_digest": "84a22adf84d1cf32988be1c29fa54602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9983, "upload_time": "2019-04-15T08:43:33", "upload_time_iso_8601": "2019-04-15T08:43:33.184193Z", "url": "https://files.pythonhosted.org/packages/db/2e/3b8469be085b492dd44d4f7f28253a14ac7086848cce4c38d062ba823ea5/cryptoaddress-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a106ef2267e2b3eb35866d36ed2731a6", "sha256": "444bf7de5c693c2664009f1d96f493d3b27b7e2c208cbf10ba8788711a46d3ca"}, "downloads": -1, "filename": "cryptoaddress-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a106ef2267e2b3eb35866d36ed2731a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6506, "upload_time": "2019-04-15T11:19:05", "upload_time_iso_8601": "2019-04-15T11:19:05.248380Z", "url": "https://files.pythonhosted.org/packages/1c/cd/d6eff555038a0b39f15e0b722344c6cb3bf19e472f3d1b8dab9aec46cd57/cryptoaddress-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ceb16856ea5efd73e2317cf1c2dfe8d", "sha256": "2f86feab5e8eb8cf2ebf640bccf70c2758b17449c24c2567674304d7588d0e16"}, "downloads": -1, "filename": "cryptoaddress-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9ceb16856ea5efd73e2317cf1c2dfe8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10098, "upload_time": "2019-04-15T11:19:06", "upload_time_iso_8601": "2019-04-15T11:19:06.635291Z", "url": "https://files.pythonhosted.org/packages/01/e4/02ba4a4227cbdfa8399d35b0dcbc1eefd230b81d95c05fd8ffcd8ebba7c3/cryptoaddress-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a106ef2267e2b3eb35866d36ed2731a6", "sha256": "444bf7de5c693c2664009f1d96f493d3b27b7e2c208cbf10ba8788711a46d3ca"}, "downloads": -1, "filename": "cryptoaddress-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a106ef2267e2b3eb35866d36ed2731a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6506, "upload_time": "2019-04-15T11:19:05", "upload_time_iso_8601": "2019-04-15T11:19:05.248380Z", "url": "https://files.pythonhosted.org/packages/1c/cd/d6eff555038a0b39f15e0b722344c6cb3bf19e472f3d1b8dab9aec46cd57/cryptoaddress-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ceb16856ea5efd73e2317cf1c2dfe8d", "sha256": "2f86feab5e8eb8cf2ebf640bccf70c2758b17449c24c2567674304d7588d0e16"}, "downloads": -1, "filename": "cryptoaddress-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9ceb16856ea5efd73e2317cf1c2dfe8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10098, "upload_time": "2019-04-15T11:19:06", "upload_time_iso_8601": "2019-04-15T11:19:06.635291Z", "url": "https://files.pythonhosted.org/packages/01/e4/02ba4a4227cbdfa8399d35b0dcbc1eefd230b81d95c05fd8ffcd8ebba7c3/cryptoaddress-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:03 2020"}