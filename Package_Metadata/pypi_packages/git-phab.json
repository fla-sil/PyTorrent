{"info": {"author": "Xavier Claessens", "author_email": "xavier.claessens@collabora.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Utilities"], "description": "INSTALL\n=======\n\nInstall dependencies and copy or symlink executables into your $PATH\n\n::\n\n        $ pip3 install -r requirements.txt\n        $ ln -s $PWD/git-phab ~/.local/bin/\n\nOptionaly generate and copy or symlink manpage into your $MANPATH\n\n::\n\n      $ a2x --doctype manpage --format manpage git-phab.txt\n      $ ln -s $PWD/git-phab.1 ~/.local/share/man/man1/\n\nOptionaly enable bash completion:\n\n::\n\n      $ sudo activate-global-python-argcomplete3\n\nAnd add this in your ~/.bash\\_completion:\n\n::\n\n      function _git_phab()\n      {\n        COMP_WORDS=(git-phab ${COMP_WORDS[@]:2})\n        COMP_CWORD=$((COMP_CWORD - 1))\n        COMP_LINE=${COMP_LINE/git phab/git-phab}\n        _python_argcomplete_global git-phab\n      }\n\nREQUIREMENTS\n============\n\nSee requirements.txt\n\nDESCRIPTION\n===========\n\nGit subcommand to integrate with phabricator.\n\nWORKFLOW EXAMPLE\n================\n\nFirst, specify a personal remote repository where to push WIP branches:\n\n::\n\n      $ git config phab.remote xclaesse\n\nMake sure the fetch URL of the repository can be accessed by the\nreviewers. For example if your remote is called ``github``:\n\n::\n\n      $ git remote show github | grep URL\n        Fetch URL: git@github.com:NICK/PROJECT.git\n        Push  URL: git@github.com:NICK/PROJECT.git\n      $ git remote set-url github https://github.com/NICK/PROJECT.git\n      $ git remote set-url --push github git@github.com:NICK/PROJECT.git\n      $ git remote show github | grep URL\n        Fetch URL: https://github.com/NICK/PROJECT.git\n        Push  URL: git@github.com:NICK/PROJECT.git\n\nBefore starting your work, create a branch:\n\n::\n\n      $ git checkout -b fix-bugs origin/master\n      Branch fix-bugs set up to track remote branch master from origin.\n      Switched to a new branch 'fix-bugs'\n\nNote that is it important to set the tracking remote branch, git-phab\nwill use it to set the default commit range to attach.\n\nNow fix your bugs...\n\nWhen the branch is ready for review, attach it (requesting the creation\nof a new task):\n\n::\n\n      $ git phab attach --task\n      Using revision range 'origin/master..'\n      a3beba9 \u2014 Not attached \u2014 Truncate all_commits when filtering already proposed commits\n      Attach above commits and create a new task? [yn] y\n      (...)\n      Push HEAD to xclaesse/wip/phab/T3436-fix-bugs? [yn] y\n      Create and checkout a new branch called: T3436-fix-bugs? [yn] y\n\n      Summary:\n      New: task T3436\n      New: 66b48b9 \u2014 D483 \u2014 Truncate all_commits when filtering already proposed commits\n      Branch pushed to xclaesse/wip/phab/T3436-fix-bugs\n      Branch T3436-fix-bugs created and checked out\n\nNote that the current branch name wasn't starting with a task ID, so it\nproposed to create a new one. If you already had a task for it, just\npass ``--task`` option. But it created a new branch prefixed with the\ntask ID so future git-phab commands will know which task this branch\nrefers to:\n\n::\n\n      $ git branch\n      * T3436-fix-bugs\n        fix-bugs\n        master\n\nWhen your commits have been accepted, merge them:\n\n::\n\n      $ git checkout master\n      $ git merge T3436-fix-bugs\n      $ git phab land\n      66b48b9 \u2014 D483 Accepted \u2014 Truncate all_commits when filtering already proposed commits\n      Do you want to push above commits? [yn] y\n      Do you want to close 'T3436'? [yn] y\n\nYou can now cleanup your branches:\n\n::\n\n      $ git phab clean\n      Task 'T3436' has been closed, do you want to delete branch 'T3436-fix-bugs'? [yn] y\n        -> Branch T3436-fix-bugs was deleted\n      Task 'T3436' has been closed, do you want to delete branch 'xclaesse/wip/phab/T3436-fix-a-bug'? [yn] y\n        -> Branch xclaesse/wip/phab/T3436-fix-a-bug was deleted\n\nHOW TO SET UP YOUR PROJECT\n==========================\n\nFirst of all, you need to add an ``.arcconfig`` to your project\nrepository. This file is the same one as used by\n`arcanist <https://secure.phabricator.com/book/phabricator/article/arcanist/>`__\nand you should follow their '`Configuring a New\nProject <https://secure.phabricator.com/book/phabricator/article/arcanist_new_project/>`__'\ndocumentation to set write the configuration file.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://packages.python.org/git-phab", "keywords": "phabricator tool git", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "git-phab", "package_url": "https://pypi.org/project/git-phab/", "platform": "", "project_url": "https://pypi.org/project/git-phab/", "project_urls": {"Homepage": "http://packages.python.org/git-phab"}, "release_url": "https://pypi.org/project/git-phab/2.1.0/", "requires_dist": null, "requires_python": "", "summary": "Git subcommand to integrate with phabricator", "version": "2.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install\">\n<h2>INSTALL</h2>\n<p>Install dependencies and copy or symlink executables into your $PATH</p>\n<pre>$ pip3 install -r requirements.txt\n$ ln -s $PWD/git-phab ~/.local/bin/\n</pre>\n<p>Optionaly generate and copy or symlink manpage into your $MANPATH</p>\n<pre>$ a2x --doctype manpage --format manpage git-phab.txt\n$ ln -s $PWD/git-phab.1 ~/.local/share/man/man1/\n</pre>\n<p>Optionaly enable bash completion:</p>\n<pre>$ sudo activate-global-python-argcomplete3\n</pre>\n<p>And add this in your ~/.bash_completion:</p>\n<pre>function _git_phab()\n{\n  COMP_WORDS=(git-phab ${COMP_WORDS[@]:2})\n  COMP_CWORD=$((COMP_CWORD - 1))\n  COMP_LINE=${COMP_LINE/git phab/git-phab}\n  _python_argcomplete_global git-phab\n}\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>REQUIREMENTS</h2>\n<p>See requirements.txt</p>\n</div>\n<div id=\"description\">\n<h2>DESCRIPTION</h2>\n<p>Git subcommand to integrate with phabricator.</p>\n</div>\n<div id=\"workflow-example\">\n<h2>WORKFLOW EXAMPLE</h2>\n<p>First, specify a personal remote repository where to push WIP branches:</p>\n<pre>$ git config phab.remote xclaesse\n</pre>\n<p>Make sure the fetch URL of the repository can be accessed by the\nreviewers. For example if your remote is called <tt>github</tt>:</p>\n<pre>$ git remote show github | grep URL\n  Fetch URL: git@github.com:NICK/PROJECT.git\n  Push  URL: git@github.com:NICK/PROJECT.git\n$ git remote set-url github https://github.com/NICK/PROJECT.git\n$ git remote set-url --push github git@github.com:NICK/PROJECT.git\n$ git remote show github | grep URL\n  Fetch URL: https://github.com/NICK/PROJECT.git\n  Push  URL: git@github.com:NICK/PROJECT.git\n</pre>\n<p>Before starting your work, create a branch:</p>\n<pre>$ git checkout -b fix-bugs origin/master\nBranch fix-bugs set up to track remote branch master from origin.\nSwitched to a new branch 'fix-bugs'\n</pre>\n<p>Note that is it important to set the tracking remote branch, git-phab\nwill use it to set the default commit range to attach.</p>\n<p>Now fix your bugs\u2026</p>\n<p>When the branch is ready for review, attach it (requesting the creation\nof a new task):</p>\n<pre>$ git phab attach --task\nUsing revision range 'origin/master..'\na3beba9 \u2014 Not attached \u2014 Truncate all_commits when filtering already proposed commits\nAttach above commits and create a new task? [yn] y\n(...)\nPush HEAD to xclaesse/wip/phab/T3436-fix-bugs? [yn] y\nCreate and checkout a new branch called: T3436-fix-bugs? [yn] y\n\nSummary:\nNew: task T3436\nNew: 66b48b9 \u2014 D483 \u2014 Truncate all_commits when filtering already proposed commits\nBranch pushed to xclaesse/wip/phab/T3436-fix-bugs\nBranch T3436-fix-bugs created and checked out\n</pre>\n<p>Note that the current branch name wasn\u2019t starting with a task ID, so it\nproposed to create a new one. If you already had a task for it, just\npass <tt><span class=\"pre\">--task</span></tt> option. But it created a new branch prefixed with the\ntask ID so future git-phab commands will know which task this branch\nrefers to:</p>\n<pre>$ git branch\n* T3436-fix-bugs\n  fix-bugs\n  master\n</pre>\n<p>When your commits have been accepted, merge them:</p>\n<pre>$ git checkout master\n$ git merge T3436-fix-bugs\n$ git phab land\n66b48b9 \u2014 D483 Accepted \u2014 Truncate all_commits when filtering already proposed commits\nDo you want to push above commits? [yn] y\nDo you want to close 'T3436'? [yn] y\n</pre>\n<p>You can now cleanup your branches:</p>\n<pre>$ git phab clean\nTask 'T3436' has been closed, do you want to delete branch 'T3436-fix-bugs'? [yn] y\n  -&gt; Branch T3436-fix-bugs was deleted\nTask 'T3436' has been closed, do you want to delete branch 'xclaesse/wip/phab/T3436-fix-a-bug'? [yn] y\n  -&gt; Branch xclaesse/wip/phab/T3436-fix-a-bug was deleted\n</pre>\n</div>\n<div id=\"how-to-set-up-your-project\">\n<h2>HOW TO SET UP YOUR PROJECT</h2>\n<p>First of all, you need to add an <tt>.arcconfig</tt> to your project\nrepository. This file is the same one as used by\n<a href=\"https://secure.phabricator.com/book/phabricator/article/arcanist/\" rel=\"nofollow\">arcanist</a>\nand you should follow their \u2018<a href=\"https://secure.phabricator.com/book/phabricator/article/arcanist_new_project/\" rel=\"nofollow\">Configuring a New\nProject</a>\u2019\ndocumentation to set write the configuration file.</p>\n</div>\n\n          </div>"}, "last_serial": 2808976, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cb040a0f695944648d6651cc8ed9f598", "sha256": "1531a765f68d5e861c8f54f41a261d8afd93f48490496da8319aaa5a44074a4d"}, "downloads": -1, "filename": "git-phab-0.1.tar.gz", "has_sig": false, "md5_digest": "cb040a0f695944648d6651cc8ed9f598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14645, "upload_time": "2016-04-06T10:08:01", "upload_time_iso_8601": "2016-04-06T10:08:01.522327Z", "url": "https://files.pythonhosted.org/packages/a4/55/2b9daa901b9528ba9375989045f1bb959aea2d8a02053caf898fae11370d/git-phab-0.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "efbf46f2b4f842bb38defef5ba08a3b7", "sha256": "25bea0874dbd2d233ec14eef0aa8435f57ef91326a7268ca829f7c24bf354dee"}, "downloads": -1, "filename": "git-phab-1.0.tar.gz", "has_sig": false, "md5_digest": "efbf46f2b4f842bb38defef5ba08a3b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14643, "upload_time": "2016-04-06T10:18:39", "upload_time_iso_8601": "2016-04-06T10:18:39.762281Z", "url": "https://files.pythonhosted.org/packages/6f/ae/e7f5b3c0e20e0f7910dbec7237bd3b88985be9ae960c4458746e7a09ec9e/git-phab-1.0.tar.gz", "yanked": false}], "1.9.0": [], "2.0.0": [{"comment_text": "", "digests": {"md5": "ee394a70801a4f2a228e4cf2e242525d", "sha256": "63b5b2b44297429edbb57458292c4bad224757ac0cd68686daab14c438bddc32"}, "downloads": -1, "filename": "git-phab-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ee394a70801a4f2a228e4cf2e242525d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21367, "upload_time": "2016-11-17T18:28:57", "upload_time_iso_8601": "2016-11-17T18:28:57.678515Z", "url": "https://files.pythonhosted.org/packages/d2/0d/1464f643c9be3f2cb5f08577a9fea9f588376cfa1af3ab0226c50d75b2a9/git-phab-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "25018177187dcb88dc04bc0a29c3a6c0", "sha256": "f3739cbd82c8aeeeeeb73ff70e361d1557ae2012230b3c102d826e40df00cc2c"}, "downloads": -1, "filename": "git-phab-2.1.0.tar.gz", "has_sig": false, "md5_digest": "25018177187dcb88dc04bc0a29c3a6c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22545, "upload_time": "2017-04-17T16:12:18", "upload_time_iso_8601": "2017-04-17T16:12:18.344540Z", "url": "https://files.pythonhosted.org/packages/9f/d4/b6aaf48995dbf0bbcb8aecee1d40d3a51defaeb7571f4a1ea62abff6e8d9/git-phab-2.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25018177187dcb88dc04bc0a29c3a6c0", "sha256": "f3739cbd82c8aeeeeeb73ff70e361d1557ae2012230b3c102d826e40df00cc2c"}, "downloads": -1, "filename": "git-phab-2.1.0.tar.gz", "has_sig": false, "md5_digest": "25018177187dcb88dc04bc0a29c3a6c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22545, "upload_time": "2017-04-17T16:12:18", "upload_time_iso_8601": "2017-04-17T16:12:18.344540Z", "url": "https://files.pythonhosted.org/packages/9f/d4/b6aaf48995dbf0bbcb8aecee1d40d3a51defaeb7571f4a1ea62abff6e8d9/git-phab-2.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:50 2020"}