{"info": {"author": "Eric Hurkman", "author_email": "erichurkman@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "============\nmisspellings\n============\n\n.. image:: https://travis-ci.org/myint/misspellings.svg?branch=master\n    :target: https://travis-ci.org/myint/misspellings\n    :alt: Build status\n\n\nSpell checker for code\n======================\n\nThis is a Python library and tool to check for misspelled words in\nsource code. It does this by looking for words from a list of\ncommon misspellings. The dictionary it uses to do this is based\non the Wikipedia list of common misspellings.\n\n* http://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines\n\nThe list has been slightly modified to remove some changes that\ncause a number of false positives. In particular ``ok->OK`` was\nremoved (ok is frequently used in perl tests for instance).\n\n\nOpinionated version\n===================\n\nThis includes custom additions that should be considered opinionated, such as\ncancellation vs. cancelation. This is not recommended for anyone's use.\n\n\nExample\n=======\n\nTo try it out, merely run the following (using an old coreutils\nsource tree as an example)::\n\n    $ git clone git://git.sv.gnu.org/coreutils -b v8.10 coreutils\n    $ find coreutils -name '*.c' | misspellings -f -\n    coreutils/src/cat.c:754: efficency -> \"efficiency\"\n    coreutils/src/comm.c:198: funtion -> \"function\"\n    coreutils/src/expr.c:21: seperate -> \"separate\"\n    coreutils/src/pr.c:1417: accomodate -> \"accommodate\"\n    coreutils/src/tac.c:342: unneccessary -> \"unnecessary\"\n    coreutils/src/test.c:91: supressed -> \"suppressed\"\n\n\nContributions\n=============\n\nContributions are welcome! Please add unit tests for new features\nor bug fixes. To run all the unit tests run ``./setup.py test``.\nIf you have `tox`_ installed, just run ``tox``.\n\nYou can review `coverage`_ of added tests by running\n``coverage run setup.py test`` and then running\n``coverage report -m``.\n\nNote that tests are run on `Travis`_ for all supported python\nversions whenever the tree on github is pushed to.\n\nThe packaged version is available via ``pip`` or ``easy_install``\nas ``misspellings``. The project page is on `pypi`_:\n\nThe source code is available in the following locations:\n\n- Bitbucket: https://bitbucket.org/lyda/misspell-check/src\n- code.google: http://code.google.com/p/misspell-check/\n- Github: https://github.com/lyda/misspell-check\n- Gitorious: https://gitorious.org/uu/misspell-check\n- Sourceforge: https://sourceforge.net/p/misspell-check\n\nPull requests on any of those platforms or emailed patches are fine.\n\nTo do\n=====\n\nSome items on the TODO list:\n\n* Implement option to interactively fix files.\n* Give some thought to supporting multiple languages?\n* Might a \"common misspellings\" list be different for different English\n  users - might an American make one set of mistakes while a German\n  writing English make another? Source of this data?\n* Fix sed flag.  Have it support sed -i optionally, have it output all\n  unambiguous sed commands, have it be more careful on what it\n  replaces. It might also be an idea to have a perl output option.\n* Use generators to allow finding errors as you go. Currently misspellings\n  grabs all files first, then checks them, which can take a while.\n* Lacking tests for misspellings cli.\n\n\nCredits\n=======\n\n- `Kevin Lyda`_: Initial shell goo and python version.\n- `Steven Myint`_: Better python idioms and style. Mixed case support.\n  Travis/tox support.\n- `Maciej Blizinski`_: Potential use in `OpenCSW`_ pushed move to python.\n- `Ville Skytt\u00e4`_: Sped up wordification, editor-friendly reporting.\n\n.. _`tox`: https://pypi.python.org/pypi/tox\n.. _`coverage`: https://pypi.python.org/pypi/coverage\n.. _`Travis`: https://travis-ci.org/lyda/misspell-check\n.. _`Kevin Lyda`: https://github.com/lyda\n.. _`Steven Myint`: https://github.com/myint\n.. _`Maciej Blizinski`: https://github.com/automatthias\n.. _`Ville Skytt\u00e4`: https://github.com/scop\n.. _`pypi`: https://pypi.python.org/pypi/misspellings\n.. _`OpenCSW`: http://www.opencsw.org/", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/erichurkman/misspellings/tarball/10.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/erichurkman/misspellings", "keywords": "check,code,spelling,spellcheck", "license": "GNU General Public License v3", "maintainer": null, "maintainer_email": null, "name": "misspellings_hurkman", "package_url": "https://pypi.org/project/misspellings_hurkman/", "platform": "POSIX", "project_url": "https://pypi.org/project/misspellings_hurkman/", "project_urls": {"Download": "https://github.com/erichurkman/misspellings/tarball/10.3", "Homepage": "https://github.com/erichurkman/misspellings"}, "release_url": "https://pypi.org/project/misspellings_hurkman/10.3/", "requires_dist": null, "requires_python": null, "summary": "A tool to detect misspellings with opinionated additions", "version": "10.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/myint/misspellings\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a6c5907e1b54034a24059aa95e708971139a7d9/68747470733a2f2f7472617669732d63692e6f72672f6d79696e742f6d69737370656c6c696e67732e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"spell-checker-for-code\">\n<h2>Spell checker for code</h2>\n<p>This is a Python library and tool to check for misspelled words in\nsource code. It does this by looking for words from a list of\ncommon misspellings. The dictionary it uses to do this is based\non the Wikipedia list of common misspellings.</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines</a></li>\n</ul>\n<p>The list has been slightly modified to remove some changes that\ncause a number of false positives. In particular <tt><span class=\"pre\">ok-&gt;OK</span></tt> was\nremoved (ok is frequently used in perl tests for instance).</p>\n</div>\n<div id=\"opinionated-version\">\n<h2>Opinionated version</h2>\n<p>This includes custom additions that should be considered opinionated, such as\ncancellation vs. cancelation. This is not recommended for anyone\u2019s use.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To try it out, merely run the following (using an old coreutils\nsource tree as an example):</p>\n<pre>$ git clone git://git.sv.gnu.org/coreutils -b v8.10 coreutils\n$ find coreutils -name '*.c' | misspellings -f -\ncoreutils/src/cat.c:754: efficency -&gt; \"efficiency\"\ncoreutils/src/comm.c:198: funtion -&gt; \"function\"\ncoreutils/src/expr.c:21: seperate -&gt; \"separate\"\ncoreutils/src/pr.c:1417: accomodate -&gt; \"accommodate\"\ncoreutils/src/tac.c:342: unneccessary -&gt; \"unnecessary\"\ncoreutils/src/test.c:91: supressed -&gt; \"suppressed\"\n</pre>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p>Contributions are welcome! Please add unit tests for new features\nor bug fixes. To run all the unit tests run <tt>./setup.py test</tt>.\nIf you have <a href=\"https://pypi.python.org/pypi/tox\" rel=\"nofollow\">tox</a> installed, just run <tt>tox</tt>.</p>\n<p>You can review <a href=\"https://pypi.python.org/pypi/coverage\" rel=\"nofollow\">coverage</a> of added tests by running\n<tt>coverage run setup.py test</tt> and then running\n<tt>coverage report <span class=\"pre\">-m</span></tt>.</p>\n<p>Note that tests are run on <a href=\"https://travis-ci.org/lyda/misspell-check\" rel=\"nofollow\">Travis</a> for all supported python\nversions whenever the tree on github is pushed to.</p>\n<p>The packaged version is available via <tt>pip</tt> or <tt>easy_install</tt>\nas <tt>misspellings</tt>. The project page is on <a href=\"https://pypi.python.org/pypi/misspellings\" rel=\"nofollow\">pypi</a>:</p>\n<p>The source code is available in the following locations:</p>\n<ul>\n<li>Bitbucket: <a href=\"https://bitbucket.org/lyda/misspell-check/src\" rel=\"nofollow\">https://bitbucket.org/lyda/misspell-check/src</a></li>\n<li>code.google: <a href=\"http://code.google.com/p/misspell-check/\" rel=\"nofollow\">http://code.google.com/p/misspell-check/</a></li>\n<li>Github: <a href=\"https://github.com/lyda/misspell-check\" rel=\"nofollow\">https://github.com/lyda/misspell-check</a></li>\n<li>Gitorious: <a href=\"https://gitorious.org/uu/misspell-check\" rel=\"nofollow\">https://gitorious.org/uu/misspell-check</a></li>\n<li>Sourceforge: <a href=\"https://sourceforge.net/p/misspell-check\" rel=\"nofollow\">https://sourceforge.net/p/misspell-check</a></li>\n</ul>\n<p>Pull requests on any of those platforms or emailed patches are fine.</p>\n</div>\n<div id=\"to-do\">\n<h2>To do</h2>\n<p>Some items on the TODO list:</p>\n<ul>\n<li>Implement option to interactively fix files.</li>\n<li>Give some thought to supporting multiple languages?</li>\n<li>Might a \u201ccommon misspellings\u201d list be different for different English\nusers - might an American make one set of mistakes while a German\nwriting English make another? Source of this data?</li>\n<li>Fix sed flag.  Have it support sed -i optionally, have it output all\nunambiguous sed commands, have it be more careful on what it\nreplaces. It might also be an idea to have a perl output option.</li>\n<li>Use generators to allow finding errors as you go. Currently misspellings\ngrabs all files first, then checks them, which can take a while.</li>\n<li>Lacking tests for misspellings cli.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li><a href=\"https://github.com/lyda\" rel=\"nofollow\">Kevin Lyda</a>: Initial shell goo and python version.</li>\n<li><a href=\"https://github.com/myint\" rel=\"nofollow\">Steven Myint</a>: Better python idioms and style. Mixed case support.\nTravis/tox support.</li>\n<li><a href=\"https://github.com/automatthias\" rel=\"nofollow\">Maciej Blizinski</a>: Potential use in <a href=\"http://www.opencsw.org/\" rel=\"nofollow\">OpenCSW</a> pushed move to python.</li>\n<li><a href=\"https://github.com/scop\" rel=\"nofollow\">Ville Skytt\u00e4</a>: Sped up wordification, editor-friendly reporting.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2427149, "releases": {"10.0": [{"comment_text": "", "digests": {"md5": "8ac9db598b55cf64791d9d65c00ced7c", "sha256": "939345ae6d3d73c31cc171d7b0448ebd5fc4748b660579545ff825950b073510"}, "downloads": -1, "filename": "misspellings_hurkman-10.0.tar.gz", "has_sig": false, "md5_digest": "8ac9db598b55cf64791d9d65c00ced7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52443, "upload_time": "2016-07-22T22:40:02", "upload_time_iso_8601": "2016-07-22T22:40:02.325322Z", "url": "https://files.pythonhosted.org/packages/a7/51/4c47e35f49e3d2af48f330383b3b3a15203765bba389c82e6967bc8ed8b0/misspellings_hurkman-10.0.tar.gz", "yanked": false}], "10.1": [{"comment_text": "", "digests": {"md5": "0728413d5a7bd436c0d08e7aadb568dd", "sha256": "8e2f2ccf74c88d5f946eb20e89a50900185fc6a7f9f01052d460f78af4e58e33"}, "downloads": -1, "filename": "misspellings_hurkman-10.1.tar.gz", "has_sig": false, "md5_digest": "0728413d5a7bd436c0d08e7aadb568dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52458, "upload_time": "2016-07-22T22:52:40", "upload_time_iso_8601": "2016-07-22T22:52:40.731910Z", "url": "https://files.pythonhosted.org/packages/41/e7/51e967bb061fef79c550e2a0a140f254768f9fb5a1fb64a00a5a6c2f6554/misspellings_hurkman-10.1.tar.gz", "yanked": false}], "10.2": [{"comment_text": "", "digests": {"md5": "fb6fd66701cbfe10a77efb334178b053", "sha256": "4e55dd0cfdd66b096e19cdae8db31f172f056418592c060491c08c35247dff7f"}, "downloads": -1, "filename": "misspellings_hurkman-10.2.tar.gz", "has_sig": false, "md5_digest": "fb6fd66701cbfe10a77efb334178b053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52605, "upload_time": "2016-10-27T20:14:13", "upload_time_iso_8601": "2016-10-27T20:14:13.121222Z", "url": "https://files.pythonhosted.org/packages/94/8a/e0ddf026ceccc579736eb323575f76bb3796f928c3437723aae9afa93146/misspellings_hurkman-10.2.tar.gz", "yanked": false}], "10.3": [{"comment_text": "", "digests": {"md5": "36ebdf2beea1624d3cae043cb1730d8a", "sha256": "059e448d042ce8759b74a0227e221ae309f6bc46f252d8570cac31b2ce92bb75"}, "downloads": -1, "filename": "misspellings_hurkman-10.3.tar.gz", "has_sig": false, "md5_digest": "36ebdf2beea1624d3cae043cb1730d8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52609, "upload_time": "2016-10-27T20:56:49", "upload_time_iso_8601": "2016-10-27T20:56:49.807401Z", "url": "https://files.pythonhosted.org/packages/c1/a2/efcf8270cc2c7b45394c838a138f911d05e5ee2a92de96d3ef63423ef489/misspellings_hurkman-10.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36ebdf2beea1624d3cae043cb1730d8a", "sha256": "059e448d042ce8759b74a0227e221ae309f6bc46f252d8570cac31b2ce92bb75"}, "downloads": -1, "filename": "misspellings_hurkman-10.3.tar.gz", "has_sig": false, "md5_digest": "36ebdf2beea1624d3cae043cb1730d8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52609, "upload_time": "2016-10-27T20:56:49", "upload_time_iso_8601": "2016-10-27T20:56:49.807401Z", "url": "https://files.pythonhosted.org/packages/c1/a2/efcf8270cc2c7b45394c838a138f911d05e5ee2a92de96d3ef63423ef489/misspellings_hurkman-10.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:02 2020"}