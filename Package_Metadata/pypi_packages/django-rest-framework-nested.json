{"info": {"author": "James R Parks", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# django-rest-framework-nested\r\nWork in progress for nested support for django-rest-framework\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n```pip install django-rest-framework-nested```\r\n\r\n\r\nQuickstart\r\n----------\r\n\r\n#### settings.py\r\n```\r\nREST_FRAMEWORK = {\r\n    ...\r\n    'DEFAULT_FILTER_BACKENDS': ('rest_framework_nested_test.filters.NestedFilterBackend',)\r\n    ...\r\n}\r\n```\r\n\r\n#### urls.py\r\n```\r\nfrom rest_framework import routers\r\nfrom rest_framework_nested import routers as nested_routers\r\nfrom django.conf.urls import url, include, patterns\r\nimport views\r\n...\r\n\r\napi_router = routers.DefaultRouter()\r\n\r\napi_router.register(r'parent', views.ParentViewSet)\r\napi_parent_router = nested_routers.NestedSimpleRouter(api_router, 'parent', lookup='parent')\r\napi_parent_router.register(r'child', views.ChildViewSet)\r\n...\r\n\r\nurlpatterns = patterns(''\r\n    ...\r\n    url(r'^api/', include(api_router.urls)),\r\n    ...\r\n)\r\n```\r\n\r\n#### serializers.py\r\n```\r\nfrom rest_framework import serializers\r\nfrom rest_framework_nested import serializers as nested_serializers\r\nimport models\r\n...\r\n\r\nclass ChildSerializer(nested_serializers.NestedHyperlinkedModelSerializer):\r\n    class Meta:\r\n        model = models.Child\r\n\r\n\r\nclass ParentSerializer(serializers.HyperlinkedModelSerializer):\r\n    class Meta:\r\n        model = models.Parent\r\n\r\n    values = ChildSerializer(many=True, required=False, read_only=True)\r\n```\r\n\r\n#### views.py\r\n```\r\nfrom rest_framework import viewsets\r\nimport models, serializers\r\n...\r\n\r\nclass ParentViewSet(viewsets.ModelViewSet):\r\n    \"\"\"\r\n    API endpoint that allows Parent to be viewed or edited.\r\n    \"\"\"\r\n    queryset = models.Parent.objects.get_queryset()\r\n    serializer_class = serializers.ParentSerializer\r\n\r\nclass ChildViewSet(viewsets.ModelViewSet):\r\n    \"\"\"\r\n    API endpoint that allows Child to be viewed or edited.\r\n    \"\"\"\r\n    queryset = models.Child.objects.get_queryset()\r\n    serializer_class = serializers.ChildSerializer\r\n```\r\n\r\nLicense\r\n=======\r\n\r\nThis package is licensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\r\nand can undestand more at http://choosealicense.com/licenses/apache/ on the\r\nsidebar notes.\r\n\r\nApache Licence v2.0 is a MIT-like licence. This means, in plain English:\r\n- Its trully open source\r\n- You can use it as you wish, for money or not\r\n- You can sublicence it (change the licence!!)\r\n- This way, you can even use it on your closed-source project\r\nAs long as:\r\n- You cannot use the authors name, logos, etc, to endorse a project\r\n- You keep the authors copyright notices where this code got used, even on your closed-source project\r\n(come on, even Microsoft kept BSD notices on Windows about its TCP/IP stack :P)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BakaBox/django-rest-framework-nested", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "django-rest-framework-nested", "package_url": "https://pypi.org/project/django-rest-framework-nested/", "platform": "", "project_url": "https://pypi.org/project/django-rest-framework-nested/", "project_urls": {"Homepage": "https://github.com/BakaBox/django-rest-framework-nested"}, "release_url": "https://pypi.org/project/django-rest-framework-nested/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Nested resources for the Django Rest Framework", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-rest-framework-nested\n<br>Work in progress for nested support for django-rest-framework\n<br>\n<br>\n<br>Installation\n<br>------------\n<br>\n<br>```pip install django-rest-framework-nested```\n<br>\n<br>\n<br>Quickstart\n<br>----------\n<br>\n<br>#### settings.py\n<br>```\n<br>REST_FRAMEWORK = {\n<br>    ...\n<br>    'DEFAULT_FILTER_BACKENDS': ('rest_framework_nested_test.filters.NestedFilterBackend',)\n<br>    ...\n<br>}\n<br>```\n<br>\n<br>#### urls.py\n<br>```\n<br>from rest_framework import routers\n<br>from rest_framework_nested import routers as nested_routers\n<br>from django.conf.urls import url, include, patterns\n<br>import views\n<br>...\n<br>\n<br>api_router = routers.DefaultRouter()\n<br>\n<br>api_router.register(r'parent', views.ParentViewSet)\n<br>api_parent_router = nested_routers.NestedSimpleRouter(api_router, 'parent', lookup='parent')\n<br>api_parent_router.register(r'child', views.ChildViewSet)\n<br>...\n<br>\n<br>urlpatterns = patterns(''\n<br>    ...\n<br>    url(r'^api/', include(api_router.urls)),\n<br>    ...\n<br>)\n<br>```\n<br>\n<br>#### serializers.py\n<br>```\n<br>from rest_framework import serializers\n<br>from rest_framework_nested import serializers as nested_serializers\n<br>import models\n<br>...\n<br>\n<br>class ChildSerializer(nested_serializers.NestedHyperlinkedModelSerializer):\n<br>    class Meta:\n<br>        model = models.Child\n<br>\n<br>\n<br>class ParentSerializer(serializers.HyperlinkedModelSerializer):\n<br>    class Meta:\n<br>        model = models.Parent\n<br>\n<br>    values = ChildSerializer(many=True, required=False, read_only=True)\n<br>```\n<br>\n<br>#### views.py\n<br>```\n<br>from rest_framework import viewsets\n<br>import models, serializers\n<br>...\n<br>\n<br>class ParentViewSet(viewsets.ModelViewSet):\n<br>    \"\"\"\n<br>    API endpoint that allows Parent to be viewed or edited.\n<br>    \"\"\"\n<br>    queryset = models.Parent.objects.get_queryset()\n<br>    serializer_class = serializers.ParentSerializer\n<br>\n<br>class ChildViewSet(viewsets.ModelViewSet):\n<br>    \"\"\"\n<br>    API endpoint that allows Child to be viewed or edited.\n<br>    \"\"\"\n<br>    queryset = models.Child.objects.get_queryset()\n<br>    serializer_class = serializers.ChildSerializer\n<br>```\n<br>\n<br>License\n<br>=======\n<br>\n<br>This package is licensed under the Apache License, Version 2.0 (the \"License\");\n<br>you may not use this file except in compliance with the License.\n<br>You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n<br>and can undestand more at http://choosealicense.com/licenses/apache/ on the\n<br>sidebar notes.\n<br>\n<br>Apache Licence v2.0 is a MIT-like licence. This means, in plain English:\n<br>- Its trully open source\n<br>- You can use it as you wish, for money or not\n<br>- You can sublicence it (change the licence!!)\n<br>- This way, you can even use it on your closed-source project\n<br>As long as:\n<br>- You cannot use the authors name, logos, etc, to endorse a project\n<br>- You keep the authors copyright notices where this code got used, even on your closed-source project\n<br>(come on, even Microsoft kept BSD notices on Windows about its TCP/IP stack :P)\n          </div>"}, "last_serial": 1546611, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a42a5cb8184a8ef88e5f2df07ceb8402", "sha256": "e4860852c53a214cf6137a6162be8e2b3c9675e21ecaf20e4b544b3478235aae"}, "downloads": -1, "filename": "django-rest-framework-nested-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a42a5cb8184a8ef88e5f2df07ceb8402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3343, "upload_time": "2015-05-14T05:06:12", "upload_time_iso_8601": "2015-05-14T05:06:12.206588Z", "url": "https://files.pythonhosted.org/packages/57/e8/606d344f529ab60f0175fbec5d17b51459e9758ec687e37f2a981b5c5b9c/django-rest-framework-nested-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a42a5cb8184a8ef88e5f2df07ceb8402", "sha256": "e4860852c53a214cf6137a6162be8e2b3c9675e21ecaf20e4b544b3478235aae"}, "downloads": -1, "filename": "django-rest-framework-nested-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a42a5cb8184a8ef88e5f2df07ceb8402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3343, "upload_time": "2015-05-14T05:06:12", "upload_time_iso_8601": "2015-05-14T05:06:12.206588Z", "url": "https://files.pythonhosted.org/packages/57/e8/606d344f529ab60f0175fbec5d17b51459e9758ec687e37f2a981b5c5b9c/django-rest-framework-nested-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:05 2020"}