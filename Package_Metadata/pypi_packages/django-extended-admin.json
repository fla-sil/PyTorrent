{"info": {"author": "Denis Savasteev", "author_email": "devmaster.zeb@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django"], "description": "IMPORTANT STEPS:\n1. add 'admin_extended' before 'django.contrib.*' and 'admin_tools.*' in INSTALLED_APPS\n2. add 'admin_extended.context_processors.settings' in TEMPLATE_CONTEXT_PROCESSORS \n3. add 'apptemplates.Loader' in TEMPLATE_LOADERS\n\nPackage allow some extra settings to customize - all of them are optional \n  - ADMIN_JQUERY_ADDITIONAL_VERSION\n  Is a string which defines additional version of jquery - it will include from google storage\n  Example: ADMIN_JQUERY_ADDITIONAL_VERSION = '1.9.0'\n  \n  - FAVICON_PREFIX\n  Is a string which defines favicon static prefix ('/static/' by default)\n  Example: FAVICON_PREFIX = '/static/images/'\n \n \nAlso it provides register_url decorator for ModelAdmin or Inline methods. It turns method to view, which returns HttpResponse object.\nTo use it you should add next line to yours urls.py\n  url(r'^admin/', include('admin_extended.urls')),\nIMPORTANT: it should be placed BEFORE including admin.site.urls, but AFTER admin.autodiscover()\n\nAfter then you may deco yours methods like that:\nclass SomeModelAdmin(ModelAdmin):\n    # finally url will be look like that: r'^/admin/app_label/model_name/extra_url/'\n    # arg must be a raw string and can not starts with /\n    # url arg could be omitted - \"method_name/$\" will be used as url\n    @register_url(r'extra_url/$')\n    def get_info(self, request):\n        return render_to_response('some_template.html')\n\nIMPORTANT: also you must decorate your method with @staticmethod or @classmethod if you use this feture in InlineModelAdmin\nNOTE: if you use this feature in InlineModelAdmin, \"model_name\" still be name of model registred with ModelAdmin which contains inline (so as \"app_label\").\nTo prevent it set \"use_inline_data\" arg to True in register_url decorator\n\n\n\nAt client side you could use:\n- autoinlines.js (a tool to create dynamic inlines, by clicking on checkboxes controllers)\nUsage: $.autoInline({\n  inlineName: \"hint\",\n  fields: [\"field_name_1\", \"field_name_2\"],\n  controllers: [\"m2m_field_name_1\", \"m2m_field_name_2\"],\n  requiredMask: 10,\n  hint: \"Check m2m_field_name_1\",\n  empty: \"None\"\n})\n\n- searchline.js (a tool to filter checkboxes)\nUsage: $(\"fieldset .field-fieldname\").addSearchLine();", "description_content_type": null, "docs_url": null, "download_url": "http://bitbucket.org/masterzeb/django-extended-admin/downloads/django-extended-admin-1.0.6.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/masterzeb/django-extended-admin/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-extended-admin", "package_url": "https://pypi.org/project/django-extended-admin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-extended-admin/", "project_urls": {"Download": "http://bitbucket.org/masterzeb/django-extended-admin/downloads/django-extended-admin-1.0.6.tar.gz", "Homepage": "http://bitbucket.org/masterzeb/django-extended-admin/"}, "release_url": "https://pypi.org/project/django-extended-admin/1.0.6/", "requires_dist": null, "requires_python": null, "summary": "Additional features for django admin", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            IMPORTANT STEPS:<br>1. add 'admin_extended' before 'django.contrib.*' and 'admin_tools.*' in INSTALLED_APPS<br>2. add 'admin_extended.context_processors.settings' in TEMPLATE_CONTEXT_PROCESSORS <br>3. add 'apptemplates.Loader' in TEMPLATE_LOADERS<br><br>Package allow some extra settings to customize - all of them are optional <br>  - ADMIN_JQUERY_ADDITIONAL_VERSION<br>  Is a string which defines additional version of jquery - it will include from google storage<br>  Example: ADMIN_JQUERY_ADDITIONAL_VERSION = '1.9.0'<br>  <br>  - FAVICON_PREFIX<br>  Is a string which defines favicon static prefix ('/static/' by default)<br>  Example: FAVICON_PREFIX = '/static/images/'<br> <br> <br>Also it provides register_url decorator for ModelAdmin or Inline methods. It turns method to view, which returns HttpResponse object.<br>To use it you should add next line to yours urls.py<br>  url(r'^admin/', include('admin_extended.urls')),<br>IMPORTANT: it should be placed BEFORE including admin.site.urls, but AFTER admin.autodiscover()<br><br>After then you may deco yours methods like that:<br>class SomeModelAdmin(ModelAdmin):<br>    # finally url will be look like that: r'^/admin/app_label/model_name/extra_url/'<br>    # arg must be a raw string and can not starts with /<br>    # url arg could be omitted - \"method_name/$\" will be used as url<br>    @register_url(r'extra_url/$')<br>    def get_info(self, request):<br>        return render_to_response('some_template.html')<br><br>IMPORTANT: also you must decorate your method with @staticmethod or @classmethod if you use this feture in InlineModelAdmin<br>NOTE: if you use this feature in InlineModelAdmin, \"model_name\" still be name of model registred with ModelAdmin which contains inline (so as \"app_label\").<br>To prevent it set \"use_inline_data\" arg to True in register_url decorator<br><br><br><br>At client side you could use:<br>- autoinlines.js (a tool to create dynamic inlines, by clicking on checkboxes controllers)<br>Usage: $.autoInline({<br>  inlineName: \"hint\",<br>  fields: [\"field_name_1\", \"field_name_2\"],<br>  controllers: [\"m2m_field_name_1\", \"m2m_field_name_2\"],<br>  requiredMask: 10,<br>  hint: \"Check m2m_field_name_1\",<br>  empty: \"None\"<br>})<br><br>- searchline.js (a tool to filter checkboxes)<br>Usage: $(\"fieldset .field-fieldname\").addSearchLine();\n          </div>"}, "last_serial": 714105, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6fcbcc182790f0e342089b46ad795374", "sha256": "769f0094c3155497b728f5a4fe535086cde7fb05e134488819ccbb2b789c910f"}, "downloads": -1, "filename": "django-extended-admin-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6fcbcc182790f0e342089b46ad795374", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8075, "upload_time": "2013-03-04T23:04:07", "upload_time_iso_8601": "2013-03-04T23:04:07.336142Z", "url": "https://files.pythonhosted.org/packages/cf/5c/3354bb46e0497a7db042498de2b03625f1bc272826dc3d778151e0ac2a18/django-extended-admin-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "709939cd5acc3b4d45244d5b91666746", "sha256": "5f7dfadea2ce80876504d0f24a64bcdfdf424760bd901dfee3485a894147fb68"}, "downloads": -1, "filename": "django-extended-admin-1.0.1.tar.gz", "has_sig": false, "md5_digest": "709939cd5acc3b4d45244d5b91666746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6955, "upload_time": "2013-03-07T23:43:09", "upload_time_iso_8601": "2013-03-07T23:43:09.954129Z", "url": "https://files.pythonhosted.org/packages/41/24/dcc5c6d50772924d28ec3a9f0263bfc29ac031b2f212a9c9f891c4aeaa5b/django-extended-admin-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a5eb4bd10e632367a5bf896413306e5f", "sha256": "b16e5511bf9c987b16b4e9999335a9beebae672cc41b24a2c53c00b817a69e68"}, "downloads": -1, "filename": "django-extended-admin-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a5eb4bd10e632367a5bf896413306e5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6840, "upload_time": "2013-04-02T14:14:09", "upload_time_iso_8601": "2013-04-02T14:14:09.000611Z", "url": "https://files.pythonhosted.org/packages/42/fd/6cfa4110888609e9c5c2f2f50e4aea53543a4f65bda3c445b0f2d2ab037f/django-extended-admin-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "97d74f987e62cdef3e8c1234c33062c3", "sha256": "15119444260c84cb302feba238d3889958615062a20bea5f1b7c71934db28f96"}, "downloads": -1, "filename": "django-extended-admin-1.0.3.tar.gz", "has_sig": false, "md5_digest": "97d74f987e62cdef3e8c1234c33062c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6840, "upload_time": "2013-04-02T14:30:00", "upload_time_iso_8601": "2013-04-02T14:30:00.333289Z", "url": "https://files.pythonhosted.org/packages/f2/db/de096e6b430fb2bf70c3e2a48c40261e758834a37ebbbf7ec04297cb590f/django-extended-admin-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b5e19507a868a449ca05bcf8b6960d96", "sha256": "c7c5ec70ab8d2945538c52bdcf1818dcc187d16ab75ae8e61ce3ca04c5a7edcb"}, "downloads": -1, "filename": "django-extended-admin-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b5e19507a868a449ca05bcf8b6960d96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6858, "upload_time": "2013-04-02T14:40:40", "upload_time_iso_8601": "2013-04-02T14:40:40.127957Z", "url": "https://files.pythonhosted.org/packages/31/3c/0422561a9830c44bb240e849eb5d313e4fbf816bdbd99f619311c30e6839/django-extended-admin-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "177643acddcda758f90996f6f615cba8", "sha256": "b5804b3c9d1d96724673a4449f324db363c39d726ba4ecbd411940712ac5fa0f"}, "downloads": -1, "filename": "django-extended-admin-1.0.5.tar.gz", "has_sig": false, "md5_digest": "177643acddcda758f90996f6f615cba8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6964, "upload_time": "2013-05-30T07:42:30", "upload_time_iso_8601": "2013-05-30T07:42:30.615627Z", "url": "https://files.pythonhosted.org/packages/a2/62/e93e03239cbe7cc0a5e912ba1cd3da13051cd5677f6c178cd4e15a4f6507/django-extended-admin-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "428f54a260fd3b7edb31de903491b1f6", "sha256": "536a623bba258a5df5ffd62255927e029915b75af8a41ea5ccc0e421ccf01a92"}, "downloads": -1, "filename": "django-extended-admin-1.0.6.tar.gz", "has_sig": false, "md5_digest": "428f54a260fd3b7edb31de903491b1f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6843, "upload_time": "2013-05-30T09:24:04", "upload_time_iso_8601": "2013-05-30T09:24:04.007731Z", "url": "https://files.pythonhosted.org/packages/3f/5e/279c756b9142a567dc61107fe48b85f9a8799b08b10253408acd28e4cb11/django-extended-admin-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "428f54a260fd3b7edb31de903491b1f6", "sha256": "536a623bba258a5df5ffd62255927e029915b75af8a41ea5ccc0e421ccf01a92"}, "downloads": -1, "filename": "django-extended-admin-1.0.6.tar.gz", "has_sig": false, "md5_digest": "428f54a260fd3b7edb31de903491b1f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6843, "upload_time": "2013-05-30T09:24:04", "upload_time_iso_8601": "2013-05-30T09:24:04.007731Z", "url": "https://files.pythonhosted.org/packages/3f/5e/279c756b9142a567dc61107fe48b85f9a8799b08b10253408acd28e4cb11/django-extended-admin-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:16 2020"}