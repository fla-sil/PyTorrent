{"info": {"author": "Robert Heath", "author_email": "rob@robheath.me.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# flask-censor\nA profanity censor by Rob Heath with hooks for Flask and Jinja2, based on `profanity` by Ben Friedland and `flask-recaptcha` by mardix.\n\n## Installation\n\n`pip install flask-censor`\n\n## Usage\n\nThe module can be used standalone (as `profanity` is), or can be integrated into a Flask app for use in Jinja2 templates.\n\n### Flask\n\nIn your Flask code, link flask-censor to your Flask app as so:\n\n```python\nfrom flask import Flask\nfrom flask_censor import Censor\n\napp = Flask(__name__)\ncensor = Censor(app=app)\n\n# or if adding app later:\n\ncensor = Censor()\ncensor.init_app(app)\n```\n\n### Jinja2\n\nWhen integrated with Flask the module provides a template filter `censor` accessible through Jinja2 templates using the filter pipe:\n\n```jinja\n<h1> {{ data_from_flask|censor }} </h1>\n```\n\n## Config\n\nIf integrated with Flask, the following config variables control behaviour:\n\n`CENSOR_WORDLIST`: path to file from which to read the word list for censorship\n\n`CENSOR_CHARACTERS`: string of values to use in place of censored word\n\nIf not integrating with Flask, these can be set using the keyword arguments `wordlist` and `censorchars` when instantiating the class.\n\n## API\n\n**censor.init_app(app=app)** initialises flask-censor to a Flask app instance\n\n**censor.import_wordlist(wordlist)** imports a new word list from the file at path `wordlist`\n\n**censor.censor(input_string)** goes over the input string, replacing sub-strings from the word list with sensor characters from the censor character pool\n\n**censor.set_censorchars(censorchars)** sets the pool of characters to use for censoring words from the word list\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Laukei/flask-censor", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-censor", "package_url": "https://pypi.org/project/flask-censor/", "platform": "", "project_url": "https://pypi.org/project/flask-censor/", "project_urls": {"Homepage": "https://github.com/Laukei/flask-censor"}, "release_url": "https://pypi.org/project/flask-censor/0.1/", "requires_dist": null, "requires_python": "", "summary": "A profanity censor with hooks for Flask and Jinja2", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flask-censor</h1>\n<p>A profanity censor by Rob Heath with hooks for Flask and Jinja2, based on <code>profanity</code> by Ben Friedland and <code>flask-recaptcha</code> by mardix.</p>\n<h2>Installation</h2>\n<p><code>pip install flask-censor</code></p>\n<h2>Usage</h2>\n<p>The module can be used standalone (as <code>profanity</code> is), or can be integrated into a Flask app for use in Jinja2 templates.</p>\n<h3>Flask</h3>\n<p>In your Flask code, link flask-censor to your Flask app as so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_censor</span> <span class=\"kn\">import</span> <span class=\"n\">Censor</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">censor</span> <span class=\"o\">=</span> <span class=\"n\">Censor</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">=</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or if adding app later:</span>\n\n<span class=\"n\">censor</span> <span class=\"o\">=</span> <span class=\"n\">Censor</span><span class=\"p\">()</span>\n<span class=\"n\">censor</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h3>Jinja2</h3>\n<p>When integrated with Flask the module provides a template filter <code>censor</code> accessible through Jinja2 templates using the filter pipe:</p>\n<pre><span class=\"x\">&lt;h1&gt; </span><span class=\"cp\">{{</span> <span class=\"nv\">data_from_flask</span><span class=\"o\">|</span><span class=\"nf\">censor</span> <span class=\"cp\">}}</span><span class=\"x\"> &lt;/h1&gt;</span>\n</pre>\n<h2>Config</h2>\n<p>If integrated with Flask, the following config variables control behaviour:</p>\n<p><code>CENSOR_WORDLIST</code>: path to file from which to read the word list for censorship</p>\n<p><code>CENSOR_CHARACTERS</code>: string of values to use in place of censored word</p>\n<p>If not integrating with Flask, these can be set using the keyword arguments <code>wordlist</code> and <code>censorchars</code> when instantiating the class.</p>\n<h2>API</h2>\n<p><strong>censor.init_app(app=app)</strong> initialises flask-censor to a Flask app instance</p>\n<p><strong>censor.import_wordlist(wordlist)</strong> imports a new word list from the file at path <code>wordlist</code></p>\n<p><strong>censor.censor(input_string)</strong> goes over the input string, replacing sub-strings from the word list with sensor characters from the censor character pool</p>\n<p><strong>censor.set_censorchars(censorchars)</strong> sets the pool of characters to use for censoring words from the word list</p>\n\n          </div>"}, "last_serial": 5298052, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1cc351b885058e2f0a4f13fc8b615334", "sha256": "217bda5c3024482d5ca4007a221bf21b93b59a38d5d45fdc16ecee7d673fcdb4"}, "downloads": -1, "filename": "flask_censor-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1cc351b885058e2f0a4f13fc8b615334", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4288, "upload_time": "2019-05-21T14:11:01", "upload_time_iso_8601": "2019-05-21T14:11:01.328073Z", "url": "https://files.pythonhosted.org/packages/7c/40/3a08b897ab37e41bf363ffd974735cc855ee7efc15f462f57d5072ec8165/flask_censor-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76ee807f3638029e9d862154e640c4d9", "sha256": "e6c22d40c81bec8c1ce6b99fd01f512a9721a6fb3e5705ac7a2469712d3a6b98"}, "downloads": -1, "filename": "flask-censor-0.1.tar.gz", "has_sig": false, "md5_digest": "76ee807f3638029e9d862154e640c4d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2966, "upload_time": "2019-05-21T14:11:03", "upload_time_iso_8601": "2019-05-21T14:11:03.891789Z", "url": "https://files.pythonhosted.org/packages/f9/41/8858e0c15bd90f6a2990142338deeb012caab0d5dfd0a18675b320937dcf/flask-censor-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cc351b885058e2f0a4f13fc8b615334", "sha256": "217bda5c3024482d5ca4007a221bf21b93b59a38d5d45fdc16ecee7d673fcdb4"}, "downloads": -1, "filename": "flask_censor-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1cc351b885058e2f0a4f13fc8b615334", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4288, "upload_time": "2019-05-21T14:11:01", "upload_time_iso_8601": "2019-05-21T14:11:01.328073Z", "url": "https://files.pythonhosted.org/packages/7c/40/3a08b897ab37e41bf363ffd974735cc855ee7efc15f462f57d5072ec8165/flask_censor-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76ee807f3638029e9d862154e640c4d9", "sha256": "e6c22d40c81bec8c1ce6b99fd01f512a9721a6fb3e5705ac7a2469712d3a6b98"}, "downloads": -1, "filename": "flask-censor-0.1.tar.gz", "has_sig": false, "md5_digest": "76ee807f3638029e9d862154e640c4d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2966, "upload_time": "2019-05-21T14:11:03", "upload_time_iso_8601": "2019-05-21T14:11:03.891789Z", "url": "https://files.pythonhosted.org/packages/f9/41/8858e0c15bd90f6a2990142338deeb012caab0d5dfd0a18675b320937dcf/flask-censor-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:02 2020"}