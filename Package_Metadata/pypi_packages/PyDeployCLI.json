{"info": {"author": "yukinotenshi", "author_email": "gabriel.bentara@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# pydeploy\nAutomatically deploy git repositories\n\n[![Build Status](https://travis-ci.com/yukinotenshi/pydeploy.svg?branch=master)](https://travis-ci.com/yukinotenshi/pydeploy)\n\n\n## Background\nI made this tool because I need something to\nautomatically deploy my web services on staging/testing\nserver. However, I don't really need it to be\nrobust like Jenkins. I only need a simple script\nthat just easily customizable, lightweight, and easy to configure.\n\n## Installation\n```\npip install pydeploycli\n```\n\n## Usage\n1. Create a config file in JSON format like this\n    ```\n    {\n        \"pre_script\": [\"echo 1\", \"echo 2\"],\n        \"post_script\": [\"python3 app.py\"],\n        \"remote\": \"<remote>\",\n        \"branch\": \"<branch>\",\n        \"notifier\": {\n            \"type\": \"<discord / slack>\",\n            \"receiver\": \"<webhook>\"\n        }\n    }\n    ```\n    pre_script are bash commands that are executed\n    before pull.\n    post_scripts are the same but executed after\n    pull.\n    You can ignore the notifier part if you don't\nwant to be notified. Save this config to file.\n\n2. Clone your repository, move to your repository\ndirectory. If your repository is private, you\ncan store your username & password first or use\nssh.\n\n3. Execute pyDeploy in that directory\n    ```\n    pydeploy \"path/to/config/file\"\n    ```\n\n    Your webhook will be running on\n    ```\n    http://IP:9999/<endpoint>\n    ```\n\n    endpoint will be printed when you execute pydeploy\n    you can also set your own endpoint by providing `--endpoint` option\n4. Copy that webhook URL and put it on your\ngithub webhook setting. Select the content type\nto json.\n\n5. Done! Now your server will automatically\npull and execute your predefined script.\n\n## Issues? Changes?\nJust open an issue/pull request. Thanks", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yukinotenshi/pydeploy", "keywords": "automatic deploy deployment auto pull git", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyDeployCLI", "package_url": "https://pypi.org/project/PyDeployCLI/", "platform": "", "project_url": "https://pypi.org/project/PyDeployCLI/", "project_urls": {"Homepage": "https://github.com/yukinotenshi/pydeploy"}, "release_url": "https://pypi.org/project/PyDeployCLI/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Automatically deploy git repositories", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pydeploy</h1>\n<p>Automatically deploy git repositories</p>\n<p><a href=\"https://travis-ci.com/yukinotenshi/pydeploy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c33fded5aa6cab9486bc72c035827fc0df6f9cf/68747470733a2f2f7472617669732d63692e636f6d2f79756b696e6f74656e7368692f70796465706c6f792e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Background</h2>\n<p>I made this tool because I need something to\nautomatically deploy my web services on staging/testing\nserver. However, I don't really need it to be\nrobust like Jenkins. I only need a simple script\nthat just easily customizable, lightweight, and easy to configure.</p>\n<h2>Installation</h2>\n<pre><code>pip install pydeploycli\n</code></pre>\n<h2>Usage</h2>\n<ol>\n<li>\n<p>Create a config file in JSON format like this</p>\n<pre><code>{\n    \"pre_script\": [\"echo 1\", \"echo 2\"],\n    \"post_script\": [\"python3 app.py\"],\n    \"remote\": \"&lt;remote&gt;\",\n    \"branch\": \"&lt;branch&gt;\",\n    \"notifier\": {\n        \"type\": \"&lt;discord / slack&gt;\",\n        \"receiver\": \"&lt;webhook&gt;\"\n    }\n}\n</code></pre>\n<p>pre_script are bash commands that are executed\nbefore pull.\npost_scripts are the same but executed after\npull.\nYou can ignore the notifier part if you don't\nwant to be notified. Save this config to file.</p>\n</li>\n<li>\n<p>Clone your repository, move to your repository\ndirectory. If your repository is private, you\ncan store your username &amp; password first or use\nssh.</p>\n</li>\n<li>\n<p>Execute pyDeploy in that directory</p>\n<pre><code>pydeploy \"path/to/config/file\"\n</code></pre>\n<p>Your webhook will be running on</p>\n<pre><code>http://IP:9999/&lt;endpoint&gt;\n</code></pre>\n<p>endpoint will be printed when you execute pydeploy\nyou can also set your own endpoint by providing <code>--endpoint</code> option</p>\n</li>\n<li>\n<p>Copy that webhook URL and put it on your\ngithub webhook setting. Select the content type\nto json.</p>\n</li>\n<li>\n<p>Done! Now your server will automatically\npull and execute your predefined script.</p>\n</li>\n</ol>\n<h2>Issues? Changes?</h2>\n<p>Just open an issue/pull request. Thanks</p>\n\n          </div>"}, "last_serial": 4572489, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b0379a8d47158c9e5c86882fbb4d9534", "sha256": "217d35c2dd3a1f85aa3670f407cdf8726859f74b7e7f164edff3ec9c0d2babf4"}, "downloads": -1, "filename": "PyDeployCLI-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b0379a8d47158c9e5c86882fbb4d9534", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6115, "upload_time": "2018-12-07T16:06:15", "upload_time_iso_8601": "2018-12-07T16:06:15.772711Z", "url": "https://files.pythonhosted.org/packages/b5/63/c416b8313576796c29997cb8611ac3e41e32516ac165c3b6e67792d4b5ee/PyDeployCLI-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b536bd400a2710b01b66f54ff4d76f77", "sha256": "6d6172d2d2f7c6d1b213b1758ea537e84f0464fbfd3987ce3cf1f35f6d37d04a"}, "downloads": -1, "filename": "PyDeployCLI-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b536bd400a2710b01b66f54ff4d76f77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6110, "upload_time": "2018-12-07T16:07:09", "upload_time_iso_8601": "2018-12-07T16:07:09.877678Z", "url": "https://files.pythonhosted.org/packages/c1/ba/3179f34e3468f17d5f4a058818398c6699dc0d02db942c2207839f12ac7a/PyDeployCLI-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0fd7ed59eb200346cf26535e8bbf750b", "sha256": "dc2193322641833492ea553db9fd3364df53fe34c23614860b779036a68ed758"}, "downloads": -1, "filename": "PyDeployCLI-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0fd7ed59eb200346cf26535e8bbf750b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6143, "upload_time": "2018-12-07T16:14:45", "upload_time_iso_8601": "2018-12-07T16:14:45.629059Z", "url": "https://files.pythonhosted.org/packages/2f/b4/69922746b3efb1308713f1c818272938f55d91a00f4003834e49668a9c70/PyDeployCLI-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fd7ed59eb200346cf26535e8bbf750b", "sha256": "dc2193322641833492ea553db9fd3364df53fe34c23614860b779036a68ed758"}, "downloads": -1, "filename": "PyDeployCLI-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0fd7ed59eb200346cf26535e8bbf750b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6143, "upload_time": "2018-12-07T16:14:45", "upload_time_iso_8601": "2018-12-07T16:14:45.629059Z", "url": "https://files.pythonhosted.org/packages/2f/b4/69922746b3efb1308713f1c818272938f55d91a00f4003834e49668a9c70/PyDeployCLI-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:09 2020"}