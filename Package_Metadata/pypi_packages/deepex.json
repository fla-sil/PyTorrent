{"info": {"author": "zhangzehua", "author_email": "zzh_0729@foxmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# DeepEX\n\n[TOC]\n\n## Overview\n\n**DeepEX**  is a universal convenient frame with keras and Tensorflow,\n\nYou can get well-known Wide&Deep model such as DeepFM here. \n\nOr, you can define you custom model use this frame.\n\n\n\n\n\n### How to Install\n\n* For Linux:\n\n```shell\npip install deepex\n```\n\n* For Windows:\n\nYou need active cmd first and, \n\n```powershell\npip install deepex\n```\n\nNotice: This frame needs keras and tensorflow, maybe it has some problem on windows with python 2.x because of tensorflow.\n\n\n\n\n\n## DeepEX Class API\n\nIn the functional API, given some parmeters, you can instantiate a `DeepEX` object, via:\n\n```python\nDeepEX(data = None, feature_dim=None, category_index=None,embedding_dict_size=1000,\n      embedding_size=64, depths_size = [1024,256,64],class_num=2,\n      aggregate_flag=False, metrics=None, optimizer='Adam', activation='relu',\n      embedding_way='dense')\n```\n\nOnly data is necessary, other parmeters have default value.\n\n**Arguments**\n\n* **data**: np.array\n\n* **feature_dim**: integer, feature dimension\n\n* **category_index**: \n\n  1. Can be a 2D list, like [A,B], A and B also a list, if len(A)>1, that means the element of A belong to a field, and will be input embedding layer together.\n\n  2. Can be a integer, it specific feature_dim % integer == 0, that means split feature as equal intervals with category_index\n\n  3. If None, all of feature will be embedding\n\n  4. *NEW UPDATE: Can be a mix type, like [A,B,c], A and B is list but c is a integer. It can achive more flexible way of split field, A and B will be split as col.1 and the rest of element will be split as col.2 with parameter c. Notice: c must be the last element, and the count of remaining element can be evenly divisible by c* \n\n* **embedding_dict_size**: embedding dict size of categroy feature\n\n* **embedding_size**: embedding size, it make output size like (?, len(category_index), embedding_size)\n\n* **depths_size**: network of deep part parameter, last dimension means fc7 shape\n\n* **class_num**: multi class or binary class, if class_num < 2, you will get a regression model\n\n* **aggregate_flag**: \n  * if True, first_order and second_order of FM part output as (?,1)\n  * if False, output as (?, len(category_index)) and (?, embedding_size)\n\n* **metrics**: can recive custom metrics, if None, binary class use AUC, multi class use auccary\n\n* **optimizer**: Network optimizer, default adam,  see [optimizer](https://keras.io/optimizers/).\n\n* **activation**: Deep part activation, default relu, see [activations](https://keras.io/activations/).\n\n* **embedding_way**: How network to do embedding, Embedding layer or Dense layer\n\n\n\n\n\n## Methods\n\n### **get_embedding_layer**\n\nembedding input data as class parameter. \n\n**return**\n\n* inputs: A list, which elements are Input layer,  prepare to deep model\n* numerics: A list, which elements are numeric feature tensor\n* embeddings:  A list, which elements are categroy feature embedding tensor\n* embedding_layer: A tensor, which is concate numeric feature tensor and categroy feature embedding tensor\n\n-----\n\n### fm\n\nget fm part\n\n**return**\n\n- A tensor, shape depends on class parameter **aggregate_flag**\n\n-----\n\n### deep\n\nget deep part\n\n**return**\n\n* inputs: A list, which elements are Input layer,  prepare to deep model\n* model: A tensor, which is also a keras functional layer\n\n-----\n\n### deepfm\n\nget deepfm model, fc7 which is the last layer before classifier, it will be a class variable\n\n**return**\n\n* model: A keras functional model\n\n-----\n\n### auc\n\n```python\nauc(y_true, y_pred)\n```\n\nA custom metrics, when class_num=2, use this metrics to evaluate model\n\n-----\n\n### fit\n\n```python\nfit(model, y, save_model_path = None, batch_size=None, epochs=1, verbose=1,\n    callbacks=None,validation_split=0.0, validation_data=None,\n    shuffle=True, class_weight=None,sample_weight=None, \n    initial_epoch=0, steps_per_epoch=None, validation_steps=None)\n```\n\nfit data to train model\n\n**Arguments**\n\n* **model**: a DeepEX model\n* **save_model_path**: A string, where model to save, if None, model will not be saved\n* **others**: see document [keras fit](https://keras.io/models/model/#fit)\n\n\n\n### get_fc7_output\n\n```python\nget_fc7_output(self, model_path = None, layer_name = 'fc7', data = None)\n```\n\nGet model's fc7 layer output, it can use for other operation, such as model ensemble\n\n**Arguments**\n\n- **model_path**: A string, only model_path is necessary,  tell function where model is, the model file should be saved use keras.models.Model.save() function.\n- **layer_name**: A string, default 'fc7'\n- **data**: numpy array, NOTICE: if you declare a DeepEX object use same parameter just like model will be load (actually just need [data] and [category_index] are same), this parametre can be None, data will read from self.data. HOWEVER, if you declare other way, you need split data format as model input\n\n**return**\n\n* intermediate_output: Numpy array(s) of intermediate outputs.\n\n\n\n## How to Use\n\nThis class is very easy to use,  three steps to go\uff1a\n\n```python\n# step 1, declare DeepEX object\ndeepEX = DeepEX(...)\n\n# step 2, get model you want\nmodel = deepEX.deepfm()\n\n# step 3, train and save\ndeepEX.fit(...)\n```\n\n### example\n\n```python\nfrom deepex import *\nimport numpy as np\n\nsamples = 100000    # set samples num\nfeat_dim = 10   # set feat_dim \ncate = np.random.randint(1,6,samples)   # set a categroy feat randomly\nx = np.random.random((samples,feat_dim))    # generate feat randomly\nx[:,3] = cate   # chose a column to be categroy feat\ny = np.random.randint(0,2,samples)  # generate label\n\n# declare DeepEX objects\ndeepEX = DeepEX(data = x, feature_dim=feat_dim, category_index=[0,1],4, embedding_dict_size=1000, \nembedding_size=64, depths_size = [1024,256,64], class_num=2, \naggregate_flag=False, metrics=None, optimizer='Adam', activation='relu', embedding_way='emb')\n\nmodel = deepEX.deepfm()  # get DeepFM\nplot_model(model,'deepFM.png',show_shapes=True) # show model graph\n\n# train deepfm\npath = None\ndeepEX.fit(model, y, save_model_path=path, batch_size=None, epochs=1, verbose=1, callbacks=None,validation_split=0.0, validation_data=None, shuffle=True, class_weight=None,sample_weight=None, initial_epoch=0, steps_per_epoch=None, validation_steps=None)\n\n# get fc7 output tensor\nfc7 = deepEX.get_fc7_output(model_path=path, layer_name='fc7', data=deepEX.data_split)\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/FlashSnail/DeepEX/tags", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FlashSnail/DeepEX", "keywords": "deep learning,keras,tensorflow,wide&deep,frame", "license": "", "maintainer": "", "maintainer_email": "", "name": "deepex", "package_url": "https://pypi.org/project/deepex/", "platform": "", "project_url": "https://pypi.org/project/deepex/", "project_urls": {"Download": "https://github.com/FlashSnail/DeepEX/tags", "Homepage": "https://github.com/FlashSnail/DeepEX"}, "release_url": "https://pypi.org/project/deepex/0.0.16/", "requires_dist": ["numpy (>=1.16.2)", "keras (>=2.2.4)"], "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "summary": "DeepEX is a universal convenient frame with keras and Tensorflow. You can get well-known Wide&Deep model such as DeepFM here. Or, you can define you custom model use this frame.", "version": "0.0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DeepEX</h1>\n<p>[TOC]</p>\n<h2>Overview</h2>\n<p><strong>DeepEX</strong>  is a universal convenient frame with keras and Tensorflow,</p>\n<p>You can get well-known Wide&amp;Deep model such as DeepFM here.</p>\n<p>Or, you can define you custom model use this frame.</p>\n<h3>How to Install</h3>\n<ul>\n<li>For Linux:</li>\n</ul>\n<pre>pip install deepex\n</pre>\n<ul>\n<li>For Windows:</li>\n</ul>\n<p>You need active cmd first and,</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">deepex</span>\n</pre>\n<p>Notice: This frame needs keras and tensorflow, maybe it has some problem on windows with python 2.x because of tensorflow.</p>\n<h2>DeepEX Class API</h2>\n<p>In the functional API, given some parmeters, you can instantiate a <code>DeepEX</code> object, via:</p>\n<pre><span class=\"n\">DeepEX</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">feature_dim</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">category_index</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">embedding_dict_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span>\n      <span class=\"n\">embedding_size</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">depths_size</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1024</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">64</span><span class=\"p\">],</span><span class=\"n\">class_num</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n      <span class=\"n\">aggregate_flag</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'Adam'</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s1\">'relu'</span><span class=\"p\">,</span>\n      <span class=\"n\">embedding_way</span><span class=\"o\">=</span><span class=\"s1\">'dense'</span><span class=\"p\">)</span>\n</pre>\n<p>Only data is necessary, other parmeters have default value.</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li>\n<p><strong>data</strong>: np.array</p>\n</li>\n<li>\n<p><strong>feature_dim</strong>: integer, feature dimension</p>\n</li>\n<li>\n<p><strong>category_index</strong>:</p>\n<ol>\n<li>\n<p>Can be a 2D list, like [A,B], A and B also a list, if len(A)&gt;1, that means the element of A belong to a field, and will be input embedding layer together.</p>\n</li>\n<li>\n<p>Can be a integer, it specific feature_dim % integer == 0, that means split feature as equal intervals with category_index</p>\n</li>\n<li>\n<p>If None, all of feature will be embedding</p>\n</li>\n<li>\n<p><em>NEW UPDATE: Can be a mix type, like [A,B,c], A and B is list but c is a integer. It can achive more flexible way of split field, A and B will be split as col.1 and the rest of element will be split as col.2 with parameter c. Notice: c must be the last element, and the count of remaining element can be evenly divisible by c</em></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>embedding_dict_size</strong>: embedding dict size of categroy feature</p>\n</li>\n<li>\n<p><strong>embedding_size</strong>: embedding size, it make output size like (?, len(category_index), embedding_size)</p>\n</li>\n<li>\n<p><strong>depths_size</strong>: network of deep part parameter, last dimension means fc7 shape</p>\n</li>\n<li>\n<p><strong>class_num</strong>: multi class or binary class, if class_num &lt; 2, you will get a regression model</p>\n</li>\n<li>\n<p><strong>aggregate_flag</strong>:</p>\n<ul>\n<li>if True, first_order and second_order of FM part output as (?,1)</li>\n<li>if False, output as (?, len(category_index)) and (?, embedding_size)</li>\n</ul>\n</li>\n<li>\n<p><strong>metrics</strong>: can recive custom metrics, if None, binary class use AUC, multi class use auccary</p>\n</li>\n<li>\n<p><strong>optimizer</strong>: Network optimizer, default adam,  see <a href=\"https://keras.io/optimizers/\" rel=\"nofollow\">optimizer</a>.</p>\n</li>\n<li>\n<p><strong>activation</strong>: Deep part activation, default relu, see <a href=\"https://keras.io/activations/\" rel=\"nofollow\">activations</a>.</p>\n</li>\n<li>\n<p><strong>embedding_way</strong>: How network to do embedding, Embedding layer or Dense layer</p>\n</li>\n</ul>\n<h2>Methods</h2>\n<h3><strong>get_embedding_layer</strong></h3>\n<p>embedding input data as class parameter.</p>\n<p><strong>return</strong></p>\n<ul>\n<li>inputs: A list, which elements are Input layer,  prepare to deep model</li>\n<li>numerics: A list, which elements are numeric feature tensor</li>\n<li>embeddings:  A list, which elements are categroy feature embedding tensor</li>\n<li>embedding_layer: A tensor, which is concate numeric feature tensor and categroy feature embedding tensor</li>\n</ul>\n<hr>\n<h3>fm</h3>\n<p>get fm part</p>\n<p><strong>return</strong></p>\n<ul>\n<li>A tensor, shape depends on class parameter <strong>aggregate_flag</strong></li>\n</ul>\n<hr>\n<h3>deep</h3>\n<p>get deep part</p>\n<p><strong>return</strong></p>\n<ul>\n<li>inputs: A list, which elements are Input layer,  prepare to deep model</li>\n<li>model: A tensor, which is also a keras functional layer</li>\n</ul>\n<hr>\n<h3>deepfm</h3>\n<p>get deepfm model, fc7 which is the last layer before classifier, it will be a class variable</p>\n<p><strong>return</strong></p>\n<ul>\n<li>model: A keras functional model</li>\n</ul>\n<hr>\n<h3>auc</h3>\n<pre><span class=\"n\">auc</span><span class=\"p\">(</span><span class=\"n\">y_true</span><span class=\"p\">,</span> <span class=\"n\">y_pred</span><span class=\"p\">)</span>\n</pre>\n<p>A custom metrics, when class_num=2, use this metrics to evaluate model</p>\n<hr>\n<h3>fit</h3>\n<pre><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">save_model_path</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">validation_split</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">class_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n    <span class=\"n\">initial_epoch</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">steps_per_epoch</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">validation_steps</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>fit data to train model</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>model</strong>: a DeepEX model</li>\n<li><strong>save_model_path</strong>: A string, where model to save, if None, model will not be saved</li>\n<li><strong>others</strong>: see document <a href=\"https://keras.io/models/model/#fit\" rel=\"nofollow\">keras fit</a></li>\n</ul>\n<h3>get_fc7_output</h3>\n<pre><span class=\"n\">get_fc7_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"s1\">'fc7'</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Get model's fc7 layer output, it can use for other operation, such as model ensemble</p>\n<p><strong>Arguments</strong></p>\n<ul>\n<li><strong>model_path</strong>: A string, only model_path is necessary,  tell function where model is, the model file should be saved use keras.models.Model.save() function.</li>\n<li><strong>layer_name</strong>: A string, default 'fc7'</li>\n<li><strong>data</strong>: numpy array, NOTICE: if you declare a DeepEX object use same parameter just like model will be load (actually just need [data] and [category_index] are same), this parametre can be None, data will read from self.data. HOWEVER, if you declare other way, you need split data format as model input</li>\n</ul>\n<p><strong>return</strong></p>\n<ul>\n<li>intermediate_output: Numpy array(s) of intermediate outputs.</li>\n</ul>\n<h2>How to Use</h2>\n<p>This class is very easy to use,  three steps to go\uff1a</p>\n<pre><span class=\"c1\"># step 1, declare DeepEX object</span>\n<span class=\"n\">deepEX</span> <span class=\"o\">=</span> <span class=\"n\">DeepEX</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># step 2, get model you want</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">deepEX</span><span class=\"o\">.</span><span class=\"n\">deepfm</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># step 3, train and save</span>\n<span class=\"n\">deepEX</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<h3>example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepex</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"mi\">100000</span>    <span class=\"c1\"># set samples num</span>\n<span class=\"n\">feat_dim</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>   <span class=\"c1\"># set feat_dim </span>\n<span class=\"n\">cate</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"n\">samples</span><span class=\"p\">)</span>   <span class=\"c1\"># set a categroy feat randomly</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"n\">samples</span><span class=\"p\">,</span><span class=\"n\">feat_dim</span><span class=\"p\">))</span>    <span class=\"c1\"># generate feat randomly</span>\n<span class=\"n\">x</span><span class=\"p\">[:,</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">cate</span>   <span class=\"c1\"># chose a column to be categroy feat</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">samples</span><span class=\"p\">)</span>  <span class=\"c1\"># generate label</span>\n\n<span class=\"c1\"># declare DeepEX objects</span>\n<span class=\"n\">deepEX</span> <span class=\"o\">=</span> <span class=\"n\">DeepEX</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">feature_dim</span><span class=\"o\">=</span><span class=\"n\">feat_dim</span><span class=\"p\">,</span> <span class=\"n\">category_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">embedding_dict_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> \n<span class=\"n\">embedding_size</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">depths_size</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1024</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">64</span><span class=\"p\">],</span> <span class=\"n\">class_num</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> \n<span class=\"n\">aggregate_flag</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s1\">'Adam'</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s1\">'relu'</span><span class=\"p\">,</span> <span class=\"n\">embedding_way</span><span class=\"o\">=</span><span class=\"s1\">'emb'</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">deepEX</span><span class=\"o\">.</span><span class=\"n\">deepfm</span><span class=\"p\">()</span>  <span class=\"c1\"># get DeepFM</span>\n<span class=\"n\">plot_model</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span><span class=\"s1\">'deepFM.png'</span><span class=\"p\">,</span><span class=\"n\">show_shapes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># show model graph</span>\n\n<span class=\"c1\"># train deepfm</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">deepEX</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">save_model_path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">validation_split</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">class_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">initial_epoch</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">steps_per_epoch</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">validation_steps</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get fc7 output tensor</span>\n<span class=\"n\">fc7</span> <span class=\"o\">=</span> <span class=\"n\">deepEX</span><span class=\"o\">.</span><span class=\"n\">get_fc7_output</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"s1\">'fc7'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">deepEX</span><span class=\"o\">.</span><span class=\"n\">data_split</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5413158, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3e6a7790b5015ed9f5d5f350fca57f08", "sha256": "c4851ff7f3e00f15800e6ea6afb0596553669504e0d35f3e50dd99f9ed6c632a"}, "downloads": -1, "filename": "deepex-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3e6a7790b5015ed9f5d5f350fca57f08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4563, "upload_time": "2019-06-04T06:48:01", "upload_time_iso_8601": "2019-06-04T06:48:01.044171Z", "url": "https://files.pythonhosted.org/packages/ba/55/b789fdba0a4d0d4d81c615421d3cd8a88f905e7990c94623c1382664fe64/deepex-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0444f00b336d20833bacc4cd0d85133", "sha256": "450921f2a75826e2aa960cfe7d7aad4c79f9403babb200fe901c1e6ae06b5e05"}, "downloads": -1, "filename": "deepex-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b0444f00b336d20833bacc4cd0d85133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3883, "upload_time": "2019-06-04T06:48:03", "upload_time_iso_8601": "2019-06-04T06:48:03.494961Z", "url": "https://files.pythonhosted.org/packages/98/e9/48831f366c26025f639d33e6deb3c813b24e2c62a050c6124ce0babfb79a/deepex-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "17bbb2a6c74d485a548e97ae9c6e50b0", "sha256": "cf44c49ea5782f6af945f0aad87d158fc2ef04b7faf607e896c6522318ae6761"}, "downloads": -1, "filename": "deepex-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "17bbb2a6c74d485a548e97ae9c6e50b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8402, "upload_time": "2019-06-10T06:46:51", "upload_time_iso_8601": "2019-06-10T06:46:51.445904Z", "url": "https://files.pythonhosted.org/packages/89/09/6ab887f38d3c593217ba27f98c38f47f3436b1a45623431af1102033eb45/deepex-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f5c491f7a968a37752806ee394c5d98", "sha256": "ea060927e356c6283690ecd28dc24732b95e42d7afa632142b809f494174c930"}, "downloads": -1, "filename": "deepex-0.0.10.tar.gz", "has_sig": false, "md5_digest": "8f5c491f7a968a37752806ee394c5d98", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 7210, "upload_time": "2019-06-10T06:46:53", "upload_time_iso_8601": "2019-06-10T06:46:53.352151Z", "url": "https://files.pythonhosted.org/packages/b3/fb/88b908184058f9acc564af3aa8a0b291836f6526c0beb786cb8492308968/deepex-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "3c90fa5c46c4bcf3c98f941ce7b7f37e", "sha256": "20394b52d2c01f838b843470421f7d2d9b63269847f2fc441488a10513600807"}, "downloads": -1, "filename": "deepex-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "3c90fa5c46c4bcf3c98f941ce7b7f37e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8546, "upload_time": "2019-06-10T08:31:10", "upload_time_iso_8601": "2019-06-10T08:31:10.954318Z", "url": "https://files.pythonhosted.org/packages/94/cb/ffeaec00f23e0c1a577344b5bce9d76027e5ce820c31d848cc4e082667f9/deepex-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb87fcc48a0e18f47bd8af57c8b07886", "sha256": "7e6a6295a0e47f519b3d5d0844e823e07f54f290fadc608550a1433de7b6c1e5"}, "downloads": -1, "filename": "deepex-0.0.11.tar.gz", "has_sig": false, "md5_digest": "cb87fcc48a0e18f47bd8af57c8b07886", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8778, "upload_time": "2019-06-10T08:31:12", "upload_time_iso_8601": "2019-06-10T08:31:12.849155Z", "url": "https://files.pythonhosted.org/packages/90/43/b57cc7d3f60b39cc4a2c8b0f83035bbe2496bda8d33f9d9c453b8e33353c/deepex-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "49c315453da1a5f089a14376c287973b", "sha256": "2179b5cfa180cb7418b5cb523a8b0e9c4b5a87770a86e7dc9c8e4e706e48eea5"}, "downloads": -1, "filename": "deepex-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "49c315453da1a5f089a14376c287973b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8565, "upload_time": "2019-06-10T09:43:20", "upload_time_iso_8601": "2019-06-10T09:43:20.852520Z", "url": "https://files.pythonhosted.org/packages/a4/3c/214c6537ba1bfc6ba6e1a52675ff8e2d60be068bb96adb464a5de28b12d5/deepex-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d030a129943298f1c87fd1b1b6b15a2f", "sha256": "b95145e98f56653204ea5c8aa6edc60ec29e7822aa2a0b674937f0d45681fb2d"}, "downloads": -1, "filename": "deepex-0.0.12.tar.gz", "has_sig": false, "md5_digest": "d030a129943298f1c87fd1b1b6b15a2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8786, "upload_time": "2019-06-10T09:43:22", "upload_time_iso_8601": "2019-06-10T09:43:22.854787Z", "url": "https://files.pythonhosted.org/packages/31/b4/5a56357bb3380e0e6473e154551abe23c0ef0992e6d479c59700a3b5c665/deepex-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "8c878f90a94b210b1ad6da4b11cd4992", "sha256": "75fb57fc317ae8e09f61de51f320638519789e6283ddfe134f944577644c5da9"}, "downloads": -1, "filename": "deepex-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "8c878f90a94b210b1ad6da4b11cd4992", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8580, "upload_time": "2019-06-12T08:31:43", "upload_time_iso_8601": "2019-06-12T08:31:43.808383Z", "url": "https://files.pythonhosted.org/packages/e8/ba/66c995f97890467950fee3bdcb57084277182bf9728c85c92e913d3440b1/deepex-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7bae04f680823ba8cb650693b6235a7", "sha256": "bf1fe69fc644b13cb1c205589a2458ae61b5a2b30a55e3fd87bf21162685273b"}, "downloads": -1, "filename": "deepex-0.0.13.tar.gz", "has_sig": false, "md5_digest": "f7bae04f680823ba8cb650693b6235a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8816, "upload_time": "2019-06-12T08:31:46", "upload_time_iso_8601": "2019-06-12T08:31:46.276050Z", "url": "https://files.pythonhosted.org/packages/f5/ad/0f1b438241aec273b2ddc20267c295dd5ce914bff23448b662a39c2f1eba/deepex-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "7321c8054e556eb318bd6c98a2a1141b", "sha256": "fdf356d43e8be9b609d896b5a7da5f8cc7de9d257ac29782bcb98ac982b9fee1"}, "downloads": -1, "filename": "deepex-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "7321c8054e556eb318bd6c98a2a1141b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8637, "upload_time": "2019-06-12T09:01:08", "upload_time_iso_8601": "2019-06-12T09:01:08.113981Z", "url": "https://files.pythonhosted.org/packages/33/5d/db3bb39076127a047940fb01fe924e0ef2613e97a1c200e20889929a983f/deepex-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d22d4b217b9092e1682d362c64dfce2", "sha256": "7b6634191634c68bdd2a99d3e48fb965f55281c6f19339d29850a2bf54d30e7f"}, "downloads": -1, "filename": "deepex-0.0.14.tar.gz", "has_sig": false, "md5_digest": "1d22d4b217b9092e1682d362c64dfce2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8878, "upload_time": "2019-06-12T09:01:10", "upload_time_iso_8601": "2019-06-12T09:01:10.438676Z", "url": "https://files.pythonhosted.org/packages/8d/90/d8a5a152cefc24b3c299c2e9517643fed4634857b48c2cd6c02ad00bca30/deepex-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "22d0c43dbca3e7b6c7ca2269dae1ec50", "sha256": "626688a158e9641cae35f5fa38c682822829b8091e8393869696a35fc12ac10e"}, "downloads": -1, "filename": "deepex-0.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "22d0c43dbca3e7b6c7ca2269dae1ec50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8945, "upload_time": "2019-06-17T08:41:47", "upload_time_iso_8601": "2019-06-17T08:41:47.730100Z", "url": "https://files.pythonhosted.org/packages/f0/87/c44967ef915f160a7892a0587ecc81bbca7689d862ddaee7d9bd25f2462f/deepex-0.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b37093fda4bbf5ee036f688cec297f32", "sha256": "edb933d7e65f309a3836f7ee799ba0367b29a2c450299b3cbc28c2cf3e193cc6"}, "downloads": -1, "filename": "deepex-0.0.15.tar.gz", "has_sig": false, "md5_digest": "b37093fda4bbf5ee036f688cec297f32", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 9338, "upload_time": "2019-06-17T08:41:50", "upload_time_iso_8601": "2019-06-17T08:41:50.475564Z", "url": "https://files.pythonhosted.org/packages/85/2b/be57ac29d6bae79b2ef1d874af90698ae6339044e70178bbcbcee2aba321/deepex-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "f4b451d5fedd34b6551d9115188148fc", "sha256": "908f1019fd3e5f5c39ee1594f578e958060567a84ad05ced9fc738a3a72de759"}, "downloads": -1, "filename": "deepex-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "f4b451d5fedd34b6551d9115188148fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8952, "upload_time": "2019-06-18T03:39:52", "upload_time_iso_8601": "2019-06-18T03:39:52.276536Z", "url": "https://files.pythonhosted.org/packages/20/84/5786b9361e3bdc261f10fe9c105fd0023f2450247db907baea90271cb217/deepex-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aeb7b84932acd97c23783fd687b609a", "sha256": "8120c35557973b4e4b7db04f8346d53cdce998f4e50bd85c9bd6d7be96f4afb0"}, "downloads": -1, "filename": "deepex-0.0.16.tar.gz", "has_sig": false, "md5_digest": "2aeb7b84932acd97c23783fd687b609a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 9356, "upload_time": "2019-06-18T03:39:54", "upload_time_iso_8601": "2019-06-18T03:39:54.750784Z", "url": "https://files.pythonhosted.org/packages/82/ba/427f44fae32d7076638e994f45ddc12b9beecd45f41b3b4cd0440121b696/deepex-0.0.16.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f507fc7574ff064da09c9768c0ad1967", "sha256": "6c1c074a924b3c28cc4cd698f3cdabd51c48b5ec11d1ea5f4b0f63c4943d3923"}, "downloads": -1, "filename": "deepex-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f507fc7574ff064da09c9768c0ad1967", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4554, "upload_time": "2019-06-04T07:06:35", "upload_time_iso_8601": "2019-06-04T07:06:35.086704Z", "url": "https://files.pythonhosted.org/packages/63/6b/012955a84e4dfc2752072f8e5b0d9fd984284a5a86b389e651654f5cbee0/deepex-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "640801e393d130d2a4f546a640c047f5", "sha256": "20a230f71dd246dcac84ff5c79ff4d53e9e399d7ecb7c9a628c3c2d77178ab99"}, "downloads": -1, "filename": "deepex-0.0.2.tar.gz", "has_sig": false, "md5_digest": "640801e393d130d2a4f546a640c047f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3894, "upload_time": "2019-06-04T07:06:36", "upload_time_iso_8601": "2019-06-04T07:06:36.731729Z", "url": "https://files.pythonhosted.org/packages/e0/40/1d009aa6b01749bcf4decb1953e0f719a0dbbdf77381b1639faf05c6d282/deepex-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "32218c574c4eb3aa0d0cff5857cdbc2d", "sha256": "2057b241321a76c22adbcc4f0ebd4012bfaf776a3ad11608016bfadda706a013"}, "downloads": -1, "filename": "deepex-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "32218c574c4eb3aa0d0cff5857cdbc2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4553, "upload_time": "2019-06-04T07:13:18", "upload_time_iso_8601": "2019-06-04T07:13:18.549634Z", "url": "https://files.pythonhosted.org/packages/d4/62/d69e3ba6fe291d5d268ad8ab58d2c1431e5d98ef88d24ccb9efca827155f/deepex-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a45f637cafd531041e932730f1524f9", "sha256": "1d7342fa5be1d66c79afc68bcb540726460cbb928671d2c4870b7bff02cd2361"}, "downloads": -1, "filename": "deepex-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8a45f637cafd531041e932730f1524f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3900, "upload_time": "2019-06-04T07:13:20", "upload_time_iso_8601": "2019-06-04T07:13:20.353376Z", "url": "https://files.pythonhosted.org/packages/b5/03/ee88c31020e87437a94a174f86a366a62812bae94b929c2ddb594fdf833f/deepex-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3a8d21842d9f50ab90128cb4ceda1cf1", "sha256": "91dc3520ff5487786b501ce029815ff9856453dc0403cc2efd577a9fbc62b87d"}, "downloads": -1, "filename": "deepex-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3a8d21842d9f50ab90128cb4ceda1cf1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5934, "upload_time": "2019-06-04T07:15:43", "upload_time_iso_8601": "2019-06-04T07:15:43.117040Z", "url": "https://files.pythonhosted.org/packages/a1/99/ffeaa72e6819e99d4adf123997d107b0be4dab7e2f0d8513d0f33f7bccdb/deepex-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bebfad4e42564c5d84338c73edb9faa5", "sha256": "c807fcfae05c824234a5cf2561aec664afae1c9ed5fd78fbf2743472648726b7"}, "downloads": -1, "filename": "deepex-0.0.4.tar.gz", "has_sig": false, "md5_digest": "bebfad4e42564c5d84338c73edb9faa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4696, "upload_time": "2019-06-04T07:15:44", "upload_time_iso_8601": "2019-06-04T07:15:44.866778Z", "url": "https://files.pythonhosted.org/packages/49/ca/02740963cc71915da7392115b07cf4f79c2c60dc2857a6453a37698929d2/deepex-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "64fe3610ed31fe2cb5b40098717cc453", "sha256": "fe399f696bb1352dc5a0060f85f29745ea34149c76e874bbf7443abfd409bfb8"}, "downloads": -1, "filename": "deepex-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "64fe3610ed31fe2cb5b40098717cc453", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 7698, "upload_time": "2019-06-04T07:37:18", "upload_time_iso_8601": "2019-06-04T07:37:18.277733Z", "url": "https://files.pythonhosted.org/packages/28/48/35ecb3bbfd1757a2141f41a5787e502754ccc5251bf9b6b5828b3d38f2fd/deepex-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df7f94d39f4372dbbdb3097c3717a4b4", "sha256": "4e9c4b05f508b94ac685cfd1b4b0e89c613225605b18fa39f2762ffbdbb3056f"}, "downloads": -1, "filename": "deepex-0.0.5.tar.gz", "has_sig": false, "md5_digest": "df7f94d39f4372dbbdb3097c3717a4b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 6474, "upload_time": "2019-06-04T07:37:20", "upload_time_iso_8601": "2019-06-04T07:37:20.652547Z", "url": "https://files.pythonhosted.org/packages/41/c6/9f5014ae7e919d046ff7b50f5971fff74177c04f1db6da06032f49b512f6/deepex-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "70ab6840dfb1586a7f077fc5fdb79547", "sha256": "fd820ee558e106c279fcc51b150ec9a135b4fb656089fc0980b3cb945e1ac677"}, "downloads": -1, "filename": "deepex-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "70ab6840dfb1586a7f077fc5fdb79547", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 7717, "upload_time": "2019-06-04T07:48:12", "upload_time_iso_8601": "2019-06-04T07:48:12.231931Z", "url": "https://files.pythonhosted.org/packages/0a/e1/a2531fa5554e3de85b9a0633a17f777ea0a4365456ba7e4d716ef09b7430/deepex-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39baabe9726b575c9ef545babbacced8", "sha256": "63c70c18830d9d8163a1511a42a00fea8480c0acd669d2e148e517b6d1762d45"}, "downloads": -1, "filename": "deepex-0.0.6.tar.gz", "has_sig": false, "md5_digest": "39baabe9726b575c9ef545babbacced8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 6506, "upload_time": "2019-06-04T07:48:14", "upload_time_iso_8601": "2019-06-04T07:48:14.400220Z", "url": "https://files.pythonhosted.org/packages/e7/44/971a7673d032dc07d7049b027aedbd0e6a22f2434373c1b039e4f7c414aa/deepex-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6411bd5ec29b1452ea2eb540eb4be094", "sha256": "95c5a1a37102ebc89264b7e774dd3989cac8ef47adc0f1994d1fd7d8d75321aa"}, "downloads": -1, "filename": "deepex-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6411bd5ec29b1452ea2eb540eb4be094", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 7805, "upload_time": "2019-06-04T09:30:19", "upload_time_iso_8601": "2019-06-04T09:30:19.167651Z", "url": "https://files.pythonhosted.org/packages/5a/2b/6963edb6a914187d8b56b602e7bc6bdf7e745705e300ffb8e5202eb80475/deepex-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76d0324eab20ed202334336cee32adeb", "sha256": "1afc6014e4d1302e94a408d1618a27ebce101b77c57f60da1db5ba1bc5a502ca"}, "downloads": -1, "filename": "deepex-0.0.7.tar.gz", "has_sig": false, "md5_digest": "76d0324eab20ed202334336cee32adeb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 6583, "upload_time": "2019-06-04T09:30:21", "upload_time_iso_8601": "2019-06-04T09:30:21.339475Z", "url": "https://files.pythonhosted.org/packages/a1/7d/4013a5524adcad60c0f8734287cca454030d1f96cd39448be5ad962377dd/deepex-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "66f862076ee63682e031bf86acf00915", "sha256": "2c5386f7215483f83655faf51243578615fb16d9c9fa31442a370ea48aee9951"}, "downloads": -1, "filename": "deepex-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "66f862076ee63682e031bf86acf00915", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8388, "upload_time": "2019-06-05T07:02:06", "upload_time_iso_8601": "2019-06-05T07:02:06.688848Z", "url": "https://files.pythonhosted.org/packages/51/e6/b739da7655273fb7beb931581e801228bcea8778f04a348bb6b40e19c34a/deepex-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d48c1a62e535acc50f23b5eea6898a6", "sha256": "300c358301f612315b4a0e3e8ee6fd64acc73a938cbfe59adea3ef41507d6b51"}, "downloads": -1, "filename": "deepex-0.0.8.tar.gz", "has_sig": false, "md5_digest": "9d48c1a62e535acc50f23b5eea6898a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 7198, "upload_time": "2019-06-05T07:02:08", "upload_time_iso_8601": "2019-06-05T07:02:08.305185Z", "url": "https://files.pythonhosted.org/packages/53/ae/34e0efd99fe03c1ce44590bdd56b3fb2643892919781c3410916dde8ed15/deepex-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "ebe393809cdf4c36b9e48ce7acddcbbf", "sha256": "361ae08154a6ea68627c19ccf6acfef7a3a8d7842c8284a31904770704165a59"}, "downloads": -1, "filename": "deepex-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "ebe393809cdf4c36b9e48ce7acddcbbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8386, "upload_time": "2019-06-05T07:05:59", "upload_time_iso_8601": "2019-06-05T07:05:59.274567Z", "url": "https://files.pythonhosted.org/packages/ae/6f/1c4825d84e8114204b205211f96e068e9f80f5d2c9b0730fbbd95da0f12d/deepex-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "892b1c835f5c7de3f600f4728d9f185f", "sha256": "bcfbc37e47844fb2e16309811b2a91368ac0a1e811fafeeb98e2dc7cce47a05b"}, "downloads": -1, "filename": "deepex-0.0.9.tar.gz", "has_sig": false, "md5_digest": "892b1c835f5c7de3f600f4728d9f185f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 7196, "upload_time": "2019-06-05T07:06:00", "upload_time_iso_8601": "2019-06-05T07:06:00.948890Z", "url": "https://files.pythonhosted.org/packages/f2/2c/1cee28dde075ae59eef16a327757d7e82feec2502898b576c40cd9ddca06/deepex-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f4b451d5fedd34b6551d9115188148fc", "sha256": "908f1019fd3e5f5c39ee1594f578e958060567a84ad05ced9fc738a3a72de759"}, "downloads": -1, "filename": "deepex-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "f4b451d5fedd34b6551d9115188148fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 8952, "upload_time": "2019-06-18T03:39:52", "upload_time_iso_8601": "2019-06-18T03:39:52.276536Z", "url": "https://files.pythonhosted.org/packages/20/84/5786b9361e3bdc261f10fe9c105fd0023f2450247db907baea90271cb217/deepex-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aeb7b84932acd97c23783fd687b609a", "sha256": "8120c35557973b4e4b7db04f8346d53cdce998f4e50bd85c9bd6d7be96f4afb0"}, "downloads": -1, "filename": "deepex-0.0.16.tar.gz", "has_sig": false, "md5_digest": "2aeb7b84932acd97c23783fd687b609a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 9356, "upload_time": "2019-06-18T03:39:54", "upload_time_iso_8601": "2019-06-18T03:39:54.750784Z", "url": "https://files.pythonhosted.org/packages/82/ba/427f44fae32d7076638e994f45ddc12b9beecd45f41b3b4cd0440121b696/deepex-0.0.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:25 2020"}