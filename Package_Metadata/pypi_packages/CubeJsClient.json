{"info": {"author": "Matt Ferrante", "author_email": "matt@downstreamimpact.com", "bugtrack_url": null, "classifiers": [], "description": "# CubeJsClient\n\n[Cube.js](https://github.com/cube-js/cube.js) client for python! It assists in token management and abstracts the HTTP requests with retries. You still need to run an instance of the Cube.js Server to run requests against. This client does not provide any graphing functionality.\n\n## Docs\n\n### CubeJsClient\n\n#### init\n```python\nfrom cube_js_client import CubeJsClient,\nclient = CubeJsClient(\n    server, # required - the running cube.js server\n    secret, # required - the api token or secret needed for requests\n    base_path='cubejs-api', # optional - the basePath, needed of not using the default\n    load_request_timeout=60, # optional - timeout for a single request to cube.js server\n    load_waiting_max_requests=50, # optional - number of requests to make while waiting for a response\n    load_waiting_interval=1, # optional - time to wait between requests\n    token_ttl={'days': 1}, # optional - timedelta kwargs for how long the token is valid\n    add_headers=None, # optional - any additional headers to add to the request\n)\n```\n\n#### load\n[load operation](https://cube.dev/docs/@cubejs-client-core#cubejs-api-load)\n```python\nclient.load(\n    request_body # required - json request to send to cube.js\n)\n```\n\n_Note_: Might raise a `cube_js_client.CubeError` if the Cube rejects the request\n\n_Note_: Might raise a `cube_js_client.CubeTimeoutError` if the load exhausts the `load_waiting_max_requests`\n\n\n#### sql\n[sql operation](https://cube.dev/docs/@cubejs-client-core#cubejs-api-sql)\n```python\nclient.sql(\n    request_body # required - json request to send to cube.js\n)\n```\n\n#### logging\nTo get visibility into logged events, override the log method and log however your app needs to log:\n```python\nclass MyClientClass(CubeJsClient):\n    def log(self, level, msg, **log_variables):\n        print(f\"[{level}] {msg}\", log_variables)\n        \n\nclient = MyClientClass(server, api_token)\n```\n\n## Example\n```python\nfrom cube_js_client import CubeJsClient, CubeError, CubeTimeoutError\n\nmy_client = CubeJsClient(\"http://my_cubejs_server.com/\", \"theApiToken\", add_headers={'user_id': 1})\ntry:\n    results = my_client.load({\"measures\": [\"Cube.count\"],\"dimensions\": [\"Cube.dimension\"]})\n    print(results)\nexcept CubeError:\n    print(\"Cube rejected\")\nexcept CubeTimeoutError:\n    print(\"Request to Cube timed out\")\n```\n\n## Future Work\n- Requests for `meta`\n- Comprehensive Documentation\n- Tests\n- Auto-formatting\n- Buffering response handling\n\n## Common Commands:\n\nBlack Formatting\n```bash\n$ black cube_js_client --config cube_js_client.toml\n```\n\n##\n\n## License\n\nCube.js Client is [MIT licensed](./LICENSE).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/downstreamimpact/CubeJsClient", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "CubeJsClient", "package_url": "https://pypi.org/project/CubeJsClient/", "platform": "", "project_url": "https://pypi.org/project/CubeJsClient/", "project_urls": {"Homepage": "https://github.com/downstreamimpact/CubeJsClient"}, "release_url": "https://pypi.org/project/CubeJsClient/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Cube.js Client for Python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CubeJsClient</h1>\n<p><a href=\"https://github.com/cube-js/cube.js\" rel=\"nofollow\">Cube.js</a> client for python! It assists in token management and abstracts the HTTP requests with retries. You still need to run an instance of the Cube.js Server to run requests against. This client does not provide any graphing functionality.</p>\n<h2>Docs</h2>\n<h3>CubeJsClient</h3>\n<h4>init</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cube_js_client</span> <span class=\"kn\">import</span> <span class=\"n\">CubeJsClient</span><span class=\"p\">,</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">CubeJsClient</span><span class=\"p\">(</span>\n    <span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"c1\"># required - the running cube.js server</span>\n    <span class=\"n\">secret</span><span class=\"p\">,</span> <span class=\"c1\"># required - the api token or secret needed for requests</span>\n    <span class=\"n\">base_path</span><span class=\"o\">=</span><span class=\"s1\">'cubejs-api'</span><span class=\"p\">,</span> <span class=\"c1\"># optional - the basePath, needed of not using the default</span>\n    <span class=\"n\">load_request_timeout</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"c1\"># optional - timeout for a single request to cube.js server</span>\n    <span class=\"n\">load_waiting_max_requests</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"c1\"># optional - number of requests to make while waiting for a response</span>\n    <span class=\"n\">load_waiting_interval</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"c1\"># optional - time to wait between requests</span>\n    <span class=\"n\">token_ttl</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'days'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"c1\"># optional - timedelta kwargs for how long the token is valid</span>\n    <span class=\"n\">add_headers</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># optional - any additional headers to add to the request</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>load</h4>\n<p><a href=\"https://cube.dev/docs/@cubejs-client-core#cubejs-api-load\" rel=\"nofollow\">load operation</a></p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span>\n    <span class=\"n\">request_body</span> <span class=\"c1\"># required - json request to send to cube.js</span>\n<span class=\"p\">)</span>\n</pre>\n<p><em>Note</em>: Might raise a <code>cube_js_client.CubeError</code> if the Cube rejects the request</p>\n<p><em>Note</em>: Might raise a <code>cube_js_client.CubeTimeoutError</code> if the load exhausts the <code>load_waiting_max_requests</code></p>\n<h4>sql</h4>\n<p><a href=\"https://cube.dev/docs/@cubejs-client-core#cubejs-api-sql\" rel=\"nofollow\">sql operation</a></p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">sql</span><span class=\"p\">(</span>\n    <span class=\"n\">request_body</span> <span class=\"c1\"># required - json request to send to cube.js</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>logging</h4>\n<p>To get visibility into logged events, override the log method and log however your app needs to log:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyClientClass</span><span class=\"p\">(</span><span class=\"n\">CubeJsClient</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">log_variables</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"[</span><span class=\"si\">{</span><span class=\"n\">level</span><span class=\"si\">}</span><span class=\"s2\">] </span><span class=\"si\">{</span><span class=\"n\">msg</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">log_variables</span><span class=\"p\">)</span>\n        \n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">MyClientClass</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">api_token</span><span class=\"p\">)</span>\n</pre>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cube_js_client</span> <span class=\"kn\">import</span> <span class=\"n\">CubeJsClient</span><span class=\"p\">,</span> <span class=\"n\">CubeError</span><span class=\"p\">,</span> <span class=\"n\">CubeTimeoutError</span>\n\n<span class=\"n\">my_client</span> <span class=\"o\">=</span> <span class=\"n\">CubeJsClient</span><span class=\"p\">(</span><span class=\"s2\">\"http://my_cubejs_server.com/\"</span><span class=\"p\">,</span> <span class=\"s2\">\"theApiToken\"</span><span class=\"p\">,</span> <span class=\"n\">add_headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'user_id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">my_client</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">({</span><span class=\"s2\">\"measures\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Cube.count\"</span><span class=\"p\">],</span><span class=\"s2\">\"dimensions\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Cube.dimension\"</span><span class=\"p\">]})</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">CubeError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Cube rejected\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">CubeTimeoutError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Request to Cube timed out\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Future Work</h2>\n<ul>\n<li>Requests for <code>meta</code></li>\n<li>Comprehensive Documentation</li>\n<li>Tests</li>\n<li>Auto-formatting</li>\n<li>Buffering response handling</li>\n</ul>\n<h2>Common Commands:</h2>\n<p>Black Formatting</p>\n<pre>$ black cube_js_client --config cube_js_client.toml\n</pre>\n<h2></h2>\n<h2>License</h2>\n<p>Cube.js Client is <a href=\"./LICENSE\" rel=\"nofollow\">MIT licensed</a>.</p>\n\n          </div>"}, "last_serial": 6121362, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "7b986425187dc8d49facac41543aa567", "sha256": "96b829c1745bce3c719dc3c49aadd67921f86afae00c4648b62c00b72f29832b"}, "downloads": -1, "filename": "CubeJsClient-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7b986425187dc8d49facac41543aa567", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3809, "upload_time": "2019-11-12T04:30:06", "upload_time_iso_8601": "2019-11-12T04:30:06.209424Z", "url": "https://files.pythonhosted.org/packages/ee/4d/00346faae6d05ce561d63fc6a5ce302ad1d4d5e972b8b4424ef5b24fdb39/CubeJsClient-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b986425187dc8d49facac41543aa567", "sha256": "96b829c1745bce3c719dc3c49aadd67921f86afae00c4648b62c00b72f29832b"}, "downloads": -1, "filename": "CubeJsClient-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7b986425187dc8d49facac41543aa567", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3809, "upload_time": "2019-11-12T04:30:06", "upload_time_iso_8601": "2019-11-12T04:30:06.209424Z", "url": "https://files.pythonhosted.org/packages/ee/4d/00346faae6d05ce561d63fc6a5ce302ad1d4d5e972b8b4424ef5b24fdb39/CubeJsClient-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:31 2020"}