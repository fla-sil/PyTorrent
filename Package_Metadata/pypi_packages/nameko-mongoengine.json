{"info": {"author": "Ketan Goyal", "author_email": "ketangoyal1988@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# nameko-mongoengine\n\n[![Build Status](https://travis-ci.com/ketgo/nameko-mongoengine.svg?branch=master)](https://travis-ci.com/ketgo/nameko-mongoengine)\n[![codecov.io](https://codecov.io/gh/ketgo/nameko-mongoengine/coverage.svg?branch=master)](https://codecov.io/gh/ketgo/nameko-mongoengine/coverage.svg?branch=master)\n[![Apache 2.0 licensed](https://img.shields.io/badge/License-Apache%202.0-yellow.svg)](LICENSE)\n---\n\nMongoEngine dependency provider for [Nameko](https://github.com/nameko/nameko) microservice framework.\n\n## Installation\n\n```bash\npip install nameko-mongoengine\n```\n\n## Usage\n\nThe basic usage of the dependency provider is shown:\n```python\nfrom mongoengine import Document, fields\nfrom nameko_mongoengine import MongoEngine\nfrom nameko.rpc import rpc\n\n\nclass MyModel(Document):\n    \"\"\"\n        My document model\n    \"\"\"\n    info = fields.StringField(required=True)\n\n\nclass MockService:\n    name = \"mock_service\"\n    engine = MongoEngine()\n\n    @rpc\n    def write(self, info):\n        model = MyModel()\n        model.info = info\n        model.save()\n        return model\n\n    @rpc\n    def read(self, _id):\n        return MyModel.objects.get(id=_id)\n```\n\nThe dependency `engine` exposes standard `pymongo` interface to database connections. The default connection can be accessed by the `db` property:\n```python\nclass MockService:\n    name = \"mock_service\"\n    engine = MongoEngine()\n\n    @rpc\n    def get(self, _id):\n        return self.engine.db.your_collection.find_one({'_id': _id})\n```\nOther database connections defined by `MongoEngine` aliases can be accessed by:\n```python\n@rpc\ndef get(self, _id):\n    db = self.engine.with_alias(\"your_alias\").db\n    return db.your_collection.find_one({'_id': _id})\n```\n\n## Configurations\n\nThe dependency configurations can be set in nameko `config.yaml` [file](https://docs.nameko.io/en/stable/cli.html), or by environment variables. \n\n### Config File\n\n```yaml\nMONGODB_URI: mongodb://localhost:27017/dbname?replicaSet=replset\n\n# or\n# ---- with aliases\nMONGODB_URI:\n  default: mongodb://localhost:27017/dbname?replicaSet=replset\n  \"<alias>\": \"<uri>\"\n```\n\n### Environment Variables\n\n```.env\nMONGODB_URI='mongodb://localhost:27017/dbname?replicaSet=replset'\n\n# or\n# ---- with aliases\nMONGODB_URI='{\"default\": \"mongodb://localhost:27017/dbname?replicaSet=replset\", \"<alias>\": \"<uri>\"}'\n```\n\n## Developers\n\nTo perform development tasks and run tests run:\n```bash\n$ pip install -e .[dev]\t\t\t# to install all dependencies\n$ docker run -d --restart=always --name some-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:3-management   # Run rabbitmq-management server\n$ docker run --rm -d -p 27017:27017 mongo\t\t\t# Run mongodb server on docker\n$ pytest --cov=nameko_mongoengine tests/\t\t\t# to get coverage report\n$ pylint nameko_mongoengine\t\t\t# to check code quality with PyLint\n```\nOptionally you can use `make`.\n\n## Contributions\n\nPull requests always welcomed. Thanks!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ketgo/nameko-mongoengine", "keywords": "nameko,mongoengine,mongodb,database,nosql,gridfs", "license": "Apache 2.0 license", "maintainer": "", "maintainer_email": "", "name": "nameko-mongoengine", "package_url": "https://pypi.org/project/nameko-mongoengine/", "platform": "", "project_url": "https://pypi.org/project/nameko-mongoengine/", "project_urls": {"Homepage": "https://github.com/ketgo/nameko-mongoengine"}, "release_url": "https://pypi.org/project/nameko-mongoengine/0.1.1/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Mongoengine dependency provider for Nameko microservice framework", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nameko-mongoengine</h1>\n<h2><a href=\"https://travis-ci.com/ketgo/nameko-mongoengine\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d50d62ade151856c3968221610b6242a11a6fa3/68747470733a2f2f7472617669732d63692e636f6d2f6b6574676f2f6e616d656b6f2d6d6f6e676f656e67696e652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/ketgo/nameko-mongoengine/coverage.svg?branch=master\" rel=\"nofollow\"><img alt=\"codecov.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b71e12acaaa049b9d3567f0506ec35e50031f0e4/68747470733a2f2f636f6465636f762e696f2f67682f6b6574676f2f6e616d656b6f2d6d6f6e676f656e67696e652f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"Apache 2.0 licensed\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5158a87f705edccbe3d715323e53a9054c09813/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d79656c6c6f772e737667\"></a></h2>\n<p>MongoEngine dependency provider for <a href=\"https://github.com/nameko/nameko\" rel=\"nofollow\">Nameko</a> microservice framework.</p>\n<h2>Installation</h2>\n<pre>pip install nameko-mongoengine\n</pre>\n<h2>Usage</h2>\n<p>The basic usage of the dependency provider is shown:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mongoengine</span> <span class=\"kn\">import</span> <span class=\"n\">Document</span><span class=\"p\">,</span> <span class=\"n\">fields</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nameko_mongoengine</span> <span class=\"kn\">import</span> <span class=\"n\">MongoEngine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nameko.rpc</span> <span class=\"kn\">import</span> <span class=\"n\">rpc</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        My document model</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MockService</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"mock_service\"</span>\n    <span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">MongoEngine</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@rpc</span>\n    <span class=\"k\">def</span> <span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span><span class=\"p\">()</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">info</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">model</span>\n\n    <span class=\"nd\">@rpc</span>\n    <span class=\"k\">def</span> <span class=\"nf\">read</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">_id</span><span class=\"p\">)</span>\n</pre>\n<p>The dependency <code>engine</code> exposes standard <code>pymongo</code> interface to database connections. The default connection can be accessed by the <code>db</code> property:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MockService</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"mock_service\"</span>\n    <span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">MongoEngine</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@rpc</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">your_collection</span><span class=\"o\">.</span><span class=\"n\">find_one</span><span class=\"p\">({</span><span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"n\">_id</span><span class=\"p\">})</span>\n</pre>\n<p>Other database connections defined by <code>MongoEngine</code> aliases can be accessed by:</p>\n<pre><span class=\"nd\">@rpc</span>\n<span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"p\">):</span>\n    <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">with_alias</span><span class=\"p\">(</span><span class=\"s2\">\"your_alias\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">db</span>\n    <span class=\"k\">return</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">your_collection</span><span class=\"o\">.</span><span class=\"n\">find_one</span><span class=\"p\">({</span><span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"n\">_id</span><span class=\"p\">})</span>\n</pre>\n<h2>Configurations</h2>\n<p>The dependency configurations can be set in nameko <code>config.yaml</code> <a href=\"https://docs.nameko.io/en/stable/cli.html\" rel=\"nofollow\">file</a>, or by environment variables.</p>\n<h3>Config File</h3>\n<pre><span class=\"nt\">MONGODB_URI</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">mongodb://localhost:27017/dbname?replicaSet=replset</span>\n\n<span class=\"c1\"># or</span>\n<span class=\"c1\"># ---- with aliases</span>\n<span class=\"nt\">MONGODB_URI</span><span class=\"p\">:</span>\n  <span class=\"nt\">default</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">mongodb://localhost:27017/dbname?replicaSet=replset</span>\n  <span class=\"s\">\"&lt;alias&gt;\"</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"&lt;uri&gt;\"</span>\n</pre>\n<h3>Environment Variables</h3>\n<pre>MONGODB_URI='mongodb://localhost:27017/dbname?replicaSet=replset'\n\n# or\n# ---- with aliases\nMONGODB_URI='{\"default\": \"mongodb://localhost:27017/dbname?replicaSet=replset\", \"&lt;alias&gt;\": \"&lt;uri&gt;\"}'\n</pre>\n<h2>Developers</h2>\n<p>To perform development tasks and run tests run:</p>\n<pre>$ pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\t\t\t<span class=\"c1\"># to install all dependencies</span>\n$ docker run -d --restart<span class=\"o\">=</span>always --name some-rabbit -p <span class=\"m\">5672</span>:5672 -p <span class=\"m\">15672</span>:15672 rabbitmq:3-management   <span class=\"c1\"># Run rabbitmq-management server</span>\n$ docker run --rm -d -p <span class=\"m\">27017</span>:27017 mongo\t\t\t<span class=\"c1\"># Run mongodb server on docker</span>\n$ pytest --cov<span class=\"o\">=</span>nameko_mongoengine tests/\t\t\t<span class=\"c1\"># to get coverage report</span>\n$ pylint nameko_mongoengine\t\t\t<span class=\"c1\"># to check code quality with PyLint</span>\n</pre>\n<p>Optionally you can use <code>make</code>.</p>\n<h2>Contributions</h2>\n<p>Pull requests always welcomed. Thanks!</p>\n\n          </div>"}, "last_serial": 6239149, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b14c9822859cf67526e06e8048ec887e", "sha256": "aba54c2ec07d108bbec33056132339a8acfd6886dad01be73938c3ccedf2d47b"}, "downloads": -1, "filename": "nameko_mongoengine-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b14c9822859cf67526e06e8048ec887e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3823, "upload_time": "2019-12-03T19:57:12", "upload_time_iso_8601": "2019-12-03T19:57:12.136078Z", "url": "https://files.pythonhosted.org/packages/14/da/cf7babf6606d7824c3bbd9d1a9986d818e164374abcc4e33c43e1db1fa2b/nameko_mongoengine-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "82641ed65475ff53d7bc4bc04a0d118a", "sha256": "644be45a056a974648b28008cef51d9d91d6aaaa2356800be5b6ddc9d5e56377"}, "downloads": -1, "filename": "nameko_mongoengine-0.1.1.tar.gz", "has_sig": false, "md5_digest": "82641ed65475ff53d7bc4bc04a0d118a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3947, "upload_time": "2019-12-04T04:19:37", "upload_time_iso_8601": "2019-12-04T04:19:37.125924Z", "url": "https://files.pythonhosted.org/packages/99/66/7d9e18a59ac2d21bcfa46024ab64ace12974a91ae53e21aff00c887e67fb/nameko_mongoengine-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82641ed65475ff53d7bc4bc04a0d118a", "sha256": "644be45a056a974648b28008cef51d9d91d6aaaa2356800be5b6ddc9d5e56377"}, "downloads": -1, "filename": "nameko_mongoengine-0.1.1.tar.gz", "has_sig": false, "md5_digest": "82641ed65475ff53d7bc4bc04a0d118a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3947, "upload_time": "2019-12-04T04:19:37", "upload_time_iso_8601": "2019-12-04T04:19:37.125924Z", "url": "https://files.pythonhosted.org/packages/99/66/7d9e18a59ac2d21bcfa46024ab64ace12974a91ae53e21aff00c887e67fb/nameko_mongoengine-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:45 2020"}