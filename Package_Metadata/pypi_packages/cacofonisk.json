{"info": {"author": "Devhouse Spindle", "author_email": "opensource+cacofonisk@wearespindle.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Communications :: Telephony"], "description": "# Cacofonisk\n\nCacofonisk is a framework that connects to the Asterisk PBX, listens to events\non the Asterisk Management Interface (AMI) and tracks the status of calls\ncurrently in progress in Asterisk.\n\nCacofonisk takes a stream of AMI events as input and uses these to keep track\nof the channels currently active in Asterisk and how they are related. When\nsomething interesting happens to one of the channels, it will call a method on\na call state Reporter with interesting information about the call, like who is\nin the call, and a unique identifier.\n\nThis data can then be used to send webhooks regarding a call, to notify a\nperson who is being called, or to log calls being performed.\n\n## Status\n\nThis product is actively being developed and used at VoIPGRID.\n\n## Usage\n\n### Requirements\n\n- Python >= 3.4\n- Panoramisk 1.x\n- Asterisk >= 12\n\n### Installation\n\nCacofonisk is available on Pypi so you can easily install it with pip:\n\n```bash\n$ pip install cacofonisk\n```\n\nTo install the dependencies from source:\n\n```bash\n$ python3 setup.py install\n```\n\n### Running\n\nTo run Cacofonisk, you will need two things: a Runner and a Reporter.\n\nA Runner is a class which is responsible for passing AMI events to the\nCacofonisk. Two runners are included: an AmiRunner (which connects to the\nAsterisk Management Interface) and a FileRunner (which imports AMI events from\na JSON file).\n\nA Reporter is a class which takes the interesting data from Cacofonisk and does\nawesome things with it. You can find various Reporters in the `examples`\nfolder.\n\nTo create your own reporter, you can extend the BaseReporter class and\nimplement your own event handlers, like so:\n\n```python\nfrom cacofonisk import AmiRunner, BaseReporter\n\n\nclass ReportAllTheThings(BaseReporter):\n\n    def on_b_dial(self, caller, targets):\n        target_channels = [target.name for target in targets]\n        caller_number = caller.caller_id.num\n        print(\"{} is now calling {}\".format(\n            caller_number, ', '.join(target_channels),\n        ))\n\n    def on_up(self, caller, target):\n        target_number = target.caller_id.num\n        caller_number = caller.caller_id.num\n        print(\"{} is now in conversation with {}\".format(caller_number, target_number))\n\n    def on_hangup(self, caller, reason):\n        caller_number = caller.caller_id.num\n        print(\"{} is no longer calling (reason: {})\".format(caller_number, reason))\n\n\nreporter = ReportAllTheThings()\nrunner = AmiRunner(['tcp://username:password@127.0.0.1:5038'], reporter)\nrunner.run()\n```\n\nThis reporter can then be passed to a Runner of your choice to process AMI\nevents.\n\nFor more information about the parameters of the reporter, please see the docs\nin BaseReporter.\n\nYou can also listen for\n[UserEvents](https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Application_UserEvent)\nusing the `on_user_event` function. This can be used to pass additional data\nfrom Asterisk to your Cacofonisk application.\n\n#### Running the tests\n\nTo run the test suite:\n\n```bash\n$ python3 -m unittest\n```\n\n## Contributing\n\nSee the [CONTRIBUTING.md](CONTRIBUTING.md) file on how to contribute to this project.\n\n## Contributors\n\nSee the [CONTRIBUTORS.md](CONTRIBUTORS.md) file for a list of contributors to the project.\n\n## Roadmap\n\n### Changelog\n\nThe changelog can be found in the [CHANGELOG.md](CHANGELOG.md) file.\n\n### In progress\n\nNo features are currently in progress.\n\n### Future\n\nNo features are currently scheduled. Have great ideas? Please don't hesitate to share them!\n\n## Get in touch with a developer\n\nIf you want to report an issue see the [CONTRIBUTING.md](CONTRIBUTING.md) file for more info.\n\nWe will be happy to answer your other questions at opensource@wearespindle.com.\n\n## License\n\nCacofonisk is made available under the MIT license. See the [LICENSE file](LICENSE) for more info.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/VoIPGRID/cacofonisk/archive/0.7.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VoIPGRID/cacofonisk", "keywords": "ami asterisk callerid", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cacofonisk", "package_url": "https://pypi.org/project/cacofonisk/", "platform": "", "project_url": "https://pypi.org/project/cacofonisk/", "project_urls": {"Download": "https://github.com/VoIPGRID/cacofonisk/archive/0.7.2.tar.gz", "Homepage": "https://github.com/VoIPGRID/cacofonisk"}, "release_url": "https://pypi.org/project/cacofonisk/0.7.2/", "requires_dist": ["panoramisk (<2,>=1.0)", "check-manifest ; extra == 'dev'", "coverage ; extra == 'test'"], "requires_python": "", "summary": "Track channels through Asterisk Management Interface (AMI)", "version": "0.7.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cacofonisk</h1>\n<p>Cacofonisk is a framework that connects to the Asterisk PBX, listens to events\non the Asterisk Management Interface (AMI) and tracks the status of calls\ncurrently in progress in Asterisk.</p>\n<p>Cacofonisk takes a stream of AMI events as input and uses these to keep track\nof the channels currently active in Asterisk and how they are related. When\nsomething interesting happens to one of the channels, it will call a method on\na call state Reporter with interesting information about the call, like who is\nin the call, and a unique identifier.</p>\n<p>This data can then be used to send webhooks regarding a call, to notify a\nperson who is being called, or to log calls being performed.</p>\n<h2>Status</h2>\n<p>This product is actively being developed and used at VoIPGRID.</p>\n<h2>Usage</h2>\n<h3>Requirements</h3>\n<ul>\n<li>Python &gt;= 3.4</li>\n<li>Panoramisk 1.x</li>\n<li>Asterisk &gt;= 12</li>\n</ul>\n<h3>Installation</h3>\n<p>Cacofonisk is available on Pypi so you can easily install it with pip:</p>\n<pre>$ pip install cacofonisk\n</pre>\n<p>To install the dependencies from source:</p>\n<pre>$ python3 setup.py install\n</pre>\n<h3>Running</h3>\n<p>To run Cacofonisk, you will need two things: a Runner and a Reporter.</p>\n<p>A Runner is a class which is responsible for passing AMI events to the\nCacofonisk. Two runners are included: an AmiRunner (which connects to the\nAsterisk Management Interface) and a FileRunner (which imports AMI events from\na JSON file).</p>\n<p>A Reporter is a class which takes the interesting data from Cacofonisk and does\nawesome things with it. You can find various Reporters in the <code>examples</code>\nfolder.</p>\n<p>To create your own reporter, you can extend the BaseReporter class and\nimplement your own event handlers, like so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cacofonisk</span> <span class=\"kn\">import</span> <span class=\"n\">AmiRunner</span><span class=\"p\">,</span> <span class=\"n\">BaseReporter</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ReportAllTheThings</span><span class=\"p\">(</span><span class=\"n\">BaseReporter</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_b_dial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">caller</span><span class=\"p\">,</span> <span class=\"n\">targets</span><span class=\"p\">):</span>\n        <span class=\"n\">target_channels</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">target</span> <span class=\"ow\">in</span> <span class=\"n\">targets</span><span class=\"p\">]</span>\n        <span class=\"n\">caller_number</span> <span class=\"o\">=</span> <span class=\"n\">caller</span><span class=\"o\">.</span><span class=\"n\">caller_id</span><span class=\"o\">.</span><span class=\"n\">num</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> is now calling </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">caller_number</span><span class=\"p\">,</span> <span class=\"s1\">', '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">target_channels</span><span class=\"p\">),</span>\n        <span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">caller</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">):</span>\n        <span class=\"n\">target_number</span> <span class=\"o\">=</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">caller_id</span><span class=\"o\">.</span><span class=\"n\">num</span>\n        <span class=\"n\">caller_number</span> <span class=\"o\">=</span> <span class=\"n\">caller</span><span class=\"o\">.</span><span class=\"n\">caller_id</span><span class=\"o\">.</span><span class=\"n\">num</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> is now in conversation with </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">caller_number</span><span class=\"p\">,</span> <span class=\"n\">target_number</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_hangup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">caller</span><span class=\"p\">,</span> <span class=\"n\">reason</span><span class=\"p\">):</span>\n        <span class=\"n\">caller_number</span> <span class=\"o\">=</span> <span class=\"n\">caller</span><span class=\"o\">.</span><span class=\"n\">caller_id</span><span class=\"o\">.</span><span class=\"n\">num</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> is no longer calling (reason: </span><span class=\"si\">{}</span><span class=\"s2\">)\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">caller_number</span><span class=\"p\">,</span> <span class=\"n\">reason</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">reporter</span> <span class=\"o\">=</span> <span class=\"n\">ReportAllTheThings</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">AmiRunner</span><span class=\"p\">([</span><span class=\"s1\">'tcp://username:password@127.0.0.1:5038'</span><span class=\"p\">],</span> <span class=\"n\">reporter</span><span class=\"p\">)</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>This reporter can then be passed to a Runner of your choice to process AMI\nevents.</p>\n<p>For more information about the parameters of the reporter, please see the docs\nin BaseReporter.</p>\n<p>You can also listen for\n<a href=\"https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Application_UserEvent\" rel=\"nofollow\">UserEvents</a>\nusing the <code>on_user_event</code> function. This can be used to pass additional data\nfrom Asterisk to your Cacofonisk application.</p>\n<h4>Running the tests</h4>\n<p>To run the test suite:</p>\n<pre>$ python3 -m unittest\n</pre>\n<h2>Contributing</h2>\n<p>See the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> file on how to contribute to this project.</p>\n<h2>Contributors</h2>\n<p>See the <a href=\"CONTRIBUTORS.md\" rel=\"nofollow\">CONTRIBUTORS.md</a> file for a list of contributors to the project.</p>\n<h2>Roadmap</h2>\n<h3>Changelog</h3>\n<p>The changelog can be found in the <a href=\"CHANGELOG.md\" rel=\"nofollow\">CHANGELOG.md</a> file.</p>\n<h3>In progress</h3>\n<p>No features are currently in progress.</p>\n<h3>Future</h3>\n<p>No features are currently scheduled. Have great ideas? Please don't hesitate to share them!</p>\n<h2>Get in touch with a developer</h2>\n<p>If you want to report an issue see the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> file for more info.</p>\n<p>We will be happy to answer your other questions at <a href=\"mailto:opensource@wearespindle.com\">opensource@wearespindle.com</a>.</p>\n<h2>License</h2>\n<p>Cacofonisk is made available under the MIT license. See the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE file</a> for more info.</p>\n\n          </div>"}, "last_serial": 6896834, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d04efb8678f2c165958a9101f2bffdc9", "sha256": "7cd78489261a6e4a13dfac5f0cef202b4e87d390018800bca92d88f91d5981ce"}, "downloads": -1, "filename": "cacofonisk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d04efb8678f2c165958a9101f2bffdc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19541, "upload_time": "2016-02-12T15:14:16", "upload_time_iso_8601": "2016-02-12T15:14:16.997412Z", "url": "https://files.pythonhosted.org/packages/f8/00/a01a63fbc5d24a12c31efca100e88bdfa424f3e14da1b76f918b9fbf17a3/cacofonisk-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6e3e18891c95b4254a1183f3f4072fab", "sha256": "52f4f22b50619665a01088dd85655b7ace9250794139b95a5fa053b8ee7c3f37"}, "downloads": -1, "filename": "cacofonisk-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6e3e18891c95b4254a1183f3f4072fab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65497, "upload_time": "2016-02-15T16:51:20", "upload_time_iso_8601": "2016-02-15T16:51:20.428888Z", "url": "https://files.pythonhosted.org/packages/1e/d3/0eef87ffe4d6a44a6a23fa61fac49db370630ea4ed9ced5d4fcdfc071d51/cacofonisk-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6837f62f2dfac558d74b8e78cee95f26", "sha256": "be8f1d2f84a7b4229387c1a7dd821f2bc46a2436e97bc88f50ff6ce27cfc1e07"}, "downloads": -1, "filename": "cacofonisk-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6837f62f2dfac558d74b8e78cee95f26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66618, "upload_time": "2016-03-01T16:02:24", "upload_time_iso_8601": "2016-03-01T16:02:24.718906Z", "url": "https://files.pythonhosted.org/packages/00/11/b69733a6a6f272e4a0614c530d604994fff661fa7c0b7e480996f5f3705b/cacofonisk-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c96060a80b944cfc60e88b0bf15d8914", "sha256": "4d3538d72bdecaaca2cb4c691fe8aed42bca0303909abbcc83fad03fb6025aec"}, "downloads": -1, "filename": "cacofonisk-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c96060a80b944cfc60e88b0bf15d8914", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30479, "upload_time": "2017-09-11T07:23:15", "upload_time_iso_8601": "2017-09-11T07:23:15.595183Z", "url": "https://files.pythonhosted.org/packages/47/8f/1f2798050a55674a0a85d5168b9f3302fe3e586522f70d0f1c922b660f62/cacofonisk-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "dceb0fadc0a37e4365d67860be73f8aa", "sha256": "111f021649f616fd42be5a598cc151c47797eb92ac36a734164ab961f58a1620"}, "downloads": -1, "filename": "cacofonisk-0.2.0.tar.gz", "has_sig": false, "md5_digest": "dceb0fadc0a37e4365d67860be73f8aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31639, "upload_time": "2017-10-10T09:28:04", "upload_time_iso_8601": "2017-10-10T09:28:04.710150Z", "url": "https://files.pythonhosted.org/packages/9f/1c/9bcd9675154959c5d477ffc9d563ce0f4039dd397962ed713cbfc48bb4f1/cacofonisk-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "0d7024eae3b21b3609bffe022c9af250", "sha256": "158928b1cda9c074a91a0d5186be62c4917d149fe261ddaa8cf9a304139bc1e4"}, "downloads": -1, "filename": "cacofonisk-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0d7024eae3b21b3609bffe022c9af250", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32438, "upload_time": "2017-10-30T09:54:08", "upload_time_iso_8601": "2017-10-30T09:54:08.334998Z", "url": "https://files.pythonhosted.org/packages/15/75/72e03d579ad8b44e9555d57ed93afad252d1d3c3a84e6c3f89c0a9308b58/cacofonisk-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c608d67a3c2c0bb22164bb08cf2387d8", "sha256": "7293e83c4fd32178039ee05dd1d4a786b4431099a68336e5c9de81307ce2a445"}, "downloads": -1, "filename": "cacofonisk-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c608d67a3c2c0bb22164bb08cf2387d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37109, "upload_time": "2017-11-23T09:27:05", "upload_time_iso_8601": "2017-11-23T09:27:05.484924Z", "url": "https://files.pythonhosted.org/packages/33/9b/15102bec61ab4afced0aa2494302eaf79b11c882fe8b1f895f4767fd23f9/cacofonisk-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "22246a8ae50f9407e951021b878fcd81", "sha256": "87307acb20c58b041e50ee2f163119cf79fa1b899c6c6b610ffdbb07d967ff1a"}, "downloads": -1, "filename": "cacofonisk-0.4.0.tar.gz", "has_sig": false, "md5_digest": "22246a8ae50f9407e951021b878fcd81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36315, "upload_time": "2017-12-21T14:45:33", "upload_time_iso_8601": "2017-12-21T14:45:33.599298Z", "url": "https://files.pythonhosted.org/packages/1c/ad/f06b7eafb9f184e45baad60ecbe0407893f681ee09f97811095d168db912/cacofonisk-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "85dbf61699eb0e3f4dd66294f7e99b2b", "sha256": "8e510b82b8504a19cf9f76c9bfe7f5f66d05a3c40874c1fa0c9d4bdbdc00bde0"}, "downloads": -1, "filename": "cacofonisk-0.5.0.tar.gz", "has_sig": false, "md5_digest": "85dbf61699eb0e3f4dd66294f7e99b2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27322, "upload_time": "2018-07-26T12:38:14", "upload_time_iso_8601": "2018-07-26T12:38:14.464635Z", "url": "https://files.pythonhosted.org/packages/47/35/09f3c2474fdde80c655d575225f9a6fa8e24b3e26ec6f3285bc3c6a25b06/cacofonisk-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "b4a94bd27eeccc20127d95220259a036", "sha256": "bd5d18ea4a15cb8dce5ea91e4fcff784156ef6791f474ff1e3911d6b52212508"}, "downloads": -1, "filename": "cacofonisk-0.5.1.tar.gz", "has_sig": false, "md5_digest": "b4a94bd27eeccc20127d95220259a036", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27655, "upload_time": "2018-09-27T12:20:48", "upload_time_iso_8601": "2018-09-27T12:20:48.745848Z", "url": "https://files.pythonhosted.org/packages/87/c7/7e8a016d8d958224a91b99ce564dedd3ae5f5fef76a62fb84aa902ce2ed2/cacofonisk-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "03b780b102ac3c3e49d79f753f8f58d6", "sha256": "d6f4f3cdc0a30bf6e598a97169b9ace80e4f76e446f291e4825be32ef043f3c1"}, "downloads": -1, "filename": "cacofonisk-0.6.0.tar.gz", "has_sig": false, "md5_digest": "03b780b102ac3c3e49d79f753f8f58d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28465, "upload_time": "2018-10-11T11:24:21", "upload_time_iso_8601": "2018-10-11T11:24:21.572328Z", "url": "https://files.pythonhosted.org/packages/a9/05/475b64ca14e83349c5d12b66d1e1af26a563177118891bb5aee9e3b0dfa4/cacofonisk-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "1bbdb1cf2cc7a0b50b44e83283530b78", "sha256": "7f6428834626b6490a55eb1d4c8b1cd342d76c1f803331fe6d04e5c75556bad0"}, "downloads": -1, "filename": "cacofonisk-0.7.0.tar.gz", "has_sig": false, "md5_digest": "1bbdb1cf2cc7a0b50b44e83283530b78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29491, "upload_time": "2019-03-29T13:38:31", "upload_time_iso_8601": "2019-03-29T13:38:31.461719Z", "url": "https://files.pythonhosted.org/packages/07/54/66b299f66765dead70454763a146502fe7d750df6f8c10101d94478c436f/cacofonisk-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "fd631983efc619b6d5baff6a9372c4c6", "sha256": "c50cb49d532f668c8992ad3f807463eaa3e661dba0645037548702d4a6dacaff"}, "downloads": -1, "filename": "cacofonisk-0.7.1.tar.gz", "has_sig": false, "md5_digest": "fd631983efc619b6d5baff6a9372c4c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28868, "upload_time": "2019-04-19T09:36:32", "upload_time_iso_8601": "2019-04-19T09:36:32.955737Z", "url": "https://files.pythonhosted.org/packages/43/ca/89e26f74aa3da13fb23d9d491448b56008a0fd125ada882a567bfdc47a44/cacofonisk-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "46cad4ab68f6896d0beadf1121a58b81", "sha256": "3d6716d3ec8370ae44132cbf4b9158f82d60fb1134cd05630ff2024b68e3fdf2"}, "downloads": -1, "filename": "cacofonisk-0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "46cad4ab68f6896d0beadf1121a58b81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37944, "upload_time": "2020-03-27T15:12:31", "upload_time_iso_8601": "2020-03-27T15:12:31.939679Z", "url": "https://files.pythonhosted.org/packages/39/39/a22b50493ebebddf7b54593b5635926bccee0e31520e96c775fecffbacad/cacofonisk-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "674dce5e6fef010e7b184116868c8a2a", "sha256": "0cde5784c0dd599fe6c439083285c0410e64d7791759a0fe79137e2504be4466"}, "downloads": -1, "filename": "cacofonisk-0.7.2.tar.gz", "has_sig": false, "md5_digest": "674dce5e6fef010e7b184116868c8a2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29905, "upload_time": "2020-03-27T15:12:33", "upload_time_iso_8601": "2020-03-27T15:12:33.038249Z", "url": "https://files.pythonhosted.org/packages/32/c5/e3852b3448eb44351389a365b07ab92b0d594e7c0d25c24e258d1ed651fa/cacofonisk-0.7.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46cad4ab68f6896d0beadf1121a58b81", "sha256": "3d6716d3ec8370ae44132cbf4b9158f82d60fb1134cd05630ff2024b68e3fdf2"}, "downloads": -1, "filename": "cacofonisk-0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "46cad4ab68f6896d0beadf1121a58b81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37944, "upload_time": "2020-03-27T15:12:31", "upload_time_iso_8601": "2020-03-27T15:12:31.939679Z", "url": "https://files.pythonhosted.org/packages/39/39/a22b50493ebebddf7b54593b5635926bccee0e31520e96c775fecffbacad/cacofonisk-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "674dce5e6fef010e7b184116868c8a2a", "sha256": "0cde5784c0dd599fe6c439083285c0410e64d7791759a0fe79137e2504be4466"}, "downloads": -1, "filename": "cacofonisk-0.7.2.tar.gz", "has_sig": false, "md5_digest": "674dce5e6fef010e7b184116868c8a2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29905, "upload_time": "2020-03-27T15:12:33", "upload_time_iso_8601": "2020-03-27T15:12:33.038249Z", "url": "https://files.pythonhosted.org/packages/32/c5/e3852b3448eb44351389a365b07ab92b0d594e7c0d25c24e258d1ed651fa/cacofonisk-0.7.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:42 2020"}