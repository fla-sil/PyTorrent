{"info": {"author": "Henrique Bastos", "author_email": "henrique@bastos.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries"], "description": "SQLFormatter: Beautiful colored SQL statements for logging\n==========================================================\n\nLogging your SQL to the console helps you understand whats going on under the ORM.\n\nHowever, queries can get pretty big resulting on a code wall.\n\n*SQLFormater* is a logging formatter that *idents* and *colorize* your SQL statements making everything legible again.\n\n.. image:: https://img.shields.io/pypi/v/sqlformatter.svg\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/dm/sqlformatter.svg\n    :alt: Number of PyPI downloads\n\n\nHow it looks like?\n------------------\n\n.. image:: https://raw.githubusercontent.com/henriquebastos/sqlformatter/master/screenshot.png\n    :alt: Screenshot\n\n\nInstall\n-------\n\n.. code-block:: console\n\n    pip install sqlformatter\n\nUsage\n-----\n\nThere are 2 ways of using it.\n\nTemporarily enable it during a console session\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDuring a console session it maybe interesting to show your queries while experimenting.\n\nYou can toggle sql output logging by calling the helper function `logdb`.\n\n.. code-block:: python\n\n    from sqlformatter import logdb\n    # Enable\n    logdb()\n    \n    # Run your query\n    MyModel.objects.all() \n    \n    # Disable\n    logdb()\n\nAdd it to your Django Logging settings\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can add it to yout Django LOGGING settings:\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'handlers': {\n            'sqlhandler': {\n                'level': 'DEBUG',\n                'class': 'logging.StreamHandler',\n                'formatter': 'sqlformatter'\n            }\n        },\n        'formatters': {\n            'sqlformatter': {\n                '()': 'sqlformatter.SqlFormatter',\n                'format': '%(levelname)s %(message)s',\n            },\n        },\n        'loggers': {\n            'django.db.backends': {\n                'handlers': ['sqlhandler'],\n                'level': 'DEBUG',\n            },\n        }\n    }\n\nCustomization\n-------------\n\nYou can passa many options to customize `SqlFormatter` either instantiating it \ndirectly or calling the `logdb` helper.\n\nCheck out the source code.\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Henrique Bastos <henrique at bastos dot net>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/henriquebastos/sqlformatter/", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "sqlformatter", "package_url": "https://pypi.org/project/sqlformatter/", "platform": "any", "project_url": "https://pypi.org/project/sqlformatter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/henriquebastos/sqlformatter/"}, "release_url": "https://pypi.org/project/sqlformatter/1.3/", "requires_dist": null, "requires_python": null, "summary": "SQLFormatter: Beautiful colored SQL staments for logging", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"sqlformatter-beautiful-colored-sql-statements-for-logging\">\n<h2>SQLFormatter: Beautiful colored SQL statements for logging</h2>\n<p>Logging your SQL to the console helps you understand whats going on under the ORM.</p>\n<p>However, queries can get pretty big resulting on a code wall.</p>\n<p><em>SQLFormater</em> is a logging formatter that <em>idents</em> and <em>colorize</em> your SQL statements making everything legible again.</p>\n<img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/980652fc9fae4546933bdb2b3744c43b28e77813/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73716c666f726d61747465722e737667\">\n<img alt=\"Number of PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0dc75f538bda927e62096aaae832c96e50ebf32c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f73716c666f726d61747465722e737667\">\n<div id=\"how-it-looks-like\">\n<h3>How it looks like?</h3>\n<img alt=\"Screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b593fad3d6d676f378473d3ab7e3624a349171a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f68656e7269717565626173746f732f73716c666f726d61747465722f6d61737465722f73637265656e73686f742e706e67\">\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<pre><span class=\"go\">pip install sqlformatter</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>There are 2 ways of using it.</p>\n<div id=\"temporarily-enable-it-during-a-console-session\">\n<h4>Temporarily enable it during a console session</h4>\n<p>During a console session it maybe interesting to show your queries while experimenting.</p>\n<p>You can toggle sql output logging by calling the helper function <cite>logdb</cite>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlformatter</span> <span class=\"kn\">import</span> <span class=\"n\">logdb</span>\n<span class=\"c1\"># Enable</span>\n<span class=\"n\">logdb</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Run your query</span>\n<span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Disable</span>\n<span class=\"n\">logdb</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"add-it-to-your-django-logging-settings\">\n<h4>Add it to your Django Logging settings</h4>\n<p>You can add it to yout Django LOGGING settings:</p>\n<pre><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'disable_existing_loggers'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'sqlhandler'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'logging.StreamHandler'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'formatter'</span><span class=\"p\">:</span> <span class=\"s1\">'sqlformatter'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'formatters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'sqlformatter'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'()'</span><span class=\"p\">:</span> <span class=\"s1\">'sqlformatter.SqlFormatter'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'django.db.backends'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'sqlhandler'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"customization\">\n<h3>Customization</h3>\n<p>You can passa many options to customize <cite>SqlFormatter</cite> either instantiating it\ndirectly or calling the <cite>logdb</cite> helper.</p>\n<p>Check out the source code.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2013 Henrique Bastos &lt;henrique at bastos dot net&gt;</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 2385707, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "038199b371d207cf68f4fb45cb309aed", "sha256": "e7a53de96d0d1957c96bb95b9f82be351aa682dd53c1b76ab1ca96ef035eb4c6"}, "downloads": -1, "filename": "sqlformatter-1.0.tar.gz", "has_sig": false, "md5_digest": "038199b371d207cf68f4fb45cb309aed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3035, "upload_time": "2014-03-19T22:46:08", "upload_time_iso_8601": "2014-03-19T22:46:08.275674Z", "url": "https://files.pythonhosted.org/packages/4e/a9/d7032a322b0b7c761fca950bdaebcde0236dda5a027caf56053d89b07c9e/sqlformatter-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "e33335ad9f9711cb728476fbf24b15b1", "sha256": "a3796aa718b87b8e6e61a894912deacabef4c2eef16c72e2e00aed3bad2a3893"}, "downloads": -1, "filename": "sqlformatter-1.1.tar.gz", "has_sig": false, "md5_digest": "e33335ad9f9711cb728476fbf24b15b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3683, "upload_time": "2016-01-21T01:18:44", "upload_time_iso_8601": "2016-01-21T01:18:44.513164Z", "url": "https://files.pythonhosted.org/packages/96/7f/a2a33781cd69190ecb3b4ebc358be1a461e34fc2c3029f243bbcfb80b6d1/sqlformatter-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "c5398901a795d7690f260202482a5eb8", "sha256": "6fd3e987823375475b0f33c5647f77c0996163d07a9de58f8c791a6e62543785"}, "downloads": -1, "filename": "sqlformatter-1.2.tar.gz", "has_sig": false, "md5_digest": "c5398901a795d7690f260202482a5eb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3793, "upload_time": "2016-10-06T23:49:14", "upload_time_iso_8601": "2016-10-06T23:49:14.326434Z", "url": "https://files.pythonhosted.org/packages/57/17/10cb0f849c70e402b1511576d770551242b2ee0f0184e2feeb1635acdf03/sqlformatter-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "a6c24cee7b80332fbae7061d818342b1", "sha256": "8215a794e7282e10b6e7e2e25e097b6b8bb4f6f70c315030c5e0e1abb5993b53"}, "downloads": -1, "filename": "sqlformatter-1.3.tar.gz", "has_sig": false, "md5_digest": "a6c24cee7b80332fbae7061d818342b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3793, "upload_time": "2016-10-06T23:52:43", "upload_time_iso_8601": "2016-10-06T23:52:43.921086Z", "url": "https://files.pythonhosted.org/packages/26/c1/fc5443ec70f1db944862bee08c10c1e54b3af804c60f3e86e1fed9c353a7/sqlformatter-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6c24cee7b80332fbae7061d818342b1", "sha256": "8215a794e7282e10b6e7e2e25e097b6b8bb4f6f70c315030c5e0e1abb5993b53"}, "downloads": -1, "filename": "sqlformatter-1.3.tar.gz", "has_sig": false, "md5_digest": "a6c24cee7b80332fbae7061d818342b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3793, "upload_time": "2016-10-06T23:52:43", "upload_time_iso_8601": "2016-10-06T23:52:43.921086Z", "url": "https://files.pythonhosted.org/packages/26/c1/fc5443ec70f1db944862bee08c10c1e54b3af804c60f3e86e1fed9c353a7/sqlformatter-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:45 2020"}