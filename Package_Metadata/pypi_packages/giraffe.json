{"info": {"author": "Benjie Chen", "author_email": "benjie@alum.mit.edu", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "### Sequence Feature Detection and Mapping\n\nThis repository consists of two tools: Giraffe and Hippo. Giraffe includes a\nset of javascripts that visualize sequences and sequence features, and a Django\napp that detects features, restriction sites, and ORFs from a sequence. You can\nuse the javascripts independently from the Django program. Hippo is a Django\nfrontend for managing NCBI blast databases. User can create sequences, assign\nthem to databases, and use Django management commands to build NCBI blast\ndatabases. Giraffe uses NCBI blast databases, for example, to detect features\nin a sequence.\n\nHippo and Giraffe provide a convenient way to use Blast for your own\napplication. You can build blast databases using Hippo, then use Giraffe to\nblast query sequence against the database. Hippo offers a Django admin UI to\nmanage the blast DB, while Giraffe handles calling blast, parsing blast\nresults, and visualizing detected features.\n\nThis software was originally written by Misha Wolfson and Benjie Chen,\ncopyrighted by Addgene, and released under the MIT License. See LICENSE file.\nIt is now maintained by Benjie Chen.\n\n\n### Giraffe - Visualization\n\nYou can use Giraffe javascripts independently of the Django service, to\nvisualize a sequence you already have a list of features for.\n\nSee src/giraffe/templates/giraffe/{analyze,draw}.html.\n\n\n### Giraffe - Sequence feature detection\n\nRequirements:\n\n  * System requirements: see provison/provision.sh (you can use this to\n    provision a Vagrant instance, e.g.)\n\n  * Python requirements: pip install -r requirements.txt\n    (Currently supports Django 1.5 or higher)\n\n  * NCBI: install NCBI Blast toolkit (this takes awhile): cd ncbi; . install\n\n\nInstall Django service and build default database:\n\n```\ngit clone git@github.com:benjiec/giraffe.git\ncd giraffe\n(cd src; python manage.py migrate)\n(cd src; python manage.py build_blastdb)\n```\n\nRun test server:\n\n```\ncd src; python manage.py runserver 0.0.0.0:8000\n```\n\nThen goto http://0.0.0.0:8000/giraffe/demo/\n\n\n### API\n\nYou can POST a sequence to \"/giraffe/analyze/\", with the following params:\n\n```\ndb=default&sequence=your_dna_sequence_or_genbank_sequence_here\n```\n\nThis will return a JSON array of [sequence_len, array of features, sequence].\n\nProgrammatically, you can construct new blast databases using Hippo. E.g.\n\n```\nfrom hippo.models import Feature, Feature_Type, Feature_Database\ndb = Feature_Database(name='my_db')\ndb.save()\nft = Feature_Type.objects.get(type='Promoter')\nfeature = Feature(type=ft, name='Promoter1', sequence='AGCTATTTCGGAGTCGGCGATTACGATCGGCGATCG')\nfeature.save()\ndb.features.add(feature)\ndb.build()\n```\n\nYou can then query against database. E.g.\n\n```\nfrom hippo.models import Feature_Database\nfrom giraffe.features import blast\n\ndb = Feature_Database.objects.get(name='my_db')\nquery = '...' # some query sequence\nfeatures = blast(query, db)\n```\n\n\n### Hippo as a BLAST frontend\n\nUse Django admin to add features, group features into databases. Use the\nbuild_blastdb django management command to build your databases, then Giraffe\ncan use the databases for feature detection. Alternatively, call the\n```build``` method on a ```Feature_Database object``` directly.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "giraffe", "package_url": "https://pypi.org/project/giraffe/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/giraffe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/giraffe/2.0/", "requires_dist": null, "requires_python": null, "summary": "Sequence BLAST, feature detection, and visualization", "version": "2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ### Sequence Feature Detection and Mapping<br><br>This repository consists of two tools: Giraffe and Hippo. Giraffe includes a<br>set of javascripts that visualize sequences and sequence features, and a Django<br>app that detects features, restriction sites, and ORFs from a sequence. You can<br>use the javascripts independently from the Django program. Hippo is a Django<br>frontend for managing NCBI blast databases. User can create sequences, assign<br>them to databases, and use Django management commands to build NCBI blast<br>databases. Giraffe uses NCBI blast databases, for example, to detect features<br>in a sequence.<br><br>Hippo and Giraffe provide a convenient way to use Blast for your own<br>application. You can build blast databases using Hippo, then use Giraffe to<br>blast query sequence against the database. Hippo offers a Django admin UI to<br>manage the blast DB, while Giraffe handles calling blast, parsing blast<br>results, and visualizing detected features.<br><br>This software was originally written by Misha Wolfson and Benjie Chen,<br>copyrighted by Addgene, and released under the MIT License. See LICENSE file.<br>It is now maintained by Benjie Chen.<br><br><br>### Giraffe - Visualization<br><br>You can use Giraffe javascripts independently of the Django service, to<br>visualize a sequence you already have a list of features for.<br><br>See src/giraffe/templates/giraffe/{analyze,draw}.html.<br><br><br>### Giraffe - Sequence feature detection<br><br>Requirements:<br><br>  * System requirements: see provison/provision.sh (you can use this to<br>    provision a Vagrant instance, e.g.)<br><br>  * Python requirements: pip install -r requirements.txt<br>    (Currently supports Django 1.5 or higher)<br><br>  * NCBI: install NCBI Blast toolkit (this takes awhile): cd ncbi; . install<br><br><br>Install Django service and build default database:<br><br>```<br>git clone git@github.com:benjiec/giraffe.git<br>cd giraffe<br>(cd src; python manage.py migrate)<br>(cd src; python manage.py build_blastdb)<br>```<br><br>Run test server:<br><br>```<br>cd src; python manage.py runserver 0.0.0.0:8000<br>```<br><br>Then goto http://0.0.0.0:8000/giraffe/demo/<br><br><br>### API<br><br>You can POST a sequence to \"/giraffe/analyze/\", with the following params:<br><br>```<br>db=default&amp;sequence=your_dna_sequence_or_genbank_sequence_here<br>```<br><br>This will return a JSON array of [sequence_len, array of features, sequence].<br><br>Programmatically, you can construct new blast databases using Hippo. E.g.<br><br>```<br>from hippo.models import Feature, Feature_Type, Feature_Database<br>db = Feature_Database(name='my_db')<br>db.save()<br>ft = Feature_Type.objects.get(type='Promoter')<br>feature = Feature(type=ft, name='Promoter1', sequence='AGCTATTTCGGAGTCGGCGATTACGATCGGCGATCG')<br>feature.save()<br>db.features.add(feature)<br>db.build()<br>```<br><br>You can then query against database. E.g.<br><br>```<br>from hippo.models import Feature_Database<br>from giraffe.features import blast<br><br>db = Feature_Database.objects.get(name='my_db')<br>query = '...' # some query sequence<br>features = blast(query, db)<br>```<br><br><br>### Hippo as a BLAST frontend<br><br>Use Django admin to add features, group features into databases. Use the<br>build_blastdb django management command to build your databases, then Giraffe<br>can use the databases for feature detection. Alternatively, call the<br>```build``` method on a ```Feature_Database object``` directly.\n          </div>"}, "last_serial": 2760824, "releases": {"2.0": [{"comment_text": "", "digests": {"md5": "7320361848856f7caad3a1e5b3eaa7d6", "sha256": "31f4ae14985a2eb65bd13b918b9490d792972b3064b8d6d9e6741bb1ad15d067"}, "downloads": -1, "filename": "giraffe-2.0.tar.gz", "has_sig": false, "md5_digest": "7320361848856f7caad3a1e5b3eaa7d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15917, "upload_time": "2014-04-14T14:14:13", "upload_time_iso_8601": "2014-04-14T14:14:13.317115Z", "url": "https://files.pythonhosted.org/packages/36/8c/99b1d3aa3d5d5de218bc294d950ed61c8bf584595a73ca63ba85a05173ed/giraffe-2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7320361848856f7caad3a1e5b3eaa7d6", "sha256": "31f4ae14985a2eb65bd13b918b9490d792972b3064b8d6d9e6741bb1ad15d067"}, "downloads": -1, "filename": "giraffe-2.0.tar.gz", "has_sig": false, "md5_digest": "7320361848856f7caad3a1e5b3eaa7d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15917, "upload_time": "2014-04-14T14:14:13", "upload_time_iso_8601": "2014-04-14T14:14:13.317115Z", "url": "https://files.pythonhosted.org/packages/36/8c/99b1d3aa3d5d5de218bc294d950ed61c8bf584595a73ca63ba85a05173ed/giraffe-2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:22 2020"}