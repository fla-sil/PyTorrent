{"info": {"author": "RapLeaf", "author_email": "developer@rapleaf.com", "bugtrack_url": null, "classifiers": [], "description": "==================\nRAPLEAF DIRECT API\n==================\n\nCopyright 2010 Rapleaf\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\nFor general information regarding the personalization API, visit http://www.rapleaf.com/developers/api_docs/personalization/direct. The personalization API's terms and conditions are stated at http://www.rapleaf.com/developers/api_usage.\n\nHow to Use\n==========\n\nInstallation\n------------\n\n::\n\n\teasy_install rapleafApi\n\nUsage\n-----\n\n>>> from rapleafApi import RapleafApi\n>>> api = RapleafApi.RapleafApi('API_KEY')\n>>> api.query_by_email('test@example.com')\n{u'gender': u'Male', u'age': u'25-34'}\n\n\nQuery Options\n-------------\nThe egg supports several ways to query Rapleaf's API: email, hashed email (either MD5 or SHA1 hash), name and postal (NAP), or name and ZIP+4 (NAZ).\n\n**query_by_email(self, email, hash_email = False, show_available = False)**\n\n| This method queries Rapleaf's API with the specified email. \n| If the hash_email option is set, then the email will be hashed before it's sent to Rapleaf.\n| If the show_available option is set, then the string \"Data Available\" will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.\n\n| **query_by_md5(self, md5_email, show_available = False)**\n| **query_by_sha1(self, sha1_email, show_available = False)**\n\n| These methods query Rapleaf's API with the specified email hashes (either MD5 or SHA1, respectively). \n| If the show_available option is set, then the string \"Data Available\" will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.\n \n**query_by_nap(self, first, last, street, city, state, email = None, show_available = False)**\n\n| This method queries Rapleaf's API with a name and postal address: first name, last name, street, city, and state acronym (i.e., the state's 2-character postal code).\n| Though not necessary, adding an e-mail increases hit rate.\n| If the show_available option is set, then the string \"Data Available\" will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.\n\n\n**query_by_naz(self, first, last, zip4, email = None, show_available = False)**\n\n| This method queries Rapleaf's API with a name and ZIP+4 code. The ZIP+4 is a string with a 5-digit ZIP code and 4-digit extension separated by a dash.\n| Though not necessary, adding an e-mail increases hit rate.\n| If the show_available option is set, then the string \"Data Available\" will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.\n\n\nContributing\n============\nIf you have suggestions or patches, feel free to email us at\n<developer at rapleaf dot com>. We look forward to hearing from you!\n\n\nContributors\n============\nNicole Allard <nicole at rapleaf dot com>\n\n\nDependencies\n============\nurllib3\n::\n\n\teasy_install urllib3\n\nor visit the url https://github.com/shazow/urllib3/zipball/master.\nOnce you've unzipped the download, open a terminal window and navigate to the folder into which you unzipped the download. When you open the folder, one of the subdirectories is 'urllib3.' Open it. It contains a script called setup.py which you'll run via the command 'python setup.py install'.\n\nNote that, on unsuccessful requests, we raise an error. Unsuccessful requests are any requests which send back an http response status outside of the range 200 <= status < 300.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.rapleaf.com", "keywords": "rapleaf api", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "RapLeafApi", "package_url": "https://pypi.org/project/RapLeafApi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/RapLeafApi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.rapleaf.com"}, "release_url": "https://pypi.org/project/RapLeafApi/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A library for interacting with RapLeaf's Personalization API", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Copyright 2010 Rapleaf</p>\n<blockquote>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<blockquote>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></blockquote>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n</blockquote>\n<p>For general information regarding the personalization API, visit <a href=\"http://www.rapleaf.com/developers/api_docs/personalization/direct\" rel=\"nofollow\">http://www.rapleaf.com/developers/api_docs/personalization/direct</a>. The personalization API\u2019s terms and conditions are stated at <a href=\"http://www.rapleaf.com/developers/api_usage\" rel=\"nofollow\">http://www.rapleaf.com/developers/api_usage</a>.</p>\n<div id=\"how-to-use\">\n<h2>How to Use</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>easy_install rapleafApi\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre>&gt;&gt;&gt; from rapleafApi import RapleafApi\n&gt;&gt;&gt; api = RapleafApi.RapleafApi('API_KEY')\n&gt;&gt;&gt; api.query_by_email('test@example.com')\n{u'gender': u'Male', u'age': u'25-34'}\n</pre>\n</div>\n<div id=\"query-options\">\n<h3>Query Options</h3>\n<p>The egg supports several ways to query Rapleaf\u2019s API: email, hashed email (either MD5 or SHA1 hash), name and postal (NAP), or name and ZIP+4 (NAZ).</p>\n<p><strong>query_by_email(self, email, hash_email = False, show_available = False)</strong></p>\n<div>\n<div>This method queries Rapleaf\u2019s API with the specified email.</div>\n<div>If the hash_email option is set, then the email will be hashed before it\u2019s sent to Rapleaf.</div>\n<div>If the show_available option is set, then the string \u201cData Available\u201d will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.</div>\n</div>\n<div>\n<div><strong>query_by_md5(self, md5_email, show_available = False)</strong></div>\n<div><strong>query_by_sha1(self, sha1_email, show_available = False)</strong></div>\n</div>\n<div>\n<div>These methods query Rapleaf\u2019s API with the specified email hashes (either MD5 or SHA1, respectively).</div>\n<div>If the show_available option is set, then the string \u201cData Available\u201d will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.</div>\n</div>\n<p><strong>query_by_nap(self, first, last, street, city, state, email = None, show_available = False)</strong></p>\n<div>\n<div>This method queries Rapleaf\u2019s API with a name and postal address: first name, last name, street, city, and state acronym (i.e., the state\u2019s 2-character postal code).</div>\n<div>Though not necessary, adding an e-mail increases hit rate.</div>\n<div>If the show_available option is set, then the string \u201cData Available\u201d will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.</div>\n</div>\n<p><strong>query_by_naz(self, first, last, zip4, email = None, show_available = False)</strong></p>\n<div>\n<div>This method queries Rapleaf\u2019s API with a name and ZIP+4 code. The ZIP+4 is a string with a 5-digit ZIP code and 4-digit extension separated by a dash.</div>\n<div>Though not necessary, adding an e-mail increases hit rate.</div>\n<div>If the show_available option is set, then the string \u201cData Available\u201d will be returned for those fields which the API account is not subscribed but for which RapLeaf has data.</div>\n</div>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you have suggestions or patches, feel free to email us at\n&lt;developer at rapleaf dot com&gt;. We look forward to hearing from you!</p>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>Nicole Allard &lt;nicole at rapleaf dot com&gt;</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>urllib3</p>\n<pre>easy_install urllib3\n</pre>\n<p>or visit the url <a href=\"https://github.com/shazow/urllib3/zipball/master\" rel=\"nofollow\">https://github.com/shazow/urllib3/zipball/master</a>.\nOnce you\u2019ve unzipped the download, open a terminal window and navigate to the folder into which you unzipped the download. When you open the folder, one of the subdirectories is \u2018urllib3.\u2019 Open it. It contains a script called setup.py which you\u2019ll run via the command \u2018python setup.py install\u2019.</p>\n<p>Note that, on unsuccessful requests, we raise an error. Unsuccessful requests are any requests which send back an http response status outside of the range 200 &lt;= status &lt; 300.</p>\n</div>\n\n          </div>"}, "last_serial": 785502, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "462291e212f24c96bcd6b4523b053144", "sha256": "9373936296cfc98c3fe66894958442c1dda22b05d95787a09913e0accb81175a"}, "downloads": -1, "filename": "RapLeafApi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "462291e212f24c96bcd6b4523b053144", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3745, "upload_time": "2011-05-12T20:05:51", "upload_time_iso_8601": "2011-05-12T20:05:51.435438Z", "url": "https://files.pythonhosted.org/packages/fa/bc/aca256ff7f1a28b7ecddd2217ba83c3bc5617132629ffb99a3007217bafb/RapLeafApi-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c1c991a2d70506d4c787368f452bc52a", "sha256": "1e26293ef1851fa4633fb077c7e0a5ca5e04275a99e04df25dee427f9a87d145"}, "downloads": -1, "filename": "RapLeafApi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c1c991a2d70506d4c787368f452bc52a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3791, "upload_time": "2012-05-17T19:08:32", "upload_time_iso_8601": "2012-05-17T19:08:32.705252Z", "url": "https://files.pythonhosted.org/packages/c2/9f/33f4162f5a9862976febab80246d69b0338c4be1491d696b917611a18e0c/RapLeafApi-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1c991a2d70506d4c787368f452bc52a", "sha256": "1e26293ef1851fa4633fb077c7e0a5ca5e04275a99e04df25dee427f9a87d145"}, "downloads": -1, "filename": "RapLeafApi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c1c991a2d70506d4c787368f452bc52a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3791, "upload_time": "2012-05-17T19:08:32", "upload_time_iso_8601": "2012-05-17T19:08:32.705252Z", "url": "https://files.pythonhosted.org/packages/c2/9f/33f4162f5a9862976febab80246d69b0338c4be1491d696b917611a18e0c/RapLeafApi-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:24 2020"}