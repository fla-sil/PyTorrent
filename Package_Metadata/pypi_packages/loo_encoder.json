{"info": {"author": "He Zhang", "author_email": "zhanghe.dr@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# leave-one-out-encoder\nLeave one out coding for categorical features\n\nSee the source for this project here:\n<https://github.com/welfare520/leave-one-out-encoder>.\n\n## Getting Started  \n\n### Installing\n\n```\n$ pip install loo_encoder\n```\n\n## Example\n\nFit encoder according to X and y, and then transform it.\n\n```python\nfrom loo_encoder.encoder import LeaveOneOutEncoder\nimport pandas as pd\nimport numpy as np\n\n\nenc = LeaveOneOutEncoder(cols=['gender', 'country'], handle_unknown='impute', sigma=0.02, random_state=42)\n\nX = pd.DataFrame(\n    {\n        \"gender\": [\"male\", \"male\", \"female\", \"male\"],\n        \"country\": [\"Germany\", \"USA\", \"USA\", \"UK\"],\n        \"clicks\": [10, 33, 47, 21]\n    }\n)\n\ny = pd.Series([150, 250, 300, 100], name=\"orders\")\n\ndf_train = enc.fit_transform(X=X, y=y, sample_weight=X['clicks'])\n```\n\n\nPerform the transformation to new categorical data.\n\n```python\nX_val = pd.DataFrame(\n    {\n        \"gender\": [\"unknown\", \"male\", \"female\", \"male\"],\n        \"country\": [\"Germany\", \"USA\", \"Germany\", \"Japan\"]\n    }\n)\n\ndf_test = enc.transform(X=X_val)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/welfare520/leave-one-out-encoder", "keywords": "", "license": "GPL v3", "maintainer": "", "maintainer_email": "", "name": "loo_encoder", "package_url": "https://pypi.org/project/loo_encoder/", "platform": "", "project_url": "https://pypi.org/project/loo_encoder/", "project_urls": {"Homepage": "https://github.com/welfare520/leave-one-out-encoder"}, "release_url": "https://pypi.org/project/loo_encoder/0.0.9/", "requires_dist": ["pandas", "numpy"], "requires_python": "", "summary": "Leave one out encoding of categorical features", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>leave-one-out-encoder</h1>\n<p>Leave one out coding for categorical features</p>\n<p>See the source for this project here:\n<a href=\"https://github.com/welfare520/leave-one-out-encoder\" rel=\"nofollow\">https://github.com/welfare520/leave-one-out-encoder</a>.</p>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<pre><code>$ pip install loo_encoder\n</code></pre>\n<h2>Example</h2>\n<p>Fit encoder according to X and y, and then transform it.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">loo_encoder.encoder</span> <span class=\"kn\">import</span> <span class=\"n\">LeaveOneOutEncoder</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n\n<span class=\"n\">enc</span> <span class=\"o\">=</span> <span class=\"n\">LeaveOneOutEncoder</span><span class=\"p\">(</span><span class=\"n\">cols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'gender'</span><span class=\"p\">,</span> <span class=\"s1\">'country'</span><span class=\"p\">],</span> <span class=\"n\">handle_unknown</span><span class=\"o\">=</span><span class=\"s1\">'impute'</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"gender\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"male\"</span><span class=\"p\">,</span> <span class=\"s2\">\"male\"</span><span class=\"p\">,</span> <span class=\"s2\">\"female\"</span><span class=\"p\">,</span> <span class=\"s2\">\"male\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"country\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Germany\"</span><span class=\"p\">,</span> <span class=\"s2\">\"USA\"</span><span class=\"p\">,</span> <span class=\"s2\">\"USA\"</span><span class=\"p\">,</span> <span class=\"s2\">\"UK\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"clicks\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">33</span><span class=\"p\">,</span> <span class=\"mi\">47</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">([</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"orders\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">df_train</span> <span class=\"o\">=</span> <span class=\"n\">enc</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">sample_weight</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">[</span><span class=\"s1\">'clicks'</span><span class=\"p\">])</span>\n</pre>\n<p>Perform the transformation to new categorical data.</p>\n<pre><span class=\"n\">X_val</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"gender\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"unknown\"</span><span class=\"p\">,</span> <span class=\"s2\">\"male\"</span><span class=\"p\">,</span> <span class=\"s2\">\"female\"</span><span class=\"p\">,</span> <span class=\"s2\">\"male\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"country\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Germany\"</span><span class=\"p\">,</span> <span class=\"s2\">\"USA\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Germany\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Japan\"</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">df_test</span> <span class=\"o\">=</span> <span class=\"n\">enc</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_val</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 4136114, "releases": {"0.0.7": [{"comment_text": "", "digests": {"md5": "a4f8dcfcacd607ee0fa1c33ea600408c", "sha256": "a750cb873490332907dadb282938aef94e291ea665c4ade2ed53609d189959aa"}, "downloads": -1, "filename": "loo_encoder-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "a4f8dcfcacd607ee0fa1c33ea600408c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3812, "upload_time": "2018-07-19T15:36:56", "upload_time_iso_8601": "2018-07-19T15:36:56.756005Z", "url": "https://files.pythonhosted.org/packages/c3/31/492c2d584d821e532bec5a780f70e1dc3902bc2035b7bda85c0f8f432286/loo_encoder-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c484840ec152b87fb2a0b0c5a2101fc7", "sha256": "e96a297f29e8b2372b69ed58921533a9cab100d9b4c25959c57f5cd066aa70b1"}, "downloads": -1, "filename": "loo_encoder-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c484840ec152b87fb2a0b0c5a2101fc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3391, "upload_time": "2018-07-19T15:36:57", "upload_time_iso_8601": "2018-07-19T15:36:57.756379Z", "url": "https://files.pythonhosted.org/packages/ba/6a/d48d6db31b90ad33b6d770a6360e7d9decb2816812ed912d7ed1eec2d281/loo_encoder-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "fa9fbcdff6d92ec5a4c3a2e19ce7a418", "sha256": "cfdbad426764a683bdb5c409d127cfacefcbada06494cdceb434818ef9326feb"}, "downloads": -1, "filename": "loo_encoder-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "fa9fbcdff6d92ec5a4c3a2e19ce7a418", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4312, "upload_time": "2018-07-28T20:48:51", "upload_time_iso_8601": "2018-07-28T20:48:51.717213Z", "url": "https://files.pythonhosted.org/packages/e1/e3/1a54a23f5121b1e28c837f2a19cbeccf190eddb927ae8cce803161ee4bda/loo_encoder-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8d01246d9d463d669e246d9b1bbfd67", "sha256": "2dc1a09f2990cb5fe271570c2cc125894207b3010e19a1bac8c5873a87f81372"}, "downloads": -1, "filename": "loo_encoder-0.0.8.tar.gz", "has_sig": false, "md5_digest": "c8d01246d9d463d669e246d9b1bbfd67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3703, "upload_time": "2018-07-28T20:48:53", "upload_time_iso_8601": "2018-07-28T20:48:53.870973Z", "url": "https://files.pythonhosted.org/packages/64/f7/2363d88155d22e8957c5d7e4388fe5310ffedf2e4e42c385a8447d2b674a/loo_encoder-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "b853013ed785bdb661beb27607a63d42", "sha256": "cd9cd2836cdf95b561928ead4d7d37c450680c385ec4c4b436c6f30354a8c47c"}, "downloads": -1, "filename": "loo_encoder-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "b853013ed785bdb661beb27607a63d42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4312, "upload_time": "2018-08-04T20:22:34", "upload_time_iso_8601": "2018-08-04T20:22:34.046373Z", "url": "https://files.pythonhosted.org/packages/3a/f4/37eeb3d8feb8c55c07b6460e8dd9c46ff0aa1f780afe9a1a884734444230/loo_encoder-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1402c6d37f5b850f03ec128d2bf106a3", "sha256": "0aae6b3a6da341b0d97e1728ab627027be6ef3351ab4bd4a82b946a1277edf47"}, "downloads": -1, "filename": "loo_encoder-0.0.9.tar.gz", "has_sig": false, "md5_digest": "1402c6d37f5b850f03ec128d2bf106a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3706, "upload_time": "2018-08-04T20:22:36", "upload_time_iso_8601": "2018-08-04T20:22:36.291041Z", "url": "https://files.pythonhosted.org/packages/97/13/93050a7a05b6ce41a375451b16817b34a3734480824bcfdd3d2fe8b98edf/loo_encoder-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b853013ed785bdb661beb27607a63d42", "sha256": "cd9cd2836cdf95b561928ead4d7d37c450680c385ec4c4b436c6f30354a8c47c"}, "downloads": -1, "filename": "loo_encoder-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "b853013ed785bdb661beb27607a63d42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4312, "upload_time": "2018-08-04T20:22:34", "upload_time_iso_8601": "2018-08-04T20:22:34.046373Z", "url": "https://files.pythonhosted.org/packages/3a/f4/37eeb3d8feb8c55c07b6460e8dd9c46ff0aa1f780afe9a1a884734444230/loo_encoder-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1402c6d37f5b850f03ec128d2bf106a3", "sha256": "0aae6b3a6da341b0d97e1728ab627027be6ef3351ab4bd4a82b946a1277edf47"}, "downloads": -1, "filename": "loo_encoder-0.0.9.tar.gz", "has_sig": false, "md5_digest": "1402c6d37f5b850f03ec128d2bf106a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3706, "upload_time": "2018-08-04T20:22:36", "upload_time_iso_8601": "2018-08-04T20:22:36.291041Z", "url": "https://files.pythonhosted.org/packages/97/13/93050a7a05b6ce41a375451b16817b34a3734480824bcfdd3d2fe8b98edf/loo_encoder-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:56 2020"}