{"info": {"author": "hastexo", "author_email": "code@hastexo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Other/Nonlisted Topic"], "description": "oscar\\_vat\\_moss\n================\n\nEnables EU VATMOSS processing for the Oscar e-commerce system\n-------------------------------------------------------------\n\n.. image:: https://travis-ci.org/hastexo/django-oscar-vat_moss.svg?branch=master\n   :target: https://travis-ci.org/hastexo/django-oscar-vat_moss\n\n.. image:: https://codecov.io/github/hastexo/django-oscar-vat_moss/coverage.svg?branch=master\n   :target: https://codecov.io/github/hastexo/django-oscar-vat_moss?branch=master\n\t\t    \nThis package enables e-commerce application based on Django Oscar to\nassess and charge VAT (Value Added Tax) according to EU regulations.\n\nIt is based on\n`django-oscar <https://github.com/django-oscar/django-oscar/>`_\nand\n`vat_moss-python <https://github.com/wbond/vat_moss-python>`_.\n\nInstallation\n------------\n\nFor now, install with\n\n::\n\n    pip install https://github.com/hastexo/django-oscar-vat_moss/archive/master.zip\n\nto get the latest master. There are no named releases yet, and the\npackage isn't yet on PyPI.\n\nUse\n---\n\nTo use, you must\n\n-  Enable a pricing ``Strategy`` that uses the ``DeferredTax`` tax mixin\n\n-  Add a ``CheckoutSessionMixin`` to your checkout session, so taxes can\n   be applied when the customer's shipping address is known\n\n-  Optionally extend your data model with a field accommodating your\n   customer's VATIN (VAT Identification Number) if you want to enable\n   VAT-free B2B transactions under the reverse charge system. If all\n   your transactions are B2C, this last bit may be safely omitted.\n\nEnabling a VAT-enabled pricing strategy\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAdd ``oscar_vat_moss.partner.strategy.VATStrategy`` to your\n``partner/strategy.py`` module, and update your ``Selector`` to use it\nwhen appropriate:\n\n.. code:: python\n\n    # partner/strategy.py\n\n    from oscar_vat_moss.partner.strategy import VATStrategy\n\n    class Selector(object):\n        def strategy(self, request=None, user=None, **kwargs):\n            # Apply your strategy selection logic, where appropriate:\n            return VATStrategy(request)\n\nIf you only want one selector and you **always** want to apply\n``VATStrategy``, you may also simply use:\n\n.. code:: python\n\n    # partner/strategy.py\n\n    from oscar_vat_moss.partner.strategy import *\n\nApplying VAT on checkout\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nAdd ``oscar_vat_moss.checkout.session.CheckoutSessionMixin`` to your\n``checkout/session.py`` module:\n\n.. code:: python\n\n    # checkout/session.py\n\n    from oscar_vat_moss.checkout.session import CheckoutSessionMixin", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hastexo/django-oscar-vat_moss", "keywords": "VATMOSS,Tax,Oscar", "license": "Copyright (c) 2016, hastexo Professional Services GmbH and individual contributors.", "maintainer": null, "maintainer_email": null, "name": "django-oscar-vat_moss", "package_url": "https://pypi.org/project/django-oscar-vat_moss/", "platform": "linux", "project_url": "https://pypi.org/project/django-oscar-vat_moss/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hastexo/django-oscar-vat_moss"}, "release_url": "https://pypi.org/project/django-oscar-vat_moss/0.1.dev20160124225843/", "requires_dist": null, "requires_python": null, "summary": "EU VATMOSS support for django-oscar", "version": "0.1.dev20160124225843", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"enables-eu-vatmoss-processing-for-the-oscar-e-commerce-system\">\n<h2>Enables EU VATMOSS processing for the Oscar e-commerce system</h2>\n<a href=\"https://travis-ci.org/hastexo/django-oscar-vat_moss\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/hastexo/django-oscar-vat_moss.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebdef389c205bc4eb75218ab99d6164662ee19e5/68747470733a2f2f7472617669732d63692e6f72672f6861737465786f2f646a616e676f2d6f736361722d7661745f6d6f73732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/hastexo/django-oscar-vat_moss?branch=master\" rel=\"nofollow\"><img alt=\"https://codecov.io/github/hastexo/django-oscar-vat_moss/coverage.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6203602301cef6df750796c6d63e221dded4222d/68747470733a2f2f636f6465636f762e696f2f6769746875622f6861737465786f2f646a616e676f2d6f736361722d7661745f6d6f73732f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<p>This package enables e-commerce application based on Django Oscar to\nassess and charge VAT (Value Added Tax) according to EU regulations.</p>\n<p>It is based on\n<a href=\"https://github.com/django-oscar/django-oscar/\" rel=\"nofollow\">django-oscar</a>\nand\n<a href=\"https://github.com/wbond/vat_moss-python\" rel=\"nofollow\">vat_moss-python</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For now, install with</p>\n<pre>pip install https://github.com/hastexo/django-oscar-vat_moss/archive/master.zip\n</pre>\n<p>to get the latest master. There are no named releases yet, and the\npackage isn\u2019t yet on PyPI.</p>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<p>To use, you must</p>\n<ul>\n<li>Enable a pricing <tt>Strategy</tt> that uses the <tt>DeferredTax</tt> tax mixin</li>\n<li>Add a <tt>CheckoutSessionMixin</tt> to your checkout session, so taxes can\nbe applied when the customer\u2019s shipping address is known</li>\n<li>Optionally extend your data model with a field accommodating your\ncustomer\u2019s VATIN (VAT Identification Number) if you want to enable\nVAT-free B2B transactions under the reverse charge system. If all\nyour transactions are B2C, this last bit may be safely omitted.</li>\n</ul>\n<div id=\"enabling-a-vat-enabled-pricing-strategy\">\n<h3>Enabling a VAT-enabled pricing strategy</h3>\n<p>Add <tt>oscar_vat_moss.partner.strategy.VATStrategy</tt> to your\n<tt>partner/strategy.py</tt> module, and update your <tt>Selector</tt> to use it\nwhen appropriate:</p>\n<pre><span class=\"c1\"># partner/strategy.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">oscar_vat_moss.partner.strategy</span> <span class=\"kn\">import</span> <span class=\"n\">VATStrategy</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Selector</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">strategy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Apply your strategy selection logic, where appropriate:</span>\n        <span class=\"k\">return</span> <span class=\"n\">VATStrategy</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</pre>\n<p>If you only want one selector and you <strong>always</strong> want to apply\n<tt>VATStrategy</tt>, you may also simply use:</p>\n<pre><span class=\"c1\"># partner/strategy.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">oscar_vat_moss.partner.strategy</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n</div>\n<div id=\"applying-vat-on-checkout\">\n<h3>Applying VAT on checkout</h3>\n<p>Add <tt>oscar_vat_moss.checkout.session.CheckoutSessionMixin</tt> to your\n<tt>checkout/session.py</tt> module:</p>\n<pre><span class=\"c1\"># checkout/session.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">oscar_vat_moss.checkout.session</span> <span class=\"kn\">import</span> <span class=\"n\">CheckoutSessionMixin</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1920774, "releases": {"0.1.dev20160124225843": []}, "urls": [], "timestamp": "Fri May  8 00:55:23 2020"}