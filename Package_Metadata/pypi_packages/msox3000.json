{"info": {"author": "Stephen Goadhouse", "author_email": "sgoadhouse@virginia.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "msox3000\n========\n\nControl of HP/Agilent/Keysight MSO-X/DSO-X 3000A Oscilloscope through\npython via PyVisa\n\nUsing my previous work on dcps as a guide, this is intended to be a\ngeneric package to control various Oscilloscopes. However, it is\nexpected that very few oscilloscopes share the same commands so start\noff as a python Class specifically for the MSO-X/DSO-X 3000A\nOscilloscope. So will start targeted toward that family of oscilloscope\nwith a common SCPI.py Class. If it proves useful for other\noscilloscopes, then will create a new project but at least this one\nwould have started with that in mind.\n\nIt may also work on the MSO-X/DSO-X 2000A oscilloscope but I have not\nlooked into the differences ot know for sure. Try it out and let me\nknow.\n\nLike dcps, this will use the brilliant PyVISA python package along with\nthe PyVisa-PY access mode which eliminates the need for the (very buggy)\nVISA library to be installed on your computer.\n\nInstallation\n============\n\nYou need to install the pyvisa and pyvisa-py packages.\n\nTo install the msox3000 package, run the command:\n\n::\n\n   python setup.py install\n\nAlternatively, can add a path to this package to the environment\nvariable PYTHONPATH or even add the path to it at the start of your\npython script. Use your favorite web search engine to find out more\ndetails.\n\nEven better, msox3000 is on PyPi. So you can simply use the following\nand the required depedancies should get installed for you:\n\n::\n\n   pip install msox3000\n\nRequirements\n------------\n\n-  `python <http://www.python.org/>`__ [Works with 2.7+ and 3+]\n-  `pyvisa 1.9 <https://pyvisa.readthedocs.io/en/stable/>`__\n-  `pyvisa-py 0.2 <https://pyvisa-py.readthedocs.io/en/latest/>`__\n-  `quantiphy 2.3.0 <http://quantiphy.readthedocs.io/en/stable/>`__\n\nWith the use of pyvisa-py, should not have to install the National\nInstruments NIVA driver.\n\nUsage\n-----\n\nThe code is a very basic class for controlling and accessing the\nsupported oscilloscopes.\n\nIf running the examples embedded in the individual package source files,\nbe sure to edit the resource string or VISA descriptor of your\nparticular device. For MSOX3000.py, you can also set an environment\nvariable, MSOX3000_IP to the desired resource string before running the\ncode.\n\n.. code:: python\n\n   # Lookup environment variable MSOX3000_IP and use it as the resource\n   # name or use the TCPIP0 string if the environment variable does\n   # not exist\n   from msox3000 import MSOX3000\n   from os import environ\n   resource = environ.get('MSOX3000_IP', 'TCPIP0::172.16.2.13::INSTR')\n\n   # create your visa instrument\n   instr = MSOX3000(resource)\n   instr.open()\n\n   # set to channel 1\n   #\n   # NOTE: can pass channel to each method or just set it\n   # once and it becomes the default for all following calls. If pass the\n   # channel to a Class method call, it will become the default for\n   # following method calls.\n   instr.channel = 1\n\n   # Enable output of channel, if it is not already enabled\n   if not instr.isOutputOn():\n       instr.outputOn()\n\n   # Install measurements to display in statistics display and also\n   # return their current values here\n   print('Ch. {} Settings: {:6.4e} V  PW {:6.4e} s\\n'.\n             format(instr.channel, instr.measureVoltAverage(install=True),\n                        instr.measurePosPulseWidth(install=True)))\n\n   # Add an annotation to the screen before hardcopy\n   instr._instWrite(\"DISPlay:ANN ON\")\n   instr._instWrite('DISPlay:ANN:TEXT \"{}\\\\n{} {}\"'.format('Example of Annotation','for Channel',instr.channel))\n   instr._instWrite(\"DISPlay:ANN:COLor CH{}\".format(instr.channel))\n\n   # Change label of the channel to \"MySig\"\n   instr._instWrite('CHAN{}:LABel \"MySig\"'.format(instr.channel))\n   instr._instWrite('DISPlay:LABel ON')\n\n   # Make sure the statistics display is showing\n   instr._instWrite(\"SYSTem:MENU MEASure\")\n   instr._instWrite(\"MEASure:STATistics:DISPlay ON\")\n\n   ## Save a hardcopy of the screen to file 'outfile.png'\n   instr.hardcopy('outfile.png')\n\n   # Change label back to the default\n   instr._instWrite('CHAN{}:LABel \"{}\"'.format(instr.channel, instr.channel))\n   instr._instWrite('DISPlay:LABel OFF')\n\n   # Turn off the annotation\n   instr._instWrite(\"DISPlay:ANN OFF\")\n\n   # turn off the channel\n   instr.outputOff()\n\n   # return to LOCAL mode\n   instr.setLocal()\n\n   instr.close()\n\nTaking it Further\n-----------------\n\nThis implements a small subset of available commands.\n\nFor information on what is possible for the HP/Agilent/Keysight\nMSO-X/DSO-X 3000A, see the `Keysight InfiniiVision 3000 X-Series\nOscilloscopes Programming\nGuide <https://www.keysight.com/upload/cmc_upload/All/3000_series_prog_guide.pdf>`__\n\nFor what is possible with general instruments that adhere to the IEEE\n488 SCPI specification, like the MSO-X 3000A, see the `SCPI 1999\nSpecification <http://www.ivifoundation.org/docs/scpi-99.pdf>`__ and the\n`SCPI\nWikipedia <https://en.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments>`__\nentry.\n\nContact\n-------\n\nPlease send bug reports or feedback to Stephen Goadhouse\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sgoadhouse/msox3000", "keywords": "HP,Agilent,Keysight,MSO3000,MSOX3000,DSO3000,DSOX3000PyVISA,VISA,SCPI,INSTRUMENT", "license": "MIT", "maintainer": "Stephen Goadhouse", "maintainer_email": "sgoadhouse@virginia.edu", "name": "msox3000", "package_url": "https://pypi.org/project/msox3000/", "platform": "", "project_url": "https://pypi.org/project/msox3000/", "project_urls": {"Homepage": "https://github.com/sgoadhouse/msox3000"}, "release_url": "https://pypi.org/project/msox3000/0.2/", "requires_dist": ["pyvisa", "pyvisa-py", "argparse", "QuantiPhy"], "requires_python": "", "summary": "Control of HP/Agilent/Keysight MSO-X/DSO-X 3000A Oscilloscope through python via PyVisa", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"msox3000\">\n<h2>msox3000</h2>\n<p>Control of HP/Agilent/Keysight MSO-X/DSO-X 3000A Oscilloscope through\npython via PyVisa</p>\n<p>Using my previous work on dcps as a guide, this is intended to be a\ngeneric package to control various Oscilloscopes. However, it is\nexpected that very few oscilloscopes share the same commands so start\noff as a python Class specifically for the MSO-X/DSO-X 3000A\nOscilloscope. So will start targeted toward that family of oscilloscope\nwith a common SCPI.py Class. If it proves useful for other\noscilloscopes, then will create a new project but at least this one\nwould have started with that in mind.</p>\n<p>It may also work on the MSO-X/DSO-X 2000A oscilloscope but I have not\nlooked into the differences ot know for sure. Try it out and let me\nknow.</p>\n<p>Like dcps, this will use the brilliant PyVISA python package along with\nthe PyVisa-PY access mode which eliminates the need for the (very buggy)\nVISA library to be installed on your computer.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You need to install the pyvisa and pyvisa-py packages.</p>\n<p>To install the msox3000 package, run the command:</p>\n<pre>python setup.py install\n</pre>\n<p>Alternatively, can add a path to this package to the environment\nvariable PYTHONPATH or even add the path to it at the start of your\npython script. Use your favorite web search engine to find out more\ndetails.</p>\n<p>Even better, msox3000 is on PyPi. So you can simply use the following\nand the required depedancies should get installed for you:</p>\n<pre>pip install msox3000\n</pre>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">python</a> [Works with 2.7+ and 3+]</li>\n<li><a href=\"https://pyvisa.readthedocs.io/en/stable/\" rel=\"nofollow\">pyvisa 1.9</a></li>\n<li><a href=\"https://pyvisa-py.readthedocs.io/en/latest/\" rel=\"nofollow\">pyvisa-py 0.2</a></li>\n<li><a href=\"http://quantiphy.readthedocs.io/en/stable/\" rel=\"nofollow\">quantiphy 2.3.0</a></li>\n</ul>\n<p>With the use of pyvisa-py, should not have to install the National\nInstruments NIVA driver.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The code is a very basic class for controlling and accessing the\nsupported oscilloscopes.</p>\n<p>If running the examples embedded in the individual package source files,\nbe sure to edit the resource string or VISA descriptor of your\nparticular device. For MSOX3000.py, you can also set an environment\nvariable, MSOX3000_IP to the desired resource string before running the\ncode.</p>\n<pre><span class=\"c1\"># Lookup environment variable MSOX3000_IP and use it as the resource</span>\n<span class=\"c1\"># name or use the TCPIP0 string if the environment variable does</span>\n<span class=\"c1\"># not exist</span>\n<span class=\"kn\">from</span> <span class=\"nn\">msox3000</span> <span class=\"kn\">import</span> <span class=\"n\">MSOX3000</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">environ</span>\n<span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'MSOX3000_IP'</span><span class=\"p\">,</span> <span class=\"s1\">'TCPIP0::172.16.2.13::INSTR'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create your visa instrument</span>\n<span class=\"n\">instr</span> <span class=\"o\">=</span> <span class=\"n\">MSOX3000</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">)</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># set to channel 1</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># NOTE: can pass channel to each method or just set it</span>\n<span class=\"c1\"># once and it becomes the default for all following calls. If pass the</span>\n<span class=\"c1\"># channel to a Class method call, it will become the default for</span>\n<span class=\"c1\"># following method calls.</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\"># Enable output of channel, if it is not already enabled</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">isOutputOn</span><span class=\"p\">():</span>\n    <span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">outputOn</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Install measurements to display in statistics display and also</span>\n<span class=\"c1\"># return their current values here</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Ch. </span><span class=\"si\">{}</span><span class=\"s1\"> Settings: </span><span class=\"si\">{:6.4e}</span><span class=\"s1\"> V  PW </span><span class=\"si\">{:6.4e}</span><span class=\"s1\"> s</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span>\n          <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">measureVoltAverage</span><span class=\"p\">(</span><span class=\"n\">install</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n                     <span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">measurePosPulseWidth</span><span class=\"p\">(</span><span class=\"n\">install</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Add an annotation to the screen before hardcopy</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s2\">\"DISPlay:ANN ON\"</span><span class=\"p\">)</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s1\">'DISPlay:ANN:TEXT \"</span><span class=\"si\">{}</span><span class=\"se\">\\\\</span><span class=\"s1\">n</span><span class=\"si\">{}</span><span class=\"s1\"> </span><span class=\"si\">{}</span><span class=\"s1\">\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s1\">'Example of Annotation'</span><span class=\"p\">,</span><span class=\"s1\">'for Channel'</span><span class=\"p\">,</span><span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">))</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s2\">\"DISPlay:ANN:COLor CH</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Change label of the channel to \"MySig\"</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s1\">'CHAN</span><span class=\"si\">{}</span><span class=\"s1\">:LABel \"MySig\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">))</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s1\">'DISPlay:LABel ON'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Make sure the statistics display is showing</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s2\">\"SYSTem:MENU MEASure\"</span><span class=\"p\">)</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s2\">\"MEASure:STATistics:DISPlay ON\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Save a hardcopy of the screen to file 'outfile.png'</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">hardcopy</span><span class=\"p\">(</span><span class=\"s1\">'outfile.png'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Change label back to the default</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s1\">'CHAN</span><span class=\"si\">{}</span><span class=\"s1\">:LABel \"</span><span class=\"si\">{}</span><span class=\"s1\">\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">))</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s1\">'DISPlay:LABel OFF'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Turn off the annotation</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">_instWrite</span><span class=\"p\">(</span><span class=\"s2\">\"DISPlay:ANN OFF\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># turn off the channel</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">outputOff</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># return to LOCAL mode</span>\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">setLocal</span><span class=\"p\">()</span>\n\n<span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"taking-it-further\">\n<h3>Taking it Further</h3>\n<p>This implements a small subset of available commands.</p>\n<p>For information on what is possible for the HP/Agilent/Keysight\nMSO-X/DSO-X 3000A, see the <a href=\"https://www.keysight.com/upload/cmc_upload/All/3000_series_prog_guide.pdf\" rel=\"nofollow\">Keysight InfiniiVision 3000 X-Series\nOscilloscopes Programming\nGuide</a></p>\n<p>For what is possible with general instruments that adhere to the IEEE\n488 SCPI specification, like the MSO-X 3000A, see the <a href=\"http://www.ivifoundation.org/docs/scpi-99.pdf\" rel=\"nofollow\">SCPI 1999\nSpecification</a> and the\n<a href=\"https://en.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments\" rel=\"nofollow\">SCPI\nWikipedia</a>\nentry.</p>\n</div>\n<div id=\"contact\">\n<h3>Contact</h3>\n<p>Please send bug reports or feedback to Stephen Goadhouse</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4080087, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c68b559cdfcf96d189a467e3051d1e55", "sha256": "13fc8378d68922b67477a4ee8022e7ed5760fe272e0ff91d0a54afd1ccfd2435"}, "downloads": -1, "filename": "msox3000-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c68b559cdfcf96d189a467e3051d1e55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17129, "upload_time": "2018-07-18T19:36:57", "upload_time_iso_8601": "2018-07-18T19:36:57.383739Z", "url": "https://files.pythonhosted.org/packages/a7/e4/0731ef1424587d60352aca5cf12eef33a32c87679d633525fc3e4a682199/msox3000-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ebfd3baf6da696b85cf205cfd8ceb68", "sha256": "befe59204a1c8189a7d21e4baa7bddb1bac44889b73d7d065b306aa81df6303f"}, "downloads": -1, "filename": "msox3000-0.1.tar.gz", "has_sig": false, "md5_digest": "3ebfd3baf6da696b85cf205cfd8ceb68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19534, "upload_time": "2018-07-18T19:36:58", "upload_time_iso_8601": "2018-07-18T19:36:58.553306Z", "url": "https://files.pythonhosted.org/packages/65/b6/71c02d37fd3ef19e9d720624aed046df30a9496ff07714a14f50ab8dac91/msox3000-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "41b3520399f61258c1e200fe4cc9bbec", "sha256": "4b23bf37a312473c97610a45a7544cfc1d0759b75b2fc37ee9c8b35ab670e2fd"}, "downloads": -1, "filename": "msox3000-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "41b3520399f61258c1e200fe4cc9bbec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17631, "upload_time": "2018-07-18T22:30:55", "upload_time_iso_8601": "2018-07-18T22:30:55.663085Z", "url": "https://files.pythonhosted.org/packages/9b/6f/f67a21635e71458d1564a3235cdf42a3e07682652b911793feea579a0e4d/msox3000-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6347572fd2121b930867c47b7c9422d3", "sha256": "be1bd85c4ea066d3045aac7e8aed314c4ccfadb2703b302c6d59cff67ebd9578"}, "downloads": -1, "filename": "msox3000-0.2.tar.gz", "has_sig": false, "md5_digest": "6347572fd2121b930867c47b7c9422d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20613, "upload_time": "2018-07-18T22:30:56", "upload_time_iso_8601": "2018-07-18T22:30:56.661174Z", "url": "https://files.pythonhosted.org/packages/34/8b/46e5153121d3f090e9ea01cb7f4c9e1b6c1ea78c0fc366f64de2bfaba544/msox3000-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41b3520399f61258c1e200fe4cc9bbec", "sha256": "4b23bf37a312473c97610a45a7544cfc1d0759b75b2fc37ee9c8b35ab670e2fd"}, "downloads": -1, "filename": "msox3000-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "41b3520399f61258c1e200fe4cc9bbec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17631, "upload_time": "2018-07-18T22:30:55", "upload_time_iso_8601": "2018-07-18T22:30:55.663085Z", "url": "https://files.pythonhosted.org/packages/9b/6f/f67a21635e71458d1564a3235cdf42a3e07682652b911793feea579a0e4d/msox3000-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6347572fd2121b930867c47b7c9422d3", "sha256": "be1bd85c4ea066d3045aac7e8aed314c4ccfadb2703b302c6d59cff67ebd9578"}, "downloads": -1, "filename": "msox3000-0.2.tar.gz", "has_sig": false, "md5_digest": "6347572fd2121b930867c47b7c9422d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20613, "upload_time": "2018-07-18T22:30:56", "upload_time_iso_8601": "2018-07-18T22:30:56.661174Z", "url": "https://files.pythonhosted.org/packages/34/8b/46e5153121d3f090e9ea01cb7f4c9e1b6c1ea78c0fc366f64de2bfaba544/msox3000-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:49 2020"}