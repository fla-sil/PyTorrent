{"info": {"author": "John Thorvald Wodder II", "author_email": "pyversion-info@varonathe.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active \u2014 The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://travis-ci.org/jwodder/pyversion-info.svg?branch=master\n    :target: https://travis-ci.org/jwodder/pyversion-info\n\n.. image:: https://codecov.io/gh/jwodder/pyversion-info/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/pyversion-info\n\n.. image:: https://img.shields.io/pypi/pyversions/pyversion-info.svg\n    :target: https://pypi.org/project/pyversion-info/\n\n.. image:: https://img.shields.io/github/license/jwodder/pyversion-info.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n.. image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\n    :target: https://saythanks.io/to/jwodder\n\n`GitHub <https://github.com/jwodder/pyversion-info>`_\n| `PyPI <https://pypi.org/project/pyversion-info/>`_\n| `Issues <https://github.com/jwodder/pyversion-info/issues>`_\n\n.. contents::\n    :backlinks: top\n\nEver needed to know what Python versions were currently supported, or how many\nsubversions a given Python version had?  Wondering how long until a given\nversion came out or reached end-of-life?  The answers to these and some other\nquestions can be found with this library.\n\n``pyversion-info`` pulls its data every run from\n`jwodder/pyversion-info-data <https://github.com/jwodder/pyversion-info-data>`_\non GitHub.  Prerelease versions are not (currently) included.  I promise\n24-hour turnaround times for keeping the database up-to-date until I am hit by\na bus.\n\n\nInstallation\n============\nJust use `pip <https://pip.pypa.io>`_ (You have pip, right?) to install\n``pyversion-info`` and its dependencies::\n\n    pip install pyversion-info\n\n\nExamples\n========\n\nStart out by fetching the database::\n\n    >>> from pyversion_info import get_pyversion_info\n    >>> pyvinfo = get_pyversion_info()\n\nGet a list of all currently-supported Python series::\n\n    >>> pyvinfo.supported_series()\n    ['2.7', '3.5', '3.6', '3.7']\n\nWhen does 3.8 come out?\n\n::\n\n    >>> pyvinfo.release_date(\"3.8\")\n    datetime.date(2019, 10, 21)\n\nWhen does 2.7 reach end-of-life?\n\n::\n\n    >>> pyvinfo.eol_date(\"2.7\")\n    datetime.date(2020, 1, 1)\n\nJust how many micro versions does 2.7 have, anyway?\n\n::\n\n    >>> pyvinfo.subversions(\"2.7\")\n    ['2.7.0', '2.7.1', '2.7.2', '2.7.3', '2.7.4', '2.7.5', '2.7.6', '2.7.7', '2.7.8', '2.7.9', '2.7.10', '2.7.11', '2.7.12', '2.7.13', '2.7.14', '2.7.15', '2.7.16']\n\n\nHow many versions of Python 3 have been released?\n\n::\n\n    >>> pyvinfo.subversions(\"3\")\n    ['3.0', '3.1', '3.2', '3.3', '3.4', '3.5', '3.6', '3.7']\n\n\nAPI\n===\n\nVersions are passed to & returned from methods as strings in the form ``\"X\"``\n(a major version), ``\"X.Y\"`` (a minor version), or ``\"X.Y.Z\"`` (a micro\nversion).\n\nAll dates are returned as ``datetime.date`` objects.\n\n``PyVersionInfo``\n-----------------\nA class for querying Python versions and their release & EOL dates\n\n``PyVersionInfo(data)``\n   Construct a new ``PyVersionInfo`` object from a `dict` containing version\n   release dates and series EOL dates structured in accordance with `this\n   JSON Schema\n   <https://raw.githubusercontent.com/jwodder/pyversion-info-data/master/pyversion-info-data.schema.json>`_\n\n``pyvinfo.eol_date(series)``\n   Returns the end-of-life date of the given Python version series (i.e., a\n   minor version like 3.5).  The return value may be `None`, indicating that\n   the series is not yet end-of-life and its end-of-life date is unknown or\n   undetermined.  The return value may alternatively be `True`, indicating that\n   the series has reached end-of-life but the date on which that happened is\n   unknown.\n\n``pyvinfo.is_eol(series)``\n   Returns whether the given version series has reached end-of-life yet\n\n``pyvinfo.is_released(version)``\n   Returns whether the given version has been released yet.  For a major or\n   minor version, this is the whether the first (in version order) micro\n   version has been released.\n\n``pyvinfo.is_supported(series)``\n   Returns whether the given version series is currently supported (i.e., has\n   at least one release out and is not yet end-of-life)\n\n``pyvinfo.major_versions()``\n   Returns a list in version order of all Python major versions that have ever\n   been released\n\n``pyinfo.micro_versions()``\n   Returns a list in version order of all Python micro versions that have ever\n   been released.  Versions in the form ``X.Y`` are included here as ``X.Y.0``.\n\n``pyvinfo.minor_versions()``\n   Returns a list in version order of all Python minor versions that have ever\n   been released\n\n``pyvinfo.release_date(version)``\n   Returns the release date of the given Python version.  For a major or minor\n   version, this is the release date of its first (in version order) micro\n   version.  The return value may be `None`, indicating that, though the\n   version has been released and is known to the database, its release date is\n   unknown.\n\n``pyvinfo.subversions(version)``\n   Returns a list in version order of all released subversions of the given\n   version.  If ``version`` is a major version, this is all of its released\n   minor versions.  If ``version`` is a minor version, this is all of its\n   released micro versions.\n\n``pyvinfo.supported_series()``\n   Returns a list in version order of all Python version series (i.e., minor\n   versions like 3.5) that are currently supported (i.e., that have at least\n   one released made and are not yet end-of-life)\n\n\nUtilities\n---------\n\n``UnknownVersionError``\n   Exception raised when ``PyVersionInfo`` is asked for information about a\n   version that does not appear in its database.  Operations that result in an\n   ``UnknownVersionError`` may succeed later as more Python versions are\n   announced & released.\n\n   The unknown version is stored in an ``UnknownVersionError`` instance's\n   ``version`` attribute.\n\n``get_pyversion_info(url=pyversion_info.DATA_URL, cache_dir=pyversion_info.CACHE_DIR)``\n    Fetches the latest version release data from ``url`` and returns a new\n    ``PyVersionInfo`` object.  The HTTP response is cached in ``cache_dir`` to\n    speed up future requests (or ``cache_dir`` can be set to `None` to disable\n    caching).\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jwodder/pyversion-info", "keywords": "history,python,python versions", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyversion-info", "package_url": "https://pypi.org/project/pyversion-info/", "platform": "", "project_url": "https://pypi.org/project/pyversion-info/", "project_urls": {"Bug Tracker": "https://github.com/jwodder/pyversion-info/issues", "Homepage": "https://github.com/jwodder/pyversion-info", "Say Thanks!": "https://saythanks.io/to/jwodder", "Source Code": "https://github.com/jwodder/pyversion-info"}, "release_url": "https://pypi.org/project/pyversion-info/0.1.0/", "requires_dist": ["appdirs (~=1.4)", "cachecontrol[filecache] (~=0.12.0)", "requests (==2.*)"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "summary": "List released Python versions and their release & EOL dates", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://www.repostatus.org/#active\" rel=\"nofollow\"><img alt=\"Project Status: Active \u2014 The project has reached a stable, usable state and is being actively developed.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51adb09f202aea47725eca73a3fcf5e1ab47f2e9/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667\"></a>\n<a href=\"https://travis-ci.org/jwodder/pyversion-info\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jwodder/pyversion-info.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/226704f386117a1d14a0c45aad12229dd8638ae4/68747470733a2f2f7472617669732d63692e6f72672f6a776f646465722f707976657273696f6e2d696e666f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/jwodder/pyversion-info\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/jwodder/pyversion-info/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ca2c72a17dfb618f30662e7c911612ef050ac9c/68747470733a2f2f636f6465636f762e696f2f67682f6a776f646465722f707976657273696f6e2d696e666f2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/pyversion-info/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pyversion-info.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60f8a366be8a42ee82cbf3ee8ed29f5cd2da2374/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707976657273696f6e2d696e666f2e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f564a2fa3d89c69619dfabf8a770353094df052f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a776f646465722f707976657273696f6e2d696e666f2e737667\"></a>\n<a href=\"https://saythanks.io/to/jwodder\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a>\n<p><a href=\"https://github.com/jwodder/pyversion-info\" rel=\"nofollow\">GitHub</a>\n| <a href=\"https://pypi.org/project/pyversion-info/\" rel=\"nofollow\">PyPI</a>\n| <a href=\"https://github.com/jwodder/pyversion-info/issues\" rel=\"nofollow\">Issues</a></p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#examples\" id=\"id2\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#api\" id=\"id3\" rel=\"nofollow\">API</a><ul>\n<li><a href=\"#pyversioninfo\" id=\"id4\" rel=\"nofollow\"><tt>PyVersionInfo</tt></a></li>\n<li><a href=\"#utilities\" id=\"id5\" rel=\"nofollow\">Utilities</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p>Ever needed to know what Python versions were currently supported, or how many\nsubversions a given Python version had?  Wondering how long until a given\nversion came out or reached end-of-life?  The answers to these and some other\nquestions can be found with this library.</p>\n<p><tt><span class=\"pre\">pyversion-info</span></tt> pulls its data every run from\n<a href=\"https://github.com/jwodder/pyversion-info-data\" rel=\"nofollow\">jwodder/pyversion-info-data</a>\non GitHub.  Prerelease versions are not (currently) included.  I promise\n24-hour turnaround times for keeping the database up-to-date until I am hit by\na bus.</p>\n<div id=\"installation\">\n<h2><a href=\"#contents\" rel=\"nofollow\">Installation</a></h2>\n<p>Just use <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a> (You have pip, right?) to install\n<tt><span class=\"pre\">pyversion-info</span></tt> and its dependencies:</p>\n<pre>pip install pyversion-info\n</pre>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#contents\" rel=\"nofollow\">Examples</a></h2>\n<p>Start out by fetching the database:</p>\n<pre>&gt;&gt;&gt; from pyversion_info import get_pyversion_info\n&gt;&gt;&gt; pyvinfo = get_pyversion_info()\n</pre>\n<p>Get a list of all currently-supported Python series:</p>\n<pre>&gt;&gt;&gt; pyvinfo.supported_series()\n['2.7', '3.5', '3.6', '3.7']\n</pre>\n<p>When does 3.8 come out?</p>\n<pre>&gt;&gt;&gt; pyvinfo.release_date(\"3.8\")\ndatetime.date(2019, 10, 21)\n</pre>\n<p>When does 2.7 reach end-of-life?</p>\n<pre>&gt;&gt;&gt; pyvinfo.eol_date(\"2.7\")\ndatetime.date(2020, 1, 1)\n</pre>\n<p>Just how many micro versions does 2.7 have, anyway?</p>\n<pre>&gt;&gt;&gt; pyvinfo.subversions(\"2.7\")\n['2.7.0', '2.7.1', '2.7.2', '2.7.3', '2.7.4', '2.7.5', '2.7.6', '2.7.7', '2.7.8', '2.7.9', '2.7.10', '2.7.11', '2.7.12', '2.7.13', '2.7.14', '2.7.15', '2.7.16']\n</pre>\n<p>How many versions of Python 3 have been released?</p>\n<pre>&gt;&gt;&gt; pyvinfo.subversions(\"3\")\n['3.0', '3.1', '3.2', '3.3', '3.4', '3.5', '3.6', '3.7']\n</pre>\n</div>\n<div id=\"api\">\n<h2><a href=\"#contents\" rel=\"nofollow\">API</a></h2>\n<p>Versions are passed to &amp; returned from methods as strings in the form <tt>\"X\"</tt>\n(a major version), <tt>\"X.Y\"</tt> (a minor version), or <tt>\"X.Y.Z\"</tt> (a micro\nversion).</p>\n<p>All dates are returned as <tt>datetime.date</tt> objects.</p>\n<div id=\"pyversioninfo\">\n<h3><a href=\"#contents\" rel=\"nofollow\"><tt>PyVersionInfo</tt></a></h3>\n<p>A class for querying Python versions and their release &amp; EOL dates</p>\n<dl>\n<dt><tt>PyVersionInfo(data)</tt></dt>\n<dd>Construct a new <tt>PyVersionInfo</tt> object from a <cite>dict</cite> containing version\nrelease dates and series EOL dates structured in accordance with <a href=\"https://raw.githubusercontent.com/jwodder/pyversion-info-data/master/pyversion-info-data.schema.json\" rel=\"nofollow\">this\nJSON Schema</a></dd>\n<dt><tt>pyvinfo.eol_date(series)</tt></dt>\n<dd>Returns the end-of-life date of the given Python version series (i.e., a\nminor version like 3.5).  The return value may be <cite>None</cite>, indicating that\nthe series is not yet end-of-life and its end-of-life date is unknown or\nundetermined.  The return value may alternatively be <cite>True</cite>, indicating that\nthe series has reached end-of-life but the date on which that happened is\nunknown.</dd>\n<dt><tt>pyvinfo.is_eol(series)</tt></dt>\n<dd>Returns whether the given version series has reached end-of-life yet</dd>\n<dt><tt>pyvinfo.is_released(version)</tt></dt>\n<dd>Returns whether the given version has been released yet.  For a major or\nminor version, this is the whether the first (in version order) micro\nversion has been released.</dd>\n<dt><tt>pyvinfo.is_supported(series)</tt></dt>\n<dd>Returns whether the given version series is currently supported (i.e., has\nat least one release out and is not yet end-of-life)</dd>\n<dt><tt>pyvinfo.major_versions()</tt></dt>\n<dd>Returns a list in version order of all Python major versions that have ever\nbeen released</dd>\n<dt><tt>pyinfo.micro_versions()</tt></dt>\n<dd>Returns a list in version order of all Python micro versions that have ever\nbeen released.  Versions in the form <tt>X.Y</tt> are included here as <tt>X.Y.0</tt>.</dd>\n<dt><tt>pyvinfo.minor_versions()</tt></dt>\n<dd>Returns a list in version order of all Python minor versions that have ever\nbeen released</dd>\n<dt><tt>pyvinfo.release_date(version)</tt></dt>\n<dd>Returns the release date of the given Python version.  For a major or minor\nversion, this is the release date of its first (in version order) micro\nversion.  The return value may be <cite>None</cite>, indicating that, though the\nversion has been released and is known to the database, its release date is\nunknown.</dd>\n<dt><tt>pyvinfo.subversions(version)</tt></dt>\n<dd>Returns a list in version order of all released subversions of the given\nversion.  If <tt>version</tt> is a major version, this is all of its released\nminor versions.  If <tt>version</tt> is a minor version, this is all of its\nreleased micro versions.</dd>\n<dt><tt>pyvinfo.supported_series()</tt></dt>\n<dd>Returns a list in version order of all Python version series (i.e., minor\nversions like 3.5) that are currently supported (i.e., that have at least\none released made and are not yet end-of-life)</dd>\n</dl>\n</div>\n<div id=\"utilities\">\n<h3><a href=\"#contents\" rel=\"nofollow\">Utilities</a></h3>\n<dl>\n<dt><tt>UnknownVersionError</tt></dt>\n<dd><p>Exception raised when <tt>PyVersionInfo</tt> is asked for information about a\nversion that does not appear in its database.  Operations that result in an\n<tt>UnknownVersionError</tt> may succeed later as more Python versions are\nannounced &amp; released.</p>\n<p>The unknown version is stored in an <tt>UnknownVersionError</tt> instance\u2019s\n<tt>version</tt> attribute.</p>\n</dd>\n<dt><tt>get_pyversion_info(url=pyversion_info.DATA_URL, cache_dir=pyversion_info.CACHE_DIR)</tt></dt>\n<dd>Fetches the latest version release data from <tt>url</tt> and returns a new\n<tt>PyVersionInfo</tt> object.  The HTTP response is cached in <tt>cache_dir</tt> to\nspeed up future requests (or <tt>cache_dir</tt> can be set to <cite>None</cite> to disable\ncaching).</dd>\n</dl>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5179513, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1ab3523693209bfae46d081e55f5ca37", "sha256": "ffea37a8b1fb978bb5ceac1be0ba218d6184a68af13680164fd22f93a169ca3e"}, "downloads": -1, "filename": "pyversion_info-0.1.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "1ab3523693209bfae46d081e55f5ca37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 7611, "upload_time": "2019-04-23T22:49:08", "upload_time_iso_8601": "2019-04-23T22:49:08.838974Z", "url": "https://files.pythonhosted.org/packages/91/ab/c118140c1cac4a47cc4068df11662fb0597cbc1e4110a2a00b7cec8172a4/pyversion_info-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc0b95a7478b5d5cf7490a14be5d0572", "sha256": "d5f3cc4f51d3fd1acd64d82c86603a5ba94b76037338aedfdc049c28e4dcf517"}, "downloads": -1, "filename": "pyversion_info-0.1.0.tar.gz", "has_sig": true, "md5_digest": "cc0b95a7478b5d5cf7490a14be5d0572", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 13008, "upload_time": "2019-04-23T22:49:10", "upload_time_iso_8601": "2019-04-23T22:49:10.958533Z", "url": "https://files.pythonhosted.org/packages/36/03/884eb90e2318eb8de8cf07a538702e847301563221834266d8b0bde1a634/pyversion_info-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ab3523693209bfae46d081e55f5ca37", "sha256": "ffea37a8b1fb978bb5ceac1be0ba218d6184a68af13680164fd22f93a169ca3e"}, "downloads": -1, "filename": "pyversion_info-0.1.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "1ab3523693209bfae46d081e55f5ca37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 7611, "upload_time": "2019-04-23T22:49:08", "upload_time_iso_8601": "2019-04-23T22:49:08.838974Z", "url": "https://files.pythonhosted.org/packages/91/ab/c118140c1cac4a47cc4068df11662fb0597cbc1e4110a2a00b7cec8172a4/pyversion_info-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc0b95a7478b5d5cf7490a14be5d0572", "sha256": "d5f3cc4f51d3fd1acd64d82c86603a5ba94b76037338aedfdc049c28e4dcf517"}, "downloads": -1, "filename": "pyversion_info-0.1.0.tar.gz", "has_sig": true, "md5_digest": "cc0b95a7478b5d5cf7490a14be5d0572", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 13008, "upload_time": "2019-04-23T22:49:10", "upload_time_iso_8601": "2019-04-23T22:49:10.958533Z", "url": "https://files.pythonhosted.org/packages/36/03/884eb90e2318eb8de8cf07a538702e847301563221834266d8b0bde1a634/pyversion_info-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:05 2020"}