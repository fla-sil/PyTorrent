{"info": {"author": "Antoine Catton", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Communications :: File Sharing", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "flatbencode\n============\n\n.. image:: https://travis-ci.org/acatton/flatbencode.svg?branch=master\n    :target: https://travis-ci.org/acatton/flatbencode\n\nFast, safe and thoroughly tested implementation of ``bencode`` in pure Python\n3, without any C extension.\n\nThis is called ``flatbencode`` because the algorithm for decoding a ``bencode``\nstructure is non-recursive, thus preventing ``RuntimeException``.\n\n\nUsage\n-----\n\n\n.. code:: python\n\n    >>> from flatbencode import encode, decode\n    >>> encode({b'foo': [b'bar', 1]})\n    b'd3:fool3:bari1eee'\n    >>> decode(b'ldei0e0:e')\n    [OrderedDict(), 0, b'']\n\n\nRun tests\n---------\n\n.. code::\n\n    $ pip install pytest hypothesis\n    $ py.test -v\n\n\nChangelog\n---------\n\nv0.2.1 (2016-10-22)\n^^^^^^^^^^^^^^^^^^^\n\n* Do not accept strings as dictionary keys [Antoine Catton]\n\n\nv0.2.0 (2016-10-22)\n^^^^^^^^^^^^^^^^^^^\n\n* Raise an exception when there's still data left. [Tim Ruffing, #2]\n* Use bytes as python dictionary keys (instead of strings) [Tim Ruffing, #2]\n* Sort dictionary keys when serializing (follows the BEP-0003) [Antoine Catton]\n\n\nv0.1.0 (2016-06-12)\n^^^^^^^^^^^^^^^^^^^\n\n* Initial release.\n* Can decode bencoding into a python datastructure.\n* Can encode a python datastructure into bencoding serialization format.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/acatton/flatbencode", "keywords": "bencoding bencode bittorrent fast non-recursive stack maximum recursion", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "flatbencode", "package_url": "https://pypi.org/project/flatbencode/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/flatbencode/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/acatton/flatbencode"}, "release_url": "https://pypi.org/project/flatbencode/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Fast, safe and non-recursive implementation of Bittorrent bencoding for Python 3", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/acatton/flatbencode\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/acatton/flatbencode.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e9f5a58165fba4d8dd58da99b24816bf32eb4ef/68747470733a2f2f7472617669732d63692e6f72672f61636174746f6e2f666c617462656e636f64652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Fast, safe and thoroughly tested implementation of <tt>bencode</tt> in pure Python\n3, without any C extension.</p>\n<p>This is called <tt>flatbencode</tt> because the algorithm for decoding a <tt>bencode</tt>\nstructure is non-recursive, thus preventing <tt>RuntimeException</tt>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">flatbencode</span> <span class=\"kn\">import</span> <span class=\"n\">encode</span><span class=\"p\">,</span> <span class=\"n\">decode</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encode</span><span class=\"p\">({</span><span class=\"sa\">b</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]})</span>\n<span class=\"sa\">b</span><span class=\"s1\">'d3:fool3:bari1eee'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'ldei0e0:e'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">OrderedDict</span><span class=\"p\">(),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"run-tests\">\n<h2>Run tests</h2>\n<pre>$ pip install pytest hypothesis\n$ py.test -v\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v0-2-1-2016-10-22\">\n<h3>v0.2.1 (2016-10-22)</h3>\n<ul>\n<li>Do not accept strings as dictionary keys [Antoine Catton]</li>\n</ul>\n</div>\n<div id=\"v0-2-0-2016-10-22\">\n<h3>v0.2.0 (2016-10-22)</h3>\n<ul>\n<li>Raise an exception when there\u2019s still data left. [Tim Ruffing, #2]</li>\n<li>Use bytes as python dictionary keys (instead of strings) [Tim Ruffing, #2]</li>\n<li>Sort dictionary keys when serializing (follows the BEP-0003) [Antoine Catton]</li>\n</ul>\n</div>\n<div id=\"v0-1-0-2016-06-12\">\n<h3>v0.1.0 (2016-06-12)</h3>\n<ul>\n<li>Initial release.</li>\n<li>Can decode bencoding into a python datastructure.</li>\n<li>Can encode a python datastructure into bencoding serialization format.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2416881, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7355a26a8e782c1041d084f57d504848", "sha256": "86d09cef6b5b32b5dda51bb02654ec628165a346eb0e5ffc72bcf8721dda4674"}, "downloads": -1, "filename": "flatbencode-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7355a26a8e782c1041d084f57d504848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2529, "upload_time": "2016-06-12T13:06:45", "upload_time_iso_8601": "2016-06-12T13:06:45.914004Z", "url": "https://files.pythonhosted.org/packages/b7/5b/465597769c33b5735a341dc723a5548970e2799cc4e2cba99cb67c3eefbe/flatbencode-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d221afcd271ae82483d5d06e87c20d11", "sha256": "e2ad9c646bcc165309de47c30c70296cdfe77c89d490bed6a9ea1fe297192dcb"}, "downloads": -1, "filename": "flatbencode-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d221afcd271ae82483d5d06e87c20d11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3220, "upload_time": "2016-10-22T10:33:47", "upload_time_iso_8601": "2016-10-22T10:33:47.036284Z", "url": "https://files.pythonhosted.org/packages/f2/2c/bcb10e66dbef41f85049206ac0cab64b85c8436a38e4fc79a30e3c19e832/flatbencode-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cd4bcc49a5ed496b1e371e73d67ce1e0", "sha256": "77397d5d0108835404f6f7cad640d403c7025a11812afc7e1df4b0f92589ba77"}, "downloads": -1, "filename": "flatbencode-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cd4bcc49a5ed496b1e371e73d67ce1e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3234, "upload_time": "2016-10-22T11:12:34", "upload_time_iso_8601": "2016-10-22T11:12:34.225195Z", "url": "https://files.pythonhosted.org/packages/96/3d/ed36c2a94bef2ff1b7fc62ba932fa2eb4db3f7ea30c89da01b1c64ecbb8c/flatbencode-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd4bcc49a5ed496b1e371e73d67ce1e0", "sha256": "77397d5d0108835404f6f7cad640d403c7025a11812afc7e1df4b0f92589ba77"}, "downloads": -1, "filename": "flatbencode-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cd4bcc49a5ed496b1e371e73d67ce1e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3234, "upload_time": "2016-10-22T11:12:34", "upload_time_iso_8601": "2016-10-22T11:12:34.225195Z", "url": "https://files.pythonhosted.org/packages/96/3d/ed36c2a94bef2ff1b7fc62ba932fa2eb4db3f7ea30c89da01b1c64ecbb8c/flatbencode-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:04 2020"}