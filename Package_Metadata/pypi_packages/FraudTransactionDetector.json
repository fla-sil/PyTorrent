{"info": {"author": "Venkata Siva Rama Sastry Kavuri", "author_email": "sivaram.kavuri@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==========================\nFraud Transaction Detector\n==========================\n\nThe objective of this project is to come up with a classfication machine \nlearning model which identifies anomaly data/records from genuine data/records \ngiven unclassified/unlabeled data as input. This generic objective has \napplication in lot of domains like Healthcare, Stocks Trading, Banking, \nSystem Security etc. and few of the use cases are as below:\n\n* Fradulent Medical Claim detection\n* Fradulent Credit Card Transactions\n* Early detection of insider trading\n* Intrusion detection\n\nTechnologies used\n=================\n\nAs the module needs to be scalable and handle Big Data involving \nHundreds of Millions of records, I have chosen to use \n\n* Apache Spark\n* H2o\n\nMy Approach\n===========\nBelow is the approach taken and algorithms used to solve the problem \nat hand:\n\n1. K-Means Clustering from Apache Spark MLlib\n    * To identify clusters in the given unlabeled data\n    * Handles Big Data and scales on a cluster of machines\n\n2. Isolation Forest from H2o\n    * To detect the Anamolies in each cluster identified in #1\n    * Handles Big Data and works seamlessly with Apache Spark\n\n3. Gradient Boosted Classification Trees from Spark MLlib \n    * To create Ensemble classification model\n    * Handles Big Data and scales on a cluster of machines\n\n4. Model optimization using Apache Spark MLlib CrossValidator\n\n5. PCA\n    * Dimensionality Reduction to visualize the data in 3D\n\nHow to import and use the package?\n==================================\nBelow is the sample usage::\n\n\tfrom fraudtransactiondetector import FraudTransactionClassifier\n\tclassifier = FraudTransactionClassifier(numClusters=num_clusters,\n        \t                                quantile=0.99)\n\n\tclassifier.fit(df)\n\tprint(classifier.modelValidationMetrics())\n\n\t# Apply it on entire Training data just to check\n\tresults = classifier.transform(df)\n\n\t# Apply PCA and Visualize\n\tclassifier.visualizeByApplyingPCA()\n\n\t# Select optimal number of clusters using Elbow Method\n\tclassifier.selectOptimalClusters(df)\n\nSoftware Requirements\n=====================\nBefore installing the package, please ensure that the following softwares are \ninstalled:\n\n    * Apache Spark 2.4.3 toward pyspark\n    * Java (JDK 8)\n\nAlong with the package, the below packages will be installed when you \ndo 'pip install FraudTransactionDetector':\n\n    * h2o == 3.30.0.1\n    * pandas == 0.25.1\n    * numpy == 1.16.5\n    * matplotlib == 3.1.3\n    * scikit-learn == 0.21.3", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/FraudTransactionDetector/", "keywords": "", "license": "License.txt", "maintainer": "", "maintainer_email": "", "name": "FraudTransactionDetector", "package_url": "https://pypi.org/project/FraudTransactionDetector/", "platform": "", "project_url": "https://pypi.org/project/FraudTransactionDetector/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/FraudTransactionDetector/"}, "release_url": "https://pypi.org/project/FraudTransactionDetector/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Scalable Fraud Transaction Identifier using Clustering, Anomaly Detection and Classification ML Algorithms", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The objective of this project is to come up with a classfication machine\nlearning model which identifies anomaly data/records from genuine data/records\ngiven unclassified/unlabeled data as input. This generic objective has\napplication in lot of domains like Healthcare, Stocks Trading, Banking,\nSystem Security etc. and few of the use cases are as below:</p>\n<ul>\n<li>Fradulent Medical Claim detection</li>\n<li>Fradulent Credit Card Transactions</li>\n<li>Early detection of insider trading</li>\n<li>Intrusion detection</li>\n</ul>\n<div id=\"technologies-used\">\n<h2>Technologies used</h2>\n<p>As the module needs to be scalable and handle Big Data involving\nHundreds of Millions of records, I have chosen to use</p>\n<ul>\n<li>Apache Spark</li>\n<li>H2o</li>\n</ul>\n</div>\n<div id=\"my-approach\">\n<h2>My Approach</h2>\n<p>Below is the approach taken and algorithms used to solve the problem\nat hand:</p>\n<ol>\n<li><dl>\n<dt>K-Means Clustering from Apache Spark MLlib</dt>\n<dd><ul>\n<li>To identify clusters in the given unlabeled data</li>\n<li>Handles Big Data and scales on a cluster of machines</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Isolation Forest from H2o</dt>\n<dd><ul>\n<li>To detect the Anamolies in each cluster identified in #1</li>\n<li>Handles Big Data and works seamlessly with Apache Spark</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Gradient Boosted Classification Trees from Spark MLlib</dt>\n<dd><ul>\n<li>To create Ensemble classification model</li>\n<li>Handles Big Data and scales on a cluster of machines</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Model optimization using Apache Spark MLlib CrossValidator</li>\n<li><dl>\n<dt>PCA</dt>\n<dd><ul>\n<li>Dimensionality Reduction to visualize the data in 3D</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ol>\n</div>\n<div id=\"how-to-import-and-use-the-package\">\n<h2>How to import and use the package?</h2>\n<p>Below is the sample usage:</p>\n<pre>from fraudtransactiondetector import FraudTransactionClassifier\nclassifier = FraudTransactionClassifier(numClusters=num_clusters,\n                                        quantile=0.99)\n\nclassifier.fit(df)\nprint(classifier.modelValidationMetrics())\n\n# Apply it on entire Training data just to check\nresults = classifier.transform(df)\n\n# Apply PCA and Visualize\nclassifier.visualizeByApplyingPCA()\n\n# Select optimal number of clusters using Elbow Method\nclassifier.selectOptimalClusters(df)\n</pre>\n</div>\n<div id=\"software-requirements\">\n<h2>Software Requirements</h2>\n<p>Before installing the package, please ensure that the following softwares are\ninstalled:</p>\n<blockquote>\n<ul>\n<li>Apache Spark 2.4.3 toward pyspark</li>\n<li>Java (JDK 8)</li>\n</ul>\n</blockquote>\n<p>Along with the package, the below packages will be installed when you\ndo \u2018pip install FraudTransactionDetector\u2019:</p>\n<blockquote>\n<ul>\n<li>h2o == 3.30.0.1</li>\n<li>pandas == 0.25.1</li>\n<li>numpy == 1.16.5</li>\n<li>matplotlib == 3.1.3</li>\n<li>scikit-learn == 0.21.3</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 7113175, "releases": {"0.1.0.dev0": [{"comment_text": "", "digests": {"md5": "7654298feca58c19eaf0b90a7fbe7829", "sha256": "2f713fdeffee3031f75c6523a0d567e3b7ac6e39a7be4cd561a81b82284b2776"}, "downloads": -1, "filename": "FraudTransactionDetector-0.1.0.dev0.tar.gz", "has_sig": false, "md5_digest": "7654298feca58c19eaf0b90a7fbe7829", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2004, "upload_time": "2020-04-26T13:05:37", "upload_time_iso_8601": "2020-04-26T13:05:37.840179Z", "url": "https://files.pythonhosted.org/packages/cb/4f/ce404e4c767a37f5d4e260179adf480db204ffc7dd9c840df98ddc9be0dd/FraudTransactionDetector-0.1.0.dev0.tar.gz", "yanked": false}], "0.1.1.dev0": [{"comment_text": "", "digests": {"md5": "f80248d3e05402265d344125af611029", "sha256": "b2b906c1e48a5fed109475c9632359fe4cca662db19732b01301b5a2edc19509"}, "downloads": -1, "filename": "FraudTransactionDetector-0.1.1.dev0.tar.gz", "has_sig": false, "md5_digest": "f80248d3e05402265d344125af611029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2009, "upload_time": "2020-04-26T13:17:11", "upload_time_iso_8601": "2020-04-26T13:17:11.462977Z", "url": "https://files.pythonhosted.org/packages/7c/88/f2ae273f0d12ce6e77416ab5c613b98607766fa61309d3d9a605b9f14682/FraudTransactionDetector-0.1.1.dev0.tar.gz", "yanked": false}], "0.1.3.dev0": [{"comment_text": "", "digests": {"md5": "38363bd60ba948648ff3f1fdc757b970", "sha256": "944d1c76659a91d4d14740c92b1bd6bf1a127bfc424be1fd48e1283f42d1654d"}, "downloads": -1, "filename": "FraudTransactionDetector-0.1.3.dev0.tar.gz", "has_sig": false, "md5_digest": "38363bd60ba948648ff3f1fdc757b970", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 913248, "upload_time": "2020-04-27T16:28:44", "upload_time_iso_8601": "2020-04-27T16:28:44.702089Z", "url": "https://files.pythonhosted.org/packages/b5/38/d83bb2cadbe57557d0a5143221e28f84f21b2779e577102b48ba49d3ddcc/FraudTransactionDetector-0.1.3.dev0.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e14eef863f8a8da5bf46dac8bfe30e0a", "sha256": "f0452f5fce961731b5ccad0612ca1f795d50a5ae188403afe2d09e956c157562"}, "downloads": -1, "filename": "FraudTransactionDetector-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e14eef863f8a8da5bf46dac8bfe30e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 913630, "upload_time": "2020-04-27T16:55:03", "upload_time_iso_8601": "2020-04-27T16:55:03.520287Z", "url": "https://files.pythonhosted.org/packages/80/e0/533deee8861c2d18bc75f40acc7e14bcc05fd982a48969f3b4c7dbbf6e89/FraudTransactionDetector-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e14eef863f8a8da5bf46dac8bfe30e0a", "sha256": "f0452f5fce961731b5ccad0612ca1f795d50a5ae188403afe2d09e956c157562"}, "downloads": -1, "filename": "FraudTransactionDetector-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e14eef863f8a8da5bf46dac8bfe30e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 913630, "upload_time": "2020-04-27T16:55:03", "upload_time_iso_8601": "2020-04-27T16:55:03.520287Z", "url": "https://files.pythonhosted.org/packages/80/e0/533deee8861c2d18bc75f40acc7e14bcc05fd982a48969f3b4c7dbbf6e89/FraudTransactionDetector-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:32 2020"}