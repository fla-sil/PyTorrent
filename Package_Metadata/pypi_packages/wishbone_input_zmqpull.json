{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "::\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.2\n\n    Build composable event pipeline servers with minimal effort.\n\n\n    ======================\n    wishbone.input.zmqpull\n    ======================\n\n    Version: 1.0.0\n\n    Pulls events from one or more ZeroMQ push modules.\n    --------------------------------------------------\n\n\n        Expects to connect with one or more wishbone.input.push modules.  This\n        module can be started in client or server mode.  In server mode, it waits\n        for incoming connections.  In client mode it connects to the defined\n        servers.  Events are spread in a round robin pattern over all connections.\n\n        Parameters:\n\n            - mode(str)(\"server\")\n               |  The mode to run in.  Possible options are:\n               |  - server: Binds to a port and listens.\n               |  - client: Connects to a port.\n\n            - interface(string)(\"0.0.0.0\")\n               |  The interface to bind to in server <mode>.\n\n            - port(int)(19283)\n               |  The port to bind to in server <mode>.\n\n            - servers(list)([])\n               |  A list of hostname:port entries to connect to.\n               |  Only valid when running in \"client\" <mode>.\n\n\n        Queues:\n\n            - outbox\n               |  Events arriving from the outside.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smetj/wishbone-input-zmqpull/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-input-zmqpull", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wishbone_input_zmqpull", "package_url": "https://pypi.org/project/wishbone_input_zmqpull/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_input_zmqpull/", "project_urls": {"Download": "https://github.com/smetj/wishbone-input-zmqpull/tarball/master", "Homepage": "https://github.com/smetj/wishbone-input-zmqpull"}, "release_url": "https://pypi.org/project/wishbone_input_zmqpull/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A Wishbone input module to pull events from one or more ZeroMQ push sockets.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>          __       __    __\n.--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n|  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n|________|__|_____|__|__|_____|_____|__|__|_____|\n                                   version 2.1.2\n\nBuild composable event pipeline servers with minimal effort.\n\n\n======================\nwishbone.input.zmqpull\n======================\n\nVersion: 1.0.0\n\nPulls events from one or more ZeroMQ push modules.\n--------------------------------------------------\n\n\n    Expects to connect with one or more wishbone.input.push modules.  This\n    module can be started in client or server mode.  In server mode, it waits\n    for incoming connections.  In client mode it connects to the defined\n    servers.  Events are spread in a round robin pattern over all connections.\n\n    Parameters:\n\n        - mode(str)(\"server\")\n           |  The mode to run in.  Possible options are:\n           |  - server: Binds to a port and listens.\n           |  - client: Connects to a port.\n\n        - interface(string)(\"0.0.0.0\")\n           |  The interface to bind to in server &lt;mode&gt;.\n\n        - port(int)(19283)\n           |  The port to bind to in server &lt;mode&gt;.\n\n        - servers(list)([])\n           |  A list of hostname:port entries to connect to.\n           |  Only valid when running in \"client\" &lt;mode&gt;.\n\n\n    Queues:\n\n        - outbox\n           |  Events arriving from the outside.\n</pre>\n\n          </div>"}, "last_serial": 2031696, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d4a3e7462e0430e00a36c078eac4fe12", "sha256": "46a76973ab9f109810cad121b0dbf60706e8e152a397833dcc2680e4965f5f62"}, "downloads": -1, "filename": "wishbone_input_zmqpull-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d4a3e7462e0430e00a36c078eac4fe12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3305, "upload_time": "2016-03-28T13:21:56", "upload_time_iso_8601": "2016-03-28T13:21:56.544936Z", "url": "https://files.pythonhosted.org/packages/d5/69/2014b7bbc0cdb6d517d3eaa43845eb8220d1d9f2ec4134ae65821b0495fc/wishbone_input_zmqpull-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4a3e7462e0430e00a36c078eac4fe12", "sha256": "46a76973ab9f109810cad121b0dbf60706e8e152a397833dcc2680e4965f5f62"}, "downloads": -1, "filename": "wishbone_input_zmqpull-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d4a3e7462e0430e00a36c078eac4fe12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3305, "upload_time": "2016-03-28T13:21:56", "upload_time_iso_8601": "2016-03-28T13:21:56.544936Z", "url": "https://files.pythonhosted.org/packages/d5/69/2014b7bbc0cdb6d517d3eaa43845eb8220d1d9f2ec4134ae65821b0495fc/wishbone_input_zmqpull-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}