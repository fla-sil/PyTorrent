{"info": {"author": "Scott Chamberlain", "author_email": "myrmecocystus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "pygbif\n======\n\n|pypi| |docs| |travis| |coverage|\n\nPython client for the `GBIF API\n<https://www.gbif.org/developer/summary>`_\n\n`Source on GitHub at sckott/pygbif <https://github.com/sckott/pygbif>`_\n\nOther GBIF clients:\n\n* R: `rgbif`, `ropensci/rgbif <https://github.com/ropensci/rgbif>`_\n* Ruby: `gbifrb`, `sckott/gbifrb <https://github.com/sckott/gbifrb>`_\n\nInstallation\n============\n\nStable from pypi\n\n.. code-block:: console\n\n    pip install pygbif\n\nDevelopment version\n\n.. code-block:: console\n\n    [sudo] pip install git+git://github.com/sckott/pygbif.git#egg=pygbif\n\n`pygbif` is split up into modules for each of the major groups of API methods.\n\n* Registry - Datasets, Nodes, Installations, Networks, Organizations\n* Species - Taxonomic names\n* Occurrences - Occurrence data, including the download API\n* Maps - Maps, get raster maps from GBIF as png or mvt\n\nYou can import the entire library, or each module individually as needed.\n\nIn addition there is a utils module, currently with one method: `wkt_rewind`, and\na `caching` method to manage whether HTTP requests are cached or not. See `?pygbif.caching`.\n\nRegistry module\n===============\n\nregistry module API:\n\n* `organizations`\n* `nodes`\n* `networks`\n* `installations`\n* `datasets`\n* `dataset_metrics`\n* `dataset_suggest`\n* `dataset_search`\n\nExample usage:\n\n.. code-block:: python\n\n    from pygbif import registry\n    registry.dataset_metrics(uuid='3f8a1297-3259-4700-91fc-acc4170b27ce')\n\nSpecies module\n==============\n\nspecies module API:\n\n* `name_backbone`\n* `name_suggest`\n* `name_usage`\n* `name_lookup`\n* `name_parser`\n\nExample usage:\n\n.. code-block:: python\n\n    from pygbif import species\n    species.name_suggest(q='Puma concolor')\n\nOccurrences module\n==================\n\nregistry module API:\n\n* `search`\n* `get`\n* `get_verbatim`\n* `get_fragment`\n* `count`\n* `count_basisofrecord`\n* `count_year`\n* `count_datasets`\n* `count_countries`\n* `count_schema`\n* `count_publishingcountries`\n* `download`\n* `download_meta`\n* `download_list`\n* `download_get`\n\nExample usage:\n\n.. code-block:: python\n\n    from pygbif import occurrences as occ\n    occ.search(taxonKey = 3329049)\n    occ.get(key = 252408386)\n    occ.count(isGeoreferenced = True)\n    occ.download('basisOfRecord = LITERATURE')\n    occ.download('taxonKey = 3119195')\n    occ.download('decimalLatitude > 50')\n    occ.download_list(user = \"sckott\", limit = 5)\n    occ.download_meta(key = \"0000099-140929101555934\")\n    occ.download_get(\"0000066-140928181241064\")\n\nMaps module\n===========\n\nmaps module API:\n\n* `map`\n\nExample usage:\n\n.. code-block:: python\n\n    from pygbif import maps\n    out = maps.map(taxonKey = 212, year = 1998, bin = \"hex\",\n           hexPerTile = 30, style = \"classic-noborder.poly\")\n    out.response\n    out.path\n    out.img\n    out.plot()\n\n.. image:: https://github.com/sckott/pygbif/raw/master/gbif_map.png\n        :width: 25%\n        :scale: 25%\n\nutils module\n============\n\nutils module API:\n\n* `wkt_rewind`\n\nExample usage:\n\n.. code-block:: python\n\n    from pygbif import utils\n    x = 'POLYGON((144.6 13.2, 144.6 13.6, 144.9 13.6, 144.9 13.2, 144.6 13.2))'\n    utils.wkt_rewind(x)\n\n\n\nContributors\n============\n\n* `Scott Chamberlain <https://github.com/sckott>`_\n* `Robert Forkel <https://github.com/xrotwang>`_\n* `Jan Legind <https://github.com/jlegind>`_\n* `Stijn Van Hoey <https://github.com/stijnvanhoey>`_\n* `Peter Desmet <https://github.com/peterdesmet>`_\n\nMeta\n====\n\n* License: MIT, see `LICENSE file <LICENSE>`_\n* Please note that this project is released with a `Contributor Code of Conduct <CONDUCT.md>`_. By participating in this project you agree to abide by its terms.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pygbif.svg\n   :target: https://pypi.python.org/pypi/pygbif\n\n.. |docs| image:: https://readthedocs.org/projects/pygbif/badge/?version=latest\n   :target: http://pygbif.rtfd.org/\n\n.. |travis| image:: https://travis-ci.org/sckott/pygbif.svg\n   :target: https://travis-ci.org/sckott/pygbif\n\n.. |coverage| image:: https://coveralls.io/repos/sckott/pygbif/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/sckott/pygbif?branch=master\n\n\nChangelog\n=========\n\n0.4.0 (2019-11-20)\n------------------\n- changed base url to https for all requests; was already https for maps and downloads in previous versions\n- occurrences, species, and registry modules gain docstrings with brief summary of each method\n- pygbif gains ability to cache http requests. caching is off by default. See `?pygbif.caching` for all the details `52` `56` via @nleguillarme\n- made note in docs that if you are trying to get the same behavior as the GBIF website for name searching, `species.name_backbone` is likely what you want `55` thanks @qgroom\n- for parameters that expect a `bool`, convert them to lowercase strings internally before doing HTTP requests\n\n0.3.0 (2019-01-25)\n------------------\n- pygbif is Python 3 only now `19`\n- Gains maps module with maps.map method for working with the GBIF maps API `41` `49`\n- Gains new module utils with one method `wkt_rewind`  `46` thanks @aubreymoore for the inspiration\n- Fixed bug in registry.installations: typo in one of the parameters `identifierTyp` instead of `identifierType` `48` thanks @data-biodiversity-aq\n- Link to GitHub issues from Changelog \ud83c\udf89\n- Fix a occurrence download test `47`\n- Much more thorough docs `25`\n\n0.2.0 (2016-10-18)\n------------------\n- Download methods much improved `16` `27` thanks @jlegind @stijnvanhoey @peterdesmet !\n- MULTIPOLYGON now supported in `geometry` parameter `35`\n- Fixed docs for `occurrences.get`, and `occurrences.get_verbatim`, `occurrences.get_fragment` and demo that used occurrence keys that no longer exist in GBIF `39`\n- Added `organizations` method to `registry` module `12`\n- Added remainder of datasets methods: `registry.dataset_search` (including faceting support `37`) and `registry.dataset_suggest`, for the `/dataset/search` and `/dataset/suggest` routes, respectively `40`\n- Added remainder of species methods: `species.name_lookup` (including faceting support `38`) and `species.name_usage`, for the `/species/search` and `/species` routes, respectively `18`\n- Added more tests to cover new methods\n- Changed `species.name_suggest` to give back data stucture as received from GBIF. We used to parse out the classification data, but for simplicity and speed, that is left up to the user now.\n- `start` parameter in `species.name_suggest`, `occurrences.download_list`, `registry.organizations`, `registry.nodes`, `registry.networks`, and `registry.installations`, changed to `offset` to match GBIF API and match usage throughout remainder of `pygbif`\n\n0.1.5.4 (2016-10-01)\n--------------------\n- Added many new `occurrence.search` parameters, including `repatriated`, `kingdomKey`, `phylumKey`, `classKey`, `orderKey`, `familyKey`, `genusKey`, `subgenusKey`, `establishmentMeans`, `facet`, `facetMincount`, `facetMultiselect`, and support for facet paging via\t`**kwargs` `30` `34`\n- Fixes to `**kwargs` in `occurrence.search` so that facet parameters can be parsed correctly and `requests` GET\trequest options are collected correctly `36`\n- Added `spellCheck` parameter to `occurrence.search` that goes along with the `q` parameter to optionally spell check full text searches `31`\n\n0.1.4 (2016-06-04)\n------------------\n- Added variable types throughout docs\n- Changed default `limit` value to 300 for `occurrences.search` method\n- `tox` now included, via @xrotwang `20`\n- Added more registry methods `11`\n- Started occurrence download methods `16`\n- Added more names methods `18`\n- All requests now send user-agent headers with `requests` and `pygbif` versions `13`\n- Bug fix for `occurrences.download_get` `23`\n- Fixed bad example for `occurrences.get` `22`\n- Fixed wheel to be universal for 2 and 3 `10`\n- Improved documentation a lot, autodoc methods now\n\n0.1.1 (2015-11-03)\n------------------\n- Fixed distribution for pypi\n\n0.1.0 (2015-11-02)\n------------------\n- First release\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sckott/pygbif", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pygbif", "package_url": "https://pypi.org/project/pygbif/", "platform": "", "project_url": "https://pypi.org/project/pygbif/", "project_urls": {"Homepage": "http://github.com/sckott/pygbif"}, "release_url": "https://pypi.org/project/pygbif/0.4.0/", "requires_dist": ["requests (>2.7)", "requests-cache", "geojson-rewind", "geomet", "appdirs (>=1.4.3)", "matplotlib"], "requires_python": "", "summary": "Python client for GBIF", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pygbif\">\n<h2>pygbif</h2>\n<p><a href=\"https://pypi.python.org/pypi/pygbif\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fc75a37bfb8cedf9658801c613cfc23cc0e75b4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079676269662e737667\"></a> <a href=\"http://pygbif.rtfd.org/\" rel=\"nofollow\"><img alt=\"docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b7a73b2edd2af3643d52e396e9bd22470b4e1c2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079676269662f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://travis-ci.org/sckott/pygbif\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/089f4ec23db0ae998d1beee0963ac64059e7d620/68747470733a2f2f7472617669732d63692e6f72672f73636b6f74742f7079676269662e737667\"></a> <a href=\"https://coveralls.io/github/sckott/pygbif?branch=master\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0981589c746c6c65b6cc4191a277935c749ffd30/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f73636b6f74742f7079676269662f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a></p>\n<p>Python client for the <a href=\"https://www.gbif.org/developer/summary\" rel=\"nofollow\">GBIF API</a></p>\n<p><a href=\"https://github.com/sckott/pygbif\" rel=\"nofollow\">Source on GitHub at sckott/pygbif</a></p>\n<p>Other GBIF clients:</p>\n<ul>\n<li>R: <cite>rgbif</cite>, <a href=\"https://github.com/ropensci/rgbif\" rel=\"nofollow\">ropensci/rgbif</a></li>\n<li>Ruby: <cite>gbifrb</cite>, <a href=\"https://github.com/sckott/gbifrb\" rel=\"nofollow\">sckott/gbifrb</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Stable from pypi</p>\n<pre><span class=\"go\">pip install pygbif</span>\n</pre>\n<p>Development version</p>\n<pre><span class=\"go\">[sudo] pip install git+git://github.com/sckott/pygbif.git#egg=pygbif</span>\n</pre>\n<p><cite>pygbif</cite> is split up into modules for each of the major groups of API methods.</p>\n<ul>\n<li>Registry - Datasets, Nodes, Installations, Networks, Organizations</li>\n<li>Species - Taxonomic names</li>\n<li>Occurrences - Occurrence data, including the download API</li>\n<li>Maps - Maps, get raster maps from GBIF as png or mvt</li>\n</ul>\n<p>You can import the entire library, or each module individually as needed.</p>\n<p>In addition there is a utils module, currently with one method: <cite>wkt_rewind</cite>, and\na <cite>caching</cite> method to manage whether HTTP requests are cached or not. See <cite>?pygbif.caching</cite>.</p>\n</div>\n<div id=\"registry-module\">\n<h2>Registry module</h2>\n<p>registry module API:</p>\n<ul>\n<li><cite>organizations</cite></li>\n<li><cite>nodes</cite></li>\n<li><cite>networks</cite></li>\n<li><cite>installations</cite></li>\n<li><cite>datasets</cite></li>\n<li><cite>dataset_metrics</cite></li>\n<li><cite>dataset_suggest</cite></li>\n<li><cite>dataset_search</cite></li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygbif</span> <span class=\"kn\">import</span> <span class=\"n\">registry</span>\n<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">dataset_metrics</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">=</span><span class=\"s1\">'3f8a1297-3259-4700-91fc-acc4170b27ce'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"species-module\">\n<h2>Species module</h2>\n<p>species module API:</p>\n<ul>\n<li><cite>name_backbone</cite></li>\n<li><cite>name_suggest</cite></li>\n<li><cite>name_usage</cite></li>\n<li><cite>name_lookup</cite></li>\n<li><cite>name_parser</cite></li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygbif</span> <span class=\"kn\">import</span> <span class=\"n\">species</span>\n<span class=\"n\">species</span><span class=\"o\">.</span><span class=\"n\">name_suggest</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"s1\">'Puma concolor'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"occurrences-module\">\n<h2>Occurrences module</h2>\n<p>registry module API:</p>\n<ul>\n<li><cite>search</cite></li>\n<li><cite>get</cite></li>\n<li><cite>get_verbatim</cite></li>\n<li><cite>get_fragment</cite></li>\n<li><cite>count</cite></li>\n<li><cite>count_basisofrecord</cite></li>\n<li><cite>count_year</cite></li>\n<li><cite>count_datasets</cite></li>\n<li><cite>count_countries</cite></li>\n<li><cite>count_schema</cite></li>\n<li><cite>count_publishingcountries</cite></li>\n<li><cite>download</cite></li>\n<li><cite>download_meta</cite></li>\n<li><cite>download_list</cite></li>\n<li><cite>download_get</cite></li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygbif</span> <span class=\"kn\">import</span> <span class=\"n\">occurrences</span> <span class=\"k\">as</span> <span class=\"n\">occ</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">taxonKey</span> <span class=\"o\">=</span> <span class=\"mi\">3329049</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"mi\">252408386</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">isGeoreferenced</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'basisOfRecord = LITERATURE'</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'taxonKey = 3119195'</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'decimalLatitude &gt; 50'</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">download_list</span><span class=\"p\">(</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s2\">\"sckott\"</span><span class=\"p\">,</span> <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">download_meta</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"0000099-140929101555934\"</span><span class=\"p\">)</span>\n<span class=\"n\">occ</span><span class=\"o\">.</span><span class=\"n\">download_get</span><span class=\"p\">(</span><span class=\"s2\">\"0000066-140928181241064\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"maps-module\">\n<h2>Maps module</h2>\n<p>maps module API:</p>\n<ul>\n<li><cite>map</cite></li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygbif</span> <span class=\"kn\">import</span> <span class=\"n\">maps</span>\n<span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">maps</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">taxonKey</span> <span class=\"o\">=</span> <span class=\"mi\">212</span><span class=\"p\">,</span> <span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">1998</span><span class=\"p\">,</span> <span class=\"nb\">bin</span> <span class=\"o\">=</span> <span class=\"s2\">\"hex\"</span><span class=\"p\">,</span>\n       <span class=\"n\">hexPerTile</span> <span class=\"o\">=</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"s2\">\"classic-noborder.poly\"</span><span class=\"p\">)</span>\n<span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">response</span>\n<span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">path</span>\n<span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">img</span>\n<span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<img alt=\"https://github.com/sckott/pygbif/raw/master/gbif_map.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50b42bc5e505d2f6366c1ffd56d6008328dfb45c/68747470733a2f2f6769746875622e636f6d2f73636b6f74742f7079676269662f7261772f6d61737465722f676269665f6d61702e706e67\" width=\"25%\">\n</div>\n<div id=\"utils-module\">\n<h2>utils module</h2>\n<p>utils module API:</p>\n<ul>\n<li><cite>wkt_rewind</cite></li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygbif</span> <span class=\"kn\">import</span> <span class=\"n\">utils</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"s1\">'POLYGON((144.6 13.2, 144.6 13.6, 144.9 13.6, 144.9 13.2, 144.6 13.2))'</span>\n<span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">wkt_rewind</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/sckott\" rel=\"nofollow\">Scott Chamberlain</a></li>\n<li><a href=\"https://github.com/xrotwang\" rel=\"nofollow\">Robert Forkel</a></li>\n<li><a href=\"https://github.com/jlegind\" rel=\"nofollow\">Jan Legind</a></li>\n<li><a href=\"https://github.com/stijnvanhoey\" rel=\"nofollow\">Stijn Van Hoey</a></li>\n<li><a href=\"https://github.com/peterdesmet\" rel=\"nofollow\">Peter Desmet</a></li>\n</ul>\n</div>\n<div id=\"meta\">\n<h2>Meta</h2>\n<ul>\n<li>License: MIT, see <a href=\"LICENSE\" rel=\"nofollow\">LICENSE file</a></li>\n<li>Please note that this project is released with a <a href=\"CONDUCT.md\" rel=\"nofollow\">Contributor Code of Conduct</a>. By participating in this project you agree to abide by its terms.</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4.0 (2019-11-20)</h3>\n<ul>\n<li>changed base url to https for all requests; was already https for maps and downloads in previous versions</li>\n<li>occurrences, species, and registry modules gain docstrings with brief summary of each method</li>\n<li>pygbif gains ability to cache http requests. caching is off by default. See <cite>?pygbif.caching</cite> for all the details <cite>52</cite> <cite>56</cite> via @nleguillarme</li>\n<li>made note in docs that if you are trying to get the same behavior as the GBIF website for name searching, <cite>species.name_backbone</cite> is likely what you want <cite>55</cite> thanks @qgroom</li>\n<li>for parameters that expect a <cite>bool</cite>, convert them to lowercase strings internally before doing HTTP requests</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.0 (2019-01-25)</h3>\n<ul>\n<li>pygbif is Python 3 only now <cite>19</cite></li>\n<li>Gains maps module with maps.map method for working with the GBIF maps API <cite>41</cite> <cite>49</cite></li>\n<li>Gains new module utils with one method <cite>wkt_rewind</cite>  <cite>46</cite> thanks @aubreymoore for the inspiration</li>\n<li>Fixed bug in registry.installations: typo in one of the parameters <cite>identifierTyp</cite> instead of <cite>identifierType</cite> <cite>48</cite> thanks @data-biodiversity-aq</li>\n<li>Link to GitHub issues from Changelog \ud83c\udf89</li>\n<li>Fix a occurrence download test <cite>47</cite></li>\n<li>Much more thorough docs <cite>25</cite></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.0 (2016-10-18)</h3>\n<ul>\n<li>Download methods much improved <cite>16</cite> <cite>27</cite> thanks @jlegind @stijnvanhoey @peterdesmet !</li>\n<li>MULTIPOLYGON now supported in <cite>geometry</cite> parameter <cite>35</cite></li>\n<li>Fixed docs for <cite>occurrences.get</cite>, and <cite>occurrences.get_verbatim</cite>, <cite>occurrences.get_fragment</cite> and demo that used occurrence keys that no longer exist in GBIF <cite>39</cite></li>\n<li>Added <cite>organizations</cite> method to <cite>registry</cite> module <cite>12</cite></li>\n<li>Added remainder of datasets methods: <cite>registry.dataset_search</cite> (including faceting support <cite>37</cite>) and <cite>registry.dataset_suggest</cite>, for the <cite>/dataset/search</cite> and <cite>/dataset/suggest</cite> routes, respectively <cite>40</cite></li>\n<li>Added remainder of species methods: <cite>species.name_lookup</cite> (including faceting support <cite>38</cite>) and <cite>species.name_usage</cite>, for the <cite>/species/search</cite> and <cite>/species</cite> routes, respectively <cite>18</cite></li>\n<li>Added more tests to cover new methods</li>\n<li>Changed <cite>species.name_suggest</cite> to give back data stucture as received from GBIF. We used to parse out the classification data, but for simplicity and speed, that is left up to the user now.</li>\n<li><cite>start</cite> parameter in <cite>species.name_suggest</cite>, <cite>occurrences.download_list</cite>, <cite>registry.organizations</cite>, <cite>registry.nodes</cite>, <cite>registry.networks</cite>, and <cite>registry.installations</cite>, changed to <cite>offset</cite> to match GBIF API and match usage throughout remainder of <cite>pygbif</cite></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.5.4 (2016-10-01)</h3>\n<ul>\n<li>Added many new <cite>occurrence.search</cite> parameters, including <cite>repatriated</cite>, <cite>kingdomKey</cite>, <cite>phylumKey</cite>, <cite>classKey</cite>, <cite>orderKey</cite>, <cite>familyKey</cite>, <cite>genusKey</cite>, <cite>subgenusKey</cite>, <cite>establishmentMeans</cite>, <cite>facet</cite>, <cite>facetMincount</cite>, <cite>facetMultiselect</cite>, and support for facet paging via       <cite>**kwargs</cite> <cite>30</cite> <cite>34</cite></li>\n<li>Fixes to <cite>**kwargs</cite> in <cite>occurrence.search</cite> so that facet parameters can be parsed correctly and <cite>requests</cite> GET        request options are collected correctly <cite>36</cite></li>\n<li>Added <cite>spellCheck</cite> parameter to <cite>occurrence.search</cite> that goes along with the <cite>q</cite> parameter to optionally spell check full text searches <cite>31</cite></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.4 (2016-06-04)</h3>\n<ul>\n<li>Added variable types throughout docs</li>\n<li>Changed default <cite>limit</cite> value to 300 for <cite>occurrences.search</cite> method</li>\n<li><cite>tox</cite> now included, via @xrotwang <cite>20</cite></li>\n<li>Added more registry methods <cite>11</cite></li>\n<li>Started occurrence download methods <cite>16</cite></li>\n<li>Added more names methods <cite>18</cite></li>\n<li>All requests now send user-agent headers with <cite>requests</cite> and <cite>pygbif</cite> versions <cite>13</cite></li>\n<li>Bug fix for <cite>occurrences.download_get</cite> <cite>23</cite></li>\n<li>Fixed bad example for <cite>occurrences.get</cite> <cite>22</cite></li>\n<li>Fixed wheel to be universal for 2 and 3 <cite>10</cite></li>\n<li>Improved documentation a lot, autodoc methods now</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.1 (2015-11-03)</h3>\n<ul>\n<li>Fixed distribution for pypi</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.0 (2015-11-02)</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6171633, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5e93d1b21c809157583de533b5865796", "sha256": "406b2d7bfeec33d307ed1c07e82e34e150818e5d9ae80f86e666b7935106d37d"}, "downloads": -1, "filename": "pygbif-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "5e93d1b21c809157583de533b5865796", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 24225, "upload_time": "2015-11-03T19:33:47", "upload_time_iso_8601": "2015-11-03T19:33:47.235828Z", "url": "https://files.pythonhosted.org/packages/a5/66/292e1fdbdb649eb56e86f72f2a74d72c2a0ed815a50c26a15a4687ce197e/pygbif-0.1.0-py2.7.egg", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6ce7acb7522dfb6aa8dae25110537864", "sha256": "3eb128f8143f7ffb27e7c44652e59c51456aa1d79fe58fa21006a4c35394def9"}, "downloads": -1, "filename": "pygbif-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "6ce7acb7522dfb6aa8dae25110537864", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27112, "upload_time": "2015-11-04T07:06:57", "upload_time_iso_8601": "2015-11-04T07:06:57.898754Z", "url": "https://files.pythonhosted.org/packages/f9/e6/5f94f438d2661b22487ef6ae03fce557267ccab8d90610c0b20c63c44cb4/pygbif-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e1564a1abc9fce7ccae03f32f5c8678", "sha256": "16ae5d6df5b94d3424b9c775153451352c9e1fd0a43119506ae7a68e651c80df"}, "downloads": -1, "filename": "pygbif-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5e1564a1abc9fce7ccae03f32f5c8678", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16932, "upload_time": "2015-11-04T07:07:07", "upload_time_iso_8601": "2015-11-04T07:07:07.171706Z", "url": "https://files.pythonhosted.org/packages/df/94/e20ba23974eed9c1bc62001973694d3c1ddaf1d508a2303feb98217403d9/pygbif-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "03ed84a7c46c7bbb3c9aea4edc6f0ef5", "sha256": "6400424091e17c8751cbb3e42d6c7cf319b7910764fa335d6fb96dedc82a5311"}, "downloads": -1, "filename": "pygbif-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03ed84a7c46c7bbb3c9aea4edc6f0ef5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29572, "upload_time": "2015-12-05T18:53:33", "upload_time_iso_8601": "2015-12-05T18:53:33.216659Z", "url": "https://files.pythonhosted.org/packages/c4/f3/f75797e546a867a923a0f3aae0f4b2fc83cfab964acc23be9ebca7989e6b/pygbif-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e8390bba1ac1562f40cd6fe290eab21", "sha256": "55fd715829281f35d61e9bc2617d110701ebd6410baf2f1e2be0c8d99d6e8b46"}, "downloads": -1, "filename": "pygbif-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5e8390bba1ac1562f40cd6fe290eab21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18239, "upload_time": "2015-12-05T18:53:37", "upload_time_iso_8601": "2015-12-05T18:53:37.467524Z", "url": "https://files.pythonhosted.org/packages/cb/c9/276930740ecbca71c3a8b82a3b1df3960d6557499b435979cc628494edfa/pygbif-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ffdf6444b9ddecfadee2b03a99bb15da", "sha256": "6389b284a317e316817318a2a9bcb84e165d41f18c480fccfe82721e6ccb2e10"}, "downloads": -1, "filename": "pygbif-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ffdf6444b9ddecfadee2b03a99bb15da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37993, "upload_time": "2016-06-04T18:31:33", "upload_time_iso_8601": "2016-06-04T18:31:33.022845Z", "url": "https://files.pythonhosted.org/packages/80/0d/e677e5b05b8d16d65aa28f7a13c1f3ac3319cd2747d871b6a5ba2f609233/pygbif-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b44c0f4338f50c3dd2a2539093bb9d3", "sha256": "c4c749716346a56c6176f072f937c0e8ae0adfb3973d26fdb3666bd727db6e78"}, "downloads": -1, "filename": "pygbif-0.1.4.tar.gz", "has_sig": false, "md5_digest": "0b44c0f4338f50c3dd2a2539093bb9d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27122, "upload_time": "2016-06-04T18:31:36", "upload_time_iso_8601": "2016-06-04T18:31:36.777898Z", "url": "https://files.pythonhosted.org/packages/65/65/536c1740bc8bbc9ceb07290201dd7aa4aa8b025b8b52db2046ba1a7fc864/pygbif-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fe7d967d8deba074ba679acee6b48597", "sha256": "69098498fc4f99dace49617f80d59fea60cb21864940e26696cab3515c0204ed"}, "downloads": -1, "filename": "pygbif-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fe7d967d8deba074ba679acee6b48597", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55526, "upload_time": "2016-10-19T23:57:12", "upload_time_iso_8601": "2016-10-19T23:57:12.891561Z", "url": "https://files.pythonhosted.org/packages/4e/43/8d17b60ac441c68e35f5ca8bc04e2c64c9c4d17df6312857c53d307d835a/pygbif-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48bfefb445eed4ca851b282542872ea7", "sha256": "f850d5fde3d44d63f3418f8686367cb91639bc82b771dbbe036f4c844df4704a"}, "downloads": -1, "filename": "pygbif-0.2.0.tar.gz", "has_sig": false, "md5_digest": "48bfefb445eed4ca851b282542872ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37361, "upload_time": "2016-10-19T23:57:15", "upload_time_iso_8601": "2016-10-19T23:57:15.480443Z", "url": "https://files.pythonhosted.org/packages/8a/54/181ab4bc8620960620f3fbf8981d0de3d55e58f8306bd780abc7259cb386/pygbif-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "031618024887ceda05551b7b59a72aa6", "sha256": "9706858add818b059f4bbb0bdbc8024385cbaa4c351a267fde9918cb3840d9cc"}, "downloads": -1, "filename": "pygbif-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "031618024887ceda05551b7b59a72aa6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 58247, "upload_time": "2019-01-25T21:00:54", "upload_time_iso_8601": "2019-01-25T21:00:54.361869Z", "url": "https://files.pythonhosted.org/packages/e0/df/f55f005fb40fa947b613c3050fda5274a7c3f045ab9aaa824cc87bb11748/pygbif-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5348f0162e220998cffde64f856469ee", "sha256": "dba747d0cd5da391ef08c95ae0b1d7d361206d517569ee7f79a8c193f157629e"}, "downloads": -1, "filename": "pygbif-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5348f0162e220998cffde64f856469ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43310, "upload_time": "2019-01-25T21:00:55", "upload_time_iso_8601": "2019-01-25T21:00:55.902470Z", "url": "https://files.pythonhosted.org/packages/ec/31/ba5aa5bc3afb282212ace21b3069e779cb498d6f9bc7a075303e1c0d447a/pygbif-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e919e1c32f8c32b9e232781a51c5d793", "sha256": "a5428df5160748bfa8e553b7ccafdde738cfc30bce801095ce4d43e7e405a3d4"}, "downloads": -1, "filename": "pygbif-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e919e1c32f8c32b9e232781a51c5d793", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61142, "upload_time": "2019-11-20T21:40:10", "upload_time_iso_8601": "2019-11-20T21:40:10.945815Z", "url": "https://files.pythonhosted.org/packages/7a/25/222531f22cf162409c38f55c48b13ab0c4128cf13ac05290de8878d639b1/pygbif-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "facd67cc3f59bdde4fdf3579a89be091", "sha256": "d85005fc4f79c6368f58a1b4ba5c6cfd0384cd14e516c3ead552b00c5b53fc17"}, "downloads": -1, "filename": "pygbif-0.4.0.tar.gz", "has_sig": false, "md5_digest": "facd67cc3f59bdde4fdf3579a89be091", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45740, "upload_time": "2019-11-20T21:40:13", "upload_time_iso_8601": "2019-11-20T21:40:13.050804Z", "url": "https://files.pythonhosted.org/packages/d4/12/a09dff820bc568764caf08a8d292f28b8a364ef008c8a9978222c340a841/pygbif-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e919e1c32f8c32b9e232781a51c5d793", "sha256": "a5428df5160748bfa8e553b7ccafdde738cfc30bce801095ce4d43e7e405a3d4"}, "downloads": -1, "filename": "pygbif-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e919e1c32f8c32b9e232781a51c5d793", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61142, "upload_time": "2019-11-20T21:40:10", "upload_time_iso_8601": "2019-11-20T21:40:10.945815Z", "url": "https://files.pythonhosted.org/packages/7a/25/222531f22cf162409c38f55c48b13ab0c4128cf13ac05290de8878d639b1/pygbif-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "facd67cc3f59bdde4fdf3579a89be091", "sha256": "d85005fc4f79c6368f58a1b4ba5c6cfd0384cd14e516c3ead552b00c5b53fc17"}, "downloads": -1, "filename": "pygbif-0.4.0.tar.gz", "has_sig": false, "md5_digest": "facd67cc3f59bdde4fdf3579a89be091", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45740, "upload_time": "2019-11-20T21:40:13", "upload_time_iso_8601": "2019-11-20T21:40:13.050804Z", "url": "https://files.pythonhosted.org/packages/d4/12/a09dff820bc568764caf08a8d292f28b8a364ef008c8a9978222c340a841/pygbif-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:15 2020"}