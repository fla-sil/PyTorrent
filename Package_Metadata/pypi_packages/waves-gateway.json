{"info": {"author": "Henning Gerrits", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Waves-Gateway-Framework\n=========================\n\nA framework to connect other cryptocurrencies to the Waves platform.\nRequires Python 3.5 or newer.\n\nFor detailed usage instructions please refer to the source code documentation that may be exported\nby using the commands described below.\nThe framework exports a class Gateway. This class has to instantiated.\nOnce done, the Gateway can be started by calling the run method on the resulting instance.\n\nThe constructor of the Gateway class requires instances of certain interfaces.\nThose interfaces define the required functionality that a concrete Gateway implementation has to provide.\nYou may also take a look at an example implementation that\nrealizes a Waves-Gateway for Litecoin: https://github.com/jansenmarc/WavesGatewayLTCExample.\n\nHow to install\n---------------\n\n.. code:: bash\n\n    pip install waves-gateway\n\nRequired packages for development\n---------------------------------\n\n.. code:: bash\n\n    python3.5 -m pip install coverage mypy pylint Sphinx\n\nLint\n----\n\nThe `PyLint <https://www.pylint.org>`__ package is required for linting.\nInstall it like this: ``pip install pylint``.\n\n.. code:: bash\n\n    python3.5 setup.py lint\n\nMyPy\n----\n\nThe `MyPy <https://github.com/python/mypy>`__ package performs static\ntype analysis to prevent errors.\n\n::\n\n    python3.5 setup.py mypy\n\nUnittest\n--------\n\n.. code:: bash\n\n    python3.5 setup.py test\n\nThe convention is to write Unittests for every class in a separate file\nstarting with ``test_`` This is the default prefix of the python\nUnittest module.\n\nCoverage\n--------\n\n.. code:: bash\n\n    python3.5 setup.py coverage\n\nDocumentation Generation\n========================\n\nCreates a folder docs with the generated HTML documentation.\n\n.. code:: bash\n\n    pip install . -U\n    python3.5 setup.py docs\n\nDoctest\n-------\n\nDoctests are not used in this project. Write Unittests instead.\n\nyapf\n----\n\nThis project uses yapf (https://github.com/google/yapf) as a formatting\ntool So, please format your code before commiting by running this:\n\n.. code:: bash\n\n    python3.5 -m yapf -r waves_gateway --style pep8 --style {COLUMN_LIMIT:120} -i\n\nThe pipeline will fail if the code is not properly formatted.\n\nDistribution\n------------\n\nFirst, run ``npm run build:prod`` to update the assets.\nAfter that, run ``python3.5 setup.py sdist`` to create an installable tar archive.\n\nPublish to test.pypi.org:\n\n.. code:: bash\n\n    twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n\nRegular publish:\n\n.. code:: bash\n\n    twine upload dist/*\n\nRecommendations\n---------------\n\n-  Use Python 3.5 for development.\n-  PyCharm users should enable Gevent compatible debugging:\n   https://blog.jetbrains.com/pycharm/2012/08/gevent-debug-support/.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jansenmarc/WavesGatewayFramework", "keywords": "waves gateway wavesplatform", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "waves-gateway", "package_url": "https://pypi.org/project/waves-gateway/", "platform": "", "project_url": "https://pypi.org/project/waves-gateway/", "project_urls": {"Homepage": "https://github.com/jansenmarc/WavesGatewayFramework"}, "release_url": "https://pypi.org/project/waves-gateway/1.0.5/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A framework to connect other cryptocurrencies to the Waves-Platform.", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"waves-gateway-framework\">\n<h2>Waves-Gateway-Framework</h2>\n<p>A framework to connect other cryptocurrencies to the Waves platform.\nRequires Python 3.5 or newer.</p>\n<p>For detailed usage instructions please refer to the source code documentation that may be exported\nby using the commands described below.\nThe framework exports a class Gateway. This class has to instantiated.\nOnce done, the Gateway can be started by calling the run method on the resulting instance.</p>\n<p>The constructor of the Gateway class requires instances of certain interfaces.\nThose interfaces define the required functionality that a concrete Gateway implementation has to provide.\nYou may also take a look at an example implementation that\nrealizes a Waves-Gateway for Litecoin: <a href=\"https://github.com/jansenmarc/WavesGatewayLTCExample\" rel=\"nofollow\">https://github.com/jansenmarc/WavesGatewayLTCExample</a>.</p>\n<div id=\"how-to-install\">\n<h3>How to install</h3>\n<pre>pip install waves-gateway\n</pre>\n</div>\n<div id=\"required-packages-for-development\">\n<h3>Required packages for development</h3>\n<pre>python3.5 -m pip install coverage mypy pylint Sphinx\n</pre>\n</div>\n<div id=\"lint\">\n<h3>Lint</h3>\n<p>The <a href=\"https://www.pylint.org\" rel=\"nofollow\">PyLint</a> package is required for linting.\nInstall it like this: <tt>pip install pylint</tt>.</p>\n<pre>python3.5 setup.py lint\n</pre>\n</div>\n<div id=\"mypy\">\n<h3>MyPy</h3>\n<p>The <a href=\"https://github.com/python/mypy\" rel=\"nofollow\">MyPy</a> package performs static\ntype analysis to prevent errors.</p>\n<pre>python3.5 setup.py mypy\n</pre>\n</div>\n<div id=\"unittest\">\n<h3>Unittest</h3>\n<pre>python3.5 setup.py <span class=\"nb\">test</span>\n</pre>\n<p>The convention is to write Unittests for every class in a separate file\nstarting with <tt>test_</tt> This is the default prefix of the python\nUnittest module.</p>\n</div>\n<div id=\"coverage\">\n<h3>Coverage</h3>\n<pre>python3.5 setup.py coverage\n</pre>\n</div>\n</div>\n<div id=\"documentation-generation\">\n<h2>Documentation Generation</h2>\n<p>Creates a folder docs with the generated HTML documentation.</p>\n<pre>pip install . -U\npython3.5 setup.py docs\n</pre>\n<div id=\"doctest\">\n<h3>Doctest</h3>\n<p>Doctests are not used in this project. Write Unittests instead.</p>\n</div>\n<div id=\"yapf\">\n<h3>yapf</h3>\n<p>This project uses yapf (<a href=\"https://github.com/google/yapf\" rel=\"nofollow\">https://github.com/google/yapf</a>) as a formatting\ntool So, please format your code before commiting by running this:</p>\n<pre>python3.5 -m yapf -r waves_gateway --style pep8 --style <span class=\"o\">{</span>COLUMN_LIMIT:120<span class=\"o\">}</span> -i\n</pre>\n<p>The pipeline will fail if the code is not properly formatted.</p>\n</div>\n<div id=\"distribution\">\n<h3>Distribution</h3>\n<p>First, run <tt>npm run build:prod</tt> to update the assets.\nAfter that, run <tt>python3.5 setup.py sdist</tt> to create an installable tar archive.</p>\n<p>Publish to test.pypi.org:</p>\n<pre>twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n</pre>\n<p>Regular publish:</p>\n<pre>twine upload dist/*\n</pre>\n</div>\n<div id=\"recommendations\">\n<h3>Recommendations</h3>\n<ul>\n<li>Use Python 3.5 for development.</li>\n<li>PyCharm users should enable Gevent compatible debugging:\n<a href=\"https://blog.jetbrains.com/pycharm/2012/08/gevent-debug-support/\" rel=\"nofollow\">https://blog.jetbrains.com/pycharm/2012/08/gevent-debug-support/</a>.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5661559, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a3d2d5ab985b8f3780d5523a326068d4", "sha256": "a656b9a88b9a626b5722441b2e1df3dc02b9ea5abdcfac4dc6850432753ac4b3"}, "downloads": -1, "filename": "waves_gateway-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a3d2d5ab985b8f3780d5523a326068d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 273792, "upload_time": "2018-03-08T13:20:20", "upload_time_iso_8601": "2018-03-08T13:20:20.506307Z", "url": "https://files.pythonhosted.org/packages/39/54/514962d1ab83ba2401ae1194ffd4f9498a55f12c843b5b358388ee7be22f/waves_gateway-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ae95451207ced565e71855f7f9e984be", "sha256": "f36d6ec609bb0bf493ae07acd642f7dcd06ed62e6d9595e094753070fe7da3eb"}, "downloads": -1, "filename": "waves_gateway-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ae95451207ced565e71855f7f9e984be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 274004, "upload_time": "2018-04-15T15:50:08", "upload_time_iso_8601": "2018-04-15T15:50:08.708660Z", "url": "https://files.pythonhosted.org/packages/84/ce/c3afc300fab88ebac85159170d393e69fdc72f2ac25a08144a8f8146e02c/waves_gateway-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5a1d8f4bf81764ec124d5a115eba969c", "sha256": "0f16033704b9a2cae023403ef6d68a8688bb46c311bcdfcf06a73c066f5d307b"}, "downloads": -1, "filename": "waves_gateway-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5a1d8f4bf81764ec124d5a115eba969c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 301966, "upload_time": "2018-04-18T19:52:36", "upload_time_iso_8601": "2018-04-18T19:52:36.184649Z", "url": "https://files.pythonhosted.org/packages/4b/52/949844b7e6833982d87023c1af5ccb52a3eadba6e31fe5a8c189e3819c81/waves_gateway-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "92a55a37340fd160ac56834f2e8ef3fd", "sha256": "b2212950cc9cb3a7b635f05a8ff0ccb5ab0b215094685e8e6aea0632fadf62f4"}, "downloads": -1, "filename": "waves_gateway-1.0.3.tar.gz", "has_sig": false, "md5_digest": "92a55a37340fd160ac56834f2e8ef3fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 302032, "upload_time": "2018-04-22T15:40:06", "upload_time_iso_8601": "2018-04-22T15:40:06.629299Z", "url": "https://files.pythonhosted.org/packages/01/fa/fc298a3b0410c0a6b03372ec0e577a298ca48c42da88714abf640e91ff3d/waves_gateway-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "3ecc75a44c01e60e9a88e76b2e266bd7", "sha256": "21f937806bfb8bf2d734273e4f124c1e1d703bc28a3a282a2fd5b0bfc0f166b5"}, "downloads": -1, "filename": "waves_gateway-1.0.4.tar.gz", "has_sig": false, "md5_digest": "3ecc75a44c01e60e9a88e76b2e266bd7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 302839, "upload_time": "2019-03-30T15:17:47", "upload_time_iso_8601": "2019-03-30T15:17:47.456906Z", "url": "https://files.pythonhosted.org/packages/7e/cf/1c075985425ff3ca93e60d00f91abf3b79d7c9ad2363630d2ac8426a9bb7/waves_gateway-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "2bf504b5663cf989ebeba4505c2a5423", "sha256": "3bd23bb8d70d49a707c88d4bd170d47b1bda9befd1aa0e7c8efbd520a82a8421"}, "downloads": -1, "filename": "waves_gateway-1.0.5.tar.gz", "has_sig": false, "md5_digest": "2bf504b5663cf989ebeba4505c2a5423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 301980, "upload_time": "2019-08-11T09:15:07", "upload_time_iso_8601": "2019-08-11T09:15:07.030799Z", "url": "https://files.pythonhosted.org/packages/d0/47/5360ab6a53943968c3567472de1bbad66d911bf717e9603735a14a5769fc/waves_gateway-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bf504b5663cf989ebeba4505c2a5423", "sha256": "3bd23bb8d70d49a707c88d4bd170d47b1bda9befd1aa0e7c8efbd520a82a8421"}, "downloads": -1, "filename": "waves_gateway-1.0.5.tar.gz", "has_sig": false, "md5_digest": "2bf504b5663cf989ebeba4505c2a5423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 301980, "upload_time": "2019-08-11T09:15:07", "upload_time_iso_8601": "2019-08-11T09:15:07.030799Z", "url": "https://files.pythonhosted.org/packages/d0/47/5360ab6a53943968c3567472de1bbad66d911bf717e9603735a14a5769fc/waves_gateway-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:55 2020"}