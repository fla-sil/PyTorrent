{"info": {"author": "Robby Bergers", "author_email": "bergersr@my.easternct.edu", "bugtrack_url": null, "classifiers": [], "description": "Libpyn\n======\n> A third-party API for **libsyn**.\n___\n\nInstallation\n------------\n\nIn order to install _libpyn_, run this command on the terminal\n\n``` console\nfoo@bar:~$ pip install libpyn\n```\n\n___\n\nFeatures\n--------\n\n* ### The Podcast class <a name=\"podcast-class\"></a>\n\nThe _Podcast class_ is the main feature of this package.\n\n``` python\n# Import statement\nfrom libpyn.podcast import Podcast\n```\n\nIn order to create an instance of the Podcast class, pass a link to a _libsyn_ channel in with the instance declaration.\n\n``` python\nchannel = 'https://therabbithole.libsyn.com/'\nexample = Podcast(channel)\n```\n\nOnce initialized, the Podcast class contains useful information about the podcast.\n\n``` python\nexample.name = # Name of the podcast channel\nself.mp3list = # List of episodes, each episode saved as a dictionary\nself.htmllink = # Link to the podcast's website  \n```\n\nEach dictionary in _self.mp3list_ contains these key/value pairs:\n\n``` python\npodcast = {}    # Dictionary for storing podcast info\npodcast['title'] = # Name of episode\npodcast['date'] = # Publish date\npodcast['mp3'] = # Link to mp3 file\npodcast['image'] = # Channel logo\n```\n\n* ### Downloading podcasts\n\nIn order to download the mp3 files of a podcast channel, use the **download()** function.\n\n``` python\n# This will download the mp3 files in a directory named after the podcast channel\n# in the Downloads directory\nexample.download()\n```\n\nA specific _path_ can be specified, the name of the directory (_foldername_) in which the mp3 files will be stored can also be specified. If the foldername is not specified, it will be the name of the channel. (Spaces are replaced with underscores.)\n\n``` python\npath = 'path/to/store/mp3'\ndirectory = '/files'\nexample.download(path=path, foldername=directory)\n```\n\n* ### iframes\n\nIn order to get iframes of the latest episodes to embed on a webpage, use the **iframes()** function.\nIt returns a dictionary where the key is the title of the episode (if one is present) and the value is the iframe (if iframes are present).\n\n``` python\niframesList = example.iframes()\n```\n\n___\n\nChangelog\n---------\n\n### == v1.0.3 ==\n* _iframes function only runs if iframes are present_\n* _iframes function generates titles when there is no title given_\n\n### == v1.0.2 ==\n* _iframes now returns a dictionary. (key = Title, value = iframe)_\n\n### == v1.0.1 ==\n* _Fix bugs involving download function_\n* _Remove HTML tags from podcast.name attribute_\n* _Fix logger, log always in same directory as podcast.py_\n\n### == v1.0.0 ==\n* _Initial release_", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RobbyB97/libpyn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "libpyn", "package_url": "https://pypi.org/project/libpyn/", "platform": "", "project_url": "https://pypi.org/project/libpyn/", "project_urls": {"Homepage": "https://github.com/RobbyB97/libpyn"}, "release_url": "https://pypi.org/project/libpyn/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Libsyn podcast API", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Libpyn<br>======<br>&gt; A third-party API for **libsyn**.<br>___<br><br>Installation<br>------------<br><br>In order to install _libpyn_, run this command on the terminal<br><br>``` console<br>foo@bar:~$ pip install libpyn<br>```<br><br>___<br><br>Features<br>--------<br><br>* ### The Podcast class &lt;a name=\"podcast-class\"&gt;&lt;/a&gt;<br><br>The _Podcast class_ is the main feature of this package.<br><br>``` python<br># Import statement<br>from libpyn.podcast import Podcast<br>```<br><br>In order to create an instance of the Podcast class, pass a link to a _libsyn_ channel in with the instance declaration.<br><br>``` python<br>channel = 'https://therabbithole.libsyn.com/'<br>example = Podcast(channel)<br>```<br><br>Once initialized, the Podcast class contains useful information about the podcast.<br><br>``` python<br>example.name = # Name of the podcast channel<br>self.mp3list = # List of episodes, each episode saved as a dictionary<br>self.htmllink = # Link to the podcast's website  <br>```<br><br>Each dictionary in _self.mp3list_ contains these key/value pairs:<br><br>``` python<br>podcast = {}    # Dictionary for storing podcast info<br>podcast['title'] = # Name of episode<br>podcast['date'] = # Publish date<br>podcast['mp3'] = # Link to mp3 file<br>podcast['image'] = # Channel logo<br>```<br><br>* ### Downloading podcasts<br><br>In order to download the mp3 files of a podcast channel, use the **download()** function.<br><br>``` python<br># This will download the mp3 files in a directory named after the podcast channel<br># in the Downloads directory<br>example.download()<br>```<br><br>A specific _path_ can be specified, the name of the directory (_foldername_) in which the mp3 files will be stored can also be specified. If the foldername is not specified, it will be the name of the channel. (Spaces are replaced with underscores.)<br><br>``` python<br>path = 'path/to/store/mp3'<br>directory = '/files'<br>example.download(path=path, foldername=directory)<br>```<br><br>* ### iframes<br><br>In order to get iframes of the latest episodes to embed on a webpage, use the **iframes()** function.<br>It returns a dictionary where the key is the title of the episode (if one is present) and the value is the iframe (if iframes are present).<br><br>``` python<br>iframesList = example.iframes()<br>```<br><br>___<br><br>Changelog<br>---------<br><br>### == v1.0.3 ==<br>* _iframes function only runs if iframes are present_<br>* _iframes function generates titles when there is no title given_<br><br>### == v1.0.2 ==<br>* _iframes now returns a dictionary. (key = Title, value = iframe)_<br><br>### == v1.0.1 ==<br>* _Fix bugs involving download function_<br>* _Remove HTML tags from podcast.name attribute_<br>* _Fix logger, log always in same directory as podcast.py_<br><br>### == v1.0.0 ==<br>* _Initial release_\n          </div>"}, "last_serial": 5093756, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2078ca6aeebef92d6c79274e331e55ad", "sha256": "12fdd589aa76f4d58dffc8f26fbb495dca20efbf0a8e8e7ebec792c8eff288b5"}, "downloads": -1, "filename": "libpyn-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2078ca6aeebef92d6c79274e331e55ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3586, "upload_time": "2019-03-25T23:38:45", "upload_time_iso_8601": "2019-03-25T23:38:45.318310Z", "url": "https://files.pythonhosted.org/packages/18/ff/b2d53a853aa64d39a95e46d61fc80426cf61b9a3a740376e1a055212c0db/libpyn-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5f5e7d9ba3663fc762b0d0c913b7b51d", "sha256": "b36042f419aa2559ab63357d2cbd9d2e7c09bf6f3574b4b6741a6e0c97cb6ab0"}, "downloads": -1, "filename": "libpyn-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5f5e7d9ba3663fc762b0d0c913b7b51d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3801, "upload_time": "2019-03-26T22:20:00", "upload_time_iso_8601": "2019-03-26T22:20:00.120906Z", "url": "https://files.pythonhosted.org/packages/cf/3b/a229ebdb96bb561e2b5243df15050a2187ec063449d59a0d262d300dde75/libpyn-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ddc465521d95ede6148f1bf126b33779", "sha256": "800169a7b866c8732f408532e8523fdbf04ed84fe4ae82260cd7f0f82db44572"}, "downloads": -1, "filename": "libpyn-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ddc465521d95ede6148f1bf126b33779", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3875, "upload_time": "2019-03-30T23:46:41", "upload_time_iso_8601": "2019-03-30T23:46:41.200393Z", "url": "https://files.pythonhosted.org/packages/d1/af/64aa4eb1cee535d124d8d6a9ae4d3073188e7eb07d1cf5cae8c00b2a6d57/libpyn-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "6a94be5fc07af0c27b7061fa9966fd5a", "sha256": "7cd3605ea8bbfe73e629c6c11d8cf918604d08dd2f0e212aec79fcd3f3f8d29c"}, "downloads": -1, "filename": "libpyn-1.0.3.tar.gz", "has_sig": false, "md5_digest": "6a94be5fc07af0c27b7061fa9966fd5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4228, "upload_time": "2019-04-04T00:49:24", "upload_time_iso_8601": "2019-04-04T00:49:24.446964Z", "url": "https://files.pythonhosted.org/packages/2b/ca/d38fc0e6dc87cedb61956504453587f6102c6e56a17ea3777042497da741/libpyn-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a94be5fc07af0c27b7061fa9966fd5a", "sha256": "7cd3605ea8bbfe73e629c6c11d8cf918604d08dd2f0e212aec79fcd3f3f8d29c"}, "downloads": -1, "filename": "libpyn-1.0.3.tar.gz", "has_sig": false, "md5_digest": "6a94be5fc07af0c27b7061fa9966fd5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4228, "upload_time": "2019-04-04T00:49:24", "upload_time_iso_8601": "2019-04-04T00:49:24.446964Z", "url": "https://files.pythonhosted.org/packages/2b/ca/d38fc0e6dc87cedb61956504453587f6102c6e56a17ea3777042497da741/libpyn-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:28 2020"}