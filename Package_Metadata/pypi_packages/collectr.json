{"info": {"author": "Cory Benfield", "author_email": "cory@lukasa.co.uk", "bugtrack_url": null, "classifiers": [], "description": "collectr: Keep your S3 static files up to date.\n===============================================\n\nMore and more, we find ourselves storing our static website files - CSS,\nJavascript, images and more - on `Amazon S3 <http://aws.amazon.com/s3/>`_. Some\nof us do it because we use services like `Heroku <http://www.heroku.com/>`_ and\ndon't want to force the static files through our web dynos. Others of us do it\nto avoid huge bandwidth costs associated with hosting these on our own servers.\nStill others do it to take advantage of the scale and distributed nature of S3.\n\nHowever, managing our S3 files can be a pain. Each time we change them we have\nto minify and reupload them. We also need to set all the metadata we want:\nthings like Cache-Control headers. This can be boring and error-prone. collectr\naims to help with that.\n\nUsing collectr\n--------------\n\ncollectr is a collection of functions built on top of the\n`boto <https://github.com/boto/boto>`_ library. This allows you to plug\ncollectr into any of your Python code however you see fit. For those who want a\n'just works' solution, however, collectr also comes with an example script that\nis perfect for using with any Django project.\n\nIf you want simple, you can use collectr like this::\n\n    import collectr\n    collectr.update('path/to/static/files', 'bucket-name')\n\ncollectr will scan the directory, minify anything that can be minified using\nwhatever tools you have on your system, and upload all your files to the\nspecified S3 bucket. Anything that already existed on S3 will have all of its\nmetadata persisted.\n\nOf course, you can have quite a bit more control than that.\n\n::\n\n    import collectr\n    statics = collectr.StaticDir('path/to/static/files')\n    statics.input_directory = 'path/to/other/dir'\n    statics.minifier = 'yuicompressor -o {out_name} {in_name}'\n    statics.force_update = True\n    statics.ignore = ['.*\\.jpg', '.*\\.json']\n    statics.metadata = {'Cache-Control': 'max-age=3600'}\n    statics.update('bucket-name')\n\nBefore you do anything, though, make sure you have your environment variables\nset up. You'll need AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY set to\nthe correct values.\n\nFeatures\n--------\n\n- Static file minification.\n- Ignore filters.\n- Multiple directory management.\n- Metadata management.\n\nInstallation\n------------\n\nTo install collectr::\n\n    $ pip install collectr\n\nIf you don't have ``pip`` and can't install it, you should complain to your\nsysadmin, and then do::\n\n    $ easy_install collectr\n\nContributing\n------------\n\ncollectr welcomes contributions, both bug fixes and new features. Any feature\nrequest should strongly consider the implications for the API. API clarity\nis valued above new features, so any feature that complicates the API must add\nsignificant value to the library to be accepted.\n\nIf you want to contribute, do the following:\n\n1. Check that your idea hasn't already been proposed. Check both open **and\n   closed** issues on GitHub.\n2. Fork the repository on GitHub and make your changes.\n3. Where possible, write a test that can reproduce the bug, or that will test\n   the new feature.\n4. Send a Pull Request. Don't forget to add yourself to the AUTHORS file.\n\n\nHistory\n-------\n\n0.0.5 (2013-03-07)\n++++++++++++++++++\n- More detailed metadata handling.\n- Only update if needed or forced.\n\n0.0.4 (2013-03-03)\n++++++++++++++++++\n- Fix key names including the whole path.\n- Add groundwork for defaulting the minifier dict.\n- The update() helper method now takes an optional input directory.\n- Add an example collect_static script.\n- Sets the S3 ACL to allow public read access.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.lukasa.co.uk/", "keywords": null, "license": "Copyright (C) 2013 Cory Benfield\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "collectr", "package_url": "https://pypi.org/project/collectr/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collectr/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.lukasa.co.uk/"}, "release_url": "https://pypi.org/project/collectr/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "Static file management for everyone.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>More and more, we find ourselves storing our static website files - CSS,\nJavascript, images and more - on <a href=\"http://aws.amazon.com/s3/\" rel=\"nofollow\">Amazon S3</a>. Some\nof us do it because we use services like <a href=\"http://www.heroku.com/\" rel=\"nofollow\">Heroku</a> and\ndon\u2019t want to force the static files through our web dynos. Others of us do it\nto avoid huge bandwidth costs associated with hosting these on our own servers.\nStill others do it to take advantage of the scale and distributed nature of S3.</p>\n<p>However, managing our S3 files can be a pain. Each time we change them we have\nto minify and reupload them. We also need to set all the metadata we want:\nthings like Cache-Control headers. This can be boring and error-prone. collectr\naims to help with that.</p>\n<div id=\"using-collectr\">\n<h2>Using collectr</h2>\n<p>collectr is a collection of functions built on top of the\n<a href=\"https://github.com/boto/boto\" rel=\"nofollow\">boto</a> library. This allows you to plug\ncollectr into any of your Python code however you see fit. For those who want a\n\u2018just works\u2019 solution, however, collectr also comes with an example script that\nis perfect for using with any Django project.</p>\n<p>If you want simple, you can use collectr like this:</p>\n<pre>import collectr\ncollectr.update('path/to/static/files', 'bucket-name')\n</pre>\n<p>collectr will scan the directory, minify anything that can be minified using\nwhatever tools you have on your system, and upload all your files to the\nspecified S3 bucket. Anything that already existed on S3 will have all of its\nmetadata persisted.</p>\n<p>Of course, you can have quite a bit more control than that.</p>\n<pre>import collectr\nstatics = collectr.StaticDir('path/to/static/files')\nstatics.input_directory = 'path/to/other/dir'\nstatics.minifier = 'yuicompressor -o {out_name} {in_name}'\nstatics.force_update = True\nstatics.ignore = ['.*\\.jpg', '.*\\.json']\nstatics.metadata = {'Cache-Control': 'max-age=3600'}\nstatics.update('bucket-name')\n</pre>\n<p>Before you do anything, though, make sure you have your environment variables\nset up. You\u2019ll need AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY set to\nthe correct values.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Static file minification.</li>\n<li>Ignore filters.</li>\n<li>Multiple directory management.</li>\n<li>Metadata management.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install collectr:</p>\n<pre>$ pip install collectr\n</pre>\n<p>If you don\u2019t have <tt>pip</tt> and can\u2019t install it, you should complain to your\nsysadmin, and then do:</p>\n<pre>$ easy_install collectr\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>collectr welcomes contributions, both bug fixes and new features. Any feature\nrequest should strongly consider the implications for the API. API clarity\nis valued above new features, so any feature that complicates the API must add\nsignificant value to the library to be accepted.</p>\n<p>If you want to contribute, do the following:</p>\n<ol>\n<li>Check that your idea hasn\u2019t already been proposed. Check both open <strong>and\nclosed</strong> issues on GitHub.</li>\n<li>Fork the repository on GitHub and make your changes.</li>\n<li>Where possible, write a test that can reproduce the bug, or that will test\nthe new feature.</li>\n<li>Send a Pull Request. Don\u2019t forget to add yourself to the AUTHORS file.</li>\n</ol>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.0.5 (2013-03-07)</h3>\n<ul>\n<li>More detailed metadata handling.</li>\n<li>Only update if needed or forced.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.0.4 (2013-03-03)</h3>\n<ul>\n<li>Fix key names including the whole path.</li>\n<li>Add groundwork for defaulting the minifier dict.</li>\n<li>The update() helper method now takes an optional input directory.</li>\n<li>Add an example collect_static script.</li>\n<li>Sets the S3 ACL to allow public read access.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 788297, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6204cd3e29aec4e883f3738215ca7c5c", "sha256": "9c22f217fa3fff6650ff8237d6ae00647904cd63bba4dc56bf1a01c12a6b20ea"}, "downloads": -1, "filename": "collectr-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6204cd3e29aec4e883f3738215ca7c5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6411, "upload_time": "2013-03-03T13:05:49", "upload_time_iso_8601": "2013-03-03T13:05:49.224890Z", "url": "https://files.pythonhosted.org/packages/64/12/2e51b39ef81ac2bed38ffd53f43e1d4cfe6aa1a1de359240db6618c5af27/collectr-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e72d3225bd7ae802cbf67dcd6534824c", "sha256": "8231294cdb507bb856b497ae53df8f8ef01cf977be55a5c1f36548fdd8248d15"}, "downloads": -1, "filename": "collectr-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e72d3225bd7ae802cbf67dcd6534824c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6501, "upload_time": "2013-03-03T13:20:32", "upload_time_iso_8601": "2013-03-03T13:20:32.051479Z", "url": "https://files.pythonhosted.org/packages/06/f0/db1acefcd84440db922fdd3820937d081feb6c37fe7d27d56d5562f3350b/collectr-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "43b610859e1ca603f601339be89beba0", "sha256": "d7cce394d3bbd006a61bb9b660f79f59fa7301b9bf0318d31cee76b11120ba90"}, "downloads": -1, "filename": "collectr-0.0.3.tar.gz", "has_sig": false, "md5_digest": "43b610859e1ca603f601339be89beba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6891, "upload_time": "2013-03-03T13:24:00", "upload_time_iso_8601": "2013-03-03T13:24:00.588330Z", "url": "https://files.pythonhosted.org/packages/eb/b5/3e8f20c461e7c414558619d507707b44913d3c48d863910970ffb5c199c0/collectr-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a81ca61fa090bcc251b2bb2f0111f63f", "sha256": "e01e76a8472543aa61dbfc36d1088178065cfc17b12cc12e9f674ad9c80870a7"}, "downloads": -1, "filename": "collectr-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a81ca61fa090bcc251b2bb2f0111f63f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7396, "upload_time": "2013-03-03T16:56:07", "upload_time_iso_8601": "2013-03-03T16:56:07.382069Z", "url": "https://files.pythonhosted.org/packages/ce/3c/612848e8464044a6cd5f018635a46722717cc8377725d53312c74faab5c5/collectr-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f88d5167392577040c9f9770a45317f1", "sha256": "98c1fedde6c56b4d46472cd90fa569f8139951edf52be5a45e7349a0b570d350"}, "downloads": -1, "filename": "collectr-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f88d5167392577040c9f9770a45317f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8213, "upload_time": "2013-03-07T21:28:11", "upload_time_iso_8601": "2013-03-07T21:28:11.119513Z", "url": "https://files.pythonhosted.org/packages/25/15/4e6624402fd0e9d0a4e27afdffbae4cd3c53db0ffb626ae96ae85c0f064f/collectr-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f88d5167392577040c9f9770a45317f1", "sha256": "98c1fedde6c56b4d46472cd90fa569f8139951edf52be5a45e7349a0b570d350"}, "downloads": -1, "filename": "collectr-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f88d5167392577040c9f9770a45317f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8213, "upload_time": "2013-03-07T21:28:11", "upload_time_iso_8601": "2013-03-07T21:28:11.119513Z", "url": "https://files.pythonhosted.org/packages/25/15/4e6624402fd0e9d0a4e27afdffbae4cd3c53db0ffb626ae96ae85c0f064f/collectr-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:40 2020"}