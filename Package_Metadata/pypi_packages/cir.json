{"info": {"author": "Bill K.", "author_email": "bluesky42624@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# What is this?\n\nIn Python, when you're trying to deal with multiple nested directories, there's one problem that can make your code harder to understand: The Concat Hell.\n\nFor example, if I have my config files and folders setup like this:\n```\napp\n\u251c\u2500\u2500 app.log\n\u251c\u2500\u2500 config.json\n\u251c\u2500\u2500 icons\n\u2502   \u251c\u2500\u2500 add.ico\n\u2502   \u251c\u2500\u2500 divide.ico\n\u2502   \u251c\u2500\u2500 multiply.ico\n\u2502   \u2514\u2500\u2500 subtract.ico\n\u2514\u2500\u2500 logo\n    \u251c\u2500\u2500 128.ico\n    \u251c\u2500\u2500 32.ico\n    \u2514\u2500\u2500 64.ico\n```\n\nTo load all of them using **Just Python**:\n```python\n### Just Python\ndef load_resources():\n    ROOT = os.path.abspath(os.path.dirname(__file__))\n    config = load_config(ROOT + \"/config.json\")\n    logos = {\n        32: load_image(ROOT + \"/logo/32.ico\"),\n        64: load_image(ROOT + \"/logo/64.ico\"),\n        128: load_image(ROOT + \"/logo/128.ico\")\n    }\n    add_icon = load_icon(ROOT + \"/icons/add.ico\")\n    divide_icon = load_icon(ROOT + \"/icons/divide.ico\")\n    multiply_icon = load_icon(ROOT + \"/icons/multiply.ico\")\n    subtract_icon = load_icon(ROOT + \"/icons/subtract.ico\")\n    logger.setPath(ROOT + \"/app.log\")\n```\n\nAs you can see, there's ***a lot*** of string concatenations! Not only that, if we forget what `ROOT` represents, we might get buggy code! \n\nTo load all of them using **Circumstance**:\n```python\n### Using Circumstance\ndef load_resources():\n    with cir.me() as root_:\n        config = load_config(root_(\"config.json\"))\n        with root_.cd(\"logo\") as logos_:\n            logos = {\n                32: load_image(logos_(\"32.ico\")),\n                64: load_image(logos_(\"64.ico\")),\n                128: load_image(logos_(\"128.ico\"))\n            }\n        with root_.cd(\"icons\") as icons_:\n            add_icon = load_icon(icons_(\"add.ico\"))\n            divide_icon = load_icon(icons_(\"divide.ico\"))\n            multiply_icon = load_icon(icons_(\"multiply.ico\"))\n            subtract_icon = load_icon(icons_(\"subtract.ico\"))\n        logger.setPath(root_(\"app.log\"))\n```\n\nWe have eliminated any string concatenations.\n\n# Docs\n\n[Documentation](https://bill13579.github.io/circumstance/cir/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bill13579/circumstance", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cir", "package_url": "https://pypi.org/project/cir/", "platform": "", "project_url": "https://pypi.org/project/cir/", "project_urls": {"Homepage": "https://github.com/Bill13579/circumstance"}, "release_url": "https://pypi.org/project/cir/0.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Manage nested file path in Python easily", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>What is this?</h1>\n<p>In Python, when you're trying to deal with multiple nested directories, there's one problem that can make your code harder to understand: The Concat Hell.</p>\n<p>For example, if I have my config files and folders setup like this:</p>\n<pre><code>app\n\u251c\u2500\u2500 app.log\n\u251c\u2500\u2500 config.json\n\u251c\u2500\u2500 icons\n\u2502   \u251c\u2500\u2500 add.ico\n\u2502   \u251c\u2500\u2500 divide.ico\n\u2502   \u251c\u2500\u2500 multiply.ico\n\u2502   \u2514\u2500\u2500 subtract.ico\n\u2514\u2500\u2500 logo\n    \u251c\u2500\u2500 128.ico\n    \u251c\u2500\u2500 32.ico\n    \u2514\u2500\u2500 64.ico\n</code></pre>\n<p>To load all of them using <strong>Just Python</strong>:</p>\n<pre><span class=\"c1\">### Just Python</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_resources</span><span class=\"p\">():</span>\n    <span class=\"n\">ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/config.json\"</span><span class=\"p\">)</span>\n    <span class=\"n\">logos</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"mi\">32</span><span class=\"p\">:</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/logo/32.ico\"</span><span class=\"p\">),</span>\n        <span class=\"mi\">64</span><span class=\"p\">:</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/logo/64.ico\"</span><span class=\"p\">),</span>\n        <span class=\"mi\">128</span><span class=\"p\">:</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/logo/128.ico\"</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">add_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/icons/add.ico\"</span><span class=\"p\">)</span>\n    <span class=\"n\">divide_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/icons/divide.ico\"</span><span class=\"p\">)</span>\n    <span class=\"n\">multiply_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/icons/multiply.ico\"</span><span class=\"p\">)</span>\n    <span class=\"n\">subtract_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/icons/subtract.ico\"</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setPath</span><span class=\"p\">(</span><span class=\"n\">ROOT</span> <span class=\"o\">+</span> <span class=\"s2\">\"/app.log\"</span><span class=\"p\">)</span>\n</pre>\n<p>As you can see, there's <em><strong>a lot</strong></em> of string concatenations! Not only that, if we forget what <code>ROOT</code> represents, we might get buggy code!</p>\n<p>To load all of them using <strong>Circumstance</strong>:</p>\n<pre><span class=\"c1\">### Using Circumstance</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_resources</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">me</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">root_</span><span class=\"p\">:</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">root_</span><span class=\"p\">(</span><span class=\"s2\">\"config.json\"</span><span class=\"p\">))</span>\n        <span class=\"k\">with</span> <span class=\"n\">root_</span><span class=\"o\">.</span><span class=\"n\">cd</span><span class=\"p\">(</span><span class=\"s2\">\"logo\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">logos_</span><span class=\"p\">:</span>\n            <span class=\"n\">logos</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"mi\">32</span><span class=\"p\">:</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"n\">logos_</span><span class=\"p\">(</span><span class=\"s2\">\"32.ico\"</span><span class=\"p\">)),</span>\n                <span class=\"mi\">64</span><span class=\"p\">:</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"n\">logos_</span><span class=\"p\">(</span><span class=\"s2\">\"64.ico\"</span><span class=\"p\">)),</span>\n                <span class=\"mi\">128</span><span class=\"p\">:</span> <span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"n\">logos_</span><span class=\"p\">(</span><span class=\"s2\">\"128.ico\"</span><span class=\"p\">))</span>\n            <span class=\"p\">}</span>\n        <span class=\"k\">with</span> <span class=\"n\">root_</span><span class=\"o\">.</span><span class=\"n\">cd</span><span class=\"p\">(</span><span class=\"s2\">\"icons\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">icons_</span><span class=\"p\">:</span>\n            <span class=\"n\">add_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">icons_</span><span class=\"p\">(</span><span class=\"s2\">\"add.ico\"</span><span class=\"p\">))</span>\n            <span class=\"n\">divide_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">icons_</span><span class=\"p\">(</span><span class=\"s2\">\"divide.ico\"</span><span class=\"p\">))</span>\n            <span class=\"n\">multiply_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">icons_</span><span class=\"p\">(</span><span class=\"s2\">\"multiply.ico\"</span><span class=\"p\">))</span>\n            <span class=\"n\">subtract_icon</span> <span class=\"o\">=</span> <span class=\"n\">load_icon</span><span class=\"p\">(</span><span class=\"n\">icons_</span><span class=\"p\">(</span><span class=\"s2\">\"subtract.ico\"</span><span class=\"p\">))</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setPath</span><span class=\"p\">(</span><span class=\"n\">root_</span><span class=\"p\">(</span><span class=\"s2\">\"app.log\"</span><span class=\"p\">))</span>\n</pre>\n<p>We have eliminated any string concatenations.</p>\n<h1>Docs</h1>\n<p><a href=\"https://bill13579.github.io/circumstance/cir/\" rel=\"nofollow\">Documentation</a></p>\n\n          </div>"}, "last_serial": 6940789, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e66c7fa9cdb0f6dc4803a2d2ad394a94", "sha256": "4f4d89fa74d7b4c49396f3332e95447edd543addf19fbc95b5fba67c02fca428"}, "downloads": -1, "filename": "cir-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e66c7fa9cdb0f6dc4803a2d2ad394a94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4600, "upload_time": "2020-04-03T04:20:23", "upload_time_iso_8601": "2020-04-03T04:20:23.779668Z", "url": "https://files.pythonhosted.org/packages/4b/6d/af39f9232712e6c4a231aff9a155df4a27c3a8d24c9244e1ab322ab30ddb/cir-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66ecee0afd10dd008649e293f5deffc1", "sha256": "ed01a6e749f50adcdc2080bddf6c9077c4d51711c34c5db0a9716518f9713c9e"}, "downloads": -1, "filename": "cir-0.0.1.tar.gz", "has_sig": false, "md5_digest": "66ecee0afd10dd008649e293f5deffc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3044, "upload_time": "2020-04-03T04:20:27", "upload_time_iso_8601": "2020-04-03T04:20:27.077724Z", "url": "https://files.pythonhosted.org/packages/ba/9c/9cdf49d71269ca59f4795068975eb522499dec544ab9efde949aa066830d/cir-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e66c7fa9cdb0f6dc4803a2d2ad394a94", "sha256": "4f4d89fa74d7b4c49396f3332e95447edd543addf19fbc95b5fba67c02fca428"}, "downloads": -1, "filename": "cir-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e66c7fa9cdb0f6dc4803a2d2ad394a94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4600, "upload_time": "2020-04-03T04:20:23", "upload_time_iso_8601": "2020-04-03T04:20:23.779668Z", "url": "https://files.pythonhosted.org/packages/4b/6d/af39f9232712e6c4a231aff9a155df4a27c3a8d24c9244e1ab322ab30ddb/cir-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66ecee0afd10dd008649e293f5deffc1", "sha256": "ed01a6e749f50adcdc2080bddf6c9077c4d51711c34c5db0a9716518f9713c9e"}, "downloads": -1, "filename": "cir-0.0.1.tar.gz", "has_sig": false, "md5_digest": "66ecee0afd10dd008649e293f5deffc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3044, "upload_time": "2020-04-03T04:20:27", "upload_time_iso_8601": "2020-04-03T04:20:27.077724Z", "url": "https://files.pythonhosted.org/packages/ba/9c/9cdf49d71269ca59f4795068975eb522499dec544ab9efde949aa066830d/cir-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:21 2020"}