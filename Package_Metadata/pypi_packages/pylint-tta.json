{"info": {"author": "Kendrick Tan", "author_email": "kendrick@wearepopgun.com", "bugtrack_url": null, "classifiers": [], "description": "# pylint-tta\nPylint plugin to check for *PyTorch* tensor type annotations\n\nTested on Python 3.6+\n\n---\n\n| Branch | Status |\n| --- | --- |\n| Master | ![](https://travis-ci.org/Popgun-Labs/pylint_tta.svg?branch=master) |\n\n---\n\n\n# Quickstart\n```bash\npip install pylint pylint_tta\n\n# Use pylint defaults with the plugin\npylint --load-plugins=pylint_tta <directory>\n\n# Only use the plugin\npylint --load-plugins=pylint_tta --disable=all --enable=C9001,C9002,C9003,C9004,C9005,C9006 <directory>\n```\n\n# What it checks for\n\nGiven file `example1.py`,\n```python\nimport astroid\nimport torch\n\n\ndef fail_func():\n    a = torch.randn(5, 5, 5)\n\n    a.unsqueeze_(1)\n    b_fail = a.view(5, 25, -1)\n    c_fail = a[:, : 1]\n    c_fail: str = a[:, : 1]\n    d_fail: str = a.unsqueeze(1)\n    e_fail = a.unsqueeze_(1)\n\n    return None\n\n\ndef pass_func():\n    a = torch.randn(5, 5, 5)\n\n    c_pass: ('w', 'h', 'b') = a[:, :, 1]\n    d_pass: ('width', 'batch', 'height') = a.unsqueeze(1)\n\n    return None\n```\n\npylint-tta will yield:\n\n```\n************* Module example1\nexample1.py:8:4: C9005: In-place operation detected (disallow-inplace-tensor-operations)\nexample1.py:9:4: C9001: Missing type annotations on tensor operation (missing-tensor-annotations)\nexample1.py:10:4: C9003: Missing type annotations on slicing (missing-slicing-annotations)\nexample1.py:11:4: C9004: Invalid type annotations on slicing (invalid-slicing-annotations)\nexample1.py:12:4: C9002: Non tuple type annotations on tensor operation (invalid-tensor-annotations)\nexample1.py:13:4: C9006: Assignment on in-place operation detected (assignment-on-inplace-operations)\n```\n\n# Codes\n| Code  | Name |\n| ----- |:-------------|\n| C9001 | missing-tensor-annotations |\n| C9002 | invalid-tensor-annotations |\n| C9003 | missing-slicing-annotations |\n| C9004 | invalid-slicing-annotations |\n| C9005 | disallow-inplace-tensor-operations |\n| C9006 | assignment-on-inplace-operations |\n\n\n# Dev\n## Run Example\n```\nexport PYTHONPATH=`pwd`; pylint --load-plugins=pylint_tta --disable=all --enable=C9001,C9002,C9003,C9004 example1.py\n```\n\n## Testing\n```\npytest -s\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Popgun-Labs/pylint-tta", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylint-tta", "package_url": "https://pypi.org/project/pylint-tta/", "platform": "", "project_url": "https://pypi.org/project/pylint-tta/", "project_urls": {"Homepage": "https://github.com/Popgun-Labs/pylint-tta"}, "release_url": "https://pypi.org/project/pylint-tta/0.0.4a0/", "requires_dist": null, "requires_python": "", "summary": "Linter for PyTorch Tensor operations", "version": "0.0.4a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pylint-tta</h1>\n<p>Pylint plugin to check for <em>PyTorch</em> tensor type annotations</p>\n<p>Tested on Python 3.6+</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Branch</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Master</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2d15eb15a00955500b36e9eb1394cac666eade8/68747470733a2f2f7472617669732d63692e6f72672f506f7067756e2d4c6162732f70796c696e745f7474612e7376673f6272616e63683d6d6173746572\"></td>\n</tr></tbody></table>\n<hr>\n<h1>Quickstart</h1>\n<pre>pip install pylint pylint_tta\n\n<span class=\"c1\"># Use pylint defaults with the plugin</span>\npylint --load-plugins<span class=\"o\">=</span>pylint_tta &lt;directory&gt;\n\n<span class=\"c1\"># Only use the plugin</span>\npylint --load-plugins<span class=\"o\">=</span>pylint_tta --disable<span class=\"o\">=</span>all --enable<span class=\"o\">=</span>C9001,C9002,C9003,C9004,C9005,C9006 &lt;directory&gt;\n</pre>\n<h1>What it checks for</h1>\n<p>Given file <code>example1.py</code>,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">astroid</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fail_func</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">unsqueeze_</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">b_fail</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">c_fail</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">c_fail</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">d_fail</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">e_fail</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">unsqueeze_</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">pass_func</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"n\">c_pass</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"s1\">'h'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">d_pass</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'width'</span><span class=\"p\">,</span> <span class=\"s1\">'batch'</span><span class=\"p\">,</span> <span class=\"s1\">'height'</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n</pre>\n<p>pylint-tta will yield:</p>\n<pre><code>************* Module example1\nexample1.py:8:4: C9005: In-place operation detected (disallow-inplace-tensor-operations)\nexample1.py:9:4: C9001: Missing type annotations on tensor operation (missing-tensor-annotations)\nexample1.py:10:4: C9003: Missing type annotations on slicing (missing-slicing-annotations)\nexample1.py:11:4: C9004: Invalid type annotations on slicing (invalid-slicing-annotations)\nexample1.py:12:4: C9002: Non tuple type annotations on tensor operation (invalid-tensor-annotations)\nexample1.py:13:4: C9006: Assignment on in-place operation detected (assignment-on-inplace-operations)\n</code></pre>\n<h1>Codes</h1>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th align=\"left\">Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C9001</td>\n<td align=\"left\">missing-tensor-annotations</td>\n</tr>\n<tr>\n<td>C9002</td>\n<td align=\"left\">invalid-tensor-annotations</td>\n</tr>\n<tr>\n<td>C9003</td>\n<td align=\"left\">missing-slicing-annotations</td>\n</tr>\n<tr>\n<td>C9004</td>\n<td align=\"left\">invalid-slicing-annotations</td>\n</tr>\n<tr>\n<td>C9005</td>\n<td align=\"left\">disallow-inplace-tensor-operations</td>\n</tr>\n<tr>\n<td>C9006</td>\n<td align=\"left\">assignment-on-inplace-operations</td>\n</tr></tbody></table>\n<h1>Dev</h1>\n<h2>Run Example</h2>\n<pre><code>export PYTHONPATH=`pwd`; pylint --load-plugins=pylint_tta --disable=all --enable=C9001,C9002,C9003,C9004 example1.py\n</code></pre>\n<h2>Testing</h2>\n<pre><code>pytest -s\n</code></pre>\n\n          </div>"}, "last_serial": 5260434, "releases": {"0.0.2a0": [{"comment_text": "", "digests": {"md5": "11985c22eb7fbe8c2aab2914ba2612ea", "sha256": "0a733c55166af4c67a50ff8e7491b896d0f5c4021c1ada455375a2492ff7d5b4"}, "downloads": -1, "filename": "pylint_tta-0.0.2a0.tar.gz", "has_sig": false, "md5_digest": "11985c22eb7fbe8c2aab2914ba2612ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3089, "upload_time": "2019-05-10T03:06:46", "upload_time_iso_8601": "2019-05-10T03:06:46.104279Z", "url": "https://files.pythonhosted.org/packages/2c/08/bd942e7f693cba9a26c49b61d1da15068aaa507c15d26b2923534837dabc/pylint_tta-0.0.2a0.tar.gz", "yanked": false}], "0.0.3a0": [{"comment_text": "", "digests": {"md5": "6123b17e13b04e994191b29e2d8fabfb", "sha256": "0e310738d3eaf48302a8004c8e6f2f9134f4212c22ed60cafa7e058b3d84c99a"}, "downloads": -1, "filename": "pylint_tta-0.0.3a0.tar.gz", "has_sig": false, "md5_digest": "6123b17e13b04e994191b29e2d8fabfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3301, "upload_time": "2019-05-10T03:17:10", "upload_time_iso_8601": "2019-05-10T03:17:10.727467Z", "url": "https://files.pythonhosted.org/packages/4a/b8/28e3c95a70fcdc1d1afaa441889dc12e50930cc51d8dcd657bea27f13b3c/pylint_tta-0.0.3a0.tar.gz", "yanked": false}], "0.0.4a0": [{"comment_text": "", "digests": {"md5": "b3f9d5195b4a87757846f67f6f1535f0", "sha256": "2768ba16beb88779e95a8d591e564a846bb677409bfeec6cd0ccf41c8897d7e6"}, "downloads": -1, "filename": "pylint_tta-0.0.4a0.tar.gz", "has_sig": false, "md5_digest": "b3f9d5195b4a87757846f67f6f1535f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3264, "upload_time": "2019-05-13T02:41:03", "upload_time_iso_8601": "2019-05-13T02:41:03.941842Z", "url": "https://files.pythonhosted.org/packages/ad/59/2004ef5b8b106b968a58e3bbf4a2868b09081d5c32c72ae828e1c6f77a21/pylint_tta-0.0.4a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3f9d5195b4a87757846f67f6f1535f0", "sha256": "2768ba16beb88779e95a8d591e564a846bb677409bfeec6cd0ccf41c8897d7e6"}, "downloads": -1, "filename": "pylint_tta-0.0.4a0.tar.gz", "has_sig": false, "md5_digest": "b3f9d5195b4a87757846f67f6f1535f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3264, "upload_time": "2019-05-13T02:41:03", "upload_time_iso_8601": "2019-05-13T02:41:03.941842Z", "url": "https://files.pythonhosted.org/packages/ad/59/2004ef5b8b106b968a58e3bbf4a2868b09081d5c32c72ae828e1c6f77a21/pylint_tta-0.0.4a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:59 2020"}