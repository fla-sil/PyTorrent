{"info": {"author": "Jim Fulton", "author_email": "jim@zope.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Topic :: Software Development :: Internationalization", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "*************************************\nLocale-based text collation using ICU\n*************************************\n\nThis package provides a Python interface to the `International\nComponent for Unicode (ICU)\n<http://www-306.ibm.com/software/globalization/icu/index.jsp>`_.\n\n.. contents::\n\nChange History\n**************\n\n1.0.2 (2006-10-16)\n==================\n\nFixed setup file problems.\n\n1.0.1 (2006-10-16)\n==================\n\nAdded missing import to setup.py.\n\n1.0 (2006-10-16)\n================\n\nInitial version.\n\nInstallation\n************\n\nzope.ucol is installed via setup.py in the usual way.\n\nYou must have ICU installed.  If ICU isn't installed in the usual\nplaces for include files and libraries on your system, you can provide\ncommand-line options to setup.py when building the extensions, as in::\n\n python2.4 setup.py build_ext \\\n   -I/home/jim/p/z4i/jim-icu/var/opt/icu/include \\\n   -L/home/jim/p/z4i/jim-icu/var/opt/icu/lib \\\n   -R/home/jim/p/z4i/jim-icu/var/opt/icu/lib\n\n python2.4 setup.py install\n\nNote that if the libraries are in an unusual place, you will want to\nspecify their location using the -R option so you don't have to\nspecify it at run-time.\n\nDetailed Documentation\n**********************\n\nLocale-based text collation using ICU\n=====================================\n\nThe zope.ucol package provides a minimal Pythonic wrapper around the\nu_col C API of the International Components for Unicode (ICU) library.\nIt provides locale-based text collation.\n\nTo perform collation, you need to create a collator key factory for\nyour locale.  We'll use the special \"root\" locale in this example:\n\n    >>> import zope.ucol\n    >>> collator = zope.ucol.Collator(\"root\")\n\nThe collator has a key method for creating collation keys from unicode\nstrings.  The method can be passed as the key argument to list.sort\nor to the built-in sorted function.\n\n    >>> sorted([u'Sam', u'sally', u'Abe', u'alice', u'Terry', u'tim',\n    ...        u'\\U00023119', u'\\u62d5'], key=collator.key)\n    [u'Abe', u'alice', u'sally', u'Sam', u'Terry', u'tim', \n     u'\\u62d5', u'\\U00023119']\n\nThere is a cmp method for comparing 2 unicode strings, which can also be\nused when sorting:\n\n    >>> sorted([u'Sam', u'sally', u'Abe', u'alice', u'Terry', u'tim',\n    ...        u'\\U00023119', u'\\u62d5'], collator.cmp)\n    [u'Abe', u'alice', u'sally', u'Sam', u'Terry', u'tim', \n     u'\\u62d5', u'\\U00023119']\n\nNote that it is almost always more efficient to pass the key method to\nsorting functions, rather than the cmp method.  The cmp method is more\nefficient in the special case that strings are long and few and when\nthey tend to differ at their beginnings.  This is because computing\nthe entire key can be much more expensive than comparison when the\norder can be determined based on analyzing a small portion of the\noriginal strings.\n\nCollator attributes\n-------------------\n\nYou can ask a collator for it's locale:\n\n    >>> collator.locale\n    'root'\n\nand you can find out whether default collation information was used:\n\n    >>> collator.used_default_information\n    0\n    >>> collator = zope.ucol.Collator(\"eek\")\n    >>> collator.used_default_information\n    1\n\nDownload\n**********************", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.python.org/pypi/zope.ucol", "keywords": "internationalization", "license": "ZPL 2.1", "maintainer": null, "maintainer_email": null, "name": "zope.ucol", "package_url": "https://pypi.org/project/zope.ucol/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zope.ucol/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.python.org/pypi/zope.ucol"}, "release_url": "https://pypi.org/project/zope.ucol/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "Python access to ICU text collation", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a Python interface to the <a href=\"http://www-306.ibm.com/software/globalization/icu/index.jsp\" rel=\"nofollow\">International\nComponent for Unicode (ICU)</a>.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#change-history\" id=\"id5\" rel=\"nofollow\">Change History</a><ul>\n<li><a href=\"#id1\" id=\"id6\" rel=\"nofollow\">1.0.2 (2006-10-16)</a></li>\n<li><a href=\"#id2\" id=\"id7\" rel=\"nofollow\">1.0.1 (2006-10-16)</a></li>\n<li><a href=\"#id3\" id=\"id8\" rel=\"nofollow\">1.0 (2006-10-16)</a></li>\n</ul>\n</li>\n<li><a href=\"#installation\" id=\"id9\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#detailed-documentation\" id=\"id10\" rel=\"nofollow\">Detailed Documentation</a><ul>\n<li><a href=\"#collator-attributes\" id=\"id11\" rel=\"nofollow\">Collator attributes</a></li>\n</ul>\n</li>\n<li><a href=\"#download\" id=\"id12\" rel=\"nofollow\">Download</a></li>\n</ul>\n</div>\n<div id=\"change-history\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Change History</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id6\" rel=\"nofollow\">1.0.2 (2006-10-16)</a></h3>\n<p>Fixed setup file problems.</p>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id7\" rel=\"nofollow\">1.0.1 (2006-10-16)</a></h3>\n<p>Added missing import to setup.py.</p>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id8\" rel=\"nofollow\">1.0 (2006-10-16)</a></h3>\n<p>Initial version.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Installation</a></h2>\n<p>zope.ucol is installed via setup.py in the usual way.</p>\n<p>You must have ICU installed.  If ICU isn\u2019t installed in the usual\nplaces for include files and libraries on your system, you can provide\ncommand-line options to setup.py when building the extensions, as in:</p>\n<pre>python2.4 setup.py build_ext \\\n  -I/home/jim/p/z4i/jim-icu/var/opt/icu/include \\\n  -L/home/jim/p/z4i/jim-icu/var/opt/icu/lib \\\n  -R/home/jim/p/z4i/jim-icu/var/opt/icu/lib\n\npython2.4 setup.py install\n</pre>\n<p>Note that if the libraries are in an unusual place, you will want to\nspecify their location using the -R option so you don\u2019t have to\nspecify it at run-time.</p>\n</div>\n<div id=\"detailed-documentation\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Detailed Documentation</a></h2>\n<h2 id=\"id4\"><span class=\"section-subtitle\">Locale-based text collation using ICU</span></h2>\n<p>The zope.ucol package provides a minimal Pythonic wrapper around the\nu_col C API of the International Components for Unicode (ICU) library.\nIt provides locale-based text collation.</p>\n<p>To perform collation, you need to create a collator key factory for\nyour locale.  We\u2019ll use the special \u201croot\u201d locale in this example:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import zope.ucol\n&gt;&gt;&gt; collator = zope.ucol.Collator(\"root\")\n</pre>\n</blockquote>\n<p>The collator has a key method for creating collation keys from unicode\nstrings.  The method can be passed as the key argument to list.sort\nor to the built-in sorted function.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sorted([u'Sam', u'sally', u'Abe', u'alice', u'Terry', u'tim',\n...        u'\\U00023119', u'\\u62d5'], key=collator.key)\n[u'Abe', u'alice', u'sally', u'Sam', u'Terry', u'tim',\n u'\\u62d5', u'\\U00023119']\n</pre>\n</blockquote>\n<p>There is a cmp method for comparing 2 unicode strings, which can also be\nused when sorting:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sorted([u'Sam', u'sally', u'Abe', u'alice', u'Terry', u'tim',\n...        u'\\U00023119', u'\\u62d5'], collator.cmp)\n[u'Abe', u'alice', u'sally', u'Sam', u'Terry', u'tim',\n u'\\u62d5', u'\\U00023119']\n</pre>\n</blockquote>\n<p>Note that it is almost always more efficient to pass the key method to\nsorting functions, rather than the cmp method.  The cmp method is more\nefficient in the special case that strings are long and few and when\nthey tend to differ at their beginnings.  This is because computing\nthe entire key can be much more expensive than comparison when the\norder can be determined based on analyzing a small portion of the\noriginal strings.</p>\n<div id=\"collator-attributes\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Collator attributes</a></h3>\n<p>You can ask a collator for it\u2019s locale:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; collator.locale\n'root'\n</pre>\n</blockquote>\n<p>and you can find out whether default collation information was used:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; collator.used_default_information\n0\n&gt;&gt;&gt; collator = zope.ucol.Collator(\"eek\")\n&gt;&gt;&gt; collator.used_default_information\n1\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"download\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Download</a></h2>\n</div>\n\n          </div>"}, "last_serial": 802397, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8caae759a259455fe244ef9cd9305aee", "sha256": "4740f2da522401e64552f2a8a81a6a92828fdc86aa6cc23524af3edbd689066f"}, "downloads": -1, "filename": "zope.ucol-1.0.tar.gz", "has_sig": false, "md5_digest": "8caae759a259455fe244ef9cd9305aee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13032, "upload_time": "2006-10-16T10:56:24", "upload_time_iso_8601": "2006-10-16T10:56:24Z", "url": "https://files.pythonhosted.org/packages/3d/b3/b10c46f7c3c36381ac19640591f3c6712dd0f4f7aa5e39072d546e358cc8/zope.ucol-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f4bd079084139b1f35d7b19a3a5c855a", "sha256": "f618783ff6a356aa44591ac1833542d9dd4c37d53954d7267bb5374ba235917b"}, "downloads": -1, "filename": "zope.ucol-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f4bd079084139b1f35d7b19a3a5c855a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15088, "upload_time": "2006-10-16T22:15:17", "upload_time_iso_8601": "2006-10-16T22:15:17Z", "url": "https://files.pythonhosted.org/packages/fe/d6/adac1791d1895752e60557b78f910d67a1aaf649e713fcdd7fde988898ef/zope.ucol-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "557c38e3ed2751933c1d554d60a5cb1a", "sha256": "1739bba505ba098d080ba170c274791105033eb8b02a6ce9794165c68691523b"}, "downloads": -1, "filename": "zope.ucol-1.0.2.tar.gz", "has_sig": false, "md5_digest": "557c38e3ed2751933c1d554d60a5cb1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15138, "upload_time": "2006-10-16T22:26:58", "upload_time_iso_8601": "2006-10-16T22:26:58Z", "url": "https://files.pythonhosted.org/packages/e5/bc/2640d1c930cf0dd63b8dbf3439459cb5e9873c8973882f6b34675404d241/zope.ucol-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "557c38e3ed2751933c1d554d60a5cb1a", "sha256": "1739bba505ba098d080ba170c274791105033eb8b02a6ce9794165c68691523b"}, "downloads": -1, "filename": "zope.ucol-1.0.2.tar.gz", "has_sig": false, "md5_digest": "557c38e3ed2751933c1d554d60a5cb1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15138, "upload_time": "2006-10-16T22:26:58", "upload_time_iso_8601": "2006-10-16T22:26:58Z", "url": "https://files.pythonhosted.org/packages/e5/bc/2640d1c930cf0dd63b8dbf3439459cb5e9873c8973882f6b34675404d241/zope.ucol-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:00 2020"}