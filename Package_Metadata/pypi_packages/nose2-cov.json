{"info": {"author": "Meme Dough", "author_email": "memedough@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Topic :: Software Development :: Testing"], "description": "nose2-cov\n=========\n\nThis plugin produces coverage reports.  It also supports coverage of subprocesses.\n\nAll features offered by the coverage package should be available, either through nose2-cov or\nthrough coverage's config file.\n\n\nInstallation\n------------\n\nInstall with pip::\n\n    pip install nose2-cov\n\n.. NOTE::\n\n    Ensure you use pip instead of easy_install as the latter does not correctly install the\n    init_cov_core.pth file needed for subprocess measurement.\n\n\nUninstallation\n--------------\n\nUninstall with pip::\n\n    pip uninstall nose2-cov\n    pip uninstall cov-core\n\n.. NOTE::\n\n    Ensure that you manually delete the init_cov_core.pth file in your site-packages directory.\n\n    This file starts coverage collection of subprocesses if appropriate during site initialisation\n    at python startup.\n\n\nUsage\n-----\n\nThe following will report on the combined coverage of the main process and all of it's subprocesses::\n\n    nose2 --with-cov testfoo\n\nShows a terminal report::\n\n    ---------- coverage: platform linux2, python 2.7.1-final-0 -----------\n    Name      Stmts   Miss  Cover\n    -----------------------------\n    testfoo      17      9    47%\n\n\nReporting\n---------\n\nIt is possible to generate any combination of the reports for a single test run.\n\nThe available reports are terminal (with or without missing line numbers shown), HTML, XML and\nannotated source code.\n\nThe terminal report without line numbers (default)::\n\n    nose2 --with-cov --cov-report term testfoo\n\n    ---------- coverage: platform linux2, python 2.7.1-final-0 -----------\n    Name      Stmts   Miss  Cover\n    -----------------------------\n    testfoo      17      9    47%\n\n\nThe terminal report with line numbers::\n\n    nose2 --with-cov --cov-report term-missing testfoo\n\n    ---------- coverage: platform linux2, python 2.7.1-final-0 -----------\n    Name      Stmts   Miss  Cover   Missing\n    ---------------------------------------\n    testfoo      17      9    47%   1-6, 9, 11, 13, 17, 19\n\n\nThe remaining three reports output to files (useful for when the output is going to a continuous\nintegration server)::\n\n    nose2 --with-cov --cov-report html --cov-report xml --cov-report annotate testfoo\n\n\nCoverage Data File\n------------------\n\nThe data file is erased at the beginning of testing to ensure clean data for each test run.\n\nThe data file is left at the end of testing so that it is possible to use normal coverage tools to\nexamine it.\n\n\nCoverage Config File\n--------------------\n\nThis plugin provides a clean minimal set of command line options that are added to nose2.  For\nfurther control of coverage use a coverage config file.\n\nFor example if tests are contained within the directory tree being measured the tests may be\nexcluded if desired by using a .coveragerc file with the omit option set::\n\n    nose2 --with-cov --cov-config .coveragerc testfoo\n\nWhere the .coveragerc file contains file globs::\n\n    [run]\n    omit = tests/*\n\nFor full details refer to the `coverage config file`_ documentation.\n\n.. _`coverage config file`: http://nedbatchelder.com/code/coverage/config.html\n\nNote that this plugin controls some options and setting the option in the config file will have no\neffect.  These include specifying source to be measured (source option) and all data file handling\n(data_file and parallel options).\n\n\nLimitations\n-----------\n\nFor subprocess measurement environment variables must make it from the main process to the\nsubprocess.  The python used by the subprocess must have nose2-cov installed.  The subprocess must\ndo normal site initialisation so that the environment variables can be detected and coverage\nstarted.\n\n\nAcknowledgements\n----------------\n\nWhilst this plugin has been built fresh from the ground up it has been influenced by the work done\non pytest-coverage (Ross Lawley, James Mills, Holger Krekel) and nose-cover (Jason Pellerin) which are\nother coverage plugins.\n\nNed Batchelder for coverage and its ability to combine the coverage results of parallel runs.\n\nHolger Krekel for pytest with its distributed testing support.\n\nJason Pellerin for nose.\n\nMichael Foord for unittest2.\n\nNo doubt others have contributed to these tools as well.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/memedough/nose2-cov/overview", "keywords": "nose2 cover coverage", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "nose2-cov", "package_url": "https://pypi.org/project/nose2-cov/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nose2-cov/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/memedough/nose2-cov/overview"}, "release_url": "https://pypi.org/project/nose2-cov/1.0a4/", "requires_dist": null, "requires_python": null, "summary": "nose2 plugin for coverage reporting, including subprocesses and multiprocessing", "version": "1.0a4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This plugin produces coverage reports.  It also supports coverage of subprocesses.</p>\n<p>All features offered by the coverage package should be available, either through nose2-cov or\nthrough coverage\u2019s config file.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with pip:</p>\n<pre>pip install nose2-cov\n</pre>\n<div>\n<p>Note</p>\n<p>Ensure you use pip instead of easy_install as the latter does not correctly install the\ninit_cov_core.pth file needed for subprocess measurement.</p>\n</div>\n</div>\n<div id=\"uninstallation\">\n<h2>Uninstallation</h2>\n<p>Uninstall with pip:</p>\n<pre>pip uninstall nose2-cov\npip uninstall cov-core\n</pre>\n<div>\n<p>Note</p>\n<p>Ensure that you manually delete the init_cov_core.pth file in your site-packages directory.</p>\n<p>This file starts coverage collection of subprocesses if appropriate during site initialisation\nat python startup.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The following will report on the combined coverage of the main process and all of it\u2019s subprocesses:</p>\n<pre>nose2 --with-cov testfoo\n</pre>\n<p>Shows a terminal report:</p>\n<pre>---------- coverage: platform linux2, python 2.7.1-final-0 -----------\nName      Stmts   Miss  Cover\n-----------------------------\ntestfoo      17      9    47%\n</pre>\n</div>\n<div id=\"reporting\">\n<h2>Reporting</h2>\n<p>It is possible to generate any combination of the reports for a single test run.</p>\n<p>The available reports are terminal (with or without missing line numbers shown), HTML, XML and\nannotated source code.</p>\n<p>The terminal report without line numbers (default):</p>\n<pre>nose2 --with-cov --cov-report term testfoo\n\n---------- coverage: platform linux2, python 2.7.1-final-0 -----------\nName      Stmts   Miss  Cover\n-----------------------------\ntestfoo      17      9    47%\n</pre>\n<p>The terminal report with line numbers:</p>\n<pre>nose2 --with-cov --cov-report term-missing testfoo\n\n---------- coverage: platform linux2, python 2.7.1-final-0 -----------\nName      Stmts   Miss  Cover   Missing\n---------------------------------------\ntestfoo      17      9    47%   1-6, 9, 11, 13, 17, 19\n</pre>\n<p>The remaining three reports output to files (useful for when the output is going to a continuous\nintegration server):</p>\n<pre>nose2 --with-cov --cov-report html --cov-report xml --cov-report annotate testfoo\n</pre>\n</div>\n<div id=\"coverage-data-file\">\n<h2>Coverage Data File</h2>\n<p>The data file is erased at the beginning of testing to ensure clean data for each test run.</p>\n<p>The data file is left at the end of testing so that it is possible to use normal coverage tools to\nexamine it.</p>\n</div>\n<div id=\"coverage-config-file\">\n<h2>Coverage Config File</h2>\n<p>This plugin provides a clean minimal set of command line options that are added to nose2.  For\nfurther control of coverage use a coverage config file.</p>\n<p>For example if tests are contained within the directory tree being measured the tests may be\nexcluded if desired by using a .coveragerc file with the omit option set:</p>\n<pre>nose2 --with-cov --cov-config .coveragerc testfoo\n</pre>\n<p>Where the .coveragerc file contains file globs:</p>\n<pre>[run]\nomit = tests/*\n</pre>\n<p>For full details refer to the <a href=\"http://nedbatchelder.com/code/coverage/config.html\" rel=\"nofollow\">coverage config file</a> documentation.</p>\n<p>Note that this plugin controls some options and setting the option in the config file will have no\neffect.  These include specifying source to be measured (source option) and all data file handling\n(data_file and parallel options).</p>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>For subprocess measurement environment variables must make it from the main process to the\nsubprocess.  The python used by the subprocess must have nose2-cov installed.  The subprocess must\ndo normal site initialisation so that the environment variables can be detected and coverage\nstarted.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>Whilst this plugin has been built fresh from the ground up it has been influenced by the work done\non pytest-coverage (Ross Lawley, James Mills, Holger Krekel) and nose-cover (Jason Pellerin) which are\nother coverage plugins.</p>\n<p>Ned Batchelder for coverage and its ability to combine the coverage results of parallel runs.</p>\n<p>Holger Krekel for pytest with its distributed testing support.</p>\n<p>Jason Pellerin for nose.</p>\n<p>Michael Foord for unittest2.</p>\n<p>No doubt others have contributed to these tools as well.</p>\n</div>\n\n          </div>"}, "last_serial": 1052552, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "abfb8e93b0ee318654bc5462516fcbb2", "sha256": "eb66d335862404e4a1c8566e8ff802c032b483b6af6470de35f38b01c52a09fd"}, "downloads": -1, "filename": "nose2-cov-1.0a1.tar.gz", "has_sig": false, "md5_digest": "abfb8e93b0ee318654bc5462516fcbb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4194, "upload_time": "2012-01-21T10:22:35", "upload_time_iso_8601": "2012-01-21T10:22:35.966165Z", "url": "https://files.pythonhosted.org/packages/7c/17/fece674f954fd15b3ff19ef8a18b973948474b116bbe58826ffbed8f626f/nose2-cov-1.0a1.tar.gz", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "b9bbfba8d649f2ce19860d70e9e57ca7", "sha256": "7ce868c73f4ab2fd4e0a0cc2b41f16c201593c6d1a186ebce4933146b5005638"}, "downloads": -1, "filename": "nose2-cov-1.0a2.tar.gz", "has_sig": false, "md5_digest": "b9bbfba8d649f2ce19860d70e9e57ca7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4206, "upload_time": "2012-01-21T10:30:50", "upload_time_iso_8601": "2012-01-21T10:30:50.152630Z", "url": "https://files.pythonhosted.org/packages/14/28/bad2a7c6c9884fe0158a0e704aeae433977e1e7aae8aac872d08d919a4db/nose2-cov-1.0a2.tar.gz", "yanked": false}], "1.0a3": [{"comment_text": "", "digests": {"md5": "a4034ff2239588a69e18fde9433f287e", "sha256": "b700def416c57312da266a0be5c6b383d1dd0b02c571676696618c91ce9ce833"}, "downloads": -1, "filename": "nose2-cov-1.0a3.tar.gz", "has_sig": false, "md5_digest": "a4034ff2239588a69e18fde9433f287e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4207, "upload_time": "2012-01-22T04:17:43", "upload_time_iso_8601": "2012-01-22T04:17:43.321169Z", "url": "https://files.pythonhosted.org/packages/ad/9a/aa39d504ef96fb0979c5e62742c6e5e8445be077c80259176e41b3845d56/nose2-cov-1.0a3.tar.gz", "yanked": false}], "1.0a4": [{"comment_text": "", "digests": {"md5": "6442f03e2ea732b0e38eb5b00fbe0b31", "sha256": "4b707ebc4caff3292bf2a21ad6c1833b137a798a9045640adeec7965706b0f8f"}, "downloads": -1, "filename": "nose2-cov-1.0a4.tar.gz", "has_sig": false, "md5_digest": "6442f03e2ea732b0e38eb5b00fbe0b31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4641, "upload_time": "2012-05-12T03:57:08", "upload_time_iso_8601": "2012-05-12T03:57:08.752883Z", "url": "https://files.pythonhosted.org/packages/65/8b/9b229bee5f82e4a0b5ae1b1f9be71a1f2fe00cd07f52fb26827758243e15/nose2-cov-1.0a4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6442f03e2ea732b0e38eb5b00fbe0b31", "sha256": "4b707ebc4caff3292bf2a21ad6c1833b137a798a9045640adeec7965706b0f8f"}, "downloads": -1, "filename": "nose2-cov-1.0a4.tar.gz", "has_sig": false, "md5_digest": "6442f03e2ea732b0e38eb5b00fbe0b31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4641, "upload_time": "2012-05-12T03:57:08", "upload_time_iso_8601": "2012-05-12T03:57:08.752883Z", "url": "https://files.pythonhosted.org/packages/65/8b/9b229bee5f82e4a0b5ae1b1f9be71a1f2fe00cd07f52fb26827758243e15/nose2-cov-1.0a4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:48 2020"}