{"info": {"author": "F\u00e1bio Mac\u00eado Mendes", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries"], "description": "Uses cffi to build a simple interface for calling functions in a C file. This\npackage is designed for convenience and should work only in the very simple\ncases. It is used in an educational setting in a mixed Python/C programming\ncourse.\n\nUsage\n=====\n\nIt is very simple. Say you have a \"libfuncs.c\" in the working directory\n\n.. code-block::c\n    #include<stdio.h>\n\n    int double(int x) {\n        return x + x;\n    }\n\nWe can call the `double` function by relying in the implicit import in the\n:mod:`ccall` module.\n\n>>> import ccall as c\n>>> c.libfuncs.double(21)\n42\n\n\nLimitations\n===========\n\nThis software is beta. Use with care!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ccall", "package_url": "https://pypi.org/project/ccall/", "platform": "any", "project_url": "https://pypi.org/project/ccall/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/ccall/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A short description for your project.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Uses cffi to build a simple interface for calling functions in a C file. This<br>package is designed for convenience and should work only in the very simple<br>cases. It is used in an educational setting in a mixed Python/C programming<br>course.<br><br>Usage<br>=====<br><br>It is very simple. Say you have a \"libfuncs.c\" in the working directory<br><br>.. code-block::c<br>    #include&lt;stdio.h&gt;<br><br>    int double(int x) {<br>        return x + x;<br>    }<br><br>We can call the `double` function by relying in the implicit import in the<br>:mod:`ccall` module.<br><br>&gt;&gt;&gt; import ccall as c<br>&gt;&gt;&gt; c.libfuncs.double(21)<br>42<br><br><br>Limitations<br>===========<br><br>This software is beta. Use with care!\n          </div>"}, "last_serial": 2263286, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c66430ace5e52789265d48dc19e71ae9", "sha256": "8578c36ca68441eba28342b23189e2459ab85f2911786795c6eb435e084a69a8"}, "downloads": -1, "filename": "ccall-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c66430ace5e52789265d48dc19e71ae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4753, "upload_time": "2016-08-05T01:46:33", "upload_time_iso_8601": "2016-08-05T01:46:33.809227Z", "url": "https://files.pythonhosted.org/packages/54/8c/1948603872cef57407e98388b0cc2e395c8e2f61562a7b5d698b76c945b4/ccall-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c66430ace5e52789265d48dc19e71ae9", "sha256": "8578c36ca68441eba28342b23189e2459ab85f2911786795c6eb435e084a69a8"}, "downloads": -1, "filename": "ccall-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c66430ace5e52789265d48dc19e71ae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4753, "upload_time": "2016-08-05T01:46:33", "upload_time_iso_8601": "2016-08-05T01:46:33.809227Z", "url": "https://files.pythonhosted.org/packages/54/8c/1948603872cef57407e98388b0cc2e395c8e2f61562a7b5d698b76c945b4/ccall-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:08 2020"}