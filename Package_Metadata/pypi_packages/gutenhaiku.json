{"info": {"author": "sloev", "author_email": "johannes.valbjorn@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<img src=\"https://github.com/sloev/gutenhaiku/raw/master/assets/header.png\" width=\"400\"/>\n\n# Guten Haiku\n\n[![Build Status](https://travis-ci.org/sloev/gutenhaiku.svg?branch=master)](https://travis-ci.org/sloev/gutenhaiku) [![Latest Version](https://img.shields.io/pypi/v/gutenhaiku.svg)](https://pypi.python.org/pypi/gutenhaiku) [![Python Support](https://img.shields.io/pypi/pyversions/gutenhaiku.svg)](https://pypi.python.org/pypi/gutenhaiku)\n\nA Commandline tool to mine haiku poems from text\n\n* 80's cli interface with **colors**\n* Works great with gutenberg books thx to a builtin cleaner script from [Peyman Mohseni Kiasari](https://github.com/kiasar/gutenberg_cleaner)\n* Reconstructs punctuation of haikus using [deepcorrect](https://github.com/bedapudi6788/deepcorrect)\n* Appends json haiku's to a file\n\n## Install\n\n```bash\n$ pip install gutenhaiku\n```\n\nThen you need to download the models in cache:\n\n```bash\n$ gutenhaiku setup\n```\n\n## Usage\n\n```bash\n$ gutenhaiku -f frankenstein.txt -a 'mary shelley' -t 'frankenstein' -d '1818-01-01'\n```\n\n<a target=\"_blank\" href=\"https://asciinema.org/a/9dSu3L5D7OzaOg1p5lOXNF8TC\"><img src=\"https://github.com/sloev/gutenhaiku/raw/master/assets/gutenhaiku.gif\" width=\"600\"/></a>\n\n```bash\nWat?             Guten Haiko lets you extract haiku poems from text\nUsage:           gutenhaiku \\\n                 -f frankenstein.txt \\\n                 -a 'Mary Wollstonecraft Shelley' \\\n                 -t 'frankenstein' \\\n                 -d '1818-01-01'\nOptional params: --commandfile [-cf] a file with comma seperated \n                                     values for f,a,t,d params\n                 --outputfile   [-o] the output file path [default haiku.json\n                 --eighties     [-e] eighties mode [default 1]\n\nAdvanced usage:  gutenhaiku \\\n                 -f frankenstein.txt \\\n                 -a 'Mary Wollstonecraft Shelley' \\\n                 -t 'frankenstein' \\\n                 -d '1818-01-01' \\\n                 -f dracula.txt \\\n                 -a 'Bram Stoker' \\\n                 -t 'dracula' \\\n                 -d '1897-05-26'\n\nsetup:           gutenhaiku setup\n                 downloads AI models\n\n```\n\n### Output format\n\n*example from [assets](assets/frankenstein_haiku.json)*\n```json\n{\n    \"page\": 261,\n    \"word_number\": 65407,\n    \"haiku\": [\n        \"He pointed towards.\",\n        \"The corpse of my wife I rushed.\",\n        \"Towards the window.\"\n    ],\n    \"author\": \"mary shelley\",\n    \"title\": \"frankenstein\",\n    \"date\": \"1818-01-01T00:00:00\"\n}\n```\n\n## Dev\n\nRun tests with \n\n```bash\n$ poetry run nox\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sloev/gutenhaiku", "keywords": "gutenhaiku,gutenberg,haiku", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gutenhaiku", "package_url": "https://pypi.org/project/gutenhaiku/", "platform": "", "project_url": "https://pypi.org/project/gutenhaiku/", "project_urls": {"Homepage": "https://github.com/sloev/gutenhaiku", "Repository": "https://github.com/sloev/gutenhaiku"}, "release_url": "https://pypi.org/project/gutenhaiku/1.0.1/", "requires_dist": ["spacy_syllables (>=1.0.0,<2.0.0)", "spacy (>=2.2.4,<3.0.0)", "deepcorrect (>=1.0.5,<2.0.0)", "tensorflow (==1.14.0)", "click (>=7.1.1,<8.0.0)", "silence_tensorflow (>=1.1.1,<2.0.0)", "colorama (>=0.4.3,<0.5.0)", "numpy (==1.16.4)", "tensorboard (==1.14.0)", "setuptools (>=41.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "A Commandline tool to mine haiku poems from text", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a615e6a42ef631aaa5ed2361cb548f7c4ba7162/68747470733a2f2f6769746875622e636f6d2f736c6f65762f677574656e6861696b752f7261772f6d61737465722f6173736574732f6865616465722e706e67\" width=\"400\">\n<h1>Guten Haiku</h1>\n<p><a href=\"https://travis-ci.org/sloev/gutenhaiku\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c691abb4169dcbc30b3bc3e221192e2ef9111982/68747470733a2f2f7472617669732d63692e6f72672f736c6f65762f677574656e6861696b752e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/gutenhaiku\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c935184e9b329c919a1138f4e03355622f2bed16/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f677574656e6861696b752e737667\"></a> <a href=\"https://pypi.python.org/pypi/gutenhaiku\" rel=\"nofollow\"><img alt=\"Python Support\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7683831a74fabcdac6382cc7b4b67cb49e90db25/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f677574656e6861696b752e737667\"></a></p>\n<p>A Commandline tool to mine haiku poems from text</p>\n<ul>\n<li>80's cli interface with <strong>colors</strong></li>\n<li>Works great with gutenberg books thx to a builtin cleaner script from <a href=\"https://github.com/kiasar/gutenberg_cleaner\" rel=\"nofollow\">Peyman Mohseni Kiasari</a></li>\n<li>Reconstructs punctuation of haikus using <a href=\"https://github.com/bedapudi6788/deepcorrect\" rel=\"nofollow\">deepcorrect</a></li>\n<li>Appends json haiku's to a file</li>\n</ul>\n<h2>Install</h2>\n<pre>$ pip install gutenhaiku\n</pre>\n<p>Then you need to download the models in cache:</p>\n<pre>$ gutenhaiku setup\n</pre>\n<h2>Usage</h2>\n<pre>$ gutenhaiku -f frankenstein.txt -a <span class=\"s1\">'mary shelley'</span> -t <span class=\"s1\">'frankenstein'</span> -d <span class=\"s1\">'1818-01-01'</span>\n</pre>\n<p><a href=\"https://asciinema.org/a/9dSu3L5D7OzaOg1p5lOXNF8TC\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c75b6bbfb7e5bc316cc1f96394a7500b5f12a1c/68747470733a2f2f6769746875622e636f6d2f736c6f65762f677574656e6861696b752f7261772f6d61737465722f6173736574732f677574656e6861696b752e676966\" width=\"600\"></a></p>\n<pre>Wat?             Guten Haiko lets you extract haiku poems from text\nUsage:           gutenhaiku <span class=\"se\">\\</span>\n                 -f frankenstein.txt <span class=\"se\">\\</span>\n                 -a <span class=\"s1\">'Mary Wollstonecraft Shelley'</span> <span class=\"se\">\\</span>\n                 -t <span class=\"s1\">'frankenstein'</span> <span class=\"se\">\\</span>\n                 -d <span class=\"s1\">'1818-01-01'</span>\nOptional params: --commandfile <span class=\"o\">[</span>-cf<span class=\"o\">]</span> a file with comma seperated \n                                     values <span class=\"k\">for</span> f,a,t,d params\n                 --outputfile   <span class=\"o\">[</span>-o<span class=\"o\">]</span> the output file path <span class=\"o\">[</span>default haiku.json\n                 --eighties     <span class=\"o\">[</span>-e<span class=\"o\">]</span> eighties mode <span class=\"o\">[</span>default <span class=\"m\">1</span><span class=\"o\">]</span>\n\nAdvanced usage:  gutenhaiku <span class=\"se\">\\</span>\n                 -f frankenstein.txt <span class=\"se\">\\</span>\n                 -a <span class=\"s1\">'Mary Wollstonecraft Shelley'</span> <span class=\"se\">\\</span>\n                 -t <span class=\"s1\">'frankenstein'</span> <span class=\"se\">\\</span>\n                 -d <span class=\"s1\">'1818-01-01'</span> <span class=\"se\">\\</span>\n                 -f dracula.txt <span class=\"se\">\\</span>\n                 -a <span class=\"s1\">'Bram Stoker'</span> <span class=\"se\">\\</span>\n                 -t <span class=\"s1\">'dracula'</span> <span class=\"se\">\\</span>\n                 -d <span class=\"s1\">'1897-05-26'</span>\n\nsetup:           gutenhaiku setup\n                 downloads AI models\n</pre>\n<h3>Output format</h3>\n<p><em>example from <a href=\"assets/frankenstein_haiku.json\" rel=\"nofollow\">assets</a></em></p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"page\"</span><span class=\"p\">:</span> <span class=\"mi\">261</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"word_number\"</span><span class=\"p\">:</span> <span class=\"mi\">65407</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"haiku\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"He pointed towards.\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"The corpse of my wife I rushed.\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Towards the window.\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"author\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mary shelley\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"frankenstein\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"date\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1818-01-01T00:00:00\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Dev</h2>\n<p>Run tests with</p>\n<pre>$ poetry run nox\n</pre>\n\n          </div>"}, "last_serial": 6815189, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "33292fcbdd89353a3e15ff4bc792d58e", "sha256": "1ad64bef8bfc0cdaff33b3a3f83e0e1858b20ef4ad90104d34a625942b7f226e"}, "downloads": -1, "filename": "gutenhaiku-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "33292fcbdd89353a3e15ff4bc792d58e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14685, "upload_time": "2020-03-15T11:09:08", "upload_time_iso_8601": "2020-03-15T11:09:08.891493Z", "url": "https://files.pythonhosted.org/packages/4c/0c/ddcc482258eb10250d3ed3eeece9ea2a648ac55404141e8ddb7805f8ccb0/gutenhaiku-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dee0d573d11b5ead538a0026d8e95895", "sha256": "67fd45bcd5d143a7c16ecdcf1d67158b6fa4e417adea0cc5c7479b20e836e8b7"}, "downloads": -1, "filename": "gutenhaiku-1.0.0.tar.gz", "has_sig": false, "md5_digest": "dee0d573d11b5ead538a0026d8e95895", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 11990, "upload_time": "2020-03-15T11:09:11", "upload_time_iso_8601": "2020-03-15T11:09:11.424331Z", "url": "https://files.pythonhosted.org/packages/6a/ad/50dc9c4c11b6af17d63114b860a5e4a7ca9f0380d0d44b1b4c505ee31394/gutenhaiku-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c6bf5a4eafa9dd7b901b9b904f73eb31", "sha256": "4f64d009ef68f000028469afb6dc5b787447ebcd1a0f758c9ce30adc7bf01aa2"}, "downloads": -1, "filename": "gutenhaiku-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c6bf5a4eafa9dd7b901b9b904f73eb31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14692, "upload_time": "2020-03-15T11:21:22", "upload_time_iso_8601": "2020-03-15T11:21:22.153564Z", "url": "https://files.pythonhosted.org/packages/5d/ca/8d94d93ab6404542b1a24daab83caf65947bbc9ea689507a21f47be932a9/gutenhaiku-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f03e506da95116e10286ccbfded5213d", "sha256": "1aa57d4effc07ece1d254c036ca58923553484574760e583e12defa2d4c1cdbf"}, "downloads": -1, "filename": "gutenhaiku-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f03e506da95116e10286ccbfded5213d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 12012, "upload_time": "2020-03-15T11:21:23", "upload_time_iso_8601": "2020-03-15T11:21:23.599774Z", "url": "https://files.pythonhosted.org/packages/13/98/cbe224f22155927e0a89d1c3a4f1397edd0178183137caef190230258a44/gutenhaiku-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6bf5a4eafa9dd7b901b9b904f73eb31", "sha256": "4f64d009ef68f000028469afb6dc5b787447ebcd1a0f758c9ce30adc7bf01aa2"}, "downloads": -1, "filename": "gutenhaiku-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c6bf5a4eafa9dd7b901b9b904f73eb31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 14692, "upload_time": "2020-03-15T11:21:22", "upload_time_iso_8601": "2020-03-15T11:21:22.153564Z", "url": "https://files.pythonhosted.org/packages/5d/ca/8d94d93ab6404542b1a24daab83caf65947bbc9ea689507a21f47be932a9/gutenhaiku-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f03e506da95116e10286ccbfded5213d", "sha256": "1aa57d4effc07ece1d254c036ca58923553484574760e583e12defa2d4c1cdbf"}, "downloads": -1, "filename": "gutenhaiku-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f03e506da95116e10286ccbfded5213d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 12012, "upload_time": "2020-03-15T11:21:23", "upload_time_iso_8601": "2020-03-15T11:21:23.599774Z", "url": "https://files.pythonhosted.org/packages/13/98/cbe224f22155927e0a89d1c3a4f1397edd0178183137caef190230258a44/gutenhaiku-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:08 2020"}