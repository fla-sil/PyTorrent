{"info": {"author": "Michael Lazar", "author_email": "lazar.michael22@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "<h1 align=\"center\">Flask-Gopher</h1>\n\n<p align=\"center\">A <a href=\"http://flask.pocoo.org/\">Flask</a> extension to support the <a href=\"https://en.wikipedia.org/wiki/Gopher_(protocol)\">Gopher</a> protocol.</p>\n\n<p align=\"center\">\n  <img alt=\"gopher\" src=\"resources/gopher_alt.jpg\"/>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://pypi.python.org/pypi/flask-gopher/\">\n    <img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/flask-gopher.svg?label=version\"/>\n  </a>\n  <a href=\"https://pypi.python.org/pypi/flask-gopher/\">\n    <img alt=\"python\" src=\"https://img.shields.io/badge/python-3.4+-blue.svg\"/>\n  </a>\n  <a href=\"https://travis-ci.org/michael-lazar/flask-gopher\">\n    <img alt=\"travis-ci\" src=\"https://travis-ci.org/michael-lazar/flask-gopher.svg?branch=master\"/>\n  </a>\n  <a href=\"https://coveralls.io/github/michael-lazar/flask-gopher?branch=master\">\n    <img alt=\"coveralls\" src=\"https://coveralls.io/repos/michael-lazar/flask-gopher/badge.svg?branch=master&service=github\"/>\n  </a>\n</p>\n\n## Contents\n\n* [Demo](#demo)  \n* [About](#about)  \n* [Quickstart](#quickstart)\n* [Installation](#installation)  \n* [Building Gopher Menus](#building-gopher-menus)  \n* [Using Templates](#using-templates)\n* [Gopher and WSGI](#gopher-and-wsgi)\n* [TLS Support](#tls-support)\n* [Gopher Protocol References](#gopher-protocol-references)  \n\n## Demo\n\nA live demonstration of the Flask-Gopher server is available in gopherspace at the following URL:\n\n---\n\n<p align=\"center\">\n<b><a href=\"gopher://mozz.us:7005\">gopher://mozz.us:7005</a></b><br>\n</p>\n\n---\n\n## About\n\n*What is gopher?*\n\nGopher is an alternative to the World Wide Web that peaked in popularity in the early 90's. There are still a handful of gopher sites maintained by enthusiasts; you can learn more about its history at [floodgap](http://gopher.floodgap.com/gopher/).\n\n*What is flask-gopher?*\n\nFlask-Gopher is a Flask extension that adds a thin *Gopher -> HTTP* compatability layer around the built-in webserver. It allows you to build fully [RFC 1466](https://tools.ietf.org/html/rfc1466) compliant gopher servers, with complete access to Flask's routing, templating engine, debugger, and more!\n\n*Who is this for?*\n\nI created this extension because I wanted to experiment with building dynamic gopher applications, and I felt limited by the lack of flexibility in other gopher servers. The target audience is web developers with experience using a high level web framework like Django or Ruby on Rails. You should feel comfortable writing python code and cross-referencing the official Flask documentation.\n\n## Quickstart\n\n```python\nfrom flask import Flask, url_for\nfrom flask_gopher import GopherExtension, GopherRequestHandler\n\napp = Flask(__name__)\ngopher = GopherExtension(app)\n\n@app.route('/')\ndef index():\n    return gopher.render_menu(\n        gopher.menu.title('My GopherHole'),\n        gopher.menu.dir('Home', url_for('index')),\n        gopher.menu.info(\"Look Ma, it's a gopher server!\"))\n\nif __name__ == '__main__':\n   app.run('127.0.0.1', 70, request_handler=GopherRequestHandler)\n```\n\n## Installation\n\nThis package requires **Python v3.5 or higher**\n\n```\npip install flask_gopher\n```\n\n## Building Gopher Menus\n\nGopher menus are structured text files that display information about the current page and contain links to other gopher resources. A gopher menu is loosely equivalent to an HTML document with only ``<a>`` and ``<span>`` tags. Each line in the menu has a *type* that decribes what kind of resource it links to (text, binary, html, telnet, etc.).\n\nFlask-Gopher provides several helper methods for constructing gopher menu lines:\n\n| Method        | Link Descriptor     | Meaning  |\n| ------------- | ------------------- | -------- |\n| menu.text | 0 | Plain text file |\n| menu.dir | 1 | Gopher menu |\n| menu.ccso | 2 | CCSO database; other databases |\n| menu.error | 3 | Error message |\n| menu.binhex | 4 | Macintosh BinHex file |\n| menu.archive | 5 | Archive file (zip, tar, gzip) |\n| menu.uuencoded | 6 | UUEncoded file |\n| menu.query | 7 | Search query |\n| menu.telnet | 8 | Telnet session |\n| menu.bin | 9 | Binary file |\n| menu.gif | g | GIF format graphics file |\n| menu.image | I | Other Image file |\n| menu.doc | d | Word processing document (ps, pdf, doc) |\n| menu.sound | s | Sound file |\n| menu.video | ; | Video file |\n| menu.info | i | Information line |\n| menu.title | i | Title line |\n| menu.html | h | HTML document |\n\nMost of these methods require a text description for the link, and will accept a path selector and a host/port. They return a line of text that has been pre-formatted for a gopher menu. You can then pass all of the lines along into ``gopher.render_menu()`` to build the response body.\n\n```python\n@app.route('/')\ndef index():\n    return gopher.render_menu(\n        # Link to an internal gopher menu\n        gopher.menu.dir('Home', '/'),\n\n        # Link to an external gopher menu\n        gopher.menu.dir('XKCD comics', '/fun/xkcd', host='gopher.floodgap.com', port=70),\n\n        # Link to a static file, using flask.url_for() to build a relative path\n        gopher.menu.image('Picture of a cat', url_for('static', filename='cat.png')),\n\n        # Link to an external web page\n        gopher.menu.html('Project source', 'https://github.com/michael-lazar/flask-gopher'),\n\n        # A text info line\n        gopher.menu.info('This is informational text'),\n\n        # Plain text will be converted into info lines\n        \"\\n    There's no place\\n    like ::1\\n\",\n\n        # You can also format your links manually\n        \"0About this page\\t/about.txt\\t127.0.0.1\\t8007\")\n```\n\nHere's what the rendered menu looks like as plain text:\n\n```\n$ curl gopher://localhost:8007\n1Home\t/\t127.0.0.1\t8007\n1XKCD comics\t/fun/xkcd\tgopher.floodgap.com\t70\nIPicture of a cat\t/static/cat.png\t127.0.0.1\t8007\nhProject source\tURL:https://github.com/michael-lazar/flask-gopher\t127.0.0.1\t8007\niThis is informational text\tfake\texample.com\t0\ni \tfake\texample.com\t0\ni    There's no place\tfake\texample.com\t0\ni    like ::1\tfake\texample.com\t0\ni \tfake\texample.com\t0\n0About this page\t/about.txt\t127.0.0.1\t8007\n```\n\nAnd here's what it looks like inside of a gopher client:\n\n<p align=\"center\">\n  <img alt=\"gopher\" src=\"resources/example_menu.png\"/>\n</p>\n\n## Using Templates\n\nYou can use Flask's Jinja2 templating engine to layout gopher menus. Flask-Gopher attaches ``gopher`` to the template namespace so you can access the menu helper functions. The recommended naming convention for gopher template files is to add a *.gopher* suffix. An example template file is shown below:\n\n**templates/example_menu.gopher**\n```\n{{ 'Centered Title' | underline('-') | center }}\n\n{{ gopher.menu.dir('Home', url_for('index')) }}\n\nHello from my gopher template!\nYour IP address is {{ request.remote_addr }}\n\n{{ '_' * gopher.width }}\n{{ ('Served by ' + request.environ['SERVER_SOFTWARE']) | rjust }}\n```\n\nCall ``gopher.render_menu_template()`` from inside of your route to compile the template into a gopher menu.\n\n```python\n@app.route('/')\ndef index():\n    return gopher.render_menu_template('example_menu.gopher')\n```\n\n<p align=\"center\">\n  <img alt=\"gopher\" src=\"resources/example_template.png\"/>\n</p>\n\n\n## Gopher and WSGI\n\nPython's WSGI (Web Server Gateway Interface) is an established API that defines how python web servers (gunicorn, mod_wsgi, etc) communicate with application frameworks (Flask, Django, etc). It defines a clean boundary between low-level socket and request handling, and high-level application logic.\n\nWSGI was designed to be a very simple and flexible API, but at its heart it's built around HTTP requests. As such, it incorperates some HTTP specific components like request/response headers and status codes. Gopher is more simplistic and doesn't use these components. Here's an example of the difference in fetching a document with the two protocols:\n\n<table>\n<tr><th colspan=2>HTTP</th><th colspan=2>Gopher</th></tr>\n<tr><th>request</th><th>response</th><th>request</th><th>response</th></tr>\n<tr>\n<td width=\"20%\"><pre>\nGET /path HTTP/1.1\nAccept: text/plain\nAccept-Charset: utf-8\n...more headers\n</pre></td>\n<td width=\"20%\"><pre>\nHTTP/1.1 200 OK\nServer: Apache\nContent-Type: text/html\n...more headers<br>\n(body)\n</pre></td>\n<td width=\"20%\"><pre>/path\\r\\n</pre></td>\n<td width=\"20%\"><pre>(body)</pre></td>\n</tr></table>\n\nIn order to resolve the differences between gopher and HTTP, **Flask-Gopher** implements a custom ``GopherRequestHandler``. The handler hooks into the WSGI server (``werkzeug.BaseWSGIServer``). It reads the first line of every TCP connection and determines which protocol the client is attempting to use. If the client is using gopher, the following assumptions are made:\n\n- Set the request's *REQUEST_METHOD* to ``GET``\n- Set the request's *SERVER_PROTOCOL* (e.g. *HTTP/1.1*) to ``gopher``\n- Set the request's *wsgi.url_scheme* (e.g. *https*)  to ``gopher``\n- Discard the response status line\n- Discard all response headers\n\nDoing this makes a gopher connection *appear* like a normal HTTP request from the perspective of the WSGI application. It also provides metadata hooks that can be accessed from the Flask request. For example, you can respond the the request differently depending on which protocol is being used:\n\n```python\n@app.route('/')\ndef index():\n    if flask.request.scheme == 'gopher':\n        return \"iThis was a gopher request\\tfake\\texample.com\\t0\\r\\n\"\n    else:\n        return \"<html><body>This was an HTTP request</body></html>\" \n```\n\n## TLS Support\n\nThere were never any official guidelines released on how to establish secure connections over gopher. There's no ``http://`` vs ``https://`` or ``port 80`` vs ``port 443`` distinction like we have in the HTTP world.  However, this topic has a growing interest within the gopher community. New gopher clients and servers are starting to experiment with varying degrees of support for TLS.\n\nFlask-Gopher solves the security problem by peeking at every incoming connection to determine if a TLS handshake is being attempted by the client. If so, the requested content will automatically be returned over a secure socket. Otherwise, the content will be returned as plain text. This scheme has the advantage of being fully backwards compatible with older gopher clients. All content is served by a single gopher server running on port 70, and clients are in control over how they want to receive it.\n\nFlask's WSGI server (like all good python WSGI servers) is designed to handle HTTPS with an \"all-or-nothing\" approach. Either TLS is turned on for all requests or it's not turned on at all. Flask-Gopher is able to overcome this limitation by slightly modifying the builtin Flask WSGI server. Here's an example of how to enable TLS support:\n\n```python\nfrom flask_gopher import make_gopher_ssl_server\n\napp = ...\n\nif __name__ == '__main__':  \n    server = make_gopher_ssl_server(\n        '0.0.0.0',\n        70,\n        app=app,\n        threaded=True,\n        request_handler=GopherRequestHandler,\n        ssl_context=(\u2018/path/to/public_cert.pem\u2019, \u2018/path/to/private_cert.pem\u2019))\n    server.serve_forever()\n```\n\nWhen TLS is enabled, the ``request.environ['SECURE']`` variable contains whether or not the current request is being made over a secure socket.\n\nLooking for a gopher client with to try this out with? Solderpunk's [VF-1](https://github.com/solderpunk/VF-1) is an excellent choice:\n\n```bash\n$ vf1 mozz.us:7005/1/demo-ssl --tls\n```\n\n## Gopher Protocol References\n\n- https://tools.ietf.org/html/rfc1436 (1993)\n- https://tools.ietf.org/html/rfc4266 (2005)\n- https://tools.ietf.org/html/draft-matavka-gopher-ii-03 (2015)\n- https://www.w3.org/Addressing/URL/4_1_Gopher+.html\n\nAn interesting side note, the python standard library used to contain its own gopher module. It was deprecated in 2.5, and removed in 2.6. (<em>https://www.python.org/dev/peps/pep-0004/</em>)\n\n\n>     Module name:   gopherlib\n>     Rationale:     The gopher protocol is not in active use anymore.\n>     Date:          1-Oct-2000.\n>     Documentation: Documented as deprecated since Python 2.5.  Removed\n>                    in Python 2.6.\n\nA reference gopher client still exists in the old python SVN trunk: https://svn.python.org/projects/python/trunk/Demo/sockets/gopher.py\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/michael-lazar/flask-gopher", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "Flask-Gopher", "package_url": "https://pypi.org/project/Flask-Gopher/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Gopher/", "project_urls": {"Homepage": "https://github.com/michael-lazar/flask-gopher"}, "release_url": "https://pypi.org/project/Flask-Gopher/2.2.1/", "requires_dist": ["Flask (>=0.11)", "pyfiglet (<=0.7.6)", "tabulate", "pyopenssl", "werkzeug (<1.0.0)"], "requires_python": "", "summary": "A Flask extension to support the Gopher Protocol", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask-Gopher</h1>\n<p align=\"center\">A <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> extension to support the <a href=\"https://en.wikipedia.org/wiki/Gopher_(protocol)\" rel=\"nofollow\">Gopher</a> protocol.</p>\n<p align=\"center\">\n  <img alt=\"gopher\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7aeabb87debe24e0221f270ed4bc8c3919d3cb0/7265736f75726365732f676f706865725f616c742e6a7067\">\n</p>\n<p align=\"center\">\n  <a href=\"https://pypi.python.org/pypi/flask-gopher/\" rel=\"nofollow\">\n    <img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6515c8550604113102acb3d03b9c8bb6c196d5b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c61736b2d676f706865722e7376673f6c6162656c3d76657273696f6e\">\n  </a>\n  <a href=\"https://pypi.python.org/pypi/flask-gopher/\" rel=\"nofollow\">\n    <img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb70747ffe1d3508258ca109f65baf3b4b431d35/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e342b2d626c75652e737667\">\n  </a>\n  <a href=\"https://travis-ci.org/michael-lazar/flask-gopher\" rel=\"nofollow\">\n    <img alt=\"travis-ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31e01ead7f9efe34c5440e3c06c4edd620b95f80/68747470733a2f2f7472617669732d63692e6f72672f6d69636861656c2d6c617a61722f666c61736b2d676f706865722e7376673f6272616e63683d6d6173746572\">\n  </a>\n  <a href=\"https://coveralls.io/github/michael-lazar/flask-gopher?branch=master\" rel=\"nofollow\">\n    <img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0fe5c37f777c2a60525c6d712a36fd8c728e814/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d69636861656c2d6c617a61722f666c61736b2d676f706865722f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\">\n  </a>\n</p>\n<h2>Contents</h2>\n<ul>\n<li><a href=\"#demo\" rel=\"nofollow\">Demo</a></li>\n<li><a href=\"#about\" rel=\"nofollow\">About</a></li>\n<li><a href=\"#quickstart\" rel=\"nofollow\">Quickstart</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#building-gopher-menus\" rel=\"nofollow\">Building Gopher Menus</a></li>\n<li><a href=\"#using-templates\" rel=\"nofollow\">Using Templates</a></li>\n<li><a href=\"#gopher-and-wsgi\" rel=\"nofollow\">Gopher and WSGI</a></li>\n<li><a href=\"#tls-support\" rel=\"nofollow\">TLS Support</a></li>\n<li><a href=\"#gopher-protocol-references\" rel=\"nofollow\">Gopher Protocol References</a></li>\n</ul>\n<h2>Demo</h2>\n<p>A live demonstration of the Flask-Gopher server is available in gopherspace at the following URL:</p>\n<hr>\n<p align=\"center\">\n<b><a>gopher://mozz.us:7005</a></b><br>\n</p>\n<hr>\n<h2>About</h2>\n<p><em>What is gopher?</em></p>\n<p>Gopher is an alternative to the World Wide Web that peaked in popularity in the early 90's. There are still a handful of gopher sites maintained by enthusiasts; you can learn more about its history at <a href=\"http://gopher.floodgap.com/gopher/\" rel=\"nofollow\">floodgap</a>.</p>\n<p><em>What is flask-gopher?</em></p>\n<p>Flask-Gopher is a Flask extension that adds a thin <em>Gopher -&gt; HTTP</em> compatability layer around the built-in webserver. It allows you to build fully <a href=\"https://tools.ietf.org/html/rfc1466\" rel=\"nofollow\">RFC 1466</a> compliant gopher servers, with complete access to Flask's routing, templating engine, debugger, and more!</p>\n<p><em>Who is this for?</em></p>\n<p>I created this extension because I wanted to experiment with building dynamic gopher applications, and I felt limited by the lack of flexibility in other gopher servers. The target audience is web developers with experience using a high level web framework like Django or Ruby on Rails. You should feel comfortable writing python code and cross-referencing the official Flask documentation.</p>\n<h2>Quickstart</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">url_for</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_gopher</span> <span class=\"kn\">import</span> <span class=\"n\">GopherExtension</span><span class=\"p\">,</span> <span class=\"n\">GopherRequestHandler</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">gopher</span> <span class=\"o\">=</span> <span class=\"n\">GopherExtension</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">render_menu</span><span class=\"p\">(</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'My GopherHole'</span><span class=\"p\">),</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">(</span><span class=\"s1\">'Home'</span><span class=\"p\">,</span> <span class=\"n\">url_for</span><span class=\"p\">(</span><span class=\"s1\">'index'</span><span class=\"p\">)),</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Look Ma, it's a gopher server!\"</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n   <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"n\">request_handler</span><span class=\"o\">=</span><span class=\"n\">GopherRequestHandler</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<p>This package requires <strong>Python v3.5 or higher</strong></p>\n<pre><code>pip install flask_gopher\n</code></pre>\n<h2>Building Gopher Menus</h2>\n<p>Gopher menus are structured text files that display information about the current page and contain links to other gopher resources. A gopher menu is loosely equivalent to an HTML document with only <code>&lt;a&gt;</code> and <code>&lt;span&gt;</code> tags. Each line in the menu has a <em>type</em> that decribes what kind of resource it links to (text, binary, html, telnet, etc.).</p>\n<p>Flask-Gopher provides several helper methods for constructing gopher menu lines:</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Link Descriptor</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>menu.text</td>\n<td>0</td>\n<td>Plain text file</td>\n</tr>\n<tr>\n<td>menu.dir</td>\n<td>1</td>\n<td>Gopher menu</td>\n</tr>\n<tr>\n<td>menu.ccso</td>\n<td>2</td>\n<td>CCSO database; other databases</td>\n</tr>\n<tr>\n<td>menu.error</td>\n<td>3</td>\n<td>Error message</td>\n</tr>\n<tr>\n<td>menu.binhex</td>\n<td>4</td>\n<td>Macintosh BinHex file</td>\n</tr>\n<tr>\n<td>menu.archive</td>\n<td>5</td>\n<td>Archive file (zip, tar, gzip)</td>\n</tr>\n<tr>\n<td>menu.uuencoded</td>\n<td>6</td>\n<td>UUEncoded file</td>\n</tr>\n<tr>\n<td>menu.query</td>\n<td>7</td>\n<td>Search query</td>\n</tr>\n<tr>\n<td>menu.telnet</td>\n<td>8</td>\n<td>Telnet session</td>\n</tr>\n<tr>\n<td>menu.bin</td>\n<td>9</td>\n<td>Binary file</td>\n</tr>\n<tr>\n<td>menu.gif</td>\n<td>g</td>\n<td>GIF format graphics file</td>\n</tr>\n<tr>\n<td>menu.image</td>\n<td>I</td>\n<td>Other Image file</td>\n</tr>\n<tr>\n<td>menu.doc</td>\n<td>d</td>\n<td>Word processing document (ps, pdf, doc)</td>\n</tr>\n<tr>\n<td>menu.sound</td>\n<td>s</td>\n<td>Sound file</td>\n</tr>\n<tr>\n<td>menu.video</td>\n<td>;</td>\n<td>Video file</td>\n</tr>\n<tr>\n<td>menu.info</td>\n<td>i</td>\n<td>Information line</td>\n</tr>\n<tr>\n<td>menu.title</td>\n<td>i</td>\n<td>Title line</td>\n</tr>\n<tr>\n<td>menu.html</td>\n<td>h</td>\n<td>HTML document</td>\n</tr></tbody></table>\n<p>Most of these methods require a text description for the link, and will accept a path selector and a host/port. They return a line of text that has been pre-formatted for a gopher menu. You can then pass all of the lines along into <code>gopher.render_menu()</code> to build the response body.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">render_menu</span><span class=\"p\">(</span>\n        <span class=\"c1\"># Link to an internal gopher menu</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">(</span><span class=\"s1\">'Home'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># Link to an external gopher menu</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">dir</span><span class=\"p\">(</span><span class=\"s1\">'XKCD comics'</span><span class=\"p\">,</span> <span class=\"s1\">'/fun/xkcd'</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'gopher.floodgap.com'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">70</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># Link to a static file, using flask.url_for() to build a relative path</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"p\">(</span><span class=\"s1\">'Picture of a cat'</span><span class=\"p\">,</span> <span class=\"n\">url_for</span><span class=\"p\">(</span><span class=\"s1\">'static'</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'cat.png'</span><span class=\"p\">)),</span>\n\n        <span class=\"c1\"># Link to an external web page</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">html</span><span class=\"p\">(</span><span class=\"s1\">'Project source'</span><span class=\"p\">,</span> <span class=\"s1\">'https://github.com/michael-lazar/flask-gopher'</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># A text info line</span>\n        <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'This is informational text'</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># Plain text will be converted into info lines</span>\n        <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">    There's no place</span><span class=\"se\">\\n</span><span class=\"s2\">    like ::1</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># You can also format your links manually</span>\n        <span class=\"s2\">\"0About this page</span><span class=\"se\">\\t</span><span class=\"s2\">/about.txt</span><span class=\"se\">\\t</span><span class=\"s2\">127.0.0.1</span><span class=\"se\">\\t</span><span class=\"s2\">8007\"</span><span class=\"p\">)</span>\n</pre>\n<p>Here's what the rendered menu looks like as plain text:</p>\n<pre><code>$ curl gopher://localhost:8007\n1Home\t/\t127.0.0.1\t8007\n1XKCD comics\t/fun/xkcd\tgopher.floodgap.com\t70\nIPicture of a cat\t/static/cat.png\t127.0.0.1\t8007\nhProject source\tURL:https://github.com/michael-lazar/flask-gopher\t127.0.0.1\t8007\niThis is informational text\tfake\texample.com\t0\ni \tfake\texample.com\t0\ni    There's no place\tfake\texample.com\t0\ni    like ::1\tfake\texample.com\t0\ni \tfake\texample.com\t0\n0About this page\t/about.txt\t127.0.0.1\t8007\n</code></pre>\n<p>And here's what it looks like inside of a gopher client:</p>\n<p align=\"center\">\n  <img alt=\"gopher\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c43215644a789afc2e67cf9d474739d2912ffadf/7265736f75726365732f6578616d706c655f6d656e752e706e67\">\n</p>\n<h2>Using Templates</h2>\n<p>You can use Flask's Jinja2 templating engine to layout gopher menus. Flask-Gopher attaches <code>gopher</code> to the template namespace so you can access the menu helper functions. The recommended naming convention for gopher template files is to add a <em>.gopher</em> suffix. An example template file is shown below:</p>\n<p><strong>templates/example_menu.gopher</strong></p>\n<pre><code>{{ 'Centered Title' | underline('-') | center }}\n\n{{ gopher.menu.dir('Home', url_for('index')) }}\n\nHello from my gopher template!\nYour IP address is {{ request.remote_addr }}\n\n{{ '_' * gopher.width }}\n{{ ('Served by ' + request.environ['SERVER_SOFTWARE']) | rjust }}\n</code></pre>\n<p>Call <code>gopher.render_menu_template()</code> from inside of your route to compile the template into a gopher menu.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">gopher</span><span class=\"o\">.</span><span class=\"n\">render_menu_template</span><span class=\"p\">(</span><span class=\"s1\">'example_menu.gopher'</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n  <img alt=\"gopher\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91e82bbda6b51a95bc0e5359e9100c42a250055e/7265736f75726365732f6578616d706c655f74656d706c6174652e706e67\">\n</p>\n<h2>Gopher and WSGI</h2>\n<p>Python's WSGI (Web Server Gateway Interface) is an established API that defines how python web servers (gunicorn, mod_wsgi, etc) communicate with application frameworks (Flask, Django, etc). It defines a clean boundary between low-level socket and request handling, and high-level application logic.</p>\n<p>WSGI was designed to be a very simple and flexible API, but at its heart it's built around HTTP requests. As such, it incorperates some HTTP specific components like request/response headers and status codes. Gopher is more simplistic and doesn't use these components. Here's an example of the difference in fetching a document with the two protocols:</p>\n<table>\n<tr><th>HTTP</th><th>Gopher</th></tr>\n<tr><th>request</th><th>response</th><th>request</th><th>response</th></tr>\n<tr>\n<td><pre>\nGET /path HTTP/1.1\nAccept: text/plain\nAccept-Charset: utf-8\n...more headers\n</pre></td>\n<td><pre>\nHTTP/1.1 200 OK\nServer: Apache\nContent-Type: text/html\n...more headers<br>\n(body)\n</pre></td>\n<td><pre>/path\\r\\n</pre></td>\n<td><pre>(body)</pre></td>\n</tr></table>\n<p>In order to resolve the differences between gopher and HTTP, <strong>Flask-Gopher</strong> implements a custom <code>GopherRequestHandler</code>. The handler hooks into the WSGI server (<code>werkzeug.BaseWSGIServer</code>). It reads the first line of every TCP connection and determines which protocol the client is attempting to use. If the client is using gopher, the following assumptions are made:</p>\n<ul>\n<li>Set the request's <em>REQUEST_METHOD</em> to <code>GET</code></li>\n<li>Set the request's <em>SERVER_PROTOCOL</em> (e.g. <em>HTTP/1.1</em>) to <code>gopher</code></li>\n<li>Set the request's <em>wsgi.url_scheme</em> (e.g. <em>https</em>)  to <code>gopher</code></li>\n<li>Discard the response status line</li>\n<li>Discard all response headers</li>\n</ul>\n<p>Doing this makes a gopher connection <em>appear</em> like a normal HTTP request from the perspective of the WSGI application. It also provides metadata hooks that can be accessed from the Flask request. For example, you can respond the the request differently depending on which protocol is being used:</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">scheme</span> <span class=\"o\">==</span> <span class=\"s1\">'gopher'</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"iThis was a gopher request</span><span class=\"se\">\\t</span><span class=\"s2\">fake</span><span class=\"se\">\\t</span><span class=\"s2\">example.com</span><span class=\"se\">\\t</span><span class=\"s2\">0</span><span class=\"se\">\\r\\n</span><span class=\"s2\">\"</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"&lt;html&gt;&lt;body&gt;This was an HTTP request&lt;/body&gt;&lt;/html&gt;\"</span> \n</pre>\n<h2>TLS Support</h2>\n<p>There were never any official guidelines released on how to establish secure connections over gopher. There's no <code>http://</code> vs <code>https://</code> or <code>port 80</code> vs <code>port 443</code> distinction like we have in the HTTP world.  However, this topic has a growing interest within the gopher community. New gopher clients and servers are starting to experiment with varying degrees of support for TLS.</p>\n<p>Flask-Gopher solves the security problem by peeking at every incoming connection to determine if a TLS handshake is being attempted by the client. If so, the requested content will automatically be returned over a secure socket. Otherwise, the content will be returned as plain text. This scheme has the advantage of being fully backwards compatible with older gopher clients. All content is served by a single gopher server running on port 70, and clients are in control over how they want to receive it.</p>\n<p>Flask's WSGI server (like all good python WSGI servers) is designed to handle HTTPS with an \"all-or-nothing\" approach. Either TLS is turned on for all requests or it's not turned on at all. Flask-Gopher is able to overcome this limitation by slightly modifying the builtin Flask WSGI server. Here's an example of how to enable TLS support:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_gopher</span> <span class=\"kn\">import</span> <span class=\"n\">make_gopher_ssl_server</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>  \n    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">make_gopher_ssl_server</span><span class=\"p\">(</span>\n        <span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span>\n        <span class=\"mi\">70</span><span class=\"p\">,</span>\n        <span class=\"n\">app</span><span class=\"o\">=</span><span class=\"n\">app</span><span class=\"p\">,</span>\n        <span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">request_handler</span><span class=\"o\">=</span><span class=\"n\">GopherRequestHandler</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_context</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"err\">\u2018</span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">public_cert</span><span class=\"o\">.</span><span class=\"n\">pem</span><span class=\"err\">\u2019</span><span class=\"p\">,</span> <span class=\"err\">\u2018</span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">private_cert</span><span class=\"o\">.</span><span class=\"n\">pem</span><span class=\"err\">\u2019</span><span class=\"p\">))</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">serve_forever</span><span class=\"p\">()</span>\n</pre>\n<p>When TLS is enabled, the <code>request.environ['SECURE']</code> variable contains whether or not the current request is being made over a secure socket.</p>\n<p>Looking for a gopher client with to try this out with? Solderpunk's <a href=\"https://github.com/solderpunk/VF-1\" rel=\"nofollow\">VF-1</a> is an excellent choice:</p>\n<pre>$ vf1 mozz.us:7005/1/demo-ssl --tls\n</pre>\n<h2>Gopher Protocol References</h2>\n<ul>\n<li><a href=\"https://tools.ietf.org/html/rfc1436\" rel=\"nofollow\">https://tools.ietf.org/html/rfc1436</a> (1993)</li>\n<li><a href=\"https://tools.ietf.org/html/rfc4266\" rel=\"nofollow\">https://tools.ietf.org/html/rfc4266</a> (2005)</li>\n<li><a href=\"https://tools.ietf.org/html/draft-matavka-gopher-ii-03\" rel=\"nofollow\">https://tools.ietf.org/html/draft-matavka-gopher-ii-03</a> (2015)</li>\n<li><a href=\"https://www.w3.org/Addressing/URL/4_1_Gopher+.html\" rel=\"nofollow\">https://www.w3.org/Addressing/URL/4_1_Gopher+.html</a></li>\n</ul>\n<p>An interesting side note, the python standard library used to contain its own gopher module. It was deprecated in 2.5, and removed in 2.6. (<em><a href=\"https://www.python.org/dev/peps/pep-0004/\" rel=\"nofollow\">https://www.python.org/dev/peps/pep-0004/</a></em>)</p>\n<blockquote>\n<pre><code>Module name:   gopherlib\nRationale:     The gopher protocol is not in active use anymore.\nDate:          1-Oct-2000.\nDocumentation: Documented as deprecated since Python 2.5.  Removed\n               in Python 2.6.\n</code></pre>\n</blockquote>\n<p>A reference gopher client still exists in the old python SVN trunk: <a href=\"https://svn.python.org/projects/python/trunk/Demo/sockets/gopher.py\" rel=\"nofollow\">https://svn.python.org/projects/python/trunk/Demo/sockets/gopher.py</a></p>\n\n          </div>"}, "last_serial": 6997993, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "131d6025f79dff22b26ec303bf609375", "sha256": "355f4b26bc28f1aa4ce107c18b8ba9393805a9d1fc44c8f31b7edf7671257b1e"}, "downloads": -1, "filename": "Flask_Gopher-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "131d6025f79dff22b26ec303bf609375", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9919, "upload_time": "2018-01-05T07:11:01", "upload_time_iso_8601": "2018-01-05T07:11:01.503564Z", "url": "https://files.pythonhosted.org/packages/bb/6b/243e6b0cf9bf607a4c802fdded20ac345f149639bdb44ebaf4c3a804eb33/Flask_Gopher-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0572a7e3289a8024230b3547d4b64ca2", "sha256": "8316f8d149cd5dca81ac024b7cb7cdf927fe960935c9f1a96893d10bdb09c56b"}, "downloads": -1, "filename": "Flask-Gopher-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0572a7e3289a8024230b3547d4b64ca2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20852, "upload_time": "2018-01-05T07:11:04", "upload_time_iso_8601": "2018-01-05T07:11:04.140702Z", "url": "https://files.pythonhosted.org/packages/df/7c/e1a540d6492c483a76f87c1a28339c24cc681eb687f807264b45f6e93187/Flask-Gopher-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "e99ce1caea6cfaa424e87975a231a070", "sha256": "6251b88397eff4ea752f09f867b649e0686f44cbff6b0f3eb9cf9e58b7c28650"}, "downloads": -1, "filename": "Flask_Gopher-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e99ce1caea6cfaa424e87975a231a070", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9858, "upload_time": "2018-01-07T06:47:24", "upload_time_iso_8601": "2018-01-07T06:47:24.941234Z", "url": "https://files.pythonhosted.org/packages/fa/17/f9c0846f16f5278f4c2868276abe5e4f0b29307aef89085c7a8838ec8792/Flask_Gopher-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecf13a63d5a38daaa4de2d297d2d6618", "sha256": "99f1002771fc62f9df9b79e038c3dabcbd1b2841665ec0686df6d3d3a5facef1"}, "downloads": -1, "filename": "Flask-Gopher-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ecf13a63d5a38daaa4de2d297d2d6618", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24266, "upload_time": "2018-01-07T06:47:26", "upload_time_iso_8601": "2018-01-07T06:47:26.660130Z", "url": "https://files.pythonhosted.org/packages/d2/1e/7ef541a88176a95e6040bd1b73e0fa04bb1dbf5f85e3e213326a61757793/Flask-Gopher-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "362d43f81e07e5cfe193a71d09eb166b", "sha256": "af609b2b469ff512206de9e3517db6d25a0c6bd0ced9c5f6ecabec0ba8e69bec"}, "downloads": -1, "filename": "Flask_Gopher-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "362d43f81e07e5cfe193a71d09eb166b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20466, "upload_time": "2018-01-17T06:09:22", "upload_time_iso_8601": "2018-01-17T06:09:22.107683Z", "url": "https://files.pythonhosted.org/packages/0e/5d/81dca6a963f5cec44e3bd8a35584d07d7794e603ac8f90e29f718e2771c9/Flask_Gopher-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc1c3d663f5b6888ee641594c9eb8a34", "sha256": "310397e95d70ff47ab21624f4823ce2e1440200748969255c88a55223688256f"}, "downloads": -1, "filename": "Flask-Gopher-2.0.0.tar.gz", "has_sig": false, "md5_digest": "fc1c3d663f5b6888ee641594c9eb8a34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31664, "upload_time": "2018-01-17T06:09:24", "upload_time_iso_8601": "2018-01-17T06:09:24.213802Z", "url": "https://files.pythonhosted.org/packages/52/04/c55b120d28d4885a73f3096725d9f33510877c7da57e29a259f90f10f8a2/Flask-Gopher-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "e4a777e45d125c64a91bf4d36b95ea55", "sha256": "1411bf88c06b7313397777c427b22664b91238851deb9cf9a9ae6f6e801d4032"}, "downloads": -1, "filename": "Flask_Gopher-2.1.0-py3.7.egg", "has_sig": false, "md5_digest": "e4a777e45d125c64a91bf4d36b95ea55", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 37780, "upload_time": "2019-04-10T17:14:43", "upload_time_iso_8601": "2019-04-10T17:14:43.677121Z", "url": "https://files.pythonhosted.org/packages/50/9e/461534ca8c27dca681097b51537f52fb1a4a914a41215bbaa1d53dba4386/Flask_Gopher-2.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc672a042a00127d5f2c5c6143aa49a5", "sha256": "2bb0cbe08e2969665f69a5669ccdd2d73769272f686dd92b97ea8e0abd08682a"}, "downloads": -1, "filename": "Flask_Gopher-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bc672a042a00127d5f2c5c6143aa49a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30658, "upload_time": "2019-01-19T04:42:19", "upload_time_iso_8601": "2019-01-19T04:42:19.193903Z", "url": "https://files.pythonhosted.org/packages/0d/ef/b0fcf30523dd5affef89605476929e40e1798588ca1584ea4a17603c4273/Flask_Gopher-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b2b4a57031725b5b2f88f7d90d7f386", "sha256": "6d1c47803343f51edbd6696ccb452a7320fc6320ebaf118a5ef822a3cb55efea"}, "downloads": -1, "filename": "Flask-Gopher-2.1.0.tar.gz", "has_sig": false, "md5_digest": "0b2b4a57031725b5b2f88f7d90d7f386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35640, "upload_time": "2019-01-19T04:42:20", "upload_time_iso_8601": "2019-01-19T04:42:20.523113Z", "url": "https://files.pythonhosted.org/packages/33/54/aacd51c0804f087c2268fbd05bb5236f00802a09a1c29393a446ffaac4d1/Flask-Gopher-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "ede97e3bb55765d6e249c861ddc0e7d0", "sha256": "73626b6c6787f202aae165a4b7389e8aa25d4268b1e33143654cb404aaf0e723"}, "downloads": -1, "filename": "Flask_Gopher-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ede97e3bb55765d6e249c861ddc0e7d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32398, "upload_time": "2019-04-10T17:14:40", "upload_time_iso_8601": "2019-04-10T17:14:40.878600Z", "url": "https://files.pythonhosted.org/packages/ef/a1/c7584ce578a6be2efbf4a7e396385470ed0d363319f45e848e503a785f1c/Flask_Gopher-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9232dceeba633ffb1b35dfb253d349ae", "sha256": "68c85b951a5edc441bc1d98a1da034dca57df8af0b8486dea7c28a09ccb66eae"}, "downloads": -1, "filename": "Flask-Gopher-2.1.1.tar.gz", "has_sig": false, "md5_digest": "9232dceeba633ffb1b35dfb253d349ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37590, "upload_time": "2019-04-10T17:14:42", "upload_time_iso_8601": "2019-04-10T17:14:42.431581Z", "url": "https://files.pythonhosted.org/packages/20/6c/40a5d8981ca4db4e10edc83b4e927692b882b5007217176b18f06ba7dcb3/Flask-Gopher-2.1.1.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "357939bbed875f03b2a4d75efe2f1496", "sha256": "9c2e7d9f18f3aace41ea3cae65a2d7b82eaecf34bbb4af7c7b348bbb9c355d3f"}, "downloads": -1, "filename": "Flask_Gopher-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "357939bbed875f03b2a4d75efe2f1496", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32529, "upload_time": "2020-01-11T21:43:41", "upload_time_iso_8601": "2020-01-11T21:43:41.469652Z", "url": "https://files.pythonhosted.org/packages/0c/3a/ff1ba7bffdaa79557b9fa303b51c68b7ef74308894265eb0f88529341a84/Flask_Gopher-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4cf67269b4c51adfe0343c8d5997994", "sha256": "23a1c692133c695ca82da1043ab39b78470d756f5d9d500e9a911dfe757b2b93"}, "downloads": -1, "filename": "Flask-Gopher-2.2.0.tar.gz", "has_sig": false, "md5_digest": "c4cf67269b4c51adfe0343c8d5997994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37975, "upload_time": "2020-01-11T21:43:42", "upload_time_iso_8601": "2020-01-11T21:43:42.794449Z", "url": "https://files.pythonhosted.org/packages/be/62/379d442d1df7fcf3bab7ccd164a285ef757f78c82ae6be1958b08a899cb3/Flask-Gopher-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "8233ab775699af097475b305976281c7", "sha256": "0dedeea6bff1cccc5410a98911917137f076a7f1c0e0bb0191dfc3d15aeba82d"}, "downloads": -1, "filename": "Flask_Gopher-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8233ab775699af097475b305976281c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32535, "upload_time": "2020-04-11T04:36:11", "upload_time_iso_8601": "2020-04-11T04:36:11.259045Z", "url": "https://files.pythonhosted.org/packages/88/1e/1824d425ddc2457782049a61622f24f72110274754cf5dbdd86b94da916b/Flask_Gopher-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "202fd733f22c8c0f15a2f7cd21a6478b", "sha256": "b66842a912fc70c727a62f881f19626f7d067f04cf62c676a74387fd243b05bf"}, "downloads": -1, "filename": "Flask-Gopher-2.2.1.tar.gz", "has_sig": false, "md5_digest": "202fd733f22c8c0f15a2f7cd21a6478b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38027, "upload_time": "2020-04-11T04:36:14", "upload_time_iso_8601": "2020-04-11T04:36:14.294265Z", "url": "https://files.pythonhosted.org/packages/c3/94/ab292d9fc3bc70ff2e46eef3c892b86d3e826725c4a609924d11f6ea9a15/Flask-Gopher-2.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8233ab775699af097475b305976281c7", "sha256": "0dedeea6bff1cccc5410a98911917137f076a7f1c0e0bb0191dfc3d15aeba82d"}, "downloads": -1, "filename": "Flask_Gopher-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8233ab775699af097475b305976281c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32535, "upload_time": "2020-04-11T04:36:11", "upload_time_iso_8601": "2020-04-11T04:36:11.259045Z", "url": "https://files.pythonhosted.org/packages/88/1e/1824d425ddc2457782049a61622f24f72110274754cf5dbdd86b94da916b/Flask_Gopher-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "202fd733f22c8c0f15a2f7cd21a6478b", "sha256": "b66842a912fc70c727a62f881f19626f7d067f04cf62c676a74387fd243b05bf"}, "downloads": -1, "filename": "Flask-Gopher-2.2.1.tar.gz", "has_sig": false, "md5_digest": "202fd733f22c8c0f15a2f7cd21a6478b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38027, "upload_time": "2020-04-11T04:36:14", "upload_time_iso_8601": "2020-04-11T04:36:14.294265Z", "url": "https://files.pythonhosted.org/packages/c3/94/ab292d9fc3bc70ff2e46eef3c892b86d3e826725c4a609924d11f6ea9a15/Flask-Gopher-2.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:49 2020"}