{"info": {"author": "Daniel 'Vector' Kerr", "author_email": "vector@vector.id.au", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: System :: Hardware", "Topic :: System :: Networking", "Topic :: Utilities"], "description": "# Remote I2C\n\nA SMBus class-compatible TCP proxy allowing you to host or connect to a Remote I2C\nsession with minimal effort.\n\nMy use case for writing this module is to allow me to work with I2C on a Raspberry Pi\nthat is on my network, without having to install anything that takes up too much memory\nor processing power. I serve this thin SMBus server module on the Pi, then I can develop\nas I please on my computer and interact with the I2C bus as if it was on my own machine.\n\n\n\n# Important Notes\n\nThis module was developed:\n* quickly\n* without tests\n* for the purpose of development\n\nIt is NOT:\n* a replacement for an actual local I2C connection (*particularly* for real-time comms)\n* guaranteed to be free of bugs\n* suitable for production use (unless you're happy to take your chances)\n\n\n\n# Install\n\nInstall with pip:\n\n```bash\npip install remote-i2c\n```\n\n\n\n# Example\n\n## On the I2C Host (e.g., Raspberry Pi)\n\n1. Ensure that I2C is enabled! (```sudo raspi-config```)\n1. Ensure that the user you're operating under has permission to access the I2C hardware! (e.g., part of the i2c group)\n1. Run the remote-i2c module directly with the python interpreter from the command line:\n    ```bash\n    python3 -m remote_i2c\n    ```\n1. Alternatively, run the module from a python script:\n    ```python\n    #!/usr/bin/env python3\n\n    # Import the RemoteI2CServer class\n    from remote_i2c import RemoteI2CServer\n\n    # Create the server (see docstring for additional args)\n    server = RemoteI2CServer()\n\n    # Start the server (blocks forever!)\n    server.serve()\n    ```\n\n\n## On the I2C Client (e.g., Desktop/Laptop)\n\n```python\n#!/usr/bin/env python3\n\n# Import the RemoteI2CClient class\nfrom remote_i2c import RemoteI2CClient\n\n# Connect to the I2C Host (see docstring for additional args)\nremote_i2c_host = '192.168.1.2'\nbus = RemoteI2CClient(remote_i2c_host)\nbus.connect()\n\n# Perform I2C operations as you normally would with SMBus2\naddr = 0x67\nreg = 0xf2\nvalue = bus.read_byte_data(addr, reg)\nbus.write_byte_data(addr, reg, value + 1 % 0xff)\n\n# Disconnect when you're done, if you feel the need\nbus.disconnect()\n```\n\n\n\n# Author\n\nDaniel 'Vector' Kerr (<vector@vector.id.au> | [https://vector.id.au](https://vector.id.au))\n\n\n\n# License\n\nCopyright \u00a9 2019 Daniel 'Vector' Kerr (<vector@vector.id.au>)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/vectoridau/remote-i2c", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "remote-i2c", "package_url": "https://pypi.org/project/remote-i2c/", "platform": "", "project_url": "https://pypi.org/project/remote-i2c/", "project_urls": {"Homepage": "https://gitlab.com/vectoridau/remote-i2c"}, "release_url": "https://pypi.org/project/remote-i2c/0.0.9/", "requires_dist": null, "requires_python": ">=3", "summary": "A client and server for I2C control over TCP", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Remote I2C</h1>\n<p>A SMBus class-compatible TCP proxy allowing you to host or connect to a Remote I2C\nsession with minimal effort.</p>\n<p>My use case for writing this module is to allow me to work with I2C on a Raspberry Pi\nthat is on my network, without having to install anything that takes up too much memory\nor processing power. I serve this thin SMBus server module on the Pi, then I can develop\nas I please on my computer and interact with the I2C bus as if it was on my own machine.</p>\n<h1>Important Notes</h1>\n<p>This module was developed:</p>\n<ul>\n<li>quickly</li>\n<li>without tests</li>\n<li>for the purpose of development</li>\n</ul>\n<p>It is NOT:</p>\n<ul>\n<li>a replacement for an actual local I2C connection (<em>particularly</em> for real-time comms)</li>\n<li>guaranteed to be free of bugs</li>\n<li>suitable for production use (unless you're happy to take your chances)</li>\n</ul>\n<h1>Install</h1>\n<p>Install with pip:</p>\n<pre>pip install remote-i2c\n</pre>\n<h1>Example</h1>\n<h2>On the I2C Host (e.g., Raspberry Pi)</h2>\n<ol>\n<li>Ensure that I2C is enabled! (<code>sudo raspi-config</code>)</li>\n<li>Ensure that the user you're operating under has permission to access the I2C hardware! (e.g., part of the i2c group)</li>\n<li>Run the remote-i2c module directly with the python interpreter from the command line:\n<pre>python3 -m remote_i2c\n</pre>\n</li>\n<li>Alternatively, run the module from a python script:\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n\n<span class=\"c1\"># Import the RemoteI2CServer class</span>\n<span class=\"kn\">from</span> <span class=\"nn\">remote_i2c</span> <span class=\"kn\">import</span> <span class=\"n\">RemoteI2CServer</span>\n\n<span class=\"c1\"># Create the server (see docstring for additional args)</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">RemoteI2CServer</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Start the server (blocks forever!)</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">serve</span><span class=\"p\">()</span>\n</pre>\n</li>\n</ol>\n<h2>On the I2C Client (e.g., Desktop/Laptop)</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n\n<span class=\"c1\"># Import the RemoteI2CClient class</span>\n<span class=\"kn\">from</span> <span class=\"nn\">remote_i2c</span> <span class=\"kn\">import</span> <span class=\"n\">RemoteI2CClient</span>\n\n<span class=\"c1\"># Connect to the I2C Host (see docstring for additional args)</span>\n<span class=\"n\">remote_i2c_host</span> <span class=\"o\">=</span> <span class=\"s1\">'192.168.1.2'</span>\n<span class=\"n\">bus</span> <span class=\"o\">=</span> <span class=\"n\">RemoteI2CClient</span><span class=\"p\">(</span><span class=\"n\">remote_i2c_host</span><span class=\"p\">)</span>\n<span class=\"n\">bus</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Perform I2C operations as you normally would with SMBus2</span>\n<span class=\"n\">addr</span> <span class=\"o\">=</span> <span class=\"mh\">0x67</span>\n<span class=\"n\">reg</span> <span class=\"o\">=</span> <span class=\"mh\">0xf2</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">bus</span><span class=\"o\">.</span><span class=\"n\">read_byte_data</span><span class=\"p\">(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"n\">reg</span><span class=\"p\">)</span>\n<span class=\"n\">bus</span><span class=\"o\">.</span><span class=\"n\">write_byte_data</span><span class=\"p\">(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"n\">reg</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"o\">%</span> <span class=\"mh\">0xff</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Disconnect when you're done, if you feel the need</span>\n<span class=\"n\">bus</span><span class=\"o\">.</span><span class=\"n\">disconnect</span><span class=\"p\">()</span>\n</pre>\n<h1>Author</h1>\n<p>Daniel 'Vector' Kerr (<a href=\"mailto:vector@vector.id.au\">vector@vector.id.au</a> | <a href=\"https://vector.id.au\" rel=\"nofollow\">https://vector.id.au</a>)</p>\n<h1>License</h1>\n<p>Copyright \u00a9 2019 Daniel 'Vector' Kerr (<a href=\"mailto:vector@vector.id.au\">vector@vector.id.au</a>)</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n\n          </div>"}, "last_serial": 7051085, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "03a60cbd63f7125eb41edbe164057e88", "sha256": "63df4e9756296cc735b0d64ced3fb2cd20694802f7a589d045c984db2665edff"}, "downloads": -1, "filename": "remote-i2c-0.0.1.tar.gz", "has_sig": false, "md5_digest": "03a60cbd63f7125eb41edbe164057e88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4549, "upload_time": "2019-11-16T06:53:45", "upload_time_iso_8601": "2019-11-16T06:53:45.352881Z", "url": "https://files.pythonhosted.org/packages/40/9d/185cc9528a2cfc1b819207126c6f4b4caedd69b002665124259813e260c8/remote-i2c-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "65292de2652e90afbb0e7f43f79866fa", "sha256": "49887c9f707144a4f7ef0d06ebdada45b58e2271c857cd66896c1cc9188643ea"}, "downloads": -1, "filename": "remote-i2c-0.0.3.tar.gz", "has_sig": false, "md5_digest": "65292de2652e90afbb0e7f43f79866fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4554, "upload_time": "2019-11-16T06:57:20", "upload_time_iso_8601": "2019-11-16T06:57:20.138841Z", "url": "https://files.pythonhosted.org/packages/21/76/3530c42edf0cb47d97d5e369fa2326b4af4314202cb1a414b2c9e9a68a44/remote-i2c-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a25345c604efbc3cd1cda1dc5871dd84", "sha256": "6fbaa9bc6dc33895d5be8c466def6ac8513a0a953b0bd7f081aadd07c19433a1"}, "downloads": -1, "filename": "remote-i2c-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a25345c604efbc3cd1cda1dc5871dd84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4551, "upload_time": "2019-11-16T08:02:21", "upload_time_iso_8601": "2019-11-16T08:02:21.230298Z", "url": "https://files.pythonhosted.org/packages/c5/86/a2350b16aec2b8120e57a8ef51c3b967e3609088ba95bf5351dadc18a8bf/remote-i2c-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d8eeb6dbdd90be0adabf68d4a6f5f940", "sha256": "c4d0949bed2c09302c77d2567e73d34a2e531cb0cdcf066f51a8c35bec9b7309"}, "downloads": -1, "filename": "remote-i2c-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d8eeb6dbdd90be0adabf68d4a6f5f940", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4553, "upload_time": "2019-11-16T08:09:10", "upload_time_iso_8601": "2019-11-16T08:09:10.129967Z", "url": "https://files.pythonhosted.org/packages/ec/56/b3f0101523629be4af4ea1cd2d38432f39a8e71a5e8b840b83ce1fe29293/remote-i2c-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "4633ae2556d2b04a23c3bdeb73450f4a", "sha256": "0afdcdf8059b93ec2dd4aa6d35343b4e01799ba7477f75a65fed8b432f1a1b43"}, "downloads": -1, "filename": "remote-i2c-0.0.6.tar.gz", "has_sig": false, "md5_digest": "4633ae2556d2b04a23c3bdeb73450f4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4556, "upload_time": "2019-11-16T08:47:23", "upload_time_iso_8601": "2019-11-16T08:47:23.697068Z", "url": "https://files.pythonhosted.org/packages/77/14/c6ae9b9198ae5abfefea1d2c78584c5a1168386b682a9b7b1c1d9adc2d19/remote-i2c-0.0.6.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "f3760254aa8d999869b3521e37322dfe", "sha256": "a6290311217866c29526120cc5477e062f8ee6ba35aa5e83e6df4edb00a9bf12"}, "downloads": -1, "filename": "remote-i2c-0.0.9.tar.gz", "has_sig": false, "md5_digest": "f3760254aa8d999869b3521e37322dfe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4555, "upload_time": "2020-04-19T01:50:38", "upload_time_iso_8601": "2020-04-19T01:50:38.618464Z", "url": "https://files.pythonhosted.org/packages/9e/9a/c20e85dfb55e6034362cbe03075c1f29001598041c40e9111c5a3073b046/remote-i2c-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3760254aa8d999869b3521e37322dfe", "sha256": "a6290311217866c29526120cc5477e062f8ee6ba35aa5e83e6df4edb00a9bf12"}, "downloads": -1, "filename": "remote-i2c-0.0.9.tar.gz", "has_sig": false, "md5_digest": "f3760254aa8d999869b3521e37322dfe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4555, "upload_time": "2020-04-19T01:50:38", "upload_time_iso_8601": "2020-04-19T01:50:38.618464Z", "url": "https://files.pythonhosted.org/packages/9e/9a/c20e85dfb55e6034362cbe03075c1f29001598041c40e9111c5a3073b046/remote-i2c-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:52 2020"}