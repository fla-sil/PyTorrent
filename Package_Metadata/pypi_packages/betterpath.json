{"info": {"author": "Corbin Simpson", "author_email": "cds@corbinsimpson.com", "bugtrack_url": null, "classifiers": [], "description": "==========\nbetterpath\n==========\n\nbetterpath, or \"bp\", is an adaptation of the classic Twisted ``FilePath`` type\nand interface. bp provides a simple, robust, well-tested object abstraction\nover file paths, generalizing the concept of file paths beyond filesystems.\n\nFile Paths\n==========\n\nbp exposes an interface, ``bp.abstract.IFilePath``, for file paths, and\nprovides the following concrete implementations:\n\n * ``bp.filepath.FilePath``, for the root filesystem\n * ``bp.zippath.ZipPath``, for ZIP archives\n * ``bp.memory.MemoryPath``, for in-memory temporary filesystems\n\nIn addition, there are combining abstract file paths which can be wrapped\naround other file paths:\n\n * ``bp.readonly.ReadOnlyPath``, for read-only filesystems\n\nAPI documentation is available at http://betterpath.rtfd.org/.\n\nVs. the Competition\n===================\n\nos.path\n-------\n\nThe venerable champ, ``os.path`` has been the cause of (and solution to) most\nof Python's path problems over the years.\n\nPros\n~~~~\n\n* In the standard library\n\nCons\n~~~~\n\n* Unsafe\n* Verbose\n* Operates on strs\n* No interfaces or ABCs for functionality\n* Only covers the root filesystem\n\npathlib\n-------\n\npathlib hopes to carve a path towards greatness through PEP 428.\n\nPros\n~~~~\n\n* Convenient ``__div__()`` overloading\n\nCons\n~~~~\n\n* No interfaces or ABCs for functionality\n* Only covers the root filesystem\n\nExamples\n========\n\nSaving Data to Disk\n-------------------\n\nThe Old Way\n~~~~~~~~~~~\n\n::\n\n    def save(base, fragments, data):\n        # `fragments` could contain unsafe paths!\n        if \"..\" in fragments or \".\" in fragments:\n            raise ValueError(\"Unsafe paths!\")\n        path = os.path.join(os.path.abspath(base), os.sep.join(fragments))\n        # Alternatively: path = os.path.join(os.path.abspath(base), *fragments)\n        # I hope that this doesn't fail mid-write! Also, did the directories\n        # exist? I think so, yes.\n        with open(path, \"wb\") as handle:\n            handle.write(data)\n\nThe New Way\n~~~~~~~~~~~\n\n::\n\n    def save(base, fragments, data):\n        path = base.descendant(fragments)        \n        path.parent().makeDirs()\n        path.setContent(data)\n\nChangelog\n=========\n\n0.2\n---\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/MostAwesomeDude/betterpath", "keywords": null, "license": "MIT/X11", "maintainer": null, "maintainer_email": null, "name": "betterpath", "package_url": "https://pypi.org/project/betterpath/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/betterpath/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/MostAwesomeDude/betterpath"}, "release_url": "https://pypi.org/project/betterpath/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Path manipulation library", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>betterpath, or \u201cbp\u201d, is an adaptation of the classic Twisted <tt>FilePath</tt> type\nand interface. bp provides a simple, robust, well-tested object abstraction\nover file paths, generalizing the concept of file paths beyond filesystems.</p>\n<div id=\"file-paths\">\n<h2>File Paths</h2>\n<p>bp exposes an interface, <tt>bp.abstract.IFilePath</tt>, for file paths, and\nprovides the following concrete implementations:</p>\n<blockquote>\n<ul>\n<li><tt>bp.filepath.FilePath</tt>, for the root filesystem</li>\n<li><tt>bp.zippath.ZipPath</tt>, for ZIP archives</li>\n<li><tt>bp.memory.MemoryPath</tt>, for in-memory temporary filesystems</li>\n</ul>\n</blockquote>\n<p>In addition, there are combining abstract file paths which can be wrapped\naround other file paths:</p>\n<blockquote>\n<ul>\n<li><tt>bp.readonly.ReadOnlyPath</tt>, for read-only filesystems</li>\n</ul>\n</blockquote>\n<p>API documentation is available at <a href=\"http://betterpath.rtfd.org/\" rel=\"nofollow\">http://betterpath.rtfd.org/</a>.</p>\n</div>\n<div id=\"vs-the-competition\">\n<h2>Vs. the Competition</h2>\n<div id=\"os-path\">\n<h3>os.path</h3>\n<p>The venerable champ, <tt>os.path</tt> has been the cause of (and solution to) most\nof Python\u2019s path problems over the years.</p>\n<div id=\"pros\">\n<h4>Pros</h4>\n<ul>\n<li>In the standard library</li>\n</ul>\n</div>\n<div id=\"cons\">\n<h4>Cons</h4>\n<ul>\n<li>Unsafe</li>\n<li>Verbose</li>\n<li>Operates on strs</li>\n<li>No interfaces or ABCs for functionality</li>\n<li>Only covers the root filesystem</li>\n</ul>\n</div>\n</div>\n<div id=\"pathlib\">\n<h3>pathlib</h3>\n<p>pathlib hopes to carve a path towards greatness through PEP 428.</p>\n<div id=\"id1\">\n<h4>Pros</h4>\n<ul>\n<li>Convenient <tt>__div__()</tt> overloading</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>Cons</h4>\n<ul>\n<li>No interfaces or ABCs for functionality</li>\n<li>Only covers the root filesystem</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<h2 id=\"saving-data-to-disk\"><span class=\"section-subtitle\">Saving Data to Disk</span></h2>\n<div id=\"the-old-way\">\n<h3>The Old Way</h3>\n<pre>def save(base, fragments, data):\n    # `fragments` could contain unsafe paths!\n    if \"..\" in fragments or \".\" in fragments:\n        raise ValueError(\"Unsafe paths!\")\n    path = os.path.join(os.path.abspath(base), os.sep.join(fragments))\n    # Alternatively: path = os.path.join(os.path.abspath(base), *fragments)\n    # I hope that this doesn't fail mid-write! Also, did the directories\n    # exist? I think so, yes.\n    with open(path, \"wb\") as handle:\n        handle.write(data)\n</pre>\n</div>\n<div id=\"the-new-way\">\n<h3>The New Way</h3>\n<pre>def save(base, fragments, data):\n    path = base.descendant(fragments)\n    path.parent().makeDirs()\n    path.setContent(data)\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id3\"><span class=\"section-subtitle\">0.2</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1417039, "releases": {"0.1.dev26": [], "0.2": [{"comment_text": "", "digests": {"md5": "cb5b3eded1ce49667bc50d41d3c7c783", "sha256": "ca1f92a31733be158ac97c729b0f82181355ec9727493684f8a227d8797041ab"}, "downloads": -1, "filename": "betterpath-0.2.tar.gz", "has_sig": false, "md5_digest": "cb5b3eded1ce49667bc50d41d3c7c783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33005, "upload_time": "2013-12-29T18:26:53", "upload_time_iso_8601": "2013-12-29T18:26:53.041322Z", "url": "https://files.pythonhosted.org/packages/3c/60/9362a248c24527648cfc8fe1145ac258dcc8d584fee6daaf8a6e2f51df16/betterpath-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "eb125d8f366e9f9a838dd9b78d798954", "sha256": "c3524949c83d5cdf784c48df045da6fff236cc19fd0dbaa90228d39b43a5ed79"}, "downloads": -1, "filename": "betterpath-0.2.1.tar.gz", "has_sig": false, "md5_digest": "eb125d8f366e9f9a838dd9b78d798954", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33089, "upload_time": "2013-12-29T18:31:05", "upload_time_iso_8601": "2013-12-29T18:31:05.531743Z", "url": "https://files.pythonhosted.org/packages/4a/e6/13250348def6504bd59274bf886e418208899987528fd42ab7e71f90457a/betterpath-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f8242ab4477ef923a4996716fffa467b", "sha256": "e8d04e884d404dae3e622248e1b9c4b80876e21cd1fbdd76fd50ee0d2cb26fe4"}, "downloads": -1, "filename": "betterpath-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f8242ab4477ef923a4996716fffa467b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38073, "upload_time": "2015-02-10T01:36:15", "upload_time_iso_8601": "2015-02-10T01:36:15.074429Z", "url": "https://files.pythonhosted.org/packages/74/60/be35047cf73c77b76aeee08de0a729b745f9f3e6c7393670115f52597e81/betterpath-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8242ab4477ef923a4996716fffa467b", "sha256": "e8d04e884d404dae3e622248e1b9c4b80876e21cd1fbdd76fd50ee0d2cb26fe4"}, "downloads": -1, "filename": "betterpath-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f8242ab4477ef923a4996716fffa467b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38073, "upload_time": "2015-02-10T01:36:15", "upload_time_iso_8601": "2015-02-10T01:36:15.074429Z", "url": "https://files.pythonhosted.org/packages/74/60/be35047cf73c77b76aeee08de0a729b745f9f3e6c7393670115f52597e81/betterpath-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:42 2020"}