{"info": {"author": "Sidharth Mudgal, Han Li", "author_email": "uwmagellan@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "DeepMatcher\n=============\n\n.. image:: https://travis-ci.org/anhaidgroup/deepmatcher.svg?branch=master\n    :target: https://travis-ci.org/anhaidgroup/deepmatcher\n\n.. image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\n    :target: https://opensource.org/licenses/BSD-3-Clause\n\nDeepMatcher is a Python package for performing entity and text matching using deep learning.\nIt provides built-in neural networks and utilities that enable you to train and apply\nstate-of-the-art deep learning models for entity matching in less than 10 lines of code.\nThe models are also easily customizable - the modular design allows any subcomponent to be\naltered or swapped out for a custom implementation.\n\nAs an example, given labeled tuple pairs such as the following:\n\n.. image:: https://raw.githubusercontent.com/anhaidgroup/deepmatcher/master/docs/source/_static/match_input_ex.png\n\nDeepMatcher uses labeled tuple pairs and trains a neural network to perform matching, i.e., to\npredict match / non-match labels. The trained network can then be used to obtain labels for\nunlabeled tuple pairs.\n\nPaper and Data\n****************\n\nFor details on the architecture of the models used, take a look at our paper `Deep\nLearning for Entity Matching`_ (SIGMOD '18). All public datasets used in\nthe paper can be downloaded from the `datasets page <Datasets.md>`__.\n\nQuick Start: DeepMatcher in 30 seconds\n******************************************\n\nThere are four main steps in using DeepMatcher:\n\n1. Data processing: Load and process labeled training, validation and test CSV data.\n\n.. code-block:: python\n\n   import deepmatcher as dm\n   train, validation, test = dm.data.process(path='data_directory',\n       train='train.csv', validation='validation.csv', test='test.csv')\n\n2. Model definition: Specify neural network architecture. Uses the built-in hybrid\n   model (as discussed in section 4.4 of `our paper\n   <http://pages.cs.wisc.edu/~anhai/papers1/deepmatcher-sigmod18.pdf>`__) by default. Can\n   be customized to your heart's desire.\n\n.. code-block:: python\n\n   model = dm.MatchingModel()\n\n3. Model training: Train neural network.\n\n.. code-block:: python\n\n   model.run_train(train, validation, best_save_path='best_model.pth')\n\n4. Application: Evaluate model on test set and apply to unlabeled data.\n\n.. code-block:: python\n\n   model.run_eval(test)\n\n   unlabeled = dm.data.process_unlabeled(path='data_directory/unlabeled.csv', trained_model=model)\n   model.run_prediction(unlabeled)\n\nInstallation\n**************\n\nWe currently support only Python versions 3.5 and 3.6. Installing using pip is recommended:\n\n.. code-block::\n\n   pip install deepmatcher\n\nNote that during installation you may see an error message that says \"Failed building wheel for fasttextmirror\". You can safely ignore this - it does NOT mean that there are any problems with installation.\n\nTutorials\n**********\n\n**Using DeepMatcher:**\n\n1. `Getting Started`_: A more in-depth guide to help you get familiar with the basics of\n   using DeepMatcher.\n2. `Data Processing`_: Advanced guide on what data processing involves and how to\n   customize it.\n3. `Matching Models`_: Advanced guide on neural network architecture for entity matching\n   and how to customize it.\n\n**Entity Matching Workflow:**\n\n`End to End Entity Matching`_: A guide to develop a complete entity\nmatching workflow. The tutorial discusses how to use DeepMatcher with `Magellan`_ to\nperform blocking, sampling, labeling and matching to obtain matching tuple pairs from two\ntables.\n\n**DeepMatcher for other matching tasks:**\n\n`Question Answering with DeepMatcher`_: A tutorial on how to use DeepMatcher for question\nanswering. Specifically, we will look at `WikiQA`_, a benchmark dataset for the task of\nAnswer Selection.\n\nAPI Reference\n***************\n\nAPI docs `are here`_.\n\nSupport\n**********\n\nTake a look at `the FAQ <FAQ.md>`__ for common issues. If you run into any issues or have questions not answered in the FAQ,\nplease `file GitHub issues`_ and we will address them asap.\n\nThe Team\n**********\n\nDeepMatcher was developed by University of Wisconsin-Madison grad students Sidharth Mudgal\nand Han Li, under the supervision of Prof. AnHai Doan and Prof. Theodoros Rekatsinas.\n\n.. _`Deep Learning for Entity Matching`: http://pages.cs.wisc.edu/~anhai/papers1/deepmatcher-sigmod18.pdf\n.. _`Prof. AnHai Doan's data repository`: https://sites.google.com/site/anhaidgroup/useful-stuff/data\n.. _`Magellan`: https://sites.google.com/site/anhaidgroup/projects/magellan\n.. _`Getting Started`: https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/getting_started.ipynb\n.. _`Data Processing`: https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/data_processing.ipynb\n.. _`Matching Models`: https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/matching_models.ipynb\n.. _`End to End Entity Matching`: https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/end_to_end_em.ipynb\n.. _`are here`: https://anhaidgroup.github.io/deepmatcher/html/\n.. _`Question Answering with DeepMatcher`: https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/question_answering.ipynb\n.. _`WikiQA`: https://aclweb.org/anthology/D15-1237\n.. _`file GitHub issues`: https://github.com/anhaidgroup/deepmatcher/issues", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://deepmatcher.ml", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "deepmatcher", "package_url": "https://pypi.org/project/deepmatcher/", "platform": "", "project_url": "https://pypi.org/project/deepmatcher/", "project_urls": {"Homepage": "http://deepmatcher.ml"}, "release_url": "https://pypi.org/project/deepmatcher/0.1.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A deep learning package for entity matching", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/anhaidgroup/deepmatcher\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/anhaidgroup/deepmatcher.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b46d1f03d4eee982b794ba2771ed345ea6d2a44/68747470733a2f2f7472617669732d63692e6f72672f616e6861696467726f75702f646565706d6174636865722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110fcca60a43a8ea37b1a5bda616e639325f2f30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230332d2d436c617573652d626c75652e737667\"></a>\n<p>DeepMatcher is a Python package for performing entity and text matching using deep learning.\nIt provides built-in neural networks and utilities that enable you to train and apply\nstate-of-the-art deep learning models for entity matching in less than 10 lines of code.\nThe models are also easily customizable - the modular design allows any subcomponent to be\naltered or swapped out for a custom implementation.</p>\n<p>As an example, given labeled tuple pairs such as the following:</p>\n<img alt=\"https://raw.githubusercontent.com/anhaidgroup/deepmatcher/master/docs/source/_static/match_input_ex.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/485c2f12e7a86064d762d93e92abdfb5dc46ba2a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e6861696467726f75702f646565706d6174636865722f6d61737465722f646f63732f736f757263652f5f7374617469632f6d617463685f696e7075745f65782e706e67\">\n<p>DeepMatcher uses labeled tuple pairs and trains a neural network to perform matching, i.e., to\npredict match / non-match labels. The trained network can then be used to obtain labels for\nunlabeled tuple pairs.</p>\n<div id=\"paper-and-data\">\n<h2>Paper and Data</h2>\n<p>For details on the architecture of the models used, take a look at our paper <a href=\"http://pages.cs.wisc.edu/~anhai/papers1/deepmatcher-sigmod18.pdf\" rel=\"nofollow\">Deep\nLearning for Entity Matching</a> (SIGMOD \u201818). All public datasets used in\nthe paper can be downloaded from the <a href=\"Datasets.md\" rel=\"nofollow\">datasets page</a>.</p>\n</div>\n<div id=\"quick-start-deepmatcher-in-30-seconds\">\n<h2>Quick Start: DeepMatcher in 30 seconds</h2>\n<p>There are four main steps in using DeepMatcher:</p>\n<ol>\n<li>Data processing: Load and process labeled training, validation and test CSV data.</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">deepmatcher</span> <span class=\"k\">as</span> <span class=\"nn\">dm</span>\n<span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"n\">validation</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">dm</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'data_directory'</span><span class=\"p\">,</span>\n    <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"s1\">'train.csv'</span><span class=\"p\">,</span> <span class=\"n\">validation</span><span class=\"o\">=</span><span class=\"s1\">'validation.csv'</span><span class=\"p\">,</span> <span class=\"n\">test</span><span class=\"o\">=</span><span class=\"s1\">'test.csv'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Model definition: Specify neural network architecture. Uses the built-in hybrid\nmodel (as discussed in section 4.4 of <a href=\"http://pages.cs.wisc.edu/~anhai/papers1/deepmatcher-sigmod18.pdf\" rel=\"nofollow\">our paper</a>) by default. Can\nbe customized to your heart\u2019s desire.</li>\n</ol>\n<pre><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">dm</span><span class=\"o\">.</span><span class=\"n\">MatchingModel</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>Model training: Train neural network.</li>\n</ol>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">run_train</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"n\">validation</span><span class=\"p\">,</span> <span class=\"n\">best_save_path</span><span class=\"o\">=</span><span class=\"s1\">'best_model.pth'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Application: Evaluate model on test set and apply to unlabeled data.</li>\n</ol>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">run_eval</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">)</span>\n\n<span class=\"n\">unlabeled</span> <span class=\"o\">=</span> <span class=\"n\">dm</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">process_unlabeled</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'data_directory/unlabeled.csv'</span><span class=\"p\">,</span> <span class=\"n\">trained_model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">run_prediction</span><span class=\"p\">(</span><span class=\"n\">unlabeled</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>We currently support only Python versions 3.5 and 3.6. Installing using pip is recommended:</p>\n<pre>pip install deepmatcher\n</pre>\n<p>Note that during installation you may see an error message that says \u201cFailed building wheel for fasttextmirror\u201d. You can safely ignore this - it does NOT mean that there are any problems with installation.</p>\n</div>\n<div id=\"tutorials\">\n<h2>Tutorials</h2>\n<p><strong>Using DeepMatcher:</strong></p>\n<ol>\n<li><a href=\"https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/getting_started.ipynb\" rel=\"nofollow\">Getting Started</a>: A more in-depth guide to help you get familiar with the basics of\nusing DeepMatcher.</li>\n<li><a href=\"https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/data_processing.ipynb\" rel=\"nofollow\">Data Processing</a>: Advanced guide on what data processing involves and how to\ncustomize it.</li>\n<li><a href=\"https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/matching_models.ipynb\" rel=\"nofollow\">Matching Models</a>: Advanced guide on neural network architecture for entity matching\nand how to customize it.</li>\n</ol>\n<p><strong>Entity Matching Workflow:</strong></p>\n<p><a href=\"https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/end_to_end_em.ipynb\" rel=\"nofollow\">End to End Entity Matching</a>: A guide to develop a complete entity\nmatching workflow. The tutorial discusses how to use DeepMatcher with <a href=\"https://sites.google.com/site/anhaidgroup/projects/magellan\" rel=\"nofollow\">Magellan</a> to\nperform blocking, sampling, labeling and matching to obtain matching tuple pairs from two\ntables.</p>\n<p><strong>DeepMatcher for other matching tasks:</strong></p>\n<p><a href=\"https://nbviewer.jupyter.org/github/anhaidgroup/deepmatcher/blob/master/examples/question_answering.ipynb\" rel=\"nofollow\">Question Answering with DeepMatcher</a>: A tutorial on how to use DeepMatcher for question\nanswering. Specifically, we will look at <a href=\"https://aclweb.org/anthology/D15-1237\" rel=\"nofollow\">WikiQA</a>, a benchmark dataset for the task of\nAnswer Selection.</p>\n</div>\n<div id=\"api-reference\">\n<h2>API Reference</h2>\n<p>API docs <a href=\"https://anhaidgroup.github.io/deepmatcher/html/\" rel=\"nofollow\">are here</a>.</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>Take a look at <a href=\"FAQ.md\" rel=\"nofollow\">the FAQ</a> for common issues. If you run into any issues or have questions not answered in the FAQ,\nplease <a href=\"https://github.com/anhaidgroup/deepmatcher/issues\" rel=\"nofollow\">file GitHub issues</a> and we will address them asap.</p>\n</div>\n<div id=\"the-team\">\n<h2>The Team</h2>\n<p>DeepMatcher was developed by University of Wisconsin-Madison grad students Sidharth Mudgal\nand Han Li, under the supervision of Prof. AnHai Doan and Prof. Theodoros Rekatsinas.</p>\n</div>\n\n          </div>"}, "last_serial": 6376562, "releases": {"0.0.1a2": [{"comment_text": "", "digests": {"md5": "195bd151e3155a18b49f0fcadeeab283", "sha256": "ef319ca202d78f8f50e525c8e6bf83ecce22e46f9b920b5eb27ea649af425c81"}, "downloads": -1, "filename": "deepmatcher-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "195bd151e3155a18b49f0fcadeeab283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33995, "upload_time": "2018-04-24T20:15:51", "upload_time_iso_8601": "2018-04-24T20:15:51.676448Z", "url": "https://files.pythonhosted.org/packages/1d/cc/326b9eb7e6fde17234cea109b7703a3719bb216b0f4b6604d3e828b2402f/deepmatcher-0.0.1a2.tar.gz", "yanked": false}], "0.1.0.post1": [{"comment_text": "", "digests": {"md5": "c15cee57cff1f004dabbef43c26a09c9", "sha256": "198b4a52a8aaf9f7f0a47582df2368b511533076cc1b81ce26aec8ca34a70da4"}, "downloads": -1, "filename": "deepmatcher-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "c15cee57cff1f004dabbef43c26a09c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 51948, "upload_time": "2018-07-08T21:54:27", "upload_time_iso_8601": "2018-07-08T21:54:27.756617Z", "url": "https://files.pythonhosted.org/packages/56/79/0b5d108fc2c8d4ac9d0917315a85578a07e797efc5bb05d5654185c86d3e/deepmatcher-0.1.0.post1.tar.gz", "yanked": false}], "0.1.0rc1": [{"comment_text": "", "digests": {"md5": "353333d0ef51647395ee4ee196f14b57", "sha256": "a20885324ca3d25f5919f2f687d6ecf116f5cef056acf3c5d3f68ebd249a8d89"}, "downloads": -1, "filename": "deepmatcher-0.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "353333d0ef51647395ee4ee196f14b57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51051, "upload_time": "2018-06-06T02:40:50", "upload_time_iso_8601": "2018-06-06T02:40:50.886058Z", "url": "https://files.pythonhosted.org/packages/a1/fb/b8f554b9d71cc497a0d7e69ac66b8611bfe6e29e0af8e838b21b1d6700d3/deepmatcher-0.1.0rc1.tar.gz", "yanked": false}], "0.1.0rc2": [{"comment_text": "", "digests": {"md5": "cf8cabef313967ae4379b9ff1c3e009a", "sha256": "8a76c754b9bd76e252093c915bbef59f844c92bf0cb99d99111ff7c5686f2a38"}, "downloads": -1, "filename": "deepmatcher-0.1.0rc2.tar.gz", "has_sig": false, "md5_digest": "cf8cabef313967ae4379b9ff1c3e009a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 51350, "upload_time": "2018-07-04T18:34:18", "upload_time_iso_8601": "2018-07-04T18:34:18.701256Z", "url": "https://files.pythonhosted.org/packages/83/03/2095f3d030a8bc09db1f3596dda4efd6a67f941175e951d2942c37aa23f4/deepmatcher-0.1.0rc2.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b01ee77453004f55f36e165b1141468f", "sha256": "86cb1b10ffcb0f2c504eece4a47a05fd873c496c30a0762b16006e5ea0cd7fa4"}, "downloads": -1, "filename": "deepmatcher-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b01ee77453004f55f36e165b1141468f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 50835, "upload_time": "2019-12-30T19:49:33", "upload_time_iso_8601": "2019-12-30T19:49:33.995996Z", "url": "https://files.pythonhosted.org/packages/76/60/8a22c3d94a1c6ebf123d6aa75f4ba5c6ddecb8fe3ac0660e7908b8aa5d11/deepmatcher-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b01ee77453004f55f36e165b1141468f", "sha256": "86cb1b10ffcb0f2c504eece4a47a05fd873c496c30a0762b16006e5ea0cd7fa4"}, "downloads": -1, "filename": "deepmatcher-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b01ee77453004f55f36e165b1141468f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 50835, "upload_time": "2019-12-30T19:49:33", "upload_time_iso_8601": "2019-12-30T19:49:33.995996Z", "url": "https://files.pythonhosted.org/packages/76/60/8a22c3d94a1c6ebf123d6aa75f4ba5c6ddecb8fe3ac0660e7908b8aa5d11/deepmatcher-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:23 2020"}