{"info": {"author": "Siddharth Prajosh", "author_email": "sprajosh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Process Timer\n=================\n\nInstallation\n------------\n\nFrom source code:\n\n`python setup.py install`\n\nFrom pypi:\n\n`pip install process-timer`\n\nUsage\n-----\n\n```py\n    import time\n    from process_timer import timeout\n\n    @timeout(5)\n    def mytest():\n        print(\"Start\")\n        for i in range(1,10):\n            time.sleep(1)\n            print(f\"{i} seconds have passed\")\n\n    if __name__ == '__main__':\n        mytest()\n```\n\nSpecify an alternate exception to raise on timeout:\n\n```py\n    import time\n    from process_timer import timeout\n\n    @timeout(5, timeout_exception=StopIteration)\n    def mytest():\n        print(\"Start\")\n        for i in range(1,10):\n            time.sleep(1)\n            print(f\"{i} seconds have passed\")\n\n    if __name__ == '__main__':\n        mytest()\n```\n\nMultithreading\n--------------\n\nBy default, timeout-decorator uses signals to limit the execution time\nof the given function. This appoach does not work if your function is\nexecuted not in a main thread (for example if it's a worker thread of\nthe web application). There is alternative timeout strategy for this\ncase - by using multiprocessing. To use it, just pass\n``use_signals=False`` to the timeout decorator function:\n\n```py\n    import time\n    from process_timer import timeout\n\n    @timeout(5, use_signals=False)\n    def mytest():\n        print(\"Start\")\n        for i in range(1,10):\n            time.sleep(1)\n            print(f\"{i} seconds have passed\")\n\n    if __name__ == '__main__':\n        mytest()\n```\n\n>_**Warning**_\n    Make sure that in case of multiprocessing strategy for timeout, your function does not return objects which cannot\n    be pickled, otherwise it will fail at marshalling it between master and child processes.\n\nAcknowledgement\n---------------\n\n<ul>Timeout Decorator - https://github.com/pnpnpn/timeout-decorator</ul>\n<ul>http://www.saltycrane.com/blog/2010/04/using-python-timeout-decorator-uploading-s3/</ul>\n<ul>https://code.google.com/p/verse-quiz/source/browse/trunk/timeout.py</ul>\n\nContribute\n----------\n\nI would love for you to fork and send me pull request for this project.\nPlease contribute.\n\nLicense\n-------\n\nThis software is licensed under the [MIT license](http://en.wikipedia.org/wiki/MIT_License)\n\nSee [License file](https://github.com/sprajosh/process-timer/blob/master/LICENSE.txt)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sprajosh/process-timer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "process-timer", "package_url": "https://pypi.org/project/process-timer/", "platform": "", "project_url": "https://pypi.org/project/process-timer/", "project_urls": {"Homepage": "https://github.com/sprajosh/process-timer"}, "release_url": "https://pypi.org/project/process-timer/1.1.1/", "requires_dist": ["billiard"], "requires_python": "", "summary": "Celery Timeout decorator", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Process Timer</h1>\n<h2>Installation</h2>\n<p>From source code:</p>\n<p><code>python setup.py install</code></p>\n<p>From pypi:</p>\n<p><code>pip install process-timer</code></p>\n<h2>Usage</h2>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">time</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">process_timer</span> <span class=\"kn\">import</span> <span class=\"n\">timeout</span>\n\n    <span class=\"nd\">@timeout</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mytest</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Start\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> seconds have passed\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"n\">mytest</span><span class=\"p\">()</span>\n</pre>\n<p>Specify an alternate exception to raise on timeout:</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">time</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">process_timer</span> <span class=\"kn\">import</span> <span class=\"n\">timeout</span>\n\n    <span class=\"nd\">@timeout</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">timeout_exception</span><span class=\"o\">=</span><span class=\"ne\">StopIteration</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mytest</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Start\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> seconds have passed\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"n\">mytest</span><span class=\"p\">()</span>\n</pre>\n<h2>Multithreading</h2>\n<p>By default, timeout-decorator uses signals to limit the execution time\nof the given function. This appoach does not work if your function is\nexecuted not in a main thread (for example if it's a worker thread of\nthe web application). There is alternative timeout strategy for this\ncase - by using multiprocessing. To use it, just pass\n<code>use_signals=False</code> to the timeout decorator function:</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">time</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">process_timer</span> <span class=\"kn\">import</span> <span class=\"n\">timeout</span>\n\n    <span class=\"nd\">@timeout</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">use_signals</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mytest</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Start\"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> seconds have passed\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"n\">mytest</span><span class=\"p\">()</span>\n</pre>\n<blockquote>\n<p><em><strong>Warning</strong></em>\nMake sure that in case of multiprocessing strategy for timeout, your function does not return objects which cannot\nbe pickled, otherwise it will fail at marshalling it between master and child processes.</p>\n</blockquote>\n<h2>Acknowledgement</h2>\n<ul>Timeout Decorator - https://github.com/pnpnpn/timeout-decorator</ul>\n<ul>http://www.saltycrane.com/blog/2010/04/using-python-timeout-decorator-uploading-s3/</ul>\n<ul>https://code.google.com/p/verse-quiz/source/browse/trunk/timeout.py</ul>\n<h2>Contribute</h2>\n<p>I would love for you to fork and send me pull request for this project.\nPlease contribute.</p>\n<h2>License</h2>\n<p>This software is licensed under the <a href=\"http://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT license</a></p>\n<p>See <a href=\"https://github.com/sprajosh/process-timer/blob/master/LICENSE.txt\" rel=\"nofollow\">License file</a></p>\n\n          </div>"}, "last_serial": 6587687, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "8c919dcaf17f96ff8cbed420f7127c76", "sha256": "07b28d920d2c1f5d9f1560fd34eaf553209214bd940aadfe9830fa119a08f475"}, "downloads": -1, "filename": "process_timer-1.1-py3.6.egg", "has_sig": false, "md5_digest": "8c919dcaf17f96ff8cbed420f7127c76", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 8154, "upload_time": "2020-02-07T09:36:27", "upload_time_iso_8601": "2020-02-07T09:36:27.122798Z", "url": "https://files.pythonhosted.org/packages/b6/50/f5ee803fa35c0eaf500e8db843ac79c89cc72e8124c8f37bfb5ba2afd2b5/process_timer-1.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb44287a1bb64d8a2b9eab81c3c06d33", "sha256": "012858590637418fa0596fc58e9a65e1e7c3d18f80f188a9c2d595b397f13762"}, "downloads": -1, "filename": "process_timer-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb44287a1bb64d8a2b9eab81c3c06d33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5618, "upload_time": "2020-02-07T09:53:09", "upload_time_iso_8601": "2020-02-07T09:53:09.939746Z", "url": "https://files.pythonhosted.org/packages/a9/70/f8f10f2aae14b21eda5aa3f129151ff71e5a58f6447ca8fab9472980b766/process_timer-1.1-py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "cb2757f44b9563c033a0c2419fcf6287", "sha256": "24199f6a2cf61de93b24435f9aa1f408cb494165a67a77724441a0de51aef408"}, "downloads": -1, "filename": "process_timer-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb2757f44b9563c033a0c2419fcf6287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5641, "upload_time": "2020-02-07T10:13:02", "upload_time_iso_8601": "2020-02-07T10:13:02.202271Z", "url": "https://files.pythonhosted.org/packages/da/d4/c68545e7cec06bad5141387212c067316845ab03cde23d66c41f41b42575/process_timer-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "292268d8e8e8046a2e2bd380256fcde0", "sha256": "f903e0a0c212ee4580f08fbd038323b1a925c9702df60f1fda918b573638c40f"}, "downloads": -1, "filename": "process-timer-1.1.1.tar.gz", "has_sig": false, "md5_digest": "292268d8e8e8046a2e2bd380256fcde0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4406, "upload_time": "2020-02-07T10:13:03", "upload_time_iso_8601": "2020-02-07T10:13:03.964331Z", "url": "https://files.pythonhosted.org/packages/56/b2/49371c8102ad77f1d3fcc38e69e44d746abcc0a87c20f2d785a513719119/process-timer-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb2757f44b9563c033a0c2419fcf6287", "sha256": "24199f6a2cf61de93b24435f9aa1f408cb494165a67a77724441a0de51aef408"}, "downloads": -1, "filename": "process_timer-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb2757f44b9563c033a0c2419fcf6287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5641, "upload_time": "2020-02-07T10:13:02", "upload_time_iso_8601": "2020-02-07T10:13:02.202271Z", "url": "https://files.pythonhosted.org/packages/da/d4/c68545e7cec06bad5141387212c067316845ab03cde23d66c41f41b42575/process_timer-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "292268d8e8e8046a2e2bd380256fcde0", "sha256": "f903e0a0c212ee4580f08fbd038323b1a925c9702df60f1fda918b573638c40f"}, "downloads": -1, "filename": "process-timer-1.1.1.tar.gz", "has_sig": false, "md5_digest": "292268d8e8e8046a2e2bd380256fcde0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4406, "upload_time": "2020-02-07T10:13:03", "upload_time_iso_8601": "2020-02-07T10:13:03.964331Z", "url": "https://files.pythonhosted.org/packages/56/b2/49371c8102ad77f1d3fcc38e69e44d746abcc0a87c20f2d785a513719119/process-timer-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:53 2020"}