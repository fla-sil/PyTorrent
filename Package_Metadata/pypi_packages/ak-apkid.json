{"info": {"author": "Caleb Fenton & Tim Strazzere", "author_email": "rednaga@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "License :: Other/Proprietary License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Security", "Topic :: Utilities"], "description": "APKiD\n=====\n\n|Build Status| |PyPI| |PyPI - Python Version| |PyPI - Format| |PyPI -\nLicense|\n\nAPKiD gives you information about how an APK was made. It identifies\nmany compilers, packers, obfuscators, and other weird stuff. It\u2019s\n`PEiD <https://www.aldeid.com/wiki/PEiD>`__ for Android.\n\n.. figure:: https://user-images.githubusercontent.com/1356658/57322793-49be9c00-70b9-11e9-84da-1e64d9459a8a.png\n   :alt: Screen Shot 2019-05-07 at 10 55 00 AM\n\n   Screen Shot 2019-05-07 at 10 55 00 AM\n\nFor more information on what this tool can be used for, check out:\n\n-  `Android Compiler\n   Fingerprinting <http://hitcon.org/2016/CMT/slide/day1-r0-e-1.pdf>`__\n-  `Detecting Pirated and Malicious Android Apps with\n   APKiD <http://rednaga.io/2016/07/31/detecting_pirated_and_malicious_android_apps_with_apkid/>`__\n-  `APKiD: PEiD for Android\n   Apps <https://github.com/enovella/cve-bio-enovella/blob/master/slides/bheu18-enovella-APKID.pdf>`__\n\nInstalling\n==========\n\nInstallation is unfortunately a bit involved until a `pull\nrequest <https://github.com/VirusTotal/yara/pull/1073>`__ is merged in a\ndependency. Here\u2019s how you do it:\n\n.. code:: bash\n\n   git clone --recursive -b \"v3.10.0\" https://github.com/VirusTotal/yara-python.git /tmp/yara-python\n   cd /tmp/yara-python/yara \n   curl https://patch-diff.githubusercontent.com/raw/VirusTotal/yara/pull/1073.patch | git am\n   cd ..\n   python setup.py build --enable-dex\n   python setup.py install\n\nWithout this patch to Yara, the dexlib1 detection rule will fail as will\nany rule relying on string sizes.\n\nIf this patch wasn\u2019t needed, here\u2019s how you\u2019d install. First, install\n`yara-python <https://github.com/VirusTotal/yara-python>`__ with\n``--enable-dex`` to compile Yara\u2019s DEX module:\n\n.. code:: bash\n\n   # Don't use this method, for now.\n   #pip install --upgrade wheel\n   #pip wheel --wheel-dir=/tmp/yara-python --build-option=\"build\" --build-option=\"--enable-dex\" git+https://github.com/VirusTotal/yara-python.git@v3.10.0\n   #pip install --no-index --find-links=/tmp/yara-python yara-python\n\nFinally, install APKiD:\n\n.. code:: bash\n\n   pip install apkid\n\nDocker\n------\n\nYou can also run APKiD with\n`Docker <https://www.docker.com/community-edition>`__! Of course, this\nrequires that you have git and Docker installed.\n\nHere\u2019s how to use Docker:\n\n.. code:: bash\n\n   git clone https://github.com/rednaga/APKiD\n   cd APKiD/\n   docker build . -t rednaga:apkid\n   docker/apkid.sh ~/reverse/targets/android/example/example.apk\n   [+] APKiD 2.1.0 :: from RedNaga :: rednaga.io\n   [*] example.apk!classes.dex\n    |-> compiler : dx\n\nUsage\n=====\n\n::\n\n   usage: apkid [-h] [-v] [-t TIMEOUT] [-r] [--scan-depth SCAN_DEPTH]\n                [--entry-max-scan-size ENTRY_MAX_SCAN_SIZE] [--typing {magic,filename,none}] [-j]\n                [-o DIR]\n                [FILE [FILE ...]]\n\n   APKiD - Android Application Identifier v2.1.0\n\n   positional arguments:\n     FILE                                       apk, dex, or directory\n\n   optional arguments:\n     -h, --help                                 show this help message and exit\n     -v, --verbose                              log debug messages\n\n   scanning:\n     -t TIMEOUT, --timeout TIMEOUT              Yara scan timeout (in seconds)\n     -r, --recursive                            recurse into subdirectories\n     --scan-depth SCAN_DEPTH                    how deep to go when scanning nested zips\n     --entry-max-scan-size ENTRY_MAX_SCAN_SIZE  max zip entry size to scan in bytes, 0 = no limit\n     --typing {magic,filename,none}             method to decide which files to scan\n\n   output:\n     -j, --json                                 output scan results in JSON format\n     -o DIR, --output-dir DIR                   write individual results here (implies --json)\n\nSubmitting New Packers / Compilers / Obfuscators\n================================================\n\nIf you come across an APK or DEX which APKiD does not recognize, please\nopen a GitHub issue and tell us:\n\n-  what you think it is \u2013 obfuscated, packed, etc.\n-  the file hash (either MD5, SHA1, SHA256)\n\nWe are open to any type of concept you might have for \u201csomething\ninteresting\u201d to detect, so do not limit yourself solely to packers,\ncompilers or obfuscators. If there is an interesting anti-disassembler,\nanti-vm, anti-\\* trick, please make an issue.\n\nPull requests are welcome. If you\u2019re submitting a new rule, be sure to\ninclude a file hash of the APK / DEX so we can check the rule.\n\nLicense\n=======\n\nThis tool is available under a dual license: a commercial one suitable\nfor closed source projects and a GPL license that can be used in open\nsource software.\n\nDepending on your needs, you must choose one of them and follow its\npolicies. A detail of the policies and agreements for each license type\nare available in the `LICENSE.COMMERCIAL <LICENSE.COMMERCIAL>`__ and\n`LICENSE.GPL <LICENSE.GPL>`__ files.\n\nHacking\n=======\n\nIf you want to install the latest version in order to make changes,\ndevelop your own rules, and so on, simply clone this repository, compile\nthe rules, and install the package in editable mode:\n\n.. code:: bash\n\n   git clone https://github.com/rednaga/APKiD\n   cd APKiD\n   ./prep-release.py\n   pip install -e .[dev,test]\n\nIf the above doesn\u2019t work, due to permission errors dependent on your\nlocal machine and where Python has been installed, try specifying the\n``--user`` flag. This is likely needed if you\u2019re not using a virtual\nenvironment:\n\n.. code:: bash\n\n   pip install -e .[dev,test] --user\n\nIf you update any of the rules, be sure to run ``prep-release.py`` to\nrecompile them.\n\nFor Maintainers\n===============\n\nThis section is for package maintainers.\n\nTo update the PyPI package:\n\n.. code:: bash\n\n   ./prep-release.py readme\n   rm -f dist/*\n   python setup.py sdist bdist_wheel\n   twine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n\nUpdate the generated ``README.rst`` until Pandoc learns how to translate\nMarkdown with images that are links into reStructuredText:\n\n.. code:: rst\n\n   .. image:: https://travis-ci.org/rednaga/APKiD.svg?branch=master\n       :target: https://travis-ci.org/rednaga/APKiD\n\n   .. image:: https://img.shields.io/pypi/v/apkid.svg\n       :target: https://pypi.python.org/pypi/apkid\n\n   .. image:: https://img.shields.io/pypi/pyversions/apkid.svg\n       :target: https://pypi.python.org/pypi/apkid\n\n   .. image:: https://img.shields.io/pypi/format/apkid.svg\n       :target: https://pypi.python.org/pypi/apkid\n\n   .. image:: https://img.shields.io/pypi/l/apkid.svg\n       :target: https://pypi.python.org/pypi/apkid\n\nFor more information see `Packaging\nProjects <https://packaging.python.org/tutorials/packaging-projects/>`__.\n\n.. |Build Status| image:: https://travis-ci.org/rednaga/APKiD.svg?branch=master\n   :target: https://travis-ci.org/rednaga/APKiD\n.. |PyPI| image:: https://img.shields.io/pypi/v/apkid.svg\n   :target: https://pypi.org/project/apkid/\n.. |PyPI - Python Version| image:: https://img.shields.io/pypi/pyversions/apkid.svg\n   :target: https://pypi.org/project/apkid/\n.. |PyPI - Format| image:: https://img.shields.io/pypi/format/apkid.svg\n   :target: https://pypi.org/project/apkid/\n.. |PyPI - License| image:: https://img.shields.io/pypi/l/apkid.svg\n   :target: https://pypi.org/project/apkid/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rednaga/APKiD", "keywords": "android analysis reversing malware apk dex dalvik", "license": "GPL & Commercial", "maintainer": "", "maintainer_email": "", "name": "ak-apkid", "package_url": "https://pypi.org/project/ak-apkid/", "platform": "", "project_url": "https://pypi.org/project/ak-apkid/", "project_urls": {"Homepage": "https://github.com/rednaga/APKiD"}, "release_url": "https://pypi.org/project/ak-apkid/2.1.0.post1/", "requires_dist": ["ak-yara-python (==3.11.0)", "mypy ; extra == 'dev'", "pypandoc ; extra == 'dev'", "delayed-assert ; extra == 'test'", "factory-boy ; extra == 'test'", "mock ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-factoryboy ; extra == 'test'", "pytest-flask ; extra == 'test'", "pytest-runner ; extra == 'test'", "tox ; extra == 'test'"], "requires_python": "", "summary": "Android Package Identifier", "version": "2.1.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"apkid\">\n<h2>APKiD</h2>\n<p><a href=\"https://travis-ci.org/rednaga/APKiD\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97b9b506ea1a05519877b982a9c0f4c3eb958c48/68747470733a2f2f7472617669732d63692e6f72672f7265646e6167612f41504b69442e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.org/project/apkid/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2389c36a61ffd2c0f00e3399334d5965b4c7bec/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61706b69642e737667\"></a> <a href=\"https://pypi.org/project/apkid/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6005b6e694fead73db3579ec9cc8e14b66b01e0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61706b69642e737667\"></a> <a href=\"https://pypi.org/project/apkid/\" rel=\"nofollow\"><img alt=\"PyPI - Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab8baff66ecf0f69c60d04a316a36ed6dd223ec6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f61706b69642e737667\"></a> <a href=\"https://pypi.org/project/apkid/\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/641d3490d39431181c630999369ef36f19f53f50/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61706b69642e737667\"></a></p>\n<p>APKiD gives you information about how an APK was made. It identifies\nmany compilers, packers, obfuscators, and other weird stuff. It\u2019s\n<a href=\"https://www.aldeid.com/wiki/PEiD\" rel=\"nofollow\">PEiD</a> for Android.</p>\n<div>\n<img alt=\"Screen Shot 2019-05-07 at 10 55 00 AM\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7a0e27825db45c21a109a8a014eababe1fe129e/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313335363635382f35373332323739332d34396265396330302d373062392d313165392d383464612d3165363464393435396138612e706e67\">\n<p>Screen Shot 2019-05-07 at 10 55 00 AM</p>\n</div>\n<p>For more information on what this tool can be used for, check out:</p>\n<ul>\n<li><a href=\"http://hitcon.org/2016/CMT/slide/day1-r0-e-1.pdf\" rel=\"nofollow\">Android Compiler\nFingerprinting</a></li>\n<li><a href=\"http://rednaga.io/2016/07/31/detecting_pirated_and_malicious_android_apps_with_apkid/\" rel=\"nofollow\">Detecting Pirated and Malicious Android Apps with\nAPKiD</a></li>\n<li><a href=\"https://github.com/enovella/cve-bio-enovella/blob/master/slides/bheu18-enovella-APKID.pdf\" rel=\"nofollow\">APKiD: PEiD for Android\nApps</a></li>\n</ul>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Installation is unfortunately a bit involved until a <a href=\"https://github.com/VirusTotal/yara/pull/1073\" rel=\"nofollow\">pull\nrequest</a> is merged in a\ndependency. Here\u2019s how you do it:</p>\n<pre>git clone --recursive -b <span class=\"s2\">\"v3.10.0\"</span> https://github.com/VirusTotal/yara-python.git /tmp/yara-python\n<span class=\"nb\">cd</span> /tmp/yara-python/yara\ncurl https://patch-diff.githubusercontent.com/raw/VirusTotal/yara/pull/1073.patch <span class=\"p\">|</span> git am\n<span class=\"nb\">cd</span> ..\npython setup.py build --enable-dex\npython setup.py install\n</pre>\n<p>Without this patch to Yara, the dexlib1 detection rule will fail as will\nany rule relying on string sizes.</p>\n<p>If this patch wasn\u2019t needed, here\u2019s how you\u2019d install. First, install\n<a href=\"https://github.com/VirusTotal/yara-python\" rel=\"nofollow\">yara-python</a> with\n<tt><span class=\"pre\">--enable-dex</span></tt> to compile Yara\u2019s DEX module:</p>\n<pre><span class=\"c1\"># Don't use this method, for now.\n#pip install --upgrade wheel\n#pip wheel --wheel-dir=/tmp/yara-python --build-option=\"build\" --build-option=\"--enable-dex\" git+https://github.com/VirusTotal/yara-python.git@v3.10.0\n#pip install --no-index --find-links=/tmp/yara-python yara-python</span>\n</pre>\n<p>Finally, install APKiD:</p>\n<pre>pip install apkid\n</pre>\n<div id=\"docker\">\n<h3>Docker</h3>\n<p>You can also run APKiD with\n<a href=\"https://www.docker.com/community-edition\" rel=\"nofollow\">Docker</a>! Of course, this\nrequires that you have git and Docker installed.</p>\n<p>Here\u2019s how to use Docker:</p>\n<pre>git clone https://github.com/rednaga/APKiD\n<span class=\"nb\">cd</span> APKiD/\ndocker build . -t rednaga:apkid\ndocker/apkid.sh ~/reverse/targets/android/example/example.apk\n<span class=\"o\">[</span>+<span class=\"o\">]</span> APKiD <span class=\"m\">2</span>.1.0 :: from RedNaga :: rednaga.io\n<span class=\"o\">[</span>*<span class=\"o\">]</span> example.apk!classes.dex\n <span class=\"p\">|</span>-&gt; compiler : dx\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: apkid [-h] [-v] [-t TIMEOUT] [-r] [--scan-depth SCAN_DEPTH]\n             [--entry-max-scan-size ENTRY_MAX_SCAN_SIZE] [--typing {magic,filename,none}] [-j]\n             [-o DIR]\n             [FILE [FILE ...]]\n\nAPKiD - Android Application Identifier v2.1.0\n\npositional arguments:\n  FILE                                       apk, dex, or directory\n\noptional arguments:\n  -h, --help                                 show this help message and exit\n  -v, --verbose                              log debug messages\n\nscanning:\n  -t TIMEOUT, --timeout TIMEOUT              Yara scan timeout (in seconds)\n  -r, --recursive                            recurse into subdirectories\n  --scan-depth SCAN_DEPTH                    how deep to go when scanning nested zips\n  --entry-max-scan-size ENTRY_MAX_SCAN_SIZE  max zip entry size to scan in bytes, 0 = no limit\n  --typing {magic,filename,none}             method to decide which files to scan\n\noutput:\n  -j, --json                                 output scan results in JSON format\n  -o DIR, --output-dir DIR                   write individual results here (implies --json)\n</pre>\n</div>\n<div id=\"submitting-new-packers-compilers-obfuscators\">\n<h2>Submitting New Packers / Compilers / Obfuscators</h2>\n<p>If you come across an APK or DEX which APKiD does not recognize, please\nopen a GitHub issue and tell us:</p>\n<ul>\n<li>what you think it is \u2013 obfuscated, packed, etc.</li>\n<li>the file hash (either MD5, SHA1, SHA256)</li>\n</ul>\n<p>We are open to any type of concept you might have for \u201csomething\ninteresting\u201d to detect, so do not limit yourself solely to packers,\ncompilers or obfuscators. If there is an interesting anti-disassembler,\nanti-vm, anti-* trick, please make an issue.</p>\n<p>Pull requests are welcome. If you\u2019re submitting a new rule, be sure to\ninclude a file hash of the APK / DEX so we can check the rule.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This tool is available under a dual license: a commercial one suitable\nfor closed source projects and a GPL license that can be used in open\nsource software.</p>\n<p>Depending on your needs, you must choose one of them and follow its\npolicies. A detail of the policies and agreements for each license type\nare available in the <a href=\"LICENSE.COMMERCIAL\" rel=\"nofollow\">LICENSE.COMMERCIAL</a> and\n<a href=\"LICENSE.GPL\" rel=\"nofollow\">LICENSE.GPL</a> files.</p>\n</div>\n<div id=\"hacking\">\n<h2>Hacking</h2>\n<p>If you want to install the latest version in order to make changes,\ndevelop your own rules, and so on, simply clone this repository, compile\nthe rules, and install the package in editable mode:</p>\n<pre>git clone https://github.com/rednaga/APKiD\n<span class=\"nb\">cd</span> APKiD\n./prep-release.py\npip install -e .<span class=\"o\">[</span>dev,test<span class=\"o\">]</span>\n</pre>\n<p>If the above doesn\u2019t work, due to permission errors dependent on your\nlocal machine and where Python has been installed, try specifying the\n<tt><span class=\"pre\">--user</span></tt> flag. This is likely needed if you\u2019re not using a virtual\nenvironment:</p>\n<pre>pip install -e .<span class=\"o\">[</span>dev,test<span class=\"o\">]</span> --user\n</pre>\n<p>If you update any of the rules, be sure to run <tt><span class=\"pre\">prep-release.py</span></tt> to\nrecompile them.</p>\n</div>\n<div id=\"for-maintainers\">\n<h2>For Maintainers</h2>\n<p>This section is for package maintainers.</p>\n<p>To update the PyPI package:</p>\n<pre>./prep-release.py readme\nrm -f dist/*\npython setup.py sdist bdist_wheel\ntwine upload --repository-url https://upload.pypi.org/legacy/ dist/*\n</pre>\n<p>Update the generated <tt>README.rst</tt> until Pandoc learns how to translate\nMarkdown with images that are links into reStructuredText:</p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">image</span><span class=\"p\">::</span> https://travis-ci.org/rednaga/APKiD.svg?branch=master\n    <span class=\"nc\">:target:</span> https://travis-ci.org/rednaga/APKiD\n\n<span class=\"p\">..</span> <span class=\"ow\">image</span><span class=\"p\">::</span> https://img.shields.io/pypi/v/apkid.svg\n    <span class=\"nc\">:target:</span> https://pypi.python.org/pypi/apkid\n\n<span class=\"p\">..</span> <span class=\"ow\">image</span><span class=\"p\">::</span> https://img.shields.io/pypi/pyversions/apkid.svg\n    <span class=\"nc\">:target:</span> https://pypi.python.org/pypi/apkid\n\n<span class=\"p\">..</span> <span class=\"ow\">image</span><span class=\"p\">::</span> https://img.shields.io/pypi/format/apkid.svg\n    <span class=\"nc\">:target:</span> https://pypi.python.org/pypi/apkid\n\n<span class=\"p\">..</span> <span class=\"ow\">image</span><span class=\"p\">::</span> https://img.shields.io/pypi/l/apkid.svg\n    <span class=\"nc\">:target:</span> https://pypi.python.org/pypi/apkid\n</pre>\n<p>For more information see <a href=\"https://packaging.python.org/tutorials/packaging-projects/\" rel=\"nofollow\">Packaging\nProjects</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7123664, "releases": {"2.1.0.post1": [{"comment_text": "", "digests": {"md5": "402f2075d89c4359a8969ffd5e6186e4", "sha256": "6e6817ab1ce2211ad1f4e35a33dd029e41994d01e0d8e6cd901e9b1abf7ac360"}, "downloads": -1, "filename": "ak_apkid-2.1.0.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "402f2075d89c4359a8969ffd5e6186e4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 105618, "upload_time": "2020-04-28T21:39:12", "upload_time_iso_8601": "2020-04-28T21:39:12.252135Z", "url": "https://files.pythonhosted.org/packages/32/31/c177d126f6f66898bf051c802b109789f41910bd2b5071581aa38c2ed51f/ak_apkid-2.1.0.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35dcfb76111408c73dee907a7c927bc3", "sha256": "11a5adf4c4ff2a96c7691f0e1576115c0044f8ff6eceb4ad21d09abe76813281"}, "downloads": -1, "filename": "ak-apkid-2.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "35dcfb76111408c73dee907a7c927bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104712, "upload_time": "2020-04-28T21:39:14", "upload_time_iso_8601": "2020-04-28T21:39:14.093286Z", "url": "https://files.pythonhosted.org/packages/8a/0d/e0824530dafe97d7779a5f96482ab63256e1e6e3e5ba4ba76214322b7f8e/ak-apkid-2.1.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "402f2075d89c4359a8969ffd5e6186e4", "sha256": "6e6817ab1ce2211ad1f4e35a33dd029e41994d01e0d8e6cd901e9b1abf7ac360"}, "downloads": -1, "filename": "ak_apkid-2.1.0.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "402f2075d89c4359a8969ffd5e6186e4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 105618, "upload_time": "2020-04-28T21:39:12", "upload_time_iso_8601": "2020-04-28T21:39:12.252135Z", "url": "https://files.pythonhosted.org/packages/32/31/c177d126f6f66898bf051c802b109789f41910bd2b5071581aa38c2ed51f/ak_apkid-2.1.0.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35dcfb76111408c73dee907a7c927bc3", "sha256": "11a5adf4c4ff2a96c7691f0e1576115c0044f8ff6eceb4ad21d09abe76813281"}, "downloads": -1, "filename": "ak-apkid-2.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "35dcfb76111408c73dee907a7c927bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104712, "upload_time": "2020-04-28T21:39:14", "upload_time_iso_8601": "2020-04-28T21:39:14.093286Z", "url": "https://files.pythonhosted.org/packages/8a/0d/e0824530dafe97d7779a5f96482ab63256e1e6e3e5ba4ba76214322b7f8e/ak-apkid-2.1.0.post1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:12 2020"}