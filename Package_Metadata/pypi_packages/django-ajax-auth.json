{"info": {"author": "Uptick", "author_email": "dev@uptickhq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# django-xauth\n\n[![PyPI version](https://badge.fury.io/py/django-ajax-auth.svg)](https://badge.fury.io/py/django-ajax-auth)\n\nSome simple AJAX authorisation endpoints for Django.\n\n## Why?\n\nI wanted a package to integrate AJAX authorisation with Django's\nstandard authorisation views. When a request is made via AJAX it\nshould be handled as such, and when a standard request is made the\nlogin form should be rendered.\n\n\n## Installation\n\n`pip` is the easiest way to get the package:\n\n```python\npip install django-ajax-auth\n```\n\nAdd the package to your Django settings file:\n\n```python\nINSTALLED_APPS = [\n    'xauth',\n    ...\n]\n```\n\nReplace the standard authorisation URLs in your URL configuration:\n\n```python\nurlpatterns = [\n    url(r'^', include('xauth.login_ajax_urls'))\n]\n```\n\n\n## Usage\n\nNow you can either perform the usual non-AJAX GET and POST to login\nas you would normally, or POST using `application/json` encoding to\nlogin over AJAX.\n\n```javascript\nimport $ from 'jquery'\n\n$.ajax({\n  url: '/login',\n  method: 'POST',\n  contentType: 'application/json',\n  data: {\n    username: 'harry',\n    password: 'henderson123'\n  }\n})\n```\n\nSometimes you may wish to only allow AJAX logins, in which case set\n`XAUTH_AJAX` to `True` in your settings file.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uptick/django-xauth", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-ajax-auth", "package_url": "https://pypi.org/project/django-ajax-auth/", "platform": "", "project_url": "https://pypi.org/project/django-ajax-auth/", "project_urls": {"Homepage": "https://github.com/uptick/django-xauth"}, "release_url": "https://pypi.org/project/django-ajax-auth/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A simple Django application for AJAX authorisation.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-xauth<br><br>[![PyPI version](https://badge.fury.io/py/django-ajax-auth.svg)](https://badge.fury.io/py/django-ajax-auth)<br><br>Some simple AJAX authorisation endpoints for Django.<br><br>## Why?<br><br>I wanted a package to integrate AJAX authorisation with Django's<br>standard authorisation views. When a request is made via AJAX it<br>should be handled as such, and when a standard request is made the<br>login form should be rendered.<br><br><br>## Installation<br><br>`pip` is the easiest way to get the package:<br><br>```python<br>pip install django-ajax-auth<br>```<br><br>Add the package to your Django settings file:<br><br>```python<br>INSTALLED_APPS = [<br>    'xauth',<br>    ...<br>]<br>```<br><br>Replace the standard authorisation URLs in your URL configuration:<br><br>```python<br>urlpatterns = [<br>    url(r'^', include('xauth.login_ajax_urls'))<br>]<br>```<br><br><br>## Usage<br><br>Now you can either perform the usual non-AJAX GET and POST to login<br>as you would normally, or POST using `application/json` encoding to<br>login over AJAX.<br><br>```javascript<br>import $ from 'jquery'<br><br>$.ajax({<br>  url: '/login',<br>  method: 'POST',<br>  contentType: 'application/json',<br>  data: {<br>    username: 'harry',<br>    password: 'henderson123'<br>  }<br>})<br>```<br><br>Sometimes you may wish to only allow AJAX logins, in which case set<br>`XAUTH_AJAX` to `True` in your settings file.<br>\n          </div>"}, "last_serial": 3697730, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "bb29964916bc5dc1361aea2c0f201e73", "sha256": "67abb887c0eb29df95f72b871ec5dcb2d76601467cd9e436a00a072b309a7e6e"}, "downloads": -1, "filename": "django-ajax-auth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bb29964916bc5dc1361aea2c0f201e73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6740, "upload_time": "2018-03-23T06:24:47", "upload_time_iso_8601": "2018-03-23T06:24:47.397808Z", "url": "https://files.pythonhosted.org/packages/bc/05/629b97ad92dc712a22c33c97bd8227cb2ac27b4a2a5be51b549c537e6abf/django-ajax-auth-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb29964916bc5dc1361aea2c0f201e73", "sha256": "67abb887c0eb29df95f72b871ec5dcb2d76601467cd9e436a00a072b309a7e6e"}, "downloads": -1, "filename": "django-ajax-auth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bb29964916bc5dc1361aea2c0f201e73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6740, "upload_time": "2018-03-23T06:24:47", "upload_time_iso_8601": "2018-03-23T06:24:47.397808Z", "url": "https://files.pythonhosted.org/packages/bc/05/629b97ad92dc712a22c33c97bd8227cb2ac27b4a2a5be51b549c537e6abf/django-ajax-auth-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:44 2020"}