{"info": {"author": "Ajay Krishna Teja Kavuri", "author_email": "ajaykrishnateja@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Human Machine Interfaces"], "description": "Kickstart `Alexa Voice Service <https://developer.amazon.com/alexa-voice-service>`__ on ``Raspberry Pi``\n========================================================================================================\n\n.. figure:: ./docs/images/setup.jpg\n   :alt: setup\n\n   setup\n\nMotivation\n----------\n\n`Alexa team <https://github.com/alexa>`__ have put together a\nstep-by-step guide to build `Alexa Voice Service\n(AVS) <https://developer.amazon.com/alexa-voice-service>`__ on a\n``Raspberry Pi``\n`here <https://github.com/alexa/alexa-avs-sample-app/wiki/Raspberry-Pi>`__.\nAlthough the `automated install\nscript <https://github.com/alexa/alexa-avs-sample-app/blob/master/automated_install.sh>`__\nbuilds the sample apps for enabling `Alexa Voice Service\n(AVS) <https://developer.amazon.com/alexa-voice-service>`__, there are\ntwo things that you have to do manually in order to get a full\nexperience of owning an Amazon Alexa product (Echo, Dot, Look, etc):\n\n-  `run your web service, sample app and wake word\n   engine <https://github.com/alexa/alexa-avs-sample-app/wiki/Raspberry-Pi#step-7-run-your-web-service-sample-app-and-wake-word-engine>`__\n-  Enable the above apps on startup\n\nAbout\n-----\n\nA simple package that launches Alexa Voice Service without you manually\nopening three consoles. Can be launched with a simple ``shell`` command\nthat can be added to startup on a ``Raspberry Pi``.\n\nReferences\n----------\n\n-  https://python-packaging.readthedocs.io/en/latest/minimal.html#picking-a-name\n-  https://github.com/tony/libtmux", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PseudoAj/kickstart_avs", "keywords": "alexa avs raspberrypi startup launch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kickstart-avs", "package_url": "https://pypi.org/project/kickstart-avs/", "platform": "", "project_url": "https://pypi.org/project/kickstart-avs/", "project_urls": {"Homepage": "https://github.com/PseudoAj/kickstart_avs"}, "release_url": "https://pypi.org/project/kickstart-avs/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "automate avs launch on raspberry pi", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<img alt=\"setup\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f39517006d8309ce7ce6708e6a35351796df7d04/2e2f646f63732f696d616765732f73657475702e6a7067\">\n<p>setup</p>\n</div>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p><a href=\"https://github.com/alexa\" rel=\"nofollow\">Alexa team</a> have put together a\nstep-by-step guide to build <a href=\"https://developer.amazon.com/alexa-voice-service\" rel=\"nofollow\">Alexa Voice Service\n(AVS)</a> on a\n<tt>Raspberry Pi</tt>\n<a href=\"https://github.com/alexa/alexa-avs-sample-app/wiki/Raspberry-Pi\" rel=\"nofollow\">here</a>.\nAlthough the <a href=\"https://github.com/alexa/alexa-avs-sample-app/blob/master/automated_install.sh\" rel=\"nofollow\">automated install\nscript</a>\nbuilds the sample apps for enabling <a href=\"https://developer.amazon.com/alexa-voice-service\" rel=\"nofollow\">Alexa Voice Service\n(AVS)</a>, there are\ntwo things that you have to do manually in order to get a full\nexperience of owning an Amazon Alexa product (Echo, Dot, Look, etc):</p>\n<ul>\n<li><a href=\"https://github.com/alexa/alexa-avs-sample-app/wiki/Raspberry-Pi#step-7-run-your-web-service-sample-app-and-wake-word-engine\" rel=\"nofollow\">run your web service, sample app and wake word\nengine</a></li>\n<li>Enable the above apps on startup</li>\n</ul>\n</div>\n<div id=\"about\">\n<h2>About</h2>\n<p>A simple package that launches Alexa Voice Service without you manually\nopening three consoles. Can be launched with a simple <tt>shell</tt> command\nthat can be added to startup on a <tt>Raspberry Pi</tt>.</p>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"https://python-packaging.readthedocs.io/en/latest/minimal.html#picking-a-name\" rel=\"nofollow\">https://python-packaging.readthedocs.io/en/latest/minimal.html#picking-a-name</a></li>\n<li><a href=\"https://github.com/tony/libtmux\" rel=\"nofollow\">https://github.com/tony/libtmux</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3105384, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "61c8220287e776cf524bc1c97d9e13d5", "sha256": "d8a91f34851a20220898bd3e9624ab7ab66550939957703b8e05c9550e2bb621"}, "downloads": -1, "filename": "kickstart_avs-0.2.2.tar.gz", "has_sig": false, "md5_digest": "61c8220287e776cf524bc1c97d9e13d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4056275, "upload_time": "2017-08-18T05:12:26", "upload_time_iso_8601": "2017-08-18T05:12:26.619919Z", "url": "https://files.pythonhosted.org/packages/f1/48/3f85ec0af5d830ee6488492fb077a50723c1cb016c44e2e3c64b703b0ddc/kickstart_avs-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61c8220287e776cf524bc1c97d9e13d5", "sha256": "d8a91f34851a20220898bd3e9624ab7ab66550939957703b8e05c9550e2bb621"}, "downloads": -1, "filename": "kickstart_avs-0.2.2.tar.gz", "has_sig": false, "md5_digest": "61c8220287e776cf524bc1c97d9e13d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4056275, "upload_time": "2017-08-18T05:12:26", "upload_time_iso_8601": "2017-08-18T05:12:26.619919Z", "url": "https://files.pythonhosted.org/packages/f1/48/3f85ec0af5d830ee6488492fb077a50723c1cb016c44e2e3c64b703b0ddc/kickstart_avs-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:48 2020"}