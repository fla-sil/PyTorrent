{"info": {"author": "Emanuele Di Giacomo", "author_email": "edigiacomo@arpa.emr.it", "bugtrack_url": null, "classifiers": [], "description": "borinud\n=======\n\n.. contents::\n\nIntroduction\n------------\n\n**TODO**\n\n\nDependencies\n------------\n\n- `python-dballe <http://sourceforge.net/projects/wreport/>`_\n- `python-bottle <http://bottlepy.org/>`_\n\nInstallation\n------------\n\nFrom source code:\n\n::\n\n    python setup.py install\n\nContext url\n-----------\n\n::\n\n    /IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE\n\n- ``IDENT``: mobile station identifier or ``-`` for fixed stations\n- ``COORDINATES``: coordinates in format ``int(lon*10^5),int(lat*10^5)``\n  - e.g.: ``1212345,4467890`` means longitude 12.12345 and latitude 44.67890\n- ``NETWORK``: station network (max 16 characters)\n- ``TIMERANGE``: time range in format ``type,p1,p2``\n- ``LEVEL``: level in format ``type1,l1,type2,l2`` (``-`` means missing)\n- ``BCODE``: local B table descriptor if format ``BXXYYY``\n\nExample of context url\n^^^^^^^^^^^^^^^^^^^^^^\n\nInstantaneous temperature at 2m above ground measured by fixed station at\nlongitude 12.12345, latitude 44.67890 in network \"agrmet\"::\n\n    /-/1212345,4467890/agrmet/254,0,0/103,2000,-,-/B12101\n\nWeb interface\n-------------\n\nA simple web interface is available at the base dir ``/``.\n\n\nWeb API\n-------\n\nThe response is in ``GeoJSON`` format (http://geojson.org/)::\n\n    {\n      \"type\": \"FeatureCollection\",\n      \"features\": [\n        {\n          \"geometry\": { \"type\": \"Point\", \"coordinates\": [ 11.95861, 44.36013 ] },\n          \"properties\": {\n            \"ident\": null,\n            \"lon\": 1195861,\n            \"lat\": 4436013,\n            \"network\": \"locali\",\n            \"trange_pind\": 254,\n            \"trange_p1\": 0,\n            \"trange_p2\": 0,\n            \"level_t1\": 103,\n            \"level_v1\": 2000,\n            \"level_t2\": null,\n            \"level_v2\": null,\n            \"bcode\": \"B12101\"\n          }\n        },\n        {\n          ...\n        }\n      ]\n    }\n\nThe services can extend the property list (e.g. ``datetime`` and ``value`` for timeseries services).\n\nThe services support the ``JSONP`` format, using the ``GET`` parameter ``callback=NAME``.\n\nSummaries\n^^^^^^^^^\n\n::\n\n    /*/*/*/*/*/*/summaries\n    /*/*/NETWORK/*/*/*/summaries\n    /-/COORDINATES/NETWORK/*/*/*/summaries\n    /IDENT/*/NETWORK/*/*/*/summaries\n    /*/*/NETWORK/TIMERANGE/LEVEL/BCODE/summaries/YEAR/MONTH\n    /*/*/NETWORK/TIMERANGE/LEVEL/BCODE/summaries/YEAR/MONTH/DAY\n\nThe features have a ``datetime`` property: if the date extremes are available,\nthen is an array with min and max date. Otherwise, is ``null``.\n\nTime series\n^^^^^^^^^^^\n\n::\n\n    /IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE/timeseries/YEAR\n    /IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE/timeseries/YEAR/MONTH\n    /IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE/timeseries/YEAR/MONTH/DAY\n\nThe features have a ``datetime`` and ``value`` property.\n\nExample of timeseries\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n::\n\n    $ curl http://host/path/to/-/1200000,4400000/agrmet/254,0,0/103,10000,-,-/B12101/timeseries/2011\n    $ curl http://host/path/to/-/1200000,4400000/agrmet/254,0,0/103,10000,-,-/B12101/timeseries/2011/01\n    $ curl http://host/path/to/-/1200000,4400000/agrmet/254,0,0/103,10000,-,-/B12101/timeseries/2011/01/01\n\nSpatial series\n^^^^^^^^^^^^^^\n\n::\n\n    /*/*/NETWORK/TIMERANGE/LEVEL/BCODE/spatialseries/YEAR/MONTH/DAY/HOUR\n\nThe features have a ``datetime`` and ``value`` property.\n\nStation data\n^^^^^^^^^^^^\n\n::\n\n    /-/COORDINATES/NETWORK/-,-,-/257,-,-,-/*/stationdata\n    /IDENT/*/-,-,-/257,-,-,-/*/stationdata\n\nThe features have a ``value`` property.\n\nSimple web server\n-----------------\n\nThe ``borinud.ws`` module has a simple web server tool::\n\n    python -m borinud.ws --dsn=sqlite://...\n\nOr run ``python -m borinud.ws --help`` for more options.\n\nDeployement under Apache with mod_wsgi\n--------------------------------------\n\nThe Apache configuration is something like this (see\nhttp://code.google.com/p/modwsgi/ for details)::\n\n    <VirtualHost *:80>\n      WSGIDaemonProcess borinud user=www-data group=www-data processes=10 threads=1\n      WSGIScriptAlias /borinud /var/www/borinud/app.wsgi\n    </VirtualHost>\n\nAnd you must create the file ``/var/www/borinud/app.wsgi``::\n\n    import borinud.ws\n    import borinud.db\n\n    dba_dsn = \"sqlite:/dev/shm/borinud.db\"\n\n    application = borinud.ws.app\n    application.config.db = borinud.db.DballeDB(dba_dsn)\n\nDatabase\n--------\n\n``borinud`` reads data from a ``DB-All.e`` database::\n\n    from borinud.db import DballeDB\n    # Create a DB-All.e database\n    db = DballeDB(\"sqlite:mydatabase.sqlite\")\n    # Load the summary\n    summary = db.query_summary(dballe.Record())\n    # Load temperature data\n    data = db.query_data(dballe.Record(var=\"B12101\"))\n\nCaching the summary\n^^^^^^^^^^^^^^^^^^^\n\nIf the database has a lot of data, loading the summary could be a bottle neck.\nYou can dump the summary in a file and use it as a preemptive cache::\n\n    import dballe\n    from borinud.db import DballeDB, SummaryCacheDB\n    # Create a DB-All.e database with cached summary\n    db = SummaryCacheDB(DballeDB(\"sqlite:mydatabase.sqlite\"), \"/var/lib/borinud-summary.json\")\n    # Dump cached summary in /var/lib/borinud-summary.json.\n    # NOTE: the cached summary must be written before using it\n    db.write_cached_summary()\n    # Load the summary\n    summary = db.query_summary(dballe.Record())\n    # Load temperature data\n    data = db.query_data(dballe.Record(var=\"B12101\"))\n    # Update the summary cache\n    db.write_cached_summary()\n\nThe web service can use a summary cache::\n\n    python -m borinud.ws --dsn=sqlite:mydatabase.sqlite --cached-summary=/var/lib/borinud-summary.json\n\nAnd the cache can be updated by a simple script::\n\n    #!/usr/bin/python\n    # cacheupdater.py\n    from borinud.db import DballeDB, SummaryCacheDB\n    db = SummaryCacheDB(DballeDB(\"sqlite:mydatabase.sqlite\"), \"/var/lib/borinud-summary.json\")\n    db.write_cached_summary()\n\nThis script can be executed by ``cron`` to update periodically the summary::\n\n    */10 * * * * python cacheupdater.py\n\n.. note::\n    When the web service starts, the summary *must* be already created::\n\n        python cacheupdater.py && python -m borinud.ws --dsn=sqlite:mydatabase.sqlite --cached-summary=/var/lib/borinud-summary.json\n\nCopyright\n---------\n\n::\n\n  Copyright (C) 2013 ARPA-SIM <urpsim@smr.arpa.emr.it>\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License along\n  with this program; if not, write to the Free Software Foundation, Inc.,\n  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nChangeLog\n=========\n\n::\n\n  Copyright (C) 2013 ARPA-SIM <urpsim@smr.arpa.emr.it>\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License along\n  with this program; if not, write to the Free Software Foundation, Inc.,\n  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nborinud 0.7.3 (2014-10-08)\n--------------------------\n\n- Fixed web api /stationdata\n\nborinud 0.7.2 (2014-09-30)\n--------------------------\n\n- Patch for compatibility with ECMAScript-ed6 (Date.parse())\n\nborinud 0.7 (2014-09-24)\n------------------------\n\n- Daily summary\n- Daily timeseries in web interface\n\n\nborinud 0.6 (2014-09-08)\n------------------------\n\n- Removed autotools\n- Sphinx documentation\n\nborinud 0.5\n-----------\n\n- Summary cache filter\n- (Optional) versioned web api\n\nborinud 0.4\n-----------\n\n- Summary cache wrapper\n\nborinud 0.3\n-----------\n\n- Summary response contains items description.\n- Example web client has a dynamic variable list.\n\nborinud 0.2 \n-----------\n\n- Example web client plots monthly timeseries\n\nContributors\n============\n\n* Emanuele Di Giacomo <edigiacomo@arpa.emr.it>", "description_content_type": null, "docs_url": "https://pythonhosted.org/borinud/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://sourceforge.net/projects/r-map/", "keywords": "ARPA SIMC weather station sensor GIS", "license": "GPLv2+", "maintainer": null, "maintainer_email": null, "name": "borinud", "package_url": "https://pypi.org/project/borinud/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/borinud/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://sourceforge.net/projects/r-map/"}, "release_url": "https://pypi.org/project/borinud/0.7.3/", "requires_dist": null, "requires_python": null, "summary": "weather data web api", "version": "0.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"borinud\">\n<h2><a href=\"#id1\" rel=\"nofollow\">borinud</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#borinud\" id=\"id1\" rel=\"nofollow\">borinud</a><ul>\n<li><a href=\"#introduction\" id=\"id2\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#dependencies\" id=\"id3\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#installation\" id=\"id4\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#context-url\" id=\"id5\" rel=\"nofollow\">Context url</a><ul>\n<li><a href=\"#example-of-context-url\" id=\"id6\" rel=\"nofollow\">Example of context url</a></li>\n</ul>\n</li>\n<li><a href=\"#web-interface\" id=\"id7\" rel=\"nofollow\">Web interface</a></li>\n<li><a href=\"#web-api\" id=\"id8\" rel=\"nofollow\">Web API</a><ul>\n<li><a href=\"#summaries\" id=\"id9\" rel=\"nofollow\">Summaries</a></li>\n<li><a href=\"#time-series\" id=\"id10\" rel=\"nofollow\">Time series</a><ul>\n<li><a href=\"#example-of-timeseries\" id=\"id11\" rel=\"nofollow\">Example of timeseries</a></li>\n</ul>\n</li>\n<li><a href=\"#spatial-series\" id=\"id12\" rel=\"nofollow\">Spatial series</a></li>\n<li><a href=\"#station-data\" id=\"id13\" rel=\"nofollow\">Station data</a></li>\n</ul>\n</li>\n<li><a href=\"#simple-web-server\" id=\"id14\" rel=\"nofollow\">Simple web server</a></li>\n<li><a href=\"#deployement-under-apache-with-mod-wsgi\" id=\"id15\" rel=\"nofollow\">Deployement under Apache with mod_wsgi</a></li>\n<li><a href=\"#database\" id=\"id16\" rel=\"nofollow\">Database</a><ul>\n<li><a href=\"#caching-the-summary\" id=\"id17\" rel=\"nofollow\">Caching the summary</a></li>\n</ul>\n</li>\n<li><a href=\"#copyright\" id=\"id18\" rel=\"nofollow\">Copyright</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id19\" rel=\"nofollow\">ChangeLog</a><ul>\n<li><a href=\"#borinud-0-7-3-2014-10-08\" id=\"id20\" rel=\"nofollow\">borinud 0.7.3 (2014-10-08)</a></li>\n<li><a href=\"#borinud-0-7-2-2014-09-30\" id=\"id21\" rel=\"nofollow\">borinud 0.7.2 (2014-09-30)</a></li>\n<li><a href=\"#borinud-0-7-2014-09-24\" id=\"id22\" rel=\"nofollow\">borinud 0.7 (2014-09-24)</a></li>\n<li><a href=\"#borinud-0-6-2014-09-08\" id=\"id23\" rel=\"nofollow\">borinud 0.6 (2014-09-08)</a></li>\n<li><a href=\"#borinud-0-5\" id=\"id24\" rel=\"nofollow\">borinud 0.5</a></li>\n<li><a href=\"#borinud-0-4\" id=\"id25\" rel=\"nofollow\">borinud 0.4</a></li>\n<li><a href=\"#borinud-0-3\" id=\"id26\" rel=\"nofollow\">borinud 0.3</a></li>\n<li><a href=\"#borinud-0-2\" id=\"id27\" rel=\"nofollow\">borinud 0.2</a></li>\n</ul>\n</li>\n<li><a href=\"#contributors\" id=\"id28\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Introduction</a></h3>\n<p><strong>TODO</strong></p>\n</div>\n<div id=\"dependencies\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Dependencies</a></h3>\n<ul>\n<li><a href=\"http://sourceforge.net/projects/wreport/\" rel=\"nofollow\">python-dballe</a></li>\n<li><a href=\"http://bottlepy.org/\" rel=\"nofollow\">python-bottle</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Installation</a></h3>\n<p>From source code:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"context-url\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Context url</a></h3>\n<pre>/IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE\n</pre>\n<ul>\n<li><tt>IDENT</tt>: mobile station identifier or <tt>-</tt> for fixed stations</li>\n<li><tt>COORDINATES</tt>: coordinates in format <tt><span class=\"pre\">int(lon*10^5),int(lat*10^5)</span></tt>\n- e.g.: <tt>1212345,4467890</tt> means longitude 12.12345 and latitude 44.67890</li>\n<li><tt>NETWORK</tt>: station network (max 16 characters)</li>\n<li><tt>TIMERANGE</tt>: time range in format <tt>type,p1,p2</tt></li>\n<li><tt>LEVEL</tt>: level in format <tt>type1,l1,type2,l2</tt> (<tt>-</tt> means missing)</li>\n<li><tt>BCODE</tt>: local B table descriptor if format <tt>BXXYYY</tt></li>\n</ul>\n<div id=\"example-of-context-url\">\n<h4><a href=\"#id6\" rel=\"nofollow\">Example of context url</a></h4>\n<p>Instantaneous temperature at 2m above ground measured by fixed station at\nlongitude 12.12345, latitude 44.67890 in network \u201cagrmet\u201d:</p>\n<pre>/-/1212345,4467890/agrmet/254,0,0/103,2000,-,-/B12101\n</pre>\n</div>\n</div>\n<div id=\"web-interface\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Web interface</a></h3>\n<p>A simple web interface is available at the base dir <tt>/</tt>.</p>\n</div>\n<div id=\"web-api\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Web API</a></h3>\n<p>The response is in <tt>GeoJSON</tt> format (<a href=\"http://geojson.org/\" rel=\"nofollow\">http://geojson.org/</a>):</p>\n<pre>{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"geometry\": { \"type\": \"Point\", \"coordinates\": [ 11.95861, 44.36013 ] },\n      \"properties\": {\n        \"ident\": null,\n        \"lon\": 1195861,\n        \"lat\": 4436013,\n        \"network\": \"locali\",\n        \"trange_pind\": 254,\n        \"trange_p1\": 0,\n        \"trange_p2\": 0,\n        \"level_t1\": 103,\n        \"level_v1\": 2000,\n        \"level_t2\": null,\n        \"level_v2\": null,\n        \"bcode\": \"B12101\"\n      }\n    },\n    {\n      ...\n    }\n  ]\n}\n</pre>\n<p>The services can extend the property list (e.g. <tt>datetime</tt> and <tt>value</tt> for timeseries services).</p>\n<p>The services support the <tt>JSONP</tt> format, using the <tt>GET</tt> parameter <tt>callback=NAME</tt>.</p>\n<div id=\"summaries\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Summaries</a></h4>\n<pre>/*/*/*/*/*/*/summaries\n/*/*/NETWORK/*/*/*/summaries\n/-/COORDINATES/NETWORK/*/*/*/summaries\n/IDENT/*/NETWORK/*/*/*/summaries\n/*/*/NETWORK/TIMERANGE/LEVEL/BCODE/summaries/YEAR/MONTH\n/*/*/NETWORK/TIMERANGE/LEVEL/BCODE/summaries/YEAR/MONTH/DAY\n</pre>\n<p>The features have a <tt>datetime</tt> property: if the date extremes are available,\nthen is an array with min and max date. Otherwise, is <tt>null</tt>.</p>\n</div>\n<div id=\"time-series\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Time series</a></h4>\n<pre>/IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE/timeseries/YEAR\n/IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE/timeseries/YEAR/MONTH\n/IDENT/COORDINATES/NETWORK/TIMERANGE/LEVEL/BCODE/timeseries/YEAR/MONTH/DAY\n</pre>\n<p>The features have a <tt>datetime</tt> and <tt>value</tt> property.</p>\n<div id=\"example-of-timeseries\">\n<h5><a href=\"#id11\" rel=\"nofollow\">Example of timeseries</a></h5>\n<pre>$ curl http://host/path/to/-/1200000,4400000/agrmet/254,0,0/103,10000,-,-/B12101/timeseries/2011\n$ curl http://host/path/to/-/1200000,4400000/agrmet/254,0,0/103,10000,-,-/B12101/timeseries/2011/01\n$ curl http://host/path/to/-/1200000,4400000/agrmet/254,0,0/103,10000,-,-/B12101/timeseries/2011/01/01\n</pre>\n</div>\n</div>\n<div id=\"spatial-series\">\n<h4><a href=\"#id12\" rel=\"nofollow\">Spatial series</a></h4>\n<pre>/*/*/NETWORK/TIMERANGE/LEVEL/BCODE/spatialseries/YEAR/MONTH/DAY/HOUR\n</pre>\n<p>The features have a <tt>datetime</tt> and <tt>value</tt> property.</p>\n</div>\n<div id=\"station-data\">\n<h4><a href=\"#id13\" rel=\"nofollow\">Station data</a></h4>\n<pre>/-/COORDINATES/NETWORK/-,-,-/257,-,-,-/*/stationdata\n/IDENT/*/-,-,-/257,-,-,-/*/stationdata\n</pre>\n<p>The features have a <tt>value</tt> property.</p>\n</div>\n</div>\n<div id=\"simple-web-server\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Simple web server</a></h3>\n<p>The <tt>borinud.ws</tt> module has a simple web server tool:</p>\n<pre>python -m borinud.ws --dsn=sqlite://...\n</pre>\n<p>Or run <tt>python <span class=\"pre\">-m</span> borinud.ws <span class=\"pre\">--help</span></tt> for more options.</p>\n</div>\n<div id=\"deployement-under-apache-with-mod-wsgi\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Deployement under Apache with mod_wsgi</a></h3>\n<p>The Apache configuration is something like this (see\n<a href=\"http://code.google.com/p/modwsgi/\" rel=\"nofollow\">http://code.google.com/p/modwsgi/</a> for details):</p>\n<pre>&lt;VirtualHost *:80&gt;\n  WSGIDaemonProcess borinud user=www-data group=www-data processes=10 threads=1\n  WSGIScriptAlias /borinud /var/www/borinud/app.wsgi\n&lt;/VirtualHost&gt;\n</pre>\n<p>And you must create the file <tt>/var/www/borinud/app.wsgi</tt>:</p>\n<pre>import borinud.ws\nimport borinud.db\n\ndba_dsn = \"sqlite:/dev/shm/borinud.db\"\n\napplication = borinud.ws.app\napplication.config.db = borinud.db.DballeDB(dba_dsn)\n</pre>\n</div>\n<div id=\"database\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Database</a></h3>\n<p><tt>borinud</tt> reads data from a <tt><span class=\"pre\">DB-All.e</span></tt> database:</p>\n<pre>from borinud.db import DballeDB\n# Create a DB-All.e database\ndb = DballeDB(\"sqlite:mydatabase.sqlite\")\n# Load the summary\nsummary = db.query_summary(dballe.Record())\n# Load temperature data\ndata = db.query_data(dballe.Record(var=\"B12101\"))\n</pre>\n<div id=\"caching-the-summary\">\n<h4><a href=\"#id17\" rel=\"nofollow\">Caching the summary</a></h4>\n<p>If the database has a lot of data, loading the summary could be a bottle neck.\nYou can dump the summary in a file and use it as a preemptive cache:</p>\n<pre>import dballe\nfrom borinud.db import DballeDB, SummaryCacheDB\n# Create a DB-All.e database with cached summary\ndb = SummaryCacheDB(DballeDB(\"sqlite:mydatabase.sqlite\"), \"/var/lib/borinud-summary.json\")\n# Dump cached summary in /var/lib/borinud-summary.json.\n# NOTE: the cached summary must be written before using it\ndb.write_cached_summary()\n# Load the summary\nsummary = db.query_summary(dballe.Record())\n# Load temperature data\ndata = db.query_data(dballe.Record(var=\"B12101\"))\n# Update the summary cache\ndb.write_cached_summary()\n</pre>\n<p>The web service can use a summary cache:</p>\n<pre>python -m borinud.ws --dsn=sqlite:mydatabase.sqlite --cached-summary=/var/lib/borinud-summary.json\n</pre>\n<p>And the cache can be updated by a simple script:</p>\n<pre>#!/usr/bin/python\n# cacheupdater.py\nfrom borinud.db import DballeDB, SummaryCacheDB\ndb = SummaryCacheDB(DballeDB(\"sqlite:mydatabase.sqlite\"), \"/var/lib/borinud-summary.json\")\ndb.write_cached_summary()\n</pre>\n<p>This script can be executed by <tt>cron</tt> to update periodically the summary:</p>\n<pre>*/10 * * * * python cacheupdater.py\n</pre>\n<div>\n<p>Note</p>\n<p>When the web service starts, the summary <em>must</em> be already created:</p>\n<pre>python cacheupdater.py &amp;&amp; python -m borinud.ws --dsn=sqlite:mydatabase.sqlite --cached-summary=/var/lib/borinud-summary.json\n</pre>\n</div>\n</div>\n</div>\n<div id=\"copyright\">\n<h3><a href=\"#id18\" rel=\"nofollow\">Copyright</a></h3>\n<pre>Copyright (C) 2013 ARPA-SIM &lt;urpsim@smr.arpa.emr.it&gt;\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id19\" rel=\"nofollow\">ChangeLog</a></h2>\n<pre>Copyright (C) 2013 ARPA-SIM &lt;urpsim@smr.arpa.emr.it&gt;\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n</pre>\n<div id=\"borinud-0-7-3-2014-10-08\">\n<h3><a href=\"#id20\" rel=\"nofollow\">borinud 0.7.3 (2014-10-08)</a></h3>\n<ul>\n<li>Fixed web api /stationdata</li>\n</ul>\n</div>\n<div id=\"borinud-0-7-2-2014-09-30\">\n<h3><a href=\"#id21\" rel=\"nofollow\">borinud 0.7.2 (2014-09-30)</a></h3>\n<ul>\n<li>Patch for compatibility with ECMAScript-ed6 (Date.parse())</li>\n</ul>\n</div>\n<div id=\"borinud-0-7-2014-09-24\">\n<h3><a href=\"#id22\" rel=\"nofollow\">borinud 0.7 (2014-09-24)</a></h3>\n<ul>\n<li>Daily summary</li>\n<li>Daily timeseries in web interface</li>\n</ul>\n</div>\n<div id=\"borinud-0-6-2014-09-08\">\n<h3><a href=\"#id23\" rel=\"nofollow\">borinud 0.6 (2014-09-08)</a></h3>\n<ul>\n<li>Removed autotools</li>\n<li>Sphinx documentation</li>\n</ul>\n</div>\n<div id=\"borinud-0-5\">\n<h3><a href=\"#id24\" rel=\"nofollow\">borinud 0.5</a></h3>\n<ul>\n<li>Summary cache filter</li>\n<li>(Optional) versioned web api</li>\n</ul>\n</div>\n<div id=\"borinud-0-4\">\n<h3><a href=\"#id25\" rel=\"nofollow\">borinud 0.4</a></h3>\n<ul>\n<li>Summary cache wrapper</li>\n</ul>\n</div>\n<div id=\"borinud-0-3\">\n<h3><a href=\"#id26\" rel=\"nofollow\">borinud 0.3</a></h3>\n<ul>\n<li>Summary response contains items description.</li>\n<li>Example web client has a dynamic variable list.</li>\n</ul>\n</div>\n<div id=\"borinud-0-2\">\n<h3><a href=\"#id27\" rel=\"nofollow\">borinud 0.2</a></h3>\n<ul>\n<li>Example web client plots monthly timeseries</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id28\" rel=\"nofollow\">Contributors</a></h2>\n<ul>\n<li>Emanuele Di Giacomo &lt;<a href=\"mailto:edigiacomo%40arpa.emr.it\">edigiacomo<span>@</span>arpa<span>.</span>emr<span>.</span>it</a>&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1458286, "releases": {"0.7.1": [{"comment_text": "", "digests": {"md5": "93804a8c654f06f71f87bce21cf645d1", "sha256": "87e289afd1bd9c12018baa267a931d63b38e30b8304ade0a3f0d41251d749aab"}, "downloads": -1, "filename": "borinud-0.7.1.tar.gz", "has_sig": false, "md5_digest": "93804a8c654f06f71f87bce21cf645d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35046, "upload_time": "2014-09-26T06:59:10", "upload_time_iso_8601": "2014-09-26T06:59:10.062829Z", "url": "https://files.pythonhosted.org/packages/c3/a8/4aad7b1f63bba55f136aae4cb8015de0f1b1439cb343417320da223b3c58/borinud-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "a32355c35b011150399ba99e4914f5bc", "sha256": "3c4739ff45c86dd687fd8a8e80b4b055adbc333a9bc356a4894ac713bb09e406"}, "downloads": -1, "filename": "borinud-0.7.2.tar.gz", "has_sig": false, "md5_digest": "a32355c35b011150399ba99e4914f5bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35157, "upload_time": "2014-09-30T09:26:37", "upload_time_iso_8601": "2014-09-30T09:26:37.260674Z", "url": "https://files.pythonhosted.org/packages/14/9d/517b38a9bc402f94dcf9324645d18e99e01253eacec933e035d82fca51f7/borinud-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "3bfa3506d4d4bf9f8ff29bdd774ad778", "sha256": "24f4bef5737088b3662f4fee65abebda9da44d8ac7fa1c9b6116eeaca9755c9d"}, "downloads": -1, "filename": "borinud-0.7.3.tar.gz", "has_sig": false, "md5_digest": "3bfa3506d4d4bf9f8ff29bdd774ad778", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35523, "upload_time": "2015-03-11T18:04:57", "upload_time_iso_8601": "2015-03-11T18:04:57.097258Z", "url": "https://files.pythonhosted.org/packages/eb/af/4d0b30d8f6ad394e8e08f64e70c8dc1dec56811f2d27fd9bd0e96bcc1439/borinud-0.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bfa3506d4d4bf9f8ff29bdd774ad778", "sha256": "24f4bef5737088b3662f4fee65abebda9da44d8ac7fa1c9b6116eeaca9755c9d"}, "downloads": -1, "filename": "borinud-0.7.3.tar.gz", "has_sig": false, "md5_digest": "3bfa3506d4d4bf9f8ff29bdd774ad778", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35523, "upload_time": "2015-03-11T18:04:57", "upload_time_iso_8601": "2015-03-11T18:04:57.097258Z", "url": "https://files.pythonhosted.org/packages/eb/af/4d0b30d8f6ad394e8e08f64e70c8dc1dec56811f2d27fd9bd0e96bcc1439/borinud-0.7.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:40 2020"}