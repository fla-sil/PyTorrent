{"info": {"author": "luk3yx", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "# miniirc_extras\n\n![Python 3.5+] [![Available on PyPI.]](https://pypi.org/project/miniirc_extras/) [![License: MIT]](https://github.com/luk3yx/miniirc_extras/blob/master/LICENSE.md)\n\n[Python 3.5+]: https://img.shields.io/badge/python-3.5+-blue.svg\n[Available on PyPI.]: https://img.shields.io/pypi/v/miniirc_extras.svg\n[License: MIT]: https://img.shields.io/pypi/l/miniirc.svg\n\nAn extension of miniirc ([GitHub](https://github.com/luk3yx/miniirc),\n[GitLab](https://gitlab.com/luk3yx/miniirc)) that adds more features.\n\nNote that miniirc_extras is still in beta and there can and will be breaking\nAPI changes before v1.0.0, and miniirc_extras may not work with older versions\nof miniirc.\n\n*Some features here may be merged into miniirc eventually.*\n\n## Loading features\n\nAfter importing miniirc_extras, features can be loaded with\n`irc.require('feature_name')`, and once loaded can be accessed with\n`irc.feature_name`.\n\n## Features\n\n - `chans`: Channel mode tracking, must be loaded while miniirc is disconnected.\n - `ensure_connection`: https://github.com/luk3yx/miniirc/issues/15\n - `mp`: *(WIP)* Multiprocessing handlers for miniirc.\n - `testfeature`: Debugging\n - `users`: User tracking, must be loaded while miniirc is disconnected.\n - `_json` *(Proof-of-concept)*: Parse JSON messages.\n\n### `irc.users`\n\n`irc.users` adds rudimentary user tracking to miniirc.\n\n#### `User` objects\n\nUser objects store the current user's information and user-defined data, and\ncan be accessed with `irc.users[Hostmask]` or `irc.users['nick']`.\n\nThe following items are available in `User` objects:\n\n| Variable      | Description                                               |\n| ------------- | --------------------------------------------------------  |\n| `nick`        | The user's current nickname.                              |\n| `ident`       | The user's current ident.                                 |\n| `host`        | The user's current hostname.                              |\n| `realname`    | The user's `realname`.                                    |\n| `hostmask`    | A `Hostmask` object containing the user's hostmask.       |\n| `raw_hostmask`| A string containing `nick!user@host`.                     |\n| `channels`    | A set containing `Channel` objects for channels the user is currently in. |\n| `account`     | A string containing the user's current NickServ account, or `None` if the user isn't logged in. |\n| `avatar_url`  | The avatar URL of the user. Currently only IRCCloud avatars work. |\n\nYou can also set and get items with strings as keys and JSON-compatible objects\nas values.\n\n`User` objects have the following helper functions:\n\n| Function          | Description                                             |\n| ----------------- | ------------------------------------------------------- |\n| `msg(*text)`      | Send a `PRIVMSG` to the user.                           |\n| `me(*text)`       | Send a `CTCP ACTION` (`/me`) to the user.               |\n| `notice(*text)`   | Send a `NOTICE` to the user.                            |\n| `kick(channel, reason='')` | Kicks the user from `channel` (a string or `Channel` object). |\n\n### `irc.chans`\n\n`irc.chans` adds channel mode tracking on top of `irc.users`. You can get\nchannels with `irc.chans['#channel-name']`\n\n#### `Channel` objects\n\n`Channel` objects have the following attributes:\n\n| Variable      | Description                                               |\n| ------------- | --------------------------------------------------------  |\n| `name`        | The name of the channel.                                  |\n| `modes`       | A `ModeList` object containing a list of modes.           |\n| `topic`       | The channel topic.                                        |\n| `users`       | A `set` containing `User` objects for members of this channel. |\n\n#### `ModeList` objects\n\nModeList objects store a list of modes, and have the following functions:\n\n| Function          | Description                                             |\n| ----------------- | ------------------------------------------------------- |\n| `getbool(mode)`   | Returns `True` if `mode` (a single-character string) is set on the corresponding channel. *Use this for `+i`, `+t`, etc* |\n| `getstr(mode, default=None)` | Return the parameter `mode` was set with, otherwise `default`. *Use this for `+k`, `+l`, etc* |\n| `getset(mode)` | Return a `frozenset` containing all the entries stored in `mode`. If you plan to use this for modes such as `+b`, you may want to run `MODE #channel +b` when the bot/client joins the channel to populate the list. *Use this for `+b`, `+e`, `+o`, `+v`, etc* |\n| `hasstr(mode)` | Returns `True` if `mode` is set with a single parameter, otherwise `False`. |\n| `hasset(mode)` | Equivalent to `len(getset(mode)) > 0`. |\n\n*You can access `ModeList` objects like `dict`s, however this will require\nextra type checking code if you plan to use mypy or another type checker.*\n\n### `irc.mp`\n\nMultiprocessing handlers. You can create multiprocessing handlers with\n`irc.mp.Handler` and `irc.mp.CmdHandler`. These handlers are called with the\nlimited `RestrictedIRC` object (a subclass of `AbstractIRC`) instead of the\nnormal `IRC` object.\n\nThe following functions/variables work with `RestrictedIRC`:\n\n`active_caps`, `channels`, `connect_modes`, `ctcp`, `debug`, `ident`, `ip`,\n`ircv3_caps`, `isupport`, `me`, `msg`, `nick`, `notice`, `persist`,\n`ping_interval`, `port`, `quit_message`, `quote`, `realname`, `ssl`,\n`verify_ssl`\n\nTrying to modify these variables will result in an `AttributeError` or the set\noperation silently failing.\n\n## Misc classes\n\n### AbstractIRC\n\nThe `miniirc_extras.AbstractIRC` class provides an easy way to type check `IRC`\nobjects without stub files.\n\n### Hostmask\n\nminiirc_extras adds the abstract-ish class `miniirc_extras.Hostmask`:\n\n```py\nfrom miniirc_extras import Hostmask\n\nisinstance('test', Hostmask)                    # False\nisinstance(('nick', 123, 'host'), Hostmask)     # False\nisinstance(('nick', 'user', 'host'), Hostmask)  # True\n\nHostmask('nick', 'user', 'host') # ('nick', 'user', 'host')\nHostmask(123456, 'user', 'host') # TypeError\n```\n\n## Creating new features\n\n*This API will probably change in the future.*\n\nYou can create your own features with `miniirc_extras.Feature`:\n\n```py\n@miniirc_extras.Feature('feature_name')\nclass MyFeature:\n    def test_func(self):\n        print('test_func called with', self._irc)\n\n    def __call__(self):\n        print('MyFeature called with', self._irc)\n\n    def __init__(self, irc):\n        self._irc = irc\n```\n\nOnce registered, you can `require` and use it:\n\n```py\nirc.require('feature_name')\n\nirc.feature_name()           # MyFeature called with <miniirc.IRC object>\nirc.feature_name.test_func() # test_func called with <miniirc.IRC object>\n```\n\n## Miscellaneous functions\n\nSome miscellaneous functions and classes are located in `miniirc_extras.utils`.\n\n| Function          | Description                                             |\n| ----------------- | ------------------------------------------------------- |\n| `DummyIRC(...)`   | A subclass of `miniirc.IRC` that cannot connect to servers. `DummyIRC.__init__` has no required parameters. |\n| `dict_to_tags(tags)` | Converts a dict containing strings and booleans into an IRCv3 tags string. Example: `dict_to_tags({'tag1': True, 'tag2': 'tag-data'})` \u2192 `b'@tag1;tag2=tag-data '` |\n| `get_raw_socket(irc)` | Attempts to get the raw socket from an AbstractIRC object. This is not recommended, and under no circumstances should you attempt to receive data using this socket. **Only use this if there is no alternative.** Raises a miniirc_extras.error if no socket can be found. |\n| `tags_to_dict(tag_list, separator = ';')` | Converts a tags list (`tag1;tag2=tag-data`) joined by `separator` into a `dict` containing strings and booleans. |\n| `ircv3_message_parser(msg, *, colon=True)` | The same as `miniirc.ircv3_message_parser`, but also accepts `bytes` and `bytearray`s. The `colon` keyword argument works in the same way as the `colon` keyword argument on `miniirc.Handler`. |\n| `hostmask_to_str(hostmask)` | Converts a `Hostmask` object into a `nick!user@host` string. |\n| `ircv2_message_unparser(cmd, hostmask, tags, args, *, colon=True, encoding='utf-8')` | Converts miniirc-style message data into an IRCv2 message encoded with `encoding` (or `None` to return a `str`). When `colon` is `False`, `args[-1]` will have a colon prepended to it. |\n| `ircv3_message_unparser(cmd, hostmask, tags, args, *, colon=True, encoding='utf-8')` | The same as `ircv2_message_unparser`, but tags are added. |\n| `namedtuple(...)` | Alias for `collections.namedtuple` on Python 3.7+, otherwise a wrapper that adds `defaults` and `module` keyword arguments. |\n| `VersionInfo(major=0, minor=0, micro=0, releaselevel='final', serial=0)` | A `namedtuple` similar to `type(sys.version_info)`. |\n\n*Note that `dict_to_tags` and `tags_to_dict` are available in miniirc as\ninternal functions, however they can and will change.*\n\n### `miniirc_extras.utils.irc_from_url`\n\nAllows you to create `IRC` objects from URLs, for example\n`irc_from_url('irc://nick@ssl-server.example/#channel1,#channel2')` will create\nan `IRC` object with the nickname `nick`. Any keyword arguments passed to\n`irc_from_url` are sent to `IRC()`.\n\n### `miniirc_extras.utils.HandlerGroup`\n\nAllows you to create a group of handlers and apply them in bulk to `IRC`\nobjects.\n\n| Method            | Description                                             |\n| ----------------- | ------------------------------------------------------- |\n| `Handler(...)`    | Adds a `Handler` to the group, uses the same syntax as `irc.Handler`. |\n| `CmdHandler(...)`    | Adds a `CmdHandler` to the group, uses the same syntax as `irc.CmdHandler`. |\n| `add_to(irc_or_group)` | Adds all the handlers in this group to an IRC object or another handler group. |\n| `copy()`          | Returns another handler group with the same handlers as this one. |\n\n### `miniirc_extras.utils.numerics`\n\nAn `Enum` of most of the IRC numerics in [RFC 1459], [RFC 2812], and\n[modern.ircdocs.horse](https://modern.ircdocs.horse/#numerics). See\n`miniirc_extras/_numerics.py` for a list of\nnumerics and their names.\n\nExample:\n```py\nimport miniirc\nfrom miniirc_extras.utils import numerics\n\n@miniirc.Handler(numerics.RPL_WELCOME, colon=False)\ndef handler(irc, hostmask, args):\n    print('Connected to IRC!')\n```\n\nAnother example:\n```py\n>>> from miniirc_extras.utils import numerics\n>>> numerics.RPL_ISUPPORT\n<numerics.RPL_ISUPPORT: 0\u200b0\u200b5>\n>>> numerics['RPL_MOTD']\n<numerics.RPL_MOTD: 372>\n>>> numerics(465)\n<numerics.ERR_YOUREBANNEDCREEP: 465>\n>>> numerics('422')\n<numerics.ERR_NOMOTD: 422>\n>>> str(numerics.RPL_YOURHOST)\n'002'\n```\n\n### `miniirc_extras.aioirc`\n\nAn asyncio-oriented version of `miniirc.IRC`. Example:\n\n```py\nimport asyncio, time\nfrom miniirc_extras import aioirc\n\nirc = aioirc.AsyncIRC(ip, 6697, nickname, '#botwar', auto_connect=False)\n\n@irc.Handler('PRIVMSG', colon=False)\ndef handle_privmsg(irc, hostmask, args):\n    if args[0] == '#botwar' and args[1] == '>thread_test':\n        irc.msg(args[0], '[Thread] Waiting 1 second...')\n        time.sleep(1)\n        irc.msg(args[0], '[Thread] Done!')\n\n@irc.Handler('PRIVMSG', colon=False)\nasync def handle_privmsg(irc, hostmask, args):\n    if args[0] == '#botwar' and args[1] == '>coro_test':\n        await irc.msg(args[0], '[Coroutine] Waiting 1 second...')\n        await asyncio.sleep(1)\n        await irc.msg(args[0], '[Coroutine] Done!')\n\nif __name__ == '__main__':\n    irc.connect()\n    asyncio.get_event_loop().run_forever()\n```\n\nThis probably doesn't need to be used unless asyncio-based libraries need to be\nused.\n\n### `miniirc_extras.formatting`\n\nText formatting. Inspired by [ircmessage](https://pypi.org/project/ircmessage/).\n\n#### `colours`/`colors` enum\n\nThe `colours` (or `colors`) enum contains colours and their corresponding code.\nDo not use these to format text, instead use the below `style` and `colorize`\nfunctions.\n\n#### `Styler` objects\n\nStyler objects are callables that apply IRC formatting to strings.\n\n```py\nminiirc_extras.formatting.Styler(fg=None, bg=None, *,\n        bold: bool = False, italics: bool = False, underline: bool = False,\n        reverse_colour: bool = False, strikethrough: bool = False,\n        spoiler: bool = False, monospace: bool = False, reset: bool = True)\n```\n\n*Note that `Styler` accepts both `reverse_colour` and `reverse_color`.*\n\n`fg` and `bg` can be strings or values from the aforementioned `Enum`.\n\nThe parameters passed to `__init__` are available as attributes on the object,\nfor example `styler.bold`.\n\nSetting `reset` to `False` is not recommended, as when enabled it only resets\nany changed formatting.\n\nFor cleaner code, you can also use\n`miniirc_extras.formatting.style(text, fg=None, ...)`.\n\n**Example:**\n\n```py\nfrom miniirc_extras import formatting\n\nstyler = formatting.Styler('red', bold=True, monospace=True)\nmsg = styler('Test message')\nprint(styler.fg)    # <colours.red: 04>\nprint(styler.fg)    # None\nprint(styler.bold)  # True\nprint(repr(msg))    # '\\x11\\x02\\x0304Test message\\x0399\\x02\\x11'\n\nmsg2 = formatting.style('Test message', 'red', bold=True, monospace=True)\nassert msg == msg2 # No error\n\nprint(repr(formatting.unstyle(msg))) # 'Test message'\n```\n\n#### \"Lightweight\" stylers\n\nThere are a number of predefined `Styler`s that are more efficient (if you are\nonly adding one style):\n\n```py\nbold            = Styler(bold=True)\nitalics         = Styler(italics=True)\nitalic          = italics\nunderline       = Styler(underline=True)\nreverse_colour  = Styler(reverse_colour=True)\nreverse_color   = reverse_colour\nstrikethrough   = Styler(strikethrough=True)\nmonospace       = Styler(monospace=True)\nspoiler         = Styler(spoiler=True)\n```\n\nLightweight stylers are subclassed from `Styler` and will run slightly faster,\nprovided you are only changing one style.\n\nYou can also use `miniirc_extras.formatting.colorize(text, fg)` (or\n`miniirc_extras.formatting.colourise(text, fg)`) if you are only changing the\nforeground colour/color for a similarly small speed improvement.\n\n*Note that `formatting.style(text, 'red', bold=True)` is recommended over\n`formatting.bold(formatting.colorize(text, 'red'))`, as it is more readable\nand probably faster.*\n\n### Deprecated functions.\n\nThese functions still work for now but will probably be removed from\nminiirc_extras v1.0.0:\n\n#### `miniirc_extras.DummyIRC`\n\nNow called `miniirc_extras.utils.DummyIRC`.\n\n#### `miniirc_extras.VersionInfo`\n\nNow called `miniirc_extras.utils.VersionInfo`.\n\n#### Other planned breaking changes\n\n - To coincide with miniirc v2.0.0, all functions that take a `colon` keyword\n    argument here will default to `False` (instead of `True`). This may change\n    in miniirc_extras v1.0.0 instead.\n - If Python 3.5 is obsolete by the time miniirc_extras v1.0.0 is released,\n    support may be dropped.\n\n[RFC 1459]: https://tools.ietf.org/html/rfc1459\n[RFC 2812]: https://tools.ietf.org/html/rfc2812\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/luk3yx/miniirc_extras", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "miniirc-extras", "package_url": "https://pypi.org/project/miniirc-extras/", "platform": "", "project_url": "https://pypi.org/project/miniirc-extras/", "project_urls": {"Homepage": "https://github.com/luk3yx/miniirc_extras"}, "release_url": "https://pypi.org/project/miniirc-extras/0.3.4/", "requires_dist": ["miniirc (>=1.4.3)", "deprecated (<2,>=1.2.5)"], "requires_python": ">=3.5", "summary": "WIP extensions for miniirc.", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>miniirc_extras</h1>\n<p><img alt=\"Python 3.5+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e71b641456c2ede46c078ff79bdaba51e51edc4b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352b2d626c75652e737667\"> <a href=\"https://pypi.org/project/miniirc_extras/\" rel=\"nofollow\"><img alt=\"Available on PyPI.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/622d73487baf21a5197ee713b0ac799e6abba7ec/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d696e696972635f6578747261732e737667\"></a> <a href=\"https://github.com/luk3yx/miniirc_extras/blob/master/LICENSE.md\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d44ec574e7c30574d0632d283989b5e9127d739/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d696e696972632e737667\"></a></p>\n<p>An extension of miniirc (<a href=\"https://github.com/luk3yx/miniirc\" rel=\"nofollow\">GitHub</a>,\n<a href=\"https://gitlab.com/luk3yx/miniirc\" rel=\"nofollow\">GitLab</a>) that adds more features.</p>\n<p>Note that miniirc_extras is still in beta and there can and will be breaking\nAPI changes before v1.0.0, and miniirc_extras may not work with older versions\nof miniirc.</p>\n<p><em>Some features here may be merged into miniirc eventually.</em></p>\n<h2>Loading features</h2>\n<p>After importing miniirc_extras, features can be loaded with\n<code>irc.require('feature_name')</code>, and once loaded can be accessed with\n<code>irc.feature_name</code>.</p>\n<h2>Features</h2>\n<ul>\n<li><code>chans</code>: Channel mode tracking, must be loaded while miniirc is disconnected.</li>\n<li><code>ensure_connection</code>: <a href=\"https://github.com/luk3yx/miniirc/issues/15\" rel=\"nofollow\">https://github.com/luk3yx/miniirc/issues/15</a></li>\n<li><code>mp</code>: <em>(WIP)</em> Multiprocessing handlers for miniirc.</li>\n<li><code>testfeature</code>: Debugging</li>\n<li><code>users</code>: User tracking, must be loaded while miniirc is disconnected.</li>\n<li><code>_json</code> <em>(Proof-of-concept)</em>: Parse JSON messages.</li>\n</ul>\n<h3><code>irc.users</code></h3>\n<p><code>irc.users</code> adds rudimentary user tracking to miniirc.</p>\n<h4><code>User</code> objects</h4>\n<p>User objects store the current user's information and user-defined data, and\ncan be accessed with <code>irc.users[Hostmask]</code> or <code>irc.users['nick']</code>.</p>\n<p>The following items are available in <code>User</code> objects:</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>nick</code></td>\n<td>The user's current nickname.</td>\n</tr>\n<tr>\n<td><code>ident</code></td>\n<td>The user's current ident.</td>\n</tr>\n<tr>\n<td><code>host</code></td>\n<td>The user's current hostname.</td>\n</tr>\n<tr>\n<td><code>realname</code></td>\n<td>The user's <code>realname</code>.</td>\n</tr>\n<tr>\n<td><code>hostmask</code></td>\n<td>A <code>Hostmask</code> object containing the user's hostmask.</td>\n</tr>\n<tr>\n<td><code>raw_hostmask</code></td>\n<td>A string containing <code>nick!user@host</code>.</td>\n</tr>\n<tr>\n<td><code>channels</code></td>\n<td>A set containing <code>Channel</code> objects for channels the user is currently in.</td>\n</tr>\n<tr>\n<td><code>account</code></td>\n<td>A string containing the user's current NickServ account, or <code>None</code> if the user isn't logged in.</td>\n</tr>\n<tr>\n<td><code>avatar_url</code></td>\n<td>The avatar URL of the user. Currently only IRCCloud avatars work.</td>\n</tr></tbody></table>\n<p>You can also set and get items with strings as keys and JSON-compatible objects\nas values.</p>\n<p><code>User</code> objects have the following helper functions:</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>msg(*text)</code></td>\n<td>Send a <code>PRIVMSG</code> to the user.</td>\n</tr>\n<tr>\n<td><code>me(*text)</code></td>\n<td>Send a <code>CTCP ACTION</code> (<code>/me</code>) to the user.</td>\n</tr>\n<tr>\n<td><code>notice(*text)</code></td>\n<td>Send a <code>NOTICE</code> to the user.</td>\n</tr>\n<tr>\n<td><code>kick(channel, reason='')</code></td>\n<td>Kicks the user from <code>channel</code> (a string or <code>Channel</code> object).</td>\n</tr></tbody></table>\n<h3><code>irc.chans</code></h3>\n<p><code>irc.chans</code> adds channel mode tracking on top of <code>irc.users</code>. You can get\nchannels with <code>irc.chans['#channel-name']</code></p>\n<h4><code>Channel</code> objects</h4>\n<p><code>Channel</code> objects have the following attributes:</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>The name of the channel.</td>\n</tr>\n<tr>\n<td><code>modes</code></td>\n<td>A <code>ModeList</code> object containing a list of modes.</td>\n</tr>\n<tr>\n<td><code>topic</code></td>\n<td>The channel topic.</td>\n</tr>\n<tr>\n<td><code>users</code></td>\n<td>A <code>set</code> containing <code>User</code> objects for members of this channel.</td>\n</tr></tbody></table>\n<h4><code>ModeList</code> objects</h4>\n<p>ModeList objects store a list of modes, and have the following functions:</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>getbool(mode)</code></td>\n<td>Returns <code>True</code> if <code>mode</code> (a single-character string) is set on the corresponding channel. <em>Use this for <code>+i</code>, <code>+t</code>, etc</em></td>\n</tr>\n<tr>\n<td><code>getstr(mode, default=None)</code></td>\n<td>Return the parameter <code>mode</code> was set with, otherwise <code>default</code>. <em>Use this for <code>+k</code>, <code>+l</code>, etc</em></td>\n</tr>\n<tr>\n<td><code>getset(mode)</code></td>\n<td>Return a <code>frozenset</code> containing all the entries stored in <code>mode</code>. If you plan to use this for modes such as <code>+b</code>, you may want to run <code>MODE #channel +b</code> when the bot/client joins the channel to populate the list. <em>Use this for <code>+b</code>, <code>+e</code>, <code>+o</code>, <code>+v</code>, etc</em></td>\n</tr>\n<tr>\n<td><code>hasstr(mode)</code></td>\n<td>Returns <code>True</code> if <code>mode</code> is set with a single parameter, otherwise <code>False</code>.</td>\n</tr>\n<tr>\n<td><code>hasset(mode)</code></td>\n<td>Equivalent to <code>len(getset(mode)) &gt; 0</code>.</td>\n</tr></tbody></table>\n<p><em>You can access <code>ModeList</code> objects like <code>dict</code>s, however this will require\nextra type checking code if you plan to use mypy or another type checker.</em></p>\n<h3><code>irc.mp</code></h3>\n<p>Multiprocessing handlers. You can create multiprocessing handlers with\n<code>irc.mp.Handler</code> and <code>irc.mp.CmdHandler</code>. These handlers are called with the\nlimited <code>RestrictedIRC</code> object (a subclass of <code>AbstractIRC</code>) instead of the\nnormal <code>IRC</code> object.</p>\n<p>The following functions/variables work with <code>RestrictedIRC</code>:</p>\n<p><code>active_caps</code>, <code>channels</code>, <code>connect_modes</code>, <code>ctcp</code>, <code>debug</code>, <code>ident</code>, <code>ip</code>,\n<code>ircv3_caps</code>, <code>isupport</code>, <code>me</code>, <code>msg</code>, <code>nick</code>, <code>notice</code>, <code>persist</code>,\n<code>ping_interval</code>, <code>port</code>, <code>quit_message</code>, <code>quote</code>, <code>realname</code>, <code>ssl</code>,\n<code>verify_ssl</code></p>\n<p>Trying to modify these variables will result in an <code>AttributeError</code> or the set\noperation silently failing.</p>\n<h2>Misc classes</h2>\n<h3>AbstractIRC</h3>\n<p>The <code>miniirc_extras.AbstractIRC</code> class provides an easy way to type check <code>IRC</code>\nobjects without stub files.</p>\n<h3>Hostmask</h3>\n<p>miniirc_extras adds the abstract-ish class <code>miniirc_extras.Hostmask</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miniirc_extras</span> <span class=\"kn\">import</span> <span class=\"n\">Hostmask</span>\n\n<span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">Hostmask</span><span class=\"p\">)</span>                    <span class=\"c1\"># False</span>\n<span class=\"nb\">isinstance</span><span class=\"p\">((</span><span class=\"s1\">'nick'</span><span class=\"p\">,</span> <span class=\"mi\">123</span><span class=\"p\">,</span> <span class=\"s1\">'host'</span><span class=\"p\">),</span> <span class=\"n\">Hostmask</span><span class=\"p\">)</span>     <span class=\"c1\"># False</span>\n<span class=\"nb\">isinstance</span><span class=\"p\">((</span><span class=\"s1\">'nick'</span><span class=\"p\">,</span> <span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"s1\">'host'</span><span class=\"p\">),</span> <span class=\"n\">Hostmask</span><span class=\"p\">)</span>  <span class=\"c1\"># True</span>\n\n<span class=\"n\">Hostmask</span><span class=\"p\">(</span><span class=\"s1\">'nick'</span><span class=\"p\">,</span> <span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"s1\">'host'</span><span class=\"p\">)</span> <span class=\"c1\"># ('nick', 'user', 'host')</span>\n<span class=\"n\">Hostmask</span><span class=\"p\">(</span><span class=\"mi\">123456</span><span class=\"p\">,</span> <span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"s1\">'host'</span><span class=\"p\">)</span> <span class=\"c1\"># TypeError</span>\n</pre>\n<h2>Creating new features</h2>\n<p><em>This API will probably change in the future.</em></p>\n<p>You can create your own features with <code>miniirc_extras.Feature</code>:</p>\n<pre><span class=\"nd\">@miniirc_extras</span><span class=\"o\">.</span><span class=\"n\">Feature</span><span class=\"p\">(</span><span class=\"s1\">'feature_name'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyFeature</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'test_func called with'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_irc</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'MyFeature called with'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_irc</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">irc</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_irc</span> <span class=\"o\">=</span> <span class=\"n\">irc</span>\n</pre>\n<p>Once registered, you can <code>require</code> and use it:</p>\n<pre><span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">require</span><span class=\"p\">(</span><span class=\"s1\">'feature_name'</span><span class=\"p\">)</span>\n\n<span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">feature_name</span><span class=\"p\">()</span>           <span class=\"c1\"># MyFeature called with &lt;miniirc.IRC object&gt;</span>\n<span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">feature_name</span><span class=\"o\">.</span><span class=\"n\">test_func</span><span class=\"p\">()</span> <span class=\"c1\"># test_func called with &lt;miniirc.IRC object&gt;</span>\n</pre>\n<h2>Miscellaneous functions</h2>\n<p>Some miscellaneous functions and classes are located in <code>miniirc_extras.utils</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DummyIRC(...)</code></td>\n<td>A subclass of <code>miniirc.IRC</code> that cannot connect to servers. <code>DummyIRC.__init__</code> has no required parameters.</td>\n</tr>\n<tr>\n<td><code>dict_to_tags(tags)</code></td>\n<td>Converts a dict containing strings and booleans into an IRCv3 tags string. Example: <code>dict_to_tags({'tag1': True, 'tag2': 'tag-data'})</code> \u2192 <code>b'@tag1;tag2=tag-data '</code></td>\n</tr>\n<tr>\n<td><code>get_raw_socket(irc)</code></td>\n<td>Attempts to get the raw socket from an AbstractIRC object. This is not recommended, and under no circumstances should you attempt to receive data using this socket. <strong>Only use this if there is no alternative.</strong> Raises a miniirc_extras.error if no socket can be found.</td>\n</tr>\n<tr>\n<td><code>tags_to_dict(tag_list, separator = ';')</code></td>\n<td>Converts a tags list (<code>tag1;tag2=tag-data</code>) joined by <code>separator</code> into a <code>dict</code> containing strings and booleans.</td>\n</tr>\n<tr>\n<td><code>ircv3_message_parser(msg, *, colon=True)</code></td>\n<td>The same as <code>miniirc.ircv3_message_parser</code>, but also accepts <code>bytes</code> and <code>bytearray</code>s. The <code>colon</code> keyword argument works in the same way as the <code>colon</code> keyword argument on <code>miniirc.Handler</code>.</td>\n</tr>\n<tr>\n<td><code>hostmask_to_str(hostmask)</code></td>\n<td>Converts a <code>Hostmask</code> object into a <code>nick!user@host</code> string.</td>\n</tr>\n<tr>\n<td><code>ircv2_message_unparser(cmd, hostmask, tags, args, *, colon=True, encoding='utf-8')</code></td>\n<td>Converts miniirc-style message data into an IRCv2 message encoded with <code>encoding</code> (or <code>None</code> to return a <code>str</code>). When <code>colon</code> is <code>False</code>, <code>args[-1]</code> will have a colon prepended to it.</td>\n</tr>\n<tr>\n<td><code>ircv3_message_unparser(cmd, hostmask, tags, args, *, colon=True, encoding='utf-8')</code></td>\n<td>The same as <code>ircv2_message_unparser</code>, but tags are added.</td>\n</tr>\n<tr>\n<td><code>namedtuple(...)</code></td>\n<td>Alias for <code>collections.namedtuple</code> on Python 3.7+, otherwise a wrapper that adds <code>defaults</code> and <code>module</code> keyword arguments.</td>\n</tr>\n<tr>\n<td><code>VersionInfo(major=0, minor=0, micro=0, releaselevel='final', serial=0)</code></td>\n<td>A <code>namedtuple</code> similar to <code>type(sys.version_info)</code>.</td>\n</tr></tbody></table>\n<p><em>Note that <code>dict_to_tags</code> and <code>tags_to_dict</code> are available in miniirc as\ninternal functions, however they can and will change.</em></p>\n<h3><code>miniirc_extras.utils.irc_from_url</code></h3>\n<p>Allows you to create <code>IRC</code> objects from URLs, for example\n<code>irc_from_url('irc://nick@ssl-server.example/#channel1,#channel2')</code> will create\nan <code>IRC</code> object with the nickname <code>nick</code>. Any keyword arguments passed to\n<code>irc_from_url</code> are sent to <code>IRC()</code>.</p>\n<h3><code>miniirc_extras.utils.HandlerGroup</code></h3>\n<p>Allows you to create a group of handlers and apply them in bulk to <code>IRC</code>\nobjects.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Handler(...)</code></td>\n<td>Adds a <code>Handler</code> to the group, uses the same syntax as <code>irc.Handler</code>.</td>\n</tr>\n<tr>\n<td><code>CmdHandler(...)</code></td>\n<td>Adds a <code>CmdHandler</code> to the group, uses the same syntax as <code>irc.CmdHandler</code>.</td>\n</tr>\n<tr>\n<td><code>add_to(irc_or_group)</code></td>\n<td>Adds all the handlers in this group to an IRC object or another handler group.</td>\n</tr>\n<tr>\n<td><code>copy()</code></td>\n<td>Returns another handler group with the same handlers as this one.</td>\n</tr></tbody></table>\n<h3><code>miniirc_extras.utils.numerics</code></h3>\n<p>An <code>Enum</code> of most of the IRC numerics in <a href=\"https://tools.ietf.org/html/rfc1459\" rel=\"nofollow\">RFC 1459</a>, <a href=\"https://tools.ietf.org/html/rfc2812\" rel=\"nofollow\">RFC 2812</a>, and\n<a href=\"https://modern.ircdocs.horse/#numerics\" rel=\"nofollow\">modern.ircdocs.horse</a>. See\n<code>miniirc_extras/_numerics.py</code> for a list of\nnumerics and their names.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">miniirc</span>\n<span class=\"kn\">from</span> <span class=\"nn\">miniirc_extras.utils</span> <span class=\"kn\">import</span> <span class=\"n\">numerics</span>\n\n<span class=\"nd\">@miniirc</span><span class=\"o\">.</span><span class=\"n\">Handler</span><span class=\"p\">(</span><span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">RPL_WELCOME</span><span class=\"p\">,</span> <span class=\"n\">colon</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">(</span><span class=\"n\">irc</span><span class=\"p\">,</span> <span class=\"n\">hostmask</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Connected to IRC!'</span><span class=\"p\">)</span>\n</pre>\n<p>Another example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">miniirc_extras.utils</span> <span class=\"kn\">import</span> <span class=\"n\">numerics</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">RPL_ISUPPORT</span>\n<span class=\"o\">&lt;</span><span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">RPL_ISUPPORT</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"err\">\u200b</span><span class=\"mi\">0</span><span class=\"err\">\u200b</span><span class=\"mi\">5</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">numerics</span><span class=\"p\">[</span><span class=\"s1\">'RPL_MOTD'</span><span class=\"p\">]</span>\n<span class=\"o\">&lt;</span><span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">RPL_MOTD</span><span class=\"p\">:</span> <span class=\"mi\">372</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">numerics</span><span class=\"p\">(</span><span class=\"mi\">465</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">ERR_YOUREBANNEDCREEP</span><span class=\"p\">:</span> <span class=\"mi\">465</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">numerics</span><span class=\"p\">(</span><span class=\"s1\">'422'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">ERR_NOMOTD</span><span class=\"p\">:</span> <span class=\"mi\">422</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">numerics</span><span class=\"o\">.</span><span class=\"n\">RPL_YOURHOST</span><span class=\"p\">)</span>\n<span class=\"s1\">'002'</span>\n</pre>\n<h3><code>miniirc_extras.aioirc</code></h3>\n<p>An asyncio-oriented version of <code>miniirc.IRC</code>. Example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span><span class=\"o\">,</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">miniirc_extras</span> <span class=\"kn\">import</span> <span class=\"n\">aioirc</span>\n\n<span class=\"n\">irc</span> <span class=\"o\">=</span> <span class=\"n\">aioirc</span><span class=\"o\">.</span><span class=\"n\">AsyncIRC</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"mi\">6697</span><span class=\"p\">,</span> <span class=\"n\">nickname</span><span class=\"p\">,</span> <span class=\"s1\">'#botwar'</span><span class=\"p\">,</span> <span class=\"n\">auto_connect</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@irc</span><span class=\"o\">.</span><span class=\"n\">Handler</span><span class=\"p\">(</span><span class=\"s1\">'PRIVMSG'</span><span class=\"p\">,</span> <span class=\"n\">colon</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">handle_privmsg</span><span class=\"p\">(</span><span class=\"n\">irc</span><span class=\"p\">,</span> <span class=\"n\">hostmask</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'#botwar'</span> <span class=\"ow\">and</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'&gt;thread_test'</span><span class=\"p\">:</span>\n        <span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">msg</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s1\">'[Thread] Waiting 1 second...'</span><span class=\"p\">)</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">msg</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s1\">'[Thread] Done!'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@irc</span><span class=\"o\">.</span><span class=\"n\">Handler</span><span class=\"p\">(</span><span class=\"s1\">'PRIVMSG'</span><span class=\"p\">,</span> <span class=\"n\">colon</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle_privmsg</span><span class=\"p\">(</span><span class=\"n\">irc</span><span class=\"p\">,</span> <span class=\"n\">hostmask</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'#botwar'</span> <span class=\"ow\">and</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'&gt;coro_test'</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">msg</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s1\">'[Coroutine] Waiting 1 second...'</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">msg</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s1\">'[Coroutine] Done!'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">irc</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n<p>This probably doesn't need to be used unless asyncio-based libraries need to be\nused.</p>\n<h3><code>miniirc_extras.formatting</code></h3>\n<p>Text formatting. Inspired by <a href=\"https://pypi.org/project/ircmessage/\" rel=\"nofollow\">ircmessage</a>.</p>\n<h4><code>colours</code>/<code>colors</code> enum</h4>\n<p>The <code>colours</code> (or <code>colors</code>) enum contains colours and their corresponding code.\nDo not use these to format text, instead use the below <code>style</code> and <code>colorize</code>\nfunctions.</p>\n<h4><code>Styler</code> objects</h4>\n<p>Styler objects are callables that apply IRC formatting to strings.</p>\n<pre><span class=\"n\">miniirc_extras</span><span class=\"o\">.</span><span class=\"n\">formatting</span><span class=\"o\">.</span><span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">bg</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span>\n        <span class=\"n\">bold</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">italics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">underline</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">reverse_colour</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">strikethrough</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">spoiler</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">monospace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">reset</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p><em>Note that <code>Styler</code> accepts both <code>reverse_colour</code> and <code>reverse_color</code>.</em></p>\n<p><code>fg</code> and <code>bg</code> can be strings or values from the aforementioned <code>Enum</code>.</p>\n<p>The parameters passed to <code>__init__</code> are available as attributes on the object,\nfor example <code>styler.bold</code>.</p>\n<p>Setting <code>reset</code> to <code>False</code> is not recommended, as when enabled it only resets\nany changed formatting.</p>\n<p>For cleaner code, you can also use\n<code>miniirc_extras.formatting.style(text, fg=None, ...)</code>.</p>\n<p><strong>Example:</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miniirc_extras</span> <span class=\"kn\">import</span> <span class=\"n\">formatting</span>\n\n<span class=\"n\">styler</span> <span class=\"o\">=</span> <span class=\"n\">formatting</span><span class=\"o\">.</span><span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"s1\">'red'</span><span class=\"p\">,</span> <span class=\"n\">bold</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">monospace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">styler</span><span class=\"p\">(</span><span class=\"s1\">'Test message'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">styler</span><span class=\"o\">.</span><span class=\"n\">fg</span><span class=\"p\">)</span>    <span class=\"c1\"># &lt;colours.red: 04&gt;</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">styler</span><span class=\"o\">.</span><span class=\"n\">fg</span><span class=\"p\">)</span>    <span class=\"c1\"># None</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">styler</span><span class=\"o\">.</span><span class=\"n\">bold</span><span class=\"p\">)</span>  <span class=\"c1\"># True</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">))</span>    <span class=\"c1\"># '\\x11\\x02\\x0304Test message\\x0399\\x02\\x11'</span>\n\n<span class=\"n\">msg2</span> <span class=\"o\">=</span> <span class=\"n\">formatting</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"p\">(</span><span class=\"s1\">'Test message'</span><span class=\"p\">,</span> <span class=\"s1\">'red'</span><span class=\"p\">,</span> <span class=\"n\">bold</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">monospace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">msg</span> <span class=\"o\">==</span> <span class=\"n\">msg2</span> <span class=\"c1\"># No error</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">formatting</span><span class=\"o\">.</span><span class=\"n\">unstyle</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)))</span> <span class=\"c1\"># 'Test message'</span>\n</pre>\n<h4>\"Lightweight\" stylers</h4>\n<p>There are a number of predefined <code>Styler</code>s that are more efficient (if you are\nonly adding one style):</p>\n<pre><span class=\"n\">bold</span>            <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">bold</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">italics</span>         <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">italics</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">italic</span>          <span class=\"o\">=</span> <span class=\"n\">italics</span>\n<span class=\"n\">underline</span>       <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">underline</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">reverse_colour</span>  <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">reverse_colour</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">reverse_color</span>   <span class=\"o\">=</span> <span class=\"n\">reverse_colour</span>\n<span class=\"n\">strikethrough</span>   <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">strikethrough</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">monospace</span>       <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">monospace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">spoiler</span>         <span class=\"o\">=</span> <span class=\"n\">Styler</span><span class=\"p\">(</span><span class=\"n\">spoiler</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Lightweight stylers are subclassed from <code>Styler</code> and will run slightly faster,\nprovided you are only changing one style.</p>\n<p>You can also use <code>miniirc_extras.formatting.colorize(text, fg)</code> (or\n<code>miniirc_extras.formatting.colourise(text, fg)</code>) if you are only changing the\nforeground colour/color for a similarly small speed improvement.</p>\n<p><em>Note that <code>formatting.style(text, 'red', bold=True)</code> is recommended over\n<code>formatting.bold(formatting.colorize(text, 'red'))</code>, as it is more readable\nand probably faster.</em></p>\n<h3>Deprecated functions.</h3>\n<p>These functions still work for now but will probably be removed from\nminiirc_extras v1.0.0:</p>\n<h4><code>miniirc_extras.DummyIRC</code></h4>\n<p>Now called <code>miniirc_extras.utils.DummyIRC</code>.</p>\n<h4><code>miniirc_extras.VersionInfo</code></h4>\n<p>Now called <code>miniirc_extras.utils.VersionInfo</code>.</p>\n<h4>Other planned breaking changes</h4>\n<ul>\n<li>To coincide with miniirc v2.0.0, all functions that take a <code>colon</code> keyword\nargument here will default to <code>False</code> (instead of <code>True</code>). This may change\nin miniirc_extras v1.0.0 instead.</li>\n<li>If Python 3.5 is obsolete by the time miniirc_extras v1.0.0 is released,\nsupport may be dropped.</li>\n</ul>\n\n          </div>"}, "last_serial": 6504864, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6e521e15ebd4fcd04341e4535d4e8035", "sha256": "e7958f4d0463e5b2531af32a9fd4c3884414b084c4d8a0ee613c9b3e3fc00973"}, "downloads": -1, "filename": "miniirc_extras-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e521e15ebd4fcd04341e4535d4e8035", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4104, "upload_time": "2019-04-30T05:09:37", "upload_time_iso_8601": "2019-04-30T05:09:37.798783Z", "url": "https://files.pythonhosted.org/packages/a7/95/407108fefcaf8f03e28460f0bad3c4781fd5b875cd7f06d3e8fbfb0c5e44/miniirc_extras-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d9676b5add8270be17a486cc693ea95", "sha256": "7a0b094edd4844962704f61a4d93738192420b07c84150d87710036cfe7e7c2a"}, "downloads": -1, "filename": "miniirc_extras-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6d9676b5add8270be17a486cc693ea95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2757, "upload_time": "2019-04-30T05:09:42", "upload_time_iso_8601": "2019-04-30T05:09:42.218594Z", "url": "https://files.pythonhosted.org/packages/f5/47/a8c42283006a432e734b9aff0c3ee57987b3da7df2649f3e9c22b10dbd38/miniirc_extras-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "66609b613e9ff9836cb11f5fa8c61d37", "sha256": "1920662168d1de4a0ce2df344cdd6482073f7210a613cacbf17626ae25e0aa62"}, "downloads": -1, "filename": "miniirc_extras-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "66609b613e9ff9836cb11f5fa8c61d37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6041, "upload_time": "2019-05-09T05:06:32", "upload_time_iso_8601": "2019-05-09T05:06:32.736706Z", "url": "https://files.pythonhosted.org/packages/0b/df/f43c09d614899c74e13f00171f723f5b6beb74c85564b746cb01475157b7/miniirc_extras-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4e5a1327db76b62c124c5affc2c7812", "sha256": "4fc496c1a8d9467b27f4c25572c38cfb585dbefc689c285a6f4d6b2bd93f89da"}, "downloads": -1, "filename": "miniirc_extras-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d4e5a1327db76b62c124c5affc2c7812", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4603, "upload_time": "2019-05-09T05:06:34", "upload_time_iso_8601": "2019-05-09T05:06:34.375237Z", "url": "https://files.pythonhosted.org/packages/19/c8/5f9c345745f211a4c82274c3f794f1c4d5580bf71fe87495cd528f50abc9/miniirc_extras-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "0cf26ec1ced64f1a8971bcfada6dbcf3", "sha256": "ce5057d5fbb6b3d9c89fec99e37c673e6c9573383ca15adb5e1b50998e155948"}, "downloads": -1, "filename": "miniirc_extras-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0cf26ec1ced64f1a8971bcfada6dbcf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6575, "upload_time": "2019-05-09T07:48:23", "upload_time_iso_8601": "2019-05-09T07:48:23.580522Z", "url": "https://files.pythonhosted.org/packages/f7/d5/b767e811500129dc757c2f402ea66acf40d216c852b11d0b44fa3474e37b/miniirc_extras-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c4775ac7f83a3a007ddce6c85e0c3f9", "sha256": "46aa48756985a46b5340646a45f01e602d74e3c5d8f940298e6413828814bc65"}, "downloads": -1, "filename": "miniirc_extras-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9c4775ac7f83a3a007ddce6c85e0c3f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5199, "upload_time": "2019-05-09T07:48:24", "upload_time_iso_8601": "2019-05-09T07:48:24.951170Z", "url": "https://files.pythonhosted.org/packages/a4/a2/151a744b4dbccfb628d2a728fe0d3846e1095eabc8b57373a5c401d8af00/miniirc_extras-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "94b198f4c15526aa79c96d6be3280c89", "sha256": "3f2fe4a2cdb60fbf279121e8448a3d339a1a33710643a517fedc7ed461fd818f"}, "downloads": -1, "filename": "miniirc_extras-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "94b198f4c15526aa79c96d6be3280c89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6574, "upload_time": "2019-05-09T19:54:55", "upload_time_iso_8601": "2019-05-09T19:54:55.121526Z", "url": "https://files.pythonhosted.org/packages/89/6c/b68f7ba83c8b05c481439ccb80153aa83748b6935ba7152bde1af8d242e0/miniirc_extras-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae7916984933c684f31def950a12f499", "sha256": "eff6f152b0ff8252c03fcdef7b9283c504301bf62d17dbdda218a64192d10fa1"}, "downloads": -1, "filename": "miniirc_extras-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ae7916984933c684f31def950a12f499", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5203, "upload_time": "2019-05-09T19:54:56", "upload_time_iso_8601": "2019-05-09T19:54:56.738605Z", "url": "https://files.pythonhosted.org/packages/02/c6/a6d0efd8be232b662f3806aa61a3490246e4b89ba1cc7e33e407b77940c3/miniirc_extras-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7a7dab8ba4310fd8af21cc078d775efc", "sha256": "8d03cef395ca83b8c34281902f8490c3c4b3df9d94ef26152519cd0cef4427e0"}, "downloads": -1, "filename": "miniirc_extras-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7a7dab8ba4310fd8af21cc078d775efc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15539, "upload_time": "2019-05-09T23:27:51", "upload_time_iso_8601": "2019-05-09T23:27:51.020247Z", "url": "https://files.pythonhosted.org/packages/9a/4b/0a8a127bfe69dd9fb2b4e378c394598b73fc988d2977389af838f36add5a/miniirc_extras-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d8ff8951233c0e157c01d3c96acbac2", "sha256": "e6eacbbbc8c9264ce60c2eec088d930f4952bd63f146f2d903455ab7dd9bd1e4"}, "downloads": -1, "filename": "miniirc_extras-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7d8ff8951233c0e157c01d3c96acbac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13411, "upload_time": "2019-05-09T23:27:52", "upload_time_iso_8601": "2019-05-09T23:27:52.837412Z", "url": "https://files.pythonhosted.org/packages/1c/b7/494fc545c31c940e0ad0aec20fee12800dbf0494bec983d1e2d8270ad02c/miniirc_extras-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c21504348cbce32892234dbd7a8f2164", "sha256": "587cbdd3e214062737f776dee854ffbb9d30d1db7d48f63a2aee048a215a5ddd"}, "downloads": -1, "filename": "miniirc_extras-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c21504348cbce32892234dbd7a8f2164", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16610, "upload_time": "2019-05-10T00:31:17", "upload_time_iso_8601": "2019-05-10T00:31:17.517345Z", "url": "https://files.pythonhosted.org/packages/f2/99/2662e84d1b2d5cb9f95964802f0f6d5d45e70d40b45051c08c3a89098678/miniirc_extras-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca1cc8632c30e41ee23ff1395cd30041", "sha256": "ebd53341565f2841d0ffba0527af51f998ac0b19ccce0fe5cec7e873c2b2ac9a"}, "downloads": -1, "filename": "miniirc_extras-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ca1cc8632c30e41ee23ff1395cd30041", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14474, "upload_time": "2019-05-10T00:31:19", "upload_time_iso_8601": "2019-05-10T00:31:19.417560Z", "url": "https://files.pythonhosted.org/packages/58/76/6cf8c4fea4f9a9a38eed6b298839a52fd8b1e92b9d717ea1d82979ff4d2c/miniirc_extras-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "dda3262c620389b70a295c1f6eeb673e", "sha256": "695a883fcf29fae310df1639ac626b84c9e5191ad6db9a6da2b8af188afd0b68"}, "downloads": -1, "filename": "miniirc_extras-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "dda3262c620389b70a295c1f6eeb673e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16738, "upload_time": "2019-05-20T01:15:24", "upload_time_iso_8601": "2019-05-20T01:15:24.646387Z", "url": "https://files.pythonhosted.org/packages/fb/1a/69fd01f74c31f793278944e98446305d4a52b30cc06dc948ad3338fbce99/miniirc_extras-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0316206a79d8c7aa0973efd563a3a1a4", "sha256": "1ea808e2014a012a55f4eae5b4133e63889ee61f5621a002686e330741f6cf34"}, "downloads": -1, "filename": "miniirc_extras-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0316206a79d8c7aa0973efd563a3a1a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14754, "upload_time": "2019-05-20T01:15:26", "upload_time_iso_8601": "2019-05-20T01:15:26.715626Z", "url": "https://files.pythonhosted.org/packages/8a/cb/98c63fed3a5d9da2927a62fe9e5181037223b4b719e607ca3295207cc705/miniirc_extras-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "51f4e7be937b077a265f0d550ee3f497", "sha256": "7a2e07c396a64c906af58e032c857053214619886d66376d14b5d1c2e9c27276"}, "downloads": -1, "filename": "miniirc_extras-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "51f4e7be937b077a265f0d550ee3f497", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18297, "upload_time": "2019-05-20T02:31:01", "upload_time_iso_8601": "2019-05-20T02:31:01.900799Z", "url": "https://files.pythonhosted.org/packages/09/32/bb672feeb08ded5c1ce8bed2f5df3493701c1de809cc9ec73361399b6bfc/miniirc_extras-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a18650460b69059e3c168b7b3e51c0f2", "sha256": "59f0a9cda10a238967d8b4737d1d3c71830c7f795744390f82b2988f4a804a7c"}, "downloads": -1, "filename": "miniirc_extras-0.1.6.tar.gz", "has_sig": false, "md5_digest": "a18650460b69059e3c168b7b3e51c0f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16358, "upload_time": "2019-05-20T02:31:03", "upload_time_iso_8601": "2019-05-20T02:31:03.947109Z", "url": "https://files.pythonhosted.org/packages/87/3a/72c8e1ba929124835c1ae4c008841b5be8f2e566fc1d865684bd4090194c/miniirc_extras-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e53fa5d40a2a8432fade2cb09f95ace7", "sha256": "4d250cc398a7184a4bd3d65d6f0de8e3dbf970558d42eac3fad45a8086e7d91a"}, "downloads": -1, "filename": "miniirc_extras-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e53fa5d40a2a8432fade2cb09f95ace7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18329, "upload_time": "2019-05-20T04:08:41", "upload_time_iso_8601": "2019-05-20T04:08:41.746448Z", "url": "https://files.pythonhosted.org/packages/9b/3f/811a05ce21bfdf4e8cea7bcdaafd888e7580475051a324be5c7781ba16c6/miniirc_extras-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c5629a78d51a0b478f3d879e4ec3d0a", "sha256": "bb54b32bed626a789925c564ded4fb1fecdb545631b94c0807820571a4fac298"}, "downloads": -1, "filename": "miniirc_extras-0.1.7.tar.gz", "has_sig": false, "md5_digest": "5c5629a78d51a0b478f3d879e4ec3d0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16383, "upload_time": "2019-05-20T04:08:43", "upload_time_iso_8601": "2019-05-20T04:08:43.953162Z", "url": "https://files.pythonhosted.org/packages/af/d6/63d847aa475448377f33b2541e877369e080aa1c8e0d31746c12982ee4e7/miniirc_extras-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "01badd10bdf71c74fd1d504c65e54a48", "sha256": "ff70992c78a724008985d96144cdf13593202aca9c8686bae610819e374b6286"}, "downloads": -1, "filename": "miniirc_extras-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "01badd10bdf71c74fd1d504c65e54a48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18671, "upload_time": "2019-05-31T23:03:44", "upload_time_iso_8601": "2019-05-31T23:03:44.237521Z", "url": "https://files.pythonhosted.org/packages/63/6d/9d2bf49872daca0645785ee140539150e10736ba7815897143c0dc657f5b/miniirc_extras-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb9b25d782424bb47fbc50378a214f88", "sha256": "f3a3608aba174547d24d27a322016a2efe68691b3e0e7235707f7ed28007972b"}, "downloads": -1, "filename": "miniirc_extras-0.1.8.tar.gz", "has_sig": false, "md5_digest": "cb9b25d782424bb47fbc50378a214f88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16869, "upload_time": "2019-05-31T23:03:46", "upload_time_iso_8601": "2019-05-31T23:03:46.184547Z", "url": "https://files.pythonhosted.org/packages/59/b9/0c563ee068f44ce042827220ee1fa83598c1604bfd95c3520a68addba7c1/miniirc_extras-0.1.8.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a237f6a74d67c3d8b20fdc4e3f66205e", "sha256": "de91febb003e6b66cf7e6cb65a9d2e1d423d624579f2f26adee6eddd9922792f"}, "downloads": -1, "filename": "miniirc_extras-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a237f6a74d67c3d8b20fdc4e3f66205e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20410, "upload_time": "2019-06-10T01:48:58", "upload_time_iso_8601": "2019-06-10T01:48:58.140462Z", "url": "https://files.pythonhosted.org/packages/31/08/e13af751ffa22ca6d8a9c0320ce772629cc579834794599a92cec9f2ae5a/miniirc_extras-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90bbd70b14b9aacc12ffaa5635d0ebae", "sha256": "8a0691233fb602230f6be8f2f61cd4a254f3d03edd3ec97c83629dc09d500215"}, "downloads": -1, "filename": "miniirc_extras-0.2.0.tar.gz", "has_sig": false, "md5_digest": "90bbd70b14b9aacc12ffaa5635d0ebae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18803, "upload_time": "2019-06-10T01:49:00", "upload_time_iso_8601": "2019-06-10T01:49:00.296631Z", "url": "https://files.pythonhosted.org/packages/7d/cd/ee632a0744180de81ec100fc0575c1639414f0dd78096019b6d4a22c37c3/miniirc_extras-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6003b0b1a2224167a0f8d5e78b71d9b0", "sha256": "51d11868730d5213b7069a880d586be4d5f791f43fe7664bef954ca9a58b6a20"}, "downloads": -1, "filename": "miniirc_extras-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6003b0b1a2224167a0f8d5e78b71d9b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 21318, "upload_time": "2019-06-18T09:44:06", "upload_time_iso_8601": "2019-06-18T09:44:06.637663Z", "url": "https://files.pythonhosted.org/packages/0c/79/edbbc083a33fdcdfc5feb1d4879a38ca09294d655cd4a962d48215dc7739/miniirc_extras-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9387d6ec5d52039c33c84127c5c8b4bb", "sha256": "8348f211c2d91a057957dc12cddb78fac0d60d75c471e5f315a24fe1afc9976d"}, "downloads": -1, "filename": "miniirc_extras-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9387d6ec5d52039c33c84127c5c8b4bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19379, "upload_time": "2019-06-18T09:44:08", "upload_time_iso_8601": "2019-06-18T09:44:08.722148Z", "url": "https://files.pythonhosted.org/packages/89/b7/3e7eb38266532dc705a7cc09a7e1195d70d81c92f3c9d12eaeedf784dfec/miniirc_extras-0.2.1.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "64a6d3a35ed5ec9c083cd7bf5e229417", "sha256": "55200dfe6c4c55702eaeed0016c92e950c032bc2e2f457cf645bcb6f2d118251"}, "downloads": -1, "filename": "miniirc_extras-0.2.10-py3-none-any.whl", "has_sig": false, "md5_digest": "64a6d3a35ed5ec9c083cd7bf5e229417", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33335, "upload_time": "2019-07-27T07:15:45", "upload_time_iso_8601": "2019-07-27T07:15:45.164048Z", "url": "https://files.pythonhosted.org/packages/50/e1/9d95ea625f4bc85657aba4e04085131cd568f29604216fb9744ffcf3f50e/miniirc_extras-0.2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c32baf26c5d9c86dc25347b87767d9ba", "sha256": "133bb56a494dd823888a58b7dc86bd9b68252466714af621d9a98218ccdecbd0"}, "downloads": -1, "filename": "miniirc_extras-0.2.10.tar.gz", "has_sig": false, "md5_digest": "c32baf26c5d9c86dc25347b87767d9ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31434, "upload_time": "2019-07-27T07:15:47", "upload_time_iso_8601": "2019-07-27T07:15:47.585969Z", "url": "https://files.pythonhosted.org/packages/53/f4/fe97842f4f9936bc31e297985f153f52e2dfe06b10f984e42b52b7d5da59/miniirc_extras-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "ca3108a627d8de3ad8af744768deef91", "sha256": "4245f532c076cf67be1c05b6c3715daa8bf162c071e3f929914482fe2ca5f2d7"}, "downloads": -1, "filename": "miniirc_extras-0.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "ca3108a627d8de3ad8af744768deef91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33602, "upload_time": "2019-07-27T07:34:45", "upload_time_iso_8601": "2019-07-27T07:34:45.331461Z", "url": "https://files.pythonhosted.org/packages/0f/78/457031bb8dd1d875bba3e8d1228cd22739d5c7bdd838543585c9c5523b5b/miniirc_extras-0.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07ad9fb0f5217ec73ae547d377482251", "sha256": "8b3859885e261ea041291e700543a0cb36c77d1be75905014d0962561d58f19e"}, "downloads": -1, "filename": "miniirc_extras-0.2.11.tar.gz", "has_sig": false, "md5_digest": "07ad9fb0f5217ec73ae547d377482251", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31626, "upload_time": "2019-07-27T07:34:47", "upload_time_iso_8601": "2019-07-27T07:34:47.769070Z", "url": "https://files.pythonhosted.org/packages/99/ae/863dad83d28f730b74f63508241e00a7e71bca38b5b1c8e9b25db2d857c7/miniirc_extras-0.2.11.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "606a1ee159dd2480dbf67a9b3a2e80b0", "sha256": "247c28bb3b5c0976b25cc03f155a26842e2d2f971b262e4cdeb0d159162c2783"}, "downloads": -1, "filename": "miniirc_extras-0.2.12-py3-none-any.whl", "has_sig": false, "md5_digest": "606a1ee159dd2480dbf67a9b3a2e80b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 34054, "upload_time": "2019-08-20T06:08:19", "upload_time_iso_8601": "2019-08-20T06:08:19.081788Z", "url": "https://files.pythonhosted.org/packages/4d/08/1bd190004be84f6dfa3d08e6659576c6335126ce05b5308e572e050abec3/miniirc_extras-0.2.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edf814116158ebe82a8b30c9a84c5b25", "sha256": "4e0643349172f2665abcf7fe6d3e720c6d015fd4fbbbff547cb4531f72aaed13"}, "downloads": -1, "filename": "miniirc_extras-0.2.12.tar.gz", "has_sig": false, "md5_digest": "edf814116158ebe82a8b30c9a84c5b25", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 32348, "upload_time": "2019-08-16T02:04:26", "upload_time_iso_8601": "2019-08-16T02:04:26.164667Z", "url": "https://files.pythonhosted.org/packages/ba/50/2502a7f638331265f134fe8361be893129749be9c4b327ec2fc45e3c7458/miniirc_extras-0.2.12.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e26f207698738857943e83c805dafd4f", "sha256": "683756eeb8a1b124b12ecb25ea3f1c3de7238f406b1c530ead30a93d15f512b3"}, "downloads": -1, "filename": "miniirc_extras-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e26f207698738857943e83c805dafd4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26549, "upload_time": "2019-06-20T03:00:28", "upload_time_iso_8601": "2019-06-20T03:00:28.590396Z", "url": "https://files.pythonhosted.org/packages/b1/45/fae250ba1c33f02a9213b9b41ac1299a5df44ca5e19b5ae5ad0636b14313/miniirc_extras-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5e45a4fcb5a29237f1dbc06a29629a9", "sha256": "47c0ada4426c69c7b594a5ed64aa47a29fe3b101dd1eb4ce7bd350070b25c117"}, "downloads": -1, "filename": "miniirc_extras-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f5e45a4fcb5a29237f1dbc06a29629a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24270, "upload_time": "2019-06-20T03:00:31", "upload_time_iso_8601": "2019-06-20T03:00:31.392562Z", "url": "https://files.pythonhosted.org/packages/b1/66/2dc832a925f671782bcd8f04951f99311a31b95d941f84f8a222bca9862b/miniirc_extras-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b2107d2952206cf6ba6f7940e70cd821", "sha256": "ed53a5048246413e0d6f571089c9546fd003e916c76f0c375e735c2f5f13f81b"}, "downloads": -1, "filename": "miniirc_extras-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b2107d2952206cf6ba6f7940e70cd821", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29760, "upload_time": "2019-06-30T08:31:32", "upload_time_iso_8601": "2019-06-30T08:31:32.797189Z", "url": "https://files.pythonhosted.org/packages/50/ad/d3f28f00b77c8045ef3567e2b54ca7893be763af1c0626cfce9ff2dd9638/miniirc_extras-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cac114ae232e98f935aa35b27368cf95", "sha256": "5a5873d4c28f57db4707bf09559dca57f63507f767fa9a5ab8dfcc4d9320e30e"}, "downloads": -1, "filename": "miniirc_extras-0.2.4.tar.gz", "has_sig": false, "md5_digest": "cac114ae232e98f935aa35b27368cf95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 28208, "upload_time": "2019-06-30T08:31:35", "upload_time_iso_8601": "2019-06-30T08:31:35.029868Z", "url": "https://files.pythonhosted.org/packages/1a/1a/4d478e49965abfafd83a65a1ee30e53af0646907691e2d21008ed59449ad/miniirc_extras-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "8e9f229877a1db6be06d14c4687bc008", "sha256": "fce506af0fc0649a7545bd40a840ea96af45ccbaf116c2078f7b7a8c9d4de281"}, "downloads": -1, "filename": "miniirc_extras-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8e9f229877a1db6be06d14c4687bc008", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29761, "upload_time": "2019-06-30T19:31:08", "upload_time_iso_8601": "2019-06-30T19:31:08.554446Z", "url": "https://files.pythonhosted.org/packages/8e/6e/4f75adb5f22b39735400bb6b4885b7f9dc4f7e3011241363b69e1939d2f5/miniirc_extras-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6e906480219a78dda5ef42a15f16076", "sha256": "72af923f36847694c5cbf124c3142fc61e36129cdc30312f8c97beb6700efdb8"}, "downloads": -1, "filename": "miniirc_extras-0.2.5.tar.gz", "has_sig": false, "md5_digest": "a6e906480219a78dda5ef42a15f16076", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 28211, "upload_time": "2019-06-30T19:31:11", "upload_time_iso_8601": "2019-06-30T19:31:11.071077Z", "url": "https://files.pythonhosted.org/packages/a7/68/acc18b2cc2592a733b6330c9e903aa1d679822931359e921c5c266ef0ca0/miniirc_extras-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "defaaf66d8641bdc2170b9609aa132ab", "sha256": "3792c40e7cbd13e8e3bdd630ba62417291dd9c151e0de50d7b8c09498f632499"}, "downloads": -1, "filename": "miniirc_extras-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "defaaf66d8641bdc2170b9609aa132ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 30163, "upload_time": "2019-07-06T02:19:59", "upload_time_iso_8601": "2019-07-06T02:19:59.421954Z", "url": "https://files.pythonhosted.org/packages/3a/e4/dfdab7ec0a85bf731e4a8ef48836a9e90a7b44fe5a1aeef6bd5fff7d893d/miniirc_extras-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5826939588ceb10c7c214e16d792e8ec", "sha256": "4baa6d3fd3b5320bf1773114c34bac50e4ae65a0421176332a250d1c21a5032f"}, "downloads": -1, "filename": "miniirc_extras-0.2.6.tar.gz", "has_sig": false, "md5_digest": "5826939588ceb10c7c214e16d792e8ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 28800, "upload_time": "2019-07-06T02:20:01", "upload_time_iso_8601": "2019-07-06T02:20:01.885262Z", "url": "https://files.pythonhosted.org/packages/a2/b6/e9893600c37cef8524373c43dcc4edd8e3849719a30d481ca0876c5d02fe/miniirc_extras-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "bfebefe4045a8c86d6808d716088e5aa", "sha256": "5441ececbbed76ac6033f1b4da9bfad84509b3d59fe1164b47e6ef30ab87e3f7"}, "downloads": -1, "filename": "miniirc_extras-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "bfebefe4045a8c86d6808d716088e5aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31509, "upload_time": "2019-07-16T23:53:54", "upload_time_iso_8601": "2019-07-16T23:53:54.363142Z", "url": "https://files.pythonhosted.org/packages/66/42/9c40d425e57ce4ffe4c9648021e236510ef2cde277fdcfa93dc4a2187d2f/miniirc_extras-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dead50e147f3474aeac317d52f6b4b6", "sha256": "672732e4132207386aa454759bd58c2cd1d0a14e785c125b701916a038050bde"}, "downloads": -1, "filename": "miniirc_extras-0.2.7.tar.gz", "has_sig": false, "md5_digest": "9dead50e147f3474aeac317d52f6b4b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 30075, "upload_time": "2019-07-16T23:53:56", "upload_time_iso_8601": "2019-07-16T23:53:56.418956Z", "url": "https://files.pythonhosted.org/packages/f3/70/4c89ca4407421317021ead88910af9c1cde8ea6092039a7155ddffc91d11/miniirc_extras-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "ca01d2a401088cbfe434e34123265f3f", "sha256": "5df4a6051cd3eefb5897b5ac880be37738986b91e52769e453a65f88f03e2989"}, "downloads": -1, "filename": "miniirc_extras-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "ca01d2a401088cbfe434e34123265f3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33226, "upload_time": "2019-07-17T06:29:51", "upload_time_iso_8601": "2019-07-17T06:29:51.477183Z", "url": "https://files.pythonhosted.org/packages/b7/8c/c1524ef4891d8ab8f9580620bb43ef112c82052b9723818c3ea633e623b9/miniirc_extras-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95ca19a29c93d546014c5a402005fb47", "sha256": "c462bf728391add64c12ebc3ac9654bdc8dac9f4c849098b1d836be11539a297"}, "downloads": -1, "filename": "miniirc_extras-0.2.8.tar.gz", "has_sig": false, "md5_digest": "95ca19a29c93d546014c5a402005fb47", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31329, "upload_time": "2019-07-17T06:29:53", "upload_time_iso_8601": "2019-07-17T06:29:53.908876Z", "url": "https://files.pythonhosted.org/packages/54/25/9f5b22de79f78fdd19d49df38d492f1ea032fd5c70e6c6f704191985cc29/miniirc_extras-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "1e2d1b0d59b0c1e2b3c8eebb3b929913", "sha256": "32f7b44ee4341f6df37430e170b3cba7443dd92af3c7bcf73d70a85fd72e31ec"}, "downloads": -1, "filename": "miniirc_extras-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "1e2d1b0d59b0c1e2b3c8eebb3b929913", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33248, "upload_time": "2019-07-26T03:18:35", "upload_time_iso_8601": "2019-07-26T03:18:35.257315Z", "url": "https://files.pythonhosted.org/packages/6e/87/5dd4122239d2920c1a22b3d1420d00fe7174768f12444d82453c9125f127/miniirc_extras-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15ccf09c11589be1350cd804fda7d649", "sha256": "849132413da147ed600941403625a0afe2b8f89c36efbb032f4899db3c978ec2"}, "downloads": -1, "filename": "miniirc_extras-0.2.9.tar.gz", "has_sig": false, "md5_digest": "15ccf09c11589be1350cd804fda7d649", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31350, "upload_time": "2019-07-26T03:18:37", "upload_time_iso_8601": "2019-07-26T03:18:37.922341Z", "url": "https://files.pythonhosted.org/packages/32/44/e381b456a264253c3c1f10948d9dfb0f31daa927fa09b4573152cf66ae2e/miniirc_extras-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a5ca6d696e4a31d8c397cf30b75ebfe4", "sha256": "104cb07983329a657177679c8441a233483cbc58a4047dcd6215487676e201b1"}, "downloads": -1, "filename": "miniirc_extras-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a5ca6d696e4a31d8c397cf30b75ebfe4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 42344, "upload_time": "2019-10-20T06:51:11", "upload_time_iso_8601": "2019-10-20T06:51:11.484862Z", "url": "https://files.pythonhosted.org/packages/3a/4f/ca4a1c47112c6d743009b1492aaa44ab2f78b158f479f356048b4f9d6155/miniirc_extras-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d347a71d0627a22e40c779819c0f6a", "sha256": "cc28162afe34edfe53784e6ebebb6e633bf16b7c64641810773d7268aeaa130d"}, "downloads": -1, "filename": "miniirc_extras-0.3.0.tar.gz", "has_sig": false, "md5_digest": "21d347a71d0627a22e40c779819c0f6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39429, "upload_time": "2019-10-20T06:51:14", "upload_time_iso_8601": "2019-10-20T06:51:14.170782Z", "url": "https://files.pythonhosted.org/packages/90/d8/3d9a189974a8843727b03092e7e7732ed7c51059c5850a1c335aa127e483/miniirc_extras-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "82396dda93f2f837988d16c76afcd607", "sha256": "7c2a4d3d53302180f6bad7ee8dd589a1d48d56e16866808a6b1a5a9c9caedc0a"}, "downloads": -1, "filename": "miniirc_extras-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "82396dda93f2f837988d16c76afcd607", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 41866, "upload_time": "2019-12-08T22:52:29", "upload_time_iso_8601": "2019-12-08T22:52:29.225045Z", "url": "https://files.pythonhosted.org/packages/78/55/81c5f03d9c9945a0a2699719499517d1ae481f08de543e49762026257451/miniirc_extras-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee2cfec4fe33e2b6a49188c0fa4f4bba", "sha256": "7f51dce93294cf239512e8b612c8080622e934bc9c9b057aa1a9a99326b5909b"}, "downloads": -1, "filename": "miniirc_extras-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ee2cfec4fe33e2b6a49188c0fa4f4bba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38726, "upload_time": "2019-12-08T22:52:31", "upload_time_iso_8601": "2019-12-08T22:52:31.667907Z", "url": "https://files.pythonhosted.org/packages/a1/b7/fb93cf6891e5f2c5354be215731f4dbc392f3c57dfd8f1c6471c0edca268/miniirc_extras-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "3a3e595e4a37d95c8ed479aa9bc4e1a4", "sha256": "4545e01da99165a327fadd4db72b0746e690380401d2cf948a3d8d7859d67f09"}, "downloads": -1, "filename": "miniirc_extras-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3a3e595e4a37d95c8ed479aa9bc4e1a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 41861, "upload_time": "2019-12-08T22:54:36", "upload_time_iso_8601": "2019-12-08T22:54:36.272067Z", "url": "https://files.pythonhosted.org/packages/f1/45/ae96750f5cd4ec5a3ca8b7c30369ff09bcbdcf9c5fbec93cbf60de80c93b/miniirc_extras-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46410021f7e87f2fdf7d83ee6f4eb90b", "sha256": "798aab276a763efa948a802c33b9cfa19b9d86adc8c3238122416c616338d714"}, "downloads": -1, "filename": "miniirc_extras-0.3.2.tar.gz", "has_sig": false, "md5_digest": "46410021f7e87f2fdf7d83ee6f4eb90b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38728, "upload_time": "2019-12-08T22:54:38", "upload_time_iso_8601": "2019-12-08T22:54:38.985285Z", "url": "https://files.pythonhosted.org/packages/d1/fb/62efd7ae616cb683972819fa690fb25e5fef01d1202189b3d90f66e2fda1/miniirc_extras-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "6b6c16e0bb5503a017120d8393ef81c4", "sha256": "a5a151389c838ac76c98d0d345f6fd3a84d24e32a11de80e1b77d48f73b2d307"}, "downloads": -1, "filename": "miniirc_extras-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6b6c16e0bb5503a017120d8393ef81c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 41114, "upload_time": "2020-01-23T06:58:46", "upload_time_iso_8601": "2020-01-23T06:58:46.941311Z", "url": "https://files.pythonhosted.org/packages/2a/28/c2058445a08d51be5193ae038240e995d1177be4fcd45e1291baadad38ea/miniirc_extras-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c4c27f1bc4f2763cc4153002367b1b6", "sha256": "610f932ebbcf9447881b26f89fb871de188ebb67d2c490b03eccec6cc84d63a7"}, "downloads": -1, "filename": "miniirc_extras-0.3.3.tar.gz", "has_sig": false, "md5_digest": "2c4c27f1bc4f2763cc4153002367b1b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39075, "upload_time": "2020-01-23T06:58:48", "upload_time_iso_8601": "2020-01-23T06:58:48.643238Z", "url": "https://files.pythonhosted.org/packages/fb/ce/f2e502671d05bfc8e7fc20df67848f60abd0bfc13da711432fe56ae9a8a0/miniirc_extras-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "889dcf8d9f3b71cfca4b8a34a6af02e0", "sha256": "edbf13e1e2626054fc7e8c742b4606b9dee92e3d1bf38c3f4c27ea47dd852946"}, "downloads": -1, "filename": "miniirc_extras-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "889dcf8d9f3b71cfca4b8a34a6af02e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 41099, "upload_time": "2020-01-23T07:07:09", "upload_time_iso_8601": "2020-01-23T07:07:09.967993Z", "url": "https://files.pythonhosted.org/packages/0e/e6/fde774d9366923ee035f8d06e443a72448a988249a6660b610a88b0bce51/miniirc_extras-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecefe6dfd85024cb8206ae0a10b05652", "sha256": "e34b2548a66918c76c194a2c3e944d0fa42341c62e3f55257f68d117ccc6529e"}, "downloads": -1, "filename": "miniirc_extras-0.3.4.tar.gz", "has_sig": false, "md5_digest": "ecefe6dfd85024cb8206ae0a10b05652", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39047, "upload_time": "2020-01-23T07:07:11", "upload_time_iso_8601": "2020-01-23T07:07:11.594364Z", "url": "https://files.pythonhosted.org/packages/7e/33/c4b2c4b68e85889614104b6aed042c7b56efeb55e24f630a3383d1d8d5f1/miniirc_extras-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "889dcf8d9f3b71cfca4b8a34a6af02e0", "sha256": "edbf13e1e2626054fc7e8c742b4606b9dee92e3d1bf38c3f4c27ea47dd852946"}, "downloads": -1, "filename": "miniirc_extras-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "889dcf8d9f3b71cfca4b8a34a6af02e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 41099, "upload_time": "2020-01-23T07:07:09", "upload_time_iso_8601": "2020-01-23T07:07:09.967993Z", "url": "https://files.pythonhosted.org/packages/0e/e6/fde774d9366923ee035f8d06e443a72448a988249a6660b610a88b0bce51/miniirc_extras-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecefe6dfd85024cb8206ae0a10b05652", "sha256": "e34b2548a66918c76c194a2c3e944d0fa42341c62e3f55257f68d117ccc6529e"}, "downloads": -1, "filename": "miniirc_extras-0.3.4.tar.gz", "has_sig": false, "md5_digest": "ecefe6dfd85024cb8206ae0a10b05652", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 39047, "upload_time": "2020-01-23T07:07:11", "upload_time_iso_8601": "2020-01-23T07:07:11.594364Z", "url": "https://files.pythonhosted.org/packages/7e/33/c4b2c4b68e85889614104b6aed042c7b56efeb55e24f630a3383d1d8d5f1/miniirc_extras-0.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:25 2020"}