{"info": {"author": "Al Sweigart", "author_email": "al@inventwithpython.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: MacOS X", "Environment :: Win32 (MS Windows)", "Environment :: X11 Applications", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "PyInputPlus\n===========\n\nA Python 2 and 3 module to provide input()- and raw_input()-like functions with additional validation features, including:\n\n* Re-prompting the user if they enter invalid input.\n* Validating for numeric, boolean, date, time, or yes/no responses.\n* Timeouts or retry limits for user responses.\n* Specifying regexes for whitelists or blacklists of responses.\n* Specifying ranges for numeric inputs.\n* Presenting menus with bulleted, lettered, or numbered options.\n* Allowing case-sensitive or case-insensitive responses.\n\nInstallation\n------------\n\n    pip install pyinputplus\n\nExample Usage\n-------------\n\n    >>> import pyinputplus as pyip\n    >>> result = pyip.inputStr()\n\n    Blank values are not allowed.\n    Hello\n    >>> result\n    'Hello'\n\n    >>> result = pyip.inputNum()\n    forty two\n    'forty two' is not a number.\n    42\n    >>> result\n    42\n\n    >>> result = pyip.inputNum(min=4, max=6)\n    3\n    Input must be at minimum 4.\n    7\n    Input must be at maximum 6.\n    4\n    >>> result\n    4\n\n    >>> result = pyip.inputNum(greaterThan=4, lessThan=6)\n    4\n    Input must be greater than 4.\n    4.1\n    >>> result\n    4.1\n\n    >>> result = pyip.inputStr('Favorite animal> ', blacklistRegexes=['moose'])\n    Favorite animal> moose\n    This response is invalid.\n    Favorite animal> cat\n    >>> result\n    'cat'\n\n    >>> result = inputMenu(['dog', 'cat', 'moose'])\n    Please select one of the following:\n    * dog\n    * cat\n    * moose\n    DoG\n    >>> result\n    'dog'\n\n    >>> result = inputMenu(['dog', 'cat', 'moose'], lettered=True, numbered=False)\n    Please select one of the following:\n    A. dog\n    B. cat\n    C. moose\n    b\n    >>> result\n    'cat'\n\nCommon Input Function Parameters\n--------------------------------\n\nAll input functions have the following parameters:\n\n* `prompt` (str): The text to display before each prompt for user input. Identical to the prompt argument for Python's `raw_input()` and `input()` functions. Default\n* `default` (str, None): A default value to use should the user time out or exceed the number of tries to enter valid input.\n* `blank` (bool): If `True`, blank strings will be allowed as valid user input.\n* `timeout` (int, float): The number of seconds since the first prompt for input after which a TimeoutException is raised the next time the user enters input.\n* `limit` (int): The number of tries the user has to enter valid input before the default value is returned.\n* `strip` (bool, str, None): If `True`, whitespace is stripped from `value`. If a str, the characters in it are stripped from value. If `None`, nothing is stripped. Defaults to `True`.\n* `whitelistRegexes` (Sequence, None): A sequence of regex str that will explicitly pass validation, even if they aren't numbers. Defaults to `None`.\n* `blacklistRegexes` (Sequence, None): A sequence of regex str or (regex_str, response_str) tuples that, if matched, will explicitly fail validation. Defaults to `None`.\n* `applyFunc` (Callable, None): An optional function that is passed the user's input, and returns the new value to use as the input.\n* `validationFunc` (Callable): A function that is passed the user's input value, which raises an exception if the input isn't valid. (The return value of this function is ignored.)\n* `postValidateApplyFunc` (Callable): An optional function that is passed the user's input after it has passed validation, and returns a transformed version for the input function to return.\n\nOther input functions may have additional parameters.\n\nInput Functions\n---------------\n\n* `inputStr()` - Accepts a string. Use this if you basically want Python's `input()` or `raw_input()`, but with PyInputPlus features such as whitelist/blacklist, timeouts, limits, etc.\n* `inputNum()` - Accepts a numeric number. Additionally has `min` and `max` parameters for inclusive bounds and `greaterThan` and `lessThan` parameters for exclusive bounds. Returns an int or float, not a str.\n* `inputInt()` - Accepts an integer number. Also has `min`/`max`/`greaterThan`/`lessThan` parameters. Returns an int, not a str.\n* `inputFloat()` - Accepts a floating-point number. Also has `min`/`max`/`greaterThan`/`lessThan` parameters. Returns a float, not a str.\n* `inputBool()` - Accepts a case-insensitive form of `'True'`, `'T'`, `'False'`, or `'F'` and returns a bool value.\n* `inputChoice()` - Accepts one of the strings in the list of strings passed for its `choices` parameter.\n* `inputMenu()` - Similar to `inputChoice()`, but will also present the choices in a menu with 1, 2, 3... or A, B, C... options if `numbered` or `lettered` are set to `True`.\n* `inputDate()` - Accepts a date typed in one of the `strftime` formats passed to the `formats` parameter. (This has several common formats by default.) Returns a `datetime.date` object.\n* `inputDatetime()` - Same as `inputDate()`, except it handles dates and times. (This has several common formats by default.) Returns a `datetime.datetime` object.\n* `inputTime()` - Same as `inputDate()`, except it handles times. (This has several common formats by default.) Returns a `datetime.time` object.\n* `inputYesNo()` - Accepts a case-insensitive form of `'Yes'`, `'Y'`, `'No'`, or `'N'` and returns `'yes'` or `'no'`.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asweigart/pyinputplus", "keywords": "input validation text gui message box", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "PyInputPlus", "package_url": "https://pypi.org/project/PyInputPlus/", "platform": "", "project_url": "https://pypi.org/project/PyInputPlus/", "project_urls": {"Homepage": "https://github.com/asweigart/pyinputplus"}, "release_url": "https://pypi.org/project/PyInputPlus/0.2.9/", "requires_dist": null, "requires_python": "", "summary": "Provides more featureful versions of input() and raw_input().", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python 2 and 3 module to provide input()- and raw_input()-like functions with additional validation features, including:</p>\n<ul>\n<li>Re-prompting the user if they enter invalid input.</li>\n<li>Validating for numeric, boolean, date, time, or yes/no responses.</li>\n<li>Timeouts or retry limits for user responses.</li>\n<li>Specifying regexes for whitelists or blacklists of responses.</li>\n<li>Specifying ranges for numeric inputs.</li>\n<li>Presenting menus with bulleted, lettered, or numbered options.</li>\n<li>Allowing case-sensitive or case-insensitive responses.</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\npip install pyinputplus</blockquote>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; import pyinputplus as pyip\n&gt;&gt;&gt; result = pyip.inputStr()\n</pre>\n<p>Blank values are not allowed.\nHello\n&gt;&gt;&gt; result\n\u2018Hello\u2019</p>\n<pre>&gt;&gt;&gt; result = pyip.inputNum()\nforty two\n'forty two' is not a number.\n42\n&gt;&gt;&gt; result\n42\n</pre>\n<pre>&gt;&gt;&gt; result = pyip.inputNum(min=4, max=6)\n3\nInput must be at minimum 4.\n7\nInput must be at maximum 6.\n4\n&gt;&gt;&gt; result\n4\n</pre>\n<pre>&gt;&gt;&gt; result = pyip.inputNum(greaterThan=4, lessThan=6)\n4\nInput must be greater than 4.\n4.1\n&gt;&gt;&gt; result\n4.1\n</pre>\n<pre>&gt;&gt;&gt; result = pyip.inputStr('Favorite animal&gt; ', blacklistRegexes=['moose'])\nFavorite animal&gt; moose\nThis response is invalid.\nFavorite animal&gt; cat\n&gt;&gt;&gt; result\n'cat'\n</pre>\n<pre>&gt;&gt;&gt; result = inputMenu(['dog', 'cat', 'moose'])\nPlease select one of the following:\n* dog\n* cat\n* moose\nDoG\n&gt;&gt;&gt; result\n'dog'\n</pre>\n<pre>&gt;&gt;&gt; result = inputMenu(['dog', 'cat', 'moose'], lettered=True, numbered=False)\nPlease select one of the following:\nA. dog\nB. cat\nC. moose\nb\n&gt;&gt;&gt; result\n'cat'\n</pre>\n</blockquote>\n</div>\n<div id=\"common-input-function-parameters\">\n<h2>Common Input Function Parameters</h2>\n<p>All input functions have the following parameters:</p>\n<ul>\n<li><cite>prompt</cite> (str): The text to display before each prompt for user input. Identical to the prompt argument for Python\u2019s <cite>raw_input()</cite> and <cite>input()</cite> functions. Default</li>\n<li><cite>default</cite> (str, None): A default value to use should the user time out or exceed the number of tries to enter valid input.</li>\n<li><cite>blank</cite> (bool): If <cite>True</cite>, blank strings will be allowed as valid user input.</li>\n<li><cite>timeout</cite> (int, float): The number of seconds since the first prompt for input after which a TimeoutException is raised the next time the user enters input.</li>\n<li><cite>limit</cite> (int): The number of tries the user has to enter valid input before the default value is returned.</li>\n<li><cite>strip</cite> (bool, str, None): If <cite>True</cite>, whitespace is stripped from <cite>value</cite>. If a str, the characters in it are stripped from value. If <cite>None</cite>, nothing is stripped. Defaults to <cite>True</cite>.</li>\n<li><cite>whitelistRegexes</cite> (Sequence, None): A sequence of regex str that will explicitly pass validation, even if they aren\u2019t numbers. Defaults to <cite>None</cite>.</li>\n<li><cite>blacklistRegexes</cite> (Sequence, None): A sequence of regex str or (regex_str, response_str) tuples that, if matched, will explicitly fail validation. Defaults to <cite>None</cite>.</li>\n<li><cite>applyFunc</cite> (Callable, None): An optional function that is passed the user\u2019s input, and returns the new value to use as the input.</li>\n<li><cite>validationFunc</cite> (Callable): A function that is passed the user\u2019s input value, which raises an exception if the input isn\u2019t valid. (The return value of this function is ignored.)</li>\n<li><cite>postValidateApplyFunc</cite> (Callable): An optional function that is passed the user\u2019s input after it has passed validation, and returns a transformed version for the input function to return.</li>\n</ul>\n<p>Other input functions may have additional parameters.</p>\n</div>\n<div id=\"input-functions\">\n<h2>Input Functions</h2>\n<ul>\n<li><cite>inputStr()</cite> - Accepts a string. Use this if you basically want Python\u2019s <cite>input()</cite> or <cite>raw_input()</cite>, but with PyInputPlus features such as whitelist/blacklist, timeouts, limits, etc.</li>\n<li><cite>inputNum()</cite> - Accepts a numeric number. Additionally has <cite>min</cite> and <cite>max</cite> parameters for inclusive bounds and <cite>greaterThan</cite> and <cite>lessThan</cite> parameters for exclusive bounds. Returns an int or float, not a str.</li>\n<li><cite>inputInt()</cite> - Accepts an integer number. Also has <cite>min</cite>/<cite>max</cite>/<cite>greaterThan</cite>/<cite>lessThan</cite> parameters. Returns an int, not a str.</li>\n<li><cite>inputFloat()</cite> - Accepts a floating-point number. Also has <cite>min</cite>/<cite>max</cite>/<cite>greaterThan</cite>/<cite>lessThan</cite> parameters. Returns a float, not a str.</li>\n<li><cite>inputBool()</cite> - Accepts a case-insensitive form of <cite>\u2018True\u2019</cite>, <cite>\u2018T\u2019</cite>, <cite>\u2018False\u2019</cite>, or <cite>\u2018F\u2019</cite> and returns a bool value.</li>\n<li><cite>inputChoice()</cite> - Accepts one of the strings in the list of strings passed for its <cite>choices</cite> parameter.</li>\n<li><cite>inputMenu()</cite> - Similar to <cite>inputChoice()</cite>, but will also present the choices in a menu with 1, 2, 3\u2026 or A, B, C\u2026 options if <cite>numbered</cite> or <cite>lettered</cite> are set to <cite>True</cite>.</li>\n<li><cite>inputDate()</cite> - Accepts a date typed in one of the <cite>strftime</cite> formats passed to the <cite>formats</cite> parameter. (This has several common formats by default.) Returns a <cite>datetime.date</cite> object.</li>\n<li><cite>inputDatetime()</cite> - Same as <cite>inputDate()</cite>, except it handles dates and times. (This has several common formats by default.) Returns a <cite>datetime.datetime</cite> object.</li>\n<li><cite>inputTime()</cite> - Same as <cite>inputDate()</cite>, except it handles times. (This has several common formats by default.) Returns a <cite>datetime.time</cite> object.</li>\n<li><cite>inputYesNo()</cite> - Accepts a case-insensitive form of <cite>\u2018Yes\u2019</cite>, <cite>\u2018Y\u2019</cite>, <cite>\u2018No\u2019</cite>, or <cite>\u2018N\u2019</cite> and returns <cite>\u2018yes\u2019</cite> or <cite>\u2018no\u2019</cite>.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6845268, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2fbb44eed9a218b7280d06d0a695ced0", "sha256": "14de75ee3a604c637a823b748e9222f79074b2efabbe1663a6e59803aa30d402"}, "downloads": -1, "filename": "PyInputPlus-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2fbb44eed9a218b7280d06d0a695ced0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10566, "upload_time": "2018-08-13T20:18:33", "upload_time_iso_8601": "2018-08-13T20:18:33.466902Z", "url": "https://files.pythonhosted.org/packages/f0/ba/abbb811bed650217fa6cb6c40e0e24536e3f18f7809fa2ae0605dacb22c4/PyInputPlus-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ed3df38b766daf18b92914234070ae5d", "sha256": "c112b583417f965750caf68db5cec385dea91f35bb54f83d9d706436eac3556f"}, "downloads": -1, "filename": "PyInputPlus-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ed3df38b766daf18b92914234070ae5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10613, "upload_time": "2018-08-16T00:22:27", "upload_time_iso_8601": "2018-08-16T00:22:27.220539Z", "url": "https://files.pythonhosted.org/packages/22/25/025d776afd80b4f4ba63d267b2e8c302b44822a3caf9bf8f6e53aa016c5a/PyInputPlus-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "586e47ed5b71fd795d1970be1d189cb1", "sha256": "9ec4e333874d46413dc927249c95a1302ae08d6744cfac8cc866d0cae62b573f"}, "downloads": -1, "filename": "PyInputPlus-0.2.0.tar.gz", "has_sig": false, "md5_digest": "586e47ed5b71fd795d1970be1d189cb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10478, "upload_time": "2018-09-14T18:59:41", "upload_time_iso_8601": "2018-09-14T18:59:41.466699Z", "url": "https://files.pythonhosted.org/packages/7c/32/ff4fde1dd4f29898e00d4cb27072adc610f480c7037a756f3c763b3500c3/PyInputPlus-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "06cf7fb295feeeaa917a5787a5bc7841", "sha256": "de48520f48a7266f0c811fc3be97288061f22bc9ce527cde7d6bc6ec8587a4dc"}, "downloads": -1, "filename": "PyInputPlus-0.2.2.tar.gz", "has_sig": false, "md5_digest": "06cf7fb295feeeaa917a5787a5bc7841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15110, "upload_time": "2018-10-08T22:10:16", "upload_time_iso_8601": "2018-10-08T22:10:16.999137Z", "url": "https://files.pythonhosted.org/packages/9a/d9/0421d200f77e79921f3089bd89cbda5652ca17a9b5a4475913ac91f569c4/PyInputPlus-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "8c0dc9ba30b0ec6a68dcdd78dd728f7e", "sha256": "e7d75cba406b00467c5dc20c78bff08b3099816198ed3b090c2e9edaef98eb6c"}, "downloads": -1, "filename": "PyInputPlus-0.2.3.tar.gz", "has_sig": false, "md5_digest": "8c0dc9ba30b0ec6a68dcdd78dd728f7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17164, "upload_time": "2019-02-05T03:09:02", "upload_time_iso_8601": "2019-02-05T03:09:02.370484Z", "url": "https://files.pythonhosted.org/packages/9a/ef/51a6db27cbe3aab0dcec5a2d02243c6bf2af0321956f41c6be931cb24fc6/PyInputPlus-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "d606e36ddda716aa240ac04630850b8a", "sha256": "5e5c2b7c84e9845f4557b8af3146d719269fb8da230a2d57205a42c9a33ea12e"}, "downloads": -1, "filename": "PyInputPlus-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d606e36ddda716aa240ac04630850b8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17429, "upload_time": "2019-02-05T22:15:52", "upload_time_iso_8601": "2019-02-05T22:15:52.216073Z", "url": "https://files.pythonhosted.org/packages/8c/69/f607a99e0bb1070d60019d774f616ca3775e91a96f669b2c1cde0a6ed36e/PyInputPlus-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "34d39c01853681724821b68f18cd8ce1", "sha256": "0df57201f3f9944071b0497f40416f5981a24dd818014be4d6a615a984128960"}, "downloads": -1, "filename": "PyInputPlus-0.2.5.tar.gz", "has_sig": false, "md5_digest": "34d39c01853681724821b68f18cd8ce1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17426, "upload_time": "2019-02-07T03:31:39", "upload_time_iso_8601": "2019-02-07T03:31:39.722344Z", "url": "https://files.pythonhosted.org/packages/61/fb/4d89003a8c55dc5fb449d546f72097991d4e8f6d4682fb528951e2db19ca/PyInputPlus-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "485b23326fdafa4ad87c2c8cbacf27a3", "sha256": "cba628300c8bb99f7d2bfb4816e2717ade9df2dbc662965e2e8980bfda572725"}, "downloads": -1, "filename": "PyInputPlus-0.2.6.tar.gz", "has_sig": false, "md5_digest": "485b23326fdafa4ad87c2c8cbacf27a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18145, "upload_time": "2019-02-09T06:07:46", "upload_time_iso_8601": "2019-02-09T06:07:46.328955Z", "url": "https://files.pythonhosted.org/packages/89/d2/7ffe1034d231af571e402da6a5e4e7c842a237beb027566fc6e713fc35cf/PyInputPlus-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "d3a55b5c9eabf3f623d463f30767d881", "sha256": "97b6e2b0d0afa18b84d9d9baace25dc6748c84c573be904b1a6c263187a416a3"}, "downloads": -1, "filename": "PyInputPlus-0.2.7.tar.gz", "has_sig": false, "md5_digest": "d3a55b5c9eabf3f623d463f30767d881", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19753, "upload_time": "2019-07-12T00:07:45", "upload_time_iso_8601": "2019-07-12T00:07:45.670590Z", "url": "https://files.pythonhosted.org/packages/1b/bc/dfc258639c2f129cd791700d773c0577fcb7af04d21db483a2c47a4ee573/PyInputPlus-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "30fa5dc560bb4114e54227eeb28cf347", "sha256": "8d84ed2b2782a6454adc7029322aff67db9028fa02ab10579722eb7b32b56c6d"}, "downloads": -1, "filename": "PyInputPlus-0.2.8.tar.gz", "has_sig": false, "md5_digest": "30fa5dc560bb4114e54227eeb28cf347", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20462, "upload_time": "2019-11-13T04:18:20", "upload_time_iso_8601": "2019-11-13T04:18:20.195042Z", "url": "https://files.pythonhosted.org/packages/9f/6c/20d3180dd71b282fefaaaf8c8f4217adf68846e7f4216cf99de03d4bbada/PyInputPlus-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "1a22860aaf600e34eb7818e69377b48b", "sha256": "46dd614ac437a9844672f219d7811f1c993ddf4b9d495b720b8df50ccdcbc298"}, "downloads": -1, "filename": "PyInputPlus-0.2.9.tar.gz", "has_sig": false, "md5_digest": "1a22860aaf600e34eb7818e69377b48b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20924, "upload_time": "2020-03-19T19:19:41", "upload_time_iso_8601": "2020-03-19T19:19:41.968582Z", "url": "https://files.pythonhosted.org/packages/c7/74/f089722b4b7e810b456e11f3ea0d6b9aa2f1a2292ece1ac92ce1466b885c/PyInputPlus-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a22860aaf600e34eb7818e69377b48b", "sha256": "46dd614ac437a9844672f219d7811f1c993ddf4b9d495b720b8df50ccdcbc298"}, "downloads": -1, "filename": "PyInputPlus-0.2.9.tar.gz", "has_sig": false, "md5_digest": "1a22860aaf600e34eb7818e69377b48b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20924, "upload_time": "2020-03-19T19:19:41", "upload_time_iso_8601": "2020-03-19T19:19:41.968582Z", "url": "https://files.pythonhosted.org/packages/c7/74/f089722b4b7e810b456e11f3ea0d6b9aa2f1a2292ece1ac92ce1466b885c/PyInputPlus-0.2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:01 2020"}