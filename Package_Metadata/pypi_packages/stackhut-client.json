{"info": {"author": "StackHut", "author_email": "client@stackhut.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Software Development"], "description": "=======================\nStackHut Client Library\n=======================\n\n.. image:: https://img.shields.io/travis/stackhut/client-python.svg\n        :target: https://travis-ci.org/stackhut/client-python\n\n.. image:: https://img.shields.io/pypi/v/stackhut-client.svg\n        :target: https://pypi.python.org/pypi/stackhut-client\n\nStackHut client library to call dev, local, and hosted StackHut services dynamically and asynchronously from your Python code as if it were a local function.\n\n* Homepage: https://www.stackhut.com\n* Free software: Apache license\n* Documentation: https://stackhut.readthedocs.org.\n\n\nDescription\n-----------\n\nThere are 3 main objects in the library,\n\nSHService\n^^^^^^^^^\n\nThis is the main library you create per service to communicate with it. It takes several parameters on construction, where those in square brackets are optional,\n\n.. code:: python\n\n    import stackhut_client as client\n    client.SHService(author, service_name, [service_version], [auth], [host])\n\n* author - The author of the service\n* service_name - The service name\n* version - The specific verion of the service (is `latest` if left blank)\n* auth - An `SHAuth` object used to authenticate requests for private services\n* host - URL for the StackHut API server, can be set to point to local servers during development, is `https://api.stackhut.com` if left blank\n\nTo make a remote call, just call the interface and method name on the service object, e.g.,\n\n.. code:: python\n\n    result = service.Interface.method(params, ...)\n\n\nSHAuth\n^^^^^^\n\nAn optional object used to authenticate requests to a service,\n\n.. code:: python\n\n    client.SHAuth(user, [hash], [token])\n\n* user - Username of a registered StackHut user\n* hash - Hash of the user's password (you can find this in ~/.stackhut.cfg). Be careful not to use in public-facing code.\n* token - A valid API token created for the user\n\nOne of `hash` or `token` must be present in the `auth` object to authorise a request by the given user.\n\nSHError\n^^^^^^^\n\nReturned in the event of a remote service error in the catch block of a rejected promise.\n\nThe object has 3 parameters,\n\n* code - The RPC error code\n* message - A string describing the error\n* data - An optional object that may contain additional structured data for handling the error\n\nExample\n-------\n\nUsing the existing service called `demo-nodejs` by user `stackhut`, we create the main service object,\n\n.. code:: python\n\n    import stackhut_client as client\n    service = client.SHService('stackhut', 'web-tools')\n\nFrom here we can call any functions on any interfaces exposed by the hosted `stackhut/demo-nodejs` service, as follows,\n\n.. code:: python\n\n    result = service.Default.renderWebpage(\"http://www.stackhut.com\", 1024, 768)\n    print(\"Page render at {}\".format(result))\n\n\nNotes\n^^^^^\n\n* Python 3+ only currently (built on 3.4), looking into python-future for 2.x compatibility.\n* Calls are currently synchronous but we will switch to an async-based solution following the release of Python 3.5.\n\n\n\n\n=======\nCredits\n=======\n\nDevelopment Leads\n-----------------\n\n* Mandeep Gill <mandeep@stackhut.com>\n* Leo Anthias <leo@stackhut.com>\n\n.. Contributors\n.. ------------\n..\n.. None yet. Why not be the first?\n..", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stackhut/client-python", "keywords": "stackhut", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "stackhut-client", "package_url": "https://pypi.org/project/stackhut-client/", "platform": "POSIX", "project_url": "https://pypi.org/project/stackhut-client/", "project_urls": {"Homepage": "https://github.com/stackhut/client-python"}, "release_url": "https://pypi.org/project/stackhut-client/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "StackHut client-side Python library", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"stackhut-client-library\">\n<h2>StackHut Client Library</h2>\n<a href=\"https://travis-ci.org/stackhut/client-python\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/stackhut/client-python.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e45d682f6c28ea4bc4b3a65667300f83a86358ed/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f737461636b6875742f636c69656e742d707974686f6e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/stackhut-client\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/stackhut-client.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9547c49c4db20975072ef42204bbb74d5afa8a56/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737461636b6875742d636c69656e742e737667\"></a>\n<p>StackHut client library to call dev, local, and hosted StackHut services dynamically and asynchronously from your Python code as if it were a local function.</p>\n<ul>\n<li>Homepage: <a href=\"https://www.stackhut.com\" rel=\"nofollow\">https://www.stackhut.com</a></li>\n<li>Free software: Apache license</li>\n<li>Documentation: <a href=\"https://stackhut.readthedocs.org\" rel=\"nofollow\">https://stackhut.readthedocs.org</a>.</li>\n</ul>\n<div id=\"description\">\n<h3>Description</h3>\n<p>There are 3 main objects in the library,</p>\n<div id=\"shservice\">\n<h4>SHService</h4>\n<p>This is the main library you create per service to communicate with it. It takes several parameters on construction, where those in square brackets are optional,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">stackhut_client</span> <span class=\"k\">as</span> <span class=\"nn\">client</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">SHService</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"p\">,</span> <span class=\"n\">service_name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">service_version</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">auth</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">host</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li>author - The author of the service</li>\n<li>service_name - The service name</li>\n<li>version - The specific verion of the service (is <cite>latest</cite> if left blank)</li>\n<li>auth - An <cite>SHAuth</cite> object used to authenticate requests for private services</li>\n<li>host - URL for the StackHut API server, can be set to point to local servers during development, is <cite>https://api.stackhut.com</cite> if left blank</li>\n</ul>\n<p>To make a remote call, just call the interface and method name on the service object, e.g.,</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">Interface</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"shauth\">\n<h4>SHAuth</h4>\n<p>An optional object used to authenticate requests to a service,</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">SHAuth</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nb\">hash</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">token</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li>user - Username of a registered StackHut user</li>\n<li>hash - Hash of the user\u2019s password (you can find this in ~/.stackhut.cfg). Be careful not to use in public-facing code.</li>\n<li>token - A valid API token created for the user</li>\n</ul>\n<p>One of <cite>hash</cite> or <cite>token</cite> must be present in the <cite>auth</cite> object to authorise a request by the given user.</p>\n</div>\n<div id=\"sherror\">\n<h4>SHError</h4>\n<p>Returned in the event of a remote service error in the catch block of a rejected promise.</p>\n<p>The object has 3 parameters,</p>\n<ul>\n<li>code - The RPC error code</li>\n<li>message - A string describing the error</li>\n<li>data - An optional object that may contain additional structured data for handling the error</li>\n</ul>\n</div>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Using the existing service called <cite>demo-nodejs</cite> by user <cite>stackhut</cite>, we create the main service object,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">stackhut_client</span> <span class=\"k\">as</span> <span class=\"nn\">client</span>\n<span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">SHService</span><span class=\"p\">(</span><span class=\"s1\">'stackhut'</span><span class=\"p\">,</span> <span class=\"s1\">'web-tools'</span><span class=\"p\">)</span>\n</pre>\n<p>From here we can call any functions on any interfaces exposed by the hosted <cite>stackhut/demo-nodejs</cite> service, as follows,</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">Default</span><span class=\"o\">.</span><span class=\"n\">renderWebpage</span><span class=\"p\">(</span><span class=\"s2\">\"http://www.stackhut.com\"</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">768</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Page render at </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n</pre>\n<div id=\"notes\">\n<h4>Notes</h4>\n<ul>\n<li>Python 3+ only currently (built on 3.4), looking into python-future for 2.x compatibility.</li>\n<li>Calls are currently synchronous but we will switch to an async-based solution following the release of Python 3.5.</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<h2 id=\"development-leads\"><span class=\"section-subtitle\">Development Leads</span></h2>\n<ul>\n<li>Mandeep Gill &lt;<a href=\"mailto:mandeep%40stackhut.com\">mandeep<span>@</span>stackhut<span>.</span>com</a>&gt;</li>\n<li>Leo Anthias &lt;<a href=\"mailto:leo%40stackhut.com\">leo<span>@</span>stackhut<span>.</span>com</a>&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1698351, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4945411ce3c2bd3ee47aeaaacced0280", "sha256": "a65cd18133b0b4b4128dc53e23b9230a04a7d22094f425d19eb891b68a3d50dc"}, "downloads": -1, "filename": "stackhut_client-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4945411ce3c2bd3ee47aeaaacced0280", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7853, "upload_time": "2015-08-28T14:52:15", "upload_time_iso_8601": "2015-08-28T14:52:15.191668Z", "url": "https://files.pythonhosted.org/packages/86/a0/17bbc4bfa004b132ac9f706ad6f0aba168ac668e15ac961f2344577b5a5d/stackhut_client-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4945411ce3c2bd3ee47aeaaacced0280", "sha256": "a65cd18133b0b4b4128dc53e23b9230a04a7d22094f425d19eb891b68a3d50dc"}, "downloads": -1, "filename": "stackhut_client-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4945411ce3c2bd3ee47aeaaacced0280", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7853, "upload_time": "2015-08-28T14:52:15", "upload_time_iso_8601": "2015-08-28T14:52:15.191668Z", "url": "https://files.pythonhosted.org/packages/86/a0/17bbc4bfa004b132ac9f706ad6f0aba168ac668e15ac961f2344577b5a5d/stackhut_client-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:50 2020"}