{"info": {"author": "Matteo Boscolo", "author_email": "matteo.boscolo@omniasolutions.eu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# FlaskTrytonWTF\nThis project is intend to be used for extendig the capabilities of flask using tryton as backend \nissiue/info: info@omniasolutions.eu\n\n\n\n##Form:\nExtend the [Flask-WTF](https://pypi.org/project/Flask-WTF/) capability usin tryton model to bind data in an imput form\n\nYou can use this extention like a normal FlaskForm \nJust remember to add trytonObject and the field that you like to see in your input form\nwe also inser the submit button to push the data to tryton.\n\n```python\nfrom FlaskTrytonWTF import FTWTF\n...\n...\n...\nclass MyTrytonForm(FTWTF.TFlaskForm):\n    trytonObject = tryton.pool.get('my.tryton.object')\n    tryton_fields = {'field_1': {},\n                     'field_2': {},\n                     'field_3': {}\n                     }\n    submitLable = \"Submit\"\n```\n\n```python\n@app.route('/input_form', methods=['GET', 'POST'])\n@tryton.transaction()\ndef input_form():\n    form = MyTrytonForm()\n    if form.validate_on_submit():\n        data_submitted = form.trytonSubmit() # DO NOT FORGET TO CALL THE TRYTON SUBMIT IN ORDER DO FLUSH THE DATA\n                                             # ALSO THE DATA SUBMITTED IS RETURNED AS DICTIONAY OF VALUES \n                                             # SO YOU CAN USE IF !!\n        return render_template('show_input_confirmation.html', title='Conferma', form=data_submitted)\n    return render_template('input_form.html', form=form)\n\n```\n\n##Table:\nExtend the [Flask-Table](https://pypi.org/project/Flask-Table/) capability usin tryton model to bind data in read only mode \n\n\n```python\n@app.route('/test_query', methods=['GET', 'POST'])\n@login_required\n@tryton.transaction()\ndef test_query():\n    from FlaskTrytonWTF import FTFT\n    class MyTestTable(FTFT.FTTable):\n        trytonObject = tryton.pool.get('my.tryton.object')\n        tryton_fields = []  #empty dict means all the data stored in the my.tryton.object\n        #tryton_fields = ['field_1', 'field_2']   # show anly the specifie fields on the table\n    table = MyTestTable() \n\n    return render_template(\"test_query.html\",\n                           table=table)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/omniasolutions/flasktrytonwtf/src/master/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "FlaskTrytonWTF", "package_url": "https://pypi.org/project/FlaskTrytonWTF/", "platform": "", "project_url": "https://pypi.org/project/FlaskTrytonWTF/", "project_urls": {"Homepage": "https://bitbucket.org/omniasolutions/flasktrytonwtf/src/master/"}, "release_url": "https://pypi.org/project/FlaskTrytonWTF/0.0.4/", "requires_dist": ["Flask-Table", "Flask-WTF", "flask-tryton"], "requires_python": "", "summary": "The project intend to or extendig the capabilities of flask in order to read and write data directely to tryton.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FlaskTrytonWTF</h1>\n<p>This project is intend to be used for extendig the capabilities of flask using tryton as backend\nissiue/info: <a href=\"mailto:info@omniasolutions.eu\">info@omniasolutions.eu</a></p>\n<p>##Form:\nExtend the <a href=\"https://pypi.org/project/Flask-WTF/\" rel=\"nofollow\">Flask-WTF</a> capability usin tryton model to bind data in an imput form</p>\n<p>You can use this extention like a normal FlaskForm\nJust remember to add trytonObject and the field that you like to see in your input form\nwe also inser the submit button to push the data to tryton.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">FlaskTrytonWTF</span> <span class=\"kn\">import</span> <span class=\"n\">FTWTF</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyTrytonForm</span><span class=\"p\">(</span><span class=\"n\">FTWTF</span><span class=\"o\">.</span><span class=\"n\">TFlaskForm</span><span class=\"p\">):</span>\n    <span class=\"n\">trytonObject</span> <span class=\"o\">=</span> <span class=\"n\">tryton</span><span class=\"o\">.</span><span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'my.tryton.object'</span><span class=\"p\">)</span>\n    <span class=\"n\">tryton_fields</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'field_1'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n                     <span class=\"s1\">'field_2'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n                     <span class=\"s1\">'field_3'</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n                     <span class=\"p\">}</span>\n    <span class=\"n\">submitLable</span> <span class=\"o\">=</span> <span class=\"s2\">\"Submit\"</span>\n</pre>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/input_form'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"nd\">@tryton</span><span class=\"o\">.</span><span class=\"n\">transaction</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">input_form</span><span class=\"p\">():</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">MyTrytonForm</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">validate_on_submit</span><span class=\"p\">():</span>\n        <span class=\"n\">data_submitted</span> <span class=\"o\">=</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">trytonSubmit</span><span class=\"p\">()</span> <span class=\"c1\"># DO NOT FORGET TO CALL THE TRYTON SUBMIT IN ORDER DO FLUSH THE DATA</span>\n                                             <span class=\"c1\"># ALSO THE DATA SUBMITTED IS RETURNED AS DICTIONAY OF VALUES </span>\n                                             <span class=\"c1\"># SO YOU CAN USE IF !!</span>\n        <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'show_input_confirmation.html'</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Conferma'</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"o\">=</span><span class=\"n\">data_submitted</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'input_form.html'</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"o\">=</span><span class=\"n\">form</span><span class=\"p\">)</span>\n</pre>\n<p>##Table:\nExtend the <a href=\"https://pypi.org/project/Flask-Table/\" rel=\"nofollow\">Flask-Table</a> capability usin tryton model to bind data in read only mode</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/test_query'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"nd\">@login_required</span>\n<span class=\"nd\">@tryton</span><span class=\"o\">.</span><span class=\"n\">transaction</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_query</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">FlaskTrytonWTF</span> <span class=\"kn\">import</span> <span class=\"n\">FTFT</span>\n    <span class=\"k\">class</span> <span class=\"nc\">MyTestTable</span><span class=\"p\">(</span><span class=\"n\">FTFT</span><span class=\"o\">.</span><span class=\"n\">FTTable</span><span class=\"p\">):</span>\n        <span class=\"n\">trytonObject</span> <span class=\"o\">=</span> <span class=\"n\">tryton</span><span class=\"o\">.</span><span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'my.tryton.object'</span><span class=\"p\">)</span>\n        <span class=\"n\">tryton_fields</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>  <span class=\"c1\">#empty dict means all the data stored in the my.tryton.object</span>\n        <span class=\"c1\">#tryton_fields = ['field_1', 'field_2']   # show anly the specifie fields on the table</span>\n    <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">MyTestTable</span><span class=\"p\">()</span> \n\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s2\">\"test_query.html\"</span><span class=\"p\">,</span>\n                           <span class=\"n\">table</span><span class=\"o\">=</span><span class=\"n\">table</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6979378, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "487cee176f731b668a55bd8458aad03e", "sha256": "da47721c6844a2dc1e36bc72fa67fa636cb6204239c7a20a1ae735d2a753cdad"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "487cee176f731b668a55bd8458aad03e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5135, "upload_time": "2020-03-31T17:57:02", "upload_time_iso_8601": "2020-03-31T17:57:02.217188Z", "url": "https://files.pythonhosted.org/packages/6e/12/12357ccbb8d5af1f90b274e74a7e7d2b548d1a600b270212da680d2fe21a/FlaskTrytonWTF-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da45eb6ac04b1608f9c9d1caa3012686", "sha256": "9618a839bbf2d2fa0e32cc4a1145d4c63fcaf06b7767ad3df05db1f9326831ef"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.1.tar.gz", "has_sig": false, "md5_digest": "da45eb6ac04b1608f9c9d1caa3012686", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4060, "upload_time": "2020-03-31T17:57:04", "upload_time_iso_8601": "2020-03-31T17:57:04.669772Z", "url": "https://files.pythonhosted.org/packages/ac/7c/08db03ccd14d9a50cb58e9b499aaebcf3ea72187ca90aafe8c1227d8b623/FlaskTrytonWTF-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b19ab6e5962302e65c85fb6e3848313c", "sha256": "c798badafa3542003dc39ab72ed5aa345e049a4420cd3c599636e9617fe86df6"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b19ab6e5962302e65c85fb6e3848313c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5294, "upload_time": "2020-04-01T13:35:18", "upload_time_iso_8601": "2020-04-01T13:35:18.989372Z", "url": "https://files.pythonhosted.org/packages/44/a7/b26c68eb7e0b347b465e275ecd3299a2a3d00847994a0c991b809a36aeab/FlaskTrytonWTF-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b3a5ebd41fcf324f53342d64eac7ee6", "sha256": "ad0296de6d33bee3e425d8df6b6c94b9bcff07b1e1264c2e663703c17364a304"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8b3a5ebd41fcf324f53342d64eac7ee6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4207, "upload_time": "2020-04-01T13:35:20", "upload_time_iso_8601": "2020-04-01T13:35:20.437487Z", "url": "https://files.pythonhosted.org/packages/5b/06/b739b22a156a6ca35e774c89977c588bb49ef99571021e96a7ac46495332/FlaskTrytonWTF-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "da6992ee312a531348b8ee13de933a01", "sha256": "1cfb1d2d6a326b52939989ec8bfc017df4bf26265457f2ee96534b78dba8125a"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "da6992ee312a531348b8ee13de933a01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7001, "upload_time": "2020-04-04T08:18:53", "upload_time_iso_8601": "2020-04-04T08:18:53.142148Z", "url": "https://files.pythonhosted.org/packages/17/90/51c73c0d01f8d4988edf568236e247382b4900bdc95cd5bdf028d8595ff7/FlaskTrytonWTF-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "494022abf808bf3c08042b8e7ed50bda", "sha256": "6ed8723b9a037bb530b176bc6a75a9c65ebff4573f5b53c7cb09ec9bb4155b5b"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.3.tar.gz", "has_sig": false, "md5_digest": "494022abf808bf3c08042b8e7ed50bda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5222, "upload_time": "2020-04-04T08:18:54", "upload_time_iso_8601": "2020-04-04T08:18:54.767345Z", "url": "https://files.pythonhosted.org/packages/5f/09/5f4703dc0e9be8c59cafc1e99673e2dfb7f0d814c9e036895d2a9b98d6e9/FlaskTrytonWTF-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "379edf2b0eff941415b61750a2815e81", "sha256": "316a76dba5b91b6706c455f5d554fc511fac121d52e9cd1652c60aac283bbbc6"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "379edf2b0eff941415b61750a2815e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8001, "upload_time": "2020-04-08T17:26:29", "upload_time_iso_8601": "2020-04-08T17:26:29.595839Z", "url": "https://files.pythonhosted.org/packages/ac/32/ca892db8afc769b4b3e7d1cc4295669d1a01f46c1cde52c72d373af1686e/FlaskTrytonWTF-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93366d3ca23d1273438dd911033e8f71", "sha256": "8421a8a2b3dca8406a47d7efa9412855e48449404a3c61d48d5a66d01bfb7c0f"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.4.tar.gz", "has_sig": false, "md5_digest": "93366d3ca23d1273438dd911033e8f71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5485, "upload_time": "2020-04-08T17:26:31", "upload_time_iso_8601": "2020-04-08T17:26:31.066268Z", "url": "https://files.pythonhosted.org/packages/0e/0a/45aebad240287681e1b25a6b53a03b556ea87415128bf0534bf894935453/FlaskTrytonWTF-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "379edf2b0eff941415b61750a2815e81", "sha256": "316a76dba5b91b6706c455f5d554fc511fac121d52e9cd1652c60aac283bbbc6"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "379edf2b0eff941415b61750a2815e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8001, "upload_time": "2020-04-08T17:26:29", "upload_time_iso_8601": "2020-04-08T17:26:29.595839Z", "url": "https://files.pythonhosted.org/packages/ac/32/ca892db8afc769b4b3e7d1cc4295669d1a01f46c1cde52c72d373af1686e/FlaskTrytonWTF-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93366d3ca23d1273438dd911033e8f71", "sha256": "8421a8a2b3dca8406a47d7efa9412855e48449404a3c61d48d5a66d01bfb7c0f"}, "downloads": -1, "filename": "FlaskTrytonWTF-0.0.4.tar.gz", "has_sig": false, "md5_digest": "93366d3ca23d1273438dd911033e8f71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5485, "upload_time": "2020-04-08T17:26:31", "upload_time_iso_8601": "2020-04-08T17:26:31.066268Z", "url": "https://files.pythonhosted.org/packages/0e/0a/45aebad240287681e1b25a6b53a03b556ea87415128bf0534bf894935453/FlaskTrytonWTF-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:11 2020"}