{"info": {"author": "Egil Moeller, Kevin Wurster", "author_email": "egil@skytruth.org, kevin@skytruth.org", "bugtrack_url": null, "classifiers": [], "description": "gpsdio\n======\n\nAIS I/O with Python, dictionaries, and the `GPSd AIVDM <http://catb.org/gpsd/AIVDM.html>`_ schema.\n\n.. image:: https://travis-ci.org/SkyTruth/gpsdio.svg?branch=master\n    :target: https://travis-ci.org/SkyTruth/gpsdio\n\n\n.. image:: https://coveralls.io/repos/SkyTruth/gpsdio/badge.svg?branch=master\n    :target: https://coveralls.io/r/SkyTruth/gpsdio\n\nThis project is still evolving but will calm down once it hits ``v0.1``.  We\nwould love to hear from you're using, or would like to use, this project, both\nso we don't make any unexpected changes, and to get outside opinions on AIS\nprocessing.\n\n\nOverview\n--------\n\nVessels use a ship-to-ship Automated Identification System (AIS) to avoid\ncollisions by broadcasting information about who they are, where they are, and\nwhat they are doing.  These messages are broadcast as `NMEA 0183 <https://en.wikipedia.org/wiki/NMEA_2000>`_\nor `NMEA 2000 <https://en.wikipedia.org/wiki/NMEA_2000>`_ sentences and are\nconstantly being collected by terrestrial and satellite receivers.\n\nNMEA is very large and difficult to work with natively, so the solution is to\nparse it and store as another format.  Rather than spend time developing our\nown schema we chose to adopt the `GPSd AIVDM <http://catb.org/gpsd/AIVDM.html>`_\nschema, which clearly defines all message types.  Messages map well to Python\ndictionaries due to how fields vary type-to-type, so that's what ``gpsdio`` uses.\n\nThis project aims to make AIS data easier to work with by providing I/O and a\nsmall set of useful transforms, and was built with large-scale data processing\npipelines in mind.\n\n\nExample I/O\n-----------\n\nHere's a small example of how to read data stored as `newline delimited JSON <https://github.com/geowurster/newlinejson>`_,\nadd a field, and write as GZIP compressed `MsgPack <http://msgpack.org/index.html>`_.\nThe driver and compression are explicitly given but can also be detected from the file path.\nFor more information on what ``gpsdio.open()`` returns, see the section on `messages <README.rst#Messages>`_.\n\n.. code-block:: python\n\n    import gpsdio\n\n    with gpsdio.open('sample-data/types.json') as src:\n        with gpsdio.open('with-num-fields.msg.gz', 'w', driver='MsgPack', compression='GZIP') as dst:\n            for msg in src:\n                msg['num_fields'] = len(msg)\n\n\nParsing NMEA Sentences\n----------------------\n\n``gpsdio`` does not yet support reading NMEA directly, although it will hopefully\nin the near future.  In the meantime, `libais <https://github.com/schwehr/libais>`_\nhas an ``aisdecode`` utility with an optional ``--gpsd`` format that produces data\nreadable by this library.\n\n\nCommandline Interface\n---------------------\n\nThis project also offers a ``gpsdio`` commandline utility for common tasks like\ninspecting and transforming data.  See the `CLI docs <docs/CLI.rst>`_\nfor more information.\n\n\nMessages\n--------\n\n**NOTE:** Message validation and transformation has not quite settled and will\nchange for ``v0.1``.  The description below is currently mostly relevant, although\nsome fields may be placed into an ``__invalid__`` key on read or write.\n\n``gpsdio.open()`` returns a file-like object called ``Stream()`` that is\nresponsible for taking a dictionary from the underlying driver and transforming\nit into a well formed message.\n\nNormally I/O libraries perform some strict validation while reading and before\nwriting data, but working with AIS usually involves adding some custom fields.\nRather than telling ``gpsdio.open()`` what additional fields it may encounter\nevery time a file is opened, message validation only happens when requested.\nThis may seem backwards, but the idea is that validation really only needs to\nhappen as data parsed and brought into the ``gpsdio`` world.  After that the\nuser knows far more about their data and is likely adding additional fields\nduring processing.\n\nSee `sample-data <https://github.com/SkyTruth/gpsdio/blob/master/sample-data>`_\nfor some data ``gpsdio`` can immediately read and write.\n\n\nCLI Plugins\n-----------\n\nDevelopers can create their own ``gpsdio`` commands with ``click-plugins``.\n``gpsdio`` loads plugins from a `setuptools entry point <https://pythonhosted.org/setuptools/setuptools.html#dynamic-discovery-of-services-and-plugins>`_\ncalled ``gpsdio.cli_plugins``, so in your ``setup.py``:\n\n.. code-block:: python\n\n    setup(\n        entry_points='''\n            [gpsdio.cli_plugins]\n            name=package.module:click_command\n        '''\n    )\n\nFor a more in-depth description see the `click-plugins <https://github.com/click-contrib/click-plugins>`_\ndocumentation.  Additionally, see `gpsdio-density <https://github.com/SkyTruth/gpsdio-density>`_\nfor an example, or one of the other plugins listed in the\n`plugin registry <https://github.com/SkyTruth/gpsdio/wiki/CLI-plugin-registry>`_.\n\n\nDriver Plugins\n--------------\n\nExternal drivers should be registered to the entry-point ``gpsdio.driver_plugins`` and\nmust subclass ``gpsdio.base.BaseDriver`` or ``gpsdio.base.BaseCompressionDriver``.\nSee the docstrings on those two objects for subclassing information.\n\n\nInstallation\n------------\n\nWith pip:\n\n.. code-block:: console\n\n    $ pip install gpsdio\n\nFrom source:\n\n.. code-block:: console\n\n    $ git clone https://github.com/SkyTruth/gpsdio\n    $ cd gpsdio\n    $ python setup.py install\n\n\nDeveloping\n----------\n\n.. code-block:: console\n\n    $ git clone https://github.com/SkyTruth/gpsdio.git\n    $ cd gpsdio\n    $ virtualenv venv\n    $ source venv/bin/activate\n    $ pip install -e .[dev]\n    $ py.test tests --cov gpsdio --cov-report term-missing\n\n\nChangelog\n---------\n\nSee ``CHANGES.md``\n\n\nLicense\n-------\n\nSee ``LICENSE.txt``", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SkyTruth/gpsdio", "keywords": "GPSd AIVDM AIS I/O", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "gpsdio", "package_url": "https://pypi.org/project/gpsdio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gpsdio/", "project_urls": {"Homepage": "https://github.com/SkyTruth/gpsdio"}, "release_url": "https://pypi.org/project/gpsdio/0.0.7/", "requires_dist": null, "requires_python": null, "summary": "A general purpose AIS I/O library using the GPSd AIVDM schema.", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>AIS I/O with Python, dictionaries, and the <a href=\"http://catb.org/gpsd/AIVDM.html\" rel=\"nofollow\">GPSd AIVDM</a> schema.</p>\n<a href=\"https://travis-ci.org/SkyTruth/gpsdio\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/SkyTruth/gpsdio.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f535ad842d8729b6fa696cf033699a12f36a28fb/68747470733a2f2f7472617669732d63692e6f72672f536b7954727574682f67707364696f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/SkyTruth/gpsdio\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/SkyTruth/gpsdio/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5eeee081f50d684591f4fa83c880f4d81a7b3180/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f536b7954727574682f67707364696f2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>This project is still evolving but will calm down once it hits <tt>v0.1</tt>.  We\nwould love to hear from you\u2019re using, or would like to use, this project, both\nso we don\u2019t make any unexpected changes, and to get outside opinions on AIS\nprocessing.</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Vessels use a ship-to-ship Automated Identification System (AIS) to avoid\ncollisions by broadcasting information about who they are, where they are, and\nwhat they are doing.  These messages are broadcast as <a href=\"https://en.wikipedia.org/wiki/NMEA_2000\" rel=\"nofollow\">NMEA 0183</a>\nor <a href=\"https://en.wikipedia.org/wiki/NMEA_2000\" rel=\"nofollow\">NMEA 2000</a> sentences and are\nconstantly being collected by terrestrial and satellite receivers.</p>\n<p>NMEA is very large and difficult to work with natively, so the solution is to\nparse it and store as another format.  Rather than spend time developing our\nown schema we chose to adopt the <a href=\"http://catb.org/gpsd/AIVDM.html\" rel=\"nofollow\">GPSd AIVDM</a>\nschema, which clearly defines all message types.  Messages map well to Python\ndictionaries due to how fields vary type-to-type, so that\u2019s what <tt>gpsdio</tt> uses.</p>\n<p>This project aims to make AIS data easier to work with by providing I/O and a\nsmall set of useful transforms, and was built with large-scale data processing\npipelines in mind.</p>\n</div>\n<div id=\"example-i-o\">\n<h2>Example I/O</h2>\n<p>Here\u2019s a small example of how to read data stored as <a href=\"https://github.com/geowurster/newlinejson\" rel=\"nofollow\">newline delimited JSON</a>,\nadd a field, and write as GZIP compressed <a href=\"http://msgpack.org/index.html\" rel=\"nofollow\">MsgPack</a>.\nThe driver and compression are explicitly given but can also be detected from the file path.\nFor more information on what <tt>gpsdio.open()</tt> returns, see the section on <a href=\"README.rst#Messages\" rel=\"nofollow\">messages</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gpsdio</span>\n\n<span class=\"k\">with</span> <span class=\"n\">gpsdio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/types.json'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">src</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">gpsdio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'with-num-fields.msg.gz'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"n\">driver</span><span class=\"o\">=</span><span class=\"s1\">'MsgPack'</span><span class=\"p\">,</span> <span class=\"n\">compression</span><span class=\"o\">=</span><span class=\"s1\">'GZIP'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">dst</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">msg</span> <span class=\"ow\">in</span> <span class=\"n\">src</span><span class=\"p\">:</span>\n            <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'num_fields'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"parsing-nmea-sentences\">\n<h2>Parsing NMEA Sentences</h2>\n<p><tt>gpsdio</tt> does not yet support reading NMEA directly, although it will hopefully\nin the near future.  In the meantime, <a href=\"https://github.com/schwehr/libais\" rel=\"nofollow\">libais</a>\nhas an <tt>aisdecode</tt> utility with an optional <tt><span class=\"pre\">--gpsd</span></tt> format that produces data\nreadable by this library.</p>\n</div>\n<div id=\"commandline-interface\">\n<h2>Commandline Interface</h2>\n<p>This project also offers a <tt>gpsdio</tt> commandline utility for common tasks like\ninspecting and transforming data.  See the <a href=\"docs/CLI.rst\" rel=\"nofollow\">CLI docs</a>\nfor more information.</p>\n</div>\n<div id=\"id2\">\n<h2>Messages</h2>\n<p><strong>NOTE:</strong> Message validation and transformation has not quite settled and will\nchange for <tt>v0.1</tt>.  The description below is currently mostly relevant, although\nsome fields may be placed into an <tt>__invalid__</tt> key on read or write.</p>\n<p><tt>gpsdio.open()</tt> returns a file-like object called <tt>Stream()</tt> that is\nresponsible for taking a dictionary from the underlying driver and transforming\nit into a well formed message.</p>\n<p>Normally I/O libraries perform some strict validation while reading and before\nwriting data, but working with AIS usually involves adding some custom fields.\nRather than telling <tt>gpsdio.open()</tt> what additional fields it may encounter\nevery time a file is opened, message validation only happens when requested.\nThis may seem backwards, but the idea is that validation really only needs to\nhappen as data parsed and brought into the <tt>gpsdio</tt> world.  After that the\nuser knows far more about their data and is likely adding additional fields\nduring processing.</p>\n<p>See <a href=\"https://github.com/SkyTruth/gpsdio/blob/master/sample-data\" rel=\"nofollow\">sample-data</a>\nfor some data <tt>gpsdio</tt> can immediately read and write.</p>\n</div>\n<div id=\"cli-plugins\">\n<h2>CLI Plugins</h2>\n<p>Developers can create their own <tt>gpsdio</tt> commands with <tt><span class=\"pre\">click-plugins</span></tt>.\n<tt>gpsdio</tt> loads plugins from a <a href=\"https://pythonhosted.org/setuptools/setuptools.html#dynamic-discovery-of-services-and-plugins\" rel=\"nofollow\">setuptools entry point</a>\ncalled <tt>gpsdio.cli_plugins</tt>, so in your <tt>setup.py</tt>:</p>\n<pre><span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">entry_points</span><span class=\"o\">=</span><span class=\"s1\">'''\n        [gpsdio.cli_plugins]\n        name=package.module:click_command\n    '''</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For a more in-depth description see the <a href=\"https://github.com/click-contrib/click-plugins\" rel=\"nofollow\">click-plugins</a>\ndocumentation.  Additionally, see <a href=\"https://github.com/SkyTruth/gpsdio-density\" rel=\"nofollow\">gpsdio-density</a>\nfor an example, or one of the other plugins listed in the\n<a href=\"https://github.com/SkyTruth/gpsdio/wiki/CLI-plugin-registry\" rel=\"nofollow\">plugin registry</a>.</p>\n</div>\n<div id=\"driver-plugins\">\n<h2>Driver Plugins</h2>\n<p>External drivers should be registered to the entry-point <tt>gpsdio.driver_plugins</tt> and\nmust subclass <tt>gpsdio.base.BaseDriver</tt> or <tt>gpsdio.base.BaseCompressionDriver</tt>.\nSee the docstrings on those two objects for subclassing information.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>With pip:</p>\n<pre><span class=\"gp\">$</span> pip install gpsdio\n</pre>\n<p>From source:</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/SkyTruth/gpsdio\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> gpsdio\n<span class=\"gp\">$</span> python setup.py install\n</pre>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<pre><span class=\"gp\">$</span> git clone https://github.com/SkyTruth/gpsdio.git\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> gpsdio\n<span class=\"gp\">$</span> virtualenv venv\n<span class=\"gp\">$</span> <span class=\"nb\">source</span> venv/bin/activate\n<span class=\"gp\">$</span> pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n<span class=\"gp\">$</span> py.test tests --cov gpsdio --cov-report term-missing\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See <tt>CHANGES.md</tt></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <tt>LICENSE.txt</tt></p>\n</div>\n\n          </div>"}, "last_serial": 2393042, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0f1f80f293a65783077746d25c271120", "sha256": "cdffb483e01ec25026770eeda1c9407618c12a8fb1129dc553cb9e0842cc2b4c"}, "downloads": -1, "filename": "gpsdio-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0f1f80f293a65783077746d25c271120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24600, "upload_time": "2015-05-26T14:39:24", "upload_time_iso_8601": "2015-05-26T14:39:24.577476Z", "url": "https://files.pythonhosted.org/packages/4b/17/af4485a658920626b4053079fb78f8c32b9aa54ec15b3c246819210b5946/gpsdio-0.0.1.tar.gz", "yanked": false}], "0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "8d64a9fddbcda7c517a8522f2cf3d41d", "sha256": "3358c7d144a60383aac9175e875a7456da4a4a648b34b0277080f5cf3ee8a75d"}, "downloads": -1, "filename": "gpsdio-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8d64a9fddbcda7c517a8522f2cf3d41d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30700, "upload_time": "2015-05-28T20:33:04", "upload_time_iso_8601": "2015-05-28T20:33:04.706866Z", "url": "https://files.pythonhosted.org/packages/fc/fd/f8f39f44bb740ccee13d3c92e3dfb96b169d3a6f9be7700d1f1f1778b784/gpsdio-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "56a7f257c32af287cacc6d1550ed55d3", "sha256": "f8c1a7248c9db66d62b7be741496442d4b43d88a8a8a0cbdda218541bda58177"}, "downloads": -1, "filename": "gpsdio-0.0.4.tar.gz", "has_sig": false, "md5_digest": "56a7f257c32af287cacc6d1550ed55d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31651, "upload_time": "2015-06-09T16:08:53", "upload_time_iso_8601": "2015-06-09T16:08:53.391454Z", "url": "https://files.pythonhosted.org/packages/f2/b5/00c84ea9e1a590c1dec3398cf960327197638afc769e7d94ca394076b18b/gpsdio-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "34c98242b4b0ed759f88ab920af6340b", "sha256": "660baa525936f66ee7a164d1b9464b393f7968aff4778a0e49035f5c0e822dfb"}, "downloads": -1, "filename": "gpsdio-0.0.5.tar.gz", "has_sig": false, "md5_digest": "34c98242b4b0ed759f88ab920af6340b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34050, "upload_time": "2015-06-24T18:38:00", "upload_time_iso_8601": "2015-06-24T18:38:00.102401Z", "url": "https://files.pythonhosted.org/packages/64/2c/69b4ae413f30742968c3b2e2046de055e5473712f14d2b894a94a64e75e5/gpsdio-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "f193fdb5301c35b5e7ebcabb2be63a6c", "sha256": "9528e9f44d7a12c0d3a429f66710dea6c4c4f6ee48f8017f10b70040eaaf7940"}, "downloads": -1, "filename": "gpsdio-0.0.6.tar.gz", "has_sig": false, "md5_digest": "f193fdb5301c35b5e7ebcabb2be63a6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34654, "upload_time": "2015-06-25T20:23:13", "upload_time_iso_8601": "2015-06-25T20:23:13.348946Z", "url": "https://files.pythonhosted.org/packages/fb/dc/601f3aff6e7b51d65830af2be10e048da2ddb76e1fd2aa6d3c2165e4511d/gpsdio-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "85025887e1285a1ee7650d092bbf4679", "sha256": "304b77415f840ea94d8bfae914dbdb86b3773deb2d156024658c244d49003226"}, "downloads": -1, "filename": "gpsdio-0.0.7.tar.gz", "has_sig": false, "md5_digest": "85025887e1285a1ee7650d092bbf4679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37077, "upload_time": "2015-07-30T18:22:51", "upload_time_iso_8601": "2015-07-30T18:22:51.880926Z", "url": "https://files.pythonhosted.org/packages/4a/0b/a7dbf1c6517d6d78af6369542c967d713dcb2846463caf22ba9792b4c377/gpsdio-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "85025887e1285a1ee7650d092bbf4679", "sha256": "304b77415f840ea94d8bfae914dbdb86b3773deb2d156024658c244d49003226"}, "downloads": -1, "filename": "gpsdio-0.0.7.tar.gz", "has_sig": false, "md5_digest": "85025887e1285a1ee7650d092bbf4679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37077, "upload_time": "2015-07-30T18:22:51", "upload_time_iso_8601": "2015-07-30T18:22:51.880926Z", "url": "https://files.pythonhosted.org/packages/4a/0b/a7dbf1c6517d6d78af6369542c967d713dcb2846463caf22ba9792b4c377/gpsdio-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:12 2020"}