{"info": {"author": "kk6", "author_email": "hiro.ashiya@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "snake-pit\n=========\n\n|CircleCI| |Coverage Status| |Requires.io| |Code Climate| |Code Health|\n|GitHub license| |PyPI|\n\n*It's Five O'clock Somewhere*\n\nIntroduction\n------------\n\nDesign Concepts\n~~~~~~~~~~~~~~~\n\nI'm using ordinary `pip-tools <https://github.com/nvie/pip-tools>`__ .\npip-tools is great, but the package of installation, is to edit the\n``requirements.in`` file every time the uninstall in the editor it was\nsomewhat cumbersome. So, I have developed a snake-pit. snake-pit, which\ntakes you by writing automatically package name to ``requirements.in``\nAfter the installation of the package is successful. Even when the\nuninstall, will remove the automatically package name from\nrequirements.in.\n\nStand-alone\n~~~~~~~~~~~\n\nsnake-pit is desirable to use in combination with a pip-tools, but it\ndoes not mean that its never dependent to pip-tools. snake-pit is\navailable in stand-alone. It is a good idea to use instead of\n``pip freeze> requirements.txt``.\n\nInstallation\n------------\n\nUsing pip\n~~~~~~~~~\n\nsnake-pit is possible to install pip.\n\n.. code:: console\n\n\n    $ pip install snake-pit\n\nGet the Code\n~~~~~~~~~~~~\n\nIt is also possible to get the source code from Github.\n\n.. code:: console\n\n\n    $ git clone git@github.com:kk6/snake-pit.git\n\nYou may want to install in the pip editable mode.\n\n.. code:: console\n\n\n    $ pip install -e .\n\nUsage\n-----\n\nInstalling Packages\n~~~~~~~~~~~~~~~~~~~\n\nTo install the Python package using the snake-pit, do the following. It\nis only different character and if you use a pip.\n\n.. code:: console\n\n\n    $ pit install flask\n\nUnlike pip, snake-pit will write the package name to automatically\nrequirements file. Once you have successfully installed the package.\n\nRequirements Files\n~~~~~~~~~~~~~~~~~~\n\nAlthough I mentioned earlier, snake-pit has been designed to be aware of\nthe combination of the pip-tools. Therefore, the **Requirements file**\nto say here, as that term is pip-tools, is a file, such as a specified\nto ``requirements.in`` to pip-tools's ``pip-compile`` command.\n\nAs below, it is possible to specify a file path to reference\n``--requirements, in -r`` option. This is priority than the set of\nconfiguration files, which will be described later.\n\n.. code:: console\n\n\n    $ pit install pytest -r dev-requirements.in\n\nConfiguration Files\n~~~~~~~~~~~~~~~~~~~\n\nIf the ``--requirements`` option is not specified, snake-pit uses the\nconfiguration file to search for the requirements file.\n\nConfig file is intended to be managed by a name in the path to the\nrequirements file. Please describe in YAML format file.In hash it will\ndescribe as ``<name of the file path> : <path to file>``. The only\nrequired key is ``default``. This is referred to by default when\n``--name, -n`` option is not specified.\n\nIf there is no configuration file, or if the configuration file can not\nbe read, the default configuration is used. By default, it will read and\nwrite ``requirements.in``.\n\nFor example, you are managing by dividing the requirements file as\nfollows:\n\n::\n\n    requirements\n    \u251c\u2500\u2500 base.in\n    \u2514\u2500\u2500 dev\n        \u251c\u2500\u2500 base.in\n        \u2514\u2500\u2500 mysql.in\n\nAs follows, It is troublesome to specify the long file path for each\ninstallation.\n\n.. code:: console\n\n\n    $ pit install mycli -r requirements/dev/mysql.in\n\nSo, we will use the configuration file. Let's described as follows:\n\n.. code:: yaml\n\n\n    default:\n      requirements/base.in\n    dev:\n      requirements/dev/base.in\n    mysql:\n      requirements/dev/mysql.in\n\nSave as ``pit.yml``. By default, snake-pit enforce this file name, but\nthis can be changed by setting environment variables (see below).\n\nNow you need only to specify the name to ``--name`` option.\n\n.. code:: console\n\n\n    $ pit install mycli -n mysql\n    ...\n    Successfully installed PyMySQL-0.6.7 Pygments-2.0.2 configobj-5.0.6 mycli-1.5.2 prompt-toolkit-0.46 pycrypto-2.6.1 six-1.10.0 sqlparse-0.1.18 wcwidth-0.1.5\n    Append the following packages in requirements/dev/mysql.in: mycli\n    requirements/dev/mysql.in has been updated as follows:\n    # requirements.mysql.in\n    mycli\n\nDefault Configuration\n~~~~~~~~~~~~~~~~~~~~~\n\nIf the configuration file fails to load or did not exist, the default\nconfiguration is used. By default, this is as follows.\n\n.. code:: yaml\n\n\n    default:\n        requirements.in\n\nSet the configuration file name in the environment variable\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is possible to set the path to the configuration file in the\nenvironment variable ``PIT_CONFIG_PATH``. If this environment variable\nis set, snake-pit looks for a there instead of ``pit.yml`` immediately\nbelow.\n\n.. code:: console\n\n\n    $ mv pit.yml .pitrc\n    $ export PIT_CONFIG_PATH=.pitrc\n\nUninstall Packages\n~~~~~~~~~~~~~~~~~~\n\nUninstall Packages also, is almost the same as the installation.\n\n.. code:: console\n\n\n    $ pit uninstall nose\n\nAs well as the installation, ``--requirements, -r`` and ``--name, -n``\noptions are available.\n\n.. code:: console\n\n\n    $ pit uninstall pytest -n test\n\nFurther, by using the ``--auto, -a`` options, of all the packages to the\nspecified package depends, is possible to remove at once what is\nunnecessary.\n\n.. code:: console\n\n    $ pit uninstall bpython httpie --auto\n    Specified package and becomes unnecessary by which they are removed, it will remove the following packages:\n\n    curtsies\n    httpie\n    greenlet\n    blessings\n    bpython\n\n    Are you sure? [y/N]:\n\nAliases\n-------\n\nsnake-pit You can also use the alias of sub-command.\n\n.. code:: console\n\n    $ pit i django  # install django\n    $ pit u django  # uninstall django\n\nLicense\n-------\n\nLicensed under the MIT, see ``LICENSE``.\n\n.. |CircleCI| image:: https://img.shields.io/circleci/project/kk6/snake-pit.svg?style=flat-square\n   :target: https://circleci.com/gh/kk6/snake-pit\n.. |Coverage Status| image:: https://img.shields.io/coveralls/kk6/snake-pit.svg?style=flat-square\n   :target: https://coveralls.io/github/kk6/snake-pit?branch=master\n.. |Requires.io| image:: https://img.shields.io/requires/github/kk6/snake-pit.svg?style=flat-square\n   :target: https://requires.io/github/kk6/snake-pit/requirements/\n.. |Code Climate| image:: https://img.shields.io/codeclimate/github/kk6/snake-pit/badges/gpa.svg?style=flat-square\n   :target: https://codeclimate.com/github/kk6/snake-pit\n.. |Code Health| image:: https://landscape.io/github/kk6/snake-pit/master/landscape.svg?style=flat-square\n   :target: https://landscape.io/github/kk6/snake-pit/master\n.. |GitHub license| image:: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n   :target: https://raw.githubusercontent.com/kk6/snake-pit/master/LICENSE\n.. |PyPI| image:: https://img.shields.io/pypi/v/snake-pit.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/snake-pit", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kk6/snake-pit", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "snake-pit", "package_url": "https://pypi.org/project/snake-pit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/snake-pit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kk6/snake-pit"}, "release_url": "https://pypi.org/project/snake-pit/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Depending on the installation or uninstall packages, and then edit the requirements file.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/kk6/snake-pit\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e18a8569abbcf6d806bf9d03468d6147f317d6ac/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6b6b362f736e616b652d7069742e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://coveralls.io/github/kk6/snake-pit?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a93d6706d926ed675a299ea3fcf82c27fed02c82/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6b6b362f736e616b652d7069742e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://requires.io/github/kk6/snake-pit/requirements/\" rel=\"nofollow\"><img alt=\"Requires.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95df0ee9189023b9dbade0ba5b4b6162a26a934f/68747470733a2f2f696d672e736869656c64732e696f2f72657175697265732f6769746875622f6b6b362f736e616b652d7069742e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://codeclimate.com/github/kk6/snake-pit\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/949982cc423c611a423862891f2e61b7719149da/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f6769746875622f6b6b362f736e616b652d7069742f6261646765732f6770612e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://landscape.io/github/kk6/snake-pit/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ead3eec39ef501857432aa890a4f5301304b3b2/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f6b6b362f736e616b652d7069742f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://raw.githubusercontent.com/kk6/snake-pit/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d01dca179e5892f8f0e2e136225f10faa1ca41f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/snake-pit\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/799b1f27a07f8dfcf481d20c1d6c87180f56fb68/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736e616b652d7069742e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p><em>It\u2019s Five O\u2019clock Somewhere</em></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<div id=\"design-concepts\">\n<h3>Design Concepts</h3>\n<p>I\u2019m using ordinary <a href=\"https://github.com/nvie/pip-tools\" rel=\"nofollow\">pip-tools</a> .\npip-tools is great, but the package of installation, is to edit the\n<tt>requirements.in</tt> file every time the uninstall in the editor it was\nsomewhat cumbersome. So, I have developed a snake-pit. snake-pit, which\ntakes you by writing automatically package name to <tt>requirements.in</tt>\nAfter the installation of the package is successful. Even when the\nuninstall, will remove the automatically package name from\nrequirements.in.</p>\n</div>\n<div id=\"stand-alone\">\n<h3>Stand-alone</h3>\n<p>snake-pit is desirable to use in combination with a pip-tools, but it\ndoes not mean that its never dependent to pip-tools. snake-pit is\navailable in stand-alone. It is a good idea to use instead of\n<tt>pip freeze&gt; requirements.txt</tt>.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"using-pip\">\n<h3>Using pip</h3>\n<p>snake-pit is possible to install pip.</p>\n<pre><span class=\"gp\">$</span> pip install snake-pit\n</pre>\n</div>\n<div id=\"get-the-code\">\n<h3>Get the Code</h3>\n<p>It is also possible to get the source code from Github.</p>\n<pre><span class=\"gp\">$</span> git clone git@github.com:kk6/snake-pit.git\n</pre>\n<p>You may want to install in the pip editable mode.</p>\n<pre><span class=\"gp\">$</span> pip install -e .\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"installing-packages\">\n<h3>Installing Packages</h3>\n<p>To install the Python package using the snake-pit, do the following. It\nis only different character and if you use a pip.</p>\n<pre><span class=\"gp\">$</span> pit install flask\n</pre>\n<p>Unlike pip, snake-pit will write the package name to automatically\nrequirements file. Once you have successfully installed the package.</p>\n</div>\n<div id=\"requirements-files\">\n<h3>Requirements Files</h3>\n<p>Although I mentioned earlier, snake-pit has been designed to be aware of\nthe combination of the pip-tools. Therefore, the <strong>Requirements file</strong>\nto say here, as that term is pip-tools, is a file, such as a specified\nto <tt>requirements.in</tt> to pip-tools\u2019s <tt><span class=\"pre\">pip-compile</span></tt> command.</p>\n<p>As below, it is possible to specify a file path to reference\n<tt><span class=\"pre\">--requirements,</span> in <span class=\"pre\">-r</span></tt> option. This is priority than the set of\nconfiguration files, which will be described later.</p>\n<pre><span class=\"gp\">$</span> pit install pytest -r dev-requirements.in\n</pre>\n</div>\n<div id=\"configuration-files\">\n<h3>Configuration Files</h3>\n<p>If the <tt><span class=\"pre\">--requirements</span></tt> option is not specified, snake-pit uses the\nconfiguration file to search for the requirements file.</p>\n<p>Config file is intended to be managed by a name in the path to the\nrequirements file. Please describe in YAML format file.In hash it will\ndescribe as <tt>&lt;name of the file path&gt; : &lt;path to file&gt;</tt>. The only\nrequired key is <tt>default</tt>. This is referred to by default when\n<tt><span class=\"pre\">--name,</span> <span class=\"pre\">-n</span></tt> option is not specified.</p>\n<p>If there is no configuration file, or if the configuration file can not\nbe read, the default configuration is used. By default, it will read and\nwrite <tt>requirements.in</tt>.</p>\n<p>For example, you are managing by dividing the requirements file as\nfollows:</p>\n<pre>requirements\n\u251c\u2500\u2500 base.in\n\u2514\u2500\u2500 dev\n    \u251c\u2500\u2500 base.in\n    \u2514\u2500\u2500 mysql.in\n</pre>\n<p>As follows, It is troublesome to specify the long file path for each\ninstallation.</p>\n<pre><span class=\"gp\">$</span> pit install mycli -r requirements/dev/mysql.in\n</pre>\n<p>So, we will use the configuration file. Let\u2019s described as follows:</p>\n<pre><span class=\"nt\">default</span><span class=\"p\">:</span>\n  <span class=\"l-Scalar-Plain\">requirements/base.in</span>\n<span class=\"nt\">dev</span><span class=\"p\">:</span>\n  <span class=\"l-Scalar-Plain\">requirements/dev/base.in</span>\n<span class=\"nt\">mysql</span><span class=\"p\">:</span>\n  <span class=\"l-Scalar-Plain\">requirements/dev/mysql.in</span>\n</pre>\n<p>Save as <tt>pit.yml</tt>. By default, snake-pit enforce this file name, but\nthis can be changed by setting environment variables (see below).</p>\n<p>Now you need only to specify the name to <tt><span class=\"pre\">--name</span></tt> option.</p>\n<pre><span class=\"gp\">$</span> pit install mycli -n mysql\n<span class=\"go\">...\nSuccessfully installed PyMySQL-0.6.7 Pygments-2.0.2 configobj-5.0.6 mycli-1.5.2 prompt-toolkit-0.46 pycrypto-2.6.1 six-1.10.0 sqlparse-0.1.18 wcwidth-0.1.5\nAppend the following packages in requirements/dev/mysql.in: mycli\nrequirements/dev/mysql.in has been updated as follows:\n</span><span class=\"gp\">#</span> requirements.mysql.in\n<span class=\"go\">mycli</span>\n</pre>\n</div>\n<div id=\"default-configuration\">\n<h3>Default Configuration</h3>\n<p>If the configuration file fails to load or did not exist, the default\nconfiguration is used. By default, this is as follows.</p>\n<pre><span class=\"nt\">default</span><span class=\"p\">:</span>\n    <span class=\"l-Scalar-Plain\">requirements.in</span>\n</pre>\n</div>\n<div id=\"set-the-configuration-file-name-in-the-environment-variable\">\n<h3>Set the configuration file name in the environment variable</h3>\n<p>It is possible to set the path to the configuration file in the\nenvironment variable <tt>PIT_CONFIG_PATH</tt>. If this environment variable\nis set, snake-pit looks for a there instead of <tt>pit.yml</tt> immediately\nbelow.</p>\n<pre><span class=\"gp\">$</span> mv pit.yml .pitrc\n<span class=\"gp\">$</span> <span class=\"nb\">export</span> <span class=\"nv\">PIT_CONFIG_PATH</span><span class=\"o\">=</span>.pitrc\n</pre>\n</div>\n<div id=\"uninstall-packages\">\n<h3>Uninstall Packages</h3>\n<p>Uninstall Packages also, is almost the same as the installation.</p>\n<pre><span class=\"gp\">$</span> pit uninstall nose\n</pre>\n<p>As well as the installation, <tt><span class=\"pre\">--requirements,</span> <span class=\"pre\">-r</span></tt> and <tt><span class=\"pre\">--name,</span> <span class=\"pre\">-n</span></tt>\noptions are available.</p>\n<pre><span class=\"gp\">$</span> pit uninstall pytest -n <span class=\"nb\">test</span>\n</pre>\n<p>Further, by using the <tt><span class=\"pre\">--auto,</span> <span class=\"pre\">-a</span></tt> options, of all the packages to the\nspecified package depends, is possible to remove at once what is\nunnecessary.</p>\n<pre><span class=\"gp\">$</span> pit uninstall bpython httpie --auto\n<span class=\"go\">Specified package and becomes unnecessary by which they are removed, it will remove the following packages:\n\ncurtsies\nhttpie\ngreenlet\nblessings\nbpython\n\nAre you sure? [y/N]:</span>\n</pre>\n</div>\n</div>\n<div id=\"aliases\">\n<h2>Aliases</h2>\n<p>snake-pit You can also use the alias of sub-command.</p>\n<pre><span class=\"gp\">$</span> pit i django  <span class=\"c1\"># install django\n</span><span class=\"gp\">$</span><span class=\"c1\"></span> pit u django  <span class=\"c1\"># uninstall django</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Licensed under the MIT, see <tt>LICENSE</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1828356, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "926b54858bee289363ac719fe0c105bc", "sha256": "d60e37bd2490357254cf6003e5c0b773c6f43e2587f677c7ecfeed8268ea28ee"}, "downloads": -1, "filename": "snake_pit-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "926b54858bee289363ac719fe0c105bc", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 7508, "upload_time": "2015-11-14T17:41:24", "upload_time_iso_8601": "2015-11-14T17:41:24.081196Z", "url": "https://files.pythonhosted.org/packages/e6/60/f3b3863559a1800c0dd5a0d53af2a6b2502dd93af5372bc18eb9fd25f352/snake_pit-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09df7f86fc5b4582d755f00bfb567df3", "sha256": "a8dfcd1d57e187ef88c9b0ccfc64acda652fdd05a33a92b30baf74ab1f717026"}, "downloads": -1, "filename": "snake-pit-0.2.3.tar.gz", "has_sig": false, "md5_digest": "09df7f86fc5b4582d755f00bfb567df3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11390, "upload_time": "2015-11-14T17:41:19", "upload_time_iso_8601": "2015-11-14T17:41:19.008753Z", "url": "https://files.pythonhosted.org/packages/bc/11/c61e73c13b520f42926fdeb5edae844ff432f046a0de74e4d8aa20ac3144/snake-pit-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b5a6309e1b0989105a6cd30f4b86527d", "sha256": "dc4406647858341e579f394900c4088aae8d8ae1687c3d52d8f6efe2c2d3ac51"}, "downloads": -1, "filename": "snake_pit-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5a6309e1b0989105a6cd30f4b86527d", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 17715, "upload_time": "2015-11-22T17:08:55", "upload_time_iso_8601": "2015-11-22T17:08:55.408828Z", "url": "https://files.pythonhosted.org/packages/c3/d6/be19a3fed43113cc348b58af78a4925dfd7b9d134e4c57b6a381fae9aa0f/snake_pit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27bea1480fedd7c3b262061f36e624d2", "sha256": "c59fc546af60f8b082c698c4e27bd734c68b589aae9280e071555183e72d7576"}, "downloads": -1, "filename": "snake-pit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "27bea1480fedd7c3b262061f36e624d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20487, "upload_time": "2015-11-22T17:08:49", "upload_time_iso_8601": "2015-11-22T17:08:49.474445Z", "url": "https://files.pythonhosted.org/packages/2d/a1/59373b208c4b0bb0c34d9e04e67ffd3b601f324ea3a707427a30e95dfe5b/snake-pit-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5a6309e1b0989105a6cd30f4b86527d", "sha256": "dc4406647858341e579f394900c4088aae8d8ae1687c3d52d8f6efe2c2d3ac51"}, "downloads": -1, "filename": "snake_pit-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5a6309e1b0989105a6cd30f4b86527d", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 17715, "upload_time": "2015-11-22T17:08:55", "upload_time_iso_8601": "2015-11-22T17:08:55.408828Z", "url": "https://files.pythonhosted.org/packages/c3/d6/be19a3fed43113cc348b58af78a4925dfd7b9d134e4c57b6a381fae9aa0f/snake_pit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27bea1480fedd7c3b262061f36e624d2", "sha256": "c59fc546af60f8b082c698c4e27bd734c68b589aae9280e071555183e72d7576"}, "downloads": -1, "filename": "snake-pit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "27bea1480fedd7c3b262061f36e624d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20487, "upload_time": "2015-11-22T17:08:49", "upload_time_iso_8601": "2015-11-22T17:08:49.474445Z", "url": "https://files.pythonhosted.org/packages/2d/a1/59373b208c4b0bb0c34d9e04e67ffd3b601f324ea3a707427a30e95dfe5b/snake-pit-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:37 2020"}