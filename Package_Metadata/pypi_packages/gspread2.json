{"info": {"author": "FutuereProjects", "author_email": "nclark@riseup.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Office/Business :: Financial :: Spreadsheet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "![Stage](https://img.shields.io/badge/Stage-BETA-yellow)\n[![PyPI](https://img.shields.io/pypi/v/gspread2)](https://pypi.org/project/gspread2)\n[![gspread](https://img.shields.io/badge/gspread-3.2.0-blue)](https://github.com/burnash/gspread)\n[![Documentation Status](https://readthedocs.org/projects/gspread2/badge/?version=latest)](https://gspread2.readthedocs.io/en/latest/?badge=latest)\n\n\n# Gspread2\n\nA wrapper around [gspread](https://github.com/burnash/gspread) for easier usage.\nIntended to provide features and syntax similar to [OpenPyXL](https://bitbucket.org/openpyxl/openpyxl).\n\n> DISCLAIMER: This library is still under development!\\\n> Until v1.0.0 is released, assume everything is subject to change.\n\n## Features\n\n- Cell Formatting such as Fonts, Colors and Borders\n- OpenPyXL functions such as `iter_rows()` and `iter_cols()`\n- ~~Values are automatically applied to the sheet when updated~~ See Issue #1\n\n## Roadmap/TODO\n\n- Documentation (WIP)\n- Formulas\n- Filters and Pivot Tables\n\n## Installation\n\n### Requirements:\n- Python3.6+\n\n### Install via Pip\n```\n$ pip install gspread2\n```\n\n## Basic Usage\n\n### Getting Started\n\n#### Create API credentials\n\nBefore using this library, you must log into Google Developers page and set up a Service Account,\nallowing read/write access to your Google Sheets.\n\n1. Head to [Google Developers Console](https://console.developers.google.com/project) \nand create a new project (or select the one you have.)\n\n2. Navigate to \"API & Services\", \"Credentials\".\n\n3. Click on \"CREATE CREDENTIALS\", \"Service account\" and follow through the prompts.\nOn the last page, create a JSON key and save it locally. You will need to import this into the library to authenticate\nto the API.\n\n4. Once you hit \"Done\", you will see the email address under \"Service Accounts\", make note of that email.\n\n5. On your Google Sheet, hit \"Share\" and add the email above.\n\n6. You should now have the credentials and permissions to view and edit your Google Sheet.\n\n#### Load Workbook\n\nTo access a Workbook, you'll need the Google Sheet URL and the credentials file as shown above.\nThe following code example will return a Workbook object:\n\n```python\nimport gspread2\n\nURL = 'https://docs.google.com/spreadsheets/d/spreadsheetID'\nCREDENTIALS = 'path/to/json.file'\n\nworkbook = gspread2.load_workbook(URL, CREDENTIALS)\n```\n\nYou can also import the Workbook class and initialise it with the same parameters:\n\n```python\nfrom gspread2.models import Workbook\n\nURL = 'https://docs.google.com/spreadsheets/d/spreadsheetID'\nCREDENTIALS = 'path/to/json.file'\n\nworkbook = Workbook(URL, CREDENTIALS)\n```\n\n#### Load Worksheet\n\nOnce you have a Workbook loaded, you can access worksheets in a number of ways:\n\n```python\nworkbook = gspread2.load_workbook(URL, CREDENTIALS)\nworksheet = workbook['Sheet 1']\n```\n\nOR\n\n```python\nworkbook = gspread2.load_workbook(URL, CREDENTIALS)\nworksheet = workbook.get_sheet_by_name('Sheet 1')\n```\n\nTo get the first sheet (usually the active one):\n\n```python\nworkbook = gspread2.load_workbook(URL, CREDENTIALS)\nworksheet = workbook.active\n```\n\n#### Select Cell\n\nYou can select cells individually or iterate through columns and rows (other gspread functions are still available such\n as `worksheet.range()`)\n\n##### Worksheet.cell()\n\nSelect an individual cell in the worksheet\n\n```python\ncell = worksheet.cell(1, 2)  # 1st row, 2nd column\n```\nOR\n```python\ncell = worksheet.cell('B1')\n```\n\n##### Worksheet.iter_rows()\n\nReturns a list of lists of cells for each row. This function is the same as found on OpenPyXL. \\\nArguments are as follows:\n- start_row (default: First row)\n- end_row (default: Last row)\n- start_col (default: First column)\n- end_col (default: Last column)\n\n```python\nworksheet.iter_rows(2, 4, 3, 5)\n```\n\nThe example above will return:\n\n```python\n[\n    [Cell(C2), Cell(D2), Cell(E2)],\n    [Cell(C3), Cell(D3), Cell(E3)],\n    [Cell(C4), Cell(D4), Cell(E4)],\n]\n```\n\n##### Worksheet.iter_cols()\n\nReturns a list of lists of cells for each column. This function is the same as found on OpenPyXL. \\\nArguments are as follows:\n- start_row (default: First row)\n- end_row (default: Last row)\n- start_col (default: First column)\n- end_col (default: Last column)\n\n```python\nworksheet.iter_cols(2, 4, 3, 5)\n```\nThe example above will return:\n\n```python\n[\n    [Cell(C2), Cell(C3), Cell(C4)],\n    [Cell(D2), Cell(D3), Cell(D4)],\n    [Cell(E2), Cell(E3), Cell(E4)],\n]\n```\n\n#### Edit Cells\n\n##### Cell Values\n\nOnce you have retrieved your desired cells as shown above, you'll want to update the value.\nOn the original `gspread` library, you have to keep track of all the cells you modified and pass them on to \n`worksheet.update_cells()`. \\\nIn `gspread2` you do not have to pass on the cells to the function, the library will know what you modified.\n\n```python\ncell = worksheet.cell(1, 1)\ncell.value = 'New Value'\nworksheet.update_cells()\n```\n\n##### Cell Fonts\n\n`gspread` does not provide any formatting features. To apply formatting to a cell, you must initialise a Font instance\n(`gspread2.styles.Font`)\n\n```python\nfrom gspread2.styles import Font\n\ncell = worksheet.cell(1, 1)\nnew_font = Font(\n    name='Arial',\n    size=12,\n    bold=True,\n    italic=True,\n    strikethrough=True,\n    underline=True,\n    color='#FF000000',\n)\ncell.font = new_font\nworksheet.update_cells()\n```\n\nAll arguments for `Font` are optional and default to `None`. \\\nArguments with `None` as a value will be untouched on update.\n\n\n##### Cell Fill\n\nTo apply a background color to a cell, you must initialise `gspread2.styles.colors.Color`\nand set it to `cell.fill`\n\n```python\nfrom gspread2.styles.colors import Color\ncell = worksheet.cell(1, 1)\nbg_color Color('#FF000000')\ncell.fill = bg_color\nworksheet.update_cells()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gspread2.readthedocs.io", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gspread2", "package_url": "https://pypi.org/project/gspread2/", "platform": "", "project_url": "https://pypi.org/project/gspread2/", "project_urls": {"Homepage": "https://gspread2.readthedocs.io"}, "release_url": "https://pypi.org/project/gspread2/0.2.0/", "requires_dist": ["gspread (==3.2.0)", "oauth2client"], "requires_python": ">=3.6", "summary": "Wrapper for gspread", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Stage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ded55279cb6379b683e1982a4eee32ab5a2c3be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53746167652d424554412d79656c6c6f77\">\n<a href=\"https://pypi.org/project/gspread2\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ba910c7d93c1c228d924ce5d810b9a15f0d3a9d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6773707265616432\"></a>\n<a href=\"https://github.com/burnash/gspread\" rel=\"nofollow\"><img alt=\"gspread\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77d1b8015844f2e16e5bae068d6275753e37c922/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f677370726561642d332e322e302d626c7565\"></a>\n<a href=\"https://gspread2.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d693563a83e74dc517def15ddc8c0a030e027df2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f67737072656164322f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>Gspread2</h1>\n<p>A wrapper around <a href=\"https://github.com/burnash/gspread\" rel=\"nofollow\">gspread</a> for easier usage.\nIntended to provide features and syntax similar to <a href=\"https://bitbucket.org/openpyxl/openpyxl\" rel=\"nofollow\">OpenPyXL</a>.</p>\n<blockquote>\n<p>DISCLAIMER: This library is still under development!<br>\nUntil v1.0.0 is released, assume everything is subject to change.</p>\n</blockquote>\n<h2>Features</h2>\n<ul>\n<li>Cell Formatting such as Fonts, Colors and Borders</li>\n<li>OpenPyXL functions such as <code>iter_rows()</code> and <code>iter_cols()</code></li>\n<li><del>Values are automatically applied to the sheet when updated</del> See Issue #1</li>\n</ul>\n<h2>Roadmap/TODO</h2>\n<ul>\n<li>Documentation (WIP)</li>\n<li>Formulas</li>\n<li>Filters and Pivot Tables</li>\n</ul>\n<h2>Installation</h2>\n<h3>Requirements:</h3>\n<ul>\n<li>Python3.6+</li>\n</ul>\n<h3>Install via Pip</h3>\n<pre><code>$ pip install gspread2\n</code></pre>\n<h2>Basic Usage</h2>\n<h3>Getting Started</h3>\n<h4>Create API credentials</h4>\n<p>Before using this library, you must log into Google Developers page and set up a Service Account,\nallowing read/write access to your Google Sheets.</p>\n<ol>\n<li>\n<p>Head to <a href=\"https://console.developers.google.com/project\" rel=\"nofollow\">Google Developers Console</a>\nand create a new project (or select the one you have.)</p>\n</li>\n<li>\n<p>Navigate to \"API &amp; Services\", \"Credentials\".</p>\n</li>\n<li>\n<p>Click on \"CREATE CREDENTIALS\", \"Service account\" and follow through the prompts.\nOn the last page, create a JSON key and save it locally. You will need to import this into the library to authenticate\nto the API.</p>\n</li>\n<li>\n<p>Once you hit \"Done\", you will see the email address under \"Service Accounts\", make note of that email.</p>\n</li>\n<li>\n<p>On your Google Sheet, hit \"Share\" and add the email above.</p>\n</li>\n<li>\n<p>You should now have the credentials and permissions to view and edit your Google Sheet.</p>\n</li>\n</ol>\n<h4>Load Workbook</h4>\n<p>To access a Workbook, you'll need the Google Sheet URL and the credentials file as shown above.\nThe following code example will return a Workbook object:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gspread2</span>\n\n<span class=\"n\">URL</span> <span class=\"o\">=</span> <span class=\"s1\">'https://docs.google.com/spreadsheets/d/spreadsheetID'</span>\n<span class=\"n\">CREDENTIALS</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/json.file'</span>\n\n<span class=\"n\">workbook</span> <span class=\"o\">=</span> <span class=\"n\">gspread2</span><span class=\"o\">.</span><span class=\"n\">load_workbook</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">,</span> <span class=\"n\">CREDENTIALS</span><span class=\"p\">)</span>\n</pre>\n<p>You can also import the Workbook class and initialise it with the same parameters:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gspread2.models</span> <span class=\"kn\">import</span> <span class=\"n\">Workbook</span>\n\n<span class=\"n\">URL</span> <span class=\"o\">=</span> <span class=\"s1\">'https://docs.google.com/spreadsheets/d/spreadsheetID'</span>\n<span class=\"n\">CREDENTIALS</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/json.file'</span>\n\n<span class=\"n\">workbook</span> <span class=\"o\">=</span> <span class=\"n\">Workbook</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">,</span> <span class=\"n\">CREDENTIALS</span><span class=\"p\">)</span>\n</pre>\n<h4>Load Worksheet</h4>\n<p>Once you have a Workbook loaded, you can access worksheets in a number of ways:</p>\n<pre><span class=\"n\">workbook</span> <span class=\"o\">=</span> <span class=\"n\">gspread2</span><span class=\"o\">.</span><span class=\"n\">load_workbook</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">,</span> <span class=\"n\">CREDENTIALS</span><span class=\"p\">)</span>\n<span class=\"n\">worksheet</span> <span class=\"o\">=</span> <span class=\"n\">workbook</span><span class=\"p\">[</span><span class=\"s1\">'Sheet 1'</span><span class=\"p\">]</span>\n</pre>\n<p>OR</p>\n<pre><span class=\"n\">workbook</span> <span class=\"o\">=</span> <span class=\"n\">gspread2</span><span class=\"o\">.</span><span class=\"n\">load_workbook</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">,</span> <span class=\"n\">CREDENTIALS</span><span class=\"p\">)</span>\n<span class=\"n\">worksheet</span> <span class=\"o\">=</span> <span class=\"n\">workbook</span><span class=\"o\">.</span><span class=\"n\">get_sheet_by_name</span><span class=\"p\">(</span><span class=\"s1\">'Sheet 1'</span><span class=\"p\">)</span>\n</pre>\n<p>To get the first sheet (usually the active one):</p>\n<pre><span class=\"n\">workbook</span> <span class=\"o\">=</span> <span class=\"n\">gspread2</span><span class=\"o\">.</span><span class=\"n\">load_workbook</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">,</span> <span class=\"n\">CREDENTIALS</span><span class=\"p\">)</span>\n<span class=\"n\">worksheet</span> <span class=\"o\">=</span> <span class=\"n\">workbook</span><span class=\"o\">.</span><span class=\"n\">active</span>\n</pre>\n<h4>Select Cell</h4>\n<p>You can select cells individually or iterate through columns and rows (other gspread functions are still available such\nas <code>worksheet.range()</code>)</p>\n<h5>Worksheet.cell()</h5>\n<p>Select an individual cell in the worksheet</p>\n<pre><span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">cell</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># 1st row, 2nd column</span>\n</pre>\n<p>OR</p>\n<pre><span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">cell</span><span class=\"p\">(</span><span class=\"s1\">'B1'</span><span class=\"p\">)</span>\n</pre>\n<h5>Worksheet.iter_rows()</h5>\n<p>Returns a list of lists of cells for each row. This function is the same as found on OpenPyXL. <br>\nArguments are as follows:</p>\n<ul>\n<li>start_row (default: First row)</li>\n<li>end_row (default: Last row)</li>\n<li>start_col (default: First column)</li>\n<li>end_col (default: Last column)</li>\n</ul>\n<pre><span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">iter_rows</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>The example above will return:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">C2</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">D2</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">E2</span><span class=\"p\">)],</span>\n    <span class=\"p\">[</span><span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">C3</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">D3</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">E3</span><span class=\"p\">)],</span>\n    <span class=\"p\">[</span><span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">C4</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">D4</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">E4</span><span class=\"p\">)],</span>\n<span class=\"p\">]</span>\n</pre>\n<h5>Worksheet.iter_cols()</h5>\n<p>Returns a list of lists of cells for each column. This function is the same as found on OpenPyXL. <br>\nArguments are as follows:</p>\n<ul>\n<li>start_row (default: First row)</li>\n<li>end_row (default: Last row)</li>\n<li>start_col (default: First column)</li>\n<li>end_col (default: Last column)</li>\n</ul>\n<pre><span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">iter_cols</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>The example above will return:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">C2</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">C3</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">C4</span><span class=\"p\">)],</span>\n    <span class=\"p\">[</span><span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">D2</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">D3</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">D4</span><span class=\"p\">)],</span>\n    <span class=\"p\">[</span><span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">E2</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">E3</span><span class=\"p\">),</span> <span class=\"n\">Cell</span><span class=\"p\">(</span><span class=\"n\">E4</span><span class=\"p\">)],</span>\n<span class=\"p\">]</span>\n</pre>\n<h4>Edit Cells</h4>\n<h5>Cell Values</h5>\n<p>Once you have retrieved your desired cells as shown above, you'll want to update the value.\nOn the original <code>gspread</code> library, you have to keep track of all the cells you modified and pass them on to\n<code>worksheet.update_cells()</code>. <br>\nIn <code>gspread2</code> you do not have to pass on the cells to the function, the library will know what you modified.</p>\n<pre><span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">cell</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s1\">'New Value'</span>\n<span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cells</span><span class=\"p\">()</span>\n</pre>\n<h5>Cell Fonts</h5>\n<p><code>gspread</code> does not provide any formatting features. To apply formatting to a cell, you must initialise a Font instance\n(<code>gspread2.styles.Font</code>)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gspread2.styles</span> <span class=\"kn\">import</span> <span class=\"n\">Font</span>\n\n<span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">cell</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">new_font</span> <span class=\"o\">=</span> <span class=\"n\">Font</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Arial'</span><span class=\"p\">,</span>\n    <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span>\n    <span class=\"n\">bold</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">italic</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">strikethrough</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">underline</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'#FF000000'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">font</span> <span class=\"o\">=</span> <span class=\"n\">new_font</span>\n<span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cells</span><span class=\"p\">()</span>\n</pre>\n<p>All arguments for <code>Font</code> are optional and default to <code>None</code>. <br>\nArguments with <code>None</code> as a value will be untouched on update.</p>\n<h5>Cell Fill</h5>\n<p>To apply a background color to a cell, you must initialise <code>gspread2.styles.colors.Color</code>\nand set it to <code>cell.fill</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gspread2.styles.colors</span> <span class=\"kn\">import</span> <span class=\"n\">Color</span>\n<span class=\"n\">cell</span> <span class=\"o\">=</span> <span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">cell</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">bg_color</span> <span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"s1\">'#FF000000'</span><span class=\"p\">)</span>\n<span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">fill</span> <span class=\"o\">=</span> <span class=\"n\">bg_color</span>\n<span class=\"n\">worksheet</span><span class=\"o\">.</span><span class=\"n\">update_cells</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6556309, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d455be23f17dedd1cf9ff776f38808ad", "sha256": "695ba24fbe8dcf194d611f092ed5652a5e1fc67b8631a0600ffc6d1d470b3a7d"}, "downloads": -1, "filename": "gspread2-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d455be23f17dedd1cf9ff776f38808ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3630, "upload_time": "2020-01-29T19:54:00", "upload_time_iso_8601": "2020-01-29T19:54:00.682664Z", "url": "https://files.pythonhosted.org/packages/44/ac/dac809e6753577f51ff7b71d2d9b8b20532e7b55f5497e1942f3b876477f/gspread2-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "732cc6d3ca8e39b4474538a07a86f923", "sha256": "38c3ebaa6353c8b261034204f652949914ebbdd803511c7d8017b2e04cbadfbe"}, "downloads": -1, "filename": "gspread2-0.0.1.tar.gz", "has_sig": false, "md5_digest": "732cc6d3ca8e39b4474538a07a86f923", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2025, "upload_time": "2020-01-29T19:54:02", "upload_time_iso_8601": "2020-01-29T19:54:02.779196Z", "url": "https://files.pythonhosted.org/packages/54/ef/9c39d6c4b6e1e43ea2ffc8165ef358f46ac7718857ab18a2ff6d5aa2ad60/gspread2-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a0de816d7ec078e241cddffd1d0fd3c0", "sha256": "b943e7f690a523c0c8f0dfe44073475b6a2f3dab8f23013e1c078e5d3433370e"}, "downloads": -1, "filename": "gspread2-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a0de816d7ec078e241cddffd1d0fd3c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3649, "upload_time": "2020-01-29T19:57:41", "upload_time_iso_8601": "2020-01-29T19:57:41.132676Z", "url": "https://files.pythonhosted.org/packages/42/40/f17fe9a0373675270fb9d36359e8fe1a059eb7fc2510b2c3aedbe29adcbf/gspread2-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9ae44d4c617277912de8a16de02fc64", "sha256": "7369dac85ede5f4fbdbc1b760d992a1cf5b657f13a5b89d51f1cf80a54b0fcf0"}, "downloads": -1, "filename": "gspread2-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f9ae44d4c617277912de8a16de02fc64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2065, "upload_time": "2020-01-29T19:57:42", "upload_time_iso_8601": "2020-01-29T19:57:42.297077Z", "url": "https://files.pythonhosted.org/packages/a1/64/f9f773801a54367ffd34391b9125294ada6ef14739125e75e6f5793af65f/gspread2-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d7caab7e02adbf36de4d93c4a88fdd17", "sha256": "3e3ca440eb8be33819b89caa9ee0d811c5a258cfa4c90457b3f1c23031b27f94"}, "downloads": -1, "filename": "gspread2-0.0.3-py3.7.egg", "has_sig": false, "md5_digest": "d7caab7e02adbf36de4d93c4a88fdd17", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 8152, "upload_time": "2020-02-01T02:13:58", "upload_time_iso_8601": "2020-02-01T02:13:58.153772Z", "url": "https://files.pythonhosted.org/packages/e5/4f/f23108669045fc747db302428c4c2dafc2fc197c1b21ccd82a2781b4f6e9/gspread2-0.0.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ce3763d1afd084cf0f144f1942ed509", "sha256": "7d8717ac8ae9459a43b4183e94342175a2ec1f1ead5bd0b52c021d81b92db608"}, "downloads": -1, "filename": "gspread2-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1ce3763d1afd084cf0f144f1942ed509", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9124, "upload_time": "2020-02-01T02:13:56", "upload_time_iso_8601": "2020-02-01T02:13:56.527449Z", "url": "https://files.pythonhosted.org/packages/97/70/eed505a2ae48bc8efbcc5551f27388059f3952a44acf36420d2f3c6c5de9/gspread2-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9f66412ce43b32e36777d98b57a6bcc", "sha256": "dfac4b57372b93a97898c79dbd86c1c98dcb18cf52275ca48a2a4043ba55a762"}, "downloads": -1, "filename": "gspread2-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e9f66412ce43b32e36777d98b57a6bcc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5913, "upload_time": "2020-02-01T02:13:59", "upload_time_iso_8601": "2020-02-01T02:13:59.239093Z", "url": "https://files.pythonhosted.org/packages/fa/60/913d8b98c62a7878cca555d9f55551e8a26ae3a663fdfd96ee854dcb8da0/gspread2-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e59873b89c40af653e3fe4e509217f8e", "sha256": "fc27b9aa498ba2ae8d43dfb71207ddc17e793f51179977f0748cfb1e40d7293d"}, "downloads": -1, "filename": "gspread2-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e59873b89c40af653e3fe4e509217f8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9045, "upload_time": "2020-02-01T04:11:37", "upload_time_iso_8601": "2020-02-01T04:11:37.076026Z", "url": "https://files.pythonhosted.org/packages/e1/aa/208c505dc096a0d5419b96b0673840fc27a5892f56fa9ce0f2a960d634d9/gspread2-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c306ca60f3fdfb9871b5dca348799b0f", "sha256": "dca9d706a691ea8dffe581c3c9c37c67bfa5502aa2b1d0f892a815854f995c5e"}, "downloads": -1, "filename": "gspread2-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c306ca60f3fdfb9871b5dca348799b0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5841, "upload_time": "2020-02-01T04:11:38", "upload_time_iso_8601": "2020-02-01T04:11:38.590807Z", "url": "https://files.pythonhosted.org/packages/9e/20/cfa5d07773b8b628c14175f8094f883135447c25e07c714dbdaf77175afb/gspread2-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "045ac74871099d173ab43748a6f7dad3", "sha256": "bc9308c59b69a7a0946864c87a8b2211337a116c357b0577087bbd25b0f75a32"}, "downloads": -1, "filename": "gspread2-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "045ac74871099d173ab43748a6f7dad3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9042, "upload_time": "2020-02-01T04:22:19", "upload_time_iso_8601": "2020-02-01T04:22:19.468125Z", "url": "https://files.pythonhosted.org/packages/18/e5/759d43e4915f26b30a1e5df141f91a7149c4f77d28607d9450eb8dd67049/gspread2-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18f2fc9f3053639aac63234de3fa7e79", "sha256": "39b1b74985899ab30fd943a8e0603bc94748bb6c1df8e41ddb5ccbc706d15098"}, "downloads": -1, "filename": "gspread2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "18f2fc9f3053639aac63234de3fa7e79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5838, "upload_time": "2020-02-01T04:22:21", "upload_time_iso_8601": "2020-02-01T04:22:21.068347Z", "url": "https://files.pythonhosted.org/packages/ca/c2/da3439259956ec124c967c32109e5c04ff65c7585b3af3981c3188689054/gspread2-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ec034de634a2674e49c7343fc3bfd0e1", "sha256": "7a0410ead565e275386c4213ae04ccae031ab4c2ca61454bce7f05a7a012ad67"}, "downloads": -1, "filename": "gspread2-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec034de634a2674e49c7343fc3bfd0e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10069, "upload_time": "2020-02-02T00:26:07", "upload_time_iso_8601": "2020-02-02T00:26:07.236386Z", "url": "https://files.pythonhosted.org/packages/17/fe/dafbdf8a7710733680672dd882d1fe4c781052e00fb39b384f2e0b30cfe6/gspread2-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb344d162563be4a1eec88075d20c833", "sha256": "4ae7cc7959397e7ceb5b98528a8634adc3064757a28598cba8f061068a32d255"}, "downloads": -1, "filename": "gspread2-0.2.0.tar.gz", "has_sig": false, "md5_digest": "eb344d162563be4a1eec88075d20c833", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7142, "upload_time": "2020-02-02T00:26:08", "upload_time_iso_8601": "2020-02-02T00:26:08.794133Z", "url": "https://files.pythonhosted.org/packages/0a/f4/373a3793de9a13c165c9284ce4235b10175ca309fad9a286a453abfe1bb9/gspread2-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec034de634a2674e49c7343fc3bfd0e1", "sha256": "7a0410ead565e275386c4213ae04ccae031ab4c2ca61454bce7f05a7a012ad67"}, "downloads": -1, "filename": "gspread2-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec034de634a2674e49c7343fc3bfd0e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10069, "upload_time": "2020-02-02T00:26:07", "upload_time_iso_8601": "2020-02-02T00:26:07.236386Z", "url": "https://files.pythonhosted.org/packages/17/fe/dafbdf8a7710733680672dd882d1fe4c781052e00fb39b384f2e0b30cfe6/gspread2-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb344d162563be4a1eec88075d20c833", "sha256": "4ae7cc7959397e7ceb5b98528a8634adc3064757a28598cba8f061068a32d255"}, "downloads": -1, "filename": "gspread2-0.2.0.tar.gz", "has_sig": false, "md5_digest": "eb344d162563be4a1eec88075d20c833", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7142, "upload_time": "2020-02-02T00:26:08", "upload_time_iso_8601": "2020-02-02T00:26:08.794133Z", "url": "https://files.pythonhosted.org/packages/0a/f4/373a3793de9a13c165c9284ce4235b10175ca309fad9a286a453abfe1bb9/gspread2-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:39 2020"}