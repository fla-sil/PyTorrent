{"info": {"author": "Monwara LLC", "author_email": "branko@monwara.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License"], "description": "==============\nPyMSTranslator\n==============\n\nPyMSTranslator is the Python client for `Microsoft(r) Translator`_ service.\nIt's ultimate goal is to provide full implementation of the entire MS\nTranslator service API. The immediate goal is to provide basic translation\nfunctionality.\n\nGetting started\n===============\n\nBefore you can get started, you will need to obtain the API key (Microsoft(r)\nLive account required).\n\nSubscribe to the Microsoft Translator API at Azure Marketplace, and obtain the\nAPI key. More iformation can be found `on the Microsoft's site`_.\n\nThe service is free up to 2M characters per month.\n\nInstalling and using PyMSTranslator\n===================================\n\nInstall from pip::\n\n    pip install pymstranslator\n\nBasic usage\n===========\n\nBefore you can use the Microsoft Translator API, you need to register your app.\nOnce you do that, you will receive client ID and client secret. Note these\ndown.\n\nCreating the access key\n-----------------------\n\nOnce in your application's initialization code, you must create the access key\n(access token). This is best done in such a way that the access key is always\navailable to parts of your application that may require the key. Once created, \nthe will be valid for 10 minutes and is cached to avoid repeated requests to\nthe authorization server. Here is an example::\n\n    >>> from mstranslator import MSTranslatorAccessKey\n    >>> key = MSTranslatorAccessKey(client_id, client_secret)\n\nIn Django, for example, you may create the key in the settings module, and make\nit available as a configuration setting::\n\n    # setup.py\n    import os\n    CLIENT_ID = os.environ.get('TRANSLATOR_ID')\n    CLIENT_SECRET = os.environ.get('TRANSLATOR_SECRET')\n    MS_TRANSLATOR_KEY = MSTranslatorAccessKey(CLIENT_ID, CLIENT_SECRET)\n\n    # somewhere in your view\n    from django.conf import settings\n    key = settings.MS_TRANSLATOR_KEY\n\nThe key object has a ``get_key`` method which returns the cached key if it has\nnot expired yet, shortening the response time. This method is used by the\nclient object to retrieve the cached key, so you don't need to worry about the\ninternal implementation.\n\nCreating the Microsoft Translator client object\n-----------------------------------------------\n\nThe client object is crated using the key crated in the `Creating the access\nkey`_ section::\n\n    >>> from mstranslator import MSTranslator\n    >>> translator = MSTranslator(key)\n\nThe client object currently only has one useful method, and that is\n``translate``. To translate a string, call the method like so::\n\n    >>> translator.translate(text='Si vous plais', tfrom='fr', to='en')\n    \"If you'd like\"\n\nMicrosoft Translator API coverage\n=================================\n\nCurrently, only the ``Translate`` method has been implemented. The goal for 1.0\nrelease is to include all of the Microsoft Translator API v2.\n\nFor the most part, the API of Microsoft Translator methods should be almost\nidentical in PyMSTranslator except for a few details:\n\n+ Method names are always lower-case using underscores to separate words (e.g.,\n  ``TranslateArray`` becomes ``translate_array``)\n+ Same applies to parameters (e.g., ``contentType`` becomes ``content_type``)\n+ Parameter names that match Python built-in names are prefixed with ``t``\n  (e.g., ``from`` becomes ``tfrom``, ``format`` becomes ``tformat``)\n\nCaching\n=======\n\nThere is currently no caching of the translations. Caching mechanism is planned\nfor 1.0 release, though, with an interface compatible with the Django's caching\nmechanism. For now, caching must be done separately.\n\nReporting bugs\n==============\n\nBugs can be reported to the BitBucket `issue tracker`_.\n\n.. _Microsoft(r) Translator: http://www.microsofttranslator.com/dev/\n.. _on the Microsoft's site: http://www.microsoft.com/web/post/using-the-free-bing-translation-apis\n.. _issue trakcer: https://bitbucket.org/monwara/pymstranslator/issues", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/monwara/pymstranslator/downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/monwara/pymstranslator", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pymstranslator", "package_url": "https://pypi.org/project/pymstranslator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pymstranslator/", "project_urls": {"Download": "https://bitbucket.org/monwara/pymstranslator/downloads", "Homepage": "https://bitbucket.org/monwara/pymstranslator"}, "release_url": "https://pypi.org/project/pymstranslator/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "Python module for interfacing with Microsoft(r) Translator", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==============<br>PyMSTranslator<br>==============<br><br>PyMSTranslator is the Python client for `Microsoft(r) Translator`_ service.<br>It's ultimate goal is to provide full implementation of the entire MS<br>Translator service API. The immediate goal is to provide basic translation<br>functionality.<br><br>Getting started<br>===============<br><br>Before you can get started, you will need to obtain the API key (Microsoft(r)<br>Live account required).<br><br>Subscribe to the Microsoft Translator API at Azure Marketplace, and obtain the<br>API key. More iformation can be found `on the Microsoft's site`_.<br><br>The service is free up to 2M characters per month.<br><br>Installing and using PyMSTranslator<br>===================================<br><br>Install from pip::<br><br>    pip install pymstranslator<br><br>Basic usage<br>===========<br><br>Before you can use the Microsoft Translator API, you need to register your app.<br>Once you do that, you will receive client ID and client secret. Note these<br>down.<br><br>Creating the access key<br>-----------------------<br><br>Once in your application's initialization code, you must create the access key<br>(access token). This is best done in such a way that the access key is always<br>available to parts of your application that may require the key. Once created, <br>the will be valid for 10 minutes and is cached to avoid repeated requests to<br>the authorization server. Here is an example::<br><br>    &gt;&gt;&gt; from mstranslator import MSTranslatorAccessKey<br>    &gt;&gt;&gt; key = MSTranslatorAccessKey(client_id, client_secret)<br><br>In Django, for example, you may create the key in the settings module, and make<br>it available as a configuration setting::<br><br>    # setup.py<br>    import os<br>    CLIENT_ID = os.environ.get('TRANSLATOR_ID')<br>    CLIENT_SECRET = os.environ.get('TRANSLATOR_SECRET')<br>    MS_TRANSLATOR_KEY = MSTranslatorAccessKey(CLIENT_ID, CLIENT_SECRET)<br><br>    # somewhere in your view<br>    from django.conf import settings<br>    key = settings.MS_TRANSLATOR_KEY<br><br>The key object has a ``get_key`` method which returns the cached key if it has<br>not expired yet, shortening the response time. This method is used by the<br>client object to retrieve the cached key, so you don't need to worry about the<br>internal implementation.<br><br>Creating the Microsoft Translator client object<br>-----------------------------------------------<br><br>The client object is crated using the key crated in the `Creating the access<br>key`_ section::<br><br>    &gt;&gt;&gt; from mstranslator import MSTranslator<br>    &gt;&gt;&gt; translator = MSTranslator(key)<br><br>The client object currently only has one useful method, and that is<br>``translate``. To translate a string, call the method like so::<br><br>    &gt;&gt;&gt; translator.translate(text='Si vous plais', tfrom='fr', to='en')<br>    \"If you'd like\"<br><br>Microsoft Translator API coverage<br>=================================<br><br>Currently, only the ``Translate`` method has been implemented. The goal for 1.0<br>release is to include all of the Microsoft Translator API v2.<br><br>For the most part, the API of Microsoft Translator methods should be almost<br>identical in PyMSTranslator except for a few details:<br><br>+ Method names are always lower-case using underscores to separate words (e.g.,<br>  ``TranslateArray`` becomes ``translate_array``)<br>+ Same applies to parameters (e.g., ``contentType`` becomes ``content_type``)<br>+ Parameter names that match Python built-in names are prefixed with ``t``<br>  (e.g., ``from`` becomes ``tfrom``, ``format`` becomes ``tformat``)<br><br>Caching<br>=======<br><br>There is currently no caching of the translations. Caching mechanism is planned<br>for 1.0 release, though, with an interface compatible with the Django's caching<br>mechanism. For now, caching must be done separately.<br><br>Reporting bugs<br>==============<br><br>Bugs can be reported to the BitBucket `issue tracker`_.<br><br>.. _Microsoft(r) Translator: http://www.microsofttranslator.com/dev/<br>.. _on the Microsoft's site: http://www.microsoft.com/web/post/using-the-free-bing-translation-apis<br>.. _issue trakcer: https://bitbucket.org/monwara/pymstranslator/issues\n          </div>"}, "last_serial": 520317, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "359bcc65bfc673fd111aceee48678b53", "sha256": "05a0d81be283a1956b259c909e4e31bb3bdea37a10bb915142719f70a2359feb"}, "downloads": -1, "filename": "pymstranslator-0.0.1.tar.gz", "has_sig": false, "md5_digest": "359bcc65bfc673fd111aceee48678b53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6138, "upload_time": "2012-11-29T19:48:48", "upload_time_iso_8601": "2012-11-29T19:48:48.450489Z", "url": "https://files.pythonhosted.org/packages/21/8f/f14a98d0315939117f9dd0633ae3de50728438c62cc78ee1a37a53fea461/pymstranslator-0.0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f02cce9c734b506d7c46764d6415d830", "sha256": "cb2c6d097a249d783528960c0c20fe64ce1a9b38089df4cbcb6a0bff9b78f96b"}, "downloads": -1, "filename": "pymstranslator-0.0.1.zip", "has_sig": false, "md5_digest": "f02cce9c734b506d7c46764d6415d830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9505, "upload_time": "2012-11-29T19:48:57", "upload_time_iso_8601": "2012-11-29T19:48:57.754457Z", "url": "https://files.pythonhosted.org/packages/2d/22/65b999461e137dd1cfec3785e3bcec471ef8a283cd1f761c746d209637ad/pymstranslator-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fd5f528a8d6c7298f1f81c08d582b642", "sha256": "eed7f46f8cb754a71aae11f8b5b3731ec58ce6017dfb22d019b3568dafc3183c"}, "downloads": -1, "filename": "pymstranslator-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fd5f528a8d6c7298f1f81c08d582b642", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6377, "upload_time": "2012-11-30T18:09:25", "upload_time_iso_8601": "2012-11-30T18:09:25.910481Z", "url": "https://files.pythonhosted.org/packages/32/6a/bfeb7c213120ad796bdfe56864b6451d79731a8fc86318cd9cb2759ef80f/pymstranslator-0.0.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f15bcc4319a492cccc6d8b724f2b4b9d", "sha256": "49f16cdcb28cd59a4d7d2bc8fd745ca05793d030bd86741b969e99de2542dbb2"}, "downloads": -1, "filename": "pymstranslator-0.0.2.zip", "has_sig": false, "md5_digest": "f15bcc4319a492cccc6d8b724f2b4b9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9723, "upload_time": "2012-11-30T18:09:40", "upload_time_iso_8601": "2012-11-30T18:09:40.237123Z", "url": "https://files.pythonhosted.org/packages/96/a5/a0e559506a8fb1d75c912ef0078fb6c9cd4e308109c82ec23dae4c264d23/pymstranslator-0.0.2.zip", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8088b5d78b6c997f124f9bfe4af51c06", "sha256": "be58a417955b51cd9a29b81a8e648ec33f1a08ba287ad6154eb23a11b0bee84d"}, "downloads": -1, "filename": "pymstranslator-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8088b5d78b6c997f124f9bfe4af51c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6426, "upload_time": "2012-11-30T20:51:01", "upload_time_iso_8601": "2012-11-30T20:51:01.490469Z", "url": "https://files.pythonhosted.org/packages/6a/ce/0fc3266bf9284fc887c1e8f9e939ca5be9b5da01efde75d85f3c77ae75aa/pymstranslator-0.0.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb8f1c4093becdaa4d5b69b978185e31", "sha256": "014ee7e38a11181ec4f98c1f512358e5a2a9533b7fb542ef833ee916e8ed4af6"}, "downloads": -1, "filename": "pymstranslator-0.0.3.zip", "has_sig": false, "md5_digest": "fb8f1c4093becdaa4d5b69b978185e31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9838, "upload_time": "2012-11-30T20:50:57", "upload_time_iso_8601": "2012-11-30T20:50:57.962119Z", "url": "https://files.pythonhosted.org/packages/b4/ec/7d63818e807c081f467519ef3b9a3a152b08c603caefbbe867c3afacc9ca/pymstranslator-0.0.3.zip", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3f8b0aad58c9f724b957bd3582bb8618", "sha256": "b67f94514d97f7315244392c3f59785fce0816942c3b2bce2525e999ed40e062"}, "downloads": -1, "filename": "pymstranslator-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3f8b0aad58c9f724b957bd3582bb8618", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6437, "upload_time": "2012-12-03T21:32:49", "upload_time_iso_8601": "2012-12-03T21:32:49.720984Z", "url": "https://files.pythonhosted.org/packages/1a/ea/38a867918077c5c43d3c80039bf047cd855d640c9803cf927d753d87b77e/pymstranslator-0.0.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "49b8622bfa51f524d5a196b9702970d1", "sha256": "6a7725882751e8f955e30300df6d2151e3d46c8119301de2b4962bbf6943e73e"}, "downloads": -1, "filename": "pymstranslator-0.0.4.zip", "has_sig": false, "md5_digest": "49b8622bfa51f524d5a196b9702970d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9884, "upload_time": "2012-12-03T21:32:59", "upload_time_iso_8601": "2012-12-03T21:32:59.250717Z", "url": "https://files.pythonhosted.org/packages/6f/c0/739768622013d4c204d7539474a7737f0dd30a0254ea40486b8880fa9527/pymstranslator-0.0.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f8b0aad58c9f724b957bd3582bb8618", "sha256": "b67f94514d97f7315244392c3f59785fce0816942c3b2bce2525e999ed40e062"}, "downloads": -1, "filename": "pymstranslator-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3f8b0aad58c9f724b957bd3582bb8618", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6437, "upload_time": "2012-12-03T21:32:49", "upload_time_iso_8601": "2012-12-03T21:32:49.720984Z", "url": "https://files.pythonhosted.org/packages/1a/ea/38a867918077c5c43d3c80039bf047cd855d640c9803cf927d753d87b77e/pymstranslator-0.0.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "49b8622bfa51f524d5a196b9702970d1", "sha256": "6a7725882751e8f955e30300df6d2151e3d46c8119301de2b4962bbf6943e73e"}, "downloads": -1, "filename": "pymstranslator-0.0.4.zip", "has_sig": false, "md5_digest": "49b8622bfa51f524d5a196b9702970d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9884, "upload_time": "2012-12-03T21:32:59", "upload_time_iso_8601": "2012-12-03T21:32:59.250717Z", "url": "https://files.pythonhosted.org/packages/6f/c0/739768622013d4c204d7539474a7737f0dd30a0254ea40486b8880fa9527/pymstranslator-0.0.4.zip", "yanked": false}], "timestamp": "Fri May  8 03:01:34 2020"}