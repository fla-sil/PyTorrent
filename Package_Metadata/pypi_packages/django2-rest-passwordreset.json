{"info": {"author": "Christian Kreuzberger", "author_email": "ckreuzberger@anexia-it.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Django Rest Password Reset\n\nThis python package provides a simple password reset strategy for django rest framework, where users can request password \nreset tokens via their registered e-mail address.\n\nThe main idea behind this package is to not make any assumptions about how the token is delivered to the end-user (e-mail, text-message, etc...).\nInstead, this package provides a signal that can be reacted on (e.g., by sending an e-mail or a text message).\n\nThis package basically provides two REST endpoints:\n\n* Request a token\n* Verify (confirm) a token (and change the password)\n\n## Quickstart\n\n1. Install the package from pypi using pip:\n```bash\npip install django-rest-passwordreset\n```\n\n2. Add ``django_rest_passwordreset`` to your ``INSTALLED_APPS`` (after ``rest_framework``) within your Django settings file:\n```python\nINSTALLED_APPS = (\n    ...\n    'django.contrib.auth',\n    ...\n    'rest_framework',\n    ...\n    'django_rest_passwordreset',\n    ...\n)\n```\n\n3. This package provides two endpoints, which can be included by including ``django_rest_passwordreset.urls`` in your ``urls.py`` as follows:\n```python\nfrom django.conf.urls import url, include\n\n\nurlpatterns = [\n    ...\n    url(r'^api/password_reset/', include('django_rest_passwordreset.urls', namespace='password_reset')),\n    ...\n]    \n```\n**Note**: You can adapt the url to your needs.\n\n### Endpoints\n\nThe following endpoints are provided:\n\n * `reset_password` - request a reset password token by using the ``email`` parameter\n * `reset_password/confirm` - using a valid ``token``, the users password is set to the provided ``password``\n \n### Signals\n\n* ``reset_password_token_created(reset_password_token)`` Fired when a reset password token is generated\n* ``pre_password_reset(user)`` - fired just before a password is being reset\n* ``post_password_reset(user)`` - fired after a password has been reset\n\n### Example for sending an e-mail\n\n1. Create two new django templates: `email/user_reset_password.html` and `email/user_reset_password.txt`. Those templates will contain the e-mail message sent to the user, aswell as the password reset link (or token).\nWithin the templates, you can access the following context variables: `current_user`, `username`, `email`, `reset_password_url`. Feel free to adapt this to your needs.\n\n2. Add the following code, which contains a Django Signal, to your application (see [this part of the django documentation](https://docs.djangoproject.com/en/1.11/topics/signals/#connecting-receiver-functions) for more information on where to put signals).\n```python\nfrom django.dispatch import receiver\nfrom django_rest_passwordreset.signals import reset_password_token_created\n\n\n@receiver(reset_password_token_created)\ndef password_reset_token_created(sender, reset_password_token, *args, **kwargs):\n    \"\"\"\n    Handles password reset tokens\n    When a token is created, an e-mail needs to be sent to the user\n    :param sender:\n    :param reset_password_token:\n    :param args:\n    :param kwargs:\n    :return:\n    \"\"\"\n    # send an e-mail to the user\n    context = {\n        'current_user': reset_password_token.user,\n        'username': reset_password_token.user.username,\n        'email': reset_password_token.user.email,\n        # ToDo: The URL can (and should) be constructed using pythons built-in `reverse` method.\n        'reset_password_url': \"http://some_url/reset/?token={token}\".format(token=reset_password_token.key)\n    }\n\n    # render email text\n    email_html_message = render_to_string('email/user_reset_password.html', context)\n    email_plaintext_message = render_to_string('email/user_reset_password.txt', context)\n\n    msg = EmailMultiAlternatives(\n        # title:\n        _(\"Password Reset for {title}\".format(title=\"Some website title\")),\n        # message:\n        email_plaintext_message,\n        # from:\n        \"noreply@somehost.local\",\n        # to:\n        [reset_password_token.user.email]\n    )\n    msg.attach_alternative(email_html_message, \"text/html\")\n    msg.send()\n\n```\n\n3. You should now be able to use the endpoints to request a password reset token via your e-mail address. \nIf you want to test this locally, I recommend using some kind of fake mailserver (such as maildump).\n\n## Tests\n\nSee folder [tests/](tests/). Basically, all endpoints are covered with multiple\nunit tests.\n\nUse this code snippet to run tests:\n```bash\npip install -r requirements_test.txt\npython setup.py install\ncd tests\npython manage.py test\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alonraiz/django-rest-passwordreset", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django2-rest-passwordreset", "package_url": "https://pypi.org/project/django2-rest-passwordreset/", "platform": "", "project_url": "https://pypi.org/project/django2-rest-passwordreset/", "project_urls": {"Homepage": "https://github.com/alonraiz/django-rest-passwordreset"}, "release_url": "https://pypi.org/project/django2-rest-passwordreset/1.3.4/", "requires_dist": null, "requires_python": "", "summary": "An extension of django rest framework, providing a password reset strategy", "version": "1.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Rest Password Reset</h1>\n<p>This python package provides a simple password reset strategy for django rest framework, where users can request password\nreset tokens via their registered e-mail address.</p>\n<p>The main idea behind this package is to not make any assumptions about how the token is delivered to the end-user (e-mail, text-message, etc...).\nInstead, this package provides a signal that can be reacted on (e.g., by sending an e-mail or a text message).</p>\n<p>This package basically provides two REST endpoints:</p>\n<ul>\n<li>Request a token</li>\n<li>Verify (confirm) a token (and change the password)</li>\n</ul>\n<h2>Quickstart</h2>\n<ol>\n<li>Install the package from pypi using pip:</li>\n</ol>\n<pre>pip install django-rest-passwordreset\n</pre>\n<ol>\n<li>Add <code>django_rest_passwordreset</code> to your <code>INSTALLED_APPS</code> (after <code>rest_framework</code>) within your Django settings file:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.auth'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'rest_framework'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_rest_passwordreset'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<ol>\n<li>This package provides two endpoints, which can be included by including <code>django_rest_passwordreset.urls</code> in your <code>urls.py</code> as follows:</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">include</span>\n\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^api/password_reset/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'django_rest_passwordreset.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s1\">'password_reset'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>    \n</pre>\n<p><strong>Note</strong>: You can adapt the url to your needs.</p>\n<h3>Endpoints</h3>\n<p>The following endpoints are provided:</p>\n<ul>\n<li><code>reset_password</code> - request a reset password token by using the <code>email</code> parameter</li>\n<li><code>reset_password/confirm</code> - using a valid <code>token</code>, the users password is set to the provided <code>password</code></li>\n</ul>\n<h3>Signals</h3>\n<ul>\n<li><code>reset_password_token_created(reset_password_token)</code> Fired when a reset password token is generated</li>\n<li><code>pre_password_reset(user)</code> - fired just before a password is being reset</li>\n<li><code>post_password_reset(user)</code> - fired after a password has been reset</li>\n</ul>\n<h3>Example for sending an e-mail</h3>\n<ol>\n<li>\n<p>Create two new django templates: <code>email/user_reset_password.html</code> and <code>email/user_reset_password.txt</code>. Those templates will contain the e-mail message sent to the user, aswell as the password reset link (or token).\nWithin the templates, you can access the following context variables: <code>current_user</code>, <code>username</code>, <code>email</code>, <code>reset_password_url</code>. Feel free to adapt this to your needs.</p>\n</li>\n<li>\n<p>Add the following code, which contains a Django Signal, to your application (see <a href=\"https://docs.djangoproject.com/en/1.11/topics/signals/#connecting-receiver-functions\" rel=\"nofollow\">this part of the django documentation</a> for more information on where to put signals).</p>\n</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.dispatch</span> <span class=\"kn\">import</span> <span class=\"n\">receiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_rest_passwordreset.signals</span> <span class=\"kn\">import</span> <span class=\"n\">reset_password_token_created</span>\n\n\n<span class=\"nd\">@receiver</span><span class=\"p\">(</span><span class=\"n\">reset_password_token_created</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">password_reset_token_created</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">reset_password_token</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Handles password reset tokens</span>\n<span class=\"sd\">    When a token is created, an e-mail needs to be sent to the user</span>\n<span class=\"sd\">    :param sender:</span>\n<span class=\"sd\">    :param reset_password_token:</span>\n<span class=\"sd\">    :param args:</span>\n<span class=\"sd\">    :param kwargs:</span>\n<span class=\"sd\">    :return:</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"c1\"># send an e-mail to the user</span>\n    <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'current_user'</span><span class=\"p\">:</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span>\n        <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">,</span>\n        <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">,</span>\n        <span class=\"c1\"># ToDo: The URL can (and should) be constructed using pythons built-in `reverse` method.</span>\n        <span class=\"s1\">'reset_password_url'</span><span class=\"p\">:</span> <span class=\"s2\">\"http://some_url/reset/?token=</span><span class=\"si\">{token}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># render email text</span>\n    <span class=\"n\">email_html_message</span> <span class=\"o\">=</span> <span class=\"n\">render_to_string</span><span class=\"p\">(</span><span class=\"s1\">'email/user_reset_password.html'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n    <span class=\"n\">email_plaintext_message</span> <span class=\"o\">=</span> <span class=\"n\">render_to_string</span><span class=\"p\">(</span><span class=\"s1\">'email/user_reset_password.txt'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n\n    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">EmailMultiAlternatives</span><span class=\"p\">(</span>\n        <span class=\"c1\"># title:</span>\n        <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">\"Password Reset for </span><span class=\"si\">{title}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Some website title\"</span><span class=\"p\">)),</span>\n        <span class=\"c1\"># message:</span>\n        <span class=\"n\">email_plaintext_message</span><span class=\"p\">,</span>\n        <span class=\"c1\"># from:</span>\n        <span class=\"s2\">\"noreply@somehost.local\"</span><span class=\"p\">,</span>\n        <span class=\"c1\"># to:</span>\n        <span class=\"p\">[</span><span class=\"n\">reset_password_token</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">attach_alternative</span><span class=\"p\">(</span><span class=\"n\">email_html_message</span><span class=\"p\">,</span> <span class=\"s2\">\"text/html\"</span><span class=\"p\">)</span>\n    <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>You should now be able to use the endpoints to request a password reset token via your e-mail address.\nIf you want to test this locally, I recommend using some kind of fake mailserver (such as maildump).</li>\n</ol>\n<h2>Tests</h2>\n<p>See folder <a href=\"tests/\" rel=\"nofollow\">tests/</a>. Basically, all endpoints are covered with multiple\nunit tests.</p>\n<p>Use this code snippet to run tests:</p>\n<pre>pip install -r requirements_test.txt\npython setup.py install\n<span class=\"nb\">cd</span> tests\npython manage.py <span class=\"nb\">test</span>\n</pre>\n\n          </div>"}, "last_serial": 6954685, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e0367711cb270c80ccab7c61598dd725", "sha256": "712615037318dfa4f64b63dff9b1f38b5c75306598cd06fe89aad5afbe78ee95"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e0367711cb270c80ccab7c61598dd725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14586, "upload_time": "2019-02-13T11:51:15", "upload_time_iso_8601": "2019-02-13T11:51:15.203601Z", "url": "https://files.pythonhosted.org/packages/98/e5/0edb983d6c438562edbcb0fb8762d8cd1bd72e3fc855d95ceb1f51b24b34/django2-rest-passwordreset-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c1a8d81c9fc785157277bb80c4d31459", "sha256": "d7bc6048256083c41c1035c84b00619a66704c4b7feab2d0c6b6976ff2c4c9f1"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c1a8d81c9fc785157277bb80c4d31459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14540, "upload_time": "2019-02-13T12:00:46", "upload_time_iso_8601": "2019-02-13T12:00:46.299315Z", "url": "https://files.pythonhosted.org/packages/0d/e7/d41d43b1c417f5157aa4fe68dcf4515d9754bad1e9e67ca09549f5d68afb/django2-rest-passwordreset-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ff76b4b7806117d7250d7d1ce508584e", "sha256": "99fcc23e461387b726d0f5f42627d671baa3ddba8063427ce113cf493423cefa"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ff76b4b7806117d7250d7d1ce508584e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14708, "upload_time": "2019-03-17T12:20:10", "upload_time_iso_8601": "2019-03-17T12:20:10.561507Z", "url": "https://files.pythonhosted.org/packages/ff/ba/f4dfac428bc1395573ae7353a0c12b14e3555b04e81ad3c63c037a6ddc62/django2-rest-passwordreset-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "57c072c422b047cff9323b12c6b683d8", "sha256": "deacc952d57dc56e4ae28280b9ce1cf49b72811d33317499273b154f3864524a"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.2.0.tar.gz", "has_sig": false, "md5_digest": "57c072c422b047cff9323b12c6b683d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14804, "upload_time": "2019-06-23T10:41:04", "upload_time_iso_8601": "2019-06-23T10:41:04.335149Z", "url": "https://files.pythonhosted.org/packages/90/20/a4e11455b3f2ec2dbb5c44b818755bf866c39d81655a9428f1ca39846677/django2-rest-passwordreset-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "ddfad17f6ecfc9b3c4e3288123d55001", "sha256": "7df57a006bba109b4aefa5555dd836fc1b4ae25174ac4978e33b73b7c9129a85"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.2.1.tar.gz", "has_sig": false, "md5_digest": "ddfad17f6ecfc9b3c4e3288123d55001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14810, "upload_time": "2019-06-23T10:57:46", "upload_time_iso_8601": "2019-06-23T10:57:46.249261Z", "url": "https://files.pythonhosted.org/packages/91/c9/11a9300a1de14b6882a87cb179d3a8b59bf3089df99952795bfc77d4f307/django2-rest-passwordreset-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "a838450bd6b2a82c779e6cfb6bf0cede", "sha256": "85a930780babd9dfb4c13a85b7badfe7010b64ba3dc70bc16a7ec3eb1d8f2b9f"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.3.0.tar.gz", "has_sig": false, "md5_digest": "a838450bd6b2a82c779e6cfb6bf0cede", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15000, "upload_time": "2019-07-22T14:26:31", "upload_time_iso_8601": "2019-07-22T14:26:31.328744Z", "url": "https://files.pythonhosted.org/packages/c0/5d/4fc08bb1c68106a029283b3b71e23b8a87470e34a0167c5f5bbdd973da67/django2-rest-passwordreset-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "a12bd1207f98ce19de182308448cda3e", "sha256": "f9ab3aae25b0dee884b5f2e95d91698cab8a3b90e9955e1ec5c494e6dbbd4bc2"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.3.1.tar.gz", "has_sig": false, "md5_digest": "a12bd1207f98ce19de182308448cda3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15281, "upload_time": "2019-08-29T12:27:07", "upload_time_iso_8601": "2019-08-29T12:27:07.781785Z", "url": "https://files.pythonhosted.org/packages/d8/53/922c757f360e662ded4d7f05450b42c5ef748650b2041ff328b515c2bb41/django2-rest-passwordreset-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "8674bdf59b0d99cc9e48a826cf72b62c", "sha256": "711cce2324fcc0a0ee60b43a33bd4d65ddc5387933610b0316b6d4dc9ca6f87d"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.3.2.tar.gz", "has_sig": false, "md5_digest": "8674bdf59b0d99cc9e48a826cf72b62c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15307, "upload_time": "2020-03-23T11:25:54", "upload_time_iso_8601": "2020-03-23T11:25:54.210691Z", "url": "https://files.pythonhosted.org/packages/d2/09/fa946aecd85ca7be2fa9338d57625ccbff1e2d84d063e067f1c6bb4fe0db/django2-rest-passwordreset-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "f7be6900ade8f10d5d7837764e91fead", "sha256": "1f402e77374891ead4d91ed5286f2bff816ce96004e57cc712c6c09f36332a37"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.3.3.tar.gz", "has_sig": false, "md5_digest": "f7be6900ade8f10d5d7837764e91fead", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15255, "upload_time": "2020-04-05T08:43:58", "upload_time_iso_8601": "2020-04-05T08:43:58.970498Z", "url": "https://files.pythonhosted.org/packages/17/2f/100d70d4effea4d37ff800eaac0d841ea5813413e4bf2a2a8eb79f9f20c1/django2-rest-passwordreset-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "c2afc49fe19981035db62003abadcec0", "sha256": "ec3e9704d3626edca6ed8ac02c0d80099b187567366f8414121a950f578d4cd9"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.3.4.tar.gz", "has_sig": false, "md5_digest": "c2afc49fe19981035db62003abadcec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15258, "upload_time": "2020-04-05T08:59:55", "upload_time_iso_8601": "2020-04-05T08:59:55.665364Z", "url": "https://files.pythonhosted.org/packages/0a/37/3b0b43b85298be0e7ac1bf7c0c533c4af7f91a90a5bdbc4d310fd7223f07/django2-rest-passwordreset-1.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2afc49fe19981035db62003abadcec0", "sha256": "ec3e9704d3626edca6ed8ac02c0d80099b187567366f8414121a950f578d4cd9"}, "downloads": -1, "filename": "django2-rest-passwordreset-1.3.4.tar.gz", "has_sig": false, "md5_digest": "c2afc49fe19981035db62003abadcec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15258, "upload_time": "2020-04-05T08:59:55", "upload_time_iso_8601": "2020-04-05T08:59:55.665364Z", "url": "https://files.pythonhosted.org/packages/0a/37/3b0b43b85298be0e7ac1bf7c0c533c4af7f91a90a5bdbc4d310fd7223f07/django2-rest-passwordreset-1.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:55 2020"}