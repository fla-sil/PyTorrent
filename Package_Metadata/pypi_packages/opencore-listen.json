{"info": {"author": "Robert Marianski, Alec Mitchell, Chris Abraham, Rob Miller, Ethan Jucovy", "author_email": "listen-dev at lists.coactivate.org", "bugtrack_url": null, "classifiers": [], "description": "0.8.0 (2011-05-16)\n==================\n\n * Port from opencore's override of the csv exporter: optionally include\n   allowed senders in export; and always include a final item in each row\n   of the CSV, describing the user's subscription-status.\n\n * Add export_messages_to_tempfile method on export utility\n   which writes the messages' mbox to a tempfile and returns\n   the (tmpfd, tmpfilename) -- this is better than writing\n   to memory for lists with large archives.  (Code written\n   by slinkp in opencore -- i'm moving it to listen)\n\n * Make \"confirm-member\" behavior consistent with \"subscribe\" behavior:\n   on a non-member-moderated list, both actions should allow the \n   confirmation email to come from a different address than the original \n   message, provided the subject is left intact (including both the pin \n   and the original sender)\n\n * Handle non-ASCII characters in message subject\n\n * Fix moderation queue when non-ASCII emails are queued \n\n\nChangelogs weren't kept prior to this release.\n\nListen\n======\n\nListen is a mailing list management application that integrates into the Plone\nContent Management System.  It is based on the venerable MailBoxer Zope\nProduct by Maik Jablonski, and offers most of the features of that product.\nKey features include:\n\n * Easily create mailing lists through the Plone interface.\n\n * Lists may be moderated or unmoderated, open to all or restricted to\n   subscribers only.\n\n * Optional archiving of mail with or without attachments.\n\n * Fully threaded archive display, including a forum-like view.\n\n * Portal members and visitors can easily subscribe/unsubscribe themselves\n   through the Plone interface.\n\n * Each list maintains its own catalog featuring a full text index of messages.\n\n * Members can make responses with quotation to archived messages through the\n   Plone interface.\n\n * Automatic masking of member email addresses with links to author pages.\n\n * Provides a registry of lists on a Zope instance allowing lists to be added\n   without any additional SMTP server configuration.\n\n * Performs well due to use of simple Zope types and z3/Five techniques.\n   Capable of higher mail volume that MailBoxer itself, and much greater\n   volume than Archetypes-based mailing list systems.\n\nThis product makes heavy use of Zope3 features within Plone via Five; it uses\nviews, adapters, Zope3 schemas (add and edit views), local utilities,\nfactories, and events.  It is not an ideally componentized application because\nof its dependence on MailBoxer, which is used as the base class for the\nprimary content type, and provides more logic/functionality than an\nideal content class would.  Hopefully, those parts which make heavy use of\nFive technologies can serve as a helpful example for those intending to use\nFive in their own products.\n\nRequirements\n------------\n\nPlone 2.1+ (and all that entails)\nZope 2.8.4+\nFive 1.4\nplone.app.form\nMailBoxer (svn version from\nhttps://svn.plone.org/svn/collective/MailBoxerTempDev/trunk)\nManagableIndex 1.1\n(also OFolder http://www.dieter.handshake.de/pyprojects/zope/index.html#ManagableIndex)\nplone.mail (https://svn.plone.org/svn/plone/plone.mail/trunk)\n\nHighly Recommended\n-------------------\n\nMaildropHost 1.13+ (http://www.dataflake.org/software/maildrophost/)\n\nAny site that expects a reasonable amount of mail traffic (incoming and\nespecially outgoing) needs to use this.  It well not send duplicate mails\nwhen a conflict error forces a retry, and it increases potential incoming\nmail volume tremendously by not blocking on sending mail.\n\n\nInstallation and setup\n-----------------------\n\nPlace this product folder in your Zope instance's Products folder and restart\nZope.  Go to the portal_quickinstaller in the ZMI and install the product. Now\nyou may create mailing lists by using the add menu in any container in Plone,\nor (preferably) using the add view for the Mailing List class which can be\naccessed with a url of the following form:\n\nhttp://mysite.example.com/my_portal/path/+/listen.add_mailinglist\n\nHopefully, Five add forms will be integrated into the Plone ui in the near\nfuture so that the more correct way is also the easy way to add a list.\n\nYour SMTP server must be configured to route mail to the mailing list(s).  For\na simple single list instance the easiest way to do this is the standard\nMailBoxer way:\n\n1) Copy the smtp2zope.py script from your MailBoxer folder to the relevant\nSMTP server (if you are using sendmail with smrsh, then you need to place/link\nit in a folder accessible to smrsh; for postfix place/link it in /etc/postfix).\n\n2) Add an alias for the mailing list of the form:\nmy_list@lists.mydomain.com    \"|/etc/smrsh/smtp2zope.py http://my_site.example.com/path/to/list/manage_mailboxer 200000\"\n\nfor postfix:\nmy_list:      \"|/etc/postfix/smtp2zope.py http://my_site.example.com/path/to/list/manage_mailboxer 200000\"\n\nWhere the number at the end restricts the maximum size of a message intended\nfor the list, this is optional, but highly recommended.\n\nIf you would like to be able to setup arbitrary lists on your server and have\nthem automatically handled by your SMTP server the setup is slightly more\ninvolved and dependent on the particulars of your SMTP server.  The end result\nis that you need to map a catch-all domain to a similar command which uses a\ntool in your Zope instance to decide where to route the mail.  In sendmail the\nprocess is as follows:\n\n1) same as step 1 above.\n\n2) Add an entry to your virtusertable to create the catch-all domain:\n\n@lists.my_domain.com      my_zope_lists\n\n3) Add an alias pointing to the script with the URL for the global list lookup\nutility:\n\nmy_zope_lists   \"|/etc/smrsh/smtp2zope.py http://my_site.example.com/send_listen_mail 200000\"\n\nThat should be about it.  Site members and anonymous users can subscribe\nthemselves to the list, the list creator and/or site manager can choose\nwhether the list is moderated or closed and how it is archived.\n\nQmail\n=====\nIf you are using Qmail instead of postfix or sendmail, setting up the aliases\nis slightly different. You need to create a file .qmail-mylist,\nwhere mylist is the name of the list (i.e. mylist@example.com).\n\nSo on my system (which serves multiple domains), I had to create the file in\nthis directory: /var/qmail/mailnames/example.com\nDepending on your setup, it might go somewhere else (i.e. /var/qmail/alias)\n\nThe contents of the file look like this:\n\n/etc/smrsh/smtp2zope.py http://my_site.example.com/send_listen_mail 200000\n\nUnlike with postfix/sendmail, you don't need to run a command 'newaliases'.\nThe new alias should be active immediately after you create the file.\n\nMigration\n=========\n\nThe following applies to listen lists created using instances of listen older\nthan 3/21/2006:\n\nDue to issues with unicode/ASCII and message thread handling a migration\nmethod was introduced for listen lists which will rebuild the archive\ncatalog and fix improperly stored strings in archived mail.  There are two\nsteps involved in migrating your lists and fixing these issues, first go to\nthe url for your search catalog\n``http://site/path/to/list/utilities/ISearchableArchive/manage_main``, and delete\nthe existing 'mail_lexicon' and add a new ZCTextIndex Lexicon with::\n\n id: mail_lexicon\n Case Normalizer: True\n Stop Words: Don't remove stop words\n Word Splitter: Unicode Whitespace splitter\n\nThen go to the following URL to reindex your archive\n``http://site/path/to/list/fixupMessages``\n\n\nEnjoy!\n\nAlec Mitchell <apm13@columbia.edu>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://trac.socialplanning.org/listen", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "opencore-listen", "package_url": "https://pypi.org/project/opencore-listen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/opencore-listen/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://trac.socialplanning.org/listen"}, "release_url": "https://pypi.org/project/opencore-listen/0.8.0/", "requires_dist": null, "requires_python": null, "summary": "listen is a mailing list product for Plone", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            0.8.0 (2011-05-16)<br>==================<br><br> * Port from opencore's override of the csv exporter: optionally include<br>   allowed senders in export; and always include a final item in each row<br>   of the CSV, describing the user's subscription-status.<br><br> * Add export_messages_to_tempfile method on export utility<br>   which writes the messages' mbox to a tempfile and returns<br>   the (tmpfd, tmpfilename) -- this is better than writing<br>   to memory for lists with large archives.  (Code written<br>   by slinkp in opencore -- i'm moving it to listen)<br><br> * Make \"confirm-member\" behavior consistent with \"subscribe\" behavior:<br>   on a non-member-moderated list, both actions should allow the <br>   confirmation email to come from a different address than the original <br>   message, provided the subject is left intact (including both the pin <br>   and the original sender)<br><br> * Handle non-ASCII characters in message subject<br><br> * Fix moderation queue when non-ASCII emails are queued <br><br><br>Changelogs weren't kept prior to this release.<br><br>Listen<br>======<br><br>Listen is a mailing list management application that integrates into the Plone<br>Content Management System.  It is based on the venerable MailBoxer Zope<br>Product by Maik Jablonski, and offers most of the features of that product.<br>Key features include:<br><br> * Easily create mailing lists through the Plone interface.<br><br> * Lists may be moderated or unmoderated, open to all or restricted to<br>   subscribers only.<br><br> * Optional archiving of mail with or without attachments.<br><br> * Fully threaded archive display, including a forum-like view.<br><br> * Portal members and visitors can easily subscribe/unsubscribe themselves<br>   through the Plone interface.<br><br> * Each list maintains its own catalog featuring a full text index of messages.<br><br> * Members can make responses with quotation to archived messages through the<br>   Plone interface.<br><br> * Automatic masking of member email addresses with links to author pages.<br><br> * Provides a registry of lists on a Zope instance allowing lists to be added<br>   without any additional SMTP server configuration.<br><br> * Performs well due to use of simple Zope types and z3/Five techniques.<br>   Capable of higher mail volume that MailBoxer itself, and much greater<br>   volume than Archetypes-based mailing list systems.<br><br>This product makes heavy use of Zope3 features within Plone via Five; it uses<br>views, adapters, Zope3 schemas (add and edit views), local utilities,<br>factories, and events.  It is not an ideally componentized application because<br>of its dependence on MailBoxer, which is used as the base class for the<br>primary content type, and provides more logic/functionality than an<br>ideal content class would.  Hopefully, those parts which make heavy use of<br>Five technologies can serve as a helpful example for those intending to use<br>Five in their own products.<br><br>Requirements<br>------------<br><br>Plone 2.1+ (and all that entails)<br>Zope 2.8.4+<br>Five 1.4<br>plone.app.form<br>MailBoxer (svn version from<br>https://svn.plone.org/svn/collective/MailBoxerTempDev/trunk)<br>ManagableIndex 1.1<br>(also OFolder http://www.dieter.handshake.de/pyprojects/zope/index.html#ManagableIndex)<br>plone.mail (https://svn.plone.org/svn/plone/plone.mail/trunk)<br><br>Highly Recommended<br>-------------------<br><br>MaildropHost 1.13+ (http://www.dataflake.org/software/maildrophost/)<br><br>Any site that expects a reasonable amount of mail traffic (incoming and<br>especially outgoing) needs to use this.  It well not send duplicate mails<br>when a conflict error forces a retry, and it increases potential incoming<br>mail volume tremendously by not blocking on sending mail.<br><br><br>Installation and setup<br>-----------------------<br><br>Place this product folder in your Zope instance's Products folder and restart<br>Zope.  Go to the portal_quickinstaller in the ZMI and install the product. Now<br>you may create mailing lists by using the add menu in any container in Plone,<br>or (preferably) using the add view for the Mailing List class which can be<br>accessed with a url of the following form:<br><br>http://mysite.example.com/my_portal/path/+/listen.add_mailinglist<br><br>Hopefully, Five add forms will be integrated into the Plone ui in the near<br>future so that the more correct way is also the easy way to add a list.<br><br>Your SMTP server must be configured to route mail to the mailing list(s).  For<br>a simple single list instance the easiest way to do this is the standard<br>MailBoxer way:<br><br>1) Copy the smtp2zope.py script from your MailBoxer folder to the relevant<br>SMTP server (if you are using sendmail with smrsh, then you need to place/link<br>it in a folder accessible to smrsh; for postfix place/link it in /etc/postfix).<br><br>2) Add an alias for the mailing list of the form:<br>my_list@lists.mydomain.com    \"|/etc/smrsh/smtp2zope.py http://my_site.example.com/path/to/list/manage_mailboxer 200000\"<br><br>for postfix:<br>my_list:      \"|/etc/postfix/smtp2zope.py http://my_site.example.com/path/to/list/manage_mailboxer 200000\"<br><br>Where the number at the end restricts the maximum size of a message intended<br>for the list, this is optional, but highly recommended.<br><br>If you would like to be able to setup arbitrary lists on your server and have<br>them automatically handled by your SMTP server the setup is slightly more<br>involved and dependent on the particulars of your SMTP server.  The end result<br>is that you need to map a catch-all domain to a similar command which uses a<br>tool in your Zope instance to decide where to route the mail.  In sendmail the<br>process is as follows:<br><br>1) same as step 1 above.<br><br>2) Add an entry to your virtusertable to create the catch-all domain:<br><br>@lists.my_domain.com      my_zope_lists<br><br>3) Add an alias pointing to the script with the URL for the global list lookup<br>utility:<br><br>my_zope_lists   \"|/etc/smrsh/smtp2zope.py http://my_site.example.com/send_listen_mail 200000\"<br><br>That should be about it.  Site members and anonymous users can subscribe<br>themselves to the list, the list creator and/or site manager can choose<br>whether the list is moderated or closed and how it is archived.<br><br>Qmail<br>=====<br>If you are using Qmail instead of postfix or sendmail, setting up the aliases<br>is slightly different. You need to create a file .qmail-mylist,<br>where mylist is the name of the list (i.e. mylist@example.com).<br><br>So on my system (which serves multiple domains), I had to create the file in<br>this directory: /var/qmail/mailnames/example.com<br>Depending on your setup, it might go somewhere else (i.e. /var/qmail/alias)<br><br>The contents of the file look like this:<br><br>/etc/smrsh/smtp2zope.py http://my_site.example.com/send_listen_mail 200000<br><br>Unlike with postfix/sendmail, you don't need to run a command 'newaliases'.<br>The new alias should be active immediately after you create the file.<br><br>Migration<br>=========<br><br>The following applies to listen lists created using instances of listen older<br>than 3/21/2006:<br><br>Due to issues with unicode/ASCII and message thread handling a migration<br>method was introduced for listen lists which will rebuild the archive<br>catalog and fix improperly stored strings in archived mail.  There are two<br>steps involved in migrating your lists and fixing these issues, first go to<br>the url for your search catalog<br>``http://site/path/to/list/utilities/ISearchableArchive/manage_main``, and delete<br>the existing 'mail_lexicon' and add a new ZCTextIndex Lexicon with::<br><br> id: mail_lexicon<br> Case Normalizer: True<br> Stop Words: Don't remove stop words<br> Word Splitter: Unicode Whitespace splitter<br><br>Then go to the following URL to reindex your archive<br>``http://site/path/to/list/fixupMessages``<br><br><br>Enjoy!<br><br>Alec Mitchell &lt;apm13@columbia.edu&gt;\n          </div>"}, "last_serial": 795765, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "e005fbbeb3e7159e623f3dd80f9ff6f3", "sha256": "2640d72d206cd8688df0f54f739d090221772d6fd2a2b3979beaf0754480253a"}, "downloads": -1, "filename": "opencore-listen-0.8.0.tar.gz", "has_sig": false, "md5_digest": "e005fbbeb3e7159e623f3dd80f9ff6f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 225643, "upload_time": "2011-05-16T17:13:05", "upload_time_iso_8601": "2011-05-16T17:13:05.976155Z", "url": "https://files.pythonhosted.org/packages/b5/63/64bc11f5d848517e43a7e0b3014c94793639313e8925a2f7e2f3b3113dd2/opencore-listen-0.8.0.tar.gz", "yanked": false}], "0.8a": [{"comment_text": "", "digests": {"md5": "0337353e11305453099f9d4d58e1bfdf", "sha256": "aa33a663755bdd0328e5b31210b79b3da42ba29c37ab4c1633335babec717546"}, "downloads": -1, "filename": "opencore-listen-0.8a.tar.gz", "has_sig": false, "md5_digest": "0337353e11305453099f9d4d58e1bfdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224206, "upload_time": "2010-12-15T18:00:16", "upload_time_iso_8601": "2010-12-15T18:00:16.140261Z", "url": "https://files.pythonhosted.org/packages/b6/b1/650d99e0562e1c4ca9fa913032b86a2443d9a95e3ddb2531c385d0aa1298/opencore-listen-0.8a.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e005fbbeb3e7159e623f3dd80f9ff6f3", "sha256": "2640d72d206cd8688df0f54f739d090221772d6fd2a2b3979beaf0754480253a"}, "downloads": -1, "filename": "opencore-listen-0.8.0.tar.gz", "has_sig": false, "md5_digest": "e005fbbeb3e7159e623f3dd80f9ff6f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 225643, "upload_time": "2011-05-16T17:13:05", "upload_time_iso_8601": "2011-05-16T17:13:05.976155Z", "url": "https://files.pythonhosted.org/packages/b5/63/64bc11f5d848517e43a7e0b3014c94793639313e8925a2f7e2f3b3113dd2/opencore-listen-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:20 2020"}