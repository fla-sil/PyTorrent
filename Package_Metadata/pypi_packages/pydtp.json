{"info": {"author": "Lucio Anderlini", "author_email": "Lucio.Anderlini@fi.infn.it", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python Dictionary Transfer Protocol \n`pydtp` is a package defining a protocol for transparently \naccessing a remote server with function calls passing \nlightweight arguments. \n\n`pydtp` defines three classes:\n - a `Server` class based on `socketserver.TCPServer` \n - an abstract  `Handler` class to implement to define the Server-responses\n - an abstract `Client` class to implement to define the Client interface \n\nThe functions implemented on the Client class are redirected to \nthe server class encoding the arguments and the return value in \nthe most transparent way. \n\n### Dependencies \nThe package is developed for `Python3`. \n\nThe package requires `numpy` plus the standard python libraries \nfor both the client and server sides. \n\n## Example\nDefine the client implementing two functions, \nthat just redirect the functions to the `query`:\n```\nimport pydtp \n\nclass SimpleClient (pydtp.Client) :\n  def add_one ( self, num ):\n    return self.query ( 'add_one', [num] ) \n\n  def capitalize ( self, *strings):\n    return self.query ( 'capitalize', [strings] ) \n```\n\nThe `query` function hides the complexity and allow to \ncall functions implemented in a `Handler`: \n```\nimport pydtp \n\nclass SimpleHandler (pydtp.Handler):\n  def add_one ( self, num ):\n    return num + 1 \n\n  def capitalize ( self, strings ):\n    return {k: k.capitalize() for k in strings} \n```\n\nThe server is then instantiated and started on `localhost` and on a port.\n```\nserver = pydtp.Server ( ('localhost', 12345), SimpleHandler )\nserver.start() \n```\n\nThe client class is instantiated indicating the address and the port\n```\nclient = SimpleClient ( ('localhost', 12345) ) \nclient.add_one ( 3 ) ## == 4\nclient.capitalize ( 'test' ) ## == \"Test\"\n```\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/landerlini/pydtp", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pydtp", "package_url": "https://pypi.org/project/pydtp/", "platform": "", "project_url": "https://pypi.org/project/pydtp/", "project_urls": {"Homepage": "https://github.com/landerlini/pydtp"}, "release_url": "https://pypi.org/project/pydtp/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A simple protocol based on json representation of python dictionaries", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Dictionary Transfer Protocol</h1>\n<p><code>pydtp</code> is a package defining a protocol for transparently\naccessing a remote server with function calls passing\nlightweight arguments.</p>\n<p><code>pydtp</code> defines three classes:</p>\n<ul>\n<li>a <code>Server</code> class based on <code>socketserver.TCPServer</code></li>\n<li>an abstract  <code>Handler</code> class to implement to define the Server-responses</li>\n<li>an abstract <code>Client</code> class to implement to define the Client interface</li>\n</ul>\n<p>The functions implemented on the Client class are redirected to\nthe server class encoding the arguments and the return value in\nthe most transparent way.</p>\n<h3>Dependencies</h3>\n<p>The package is developed for <code>Python3</code>.</p>\n<p>The package requires <code>numpy</code> plus the standard python libraries\nfor both the client and server sides.</p>\n<h2>Example</h2>\n<p>Define the client implementing two functions,\nthat just redirect the functions to the <code>query</code>:</p>\n<pre><code>import pydtp \n\nclass SimpleClient (pydtp.Client) :\n  def add_one ( self, num ):\n    return self.query ( 'add_one', [num] ) \n\n  def capitalize ( self, *strings):\n    return self.query ( 'capitalize', [strings] ) \n</code></pre>\n<p>The <code>query</code> function hides the complexity and allow to\ncall functions implemented in a <code>Handler</code>:</p>\n<pre><code>import pydtp \n\nclass SimpleHandler (pydtp.Handler):\n  def add_one ( self, num ):\n    return num + 1 \n\n  def capitalize ( self, strings ):\n    return {k: k.capitalize() for k in strings} \n</code></pre>\n<p>The server is then instantiated and started on <code>localhost</code> and on a port.</p>\n<pre><code>server = pydtp.Server ( ('localhost', 12345), SimpleHandler )\nserver.start() \n</code></pre>\n<p>The client class is instantiated indicating the address and the port</p>\n<pre><code>client = SimpleClient ( ('localhost', 12345) ) \nclient.add_one ( 3 ) ## == 4\nclient.capitalize ( 'test' ) ## == \"Test\"\n</code></pre>\n\n          </div>"}, "last_serial": 6649746, "releases": {"0.0": [{"comment_text": "", "digests": {"md5": "8357b8b1cadeebfbd5482229514d45b2", "sha256": "1ba0690c039218c484a945d659507f2a63ea7a5871c3b5792bf08ccb2887ca98"}, "downloads": -1, "filename": "pydtp-0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8357b8b1cadeebfbd5482229514d45b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3639, "upload_time": "2020-02-16T14:19:49", "upload_time_iso_8601": "2020-02-16T14:19:49.060336Z", "url": "https://files.pythonhosted.org/packages/c6/45/d1f703b53f0777798d6dec388e8cd83996b52e89aa484e8a2e2a424d5f3c/pydtp-0.0-py3-none-any.whl", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "9ad691f20de699445d78239d7f52e00b", "sha256": "b823a1de01702a4105bf75891f44dcb84dbb8018a241bffe99ec619cd6a8f2c0"}, "downloads": -1, "filename": "pydtp-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9ad691f20de699445d78239d7f52e00b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4974, "upload_time": "2020-02-16T21:39:28", "upload_time_iso_8601": "2020-02-16T21:39:28.158231Z", "url": "https://files.pythonhosted.org/packages/1c/92/9e7214bb1e1dcaabfca67f933957a0ba05b368967e94128d7996f062516d/pydtp-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "80385d1a5a7a5df47c2a89500cd77101", "sha256": "75a5b0a3dd1c52bca27040ceed8e279294194ef0ef13a2bb0064f071818b344b"}, "downloads": -1, "filename": "pydtp-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "80385d1a5a7a5df47c2a89500cd77101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5017, "upload_time": "2020-02-17T22:26:48", "upload_time_iso_8601": "2020-02-17T22:26:48.562905Z", "url": "https://files.pythonhosted.org/packages/3f/a5/e94d7ac0239266e8c04ef8fb2e55dda3212089e2257e5cc802e62669f3d3/pydtp-0.1.1-py3-none-any.whl", "yanked": false}], "0.1a0": [{"comment_text": "", "digests": {"md5": "84dda6f1ec91e4dfd6bf0da0685c5f59", "sha256": "79c8e7aa1c7deb9cf63f54b54bccf7c2c310aa7399bd65d4a2fdc646949922a4"}, "downloads": -1, "filename": "pydtp-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "84dda6f1ec91e4dfd6bf0da0685c5f59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5018, "upload_time": "2020-02-17T22:22:34", "upload_time_iso_8601": "2020-02-17T22:22:34.264141Z", "url": "https://files.pythonhosted.org/packages/02/22/f618be63351233671209699acd8e31728841c60ac674c0c5cf064859a46f/pydtp-0.1a0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "80385d1a5a7a5df47c2a89500cd77101", "sha256": "75a5b0a3dd1c52bca27040ceed8e279294194ef0ef13a2bb0064f071818b344b"}, "downloads": -1, "filename": "pydtp-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "80385d1a5a7a5df47c2a89500cd77101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5017, "upload_time": "2020-02-17T22:26:48", "upload_time_iso_8601": "2020-02-17T22:26:48.562905Z", "url": "https://files.pythonhosted.org/packages/3f/a5/e94d7ac0239266e8c04ef8fb2e55dda3212089e2257e5cc802e62669f3d3/pydtp-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:06:42 2020"}