{"info": {"author": "Ilya Kamenshchikov", "author_email": "ikamenshchikov@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Pen'n'paper\n\nPen'n'paper is a package to easily collect the data about (noisy) processes and plot them for comparison. This package is not aiming at feature completeness. Instead it should give you an easy start during the phase of the project when you want to just concentrate on an experimental idea.\n\nInstallation:\n`pip install pennpaper`\n\n\nBy example:\n\n```python\n# We have a mysterious function that we would like to better understand on the interval [0.1, 5.].\n# Unfortunately the function is noisy.\n\nimport numpy as np\n\nX = np.arange(0.1, 5, step=0.01)\n\nimport random\n\n\ndef noisy_mapping(mapping):\n    def _(x):\n        y = mapping(x)\n        y += random.gauss(0, 1)\n        return y\n\n    return _\n\n\npow2 = noisy_mapping(lambda x: x ** 2)\n\n\n# lets record the pairs (x, f(x)) in a metric and make a plot:\nfrom pennpaper import Metric, plot_group, plot\n\nm1 = Metric(\"pow2\")\nfor x in X:\n    m1.add_record(x, pow2(x))\n\nplot(m1)\n\n# try again - see in how far it repeats itself.\nm2 = Metric(\"pow2_second_try\")\nfor x in X:\n    m2.add_record(x, pow2(x))\n\n# lets plot two metrics side-by-side\nplot_group([m1, m2])\n\n\n# Actually, m1 and m2 are metrics of the same process. \n# What if we create a new metric tracking the mean and stddev of this process?\nm3 = m1 + m2\nplot(m3)\n\n# the plot is too noisy to understand. We can smoothen it!\nplot(m3, smoothen=True)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ikamensh/ilya_ezplot", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pennpaper", "package_url": "https://pypi.org/project/pennpaper/", "platform": "", "project_url": "https://pypi.org/project/pennpaper/", "project_urls": {"Homepage": "https://github.com/ikamensh/ilya_ezplot"}, "release_url": "https://pypi.org/project/pennpaper/0.15/", "requires_dist": ["numpy", "matplotlib"], "requires_python": ">=3.6", "summary": "Set of utilities for ploting results of non-deterministic experiments, e.g. machine learning, optimization, genetic algorithms.", "version": "0.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pen'n'paper</h1>\n<p>Pen'n'paper is a package to easily collect the data about (noisy) processes and plot them for comparison. This package is not aiming at feature completeness. Instead it should give you an easy start during the phase of the project when you want to just concentrate on an experimental idea.</p>\n<p>Installation:\n<code>pip install pennpaper</code></p>\n<p>By example:</p>\n<pre><span class=\"c1\"># We have a mysterious function that we would like to better understand on the interval [0.1, 5.].</span>\n<span class=\"c1\"># Unfortunately the function is noisy.</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">noisy_mapping</span><span class=\"p\">(</span><span class=\"n\">mapping</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">mapping</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">y</span> <span class=\"o\">+=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">gauss</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">y</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">_</span>\n\n\n<span class=\"n\">pow2</span> <span class=\"o\">=</span> <span class=\"n\">noisy_mapping</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># lets record the pairs (x, f(x)) in a metric and make a plot:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pennpaper</span> <span class=\"kn\">import</span> <span class=\"n\">Metric</span><span class=\"p\">,</span> <span class=\"n\">plot_group</span><span class=\"p\">,</span> <span class=\"n\">plot</span>\n\n<span class=\"n\">m1</span> <span class=\"o\">=</span> <span class=\"n\">Metric</span><span class=\"p\">(</span><span class=\"s2\">\"pow2\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">X</span><span class=\"p\">:</span>\n    <span class=\"n\">m1</span><span class=\"o\">.</span><span class=\"n\">add_record</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">pow2</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">m1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># try again - see in how far it repeats itself.</span>\n<span class=\"n\">m2</span> <span class=\"o\">=</span> <span class=\"n\">Metric</span><span class=\"p\">(</span><span class=\"s2\">\"pow2_second_try\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">X</span><span class=\"p\">:</span>\n    <span class=\"n\">m2</span><span class=\"o\">.</span><span class=\"n\">add_record</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">pow2</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># lets plot two metrics side-by-side</span>\n<span class=\"n\">plot_group</span><span class=\"p\">([</span><span class=\"n\">m1</span><span class=\"p\">,</span> <span class=\"n\">m2</span><span class=\"p\">])</span>\n\n\n<span class=\"c1\"># Actually, m1 and m2 are metrics of the same process. </span>\n<span class=\"c1\"># What if we create a new metric tracking the mean and stddev of this process?</span>\n<span class=\"n\">m3</span> <span class=\"o\">=</span> <span class=\"n\">m1</span> <span class=\"o\">+</span> <span class=\"n\">m2</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">m3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># the plot is too noisy to understand. We can smoothen it!</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">m3</span><span class=\"p\">,</span> <span class=\"n\">smoothen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5955468, "releases": {"0.11": [{"comment_text": "", "digests": {"md5": "a19ca5ec0ff5cda9734b89743a566ce9", "sha256": "22dd4eeb13a0d96a408d65003048ba3dce129bc8b00e690521c0440e4712b665"}, "downloads": -1, "filename": "pennpaper-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "a19ca5ec0ff5cda9734b89743a566ce9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7523, "upload_time": "2019-10-08T14:03:35", "upload_time_iso_8601": "2019-10-08T14:03:35.818802Z", "url": "https://files.pythonhosted.org/packages/d3/f4/41d663e9d399261dd9c5b536619a1c5ae05885e4455308ce97330789f64f/pennpaper-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d810b47e5ba686f45e0eed90f710000", "sha256": "7053fb114ee1eec1d3fff75614abf9b67aa8c1251ae893b01aa2dfe28139a33b"}, "downloads": -1, "filename": "pennpaper-0.11.tar.gz", "has_sig": false, "md5_digest": "2d810b47e5ba686f45e0eed90f710000", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4883, "upload_time": "2019-10-08T14:03:39", "upload_time_iso_8601": "2019-10-08T14:03:39.275259Z", "url": "https://files.pythonhosted.org/packages/12/7d/d726ac17582bea186359b120498e905a1db6e9abda1327918c7d0ce0cf3d/pennpaper-0.11.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "b07502d2035e862c54d0190de7238c6d", "sha256": "1c000e18ec85d1d28ce194c0132bcb9a0d530dd3c275556d2c5d46f1090f465c"}, "downloads": -1, "filename": "pennpaper-0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "b07502d2035e862c54d0190de7238c6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9027, "upload_time": "2019-10-10T08:23:53", "upload_time_iso_8601": "2019-10-10T08:23:53.291084Z", "url": "https://files.pythonhosted.org/packages/4b/43/58f61573446ff832aba3a33d4342874991ac7a06ca749679f92102b7aa17/pennpaper-0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b53e3f5f8db05f556c89fa2599e3f579", "sha256": "c6de8f6c27bf2e121466815f2dce4bdd51b6fb92e62a646da5f8656ec4afacb5"}, "downloads": -1, "filename": "pennpaper-0.13.tar.gz", "has_sig": false, "md5_digest": "b53e3f5f8db05f556c89fa2599e3f579", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6136, "upload_time": "2019-10-10T08:23:55", "upload_time_iso_8601": "2019-10-10T08:23:55.929377Z", "url": "https://files.pythonhosted.org/packages/7e/79/a6700859724e523f934abc8cdfece95b3a40138ed3228b2e74144d8d7c90/pennpaper-0.13.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "d6a714ae53e3ec49fab1ae5d4a9adf8e", "sha256": "bbf72f4429b77916f6bd56a5fb91586a8c41382746a549184454da77ccc22791"}, "downloads": -1, "filename": "pennpaper-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "d6a714ae53e3ec49fab1ae5d4a9adf8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9064, "upload_time": "2019-10-10T15:22:40", "upload_time_iso_8601": "2019-10-10T15:22:40.991112Z", "url": "https://files.pythonhosted.org/packages/c1/a9/8e6da6dd840e0b5cdb726d656d61db692fc30c5243611d387e289995eac3/pennpaper-0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cbdb5955b12520acf798f69b23833ca", "sha256": "59524c1aab29fe4c1428ffdea9de16b092e7978c4b729950a01ce95ae6982f05"}, "downloads": -1, "filename": "pennpaper-0.15.tar.gz", "has_sig": false, "md5_digest": "0cbdb5955b12520acf798f69b23833ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6170, "upload_time": "2019-10-10T15:22:43", "upload_time_iso_8601": "2019-10-10T15:22:43.170782Z", "url": "https://files.pythonhosted.org/packages/f2/df/3e9a72d59d1d9c13a38d2138c524acf1303ae59e0c6ba0b5fa471136333f/pennpaper-0.15.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6a714ae53e3ec49fab1ae5d4a9adf8e", "sha256": "bbf72f4429b77916f6bd56a5fb91586a8c41382746a549184454da77ccc22791"}, "downloads": -1, "filename": "pennpaper-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "d6a714ae53e3ec49fab1ae5d4a9adf8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9064, "upload_time": "2019-10-10T15:22:40", "upload_time_iso_8601": "2019-10-10T15:22:40.991112Z", "url": "https://files.pythonhosted.org/packages/c1/a9/8e6da6dd840e0b5cdb726d656d61db692fc30c5243611d387e289995eac3/pennpaper-0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cbdb5955b12520acf798f69b23833ca", "sha256": "59524c1aab29fe4c1428ffdea9de16b092e7978c4b729950a01ce95ae6982f05"}, "downloads": -1, "filename": "pennpaper-0.15.tar.gz", "has_sig": false, "md5_digest": "0cbdb5955b12520acf798f69b23833ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6170, "upload_time": "2019-10-10T15:22:43", "upload_time_iso_8601": "2019-10-10T15:22:43.170782Z", "url": "https://files.pythonhosted.org/packages/f2/df/3e9a72d59d1d9c13a38d2138c524acf1303ae59e0c6ba0b5fa471136333f/pennpaper-0.15.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:31 2020"}