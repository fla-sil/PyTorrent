{"info": {"author": "Christian Fobel", "author_email": "christian@fobel.net", "bugtrack_url": null, "classifiers": [], "description": "# `avr_helpers` #\n\nThis package provides helper classes for interacting with the [AVR][1]\ntool-chain.  It includes a copy of `avrdude` for Windows, and Linux _(32-bit\nand 64-bit)_, along with the `avrdude.conf` file from the [Arduino 1.0.5\nIDE][2].  This allows stand-alone flashing of compile `.hex` firmware files.\n\n[1]: http://en.wikipedia.org/wiki/Atmel_AVR\n[2]: http://arduino.cc/en/main/software\n\n\n## `avrdude` API ##\n\nThe `avr_helpers.AvrDude` class implements an API for:\n\n - Scanning available serial ports for a connected device.\n - Flashing a `.hex` bit-stream file to an AVR device.\n\n### `AvrDude` API Usage ###\n\n    >>> from avr_helpers import AvrDude\n    >>> AvrDude?\n    Type:            type\n    String form:     <class \u2018avr_helpers.AvrDude\u2019>\n    File:            ...\n    Init definition: AvrDude(self, protocol, microcontroller, baud_rate, conf_path=None, port=None)\n    Docstring:       ...\n    >>> avr_dude = AvrDude(\u2018arduino\u2019, \u2018atmega168\u2019, \u201819200\u2019)\n    >>> # `-D` disables erase cycle to speed up programming.\n    >>> stdout, stderr = avr_dude.flash(\u2018blink.hex\u2019, [\u2018-D\u2019])\n    >>> print stdout\n\n    >>> print stderr\n\n    avrdude-x64: AVR device initialized and ready to accept instructions\n\n    Reading | ################################################## | 100% 0.00s\n\n    avrdude-x64: Device signature = 0x1e9406\n    avrdude-x64: reading input file \u201cblink.hex\u201d\n    avrdude-x64: writing flash (1056 bytes):\n\n    Writing | ################################################## | 100% 0.76s\n\n    avrdude-x64: 1056 bytes of flash written\n    avrdude-x64: verifying flash memory against blink.hex:\n    avrdude-x64: load data flash data from input file blink.hex:\n    avrdude-x64: input file blink.hex contains 1056 bytes\n    avrdude-x64: reading on-chip flash data:\n\n    Reading | ################################################## | 100% 0.68s\n\n    avrdude-x64: verifying ...\n    avrdude-x64: 1056 bytes of flash verified\n\n    avrdude-x64 done.  Thank you.\n\nNote that since the `avrdude.conf` file from the Arduino IDE is included in the\n`avr_helpers` package, the `arduino` protocol may be used, allowing easy\nflashing of pre-compiled `.hex` files to Arduino devices.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/wheeler-microfluidics/avr_helpers.git", "keywords": null, "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "avr_helpers", "package_url": "https://pypi.org/project/avr_helpers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/avr_helpers/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/wheeler-microfluidics/avr_helpers.git"}, "release_url": "https://pypi.org/project/avr_helpers/0.2/", "requires_dist": null, "requires_python": null, "summary": "Minimal tool-set for flashing bit-streams to AVR micro-controllers.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># <cite>avr_helpers</cite> #</p>\n<p>This package provides helper classes for interacting with the [AVR][1]\ntool-chain.  It includes a copy of <cite>avrdude</cite> for Windows, and Linux _(32-bit\nand 64-bit)_, along with the <cite>avrdude.conf</cite> file from the [Arduino 1.0.5\nIDE][2].  This allows stand-alone flashing of compile <cite>.hex</cite> firmware files.</p>\n<p>[1]: <a href=\"http://en.wikipedia.org/wiki/Atmel_AVR\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Atmel_AVR</a>\n[2]: <a href=\"http://arduino.cc/en/main/software\" rel=\"nofollow\">http://arduino.cc/en/main/software</a></p>\n<p>## <cite>avrdude</cite> API ##</p>\n<p>The <cite>avr_helpers.AvrDude</cite> class implements an API for:</p>\n<blockquote>\n<ul>\n<li>Scanning available serial ports for a connected device.</li>\n<li>Flashing a <cite>.hex</cite> bit-stream file to an AVR device.</li>\n</ul>\n</blockquote>\n<p>### <cite>AvrDude</cite> API Usage ###</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from avr_helpers import AvrDude\n&gt;&gt;&gt; AvrDude?\nType:            type\nString form:     &lt;class \u2018avr_helpers.AvrDude\u2019&gt;\nFile:            ...\nInit definition: AvrDude(self, protocol, microcontroller, baud_rate, conf_path=None, port=None)\nDocstring:       ...\n&gt;&gt;&gt; avr_dude = AvrDude(\u2018arduino\u2019, \u2018atmega168\u2019, \u201819200\u2019)\n&gt;&gt;&gt; # `-D` disables erase cycle to speed up programming.\n&gt;&gt;&gt; stdout, stderr = avr_dude.flash(\u2018blink.hex\u2019, [\u2018-D\u2019])\n&gt;&gt;&gt; print stdout\n</pre>\n<pre>&gt;&gt;&gt; print stderr\n</pre>\n<p>avrdude-x64: AVR device initialized and ready to accept instructions</p>\n<p>Reading | ################################################## | 100% 0.00s</p>\n<p>avrdude-x64: Device signature = 0x1e9406\navrdude-x64: reading input file \u201cblink.hex\u201d\navrdude-x64: writing flash (1056 bytes):</p>\n<p>Writing | ################################################## | 100% 0.76s</p>\n<p>avrdude-x64: 1056 bytes of flash written\navrdude-x64: verifying flash memory against blink.hex:\navrdude-x64: load data flash data from input file blink.hex:\navrdude-x64: input file blink.hex contains 1056 bytes\navrdude-x64: reading on-chip flash data:</p>\n<p>Reading | ################################################## | 100% 0.68s</p>\n<p>avrdude-x64: verifying \u2026\navrdude-x64: 1056 bytes of flash verified</p>\n<p>avrdude-x64 done.  Thank you.</p>\n</blockquote>\n<p>Note that since the <cite>avrdude.conf</cite> file from the Arduino IDE is included in the\n<cite>avr_helpers</cite> package, the <cite>arduino</cite> protocol may be used, allowing easy\nflashing of pre-compiled <cite>.hex</cite> files to Arduino devices.</p>\n\n          </div>"}, "last_serial": 1371561, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ede244c220241e56394a48ac32d15213", "sha256": "dcbeae2472a34d39b5bc1176837d613f5aa8196c50539f019c88d029d57b339e"}, "downloads": -1, "filename": "avr_helpers-0.1.zip", "has_sig": false, "md5_digest": "ede244c220241e56394a48ac32d15213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45078, "upload_time": "2015-01-05T19:07:56", "upload_time_iso_8601": "2015-01-05T19:07:56.267764Z", "url": "https://files.pythonhosted.org/packages/24/aa/46ab2b2da8cb7d6ab22120ac70dddeb2086554e582f3c2c11bd77f504a05/avr_helpers-0.1.zip", "yanked": false}], "0.1.post2.dev7356594": [{"comment_text": "", "digests": {"md5": "7d385a3f9106438393d081847d6a0a66", "sha256": "efd405feaa01bf21db9f401caa40455d99fcc75a61e1235a51606c7ac5502a0e"}, "downloads": -1, "filename": "avr_helpers-0.1.post2.dev7356594.tar.gz", "has_sig": false, "md5_digest": "7d385a3f9106438393d081847d6a0a66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 943292, "upload_time": "2014-04-25T13:41:46", "upload_time_iso_8601": "2014-04-25T13:41:46.950235Z", "url": "https://files.pythonhosted.org/packages/eb/91/9c5afe554c3b09949d47d9d8353f7baa5ae3b80cac3e7bc05d4c96c68294/avr_helpers-0.1.post2.dev7356594.tar.gz", "yanked": false}], "0.1.post3.dev153609906": [{"comment_text": "", "digests": {"md5": "c953e0d43b3cf9cb78be914bfb90b96d", "sha256": "58050e62745b25ab0becf97ba02ebfc911d4b27f14e2549d754c21e8810f75d3"}, "downloads": -1, "filename": "avr_helpers-0.1.post3.dev153609906.tar.gz", "has_sig": false, "md5_digest": "c953e0d43b3cf9cb78be914bfb90b96d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 943209, "upload_time": "2014-04-25T19:39:39", "upload_time_iso_8601": "2014-04-25T19:39:39.957626Z", "url": "https://files.pythonhosted.org/packages/85/2a/32ba9d209388ff1e319b2d9a7789a6d6c4b8418eb655b898352b8563f6c5/avr_helpers-0.1.post3.dev153609906.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7b27a932beb06405b25bec4b208acb75", "sha256": "53e52efe88487fd3ae92690e52617163f15689226792105829736bb1ee554f03"}, "downloads": -1, "filename": "avr_helpers-0.2.tar.gz", "has_sig": false, "md5_digest": "7b27a932beb06405b25bec4b208acb75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 943070, "upload_time": "2014-08-27T17:16:52", "upload_time_iso_8601": "2014-08-27T17:16:52.094463Z", "url": "https://files.pythonhosted.org/packages/47/89/050cfe060c1cbc7f870eb0668dd0cce87affc572160bce674648084e6cb5/avr_helpers-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b27a932beb06405b25bec4b208acb75", "sha256": "53e52efe88487fd3ae92690e52617163f15689226792105829736bb1ee554f03"}, "downloads": -1, "filename": "avr_helpers-0.2.tar.gz", "has_sig": false, "md5_digest": "7b27a932beb06405b25bec4b208acb75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 943070, "upload_time": "2014-08-27T17:16:52", "upload_time_iso_8601": "2014-08-27T17:16:52.094463Z", "url": "https://files.pythonhosted.org/packages/47/89/050cfe060c1cbc7f870eb0668dd0cce87affc572160bce674648084e6cb5/avr_helpers-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:02 2020"}