{"info": {"author": "Robert Robinson", "author_email": "rerobins@meerkatlabs.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Text Processing"], "description": "# Autology\n\nAutology is a text file based life log.  Using the contents of markdown files (to include frontmatter) it will provide a \ncollection of reports for later viewing.  It currently uses git as a backend for syncing between multiple clients.\n\n## Contributing\n\nPlease report all software issues to [Bug tracker](https://github.com/MeerkatLabs/autology/issues).  Any issues \nassociated with the templates that are provided by default should be reported to the \n[Autology Template Bug Tracker](https://github.com/MeerkatLabs/autology_templates/issues).\n\n## Installation\n\nIt is recommended that you use this tool in a virtual environment associated with the directory that you'll be using to \nstore all of the content.  \n\n```bash\nmkdir log; cd log\npython3 -m venv env\nsource env/bin/activate\n\npip install autology\n```\n\nTo create the log directory structure, execute:\n\n```bash\nautology init\n```\n\nThis will retrieve the [template files](https://github.com/MeerkatLabs/autology_templates) from GitHub, and create a new\n`config.yaml` file with the default values of all of the parameters that can be used.\n\n## Configuration\n\n### Git Storage\n\nIn order to use this log with git as the backend you will need to modify the `config.yaml` file and enable git support. \nThe first time it is run, it will initialize a git environment (if necessary).  Configuring the git environment with a\nremote and refspec will allow the make_note sub-command to push the changes to the backend of your choosing.\n\n### Configuring Editor\n\nBy default, the editor used to modify the text files is `xdg-open`.  Depending on the editor that is currently set as the \ndefault, this may not work correctly.  For example, executing `gvim` will automatically return when the editor is \nopened instead of waiting for the user to save and close the file.  To get around this, you will need to set the value\nof the editor to something more sane.  To continue the example of gvim, the setting is:\n\n```yaml\nmake_note:\n  editor: gvim -f {file} +2\n``` \n\nYou will need to provide the full command for the editor, including the `{file}` parameter.  The `-f` flag is \nresponsible for executing the tool in the foreground.  `+2` moves the editor to the second line of the file (skipping \nthe opening frontmatter tag).\n\n## Execution\n\nTo generate a new note file, use the following command while the virtual environment is activated.\n\n```bash\nautology make_note\n```\n\nOnce you have some notes, you can then use the `generate` sub-command to translate the log files into a HTML output. \n\n```bash\nautology generate\n```\n\nTo view the content that has been generated, you can use the `serve` sub-command to create a simple http server for \nviewing.  Note this server does not auto-generate the content on changes, and is incredibly slow.  As such, you should\nnot use it in production.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MeerkatLabs/autology/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "autology", "package_url": "https://pypi.org/project/autology/", "platform": "", "project_url": "https://pypi.org/project/autology/", "project_urls": {"Homepage": "https://github.com/MeerkatLabs/autology/"}, "release_url": "https://pypi.org/project/autology/0.4.0/", "requires_dist": ["dict-recursive-update (<2,>=1.0.0)", "Jinja2 (<3,>=2.9.6)", "Markdown (<3,>=2.6.9)", "munch (<3,>=2.2.0)", "Pypubsub (<5,>=4.0.0)", "python-frontmatter (<0.5,>=0.4.2)", "PyYAML (<4,>=3.12)", "requests (>=2.18.4)", "GitPython (>=2.1.7<3)", "pytz (>=2017.3<2018)", "tzlocal (>=1.5.1<2)", "semantic-version (>=2.6.0<3)", "gpxpy (>=1.1.2<2)", "pylint (>=1.7.4); extra == 'dev'"], "requires_python": ">=3.6, <4", "summary": "File-based life log", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Autology<br><br>Autology is a text file based life log.  Using the contents of markdown files (to include frontmatter) it will provide a <br>collection of reports for later viewing.  It currently uses git as a backend for syncing between multiple clients.<br><br>## Contributing<br><br>Please report all software issues to [Bug tracker](https://github.com/MeerkatLabs/autology/issues).  Any issues <br>associated with the templates that are provided by default should be reported to the <br>[Autology Template Bug Tracker](https://github.com/MeerkatLabs/autology_templates/issues).<br><br>## Installation<br><br>It is recommended that you use this tool in a virtual environment associated with the directory that you'll be using to <br>store all of the content.  <br><br>```bash<br>mkdir log; cd log<br>python3 -m venv env<br>source env/bin/activate<br><br>pip install autology<br>```<br><br>To create the log directory structure, execute:<br><br>```bash<br>autology init<br>```<br><br>This will retrieve the [template files](https://github.com/MeerkatLabs/autology_templates) from GitHub, and create a new<br>`config.yaml` file with the default values of all of the parameters that can be used.<br><br>## Configuration<br><br>### Git Storage<br><br>In order to use this log with git as the backend you will need to modify the `config.yaml` file and enable git support. <br>The first time it is run, it will initialize a git environment (if necessary).  Configuring the git environment with a<br>remote and refspec will allow the make_note sub-command to push the changes to the backend of your choosing.<br><br>### Configuring Editor<br><br>By default, the editor used to modify the text files is `xdg-open`.  Depending on the editor that is currently set as the <br>default, this may not work correctly.  For example, executing `gvim` will automatically return when the editor is <br>opened instead of waiting for the user to save and close the file.  To get around this, you will need to set the value<br>of the editor to something more sane.  To continue the example of gvim, the setting is:<br><br>```yaml<br>make_note:<br>  editor: gvim -f {file} +2<br>``` <br><br>You will need to provide the full command for the editor, including the `{file}` parameter.  The `-f` flag is <br>responsible for executing the tool in the foreground.  `+2` moves the editor to the second line of the file (skipping <br>the opening frontmatter tag).<br><br>## Execution<br><br>To generate a new note file, use the following command while the virtual environment is activated.<br><br>```bash<br>autology make_note<br>```<br><br>Once you have some notes, you can then use the `generate` sub-command to translate the log files into a HTML output. <br><br>```bash<br>autology generate<br>```<br><br>To view the content that has been generated, you can use the `serve` sub-command to create a simple http server for <br>viewing.  Note this server does not auto-generate the content on changes, and is incredibly slow.  As such, you should<br>not use it in production.<br><br><br>\n          </div>"}, "last_serial": 3842743, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3fc9c7324b735ac989c754e27c5fc4c9", "sha256": "bed4577fa91421a1bf9025abf2947ab0c6456983748ac8c62d8349c0b089b35a"}, "downloads": -1, "filename": "autology-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3fc9c7324b735ac989c754e27c5fc4c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 23976, "upload_time": "2017-11-17T20:35:00", "upload_time_iso_8601": "2017-11-17T20:35:00.246739Z", "url": "https://files.pythonhosted.org/packages/d6/5b/eb12c658bf1b2115236b8b31094d9312c2e3978fa95aa7e46d64dde6b98b/autology-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab19703f848d1558312a2707193b7c6f", "sha256": "74ccb683face7bfb6369d4d8cd0f4a4b5d8124773a064b1b875f4f142f0a42ff"}, "downloads": -1, "filename": "autology-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ab19703f848d1558312a2707193b7c6f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 15337, "upload_time": "2017-11-17T20:35:01", "upload_time_iso_8601": "2017-11-17T20:35:01.423532Z", "url": "https://files.pythonhosted.org/packages/cd/15/d202d7962e2d5337588e4fbc46b92c9497f3a9f260aa12926ef94505984b/autology-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "61fc6c66418a2c47fad7a80bf9861372", "sha256": "350bec80580016f56609b8f1e38149e6c1ce69b61d9e22a6da3cee9e1394cbb1"}, "downloads": -1, "filename": "autology-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "61fc6c66418a2c47fad7a80bf9861372", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 34027, "upload_time": "2017-12-19T23:17:11", "upload_time_iso_8601": "2017-12-19T23:17:11.186479Z", "url": "https://files.pythonhosted.org/packages/09/78/7800b05934dc8e5a8abe9d2681d748b8398b84c256ca80e94e6a9aabc38f/autology-0.2.0-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fb69553358a41c72ad4246ab50df4f5c", "sha256": "3fded9330cf9a5b0b812da012f54ff950ee8308b7de1fe8ce71088801ec36541"}, "downloads": -1, "filename": "autology-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fb69553358a41c72ad4246ab50df4f5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 42168, "upload_time": "2018-01-31T21:40:09", "upload_time_iso_8601": "2018-01-31T21:40:09.687854Z", "url": "https://files.pythonhosted.org/packages/a1/4f/ebe39b90ca3edb41490bc02641d779b8c5ac3b71298149388116efcec94a/autology-0.3.0-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "26af4bb8fa886afd82962dab3cf58e0c", "sha256": "ed3077494410e66a3dc2eece0c94c2e2054dde355f26d933805d25fd3c535440"}, "downloads": -1, "filename": "autology-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "26af4bb8fa886afd82962dab3cf58e0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 52690, "upload_time": "2018-05-08T01:04:37", "upload_time_iso_8601": "2018-05-08T01:04:37.798319Z", "url": "https://files.pythonhosted.org/packages/05/35/409bf456378b298f75db46ab4f69f022e4838752a4640fda53e50b3e009f/autology-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd58c4ae3fae48a57208726a0f61998e", "sha256": "e3b27e63fb66e3d87ac2f66cafe798ed1a6d20d3caba8d14f79eb391457509e7"}, "downloads": -1, "filename": "autology-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fd58c4ae3fae48a57208726a0f61998e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 27408, "upload_time": "2018-05-08T01:04:39", "upload_time_iso_8601": "2018-05-08T01:04:39.204719Z", "url": "https://files.pythonhosted.org/packages/7e/9d/eca50b62408a0a9cd9a47fdc921954c3943b985a3c4b616b7c8cf2c54b9b/autology-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26af4bb8fa886afd82962dab3cf58e0c", "sha256": "ed3077494410e66a3dc2eece0c94c2e2054dde355f26d933805d25fd3c535440"}, "downloads": -1, "filename": "autology-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "26af4bb8fa886afd82962dab3cf58e0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 52690, "upload_time": "2018-05-08T01:04:37", "upload_time_iso_8601": "2018-05-08T01:04:37.798319Z", "url": "https://files.pythonhosted.org/packages/05/35/409bf456378b298f75db46ab4f69f022e4838752a4640fda53e50b3e009f/autology-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd58c4ae3fae48a57208726a0f61998e", "sha256": "e3b27e63fb66e3d87ac2f66cafe798ed1a6d20d3caba8d14f79eb391457509e7"}, "downloads": -1, "filename": "autology-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fd58c4ae3fae48a57208726a0f61998e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 27408, "upload_time": "2018-05-08T01:04:39", "upload_time_iso_8601": "2018-05-08T01:04:39.204719Z", "url": "https://files.pythonhosted.org/packages/7e/9d/eca50b62408a0a9cd9a47fdc921954c3943b985a3c4b616b7c8cf2c54b9b/autology-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:15 2020"}