{"info": {"author": "Santtu Pajukanta", "author_email": "santtu@pajukanta.fi", "bugtrack_url": null, "classifiers": [], "description": "# Empugn \u2013 Generate HTML or XML from YAML or JSON\n\nMore an experiment than a serious attempt at making a HTML template engine. But if you're going to use it, you may find it works well together with [Emrichen](https://github.com/con2/emrichen).\n\nAn Empugn template looks like this:\n\n```yaml\nhtml:\n  - head:\n      - title: Empugn example\n      - link:\n          rel: stylesheet\n          href: foo.css\n      - script: |\n          alert('Hello, World');\n  - body:\n      - h1: Sole text child may be specified as-is\n      - p:\n          - \"Separating links by \"\n          - a:\n              href: https://google.com\n              target: _blank\n              children: space\n          - \" may require quoting\"\n```\n\nOr with Emrichen:\n\n```yaml\n!Defaults\ntitle: Empugn example with Emrichen\ngreeting: Hello, Emrichen\n---\nhtml:\n  - head:\n      - title: !Var title\n      - link:\n          rel: stylesheet\n          href: foo.css\n      - script: !Format \"alert({greeting!r});\"\n  - body:\n      - h1: !Var title\n```\n\n## Installation\n\nPython 3.5+ required. Python 2 is not and will not be supported.\n\nOptional dependencies:\n\n* YAML support requires [PyYAML](https://pypi.org/project/PyYAML/)\n* Emrichen support requires\u2026 well\u2026 [Emrichen](https://pypi.org/project/emrichen/)\n\nThe recommended way to instal Empugn is\n\n    pip install empugn[emrichen]\n\nPlain `empugn` gives you JSON support only. For Empugn with YAML support but no Emrichen, use `empugn[yaml]`.\n\n## CLI\n\n```\nusage: empugn [-h] [--template-format {yaml,json}] [--output-file OUTPUT_FILE]\n              [--indent INDENT] [--use-emrichen] [--var-file VAR_FILE]\n              [--define VAR=VALUE] [--include-env]\n              [template_file]\n\nGenerate HTML or XML from YAML or JSON\n\npositional arguments:\n  template_file         The YAML or JSON template to process. If unspecified,\n                        the template is read from stdin.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --template-format {yaml,json}\n                        Template format. If unspecified, attempted to be\n                        autodetected from the input filename (but defaults to\n                        YAML).\n  --output-file OUTPUT_FILE, -o OUTPUT_FILE\n                        Output file. If unspecified, the HTML/XML output is\n                        written into stdout.\n  --indent INDENT, -i INDENT\n                        Indent output. If integer, this many spaces will be\n                        used. If string, will be used literally. To disable\n                        indentation, pass in the empty string.\n  --use-emrichen, -r    Use Emrichen to process tags, making Empugn a full\n                        featured HTML template engine. Emrichen must be\n                        installed.\n  --var-file VAR_FILE, -f VAR_FILE\n                        (Implies --use-emrichen) A YAML file containing an\n                        object whose top-level keys will be defined as\n                        variables. May be specified multiple times.\n  --define VAR=VALUE, -D VAR=VALUE\n                        (Implies --use-emrichen) Defines a single variable.\n                        May be specified multiple times.\n  --include-env, -e     (Implies --use-emrichen) Expose process environment\n                        variables to the template.\n```\n\n## Python API\n\nSimple usage:\n\n```python\nfrom empugn import empugn\n\n# In goes parsed JSON/YAML, out comes string\nempugn({'html': []})  # -> '<html></html>'\n```\n\nUsage with Emrichen:\n\n```python\nfrom empugn import empugn\nfrom emrichen import Context, Template\n\ntemplate_yaml = '\u2026'\ntemplate = Template.parse(template)  # or Template(\u2026)\ncontext = Context({'var': 'value'})\ndata, = Template.enrich(context)\nempugn(data)\n```\n\n## Why is it called Empugn?\n\nThe name Empugn is a play on Emrichen, [Pug](https://pugjs.org/) and _impugn_.\n\n## License\n\n    The MIT License (MIT)\n\n    Copyright \u00a9 2018\u20132019 Santtu Pajukanta\n    Copyright \u00a9 2018\u20132019 Aarni Koskela\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/japsu/empugn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "empugn", "package_url": "https://pypi.org/project/empugn/", "platform": "", "project_url": "https://pypi.org/project/empugn/", "project_urls": {"Homepage": "http://github.com/japsu/empugn"}, "release_url": "https://pypi.org/project/empugn/0.1.0/", "requires_dist": ["yattag (~=1.10.1)", "emrichen; extra == 'emrichen'", "PyYAML; extra == 'yaml'"], "requires_python": "", "summary": "Generate HTML or XML from YAML or JSON", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Empugn \u2013 Generate HTML or XML from YAML or JSON</h1>\n<p>More an experiment than a serious attempt at making a HTML template engine. But if you're going to use it, you may find it works well together with <a href=\"https://github.com/con2/emrichen\" rel=\"nofollow\">Emrichen</a>.</p>\n<p>An Empugn template looks like this:</p>\n<pre><span class=\"nt\">html</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">head</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Empugn example</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">link</span><span class=\"p\">:</span>\n          <span class=\"nt\">rel</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">stylesheet</span>\n          <span class=\"nt\">href</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">foo.css</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">script</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n          <span class=\"no\">alert('Hello, World');</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">body</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">h1</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Sole text child may be specified as-is</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">p</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"Separating</span><span class=\"nv\"> </span><span class=\"s\">links</span><span class=\"nv\"> </span><span class=\"s\">by</span><span class=\"nv\"> </span><span class=\"s\">\"</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"nt\">a</span><span class=\"p\">:</span>\n              <span class=\"nt\">href</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https://google.com</span>\n              <span class=\"nt\">target</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">_blank</span>\n              <span class=\"nt\">children</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">space</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"s\">\"</span><span class=\"nv\"> </span><span class=\"s\">may</span><span class=\"nv\"> </span><span class=\"s\">require</span><span class=\"nv\"> </span><span class=\"s\">quoting\"</span>\n</pre>\n<p>Or with Emrichen:</p>\n<pre><span class=\"kt\">!Defaults</span>\n<span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Empugn example with Emrichen</span>\n<span class=\"nt\">greeting</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Hello, Emrichen</span>\n<span class=\"nn\">---</span>\n<span class=\"nt\">html</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">head</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"kt\">!Var</span> <span class=\"l l-Scalar l-Scalar-Plain\">title</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">link</span><span class=\"p\">:</span>\n          <span class=\"nt\">rel</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">stylesheet</span>\n          <span class=\"nt\">href</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">foo.css</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">script</span><span class=\"p\">:</span> <span class=\"kt\">!Format</span> <span class=\"s\">\"alert({greeting!r});\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">body</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">h1</span><span class=\"p\">:</span> <span class=\"kt\">!Var</span> <span class=\"l l-Scalar l-Scalar-Plain\">title</span>\n</pre>\n<h2>Installation</h2>\n<p>Python 3.5+ required. Python 2 is not and will not be supported.</p>\n<p>Optional dependencies:</p>\n<ul>\n<li>YAML support requires <a href=\"https://pypi.org/project/PyYAML/\" rel=\"nofollow\">PyYAML</a></li>\n<li>Emrichen support requires\u2026 well\u2026 <a href=\"https://pypi.org/project/emrichen/\" rel=\"nofollow\">Emrichen</a></li>\n</ul>\n<p>The recommended way to instal Empugn is</p>\n<pre><code>pip install empugn[emrichen]\n</code></pre>\n<p>Plain <code>empugn</code> gives you JSON support only. For Empugn with YAML support but no Emrichen, use <code>empugn[yaml]</code>.</p>\n<h2>CLI</h2>\n<pre><code>usage: empugn [-h] [--template-format {yaml,json}] [--output-file OUTPUT_FILE]\n              [--indent INDENT] [--use-emrichen] [--var-file VAR_FILE]\n              [--define VAR=VALUE] [--include-env]\n              [template_file]\n\nGenerate HTML or XML from YAML or JSON\n\npositional arguments:\n  template_file         The YAML or JSON template to process. If unspecified,\n                        the template is read from stdin.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --template-format {yaml,json}\n                        Template format. If unspecified, attempted to be\n                        autodetected from the input filename (but defaults to\n                        YAML).\n  --output-file OUTPUT_FILE, -o OUTPUT_FILE\n                        Output file. If unspecified, the HTML/XML output is\n                        written into stdout.\n  --indent INDENT, -i INDENT\n                        Indent output. If integer, this many spaces will be\n                        used. If string, will be used literally. To disable\n                        indentation, pass in the empty string.\n  --use-emrichen, -r    Use Emrichen to process tags, making Empugn a full\n                        featured HTML template engine. Emrichen must be\n                        installed.\n  --var-file VAR_FILE, -f VAR_FILE\n                        (Implies --use-emrichen) A YAML file containing an\n                        object whose top-level keys will be defined as\n                        variables. May be specified multiple times.\n  --define VAR=VALUE, -D VAR=VALUE\n                        (Implies --use-emrichen) Defines a single variable.\n                        May be specified multiple times.\n  --include-env, -e     (Implies --use-emrichen) Expose process environment\n                        variables to the template.\n</code></pre>\n<h2>Python API</h2>\n<p>Simple usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">empugn</span> <span class=\"kn\">import</span> <span class=\"n\">empugn</span>\n\n<span class=\"c1\"># In goes parsed JSON/YAML, out comes string</span>\n<span class=\"n\">empugn</span><span class=\"p\">({</span><span class=\"s1\">'html'</span><span class=\"p\">:</span> <span class=\"p\">[]})</span>  <span class=\"c1\"># -&gt; '&lt;html&gt;&lt;/html&gt;'</span>\n</pre>\n<p>Usage with Emrichen:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">empugn</span> <span class=\"kn\">import</span> <span class=\"n\">empugn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">emrichen</span> <span class=\"kn\">import</span> <span class=\"n\">Context</span><span class=\"p\">,</span> <span class=\"n\">Template</span>\n\n<span class=\"n\">template_yaml</span> <span class=\"o\">=</span> <span class=\"s1\">'\u2026'</span>\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">)</span>  <span class=\"c1\"># or Template(\u2026)</span>\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">Context</span><span class=\"p\">({</span><span class=\"s1\">'var'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">})</span>\n<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"o\">.</span><span class=\"n\">enrich</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n<span class=\"n\">empugn</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h2>Why is it called Empugn?</h2>\n<p>The name Empugn is a play on Emrichen, <a href=\"https://pugjs.org/\" rel=\"nofollow\">Pug</a> and <em>impugn</em>.</p>\n<h2>License</h2>\n<pre><code>The MIT License (MIT)\n\nCopyright \u00a9 2018\u20132019 Santtu Pajukanta\nCopyright \u00a9 2018\u20132019 Aarni Koskela\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n</code></pre>\n\n          </div>"}, "last_serial": 4703734, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "41fd820244d1d9a8dda9513779070db5", "sha256": "80dea33ebc929ae9f299aa4a9330776da87d4631750174795b7b35c01404427e"}, "downloads": -1, "filename": "empugn-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "41fd820244d1d9a8dda9513779070db5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6688, "upload_time": "2019-01-16T14:59:17", "upload_time_iso_8601": "2019-01-16T14:59:17.356394Z", "url": "https://files.pythonhosted.org/packages/d6/18/0263257b8b0156894dbd9b768db0871458162bdf6c027a121d0dafd30468/empugn-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4ac99edf73aa6190bcb4ad8a986fa1f", "sha256": "91b50ebd989819248892ca5a33e45fe3b066ed94a3d4e7f186a121e7babb55d7"}, "downloads": -1, "filename": "empugn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c4ac99edf73aa6190bcb4ad8a986fa1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6019, "upload_time": "2019-01-16T14:59:19", "upload_time_iso_8601": "2019-01-16T14:59:19.305333Z", "url": "https://files.pythonhosted.org/packages/c2/6a/756c6b06f859d2e19d7eb47f67663f77512cea75f727c760f3338a3b5b21/empugn-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41fd820244d1d9a8dda9513779070db5", "sha256": "80dea33ebc929ae9f299aa4a9330776da87d4631750174795b7b35c01404427e"}, "downloads": -1, "filename": "empugn-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "41fd820244d1d9a8dda9513779070db5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6688, "upload_time": "2019-01-16T14:59:17", "upload_time_iso_8601": "2019-01-16T14:59:17.356394Z", "url": "https://files.pythonhosted.org/packages/d6/18/0263257b8b0156894dbd9b768db0871458162bdf6c027a121d0dafd30468/empugn-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4ac99edf73aa6190bcb4ad8a986fa1f", "sha256": "91b50ebd989819248892ca5a33e45fe3b066ed94a3d4e7f186a121e7babb55d7"}, "downloads": -1, "filename": "empugn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c4ac99edf73aa6190bcb4ad8a986fa1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6019, "upload_time": "2019-01-16T14:59:19", "upload_time_iso_8601": "2019-01-16T14:59:19.305333Z", "url": "https://files.pythonhosted.org/packages/c2/6a/756c6b06f859d2e19d7eb47f67663f77512cea75f727c760f3338a3b5b21/empugn-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:32 2020"}