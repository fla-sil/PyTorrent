{"info": {"author": "Hugh Ramsden", "author_email": "hugh.o.ramsden@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# XLLink for Pandas\n\n**Quick-start: https://0hughman0.github.io/xl_link/quickstart.html**\n\n**Installation: `pip install xl_link`**\n\nXLLink aims to provide a powerfull interface between Pandas DataFrames, and Excel spreadsheets.\n\nXLLink tweaks the DataFrame.to_excel method to return its own XLMap object.\n\nThis XLMap stores all the information about the location of the written DataFrame within the spreadsheet.\n\nBy allowing you to use Pandas indexing methods, i.e. loc, iloc, at and iat. XLLink remains intuitive to use. But instead of returning a DataFrame, Series, or scalar, XLMap will instead return the XLRange, or XLCell corresponding to the location of the result within your spreadsheet.\n\nAdditionally XLMaps offer a wrapper around excel engines (currently supporting xlsxwriter and openpyxl) to make creating charts in excel far more intuitive. Providing a DataFrame.plot like interface for excel charts.\n\n## Chart demo\n\ncreating a complex chart is as easy as:\n\n    >>> f = XLDataFrame(index=('Breakfast', 'Lunch', 'Dinner', 'Midnight Snack'),\n                        data={'Mon': (15, 20, 12, 3),\n                              'Tues': (5, 16, 3, 0),\n                              'Weds': (3, 22, 2, 8),\n                              'Thur': (6, 7, 1, 9)})\n    >>> xlmap = f.to_excel('Chart.xlsx', sheet_name=\"XLLinked\", engine='openpyxl')\n    >>> xl_linked_chart = xlmap.create_chart('bar', title=\"With xl_link\", x_axis_name=\"Meal\", y_axis_name=\"Calories\", subtype='col')\n    >>> xlmap.sheet.add_chart(xl_linked_chart, 'F1')\n    >>> xlmap.writer.save()\n\nProducing this chart:\n\n![multi bar chart](https://raw.githubusercontent.com/0Hughman0/xl_link/master/examples/BarExample.png)\n\n\n## Formatting demo\n\nApplying conditional formatting to a table is as easy as:\n\n    >>> import numpy as np\n    >>> xy_data = XLDataFrame(data={'Y1': np.random.rand(10) * 10,\n                                    'Y2': np.random.rand(10) * 10})\n    >>> xlmap = xy_data.to_excel(\"ConditionalFormatting.xlsx\", engine='xlsxwriter')\n    >>> xlmap.sheet.conditional_format(xlmap.data.range, # position of data within spreadsheet\n                                       {'type': '3_color_scale',\n                                        'min_type': 'num', 'min_value': xlmap.f.min().min(), 'min_color': 'green',\n                                        'mid_type': 'num', 'mid_value': xlmap.f.mean().mean(), 'mid_color': 'yellow',\n                                        'max_type': 'num', 'max_value': xlmap.f.max().max(), 'max_color': 'red'})\n    >>> xlmap.writer.save()\n\n![conditional formatting](https://raw.githubusercontent.com/0Hughman0/xl_link/master/examples/ConditionalFormattingExample.png)\n\nCheck out the examples folder for more examples!\n\nThis package uses the utility functions from XlsxWriter under the BSD license found here: https://github.com/jmcnamara/XlsxWriter\n\n## Compatibility\n\n`pandas >= 0.19`\n`Xlsxwriter >= 0.9`\n`openpyxl >= 2.4`\n\nlatest tested versions:\n\n`pandas==0.23.4`\n`XlsxWriter==1.0.7` - (potential issue with stock chart, using openpyxl recommend if desired)\n`openpyxl==2.5.5`\n\nCopyright (c) 2018 0Hughman0\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/0Hughman0/xl_link/archive/0.133.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/0Hughman0/xl_link", "keywords": "pandas,excel,io,data,charts,graphs", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xl-link", "package_url": "https://pypi.org/project/xl-link/", "platform": "", "project_url": "https://pypi.org/project/xl-link/", "project_urls": {"Download": "https://github.com/0Hughman0/xl_link/archive/0.133.tar.gz", "Homepage": "https://github.com/0Hughman0/xl_link"}, "release_url": "https://pypi.org/project/xl-link/0.133/", "requires_dist": ["pandas (>=0.19)", "openpyxl (>=2.4); extra == 'openpyxl'", "xslxwriter (>=0.9); extra == 'xlsxwriter'"], "requires_python": ">=3.4", "summary": "Excel spreadsheets made easy through Pandas magic", "version": "0.133", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># XLLink for Pandas</p>\n<p><strong>Quick-start: https://0hughman0.github.io/xl_link/quickstart.html</strong></p>\n<p><strong>Installation: `pip install xl_link`</strong></p>\n<p>XLLink aims to provide a powerfull interface between Pandas DataFrames, and Excel spreadsheets.</p>\n<p>XLLink tweaks the DataFrame.to_excel method to return its own XLMap object.</p>\n<p>This XLMap stores all the information about the location of the written DataFrame within the spreadsheet.</p>\n<p>By allowing you to use Pandas indexing methods, i.e. loc, iloc, at and iat. XLLink remains intuitive to use. But instead of returning a DataFrame, Series, or scalar, XLMap will instead return the XLRange, or XLCell corresponding to the location of the result within your spreadsheet.</p>\n<p>Additionally XLMaps offer a wrapper around excel engines (currently supporting xlsxwriter and openpyxl) to make creating charts in excel far more intuitive. Providing a DataFrame.plot like interface for excel charts.</p>\n<p>## Chart demo</p>\n<p>creating a complex chart is as easy as:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; f = XLDataFrame(index=('Breakfast', 'Lunch', 'Dinner', 'Midnight Snack'),\n                    data={'Mon': (15, 20, 12, 3),\n                          'Tues': (5, 16, 3, 0),\n                          'Weds': (3, 22, 2, 8),\n                          'Thur': (6, 7, 1, 9)})\n&gt;&gt;&gt; xlmap = f.to_excel('Chart.xlsx', sheet_name=\"XLLinked\", engine='openpyxl')\n&gt;&gt;&gt; xl_linked_chart = xlmap.create_chart('bar', title=\"With xl_link\", x_axis_name=\"Meal\", y_axis_name=\"Calories\", subtype='col')\n&gt;&gt;&gt; xlmap.sheet.add_chart(xl_linked_chart, 'F1')\n&gt;&gt;&gt; xlmap.writer.save()\n</pre>\n</blockquote>\n<p>Producing this chart:</p>\n<p>![multi bar chart](<a href=\"https://raw.githubusercontent.com/0Hughman0/xl_link/master/examples/BarExample.png\" rel=\"nofollow\">https://raw.githubusercontent.com/0Hughman0/xl_link/master/examples/BarExample.png</a>)</p>\n<p>## Formatting demo</p>\n<p>Applying conditional formatting to a table is as easy as:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; xy_data = XLDataFrame(data={'Y1': np.random.rand(10) * 10,\n                                'Y2': np.random.rand(10) * 10})\n&gt;&gt;&gt; xlmap = xy_data.to_excel(\"ConditionalFormatting.xlsx\", engine='xlsxwriter')\n&gt;&gt;&gt; xlmap.sheet.conditional_format(xlmap.data.range, # position of data within spreadsheet\n                                   {'type': '3_color_scale',\n                                    'min_type': 'num', 'min_value': xlmap.f.min().min(), 'min_color': 'green',\n                                    'mid_type': 'num', 'mid_value': xlmap.f.mean().mean(), 'mid_color': 'yellow',\n                                    'max_type': 'num', 'max_value': xlmap.f.max().max(), 'max_color': 'red'})\n&gt;&gt;&gt; xlmap.writer.save()\n</pre>\n</blockquote>\n<p>![conditional formatting](<a href=\"https://raw.githubusercontent.com/0Hughman0/xl_link/master/examples/ConditionalFormattingExample.png\" rel=\"nofollow\">https://raw.githubusercontent.com/0Hughman0/xl_link/master/examples/ConditionalFormattingExample.png</a>)</p>\n<p>Check out the examples folder for more examples!</p>\n<p>This package uses the utility functions from XlsxWriter under the BSD license found here: <a href=\"https://github.com/jmcnamara/XlsxWriter\" rel=\"nofollow\">https://github.com/jmcnamara/XlsxWriter</a></p>\n<p>## Compatibility</p>\n<p><cite>pandas &gt;= 0.19</cite>\n<cite>Xlsxwriter &gt;= 0.9</cite>\n<cite>openpyxl &gt;= 2.4</cite></p>\n<p>latest tested versions:</p>\n<p><cite>pandas==0.23.4</cite>\n<cite>XlsxWriter==1.0.7</cite> - (potential issue with stock chart, using openpyxl recommend if desired)\n<cite>openpyxl==2.5.5</cite></p>\n<p>Copyright (c) 2018 0Hughman0</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n\n          </div>"}, "last_serial": 4192425, "releases": {"0.12": [{"comment_text": "", "digests": {"md5": "46975d9463daaa3480614fe44d2c797b", "sha256": "3e3dfd7d39ff2c5eba5bee644c78a3c7d05ff76f5353f73dcd29d13ffdc56ab8"}, "downloads": -1, "filename": "xl_link-0.12.tar.gz", "has_sig": false, "md5_digest": "46975d9463daaa3480614fe44d2c797b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22169, "upload_time": "2017-11-09T09:40:33", "upload_time_iso_8601": "2017-11-09T09:40:33.201264Z", "url": "https://files.pythonhosted.org/packages/9f/dc/9a8dbe1b63749f9da9a23bdd5ed2ba060163a695c6b20ec4514b43291e85/xl_link-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "2eb606b94cd7817702c978154533435d", "sha256": "e0bf47a914dd09ea86bf7597456397b235394359b91f748c502b2bf983b7634b"}, "downloads": -1, "filename": "xl_link-0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "2eb606b94cd7817702c978154533435d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24866, "upload_time": "2017-11-09T12:16:27", "upload_time_iso_8601": "2017-11-09T12:16:27.966039Z", "url": "https://files.pythonhosted.org/packages/c2/19/b42fd18847f47ace9b64a53e97b6eb3d3ca5a22f1887f903b6dadff372d8/xl_link-0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84f2b8aa4b74668f19eaa394774cd88d", "sha256": "69fc21d3f7697766f7ba50ac042e47a21f7fc8114390bb6298f28644a460186f"}, "downloads": -1, "filename": "xl_link-0.13.tar.gz", "has_sig": false, "md5_digest": "84f2b8aa4b74668f19eaa394774cd88d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22354, "upload_time": "2017-11-09T11:07:42", "upload_time_iso_8601": "2017-11-09T11:07:42.626821Z", "url": "https://files.pythonhosted.org/packages/4d/f7/a0c3ec248ce306b4718fbef9733cbc999b679c9891fe0a5c60a07d809e6d/xl_link-0.13.tar.gz", "yanked": false}], "0.131": [{"comment_text": "", "digests": {"md5": "9c2caa792d8ee1bc741c7c641a11dee0", "sha256": "7b6002ab5b1409aa491fafbe84ee092529634285ed9cb17cf35208619a262a60"}, "downloads": -1, "filename": "xl_link-0.131-py3-none-any.whl", "has_sig": false, "md5_digest": "9c2caa792d8ee1bc741c7c641a11dee0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21595, "upload_time": "2017-11-12T23:00:34", "upload_time_iso_8601": "2017-11-12T23:00:34.450988Z", "url": "https://files.pythonhosted.org/packages/e8/8e/ad0ed3c128184690bfce9dce52622d0f6e61e1adb460ca9b7dd58f50b178/xl_link-0.131-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6e8caca17f8da2b3ff27ec42d2b8793", "sha256": "aa0bc8cf62912efa0256fdabfc34400936387e1013c4963c94bd52a4be2e2a94"}, "downloads": -1, "filename": "xl_link-0.131.tar.gz", "has_sig": false, "md5_digest": "c6e8caca17f8da2b3ff27ec42d2b8793", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19032, "upload_time": "2017-11-12T23:00:37", "upload_time_iso_8601": "2017-11-12T23:00:37.352964Z", "url": "https://files.pythonhosted.org/packages/36/88/ae082b11a3d6ca5c530ba57fc68f75337c7614ca954d238b8abd2a623c76/xl_link-0.131.tar.gz", "yanked": false}], "0.132": [{"comment_text": "", "digests": {"md5": "8e825bfd36cbc8681c303941d4b5d023", "sha256": "bf4dd32f7b289944ddd5294e4c66e8d410c8e702a004c57391ab7374b4f3003b"}, "downloads": -1, "filename": "xl_link-0.132-py3-none-any.whl", "has_sig": false, "md5_digest": "8e825bfd36cbc8681c303941d4b5d023", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21988, "upload_time": "2017-11-18T17:44:03", "upload_time_iso_8601": "2017-11-18T17:44:03.788311Z", "url": "https://files.pythonhosted.org/packages/b3/73/76f6e2731d824474e6f604b02aaa742104c0058ebc91fb6c511bd010d0d5/xl_link-0.132-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d289d6858102d9e127ac9d2c3870fbee", "sha256": "0556077a9f89f39d62cc5fdf3c35863c32d459ad9285921b0b906a273301961d"}, "downloads": -1, "filename": "xl_link-0.132.tar.gz", "has_sig": false, "md5_digest": "d289d6858102d9e127ac9d2c3870fbee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19498, "upload_time": "2017-11-18T17:44:06", "upload_time_iso_8601": "2017-11-18T17:44:06.467794Z", "url": "https://files.pythonhosted.org/packages/dc/45/5431e2ae84ad57c0c52eb203ae4e754d114361314658c47096db558fc484/xl_link-0.132.tar.gz", "yanked": false}], "0.133": [{"comment_text": "", "digests": {"md5": "4b000bc3b39255efb86aeeefd176d283", "sha256": "79c8f73b66f3e7b35ef10b39c5db0088effc04508f0a1e4f1d8d33110eb29025"}, "downloads": -1, "filename": "xl_link-0.133-py3-none-any.whl", "has_sig": false, "md5_digest": "4b000bc3b39255efb86aeeefd176d283", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 21992, "upload_time": "2018-08-21T13:00:01", "upload_time_iso_8601": "2018-08-21T13:00:01.958014Z", "url": "https://files.pythonhosted.org/packages/72/49/7cd7dfd0558699d551a4e769566ab9a9737bf7d6b9eb1d757f73d4567374/xl_link-0.133-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c4dbe3a084089d7bd28d83f225a2b01", "sha256": "d43c5b3a98612cdb31eb69ca1ad7813ac9a8b9cf62acac6f188dc41c445dac42"}, "downloads": -1, "filename": "xl_link-0.133.tar.gz", "has_sig": false, "md5_digest": "6c4dbe3a084089d7bd28d83f225a2b01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 19349, "upload_time": "2018-08-21T13:00:07", "upload_time_iso_8601": "2018-08-21T13:00:07.473348Z", "url": "https://files.pythonhosted.org/packages/b9/34/e9db847bab823353a7bdba4edafb9b69d794d909f387de6f69321b240d8a/xl_link-0.133.tar.gz", "yanked": false}], "0.133.dev0": [{"comment_text": "", "digests": {"md5": "66efe157665373a8346f28ff7e7adb73", "sha256": "95792fd6a93d5539c54b23a1de805a4a79ed3e825ee706aa02a283a56a5a81f4"}, "downloads": -1, "filename": "xl_link-0.133.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "66efe157665373a8346f28ff7e7adb73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 22073, "upload_time": "2018-08-21T12:58:31", "upload_time_iso_8601": "2018-08-21T12:58:31.432268Z", "url": "https://files.pythonhosted.org/packages/ff/db/4cc50fa89bfe77294c2a3493f4217e93f8a865127abc886c0d63fe550f9b/xl_link-0.133.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc8e3def8ac1ad97c7acc855c50f1f87", "sha256": "699ef66e2c5a353aaa0e72aad445a98c10f986f55c796e6547e86ef58e5807ba"}, "downloads": -1, "filename": "xl_link-0.133.dev0.tar.gz", "has_sig": false, "md5_digest": "fc8e3def8ac1ad97c7acc855c50f1f87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 19364, "upload_time": "2018-08-21T12:58:32", "upload_time_iso_8601": "2018-08-21T12:58:32.823684Z", "url": "https://files.pythonhosted.org/packages/00/1a/aeb584b74de735af24ef26d3bdb3687e3bde8a43f05451e0417d3c921f25/xl_link-0.133.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b000bc3b39255efb86aeeefd176d283", "sha256": "79c8f73b66f3e7b35ef10b39c5db0088effc04508f0a1e4f1d8d33110eb29025"}, "downloads": -1, "filename": "xl_link-0.133-py3-none-any.whl", "has_sig": false, "md5_digest": "4b000bc3b39255efb86aeeefd176d283", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 21992, "upload_time": "2018-08-21T13:00:01", "upload_time_iso_8601": "2018-08-21T13:00:01.958014Z", "url": "https://files.pythonhosted.org/packages/72/49/7cd7dfd0558699d551a4e769566ab9a9737bf7d6b9eb1d757f73d4567374/xl_link-0.133-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c4dbe3a084089d7bd28d83f225a2b01", "sha256": "d43c5b3a98612cdb31eb69ca1ad7813ac9a8b9cf62acac6f188dc41c445dac42"}, "downloads": -1, "filename": "xl_link-0.133.tar.gz", "has_sig": false, "md5_digest": "6c4dbe3a084089d7bd28d83f225a2b01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 19349, "upload_time": "2018-08-21T13:00:07", "upload_time_iso_8601": "2018-08-21T13:00:07.473348Z", "url": "https://files.pythonhosted.org/packages/b9/34/e9db847bab823353a7bdba4edafb9b69d794d909f387de6f69321b240d8a/xl_link-0.133.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:20 2020"}