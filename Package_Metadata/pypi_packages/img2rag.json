{"info": {"author": "Levi Borodenko", "author_email": "Levi.borodenko@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "## img2rag\n\nConvert any image into its [Region Adjacency Graph](https://ieeexplore.ieee.org/document/841950) which can be used for either image segmentation or to create a graph embedding of the image.\n![scheme](scheme.jpeg)\n<hr>\n\n### Installation\n\nSimply run `pip install img2rag`\n\n### What is does\n\nGiven an image, we segement it into morphological regions using first [Felzenszwalb segmentation](http://people.cs.uchicago.edu/~pff/papers/seg-ijcv.pdf) followed by a [threshold-cut](https://ieeexplore.ieee.org/document/841950). We then use the segmeneted regions to construct the following graph:\n\n1. Each node corresponds to a segmented region.\n2. We connect two regions if they are adjacent.\n\nThis is the so-called region adjacency graph. Furthermore, we add the following node-attributes to each region:\n\n1. Location of the region centeriod\n2. Orientation of the region\n3. Mean and total color of the region\n4. Size in px\n\nThe edges contain the mean-color difference between the two regions\n\n# How to use\n\nSimply import the `RAGimage` class and initiate with any image. Then use the build in methods to access various properties.\n\n\n```python\nfrom img2rag import RAGimage\n\n# We assume the image is given as a numpy array or tf.Tensor with either 2 or 3 dimensions\n# where the third dimension is the optional channel dimension.\nimg_tensor = [...]\n\n# initiate RAGiamge instance\nimage_rag = RAGimage(img_tensor)\n\n# RAG as a networkx attributed DiGraph\nimage_rag.rag\n\n# Scikit style labels of the image segementation\nimage_rag.labels\n\n# Adjacency matric of the RAG\nimage_rag.adjacency\n\n# Graph feature matrix of the RAG\n# (Nodes x Node-Features)\nimage_rag.signal\n```", "description_content_type": "text/markdown; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LeviBorodenko/img2rag", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "img2rag", "package_url": "https://pypi.org/project/img2rag/", "platform": "any", "project_url": "https://pypi.org/project/img2rag/", "project_urls": {"Documentation": "https://github.com/LeviBorodenko/img2rag", "Homepage": "https://github.com/LeviBorodenko/img2rag"}, "release_url": "https://pypi.org/project/img2rag/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Converts images into corresponding Region Adjacency Graphs", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>img2rag</h2>\n<p>Convert any image into its <a href=\"https://ieeexplore.ieee.org/document/841950\" rel=\"nofollow\">Region Adjacency Graph</a> which can be used for either image segmentation or to create a graph embedding of the image.\n<img alt=\"scheme\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78f4afb8ef0207b9c88c06f10225050e1dae1ab5/736368656d652e6a706567\"></p>\n<hr>\n<h3>Installation</h3>\n<p>Simply run <code>pip install img2rag</code></p>\n<h3>What is does</h3>\n<p>Given an image, we segement it into morphological regions using first <a href=\"http://people.cs.uchicago.edu/%7Epff/papers/seg-ijcv.pdf\" rel=\"nofollow\">Felzenszwalb segmentation</a> followed by a <a href=\"https://ieeexplore.ieee.org/document/841950\" rel=\"nofollow\">threshold-cut</a>. We then use the segmeneted regions to construct the following graph:</p>\n<ol>\n<li>Each node corresponds to a segmented region.</li>\n<li>We connect two regions if they are adjacent.</li>\n</ol>\n<p>This is the so-called region adjacency graph. Furthermore, we add the following node-attributes to each region:</p>\n<ol>\n<li>Location of the region centeriod</li>\n<li>Orientation of the region</li>\n<li>Mean and total color of the region</li>\n<li>Size in px</li>\n</ol>\n<p>The edges contain the mean-color difference between the two regions</p>\n<h1>How to use</h1>\n<p>Simply import the <code>RAGimage</code> class and initiate with any image. Then use the build in methods to access various properties.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">img2rag</span> <span class=\"kn\">import</span> <span class=\"n\">RAGimage</span>\n\n<span class=\"c1\"># We assume the image is given as a numpy array or tf.Tensor with either 2 or 3 dimensions</span>\n<span class=\"c1\"># where the third dimension is the optional channel dimension.</span>\n<span class=\"n\">img_tensor</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># initiate RAGiamge instance</span>\n<span class=\"n\">image_rag</span> <span class=\"o\">=</span> <span class=\"n\">RAGimage</span><span class=\"p\">(</span><span class=\"n\">img_tensor</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># RAG as a networkx attributed DiGraph</span>\n<span class=\"n\">image_rag</span><span class=\"o\">.</span><span class=\"n\">rag</span>\n\n<span class=\"c1\"># Scikit style labels of the image segementation</span>\n<span class=\"n\">image_rag</span><span class=\"o\">.</span><span class=\"n\">labels</span>\n\n<span class=\"c1\"># Adjacency matric of the RAG</span>\n<span class=\"n\">image_rag</span><span class=\"o\">.</span><span class=\"n\">adjacency</span>\n\n<span class=\"c1\"># Graph feature matrix of the RAG</span>\n<span class=\"c1\"># (Nodes x Node-Features)</span>\n<span class=\"n\">image_rag</span><span class=\"o\">.</span><span class=\"n\">signal</span>\n</pre>\n\n          </div>"}, "last_serial": 7026603, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5c7352d3fa8256f0f3d1b7e273cda010", "sha256": "3d4c35e899e081af00a1266be53f1a80e176b4273c2edb97235d76855fe8a89c"}, "downloads": -1, "filename": "img2rag-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5c7352d3fa8256f0f3d1b7e273cda010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 250752, "upload_time": "2020-04-15T19:01:24", "upload_time_iso_8601": "2020-04-15T19:01:24.282503Z", "url": "https://files.pythonhosted.org/packages/6d/25/0f0ff41256b567cdbf7da387f9b82f63854abc245eef132536486fe226e7/img2rag-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c7352d3fa8256f0f3d1b7e273cda010", "sha256": "3d4c35e899e081af00a1266be53f1a80e176b4273c2edb97235d76855fe8a89c"}, "downloads": -1, "filename": "img2rag-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5c7352d3fa8256f0f3d1b7e273cda010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 250752, "upload_time": "2020-04-15T19:01:24", "upload_time_iso_8601": "2020-04-15T19:01:24.282503Z", "url": "https://files.pythonhosted.org/packages/6d/25/0f0ff41256b567cdbf7da387f9b82f63854abc245eef132536486fe226e7/img2rag-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:43 2020"}