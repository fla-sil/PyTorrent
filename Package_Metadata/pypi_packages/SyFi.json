{"info": {"author": "Kent-Andre Mardal and Martin Sandve Alnes", "author_email": "syfi@lists.launchpad.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: C++", "Programming Language :: Python :: 2.5", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "The finite element method (FEM) package SyFi is a C++ library built on top of the symbolic math library GiNaC. The name SyFi stands for Symbolic Finite Elements. The package provides polygonal domains, polynomial spaces, and degrees of freedom as symbolic expressions that are easily manipulated. This makes it easy to define finite elements and variational forms. These elements and forms are then used to generate efficient C++ code.", "description_content_type": null, "docs_url": null, "download_url": "https://launchpad.net/fenics-syfi/1.0.x/1.0.0/+download/syfi-1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://fenicsproject.org", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "SyFi", "package_url": "https://pypi.org/project/SyFi/", "platform": "", "project_url": "https://pypi.org/project/SyFi/", "project_urls": {"Download": "https://launchpad.net/fenics-syfi/1.0.x/1.0.0/+download/syfi-1.0.0.tar.gz", "Homepage": "http://fenicsproject.org"}, "release_url": "https://pypi.org/project/SyFi/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Symbolic Finite Elements", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The finite element method (FEM) package SyFi is a C++ library built on top of the symbolic math library GiNaC. The name SyFi stands for Symbolic Finite Elements. The package provides polygonal domains, polynomial spaces, and degrees of freedom as symbolic expressions that are easily manipulated. This makes it easy to define finite elements and variational forms. These elements and forms are then used to generate efficient C++ code.</p>\n\n          </div>"}, "last_serial": 2736067, "releases": {"0.2": [], "0.3.0": [], "0.3.2": [], "0.3.3": [], "0.3.4": [], "0.4.0": [], "0.5.0": [], "0.5.1": [], "0.6.0": [], "1.0-beta": [], "1.0.0": []}, "urls": [], "timestamp": "Fri May  8 02:59:16 2020"}