{"info": {"author": "Arthur Debert", "author_email": "arthur@stimuli.com.br", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta"], "description": "=================\r\nDjango2Schematics\r\n=================\r\n.. image:: https://travis-ci.org/arthur-debert/django2schematics.svg?branch=master\r\n    :target: https://travis-ci.org/arthur-debert/django2schematics\r\n             \r\nThis module is a code generator, it can read Django models and outputs\r\ncorresponding ones for schematics.\r\n\r\nOf course, this is code generation, therefore a damn bad idea. This won't\r\nkeep your stuff synced.\r\n\r\nIt's still useful, however. Sometimes you're converting a large Django code\r\nbase to domain models in schematics. In those cases, it's a royal pain to\r\nmechanically retype hundreds of models and thousands of field definitions by\r\nhand.\r\nWe have computers for that, you know.\r\n\r\nYou can either run this as a stand alone script or use it as a library.\r\n\r\nAs a Stand Alone Script\r\n-----------------------\r\nAdd django2schematics to your `INSTALLED_APPS` settings. Then::\r\n\r\n    python manage.py 2_schematics app_name\r\n\r\nYou can specify full apps or models to export. By default the script will output\r\nto stdout. The `--to-file` flag will save each app models into\r\n`[app-dir]/domain-raw.py`.\r\n\r\nSee `--help` for more options.\r\n\r\n\r\nAs a Library\r\n------------\r\nIf you'd rather process the ouput your self then::\r\n\r\n    from django2scheamtics.exporter import SchematicsModel\r\n    SchematicsModel.from_django(the_model_class)\r\n    # or as a string\r\n    SchematicsModel.from_django(the_model_class).to_string()\r\n\r\n\r\nFeedback\r\n--------\r\nLet me know if this works (or doesn't) for you. Feedback is always welcome.\r\n\r\nFeedback with accompanying pull requests and tests will buy you a beer on me next\r\ntime you're in S\u00e3o Paulo. Or tea, if that's your thing.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arthur-debert/django2schematics", "keywords": "schematics django data-modelling", "license": "Copyright (c) 2014 Arthur Debert (arthur@stimuli.com.br).\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms are permitted\r\nprovided that the above copyright notice and this paragraph are\r\nduplicated in all such forms and that any documentation,\r\nadvertising materials, and other materials related to such\r\ndistribution and use acknowledge that the software was developed\r\nby the author. The name of the\r\nauthor may not be used to endorse or promote products derived\r\nfrom this software without specific prior written permission.\r\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR\r\nIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.", "maintainer": "", "maintainer_email": "", "name": "Django2Schematics", "package_url": "https://pypi.org/project/Django2Schematics/", "platform": "ALL", "project_url": "https://pypi.org/project/Django2Schematics/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/arthur-debert/django2schematics"}, "release_url": "https://pypi.org/project/Django2Schematics/0.1/", "requires_dist": null, "requires_python": null, "summary": "Generates shematics models from Django ones.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/arthur-debert/django2schematics\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/arthur-debert/django2schematics.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d24850f22bfbcff6517204c8f5cf23b05b14b614/68747470733a2f2f7472617669732d63692e6f72672f6172746875722d6465626572742f646a616e676f32736368656d61746963732e7376673f6272616e63683d6d6173746572\"></a>\n<p>This module is a code generator, it can read Django models and outputs\ncorresponding ones for schematics.</p>\n<p>Of course, this is code generation, therefore a damn bad idea. This won\u2019t\nkeep your stuff synced.</p>\n<p>It\u2019s still useful, however. Sometimes you\u2019re converting a large Django code\nbase to domain models in schematics. In those cases, it\u2019s a royal pain to\nmechanically retype hundreds of models and thousands of field definitions by\nhand.\nWe have computers for that, you know.</p>\n<p>You can either run this as a stand alone script or use it as a library.</p>\n<div id=\"as-a-stand-alone-script\">\n<h2>As a Stand Alone Script</h2>\n<p>Add django2schematics to your <cite>INSTALLED_APPS</cite> settings. Then:</p>\n<pre>python manage.py 2_schematics app_name\n</pre>\n<p>You can specify full apps or models to export. By default the script will output\nto stdout. The <cite>\u2013to-file</cite> flag will save each app models into\n<cite>[app-dir]/domain-raw.py</cite>.</p>\n<p>See <cite>\u2013help</cite> for more options.</p>\n</div>\n<div id=\"as-a-library\">\n<h2>As a Library</h2>\n<p>If you\u2019d rather process the ouput your self then:</p>\n<pre>from django2scheamtics.exporter import SchematicsModel\nSchematicsModel.from_django(the_model_class)\n# or as a string\nSchematicsModel.from_django(the_model_class).to_string()\n</pre>\n</div>\n<div id=\"feedback\">\n<h2>Feedback</h2>\n<p>Let me know if this works (or doesn\u2019t) for you. Feedback is always welcome.</p>\n<p>Feedback with accompanying pull requests and tests will buy you a beer on me next\ntime you\u2019re in S\u00e3o Paulo. Or tea, if that\u2019s your thing.</p>\n</div>\n\n          </div>"}, "last_serial": 1192848, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 00:37:55 2020"}