{"info": {"author": "SQream", "author_email": "info@sqream.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": ".. role:: bash(code)\n   :language: bash\n\n===================================\nPython connector for SQream DB\n===================================\n\n* **Version:**  3.0.2\n\n* **Supported SQream DB versions:** >= 2.13, 2019.2 or newer recommended\n\nThe Python connector for SQream DB is a Python DB API 2.0-compliant interface for developing Python applications with SQream DB.\n\nThe SQream Python connector provides an interface for creating and running Python applications that can connect to a SQream DB database. It provides a lighter-weight alternative to working through native C++ or Java bindings, including JDBC and ODBC drivers.\n\npysqream conforms to Python DB-API specifications `PEP-249 <https://www.python.org/dev/peps/pep-0249/>`_\n\n``pysqream`` is native and pure Python, with minimal requirements. It can be installed with ``pip`` on any operating system, including Linux, Windows, and macOS.\n\nFor more information and a full API reference, see `SQream documentation's pysqream guide <https://sqream-docs.readthedocs.io/en/latest/guides/client_drivers/python/index.html>`_ .\n\nRequirements\n====================\n\n* Python 3.6.5+, with 3.7+ highly recommended\n\n* Cython (Optional, faster performance) - `pip3 install cython`\n\nInstalling the Python connector\n==================================\n\nPrerequisites\n----------------\n\n1. Python\n^^^^^^^^^^^^\n\nThe connector requires Python 3.6.5 or newer. To verify your version of Python:\n\n.. code-block:: console\n\n   $ python --version\n   Python 3.7.3\n\n\nNote: If both Python 2.x and 3.x are installed, you can run ``python3`` and ``pip3`` instead of ``python`` and ``pip`` respectively for the rest of this guide\n\n2. PIP\n^^^^^^^^^^^^\nThe Python connector is installed via ``pip``, the Python package manager and installer.\n\nWe recommend upgrading to the latest version of ``pip`` before installing. To verify that you are on the latest version, run the following command:\n\n.. code-block:: console\n\n   $ python -m pip install --upgrade pip\n   Collecting pip\n      Downloading https://files.pythonhosted.org/packages/00/b6/9cfa56b4081ad13874b0c6f96af8ce16cfbc1cb06bedf8e9164ce5551ec1/pip-19.3.1-py2.py3-none-any.whl (1.4MB)\n        |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.4MB 1.6MB/s\n   Installing collected packages: pip\n     Found existing installation: pip 19.1.1\n       Uninstalling pip-19.1.1:\n         Successfully uninstalled pip-19.1.1\n   Successfully installed pip-19.3.1\n\n.. note:: \n   * On macOS, you may want to use virtualenv to install Python and the connector, to ensure compatibility with the built-in Python environment\n   *  If you encounter an error including ``SSLError`` or ``WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.`` - please be sure to reinstall Python with SSL enabled, or use virtualenv or Anaconda.\n\n3. OpenSSL for Linux\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSome distributions of Python do not include OpenSSL. The Python connector relies on OpenSSL for secure connections to SQream DB.\n\n* To install OpenSSL on RHEL/CentOS\n\n   .. code-block:: console\n\n      $ sudo yum install -y libffi-devel openssl-devel\n\n* To install OpenSSL on Ubuntu\n\n   .. code-block:: console\n\n      $ sudo apt-get install libssl-dev libffi-dev -y\n\n4. Cython (optional)\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nOptional but recommended is Cython, which improves performance of Python applications.\n\n   .. code-block:: console\n\n      $ pip install cython\n\nInstall via pip\n-----------------\n\nThe Python connector is available via `PyPi <https://pypi.org/project/pysqream/>`_.\n\nInstall the connector with ``pip``:\n\n.. code-block:: console\n\n   $ pip install pysqream\n\n``pip`` will automatically installs all necessary libraries and modules.\n\nValidate the installation\n-----------------------------\n\nCreate a file called ``test.py`` (make sure to replace the parameters in the connection with the respective parameters for your SQream DB installation):\n\n.. code-block:: python\n\n   #!/usr/bin/env python\n\n   import pysqream\n\n   \"\"\"\n   Connection parameters include:\n   * IP/Hostname\n   * Port\n   * database name\n   * username\n   * password \n   * Connect through load balancer, or direct to worker (Default: false - direct to worker)\n   * use SSL connection (default: false)\n   * Optional service queue (default: 'sqream')\n   \"\"\"\n\n   # Create a connection object\n\n   con = pysqream.connect(host='127.0.0.1', port=5000, database='master'\n                      , username='sqream', password='sqream'\n                      , clustered=False)\n\n   # Create a new cursor\n   cur = con.cursor()\n\n   # Prepare and execute a query\n   cur.execute('select show_version()')\n\n   result = cur.fetchall() # `fetchall` gets the entire data set\n\n   print (f\"Version: {result[0][0]}\")\n\n   # This should print the SQream DB version. For example ``Version: v2020.1``.\n\n   # Finally, close the connection\n\n   con.close()\n\nRun the test file to verify that you can connect to SQream DB:\n\n.. code-block:: console\n\n   $ python test.py\n   Version: v2020.1\n\nIf all went well, you are now ready to build an application using the SQream DB Python connector!\n\nIf any connection error appears, verify that you have access to a running SQream DB and that the connection parameters are correct.\n\n\nFurther examples\n====================\n\nData load example\n-------------------\n\nThis example loads 10,000 rows of dummy data to a SQream DB instance\n\n.. code-block:: python\n\n   import pysqream\n   from datetime import date, datetime\n   from time import time\n\n   con = pysqream.connect(host='127.0.0.1', port=3108, database='master'\n                      , username='rhendricks', password='Tr0ub4dor&3'\n                      , clustered=True)\n\n   # Create a table for loading\n   create = 'create or replace table perf (b bool, t tinyint, sm smallint, i int, bi bigint, f real, d double, s varchar(12), ss nvarchar(20), dt date, dtt datetime)'\n   con.execute(create)\n\n   # After creating the table, we can load data into it with the INSERT command\n\n   # Create dummy data which matches the table we created\n   data = (False, 2, 12, 145, 84124234, 3.141, -4.3, \"Marty McFly\" , u\"\u30ad\u30a6\u30a4\u306f\u697d\u3057\u3044\u9ce5\u3067\u3059\" , date(2019, 12, 17), datetime(1955, 11, 4, 1, 23, 0, 0))\n\n\n   row_count = 10**4\n\n   # Get a new cursor\n   cur = con.cursor()\n   insert = 'insert into perf values (?,?,?,?,?,?,?,?,?,?,?)'\n   start = time()\n   cur.executemany(insert, [data] * row_count)\n   print (f\"Total insert time for {row_count} rows: {time() - start} seconds\")\n\n   # Close this cursor\n   cur.close()\n\n   # Verify that the data was inserted correctly\n   # Get a new cursor\n   cur = con.cursor()\n   cur.execute('select count(*) from perf')\n   result = cur.fetchall() # `fetchall` collects the entire data set\n   print (f\"Count of inserted rows: {result[0][0]}\")\n\n   # When done, close the cursor\n   cur.close()\n\n   # Close the connection\n   con.close()\n\n\nExample of data retrieval methods\n-----------------------------------------\n\n.. code-block:: python\n\n    # Assume a table structure:\n    # \"CREATE TABLE table_name (int_column int, varchar_column varchar(10))\"\n\n    # The select statement:\n    statement = 'SELECT int_column, varchar_column FROM table_name'\n    con.execute(statement)\n\n    first_row = con.fetchone() # Fetch one row at a time (first row)\n    second_row = con.fetchone() # Fetch one row at a time (second row)\n\n    # executing `fetchone` twice is equivalent to this form:\n    third_and_fourth_rows = con.fetchmany(2)\n\n    # To get all rows at once, use `fetchall`\n    remaining_rows = con.fetchall() \n\n    con.close()\n\n\nExample of a SET data loop for data loading\n-----------------------------------------------------\n\n.. code-block:: python\n\n    # Assume a table structure:\n    # \"CREATE TABLE table_name (int_column int, varchar_column varchar(10))\"\n\n    # Each `?` placeholder represents a column value that will be inserted\n    statement = 'INSERT INTO table_name(int_column, varchar_column) VALUES(?, ?)'\n\n    # To insert data, we execute the statement with `executemany`, and pass an array of values alongside it\n    data_rows = [(1, 's1'), (2, 's2'), (3, 's3')] # Sample data\n    con.executemany(statement, data_rows)\n\n    con.close()\n\n\nExample inserting data from a CSV\n-----------------------------------------\n\n.. code-block:: python\n\n    def insert_from_csv(con, table_name, csv_filename, field_delimiter = ',', null_markers = []):\n\n        # We will first ask SQream DB for some table information.\n        # This is important for understanding the number of columns, and will help\n        # to create an INSERT statement\n\n        column_info = con.execute(f\"select * from {table_name} limit 0\").description\n\n\n        def parse_datetime(v):\n            try:\n                return datetime.datetime.strptime(row[i], '%Y-%m-%d %H:%M:%S.%f')\n            except ValueError:\n                try: \n                    return datetime.datetime.strptime(row[i], '%Y-%m-%d %H:%M:%S')\n                except ValueError:\n                    return datetime.datetime.strptime(row[i], '%Y-%m-%d')\n\n        # Create enough placeholders (`?`) for the INSERT query string\n        qstring = ','.join(['?'] * len(column_info))\n        insert_statement = f\"insert into {table_name} values ({qstring})\"\n\n        # Open the CSV file\n        with open(csv_filename, mode='r') as csv_file:\n            csv_reader = csv.reader(csv_file, delimiter=field_delimiter)\n\n        # Execute the INSERT statement with the CSV data\n        con.executemany(insert_statement, [row for row in csv_reader]):\n\n\nExample saving the results of a query to a csv file\n-------------------------------------------------------------\n\n.. code-block:: python\n\n    def save_query(con, query, csv_filename, field_delimiter, null_marker):\n        # The query string has been passed from the outside, so we will now execute it:\n        column_info = con.execute(query).description\n\n        # With the query information, we will write a new CSV file\n        with open(csv_filename, 'x', newline='') as csvfile:\n            wr = csv.writer(csvfile, delimiter=field_delimiter,quoting=csv.QUOTE_MINIMAL)\n            # For each result row in a query, write the data out\n            for result_row in con:\n                    csv_row = []\n                    wr.writerow(result_row)\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SQream/pysqream", "keywords": "database db-api sqream sqreamdb", "license": "", "maintainer": "", "maintainer_email": "", "name": "pysqream", "package_url": "https://pypi.org/project/pysqream/", "platform": "", "project_url": "https://pypi.org/project/pysqream/", "project_urls": {"Homepage": "https://github.com/SQream/pysqream"}, "release_url": "https://pypi.org/project/pysqream/3.0.2/", "requires_dist": null, "requires_python": ">=3.6.5", "summary": "DB-API connector for SQream DB", "version": "3.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <ul>\n<li><strong>Version:</strong>  3.0.2</li>\n<li><strong>Supported SQream DB versions:</strong> &gt;= 2.13, 2019.2 or newer recommended</li>\n</ul>\n<p>The Python connector for SQream DB is a Python DB API 2.0-compliant interface for developing Python applications with SQream DB.</p>\n<p>The SQream Python connector provides an interface for creating and running Python applications that can connect to a SQream DB database. It provides a lighter-weight alternative to working through native C++ or Java bindings, including JDBC and ODBC drivers.</p>\n<p>pysqream conforms to Python DB-API specifications <a href=\"https://www.python.org/dev/peps/pep-0249/\" rel=\"nofollow\">PEP-249</a></p>\n<p><tt>pysqream</tt> is native and pure Python, with minimal requirements. It can be installed with <tt>pip</tt> on any operating system, including Linux, Windows, and macOS.</p>\n<p>For more information and a full API reference, see <a href=\"https://sqream-docs.readthedocs.io/en/latest/guides/client_drivers/python/index.html\" rel=\"nofollow\">SQream documentation\u2019s pysqream guide</a> .</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.6.5+, with 3.7+ highly recommended</li>\n<li>Cython (Optional, faster performance) - <cite>pip3 install cython</cite></li>\n</ul>\n</div>\n<div id=\"installing-the-python-connector\">\n<h2>Installing the Python connector</h2>\n<div id=\"prerequisites\">\n<h3>Prerequisites</h3>\n<div id=\"python\">\n<h4>1. Python</h4>\n<p>The connector requires Python 3.6.5 or newer. To verify your version of Python:</p>\n<pre><span class=\"gp\">$</span> python --version\n<span class=\"go\">Python 3.7.3</span>\n</pre>\n<p>Note: If both Python 2.x and 3.x are installed, you can run <tt>python3</tt> and <tt>pip3</tt> instead of <tt>python</tt> and <tt>pip</tt> respectively for the rest of this guide</p>\n</div>\n<div id=\"pip\">\n<h4>2. PIP</h4>\n<p>The Python connector is installed via <tt>pip</tt>, the Python package manager and installer.</p>\n<p>We recommend upgrading to the latest version of <tt>pip</tt> before installing. To verify that you are on the latest version, run the following command:</p>\n<pre><span class=\"gp\">$</span> python -m pip install --upgrade pip\n<span class=\"go\">Collecting pip\n   Downloading https://files.pythonhosted.org/packages/00/b6/9cfa56b4081ad13874b0c6f96af8ce16cfbc1cb06bedf8e9164ce5551ec1/pip-19.3.1-py2.py3-none-any.whl (1.4MB)\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.4MB 1.6MB/s\nInstalling collected packages: pip\n  Found existing installation: pip 19.1.1\n    Uninstalling pip-19.1.1:\n      Successfully uninstalled pip-19.1.1\nSuccessfully installed pip-19.3.1</span>\n</pre>\n<div>\n<p>Note</p>\n<ul>\n<li>On macOS, you may want to use virtualenv to install Python and the connector, to ensure compatibility with the built-in Python environment</li>\n<li>If you encounter an error including <tt>SSLError</tt> or <tt>WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.</tt> - please be sure to reinstall Python with SSL enabled, or use virtualenv or Anaconda.</li>\n</ul>\n</div>\n</div>\n<div id=\"openssl-for-linux\">\n<h4>3. OpenSSL for Linux</h4>\n<p>Some distributions of Python do not include OpenSSL. The Python connector relies on OpenSSL for secure connections to SQream DB.</p>\n<ul>\n<li><p>To install OpenSSL on RHEL/CentOS</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> sudo yum install -y libffi-devel openssl-devel\n</pre>\n</blockquote>\n</li>\n<li><p>To install OpenSSL on Ubuntu</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> sudo apt-get install libssl-dev libffi-dev -y\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"cython-optional\">\n<h4>4. Cython (optional)</h4>\n<p>Optional but recommended is Cython, which improves performance of Python applications.</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> pip install cython\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"install-via-pip\">\n<h3>Install via pip</h3>\n<p>The Python connector is available via <a href=\"https://pypi.org/project/pysqream/\" rel=\"nofollow\">PyPi</a>.</p>\n<p>Install the connector with <tt>pip</tt>:</p>\n<pre><span class=\"gp\">$</span> pip install pysqream\n</pre>\n<p><tt>pip</tt> will automatically installs all necessary libraries and modules.</p>\n</div>\n<div id=\"validate-the-installation\">\n<h3>Validate the installation</h3>\n<p>Create a file called <tt>test.py</tt> (make sure to replace the parameters in the connection with the respective parameters for your SQream DB installation):</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">pysqream</span>\n\n<span class=\"sd\">\"\"\"\nConnection parameters include:\n* IP/Hostname\n* Port\n* database name\n* username\n* password\n* Connect through load balancer, or direct to worker (Default: false - direct to worker)\n* use SSL connection (default: false)\n* Optional service queue (default: 'sqream')\n\"\"\"</span>\n\n<span class=\"c1\"># Create a connection object</span>\n\n<span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">pysqream</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">,</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s1\">'master'</span>\n                   <span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'sqream'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'sqream'</span>\n                   <span class=\"p\">,</span> <span class=\"n\">clustered</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a new cursor</span>\n<span class=\"n\">cur</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Prepare and execute a query</span>\n<span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">'select show_version()'</span><span class=\"p\">)</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span> <span class=\"c1\"># `fetchall` gets the entire data set</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Version: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This should print the SQream DB version. For example ``Version: v2020.1``.</span>\n\n<span class=\"c1\"># Finally, close the connection</span>\n\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>Run the test file to verify that you can connect to SQream DB:</p>\n<pre><span class=\"gp\">$</span> python test.py\n<span class=\"go\">Version: v2020.1</span>\n</pre>\n<p>If all went well, you are now ready to build an application using the SQream DB Python connector!</p>\n<p>If any connection error appears, verify that you have access to a running SQream DB and that the connection parameters are correct.</p>\n</div>\n</div>\n<div id=\"further-examples\">\n<h2>Further examples</h2>\n<div id=\"data-load-example\">\n<h3>Data load example</h3>\n<p>This example loads 10,000 rows of dummy data to a SQream DB instance</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pysqream</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">time</span>\n\n<span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">pysqream</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">3108</span><span class=\"p\">,</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s1\">'master'</span>\n                   <span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'rhendricks'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'Tr0ub4dor&amp;3'</span>\n                   <span class=\"p\">,</span> <span class=\"n\">clustered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a table for loading</span>\n<span class=\"n\">create</span> <span class=\"o\">=</span> <span class=\"s1\">'create or replace table perf (b bool, t tinyint, sm smallint, i int, bi bigint, f real, d double, s varchar(12), ss nvarchar(20), dt date, dtt datetime)'</span>\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">create</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># After creating the table, we can load data into it with the INSERT command</span>\n\n<span class=\"c1\"># Create dummy data which matches the table we created</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">145</span><span class=\"p\">,</span> <span class=\"mi\">84124234</span><span class=\"p\">,</span> <span class=\"mf\">3.141</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">4.3</span><span class=\"p\">,</span> <span class=\"s2\">\"Marty McFly\"</span> <span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s2\">\"\u30ad\u30a6\u30a4\u306f\u697d\u3057\u3044\u9ce5\u3067\u3059\"</span> <span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1955</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">row_count</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"mi\">4</span>\n\n<span class=\"c1\"># Get a new cursor</span>\n<span class=\"n\">cur</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span>\n<span class=\"n\">insert</span> <span class=\"o\">=</span> <span class=\"s1\">'insert into perf values (?,?,?,?,?,?,?,?,?,?,?)'</span>\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">executemany</span><span class=\"p\">(</span><span class=\"n\">insert</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">row_count</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Total insert time for </span><span class=\"si\">{</span><span class=\"n\">row_count</span><span class=\"si\">}</span><span class=\"s2\"> rows: </span><span class=\"si\">{</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"si\">}</span><span class=\"s2\"> seconds\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Close this cursor</span>\n<span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Verify that the data was inserted correctly</span>\n<span class=\"c1\"># Get a new cursor</span>\n<span class=\"n\">cur</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span>\n<span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">'select count(*) from perf'</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span> <span class=\"c1\"># `fetchall` collects the entire data set</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Count of inserted rows: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># When done, close the cursor</span>\n<span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Close the connection</span>\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-of-data-retrieval-methods\">\n<h3>Example of data retrieval methods</h3>\n<pre><span class=\"c1\"># Assume a table structure:</span>\n<span class=\"c1\"># \"CREATE TABLE table_name (int_column int, varchar_column varchar(10))\"</span>\n\n<span class=\"c1\"># The select statement:</span>\n<span class=\"n\">statement</span> <span class=\"o\">=</span> <span class=\"s1\">'SELECT int_column, varchar_column FROM table_name'</span>\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">statement</span><span class=\"p\">)</span>\n\n<span class=\"n\">first_row</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">fetchone</span><span class=\"p\">()</span> <span class=\"c1\"># Fetch one row at a time (first row)</span>\n<span class=\"n\">second_row</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">fetchone</span><span class=\"p\">()</span> <span class=\"c1\"># Fetch one row at a time (second row)</span>\n\n<span class=\"c1\"># executing `fetchone` twice is equivalent to this form:</span>\n<span class=\"n\">third_and_fourth_rows</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">fetchmany</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To get all rows at once, use `fetchall`</span>\n<span class=\"n\">remaining_rows</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-of-a-set-data-loop-for-data-loading\">\n<h3>Example of a SET data loop for data loading</h3>\n<pre><span class=\"c1\"># Assume a table structure:</span>\n<span class=\"c1\"># \"CREATE TABLE table_name (int_column int, varchar_column varchar(10))\"</span>\n\n<span class=\"c1\"># Each `?` placeholder represents a column value that will be inserted</span>\n<span class=\"n\">statement</span> <span class=\"o\">=</span> <span class=\"s1\">'INSERT INTO table_name(int_column, varchar_column) VALUES(?, ?)'</span>\n\n<span class=\"c1\"># To insert data, we execute the statement with `executemany`, and pass an array of values alongside it</span>\n<span class=\"n\">data_rows</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'s1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'s2'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'s3'</span><span class=\"p\">)]</span> <span class=\"c1\"># Sample data</span>\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">executemany</span><span class=\"p\">(</span><span class=\"n\">statement</span><span class=\"p\">,</span> <span class=\"n\">data_rows</span><span class=\"p\">)</span>\n\n<span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-inserting-data-from-a-csv\">\n<h3>Example inserting data from a CSV</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">insert_from_csv</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"p\">,</span> <span class=\"n\">csv_filename</span><span class=\"p\">,</span> <span class=\"n\">field_delimiter</span> <span class=\"o\">=</span> <span class=\"s1\">','</span><span class=\"p\">,</span> <span class=\"n\">null_markers</span> <span class=\"o\">=</span> <span class=\"p\">[]):</span>\n\n    <span class=\"c1\"># We will first ask SQream DB for some table information.</span>\n    <span class=\"c1\"># This is important for understanding the number of columns, and will help</span>\n    <span class=\"c1\"># to create an INSERT statement</span>\n\n    <span class=\"n\">column_info</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"select * from </span><span class=\"si\">{</span><span class=\"n\">table_name</span><span class=\"si\">}</span><span class=\"s2\"> limit 0\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">description</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">parse_datetime</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">strptime</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S.</span><span class=\"si\">%f</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">strptime</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S'</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">strptime</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Create enough placeholders (`?`) for the INSERT query string</span>\n    <span class=\"n\">qstring</span> <span class=\"o\">=</span> <span class=\"s1\">','</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s1\">'?'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">column_info</span><span class=\"p\">))</span>\n    <span class=\"n\">insert_statement</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"insert into </span><span class=\"si\">{</span><span class=\"n\">table_name</span><span class=\"si\">}</span><span class=\"s2\"> values (</span><span class=\"si\">{</span><span class=\"n\">qstring</span><span class=\"si\">}</span><span class=\"s2\">)\"</span>\n\n    <span class=\"c1\"># Open the CSV file</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">csv_filename</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">csv_file</span><span class=\"p\">:</span>\n        <span class=\"n\">csv_reader</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">csv_file</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"n\">field_delimiter</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Execute the INSERT statement with the CSV data</span>\n    <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">executemany</span><span class=\"p\">(</span><span class=\"n\">insert_statement</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">row</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">csv_reader</span><span class=\"p\">]):</span>\n</pre>\n</div>\n<div id=\"example-saving-the-results-of-a-query-to-a-csv-file\">\n<h3>Example saving the results of a query to a csv file</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">save_query</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">csv_filename</span><span class=\"p\">,</span> <span class=\"n\">field_delimiter</span><span class=\"p\">,</span> <span class=\"n\">null_marker</span><span class=\"p\">):</span>\n    <span class=\"c1\"># The query string has been passed from the outside, so we will now execute it:</span>\n    <span class=\"n\">column_info</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">description</span>\n\n    <span class=\"c1\"># With the query information, we will write a new CSV file</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">csv_filename</span><span class=\"p\">,</span> <span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">newline</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">csvfile</span><span class=\"p\">:</span>\n        <span class=\"n\">wr</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">writer</span><span class=\"p\">(</span><span class=\"n\">csvfile</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"n\">field_delimiter</span><span class=\"p\">,</span><span class=\"n\">quoting</span><span class=\"o\">=</span><span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">QUOTE_MINIMAL</span><span class=\"p\">)</span>\n        <span class=\"c1\"># For each result row in a query, write the data out</span>\n        <span class=\"k\">for</span> <span class=\"n\">result_row</span> <span class=\"ow\">in</span> <span class=\"n\">con</span><span class=\"p\">:</span>\n                <span class=\"n\">csv_row</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"n\">wr</span><span class=\"o\">.</span><span class=\"n\">writerow</span><span class=\"p\">(</span><span class=\"n\">result_row</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6991552, "releases": {"2.1.3a2": [{"comment_text": "", "digests": {"md5": "643ed3195a4102cb2a2b8fdfbe50c65d", "sha256": "0fbcfa28a270d4c89565e1f08d9a3acd7e506266bfe99d07a1e4b97402c6666f"}, "downloads": -1, "filename": "pysqream-2.1.3a2-py3-none-any.whl", "has_sig": false, "md5_digest": "643ed3195a4102cb2a2b8fdfbe50c65d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, ~=3.3", "size": 17168, "upload_time": "2019-06-29T10:15:07", "upload_time_iso_8601": "2019-06-29T10:15:07.515527Z", "url": "https://files.pythonhosted.org/packages/d0/8a/abf5d462a628f22c63847f8e4dc551dafe5843bd0d1f79a75eb3ce8c8e50/pysqream-2.1.3a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33eb5dd5246157fee6db9b91be4f9bcd", "sha256": "4b7cc551b7f2b96c64cdb4b79f9dea3fb3bf165a66f28924519d663d4401c55d"}, "downloads": -1, "filename": "pysqream-2.1.3a2.tar.gz", "has_sig": false, "md5_digest": "33eb5dd5246157fee6db9b91be4f9bcd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, ~=3.3", "size": 17113, "upload_time": "2019-06-29T10:15:09", "upload_time_iso_8601": "2019-06-29T10:15:09.708941Z", "url": "https://files.pythonhosted.org/packages/7d/b8/49002cdbe2e1a63b589e2da70ad5df2c0fbaae8d8f5e16e3dc2ff796dde8/pysqream-2.1.3a2.tar.gz", "yanked": false}], "2.1.4a1": [{"comment_text": "", "digests": {"md5": "6e0948bcca098e4647b4e6120a270d32", "sha256": "09cd38d762520195490239f053fa320e258864719162530ad2dec2f05b217177"}, "downloads": -1, "filename": "pysqream-2.1.4a1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e0948bcca098e4647b4e6120a270d32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, ~=3.3", "size": 17235, "upload_time": "2019-07-22T15:14:29", "upload_time_iso_8601": "2019-07-22T15:14:29.188228Z", "url": "https://files.pythonhosted.org/packages/f9/b8/f71b19e154502232a134b5d830162e26c825c177c97d874a22429e6a90be/pysqream-2.1.4a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8851f3385c4558376078e1a4ac292479", "sha256": "dd82f9936851f2c493dde06711731d3068ca0eb63892f618efbe2e24cd12a7c0"}, "downloads": -1, "filename": "pysqream-2.1.4a1.tar.gz", "has_sig": false, "md5_digest": "8851f3385c4558376078e1a4ac292479", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, ~=3.3", "size": 17293, "upload_time": "2019-07-22T15:14:32", "upload_time_iso_8601": "2019-07-22T15:14:32.898784Z", "url": "https://files.pythonhosted.org/packages/65/f5/53b78ad5c93fac7c9e0e2ef812d3ccd947dbb098de70f3f84f4392524d13/pysqream-2.1.4a1.tar.gz", "yanked": false}], "2.1.4a2": [{"comment_text": "", "digests": {"md5": "4252f5a3286a9e99ad9d4cf4279496f1", "sha256": "c9745908707e5ced4a417d9efd233084a3c7a45f64a04fee3d334229c22da9d6"}, "downloads": -1, "filename": "pysqream-2.1.4a2-py3-none-any.whl", "has_sig": false, "md5_digest": "4252f5a3286a9e99ad9d4cf4279496f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, ~=3.3", "size": 17353, "upload_time": "2019-07-22T15:14:30", "upload_time_iso_8601": "2019-07-22T15:14:30.779059Z", "url": "https://files.pythonhosted.org/packages/1c/4f/f86b5b89b9c31900d8dd7c3c6a8d7639daa66f65e06a5911f275135f5e89/pysqream-2.1.4a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52b7f5d2b2315eaccb805a07ba41d1ec", "sha256": "826dd3fd0523314999341c11040398ba142a72caa673e8468a3cc14e1e7d268e"}, "downloads": -1, "filename": "pysqream-2.1.4a2.tar.gz", "has_sig": false, "md5_digest": "52b7f5d2b2315eaccb805a07ba41d1ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, ~=3.3", "size": 17404, "upload_time": "2019-07-22T15:14:34", "upload_time_iso_8601": "2019-07-22T15:14:34.046784Z", "url": "https://files.pythonhosted.org/packages/39/53/dae0f420637a6cde292b8a5f15fc7488509e3dd6f436428ac44ba182d5a4/pysqream-2.1.4a2.tar.gz", "yanked": false}], "2.1.4a3": [{"comment_text": "", "digests": {"md5": "2a2335f55ab4975c0e2c46ad1ed5fde6", "sha256": "6e47e45bbfb5a7bea341964f6922eb97735778a36a09768e4a20a7e30cb511a7"}, "downloads": -1, "filename": "pysqream-2.1.4a3-py3-none-any.whl", "has_sig": false, "md5_digest": "2a2335f55ab4975c0e2c46ad1ed5fde6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, ~=3.3", "size": 17619, "upload_time": "2019-08-05T14:54:31", "upload_time_iso_8601": "2019-08-05T14:54:31.532293Z", "url": "https://files.pythonhosted.org/packages/59/9f/39c141e1f7835b7975ea347e2a0209519888d54ddf52b9d559f85eb0b701/pysqream-2.1.4a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1ba716f1a959e98581b4ef97ed60a8a", "sha256": "5dab6d89afe543062dc3b457f2ef8da2ffacbda2ff785a038743e90f2c4855b2"}, "downloads": -1, "filename": "pysqream-2.1.4a3.tar.gz", "has_sig": false, "md5_digest": "b1ba716f1a959e98581b4ef97ed60a8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, ~=3.3", "size": 18801, "upload_time": "2019-08-05T14:54:33", "upload_time_iso_8601": "2019-08-05T14:54:33.637172Z", "url": "https://files.pythonhosted.org/packages/44/a1/58729c8bc50e45d4840c1ad377df5558623d1da9532a41daca27e369f7f7/pysqream-2.1.4a3.tar.gz", "yanked": false}], "2.1.4a5": [{"comment_text": "", "digests": {"md5": "e8c63aec30ec4b6a5d64b3b1553e69b5", "sha256": "ce00a9b68ea35be0902f4ab8d20e0c1f36f818b03791ff1e60cd9ef0d3ef08d5"}, "downloads": -1, "filename": "pysqream-2.1.4a5-py3-none-any.whl", "has_sig": false, "md5_digest": "e8c63aec30ec4b6a5d64b3b1553e69b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, ~=3.3", "size": 17628, "upload_time": "2019-08-06T16:26:26", "upload_time_iso_8601": "2019-08-06T16:26:26.166267Z", "url": "https://files.pythonhosted.org/packages/54/5e/e3e8b9f0d6140d4f03999890439dcb33bc58448028fd4d845ff7dac65987/pysqream-2.1.4a5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b70c807c95d28c0b116ceb2a1f28c84", "sha256": "fdc50c02a333d4441f58301e65d9d288060a45d0571bcfd6633642fc7edd8f5a"}, "downloads": -1, "filename": "pysqream-2.1.4a5.tar.gz", "has_sig": false, "md5_digest": "6b70c807c95d28c0b116ceb2a1f28c84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, ~=3.3", "size": 18815, "upload_time": "2019-08-06T16:26:27", "upload_time_iso_8601": "2019-08-06T16:26:27.798260Z", "url": "https://files.pythonhosted.org/packages/c5/43/b16269e8ad2e30ed572d77423ca1644c8d96e729313537dca39fd4aa33d2/pysqream-2.1.4a5.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "e72e8a8c5d2b42a49c10ae6a67f55429", "sha256": "175d91f9aeee67198082020f85c1db2d558f53fed659a895d2b1fd3b5a107b2c"}, "downloads": -1, "filename": "pysqream-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e72e8a8c5d2b42a49c10ae6a67f55429", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.1", "size": 18244, "upload_time": "2020-01-08T09:16:27", "upload_time_iso_8601": "2020-01-08T09:16:27.769868Z", "url": "https://files.pythonhosted.org/packages/b6/a0/bf8d617ff99894ea322aa598eec99a9917347ba8dcd7aacbd29c7edf3ed1/pysqream-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff59b8028228a56e7d6bc5a821c2cf20", "sha256": "44a07f0fda262da980d2a2b5fb548c38b9bbf63057c3c1699669e784954368a1"}, "downloads": -1, "filename": "pysqream-3.0.0.tar.gz", "has_sig": false, "md5_digest": "ff59b8028228a56e7d6bc5a821c2cf20", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.1", "size": 21472, "upload_time": "2020-01-08T09:16:29", "upload_time_iso_8601": "2020-01-08T09:16:29.244875Z", "url": "https://files.pythonhosted.org/packages/ae/d1/13f38cd3e3b40fecbc5e5adfdeb6af2daf29aef8e1dfcdb52f5d2fb5045f/pysqream-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "8950710e82d6f7d2f9043ef6225f209c", "sha256": "26fc259a56c9f4a34a587f4eb3b56d2fc576de2f0b8dff3dd995b4597c5db669"}, "downloads": -1, "filename": "pysqream-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8950710e82d6f7d2f9043ef6225f209c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.5", "size": 18244, "upload_time": "2020-01-09T14:56:44", "upload_time_iso_8601": "2020-01-09T14:56:44.388813Z", "url": "https://files.pythonhosted.org/packages/43/03/d8b3824b19cc838c1d2686e31b089db18516aa7d91c1954d04115568b1e7/pysqream-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8139fc150ebc7e1e8d07200df3998d92", "sha256": "f0ffdcc787f12ac1e27300b2e0f7951282c31cee7f5ed8ac8c7ecfd67b1b2b10"}, "downloads": -1, "filename": "pysqream-3.0.1.tar.gz", "has_sig": false, "md5_digest": "8139fc150ebc7e1e8d07200df3998d92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.5", "size": 21486, "upload_time": "2020-01-09T14:56:45", "upload_time_iso_8601": "2020-01-09T14:56:45.966650Z", "url": "https://files.pythonhosted.org/packages/37/86/fff25d6f8f1da537cca3d478e6a30a32360b1e14df49f8151f5a6d497cac/pysqream-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "1210ef9aa6f27e6c80a8ce3ce5bf5d61", "sha256": "60a64e0e1113abc6553ecfa233d3360acd09bc7819d94c19d5a232bda2fd91f4"}, "downloads": -1, "filename": "pysqream-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1210ef9aa6f27e6c80a8ce3ce5bf5d61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.5", "size": 18348, "upload_time": "2020-04-10T08:03:12", "upload_time_iso_8601": "2020-04-10T08:03:12.593482Z", "url": "https://files.pythonhosted.org/packages/6b/ba/c6c4f5a106ee65332e69eec581a286db0397186c067d9e7668105967535e/pysqream-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09f01b0e9dfc2cbe9eecb4ed4586266a", "sha256": "65471dfcba991332974fe261772f6b67c0b80277bcadbd8db02ed824eca16caa"}, "downloads": -1, "filename": "pysqream-3.0.2.tar.gz", "has_sig": false, "md5_digest": "09f01b0e9dfc2cbe9eecb4ed4586266a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.5", "size": 21576, "upload_time": "2020-04-10T08:03:15", "upload_time_iso_8601": "2020-04-10T08:03:15.052273Z", "url": "https://files.pythonhosted.org/packages/b2/d2/423097dbaaf495dc423bdb0058469c5c8599a7e69044a86e66dfa3d21fa0/pysqream-3.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1210ef9aa6f27e6c80a8ce3ce5bf5d61", "sha256": "60a64e0e1113abc6553ecfa233d3360acd09bc7819d94c19d5a232bda2fd91f4"}, "downloads": -1, "filename": "pysqream-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1210ef9aa6f27e6c80a8ce3ce5bf5d61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.5", "size": 18348, "upload_time": "2020-04-10T08:03:12", "upload_time_iso_8601": "2020-04-10T08:03:12.593482Z", "url": "https://files.pythonhosted.org/packages/6b/ba/c6c4f5a106ee65332e69eec581a286db0397186c067d9e7668105967535e/pysqream-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09f01b0e9dfc2cbe9eecb4ed4586266a", "sha256": "65471dfcba991332974fe261772f6b67c0b80277bcadbd8db02ed824eca16caa"}, "downloads": -1, "filename": "pysqream-3.0.2.tar.gz", "has_sig": false, "md5_digest": "09f01b0e9dfc2cbe9eecb4ed4586266a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.5", "size": 21576, "upload_time": "2020-04-10T08:03:15", "upload_time_iso_8601": "2020-04-10T08:03:15.052273Z", "url": "https://files.pythonhosted.org/packages/b2/d2/423097dbaaf495dc423bdb0058469c5c8599a7e69044a86e66dfa3d21fa0/pysqream-3.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:08 2020"}