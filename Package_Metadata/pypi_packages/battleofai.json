{"info": {"author": "Linus Bartsch", "author_email": "linus.pypi@mabasoft.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "# Battle of AI - Python library\n\nObject-oriented easy2use solution for interacting with https://battleofai.net/ \\'s API.\n\nA short summary of the basic features.\n\n#### Configure your client easily.\n\n```python\nfrom battleofai import Client\n\nclient = Client(credentials=('username', 'password'))\n\n# if you want to export your config\nclient.config.from_python_file('config.py')\n\n# or use json\nclient.config.from_json_file('config.json')\n\n```\n\n#### Play games automatically.\n```python\nfrom battleofai import Client, Core\n\n\nclient = Client()  # specify credentials\n\n\n@client.callback()\ndef turn(board, symbol):\n    for x_pos, columns in enumerate(board):\n        for y_pos, field in enumerate(columns):\n            if field == '#':  # if position is free\n                return x_pos, y_pos  # set my stone\n\n\nclient.play(Core)\n\n```\n\n#### Play games manually.\n```python\nfrom battleofai import Client, Core, GameState\nimport time\n\n\nclient = Client()  # specify credentials\n\n\ndef turn(board, symbol):\n    for x_pos, columns in enumerate(board):\n        for y_pos, field in enumerate(columns):\n            if field == '#':  # if position is free\n                return x_pos, y_pos  # set my stone\n\n\ngame = Core.create_game()\n\nclient.login()\n\nmy_match = Core(callback=turn)\nmy_match.join_game(client, game)\n\n# then either\nmy_match.play()\n\n# or even something like this\nplaying = True\nwhile playing:\n    game.update()\n\n    if not game.state == GameState.STARTED:\n        break\n\n    if my_match.is_active:\n        resp = my_match.make_turn()\n\n        if resp.status_code == 200 and 'false' in resp.text:\n            playing = False\n\n    time.sleep(5)\n\n```\n\n#### Manage games.\n```python\nfrom battleofai import Game, GameState, Core\n\nmy_game = Game.get(game_id=100)\nprint(my_game.players)\n\nopen_games = Game.list(game_state=GameState.WAITING)\n\nnew_game = Game.create(Core.__game_name__)\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LiBa001/python-battleofai", "keywords": "wrapper library API AI python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "battleofai", "package_url": "https://pypi.org/project/battleofai/", "platform": "", "project_url": "https://pypi.org/project/battleofai/", "project_urls": {"API": "https://games.battleofai.net/api/", "Homepage": "https://github.com/LiBa001/python-battleofai", "Related project": "https://github.com/TheMorpheus407/BattleOfAI"}, "release_url": "https://pypi.org/project/battleofai/0.1.1/", "requires_dist": ["requests"], "requires_python": ">=3.6", "summary": "A wrapper for the battleofai API.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Battle of AI - Python library</h1>\n<p>Object-oriented easy2use solution for interacting with <a href=\"https://battleofai.net/\" rel=\"nofollow\">https://battleofai.net/</a> 's API.</p>\n<p>A short summary of the basic features.</p>\n<h4>Configure your client easily.</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">battleofai</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># if you want to export your config</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_python_file</span><span class=\"p\">(</span><span class=\"s1\">'config.py'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or use json</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_json_file</span><span class=\"p\">(</span><span class=\"s1\">'config.json'</span><span class=\"p\">)</span>\n</pre>\n<h4>Play games automatically.</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">battleofai</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">Core</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">()</span>  <span class=\"c1\"># specify credentials</span>\n\n\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">callback</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">turn</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"n\">symbol</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">x_pos</span><span class=\"p\">,</span> <span class=\"n\">columns</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">y_pos</span><span class=\"p\">,</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">field</span> <span class=\"o\">==</span> <span class=\"s1\">'#'</span><span class=\"p\">:</span>  <span class=\"c1\"># if position is free</span>\n                <span class=\"k\">return</span> <span class=\"n\">x_pos</span><span class=\"p\">,</span> <span class=\"n\">y_pos</span>  <span class=\"c1\"># set my stone</span>\n\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">(</span><span class=\"n\">Core</span><span class=\"p\">)</span>\n</pre>\n<h4>Play games manually.</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">battleofai</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">Core</span><span class=\"p\">,</span> <span class=\"n\">GameState</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">()</span>  <span class=\"c1\"># specify credentials</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">turn</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">,</span> <span class=\"n\">symbol</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">x_pos</span><span class=\"p\">,</span> <span class=\"n\">columns</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">y_pos</span><span class=\"p\">,</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">field</span> <span class=\"o\">==</span> <span class=\"s1\">'#'</span><span class=\"p\">:</span>  <span class=\"c1\"># if position is free</span>\n                <span class=\"k\">return</span> <span class=\"n\">x_pos</span><span class=\"p\">,</span> <span class=\"n\">y_pos</span>  <span class=\"c1\"># set my stone</span>\n\n\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">Core</span><span class=\"o\">.</span><span class=\"n\">create_game</span><span class=\"p\">()</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_match</span> <span class=\"o\">=</span> <span class=\"n\">Core</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">turn</span><span class=\"p\">)</span>\n<span class=\"n\">my_match</span><span class=\"o\">.</span><span class=\"n\">join_game</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># then either</span>\n<span class=\"n\">my_match</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># or even something like this</span>\n<span class=\"n\">playing</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"k\">while</span> <span class=\"n\">playing</span><span class=\"p\">:</span>\n    <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">state</span> <span class=\"o\">==</span> <span class=\"n\">GameState</span><span class=\"o\">.</span><span class=\"n\">STARTED</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">my_match</span><span class=\"o\">.</span><span class=\"n\">is_active</span><span class=\"p\">:</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">my_match</span><span class=\"o\">.</span><span class=\"n\">make_turn</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span> <span class=\"ow\">and</span> <span class=\"s1\">'false'</span> <span class=\"ow\">in</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">:</span>\n            <span class=\"n\">playing</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h4>Manage games.</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">battleofai</span> <span class=\"kn\">import</span> <span class=\"n\">Game</span><span class=\"p\">,</span> <span class=\"n\">GameState</span><span class=\"p\">,</span> <span class=\"n\">Core</span>\n\n<span class=\"n\">my_game</span> <span class=\"o\">=</span> <span class=\"n\">Game</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">game_id</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_game</span><span class=\"o\">.</span><span class=\"n\">players</span><span class=\"p\">)</span>\n\n<span class=\"n\">open_games</span> <span class=\"o\">=</span> <span class=\"n\">Game</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">game_state</span><span class=\"o\">=</span><span class=\"n\">GameState</span><span class=\"o\">.</span><span class=\"n\">WAITING</span><span class=\"p\">)</span>\n\n<span class=\"n\">new_game</span> <span class=\"o\">=</span> <span class=\"n\">Game</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Core</span><span class=\"o\">.</span><span class=\"n\">__game_name__</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 4320540, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f970b28269368b15c68102a83808bfd2", "sha256": "1e0d5f71c03aca7a29af7a18dab6811f60f66c0e3a55a2c899ba9f644402954f"}, "downloads": -1, "filename": "battleofai-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f970b28269368b15c68102a83808bfd2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8137, "upload_time": "2018-09-28T15:09:37", "upload_time_iso_8601": "2018-09-28T15:09:37.022107Z", "url": "https://files.pythonhosted.org/packages/98/ba/f2cb83d98b5e1ca47304a052f1fc21f61baf7ba33546776246cee15efffd/battleofai-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc59ac34400e7d5b16e42b4381168ebb", "sha256": "8e1ea1c605a9647e46782e8d65d0c79c3bc0c97a92c1db6205b0375ab2eaafd5"}, "downloads": -1, "filename": "battleofai-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dc59ac34400e7d5b16e42b4381168ebb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5547, "upload_time": "2018-09-28T14:53:17", "upload_time_iso_8601": "2018-09-28T14:53:17.720805Z", "url": "https://files.pythonhosted.org/packages/40/3c/a3b048262c8954bff7d9c8c4de0730fb999dc31dce916fccafcf629a4a15/battleofai-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d40c7dd8d07260cde57203b13b1745d8", "sha256": "d22043476730bdc2831c851146997e83375ca8726cc94d2113fd480d8e51601a"}, "downloads": -1, "filename": "battleofai-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d40c7dd8d07260cde57203b13b1745d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8160, "upload_time": "2018-09-28T15:42:13", "upload_time_iso_8601": "2018-09-28T15:42:13.675315Z", "url": "https://files.pythonhosted.org/packages/c4/22/6093434e35e6bf77b6fb4d1434ea6fd90d19c27fe6d3367217565ecea7d4/battleofai-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d40c7dd8d07260cde57203b13b1745d8", "sha256": "d22043476730bdc2831c851146997e83375ca8726cc94d2113fd480d8e51601a"}, "downloads": -1, "filename": "battleofai-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d40c7dd8d07260cde57203b13b1745d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8160, "upload_time": "2018-09-28T15:42:13", "upload_time_iso_8601": "2018-09-28T15:42:13.675315Z", "url": "https://files.pythonhosted.org/packages/c4/22/6093434e35e6bf77b6fb4d1434ea6fd90d19c27fe6d3367217565ecea7d4/battleofai-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:14:43 2020"}