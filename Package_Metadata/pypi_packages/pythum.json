{"info": {"author": "metadeta96", "author_email": "metadeta96@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pythum\n\nSimple minimalist quantum computing simalation for python\n\n```python\nimport pythum\n```\n\n## Usage\n\n### Qubit\n\nClass for qubit manipulation and instanciation by notation\n\n```python\nfrom pythum import Qubit\n\nqubit = Qubit()\n```\n\n> |0>\n\n#### Public Methods\n\n##### Qubit.from_notation(cls, value: str) -> 'Qubit'\n\nInstanciate a qubit by the formal notation.\n\nThe following are possible values:\n\n* \"|0>\": 0\n* \"|1>\": 1\n* \"|10>\", \"|01>\": super position\n\n```python\nfrom pythum import Qubit\n\nqubit1 = Qubit.from_notation(\"|0>\")  # 0\nqubit2 = Qubit.from_notation(\"|1>\")  # 1\nqubit3 = Qubit.from_notation(\"|10>\")  # Super position\n```\n\n> |0>\n> |1>\n> |01>\n\n##### Qubit.from_qubit(cls, qubit: 'Qubit') -> 'Qubit'\n\nInstanciate a copy of another qubit.\n\n```python\nfrom pythum import Qubit\n\nqubit1 = Qubit.from_notation(\"|1>\")  # 1\nqubit2 = Qubit.from_qubit(qubit1)  # 1\n```\n\n> |1>\n> |1>\n\n##### up(self) -> 'self'\n\nPoints up the eletron.\n\nThe outcome of any measure will always be 1\n\n```python\nfrom pythum import Qubit\n\nqubit = Qubit()  # 0\nqubit.up()       # 1\n```\n\n> |1>\n\n##### down(self) -> 'self'\n\nPoints down the eletron.\n\nThe outcome of any measure will always be 0\n\n```python\nfrom pythum import Qubit\n\nqubit = Qubit()  # 0\nqubit.up()       # 1\n```\n\n> |0>\n\n##### left(self) -> 'self'\n\nPoints the eletronto the left.\n\nThe outcome of a measure may be 0 or 1\n\n```python\nfrom pythum import Qubit\n\nqubit = Qubit().left()  # Super position\n```\n\n> |01>\n\n##### right(self) -> 'self'\n\nPoints the eletronto the right.\n\nThe outcome of a measure may be 0 or 1\n\n```python\nfrom pythum import Qubit\n\nqubit = Qubit().left()  # Super position\n```\n\n> |01>\n\n#### Properties\n\n##### alpha\n\nAlpha probability for mesuring 0.\n\nThe returned probability is a number between 0 and 1.\n\n```python\nfrom pythum import Qubit\n\nQubit().alpha\nQubit().up().alpha\nQubit().left().alpha\nQubit().right().alpha\n```\n\n> 1\n> 0\n> 0.5\n> 0.5\n\n##### beta\n\nBeta probability for mesuring 1\n\nThe returned probability is a number between 0 and 1.\n\n```python\nfrom pythum import Qubit\n\nQubit().beta\nQubit().up().beta\nQubit().left().beta\nQubit().right().beta\n```\n\n> 0\n> 1\n> 0.5\n> 0.5\n\n### Qublock\n\n#### Public methods\n\n##### __init__(self, value: Union[int, 'Qublock', List[Qubit]])\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/metadeta96/pythum", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/metadeta96/pythum", "keywords": "quantum,python,pythum,computing,simulator,simulation", "license": "", "maintainer": "", "maintainer_email": "", "name": "pythum", "package_url": "https://pypi.org/project/pythum/", "platform": "", "project_url": "https://pypi.org/project/pythum/", "project_urls": {"Download": "https://github.com/metadeta96/pythum", "Homepage": "https://github.com/metadeta96/pythum"}, "release_url": "https://pypi.org/project/pythum/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Simple minimalist quantum computing simalation for python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pythum</h1>\n<p>Simple minimalist quantum computing simalation for python</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pythum</span>\n</pre>\n<h2>Usage</h2>\n<h3>Qubit</h3>\n<p>Class for qubit manipulation and instanciation by notation</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"p\">()</span>\n</pre>\n<blockquote>\n<p>|0&gt;</p>\n</blockquote>\n<h4>Public Methods</h4>\n<h5>Qubit.from_notation(cls, value: str) -&gt; 'Qubit'</h5>\n<p>Instanciate a qubit by the formal notation.</p>\n<p>The following are possible values:</p>\n<ul>\n<li>\"|0&gt;\": 0</li>\n<li>\"|1&gt;\": 1</li>\n<li>\"|10&gt;\", \"|01&gt;\": super position</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit1</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"o\">.</span><span class=\"n\">from_notation</span><span class=\"p\">(</span><span class=\"s2\">\"|0&gt;\"</span><span class=\"p\">)</span>  <span class=\"c1\"># 0</span>\n<span class=\"n\">qubit2</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"o\">.</span><span class=\"n\">from_notation</span><span class=\"p\">(</span><span class=\"s2\">\"|1&gt;\"</span><span class=\"p\">)</span>  <span class=\"c1\"># 1</span>\n<span class=\"n\">qubit3</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"o\">.</span><span class=\"n\">from_notation</span><span class=\"p\">(</span><span class=\"s2\">\"|10&gt;\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Super position</span>\n</pre>\n<blockquote>\n<p>|0&gt;\n|1&gt;\n|01&gt;</p>\n</blockquote>\n<h5>Qubit.from_qubit(cls, qubit: 'Qubit') -&gt; 'Qubit'</h5>\n<p>Instanciate a copy of another qubit.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit1</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"o\">.</span><span class=\"n\">from_notation</span><span class=\"p\">(</span><span class=\"s2\">\"|1&gt;\"</span><span class=\"p\">)</span>  <span class=\"c1\"># 1</span>\n<span class=\"n\">qubit2</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"o\">.</span><span class=\"n\">from_qubit</span><span class=\"p\">(</span><span class=\"n\">qubit1</span><span class=\"p\">)</span>  <span class=\"c1\"># 1</span>\n</pre>\n<blockquote>\n<p>|1&gt;\n|1&gt;</p>\n</blockquote>\n<h5>up(self) -&gt; 'self'</h5>\n<p>Points up the eletron.</p>\n<p>The outcome of any measure will always be 1</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"p\">()</span>  <span class=\"c1\"># 0</span>\n<span class=\"n\">qubit</span><span class=\"o\">.</span><span class=\"n\">up</span><span class=\"p\">()</span>       <span class=\"c1\"># 1</span>\n</pre>\n<blockquote>\n<p>|1&gt;</p>\n</blockquote>\n<h5>down(self) -&gt; 'self'</h5>\n<p>Points down the eletron.</p>\n<p>The outcome of any measure will always be 0</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"p\">()</span>  <span class=\"c1\"># 0</span>\n<span class=\"n\">qubit</span><span class=\"o\">.</span><span class=\"n\">up</span><span class=\"p\">()</span>       <span class=\"c1\"># 1</span>\n</pre>\n<blockquote>\n<p>|0&gt;</p>\n</blockquote>\n<h5>left(self) -&gt; 'self'</h5>\n<p>Points the eletronto the left.</p>\n<p>The outcome of a measure may be 0 or 1</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">()</span>  <span class=\"c1\"># Super position</span>\n</pre>\n<blockquote>\n<p>|01&gt;</p>\n</blockquote>\n<h5>right(self) -&gt; 'self'</h5>\n<p>Points the eletronto the right.</p>\n<p>The outcome of a measure may be 0 or 1</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">qubit</span> <span class=\"o\">=</span> <span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">()</span>  <span class=\"c1\"># Super position</span>\n</pre>\n<blockquote>\n<p>|01&gt;</p>\n</blockquote>\n<h4>Properties</h4>\n<h5>alpha</h5>\n<p>Alpha probability for mesuring 0.</p>\n<p>The returned probability is a number between 0 and 1.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">alpha</span>\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">up</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">alpha</span>\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">alpha</span>\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">alpha</span>\n</pre>\n<blockquote>\n<p>1\n0\n0.5\n0.5</p>\n</blockquote>\n<h5>beta</h5>\n<p>Beta probability for mesuring 1</p>\n<p>The returned probability is a number between 0 and 1.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pythum</span> <span class=\"kn\">import</span> <span class=\"n\">Qubit</span>\n\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">beta</span>\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">up</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">beta</span>\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">beta</span>\n<span class=\"n\">Qubit</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">beta</span>\n</pre>\n<blockquote>\n<p>0\n1\n0.5\n0.5</p>\n</blockquote>\n<h3>Qublock</h3>\n<h4>Public methods</h4>\n<h5><strong>init</strong>(self, value: Union[int, 'Qublock', List[Qubit]])</h5>\n\n          </div>"}, "last_serial": 4546845, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1000b2ba8655be94a418e5292b6d6794", "sha256": "5bd30b220dcf50b52105ac3bab7edbfe4a6f67a8cf5f78b30e379fccf7fe17bb"}, "downloads": -1, "filename": "pythum-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1000b2ba8655be94a418e5292b6d6794", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5004, "upload_time": "2018-11-30T11:34:30", "upload_time_iso_8601": "2018-11-30T11:34:30.774487Z", "url": "https://files.pythonhosted.org/packages/06/2f/c139b0ba7ed61c38946ccc9e005b059438beb29fdc33a4b90e3c2fd37d1c/pythum-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3104e19977fbd95128278c87d3b063f", "sha256": "4ae0bde3a3802be9ec480641bbe35341cdc527d9e1b2b99e14de62bb7e61487b"}, "downloads": -1, "filename": "pythum-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d3104e19977fbd95128278c87d3b063f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3408, "upload_time": "2018-11-30T11:34:32", "upload_time_iso_8601": "2018-11-30T11:34:32.434792Z", "url": "https://files.pythonhosted.org/packages/0c/c3/680eadbf6802f0a943c54c0ee4d5c23902ce7f227677a28acff6f3d36124/pythum-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1000b2ba8655be94a418e5292b6d6794", "sha256": "5bd30b220dcf50b52105ac3bab7edbfe4a6f67a8cf5f78b30e379fccf7fe17bb"}, "downloads": -1, "filename": "pythum-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1000b2ba8655be94a418e5292b6d6794", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5004, "upload_time": "2018-11-30T11:34:30", "upload_time_iso_8601": "2018-11-30T11:34:30.774487Z", "url": "https://files.pythonhosted.org/packages/06/2f/c139b0ba7ed61c38946ccc9e005b059438beb29fdc33a4b90e3c2fd37d1c/pythum-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3104e19977fbd95128278c87d3b063f", "sha256": "4ae0bde3a3802be9ec480641bbe35341cdc527d9e1b2b99e14de62bb7e61487b"}, "downloads": -1, "filename": "pythum-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d3104e19977fbd95128278c87d3b063f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3408, "upload_time": "2018-11-30T11:34:32", "upload_time_iso_8601": "2018-11-30T11:34:32.434792Z", "url": "https://files.pythonhosted.org/packages/0c/c3/680eadbf6802f0a943c54c0ee4d5c23902ce7f227677a28acff6f3d36124/pythum-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:23 2020"}