{"info": {"author": "Espen Angell Kristiansen", "author_email": "post@espenak.net", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved", "Programming Language :: Python"], "description": "# Vitalstyles\n\nMakes it easy to document you LESS/SASS/CSS. You document your styles by inserting markdown with a few extensions to markup examples.\n\n\n## Goals\nMake it easier to document and develop styles.\n\n\n## Features\n- Document your styles with Markdown.\n- Create live previews:\n    - Inline in the guide for simple examples.\n    - Covering the full width of the guide page for more complex examples.\n    - Rendered in a full width IFRAME for really complex examples. These examples can also be opened in a separate file.\n\n\n## Install\n```\n$ pip install vitalstyles\n```\n\n## How it works\nYou write your css/less/sass like you have always done, but you add markdown in special comments:\n\n``` css\n/**\n# Buttons\n\n## .fancybutton\nA fancy button\n\n$$$\n<button class=\"fancy-button\">Click me</button>\n$$$\n*/\n.fancy-button {\n}\n```\n\nThe ``vitalstyles-cli`` can be executed from the directory containing the file with these styles, and it will create a style guide in ``vitalstyles_styleguide/``. By default it will search the current directory recursively for ``*.less``, ``*.sass``, ``*.scss`` and ``*.css`` files.\n\n\n## Configuration\nYou can configure vitalstyles through a ``vitalstyles.json`` file. This is the default setting file with defaults:\n\n``` javascript\n{\n    // Path to your CSS file relative to this settings file (or CWD if no settings file).\n    // You have to set this to get previews.\n    \"preview_cssfile\": null,\n\n    // The output directory relative to the settings file (or CWD if no settings file).\n    \"outdir\": \"vitalstyles_styleguide\",\n\n    // A list of files or directories to parse.\n    // Directories is searched recursively for ``.scss``,\n    // ``.sass``, ``.css`` and ``.less`` files.\n    \"inpaths\": [],\n\n    // User defined templates directory. You can override any\n    // templates in the ``vitalstyles/templates/`` directory\n    // (in the repo) by putting them in a directory and specifying\n    // the directory here. The path is relative to this settings file.\n    \"template_dir\": null,\n\n    // The title of the guide\n    \"title\": \"Vitalstyles style guide\",\n    \n    // Include stock assets? This will add a directory named\n    // stock to your assets/ directory, and fill it with assets\n    // that you can use in your styleguide.\n    'include_stock_assets': false,\n\n    // A list of filesystem directories. The contents of these directories\n    // are copied into the assets sub-directory of the ``outdir``.\n    // The directory itself is not copied, so if you specify two directories\n    // containing the same file, the file from the last directory in the\n    // list will overwrite the first.\n    'asset_directories': []\n\n}\n```\n\n\n## Embedded previews in the docs\nIf you want to get previews, you have to configure ``preview_cssfile`` in a ``vitalstyles.json``.\n\n\n## Bundled stock images\nWe bundle a set of stock images. The bundled stock images are from https://unsplash.com/ and http://www.gratisography.com/.\n\nTo use the bundled stock images, you simply set the ``include_stock_assets`` setting to ``true``. This will copy the images from ``vitalstyles/sock_assets/stock/`` (in the sources of this library) into the ``assets/stock/`` subdirectory of the directory specified in the ``outdir`` setting.\n\n\n## Adding assets (images, videos, etc)\nIf using the bundled stock images is not enough, you can include one or more asset directories using the ``asset_directories`` setting. You simply add the path to the directories you want to copy into the ``assets/`` subdirectory of the directory specified in the ``outdir`` setting.  \n\n\n## Specifying settings using Python or making a custom CLI\nIf configuring the styleguide using JSON is not enough, you can make a custom CLI script. This is fairly simple, and it is demonstrated in ``examples/custom_vitalstyles_cli.py``.\n\n\n## Complete example\nSee the ``examples/`` directory in the source repo. To build the example, install Vitalstyles and GruntJS and run the following::\n\n    $ cd examples/\n    $ npm install\n    $ grunt\n\nThen open ``vitalstyles_styleguide/index.html``.\n\n\n## Markdown dialect\nThe Markdown dialect is more or less the same as the GitHub format, with one additional tag to markup examples.\n\nThe Markdown parser is [python-markdown](https://pythonhosted.org/Markdown/), with the following [extensions](https://pythonhosted.org/Markdown/extensions/index.html):\n\n### Fenced code blocks\nMakes it possible to use github markdown styled code blocks like:\n\n    ``` javascript\n    function add(a, b) {\n        return a + b;\n    }\n    ```\n\n### Smart strong and smart emphasis\nPrevents markdown from emphasizing words when you use ``_`` and ``__`` in the middle of a word.\n\n### Definition Lists\nMakes it possible to define definition lists with the following markup:\n\n```\nOption one\n:   This is not a very good option. You should consider\n    using _option two_.\n\nOption two\n:   This is a really good option.\n```\n\n### Tables\nMakes it possible to create tables with the following markup:\n\n```\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n```\n\n\n### SmartyPants\nConverts ASCII dashes, quotes and ellipses to their HTML entity equivalents\n\n\n### Sane lists\nRenders lists in a saner manner than the original Markdown.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/appressoas/vitalstyles", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "vitalstyles", "package_url": "https://pypi.org/project/vitalstyles/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/vitalstyles/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/appressoas/vitalstyles"}, "release_url": "https://pypi.org/project/vitalstyles/1.1.4/", "requires_dist": null, "requires_python": null, "summary": "Generate CSS/SASS/LESS documentation with previews using Markdown in comments.", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Vitalstyles<br><br>Makes it easy to document you LESS/SASS/CSS. You document your styles by inserting markdown with a few extensions to markup examples.<br><br><br>## Goals<br>Make it easier to document and develop styles.<br><br><br>## Features<br>- Document your styles with Markdown.<br>- Create live previews:<br>    - Inline in the guide for simple examples.<br>    - Covering the full width of the guide page for more complex examples.<br>    - Rendered in a full width IFRAME for really complex examples. These examples can also be opened in a separate file.<br><br><br>## Install<br>```<br>$ pip install vitalstyles<br>```<br><br>## How it works<br>You write your css/less/sass like you have always done, but you add markdown in special comments:<br><br>``` css<br>/**<br># Buttons<br><br>## .fancybutton<br>A fancy button<br><br>$$$<br>&lt;button class=\"fancy-button\"&gt;Click me&lt;/button&gt;<br>$$$<br>*/<br>.fancy-button {<br>}<br>```<br><br>The ``vitalstyles-cli`` can be executed from the directory containing the file with these styles, and it will create a style guide in ``vitalstyles_styleguide/``. By default it will search the current directory recursively for ``*.less``, ``*.sass``, ``*.scss`` and ``*.css`` files.<br><br><br>## Configuration<br>You can configure vitalstyles through a ``vitalstyles.json`` file. This is the default setting file with defaults:<br><br>``` javascript<br>{<br>    // Path to your CSS file relative to this settings file (or CWD if no settings file).<br>    // You have to set this to get previews.<br>    \"preview_cssfile\": null,<br><br>    // The output directory relative to the settings file (or CWD if no settings file).<br>    \"outdir\": \"vitalstyles_styleguide\",<br><br>    // A list of files or directories to parse.<br>    // Directories is searched recursively for ``.scss``,<br>    // ``.sass``, ``.css`` and ``.less`` files.<br>    \"inpaths\": [],<br><br>    // User defined templates directory. You can override any<br>    // templates in the ``vitalstyles/templates/`` directory<br>    // (in the repo) by putting them in a directory and specifying<br>    // the directory here. The path is relative to this settings file.<br>    \"template_dir\": null,<br><br>    // The title of the guide<br>    \"title\": \"Vitalstyles style guide\",<br>    <br>    // Include stock assets? This will add a directory named<br>    // stock to your assets/ directory, and fill it with assets<br>    // that you can use in your styleguide.<br>    'include_stock_assets': false,<br><br>    // A list of filesystem directories. The contents of these directories<br>    // are copied into the assets sub-directory of the ``outdir``.<br>    // The directory itself is not copied, so if you specify two directories<br>    // containing the same file, the file from the last directory in the<br>    // list will overwrite the first.<br>    'asset_directories': []<br><br>}<br>```<br><br><br>## Embedded previews in the docs<br>If you want to get previews, you have to configure ``preview_cssfile`` in a ``vitalstyles.json``.<br><br><br>## Bundled stock images<br>We bundle a set of stock images. The bundled stock images are from https://unsplash.com/ and http://www.gratisography.com/.<br><br>To use the bundled stock images, you simply set the ``include_stock_assets`` setting to ``true``. This will copy the images from ``vitalstyles/sock_assets/stock/`` (in the sources of this library) into the ``assets/stock/`` subdirectory of the directory specified in the ``outdir`` setting.<br><br><br>## Adding assets (images, videos, etc)<br>If using the bundled stock images is not enough, you can include one or more asset directories using the ``asset_directories`` setting. You simply add the path to the directories you want to copy into the ``assets/`` subdirectory of the directory specified in the ``outdir`` setting.  <br><br><br>## Specifying settings using Python or making a custom CLI<br>If configuring the styleguide using JSON is not enough, you can make a custom CLI script. This is fairly simple, and it is demonstrated in ``examples/custom_vitalstyles_cli.py``.<br><br><br>## Complete example<br>See the ``examples/`` directory in the source repo. To build the example, install Vitalstyles and GruntJS and run the following::<br><br>    $ cd examples/<br>    $ npm install<br>    $ grunt<br><br>Then open ``vitalstyles_styleguide/index.html``.<br><br><br>## Markdown dialect<br>The Markdown dialect is more or less the same as the GitHub format, with one additional tag to markup examples.<br><br>The Markdown parser is [python-markdown](https://pythonhosted.org/Markdown/), with the following [extensions](https://pythonhosted.org/Markdown/extensions/index.html):<br><br>### Fenced code blocks<br>Makes it possible to use github markdown styled code blocks like:<br><br>    ``` javascript<br>    function add(a, b) {<br>        return a + b;<br>    }<br>    ```<br><br>### Smart strong and smart emphasis<br>Prevents markdown from emphasizing words when you use ``_`` and ``__`` in the middle of a word.<br><br>### Definition Lists<br>Makes it possible to define definition lists with the following markup:<br><br>```<br>Option one<br>:   This is not a very good option. You should consider<br>    using _option two_.<br><br>Option two<br>:   This is a really good option.<br>```<br><br>### Tables<br>Makes it possible to create tables with the following markup:<br><br>```<br>First Header  | Second Header<br>------------- | -------------<br>Content Cell  | Content Cell<br>Content Cell  | Content Cell<br>```<br><br><br>### SmartyPants<br>Converts ASCII dashes, quotes and ellipses to their HTML entity equivalents<br><br><br>### Sane lists<br>Renders lists in a saner manner than the original Markdown.<br>\n          </div>"}, "last_serial": 1267759, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "db40ab7307279c83faa9dea717585d0f", "sha256": "2a96167b4b927b919b38f180e7704e3feaaa4e2530569011c3cad94509cac3cf"}, "downloads": -1, "filename": "vitalstyles-1.0.tar.gz", "has_sig": false, "md5_digest": "db40ab7307279c83faa9dea717585d0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8587, "upload_time": "2014-06-06T01:48:47", "upload_time_iso_8601": "2014-06-06T01:48:47.617277Z", "url": "https://files.pythonhosted.org/packages/de/72/f763597fe13f69f0f5479174120fe8d7e15d69a89471f183d9644e35900a/vitalstyles-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "43b3c97e1e074c25224ed15aecfbc002", "sha256": "afd8959ef9645205f50bb40b66ca9ece24df0a1a214ffd01f34efb23d1426685"}, "downloads": -1, "filename": "vitalstyles-1.0.1.tar.gz", "has_sig": false, "md5_digest": "43b3c97e1e074c25224ed15aecfbc002", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9865, "upload_time": "2014-06-08T21:48:29", "upload_time_iso_8601": "2014-06-08T21:48:29.963566Z", "url": "https://files.pythonhosted.org/packages/60/0a/1efa56d0564d7c5cf943d9b9f8cff95db72aba43e90d6c8ff742998a83a0/vitalstyles-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "75082601f24294079b93d0e3702ffa6a", "sha256": "21bcdf90320cb109604a2d2550796440a32ca2a15881f3e8f11d9ba346521600"}, "downloads": -1, "filename": "vitalstyles-1.0.2.tar.gz", "has_sig": false, "md5_digest": "75082601f24294079b93d0e3702ffa6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9849, "upload_time": "2014-06-08T21:58:18", "upload_time_iso_8601": "2014-06-08T21:58:18.231647Z", "url": "https://files.pythonhosted.org/packages/56/e8/cc90f3d44927612222b90a944c6eaa5b71b0087d3de2f981b48e1afc5895/vitalstyles-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1250e538592fbc1bfa24bbaf8aed5b73", "sha256": "97e9476516293d0c757ecc1f617a95223aa85c0342e8f781a8969dda5d660fc9"}, "downloads": -1, "filename": "vitalstyles-1.1.0.tar.gz", "has_sig": false, "md5_digest": "1250e538592fbc1bfa24bbaf8aed5b73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9904, "upload_time": "2014-10-12T13:09:35", "upload_time_iso_8601": "2014-10-12T13:09:35.274382Z", "url": "https://files.pythonhosted.org/packages/9f/9c/919b2261ba81e21f1283ed16c75e9f5b9d3bb0f230d2b873bce78ee45cd0/vitalstyles-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "83ecebb4728f847594b4827e8bd7f9c1", "sha256": "802f8a054b124dc7a8823548f55da9a51f5f7301355edafeba08ba3ea44687a1"}, "downloads": -1, "filename": "vitalstyles-1.1.1.tar.gz", "has_sig": false, "md5_digest": "83ecebb4728f847594b4827e8bd7f9c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 374017, "upload_time": "2014-10-12T14:14:56", "upload_time_iso_8601": "2014-10-12T14:14:56.770749Z", "url": "https://files.pythonhosted.org/packages/dd/c2/ec055b935d092074b74dd4753234355e9f3cf0675f94178fdb8ba056af39/vitalstyles-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "03f6606deb9f4e43d424a3238b35f16f", "sha256": "b24a8cdc658a4c49fd7fdcea2c55a9badcf018ed618c507f57e357c85c094a7e"}, "downloads": -1, "filename": "vitalstyles-1.1.2.tar.gz", "has_sig": false, "md5_digest": "03f6606deb9f4e43d424a3238b35f16f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 374029, "upload_time": "2014-10-12T14:19:29", "upload_time_iso_8601": "2014-10-12T14:19:29.830502Z", "url": "https://files.pythonhosted.org/packages/3c/4b/95b82aba159497ae8ee65aa6cbd80aa0942a0a0cb79ea0ba044bac3faaa4/vitalstyles-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "aed732d07122d225c02ace5a410edbce", "sha256": "dbd82ad37f06a7daf9c3777fbd2097fce926812a932e3cf7aedede7e7f1f1f53"}, "downloads": -1, "filename": "vitalstyles-1.1.3.tar.gz", "has_sig": false, "md5_digest": "aed732d07122d225c02ace5a410edbce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 432017, "upload_time": "2014-10-12T16:24:03", "upload_time_iso_8601": "2014-10-12T16:24:03.076313Z", "url": "https://files.pythonhosted.org/packages/f3/38/a9833afdd0c3404490716514c13fc760eb6d208cd26f6c170b698dab00b7/vitalstyles-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "d2c674b1e3edafe78f236c87ba0a2c1e", "sha256": "c596a22855468e8e8a96df64906b13d22b62addd69c2a44c9f140cd0f172e59b"}, "downloads": -1, "filename": "vitalstyles-1.1.4.tar.gz", "has_sig": false, "md5_digest": "d2c674b1e3edafe78f236c87ba0a2c1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 432086, "upload_time": "2014-10-12T17:06:59", "upload_time_iso_8601": "2014-10-12T17:06:59.576060Z", "url": "https://files.pythonhosted.org/packages/eb/da/3aade54439898cc76da4209a46c937cb7d58cc003d59d636354adbd79647/vitalstyles-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2c674b1e3edafe78f236c87ba0a2c1e", "sha256": "c596a22855468e8e8a96df64906b13d22b62addd69c2a44c9f140cd0f172e59b"}, "downloads": -1, "filename": "vitalstyles-1.1.4.tar.gz", "has_sig": false, "md5_digest": "d2c674b1e3edafe78f236c87ba0a2c1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 432086, "upload_time": "2014-10-12T17:06:59", "upload_time_iso_8601": "2014-10-12T17:06:59.576060Z", "url": "https://files.pythonhosted.org/packages/eb/da/3aade54439898cc76da4209a46c937cb7d58cc003d59d636354adbd79647/vitalstyles-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:08 2020"}