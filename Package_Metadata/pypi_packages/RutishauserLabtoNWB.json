{"info": {"author": "Nand Chandravadia", "author_email": "nand.chandravadia@cshs.org", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# A NWB-based Dataset and Processing Pipeline of Human Single-Neuron Activity During a Declarative Memory Task \n\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n[![Generic badge](https://img.shields.io/badge/release-1.0.0-green.svg)](https://github.com/rutishauserlab/recogmem-release-NWB/releases/)\n\n## Introduction \n\nThis repository contains tools/methods to export human single neuron data into the [Neurodata Without Borders](https://www.nwb.org/) Format, and analyze such data in NWB. This dataset is entirely in the NWB Format, and the export and analysis scripts are in both Python and MATLAB. \n\nThis code accompanies the paper \"A NWB-based Dataset and Processing Pipeline of Human Single-Neuron Activity During a Declarative Memory Task\" by N. Chandravadia, D. Liang, A. G.P. Schjetnan, A. Carlson, M. Faraut, J.M. Chung, C.M. Reed, B. Dichter, U. Maoz, S. Kalia, T. Valiante, A. N. Mamelak & U. Rutishauser. Submitted (2019).\n\nAbstract of the paper: \n\n>A challenge for data sharing in systems neuroscience is the multitude of different data formats used. Neurodata Without Borders: Neurophysiology 2.0 (NWB:N) has emerged as a standardized data format for the storage of cellular-level data together with meta-data, stimulus information, and behavior. A key next step to facilitate NWB:N adoption is to provide easy to use processing pipelines to import/export data from/to NWB:N. Here, we present a NWB-formatted dataset of 1863 single neurons recorded from the medial temporal lobes of 59 human subjects undergoing intracranial monitoring while they performed a recognition memory task. We provide code to analyze and export/import stimuli, behavior, and electrophysiological recordings to/from NWB in both MATLAB and Python. The data files are NWB:N compliant, which affords interoperability between programming languages and operating systems. This combined data and code release is a case study for how to utilize NWB:N for human single-neuron recordings and enables easy re-use of this hard-to-obtain data for both teaching and research on the mechanisms of human memory.\n\n<p align=\"center\">\n  <img width=\"460\" height=\"410\" src=\"https://raw.githubusercontent.com/rutishauserlab/recogmem-release-NWB/master/RutishauserLabtoNWB/assets/BrainAreaLocations.png\">\n</p>\n\n<!--- Add Data Descriptor Link here ---> \nA previous version of this dataset (which contains less data than this dataset and is not in NWB) was [released previously](https://datadryad.org/resource/doi:10.5061/dryad.46st5) and is described in this [data descriptor (Faraut et al. 2018)](https://www.nature.com/articles/sdata201810).\n\n## Installation (Code)\n\nFor python, the code within this repository can be installed via `pip`:\n\n`pip install RutishauserLabtoNWB` or `pip3 install RutishauserLabtoNWB`\n\nFor matlab or python, this repository can be downloaded via:\n\n`git clone https://github.com/rutishauserlab/recogmem-release-NWB.git`\n\n\n## Installation (Data)\n\nThere are two different data downloads:\n1) To export the data from our internal proprietary format to NWB, you first need to download the raw data (Link here once available). \n2) If you only need the dataset in NWB (to analyze the data), download the dataset from here (place link here once available).\n\n## Installation (pyNWB and matNWB)\n\n### [pyNWB](https://github.com/NeurodataWithoutBorders/pynwb)\n\npyNWB can be installed via `pip`: \n\n`pip install pynwb` \n\nAlternatively, the pyNWB can be downloaded via:\n\n`git clone https://github.com/NeurodataWithoutBorders/pynwb.git\n`\n\n*Note: We used pyNWB version 1.1.0* \n\n### [matNWB](https://github.com/NeurodataWithoutBorders/matnwb)\n\nThe matNWB API is provided in the same download as above (RutishauserLab2NWB) -- it can be found under 3rd Party. \n\n*Note: We used matNWB version 0.2.1*\n\n\n## Package Dependencies (Python)\n\nHere are a list of Python packages we used, and their respective versions: \n\n* numpy (1.17.2)\n* pandas (0.23.0)\n* scipy (1.1.0)\n* matplotlib (2.2.2)\n* pynwb (1.1.0)\n* hdmf (1.2.0)\n\nPlease assure that you're using the above versions of pywnb and hdmf, because newer development versions often break things. Use `pip install pynwb==1.1.0` and  `pip install hdmf==1.2.0` to force installation of these versions.\n\n## Python Export and Analysis\n\n\nHere, we will detail how to run the Python Export Code, which converts the native data into NWB, and the Single Neuron Analysis based on these NWB files. All the python code is found here: [recogmem-release-NWB/RutishauserLabtoNWB/events/newolddelay/python/](https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB/events/newolddelay/python)\n\n\n### Python Export\n\nThis code shows how to export from our internal dataformat to NWB. Note that if you only want to use the provided NWB files for analysis in python, you do not need to re-export the data. Instead, go directly to the analysis step below. \nThe main export script is `no2nwb_main.py`. Modify the following parameters:\n\n\n* [pathtoNativeData](https://datadryad.org/): the path to Native Data. \n*Note: The Native Data must be downloaded via the provided external link, and the path to data must be given as shown below.*\n\n\n```python \nimport RutishauserLabtoNWB as RLab\n\n\npathTONativeData = 'C:\\\\Users\\\\chandravadn1\\\\Desktop\\\\code\\\\dataNative\\\\'\n\nRLab.NO2NWB_export(pathTONativeData)\n```\n\nOnce you have changed the the above parameters, run `NO2NWB_export`. This will begin the export of the native data into NWB:N. \n\n\n*Note: Once run, `NO2NWB_export` will ask for an export directory. Supply a directory to save the NWB files.*\n\n\n\n### Python Analysis (Single Neuron Analysis) \n\nThis code shows how to import the NWB-formatted data. The main analysis script is `main.py`. Modify the following parameters:\n\n* **NWBFilePath**: The path to the exported NWB files. \n* **list_of_patients_behavior**: This signifies the NOID (Patient Identifier). See defineNOsessions.ini to see the NOID for all patients. Note: You can list more than one NOID. For example, ```list_of_patients = [5, 6, 132]```. You can also input ```list_of_patients = 'all'``` to examine the results for all patients. \n* **list_of_patients_neurons**: This signifies the NOID (Patient Identifier). See defineNOsessions.ini to see the NOID for all patients. Note: You can list more than one NOID. For example, ```list_of_patients = [5, 6, 132]```\n\n```python \nimport RutishauserLabtoNWB as RLab\n\nNWBFilePath = 'V:\\\\LabUsers\\\\chandravadian\\\\NWB Data\\\\python'\nlist_of_patients_behavior = [5, 6]  # List of sessions to summarize behavior. Set to [] to skip\nlist_of_patients_neurons = [132]    # List of sessions to analyze neural data for. Set to [] to skip\n\nRLab.NO2NWB_analysis(NWBFilePath,list_of_patients_behavior, list_of_patients_neurons)\n\n```\n\nOnce you have changed the the above parameters, run `NO2NWB_analysis`. This will begin the analysis of the data in the NWB:N format. Note that you have to close the plots that open up for the analysis to continue, the code blocks after opening a figure.\n\n\n<!--- Raster Plot Here (Python) ---> \n<p align=\"center\">\n  <img width=\"460\" height=\"410\" src=\"https://raw.githubusercontent.com/rutishauserlab/recogmem-release-NWB/master/RutishauserLabtoNWB/assets/Python_SingleNeuron.png\">\n</p> \n\n\n<!--- MATLAB ---> \n## MATLAB Export and Analysis\n\n\nHere, we will detail how to run the MATLAB Export Code, which converts the native data into NWB, and the Single Neuron Analysis based on these NWB files. All the MATLAB code can be found here: [recogmem-release-NWB/RutishauserLabtoNWB/events/newolddelay/matlab/](https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB/events/newolddelay/matlab)\n\n\n\n### MATLAB Export\n\nThis code shows how to export from our internal dataformat to NWB. Note that if you only want to use the provided NWB files for analysis in Matlab, you do not need to re-export the data. Instead, go directly to the analysis step below. \nThis code shows how to import and analyze the NWB-formatted data. The main export script is `exportNO2NWB_main.m`. Within `exportNO2NWB_main.m`, modify the following:\n\n**%% Section 1 -- Set Parameters - modify this section before running this code !**\n\n* [basepath](https://datadryad.org/): the path to Native Data. \n*Note: The Native Data must be downloaded via the provided external link, and the path to data must be given as shown below.*\n* [codePath](https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB): the path to the NWB:N code.  \n\n```matlab \n%Input Base Path to the Native Data\nbasepath = 'C:\\Users\\chandravadn1\\Desktop\\code\\dataNative\\';\n\n%Add base code path (e.g., 'C:\\svnwork\\nwbsharing') \ncodePath = '\\\\RutishauserLabtoNWB\\\\';\n```\n\nOnce you have changed the the above parameters, run `exportNO2NWB_main.m`. This will begin the export of the native data into NWB:N. \n\n*Note: Once run, `exportNO2NWB_main.m` will ask for an export directory. Supply a directory to save the NWB files.*\n\n### MATLAB Analysis\n\nThe main analysis script is `NWBneural_main.m`. Witin `NWBneural_main.m`, modify the following:\n\n**%% Section 1: Set Parameters - modify this section before running this code !**\n\n* [codePath](https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB): the path to the NWB:N code.\n* **basepathData**: The path to the exported NWB files. \n* **exportStimInfo**: Indicates whether or not stimuli will be exported into NWB file (0: no, 1: yes)\n* **allSessionsToUse**: This signifies the NOID (Patient Identifier). See defineNOsessions.ini to see the NOID for all patients. Note: You can list more than one NOID. For example, ```list_of_patients = [5, 6, 132]```\n* **runAllAvailableSesssions**: Enable to process all available sessions (not just the one(s) specified above). Uses NWB_listOf_allUsable\n \n```matlab \n%% Section 1: Set Parameters - modify this section before running this code !\n\n% Point this directory to where the downloaded code is located.\ncodePath = '\\\\RutishauserLabtoNWB\\\\'; \n\n% Point this directory to where the downloaded NWB data is located.\nbasepathData = 'V:\\LabUsers\\chandravadian\\NWB Data\\'; \n\nexportStimInfo = 1;   % 0 no, 1 yes.  If turned off, the resulting NWB files do not contain the stimuli shown (images). This reduces the size of the NWB files considerably\n\nrunAllAvailableSesssions = 0;\n```\n\nOnce you have changed the the above parameters, run `NWBneural_main.m`. This will begin the analysis of the data in the NWB:N format. \n\n<!--- Raster Plot Here (MATLAB) ---> \n<p align=\"center\">\n  <img width=\"460\" height=\"410\" src=\"https://raw.githubusercontent.com/rutishauserlab/recogmem-release-NWB/master/RutishauserLabtoNWB/assets/MATLAB_SingleNeuron.png\">\n</p> \n\n\n## Contributors\n* [Nand Chandravadia](mailto:Nand.Chandravadia@cshs.org) \n* [Andy Liang](mailto:liang134@mail.chapman.edu) \n* [Ueli Rutishauser](mailto:Ueli.Rutishauser@cshs.org) (Principal Investigator)\n\nFeel free to ask questions and/or join the development discussion. You can post bug reports and feature requests. You are welcome to use/modify the code/data in this repository as you wish -- if you do, please cite our data descriptor: (**TODO: Add Data Descriptor**)\n\n## Funding\n\nAcquisition of this dataset has been supported by the National Institute of Neurological Disorders and Stroke (U01NS103792), the National Science Foundation (1554105), the National Institute of Mental Health (R01MH110831), the McKnight Endowment for Neuroscience, a NARSAD Young Investigator grant from the Brain & Behavior Research Foundation. Preparation of this dataset was made possible by a seed grant from the Kavli Foundation.\n\n## License \n\n\"RutishauserLabtoNWB\" Copyright (c) 2019, Rutishauser Lab. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rutishauserlab/recogmem-release-NWB", "keywords": "Cognitive Neuroscience,Neuroscience,Neurosurgery,Single Unit Recordings,Data Standardization", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "RutishauserLabtoNWB", "package_url": "https://pypi.org/project/RutishauserLabtoNWB/", "platform": "", "project_url": "https://pypi.org/project/RutishauserLabtoNWB/", "project_urls": {"Homepage": "https://github.com/rutishauserlab/recogmem-release-NWB"}, "release_url": "https://pypi.org/project/RutishauserLabtoNWB/1.0.5/", "requires_dist": null, "requires_python": ">=3.0", "summary": "Export and Analysis Code for NWB:N", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>A NWB-based Dataset and Processing Pipeline of Human Single-Neuron Activity During a Declarative Memory Task</h1>\n<p><a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110fcca60a43a8ea37b1a5bda616e639325f2f30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230332d2d436c617573652d626c75652e737667\"></a>\n<a href=\"https://github.com/rutishauserlab/recogmem-release-NWB/releases/\" rel=\"nofollow\"><img alt=\"Generic badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b579ea4b9201e05d795193ea975d65fc27269c4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d312e302e302d677265656e2e737667\"></a></p>\n<h2>Introduction</h2>\n<p>This repository contains tools/methods to export human single neuron data into the <a href=\"https://www.nwb.org/\" rel=\"nofollow\">Neurodata Without Borders</a> Format, and analyze such data in NWB. This dataset is entirely in the NWB Format, and the export and analysis scripts are in both Python and MATLAB.</p>\n<p>This code accompanies the paper \"A NWB-based Dataset and Processing Pipeline of Human Single-Neuron Activity During a Declarative Memory Task\" by N. Chandravadia, D. Liang, A. G.P. Schjetnan, A. Carlson, M. Faraut, J.M. Chung, C.M. Reed, B. Dichter, U. Maoz, S. Kalia, T. Valiante, A. N. Mamelak &amp; U. Rutishauser. Submitted (2019).</p>\n<p>Abstract of the paper:</p>\n<blockquote>\n<p>A challenge for data sharing in systems neuroscience is the multitude of different data formats used. Neurodata Without Borders: Neurophysiology 2.0 (NWB:N) has emerged as a standardized data format for the storage of cellular-level data together with meta-data, stimulus information, and behavior. A key next step to facilitate NWB:N adoption is to provide easy to use processing pipelines to import/export data from/to NWB:N. Here, we present a NWB-formatted dataset of 1863 single neurons recorded from the medial temporal lobes of 59 human subjects undergoing intracranial monitoring while they performed a recognition memory task. We provide code to analyze and export/import stimuli, behavior, and electrophysiological recordings to/from NWB in both MATLAB and Python. The data files are NWB:N compliant, which affords interoperability between programming languages and operating systems. This combined data and code release is a case study for how to utilize NWB:N for human single-neuron recordings and enables easy re-use of this hard-to-obtain data for both teaching and research on the mechanisms of human memory.</p>\n</blockquote>\n<p align=\"center\">\n  <img height=\"410\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/253a41430aeffa8e3ea8ddc9009c7e6271f10193/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f72757469736861757365726c61622f7265636f676d656d2d72656c656173652d4e57422f6d61737465722f52757469736861757365724c6162746f4e57422f6173736574732f427261696e417265614c6f636174696f6e732e706e67\" width=\"460\">\n</p>\n \n<p>A previous version of this dataset (which contains less data than this dataset and is not in NWB) was <a href=\"https://datadryad.org/resource/doi:10.5061/dryad.46st5\" rel=\"nofollow\">released previously</a> and is described in this <a href=\"https://www.nature.com/articles/sdata201810\" rel=\"nofollow\">data descriptor (Faraut et al. 2018)</a>.</p>\n<h2>Installation (Code)</h2>\n<p>For python, the code within this repository can be installed via <code>pip</code>:</p>\n<p><code>pip install RutishauserLabtoNWB</code> or <code>pip3 install RutishauserLabtoNWB</code></p>\n<p>For matlab or python, this repository can be downloaded via:</p>\n<p><code>git clone https://github.com/rutishauserlab/recogmem-release-NWB.git</code></p>\n<h2>Installation (Data)</h2>\n<p>There are two different data downloads:</p>\n<ol>\n<li>To export the data from our internal proprietary format to NWB, you first need to download the raw data (Link here once available).</li>\n<li>If you only need the dataset in NWB (to analyze the data), download the dataset from here (place link here once available).</li>\n</ol>\n<h2>Installation (pyNWB and matNWB)</h2>\n<h3><a href=\"https://github.com/NeurodataWithoutBorders/pynwb\" rel=\"nofollow\">pyNWB</a></h3>\n<p>pyNWB can be installed via <code>pip</code>:</p>\n<p><code>pip install pynwb</code></p>\n<p>Alternatively, the pyNWB can be downloaded via:</p>\n<p><code>git clone https://github.com/NeurodataWithoutBorders/pynwb.git</code></p>\n<p><em>Note: We used pyNWB version 1.1.0</em></p>\n<h3><a href=\"https://github.com/NeurodataWithoutBorders/matnwb\" rel=\"nofollow\">matNWB</a></h3>\n<p>The matNWB API is provided in the same download as above (RutishauserLab2NWB) -- it can be found under 3rd Party.</p>\n<p><em>Note: We used matNWB version 0.2.1</em></p>\n<h2>Package Dependencies (Python)</h2>\n<p>Here are a list of Python packages we used, and their respective versions:</p>\n<ul>\n<li>numpy (1.17.2)</li>\n<li>pandas (0.23.0)</li>\n<li>scipy (1.1.0)</li>\n<li>matplotlib (2.2.2)</li>\n<li>pynwb (1.1.0)</li>\n<li>hdmf (1.2.0)</li>\n</ul>\n<p>Please assure that you're using the above versions of pywnb and hdmf, because newer development versions often break things. Use <code>pip install pynwb==1.1.0</code> and  <code>pip install hdmf==1.2.0</code> to force installation of these versions.</p>\n<h2>Python Export and Analysis</h2>\n<p>Here, we will detail how to run the Python Export Code, which converts the native data into NWB, and the Single Neuron Analysis based on these NWB files. All the python code is found here: <a href=\"https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB/events/newolddelay/python\" rel=\"nofollow\">recogmem-release-NWB/RutishauserLabtoNWB/events/newolddelay/python/</a></p>\n<h3>Python Export</h3>\n<p>This code shows how to export from our internal dataformat to NWB. Note that if you only want to use the provided NWB files for analysis in python, you do not need to re-export the data. Instead, go directly to the analysis step below.\nThe main export script is <code>no2nwb_main.py</code>. Modify the following parameters:</p>\n<ul>\n<li><a href=\"https://datadryad.org/\" rel=\"nofollow\">pathtoNativeData</a>: the path to Native Data.\n<em>Note: The Native Data must be downloaded via the provided external link, and the path to data must be given as shown below.</em></li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">RutishauserLabtoNWB</span> <span class=\"k\">as</span> <span class=\"nn\">RLab</span>\n\n\n<span class=\"n\">pathTONativeData</span> <span class=\"o\">=</span> <span class=\"s1\">'C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">chandravadn1</span><span class=\"se\">\\\\</span><span class=\"s1\">Desktop</span><span class=\"se\">\\\\</span><span class=\"s1\">code</span><span class=\"se\">\\\\</span><span class=\"s1\">dataNative</span><span class=\"se\">\\\\</span><span class=\"s1\">'</span>\n\n<span class=\"n\">RLab</span><span class=\"o\">.</span><span class=\"n\">NO2NWB_export</span><span class=\"p\">(</span><span class=\"n\">pathTONativeData</span><span class=\"p\">)</span>\n</pre>\n<p>Once you have changed the the above parameters, run <code>NO2NWB_export</code>. This will begin the export of the native data into NWB:N.</p>\n<p><em>Note: Once run, <code>NO2NWB_export</code> will ask for an export directory. Supply a directory to save the NWB files.</em></p>\n<h3>Python Analysis (Single Neuron Analysis)</h3>\n<p>This code shows how to import the NWB-formatted data. The main analysis script is <code>main.py</code>. Modify the following parameters:</p>\n<ul>\n<li><strong>NWBFilePath</strong>: The path to the exported NWB files.</li>\n<li><strong>list_of_patients_behavior</strong>: This signifies the NOID (Patient Identifier). See defineNOsessions.ini to see the NOID for all patients. Note: You can list more than one NOID. For example, <code>list_of_patients = [5, 6, 132]</code>. You can also input <code>list_of_patients = 'all'</code> to examine the results for all patients.</li>\n<li><strong>list_of_patients_neurons</strong>: This signifies the NOID (Patient Identifier). See defineNOsessions.ini to see the NOID for all patients. Note: You can list more than one NOID. For example, <code>list_of_patients = [5, 6, 132]</code></li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">RutishauserLabtoNWB</span> <span class=\"k\">as</span> <span class=\"nn\">RLab</span>\n\n<span class=\"n\">NWBFilePath</span> <span class=\"o\">=</span> <span class=\"s1\">'V:</span><span class=\"se\">\\\\</span><span class=\"s1\">LabUsers</span><span class=\"se\">\\\\</span><span class=\"s1\">chandravadian</span><span class=\"se\">\\\\</span><span class=\"s1\">NWB Data</span><span class=\"se\">\\\\</span><span class=\"s1\">python'</span>\n<span class=\"n\">list_of_patients_behavior</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>  <span class=\"c1\"># List of sessions to summarize behavior. Set to [] to skip</span>\n<span class=\"n\">list_of_patients_neurons</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">132</span><span class=\"p\">]</span>    <span class=\"c1\"># List of sessions to analyze neural data for. Set to [] to skip</span>\n\n<span class=\"n\">RLab</span><span class=\"o\">.</span><span class=\"n\">NO2NWB_analysis</span><span class=\"p\">(</span><span class=\"n\">NWBFilePath</span><span class=\"p\">,</span><span class=\"n\">list_of_patients_behavior</span><span class=\"p\">,</span> <span class=\"n\">list_of_patients_neurons</span><span class=\"p\">)</span>\n</pre>\n<p>Once you have changed the the above parameters, run <code>NO2NWB_analysis</code>. This will begin the analysis of the data in the NWB:N format. Note that you have to close the plots that open up for the analysis to continue, the code blocks after opening a figure.</p>\n \n<p align=\"center\">\n  <img height=\"410\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ad89d0ad311e2a5c59c3aac3522af5d9f6961a1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f72757469736861757365726c61622f7265636f676d656d2d72656c656173652d4e57422f6d61737465722f52757469736861757365724c6162746f4e57422f6173736574732f507974686f6e5f53696e676c654e6575726f6e2e706e67\" width=\"460\">\n</p> \n \n<h2>MATLAB Export and Analysis</h2>\n<p>Here, we will detail how to run the MATLAB Export Code, which converts the native data into NWB, and the Single Neuron Analysis based on these NWB files. All the MATLAB code can be found here: <a href=\"https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB/events/newolddelay/matlab\" rel=\"nofollow\">recogmem-release-NWB/RutishauserLabtoNWB/events/newolddelay/matlab/</a></p>\n<h3>MATLAB Export</h3>\n<p>This code shows how to export from our internal dataformat to NWB. Note that if you only want to use the provided NWB files for analysis in Matlab, you do not need to re-export the data. Instead, go directly to the analysis step below.\nThis code shows how to import and analyze the NWB-formatted data. The main export script is <code>exportNO2NWB_main.m</code>. Within <code>exportNO2NWB_main.m</code>, modify the following:</p>\n<p><strong>%% Section 1 -- Set Parameters - modify this section before running this code !</strong></p>\n<ul>\n<li><a href=\"https://datadryad.org/\" rel=\"nofollow\">basepath</a>: the path to Native Data.\n<em>Note: The Native Data must be downloaded via the provided external link, and the path to data must be given as shown below.</em></li>\n<li><a href=\"https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB\" rel=\"nofollow\">codePath</a>: the path to the NWB:N code.</li>\n</ul>\n<pre><span class=\"c\">%Input Base Path to the Native Data</span>\n<span class=\"n\">basepath</span> <span class=\"p\">=</span> <span class=\"s\">'C:\\Users\\chandravadn1\\Desktop\\code\\dataNative\\'</span><span class=\"p\">;</span>\n\n<span class=\"c\">%Add base code path (e.g., 'C:\\svnwork\\nwbsharing') </span>\n<span class=\"n\">codePath</span> <span class=\"p\">=</span> <span class=\"s\">'\\\\RutishauserLabtoNWB\\\\'</span><span class=\"p\">;</span>\n</pre>\n<p>Once you have changed the the above parameters, run <code>exportNO2NWB_main.m</code>. This will begin the export of the native data into NWB:N.</p>\n<p><em>Note: Once run, <code>exportNO2NWB_main.m</code> will ask for an export directory. Supply a directory to save the NWB files.</em></p>\n<h3>MATLAB Analysis</h3>\n<p>The main analysis script is <code>NWBneural_main.m</code>. Witin <code>NWBneural_main.m</code>, modify the following:</p>\n<p><strong>%% Section 1: Set Parameters - modify this section before running this code !</strong></p>\n<ul>\n<li><a href=\"https://github.com/rutishauserlab/recogmem-release-NWB/tree/master/RutishauserLabtoNWB\" rel=\"nofollow\">codePath</a>: the path to the NWB:N code.</li>\n<li><strong>basepathData</strong>: The path to the exported NWB files.</li>\n<li><strong>exportStimInfo</strong>: Indicates whether or not stimuli will be exported into NWB file (0: no, 1: yes)</li>\n<li><strong>allSessionsToUse</strong>: This signifies the NOID (Patient Identifier). See defineNOsessions.ini to see the NOID for all patients. Note: You can list more than one NOID. For example, <code>list_of_patients = [5, 6, 132]</code></li>\n<li><strong>runAllAvailableSesssions</strong>: Enable to process all available sessions (not just the one(s) specified above). Uses NWB_listOf_allUsable</li>\n</ul>\n<pre><span class=\"c\">%% Section 1: Set Parameters - modify this section before running this code !</span>\n\n<span class=\"c\">% Point this directory to where the downloaded code is located.</span>\n<span class=\"n\">codePath</span> <span class=\"p\">=</span> <span class=\"s\">'\\\\RutishauserLabtoNWB\\\\'</span><span class=\"p\">;</span> \n\n<span class=\"c\">% Point this directory to where the downloaded NWB data is located.</span>\n<span class=\"n\">basepathData</span> <span class=\"p\">=</span> <span class=\"s\">'V:\\LabUsers\\chandravadian\\NWB Data\\'</span><span class=\"p\">;</span> \n\n<span class=\"n\">exportStimInfo</span> <span class=\"p\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>   <span class=\"c\">% 0 no, 1 yes.  If turned off, the resulting NWB files do not contain the stimuli shown (images). This reduces the size of the NWB files considerably</span>\n\n<span class=\"n\">runAllAvailableSesssions</span> <span class=\"p\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n</pre>\n<p>Once you have changed the the above parameters, run <code>NWBneural_main.m</code>. This will begin the analysis of the data in the NWB:N format.</p>\n \n<p align=\"center\">\n  <img height=\"410\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9f20486064000aab4250a95863ba4f9802873ad/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f72757469736861757365726c61622f7265636f676d656d2d72656c656173652d4e57422f6d61737465722f52757469736861757365724c6162746f4e57422f6173736574732f4d41544c41425f53696e676c654e6575726f6e2e706e67\" width=\"460\">\n</p> \n<h2>Contributors</h2>\n<ul>\n<li><a href=\"mailto:Nand.Chandravadia@cshs.org\">Nand Chandravadia</a></li>\n<li><a href=\"mailto:liang134@mail.chapman.edu\">Andy Liang</a></li>\n<li><a href=\"mailto:Ueli.Rutishauser@cshs.org\">Ueli Rutishauser</a> (Principal Investigator)</li>\n</ul>\n<p>Feel free to ask questions and/or join the development discussion. You can post bug reports and feature requests. You are welcome to use/modify the code/data in this repository as you wish -- if you do, please cite our data descriptor: (<strong>TODO: Add Data Descriptor</strong>)</p>\n<h2>Funding</h2>\n<p>Acquisition of this dataset has been supported by the National Institute of Neurological Disorders and Stroke (U01NS103792), the National Science Foundation (1554105), the National Institute of Mental Health (R01MH110831), the McKnight Endowment for Neuroscience, a NARSAD Young Investigator grant from the Brain &amp; Behavior Research Foundation. Preparation of this dataset was made possible by a seed grant from the Kavli Foundation.</p>\n<h2>License</h2>\n<p>\"RutishauserLabtoNWB\" Copyright (c) 2019, Rutishauser Lab. All rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n<ol>\n<li>\n<p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p>\n</li>\n<li>\n<p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p>\n</li>\n<li>\n<p>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p>\n</li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n\n          </div>"}, "last_serial": 6310601, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3e07055ece9de228ab03ef2922836fc2", "sha256": "024f8a09b979161b42ad81f214bd71c95e5457d6666f4be85b1972ee9761da7f"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3e07055ece9de228ab03ef2922836fc2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 856464, "upload_time": "2019-09-26T05:59:28", "upload_time_iso_8601": "2019-09-26T05:59:28.698779Z", "url": "https://files.pythonhosted.org/packages/16/50/9fabc3e25bc18a84f18f94e37bf7a7ceb8d70e9cb6e67b06e8350855dffe/RutishauserLabtoNWB-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "bd094c8a611fbceb2a6c3d57e8dfb4ef", "sha256": "d5abed288f7938d900ebd18b5346217435240ea7adff4202637b6fd805642101"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.1.tar.gz", "has_sig": false, "md5_digest": "bd094c8a611fbceb2a6c3d57e8dfb4ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 1411414, "upload_time": "2019-09-26T07:20:17", "upload_time_iso_8601": "2019-09-26T07:20:17.454782Z", "url": "https://files.pythonhosted.org/packages/e6/5b/c02c078cb501a15d02a4400ebfc2af4a5f581b4c2d6d40790ca66a4b51f4/RutishauserLabtoNWB-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3412c6baa3dbf50c8a138a3df0399866", "sha256": "f5e747b068850a029ea11781dce2feb7ee6e6724072590f4017fc99f62b9833c"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3412c6baa3dbf50c8a138a3df0399866", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 1661109, "upload_time": "2019-09-27T00:20:51", "upload_time_iso_8601": "2019-09-27T00:20:51.802330Z", "url": "https://files.pythonhosted.org/packages/41/6e/612d80e960105db86c1910c9ee2debeece52419e8d79b003650fa84d9cb7/RutishauserLabtoNWB-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "632f7cfbdfdf154177fe4381c271d625", "sha256": "bfcb216e62afa053f0adead10a7a74d5a65882552662080cf80ad1b43719253a"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.2.tar.gz", "has_sig": false, "md5_digest": "632f7cfbdfdf154177fe4381c271d625", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 1411331, "upload_time": "2019-09-27T00:20:54", "upload_time_iso_8601": "2019-09-27T00:20:54.325811Z", "url": "https://files.pythonhosted.org/packages/d7/5b/e53dbfb7f5cd293500e2a7443b5b856f5871907e846b7dfcc78a422d1b7b/RutishauserLabtoNWB-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2415d9ea8635bc3ef6027f37cf8be963", "sha256": "abeb54cf5f10d88f11960a0d6462c53ee4c17e565e0186ccb27811a9d5f8f544"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.3.tar.gz", "has_sig": false, "md5_digest": "2415d9ea8635bc3ef6027f37cf8be963", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 1413367, "upload_time": "2019-09-30T19:01:34", "upload_time_iso_8601": "2019-09-30T19:01:34.647508Z", "url": "https://files.pythonhosted.org/packages/ed/37/4079f39f32a8b25e28d3651820fb59e36aa25e05a12aafe9c9a822998ca2/RutishauserLabtoNWB-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "a89c56cabbca61da142665df593416cb", "sha256": "86e0cefdc83ecbca0301458fd9b57c154864fedb4fb160b1f0bef90fd1fef747"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.4.tar.gz", "has_sig": false, "md5_digest": "a89c56cabbca61da142665df593416cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 3876160, "upload_time": "2019-12-16T10:25:44", "upload_time_iso_8601": "2019-12-16T10:25:44.895878Z", "url": "https://files.pythonhosted.org/packages/9e/82/6127864db97306b52a20a3c1c9b56c6fd5ac6be78e2870b85c3a57850e96/RutishauserLabtoNWB-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "0b632e6f5ce64b20a29991d3b5d7ac44", "sha256": "34e6c22ba7a169f3ab133d1d07ab57073707bcf4795d793734cbe0be09a364d0"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0b632e6f5ce64b20a29991d3b5d7ac44", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 3875916, "upload_time": "2019-12-16T12:35:41", "upload_time_iso_8601": "2019-12-16T12:35:41.844500Z", "url": "https://files.pythonhosted.org/packages/70/84/df7d9a79fca2c91f500cfb79c013e84fbbf073825346a7d0a69d03851705/RutishauserLabtoNWB-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b632e6f5ce64b20a29991d3b5d7ac44", "sha256": "34e6c22ba7a169f3ab133d1d07ab57073707bcf4795d793734cbe0be09a364d0"}, "downloads": -1, "filename": "RutishauserLabtoNWB-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0b632e6f5ce64b20a29991d3b5d7ac44", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 3875916, "upload_time": "2019-12-16T12:35:41", "upload_time_iso_8601": "2019-12-16T12:35:41.844500Z", "url": "https://files.pythonhosted.org/packages/70/84/df7d9a79fca2c91f500cfb79c013e84fbbf073825346a7d0a69d03851705/RutishauserLabtoNWB-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:50 2020"}