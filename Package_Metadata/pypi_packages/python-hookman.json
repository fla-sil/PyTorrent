{"info": {"author": "ESSS", "author_email": "foss@esss.co", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=======\nHookman\n=======\n\n.. image:: https://img.shields.io/pypi/v/python-hookman.svg\n    :target: https://pypi.python.org/pypi/python-hookman\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/python-hookman.svg\n    :target: https://anaconda.org/conda-forge/python-hookman\n\n.. image:: https://img.shields.io/pypi/pyversions/python-hookman.svg\n    :target: https://pypi.org/project/python-hookman\n\n.. image:: https://img.shields.io/travis/ESSS/hookman.svg\n    :target: https://travis-ci.org/ESSS/hookman                \n\n.. image:: https://ci.appveyor.com/api/projects/status/w472d1cm0w37ka3l/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/ESSS/hookman/?branch=master&svg=true\n\n.. image:: https://codecov.io/gh/ESSS/hookman/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/ESSS/hookman\n\n.. image:: https://readthedocs.org/projects/hookman/badge/?version=latest\n    :target: https://hookman.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n\nThis documentation covers HookMan usage & API.\n\nFor information about HookMan,  read the section above. For public changelog and how the project is maintained, please check the `GitHub page`_\n\nWhat is HookMan?\n================\n\n``HookMan`` is a python package that provides a plugin management system to applications,\nspecially those who are written (in totally or partially) in C++.\n\nIt enables external contributors to implement plugins which act as extensions written in C/C++\nthat interact with the application through well-defined *hooks*.\n\nThis system was largely inspired by `pluggy`_,\nthe plugin system which powers `pytest`_, `tox`_, and `devpi`_, but with the intent to be called\nfrom a C++ application rather than from Python.\n\nIt was conceived to facilitate the application development, allowing hooks to be exposed in a\nclear way and allowing plugins to be developed without access to classes or data from the application.\n\nWith ``HookMan`` your application can have access to the hooks implemented on plugins as simple as the example below.\n\n.. code-block:: python\n\n    # Initializing a class\n    hm = HookMan(specs=acme_specs, plugin_dirs=['path1','path2'])\n\n    hook_caller = hm.get_hook_caller()\n\n    # Getting access to the hook implementation\n    friction_factor = hook_caller.friction_factor()\n    env_temperature = hook_caller.env_temperature()\n\n    # Checking if the hook was implemented\n    assert friction_factor is not None\n    assert env_temperature is None\n\n    # Executing the hook, wherever it is implemented either in plugin A or B.\n    ff_result = friction_factor(1, 2.5)\n    env_tmp_result = env_temperature(35.5, 45.5)\n\nHow does it work?\n-----------------\n\nIn order to use ``HookMan`` in your application, it is necessary to inform which ``Hooks``\nare available to be implemented through a configuration object.\n\n\nWith this configuration defined, users can create plugins that implement available ``Hooks`` extending the behavior of your application.\n\n\nAll plugins informed to your application will be validated by HookMan (to check which hooks are implemented),\nand an object holding a reference to the ``Hooks`` will be passed to the application.\n\n\nThe ``HookMan`` project uses the library pybind11_ to interact between Python and C/C++,\nallowing a straightforward usage for who is calling the function (either in Python or in C++).\n\n\nDefining some terminologies:\n\n- ``Application`` \u21e8  The program that offers the extensions.\n- ``Hook``        \u21e8  An extension of the Application.\n- ``Plugin``      \u21e8  The program that implements the ``Hooks``.\n- ``User``        \u21e8  The person who installed the application.\n\n\n\n\n`Read the docs to learn more!`_\n\n* Documentation: https://hookman.readthedocs.io.\n* Free software: MIT license\n\n\nCredits\n-------\nThanks for pluggy_,  which is a similar project (plugin system) and source for many ideas.\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _`GitHub page` :                   https://github.com/ESSS/hookman\n.. _`read the docs to learn more!` :  https://hookman.readthedocs.io\n.. _Cookiecutter:                     https://github.com/audreyr/cookiecutter\n.. _devpi:                            https://github.com/devpi/devpi\n.. _pluggy:                           https://github.com/pytest-dev/pluggy\n.. _pybind11:                         https://github.com/pybind/pybind11\n.. _pytest:                           https://github.com/pytest-dev/pytest\n.. _tox:                              https://github.com/tox-dev/tox\n\n\n=======\nHistory\n=======\n\n0.2.0 (2019-02-08)\n------------------\n\n- Moved load hook function code to ``HookCaller.load_impls_from_library`` function implemented in C++. This\n  enables using hook functionality in projects which don't use Python as their entry point.\n\n- ``HookSpecs`` now accepts an ``extra_includes`` argument, which can be used to add custom ``#include`` directives\n  to the generated ``HookCaller.hpp`` file.\n\n- ``HookCaller`` now contains a ``std::vector`` of functions bound to plugin implementations. This allows multiple\n  plugins to implement the same hook; how the results of each call is to behave is responsibility of the caller.\n\n  Because of this, the following classes/methods have been removed because they are no longer relevant:\n\n  * ``ConflictBetweenPluginsError``\n  * ``ConflictStatus``\n  * ``HookMan.ensure_is_valid``\n  * ``HookMan.get_status``\n\n\n- Generated files now sport a \"do not modify\" comment header.\n\n- Generation of the bindings code for ``HookCaller`` is skipped if ``specs.pyd_name`` is not defined.\n\n- Code generation is now available directly in the command-line through the commands:\n\n  * ``python -m hookman generate-plugin-template``\n  * ``python -m hookman generate-project-files``\n  * ``python -m hookman generate-hook-specs-h``\n  * ``python -m hookman package-plugin``\n\n- Explicitly declare ``extern \"C\"`` calling convention in the ``hook_specs.h`` file.\n\n- The ``INIT_HOOKS`` macro has been removed as it didn't have any useful function.\n\n0.1.7 (2018-08-23)\n------------------\n\n- First Release on PyPI.\n\n0.1.6 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n\n0.1.5 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n\n\n0.1.4 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n\n0.1.3 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n\n\n0.1.2 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n\n\n0.1.1 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n- Dropping bumperversion and using setuptool_scm\n\n0.1.0 (2018-08-23)\n------------------\n\n- Never released, deployment error.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/esss/hookman", "keywords": "hookman", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "python-hookman", "package_url": "https://pypi.org/project/python-hookman/", "platform": "", "project_url": "https://pypi.org/project/python-hookman/", "project_urls": {"Homepage": "https://github.com/esss/hookman"}, "release_url": "https://pypi.org/project/python-hookman/0.2.0/", "requires_dist": ["Click (>=6.0)", "strictyaml", "invoke", "attrs", "sphinx (>=1.4) ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinx-autodoc-typehints ; extra == 'docs'"], "requires_python": "", "summary": "HookMan is a python package that provides a plugin management system to applications, specially those who are written (in totally or partially) in C++.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =======<br>Hookman<br>=======<br><br>.. image:: https://img.shields.io/pypi/v/python-hookman.svg<br>    :target: https://pypi.python.org/pypi/python-hookman<br><br>.. image:: https://img.shields.io/conda/vn/conda-forge/python-hookman.svg<br>    :target: https://anaconda.org/conda-forge/python-hookman<br><br>.. image:: https://img.shields.io/pypi/pyversions/python-hookman.svg<br>    :target: https://pypi.org/project/python-hookman<br><br>.. image:: https://img.shields.io/travis/ESSS/hookman.svg<br>    :target: https://travis-ci.org/ESSS/hookman                <br><br>.. image:: https://ci.appveyor.com/api/projects/status/w472d1cm0w37ka3l/branch/master?svg=true<br>    :target: https://ci.appveyor.com/project/ESSS/hookman/?branch=master&amp;svg=true<br><br>.. image:: https://codecov.io/gh/ESSS/hookman/branch/master/graph/badge.svg<br>    :target: https://codecov.io/gh/ESSS/hookman<br><br>.. image:: https://readthedocs.org/projects/hookman/badge/?version=latest<br>    :target: https://hookman.readthedocs.io/en/latest/?badge=latest<br>    :alt: Documentation Status<br><br><br>This documentation covers HookMan usage &amp; API.<br><br>For information about HookMan,  read the section above. For public changelog and how the project is maintained, please check the `GitHub page`_<br><br>What is HookMan?<br>================<br><br>``HookMan`` is a python package that provides a plugin management system to applications,<br>specially those who are written (in totally or partially) in C++.<br><br>It enables external contributors to implement plugins which act as extensions written in C/C++<br>that interact with the application through well-defined *hooks*.<br><br>This system was largely inspired by `pluggy`_,<br>the plugin system which powers `pytest`_, `tox`_, and `devpi`_, but with the intent to be called<br>from a C++ application rather than from Python.<br><br>It was conceived to facilitate the application development, allowing hooks to be exposed in a<br>clear way and allowing plugins to be developed without access to classes or data from the application.<br><br>With ``HookMan`` your application can have access to the hooks implemented on plugins as simple as the example below.<br><br>.. code-block:: python<br><br>    # Initializing a class<br>    hm = HookMan(specs=acme_specs, plugin_dirs=['path1','path2'])<br><br>    hook_caller = hm.get_hook_caller()<br><br>    # Getting access to the hook implementation<br>    friction_factor = hook_caller.friction_factor()<br>    env_temperature = hook_caller.env_temperature()<br><br>    # Checking if the hook was implemented<br>    assert friction_factor is not None<br>    assert env_temperature is None<br><br>    # Executing the hook, wherever it is implemented either in plugin A or B.<br>    ff_result = friction_factor(1, 2.5)<br>    env_tmp_result = env_temperature(35.5, 45.5)<br><br>How does it work?<br>-----------------<br><br>In order to use ``HookMan`` in your application, it is necessary to inform which ``Hooks``<br>are available to be implemented through a configuration object.<br><br><br>With this configuration defined, users can create plugins that implement available ``Hooks`` extending the behavior of your application.<br><br><br>All plugins informed to your application will be validated by HookMan (to check which hooks are implemented),<br>and an object holding a reference to the ``Hooks`` will be passed to the application.<br><br><br>The ``HookMan`` project uses the library pybind11_ to interact between Python and C/C++,<br>allowing a straightforward usage for who is calling the function (either in Python or in C++).<br><br><br>Defining some terminologies:<br><br>- ``Application`` \u21e8  The program that offers the extensions.<br>- ``Hook``        \u21e8  An extension of the Application.<br>- ``Plugin``      \u21e8  The program that implements the ``Hooks``.<br>- ``User``        \u21e8  The person who installed the application.<br><br><br><br><br>`Read the docs to learn more!`_<br><br>* Documentation: https://hookman.readthedocs.io.<br>* Free software: MIT license<br><br><br>Credits<br>-------<br>Thanks for pluggy_,  which is a similar project (plugin system) and source for many ideas.<br><br>This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.<br><br><br>.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage<br>.. _`GitHub page` :                   https://github.com/ESSS/hookman<br>.. _`read the docs to learn more!` :  https://hookman.readthedocs.io<br>.. _Cookiecutter:                     https://github.com/audreyr/cookiecutter<br>.. _devpi:                            https://github.com/devpi/devpi<br>.. _pluggy:                           https://github.com/pytest-dev/pluggy<br>.. _pybind11:                         https://github.com/pybind/pybind11<br>.. _pytest:                           https://github.com/pytest-dev/pytest<br>.. _tox:                              https://github.com/tox-dev/tox<br><br><br>=======<br>History<br>=======<br><br>0.2.0 (2019-02-08)<br>------------------<br><br>- Moved load hook function code to ``HookCaller.load_impls_from_library`` function implemented in C++. This<br>  enables using hook functionality in projects which don't use Python as their entry point.<br><br>- ``HookSpecs`` now accepts an ``extra_includes`` argument, which can be used to add custom ``#include`` directives<br>  to the generated ``HookCaller.hpp`` file.<br><br>- ``HookCaller`` now contains a ``std::vector`` of functions bound to plugin implementations. This allows multiple<br>  plugins to implement the same hook; how the results of each call is to behave is responsibility of the caller.<br><br>  Because of this, the following classes/methods have been removed because they are no longer relevant:<br><br>  * ``ConflictBetweenPluginsError``<br>  * ``ConflictStatus``<br>  * ``HookMan.ensure_is_valid``<br>  * ``HookMan.get_status``<br><br><br>- Generated files now sport a \"do not modify\" comment header.<br><br>- Generation of the bindings code for ``HookCaller`` is skipped if ``specs.pyd_name`` is not defined.<br><br>- Code generation is now available directly in the command-line through the commands:<br><br>  * ``python -m hookman generate-plugin-template``<br>  * ``python -m hookman generate-project-files``<br>  * ``python -m hookman generate-hook-specs-h``<br>  * ``python -m hookman package-plugin``<br><br>- Explicitly declare ``extern \"C\"`` calling convention in the ``hook_specs.h`` file.<br><br>- The ``INIT_HOOKS`` macro has been removed as it didn't have any useful function.<br><br>0.1.7 (2018-08-23)<br>------------------<br><br>- First Release on PyPI.<br><br>0.1.6 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br><br>0.1.5 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br><br><br>0.1.4 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br><br>0.1.3 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br><br><br>0.1.2 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br><br><br>0.1.1 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br>- Dropping bumperversion and using setuptool_scm<br><br>0.1.0 (2018-08-23)<br>------------------<br><br>- Never released, deployment error.<br><br><br>\n          </div>"}, "last_serial": 6008788, "releases": {"0.1.7": [{"comment_text": "", "digests": {"md5": "7f6b9ae1831cd499942a951261b180fb", "sha256": "ab43ef95754af61be59ddee05f9512685d0ba9e7e019cc5adc88e52ab97c09b6"}, "downloads": -1, "filename": "python_hookman-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7f6b9ae1831cd499942a951261b180fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14920, "upload_time": "2018-08-23T22:09:32", "upload_time_iso_8601": "2018-08-23T22:09:32.464800Z", "url": "https://files.pythonhosted.org/packages/c9/2d/ccc4295ebeda2457f3d229ee7165e0b7b6e314b7882638f793f0fec90251/python_hookman-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4a3a53329f3293157c9385d6874ae95", "sha256": "9182f29f42c649a5b9de089a15e0b0a740430a46bb9d7153005403cffeada4da"}, "downloads": -1, "filename": "python-hookman-0.1.7.tar.gz", "has_sig": false, "md5_digest": "a4a3a53329f3293157c9385d6874ae95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37653, "upload_time": "2018-08-23T22:09:33", "upload_time_iso_8601": "2018-08-23T22:09:33.798470Z", "url": "https://files.pythonhosted.org/packages/a3/51/f7276af9e2fa38f08300abe6e085c2cf77ffd31599d3407923b3fce6cb05/python-hookman-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "91c26db732b5d9dee254b86447fcf608", "sha256": "6226fd98cfbef4d603f35a6e664f9078055aead93bf9a1da60a7a9a599c50cdf"}, "downloads": -1, "filename": "python_hookman-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91c26db732b5d9dee254b86447fcf608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18654, "upload_time": "2019-02-08T19:16:35", "upload_time_iso_8601": "2019-02-08T19:16:35.783115Z", "url": "https://files.pythonhosted.org/packages/36/b3/31d2275480c51b6b1a59864c248b7e8f37b0c629fe946bcf8a5f36f2b8b0/python_hookman-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccb312b47a8e57a34ca9344ea6fa7686", "sha256": "1df6248fdb69421d47c981d76cd36c47137b58f9f27b1df0ef70ceb3f21f87b1"}, "downloads": -1, "filename": "python-hookman-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ccb312b47a8e57a34ca9344ea6fa7686", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42729, "upload_time": "2019-02-08T19:16:38", "upload_time_iso_8601": "2019-02-08T19:16:38.879623Z", "url": "https://files.pythonhosted.org/packages/45/bb/886c462c17da42ec42224de68aff70000197cbc4b4b60348a42a1583f725/python-hookman-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91c26db732b5d9dee254b86447fcf608", "sha256": "6226fd98cfbef4d603f35a6e664f9078055aead93bf9a1da60a7a9a599c50cdf"}, "downloads": -1, "filename": "python_hookman-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91c26db732b5d9dee254b86447fcf608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18654, "upload_time": "2019-02-08T19:16:35", "upload_time_iso_8601": "2019-02-08T19:16:35.783115Z", "url": "https://files.pythonhosted.org/packages/36/b3/31d2275480c51b6b1a59864c248b7e8f37b0c629fe946bcf8a5f36f2b8b0/python_hookman-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccb312b47a8e57a34ca9344ea6fa7686", "sha256": "1df6248fdb69421d47c981d76cd36c47137b58f9f27b1df0ef70ceb3f21f87b1"}, "downloads": -1, "filename": "python-hookman-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ccb312b47a8e57a34ca9344ea6fa7686", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42729, "upload_time": "2019-02-08T19:16:38", "upload_time_iso_8601": "2019-02-08T19:16:38.879623Z", "url": "https://files.pythonhosted.org/packages/45/bb/886c462c17da42ec42224de68aff70000197cbc4b4b60348a42a1583f725/python-hookman-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:19 2020"}