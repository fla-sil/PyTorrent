{"info": {"author": "PaperMtn", "author_email": "papermtn@protonmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Security"], "description": "![Slack Watchman](files/Slack_watchman_alt_var_1280x320.png)\n\n# Slack Watchman\n![Python 2.7 and 3 compatible](https://img.shields.io/pypi/pyversions/slack-watchman)\n![PyPI version](https://img.shields.io/pypi/v/slack-watchman.svg)\n![License: MIT](https://img.shields.io/pypi/l/slack-watchman.svg)\n\nMonitoring you Slack workspaces for sensitive information\n\n## About Slack Watchman\nSlack Watchman is an application that uses the Slack API to look for potentially sensitive data exposed in your Slack workspaces.\n\n### Features\nSlack Watchman searches for, and reports back on:\n\n- Externally shared channels\n- Potential leaked passwords\n- AWS Keys\n- GCP keys\n- Slack API keys\n- Private keys\n- Bank card details\n- Certificate files\n- Potentially interesting/malicious files (.docm, .xlsm, .zip etc.)\n\nIt also gives the following, which can be used for general auditing:\n- All channels\n- All users\n- All admins\n\n#### Time based searching\nYou can run Slack Watchman to look for results going back as far as:\n- 24 hours\n- 7 days\n- 30 days\n- All time\n\nThis means after one deep scan, you can schedule Slack Watchman to run regularly and only return results from your chosen timeframe.\n\n## Requirements\n### Slack API token\nTo run Slack Watchman, you will need a Slack API OAuth access token. You can do this by creating a simple [Slack App](https://api.slack.com/apps).\n\nThe app needs to have the following **User Token Scopes** added:\n```\nchannels:read\nfiles:read\ngroups:read\nim:read\nlinks:read\nmpim:read\nremote_files:read\nsearch:read\nteam:read\nusers:read\nusers:read.email\n```\n**Note**: User tokens act on behalf of the user who authorises them, so I would suggest you create this app and authorise it using a service account, otherwise the app will have access to your private channels and chats.\n\n\n### .conf file\nThis API token needs to be stored in a file named `slack_watchman.conf` which is stored in your home directory. The file should take the following format:\n```\n[auth]\nslack_token = xoxp-xxxxxxxxxx-...\n```\nSlack Watchman will look for this file at runtime, and notify you if it's not there.\n\n## Installation\nInstall via pip\n\n`pip install slack-watchman`\n\n## Usage\nSlack Watchman will be installed as a global command, use as follows:\n```\nusage: slack-watchman [-h] --timeframe {d,w,m,a} [--version] [--all] [-U] [-C]\n                   [-a] [-g] [-s] [-p] [-c] [-t] [-f] [-P]\n\nSlack Watchman: Monitoring you Slack workspaces for sensitive information\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --timeframe {d,w,m,a}\n                        How far back to search: d = 24 hours w = 7 days, m =\n                        30 days, a = all time\n  --version             show program's version number and exit\n  --all                 Find everything\n  -U, --users           Find all users, including admins\n  -C, --channels        Find all channels, including external shared channels\n  -a                    Look for AWS keys\n  -g                    Look for GCP keys\n  -s                    Look for Slack tokens\n  -p                    Look for private keys\n  -c                    Look for card details\n  -t                    Look for certificate files\n  -f                    Look for interesting files\n  -P                    Look for passwords\n  ```\n\nYou can run Slack Watchman to look for everything:\n\n`slack-watchman --timeframe a --all`\n\nOr arguments can be grouped together to search more granularly. This will look for AWS keys, GCP keys and passwords for the last 30 days:\n\n`slack-watchman --timeframe m -agP`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PaperMtn/slack-watchman", "keywords": "audit slack slack-watchman watchman blue-team red-team threat-hunting", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "slack-watchman", "package_url": "https://pypi.org/project/slack-watchman/", "platform": "", "project_url": "https://pypi.org/project/slack-watchman/", "project_urls": {"Homepage": "https://github.com/PaperMtn/slack-watchman"}, "release_url": "https://pypi.org/project/slack-watchman/1.0.2/", "requires_dist": ["requests", "colorama", "termcolor"], "requires_python": "", "summary": "Monitoring you Slack workspaces for sensitive information", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Slack Watchman\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c45c4c439f792afa111fe4153cbc86ec75240394/66696c65732f536c61636b5f77617463686d616e5f616c745f7661725f31323830783332302e706e67\"></p>\n<h1>Slack Watchman</h1>\n<p><img alt=\"Python 2.7 and 3 compatible\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a15a3a5eef3a8dec5a858f59ba0c05f8647abe47/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736c61636b2d77617463686d616e\">\n<img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95c6407a528895b4ba6cd5b49adb83a452705492/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736c61636b2d77617463686d616e2e737667\">\n<img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ca6c63b5025752cd255c8b4fa4fd0a9dd88e3d3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f736c61636b2d77617463686d616e2e737667\"></p>\n<p>Monitoring you Slack workspaces for sensitive information</p>\n<h2>About Slack Watchman</h2>\n<p>Slack Watchman is an application that uses the Slack API to look for potentially sensitive data exposed in your Slack workspaces.</p>\n<h3>Features</h3>\n<p>Slack Watchman searches for, and reports back on:</p>\n<ul>\n<li>Externally shared channels</li>\n<li>Potential leaked passwords</li>\n<li>AWS Keys</li>\n<li>GCP keys</li>\n<li>Slack API keys</li>\n<li>Private keys</li>\n<li>Bank card details</li>\n<li>Certificate files</li>\n<li>Potentially interesting/malicious files (.docm, .xlsm, .zip etc.)</li>\n</ul>\n<p>It also gives the following, which can be used for general auditing:</p>\n<ul>\n<li>All channels</li>\n<li>All users</li>\n<li>All admins</li>\n</ul>\n<h4>Time based searching</h4>\n<p>You can run Slack Watchman to look for results going back as far as:</p>\n<ul>\n<li>24 hours</li>\n<li>7 days</li>\n<li>30 days</li>\n<li>All time</li>\n</ul>\n<p>This means after one deep scan, you can schedule Slack Watchman to run regularly and only return results from your chosen timeframe.</p>\n<h2>Requirements</h2>\n<h3>Slack API token</h3>\n<p>To run Slack Watchman, you will need a Slack API OAuth access token. You can do this by creating a simple <a href=\"https://api.slack.com/apps\" rel=\"nofollow\">Slack App</a>.</p>\n<p>The app needs to have the following <strong>User Token Scopes</strong> added:</p>\n<pre><code>channels:read\nfiles:read\ngroups:read\nim:read\nlinks:read\nmpim:read\nremote_files:read\nsearch:read\nteam:read\nusers:read\nusers:read.email\n</code></pre>\n<p><strong>Note</strong>: User tokens act on behalf of the user who authorises them, so I would suggest you create this app and authorise it using a service account, otherwise the app will have access to your private channels and chats.</p>\n<h3>.conf file</h3>\n<p>This API token needs to be stored in a file named <code>slack_watchman.conf</code> which is stored in your home directory. The file should take the following format:</p>\n<pre><code>[auth]\nslack_token = xoxp-xxxxxxxxxx-...\n</code></pre>\n<p>Slack Watchman will look for this file at runtime, and notify you if it's not there.</p>\n<h2>Installation</h2>\n<p>Install via pip</p>\n<p><code>pip install slack-watchman</code></p>\n<h2>Usage</h2>\n<p>Slack Watchman will be installed as a global command, use as follows:</p>\n<pre><code>usage: slack-watchman [-h] --timeframe {d,w,m,a} [--version] [--all] [-U] [-C]\n                   [-a] [-g] [-s] [-p] [-c] [-t] [-f] [-P]\n\nSlack Watchman: Monitoring you Slack workspaces for sensitive information\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --timeframe {d,w,m,a}\n                        How far back to search: d = 24 hours w = 7 days, m =\n                        30 days, a = all time\n  --version             show program's version number and exit\n  --all                 Find everything\n  -U, --users           Find all users, including admins\n  -C, --channels        Find all channels, including external shared channels\n  -a                    Look for AWS keys\n  -g                    Look for GCP keys\n  -s                    Look for Slack tokens\n  -p                    Look for private keys\n  -c                    Look for card details\n  -t                    Look for certificate files\n  -f                    Look for interesting files\n  -P                    Look for passwords\n</code></pre>\n<p>You can run Slack Watchman to look for everything:</p>\n<p><code>slack-watchman --timeframe a --all</code></p>\n<p>Or arguments can be grouped together to search more granularly. This will look for AWS keys, GCP keys and passwords for the last 30 days:</p>\n<p><code>slack-watchman --timeframe m -agP</code></p>\n\n          </div>"}, "last_serial": 7190900, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0b91dd6b79da83011801fb977a242b4d", "sha256": "0c8f7e67cfd8c4ad6ee909448a62c5cb8d3163aa97f62ec3a1d5fabbc3f6cb18"}, "downloads": -1, "filename": "slack_watchman-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b91dd6b79da83011801fb977a242b4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21523, "upload_time": "2020-05-05T19:51:55", "upload_time_iso_8601": "2020-05-05T19:51:55.155260Z", "url": "https://files.pythonhosted.org/packages/d8/18/1be7ea5c95e88ea4d6ec7ee9b2ab36ebd9d58bbc516b0323337da92f7f04/slack_watchman-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "276d346f08bad72802bef43939f1a789", "sha256": "5aaddc04da3828bb0c5d27d814360f8beecdd0fdc94ea2f7936a038f8b465937"}, "downloads": -1, "filename": "slack-watchman-1.0.0.tar.gz", "has_sig": false, "md5_digest": "276d346f08bad72802bef43939f1a789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7954, "upload_time": "2020-05-05T19:51:57", "upload_time_iso_8601": "2020-05-05T19:51:57.389992Z", "url": "https://files.pythonhosted.org/packages/c0/cf/91e44bb6eca46b6326f802f00dcc681f8f52542c702f9dd4e7bc57874043/slack-watchman-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "747ebd9c123eb0b9f943ea9523ea27f0", "sha256": "e45d599f7a080e5bcc0b60ca6879455cea3b86cdadf9bdb5b6eb9a60d8d3bbc1"}, "downloads": -1, "filename": "slack_watchman-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "747ebd9c123eb0b9f943ea9523ea27f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22458, "upload_time": "2020-05-07T18:03:24", "upload_time_iso_8601": "2020-05-07T18:03:24.162151Z", "url": "https://files.pythonhosted.org/packages/42/99/2e88b0ae2a87e67b122467576fe43bf5500bdedc93000fa3d868f7d6cd86/slack_watchman-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f61e099c3f0cede989a37e0fb115deda", "sha256": "b06a30a99f60cec92055ff8d49727a9e843d044cca2126c06a1c8fdab2c4e0ac"}, "downloads": -1, "filename": "slack-watchman-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f61e099c3f0cede989a37e0fb115deda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8682, "upload_time": "2020-05-07T18:03:26", "upload_time_iso_8601": "2020-05-07T18:03:26.133303Z", "url": "https://files.pythonhosted.org/packages/6b/bd/f61e05f8f40bbd7bf7cbf6647b111929877418ab314a2745b420f175e30c/slack-watchman-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bf7ac3b50cf883f3e720535b32cb3afa", "sha256": "98badb6f8862bc6cb0dfe517dee3224ab79602b567bdd9ea88ea90f1176f1ec4"}, "downloads": -1, "filename": "slack_watchman-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bf7ac3b50cf883f3e720535b32cb3afa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22471, "upload_time": "2020-05-07T18:35:37", "upload_time_iso_8601": "2020-05-07T18:35:37.181238Z", "url": "https://files.pythonhosted.org/packages/d4/7a/c609ea8564c29936b38b28f682d055072ecb2a1ddc2395068b7f79cefae4/slack_watchman-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6cbf63ed411cbb474683648b65b9eab", "sha256": "0d4f444486ac0a762e31df450fd98ffbdc665208d4fd786973a3bb534239bc28"}, "downloads": -1, "filename": "slack-watchman-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c6cbf63ed411cbb474683648b65b9eab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8667, "upload_time": "2020-05-07T18:35:38", "upload_time_iso_8601": "2020-05-07T18:35:38.295685Z", "url": "https://files.pythonhosted.org/packages/07/aa/9ca5debec14f601111465dc5cdd16bf76ee96e104c3dbd83e97583c24962/slack-watchman-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf7ac3b50cf883f3e720535b32cb3afa", "sha256": "98badb6f8862bc6cb0dfe517dee3224ab79602b567bdd9ea88ea90f1176f1ec4"}, "downloads": -1, "filename": "slack_watchman-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bf7ac3b50cf883f3e720535b32cb3afa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22471, "upload_time": "2020-05-07T18:35:37", "upload_time_iso_8601": "2020-05-07T18:35:37.181238Z", "url": "https://files.pythonhosted.org/packages/d4/7a/c609ea8564c29936b38b28f682d055072ecb2a1ddc2395068b7f79cefae4/slack_watchman-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6cbf63ed411cbb474683648b65b9eab", "sha256": "0d4f444486ac0a762e31df450fd98ffbdc665208d4fd786973a3bb534239bc28"}, "downloads": -1, "filename": "slack-watchman-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c6cbf63ed411cbb474683648b65b9eab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8667, "upload_time": "2020-05-07T18:35:38", "upload_time_iso_8601": "2020-05-07T18:35:38.295685Z", "url": "https://files.pythonhosted.org/packages/07/aa/9ca5debec14f601111465dc5cdd16bf76ee96e104c3dbd83e97583c24962/slack-watchman-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:36 2020"}