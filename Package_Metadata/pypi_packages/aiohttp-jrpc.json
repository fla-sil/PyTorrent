{"info": {"author": "Veniamin Gvozdikov", "author_email": "g.veniamin@googlemail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP"], "description": "aiohttp_jrpc\n============\n.. image:: https://travis-ci.org/zloidemon/aiohttp_jrpc.svg?branch=master\n    :target: https://travis-ci.org/zloidemon/aiohttp_jrpc\n.. image:: https://coveralls.io/repos/zloidemon/aiohttp_jrpc/badge.svg\n    :target: https://coveralls.io/r/zloidemon/aiohttp_jrpc\n.. image:: https://badge.fury.io/py/aiohttp_jrpc.svg\n    :target: https://badge.fury.io/py/aiohttp_jrpc\n\njsonrpc_ protocol implementation for `aiohttp.web`__.\n\n__ aiohttp_web_\n\n\nExample server\n--------------\n\n.. code:: python\n\n    import asyncio\n    from aiohttp import web\n    from aiohttp_jrpc import Service, JError, jrpc_errorhandler_middleware\n\n    SCH = {\n        \"type\": \"object\",\n        \"properties\": {\n            \"data\": {\"type\": \"string\"},\n        },\n    }\n\n    @asyncio.coroutine\n    def custom_errorhandler_middleware(app, handler):\n        @asyncio.coroutine\n        def middleware(request):\n            try:\n                return (yield from handler(request))\n            except Exception:\n                \"\"\" Custom errors: -32000 to -32099 \"\"\"\n                return JError().custom(-32000, \"Example error\")\n        return middleware\n\n    class MyJRPC(Service):\n        @Service.valid(SCH)\n        def hello(self, ctx, data):\n            if data[\"data\"] == \"hello\":\n                return {\"status\": \"hi\"}\n            return {\"status\": data}\n\n        def error(self, ctx, data):\n            raise Exception(\"Error which will catch middleware\")\n\n        def no_valid(self, ctx, data):\n            \"\"\" Method without validation incommig data \"\"\"\n            return {\"status\": \"ok\"}\n\n    @asyncio.coroutine\n    def init(loop):\n        app = web.Application(loop=loop, middlewares=[jrpc_errorhandler_middleware])\n        #app = web.Application(loop=loop, middlewares=[custom_errorhandler_middleware])\n        app.router.add_route('POST', \"/api\", MyJRPC)\n\n        srv = yield from loop.create_server(app.make_handler(),\n                                            \"127.0.0.1\", 8080)\n        print(\"Server started at http://127.0.0.1:8080\")\n        return srv\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(init(loop))\n    try:\n        loop.run_forever()\n    except KeyboardInterrupt:\n        pass\n\nExample client\n--------------\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    from aiohttp_jrpc import Client,InvalidResponse\n\n    Remote = Client('http://localhost:8080/api')\n\n    @asyncio.coroutine\n    def rpc_call():\n        try:\n            rsp = yield from Remote.request('hello', {'data': 'hello'})\n            return rsp\n        except InvalidResponse as err:\n            return err\n        except Exception as err:\n            return err\n        return False\n\n    loop = asyncio.get_event_loop()\n    content = loop.run_until_complete(rpc_call())\n    print(content.result)\n    loop.close()\n\nLicense\n-------\n\n``aiohttp_jrpc`` BSD license.\n\n\n.. _jsonrpc: http://www.jsonrpc.org/specification\n.. _aiohttp_web: http://aiohttp.readthedocs.org/en/latest/web.html\n\nCHANGES\n=======\n\n0.1.0 (2016-02-20)\n\n* Added client and tests\n* Changed BSD v3 to BSD v2 license\n\n0.0.3 (2015-10-27)\n\n* Fix messages of protocol errors\n* Fix tests and add tests for custom errors\n* Fix example bugs\n* Added custom middleware to example for handle errors\n\n0.0.2 (2015-10-22)\n\n* Added middleware to catch exceptions\n* Testing internal error\n\n0.0.1 (2015-10-18)\n\n* Init release\n\nCredits\n=======\n\n``aiohttp_jrpc`` is written by `Veniamin Gvozdikov <https://github.com/zloidemon>`_.\n\nContributors\n------------\n\n- `latyas(\u61d2) <https://github.com/ly0>`_\n\nPlease add yourself here alphabetically when you submit your first pull request.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zloidemon/aiohttp_jrpc/", "keywords": "aiohttp jsonrpc rpc", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "aiohttp-jrpc", "package_url": "https://pypi.org/project/aiohttp-jrpc/", "platform": "any", "project_url": "https://pypi.org/project/aiohttp-jrpc/", "project_urls": {"Homepage": "https://github.com/zloidemon/aiohttp_jrpc/"}, "release_url": "https://pypi.org/project/aiohttp-jrpc/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "JSON RPC protocol for aiohttp.web (http server for asyncio)", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"aiohttp-jrpc\">\n<h2>aiohttp_jrpc</h2>\n<a href=\"https://travis-ci.org/zloidemon/aiohttp_jrpc\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/zloidemon/aiohttp_jrpc.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27cc332e61427076c04d6df8557a967e65ddfb2d/68747470733a2f2f7472617669732d63692e6f72672f7a6c6f6964656d6f6e2f61696f687474705f6a7270632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/zloidemon/aiohttp_jrpc\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/zloidemon/aiohttp_jrpc/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b16b93d93afeef73a0e18fa2848ebfdca18a9c6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7a6c6f6964656d6f6e2f61696f687474705f6a7270632f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/aiohttp_jrpc\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/aiohttp_jrpc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bc810c13037c65ae1d5a25404ecfd45f894ba0f/68747470733a2f2f62616467652e667572792e696f2f70792f61696f687474705f6a7270632e737667\"></a>\n<p><a href=\"http://www.jsonrpc.org/specification\" rel=\"nofollow\">jsonrpc</a> protocol implementation for <a href=\"http://aiohttp.readthedocs.org/en/latest/web.html\" rel=\"nofollow\">aiohttp.web</a>.</p>\n<div id=\"example-server\">\n<h3>Example server</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_jrpc</span> <span class=\"kn\">import</span> <span class=\"n\">Service</span><span class=\"p\">,</span> <span class=\"n\">JError</span><span class=\"p\">,</span> <span class=\"n\">jrpc_errorhandler_middleware</span>\n\n<span class=\"n\">SCH</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_errorhandler_middleware</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"p\">):</span>\n    <span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n    <span class=\"k\">def</span> <span class=\"nf\">middleware</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"k\">yield from</span> <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n            <span class=\"sd\">\"\"\" Custom errors: -32000 to -32099 \"\"\"</span>\n            <span class=\"k\">return</span> <span class=\"n\">JError</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">custom</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">32000</span><span class=\"p\">,</span> <span class=\"s2\">\"Example error\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">middleware</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyJRPC</span><span class=\"p\">(</span><span class=\"n\">Service</span><span class=\"p\">):</span>\n    <span class=\"nd\">@Service</span><span class=\"o\">.</span><span class=\"n\">valid</span><span class=\"p\">(</span><span class=\"n\">SCH</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"data\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hi\"</span><span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"status\"</span><span class=\"p\">:</span> <span class=\"n\">data</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">\"Error which will catch middleware\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">no_valid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Method without validation incommig data \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ok\"</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">middlewares</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">jrpc_errorhandler_middleware</span><span class=\"p\">])</span>\n    <span class=\"c1\">#app = web.Application(loop=loop, middlewares=[custom_errorhandler_middleware])</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">add_route</span><span class=\"p\">(</span><span class=\"s1\">'POST'</span><span class=\"p\">,</span> <span class=\"s2\">\"/api\"</span><span class=\"p\">,</span> <span class=\"n\">MyJRPC</span><span class=\"p\">)</span>\n\n    <span class=\"n\">srv</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_server</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">make_handler</span><span class=\"p\">(),</span>\n                                        <span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Server started at http://127.0.0.1:8080\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">srv</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n</div>\n<div id=\"example-client\">\n<h3>Example client</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_jrpc</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span><span class=\"p\">,</span><span class=\"n\">InvalidResponse</span>\n\n<span class=\"n\">Remote</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/api'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">rpc_call</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">rsp</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">Remote</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">rsp</span>\n    <span class=\"k\">except</span> <span class=\"n\">InvalidResponse</span> <span class=\"k\">as</span> <span class=\"n\">err</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">err</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">err</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">err</span>\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">rpc_call</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p><tt>aiohttp_jrpc</tt> BSD license.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<p>0.1.0 (2016-02-20)</p>\n<ul>\n<li>Added client and tests</li>\n<li>Changed BSD v3 to BSD v2 license</li>\n</ul>\n<p>0.0.3 (2015-10-27)</p>\n<ul>\n<li>Fix messages of protocol errors</li>\n<li>Fix tests and add tests for custom errors</li>\n<li>Fix example bugs</li>\n<li>Added custom middleware to example for handle errors</li>\n</ul>\n<p>0.0.2 (2015-10-22)</p>\n<ul>\n<li>Added middleware to catch exceptions</li>\n<li>Testing internal error</li>\n</ul>\n<p>0.0.1 (2015-10-18)</p>\n<ul>\n<li>Init release</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p><tt>aiohttp_jrpc</tt> is written by <a href=\"https://github.com/zloidemon\" rel=\"nofollow\">Veniamin Gvozdikov</a>.</p>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li><a href=\"https://github.com/ly0\" rel=\"nofollow\">latyas(\u61d2)</a></li>\n</ul>\n<p>Please add yourself here alphabetically when you submit your first pull request.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1973776, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "44a041e24fa1934b6302616482624912", "sha256": "03b7cc542402d15cbb3785b52d739b30e05d48b4c962078c8c08422e830dfc4a"}, "downloads": -1, "filename": "aiohttp_jrpc-0.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "44a041e24fa1934b6302616482624912", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5738, "upload_time": "2015-10-20T16:19:43", "upload_time_iso_8601": "2015-10-20T16:19:43.550157Z", "url": "https://files.pythonhosted.org/packages/b6/cc/edaac78a939ad5c0c4245b4a64e26899c8039a35cbb1bb4d40291b522994/aiohttp_jrpc-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6333f21d88f15894090ca6fc0f87eae1", "sha256": "8dff603a2d75233dd066754201c8d8177628461d31bb9f04f7d793e8715d9f9e"}, "downloads": -1, "filename": "aiohttp_jrpc-0.0.1.tar.gz", "has_sig": true, "md5_digest": "6333f21d88f15894090ca6fc0f87eae1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3679, "upload_time": "2015-10-20T16:19:48", "upload_time_iso_8601": "2015-10-20T16:19:48.622148Z", "url": "https://files.pythonhosted.org/packages/ab/44/72af6d34ea181b3e4be0428737accf02cc2967ddec72a3adcbe93e708ae3/aiohttp_jrpc-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b1c72dfd81b8b1e2f498d9cafb4952ba", "sha256": "2829880f9e0261a8c08602523a850c1eade0f1751ef422a57380bfbdd743d851"}, "downloads": -1, "filename": "aiohttp_jrpc-0.0.2-py3-none-any.whl", "has_sig": true, "md5_digest": "b1c72dfd81b8b1e2f498d9cafb4952ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6046, "upload_time": "2015-10-24T16:46:30", "upload_time_iso_8601": "2015-10-24T16:46:30.499424Z", "url": "https://files.pythonhosted.org/packages/48/d9/e5d73f1ef969dc246f073477dd09a095f2b55c20650b1293c264a1098100/aiohttp_jrpc-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aa22c7b6fc72eeb683a7bc5395dbdaa", "sha256": "3c7df5e423e0bc2f3df56bb9903277d1d114a1f3f79a76af70a7710cc1963de9"}, "downloads": -1, "filename": "aiohttp_jrpc-0.0.2.tar.gz", "has_sig": true, "md5_digest": "2aa22c7b6fc72eeb683a7bc5395dbdaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3836, "upload_time": "2015-10-24T16:46:34", "upload_time_iso_8601": "2015-10-24T16:46:34.657327Z", "url": "https://files.pythonhosted.org/packages/f8/ab/7b6e07ad00e7d8f320e186bcf1c7d37eda625c07fda53cb16d6ee709c6a0/aiohttp_jrpc-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5101e698dffb5c3f4662d72217b75516", "sha256": "f1a9cc2c9247aaaed2de1a33f7b7dbfdbb74ec9bdc8dd97e787adf41a53ad310"}, "downloads": -1, "filename": "aiohttp_jrpc-0.0.3-py3-none-any.whl", "has_sig": true, "md5_digest": "5101e698dffb5c3f4662d72217b75516", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6810, "upload_time": "2015-10-27T10:28:05", "upload_time_iso_8601": "2015-10-27T10:28:05.781904Z", "url": "https://files.pythonhosted.org/packages/54/e4/1f9507dc576c80a377e4a98165b26f9d9d9036308ad62e0271b59d9bec23/aiohttp_jrpc-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6d2b120843f0b3d63614f2ce742e794", "sha256": "824f220d7d9a3e172db0c8d51d492802a364cee59068ac0dd48dc24b3f0ca816"}, "downloads": -1, "filename": "aiohttp_jrpc-0.0.3.tar.gz", "has_sig": true, "md5_digest": "e6d2b120843f0b3d63614f2ce742e794", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4354, "upload_time": "2015-10-27T10:28:20", "upload_time_iso_8601": "2015-10-27T10:28:20.733956Z", "url": "https://files.pythonhosted.org/packages/3f/e6/ab8a241c4aaa7cad7ebde82dee3fb3b7b5649778b331362e0975d6b4f9aa/aiohttp_jrpc-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d0662bb5fa64bb95aa3a86f843e2d8b6", "sha256": "6aa94ff20aa8c80e1987baa6551af018bdf9f135c06c7bdf09858561b9a7f515"}, "downloads": -1, "filename": "aiohttp_jrpc-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "d0662bb5fa64bb95aa3a86f843e2d8b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7950, "upload_time": "2016-02-24T10:47:04", "upload_time_iso_8601": "2016-02-24T10:47:04.628589Z", "url": "https://files.pythonhosted.org/packages/4f/21/7867d25ea7c8f5625bc3d2ffa3e372719f5f5c9fbc1333d5b59401044bd6/aiohttp_jrpc-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66de705230ac8348d1719ad216574c95", "sha256": "0178e10f12cf378a2b922db5c803196c1adbed76119becaab37af70a84bde8b5"}, "downloads": -1, "filename": "aiohttp_jrpc-0.1.0.tar.gz", "has_sig": true, "md5_digest": "66de705230ac8348d1719ad216574c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5233, "upload_time": "2016-02-24T10:47:10", "upload_time_iso_8601": "2016-02-24T10:47:10.795071Z", "url": "https://files.pythonhosted.org/packages/a9/90/52db2ee2947b1df01ad37c55aa3aa6fd12cfc4f5338e04fe12581d7e78b1/aiohttp_jrpc-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d0662bb5fa64bb95aa3a86f843e2d8b6", "sha256": "6aa94ff20aa8c80e1987baa6551af018bdf9f135c06c7bdf09858561b9a7f515"}, "downloads": -1, "filename": "aiohttp_jrpc-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "d0662bb5fa64bb95aa3a86f843e2d8b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7950, "upload_time": "2016-02-24T10:47:04", "upload_time_iso_8601": "2016-02-24T10:47:04.628589Z", "url": "https://files.pythonhosted.org/packages/4f/21/7867d25ea7c8f5625bc3d2ffa3e372719f5f5c9fbc1333d5b59401044bd6/aiohttp_jrpc-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66de705230ac8348d1719ad216574c95", "sha256": "0178e10f12cf378a2b922db5c803196c1adbed76119becaab37af70a84bde8b5"}, "downloads": -1, "filename": "aiohttp_jrpc-0.1.0.tar.gz", "has_sig": true, "md5_digest": "66de705230ac8348d1719ad216574c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5233, "upload_time": "2016-02-24T10:47:10", "upload_time_iso_8601": "2016-02-24T10:47:10.795071Z", "url": "https://files.pythonhosted.org/packages/a9/90/52db2ee2947b1df01ad37c55aa3aa6fd12cfc4f5338e04fe12581d7e78b1/aiohttp_jrpc-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:19 2020"}