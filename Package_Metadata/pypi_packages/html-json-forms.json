{"info": {"author": "S. Andrew Sheppard", "author_email": "andrew@wq.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Text Processing :: Markup :: HTML"], "description": "# html-json-forms\n\nAn implementation of the [HTML JSON Form] specification for use with the [Django REST Framework].  Extracted from [wq.db] for general use.\n\nHTML JSON Forms use an array-style naming convention that makes it possible to represent complex nested JSON objects with regular HTML fields.  The idea is that client applications (such as [wq.app]) and eventually browsers could parse these fields and submit structured JSON to the server.  For backwards compatibility with older clients, the spec recommends implementing a fallback parser on the server to ensure that older clients can submit forms using the traditional method.  This Python package is an implementation of that algorithm.\n\n```html\n<!-- Input -->\n<form>\n  <input name=\"items[0][name]\" value=\"Example\">\n  <input name=\"items[0][count]\" value=\"5\">\n</form>\n```\n\n```js\n// Output\n{\n    \"items\": [\n        {\n            \"name\": \"Example\",\n            \"count\": \"5\"\n        }\n    ]\n}\n```\n\nNote that the HTML JSON Form spec was never finalized.  The implementation is still useful as a formal way of representing structured data via traditional HTML forms.\n\n[![Latest PyPI Release](https://img.shields.io/pypi/v/html-json-forms.svg)](https://pypi.org/project/html-json-forms)\n[![Release Notes](https://img.shields.io/github/release/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/releases)\n[![License](https://img.shields.io/pypi/l/html-json-forms.svg)](https://github.com/wq/html-json-forms/blob/master/LICENSE)\n[![GitHub Stars](https://img.shields.io/github/stars/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/stargazers)\n[![GitHub Forks](https://img.shields.io/github/forks/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/network)\n[![GitHub Issues](https://img.shields.io/github/issues/wq/html-json-forms.svg)](https://github.com/wq/html-json-forms/issues)\n\n[![Travis Build Status](https://img.shields.io/travis/wq/html-json-forms/master.svg)](https://travis-ci.org/wq/html-json-forms)\n[![Python Support](https://img.shields.io/pypi/pyversions/html-json-forms.svg)](https://pypi.org/project/html-json-forms)\n[![Django Support](https://img.shields.io/pypi/djversions/html-json-forms.svg)](https://pypi.org/project/html-json-forms)\n\n## Usage\n\n`html-json-forms` is available via PyPI:\n\n```bash\npip3 install html-json-forms\n```\n\n### Functional\n\n```python\nfrom html_json_forms import parse_json_form\n\nparse_json_form({\n    'items[0][name]': \"Example\",\n    'items[0][count]': \"5\",\n})\n```\n\n### DRF Integration\nTo enable HTML JSON Form parsing in Django REST Framework, subclass `JSONFormSerializer`:\n\n```python\nfrom rest_framework import serializers\nfrom html_json_forms.serializers import JSONFormSerializer\nfrom .models import Parent, Child\n\nclass ChildSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\nclass ParentSerializer(JSONFormSerializer, serializers.ModelSerializer):\n    children = ChildSerializer(many=True)\n    class Meta:\n        model = Parent\n\n# Alternatively you can use the pre-mixed JSONFormModelSerializer:\n# class ParentSerializer(JSONFormModelSerializer):\n#    ...\n```\n\nNote that only the top-level serializer needs to have the `JSONFormSerializer` mixin; the nested serializers will \"just work\" as if the data had been submitted via JSON.  Note further that this module only handles processing nested form data; it is still up to you to figure out how to handle [writing nested models][nested] (unless you are using [wq.db]'s [patterns] module, which includes writable nested serializers by default).\n\n[HTML JSON Form]: https://www.w3.org/TR/html-json-forms/\n[Django REST Framework]: http://www.django-rest-framework.org/\n[wq.db]: https://wq.io/wq.db\n[wq.app]: https://wq.io/wq.app\n[nested]: http://www.django-rest-framework.org/api-guide/serializers/#writable-nested-representations\n[patterns]: https://wq.io/docs/about-patterns\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wq/html-json-forms", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "html-json-forms", "package_url": "https://pypi.org/project/html-json-forms/", "platform": "", "project_url": "https://pypi.org/project/html-json-forms/", "project_urls": {"Homepage": "https://github.com/wq/html-json-forms"}, "release_url": "https://pypi.org/project/html-json-forms/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Implementation of the HTML JSON Forms spec for use with the Django REST Framework.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>html-json-forms</h1>\n<p>An implementation of the <a href=\"https://www.w3.org/TR/html-json-forms/\" rel=\"nofollow\">HTML JSON Form</a> specification for use with the <a href=\"http://www.django-rest-framework.org/\" rel=\"nofollow\">Django REST Framework</a>.  Extracted from <a href=\"https://wq.io/wq.db\" rel=\"nofollow\">wq.db</a> for general use.</p>\n<p>HTML JSON Forms use an array-style naming convention that makes it possible to represent complex nested JSON objects with regular HTML fields.  The idea is that client applications (such as <a href=\"https://wq.io/wq.app\" rel=\"nofollow\">wq.app</a>) and eventually browsers could parse these fields and submit structured JSON to the server.  For backwards compatibility with older clients, the spec recommends implementing a fallback parser on the server to ensure that older clients can submit forms using the traditional method.  This Python package is an implementation of that algorithm.</p>\n<pre><span class=\"c\">&lt;!-- Input --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"items[0][name]\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"Example\"</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"items[0][count]\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"5\"</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"c1\">// Output</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"items\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Example\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"count\"</span><span class=\"o\">:</span> <span class=\"s2\">\"5\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Note that the HTML JSON Form spec was never finalized.  The implementation is still useful as a formal way of representing structured data via traditional HTML forms.</p>\n<p><a href=\"https://pypi.org/project/html-json-forms\" rel=\"nofollow\"><img alt=\"Latest PyPI Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f989e8ecf20f5c24d7ef7f478882285e71dec1b2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f68746d6c2d6a736f6e2d666f726d732e737667\"></a>\n<a href=\"https://github.com/wq/html-json-forms/releases\" rel=\"nofollow\"><img alt=\"Release Notes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/464097fc726a6c50e06f5dc6bff9a45826a28c7c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f77712f68746d6c2d6a736f6e2d666f726d732e737667\"></a>\n<a href=\"https://github.com/wq/html-json-forms/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae861f055a8f1ccdbab883ab9fe5c4d87d3e52c2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f68746d6c2d6a736f6e2d666f726d732e737667\"></a>\n<a href=\"https://github.com/wq/html-json-forms/stargazers\" rel=\"nofollow\"><img alt=\"GitHub Stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c12f1012b58d865e1df7aee162817a39910340c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f77712f68746d6c2d6a736f6e2d666f726d732e737667\"></a>\n<a href=\"https://github.com/wq/html-json-forms/network\" rel=\"nofollow\"><img alt=\"GitHub Forks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b8dc4cc4ff24c84f29317caa65732082883aa42/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f77712f68746d6c2d6a736f6e2d666f726d732e737667\"></a>\n<a href=\"https://github.com/wq/html-json-forms/issues\" rel=\"nofollow\"><img alt=\"GitHub Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f173dfe0310908828187f4382cc688282043df9e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f77712f68746d6c2d6a736f6e2d666f726d732e737667\"></a></p>\n<p><a href=\"https://travis-ci.org/wq/html-json-forms\" rel=\"nofollow\"><img alt=\"Travis Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3fb7637ccfe5943de99bb629dd4cfa0f776a9487/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f77712f68746d6c2d6a736f6e2d666f726d732f6d61737465722e737667\"></a>\n<a href=\"https://pypi.org/project/html-json-forms\" rel=\"nofollow\"><img alt=\"Python Support\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2399fec42aca59cf0982e650fd45616bc653f757/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f68746d6c2d6a736f6e2d666f726d732e737667\"></a>\n<a href=\"https://pypi.org/project/html-json-forms\" rel=\"nofollow\"><img alt=\"Django Support\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a75dd06cb4300a26df1c3bde037dd42d1594ead4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f68746d6c2d6a736f6e2d666f726d732e737667\"></a></p>\n<h2>Usage</h2>\n<p><code>html-json-forms</code> is available via PyPI:</p>\n<pre>pip3 install html-json-forms\n</pre>\n<h3>Functional</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">html_json_forms</span> <span class=\"kn\">import</span> <span class=\"n\">parse_json_form</span>\n\n<span class=\"n\">parse_json_form</span><span class=\"p\">({</span>\n    <span class=\"s1\">'items[0][name]'</span><span class=\"p\">:</span> <span class=\"s2\">\"Example\"</span><span class=\"p\">,</span>\n    <span class=\"s1\">'items[0][count]'</span><span class=\"p\">:</span> <span class=\"s2\">\"5\"</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n</pre>\n<h3>DRF Integration</h3>\n<p>To enable HTML JSON Form parsing in Django REST Framework, subclass <code>JSONFormSerializer</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">html_json_forms.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">JSONFormSerializer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Parent</span><span class=\"p\">,</span> <span class=\"n\">Child</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ChildSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Child</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ParentSerializer</span><span class=\"p\">(</span><span class=\"n\">JSONFormSerializer</span><span class=\"p\">,</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"n\">ChildSerializer</span><span class=\"p\">(</span><span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Parent</span>\n\n<span class=\"c1\"># Alternatively you can use the pre-mixed JSONFormModelSerializer:</span>\n<span class=\"c1\"># class ParentSerializer(JSONFormModelSerializer):</span>\n<span class=\"c1\">#    ...</span>\n</pre>\n<p>Note that only the top-level serializer needs to have the <code>JSONFormSerializer</code> mixin; the nested serializers will \"just work\" as if the data had been submitted via JSON.  Note further that this module only handles processing nested form data; it is still up to you to figure out how to handle <a href=\"http://www.django-rest-framework.org/api-guide/serializers/#writable-nested-representations\" rel=\"nofollow\">writing nested models</a> (unless you are using <a href=\"https://wq.io/wq.db\" rel=\"nofollow\">wq.db</a>'s <a href=\"https://wq.io/docs/about-patterns\" rel=\"nofollow\">patterns</a> module, which includes writable nested serializers by default).</p>\n\n          </div>"}, "last_serial": 6455566, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4048e27f956b40acc5f9d684ceec2053", "sha256": "b42f2223c8c4b69e72ede3faae05222952b45f70b9e5f2bf07209ca239dd787f"}, "downloads": -1, "filename": "html-json-forms-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4048e27f956b40acc5f9d684ceec2053", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5898, "upload_time": "2016-03-04T22:53:52", "upload_time_iso_8601": "2016-03-04T22:53:52.618547Z", "url": "https://files.pythonhosted.org/packages/51/71/08a887b64f002dc6ed11f6c613dd08417466911cdddf6bf0da1ba729b0e6/html-json-forms-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "42b0e29572327b880a942d4a89092b79", "sha256": "c62ec6198b9a9e87aae5cd31c3c00ab5140eebb1c6f26e1091c50fb5b84009d1"}, "downloads": -1, "filename": "html-json-forms-0.1.1.tar.gz", "has_sig": false, "md5_digest": "42b0e29572327b880a942d4a89092b79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5972, "upload_time": "2016-03-07T21:31:02", "upload_time_iso_8601": "2016-03-07T21:31:02.678678Z", "url": "https://files.pythonhosted.org/packages/05/62/31e70997f24ae8efa64fd8e1a24020e7d340ff63a15a592b35b91447ca37/html-json-forms-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "11015e091b53892410208c26caa63b49", "sha256": "231c174bb1e395c21d69fddc7bb922b9f686dc6a7dad8096d525e759192aee43"}, "downloads": -1, "filename": "html-json-forms-1.0.0.tar.gz", "has_sig": false, "md5_digest": "11015e091b53892410208c26caa63b49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6075, "upload_time": "2016-08-23T15:00:56", "upload_time_iso_8601": "2016-08-23T15:00:56.889627Z", "url": "https://files.pythonhosted.org/packages/94/8b/5cde26c27dc5e9dd1f3f62839f707f1e06f430e9a83ae6d3120de875af97/html-json-forms-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1250569d5ef7b696f9b27ebea07961ac", "sha256": "f3c422edab78ae83f16a1ee2ab701956775a33b0b7c3a19e428db2bf2d086df2"}, "downloads": -1, "filename": "html_json_forms-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1250569d5ef7b696f9b27ebea07961ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7146, "upload_time": "2019-04-17T05:46:38", "upload_time_iso_8601": "2019-04-17T05:46:38.890058Z", "url": "https://files.pythonhosted.org/packages/09/cf/8b4b630c4793d9ddfa1e7a2b221b5ed87d7701531919478faac67da7ea57/html_json_forms-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "189afe3dc82bdb846bab76810e4cdde6", "sha256": "61af4b4c97ab2e9fc4149664585ac11a60e20aba5e2254e38cf4cdb69bc8f916"}, "downloads": -1, "filename": "html-json-forms-1.1.0.tar.gz", "has_sig": false, "md5_digest": "189afe3dc82bdb846bab76810e4cdde6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9728, "upload_time": "2019-04-17T05:46:40", "upload_time_iso_8601": "2019-04-17T05:46:40.281293Z", "url": "https://files.pythonhosted.org/packages/8d/72/24d2166cd5cecf580ee07c36ccc6fc8ce6c1f1ada484c98097b780dcb4b9/html-json-forms-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "d4193a754aabd4130e817776b8cbb429", "sha256": "51e7e9088bc88e324027144ca25d8bcdd37da28f311a8436bfd88944138ed409"}, "downloads": -1, "filename": "html_json_forms-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d4193a754aabd4130e817776b8cbb429", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7158, "upload_time": "2020-01-15T00:57:48", "upload_time_iso_8601": "2020-01-15T00:57:48.366609Z", "url": "https://files.pythonhosted.org/packages/83/dd/58fad0d2d018a4794b7b0f97d6a55f6da63d768e4ed905f94cb0a894679a/html_json_forms-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e716fa5f535e9dbea9928b2bfec78729", "sha256": "16dc413dc858fcc53602ad509c1aef735534838e1bae888bf429e210a9c48f6b"}, "downloads": -1, "filename": "html-json-forms-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e716fa5f535e9dbea9928b2bfec78729", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9821, "upload_time": "2020-01-15T00:57:49", "upload_time_iso_8601": "2020-01-15T00:57:49.970155Z", "url": "https://files.pythonhosted.org/packages/e8/80/9b76801b26cdf549d49d9daa93ed5df069de3bd0cd3938a7780aa0741197/html-json-forms-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4193a754aabd4130e817776b8cbb429", "sha256": "51e7e9088bc88e324027144ca25d8bcdd37da28f311a8436bfd88944138ed409"}, "downloads": -1, "filename": "html_json_forms-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d4193a754aabd4130e817776b8cbb429", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7158, "upload_time": "2020-01-15T00:57:48", "upload_time_iso_8601": "2020-01-15T00:57:48.366609Z", "url": "https://files.pythonhosted.org/packages/83/dd/58fad0d2d018a4794b7b0f97d6a55f6da63d768e4ed905f94cb0a894679a/html_json_forms-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e716fa5f535e9dbea9928b2bfec78729", "sha256": "16dc413dc858fcc53602ad509c1aef735534838e1bae888bf429e210a9c48f6b"}, "downloads": -1, "filename": "html-json-forms-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e716fa5f535e9dbea9928b2bfec78729", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9821, "upload_time": "2020-01-15T00:57:49", "upload_time_iso_8601": "2020-01-15T00:57:49.970155Z", "url": "https://files.pythonhosted.org/packages/e8/80/9b76801b26cdf549d49d9daa93ed5df069de3bd0cd3938a7780aa0741197/html-json-forms-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:16 2020"}