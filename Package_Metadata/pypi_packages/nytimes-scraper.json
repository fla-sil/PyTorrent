{"info": {"author": "Tim Pietz", "author_email": "tim@pietz.me", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# nytimes-scraper\n\n[![PyPI](https://img.shields.io/pypi/v/nytimes-scraper)](https://pypi.org/project/nytimes-scraper/)\n\nScrape article metadata and comments from NYTimes\n\n## Setup\n```bash\npip install nytimes-scraper\n```\n\n## CLI usage\nThe scraper will automatically fetch every article and all the user comments published on\n[nytimes.com](https://www.nytimes.com/).\nArticles are processed month by month, starting with the current month.\nFor each month, a `{year}-{month}-articles.pickle` and `{year}-{month}-comments.pickle` will be\ngenerated in the current directory.\nIf the process is restarted, existing outputs will not be overridden and the scraper will continue\nat the month where it left off.\nTo use it, run\n```bash\npython -m nytimes_scraper <API_KEY>\n```\n\n## Programmatic usage\nThe scraper can also be started programmatically\n```python\nimport datetime as dt\nfrom nytimes_scraper import run_scraper, scrape_month\n\n# scrape february of 2020\narticle_df, comment_df = scrape_month('<your_api_key>', date=dt.date(2020, 2, 1))\n\n# scrape all articles month by month\nrun_scraper('<your_api_key>')\n```\n\nAlternatively, the `nytimes_scraper.articles` and `nytimes_scraper.comments` modules can be used for more\nfine-grained access:\n```python\nimport datetime as dt\nfrom nytimes_scraper.nyt_api import NytApi\nfrom nytimes_scraper.articles import fetch_articles_by_month, articles_to_df\nfrom nytimes_scraper.comments import fetch_comments, fetch_comments_by_article, comments_to_df\n\napi = NytApi('<your_api_key>')\n\n# Fetch articles of a specific month\narticles = fetch_articles_by_month(api, dt.date(2020, 2, 1))\narticle_df = articles_to_df(articles)\n\n# Fetch comments from multiple articles\n# a) using the results of a previous article query\narticle_ids_and_urls = list(article_df['web_url'].iteritems())\ncomments_a = fetch_comments(api, article_ids_and_urls)\ncomment_df = comments_to_df(comments_a)\n\n# b) using a custom list of articles\ncomments_b = fetch_comments(api, article_ids_and_urls=[\n    ('nyt://article/316ef65c-7021-5755-885c-a9e1ef2cfdf2', 'https://www.nytimes.com/2020/01/03/world/middleeast/trump-iran-suleimani.html'),\n    ('nyt://article/b2d1b802-412e-51f7-8864-efc931e87bb3', 'https://www.nytimes.com/2020/01/04/opinion/impeachment-witnesses.html'),\n])\n\n# Fetch comment for one specific article by its URL\ncomments_c = fetch_comments_by_article(api, 'https://www.nytimes.com/2019/11/30/opinion/sunday/bernie-sanders.html')\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ietz/nytimes-scraper", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nytimes-scraper", "package_url": "https://pypi.org/project/nytimes-scraper/", "platform": "", "project_url": "https://pypi.org/project/nytimes-scraper/", "project_urls": {"Homepage": "https://github.com/ietz/nytimes-scraper"}, "release_url": "https://pypi.org/project/nytimes-scraper/1.1.0/", "requires_dist": ["cssselect", "fire", "lxml", "pandas", "requests", "tqdm"], "requires_python": "", "summary": "Scrape article metadata and comments from NYTimes", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nytimes-scraper</h1>\n<p><a href=\"https://pypi.org/project/nytimes-scraper/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2d8a2533c53250cf218ea562c12433f231ce077/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e7974696d65732d73637261706572\"></a></p>\n<p>Scrape article metadata and comments from NYTimes</p>\n<h2>Setup</h2>\n<pre>pip install nytimes-scraper\n</pre>\n<h2>CLI usage</h2>\n<p>The scraper will automatically fetch every article and all the user comments published on\n<a href=\"https://www.nytimes.com/\" rel=\"nofollow\">nytimes.com</a>.\nArticles are processed month by month, starting with the current month.\nFor each month, a <code>{year}-{month}-articles.pickle</code> and <code>{year}-{month}-comments.pickle</code> will be\ngenerated in the current directory.\nIf the process is restarted, existing outputs will not be overridden and the scraper will continue\nat the month where it left off.\nTo use it, run</p>\n<pre>python -m nytimes_scraper &lt;API_KEY&gt;\n</pre>\n<h2>Programmatic usage</h2>\n<p>The scraper can also be started programmatically</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span> <span class=\"k\">as</span> <span class=\"nn\">dt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nytimes_scraper</span> <span class=\"kn\">import</span> <span class=\"n\">run_scraper</span><span class=\"p\">,</span> <span class=\"n\">scrape_month</span>\n\n<span class=\"c1\"># scrape february of 2020</span>\n<span class=\"n\">article_df</span><span class=\"p\">,</span> <span class=\"n\">comment_df</span> <span class=\"o\">=</span> <span class=\"n\">scrape_month</span><span class=\"p\">(</span><span class=\"s1\">'&lt;your_api_key&gt;'</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2020</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># scrape all articles month by month</span>\n<span class=\"n\">run_scraper</span><span class=\"p\">(</span><span class=\"s1\">'&lt;your_api_key&gt;'</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, the <code>nytimes_scraper.articles</code> and <code>nytimes_scraper.comments</code> modules can be used for more\nfine-grained access:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span> <span class=\"k\">as</span> <span class=\"nn\">dt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nytimes_scraper.nyt_api</span> <span class=\"kn\">import</span> <span class=\"n\">NytApi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nytimes_scraper.articles</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_articles_by_month</span><span class=\"p\">,</span> <span class=\"n\">articles_to_df</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nytimes_scraper.comments</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_comments</span><span class=\"p\">,</span> <span class=\"n\">fetch_comments_by_article</span><span class=\"p\">,</span> <span class=\"n\">comments_to_df</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">NytApi</span><span class=\"p\">(</span><span class=\"s1\">'&lt;your_api_key&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch articles of a specific month</span>\n<span class=\"n\">articles</span> <span class=\"o\">=</span> <span class=\"n\">fetch_articles_by_month</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2020</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">article_df</span> <span class=\"o\">=</span> <span class=\"n\">articles_to_df</span><span class=\"p\">(</span><span class=\"n\">articles</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch comments from multiple articles</span>\n<span class=\"c1\"># a) using the results of a previous article query</span>\n<span class=\"n\">article_ids_and_urls</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">article_df</span><span class=\"p\">[</span><span class=\"s1\">'web_url'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">iteritems</span><span class=\"p\">())</span>\n<span class=\"n\">comments_a</span> <span class=\"o\">=</span> <span class=\"n\">fetch_comments</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">article_ids_and_urls</span><span class=\"p\">)</span>\n<span class=\"n\">comment_df</span> <span class=\"o\">=</span> <span class=\"n\">comments_to_df</span><span class=\"p\">(</span><span class=\"n\">comments_a</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># b) using a custom list of articles</span>\n<span class=\"n\">comments_b</span> <span class=\"o\">=</span> <span class=\"n\">fetch_comments</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">article_ids_and_urls</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s1\">'nyt://article/316ef65c-7021-5755-885c-a9e1ef2cfdf2'</span><span class=\"p\">,</span> <span class=\"s1\">'https://www.nytimes.com/2020/01/03/world/middleeast/trump-iran-suleimani.html'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'nyt://article/b2d1b802-412e-51f7-8864-efc931e87bb3'</span><span class=\"p\">,</span> <span class=\"s1\">'https://www.nytimes.com/2020/01/04/opinion/impeachment-witnesses.html'</span><span class=\"p\">),</span>\n<span class=\"p\">])</span>\n\n<span class=\"c1\"># Fetch comment for one specific article by its URL</span>\n<span class=\"n\">comments_c</span> <span class=\"o\">=</span> <span class=\"n\">fetch_comments_by_article</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"s1\">'https://www.nytimes.com/2019/11/30/opinion/sunday/bernie-sanders.html'</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6654754, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b56825eba94d6280a549c5628010842c", "sha256": "ea2c76d16f6719ccb961178cad9465b7f0b57e9651bf81ecdd194bbdc6eb22f5"}, "downloads": -1, "filename": "nytimes_scraper-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b56825eba94d6280a549c5628010842c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8896, "upload_time": "2020-01-06T16:21:48", "upload_time_iso_8601": "2020-01-06T16:21:48.384421Z", "url": "https://files.pythonhosted.org/packages/d6/6a/1459cca65a84d83cf2b2318d3dd89f113f8f5f991cc310bbf794949ecca1/nytimes_scraper-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b5cf86a86dff989076096ca54b266ca", "sha256": "0b030ccb8960a35c8fd6eb54fd22b2ea996de0baed5665f2570fa4b1aa264a3c"}, "downloads": -1, "filename": "nytimes-scraper-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3b5cf86a86dff989076096ca54b266ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6959, "upload_time": "2020-01-06T16:21:50", "upload_time_iso_8601": "2020-01-06T16:21:50.858800Z", "url": "https://files.pythonhosted.org/packages/b2/bd/0a8124b51331df852bbe951b532410dceab820e490a694a3e6c0e5fbff0e/nytimes-scraper-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "951a6526da176b025d62b7cf8dbe2354", "sha256": "8ee79fe663e519c8303d793f3285237c8dc32a3ce1d175ea23144f1c7b9112cd"}, "downloads": -1, "filename": "nytimes_scraper-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "951a6526da176b025d62b7cf8dbe2354", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9214, "upload_time": "2020-02-18T17:22:09", "upload_time_iso_8601": "2020-02-18T17:22:09.796576Z", "url": "https://files.pythonhosted.org/packages/44/40/87c6161ad5106cfd45b8f062962413a798a9eca0a33f4ee1cdb3c3123f8b/nytimes_scraper-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92a9a84d1cc646c3f763119644b35593", "sha256": "12e624453ee484bebcc58688f8e6c11f8d93912c01a97983538cc8c9cf5c2364"}, "downloads": -1, "filename": "nytimes-scraper-1.1.0.tar.gz", "has_sig": false, "md5_digest": "92a9a84d1cc646c3f763119644b35593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7335, "upload_time": "2020-02-18T17:22:11", "upload_time_iso_8601": "2020-02-18T17:22:11.188285Z", "url": "https://files.pythonhosted.org/packages/6b/0c/d1e9b23741d5f52118d942a37bed06c6c336afcd2cfa339a5fbcfa657d4c/nytimes-scraper-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "951a6526da176b025d62b7cf8dbe2354", "sha256": "8ee79fe663e519c8303d793f3285237c8dc32a3ce1d175ea23144f1c7b9112cd"}, "downloads": -1, "filename": "nytimes_scraper-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "951a6526da176b025d62b7cf8dbe2354", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9214, "upload_time": "2020-02-18T17:22:09", "upload_time_iso_8601": "2020-02-18T17:22:09.796576Z", "url": "https://files.pythonhosted.org/packages/44/40/87c6161ad5106cfd45b8f062962413a798a9eca0a33f4ee1cdb3c3123f8b/nytimes_scraper-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92a9a84d1cc646c3f763119644b35593", "sha256": "12e624453ee484bebcc58688f8e6c11f8d93912c01a97983538cc8c9cf5c2364"}, "downloads": -1, "filename": "nytimes-scraper-1.1.0.tar.gz", "has_sig": false, "md5_digest": "92a9a84d1cc646c3f763119644b35593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7335, "upload_time": "2020-02-18T17:22:11", "upload_time_iso_8601": "2020-02-18T17:22:11.188285Z", "url": "https://files.pythonhosted.org/packages/6b/0c/d1e9b23741d5f52118d942a37bed06c6c336afcd2cfa339a5fbcfa657d4c/nytimes-scraper-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:00 2020"}