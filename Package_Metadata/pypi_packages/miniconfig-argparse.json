{"info": {"author": "podhmo", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: Implementation :: CPython"], "description": "miniconfig-argparse\n========================================\n\nargparse settings with miniconfig\n\ncode\n----------------------------------------\n\n.. code-block:: python\n\n   from miniconfig_argparse import get_configurator\n\n\n   config = get_configurator()\n   config.include(\"yourmodule\")\n   config.include(\"yourmodule.extra\")\n\n   args = config.make_args()\n   # using args\n\nin yourmodule, using config like a below.\n\n.. code-block:: python\n\n   def includeme(config):\n       parser = config.parser\n\n       parser.add_argument(\n           '-v', '--verbose', action='count', default=0,\n           help=\"(default option: increment logging level(default is WARNING))\"\n       )\n       parser.add_argument(\n           '-q', '--quiet', action='count', default=0,\n           help=\"(default option: decrement logging level(default is WARNING))\"\n       )\n\n       def setup_closure(args):\n           logging_level = logging.WARN + 10 * args.quiet - 10 * args.verbose\n           logging.basicConfig(level=logging_level)\n           return args\n\n       parser.add_callback(setup_closure)\n\ndefault directives\n----------------------------------------\n\n- make_parser\n- replace_parser\n- call_function_as_command\n\nmake_parser(fn) + call_function_as_command\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nUsing `make_parser()` and `call_function_as_command()` combinations are useful, sometimes.\n\n- `make_parser(fn)` -- creating parser from a function definition.\n- `call_function_as_command` -- call function using parsed argument object.\n\nSuch as below.\n\n.. code-block:: python\n\n   def greeting(message, is_surprised=False, name=\"foo\"):\n       \"\"\" greeting message\n\n       :param message: message of greeting\n       :param is_surprised: surprised or not (default=False)\n       :param name: name of actor\n       \"\"\"\n       suffix = \"!\" if is_surprised else \"\"\n       print(\"{name}: {message}{suffix}\".format(name=name, message=message, suffix=suffix))\n\n\n   def includeme(config):\n       parser = config.make_parser(greeting)\n       config.replace_parser(parser)\n\n\n   if __name__ == \"__main__\":\n       from miniconfig_argparse import get_configurator\n       config = get_configurator()\n       config.include(includeme)\n\n       args = config.make_args()\n       config.call_function_as_command(greeting, args)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/podhmo/miniconfig-argparse", "keywords": "miniconfig,argparse,commandline", "license": "mit", "maintainer": null, "maintainer_email": null, "name": "miniconfig-argparse", "package_url": "https://pypi.org/project/miniconfig-argparse/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/miniconfig-argparse/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/podhmo/miniconfig-argparse"}, "release_url": "https://pypi.org/project/miniconfig-argparse/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "argparser factory for miniconfig", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>argparse settings with miniconfig</p>\n<div id=\"code\">\n<h2>code</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miniconfig_argparse</span> <span class=\"kn\">import</span> <span class=\"n\">get_configurator</span>\n\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">get_configurator</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s2\">\"yourmodule\"</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s2\">\"yourmodule.extra\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">make_args</span><span class=\"p\">()</span>\n<span class=\"c1\"># using args</span>\n</pre>\n<p>in yourmodule, using config like a below.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">includeme</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">parser</span>\n\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s1\">'-v'</span><span class=\"p\">,</span> <span class=\"s1\">'--verbose'</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s1\">'count'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"(default option: increment logging level(default is WARNING))\"</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span>\n        <span class=\"s1\">'-q'</span><span class=\"p\">,</span> <span class=\"s1\">'--quiet'</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s1\">'count'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"(default option: decrement logging level(default is WARNING))\"</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">setup_closure</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"n\">logging_level</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARN</span> <span class=\"o\">+</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">quiet</span> <span class=\"o\">-</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">verbose</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging_level</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">args</span>\n\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_callback</span><span class=\"p\">(</span><span class=\"n\">setup_closure</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"default-directives\">\n<h2>default directives</h2>\n<ul>\n<li>make_parser</li>\n<li>replace_parser</li>\n<li>call_function_as_command</li>\n</ul>\n<div id=\"make-parser-fn-call-function-as-command\">\n<h3>make_parser(fn) + call_function_as_command</h3>\n<p>Using <cite>make_parser()</cite> and <cite>call_function_as_command()</cite> combinations are useful, sometimes.</p>\n<ul>\n<li><cite>make_parser(fn)</cite> \u2013 creating parser from a function definition.</li>\n<li><cite>call_function_as_command</cite> \u2013 call function using parsed argument object.</li>\n</ul>\n<p>Such as below.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">greeting</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">is_surprised</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"foo\"</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" greeting message\n\n    :param message: message of greeting\n    :param is_surprised: surprised or not (default=False)\n    :param name: name of actor\n    \"\"\"</span>\n    <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">\"!\"</span> <span class=\"k\">if</span> <span class=\"n\">is_surprised</span> <span class=\"k\">else</span> <span class=\"s2\">\"\"</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{name}</span><span class=\"s2\">: </span><span class=\"si\">{message}{suffix}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"n\">suffix</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">includeme</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">make_parser</span><span class=\"p\">(</span><span class=\"n\">greeting</span><span class=\"p\">)</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">replace_parser</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">miniconfig_argparse</span> <span class=\"kn\">import</span> <span class=\"n\">get_configurator</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">get_configurator</span><span class=\"p\">()</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">includeme</span><span class=\"p\">)</span>\n\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">make_args</span><span class=\"p\">()</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">call_function_as_command</span><span class=\"p\">(</span><span class=\"n\">greeting</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1897186, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "968e2857a4c6b73c67ec41a9ddc77d93", "sha256": "8a1e017b3c2fb4e14336354d41835b76775d812d4c098f44bafd40c852e04efb"}, "downloads": -1, "filename": "miniconfig-argparse-0.0.0.tar.gz", "has_sig": false, "md5_digest": "968e2857a4c6b73c67ec41a9ddc77d93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2672, "upload_time": "2015-11-22T14:57:31", "upload_time_iso_8601": "2015-11-22T14:57:31.913508Z", "url": "https://files.pythonhosted.org/packages/28/00/ef43f11d30a498296a94dcf141448a135d0a441f415f4394bcd604202eca/miniconfig-argparse-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "ba17c537c0699723abffeba5b91ea5b6", "sha256": "40791319924c82251f283618bc107a708e8af992e856a136305e5cb3e802c396"}, "downloads": -1, "filename": "miniconfig-argparse-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ba17c537c0699723abffeba5b91ea5b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4506, "upload_time": "2015-11-23T04:35:57", "upload_time_iso_8601": "2015-11-23T04:35:57.810115Z", "url": "https://files.pythonhosted.org/packages/11/1a/8a83253a47b6f6c68eab76ba33b22ca9cc250c32f5c1babc6525ce7edb01/miniconfig-argparse-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a95e8cc671d868f811ae95127e68fd8e", "sha256": "6cd9f4189d645c32ca6904bba18ddce41e418c7d51b6f26d472c2969bcc47067"}, "downloads": -1, "filename": "miniconfig_argparse-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a95e8cc671d868f811ae95127e68fd8e", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7616, "upload_time": "2015-11-23T08:30:26", "upload_time_iso_8601": "2015-11-23T08:30:26.063004Z", "url": "https://files.pythonhosted.org/packages/73/42/0140b5304a380cc6a69a29742e03825b33fc451fe44640ac2a5bc3dc7b3c/miniconfig_argparse-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44636cfb07fabe5c7358220c746adc56", "sha256": "54573b2d7d406fbc6ddbff903e12387e97e5113924b4e6c92f248708a5a139ab"}, "downloads": -1, "filename": "miniconfig-argparse-0.0.2.tar.gz", "has_sig": false, "md5_digest": "44636cfb07fabe5c7358220c746adc56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4494, "upload_time": "2015-11-23T08:30:19", "upload_time_iso_8601": "2015-11-23T08:30:19.250501Z", "url": "https://files.pythonhosted.org/packages/9f/5e/d7e04e947992748ae91fd1e447b1b3dcdb1b9c5bad58806656db57a19af2/miniconfig-argparse-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d6acdeabfeb09565da4da8fbec799d80", "sha256": "57115f4e9429cefec2727d487ff0e6ab6aa7066bbf0355dbacfca5a1f9e3f030"}, "downloads": -1, "filename": "miniconfig-argparse-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d6acdeabfeb09565da4da8fbec799d80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4523, "upload_time": "2016-01-10T00:43:09", "upload_time_iso_8601": "2016-01-10T00:43:09.595214Z", "url": "https://files.pythonhosted.org/packages/44/1c/027bccd4011464bb49da3532a833a25ef8a9186dd7e9af6f98503577d89b/miniconfig-argparse-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d93da70ed8dd14b222ed60e2d11e5a5a", "sha256": "50b4f8e11f43dc642c7741493f3279d070cafac1716f5c584981a3cf4ba6ea3d"}, "downloads": -1, "filename": "miniconfig-argparse-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d93da70ed8dd14b222ed60e2d11e5a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4530, "upload_time": "2016-01-10T00:47:21", "upload_time_iso_8601": "2016-01-10T00:47:21.722472Z", "url": "https://files.pythonhosted.org/packages/3d/0e/6381066170c2e89c79620973c089c81113fcf20e91881c4d893ec69cacae/miniconfig-argparse-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d93da70ed8dd14b222ed60e2d11e5a5a", "sha256": "50b4f8e11f43dc642c7741493f3279d070cafac1716f5c584981a3cf4ba6ea3d"}, "downloads": -1, "filename": "miniconfig-argparse-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d93da70ed8dd14b222ed60e2d11e5a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4530, "upload_time": "2016-01-10T00:47:21", "upload_time_iso_8601": "2016-01-10T00:47:21.722472Z", "url": "https://files.pythonhosted.org/packages/3d/0e/6381066170c2e89c79620973c089c81113fcf20e91881c4d893ec69cacae/miniconfig-argparse-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:26 2020"}