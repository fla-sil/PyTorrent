{"info": {"author": "Tet Woo Lee", "author_email": "developer@twlee.nz", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# filter_illumina_index\n## Filter a Illumina FASTQ file based on index sequence.\n\nReads a Illumina FASTQ file and compares the sequence index in the\n`sample number` position of the sequence identifier to a supplied sequence\nindex. Entries that match the sequence index are filtered into the *filtered\nfile* (if any) and entries that don't match are filtered into the *unfiltered\nfile* (if any). Displays the count of total, filtered and unfiltered reads,\nas well as the number of mismatches found across all reads. Matching tolerating\na certain number of mismatches (`-m` parameter), and compression for input\nand output are supported (detected on the basis of file extension).\n\nSpecifying an empty index, (`-i \"\"` or `-i` with no argument) enables\n'passthrough' mode where all reads are directed to the output filtered file with\nno processing. Passthrough mode is useful if this program is part of a workflow\nthat needs to be adapted to files that do not have a valid Illumina index, as it\nallows all processing of this program to be skipped.\n\n### Illumina index\n\nFor information on Illumina sequence identifiers in FASTQ files, see [FASTQ \nFiles from Illumina](https://help.basespace.illumina.com/articles/descriptive/fastq-files/).\nThis includes the following excerpt:\n\n```\nFor the Undetermined FASTQ files only, the sequence observed in the index read \nis written to the FASTQ header in place of the sample number. This information \ncan be useful for troubleshooting demultiplexing.\n\n@<instrument>:<run number>:<flowcell ID>:<lane>:<tile>:<x-pos>:<y-pos> <read>:<is filtered>:<control number>:<sample number>\n```\n\nThis script assumes the `<sample number>` value is the Illumina index. To\nensure rapid processing, the value following the final colon(`:`) is used\nwithout confirming the sequence identifier conforms to the above format, or\nwhether the index is actually a nucleotide sequence.\n\n### Usage details\n\n```\nusage: filter_illumina_index [-h] [--version] [-f FILTERED] [-u UNFILTERED] -i\n                             [INDEX] [-m MISMATCHES] [-t THREADS]\n                             [-l {1,2,3,4,5,6,7,8,9}] [-v]\n                             inputfile\n\npositional arguments:\n  inputfile             Input FASTQ file, compression (`.gz`, `.bz2` and\n                        `.xz`) supported\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -f FILTERED, --filtered FILTERED\n                        Output FASTQ file containing filtered (positive)\n                        reads; compression detected by extension (default:\n                        None)\n  -u UNFILTERED, --unfiltered UNFILTERED\n                        Output FASTQ file containing unfiltered (negative)\n                        reads; compression detected by extension (default:\n                        None)\n  -m MISMATCHES, --mismatches MISMATCHES\n                        Maximum number of mismatches to tolerate (default: 0)\n  -t THREADS, --threads THREADS\n                        Number of threads to pass to `xopen` for each open\n                        file; use 0 to turn off `pigz` use and rely on\n                        `gzip.open` so no extra threads spawned. (default: 1)\n  -l {1,2,3,4,5,6,7,8,9}, --compresslevel {1,2,3,4,5,6,7,8,9}\n                        Compression level for writing gzip files; ignored if\n                        gzip compression not used (default: 6)\n  -v, --verbose         Increase logging verbosity, available levels 1 to 2\n                        with `-v` to `-vv` (default: 0)\n\nrequired named arguments:\n  -i [INDEX], --index [INDEX]\n                        Sequence index to filter for; if empty (i.e. no\n                        argument or \"\") then program will run in \"passthrough\"\n                        mode with all reads directed to filtered file with no\n                        processing (default: None)\n```\n\n### Example usage\n\nThe directory `filter_illumina_index/tests/data/` (within the location where\nthe package is installed) contains various test files, for example \n`test_reads_GATCGTGT.fastq` with 29 reads containing barcode `GATCGTGT` and\none read with a 1-nt mismatch of `AATCGTGT`. Running this program with the \nfollowing command:\n\n`filter_illumina_index filter_illumina_index/tests/data/test_reads_GATCGTGT.fastq --index GATCGTGT --filtered /tmp/filtered_reads.fastq --unfiltered /tmp/unfiltered_reads.fastq`\n\nwill process that input file with no mismatches allowed (default) for the index\n`GATCGTGT`. The output files are `/tmp/filtered_reads.fastq` with 29 reads \ncontaining the `GATCGTGT` barcode, and `/tmp/unfiltered_reads.fastq` with 1 read\ncontaining the mismatched-barcode `AATCGTGT`. The following log to stdout will \nbe displayed:\n\n```\nfilter_illumina_index 1.0.4\nInput file: filter_illumina_index/tests/data/test_reads_GATCGTGT.fastq\nFiltering for sequence index: GATCGTGT\nMax mismatches tolerated: 0\nOutput filtered file: /tmp/filtered_reads.fastq\nOutput unfiltered file: /tmp/unfiltered_reads.fastq\nTotal reads: 30\nFiltered reads: 29\nUnfiltered reads: 1\n Reads with 0 mismatches: 29\n Reads with 1 mismatches: 1\n Reads with 2 mismatches: 0\n Reads with 3 mismatches: 0\n Reads with 4 mismatches: 0\n Reads with 5 mismatches: 0\n Reads with 6 mismatches: 0\n Reads with 7 mismatches: 0\n Reads with 8 mismatches: 0\n Reads with >=9 mismatches: 0\n```\n\n### Algorithm details\n\nThe barcode is read from the sequence number position of the sequence identifier\nusing a very simplistic method to optimise performance: the field in the\nsequence identifier following the last colon (`:`) character is used, e.g.\n\n```\n@FAKE-SEQ:1:FAKE-FLOWCELL-ID:1:1:0:1 1:N:0:TGACCAAT\n                                          ^         : last colon\n                                           ^^^^^^^^ : taken\n                                           TGACCAAT : barcode\n```\n\nIf there is no colon in the sequence identifier, an exception is produced as\nno barcode can be found, except in passthrough mode (which does no actual\nprocessing and redirects all reads to the filtered file). The number of \nmismatches is simply the number of characters that differ between\nthe provided index sequence and the barcode from the read. Any missing\ncharacters in either the provided index or the barcode are counted as\nmismatches. The comparison is performed at the start of the each set of\ncharacters with no provision for wildcards, insertions or deletions, e.g.\n\n```\nTGACCAAT index\nTGACCAAT read barcode\n         0 mismatches\n\nTGACCAAT index\nAGACCAAT read barcode\n^        1 mismatch\n\nTGACCAAT index\nGACCAAT  read barcode\n^^^ ^ ^^ 6 mismatches\n\nTGACCAAT index\nTGACCAAAA read barcode\n       ^^ 2 mismatches\n\nTGACCAAT index\nNNNCCAAT read barcode\n^^^      3 mismatches\n\nNNNCCAAT index\nTGACCAAT read barcode\n^^^      3 mismatches\n\nNNNCCAAT index\nNNNCCAAT read barcode\n         0 mismatches\n\nTGACCAAT index\nTGACCAATTGACCAATTGACCAAT read barcode\n        ^^^^^^^^^^^^^^^^ 16 mismatches\n```\n\nWhere there is a greater number of characters in the read barcode than the\nprovided index, the number of mismatches is summarised as `>=index length+1`,\ni.e. the final entry above will be counted as >=9 mismatches.\n\n### File reading/writing and threading\n\nThis script uses the `dnaio` and `xopen` packages for reading/writing FASTQ\nfiles with compression support. The `xopen` package used for reading/writing\ncompressed files spawns `pigz` processes to speed-up processing. The `--threads`\nparameter indicates the number of threads passed to the `xopen()` function. With\n`--threads 1` there is still a small amount of multithreading as a different\n`pigz` process is spawned for each open file and up to 3 files are open at once\n(one input and two output), although this is largely throttled by the sequential\nnature of the script processing. To prevent these `pigz` processes being\nspawned, `--threads 0` can be used, which causes a fallback to `gzip.open` at\nan additional performance cost (it is slower than `pigz`).\n\n`xopen` supports automatic compression according to the file extension, with\n`.gz`, `.bz2` and `.xz` supported. Only the first of these has been tested\nwith this script but the others are expected to work without issue.\n\n---\n\n### Additional details\n\n* Author:       Tet Woo Lee\n* Copyright:    \u00a9 2018-2020 Tet Woo Lee\n* Licence:      GPLv3\n* Dependencies:  \n  dnaio, tested with v0.4.1  \n  xopen, tested with v0.9.0\n\n\n### Change log\n\nversion 1.0.4 2020-04-11  \nSpeed up and algorithm changes\n  - Switch to `dnaio` over Biopython to improve speed (>3x faster + multi-\n    threading support for compression)\n  - Change mismatch calculation algorithm, now includes any characters\n    missing in filter-by index or read index\n  - Exception if no barcode detected outside of passthrough mode\n  - Add unit tests\n\nversion 1.0.3.post2 2020-04-01  \nImproved output\n  - Add version number to output\n  - Show parameters in output\n  - Allow no argument for passthrough mode\n\nversion 1.0.3.post1 2020-04-01  \nMinor bugfix\n  - Bugfix: Bump version number in script\n\nversion 1.0.3 2020-04-01  \nAdded `passthrough` mode with empty index\n\nversion 1.0.2 2018-12-19  \nShows statistics on number of mismatches found\n\nversion 1.0.1 2018-12-19  \nSpeed up number of mismatches calculation\n\nversion 1.0 2018-12-14  \nMinor updates for PyPi and conda packaging\n\nversion 1.0.dev1 2018-12-13  \nFirst working version\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/twlee79/filter_illumina_index", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "filter-illumina-index", "package_url": "https://pypi.org/project/filter-illumina-index/", "platform": "", "project_url": "https://pypi.org/project/filter-illumina-index/", "project_urls": {"Homepage": "https://github.com/twlee79/filter_illumina_index"}, "release_url": "https://pypi.org/project/filter-illumina-index/1.0.4/", "requires_dist": ["xopen (>=v0.9.0)", "dnaio (>=v0.4.1)"], "requires_python": "", "summary": "Filter a Illumina FASTQ file based on index sequence", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>filter_illumina_index</h1>\n<h2>Filter a Illumina FASTQ file based on index sequence.</h2>\n<p>Reads a Illumina FASTQ file and compares the sequence index in the\n<code>sample number</code> position of the sequence identifier to a supplied sequence\nindex. Entries that match the sequence index are filtered into the <em>filtered\nfile</em> (if any) and entries that don't match are filtered into the <em>unfiltered\nfile</em> (if any). Displays the count of total, filtered and unfiltered reads,\nas well as the number of mismatches found across all reads. Matching tolerating\na certain number of mismatches (<code>-m</code> parameter), and compression for input\nand output are supported (detected on the basis of file extension).</p>\n<p>Specifying an empty index, (<code>-i \"\"</code> or <code>-i</code> with no argument) enables\n'passthrough' mode where all reads are directed to the output filtered file with\nno processing. Passthrough mode is useful if this program is part of a workflow\nthat needs to be adapted to files that do not have a valid Illumina index, as it\nallows all processing of this program to be skipped.</p>\n<h3>Illumina index</h3>\n<p>For information on Illumina sequence identifiers in FASTQ files, see <a href=\"https://help.basespace.illumina.com/articles/descriptive/fastq-files/\" rel=\"nofollow\">FASTQ\nFiles from Illumina</a>.\nThis includes the following excerpt:</p>\n<pre><code>For the Undetermined FASTQ files only, the sequence observed in the index read \nis written to the FASTQ header in place of the sample number. This information \ncan be useful for troubleshooting demultiplexing.\n\n@&lt;instrument&gt;:&lt;run number&gt;:&lt;flowcell ID&gt;:&lt;lane&gt;:&lt;tile&gt;:&lt;x-pos&gt;:&lt;y-pos&gt; &lt;read&gt;:&lt;is filtered&gt;:&lt;control number&gt;:&lt;sample number&gt;\n</code></pre>\n<p>This script assumes the <code>&lt;sample number&gt;</code> value is the Illumina index. To\nensure rapid processing, the value following the final colon(<code>:</code>) is used\nwithout confirming the sequence identifier conforms to the above format, or\nwhether the index is actually a nucleotide sequence.</p>\n<h3>Usage details</h3>\n<pre><code>usage: filter_illumina_index [-h] [--version] [-f FILTERED] [-u UNFILTERED] -i\n                             [INDEX] [-m MISMATCHES] [-t THREADS]\n                             [-l {1,2,3,4,5,6,7,8,9}] [-v]\n                             inputfile\n\npositional arguments:\n  inputfile             Input FASTQ file, compression (`.gz`, `.bz2` and\n                        `.xz`) supported\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -f FILTERED, --filtered FILTERED\n                        Output FASTQ file containing filtered (positive)\n                        reads; compression detected by extension (default:\n                        None)\n  -u UNFILTERED, --unfiltered UNFILTERED\n                        Output FASTQ file containing unfiltered (negative)\n                        reads; compression detected by extension (default:\n                        None)\n  -m MISMATCHES, --mismatches MISMATCHES\n                        Maximum number of mismatches to tolerate (default: 0)\n  -t THREADS, --threads THREADS\n                        Number of threads to pass to `xopen` for each open\n                        file; use 0 to turn off `pigz` use and rely on\n                        `gzip.open` so no extra threads spawned. (default: 1)\n  -l {1,2,3,4,5,6,7,8,9}, --compresslevel {1,2,3,4,5,6,7,8,9}\n                        Compression level for writing gzip files; ignored if\n                        gzip compression not used (default: 6)\n  -v, --verbose         Increase logging verbosity, available levels 1 to 2\n                        with `-v` to `-vv` (default: 0)\n\nrequired named arguments:\n  -i [INDEX], --index [INDEX]\n                        Sequence index to filter for; if empty (i.e. no\n                        argument or \"\") then program will run in \"passthrough\"\n                        mode with all reads directed to filtered file with no\n                        processing (default: None)\n</code></pre>\n<h3>Example usage</h3>\n<p>The directory <code>filter_illumina_index/tests/data/</code> (within the location where\nthe package is installed) contains various test files, for example\n<code>test_reads_GATCGTGT.fastq</code> with 29 reads containing barcode <code>GATCGTGT</code> and\none read with a 1-nt mismatch of <code>AATCGTGT</code>. Running this program with the\nfollowing command:</p>\n<p><code>filter_illumina_index filter_illumina_index/tests/data/test_reads_GATCGTGT.fastq --index GATCGTGT --filtered /tmp/filtered_reads.fastq --unfiltered /tmp/unfiltered_reads.fastq</code></p>\n<p>will process that input file with no mismatches allowed (default) for the index\n<code>GATCGTGT</code>. The output files are <code>/tmp/filtered_reads.fastq</code> with 29 reads\ncontaining the <code>GATCGTGT</code> barcode, and <code>/tmp/unfiltered_reads.fastq</code> with 1 read\ncontaining the mismatched-barcode <code>AATCGTGT</code>. The following log to stdout will\nbe displayed:</p>\n<pre><code>filter_illumina_index 1.0.4\nInput file: filter_illumina_index/tests/data/test_reads_GATCGTGT.fastq\nFiltering for sequence index: GATCGTGT\nMax mismatches tolerated: 0\nOutput filtered file: /tmp/filtered_reads.fastq\nOutput unfiltered file: /tmp/unfiltered_reads.fastq\nTotal reads: 30\nFiltered reads: 29\nUnfiltered reads: 1\n Reads with 0 mismatches: 29\n Reads with 1 mismatches: 1\n Reads with 2 mismatches: 0\n Reads with 3 mismatches: 0\n Reads with 4 mismatches: 0\n Reads with 5 mismatches: 0\n Reads with 6 mismatches: 0\n Reads with 7 mismatches: 0\n Reads with 8 mismatches: 0\n Reads with &gt;=9 mismatches: 0\n</code></pre>\n<h3>Algorithm details</h3>\n<p>The barcode is read from the sequence number position of the sequence identifier\nusing a very simplistic method to optimise performance: the field in the\nsequence identifier following the last colon (<code>:</code>) character is used, e.g.</p>\n<pre><code>@FAKE-SEQ:1:FAKE-FLOWCELL-ID:1:1:0:1 1:N:0:TGACCAAT\n                                          ^         : last colon\n                                           ^^^^^^^^ : taken\n                                           TGACCAAT : barcode\n</code></pre>\n<p>If there is no colon in the sequence identifier, an exception is produced as\nno barcode can be found, except in passthrough mode (which does no actual\nprocessing and redirects all reads to the filtered file). The number of\nmismatches is simply the number of characters that differ between\nthe provided index sequence and the barcode from the read. Any missing\ncharacters in either the provided index or the barcode are counted as\nmismatches. The comparison is performed at the start of the each set of\ncharacters with no provision for wildcards, insertions or deletions, e.g.</p>\n<pre><code>TGACCAAT index\nTGACCAAT read barcode\n         0 mismatches\n\nTGACCAAT index\nAGACCAAT read barcode\n^        1 mismatch\n\nTGACCAAT index\nGACCAAT  read barcode\n^^^ ^ ^^ 6 mismatches\n\nTGACCAAT index\nTGACCAAAA read barcode\n       ^^ 2 mismatches\n\nTGACCAAT index\nNNNCCAAT read barcode\n^^^      3 mismatches\n\nNNNCCAAT index\nTGACCAAT read barcode\n^^^      3 mismatches\n\nNNNCCAAT index\nNNNCCAAT read barcode\n         0 mismatches\n\nTGACCAAT index\nTGACCAATTGACCAATTGACCAAT read barcode\n        ^^^^^^^^^^^^^^^^ 16 mismatches\n</code></pre>\n<p>Where there is a greater number of characters in the read barcode than the\nprovided index, the number of mismatches is summarised as <code>&gt;=index length+1</code>,\ni.e. the final entry above will be counted as &gt;=9 mismatches.</p>\n<h3>File reading/writing and threading</h3>\n<p>This script uses the <code>dnaio</code> and <code>xopen</code> packages for reading/writing FASTQ\nfiles with compression support. The <code>xopen</code> package used for reading/writing\ncompressed files spawns <code>pigz</code> processes to speed-up processing. The <code>--threads</code>\nparameter indicates the number of threads passed to the <code>xopen()</code> function. With\n<code>--threads 1</code> there is still a small amount of multithreading as a different\n<code>pigz</code> process is spawned for each open file and up to 3 files are open at once\n(one input and two output), although this is largely throttled by the sequential\nnature of the script processing. To prevent these <code>pigz</code> processes being\nspawned, <code>--threads 0</code> can be used, which causes a fallback to <code>gzip.open</code> at\nan additional performance cost (it is slower than <code>pigz</code>).</p>\n<p><code>xopen</code> supports automatic compression according to the file extension, with\n<code>.gz</code>, <code>.bz2</code> and <code>.xz</code> supported. Only the first of these has been tested\nwith this script but the others are expected to work without issue.</p>\n<hr>\n<h3>Additional details</h3>\n<ul>\n<li>Author:       Tet Woo Lee</li>\n<li>Copyright:    \u00a9 2018-2020 Tet Woo Lee</li>\n<li>Licence:      GPLv3</li>\n<li>Dependencies:<br>\ndnaio, tested with v0.4.1<br>\nxopen, tested with v0.9.0</li>\n</ul>\n<h3>Change log</h3>\n<p>version 1.0.4 2020-04-11<br>\nSpeed up and algorithm changes</p>\n<ul>\n<li>Switch to <code>dnaio</code> over Biopython to improve speed (&gt;3x faster + multi-\nthreading support for compression)</li>\n<li>Change mismatch calculation algorithm, now includes any characters\nmissing in filter-by index or read index</li>\n<li>Exception if no barcode detected outside of passthrough mode</li>\n<li>Add unit tests</li>\n</ul>\n<p>version 1.0.3.post2 2020-04-01<br>\nImproved output</p>\n<ul>\n<li>Add version number to output</li>\n<li>Show parameters in output</li>\n<li>Allow no argument for passthrough mode</li>\n</ul>\n<p>version 1.0.3.post1 2020-04-01<br>\nMinor bugfix</p>\n<ul>\n<li>Bugfix: Bump version number in script</li>\n</ul>\n<p>version 1.0.3 2020-04-01<br>\nAdded <code>passthrough</code> mode with empty index</p>\n<p>version 1.0.2 2018-12-19<br>\nShows statistics on number of mismatches found</p>\n<p>version 1.0.1 2018-12-19<br>\nSpeed up number of mismatches calculation</p>\n<p>version 1.0 2018-12-14<br>\nMinor updates for PyPi and conda packaging</p>\n<p>version 1.0.dev1 2018-12-13<br>\nFirst working version</p>\n\n          </div>"}, "last_serial": 6998631, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "0177242259feee89d8e159739b1fc677", "sha256": "5a3de2a3db4690cfc089187b709e5a0c0da64c8e955d0c3e955e79cf9ac5472d"}, "downloads": -1, "filename": "filter_illumina_index-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0177242259feee89d8e159739b1fc677", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30222, "upload_time": "2018-12-14T00:00:27", "upload_time_iso_8601": "2018-12-14T00:00:27.300776Z", "url": "https://files.pythonhosted.org/packages/51/a8/38078b741f50a4af66eb8263c67ad0818d1050b9b92d63bd3511c827dd0a/filter_illumina_index-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "faf40a514d27a82bf84698330b55c2cd", "sha256": "2fa46b6f03bfd353eba170ea88a3f6901e85c8848b3392bae948cebe6ef94488"}, "downloads": -1, "filename": "filter_illumina_index-1.0.tar.gz", "has_sig": false, "md5_digest": "faf40a514d27a82bf84698330b55c2cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16430, "upload_time": "2018-12-14T00:00:28", "upload_time_iso_8601": "2018-12-14T00:00:28.734687Z", "url": "https://files.pythonhosted.org/packages/38/5f/d823e113b0ea6e3e4c726ede26affcd0cb9dab5551f11a544362d6f976bb/filter_illumina_index-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b9c1e98470a9c107fc192686c278f365", "sha256": "4acc84f211874b06131c8d5881e6aa086e8594921e30c97a966050ad4851d819"}, "downloads": -1, "filename": "filter_illumina_index-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b9c1e98470a9c107fc192686c278f365", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29939, "upload_time": "2018-12-19T00:04:51", "upload_time_iso_8601": "2018-12-19T00:04:51.891018Z", "url": "https://files.pythonhosted.org/packages/5d/d7/a9a1407f023ce2931bbb6a0290c3ee10ef0d7f75ce5ab1670d737aa9936c/filter_illumina_index-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d7396b0274630773b416f41ada42376", "sha256": "398ff4ea90939abcca184de98be480830b578d3dedca94fae144a0072be6dfdd"}, "downloads": -1, "filename": "filter_illumina_index-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5d7396b0274630773b416f41ada42376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16859, "upload_time": "2018-12-19T00:04:53", "upload_time_iso_8601": "2018-12-19T00:04:53.800536Z", "url": "https://files.pythonhosted.org/packages/ef/75/76a396c9a829f118830afa4d5e8cc33c0baa420295f735052e790923915b/filter_illumina_index-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "2dc6f65139d50cd5c6bda5798766bee3", "sha256": "737bdd78d031502278f2706b4a811af1a6b95145dd59717712d90376d49e9f0c"}, "downloads": -1, "filename": "filter_illumina_index-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2dc6f65139d50cd5c6bda5798766bee3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30198, "upload_time": "2018-12-19T00:31:11", "upload_time_iso_8601": "2018-12-19T00:31:11.753458Z", "url": "https://files.pythonhosted.org/packages/93/7b/e1137bb0d2234f4fbbef7860576e625942c357aa52fd8f4c7068a491f169/filter_illumina_index-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "458c871507f0726f7d2616cbb6dd0e55", "sha256": "70faeda8dacfe1161f79823af03f4f1337b4d8a302a49dba33227674defd2461"}, "downloads": -1, "filename": "filter_illumina_index-1.0.2.tar.gz", "has_sig": false, "md5_digest": "458c871507f0726f7d2616cbb6dd0e55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17148, "upload_time": "2018-12-19T00:31:14", "upload_time_iso_8601": "2018-12-19T00:31:14.413709Z", "url": "https://files.pythonhosted.org/packages/82/84/34d7fc4b0ac58436225977a9b8a3078eb8037e277d322204800c84d2e172/filter_illumina_index-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "a05047c99af7a4f86befdc3169ee4240", "sha256": "d5e2640a338f5cf46ef8d501d078bde23a1798498694a553084296d7b6cbf0a9"}, "downloads": -1, "filename": "filter_illumina_index-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a05047c99af7a4f86befdc3169ee4240", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30697, "upload_time": "2020-04-01T03:52:34", "upload_time_iso_8601": "2020-04-01T03:52:34.913173Z", "url": "https://files.pythonhosted.org/packages/0c/3f/b66b4053f96602907362f29794a48c9c0aa4e5cfda04d85509f86978d7de/filter_illumina_index-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f1032ca72c66040d42e91f8830a302a", "sha256": "ed9506f24a4930e89e437b9b0f62402478836ef829a2b92a2f837986c3a7d485"}, "downloads": -1, "filename": "filter_illumina_index-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1f1032ca72c66040d42e91f8830a302a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17366, "upload_time": "2020-04-01T03:52:36", "upload_time_iso_8601": "2020-04-01T03:52:36.370477Z", "url": "https://files.pythonhosted.org/packages/d1/53/9d329c10e13e93b5147403c675ba6f35508ff92c565f3ebc5a47fef27c4a/filter_illumina_index-1.0.3.tar.gz", "yanked": false}], "1.0.3.post1": [{"comment_text": "", "digests": {"md5": "1347508adac9a87f22b7295de9f6c034", "sha256": "a62e5f79c61c308181b20b67357ba4182557aab022835d79c20ec0a9ce6cb1ae"}, "downloads": -1, "filename": "filter_illumina_index-1.0.3.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "1347508adac9a87f22b7295de9f6c034", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30820, "upload_time": "2020-04-01T04:50:03", "upload_time_iso_8601": "2020-04-01T04:50:03.238548Z", "url": "https://files.pythonhosted.org/packages/56/00/270a2db98e77a992cbba1d5808af686abc16ac0ba39a7fcba67c07d1abfa/filter_illumina_index-1.0.3.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56fa193724f28d19087ab57853237b0a", "sha256": "b35f360fd0b0f3b3bfa492781ef9b35644c75a2cf55f122f135c187e1524ec55"}, "downloads": -1, "filename": "filter_illumina_index-1.0.3.post1.tar.gz", "has_sig": false, "md5_digest": "56fa193724f28d19087ab57853237b0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17091, "upload_time": "2020-04-01T04:50:04", "upload_time_iso_8601": "2020-04-01T04:50:04.755358Z", "url": "https://files.pythonhosted.org/packages/5a/2e/c194120232de9f203c37bb346376432c47d4ca25a7f6f772a30b35637138/filter_illumina_index-1.0.3.post1.tar.gz", "yanked": false}], "1.0.3.post2": [{"comment_text": "", "digests": {"md5": "b85f6602b09dbf13e1f6790ab72d9262", "sha256": "2b8ff6875516d5f199fd5f4326c4e3149ca811e88b767dec685b50b32aa4e554"}, "downloads": -1, "filename": "filter_illumina_index-1.0.3.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "b85f6602b09dbf13e1f6790ab72d9262", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31124, "upload_time": "2020-04-01T10:55:32", "upload_time_iso_8601": "2020-04-01T10:55:32.197301Z", "url": "https://files.pythonhosted.org/packages/b4/24/d66a923b30e814e0950ed7d49ad3d45ee6eef1a44b9222a99e070789508b/filter_illumina_index-1.0.3.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1265b50b9a1808ecf8c80a24a19a276c", "sha256": "fcc0a007f2ab17496b7f7a9b3fbf28c12c01a9aeabc02731ccbb89981fe3412e"}, "downloads": -1, "filename": "filter_illumina_index-1.0.3.post2.tar.gz", "has_sig": false, "md5_digest": "1265b50b9a1808ecf8c80a24a19a276c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17770, "upload_time": "2020-04-01T10:55:33", "upload_time_iso_8601": "2020-04-01T10:55:33.548159Z", "url": "https://files.pythonhosted.org/packages/41/75/fcf8431e5bf0a451288d3944152c85961574aa881457da99ace88cf23e33/filter_illumina_index-1.0.3.post2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "1562192c2c65bbb5f7b20d6a16e4f528", "sha256": "3e5e764579ab24fae7e7826f3a49086fde8ae0398435ee3508be787880bb6b39"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1562192c2c65bbb5f7b20d6a16e4f528", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 65813, "upload_time": "2020-04-11T08:21:26", "upload_time_iso_8601": "2020-04-11T08:21:26.946731Z", "url": "https://files.pythonhosted.org/packages/15/44/f9597766c6e9a9032ffa2749beffeadf14919d3d4cb080b0f6b3e4fdd169/filter_illumina_index-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ce34b259326defc75f3d6e48788067f", "sha256": "a5f3fe2418e920f95121a2a81067027df7e4584bc7cfefba8ae7513d168b9aa6"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.tar.gz", "has_sig": false, "md5_digest": "9ce34b259326defc75f3d6e48788067f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33993, "upload_time": "2020-04-11T08:21:54", "upload_time_iso_8601": "2020-04-11T08:21:54.061025Z", "url": "https://files.pythonhosted.org/packages/63/2a/5e806aef73265361de0df867336742c811bd574abe7275fc837b73e5fab7/filter_illumina_index-1.0.4.tar.gz", "yanked": false}], "1.0.4.dev1": [{"comment_text": "", "digests": {"md5": "4776f4978fcd0c506611705978827bf2", "sha256": "e840fbbe11e03df0f142d2dfcdfdeaa878256d19b03263a184b3ab013364fea6"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "4776f4978fcd0c506611705978827bf2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59276, "upload_time": "2020-04-10T08:36:26", "upload_time_iso_8601": "2020-04-10T08:36:26.071664Z", "url": "https://files.pythonhosted.org/packages/c2/48/b00d3b977ac21bd2e9a86a1ee991c22c0d4075989a439c82b5baa5e25535/filter_illumina_index-1.0.4.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4725217ae5350f015137c780d56e97be", "sha256": "78ad75cbd8b4408b2ae5d24013b7b5e06e7a5b4b17aefeb4b164636aa7f4ffc5"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.dev1.tar.gz", "has_sig": false, "md5_digest": "4725217ae5350f015137c780d56e97be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35474, "upload_time": "2020-04-10T08:36:27", "upload_time_iso_8601": "2020-04-10T08:36:27.516451Z", "url": "https://files.pythonhosted.org/packages/31/37/0b3bb3f393fd36bf3437aca63ef02ba211198812f4d7754e4f2bebf4ca57/filter_illumina_index-1.0.4.dev1.tar.gz", "yanked": false}], "1.0.4.dev2": [{"comment_text": "", "digests": {"md5": "c736ffc1fa2ec30b10fdb88087dd06e1", "sha256": "26e9dc7646b73784ee799b88037c6b53ba0b28237e7780ca8a673fc0e8f3eeb6"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "c736ffc1fa2ec30b10fdb88087dd06e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59525, "upload_time": "2020-04-10T08:50:01", "upload_time_iso_8601": "2020-04-10T08:50:01.382100Z", "url": "https://files.pythonhosted.org/packages/bd/65/c80cbb056f156c4481d32b1739e40503ef355989ec6483740c8df21d1b4f/filter_illumina_index-1.0.4.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ed11c093821f7e5b16023e2b494380e", "sha256": "b523bde1f54eb63ed5a35b29d9033f5f0c27202ed74a31036b9d7e8637d0f66b"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.dev2.tar.gz", "has_sig": false, "md5_digest": "6ed11c093821f7e5b16023e2b494380e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35549, "upload_time": "2020-04-10T08:50:02", "upload_time_iso_8601": "2020-04-10T08:50:02.943774Z", "url": "https://files.pythonhosted.org/packages/7f/7d/7f3b898a27128d78497fa7b0dbd87c805edc29961a920afa1d44fef446d4/filter_illumina_index-1.0.4.dev2.tar.gz", "yanked": false}], "1.0.4.dev3": [{"comment_text": "", "digests": {"md5": "6c1769075eb6df999f97ca1a1de614ae", "sha256": "5a05951e174eef87ad7d8f6fbc89d561dad38f72d3526d06647b9e2ac02ca2ea"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "6c1769075eb6df999f97ca1a1de614ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 62436, "upload_time": "2020-04-11T05:33:36", "upload_time_iso_8601": "2020-04-11T05:33:36.285968Z", "url": "https://files.pythonhosted.org/packages/c5/b6/9fc7965dd2bfb5f6504946fd1503658cbdeed95cde6d79036bbd49fd2ce3/filter_illumina_index-1.0.4.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "117fa48a796b42e329631d32e4f05d5e", "sha256": "a19b11f3db14f782b3e0efa92010dce5452c7e6be0ad4df8816c44f8e80eeacd"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.dev3.tar.gz", "has_sig": false, "md5_digest": "117fa48a796b42e329631d32e4f05d5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34909, "upload_time": "2020-04-11T05:33:37", "upload_time_iso_8601": "2020-04-11T05:33:37.618510Z", "url": "https://files.pythonhosted.org/packages/86/aa/8cdcb1869c0c261f8060661443c84555197b6f7f721939c2b5410af5a292/filter_illumina_index-1.0.4.dev3.tar.gz", "yanked": false}], "1.0.dev1": [{"comment_text": "", "digests": {"md5": "d7468bd1f6f999377e922d108144cf85", "sha256": "a30e0f429901729f13390644803d9bf6d98f44f5090a47c3d2a9f47362d84456"}, "downloads": -1, "filename": "filter_illumina_index-1.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7468bd1f6f999377e922d108144cf85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17595, "upload_time": "2018-12-13T06:28:48", "upload_time_iso_8601": "2018-12-13T06:28:48.602431Z", "url": "https://files.pythonhosted.org/packages/58/41/ef1f00c47d900decd1784bed418c96716854af0760668e210adf51adf87c/filter_illumina_index-1.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14d104762a858e939c434b92cf1da441", "sha256": "690064b0e143e3359a1d0e5ac025b37c323737615dc4849d6aec6d0591113607"}, "downloads": -1, "filename": "filter_illumina_index-1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "14d104762a858e939c434b92cf1da441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3916, "upload_time": "2018-12-13T06:28:50", "upload_time_iso_8601": "2018-12-13T06:28:50.942868Z", "url": "https://files.pythonhosted.org/packages/e7/f4/7772447b77f22f5e0f9c685e6595fd37eea3038dd9346a96db9b1ceb1a8d/filter_illumina_index-1.0.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1562192c2c65bbb5f7b20d6a16e4f528", "sha256": "3e5e764579ab24fae7e7826f3a49086fde8ae0398435ee3508be787880bb6b39"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1562192c2c65bbb5f7b20d6a16e4f528", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 65813, "upload_time": "2020-04-11T08:21:26", "upload_time_iso_8601": "2020-04-11T08:21:26.946731Z", "url": "https://files.pythonhosted.org/packages/15/44/f9597766c6e9a9032ffa2749beffeadf14919d3d4cb080b0f6b3e4fdd169/filter_illumina_index-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ce34b259326defc75f3d6e48788067f", "sha256": "a5f3fe2418e920f95121a2a81067027df7e4584bc7cfefba8ae7513d168b9aa6"}, "downloads": -1, "filename": "filter_illumina_index-1.0.4.tar.gz", "has_sig": false, "md5_digest": "9ce34b259326defc75f3d6e48788067f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33993, "upload_time": "2020-04-11T08:21:54", "upload_time_iso_8601": "2020-04-11T08:21:54.061025Z", "url": "https://files.pythonhosted.org/packages/63/2a/5e806aef73265361de0df867336742c811bd574abe7275fc837b73e5fab7/filter_illumina_index-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:28 2020"}