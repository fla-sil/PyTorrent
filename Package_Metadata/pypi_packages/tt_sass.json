{"info": {"author": "Tribune Tech", "author_email": "tech@texastribune.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "tt_sass\n=======\nCollection of `Sass`_ styles and mixins for use at the `Texas Tribune`_.\n\n\nInstallation and Configuration\n------------------------------\nYou can install this using `pip`_ like this:\n\n::\n\n    pip install tt_sass\n\nOnce installed, you need to add it to your ``INSTALLED_APPS``.  You can do that\nhowever you like or you can copy-and-paste this in after your ``INSTALLED_APPS``\nare defined.\n\n::\n\n    INSTALLED_APPS += ['tt_sass', ]\n\n``tt_sass`` relies on `django-staticfiles`_ in order to work.  You must run\nthe ``collectstatic`` command inside your project like this:\n\n::\n\n    python manage.py collectstatic --link\n\nRemember, you must re-run this command any time you add new staticfiles.\n\nNow you're ready to start using ``tt_sass``.\n\n\nUsage\n-----\nYou can use this inside your Sass by adding the following:\n\n::\n\n    @import \"tt_sass/texastribune\"\n\nOnce you've done that, you need to compile your Sass.  Assuming you're using the\ndefault Texas Tribune setup of having a ``static`` directory at your project root,\nyou should run the following:\n\n::\n\n    sass --load-path=static/ --watch --poll --compass static\n\nThis command setups up the path correctly for all of your code and watches the\nfile for changes.\n\n\nUsing the Grid\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nThe grid is based off of `Chris Coyer's`_ `simple grid`_.  The syntax has been\nchanged around a little bit and it's been mixinified, but the concept is the\nsame.\n\nTo create a grid, similar to a row in frameworks like Foundation and Bootstrap,\nyou use the ``.grid`` class.  Inside a grid, you add cells and tell them how far\nto span.  For example, you do this to create a grid with 12 columns (the\ndefault) and two cells, one of 8 columns and one of 4 columns:\n\n::\n\n    <div class=\"grid\">\n        <div class=\"cell w-8\"></div>\n        <div class=\"cell w-4\"></div>\n    </div>\n\n\n\n\nCreating a Semantic Grid\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n*TODO*\n\n\nUsing the Responsive Mixins\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n``tt_sass`` provides you with a ``breakpoint`` mixin for handling responsive\ndesign.  It ships with the following breakpoints built-in:\n\nmobile-portrait\n    defaults to ``max-width: 320px``\nmobile\n    defaults to ``max-width: 720px``\ntablet\n    defaults to ``min-width: 720px``\nclassic\n    defaults to ``min-width: 960px``\n\nYou can over ride any of these values by setting a variable by their name prior\nto importing ``tt_sass/texastribune``.\n\nYou use the mixin like this:\n\n::\n\n    p\n        +breakpoint(mobile)\n            font-size: 1.2em\n        +breakpoint(tablet)\n            font-size: 1.1em\n        +breakpoint(classic)\n            font-size: 1.0em\n\nYou can specify an arbitrary breakpoint as well:\n\n::\n\n    div\n        +breakpoint(\"max-width: 500px\")\n            background-color: red\n\n\nVarious Helpers\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n*TODO*\n\n\nExamples\n--------\nAll of these are being documented in the ``example/`` Django project.  See that\ndirectory for instructions on how to run that project.\n\n\nContributing\n------------\nThis project is released in hopes that it helps people understand how you might\nbuild your own Sass framework for use in the context of a Django project.  As\nsuch, contributions from those outside the Texas Tribune probably won't be\naccepted.\n\n\n.. _Chris Coyer's: http://chriscoyier.net/\n.. _django-staticfiles: http://django-staticfiles.readthedocs.org/en/latest/\n.. _pip: http://www.pip-installer.org/en/latest/\n.. _Sass: http://sass-lang.com/\n.. _simple grid: http://css-tricks.com/dont-overthink-it-grids/\n.. _Texas Tribune: http://www.texastribune.org/\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/texastribune/tt_sass/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "tt_sass", "package_url": "https://pypi.org/project/tt_sass/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tt_sass/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/texastribune/tt_sass/"}, "release_url": "https://pypi.org/project/tt_sass/0.2.3/", "requires_dist": null, "requires_python": null, "summary": "Texas Tribune Sass", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Collection of <a href=\"http://sass-lang.com/\" rel=\"nofollow\">Sass</a> styles and mixins for use at the <a href=\"http://www.texastribune.org/\" rel=\"nofollow\">Texas Tribune</a>.</p>\n<div id=\"installation-and-configuration\">\n<h2>Installation and Configuration</h2>\n<p>You can install this using <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> like this:</p>\n<pre>pip install tt_sass\n</pre>\n<p>Once installed, you need to add it to your <tt>INSTALLED_APPS</tt>.  You can do that\nhowever you like or you can copy-and-paste this in after your <tt>INSTALLED_APPS</tt>\nare defined.</p>\n<pre>INSTALLED_APPS += ['tt_sass', ]\n</pre>\n<p><tt>tt_sass</tt> relies on <a href=\"http://django-staticfiles.readthedocs.org/en/latest/\" rel=\"nofollow\">django-staticfiles</a> in order to work.  You must run\nthe <tt>collectstatic</tt> command inside your project like this:</p>\n<pre>python manage.py collectstatic --link\n</pre>\n<p>Remember, you must re-run this command any time you add new staticfiles.</p>\n<p>Now you\u2019re ready to start using <tt>tt_sass</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can use this inside your Sass by adding the following:</p>\n<pre>@import \"tt_sass/texastribune\"\n</pre>\n<p>Once you\u2019ve done that, you need to compile your Sass.  Assuming you\u2019re using the\ndefault Texas Tribune setup of having a <tt>static</tt> directory at your project root,\nyou should run the following:</p>\n<pre>sass --load-path=static/ --watch --poll --compass static\n</pre>\n<p>This command setups up the path correctly for all of your code and watches the\nfile for changes.</p>\n<div id=\"using-the-grid\">\n<h3>Using the Grid</h3>\n<p>The grid is based off of <a href=\"http://chriscoyier.net/\" rel=\"nofollow\">Chris Coyer\u2019s</a> <a href=\"http://css-tricks.com/dont-overthink-it-grids/\" rel=\"nofollow\">simple grid</a>.  The syntax has been\nchanged around a little bit and it\u2019s been mixinified, but the concept is the\nsame.</p>\n<p>To create a grid, similar to a row in frameworks like Foundation and Bootstrap,\nyou use the <tt>.grid</tt> class.  Inside a grid, you add cells and tell them how far\nto span.  For example, you do this to create a grid with 12 columns (the\ndefault) and two cells, one of 8 columns and one of 4 columns:</p>\n<pre>&lt;div class=\"grid\"&gt;\n    &lt;div class=\"cell w-8\"&gt;&lt;/div&gt;\n    &lt;div class=\"cell w-4\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</pre>\n</div>\n<div id=\"creating-a-semantic-grid\">\n<h3>Creating a Semantic Grid</h3>\n<p><em>TODO</em></p>\n</div>\n<div id=\"using-the-responsive-mixins\">\n<h3>Using the Responsive Mixins</h3>\n<p><tt>tt_sass</tt> provides you with a <tt>breakpoint</tt> mixin for handling responsive\ndesign.  It ships with the following breakpoints built-in:</p>\n<dl>\n<dt>mobile-portrait</dt>\n<dd>defaults to <tt><span class=\"pre\">max-width:</span> 320px</tt></dd>\n<dt>mobile</dt>\n<dd>defaults to <tt><span class=\"pre\">max-width:</span> 720px</tt></dd>\n<dt>tablet</dt>\n<dd>defaults to <tt><span class=\"pre\">min-width:</span> 720px</tt></dd>\n<dt>classic</dt>\n<dd>defaults to <tt><span class=\"pre\">min-width:</span> 960px</tt></dd>\n</dl>\n<p>You can over ride any of these values by setting a variable by their name prior\nto importing <tt>tt_sass/texastribune</tt>.</p>\n<p>You use the mixin like this:</p>\n<pre>p\n    +breakpoint(mobile)\n        font-size: 1.2em\n    +breakpoint(tablet)\n        font-size: 1.1em\n    +breakpoint(classic)\n        font-size: 1.0em\n</pre>\n<p>You can specify an arbitrary breakpoint as well:</p>\n<pre>div\n    +breakpoint(\"max-width: 500px\")\n        background-color: red\n</pre>\n</div>\n<div id=\"various-helpers\">\n<h3>Various Helpers</h3>\n<p><em>TODO</em></p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>All of these are being documented in the <tt>example/</tt> Django project.  See that\ndirectory for instructions on how to run that project.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>This project is released in hopes that it helps people understand how you might\nbuild your own Sass framework for use in the context of a Django project.  As\nsuch, contributions from those outside the Texas Tribune probably won\u2019t be\naccepted.</p>\n</div>\n\n          </div>"}, "last_serial": 800990, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "28f02f80a80803e0aa47e390bac04081", "sha256": "21135ffc7bb349198440c1884ef4db2d1795e20001320209f4c367a95bb3ad2a"}, "downloads": -1, "filename": "tt_sass-0.1.0.tar.gz", "has_sig": false, "md5_digest": "28f02f80a80803e0aa47e390bac04081", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7526, "upload_time": "2012-11-15T20:44:13", "upload_time_iso_8601": "2012-11-15T20:44:13.012154Z", "url": "https://files.pythonhosted.org/packages/0f/dd/39b7e7ec729996310f0014c0c9b3c2097fa31b52f6cc7f95a66eb1c4f751/tt_sass-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e0ae7bf70fb344dcc9084c8816a9766b", "sha256": "28a31f4e544fd42c9c7c4d2b19134e92597f7997f29f46685b210de28fbef440"}, "downloads": -1, "filename": "tt_sass-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e0ae7bf70fb344dcc9084c8816a9766b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9754, "upload_time": "2013-01-14T17:03:18", "upload_time_iso_8601": "2013-01-14T17:03:18.942549Z", "url": "https://files.pythonhosted.org/packages/46/b1/94621f703a2cf21986864f1168623f93d76e5e3c30f5806da5c80fef5be5/tt_sass-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6eb303ea45fc7bc50f6ba2615cc159ca", "sha256": "20c4fe89ff2aa22a11d78f181975ebfd4637fafeb3502ff92ddccc01d7e33e73"}, "downloads": -1, "filename": "tt_sass-0.2.1.tar.gz", "has_sig": false, "md5_digest": "6eb303ea45fc7bc50f6ba2615cc159ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9799, "upload_time": "2013-01-14T17:38:37", "upload_time_iso_8601": "2013-01-14T17:38:37.262067Z", "url": "https://files.pythonhosted.org/packages/53/f6/1c684bb70d9d962d567a2da54b7f4f5694e6b33926a2145cc8d7a30cfa8e/tt_sass-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dc7cee5d0f4eb7af1e43c04bdcfa877f", "sha256": "e2f560b8190e5fbe29e08046b6867224e99128b7f3aa88e14d1f8ebd317c73cf"}, "downloads": -1, "filename": "tt_sass-0.2.2.tar.gz", "has_sig": false, "md5_digest": "dc7cee5d0f4eb7af1e43c04bdcfa877f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9941, "upload_time": "2013-01-14T17:41:17", "upload_time_iso_8601": "2013-01-14T17:41:17.525817Z", "url": "https://files.pythonhosted.org/packages/3f/7f/34d8be94ce2057b3a06d50f6fa355cb7d855b0bc3844d4ef8f86a7357909/tt_sass-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "eb329fda101c104baabf522b9632a53b", "sha256": "50a53acc3be92a089419892edb0695ee64f39b8e045786e000964fa7a1c0e377"}, "downloads": -1, "filename": "tt_sass-0.2.3.tar.gz", "has_sig": false, "md5_digest": "eb329fda101c104baabf522b9632a53b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9934, "upload_time": "2013-01-14T18:08:21", "upload_time_iso_8601": "2013-01-14T18:08:21.762594Z", "url": "https://files.pythonhosted.org/packages/2d/f5/f0641479ea036327583f97e1f2b5c7a1bb8392ea6e53d61ade13de6c4e25/tt_sass-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb329fda101c104baabf522b9632a53b", "sha256": "50a53acc3be92a089419892edb0695ee64f39b8e045786e000964fa7a1c0e377"}, "downloads": -1, "filename": "tt_sass-0.2.3.tar.gz", "has_sig": false, "md5_digest": "eb329fda101c104baabf522b9632a53b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9934, "upload_time": "2013-01-14T18:08:21", "upload_time_iso_8601": "2013-01-14T18:08:21.762594Z", "url": "https://files.pythonhosted.org/packages/2d/f5/f0641479ea036327583f97e1f2b5c7a1bb8392ea6e53d61ade13de6c4e25/tt_sass-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:57 2020"}