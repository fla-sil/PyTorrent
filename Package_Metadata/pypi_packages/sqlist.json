{"info": {"author": "Valery Ryaboshapko", "author_email": "valera@creator.su", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. image:: https://travis-ci.org/valericus/sqlist.svg?branch=master\n    :target: https://travis-ci.org/valericus/sqlist\n\nSQList is like `shelve <https://docs.python.org/3/library/shelve.html>`_ but for lists. It serializes data with `pickle <https://docs.python.org/3/library/pickle.html>`_ and puts into SQLite database.\n\nUsage\n=====\n\nSQList object behaves mostly like casual Python list. For example you can create SQList from list.\n\n>>> import sqlist\n>>> values = sqlist.SQList([1, 2, 3])\n>>> values\nsqlist.SQList([1, 2, 3])\n\nYou can get item from list by index.\n\n>>> values[0]\n1\n>>> values[-1]\n3\n\nSlices are available too.\n\n>>> values[0:2]\n[1, 2]\n\nYou can easily append item to SQList and pop them from it.\n\n>>> values.append(23)\n>>> values\nsqlist.SQList([1, 2, 3, 23])\n>>> valuea.pop(0)\n1\n>>> values\nsqlist.SQList([2, 3, 23])\n\nUnfortunately inserting is not available yet but planned for future versions.\n\n\nSorting\n=======\n\nYou can easily sort SQList just in place, but be careful, this sorting can be quite long.\n\n>>> values.sort(key=lambda x: 1 / x)\n>>> values\nsqlist.SQList([23, 3, 2])\n>>> values.sort()\n>>> values\nsqlist.SQList([2, 3, 23])\n\nAlso there is a way to keep your SQList permanently sorted.\n\n>>> values = sqlist.SQList(['a', 'aa', 'aaaa'], key=lambda x: len('x'))\n>>> values\nsqlist.SQList(['a', 'aa', 'aaaa'], key=lambda x: len('x'))\n>>> values.append('bbb')\n>>> values\nsqlist.SQList(['a', 'aa', 'bbb', 'aaaa'], key=lambda x: len('x'))\n\nThis way is a bit ugly but it was designed for high performance.\n\nMultithreading\n==============\n\nAt the moment SQList is not thread safe, may be it will become so later.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/valericus/sqlist", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sqlist", "package_url": "https://pypi.org/project/sqlist/", "platform": "", "project_url": "https://pypi.org/project/sqlist/", "project_urls": {"Homepage": "https://github.com/valericus/sqlist"}, "release_url": "https://pypi.org/project/sqlist/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "List-like wrapper for SQLite", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/valericus/sqlist\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/valericus/sqlist.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b73359f644d49eea9096ec065f2509b7b2771fe/68747470733a2f2f7472617669732d63692e6f72672f76616c6572696375732f73716c6973742e7376673f6272616e63683d6d6173746572\"></a>\n<p>SQList is like <a href=\"https://docs.python.org/3/library/shelve.html\" rel=\"nofollow\">shelve</a> but for lists. It serializes data with <a href=\"https://docs.python.org/3/library/pickle.html\" rel=\"nofollow\">pickle</a> and puts into SQLite database.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>SQList object behaves mostly like casual Python list. For example you can create SQList from list.</p>\n<pre>&gt;&gt;&gt; import sqlist\n&gt;&gt;&gt; values = sqlist.SQList([1, 2, 3])\n&gt;&gt;&gt; values\nsqlist.SQList([1, 2, 3])\n</pre>\n<p>You can get item from list by index.</p>\n<pre>&gt;&gt;&gt; values[0]\n1\n&gt;&gt;&gt; values[-1]\n3\n</pre>\n<p>Slices are available too.</p>\n<pre>&gt;&gt;&gt; values[0:2]\n[1, 2]\n</pre>\n<p>You can easily append item to SQList and pop them from it.</p>\n<pre>&gt;&gt;&gt; values.append(23)\n&gt;&gt;&gt; values\nsqlist.SQList([1, 2, 3, 23])\n&gt;&gt;&gt; valuea.pop(0)\n1\n&gt;&gt;&gt; values\nsqlist.SQList([2, 3, 23])\n</pre>\n<p>Unfortunately inserting is not available yet but planned for future versions.</p>\n</div>\n<div id=\"sorting\">\n<h2>Sorting</h2>\n<p>You can easily sort SQList just in place, but be careful, this sorting can be quite long.</p>\n<pre>&gt;&gt;&gt; values.sort(key=lambda x: 1 / x)\n&gt;&gt;&gt; values\nsqlist.SQList([23, 3, 2])\n&gt;&gt;&gt; values.sort()\n&gt;&gt;&gt; values\nsqlist.SQList([2, 3, 23])\n</pre>\n<p>Also there is a way to keep your SQList permanently sorted.</p>\n<pre>&gt;&gt;&gt; values = sqlist.SQList(['a', 'aa', 'aaaa'], key=lambda x: len('x'))\n&gt;&gt;&gt; values\nsqlist.SQList(['a', 'aa', 'aaaa'], key=lambda x: len('x'))\n&gt;&gt;&gt; values.append('bbb')\n&gt;&gt;&gt; values\nsqlist.SQList(['a', 'aa', 'bbb', 'aaaa'], key=lambda x: len('x'))\n</pre>\n<p>This way is a bit ugly but it was designed for high performance.</p>\n</div>\n<div id=\"multithreading\">\n<h2>Multithreading</h2>\n<p>At the moment SQList is not thread safe, may be it will become so later.</p>\n</div>\n\n          </div>"}, "last_serial": 3407412, "releases": {"0.1a": [], "0.1b": [{"comment_text": "", "digests": {"md5": "73274b91f1057357ef3e9d1eaee74289", "sha256": "703099e03ff76747f696a99469291e958888cbd8254a6875bf7f9e9dcbeaa4eb"}, "downloads": -1, "filename": "sqlist-0.1b.tar.gz", "has_sig": false, "md5_digest": "73274b91f1057357ef3e9d1eaee74289", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4269, "upload_time": "2016-01-13T02:42:17", "upload_time_iso_8601": "2016-01-13T02:42:17.290969Z", "url": "https://files.pythonhosted.org/packages/2a/2e/e0ec84782d1943e3bc4735f34fd01c87dae6f5aad2c1c51d6a7c31ecf3d6/sqlist-0.1b.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "619721822af0d66d044effa49f094927", "sha256": "67bf799b15704449f2d1875d3acc465b7944f81066cda933b49b802b99aad920"}, "downloads": -1, "filename": "sqlist-0.2.1.tar.gz", "has_sig": false, "md5_digest": "619721822af0d66d044effa49f094927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5180, "upload_time": "2017-12-11T11:07:04", "upload_time_iso_8601": "2017-12-11T11:07:04.608238Z", "url": "https://files.pythonhosted.org/packages/2d/cb/d3a3ff2d051733c295192783678866259fad65cc4268c1736a19c49d8cdb/sqlist-0.2.1.tar.gz", "yanked": false}], "0.2.1b": [{"comment_text": "built for Linux-3.16.0-38-generic-x86_64-with-glibc2.9", "digests": {"md5": "5621af3e0eb59f0d4038fed0173033b9", "sha256": "61890630c4f0b40b4eaa38bebf682617a5596862fee8e78cc2b87f0c53a67b68"}, "downloads": -1, "filename": "sqlist-0.2.1b.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "5621af3e0eb59f0d4038fed0173033b9", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 9633, "upload_time": "2016-02-08T08:43:26", "upload_time_iso_8601": "2016-02-08T08:43:26.064910Z", "url": "https://files.pythonhosted.org/packages/0f/2c/0da2daaf3767ab27855cc6a3e13ad87158cb4e9ab1059e37edf9dd801474/sqlist-0.2.1b.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "22310db7f3b5e110bc586d21286ce200", "sha256": "598ba084423dfed302522c8f223603b878cb4c5f9ae095fd30a126fc9fc67191"}, "downloads": -1, "filename": "sqlist-0.2.1b.tar.gz", "has_sig": false, "md5_digest": "22310db7f3b5e110bc586d21286ce200", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4919, "upload_time": "2016-02-08T08:43:38", "upload_time_iso_8601": "2016-02-08T08:43:38.870241Z", "url": "https://files.pythonhosted.org/packages/9c/aa/d03413f78fba73a4ca81b712be2c3eda05d718f5146e34f263bdc0af203c/sqlist-0.2.1b.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "63bb13e04d65f3063362315caf86cd1e", "sha256": "0ba428c51378a7f449d979fc80abb52bd5273bc7217218fdf3324a0e94dd0217"}, "downloads": -1, "filename": "sqlist-0.2.2.tar.gz", "has_sig": false, "md5_digest": "63bb13e04d65f3063362315caf86cd1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5483, "upload_time": "2017-12-11T12:58:10", "upload_time_iso_8601": "2017-12-11T12:58:10.865694Z", "url": "https://files.pythonhosted.org/packages/7e/2f/980ea2a93cfb5498013623a0058c2e70c13d86d2d618c103d95b9f2a1e29/sqlist-0.2.2.tar.gz", "yanked": false}], "0.2b": [{"comment_text": "", "digests": {"md5": "7f5bbf1ff0b8ff82a41da294109a70dd", "sha256": "2b3ac7a7e1fc06f0999fc7db961f1e92df319a031521f9892d09a3d8ab61e85f"}, "downloads": -1, "filename": "sqlist-0.2b.tar.gz", "has_sig": false, "md5_digest": "7f5bbf1ff0b8ff82a41da294109a70dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4913, "upload_time": "2016-01-19T17:01:22", "upload_time_iso_8601": "2016-01-19T17:01:22.495480Z", "url": "https://files.pythonhosted.org/packages/64/60/803380d311f733a932d6f9fb1a5508959480d03c17a24037bfbcb58f4843/sqlist-0.2b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63bb13e04d65f3063362315caf86cd1e", "sha256": "0ba428c51378a7f449d979fc80abb52bd5273bc7217218fdf3324a0e94dd0217"}, "downloads": -1, "filename": "sqlist-0.2.2.tar.gz", "has_sig": false, "md5_digest": "63bb13e04d65f3063362315caf86cd1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5483, "upload_time": "2017-12-11T12:58:10", "upload_time_iso_8601": "2017-12-11T12:58:10.865694Z", "url": "https://files.pythonhosted.org/packages/7e/2f/980ea2a93cfb5498013623a0058c2e70c13d86d2d618c103d95b9f2a1e29/sqlist-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:43 2020"}