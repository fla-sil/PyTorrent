{"info": {"author": "mayansalama", "author_email": "micsalama@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Windmill\n\n[![Build Status](https://travis-ci.org/mayansalama/windmill.svg?branch=master)](https://travis-ci.org/mayansalama/windmill)\n\nDrag'n'drop web app to manage and create Airflow DAGs. DAGs are described\nusinga JSON \"wml\" file, which can be transpiled into a Python DAG file and \npushed to a configured git repository.\n\n- Front end is built using React on Typescript\n- Back end is built using Flask on Python 3.6+\n\n## Getting Started\n\n1. Install with `pip install airflow-windmill`\n   1. Airflow is expected to be installed on the system. This allows Windmill to run with arbitrary versions of Airflow\n   2. Otherwise it can be packaged with windmill using `pip install airflow-windmill[airflow]`. The version is defined in `pyproject.toml`\n2. Run `windmill init` to create a local Windmill project\n3. `cd windmill-project`\n4. Run `windmill run` from this folder to run the app locally\n\n## MVP Required Features\n\n### Front-End Features\n\n- [x] Dynamic Operators\n- [x] Menu Dropdowns\n- [x] Load Operators from App\n- [x] Format operator display into classes\n- [x] Search functionality for operators\n- [x] Basic operator level properties\n- [x] Implement DAG level properties\n- [x] New DAG Functionality\n- [x] Parameter Tooltips\n- [x] Render arbitrary viewport windows for New/Save/Load etc\n- [x] Overwrite/Save prompt on New\n- [x] DAG renaming and save functionality\n- [x] Open dag from menu\n- [x] Make save/load more efficient by removing non-essential values\n- [x] Switch nav menu to icons \n- [x] Add convert DAG call\n- [ ] Add hotkeys to menu functions\n- [x] Make input/output nodes more clear\n- [ ] Check if file already exists on rename\n- [ ] Prompt save if there are nodes on open\n- [x] Fix loss of state on refresh bug\n- [ ] Put File details in File Browse\n- [ ] Make Flask Backend URI configurable\n- [ ] Add a last saved time to NavBar\n- [ ] Add error handling to backend calls\n- [ ] Only save local state if valid\n- [ ] Add tests\n- [ ] Get task descriptions from Operator list\n- [ ] XSS and injection vulns? \n- [ ] Ctl+Shift+F FIXME\n\n### Back-End Features\n\n- [x] Generate Operator Lists\n- [x] CLI to start Web and Front End\n- [x] Generate DAG Spec\n- [x] CLI to create new windmill project\n- [x] CLI to start windmill from a windmill project\n- [x] Implement windmill-dev start\n- [x] Save/Load Windmill Files functionality\n- [x] Get default values\n- [x] Pull parameters from parent classes\n- [x] Move airflow dependency as extra\n- [x] Convert WML into Python DAG\n- [x] API Endpoint to trigger WML -> DAG\n- [x] Make sure that nodes are being put in right order using ports\n- [ ] Edge cases for WML -> DAG\n- [ ] Allow repeated/weird dag/task ids (e.g. 123)\n- [ ] Get WML owner and last-modified details during wml list\n- [ ] Allow custom operators\n- [ ] Strategy for Python Opjects (e.g. callables) - allow either a import ref or an inline statement\n- [ ] Backport existing Python DAGs to WMLs\n- [ ] Allow DAG updates to propogate to WMLs (probably better to just always backport - consolidating would be a mess)\n- [ ] Add tests for different airflow version\n- [ ] Version lock travis tox and poetry version? \n\n### Other features\n\n- [ ] Validate on backend or front end or both?\n- [ ] Doco\n- [ ] Add permission restrictions for valid tags \n- [ ] Only include dist folder from app in poetry build\n\n## Dev User Guide\n\nTo run as a dev:\n\n1. Clone from git\n2. Run `poetry install -E airflow`\n4. Run `npm install from windmill/http/app`\n4. Run `windmill-dev start-frontend`\n3. Run `windmill-dev start-backend`\n5. Open `127.0.0.1:1234`\n\n## Run Python Tests\n\nExpects Tox and Poetry to be available on path\n\n```\npyenv install 3.6.5 3.7.7\npyenv local 3.6.5 3.7.7\ntox\n```\n\n## Future Usage Patterns\n\n- Auto-sync for windmill project to git\n\n## Deployment\n\nDeployment to PyPi is managed using Travis and should be done in the following steps:\n\n1. Run `poetry version {patch|minor|major}`\n2. Increment the version number in `windmill/__init__.py`\n3. Commit and merge code into the master branch\n4. Ensure that the travis build is green\n5. Create a git tag for the new build\n6. Push the tag to origin\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mayansalama/windmill", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "airflow-windmill", "package_url": "https://pypi.org/project/airflow-windmill/", "platform": "", "project_url": "https://pypi.org/project/airflow-windmill/", "project_urls": {"Homepage": "https://github.com/mayansalama/windmill", "Repository": "https://github.com/mayansalama/windmill"}, "release_url": "https://pypi.org/project/airflow-windmill/0.0.4/", "requires_dist": ["marshmallow (>=3.0,<4.0)", "docstring-parser (>=0.3.0,<0.4.0)", "decli (>=0.5.1,<0.6.0)", "flask-cors (>=3.0.8,<4.0.0)", "pyyaml (>=5.1.2,<6.0.0)", "networkx (>=2.3,<3.0)", "jinja2 (>=2.10.1,<3.0.0)", "inflection (>=0.3.1,<0.4.0)", "black (>=18.3-alpha.0,<19.0)", "apache-airflow (==1.10.4); extra == \"airflow\"", "doc-cli (>=0.0.4,<0.0.5)", "gitpython (>=3.0.2,<4.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Drag'N'Drop Web Frontend for Building and Managing Airflow DAGs", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Windmill</h1>\n<p><a href=\"https://travis-ci.org/mayansalama/windmill\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2c176aabd2a74bdcc8ae8eee1210f522d82958f/68747470733a2f2f7472617669732d63692e6f72672f6d6179616e73616c616d612f77696e646d696c6c2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Drag'n'drop web app to manage and create Airflow DAGs. DAGs are described\nusinga JSON \"wml\" file, which can be transpiled into a Python DAG file and\npushed to a configured git repository.</p>\n<ul>\n<li>Front end is built using React on Typescript</li>\n<li>Back end is built using Flask on Python 3.6+</li>\n</ul>\n<h2>Getting Started</h2>\n<ol>\n<li>Install with <code>pip install airflow-windmill</code>\n<ol>\n<li>Airflow is expected to be installed on the system. This allows Windmill to run with arbitrary versions of Airflow</li>\n<li>Otherwise it can be packaged with windmill using <code>pip install airflow-windmill[airflow]</code>. The version is defined in <code>pyproject.toml</code></li>\n</ol>\n</li>\n<li>Run <code>windmill init</code> to create a local Windmill project</li>\n<li><code>cd windmill-project</code></li>\n<li>Run <code>windmill run</code> from this folder to run the app locally</li>\n</ol>\n<h2>MVP Required Features</h2>\n<h3>Front-End Features</h3>\n<ul>\n<li>[x] Dynamic Operators</li>\n<li>[x] Menu Dropdowns</li>\n<li>[x] Load Operators from App</li>\n<li>[x] Format operator display into classes</li>\n<li>[x] Search functionality for operators</li>\n<li>[x] Basic operator level properties</li>\n<li>[x] Implement DAG level properties</li>\n<li>[x] New DAG Functionality</li>\n<li>[x] Parameter Tooltips</li>\n<li>[x] Render arbitrary viewport windows for New/Save/Load etc</li>\n<li>[x] Overwrite/Save prompt on New</li>\n<li>[x] DAG renaming and save functionality</li>\n<li>[x] Open dag from menu</li>\n<li>[x] Make save/load more efficient by removing non-essential values</li>\n<li>[x] Switch nav menu to icons</li>\n<li>[x] Add convert DAG call</li>\n<li>[ ] Add hotkeys to menu functions</li>\n<li>[x] Make input/output nodes more clear</li>\n<li>[ ] Check if file already exists on rename</li>\n<li>[ ] Prompt save if there are nodes on open</li>\n<li>[x] Fix loss of state on refresh bug</li>\n<li>[ ] Put File details in File Browse</li>\n<li>[ ] Make Flask Backend URI configurable</li>\n<li>[ ] Add a last saved time to NavBar</li>\n<li>[ ] Add error handling to backend calls</li>\n<li>[ ] Only save local state if valid</li>\n<li>[ ] Add tests</li>\n<li>[ ] Get task descriptions from Operator list</li>\n<li>[ ] XSS and injection vulns?</li>\n<li>[ ] Ctl+Shift+F FIXME</li>\n</ul>\n<h3>Back-End Features</h3>\n<ul>\n<li>[x] Generate Operator Lists</li>\n<li>[x] CLI to start Web and Front End</li>\n<li>[x] Generate DAG Spec</li>\n<li>[x] CLI to create new windmill project</li>\n<li>[x] CLI to start windmill from a windmill project</li>\n<li>[x] Implement windmill-dev start</li>\n<li>[x] Save/Load Windmill Files functionality</li>\n<li>[x] Get default values</li>\n<li>[x] Pull parameters from parent classes</li>\n<li>[x] Move airflow dependency as extra</li>\n<li>[x] Convert WML into Python DAG</li>\n<li>[x] API Endpoint to trigger WML -&gt; DAG</li>\n<li>[x] Make sure that nodes are being put in right order using ports</li>\n<li>[ ] Edge cases for WML -&gt; DAG</li>\n<li>[ ] Allow repeated/weird dag/task ids (e.g. 123)</li>\n<li>[ ] Get WML owner and last-modified details during wml list</li>\n<li>[ ] Allow custom operators</li>\n<li>[ ] Strategy for Python Opjects (e.g. callables) - allow either a import ref or an inline statement</li>\n<li>[ ] Backport existing Python DAGs to WMLs</li>\n<li>[ ] Allow DAG updates to propogate to WMLs (probably better to just always backport - consolidating would be a mess)</li>\n<li>[ ] Add tests for different airflow version</li>\n<li>[ ] Version lock travis tox and poetry version?</li>\n</ul>\n<h3>Other features</h3>\n<ul>\n<li>[ ] Validate on backend or front end or both?</li>\n<li>[ ] Doco</li>\n<li>[ ] Add permission restrictions for valid tags</li>\n<li>[ ] Only include dist folder from app in poetry build</li>\n</ul>\n<h2>Dev User Guide</h2>\n<p>To run as a dev:</p>\n<ol>\n<li>Clone from git</li>\n<li>Run <code>poetry install -E airflow</code></li>\n<li>Run <code>npm install from windmill/http/app</code></li>\n<li>Run <code>windmill-dev start-frontend</code></li>\n<li>Run <code>windmill-dev start-backend</code></li>\n<li>Open <code>127.0.0.1:1234</code></li>\n</ol>\n<h2>Run Python Tests</h2>\n<p>Expects Tox and Poetry to be available on path</p>\n<pre><code>pyenv install 3.6.5 3.7.7\npyenv local 3.6.5 3.7.7\ntox\n</code></pre>\n<h2>Future Usage Patterns</h2>\n<ul>\n<li>Auto-sync for windmill project to git</li>\n</ul>\n<h2>Deployment</h2>\n<p>Deployment to PyPi is managed using Travis and should be done in the following steps:</p>\n<ol>\n<li>Run <code>poetry version {patch|minor|major}</code></li>\n<li>Increment the version number in <code>windmill/__init__.py</code></li>\n<li>Commit and merge code into the master branch</li>\n<li>Ensure that the travis build is green</li>\n<li>Create a git tag for the new build</li>\n<li>Push the tag to origin</li>\n</ol>\n\n          </div>"}, "last_serial": 7021984, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9fb6ae5e7d91443f57cecc7c6cb92fd0", "sha256": "1f96b9d37366d0c37e5710f5002c4258deab2a01ee98f291068f5e3357323726"}, "downloads": -1, "filename": "airflow_windmill-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9fb6ae5e7d91443f57cecc7c6cb92fd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 1479443, "upload_time": "2019-09-22T07:33:50", "upload_time_iso_8601": "2019-09-22T07:33:50.347516Z", "url": "https://files.pythonhosted.org/packages/c9/7c/cbeccc883b71353296f09c69f1d6b59f120bab996b200c75b517c4871abe/airflow_windmill-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21408e709a8e15e80120a1162efebb6a", "sha256": "419a12b427bb92a8275023ce98f04a5333fc9a931906c221baeb9da8db96bc9e"}, "downloads": -1, "filename": "airflow-windmill-0.0.1.tar.gz", "has_sig": false, "md5_digest": "21408e709a8e15e80120a1162efebb6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 1456846, "upload_time": "2019-09-22T07:33:33", "upload_time_iso_8601": "2019-09-22T07:33:33.814320Z", "url": "https://files.pythonhosted.org/packages/c4/0f/4804a59e35e1456ee44f0033ecf5ce0dde88767257c6fa5b8f1e18789c8b/airflow-windmill-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "50e5b38623a665e630f40bb41222c7d0", "sha256": "fd96f1797759210073bd5cce65284ff43d651c7ae0cc62a1b297a3b0edb74493"}, "downloads": -1, "filename": "airflow_windmill-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "50e5b38623a665e630f40bb41222c7d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 1488583, "upload_time": "2019-09-25T02:07:20", "upload_time_iso_8601": "2019-09-25T02:07:20.970515Z", "url": "https://files.pythonhosted.org/packages/7a/1e/f59d8da19c362598b050939ec1731120861b34c7eff857a454ef71687fa4/airflow_windmill-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30f56976387eb44481c2dda0534068bb", "sha256": "56a05a048d32e2537654521a9b7a2fd13519306b576a6ca25b99fa90c967e799"}, "downloads": -1, "filename": "airflow-windmill-0.0.2.tar.gz", "has_sig": false, "md5_digest": "30f56976387eb44481c2dda0534068bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 1463156, "upload_time": "2019-09-25T02:07:17", "upload_time_iso_8601": "2019-09-25T02:07:17.757857Z", "url": "https://files.pythonhosted.org/packages/a3/81/68ce98632e4563203bb4def4959da0e0edaf65004b8db8609a41c0d0e7c1/airflow-windmill-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b9d20efe10622ddac5e653331f4dd03b", "sha256": "1c64740c785a152f19a0264b8c081295fe503dea877ce23add43578233777cec"}, "downloads": -1, "filename": "airflow_windmill-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b9d20efe10622ddac5e653331f4dd03b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 1398385, "upload_time": "2020-04-14T05:51:02", "upload_time_iso_8601": "2020-04-14T05:51:02.935370Z", "url": "https://files.pythonhosted.org/packages/ff/db/7acac9c2c77942ec7980ce7151a15b3ca877cfe157dbc9cd8a253b3d244e/airflow_windmill-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd29306a897119b46785ba6dd471d87f", "sha256": "e00cf9718e563ee3f6266f95ab56801e713f56b7b7d666b7eb31b22b504f4763"}, "downloads": -1, "filename": "airflow-windmill-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fd29306a897119b46785ba6dd471d87f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 1384208, "upload_time": "2020-04-14T05:51:01", "upload_time_iso_8601": "2020-04-14T05:51:01.284186Z", "url": "https://files.pythonhosted.org/packages/53/49/c99c39426ce94e7a453a25c0b549b635acff2db315c612fc313b2914ed9b/airflow-windmill-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6a1c22ee6217ca350bad25e7cfe2ac7c", "sha256": "592e395dcf807796383879b0b9840e06fb122e732e51e45455555cd5979be721"}, "downloads": -1, "filename": "airflow_windmill-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6a1c22ee6217ca350bad25e7cfe2ac7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 1399095, "upload_time": "2020-04-15T04:10:12", "upload_time_iso_8601": "2020-04-15T04:10:12.348839Z", "url": "https://files.pythonhosted.org/packages/72/be/e8c612e629c102cb17d8ae98d04df9acf770f2ca54026c5466fcf6f904a8/airflow_windmill-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d12662b5c794c16e972e77f3d116bae4", "sha256": "f68126833a9f7e06d019c8621667998bcf533ef4fed93f19e4327a1ab4275e23"}, "downloads": -1, "filename": "airflow-windmill-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d12662b5c794c16e972e77f3d116bae4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 1384986, "upload_time": "2020-04-15T04:10:11", "upload_time_iso_8601": "2020-04-15T04:10:11.024430Z", "url": "https://files.pythonhosted.org/packages/4b/7d/dc4e64f0f17b8b5376083c995befbaf8b9b1273a6e5dc0e76436f97d4fa4/airflow-windmill-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a1c22ee6217ca350bad25e7cfe2ac7c", "sha256": "592e395dcf807796383879b0b9840e06fb122e732e51e45455555cd5979be721"}, "downloads": -1, "filename": "airflow_windmill-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6a1c22ee6217ca350bad25e7cfe2ac7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 1399095, "upload_time": "2020-04-15T04:10:12", "upload_time_iso_8601": "2020-04-15T04:10:12.348839Z", "url": "https://files.pythonhosted.org/packages/72/be/e8c612e629c102cb17d8ae98d04df9acf770f2ca54026c5466fcf6f904a8/airflow_windmill-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d12662b5c794c16e972e77f3d116bae4", "sha256": "f68126833a9f7e06d019c8621667998bcf533ef4fed93f19e4327a1ab4275e23"}, "downloads": -1, "filename": "airflow-windmill-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d12662b5c794c16e972e77f3d116bae4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 1384986, "upload_time": "2020-04-15T04:10:11", "upload_time_iso_8601": "2020-04-15T04:10:11.024430Z", "url": "https://files.pythonhosted.org/packages/4b/7d/dc4e64f0f17b8b5376083c995befbaf8b9b1273a6e5dc0e76436f97d4fa4/airflow-windmill-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:29 2020"}