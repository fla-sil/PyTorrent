{"info": {"author": "Rapha\u00ebl Barrois", "author_email": "raphael.barrois+bicti@polytechnique.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools", "Topic :: System :: Boot :: Init", "Topic :: System :: Installation/Setup", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration"], "description": "bicti\n=====\n\nSimple startup tool for docker containers.\n\nbicti is intended as the entrypoint of a container,\nand provides a few helpers for systems that may require several services\n(for instance, fastcgi and nginx and cron and logrotate).\n\n\nIts features include:\n\n- Declarative list of supported commands\n- Launch all demons or only a few ones\n- Drop into a shell instead\n\n\nDepencies\n---------\n\nbicti is written in Python; it supports all versions from 2.6 onwards.\nIt also relies on ``runit`` (http://smarden.org/runit/) for daemon management.\n\nSetup\n-----\n\nIn your dockerfile, add:\n\n.. code-block:: sh\n\n    RUN apt-get -qqy install runit python python-pip\n    RUN pip install bicti && ln -s /sbin/bicti `which bicti`\n    ADD ./bicti.ini /etc/bicti.ini\n    RUN /sbin/bicti --setup\n    ENTRYPOINT \"/sbin/bicti\"\n\nThis will:\n\n1. Retrieve bicti and its dependencies\n2. Load your ``bicti.ini`` configuration file (expected at ``/etc/bicti.ini``)\n3. Setup all daemon startup scripts in ``/etc/runit``\n4. Declare bicti as your entry point.\n\n\nCore concepts\n-------------\n\nBeyond a few command-line flags, most of bicti's job is in setting up the configuration\nfor ``runit``.\n\nUpon startup, bicti will:\n\n1. Load its configuration file (``/etc/bicti.ini``)\n2. Setup ``runit`` to start the declared services\n3. Transfer control to ``runit``, which handles daemon auto-restart, orphan process reaping, etc.\n\n\n\nUsage\n-----\n\n.. code-block:: sh\n\n    $ docker run my/image --help\n    usage: bicti.py [--config CONFIG] [--root ROOT] [-h] [--setup]\n                    [--shell [SHELL]] [--all]\n                    [SERVICE [SERVICE ...]]\n\n    Bicti, the docker inner setup.\n\n    positional arguments:\n      SERVICE               Services to start (valid options: cron,uwsgi)\n\n    optional arguments:\n      --config CONFIG, -c CONFIG\n                            Read configuration from CONFIG\n      --root ROOT           Use paths relative to ROOT\n      -h, --help            Show this help message and exit\n      --setup               Setup the service files\n      --shell [SHELL]       Drop to a shell (default=/bin/bash)\n      --all                 Start all services\n\nConfiguration file:\n\n.. code-block:: ini\n\n    [bicti]\n    ; Run before any service is started\n    setup = /sbin/my-image-setup\n    ; Run once all services have been stopped\n    teardown = /sbin/my-image-cleanup\n\n    ; One section per service\n    [cron]\n    ; Actual command to run\n    command = /usr/bin/cron\n    ; Require another service to be started first\n    after = syslog\n\n    [uwsgi]\n    command = /usr/bin/uwsgi\n    ; Command to run before starting the service\n    setup_command = mkdir /var/log/uwsgi\n    ; Special uid/gid\n    uid = www-data\n    gid = www-data", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi/bicti/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rbarrois/bicti/", "keywords": "docker,container,init,startup", "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "bicti", "package_url": "https://pypi.org/project/bicti/", "platform": "OS Independent", "project_url": "https://pypi.org/project/bicti/", "project_urls": {"Download": "https://pypi.python.org/pypi/bicti/", "Homepage": "https://github.com/rbarrois/bicti/"}, "release_url": "https://pypi.org/project/bicti/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Bicti, efficient startup script for within docker containers", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple startup tool for docker containers.</p>\n<p>bicti is intended as the entrypoint of a container,\nand provides a few helpers for systems that may require several services\n(for instance, fastcgi and nginx and cron and logrotate).</p>\n<p>Its features include:</p>\n<ul>\n<li>Declarative list of supported commands</li>\n<li>Launch all demons or only a few ones</li>\n<li>Drop into a shell instead</li>\n</ul>\n<div id=\"depencies\">\n<h2>Depencies</h2>\n<p>bicti is written in Python; it supports all versions from 2.6 onwards.\nIt also relies on <tt>runit</tt> (<a href=\"http://smarden.org/runit/\" rel=\"nofollow\">http://smarden.org/runit/</a>) for daemon management.</p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>In your dockerfile, add:</p>\n<pre>RUN apt-get -qqy install runit python python-pip\nRUN pip install bicti <span class=\"o\">&amp;&amp;</span> ln -s /sbin/bicti <span class=\"sb\">`</span>which bicti<span class=\"sb\">`</span>\nADD ./bicti.ini /etc/bicti.ini\nRUN /sbin/bicti --setup\nENTRYPOINT <span class=\"s2\">\"/sbin/bicti\"</span>\n</pre>\n<p>This will:</p>\n<ol>\n<li>Retrieve bicti and its dependencies</li>\n<li>Load your <tt>bicti.ini</tt> configuration file (expected at <tt>/etc/bicti.ini</tt>)</li>\n<li>Setup all daemon startup scripts in <tt>/etc/runit</tt></li>\n<li>Declare bicti as your entry point.</li>\n</ol>\n</div>\n<div id=\"core-concepts\">\n<h2>Core concepts</h2>\n<p>Beyond a few command-line flags, most of bicti\u2019s job is in setting up the configuration\nfor <tt>runit</tt>.</p>\n<p>Upon startup, bicti will:</p>\n<ol>\n<li>Load its configuration file (<tt>/etc/bicti.ini</tt>)</li>\n<li>Setup <tt>runit</tt> to start the declared services</li>\n<li>Transfer control to <tt>runit</tt>, which handles daemon auto-restart, orphan process reaping, etc.</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ docker run my/image --help\nusage: bicti.py <span class=\"o\">[</span>--config CONFIG<span class=\"o\">]</span> <span class=\"o\">[</span>--root ROOT<span class=\"o\">]</span> <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--setup<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--shell <span class=\"o\">[</span>SHELL<span class=\"o\">]]</span> <span class=\"o\">[</span>--all<span class=\"o\">]</span>\n                <span class=\"o\">[</span>SERVICE <span class=\"o\">[</span>SERVICE ...<span class=\"o\">]]</span>\n\nBicti, the docker inner setup.\n\npositional arguments:\n  SERVICE               Services to start <span class=\"o\">(</span>valid options: cron,uwsgi<span class=\"o\">)</span>\n\noptional arguments:\n  --config CONFIG, -c CONFIG\n                        Read configuration from CONFIG\n  --root ROOT           Use paths relative to ROOT\n  -h, --help            Show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --setup               Setup the service files\n  --shell <span class=\"o\">[</span>SHELL<span class=\"o\">]</span>       Drop to a shell <span class=\"o\">(</span><span class=\"nv\">default</span><span class=\"o\">=</span>/bin/bash<span class=\"o\">)</span>\n  --all                 Start all services\n</pre>\n<p>Configuration file:</p>\n<pre><span class=\"k\">[bicti]</span>\n<span class=\"c1\">; Run before any service is started</span>\n<span class=\"na\">setup</span> <span class=\"o\">=</span> <span class=\"s\">/sbin/my-image-setup</span>\n<span class=\"c1\">; Run once all services have been stopped</span>\n<span class=\"na\">teardown</span> <span class=\"o\">=</span> <span class=\"s\">/sbin/my-image-cleanup</span>\n\n<span class=\"c1\">; One section per service</span>\n<span class=\"k\">[cron]</span>\n<span class=\"c1\">; Actual command to run</span>\n<span class=\"na\">command</span> <span class=\"o\">=</span> <span class=\"s\">/usr/bin/cron</span>\n<span class=\"c1\">; Require another service to be started first</span>\n<span class=\"na\">after</span> <span class=\"o\">=</span> <span class=\"s\">syslog</span>\n\n<span class=\"k\">[uwsgi]</span>\n<span class=\"na\">command</span> <span class=\"o\">=</span> <span class=\"s\">/usr/bin/uwsgi</span>\n<span class=\"c1\">; Command to run before starting the service</span>\n<span class=\"na\">setup_command</span> <span class=\"o\">=</span> <span class=\"s\">mkdir /var/log/uwsgi</span>\n<span class=\"c1\">; Special uid/gid</span>\n<span class=\"na\">uid</span> <span class=\"o\">=</span> <span class=\"s\">www-data</span>\n<span class=\"na\">gid</span> <span class=\"o\">=</span> <span class=\"s\">www-data</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1210957, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "4fe6128a282eea619d540308bb8f0682", "sha256": "e3d44b6a8b725a731c76dcf82e910845f60baa9590b89ac0c8442d2260973dfe"}, "downloads": -1, "filename": "bicti-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4fe6128a282eea619d540308bb8f0682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5358, "upload_time": "2014-09-03T00:29:02", "upload_time_iso_8601": "2014-09-03T00:29:02.897286Z", "url": "https://files.pythonhosted.org/packages/da/79/9cb4eb7804ab92389eeacd58f639fdf88e90dba1c95e4f4ad6246c385f0d/bicti-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4fe6128a282eea619d540308bb8f0682", "sha256": "e3d44b6a8b725a731c76dcf82e910845f60baa9590b89ac0c8442d2260973dfe"}, "downloads": -1, "filename": "bicti-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4fe6128a282eea619d540308bb8f0682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5358, "upload_time": "2014-09-03T00:29:02", "upload_time_iso_8601": "2014-09-03T00:29:02.897286Z", "url": "https://files.pythonhosted.org/packages/da/79/9cb4eb7804ab92389eeacd58f639fdf88e90dba1c95e4f4ad6246c385f0d/bicti-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:36 2020"}