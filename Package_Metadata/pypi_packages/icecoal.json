{"info": {"author": "Prakash Maria Liju P", "author_email": "ppml38@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Icecoal\nIcecoal is a light weight SQL database\n\nTargets are,\n- Apps that require SQL DB or external DB server\n- Apps that need lightweight replacement for oracle, MySQL etc.., which they use just to store and retrieve data\n- Those who want to add a database in their app without worrying about JDBC, ODBC, connection driver etc. and other technical jargons\n- Those who want to conveniently process CSV files with SQL.\n\n### Github project\ngithub.com/ppml38/icecoal\n\n### Features:\n- Written purely in python\n- Light weight (Just 57 Kb in total)\n- No external dependencies\n- Easy to add in your app/system (Just import!)\n\n### How to install\n```\npip install icecoal\n```\n\n### Usage\n#### General database oprations\n```python\nfrom icecoal import query\nquery(\"select name,age from travel_db/passengers where native='USA'\")\n```\n#### Processing your csv data files\n```python\nfrom icecoal import query\nquery(\"select * from path/to/passengers.csv where native='USA'\")\n```\nHere icecoal expects first line of csv file to be header line.    \nif it is not, you can either add headers in first line    \nor create a new file just with headers delimited with comma and add it along with data file name in the query as below    \n```python\nfrom icecoal import query\nquery(\"select * from path/to/passengers.csv, path/to/header.csv where native='USA'\")\n```\n\n### Return format\n```\n[sqlcode,'<message>',[result list]]\n```\n### SQL return codes\n| SQL Code | Description |\n| --- | --- |\n| 2 | 0 row\\(s) deleted |\n| 3 | 0 row\\(s) updated |\n| 1 | 0 row\\(s) selected |\n| 0 | **Success** |\n| -1 | Query incomplete |\n| -2 |  Unexpected character on position \\<index\\> |\n| -3 |  Unexpected character on where clause position \\<index\\> |\n| -4 |  Unsupported operator in where clause |\n| -5 |  Non numeric operand with arithmatic operator \\<operator\\> |\n| -6 | Non boolean operand(LHS) with logical operator \\<operator\\> |\n| -7 | Non boolean operand(RHS) with logical operator \\<operator\\> |\n| -8 | Operator ! must be followed by = |\n| -9 | Unbalanced paranthesis on LHS of operator \\<operator\\> |\n| -10 | Unbalanced paranthesis on RHS of operator \\<operator\\> |\n| -11 |  No field \\<fieldname\\> found in header file |\n| -12 | Value for variable \\<variablename\\> is missing in atleast one row |\n| -13 | Where clause condition returns non-boolean result |\n| -14 | Incomplete condition in where clause |\n| -15 | Database already exist |\n| -16 | Table already exist |\n| -17 | Database does not exist |\n| -18 | Database name is blank |\n| -19 | Not a database name |\n| -20 | Table does not exist |\n| -21 | Not a table name |\n| -22 | Header file does not exist |\n| -23 | Provided header is not a file |\n| -24 | Values count does not match table fields count |\n### Reserved words\n| Keywords |\n| --- |\n| SELECT |\n| FROM |\n| WHERE |\n| CREATE |\n| DATABASE |\n| TABLE |\n| INSERT |\n| UPDATE |\n| SET |\n| INTO |\n| TRUNCATE |\n| DROP |\n| DELETE |\n\n### Supported SQL operations and its syntax\n* SELECT *column_list* FROM \\[*path/to/*]*databasename/tablename*\\[*.csv*] \\[WHERE *condition*]\n* CREATE DATABASE \\[*path/to/*]*databasename*\n* CREATE TABLE \\[*path/to/*]*databasename/tablename*\\[*.csv*](*colum1,column2..*)\n* DROP DATABASE \\[*path/to/*]*databasename*\n* DROP TABLE \\[*path/to/*]*databasename/tablename*\\[*.csv*]\n* TRUNCATE TABLE \\[*path/to/*]*databasename/tablename*\\[*.csv*]\n* INSERT INTO \\[*path/to/*]*databasename/tablename*\\[*.csv*](*value1,value2,..*)\n* UPDATE \\[*path/to/*]*databasename/tablename*\\[*.csv*] SET *field1=value1,field2=value..* \\[WHERE *condition*]\n* DELETE FROM \\[*path/to/*]*databasename/tablename*\\[*.csv*] WHERE *condition*\n\n### Operators supported\n| Operator type | Operators |\n| --- | --- |\n| Arithmatic operators | +, -, *, /, % |\n| Comparison operators | >, <, >=, <=, =, != |\n| Logical operators | &, \\| |\n| End of query statement | \\# (Used internally) |\n\n### Operator precedence (in order from high to low)\n\n**NOTE :** Expression evaluation will use BODMAS as you studied in school. i.e., It has individual operator precedence unlike python or java.   \n**Example :** '9-7+1' will result '1'(That's how we were taught in school), where python eval() will return 3 as it treats + and - with equal precedence from left to right\n\n*You can use paranthesis to re-order precedence*\n\n| Operator precedence |\n| :---: |\n| \\% |\n| \\/ |\n| \\* |\n| + |\n| \\- |\n| <,<= |\n| \\>,>= |\n| != |\n| = |\n| & |\n| \\| |\n\n### File formats supported\nComma seperated value(.csv) files.\n\n### Instructions\n* Tables are referred with '/' character from database like 'db/table'\n* String values should be within '<string>'\n* Comparison operator '=' is used instead of '=='\n* Database,table names can contain only alphabet, number and underscore\n* Field names can contain only alphabets,number and underscore\n* All the exceptions are thrown to be handled by users\n* By default icecoal stores all its databases in current directory unless you prefix path with tablename\n\n### Licence\nMIT Licence.\nPlease raise a pull request in github.com/ppml38/icecoal to contribute. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ppml38/icecoal", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "icecoal", "package_url": "https://pypi.org/project/icecoal/", "platform": "", "project_url": "https://pypi.org/project/icecoal/", "project_urls": {"Homepage": "https://github.com/ppml38/icecoal"}, "release_url": "https://pypi.org/project/icecoal/1.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Lightweight SQL database", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Icecoal</h1>\n<p>Icecoal is a light weight SQL database</p>\n<p>Targets are,</p>\n<ul>\n<li>Apps that require SQL DB or external DB server</li>\n<li>Apps that need lightweight replacement for oracle, MySQL etc.., which they use just to store and retrieve data</li>\n<li>Those who want to add a database in their app without worrying about JDBC, ODBC, connection driver etc. and other technical jargons</li>\n<li>Those who want to conveniently process CSV files with SQL.</li>\n</ul>\n<h3>Github project</h3>\n<p>github.com/ppml38/icecoal</p>\n<h3>Features:</h3>\n<ul>\n<li>Written purely in python</li>\n<li>Light weight (Just 57 Kb in total)</li>\n<li>No external dependencies</li>\n<li>Easy to add in your app/system (Just import!)</li>\n</ul>\n<h3>How to install</h3>\n<pre><code>pip install icecoal\n</code></pre>\n<h3>Usage</h3>\n<h4>General database oprations</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">icecoal</span> <span class=\"kn\">import</span> <span class=\"n\">query</span>\n<span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"select name,age from travel_db/passengers where native='USA'\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Processing your csv data files</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">icecoal</span> <span class=\"kn\">import</span> <span class=\"n\">query</span>\n<span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"select * from path/to/passengers.csv where native='USA'\"</span><span class=\"p\">)</span>\n</pre>\n<p>Here icecoal expects first line of csv file to be header line.<br>\nif it is not, you can either add headers in first line<br>\nor create a new file just with headers delimited with comma and add it along with data file name in the query as below</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">icecoal</span> <span class=\"kn\">import</span> <span class=\"n\">query</span>\n<span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"select * from path/to/passengers.csv, path/to/header.csv where native='USA'\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Return format</h3>\n<pre><code>[sqlcode,'&lt;message&gt;',[result list]]\n</code></pre>\n<h3>SQL return codes</h3>\n<table>\n<thead>\n<tr>\n<th>SQL Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>0 row(s) deleted</td>\n</tr>\n<tr>\n<td>3</td>\n<td>0 row(s) updated</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0 row(s) selected</td>\n</tr>\n<tr>\n<td>0</td>\n<td><strong>Success</strong></td>\n</tr>\n<tr>\n<td>-1</td>\n<td>Query incomplete</td>\n</tr>\n<tr>\n<td>-2</td>\n<td>Unexpected character on position &lt;index&gt;</td>\n</tr>\n<tr>\n<td>-3</td>\n<td>Unexpected character on where clause position &lt;index&gt;</td>\n</tr>\n<tr>\n<td>-4</td>\n<td>Unsupported operator in where clause</td>\n</tr>\n<tr>\n<td>-5</td>\n<td>Non numeric operand with arithmatic operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-6</td>\n<td>Non boolean operand(LHS) with logical operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-7</td>\n<td>Non boolean operand(RHS) with logical operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-8</td>\n<td>Operator ! must be followed by =</td>\n</tr>\n<tr>\n<td>-9</td>\n<td>Unbalanced paranthesis on LHS of operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-10</td>\n<td>Unbalanced paranthesis on RHS of operator &lt;operator&gt;</td>\n</tr>\n<tr>\n<td>-11</td>\n<td>No field &lt;fieldname&gt; found in header file</td>\n</tr>\n<tr>\n<td>-12</td>\n<td>Value for variable &lt;variablename&gt; is missing in atleast one row</td>\n</tr>\n<tr>\n<td>-13</td>\n<td>Where clause condition returns non-boolean result</td>\n</tr>\n<tr>\n<td>-14</td>\n<td>Incomplete condition in where clause</td>\n</tr>\n<tr>\n<td>-15</td>\n<td>Database already exist</td>\n</tr>\n<tr>\n<td>-16</td>\n<td>Table already exist</td>\n</tr>\n<tr>\n<td>-17</td>\n<td>Database does not exist</td>\n</tr>\n<tr>\n<td>-18</td>\n<td>Database name is blank</td>\n</tr>\n<tr>\n<td>-19</td>\n<td>Not a database name</td>\n</tr>\n<tr>\n<td>-20</td>\n<td>Table does not exist</td>\n</tr>\n<tr>\n<td>-21</td>\n<td>Not a table name</td>\n</tr>\n<tr>\n<td>-22</td>\n<td>Header file does not exist</td>\n</tr>\n<tr>\n<td>-23</td>\n<td>Provided header is not a file</td>\n</tr>\n<tr>\n<td>-24</td>\n<td>Values count does not match table fields count</td>\n</tr></tbody></table>\n<h3>Reserved words</h3>\n<table>\n<thead>\n<tr>\n<th>Keywords</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SELECT</td>\n</tr>\n<tr>\n<td>FROM</td>\n</tr>\n<tr>\n<td>WHERE</td>\n</tr>\n<tr>\n<td>CREATE</td>\n</tr>\n<tr>\n<td>DATABASE</td>\n</tr>\n<tr>\n<td>TABLE</td>\n</tr>\n<tr>\n<td>INSERT</td>\n</tr>\n<tr>\n<td>UPDATE</td>\n</tr>\n<tr>\n<td>SET</td>\n</tr>\n<tr>\n<td>INTO</td>\n</tr>\n<tr>\n<td>TRUNCATE</td>\n</tr>\n<tr>\n<td>DROP</td>\n</tr>\n<tr>\n<td>DELETE</td>\n</tr></tbody></table>\n<h3>Supported SQL operations and its syntax</h3>\n<ul>\n<li>SELECT <em>column_list</em> FROM [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>] [WHERE <em>condition</em>]</li>\n<li>CREATE DATABASE [<em>path/to/</em>]<em>databasename</em></li>\n<li>CREATE TABLE [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>](<em>colum1,column2..</em>)</li>\n<li>DROP DATABASE [<em>path/to/</em>]<em>databasename</em></li>\n<li>DROP TABLE [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>]</li>\n<li>TRUNCATE TABLE [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>]</li>\n<li>INSERT INTO [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>](<em>value1,value2,..</em>)</li>\n<li>UPDATE [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>] SET <em>field1=value1,field2=value..</em> [WHERE <em>condition</em>]</li>\n<li>DELETE FROM [<em>path/to/</em>]<em>databasename/tablename</em>[<em>.csv</em>] WHERE <em>condition</em></li>\n</ul>\n<h3>Operators supported</h3>\n<table>\n<thead>\n<tr>\n<th>Operator type</th>\n<th>Operators</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Arithmatic operators</td>\n<td>+, -, *, /, %</td>\n</tr>\n<tr>\n<td>Comparison operators</td>\n<td>&gt;, &lt;, &gt;=, &lt;=, =, !=</td>\n</tr>\n<tr>\n<td>Logical operators</td>\n<td>&amp;, |</td>\n</tr>\n<tr>\n<td>End of query statement</td>\n<td># (Used internally)</td>\n</tr></tbody></table>\n<h3>Operator precedence (in order from high to low)</h3>\n<p><strong>NOTE :</strong> Expression evaluation will use BODMAS as you studied in school. i.e., It has individual operator precedence unlike python or java.<br>\n<strong>Example :</strong> '9-7+1' will result '1'(That's how we were taught in school), where python eval() will return 3 as it treats + and - with equal precedence from left to right</p>\n<p><em>You can use paranthesis to re-order precedence</em></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Operator precedence</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">%</td>\n</tr>\n<tr>\n<td align=\"center\">/</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n</tr>\n<tr>\n<td align=\"center\">+</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;,&lt;=</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;,&gt;=</td>\n</tr>\n<tr>\n<td align=\"center\">!=</td>\n</tr>\n<tr>\n<td align=\"center\">=</td>\n</tr>\n<tr>\n<td align=\"center\">&amp;</td>\n</tr>\n<tr>\n<td align=\"center\">|</td>\n</tr></tbody></table>\n<h3>File formats supported</h3>\n<p>Comma seperated value(.csv) files.</p>\n<h3>Instructions</h3>\n<ul>\n<li>Tables are referred with '/' character from database like 'db/table'</li>\n<li>String values should be within '&lt;string&gt;'</li>\n<li>Comparison operator '=' is used instead of '=='</li>\n<li>Database,table names can contain only alphabet, number and underscore</li>\n<li>Field names can contain only alphabets,number and underscore</li>\n<li>All the exceptions are thrown to be handled by users</li>\n<li>By default icecoal stores all its databases in current directory unless you prefix path with tablename</li>\n</ul>\n<h3>Licence</h3>\n<p>MIT Licence.\nPlease raise a pull request in github.com/ppml38/icecoal to contribute.</p>\n\n          </div>"}, "last_serial": 7091317, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "131869dfc88755159bfcec91ccef7dfb", "sha256": "a3e5f9019306a8e11d01896a2f4eef63870cf8c44d95fb262e514d2ef16637b1"}, "downloads": -1, "filename": "icecoal-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "131869dfc88755159bfcec91ccef7dfb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16266, "upload_time": "2020-04-24T08:58:45", "upload_time_iso_8601": "2020-04-24T08:58:45.289342Z", "url": "https://files.pythonhosted.org/packages/85/e6/901de2b37f82f0c5855a47421c96d288cfddac59fe6aff11c9ff9884a07d/icecoal-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cee14580409c0ab72ee1e0adae5c9f03", "sha256": "0b5c974780fd5897e4eb8abe7bb8d6a4de360d6e12ea0ed35bf8ed47017f5047"}, "downloads": -1, "filename": "icecoal-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cee14580409c0ab72ee1e0adae5c9f03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16651, "upload_time": "2020-04-24T08:58:46", "upload_time_iso_8601": "2020-04-24T08:58:46.761177Z", "url": "https://files.pythonhosted.org/packages/0b/84/ce9f4c8e7d6c56056bfb929a1077d7c7e5074eaeb7afd7ff1d2e2d6c8201/icecoal-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "46dcb270e95fd3f5d9c7f608c91f9ed2", "sha256": "1fea00581ccaf2e3519de147de82b6043ac58f0f212dcba26bddc65a74c75190"}, "downloads": -1, "filename": "icecoal-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "46dcb270e95fd3f5d9c7f608c91f9ed2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16398, "upload_time": "2020-04-24T09:35:42", "upload_time_iso_8601": "2020-04-24T09:35:42.365881Z", "url": "https://files.pythonhosted.org/packages/5e/bb/f8dd42c2f55ad6896a48481493d58eb64ddc562720f13fefb85ce4a3f548/icecoal-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1594911017061ea148196aed7405d5f", "sha256": "8644092264cbde0792b98cd4e87a40d1b70f8a33aaae0be7782390fe590802d3"}, "downloads": -1, "filename": "icecoal-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e1594911017061ea148196aed7405d5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16697, "upload_time": "2020-04-24T09:35:43", "upload_time_iso_8601": "2020-04-24T09:35:43.973624Z", "url": "https://files.pythonhosted.org/packages/74/22/1adb520381a4f75102f643eed6240453211c89713b16f1cf075c3f1d4824/icecoal-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46dcb270e95fd3f5d9c7f608c91f9ed2", "sha256": "1fea00581ccaf2e3519de147de82b6043ac58f0f212dcba26bddc65a74c75190"}, "downloads": -1, "filename": "icecoal-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "46dcb270e95fd3f5d9c7f608c91f9ed2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16398, "upload_time": "2020-04-24T09:35:42", "upload_time_iso_8601": "2020-04-24T09:35:42.365881Z", "url": "https://files.pythonhosted.org/packages/5e/bb/f8dd42c2f55ad6896a48481493d58eb64ddc562720f13fefb85ce4a3f548/icecoal-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1594911017061ea148196aed7405d5f", "sha256": "8644092264cbde0792b98cd4e87a40d1b70f8a33aaae0be7782390fe590802d3"}, "downloads": -1, "filename": "icecoal-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e1594911017061ea148196aed7405d5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16697, "upload_time": "2020-04-24T09:35:43", "upload_time_iso_8601": "2020-04-24T09:35:43.973624Z", "url": "https://files.pythonhosted.org/packages/74/22/1adb520381a4f75102f643eed6240453211c89713b16f1cf075c3f1d4824/icecoal-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:07 2020"}