{"info": {"author": "Steven Skoczen", "author_email": "steven@agoodcloud.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Overview\n========\n\ndjango-better500s is a library that makes 500 errors more\nuser-friendly, and more developer-friendly. It logs the full error\ntraceback (as if it were in DEBUG mode), as well as a user's\ndescription of what they were trying to do.\n\nPull requests are quite welcome!\n\n\nUsage\n=====\n\n## Installation ##\n\n1. `pip install django-better500s`\n\n2. Edit your `settings.py:`\n\n\t```\n\tINSTALLED_APPS += (\"better500s\",)\n\n    # If you have other exception-processing middleware, you should\n    # pay attention to what order you put middleware in. \"At the end\"\n    # should work fine for Better500s, though.\n\tMIDDLEWARE_CLASSES += (\"better500s.middleware.Better500s\",)\n\n\t# Set any optional settings (below)\n\tBETTER_500_DEFAULT_RETURN_URL_NAME = \"home_page\"\n\tBETTER_500_LOG_DIR = join(PROJECT_ROOT, 'logs', 'better_500')\n\tBETTER_500_FROM_EMAIL = \"foo@example.com\"\n\tBETTER_500_TO_EMAILS = [\"bar@example.com\",]\n\tBETTER_500_UNCAUGHT_DIR = \"Uncaught Logs\"\n\n\t```\n\n4. Add in the urls:\n\n\t```\n\turlpatterns += patterns('',          \n\t\turl(r'better500s/',   include('better500s.urls',  namespace=\"better500s\",  app_name='better500s') ),\n\t)\n\t```\n\n5. Enjoy better error reports.\n\n\n### Optional Settings:\n\n* `BETTER_500_LOG_DIR` - Where the full log traces should be stored (on `default_storage`, or failing that, locally).\n\tDefaults to `\"PROJECT_ROOT/logs/better500s\"`.  \n\n* `BETTER_500_FROM_EMAIL` - The email that notifications should be sent from.\n\tDefaults to `settings.DEFAULT_FROM_EMAIL`. \n\n* `BETTER_500_TO_EMAILS` - The set of email that notifications should be sent to.\n\tDefaults to `settings.ADMINS`. \n\n* `BETTER_500_UNCAUGHT_DIR` - Where to store log traces in which the 500 handling page crashed, or the user's browser crashed.\n\tDefaults to `\"UNCAUGHT\"`. \n\n* `BETTER_500_AJAX_URL` - URL for ajax callback, that saves the log, and sends off an email.\n\tDefaults to `\"better-500-callback/\"`. \n\n* `BETTER_500_POST_URL` - URL for user crash report posting.\n\tDefaults to `\"better-500-saved/\"`. \n\n* `BETTER_500_DEFAULT_RETURN_URL_NAME` - The url name that the \"Go Home\" button should link to. If none, the button is hidden.\n\tDefaults to `None`. \n\n\nHow it works:\n=============\n\n1. 500 errors (only) are caught.\n2. Full debug page traceback is generated, and saved to the `UNCAUGHT_DIR`.\n3. A \"We're sorry / Tell us what you were doing\" page loads.\n4. On load, that page ajax pings the server.\n5. On ping, the view files the log into a date-organized folder, and emails the `TO_EMAILs` with a link.\n6. If the user submits a report, that report is saved to the database, tied to the log file.  A second email is sent, with the user's report.\n7. An admin can click the view link, and see the full traceback, and the user's report.\n\n\nTemplates and Customization\n===========================\n\n### Templates\n\n* `500_handler.html` - This template is what users see when a 500 occurs, and where they can submit their report. \n\n* `feedback_saved.html` - If a user submits a report, this page is what they see. Links to the page that produced the error, and optionally, home.\n\n* `view_error.html` - Developer-side template for viewing captured 500s\n\n* `admin_email.txt` - Template for the 500 error email.\n\n* `error_with_notes_email.txt` - Template for the user bug report email.\n\n\n### Log file storage\n\nBy default, django-better500s uses the `default_backend` to store\nerror logs. If that fails, it falls back local file storage.\n\n\nCredits\n=======\ndjango-better500s was written by Steven Skoczen for Aquameta.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/skoczen/django-better500s", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-better500s", "package_url": "https://pypi.org/project/django-better500s/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-better500s/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/skoczen/django-better500s"}, "release_url": "https://pypi.org/project/django-better500s/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Library for Django that provides better error logging", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Overview<br>========<br><br>django-better500s is a library that makes 500 errors more<br>user-friendly, and more developer-friendly. It logs the full error<br>traceback (as if it were in DEBUG mode), as well as a user's<br>description of what they were trying to do.<br><br>Pull requests are quite welcome!<br><br><br>Usage<br>=====<br><br>## Installation ##<br><br>1. `pip install django-better500s`<br><br>2. Edit your `settings.py:`<br><br>\t```<br>\tINSTALLED_APPS += (\"better500s\",)<br><br>    # If you have other exception-processing middleware, you should<br>    # pay attention to what order you put middleware in. \"At the end\"<br>    # should work fine for Better500s, though.<br>\tMIDDLEWARE_CLASSES += (\"better500s.middleware.Better500s\",)<br><br>\t# Set any optional settings (below)<br>\tBETTER_500_DEFAULT_RETURN_URL_NAME = \"home_page\"<br>\tBETTER_500_LOG_DIR = join(PROJECT_ROOT, 'logs', 'better_500')<br>\tBETTER_500_FROM_EMAIL = \"foo@example.com\"<br>\tBETTER_500_TO_EMAILS = [\"bar@example.com\",]<br>\tBETTER_500_UNCAUGHT_DIR = \"Uncaught Logs\"<br><br>\t```<br><br>4. Add in the urls:<br><br>\t```<br>\turlpatterns += patterns('',          <br>\t\turl(r'better500s/',   include('better500s.urls',  namespace=\"better500s\",  app_name='better500s') ),<br>\t)<br>\t```<br><br>5. Enjoy better error reports.<br><br><br>### Optional Settings:<br><br>* `BETTER_500_LOG_DIR` - Where the full log traces should be stored (on `default_storage`, or failing that, locally).<br>\tDefaults to `\"PROJECT_ROOT/logs/better500s\"`.  <br><br>* `BETTER_500_FROM_EMAIL` - The email that notifications should be sent from.<br>\tDefaults to `settings.DEFAULT_FROM_EMAIL`. <br><br>* `BETTER_500_TO_EMAILS` - The set of email that notifications should be sent to.<br>\tDefaults to `settings.ADMINS`. <br><br>* `BETTER_500_UNCAUGHT_DIR` - Where to store log traces in which the 500 handling page crashed, or the user's browser crashed.<br>\tDefaults to `\"UNCAUGHT\"`. <br><br>* `BETTER_500_AJAX_URL` - URL for ajax callback, that saves the log, and sends off an email.<br>\tDefaults to `\"better-500-callback/\"`. <br><br>* `BETTER_500_POST_URL` - URL for user crash report posting.<br>\tDefaults to `\"better-500-saved/\"`. <br><br>* `BETTER_500_DEFAULT_RETURN_URL_NAME` - The url name that the \"Go Home\" button should link to. If none, the button is hidden.<br>\tDefaults to `None`. <br><br><br>How it works:<br>=============<br><br>1. 500 errors (only) are caught.<br>2. Full debug page traceback is generated, and saved to the `UNCAUGHT_DIR`.<br>3. A \"We're sorry / Tell us what you were doing\" page loads.<br>4. On load, that page ajax pings the server.<br>5. On ping, the view files the log into a date-organized folder, and emails the `TO_EMAILs` with a link.<br>6. If the user submits a report, that report is saved to the database, tied to the log file.  A second email is sent, with the user's report.<br>7. An admin can click the view link, and see the full traceback, and the user's report.<br><br><br>Templates and Customization<br>===========================<br><br>### Templates<br><br>* `500_handler.html` - This template is what users see when a 500 occurs, and where they can submit their report. <br><br>* `feedback_saved.html` - If a user submits a report, this page is what they see. Links to the page that produced the error, and optionally, home.<br><br>* `view_error.html` - Developer-side template for viewing captured 500s<br><br>* `admin_email.txt` - Template for the 500 error email.<br><br>* `error_with_notes_email.txt` - Template for the user bug report email.<br><br><br>### Log file storage<br><br>By default, django-better500s uses the `default_backend` to store<br>error logs. If that fails, it falls back local file storage.<br><br><br>Credits<br>=======<br>django-better500s was written by Steven Skoczen for Aquameta.<br>\n          </div>"}, "last_serial": 1175739, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "bf4bca932bfffef59a22f721b74bd058", "sha256": "d1a9c661cd241377f145f06fd38cb1b4234d5ec9850ab8e9e2b1625cdc2a1573"}, "downloads": -1, "filename": "django-better500s-0.2.tar.gz", "has_sig": false, "md5_digest": "bf4bca932bfffef59a22f721b74bd058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42937, "upload_time": "2012-08-20T20:55:42", "upload_time_iso_8601": "2012-08-20T20:55:42.618532Z", "url": "https://files.pythonhosted.org/packages/36/b0/3df18252592c35459293bb97fd98cc79e58ed25a844613e2f13b2299f1e5/django-better500s-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "986886b84d5d14ad5ba6523a67d5d31e", "sha256": "7e083ecbe863f5f29104e80ea4aab60b3c8b2811a6fbd9afabc3f91cad16443b"}, "downloads": -1, "filename": "django-better500s-0.2.1.tar.gz", "has_sig": false, "md5_digest": "986886b84d5d14ad5ba6523a67d5d31e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42469, "upload_time": "2014-07-31T16:24:03", "upload_time_iso_8601": "2014-07-31T16:24:03.810709Z", "url": "https://files.pythonhosted.org/packages/3b/f0/d9d7e4e3ff6d48bf0a834532cb8099806ae951aa9a9c3c1899ae0e82c571/django-better500s-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "986886b84d5d14ad5ba6523a67d5d31e", "sha256": "7e083ecbe863f5f29104e80ea4aab60b3c8b2811a6fbd9afabc3f91cad16443b"}, "downloads": -1, "filename": "django-better500s-0.2.1.tar.gz", "has_sig": false, "md5_digest": "986886b84d5d14ad5ba6523a67d5d31e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42469, "upload_time": "2014-07-31T16:24:03", "upload_time_iso_8601": "2014-07-31T16:24:03.810709Z", "url": "https://files.pythonhosted.org/packages/3b/f0/d9d7e4e3ff6d48bf0a834532cb8099806ae951aa9a9c3c1899ae0e82c571/django-better500s-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:26 2020"}