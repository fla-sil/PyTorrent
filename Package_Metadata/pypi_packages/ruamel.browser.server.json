{"info": {"author": "Anthon van der Neut", "author_email": "a.van.der.neut@ruamel.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP"], "description": "server providing decoupled browser creation/driving via zmq\n\n\n\nThe server listens on a port (default 5402) for command strings. These\ncommands should be coming from ruamel.browser.client.\n\nMost command strings start with ``br BID ...`` and therefore need\nto have unique browser id (``BID``).\n\nYou can check if the ``BID`` is available (ie. browser opened from previous\nrun) using `check BID`. If it is not available you should initialise a new\nbrowser using ``init BID TYPE`, where `TYPE`` is e.g. ``selenium`` for a\nFirefox browser driven by selenium.\n\nIf the browser you want to create needs to run under VNC, first create a virtual\ndisplay using ``display DISPNAME port_num x-size y-size`` and then initialise the\nbrowser using ``init display DISPNAME BID TYP`` (e.g. by doing::\n\n  display virt1 5409 1000 500\n  init display virt1 stackoverflow selenium\n\nYou can re-use a ``DISPNAME`` for different browsers. If you don't specify a ``display`` the\nbrowser will open on the desktop (which needs to be there).\n\nOnce you have a `BID`` for a browser you can sent it commands. All browsers\nshould implement quitting (invoked by ``br BID quit``) and\nsetting the verbosity to something else than 0 (``br BID verbose NUM``)\n\nYou can find an elment on the page in different ways, by CSS selection\nis the recommended way (that skill can be reused when building websites\nof your own when specifying CSS files). The syntax is::\n\n   find [store ELEM] css|id|class MSG\n\nwhere ``MSG`` is used as a parameter to the `css` (or ``id`` or ``class``) selector. If\nthe optional ``store ELEM`` part is used the element on the page is stored for\nfurther use in ``find`` or other commands that operate on an element or DOM tree part.\nFind also sets a \"current element\" which will be used in future commands if\nno specific element is selected with the optional \"elem ID\" parameter\n\nOther commands available in the selenium back-end::\n\n  title: returns title of current page\n  current_url: return URL of page that is open\n  get SOMEURL: \"browse\" to the page SOMEURL\n  click [elem ELEM]: click on the current\n  displayed [elem ELEM]: check if the element is displayed (returns yes or no)\n  keys [elem ELEM] SEQUENCE_OF_KEYS: send keys to the selected element\n  down_up [elem ELEM]: similar to click but with a delay after mouse down of 0.5s\n  javascript PROGRAM: execute PROGRAM in the browser\n  inner [elem ELEM]: return the inner HTML attribute (for further processing on client side)\n  hover [elem ELEM]: hover the mouse above an element (might trigger some javascript loading)\n  findallid [elem ELEM] CSS: for elements by CSS selector (under ELEM if specified) return IDs\n\nAs keys can be sent to the browser individually, you can interact\nwith pages expecting people to type in an answer (instead of filling a form\nelement in one go). Using ``inner`` you can also get back what is in\nsuch an element, .e.g. if the browser did some javascript based expansion.\n\n\nRBSSELENIUM environment variable\n--------------------------------\n\nAlthough automation, especially using VNC displays, doesn't get you\nadvertisements in your face, you might want to set an environment variable ``RBSSELENIUM``.\nUnder the absolute path that env. var points to, there should be at least two files::\n\n  adblock/adblock_plus-2.7-fx+sm+tb+an.xpi\n  profile00/adblockplus/patterns.ini\n\nWhich will be loaded in FireFox preventing advertisements from opening.\nThis can **hugely** affect the speed with which you can navigate a site.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/ruamel/browser.server", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "ruamel.browser.server", "package_url": "https://pypi.org/project/ruamel.browser.server/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ruamel.browser.server/", "project_urls": {"Homepage": "https://bitbucket.org/ruamel/browser.server"}, "release_url": "https://pypi.org/project/ruamel.browser.server/0.4.3/", "requires_dist": null, "requires_python": "", "summary": "server providing decoupled browser creation/driving via zmq", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>server providing decoupled browser creation/driving via zmq</p>\n<p>The server listens on a port (default 5402) for command strings. These\ncommands should be coming from ruamel.browser.client.</p>\n<p>Most command strings start with <tt>br BID ...</tt> and therefore need\nto have unique browser id (<tt>BID</tt>).</p>\n<p>You can check if the <tt>BID</tt> is available (ie. browser opened from previous\nrun) using <cite>check BID</cite>. If it is not available you should initialise a new\nbrowser using <tt>init BID TYPE`, where `TYPE</tt> is e.g. <tt>selenium</tt> for a\nFirefox browser driven by selenium.</p>\n<p>If the browser you want to create needs to run under VNC, first create a virtual\ndisplay using <tt>display DISPNAME port_num <span class=\"pre\">x-size</span> <span class=\"pre\">y-size</span></tt> and then initialise the\nbrowser using <tt>init display DISPNAME BID TYP</tt> (e.g. by doing:</p>\n<pre>display virt1 5409 1000 500\ninit display virt1 stackoverflow selenium\n</pre>\n<p>You can re-use a <tt>DISPNAME</tt> for different browsers. If you don\u2019t specify a <tt>display</tt> the\nbrowser will open on the desktop (which needs to be there).</p>\n<p>Once you have a <cite>BID`</cite> for a browser you can sent it commands. All browsers\nshould implement quitting (invoked by <tt>br BID quit</tt>) and\nsetting the verbosity to something else than 0 (<tt>br BID verbose NUM</tt>)</p>\n<p>You can find an elment on the page in different ways, by CSS selection\nis the recommended way (that skill can be reused when building websites\nof your own when specifying CSS files). The syntax is:</p>\n<pre>find [store ELEM] css|id|class MSG\n</pre>\n<p>where <tt>MSG</tt> is used as a parameter to the <cite>css</cite> (or <tt>id</tt> or <tt>class</tt>) selector. If\nthe optional <tt>store ELEM</tt> part is used the element on the page is stored for\nfurther use in <tt>find</tt> or other commands that operate on an element or DOM tree part.\nFind also sets a \u201ccurrent element\u201d which will be used in future commands if\nno specific element is selected with the optional \u201celem ID\u201d parameter</p>\n<p>Other commands available in the selenium back-end:</p>\n<pre>title: returns title of current page\ncurrent_url: return URL of page that is open\nget SOMEURL: \"browse\" to the page SOMEURL\nclick [elem ELEM]: click on the current\ndisplayed [elem ELEM]: check if the element is displayed (returns yes or no)\nkeys [elem ELEM] SEQUENCE_OF_KEYS: send keys to the selected element\ndown_up [elem ELEM]: similar to click but with a delay after mouse down of 0.5s\njavascript PROGRAM: execute PROGRAM in the browser\ninner [elem ELEM]: return the inner HTML attribute (for further processing on client side)\nhover [elem ELEM]: hover the mouse above an element (might trigger some javascript loading)\nfindallid [elem ELEM] CSS: for elements by CSS selector (under ELEM if specified) return IDs\n</pre>\n<p>As keys can be sent to the browser individually, you can interact\nwith pages expecting people to type in an answer (instead of filling a form\nelement in one go). Using <tt>inner</tt> you can also get back what is in\nsuch an element, .e.g. if the browser did some javascript based expansion.</p>\n<div id=\"rbsselenium-environment-variable\">\n<h2>RBSSELENIUM environment variable</h2>\n<p>Although automation, especially using VNC displays, doesn\u2019t get you\nadvertisements in your face, you might want to set an environment variable <tt>RBSSELENIUM</tt>.\nUnder the absolute path that env. var points to, there should be at least two files:</p>\n<pre>adblock/adblock_plus-2.7-fx+sm+tb+an.xpi\nprofile00/adblockplus/patterns.ini\n</pre>\n<p>Which will be loaded in FireFox preventing advertisements from opening.\nThis can <strong>hugely</strong> affect the speed with which you can navigate a site.</p>\n</div>\n\n          </div>"}, "last_serial": 2260137, "releases": {"0.4.2": [], "0.4.3": [{"comment_text": "", "digests": {"md5": "8efadf53ed34d10acaa9e43740a555cb", "sha256": "a364ea7ed4cdf3831346b101f437ca6ff70e8ceaa4e6ae92b616f2f2cf4d9ac8"}, "downloads": -1, "filename": "ruamel.browser.server-0.4.3.tar.gz", "has_sig": false, "md5_digest": "8efadf53ed34d10acaa9e43740a555cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17046, "upload_time": "2016-08-03T15:11:47", "upload_time_iso_8601": "2016-08-03T15:11:47.983461Z", "url": "https://files.pythonhosted.org/packages/f8/a1/26c42b4c6e5cf04ecbf3e583336e6ec101f917e5ea6e2b0e9a88a8c25b5c/ruamel.browser.server-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8efadf53ed34d10acaa9e43740a555cb", "sha256": "a364ea7ed4cdf3831346b101f437ca6ff70e8ceaa4e6ae92b616f2f2cf4d9ac8"}, "downloads": -1, "filename": "ruamel.browser.server-0.4.3.tar.gz", "has_sig": false, "md5_digest": "8efadf53ed34d10acaa9e43740a555cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17046, "upload_time": "2016-08-03T15:11:47", "upload_time_iso_8601": "2016-08-03T15:11:47.983461Z", "url": "https://files.pythonhosted.org/packages/f8/a1/26c42b4c6e5cf04ecbf3e583336e6ec101f917e5ea6e2b0e9a88a8c25b5c/ruamel.browser.server-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:20 2020"}