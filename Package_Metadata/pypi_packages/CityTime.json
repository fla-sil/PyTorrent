{"info": {"author": "Thorsten Weyter", "author_email": "tweyter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "CityTime\n########\n\n.. image:: https://img.shields.io/codecov/c/github/tweyter/CityTime.svg\n    :target: https://codecov.io/gh/tweyter/CityTime\n\n.. image:: https://travis-ci.org/tweyter/CityTime.svg\n    :alt: CityTime Build status\n    :target: https://travis-ci.org/tweyter/CityTime\n\nThanks:\n/u/phira\n\nThe CityTime object is my solution for the headache of time zones and daylight savings time.  It takes\nthe local time and the local time zone, and translates the time into UTC.  The time can then be reproduced\nin various formats and also incremented forward and back while still adjusting for daylight savings time.\n\nCityTime is a tool for comparing the time in two different cities. For example, let's say it is 5pm in New York\nand 4pm in Chicago. CityTime will take both of those times and time zones, convert them to UTC, and by comparing\nthe two CityTime objects, will tell you if they are the same time or not (in this case, they are).\n\nLet's say it's 8pm in Tokyo on November 1 (UTC + 9), and 7am in New York on the same date (UTC - 4). If you\ncreate a CityTime object for each city, and compare the two, it will show that they are the same. However,\nif you tried the same thing on November 3 (after Daylight Savings Time ends), they will be different,\nbecause Japan does not follow Daylight Savings Time.\n\nCityTime handles cases like those mentioned above by converting the input local time to UTC, while storing\nthe Olson Database time zone, rather than just using a UTC offset. This way, local differences in the start\nand end of Daylight Savings Time are accounted for.\n\nA CityTime object can be instantiated using a datetime.datetime object, an ISO8601 string, or another\nCityTime object. If instantiated using an ISO8601 string, the time used must be UTC, it will not work\nwith a localized time.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tweyter/CityTime", "keywords": "time datetime olson timezone", "license": "MIT", "maintainer": "Thorsten Weyter", "maintainer_email": "tweyter@gmail.com", "name": "CityTime", "package_url": "https://pypi.org/project/CityTime/", "platform": "", "project_url": "https://pypi.org/project/CityTime/", "project_urls": {"Homepage": "https://github.com/tweyter/CityTime"}, "release_url": "https://pypi.org/project/CityTime/1.0.0/", "requires_dist": ["pytz"], "requires_python": "", "summary": "A tool for comparing time between different locations/timezones", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://codecov.io/gh/tweyter/CityTime\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/github/tweyter/CityTime.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5114f38f495512be4c4c8a6accbebc4ae2af744/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f747765797465722f4369747954696d652e737667\"></a>\n<a href=\"https://travis-ci.org/tweyter/CityTime\" rel=\"nofollow\"><img alt=\"CityTime Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7db42c0dcc0a77756595821ae4f6e8174231fe5e/68747470733a2f2f7472617669732d63692e6f72672f747765797465722f4369747954696d652e737667\"></a>\n<p>Thanks:\n/u/phira</p>\n<p>The CityTime object is my solution for the headache of time zones and daylight savings time.  It takes\nthe local time and the local time zone, and translates the time into UTC.  The time can then be reproduced\nin various formats and also incremented forward and back while still adjusting for daylight savings time.</p>\n<p>CityTime is a tool for comparing the time in two different cities. For example, let\u2019s say it is 5pm in New York\nand 4pm in Chicago. CityTime will take both of those times and time zones, convert them to UTC, and by comparing\nthe two CityTime objects, will tell you if they are the same time or not (in this case, they are).</p>\n<p>Let\u2019s say it\u2019s 8pm in Tokyo on November 1 (UTC + 9), and 7am in New York on the same date (UTC - 4). If you\ncreate a CityTime object for each city, and compare the two, it will show that they are the same. However,\nif you tried the same thing on November 3 (after Daylight Savings Time ends), they will be different,\nbecause Japan does not follow Daylight Savings Time.</p>\n<p>CityTime handles cases like those mentioned above by converting the input local time to UTC, while storing\nthe Olson Database time zone, rather than just using a UTC offset. This way, local differences in the start\nand end of Daylight Savings Time are accounted for.</p>\n<p>A CityTime object can be instantiated using a datetime.datetime object, an ISO8601 string, or another\nCityTime object. If instantiated using an ISO8601 string, the time used must be UTC, it will not work\nwith a localized time.</p>\n\n          </div>"}, "last_serial": 4143644, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3c2d95eb4a9575e4d2cb1bb4aae6731f", "sha256": "72551f53f924e24c264cf578bbcbc723561129991f71a116441480c4314e2dd3"}, "downloads": -1, "filename": "CityTime-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c2d95eb4a9575e4d2cb1bb4aae6731f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11312, "upload_time": "2018-08-07T10:33:44", "upload_time_iso_8601": "2018-08-07T10:33:44.573961Z", "url": "https://files.pythonhosted.org/packages/5d/9b/3d3a362bacee24c112ad92ede93f0c24ce48eda35bba5b7d8300dff25a56/CityTime-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e25a12583cfae6e6255c02405c60d3d0", "sha256": "d52526769a092fcb202b45ac07717162ef757537304bc0fa75d70a661e9ce5b9"}, "downloads": -1, "filename": "CityTime-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e25a12583cfae6e6255c02405c60d3d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28273, "upload_time": "2018-08-07T10:33:45", "upload_time_iso_8601": "2018-08-07T10:33:45.978587Z", "url": "https://files.pythonhosted.org/packages/a8/f9/4679129ec6ea57379ad9774951e05aad4bdbee71882cf5c4c5eb117c5566/CityTime-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c2d95eb4a9575e4d2cb1bb4aae6731f", "sha256": "72551f53f924e24c264cf578bbcbc723561129991f71a116441480c4314e2dd3"}, "downloads": -1, "filename": "CityTime-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c2d95eb4a9575e4d2cb1bb4aae6731f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11312, "upload_time": "2018-08-07T10:33:44", "upload_time_iso_8601": "2018-08-07T10:33:44.573961Z", "url": "https://files.pythonhosted.org/packages/5d/9b/3d3a362bacee24c112ad92ede93f0c24ce48eda35bba5b7d8300dff25a56/CityTime-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e25a12583cfae6e6255c02405c60d3d0", "sha256": "d52526769a092fcb202b45ac07717162ef757537304bc0fa75d70a661e9ce5b9"}, "downloads": -1, "filename": "CityTime-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e25a12583cfae6e6255c02405c60d3d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28273, "upload_time": "2018-08-07T10:33:45", "upload_time_iso_8601": "2018-08-07T10:33:45.978587Z", "url": "https://files.pythonhosted.org/packages/a8/f9/4679129ec6ea57379ad9774951e05aad4bdbee71882cf5c4c5eb117c5566/CityTime-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:16 2020"}