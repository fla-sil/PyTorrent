{"info": {"author": "Cryptology", "author_email": "s.prikazchikov@cryptology.com", "bugtrack_url": null, "classifiers": [], "description": "=============================================\nWelcome to cryptology-ws-client-python v1.1.5\n=============================================\n\nThis is an official Python client library for the Cryptology exchange WebSocket API.\n\nBy using this Cryptology Python client you confirm that you have read and accept `License Agreement: <https://github.com/CryptologyExchange/cryptology-ws-client-python/blob/master/LICENSE>`_\n\nFeatures\n--------\n\n- Asynchronous implementation of all WebSocket Market Data and Account endpoints.\n- Handling response errors\n- Withdrawal functionality\n\nQuick Start\n-----------\nReceive your own API access key and secret key.\n\n.. code:: bash\n\n    pip install cryptology-ws-client\n\nRun tests.\n\n.. code:: bash\n\n    make tests\n\nAnd see example.\n\n.. code:: python\n\n    import asyncio\n    import itertools\n    import os\n    import logging\n    import time\n\n    from collections import namedtuple\n    from cryptology import ClientWriterStub, run_client, exceptions\n    from datetime import datetime\n    from decimal import Decimal\n    from typing import Iterable, Dict, List\n\n    SERVER = os.getenv('SERVER', 'wss://api.sandbox.cryptology.com')\n\n\n    logging.basicConfig(level='DEBUG')\n\n\n    async def main():\n\n        async def writer(ws: ClientWriterStub, pairs: List, state: Dict) -> None:\n            while True:\n                client_order_id = int(time.time() * 10)\n                await ws.send_message(payload={\n                    '@type': 'PlaceBuyLimitOrder',\n                    'trade_pair': 'BTC_USD',\n                    'price': '1',\n                    'amount': '1',\n                    'client_order_id': client_order_id,\n                    'ttl': 0\n                })\n                await asyncio.sleep(5)\n\n        async def read_callback(ws: ClientWriterStub, ts: datetime, message_id: int, payload: dict) -> None:\n            if payload['@type'] == 'BuyOrderPlaced':\n                await ws.send_message(payload={'@type': 'CancelOrder', 'order_id': payload['order_id']})\n\n        while True:\n            try:\n                await run_client(\n                    access_key='YOUR ACCESS KEY',\n                    secret_key='YOUR SECRET KEY',\n                    ws_addr=SERVER,\n                    writer=writer,\n                    read_callback=read_callback,\n                    last_seen_message_id=-1\n                )\n            except exceptions.ServerRestart:\n                asyncio.sleep(60)\n\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(main())\n\n\n\n\nFor more `check out the documentation <https://github.com/CryptologyExchange/api>`_.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CryptologyExchange/cryptology-ws-client-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cryptology-ws-client", "package_url": "https://pypi.org/project/cryptology-ws-client/", "platform": "", "project_url": "https://pypi.org/project/cryptology-ws-client/", "project_urls": {"Homepage": "https://github.com/CryptologyExchange/cryptology-ws-client-python"}, "release_url": "https://pypi.org/project/cryptology-ws-client/1.1.5/", "requires_dist": null, "requires_python": "", "summary": "Cryptology webscoket client", "version": "1.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an official Python client library for the Cryptology exchange WebSocket API.</p>\n<p>By using this Cryptology Python client you confirm that you have read and accept <a href=\"https://github.com/CryptologyExchange/cryptology-ws-client-python/blob/master/LICENSE\" rel=\"nofollow\">License Agreement:</a></p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Asynchronous implementation of all WebSocket Market Data and Account endpoints.</li>\n<li>Handling response errors</li>\n<li>Withdrawal functionality</li>\n</ul>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Receive your own API access key and secret key.</p>\n<pre>pip install cryptology-ws-client\n</pre>\n<p>Run tests.</p>\n<pre>make tests\n</pre>\n<p>And see example.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">itertools</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">namedtuple</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cryptology</span> <span class=\"kn\">import</span> <span class=\"n\">ClientWriterStub</span><span class=\"p\">,</span> <span class=\"n\">run_client</span><span class=\"p\">,</span> <span class=\"n\">exceptions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">decimal</span> <span class=\"kn\">import</span> <span class=\"n\">Decimal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Iterable</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span>\n\n<span class=\"n\">SERVER</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'SERVER'</span><span class=\"p\">,</span> <span class=\"s1\">'wss://api.sandbox.cryptology.com'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">writer</span><span class=\"p\">(</span><span class=\"n\">ws</span><span class=\"p\">:</span> <span class=\"n\">ClientWriterStub</span><span class=\"p\">,</span> <span class=\"n\">pairs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">client_order_id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">'@type'</span><span class=\"p\">:</span> <span class=\"s1\">'PlaceBuyLimitOrder'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'trade_pair'</span><span class=\"p\">:</span> <span class=\"s1\">'BTC_USD'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'price'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'amount'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'client_order_id'</span><span class=\"p\">:</span> <span class=\"n\">client_order_id</span><span class=\"p\">,</span>\n                <span class=\"s1\">'ttl'</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n            <span class=\"p\">})</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">read_callback</span><span class=\"p\">(</span><span class=\"n\">ws</span><span class=\"p\">:</span> <span class=\"n\">ClientWriterStub</span><span class=\"p\">,</span> <span class=\"n\">ts</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">message_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">payload</span><span class=\"p\">[</span><span class=\"s1\">'@type'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'BuyOrderPlaced'</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">ws</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'@type'</span><span class=\"p\">:</span> <span class=\"s1\">'CancelOrder'</span><span class=\"p\">,</span> <span class=\"s1\">'order_id'</span><span class=\"p\">:</span> <span class=\"n\">payload</span><span class=\"p\">[</span><span class=\"s1\">'order_id'</span><span class=\"p\">]})</span>\n\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">run_client</span><span class=\"p\">(</span>\n                <span class=\"n\">access_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR ACCESS KEY'</span><span class=\"p\">,</span>\n                <span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR SECRET KEY'</span><span class=\"p\">,</span>\n                <span class=\"n\">ws_addr</span><span class=\"o\">=</span><span class=\"n\">SERVER</span><span class=\"p\">,</span>\n                <span class=\"n\">writer</span><span class=\"o\">=</span><span class=\"n\">writer</span><span class=\"p\">,</span>\n                <span class=\"n\">read_callback</span><span class=\"o\">=</span><span class=\"n\">read_callback</span><span class=\"p\">,</span>\n                <span class=\"n\">last_seen_message_id</span><span class=\"o\">=-</span><span class=\"mi\">1</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">ServerRestart</span><span class=\"p\">:</span>\n            <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>For more <a href=\"https://github.com/CryptologyExchange/api\" rel=\"nofollow\">check out the documentation</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4469536, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "f92cca8b1cb5276bc3fb9f91827e60d1", "sha256": "72cda726bb733664b6a83a03b41ec1cdf86323516a59e82afddc3f6be0bb005c"}, "downloads": -1, "filename": "cryptology-ws-client-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f92cca8b1cb5276bc3fb9f91827e60d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5996, "upload_time": "2018-11-09T12:56:12", "upload_time_iso_8601": "2018-11-09T12:56:12.035386Z", "url": "https://files.pythonhosted.org/packages/40/fe/7ac10a1694c73bc880a73ab53b6989ff8ef137cfc57f99d5843f5f8640c0/cryptology-ws-client-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "8fbc4ef30f015b9b2fc739b860f31264", "sha256": "97b6885ac4f3d2ec33951f9c181a24e3d2b25db758f6779336f9f2fba65fcce7"}, "downloads": -1, "filename": "cryptology-ws-client-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8fbc4ef30f015b9b2fc739b860f31264", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5977, "upload_time": "2018-11-09T13:14:58", "upload_time_iso_8601": "2018-11-09T13:14:58.985104Z", "url": "https://files.pythonhosted.org/packages/ac/0e/ec3afbe29362831fccd10718a7b3d35a575e0466a8d7c3a316bb4324c75d/cryptology-ws-client-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "12b045ecc0f8e58793b2e42b1884ec6d", "sha256": "e22948808c7226d3710d07caf137d1705ce2c25fa2eee41dc20f4ce147251a73"}, "downloads": -1, "filename": "cryptology-ws-client-1.1.2.tar.gz", "has_sig": false, "md5_digest": "12b045ecc0f8e58793b2e42b1884ec6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6331, "upload_time": "2018-11-09T13:23:00", "upload_time_iso_8601": "2018-11-09T13:23:00.601603Z", "url": "https://files.pythonhosted.org/packages/ed/84/3419ca1fb7282b038f3df319f8b2f16b4f806b92f2a7fa1754a35adfecb7/cryptology-ws-client-1.1.2.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "95cbaefca93d1a24e967f336e64353c9", "sha256": "0fccba3da7581b2fa57a60004727f5f3a5ad7bbafda7bb78944e51891ff123f3"}, "downloads": -1, "filename": "cryptology-ws-client-1.1.4.tar.gz", "has_sig": false, "md5_digest": "95cbaefca93d1a24e967f336e64353c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6368, "upload_time": "2018-11-09T13:35:04", "upload_time_iso_8601": "2018-11-09T13:35:04.947063Z", "url": "https://files.pythonhosted.org/packages/2a/35/96569ec8e640a8fad37434d8458bbb643005f48ffefa280cd4025ae47b5c/cryptology-ws-client-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "2e62649c4b71baf80d6762116437f4b4", "sha256": "2c16bc3b03c0418fa78304bb6b990573d63e33f3b27fd7de0a2d4d8204c6e648"}, "downloads": -1, "filename": "cryptology-ws-client-1.1.5.tar.gz", "has_sig": false, "md5_digest": "2e62649c4b71baf80d6762116437f4b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6442, "upload_time": "2018-11-09T13:54:05", "upload_time_iso_8601": "2018-11-09T13:54:05.602617Z", "url": "https://files.pythonhosted.org/packages/1f/e0/b6a3c644f042c276164ceade17632bb32c0bf249e9b31ad8aea773ffce2b/cryptology-ws-client-1.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e62649c4b71baf80d6762116437f4b4", "sha256": "2c16bc3b03c0418fa78304bb6b990573d63e33f3b27fd7de0a2d4d8204c6e648"}, "downloads": -1, "filename": "cryptology-ws-client-1.1.5.tar.gz", "has_sig": false, "md5_digest": "2e62649c4b71baf80d6762116437f4b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6442, "upload_time": "2018-11-09T13:54:05", "upload_time_iso_8601": "2018-11-09T13:54:05.602617Z", "url": "https://files.pythonhosted.org/packages/1f/e0/b6a3c644f042c276164ceade17632bb32c0bf249e9b31ad8aea773ffce2b/cryptology-ws-client-1.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:58 2020"}