{"info": {"author": "kalhartt", "author_email": "kalhartt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP"], "description": "# django-warmama\n\n[![build-status-image]][travis]\n[![pypi-version]][pypi]\n\n## Overview\n\nDjango app for qfusion authentication server\n\n## Installation\n\nInstall using `pip`, please use a virtualenv...\n\n```bash\n$ pip install django-warmama\n```\n\n## Basic Usage\n\nAn example project is provided and is sufficient for testing with QFusion.\nJust get the server started.\n\n```bash\ncd example-project\npython manage.py migrate\npython manage.py createsuperuser\npython manage.py runserver\n```\n\nTo use it with QFusion, you need to add some User, Server and Player models; so\nnavigate over to the admin page at\n[http://localhost:8000/admin/](http://localhost:8000/admin/) and create some.\n\n1. Create some normal django users first, qf clients will use these username\n   password combinations to connect.\n2. Create warmama Player models. The `login` field must be the username of a\n   previously created User.\n3. Create warmama Server models. The `login` field here will be the server's\n   authtoken. Either `regip` or `regipv6` must be set to the server's ipaddress,\n   for local testing `127.0.0.1` is allowed.\n\nFinally configure the QFusion server and clients to use warmama for matchmaking.\nFor the server, set `sv_mm_enable` to `1` and `sv_mm_authtoken` to the `login`\nvalue of the Server created above. For both the server and client set `mm_url`\nto `http://127.0.0.1:8000` (without a trailing slash).\n\n## Advanced Usage\n\nThen configure your django project to use the app, you can override any of the\nwarmama settings (found in warmama/settings.py) in your project's settings.py\nfile.\n\n```python\n# project/settings.py\n\nINSTALLED_APPS = (\n    ...\n    'warmama',\n)\n\n# project/urls.py\nurlpatterns = [\n    ...\n    url(r'^warmama/', include('warmama.urls', namespace='warmama', app_name='warmama')),\n]\n```\n\nFinally, run the migrations and (optionally) load the fixtures\n\n```bash\npython manage.py migrate\npython manage.py loaddata --app warmama gametypes\npython manage.py loaddata --app warmama weapons\n```\n\n## Testing\n\nInstall testing requirements.\n\n```bash\n$ pip install -r requirements.txt\n```\n\nRun with runtests.\n\n```bash\n$ ./runtests.py\n```\n\nYou can also use the excellent [tox](http://tox.readthedocs.org/en/latest/)\ntesting tool to run the tests against all supported versions of Python and\nDjango. Install tox globally, and then simply run:\n\n```bash\n$ tox\n```\n\n## Documentation\n\nTo build the documentation, you'll need to install `mkdocs`.\n\n```bash\n$ pip install mkdocs\n```\n\nTo preview the documentation:\n\n```bash\n$ mkdocs serve\nRunning at: http://127.0.0.1:8000/\n```\n\nTo build the documentation:\n\n```bash\n$ mkdocs build\n```\n\n\n[build-status-image]: https://secure.travis-ci.org/kalhartt/django-warmama.png?branch=master\n[travis]: http://travis-ci.org/kalhartt/django-warmama?branch=master\n[pypi-version]: https://pypip.in/version/django-warmama/badge.svg\n[pypi]: https://pypi.python.org/pypi/django-warmama\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kalhartt/django-warmama", "keywords": null, "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "django-warmama", "package_url": "https://pypi.org/project/django-warmama/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-warmama/", "project_urls": {"Homepage": "https://github.com/kalhartt/django-warmama"}, "release_url": "https://pypi.org/project/django-warmama/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Django app for qfusion authentication server", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-warmama<br><br>[![build-status-image]][travis]<br>[![pypi-version]][pypi]<br><br>## Overview<br><br>Django app for qfusion authentication server<br><br>## Installation<br><br>Install using `pip`, please use a virtualenv...<br><br>```bash<br>$ pip install django-warmama<br>```<br><br>## Basic Usage<br><br>An example project is provided and is sufficient for testing with QFusion.<br>Just get the server started.<br><br>```bash<br>cd example-project<br>python manage.py migrate<br>python manage.py createsuperuser<br>python manage.py runserver<br>```<br><br>To use it with QFusion, you need to add some User, Server and Player models; so<br>navigate over to the admin page at<br>[http://localhost:8000/admin/](http://localhost:8000/admin/) and create some.<br><br>1. Create some normal django users first, qf clients will use these username<br>   password combinations to connect.<br>2. Create warmama Player models. The `login` field must be the username of a<br>   previously created User.<br>3. Create warmama Server models. The `login` field here will be the server's<br>   authtoken. Either `regip` or `regipv6` must be set to the server's ipaddress,<br>   for local testing `127.0.0.1` is allowed.<br><br>Finally configure the QFusion server and clients to use warmama for matchmaking.<br>For the server, set `sv_mm_enable` to `1` and `sv_mm_authtoken` to the `login`<br>value of the Server created above. For both the server and client set `mm_url`<br>to `http://127.0.0.1:8000` (without a trailing slash).<br><br>## Advanced Usage<br><br>Then configure your django project to use the app, you can override any of the<br>warmama settings (found in warmama/settings.py) in your project's settings.py<br>file.<br><br>```python<br># project/settings.py<br><br>INSTALLED_APPS = (<br>    ...<br>    'warmama',<br>)<br><br># project/urls.py<br>urlpatterns = [<br>    ...<br>    url(r'^warmama/', include('warmama.urls', namespace='warmama', app_name='warmama')),<br>]<br>```<br><br>Finally, run the migrations and (optionally) load the fixtures<br><br>```bash<br>python manage.py migrate<br>python manage.py loaddata --app warmama gametypes<br>python manage.py loaddata --app warmama weapons<br>```<br><br>## Testing<br><br>Install testing requirements.<br><br>```bash<br>$ pip install -r requirements.txt<br>```<br><br>Run with runtests.<br><br>```bash<br>$ ./runtests.py<br>```<br><br>You can also use the excellent [tox](http://tox.readthedocs.org/en/latest/)<br>testing tool to run the tests against all supported versions of Python and<br>Django. Install tox globally, and then simply run:<br><br>```bash<br>$ tox<br>```<br><br>## Documentation<br><br>To build the documentation, you'll need to install `mkdocs`.<br><br>```bash<br>$ pip install mkdocs<br>```<br><br>To preview the documentation:<br><br>```bash<br>$ mkdocs serve<br>Running at: http://127.0.0.1:8000/<br>```<br><br>To build the documentation:<br><br>```bash<br>$ mkdocs build<br>```<br><br><br>[build-status-image]: https://secure.travis-ci.org/kalhartt/django-warmama.png?branch=master<br>[travis]: http://travis-ci.org/kalhartt/django-warmama?branch=master<br>[pypi-version]: https://pypip.in/version/django-warmama/badge.svg<br>[pypi]: https://pypi.python.org/pypi/django-warmama<br>\n          </div>"}, "last_serial": 1550183, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "03fe2c415158971737aab57099666ef0", "sha256": "c173f4094eb5f2d2892562e0b1d6036e53c10d7344a49f6bf60e920f2d5511a4"}, "downloads": -1, "filename": "django_warmama-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03fe2c415158971737aab57099666ef0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55620, "upload_time": "2015-05-17T06:08:21", "upload_time_iso_8601": "2015-05-17T06:08:21.842563Z", "url": "https://files.pythonhosted.org/packages/9e/9b/d7b1330a535120426536e9e32776ba868728066b81c10e530c4f2333d825/django_warmama-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18732163090625bf2e3f6f2b47e0200c", "sha256": "3a1f1ff908c06e2119a17eeaadd0abb5e4b5bcde9f6fbd9b41c24d40ec7ca8c7"}, "downloads": -1, "filename": "django-warmama-1.0.0.tar.gz", "has_sig": false, "md5_digest": "18732163090625bf2e3f6f2b47e0200c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32273, "upload_time": "2015-05-17T06:08:25", "upload_time_iso_8601": "2015-05-17T06:08:25.002473Z", "url": "https://files.pythonhosted.org/packages/cb/7d/2b76a7bf43f10dca1b5b0a6186dadd1fd3152fd94e9657cab85116365b53/django-warmama-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03fe2c415158971737aab57099666ef0", "sha256": "c173f4094eb5f2d2892562e0b1d6036e53c10d7344a49f6bf60e920f2d5511a4"}, "downloads": -1, "filename": "django_warmama-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03fe2c415158971737aab57099666ef0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55620, "upload_time": "2015-05-17T06:08:21", "upload_time_iso_8601": "2015-05-17T06:08:21.842563Z", "url": "https://files.pythonhosted.org/packages/9e/9b/d7b1330a535120426536e9e32776ba868728066b81c10e530c4f2333d825/django_warmama-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18732163090625bf2e3f6f2b47e0200c", "sha256": "3a1f1ff908c06e2119a17eeaadd0abb5e4b5bcde9f6fbd9b41c24d40ec7ca8c7"}, "downloads": -1, "filename": "django-warmama-1.0.0.tar.gz", "has_sig": false, "md5_digest": "18732163090625bf2e3f6f2b47e0200c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32273, "upload_time": "2015-05-17T06:08:25", "upload_time_iso_8601": "2015-05-17T06:08:25.002473Z", "url": "https://files.pythonhosted.org/packages/cb/7d/2b76a7bf43f10dca1b5b0a6186dadd1fd3152fd94e9657cab85116365b53/django-warmama-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:58 2020"}