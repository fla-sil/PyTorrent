{"info": {"author": "Patrick Allain", "author_email": "patralla@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==========\npydocktors\n==========\n\n+--------------+-----------------------------------------------------------------------------------------------------+\n| Master       | .. image:: https://travis-ci.org/Patouche/pydocktors.svg?branch=master                              |\n|              |     :target: https://travis-ci.org/Patouche/pydocktors                                              |\n|              | .. image:: https://codecov.io/gh/Patouche/pydocktors/branch/master/graph/badge.svg                  |\n|              |     :target: https://codecov.io/gh/Patouche/pydocktors                                              |\n|              | .. image:: https://img.shields.io/pypi/v/pydocktors.svg                                             |\n|              |     :target: https://pypi.python.org/pypi/pydocktors                                                |\n+--------------+-----------------------------------------------------------------------------------------------------+\n| Developpment | .. image:: https://travis-ci.org/Patouche/pydocktors.svg?branch=developpment                        |\n|              |     :target: https://travis-ci.org/Patouche/pydocktors                                              |\n|              | .. image:: https://codecov.io/gh/Patouche/pydocktors/branch/developpment/graph/badge.svg            |\n|              |     :target: https://codecov.io/gh/Patouche/pydocktors                                              |\n+--------------+-----------------------------------------------------------------------------------------------------+\n\n------------\nWhat is it ?\n------------\n\nOn top of docker, pydocktors is a simple way to declare a decorator to start and shutdown a docker container.\n\n---------------\nWhy to use it ?\n---------------\n\nYou can use it anywhere you want in your python code ! This include test and code...\n\nFor example, if you have a application that require a database (for example, MySQL or Neo4J) but you don't want to install the database globally on your system, you can use the docker decorator !\n\nOr you may need to load a application such as Nginx or Eureka when running your code locally without installing it, this docker decorator is made for you !\n\n--------\nExamples\n--------\n\nAll of them are also available in the `examples <./examples/README.md>`_. Each example are designed to be independent.\n\nStarting a Nginx with a your content and your configuration::\n\n    @docktors.docker(\n        inject_arg=True,\n        image='nginx',\n        ports=[(80, 8080)],\n        volumes=[\n            (TARGET_DIR, '/usr/share/nginx/html', 'ro'),\n            (NGINX_CONF, '/etc/nginx/nginx.conf', 'ro')\n        ],\n        wait_for_port=8080,\n    )\n    def main(container):\n        logger.info(\n            'Nginx container with id %s is %s. Visit http://localhost:8080/',\n            container.id, container.status\n        )\n\nFAQ\n---\n\nWhy this name ?\n    Because it's the contraction of 3 famous words : *python*, *docker* and *decorators*\n\nHow did it came from ?\n    It will be a shame if a told you that I didn't take inspiration from other Open Source project...\n    In fact, as a Java developper, I was aware of this 2 projects :\n\n    - `docker-junit-rule <https://github.com/geowarin/docker-junit-rule>`_\n    - `junit5-docker <https://github.com/FaustXVI/junit5-docker>`_\n\n    But after some research, I wonder why there was no python decorator already made to run docker in python scripts.\n    So, for my needs, I decided to do one and to share it !\n\n    I hope that it will be helpful for you to.\n\n**Authors :** Patrick Allain\n**License :** MIT", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/Patouche/Patouche/archive/v0.0.7.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Patouche/Patouche", "keywords": "docker,decorator,testing,example", "license": "The MIT License (MIT)", "maintainer": "", "maintainer_email": "", "name": "pydocktors", "package_url": "https://pypi.org/project/pydocktors/", "platform": "", "project_url": "https://pypi.org/project/pydocktors/", "project_urls": {"Download": "https://github.com/Patouche/Patouche/archive/v0.0.7.tar.gz", "Homepage": "https://github.com/Patouche/Patouche"}, "release_url": "https://pypi.org/project/pydocktors/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "Simple docker decorator", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Master</td>\n<td><a href=\"https://travis-ci.org/Patouche/pydocktors\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Patouche/pydocktors.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfa319e6eed6c27b5ebcbe179da839632e14e63d/68747470733a2f2f7472617669732d63692e6f72672f5061746f756368652f7079646f636b746f72732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/Patouche/pydocktors\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/Patouche/pydocktors/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac4772c550b65e1ed8856efbfb94535040893385/68747470733a2f2f636f6465636f762e696f2f67682f5061746f756368652f7079646f636b746f72732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pydocktors\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pydocktors.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e47b9ab984513920bd0b3f73c5660c74544bdc5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079646f636b746f72732e737667\"></a>\n</td>\n</tr>\n<tr><td>Developpment</td>\n<td><a href=\"https://travis-ci.org/Patouche/pydocktors\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Patouche/pydocktors.svg?branch=developpment\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74401d439164cb93d4801feb4789ab20c6349163/68747470733a2f2f7472617669732d63692e6f72672f5061746f756368652f7079646f636b746f72732e7376673f6272616e63683d646576656c6f70706d656e74\"></a>\n<a href=\"https://codecov.io/gh/Patouche/pydocktors\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/Patouche/pydocktors/branch/developpment/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b84a674ce8749e0dbd9b199c778710134ae1eb4b/68747470733a2f2f636f6465636f762e696f2f67682f5061746f756368652f7079646f636b746f72732f6272616e63682f646576656c6f70706d656e742f67726170682f62616467652e737667\"></a>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"what-is-it\">\n<h2>What is it ?</h2>\n<p>On top of docker, pydocktors is a simple way to declare a decorator to start and shutdown a docker container.</p>\n</div>\n<div id=\"why-to-use-it\">\n<h2>Why to use it ?</h2>\n<p>You can use it anywhere you want in your python code ! This include test and code\u2026</p>\n<p>For example, if you have a application that require a database (for example, MySQL or Neo4J) but you don\u2019t want to install the database globally on your system, you can use the docker decorator !</p>\n<p>Or you may need to load a application such as Nginx or Eureka when running your code locally without installing it, this docker decorator is made for you !</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>All of them are also available in the <a href=\"./examples/README.md\" rel=\"nofollow\">examples</a>. Each example are designed to be independent.</p>\n<p>Starting a Nginx with a your content and your configuration:</p>\n<pre>@docktors.docker(\n    inject_arg=True,\n    image='nginx',\n    ports=[(80, 8080)],\n    volumes=[\n        (TARGET_DIR, '/usr/share/nginx/html', 'ro'),\n        (NGINX_CONF, '/etc/nginx/nginx.conf', 'ro')\n    ],\n    wait_for_port=8080,\n)\ndef main(container):\n    logger.info(\n        'Nginx container with id %s is %s. Visit http://localhost:8080/',\n        container.id, container.status\n    )\n</pre>\n<div id=\"faq\">\n<h3>FAQ</h3>\n<dl>\n<dt>Why this name ?</dt>\n<dd>Because it\u2019s the contraction of 3 famous words : <em>python</em>, <em>docker</em> and <em>decorators</em></dd>\n<dt>How did it came from ?</dt>\n<dd><p>It will be a shame if a told you that I didn\u2019t take inspiration from other Open Source project\u2026\nIn fact, as a Java developper, I was aware of this 2 projects :</p>\n<ul>\n<li><a href=\"https://github.com/geowarin/docker-junit-rule\" rel=\"nofollow\">docker-junit-rule</a></li>\n<li><a href=\"https://github.com/FaustXVI/junit5-docker\" rel=\"nofollow\">junit5-docker</a></li>\n</ul>\n<p>But after some research, I wonder why there was no python decorator already made to run docker in python scripts.\nSo, for my needs, I decided to do one and to share it !</p>\n<p>I hope that it will be helpful for you to.</p>\n</dd>\n</dl>\n<p><strong>Authors :</strong> Patrick Allain\n<strong>License :</strong> MIT</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2989036, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "31afa63eb8fa2f4531950388a35564db", "sha256": "fa7c9bcd5407e86f415fec46aca65d88f81f44e0ba75f9005c7331fc3e27c21c"}, "downloads": -1, "filename": "pydocktors-0.0.3.tar.gz", "has_sig": false, "md5_digest": "31afa63eb8fa2f4531950388a35564db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5157, "upload_time": "2017-06-13T05:28:46", "upload_time_iso_8601": "2017-06-13T05:28:46.336554Z", "url": "https://files.pythonhosted.org/packages/98/12/9c80d93ace1cc4b357b1a5ac061dc047d0cd89d56b707698f35895e8e270/pydocktors-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "4c69b88c8bb9ef807d57383fcc4c8fb2", "sha256": "24ef96020641537e271ea8ec55480afb3b9410f916c02d1f572305dea5d0534c"}, "downloads": -1, "filename": "pydocktors-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4c69b88c8bb9ef807d57383fcc4c8fb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5802, "upload_time": "2017-06-13T05:37:02", "upload_time_iso_8601": "2017-06-13T05:37:02.280804Z", "url": "https://files.pythonhosted.org/packages/fb/1a/745ca7e973e9d487d029d6bf44cf7d2f22468f39f40cfb0f89d351fe8d24/pydocktors-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "42e964c4afcf747eb8b6e0c35abfeb43", "sha256": "18a3b1cb07ee7cf1c183f028b71e2d2189fb65f0a4ef4bad59c2ac9cd002c86f"}, "downloads": -1, "filename": "pydocktors-0.0.5.tar.gz", "has_sig": false, "md5_digest": "42e964c4afcf747eb8b6e0c35abfeb43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6407, "upload_time": "2017-06-25T08:16:33", "upload_time_iso_8601": "2017-06-25T08:16:33.532448Z", "url": "https://files.pythonhosted.org/packages/31/67/90aed0037584348633cf1d1637102a43592271bd5854c0b3e43acfda0a61/pydocktors-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "587a89c68e7c5207d159ed7f8bd39901", "sha256": "a78adf07e2ea0a39ad090b23d71aec9d13cf73b17551af6dcd6f0c58a8954fa9"}, "downloads": -1, "filename": "pydocktors-0.0.6.tar.gz", "has_sig": false, "md5_digest": "587a89c68e7c5207d159ed7f8bd39901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6473, "upload_time": "2017-06-25T09:33:55", "upload_time_iso_8601": "2017-06-25T09:33:55.787038Z", "url": "https://files.pythonhosted.org/packages/73/58/5d33f7c10f7d04305bcbe4cc8959a5a3133a9af8d460a519720db3d474c8/pydocktors-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "29890903d2751191703cad6840473c8e", "sha256": "ba081b0f4ced635ae0a7f096865698fcad7a69ee897f3b38322551b0dc8eb124"}, "downloads": -1, "filename": "pydocktors-0.0.7.tar.gz", "has_sig": false, "md5_digest": "29890903d2751191703cad6840473c8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6858, "upload_time": "2017-06-30T04:45:58", "upload_time_iso_8601": "2017-06-30T04:45:58.099709Z", "url": "https://files.pythonhosted.org/packages/00/53/bed7a62e19891f22e42d33dcd6773e783c18232977645403ac94b9f0e7c6/pydocktors-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "29890903d2751191703cad6840473c8e", "sha256": "ba081b0f4ced635ae0a7f096865698fcad7a69ee897f3b38322551b0dc8eb124"}, "downloads": -1, "filename": "pydocktors-0.0.7.tar.gz", "has_sig": false, "md5_digest": "29890903d2751191703cad6840473c8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6858, "upload_time": "2017-06-30T04:45:58", "upload_time_iso_8601": "2017-06-30T04:45:58.099709Z", "url": "https://files.pythonhosted.org/packages/00/53/bed7a62e19891f22e42d33dcd6773e783c18232977645403ac94b9f0e7c6/pydocktors-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:53 2020"}