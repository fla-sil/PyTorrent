{"info": {"author": "Deividas Tamkus, Laimonas Sutkus", "author_email": "dtamkus@gmail.com (deividas@idenfy.com), laimonas.sutkus@gmail.com (laimonas@idenfy.com)", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## AWS Ci Cd Fargate\n\nA library that creates a full out-of-the-box solution for ECS Fargate with CI/CD pipeline.\n\n#### Remarks\n\nThe project is written by [Deividas Tamkus](https://github.com/deitam), supervised by \n[Laimonas Sutkus](https://github.com/laimonassutkus) and is owned by \n[iDenfy](https://github.com/idenfy). This is an open source\nlibrary intended to be used by anyone. [iDenfy](https://github.com/idenfy) aims\nto share its knowledge and educate market for better and more secure IT infrastructure.\n\n#### Related technology\n\nThis project utilizes the following technology:\n\n- *AWS* (Amazon Web Services).\n- *AWS CDK* (Amazon Web Services Cloud Development Kit).\n- *AWS CloudFormation*.\n- *AWS Loadbalancer*.\n- *AWS ECS* (Amazon Web Services Elastic Container Service).\n- *AWS Fargate* (Serverless solution for ECS).\n- *AWS CodePipeline*.\n\n#### Assumptions\n\nThis library project assumes the following:\n\n- You have knowledge in AWS (Amazon Web Services).\n- You have knowledge in AWS CloudFormation and AWS loadbalancing.\n- You are managing your infrastructure with AWS CDK.\n- You are writing AWS CDK templates with a python language.\n\n#### Install\n\nThe project is built and uploaded to PyPi. Install it by using pip.\n\n```bash\npip install aws-fargate-cdk\n```\n\nOr directly install it through source.\n\n```bash\n./build.sh -ic\n```\n\n#### Description\n\nThis package creates a Fargate service with autoscaling, balancing and two pipelines \nfor a complete out-of-the-box hosting infrastructure.\n\nThe pipelines are as follows:\n\n1. **ECR to ECS**. This pipeline takes an image pushed to ECR and deploys it to Fargate using Blue/Green deployment.\nThe pipeline needs to be triggered manually duo to AWS CloudWatch event bugs related to ECR.\n2. **CodeCommit to ECR**. This pipeline takes code pushed to the master branch of a CodeCommit repository, builds an image out of it (_source code needs a Dockerfile_), pushes it to ECR and automatically triggers the first pipeline, which then deploys it to ECS.\n\n**TL;DR** Pushing source code with a Dockerfile to CodeCommit repository deploys it to ECS Fargate.\n\n#### Examples\n\nCreate a fargate service with ci/cd:\n\n```python\necs_params = EcsParams(...)\nload_params = LoadBalancerParams(...)\npipeline_params = PipelineParams(...)\nlistener_params = LbListenerParameters(...)\n\nEcsFargateWithCiCd(\n    scope=scope,\n    prefix='pre',\n    vpc=vpc,\n    lb_params=load_params,\n    ecs_params=ecs_params,\n    lb_listener_params=listener_params,\n    pipeline_params=pipeline_params\n)\n```\n#### Tutorial\n\n- Create a full infrastructure around ECS Fargate by using the following code below in your stack.\n\n```python\nfrom aws_cdk import core, aws_ec2, aws_elasticloadbalancingv2\nfrom aws_ci_cd_fargate.parameters.ecs_parameters import EcsParams\nfrom aws_ci_cd_fargate.parameters.pipeline_parameters import PipelineParams\nfrom aws_ci_cd_fargate.parameters.load_balancer_parameters import LoadBalancerParams\nfrom aws_ci_cd_fargate.parameters.lb_listener_parameters import LbListenerParameters\nfrom aws_ci_cd_fargate.ecs_fargate_with_ci_cd import EcsFargateWithCiCd\n\nclass MainStack(core.Stack):\n    def __init__(self, scope: core.App) -> None:\n        super().__init__(\n            scope=scope,\n            id='MyCoolStack'\n        )\n\n        # Create your own vpc or use an existing one.\n        vpc = aws_ec2.Vpc(...)\n\n        # Create a security group for your ECS Fargate instances.\n        sg = aws_ec2.SecurityGroup(...)\n\n        # Create a loadbalancer.\n        loadbalancer = aws_elasticloadbalancingv2.ApplicationLoadBalancer(...)\n        production_listener = aws_elasticloadbalancingv2.ApplicationListener(self, 'Prod', load_balancer=loadbalancer)\n        deployments_listener = aws_elasticloadbalancingv2.ApplicationListener(self, 'Test', load_balancer=loadbalancer)\n\n        ecs_params = EcsParams('FargateEcsContainer', 256, 512, 80, {}, [sg], vpc.private_subnets)\n        load_params = LoadBalancerParams()\n        pipeline_params = PipelineParams()\n        listener_params = LbListenerParameters(\n            production_listener=production_listener,\n            deployment_listener=deployments_listener,\n            rule_priority=100,\n            rule_condition=aws_elasticloadbalancingv2.CfnListenerRule.RuleConditionProperty(\n                    field='path-pattern',\n                    path_pattern_config=aws_elasticloadbalancingv2.CfnListenerRule.PathPatternConfigProperty(\n                        values=['/*']\n                    )\n                )\n        )\n\n        self.ecs_infrastructure = EcsFargateWithCiCd(\n            scope=self,\n            prefix='MyCool',\n            vpc=vpc,\n            lb_params=load_params,\n            ecs_params=ecs_params,\n            lb_listener_params=listener_params,\n            pipeline_params=pipeline_params\n        )\n\n        # Access CodeCommit-To-Ecr pipeline.\n        _ = self.ecs_infrastructure.pipeline.commit_to_ecr\n\n        # Access Ecr-To-Ecs pipeline.\n        _ = self.ecs_infrastructure.pipeline.ecr_to_ecs\n```\n\n- Provision you infrastructure with `CloudFormation` by calling `cdk deploy`.\n\n- Create a Dockerfile as simple as:\n\n```dockerfile\nFROM nginx\n```\n\n- After you provision your infrastructure, go to `AWS CodeCommit` in your AWS Console.\n\n- Find a newly created git repository.\n\n- Commit the Dockerfile to the newly created repository to trigger a pipeline.\n\n(A tutorial on pushing code to remote repositories: [AWS Tutorial](https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-create-commit.html)).\n\n(A tutorial on setting up git ssh with aws git repositories: [AWS Tutorial](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-unixes.html))\n\n\n# Release history\n\n#### 7.0.0\nDo not allow to specify ecs port. Default to 80.\nThis is AWS limitation.\n\n#### 6.0.0\nInstead of taking path config as a parameter, take the \nwhole rule config.\n\n#### 5.0.1\nUse empty ecs repository dependency.\n\n#### 5.0.0\nProject rename to a better and more explanatory name.\n\n#### 4.0.9\nDependency update.\n\n#### 4.0.8\nDependency update. Fix ecs service name key.\n\n#### 4.0.7\nDependency update.\n\n#### 4.0.6\nUse newest cdk with newest breaking changes.\n\n#### 4.0.5\nAdd dependency which creates ecs service. CloudFormation itself\nhas too many bugs.\n\n#### 4.0.2\nDestroy ecr on delete.\n\n#### 4.0.0\nBuild environment variable fix.\n\n#### 4.0.0\nAdd pipeline parameters and fix some major pipeline bugs.\n\n#### 3.1.0\nCreate custom resource to create ecs service. With deployment controller CODE_DEPLOY you\ncan not do CF updates.\n\n#### 3.0.2\nMinor bug fix.\n\n#### 3.0.1\nReadme fix.\n\n#### 3.0.0\nFull project refactor. Accept loadbalancer's listeners for production and test traffic instead of creting\na loadbalancer here. This way we can reuse an existing loadbalancer.\n\n#### 2.0.0\nRemove pipeline parameters as the artifacts bucket should be created automatically within this stack.\n\n#### 1.0.0\nInitial project.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idenfy/AwsFargateCdk.git", "keywords": "AWS CDK Fargate ECS", "license": "GNU GENERAL PUBLIC LICENSE Version 3", "maintainer": "", "maintainer_email": "", "name": "aws-ci-cd-fargate", "package_url": "https://pypi.org/project/aws-ci-cd-fargate/", "platform": "", "project_url": "https://pypi.org/project/aws-ci-cd-fargate/", "project_urls": {"Homepage": "https://github.com/idenfy/AwsFargateCdk.git"}, "release_url": "https://pypi.org/project/aws-ci-cd-fargate/7.0.0/", "requires_dist": ["aws-cdk.core (<1.28.0,>=1.27.0)", "aws-cdk.aws-iam (<1.28.0,>=1.27.0)", "aws-cdk.custom-resources (<1.28.0,>=1.27.0)", "aws-cdk.aws-s3 (<1.28.0,>=1.27.0)", "aws-cdk.aws-certificatemanager (<1.28.0,>=1.27.0)", "aws-cdk.aws-elasticloadbalancingv2 (<1.28.0,>=1.27.0)", "aws-cdk.aws-ec2 (<1.28.0,>=1.27.0)", "aws-cdk.aws-logs (<1.28.0,>=1.27.0)", "aws-cdk.aws-ecs (<1.28.0,>=1.27.0)", "aws-cdk.aws-applicationautoscaling (<1.28.0,>=1.27.0)", "aws-cdk.aws-codedeploy (<1.28.0,>=1.27.0)", "aws-cdk.aws-codecommit (<1.28.0,>=1.27.0)", "aws-cdk.aws-codepipeline (<1.28.0,>=1.27.0)", "aws-cdk.aws-codepipeline-actions (<1.28.0,>=1.27.0)", "aws-cdk.aws-ecr (<1.28.0,>=1.27.0)", "aws-cdk.aws-codebuild (<1.28.0,>=1.27.0)", "aws-empty-bucket (<3.0.0,>=2.0.1)", "aws-vpc (<3.0.0,>=2.0.0)", "aws-ecs-service (<2.0.0,>=1.0.7)", "aws-ecs-cluster (<2.0.0,>=1.0.1)", "aws-empty-ecr-repository (<2.0.0,>=1.0.2)"], "requires_python": "", "summary": "AWS CDK package that helps deploying a fargate service with ci/cd.", "version": "7.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>AWS Ci Cd Fargate</h2>\n<p>A library that creates a full out-of-the-box solution for ECS Fargate with CI/CD pipeline.</p>\n<h4>Remarks</h4>\n<p>The project is written by <a href=\"https://github.com/deitam\" rel=\"nofollow\">Deividas Tamkus</a>, supervised by\n<a href=\"https://github.com/laimonassutkus\" rel=\"nofollow\">Laimonas Sutkus</a> and is owned by\n<a href=\"https://github.com/idenfy\" rel=\"nofollow\">iDenfy</a>. This is an open source\nlibrary intended to be used by anyone. <a href=\"https://github.com/idenfy\" rel=\"nofollow\">iDenfy</a> aims\nto share its knowledge and educate market for better and more secure IT infrastructure.</p>\n<h4>Related technology</h4>\n<p>This project utilizes the following technology:</p>\n<ul>\n<li><em>AWS</em> (Amazon Web Services).</li>\n<li><em>AWS CDK</em> (Amazon Web Services Cloud Development Kit).</li>\n<li><em>AWS CloudFormation</em>.</li>\n<li><em>AWS Loadbalancer</em>.</li>\n<li><em>AWS ECS</em> (Amazon Web Services Elastic Container Service).</li>\n<li><em>AWS Fargate</em> (Serverless solution for ECS).</li>\n<li><em>AWS CodePipeline</em>.</li>\n</ul>\n<h4>Assumptions</h4>\n<p>This library project assumes the following:</p>\n<ul>\n<li>You have knowledge in AWS (Amazon Web Services).</li>\n<li>You have knowledge in AWS CloudFormation and AWS loadbalancing.</li>\n<li>You are managing your infrastructure with AWS CDK.</li>\n<li>You are writing AWS CDK templates with a python language.</li>\n</ul>\n<h4>Install</h4>\n<p>The project is built and uploaded to PyPi. Install it by using pip.</p>\n<pre>pip install aws-fargate-cdk\n</pre>\n<p>Or directly install it through source.</p>\n<pre>./build.sh -ic\n</pre>\n<h4>Description</h4>\n<p>This package creates a Fargate service with autoscaling, balancing and two pipelines\nfor a complete out-of-the-box hosting infrastructure.</p>\n<p>The pipelines are as follows:</p>\n<ol>\n<li><strong>ECR to ECS</strong>. This pipeline takes an image pushed to ECR and deploys it to Fargate using Blue/Green deployment.\nThe pipeline needs to be triggered manually duo to AWS CloudWatch event bugs related to ECR.</li>\n<li><strong>CodeCommit to ECR</strong>. This pipeline takes code pushed to the master branch of a CodeCommit repository, builds an image out of it (<em>source code needs a Dockerfile</em>), pushes it to ECR and automatically triggers the first pipeline, which then deploys it to ECS.</li>\n</ol>\n<p><strong>TL;DR</strong> Pushing source code with a Dockerfile to CodeCommit repository deploys it to ECS Fargate.</p>\n<h4>Examples</h4>\n<p>Create a fargate service with ci/cd:</p>\n<pre><span class=\"n\">ecs_params</span> <span class=\"o\">=</span> <span class=\"n\">EcsParams</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">load_params</span> <span class=\"o\">=</span> <span class=\"n\">LoadBalancerParams</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">pipeline_params</span> <span class=\"o\">=</span> <span class=\"n\">PipelineParams</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">listener_params</span> <span class=\"o\">=</span> <span class=\"n\">LbListenerParameters</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">EcsFargateWithCiCd</span><span class=\"p\">(</span>\n    <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">scope</span><span class=\"p\">,</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'pre'</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"n\">lb_params</span><span class=\"o\">=</span><span class=\"n\">load_params</span><span class=\"p\">,</span>\n    <span class=\"n\">ecs_params</span><span class=\"o\">=</span><span class=\"n\">ecs_params</span><span class=\"p\">,</span>\n    <span class=\"n\">lb_listener_params</span><span class=\"o\">=</span><span class=\"n\">listener_params</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_params</span><span class=\"o\">=</span><span class=\"n\">pipeline_params</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>Tutorial</h4>\n<ul>\n<li>Create a full infrastructure around ECS Fargate by using the following code below in your stack.</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aws_cdk</span> <span class=\"kn\">import</span> <span class=\"n\">core</span><span class=\"p\">,</span> <span class=\"n\">aws_ec2</span><span class=\"p\">,</span> <span class=\"n\">aws_elasticloadbalancingv2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_ci_cd_fargate.parameters.ecs_parameters</span> <span class=\"kn\">import</span> <span class=\"n\">EcsParams</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_ci_cd_fargate.parameters.pipeline_parameters</span> <span class=\"kn\">import</span> <span class=\"n\">PipelineParams</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_ci_cd_fargate.parameters.load_balancer_parameters</span> <span class=\"kn\">import</span> <span class=\"n\">LoadBalancerParams</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_ci_cd_fargate.parameters.lb_listener_parameters</span> <span class=\"kn\">import</span> <span class=\"n\">LbListenerParameters</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_ci_cd_fargate.ecs_fargate_with_ci_cd</span> <span class=\"kn\">import</span> <span class=\"n\">EcsFargateWithCiCd</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MainStack</span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Stack</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"p\">:</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">App</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">scope</span><span class=\"p\">,</span>\n            <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'MyCoolStack'</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Create your own vpc or use an existing one.</span>\n        <span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">aws_ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Create a security group for your ECS Fargate instances.</span>\n        <span class=\"n\">sg</span> <span class=\"o\">=</span> <span class=\"n\">aws_ec2</span><span class=\"o\">.</span><span class=\"n\">SecurityGroup</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Create a loadbalancer.</span>\n        <span class=\"n\">loadbalancer</span> <span class=\"o\">=</span> <span class=\"n\">aws_elasticloadbalancingv2</span><span class=\"o\">.</span><span class=\"n\">ApplicationLoadBalancer</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n        <span class=\"n\">production_listener</span> <span class=\"o\">=</span> <span class=\"n\">aws_elasticloadbalancingv2</span><span class=\"o\">.</span><span class=\"n\">ApplicationListener</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s1\">'Prod'</span><span class=\"p\">,</span> <span class=\"n\">load_balancer</span><span class=\"o\">=</span><span class=\"n\">loadbalancer</span><span class=\"p\">)</span>\n        <span class=\"n\">deployments_listener</span> <span class=\"o\">=</span> <span class=\"n\">aws_elasticloadbalancingv2</span><span class=\"o\">.</span><span class=\"n\">ApplicationListener</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s1\">'Test'</span><span class=\"p\">,</span> <span class=\"n\">load_balancer</span><span class=\"o\">=</span><span class=\"n\">loadbalancer</span><span class=\"p\">)</span>\n\n        <span class=\"n\">ecs_params</span> <span class=\"o\">=</span> <span class=\"n\">EcsParams</span><span class=\"p\">(</span><span class=\"s1\">'FargateEcsContainer'</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"p\">{},</span> <span class=\"p\">[</span><span class=\"n\">sg</span><span class=\"p\">],</span> <span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">private_subnets</span><span class=\"p\">)</span>\n        <span class=\"n\">load_params</span> <span class=\"o\">=</span> <span class=\"n\">LoadBalancerParams</span><span class=\"p\">()</span>\n        <span class=\"n\">pipeline_params</span> <span class=\"o\">=</span> <span class=\"n\">PipelineParams</span><span class=\"p\">()</span>\n        <span class=\"n\">listener_params</span> <span class=\"o\">=</span> <span class=\"n\">LbListenerParameters</span><span class=\"p\">(</span>\n            <span class=\"n\">production_listener</span><span class=\"o\">=</span><span class=\"n\">production_listener</span><span class=\"p\">,</span>\n            <span class=\"n\">deployment_listener</span><span class=\"o\">=</span><span class=\"n\">deployments_listener</span><span class=\"p\">,</span>\n            <span class=\"n\">rule_priority</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n            <span class=\"n\">rule_condition</span><span class=\"o\">=</span><span class=\"n\">aws_elasticloadbalancingv2</span><span class=\"o\">.</span><span class=\"n\">CfnListenerRule</span><span class=\"o\">.</span><span class=\"n\">RuleConditionProperty</span><span class=\"p\">(</span>\n                    <span class=\"n\">field</span><span class=\"o\">=</span><span class=\"s1\">'path-pattern'</span><span class=\"p\">,</span>\n                    <span class=\"n\">path_pattern_config</span><span class=\"o\">=</span><span class=\"n\">aws_elasticloadbalancingv2</span><span class=\"o\">.</span><span class=\"n\">CfnListenerRule</span><span class=\"o\">.</span><span class=\"n\">PathPatternConfigProperty</span><span class=\"p\">(</span>\n                        <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'/*'</span><span class=\"p\">]</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ecs_infrastructure</span> <span class=\"o\">=</span> <span class=\"n\">EcsFargateWithCiCd</span><span class=\"p\">(</span>\n            <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n            <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n            <span class=\"n\">lb_params</span><span class=\"o\">=</span><span class=\"n\">load_params</span><span class=\"p\">,</span>\n            <span class=\"n\">ecs_params</span><span class=\"o\">=</span><span class=\"n\">ecs_params</span><span class=\"p\">,</span>\n            <span class=\"n\">lb_listener_params</span><span class=\"o\">=</span><span class=\"n\">listener_params</span><span class=\"p\">,</span>\n            <span class=\"n\">pipeline_params</span><span class=\"o\">=</span><span class=\"n\">pipeline_params</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Access CodeCommit-To-Ecr pipeline.</span>\n        <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ecs_infrastructure</span><span class=\"o\">.</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">commit_to_ecr</span>\n\n        <span class=\"c1\"># Access Ecr-To-Ecs pipeline.</span>\n        <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ecs_infrastructure</span><span class=\"o\">.</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">ecr_to_ecs</span>\n</pre>\n<ul>\n<li>\n<p>Provision you infrastructure with <code>CloudFormation</code> by calling <code>cdk deploy</code>.</p>\n</li>\n<li>\n<p>Create a Dockerfile as simple as:</p>\n</li>\n</ul>\n<pre><span class=\"k\">FROM</span> <span class=\"s\">nginx</span>\n</pre>\n<ul>\n<li>\n<p>After you provision your infrastructure, go to <code>AWS CodeCommit</code> in your AWS Console.</p>\n</li>\n<li>\n<p>Find a newly created git repository.</p>\n</li>\n<li>\n<p>Commit the Dockerfile to the newly created repository to trigger a pipeline.</p>\n</li>\n</ul>\n<p>(A tutorial on pushing code to remote repositories: <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-create-commit.html\" rel=\"nofollow\">AWS Tutorial</a>).</p>\n<p>(A tutorial on setting up git ssh with aws git repositories: <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-unixes.html\" rel=\"nofollow\">AWS Tutorial</a>)</p>\n<h1>Release history</h1>\n<h4>7.0.0</h4>\n<p>Do not allow to specify ecs port. Default to 80.\nThis is AWS limitation.</p>\n<h4>6.0.0</h4>\n<p>Instead of taking path config as a parameter, take the\nwhole rule config.</p>\n<h4>5.0.1</h4>\n<p>Use empty ecs repository dependency.</p>\n<h4>5.0.0</h4>\n<p>Project rename to a better and more explanatory name.</p>\n<h4>4.0.9</h4>\n<p>Dependency update.</p>\n<h4>4.0.8</h4>\n<p>Dependency update. Fix ecs service name key.</p>\n<h4>4.0.7</h4>\n<p>Dependency update.</p>\n<h4>4.0.6</h4>\n<p>Use newest cdk with newest breaking changes.</p>\n<h4>4.0.5</h4>\n<p>Add dependency which creates ecs service. CloudFormation itself\nhas too many bugs.</p>\n<h4>4.0.2</h4>\n<p>Destroy ecr on delete.</p>\n<h4>4.0.0</h4>\n<p>Build environment variable fix.</p>\n<h4>4.0.0</h4>\n<p>Add pipeline parameters and fix some major pipeline bugs.</p>\n<h4>3.1.0</h4>\n<p>Create custom resource to create ecs service. With deployment controller CODE_DEPLOY you\ncan not do CF updates.</p>\n<h4>3.0.2</h4>\n<p>Minor bug fix.</p>\n<h4>3.0.1</h4>\n<p>Readme fix.</p>\n<h4>3.0.0</h4>\n<p>Full project refactor. Accept loadbalancer's listeners for production and test traffic instead of creting\na loadbalancer here. This way we can reuse an existing loadbalancer.</p>\n<h4>2.0.0</h4>\n<p>Remove pipeline parameters as the artifacts bucket should be created automatically within this stack.</p>\n<h4>1.0.0</h4>\n<p>Initial project.</p>\n\n          </div>"}, "last_serial": 6880060, "releases": {"5.0.0": [{"comment_text": "", "digests": {"md5": "9b6ff4c6fbd7e5cd64fd0da6611390e1", "sha256": "320020ce521b46302807594d55210146c6733557c3e7471c4265e546acbd394a"}, "downloads": -1, "filename": "aws_ci_cd_fargate-5.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9b6ff4c6fbd7e5cd64fd0da6611390e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33415, "upload_time": "2020-03-16T05:44:47", "upload_time_iso_8601": "2020-03-16T05:44:47.748820Z", "url": "https://files.pythonhosted.org/packages/a0/3e/36d4e4f2d7655e1132979ef215c55efd8d28652bd1732258588159e3042a/aws_ci_cd_fargate-5.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d25cfbbf59e99b3700c781edb8140fa5", "sha256": "b9f36f00f07237e943410d6c3b6cb9ae09319628dcf4c14f82bf7a49ded6f73c"}, "downloads": -1, "filename": "aws_ci_cd_fargate-5.0.0.tar.gz", "has_sig": false, "md5_digest": "d25cfbbf59e99b3700c781edb8140fa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16040, "upload_time": "2020-03-16T05:44:50", "upload_time_iso_8601": "2020-03-16T05:44:50.421627Z", "url": "https://files.pythonhosted.org/packages/d7/09/082607d401ee5422301970069f934c004d8359a6ab3b0f0eca36941ce88f/aws_ci_cd_fargate-5.0.0.tar.gz", "yanked": false}], "5.0.1": [{"comment_text": "", "digests": {"md5": "e5139db0109193ffa9690f29bce10cae", "sha256": "948c59db2fbf8f6875349de4b02f4cb25c8840ee245268add04d8779eab3301c"}, "downloads": -1, "filename": "aws_ci_cd_fargate-5.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5139db0109193ffa9690f29bce10cae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33436, "upload_time": "2020-03-16T13:32:56", "upload_time_iso_8601": "2020-03-16T13:32:56.999445Z", "url": "https://files.pythonhosted.org/packages/07/86/9cfa6ab6c3b9b1bdcbe99492ab157cebff5166b7dbc46b5d36df8fdc6b7a/aws_ci_cd_fargate-5.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e1ee75ae263dcc34a44a292aff1d8e3", "sha256": "c59c81ec88f92cbd5e906646b5006ff030d1abf167228f6b4bdce523d2e3184b"}, "downloads": -1, "filename": "aws_ci_cd_fargate-5.0.1.tar.gz", "has_sig": false, "md5_digest": "9e1ee75ae263dcc34a44a292aff1d8e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16109, "upload_time": "2020-03-16T13:32:58", "upload_time_iso_8601": "2020-03-16T13:32:58.362658Z", "url": "https://files.pythonhosted.org/packages/5d/38/f8e379ee7925d90aca598152075585e635467a4e7259165cfb987ea12466/aws_ci_cd_fargate-5.0.1.tar.gz", "yanked": false}], "6.0.0": [{"comment_text": "", "digests": {"md5": "a311faac113a4ea73c9dd0328395f5a6", "sha256": "808f663f2058f68f0c20a6a2e2cd8c45c03ab48ef7902e2e6a24e00926fb7107"}, "downloads": -1, "filename": "aws_ci_cd_fargate-6.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a311faac113a4ea73c9dd0328395f5a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33587, "upload_time": "2020-03-18T19:19:29", "upload_time_iso_8601": "2020-03-18T19:19:29.418233Z", "url": "https://files.pythonhosted.org/packages/53/74/88d7e35e33221f93760f17d4635529f8b6b505f0350d02d7bc5a6007ff8c/aws_ci_cd_fargate-6.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e1be4febddcd550aa4afd4e9c1139c4", "sha256": "c806c05c98ef64768d19b230bb2163dfec82d0d21036bf130a39e8333b396be0"}, "downloads": -1, "filename": "aws_ci_cd_fargate-6.0.0.tar.gz", "has_sig": false, "md5_digest": "8e1be4febddcd550aa4afd4e9c1139c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16345, "upload_time": "2020-03-18T19:19:31", "upload_time_iso_8601": "2020-03-18T19:19:31.186009Z", "url": "https://files.pythonhosted.org/packages/4e/9a/8d7dc5c579faf2ee4fe5aa40b7c981ca20196daab75a6af7502ce6a4d678/aws_ci_cd_fargate-6.0.0.tar.gz", "yanked": false}], "7.0.0": [{"comment_text": "", "digests": {"md5": "207518f1a9f0550c9ad07ed9d7667ec4", "sha256": "0829ea35b40b40a578a80d09140b3f6cc4d688c8b6238560df29d937f8f28d67"}, "downloads": -1, "filename": "aws_ci_cd_fargate-7.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "207518f1a9f0550c9ad07ed9d7667ec4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33743, "upload_time": "2020-03-25T11:35:54", "upload_time_iso_8601": "2020-03-25T11:35:54.523424Z", "url": "https://files.pythonhosted.org/packages/3e/ea/98bb5eb16059b54c8ea1cfa0d4355ac6af77723a5db4702baf61703d9b1e/aws_ci_cd_fargate-7.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f22aa030feaddf14cf9f77b59cfe8e79", "sha256": "59a5b408643643ccf5d458527afd667a634c8780c46923bf38394e1d93cff5f9"}, "downloads": -1, "filename": "aws_ci_cd_fargate-7.0.0.tar.gz", "has_sig": false, "md5_digest": "f22aa030feaddf14cf9f77b59cfe8e79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16536, "upload_time": "2020-03-25T11:35:56", "upload_time_iso_8601": "2020-03-25T11:35:56.100160Z", "url": "https://files.pythonhosted.org/packages/e3/47/d8af1c2081895af0b21c075cf7c6e050fd8126ffefa28ba332e6b5437e01/aws_ci_cd_fargate-7.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "207518f1a9f0550c9ad07ed9d7667ec4", "sha256": "0829ea35b40b40a578a80d09140b3f6cc4d688c8b6238560df29d937f8f28d67"}, "downloads": -1, "filename": "aws_ci_cd_fargate-7.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "207518f1a9f0550c9ad07ed9d7667ec4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33743, "upload_time": "2020-03-25T11:35:54", "upload_time_iso_8601": "2020-03-25T11:35:54.523424Z", "url": "https://files.pythonhosted.org/packages/3e/ea/98bb5eb16059b54c8ea1cfa0d4355ac6af77723a5db4702baf61703d9b1e/aws_ci_cd_fargate-7.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f22aa030feaddf14cf9f77b59cfe8e79", "sha256": "59a5b408643643ccf5d458527afd667a634c8780c46923bf38394e1d93cff5f9"}, "downloads": -1, "filename": "aws_ci_cd_fargate-7.0.0.tar.gz", "has_sig": false, "md5_digest": "f22aa030feaddf14cf9f77b59cfe8e79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16536, "upload_time": "2020-03-25T11:35:56", "upload_time_iso_8601": "2020-03-25T11:35:56.100160Z", "url": "https://files.pythonhosted.org/packages/e3/47/d8af1c2081895af0b21c075cf7c6e050fd8126ffefa28ba332e6b5437e01/aws_ci_cd_fargate-7.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:44 2020"}