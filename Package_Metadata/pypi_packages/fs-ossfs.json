{"info": {"author": "Jingcheng Yang", "author_email": "yjcyxky@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: System :: Filesystems"], "description": "OSSFS\n=====\n\nOSSFS is a `PyFilesystem <https://www.pyfilesystem.org/>`__ interface to\nAliCloud OSS cloud storage.\n\nAs a PyFilesystem concrete class,\n`OSSFS <http://fs-ossfs.readthedocs.io/en/latest/>`__ allows you to work\nwith OSS in the same way as any other supported filesystem.\n\nInstalling\n----------\n\nYou can install OSSFS from pip as follows:\n\n::\n\n   pip install fs-ossfs\n\nOpening a OSSFS\n---------------\n\nOpen an OSSFS by explicitly using the constructor:\n\n.. code:: python\n\n   from fs_ossfs import OSSFS\n   ossfs = OSSFS('mybucket')\n\nOr with a FS URL:\n\n.. code:: python\n\n     from fs import open_fs\n     ossfs = open_fs('oss://mybucket')\n\nDownloading Files\n-----------------\n\nTo *download* files from an OSS bucket, open a file on the OSS\nfilesystem for reading, then write the data to a file on the local\nfilesystem. Here\u2019s an example that copies a file ``example.mov`` from\nOSS to your HD:\n\n.. code:: python\n\n   from fs.tools import copy_file_data\n   with ossfs.open('example.mov', 'rb') as remote_file:\n       with open('example.mov', 'wb') as local_file:\n           copy_file_data(remote_file, local_file)\n\nAlthough it is preferable to use the higher-level functionality in the\n``fs.copy`` module. Here\u2019s an example:\n\n.. code:: python\n\n   from fs.copy import copy_file\n   copy_file(ossfs, 'example.mov', './', 'example.mov')\n\nUploading Files\n---------------\n\nYou can *upload* files in the same way. Simply copy a file from a source\nfilesystem to the OSS filesystem. See `Moving and\nCopying <https://docs.pyfilesystem.org/en/latest/guide.html#moving-and-copying>`__\nfor more information.\n\nExtraArgs\n---------\n\nOSS objects have additional properties, beyond a traditional filesystem.\nThese options can be set using the ``upload_args`` and ``download_args``\nproperties. which are handed to upload and download methods, as\nappropriate, for the lifetime of the filesystem instance.\n\nFor example, to set the ``cache-control`` header of all objects uploaded\nto a bucket:\n\n.. code:: python\n\n   import fs, fs.mirror\n   ossfs = OSSFS('example', upload_args={\"CacheControl\": \"max-age=2592000\", \"ACL\": \"public-read\"})\n   fs.mirror.mirror('/path/to/mirror', ossfs)\n\nsee `the Boto3\ndocs <https://boto3.readthedocs.io/en/latest/reference/customizations/oss.html#boto3.oss.transfer.OSSTransfer.ALLOWED_UPLOAD_ARGS>`__\nfor more information.\n\n``acl`` and ``cache_control`` are exposed explicitly for convenience,\nand can be used in URLs. It is important to URL-Escape the\n``cache_control`` value in a URL, as it may contain special characters.\n\n.. code:: python\n\n   import fs, fs.mirror\n   with open fs.open_fs('oss://example?acl=public-read&cache_control=max-age%3D2592000%2Cpublic') as ossfs\n       fs.mirror.mirror('/path/to/mirror', ossfs)\n\nOSS URLs\n--------\n\nYou can get a public URL to a file on a OSS bucket as follows:\n\n.. code:: python\n\n   movie_url = ossfs.geturl('example.mov')\n\nDocumentation\n-------------\n\n-  `PyFilesystem Wiki <https://www.pyfilesystem.org>`__\n-  `OSSFS Reference <http://fs-ossfs.readthedocs.io/en/latest/>`__\n-  `PyFilesystem\n   Reference <https://docs.pyfilesystem.org/en/latest/reference/base.html>`__\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/go-choppy/fs.ossfs", "keywords": "pyfilesystem", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fs-ossfs", "package_url": "https://pypi.org/project/fs-ossfs/", "platform": "any", "project_url": "https://pypi.org/project/fs-ossfs/", "project_urls": {"Homepage": "https://github.com/go-choppy/fs.ossfs"}, "release_url": "https://pypi.org/project/fs-ossfs/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "AliCloud OSS filesystem for PyFilesystem2", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>OSSFS is a <a href=\"https://www.pyfilesystem.org/\" rel=\"nofollow\">PyFilesystem</a> interface to\nAliCloud OSS cloud storage.</p>\n<p>As a PyFilesystem concrete class,\n<a href=\"http://fs-ossfs.readthedocs.io/en/latest/\" rel=\"nofollow\">OSSFS</a> allows you to work\nwith OSS in the same way as any other supported filesystem.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You can install OSSFS from pip as follows:</p>\n<pre>pip install fs-ossfs\n</pre>\n</div>\n<div id=\"opening-a-ossfs\">\n<h2>Opening a OSSFS</h2>\n<p>Open an OSSFS by explicitly using the constructor:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs_ossfs</span> <span class=\"kn\">import</span> <span class=\"n\">OSSFS</span>\n<span class=\"n\">ossfs</span> <span class=\"o\">=</span> <span class=\"n\">OSSFS</span><span class=\"p\">(</span><span class=\"s1\">'mybucket'</span><span class=\"p\">)</span>\n</pre>\n<p>Or with a FS URL:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs</span> <span class=\"kn\">import</span> <span class=\"n\">open_fs</span>\n<span class=\"n\">ossfs</span> <span class=\"o\">=</span> <span class=\"n\">open_fs</span><span class=\"p\">(</span><span class=\"s1\">'oss://mybucket'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"downloading-files\">\n<h2>Downloading Files</h2>\n<p>To <em>download</em> files from an OSS bucket, open a file on the OSS\nfilesystem for reading, then write the data to a file on the local\nfilesystem. Here\u2019s an example that copies a file <tt>example.mov</tt> from\nOSS to your HD:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs.tools</span> <span class=\"kn\">import</span> <span class=\"n\">copy_file_data</span>\n<span class=\"k\">with</span> <span class=\"n\">ossfs</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'example.mov'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">remote_file</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'example.mov'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">local_file</span><span class=\"p\">:</span>\n        <span class=\"n\">copy_file_data</span><span class=\"p\">(</span><span class=\"n\">remote_file</span><span class=\"p\">,</span> <span class=\"n\">local_file</span><span class=\"p\">)</span>\n</pre>\n<p>Although it is preferable to use the higher-level functionality in the\n<tt>fs.copy</tt> module. Here\u2019s an example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fs.copy</span> <span class=\"kn\">import</span> <span class=\"n\">copy_file</span>\n<span class=\"n\">copy_file</span><span class=\"p\">(</span><span class=\"n\">ossfs</span><span class=\"p\">,</span> <span class=\"s1\">'example.mov'</span><span class=\"p\">,</span> <span class=\"s1\">'./'</span><span class=\"p\">,</span> <span class=\"s1\">'example.mov'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"uploading-files\">\n<h2>Uploading Files</h2>\n<p>You can <em>upload</em> files in the same way. Simply copy a file from a source\nfilesystem to the OSS filesystem. See <a href=\"https://docs.pyfilesystem.org/en/latest/guide.html#moving-and-copying\" rel=\"nofollow\">Moving and\nCopying</a>\nfor more information.</p>\n</div>\n<div id=\"extraargs\">\n<h2>ExtraArgs</h2>\n<p>OSS objects have additional properties, beyond a traditional filesystem.\nThese options can be set using the <tt>upload_args</tt> and <tt>download_args</tt>\nproperties. which are handed to upload and download methods, as\nappropriate, for the lifetime of the filesystem instance.</p>\n<p>For example, to set the <tt><span class=\"pre\">cache-control</span></tt> header of all objects uploaded\nto a bucket:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fs</span><span class=\"o\">,</span> <span class=\"nn\">fs.mirror</span>\n<span class=\"n\">ossfs</span> <span class=\"o\">=</span> <span class=\"n\">OSSFS</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">,</span> <span class=\"n\">upload_args</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"CacheControl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"max-age=2592000\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ACL\"</span><span class=\"p\">:</span> <span class=\"s2\">\"public-read\"</span><span class=\"p\">})</span>\n<span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/mirror'</span><span class=\"p\">,</span> <span class=\"n\">ossfs</span><span class=\"p\">)</span>\n</pre>\n<p>see <a href=\"https://boto3.readthedocs.io/en/latest/reference/customizations/oss.html#boto3.oss.transfer.OSSTransfer.ALLOWED_UPLOAD_ARGS\" rel=\"nofollow\">the Boto3\ndocs</a>\nfor more information.</p>\n<p><tt>acl</tt> and <tt>cache_control</tt> are exposed explicitly for convenience,\nand can be used in URLs. It is important to URL-Escape the\n<tt>cache_control</tt> value in a URL, as it may contain special characters.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fs</span><span class=\"o\">,</span> <span class=\"nn\">fs.mirror</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">open_fs</span><span class=\"p\">(</span><span class=\"s1\">'oss://example?acl=public-read&amp;cache_control=max-age%3D2592000%2Cpublic'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ossfs</span>\n    <span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/mirror'</span><span class=\"p\">,</span> <span class=\"n\">ossfs</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"oss-urls\">\n<h2>OSS URLs</h2>\n<p>You can get a public URL to a file on a OSS bucket as follows:</p>\n<pre><span class=\"n\">movie_url</span> <span class=\"o\">=</span> <span class=\"n\">ossfs</span><span class=\"o\">.</span><span class=\"n\">geturl</span><span class=\"p\">(</span><span class=\"s1\">'example.mov'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<ul>\n<li><a href=\"https://www.pyfilesystem.org\" rel=\"nofollow\">PyFilesystem Wiki</a></li>\n<li><a href=\"http://fs-ossfs.readthedocs.io/en/latest/\" rel=\"nofollow\">OSSFS Reference</a></li>\n<li><a href=\"https://docs.pyfilesystem.org/en/latest/reference/base.html\" rel=\"nofollow\">PyFilesystem\nReference</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5410894, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "774dcb58162857996b223c0224147a92", "sha256": "1c26685775e6c59a4f3ca6212b730cde82a49ff3caece1701d1375b766fd68a7"}, "downloads": -1, "filename": "fs_ossfs-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "774dcb58162857996b223c0224147a92", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 11077, "upload_time": "2019-06-17T15:37:30", "upload_time_iso_8601": "2019-06-17T15:37:30.974301Z", "url": "https://files.pythonhosted.org/packages/18/c5/8171f50ea6921ead405b57ead3cabcf95493a1701cb3c8e5de52545ca2c1/fs_ossfs-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "172333cd00aa6af3c633b7b5209f173d", "sha256": "8f4bb957f2c6fe096654d95fe061fca165f93712b8d794725d81478e1d957fac"}, "downloads": -1, "filename": "fs-ossfs-1.1.0.tar.gz", "has_sig": false, "md5_digest": "172333cd00aa6af3c633b7b5209f173d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11045, "upload_time": "2019-06-17T15:37:26", "upload_time_iso_8601": "2019-06-17T15:37:26.041065Z", "url": "https://files.pythonhosted.org/packages/cc/94/ef3659737b1e694b24032cf46e79e03adcd42133771638bd96df3a94a3f0/fs-ossfs-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "f878d3099fb95ed831f6559a726d0744", "sha256": "98bfab0e011d7f8b4bd389a38edbac6f19ac445f28c4dbbb7f88014d3148acab"}, "downloads": -1, "filename": "fs_ossfs-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f878d3099fb95ed831f6559a726d0744", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 11364, "upload_time": "2019-06-17T16:43:13", "upload_time_iso_8601": "2019-06-17T16:43:13.325685Z", "url": "https://files.pythonhosted.org/packages/be/67/393239bdc58a54f34c2e819461bd42437e26e86ed645a8c8711cc17cfff8/fs_ossfs-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37a451b6846e38d90d88388b31d9d84c", "sha256": "a9f02aa48e902bd5dfff1924c1092071b72961e128dd4dfed9ed33b0052a4a36"}, "downloads": -1, "filename": "fs-ossfs-1.1.1.tar.gz", "has_sig": false, "md5_digest": "37a451b6846e38d90d88388b31d9d84c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11157, "upload_time": "2019-06-17T16:42:44", "upload_time_iso_8601": "2019-06-17T16:42:44.136652Z", "url": "https://files.pythonhosted.org/packages/0d/f6/b27afa3edac3ce4e9c9bba17f5787e76a07c9db0454d72202207a51b1817/fs-ossfs-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f878d3099fb95ed831f6559a726d0744", "sha256": "98bfab0e011d7f8b4bd389a38edbac6f19ac445f28c4dbbb7f88014d3148acab"}, "downloads": -1, "filename": "fs_ossfs-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f878d3099fb95ed831f6559a726d0744", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 11364, "upload_time": "2019-06-17T16:43:13", "upload_time_iso_8601": "2019-06-17T16:43:13.325685Z", "url": "https://files.pythonhosted.org/packages/be/67/393239bdc58a54f34c2e819461bd42437e26e86ed645a8c8711cc17cfff8/fs_ossfs-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37a451b6846e38d90d88388b31d9d84c", "sha256": "a9f02aa48e902bd5dfff1924c1092071b72961e128dd4dfed9ed33b0052a4a36"}, "downloads": -1, "filename": "fs-ossfs-1.1.1.tar.gz", "has_sig": false, "md5_digest": "37a451b6846e38d90d88388b31d9d84c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11157, "upload_time": "2019-06-17T16:42:44", "upload_time_iso_8601": "2019-06-17T16:42:44.136652Z", "url": "https://files.pythonhosted.org/packages/0d/f6/b27afa3edac3ce4e9c9bba17f5787e76a07c9db0454d72202207a51b1817/fs-ossfs-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:03 2020"}