{"info": {"author": "Mitja Pagon", "author_email": "mitja@inueni.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# django-subadmin\n\n`django-subadmin` provides a special kind of `ModelAdmin`, called `SubAdmin`, that allows it to be nested within another `ModelAdmin` instance. Similar to django's built-in `InlineModelAdmin`, it allows editing of related objects, but instead of doing it inline, it gives you a full `ModelAdmin` as sub-admin of parent `ModelAdmin`. Like `InlineModelAdmin` it works on models related by `ForeignKey`. Multiple `SubAdmin` instances can be nested within a single `ModelAdmin` or `SubAdmin` allowing for multi-level nesting.\n\n### Suported Python and Django releases\n\nCurrent release of `django-subadmin` is **2.0.0** and it supports Python 3 only and Django versions 2.0 and up (including Django 3.0).\n\nThere is also a *legacy* **1.9.3** release with support for Python 2.7 and Django versions 1.9, 1.10 and 1.11. This release is **no longer maintained and supported**, but it's made available for legacy applications.\n\n#### Verison numbering\n\ndjango-subadmin versions follow Django version numbers. django-subadmin major and minor version numbers equal the minimal compatible django release.\n\n## Installation\n\nThe easiest and recommended way to install `django-subadmin` is from [PyPI](https://pypi.python.org/pypi/django-subadmin)\n\n```\npip install django-subadmin\n```\n\nYou need to add `subadmin` to `INSTALLED_APPS` in your projects `settings.py`, otherwise `django` will not be able to find the necessary templates and template tags.\n\n```\n# settings.py\n\nINSTALLED_APPS = (\n    ...\n    'subadmin',\n    ...\n)\n```\n\n## Example Usage\n\nSometimes things are best explained by an example. Let's say you have two related models.\n\n```python\n# models.py\n\nclass MailingList(models.Model):\n    name = models.CharField(max_length=100)\n\n\nclass Subscriber(models.Model):\n    mailing_list = models.ForeignKey(MailingList)\n    username = models.CharField(max_length=100)\n```\n\nIf you wish to display only subscribers belonging to a particular mailing list in django admin, your only options is to use `InlineModelAdmin`, which is not very practical when dealing with large number of related objects, plus, you loose all the cool functionality of `ModelAdmin` like searching, filtering, pagination, etc ...\n\nThis is where `SubAdmin` comes in.\n\n```python\n# admin.py\n\nfrom subadmin import SubAdmin, RootSubAdmin\nfrom .models import MailingList, Subscriber\n\n# Instead of admin.ModelAdmin we subclass SubAdmin,\n# we also set model attribute\n\nclass SubscriberSubAdmin(SubAdmin): \n    model = Subscriber\n    list_display = ('username',)\n\n\n# Since this is the top level model admin, which will be registred with admin.site,\n# we subclass RootSubAdmin and set subadmins attribute\n\nclass MailingListAdmin(RootSubAdmin):\n    list_display = ('name',)\n\n    subadmins = [SubscriberSubAdmin]\n\n\nadmin.site.register(MailingList, MailingListAdmin)\n```\n\nWith just a few lines of code you get a fully functional `ModelAdmin`, that will automatically pull in just the relevant related objects, based on `ForeignKey` relation between the two models, it will also auto set `ForeignKey` fields for nested relations and exclude them from change form when adding and editing objects on subadmin.\n\n### Screenshots\n\n![alt text](https://github.com/inueni/django-subadmin-example/raw/master/screenshots/subadmin_screenshot_1.png?raw=true)\n\n `SubAdmin` instances are accesible from edit view of the `ModelAdmin` instance they are nested in. In the screenshot above you can see links to _Subscribers_ and _Messages_ subadmins (marked with red rectangle) for `MailingList` instance _Mailing list 5_.\n\n---\n\n![alt text](https://github.com/inueni/django-subadmin-example/raw/master/screenshots/subadmin_screenshot_2.png?raw=true)\n\n `SubAdmin` looks and behaves just like a regular `ModelAdmin`, but looking at breadcrumbs (marked with red rectangle), you can see it is nested within another `ModelAdmin`. Displayed `Subscribers` are limited to those related to `MailingList` instance _Mailing list 5_.\n\n---\n\n ![alt text](https://github.com/inueni/django-subadmin-example/raw/master/screenshots/subadmin_screenshot_3.png?raw=true)\n\nWhen adding or editing objects with `SubAdmin`, `ForeignKey` fields to parent instances are removed from the form and automatically set when saving. In this example `mailing_list` field is removed and value is set to parent `MailingList` instance _Mailing list 5_.\n\n> If you want to see it in action, or get a more in-depth look at how to set everything up, check out <https://github.com/inueni/django-subadmin-example>.\n\n\n## Stability\n\n`django-subadmin` has evolved from code that has been running on production servers since early 2014 without any issues. The code is provided **as-is** and the developers bear no responsibility for any issues stemming from it's use.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/inueni/django-subadmin/", "keywords": "django admin modeladmin foreignkey related field", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-subadmin", "package_url": "https://pypi.org/project/django-subadmin/", "platform": "", "project_url": "https://pypi.org/project/django-subadmin/", "project_urls": {"Homepage": "https://github.com/inueni/django-subadmin/"}, "release_url": "https://pypi.org/project/django-subadmin/2.0.0/", "requires_dist": null, "requires_python": ">=3", "summary": "A special kind of ModelAdmin that allows it to be nested within another ModelAdmin", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-subadmin</h1>\n<p><code>django-subadmin</code> provides a special kind of <code>ModelAdmin</code>, called <code>SubAdmin</code>, that allows it to be nested within another <code>ModelAdmin</code> instance. Similar to django's built-in <code>InlineModelAdmin</code>, it allows editing of related objects, but instead of doing it inline, it gives you a full <code>ModelAdmin</code> as sub-admin of parent <code>ModelAdmin</code>. Like <code>InlineModelAdmin</code> it works on models related by <code>ForeignKey</code>. Multiple <code>SubAdmin</code> instances can be nested within a single <code>ModelAdmin</code> or <code>SubAdmin</code> allowing for multi-level nesting.</p>\n<h3>Suported Python and Django releases</h3>\n<p>Current release of <code>django-subadmin</code> is <strong>2.0.0</strong> and it supports Python 3 only and Django versions 2.0 and up (including Django 3.0).</p>\n<p>There is also a <em>legacy</em> <strong>1.9.3</strong> release with support for Python 2.7 and Django versions 1.9, 1.10 and 1.11. This release is <strong>no longer maintained and supported</strong>, but it's made available for legacy applications.</p>\n<h4>Verison numbering</h4>\n<p>django-subadmin versions follow Django version numbers. django-subadmin major and minor version numbers equal the minimal compatible django release.</p>\n<h2>Installation</h2>\n<p>The easiest and recommended way to install <code>django-subadmin</code> is from <a href=\"https://pypi.python.org/pypi/django-subadmin\" rel=\"nofollow\">PyPI</a></p>\n<pre><code>pip install django-subadmin\n</code></pre>\n<p>You need to add <code>subadmin</code> to <code>INSTALLED_APPS</code> in your projects <code>settings.py</code>, otherwise <code>django</code> will not be able to find the necessary templates and template tags.</p>\n<pre><code># settings.py\n\nINSTALLED_APPS = (\n    ...\n    'subadmin',\n    ...\n)\n</code></pre>\n<h2>Example Usage</h2>\n<p>Sometimes things are best explained by an example. Let's say you have two related models.</p>\n<pre><span class=\"c1\"># models.py</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MailingList</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Subscriber</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">mailing_list</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">MailingList</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<p>If you wish to display only subscribers belonging to a particular mailing list in django admin, your only options is to use <code>InlineModelAdmin</code>, which is not very practical when dealing with large number of related objects, plus, you loose all the cool functionality of <code>ModelAdmin</code> like searching, filtering, pagination, etc ...</p>\n<p>This is where <code>SubAdmin</code> comes in.</p>\n<pre><span class=\"c1\"># admin.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">subadmin</span> <span class=\"kn\">import</span> <span class=\"n\">SubAdmin</span><span class=\"p\">,</span> <span class=\"n\">RootSubAdmin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">MailingList</span><span class=\"p\">,</span> <span class=\"n\">Subscriber</span>\n\n<span class=\"c1\"># Instead of admin.ModelAdmin we subclass SubAdmin,</span>\n<span class=\"c1\"># we also set model attribute</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SubscriberSubAdmin</span><span class=\"p\">(</span><span class=\"n\">SubAdmin</span><span class=\"p\">):</span> \n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Subscriber</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,)</span>\n\n\n<span class=\"c1\"># Since this is the top level model admin, which will be registred with admin.site,</span>\n<span class=\"c1\"># we subclass RootSubAdmin and set subadmins attribute</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MailingListAdmin</span><span class=\"p\">(</span><span class=\"n\">RootSubAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,)</span>\n\n    <span class=\"n\">subadmins</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">SubscriberSubAdmin</span><span class=\"p\">]</span>\n\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">MailingList</span><span class=\"p\">,</span> <span class=\"n\">MailingListAdmin</span><span class=\"p\">)</span>\n</pre>\n<p>With just a few lines of code you get a fully functional <code>ModelAdmin</code>, that will automatically pull in just the relevant related objects, based on <code>ForeignKey</code> relation between the two models, it will also auto set <code>ForeignKey</code> fields for nested relations and exclude them from change form when adding and editing objects on subadmin.</p>\n<h3>Screenshots</h3>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d52f984c32300d3abb0a2e0eb6359336aa2613a2/68747470733a2f2f6769746875622e636f6d2f696e75656e692f646a616e676f2d73756261646d696e2d6578616d706c652f7261772f6d61737465722f73637265656e73686f74732f73756261646d696e5f73637265656e73686f745f312e706e673f7261773d74727565\"></p>\n<p><code>SubAdmin</code> instances are accesible from edit view of the <code>ModelAdmin</code> instance they are nested in. In the screenshot above you can see links to <em>Subscribers</em> and <em>Messages</em> subadmins (marked with red rectangle) for <code>MailingList</code> instance <em>Mailing list 5</em>.</p>\n<hr>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4cbc3aa6c2f84a1102665fc42eddbeaa3a24c4c2/68747470733a2f2f6769746875622e636f6d2f696e75656e692f646a616e676f2d73756261646d696e2d6578616d706c652f7261772f6d61737465722f73637265656e73686f74732f73756261646d696e5f73637265656e73686f745f322e706e673f7261773d74727565\"></p>\n<p><code>SubAdmin</code> looks and behaves just like a regular <code>ModelAdmin</code>, but looking at breadcrumbs (marked with red rectangle), you can see it is nested within another <code>ModelAdmin</code>. Displayed <code>Subscribers</code> are limited to those related to <code>MailingList</code> instance <em>Mailing list 5</em>.</p>\n<hr>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/528019477e29e3a868603700f755a9d913c54881/68747470733a2f2f6769746875622e636f6d2f696e75656e692f646a616e676f2d73756261646d696e2d6578616d706c652f7261772f6d61737465722f73637265656e73686f74732f73756261646d696e5f73637265656e73686f745f332e706e673f7261773d74727565\"></p>\n<p>When adding or editing objects with <code>SubAdmin</code>, <code>ForeignKey</code> fields to parent instances are removed from the form and automatically set when saving. In this example <code>mailing_list</code> field is removed and value is set to parent <code>MailingList</code> instance <em>Mailing list 5</em>.</p>\n<blockquote>\n<p>If you want to see it in action, or get a more in-depth look at how to set everything up, check out <a href=\"https://github.com/inueni/django-subadmin-example\" rel=\"nofollow\">https://github.com/inueni/django-subadmin-example</a>.</p>\n</blockquote>\n<h2>Stability</h2>\n<p><code>django-subadmin</code> has evolved from code that has been running on production servers since early 2014 without any issues. The code is provided <strong>as-is</strong> and the developers bear no responsibility for any issues stemming from it's use.</p>\n\n          </div>"}, "last_serial": 6709668, "releases": {"1.9.0": [{"comment_text": "", "digests": {"md5": "d1b1fbba38fecb3630d0337452d465e2", "sha256": "9848abf8c2793658bd426267b78e20ffa998ab325e6e962b222aa1ded8adda80"}, "downloads": -1, "filename": "django-subadmin-1.9.0.tar.gz", "has_sig": false, "md5_digest": "d1b1fbba38fecb3630d0337452d465e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10771, "upload_time": "2017-11-13T22:44:58", "upload_time_iso_8601": "2017-11-13T22:44:58.019591Z", "url": "https://files.pythonhosted.org/packages/bc/af/ece656d6a5db59635b1a255e67ca3067a0400ca74af8231bf40b017b49b0/django-subadmin-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "3829ae9b4b34192758e2e16d6ff7b4de", "sha256": "c09052e8686811fcbc07e7739e95b8a2713aa54621dd8e04782c745c1824a0ca"}, "downloads": -1, "filename": "django-subadmin-1.9.1.tar.gz", "has_sig": false, "md5_digest": "3829ae9b4b34192758e2e16d6ff7b4de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11798, "upload_time": "2017-11-18T17:04:29", "upload_time_iso_8601": "2017-11-18T17:04:29.420752Z", "url": "https://files.pythonhosted.org/packages/a6/77/eea5c031d0127f5182ba38bc1e44d7e7cc04423063e9f52fc912986c0491/django-subadmin-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "25faff5bf7b4d019d6ae4dc4f956aa69", "sha256": "253ff740ca071aad1be2527c0100f15806dc4b75629c91096c46bade928265e7"}, "downloads": -1, "filename": "django-subadmin-1.9.2.tar.gz", "has_sig": false, "md5_digest": "25faff5bf7b4d019d6ae4dc4f956aa69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11385, "upload_time": "2017-11-21T09:09:11", "upload_time_iso_8601": "2017-11-21T09:09:11.137479Z", "url": "https://files.pythonhosted.org/packages/5b/1b/c3d086868f9d1920b54d7a2a678a070b1a8a1b28a73943ddf35a57317788/django-subadmin-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "a0cbf8ed40eabfe6ea329aa577adb362", "sha256": "a7a080e8d06344ef709658818fc3e8712fa4ec52ff8ca94aa4f08934a2537672"}, "downloads": -1, "filename": "django_subadmin-1.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a0cbf8ed40eabfe6ea329aa577adb362", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">2.6, <3.0", "size": 13745, "upload_time": "2020-02-27T08:22:36", "upload_time_iso_8601": "2020-02-27T08:22:36.072821Z", "url": "https://files.pythonhosted.org/packages/bc/19/82fc2564674fba59cd87239668cdf84ffa06a70fa02a4b91247aea1530cb/django_subadmin-1.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45d4f6afceca12e91f9dbf2f5039cc6b", "sha256": "0e764a5103d9e6ce8193e086df3dab7a4b12abd5335abd04d82e6b9cadcf1441"}, "downloads": -1, "filename": "django-subadmin-1.9.3.tar.gz", "has_sig": false, "md5_digest": "45d4f6afceca12e91f9dbf2f5039cc6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">2.6, <3.0", "size": 11077, "upload_time": "2020-02-27T08:22:37", "upload_time_iso_8601": "2020-02-27T08:22:37.538298Z", "url": "https://files.pythonhosted.org/packages/18/8b/ef8e86c98dac42fd2207ea8b555fe72675709c1892dd6566900fdb323a14/django-subadmin-1.9.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "5531fbe80eb2ac58d4dd4ab577129e8c", "sha256": "39e03def06bce929325011d4d934c868789985ebe74a88f1e3ddf7852504deba"}, "downloads": -1, "filename": "django_subadmin-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5531fbe80eb2ac58d4dd4ab577129e8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 13088, "upload_time": "2020-02-27T08:32:04", "upload_time_iso_8601": "2020-02-27T08:32:04.760130Z", "url": "https://files.pythonhosted.org/packages/a7/28/4e1b0888a706cf4d7d5471107ab9232d4fe39b663cf676011570e8557540/django_subadmin-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81029e6ee6772bfdf5217e3a35ce7252", "sha256": "98bffc6eaafa68afe5e8e14c866987b0e50599f3115d91cb1ce15bb2ca2faceb"}, "downloads": -1, "filename": "django-subadmin-2.0.0.tar.gz", "has_sig": false, "md5_digest": "81029e6ee6772bfdf5217e3a35ce7252", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10463, "upload_time": "2020-02-27T08:32:06", "upload_time_iso_8601": "2020-02-27T08:32:06.495841Z", "url": "https://files.pythonhosted.org/packages/ba/2f/083cef04ac34b7de444ceaa73cb3013fe01a7268df7b62a7e32dff682b2d/django-subadmin-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5531fbe80eb2ac58d4dd4ab577129e8c", "sha256": "39e03def06bce929325011d4d934c868789985ebe74a88f1e3ddf7852504deba"}, "downloads": -1, "filename": "django_subadmin-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5531fbe80eb2ac58d4dd4ab577129e8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 13088, "upload_time": "2020-02-27T08:32:04", "upload_time_iso_8601": "2020-02-27T08:32:04.760130Z", "url": "https://files.pythonhosted.org/packages/a7/28/4e1b0888a706cf4d7d5471107ab9232d4fe39b663cf676011570e8557540/django_subadmin-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81029e6ee6772bfdf5217e3a35ce7252", "sha256": "98bffc6eaafa68afe5e8e14c866987b0e50599f3115d91cb1ce15bb2ca2faceb"}, "downloads": -1, "filename": "django-subadmin-2.0.0.tar.gz", "has_sig": false, "md5_digest": "81029e6ee6772bfdf5217e3a35ce7252", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10463, "upload_time": "2020-02-27T08:32:06", "upload_time_iso_8601": "2020-02-27T08:32:06.495841Z", "url": "https://files.pythonhosted.org/packages/ba/2f/083cef04ac34b7de444ceaa73cb3013fe01a7268df7b62a7e32dff682b2d/django-subadmin-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:50 2020"}