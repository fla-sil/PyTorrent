{"info": {"author": "leo", "author_email": "liupgd@foxmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries"], "description": "RPC based on rabbitmq, cloned from [here](https://github.com/MidTin/rabbit-rpc)\n\n### How To Use\nThe orignal code can just be runned in console and has problems in windows(Server side). So I modified some code. \nNow, the server side supports both pika.BlockConnection and pika.SelectionConnection. \nIn BlockConnection mode, the server side can only be runned in single thread. In SelectionConnection mode, \nthe server can be runned in multi-threads(Not in windows).\n\n* Install:\n```buildoutcfg\npip install rabbitmq-rpc\n```\n\n* Usage:  \n1.Create rabbitmq account in your rabbitmq server.  \n2.Run server.py first and then run client.py\n\n\n* Server.py\n\n```python  \nfrom rabbitmq_rpc import server as Server\nserver = Server.RPCServer(queue_name='default',\n                          amqp_url = \"amqp://yourname:yourpasswd@10.147.17.135:5672/\",\n                          threaded=False)\n\n@server.consumer()\ndef add(a, b):\n    return a+b\n\nif __name__ == '__main__':\n    server.run()\n\n```\n* Client.py\n\n```python\nfrom rabbitmq_rpc.client import RPCClient\nimport time\n\ndef add(i):\n    t1 = time.time()\n    client = RPCClient(amqp_url='amqp://yourname:yourpasswd@10.147.17.135:5672/')\n    res = client.call_add(0, i)\n    t2= time.time()\n    print(f\"{0} + {i} = {res} RPC Time Cost: {t2-t1:.2f}\")\n    return res\n\nfor i in range(300):\n    obj = add(i)\n\n```\n* Client with flask: client_with_flask.py\n\n```python\nfrom rabbitmq_rpc.client import RPCClient\nimport flask\nweb = flask.Flask(__name__)\nweb.debug = True\nimport time\n\ndef add(i):\n    t1 = time.time()\n    client = RPCClient(amqp_url='amqp://yourname:yourpasswd@10.147.17.135:5672/')\n    res = client.call_add(0, i)\n    t2= time.time()\n    print(f\"{0} + {i} = {res} RPC Time Cost: {t2-t1:.2f}\")\n    return res\n\n@web.route('/web/<n>')\ndef test_web(n):\n    res = add(int(n))\n    return str(res)\nif __name__ == '__main__':\n    # Notice, In default, flask enabled threading. \n    # If single-thread is needed, pass in 'threaded=False' option\n    web.run(host = '0.0.0.0', use_reloader = False)\n```\n\n*Note: **RPCClient** is not thread-safe. This is because pika is not thread-safe. \nSo, create a RPCClient object only in one thread. DO NOT use it in multi-threads. *\n\n### Original [README](https://github.com/MidTin/rabbit-rpc)\n*Note: replace rabbit_rpc with rabbitmq_rpc*\n\n    ==========\n    Rabbit RPC \n    ==========\n    \n    \u7b80\u8ff0\n    ----\n    \n    \u8fd9\u662f\u5bf9 RabbitMQ \u7684 Pika_ \u5e93\u8fdb\u884c\u5c01\u88c5\u7684\uff0c\u4e00\u5957\u7b80\u6613 RPC \u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u5e93\u3002\n    \n    \n    \u5b89\u88c5\u8bf4\u660e\n    --------\n    \n    ::\n    \n        pip install rabbit-rpc\n        \n    \n    \n    \u4f7f\u7528\u4e8b\u4f8b\n    --------\n    \n    \u670d\u52a1\u7aef\n    ~~~~~~\n    \n    ::\n    \n        # project/consumers.py\n    \n        from rabbit_rpc.consumer import consumer\n    \n        @consumer(name='add')\n        def add(a, b):\n            return a + b\n    \n    \n        # project shell\n        rabbit_rpc worker --amqp 'amqp://guest:guest@localhost:5672/'\n    \n    \n        # with django\n    \n        rabbit_rpc worker --amqp 'amqp://guest:guest@localhost:5672/' --django project\n        \n    \n    \n    \u5ba2\u6237\u7aef\n    ~~~~~~\n    \n    ::\n        \n        from rabbit_rpc.client import RPCClient\n    \n        client = RPCClient(amqp_url='amqp://guest:guest@localhost:5672/')\n        ret = client.call_add(1, 1, timeout=1)\n    \n        # or ignore result\n        client.call_add(1, 1, ignore_result=True)\n    \n        # specify routing_key\n        client.call_add(1, 1, routing_key='default')\n    \n    \n    .. _Pika: https://github.com/pika/pika", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/liupgd/rabbitmq_rpc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rabbitmq-rpc", "package_url": "https://pypi.org/project/rabbitmq-rpc/", "platform": "any", "project_url": "https://pypi.org/project/rabbitmq-rpc/", "project_urls": {"Homepage": "https://github.com/liupgd/rabbitmq_rpc"}, "release_url": "https://pypi.org/project/rabbitmq-rpc/0.1.9/", "requires_dist": null, "requires_python": "", "summary": "A modified rabbit-rpc of https://github.com/MidTin/rabbit-rpc", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>RPC based on rabbitmq, cloned from <a href=\"https://github.com/MidTin/rabbit-rpc\" rel=\"nofollow\">here</a></p>\n<h3>How To Use</h3>\n<p>The orignal code can just be runned in console and has problems in windows(Server side). So I modified some code.\nNow, the server side supports both pika.BlockConnection and pika.SelectionConnection.\nIn BlockConnection mode, the server side can only be runned in single thread. In SelectionConnection mode,\nthe server can be runned in multi-threads(Not in windows).</p>\n<ul>\n<li>Install:</li>\n</ul>\n<pre>pip install rabbitmq-rpc\n</pre>\n<ul>\n<li>\n<p>Usage:<br>\n1.Create rabbitmq account in your rabbitmq server.<br>\n2.Run server.py first and then run client.py</p>\n</li>\n<li>\n<p>Server.py</p>\n</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rabbitmq_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">server</span> <span class=\"k\">as</span> <span class=\"n\">Server</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"o\">.</span><span class=\"n\">RPCServer</span><span class=\"p\">(</span><span class=\"n\">queue_name</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">,</span>\n                          <span class=\"n\">amqp_url</span> <span class=\"o\">=</span> <span class=\"s2\">\"amqp://yourname:yourpasswd@10.147.17.135:5672/\"</span><span class=\"p\">,</span>\n                          <span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">consumer</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Client.py</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rabbitmq_rpc.client</span> <span class=\"kn\">import</span> <span class=\"n\">RPCClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">):</span>\n    <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">RPCClient</span><span class=\"p\">(</span><span class=\"n\">amqp_url</span><span class=\"o\">=</span><span class=\"s1\">'amqp://yourname:yourpasswd@10.147.17.135:5672/'</span><span class=\"p\">)</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call_add</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">t2</span><span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"mi\">0</span><span class=\"si\">}</span><span class=\"s2\"> + </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> = </span><span class=\"si\">{</span><span class=\"n\">res</span><span class=\"si\">}</span><span class=\"s2\"> RPC Time Cost: </span><span class=\"si\">{</span><span class=\"n\">t2</span><span class=\"o\">-</span><span class=\"n\">t1</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">res</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">):</span>\n    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Client with flask: client_with_flask.py</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rabbitmq_rpc.client</span> <span class=\"kn\">import</span> <span class=\"n\">RPCClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"n\">web</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">):</span>\n    <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">RPCClient</span><span class=\"p\">(</span><span class=\"n\">amqp_url</span><span class=\"o\">=</span><span class=\"s1\">'amqp://yourname:yourpasswd@10.147.17.135:5672/'</span><span class=\"p\">)</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call_add</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">t2</span><span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"mi\">0</span><span class=\"si\">}</span><span class=\"s2\"> + </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> = </span><span class=\"si\">{</span><span class=\"n\">res</span><span class=\"si\">}</span><span class=\"s2\"> RPC Time Cost: </span><span class=\"si\">{</span><span class=\"n\">t2</span><span class=\"o\">-</span><span class=\"n\">t1</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">res</span>\n\n<span class=\"nd\">@web</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/web/&lt;n&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_web</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Notice, In default, flask enabled threading. </span>\n    <span class=\"c1\"># If single-thread is needed, pass in 'threaded=False' option</span>\n    <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">use_reloader</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>*Note: <strong>RPCClient</strong> is not thread-safe. This is because pika is not thread-safe.\nSo, create a RPCClient object only in one thread. DO NOT use it in multi-threads. *</p>\n<h3>Original <a href=\"https://github.com/MidTin/rabbit-rpc\" rel=\"nofollow\">README</a></h3>\n<p><em>Note: replace rabbit_rpc with rabbitmq_rpc</em></p>\n<pre><code>==========\nRabbit RPC \n==========\n\n\u7b80\u8ff0\n----\n\n\u8fd9\u662f\u5bf9 RabbitMQ \u7684 Pika_ \u5e93\u8fdb\u884c\u5c01\u88c5\u7684\uff0c\u4e00\u5957\u7b80\u6613 RPC \u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u5e93\u3002\n\n\n\u5b89\u88c5\u8bf4\u660e\n--------\n\n::\n\n    pip install rabbit-rpc\n    \n\n\n\u4f7f\u7528\u4e8b\u4f8b\n--------\n\n\u670d\u52a1\u7aef\n~~~~~~\n\n::\n\n    # project/consumers.py\n\n    from rabbit_rpc.consumer import consumer\n\n    @consumer(name='add')\n    def add(a, b):\n        return a + b\n\n\n    # project shell\n    rabbit_rpc worker --amqp 'amqp://guest:guest@localhost:5672/'\n\n\n    # with django\n\n    rabbit_rpc worker --amqp 'amqp://guest:guest@localhost:5672/' --django project\n    \n\n\n\u5ba2\u6237\u7aef\n~~~~~~\n\n::\n    \n    from rabbit_rpc.client import RPCClient\n\n    client = RPCClient(amqp_url='amqp://guest:guest@localhost:5672/')\n    ret = client.call_add(1, 1, timeout=1)\n\n    # or ignore result\n    client.call_add(1, 1, ignore_result=True)\n\n    # specify routing_key\n    client.call_add(1, 1, routing_key='default')\n\n\n.. _Pika: https://github.com/pika/pika\n</code></pre>\n\n          </div>"}, "last_serial": 7134236, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "29af45e21442df0f04adf8ffe250ddef", "sha256": "42543020e56151ece7119d6e04e5ae4eb64c83fdb9aa061a2cde7c50dd75c823"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "29af45e21442df0f04adf8ffe250ddef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15011, "upload_time": "2020-04-02T04:10:14", "upload_time_iso_8601": "2020-04-02T04:10:14.027053Z", "url": "https://files.pythonhosted.org/packages/61/49/718a97d581d75753264144bb2c1f10a844f5f2f13004fd8f7730585cb725/rabbitmq-rpc-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2175e31697acba5489306ae216c0e1e3", "sha256": "f32ed3b712aa24d777ca09e23c914a89c62eb25885882e16dfce99ee90db79a6"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2175e31697acba5489306ae216c0e1e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15322, "upload_time": "2020-04-16T12:06:39", "upload_time_iso_8601": "2020-04-16T12:06:39.736235Z", "url": "https://files.pythonhosted.org/packages/41/7c/04b1e3db07baff9188179941ce7750e84cc0c9d7b6641f13295175e0a24b/rabbitmq-rpc-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a7c451dfd3a700c5e8b85dcb3516f60c", "sha256": "f8a62a28a7db4a690fffc1a43d2696c97ad4e58b2c7ced9092b7117308ca5653"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a7c451dfd3a700c5e8b85dcb3516f60c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15703, "upload_time": "2020-04-17T02:29:29", "upload_time_iso_8601": "2020-04-17T02:29:29.891097Z", "url": "https://files.pythonhosted.org/packages/76/85/4118795d6141053a60e687802f2168141dd3ed30151f69c23b6d1b578085/rabbitmq-rpc-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0afdf459e1435c4789c4c05ed4ffdbfe", "sha256": "c8899766b258010d23516981248ceb7fd55305d25c8ff042c9090423792c0d0d"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0afdf459e1435c4789c4c05ed4ffdbfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15722, "upload_time": "2020-04-17T03:05:15", "upload_time_iso_8601": "2020-04-17T03:05:15.864618Z", "url": "https://files.pythonhosted.org/packages/12/d5/bae4f6ecf0900951a52ea2184f2cf0cf8dd23e1eed5fbad3ac9c3a63f4a5/rabbitmq-rpc-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "64ae3a0b628327b6609e0914af0e7a70", "sha256": "61675b4a4a60dd66d350de7d3d9618e3a21da608e7b9fee40e9cdd6cb309dbeb"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.4.tar.gz", "has_sig": false, "md5_digest": "64ae3a0b628327b6609e0914af0e7a70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15775, "upload_time": "2020-04-17T03:23:02", "upload_time_iso_8601": "2020-04-17T03:23:02.168239Z", "url": "https://files.pythonhosted.org/packages/3e/f4/704afaf671df881dc0edd8a1c9664a2cf6a92a63fe1a294e36f33884ddaf/rabbitmq-rpc-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "ea2efcc23f0db2cf8375d01ab523d625", "sha256": "c11b8d3e11f1de26995ec86f48b3877b6b7c83d222d0d7177ff0073be82737b3"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.5.tar.gz", "has_sig": false, "md5_digest": "ea2efcc23f0db2cf8375d01ab523d625", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15822, "upload_time": "2020-04-18T04:40:21", "upload_time_iso_8601": "2020-04-18T04:40:21.387836Z", "url": "https://files.pythonhosted.org/packages/20/31/4481762d6692207aa8e9f53b631af606f8949c72d48a30b7444556f420fd/rabbitmq-rpc-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "ff06badd8ba15c43be09ab7449d56609", "sha256": "b9c2f4c6a7edb8a1b53102eca8e5c0fcfa08f76490b700b37942494d99001284"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ff06badd8ba15c43be09ab7449d56609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15832, "upload_time": "2020-04-18T05:51:51", "upload_time_iso_8601": "2020-04-18T05:51:51.817769Z", "url": "https://files.pythonhosted.org/packages/1c/d1/ccdce16ff6e44d8173e652d66cb92f3bb2386eac5c0f891b06d2806267e0/rabbitmq-rpc-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e833a1b6f9e83e139ab91e9cb2f86c52", "sha256": "da83e0efd909923c1fc8de80b01e4cc08dbe5ce45a5dcd2ffed95a30a75581b9"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e833a1b6f9e83e139ab91e9cb2f86c52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15824, "upload_time": "2020-04-24T11:27:43", "upload_time_iso_8601": "2020-04-24T11:27:43.471254Z", "url": "https://files.pythonhosted.org/packages/03/2f/8f3450930ca84522b251100f185373a0b8cde230a5dca614b5aebf7c0133/rabbitmq-rpc-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "a4fcc2e42d6cd65a50fe2a4d6d6d37a4", "sha256": "d5e92cce3d8e8143d930b731dbf54232de6b773a656d8cffa4412ef641161e3f"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.8.tar.gz", "has_sig": false, "md5_digest": "a4fcc2e42d6cd65a50fe2a4d6d6d37a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15880, "upload_time": "2020-04-26T09:54:13", "upload_time_iso_8601": "2020-04-26T09:54:13.431166Z", "url": "https://files.pythonhosted.org/packages/64/00/d956a88b711b573af7722215cab724cf3b2d675be5002134a6138725724f/rabbitmq-rpc-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "a048ecaaca1c759ddaa9ca683ecae320", "sha256": "72f85f652f265763edd9bcfa4c232bafef4bc8a41d9004bf8e454d38770422b8"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.9.tar.gz", "has_sig": false, "md5_digest": "a048ecaaca1c759ddaa9ca683ecae320", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16016, "upload_time": "2020-04-30T01:42:20", "upload_time_iso_8601": "2020-04-30T01:42:20.849408Z", "url": "https://files.pythonhosted.org/packages/9c/c6/57551be3ffe0f50a82fea7966b6a4b246468d957bb3a441356218bf89f8a/rabbitmq-rpc-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a048ecaaca1c759ddaa9ca683ecae320", "sha256": "72f85f652f265763edd9bcfa4c232bafef4bc8a41d9004bf8e454d38770422b8"}, "downloads": -1, "filename": "rabbitmq-rpc-0.1.9.tar.gz", "has_sig": false, "md5_digest": "a048ecaaca1c759ddaa9ca683ecae320", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16016, "upload_time": "2020-04-30T01:42:20", "upload_time_iso_8601": "2020-04-30T01:42:20.849408Z", "url": "https://files.pythonhosted.org/packages/9c/c6/57551be3ffe0f50a82fea7966b6a4b246468d957bb3a441356218bf89f8a/rabbitmq-rpc-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:08 2020"}