{"info": {"author": "Enrico Carlesso", "author_email": "enricocarlesso@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# i3minator\n\ni3minator is a simple \"workspace manager\" for i3.\nIt allows to quickly manage workspaces defining windows and their layout.\nThe project is inspired by [tmuxinator](https://github.com/aziz/tmuxinator) and uses [i3-py](https://github.com/ziberna/i3-py).\n\n# Install\n\ni3minator can be installed with pip\n\n```shell\n$ sudo pip install i3minator\n```\n\n# Project description\n\nAll project file are stored in `~/.i3minator/` and are in yaml format.\nAn example:\n\n```yaml\n# /home/carlesso/.i3minator/default.yml\n\n# The Name of the project\nname: default\n\n# If needes, where the project lives. If present, all terminal will be opened here\n# and all commands are relative to this path.\nroot: ~/projects/my_project/\n\n# The name of the workspace to open the project.\n# If not present, current workspace is used\nworkspace_name: MyProject\n\n# Chain of commands to populate workspace.\n# Every element can be either a node (see below), or a command between:\n#   go_vertical, vertical, v:      change split mode into vertical\n#   go_horizontal, horizontal, h:  change split mode into vertical\n#   go_stacked, stacked:           set the layout to stacked\n#\n# Example for a rails application:\nwindow_chain:\n  - gvim\n  - console\n  - go_vertical\n  - server\n  - logs\n\n# Nodes. Each node represent a window. The available parameters are:\n#   command:  the command to execute\n#   terminal: whatever the command should be run in a terminal window\n#   timeout:  A window can take a while to be placed, if your layout does not come as you want,\n#             inceremnt the timeout for slow windows. default: 0.1\nnodes:\n    gvim:\n        terminal: false\n        command: gvim .\n        timeout: 0.3\n    console:\n        terminal: true\n        command: bundle exec rails c\n    server:\n        terminal: true\n        command: bundle exec rails s\n    logs:\n        terminal: true\n        command: tailf log/development.log\n```\n\n# List of commands\n\ni3minator supports the following commands:\n\n```\ni3minator commands:\n    i3minator commands                  # Lists commands available in i3minator\n    i3minator copy [EXISTING] [NEW]     # Copy an existing project to a new project and open it in your editor\n    i3minator edit [PROJECT]            # Edit given project\n    i3minator delete [PROJECT]          # Deletes given project\n    i3minator impolode                  # Delete all i3minator project, as well as the ~/.i3minator folder\n    i3minator list                      # List all i3minator projects\n    i3minator new [PROJECT]             # Create a new project and open in your text editor\n    i3minator start [PROJECT]           # Start a i3minator project\n    i3minator version                   # Display installed i3minator version\n```\n\n# Terminal and Editor\n\nBoth Terminal and Editor are read from shell's defaults:\n\n```bash\necho $TERM\necho $SHELL\n```\n\nRight now has been tested only with xterm and zsh\n\n# Timeouting node spawn\nSome windows may take more time to be insert in the workspace. If you experience this, and yout layout get messed up, try to play with `timeout` value in the node.\n\n# About\nAuthor: Enrico Carlesso\nLicense: [WTFPL](http://www.wtfpl.net/about/)\n\nThanks:\n\n - [i3 window manager](http://i3wm.org/) and its author Michael Stapelberg\n - [i3-py](https://github.com/ziberna/i3-py)and its author Jure \u017diberna\n\ni3minator was tested with Python 3.3.2\n\nDependencies:\n\n- i3-wm\n- i3-py\n- Python", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/carlesso/i3minator", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "i3minator", "package_url": "https://pypi.org/project/i3minator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/i3minator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/carlesso/i3minator"}, "release_url": "https://pypi.org/project/i3minator/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "i3 project manager similar to tmuxinator", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # i3minator<br><br>i3minator is a simple \"workspace manager\" for i3.<br>It allows to quickly manage workspaces defining windows and their layout.<br>The project is inspired by [tmuxinator](https://github.com/aziz/tmuxinator) and uses [i3-py](https://github.com/ziberna/i3-py).<br><br># Install<br><br>i3minator can be installed with pip<br><br>```shell<br>$ sudo pip install i3minator<br>```<br><br># Project description<br><br>All project file are stored in `~/.i3minator/` and are in yaml format.<br>An example:<br><br>```yaml<br># /home/carlesso/.i3minator/default.yml<br><br># The Name of the project<br>name: default<br><br># If needes, where the project lives. If present, all terminal will be opened here<br># and all commands are relative to this path.<br>root: ~/projects/my_project/<br><br># The name of the workspace to open the project.<br># If not present, current workspace is used<br>workspace_name: MyProject<br><br># Chain of commands to populate workspace.<br># Every element can be either a node (see below), or a command between:<br>#   go_vertical, vertical, v:      change split mode into vertical<br>#   go_horizontal, horizontal, h:  change split mode into vertical<br>#   go_stacked, stacked:           set the layout to stacked<br>#<br># Example for a rails application:<br>window_chain:<br>  - gvim<br>  - console<br>  - go_vertical<br>  - server<br>  - logs<br><br># Nodes. Each node represent a window. The available parameters are:<br>#   command:  the command to execute<br>#   terminal: whatever the command should be run in a terminal window<br>#   timeout:  A window can take a while to be placed, if your layout does not come as you want,<br>#             inceremnt the timeout for slow windows. default: 0.1<br>nodes:<br>    gvim:<br>        terminal: false<br>        command: gvim .<br>        timeout: 0.3<br>    console:<br>        terminal: true<br>        command: bundle exec rails c<br>    server:<br>        terminal: true<br>        command: bundle exec rails s<br>    logs:<br>        terminal: true<br>        command: tailf log/development.log<br>```<br><br># List of commands<br><br>i3minator supports the following commands:<br><br>```<br>i3minator commands:<br>    i3minator commands                  # Lists commands available in i3minator<br>    i3minator copy [EXISTING] [NEW]     # Copy an existing project to a new project and open it in your editor<br>    i3minator edit [PROJECT]            # Edit given project<br>    i3minator delete [PROJECT]          # Deletes given project<br>    i3minator impolode                  # Delete all i3minator project, as well as the ~/.i3minator folder<br>    i3minator list                      # List all i3minator projects<br>    i3minator new [PROJECT]             # Create a new project and open in your text editor<br>    i3minator start [PROJECT]           # Start a i3minator project<br>    i3minator version                   # Display installed i3minator version<br>```<br><br># Terminal and Editor<br><br>Both Terminal and Editor are read from shell's defaults:<br><br>```bash<br>echo $TERM<br>echo $SHELL<br>```<br><br>Right now has been tested only with xterm and zsh<br><br># Timeouting node spawn<br>Some windows may take more time to be insert in the workspace. If you experience this, and yout layout get messed up, try to play with `timeout` value in the node.<br><br># About<br>Author: Enrico Carlesso<br>License: [WTFPL](http://www.wtfpl.net/about/)<br><br>Thanks:<br><br> - [i3 window manager](http://i3wm.org/) and its author Michael Stapelberg<br> - [i3-py](https://github.com/ziberna/i3-py)and its author Jure \u017diberna<br><br>i3minator was tested with Python 3.3.2<br><br>Dependencies:<br><br>- i3-wm<br>- i3-py<br>- Python\n          </div>"}, "last_serial": 1009182, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "30aedfdb9d8759e6292b5162c7829544", "sha256": "f50dc382d314a8f4753e1093dec0ba5ab01751d6b81801d938c0460c5e18c5df"}, "downloads": -1, "filename": "i3minator-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30aedfdb9d8759e6292b5162c7829544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3805, "upload_time": "2013-10-06T00:53:01", "upload_time_iso_8601": "2013-10-06T00:53:01.780818Z", "url": "https://files.pythonhosted.org/packages/eb/76/ab880c932fd0f2d42fe0733f6ebc2fa4f38ce0855c937ca858c9e05defe9/i3minator-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3ac3f7fa27797eea2efc5cb7aa9d70a8", "sha256": "383637713f5911f624d178e75d97282e0605ab13192d8c31a9670d087cc5d2d4"}, "downloads": -1, "filename": "i3minator-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3ac3f7fa27797eea2efc5cb7aa9d70a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5143, "upload_time": "2013-10-06T14:01:51", "upload_time_iso_8601": "2013-10-06T14:01:51.919811Z", "url": "https://files.pythonhosted.org/packages/ce/dc/34861b0e7737de4365bbb153ac36718b253548a5e6aa0d2153ed34c3aad8/i3minator-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "612b3cb2d23990c329b7fa13e0505740", "sha256": "cc0c880226bd0a4512234b5c1caa5a819fa195d3ac907451a407d572ba39c543"}, "downloads": -1, "filename": "i3minator-0.0.3.tar.gz", "has_sig": false, "md5_digest": "612b3cb2d23990c329b7fa13e0505740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5232, "upload_time": "2013-10-07T19:55:39", "upload_time_iso_8601": "2013-10-07T19:55:39.226659Z", "url": "https://files.pythonhosted.org/packages/ea/40/cd0f26e00367b6d9d9f2e300c7ef3ba579d90cf8c0e027affd20193f554d/i3minator-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5163b299f24d2456c5a531e47e73b9e8", "sha256": "6a52f6774806657e986a0678dc3519161c6a92d9aa6d244b8e5532251a96c64c"}, "downloads": -1, "filename": "i3minator-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5163b299f24d2456c5a531e47e73b9e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5300, "upload_time": "2014-02-23T14:38:57", "upload_time_iso_8601": "2014-02-23T14:38:57.954304Z", "url": "https://files.pythonhosted.org/packages/6f/6c/4f3e00b4c0003552f434280c3057f2835c70f460d7c14070798b54d6c0c1/i3minator-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5163b299f24d2456c5a531e47e73b9e8", "sha256": "6a52f6774806657e986a0678dc3519161c6a92d9aa6d244b8e5532251a96c64c"}, "downloads": -1, "filename": "i3minator-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5163b299f24d2456c5a531e47e73b9e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5300, "upload_time": "2014-02-23T14:38:57", "upload_time_iso_8601": "2014-02-23T14:38:57.954304Z", "url": "https://files.pythonhosted.org/packages/6f/6c/4f3e00b4c0003552f434280c3057f2835c70f460d7c14070798b54d6c0c1/i3minator-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:21 2020"}