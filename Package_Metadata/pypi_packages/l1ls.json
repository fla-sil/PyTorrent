{"info": {"author": "Utkarsh Upadhyay", "author_email": "musically.ut@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "l1-ls\n=====\n\n|BuildStatus|\n\nThis is a large scale L1 regularized Least Square (L1-LS) solver written in\nPython. The code is based on the MATLAB code made available on `Stephen Boyd's l1_ls page <http://stanford.edu/~boyd/papers/l1_ls.html>`_.\n\n|L1LSProblem|\n\n\nInstallation\n------------\n\nYou can install the bleeding edge directly from the source:\n\n::\n\n    pip install git+https://github.com/musically-ut/l1-ls.py.git@master#egg=l1ls\n\n\nThis package is also available on `PyPi <https://pypi.python.org/pypi/l1ls>`_.\n\n::\n\n    pip install l1ls\n\nUsage\n-----\n\nThe module exposes two functions:\n\n- ``l1ls(A, y, lmbda, x0=None, At=None, m=None, n=None, tar_gap=1e-3, quiet=False, eta=1e-3, pcgmaxi=5000)``, and,\n- ``l1ls_nonneg(A, y, lmbda, x0=None, At=None, m=None, n=None, tar_gap=1e-3, quiet=False, eta=1e-3, pcgmaxi=5000)``\n\nThey can be used as follows:\n\n::\n\n    import l1ls as L\n    import numpy as np\n\n    A = np.array([[1, 0, 0, 0.5], [0, 1, 0.2, 0.3], [0, 0.1, 1, 0.2]])\n    x0 = np.array([1, 0, 1, 0], dtype='f8')  # Original signal\n    y = A.dot(x0)                            # noise free signal\n    lmbda = 0.01                             # regularization parameter\n    rel_tol = 0.01\n\n    [x, status, hist] = L.l1ls(A, y, lmbda, tar_gap=rel_tol)\n    # answer_x = np.array([0.993010, 0.00039478, 0.994096, 0.00403702])\n\nIf your matrix ``A`` is sparse, pass it in `CSR format <http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html>`_\nformat for best performance.\n\nReference\n---------\n\n- S.-J. Kim, K. Koh, M. Lustig, S. Boyd, and D. Gorinevsky. An\n  Interior-Point Method for Large-Scale l1-Regularized Least Squares,\n  (2007), IEEE Journal on Selected Topics in Signal Processing,\n  1(4):606-617.\n\n.. |BuildStatus| image:: https://travis-ci.org/musically-ut/l1-ls.py.svg?branch=master\n   :target: https://travis-ci.org/musically-ut/l1-ls.py\n\n.. |L1LSProblem| image:: http://i.imgur.com/YB8JDTX.gif", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/musically-ut/l1-ls.py", "keywords": "L1 least-squares optimization", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "l1ls", "package_url": "https://pypi.org/project/l1ls/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/l1ls/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/musically-ut/l1-ls.py"}, "release_url": "https://pypi.org/project/l1ls/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Python package for solving large scale L1 regularizedleast squares problems.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/musically-ut/l1-ls.py\" rel=\"nofollow\"><img alt=\"BuildStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ea0112702e39a008f5ff7c6b46ba34385d9c81c/68747470733a2f2f7472617669732d63692e6f72672f6d75736963616c6c792d75742f6c312d6c732e70792e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This is a large scale L1 regularized Least Square (L1-LS) solver written in\nPython. The code is based on the MATLAB code made available on <a href=\"http://stanford.edu/~boyd/papers/l1_ls.html\" rel=\"nofollow\">Stephen Boyd\u2019s l1_ls page</a>.</p>\n<p><img alt=\"L1LSProblem\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0357a636f4622a8a7eaa8ddeffd703a19b42bcc/687474703a2f2f692e696d6775722e636f6d2f5942384a4454582e676966\"></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install the bleeding edge directly from the source:</p>\n<pre>pip install git+https://github.com/musically-ut/l1-ls.py.git@master#egg=l1ls\n</pre>\n<p>This package is also available on <a href=\"https://pypi.python.org/pypi/l1ls\" rel=\"nofollow\">PyPi</a>.</p>\n<pre>pip install l1ls\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The module exposes two functions:</p>\n<ul>\n<li><tt>l1ls(A, y, lmbda, x0=None, At=None, m=None, n=None, <span class=\"pre\">tar_gap=1e-3,</span> quiet=False, <span class=\"pre\">eta=1e-3,</span> pcgmaxi=5000)</tt>, and,</li>\n<li><tt>l1ls_nonneg(A, y, lmbda, x0=None, At=None, m=None, n=None, <span class=\"pre\">tar_gap=1e-3,</span> quiet=False, <span class=\"pre\">eta=1e-3,</span> pcgmaxi=5000)</tt></li>\n</ul>\n<p>They can be used as follows:</p>\n<pre>import l1ls as L\nimport numpy as np\n\nA = np.array([[1, 0, 0, 0.5], [0, 1, 0.2, 0.3], [0, 0.1, 1, 0.2]])\nx0 = np.array([1, 0, 1, 0], dtype='f8')  # Original signal\ny = A.dot(x0)                            # noise free signal\nlmbda = 0.01                             # regularization parameter\nrel_tol = 0.01\n\n[x, status, hist] = L.l1ls(A, y, lmbda, tar_gap=rel_tol)\n# answer_x = np.array([0.993010, 0.00039478, 0.994096, 0.00403702])\n</pre>\n<p>If your matrix <tt>A</tt> is sparse, pass it in <a href=\"http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csr_matrix.html\" rel=\"nofollow\">CSR format</a>\nformat for best performance.</p>\n</div>\n<div id=\"reference\">\n<h2>Reference</h2>\n<ul>\n<li>S.-J. Kim, K. Koh, M. Lustig, S. Boyd, and D. Gorinevsky. An\nInterior-Point Method for Large-Scale l1-Regularized Least Squares,\n(2007), IEEE Journal on Selected Topics in Signal Processing,\n1(4):606-617.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1921700, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c8b40efd81e0ef0694f7cdd69c55f877", "sha256": "303ca6243690812f16a8b3da6112396340e423b135fcf887fdeea73c06cfd5c4"}, "downloads": -1, "filename": "l1ls-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c8b40efd81e0ef0694f7cdd69c55f877", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8342, "upload_time": "2015-08-16T12:23:22", "upload_time_iso_8601": "2015-08-16T12:23:22.547644Z", "url": "https://files.pythonhosted.org/packages/3a/7d/63d8c2d46da02dc4626591dbc2638fccec678b21e4813408729451ed3967/l1ls-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ddc01bedfc8b2c0bbf1a8f349fa2979c", "sha256": "e2a98f7234cdf758fa633440fc0dbd577f3d33b5cbf8b8bb4ea886c467fa468c"}, "downloads": -1, "filename": "l1ls-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ddc01bedfc8b2c0bbf1a8f349fa2979c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8631, "upload_time": "2015-08-18T21:26:01", "upload_time_iso_8601": "2015-08-18T21:26:01.662353Z", "url": "https://files.pythonhosted.org/packages/8b/3b/2d9870f35011f6f4c140e4274c0fa34e5e16c0c12f33e509cfaf85518d9d/l1ls-0.2.0.tar.gz", "yanked": false}], "0.2.1": []}, "urls": [], "timestamp": "Fri May  8 00:48:24 2020"}