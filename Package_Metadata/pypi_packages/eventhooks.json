{"info": {"author": "Norman Moeschter-Schenck", "author_email": "norman.moeschter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python"], "description": "# Events\n\nThis is a module that provides events for:\n* mattermost\n* dockerhub\n* AWS SES emails\n\nEvents can trigger webhooks on the previously mentioned web services.\n\n**_Note_**:\n\nOf course, events could do a lot more. If you have an idea, please just create an issue and describe it.\n\nAdditionally events can be configured with relams.\nRealms provide a context to an event and restrict the event action by caller origin.\n\nRight now, there always needs to be a valid realm.\nIn the future, this can be optimized so giving no realm will always execute the event action.\n\n## Example webhook\n\nI use this module in the [`github_repo_watcher`](https://github.com/normoes/github_repo_watcher).\n\nTo be brief, the `github_repo_watcher` checks a github repository for new commits to `master` and for new tags.\n\nWhenever a new commit or tag is found, 3 things happen:\n* The commit and tag are stored in a database.\n* A mattermost webhook is triggered (**mattermost event**).\n  - **Only for tags.**\n* A dockercloud webhook is triggered (**dockercloud event**).\n  - **For both commits and tags.**\n\nYou can see, the `github_repo_watcher` is configured with 2 events:\n* mattermost\n* dockerhub\n\nAdditionally, the application supports 2 realms to restrict an event's action:\n* `GITHUB_COMMIT_REALM = \"github_commits\"`\n* `GITHUB_TAG_REALM = \"github_tags\"`\n```python\n    GITHUB_REALMS = {\n        GITHUB_TAG_REALM: GITHUB_TAG_REALM,\n        GITHUB_COMMIT_REALM: GITHUB_COMMIT_REALM,\n    }\n```\nHere, the realms feature is used to restrict the mattermost event to only trigger the webhook for new tags - like mentioned before.\n\nImagine a mattermost event configuration like this:\n```python\n    mattermost_trigger = MattermostWebHook(\n        name=\"mattermost_event\",\n        host=<some_mattermost_url>,\n        token=<some_mattermost_token>,\n        realms=(GITHUB_REALMS[GITHUB_TAG_REALM],),\n    )\n```\n\n**_Note_**:\n\nAt this point, I leave out the configuration of other events. Just imagine, the `github_repo_watcher` is configured with a ton of events.\n\nNow, imagine a new tag was found.\n\nObviously, the function which loops over all the events is called with the realm `GITHUB_TAG_REALM` (new github tag was found).\n\nSo, every event (mattermost, \"a ton of events\", ...) is essentially triggered like this:\n\n```python\n    event.trigger(data=\"Found new tag for repo <some_github_repo>.\", realm=GITHUB_TAG_REALM)\n```\n\nSince the mattermost event is configured to be triggered in the `GITHUB_TAG_REALM` only, it will trigger the mattermost webhook.\n\nAnd it won't be triggered if the configuration should look like this (using `GITHUB_COMMIT_REALM`):\n```python\n    mattermost_trigger = MattermostWebHook(\n        ...\n        realms=(GITHUB_REALMS[GITHUB_COMMIT_REALM],),\n    )\n```\n\n## Example email hook\n\nThis is used in the [`github_repo_watcher`](https://github.com/normoes/github_repo_watcher) as well.\n\nTo get a basic understanding of the `github_repo_watcher` (used as an example) please refer to the point **Example webhook**.\n\nThere is only one email hook supported and tested right now:\n* `AwsSesEmailHook`\n\nIt's possible that this hook is also working for other email servers, but I cannot say for sure, because I did not test it.\n\nThe email hook can be configured like this:\n```python\n    aws_ses_email_trigger = AwsSesEmailHook(\n        name=\"aws_ses_email_event\",\n        realms=(GITHUB_REALMS[GITHUB_TAG_REALM],),\n    )\n```\n### Configuration\n\nThe email connection and message need to be configured using environment variables.\n\nThe following configuration options exist;\n* Email connection:\n\n| environment variable | description | default value |\n|----------------------|-------------|---------------|\n| `HOST` | AWS SES server name.. |  `\"email-smtp.us-west-2.amazonaws.com\"` |\n| `PORT` | AWS SES port. | `587` |\n| `AWS_SES_CREDENTIALS` | AWS SES credentials (expected format: `user:password`). |  `\"\"` |\n\n* Email message:\n\n| environment variable | description | default value |\n|----------------------|-------------|---------------|\n| `SENDER` | `From` email address (`someone@somewhere.com`). |  `\"\"` |\n| `SENDER_NAME` | `From` real name (`someone`). | `\"\"` |\n| `RECIPIENTS` | Comma separated recipients' email addresses (`some@nowhere.com, one@here.org`). |  `\"\"` |\n| `CONFIGURATION_SET` | [OPTIONAL] The name of configuration set to use for this message. | `None` |\n| `SUBJECT` | Email subject. | `\"\"` |\n| `BODY_TEXT` | Email body. | `\"\"` |\n\n**_Note_**:\n* So far emails are sent in plain text only.\n* `TLS` is used by default.\n* If no email subject is configured using the environment variable `SUBJECT`, the  name of the `AwsSesEmailHook` will be used as the email's subject by default. Of course this can be changed later on:\n```python\n    # Set the email's subject.\n    aws_ses_email_trigger.email.subject = \"Something else.\"\n```\n\n\n#### AWS Lambda\n\nPlease refer to the file `mail/environment_variables.py`.\n\nWith AWS Lambda functions some of the environment variables are expected to be encrypted:\n* `AWS_SES_CREDENTIALS`\n* `SENDER`\n* `SENDER_NAME`\n* `RECIPIENTS`\n* `CONFIGURATION_SET`\n* `SUBJECT`\n* `BODY_TEXT`\n\n### Email body\n\nLike mentioned earlier (See **Example webhook**), every event is essentially triggered like this:\n```python\n    event.trigger(data=\"Found new tag for repo <some_github_repo>.\", realm=GITHUB_TAG_REALM)\n```\nThis is also true for the `AwsSesEmailHook`.\n\n**_Note_**:\n* The `data` argument is used as the email's body text.\n\n**_Note_** - The hook accepts `str` and `dict` as body text:\n* `event.trigger(data=\"Some string\")` (`str`)\n* `event.trigger(data={\"error\": \"Weird error.\", \"cause\": \"Human factor.\"})` (`dict`)\n  - In this case, the JSON is indented.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/normoes/events/archive/v0.1.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/normoes/events", "keywords": "", "license": "", "maintainer": "Norman Moeschter-Schenck", "maintainer_email": "<norman.moeschter@gmail.com>", "name": "eventhooks", "package_url": "https://pypi.org/project/eventhooks/", "platform": "", "project_url": "https://pypi.org/project/eventhooks/", "project_urls": {"Download": "https://github.com/normoes/events/archive/v0.1.5.tar.gz", "Homepage": "https://github.com/normoes/events"}, "release_url": "https://pypi.org/project/eventhooks/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Trigger webhooks with events.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Events</h1>\n<p>This is a module that provides events for:</p>\n<ul>\n<li>mattermost</li>\n<li>dockerhub</li>\n<li>AWS SES emails</li>\n</ul>\n<p>Events can trigger webhooks on the previously mentioned web services.</p>\n<p><strong><em>Note</em></strong>:</p>\n<p>Of course, events could do a lot more. If you have an idea, please just create an issue and describe it.</p>\n<p>Additionally events can be configured with relams.\nRealms provide a context to an event and restrict the event action by caller origin.</p>\n<p>Right now, there always needs to be a valid realm.\nIn the future, this can be optimized so giving no realm will always execute the event action.</p>\n<h2>Example webhook</h2>\n<p>I use this module in the <a href=\"https://github.com/normoes/github_repo_watcher\" rel=\"nofollow\"><code>github_repo_watcher</code></a>.</p>\n<p>To be brief, the <code>github_repo_watcher</code> checks a github repository for new commits to <code>master</code> and for new tags.</p>\n<p>Whenever a new commit or tag is found, 3 things happen:</p>\n<ul>\n<li>The commit and tag are stored in a database.</li>\n<li>A mattermost webhook is triggered (<strong>mattermost event</strong>).\n<ul>\n<li><strong>Only for tags.</strong></li>\n</ul>\n</li>\n<li>A dockercloud webhook is triggered (<strong>dockercloud event</strong>).\n<ul>\n<li><strong>For both commits and tags.</strong></li>\n</ul>\n</li>\n</ul>\n<p>You can see, the <code>github_repo_watcher</code> is configured with 2 events:</p>\n<ul>\n<li>mattermost</li>\n<li>dockerhub</li>\n</ul>\n<p>Additionally, the application supports 2 realms to restrict an event's action:</p>\n<ul>\n<li><code>GITHUB_COMMIT_REALM = \"github_commits\"</code></li>\n<li><code>GITHUB_TAG_REALM = \"github_tags\"</code></li>\n</ul>\n<pre>    <span class=\"n\">GITHUB_REALMS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">GITHUB_TAG_REALM</span><span class=\"p\">:</span> <span class=\"n\">GITHUB_TAG_REALM</span><span class=\"p\">,</span>\n        <span class=\"n\">GITHUB_COMMIT_REALM</span><span class=\"p\">:</span> <span class=\"n\">GITHUB_COMMIT_REALM</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>Here, the realms feature is used to restrict the mattermost event to only trigger the webhook for new tags - like mentioned before.</p>\n<p>Imagine a mattermost event configuration like this:</p>\n<pre>    <span class=\"n\">mattermost_trigger</span> <span class=\"o\">=</span> <span class=\"n\">MattermostWebHook</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"mattermost_event\"</span><span class=\"p\">,</span>\n        <span class=\"n\">host</span><span class=\"o\">=&lt;</span><span class=\"n\">some_mattermost_url</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n        <span class=\"n\">token</span><span class=\"o\">=&lt;</span><span class=\"n\">some_mattermost_token</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n        <span class=\"n\">realms</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">GITHUB_REALMS</span><span class=\"p\">[</span><span class=\"n\">GITHUB_TAG_REALM</span><span class=\"p\">],),</span>\n    <span class=\"p\">)</span>\n</pre>\n<p><strong><em>Note</em></strong>:</p>\n<p>At this point, I leave out the configuration of other events. Just imagine, the <code>github_repo_watcher</code> is configured with a ton of events.</p>\n<p>Now, imagine a new tag was found.</p>\n<p>Obviously, the function which loops over all the events is called with the realm <code>GITHUB_TAG_REALM</code> (new github tag was found).</p>\n<p>So, every event (mattermost, \"a ton of events\", ...) is essentially triggered like this:</p>\n<pre>    <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">trigger</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"s2\">\"Found new tag for repo &lt;some_github_repo&gt;.\"</span><span class=\"p\">,</span> <span class=\"n\">realm</span><span class=\"o\">=</span><span class=\"n\">GITHUB_TAG_REALM</span><span class=\"p\">)</span>\n</pre>\n<p>Since the mattermost event is configured to be triggered in the <code>GITHUB_TAG_REALM</code> only, it will trigger the mattermost webhook.</p>\n<p>And it won't be triggered if the configuration should look like this (using <code>GITHUB_COMMIT_REALM</code>):</p>\n<pre>    <span class=\"n\">mattermost_trigger</span> <span class=\"o\">=</span> <span class=\"n\">MattermostWebHook</span><span class=\"p\">(</span>\n        <span class=\"o\">...</span>\n        <span class=\"n\">realms</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">GITHUB_REALMS</span><span class=\"p\">[</span><span class=\"n\">GITHUB_COMMIT_REALM</span><span class=\"p\">],),</span>\n    <span class=\"p\">)</span>\n</pre>\n<h2>Example email hook</h2>\n<p>This is used in the <a href=\"https://github.com/normoes/github_repo_watcher\" rel=\"nofollow\"><code>github_repo_watcher</code></a> as well.</p>\n<p>To get a basic understanding of the <code>github_repo_watcher</code> (used as an example) please refer to the point <strong>Example webhook</strong>.</p>\n<p>There is only one email hook supported and tested right now:</p>\n<ul>\n<li><code>AwsSesEmailHook</code></li>\n</ul>\n<p>It's possible that this hook is also working for other email servers, but I cannot say for sure, because I did not test it.</p>\n<p>The email hook can be configured like this:</p>\n<pre>    <span class=\"n\">aws_ses_email_trigger</span> <span class=\"o\">=</span> <span class=\"n\">AwsSesEmailHook</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"aws_ses_email_event\"</span><span class=\"p\">,</span>\n        <span class=\"n\">realms</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">GITHUB_REALMS</span><span class=\"p\">[</span><span class=\"n\">GITHUB_TAG_REALM</span><span class=\"p\">],),</span>\n    <span class=\"p\">)</span>\n</pre>\n<h3>Configuration</h3>\n<p>The email connection and message need to be configured using environment variables.</p>\n<p>The following configuration options exist;</p>\n<ul>\n<li>Email connection:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>environment variable</th>\n<th>description</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>HOST</code></td>\n<td>AWS SES server name..</td>\n<td><code>\"email-smtp.us-west-2.amazonaws.com\"</code></td>\n</tr>\n<tr>\n<td><code>PORT</code></td>\n<td>AWS SES port.</td>\n<td><code>587</code></td>\n</tr>\n<tr>\n<td><code>AWS_SES_CREDENTIALS</code></td>\n<td>AWS SES credentials (expected format: <code>user:password</code>).</td>\n<td><code>\"\"</code></td>\n</tr></tbody></table>\n<ul>\n<li>Email message:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>environment variable</th>\n<th>description</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>SENDER</code></td>\n<td><code>From</code> email address (<code>someone@somewhere.com</code>).</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>SENDER_NAME</code></td>\n<td><code>From</code> real name (<code>someone</code>).</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>RECIPIENTS</code></td>\n<td>Comma separated recipients' email addresses (<code>some@nowhere.com, one@here.org</code>).</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>CONFIGURATION_SET</code></td>\n<td>[OPTIONAL] The name of configuration set to use for this message.</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td><code>SUBJECT</code></td>\n<td>Email subject.</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>BODY_TEXT</code></td>\n<td>Email body.</td>\n<td><code>\"\"</code></td>\n</tr></tbody></table>\n<p><strong><em>Note</em></strong>:</p>\n<ul>\n<li>So far emails are sent in plain text only.</li>\n<li><code>TLS</code> is used by default.</li>\n<li>If no email subject is configured using the environment variable <code>SUBJECT</code>, the  name of the <code>AwsSesEmailHook</code> will be used as the email's subject by default. Of course this can be changed later on:</li>\n</ul>\n<pre>    <span class=\"c1\"># Set the email's subject.</span>\n    <span class=\"n\">aws_ses_email_trigger</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"s2\">\"Something else.\"</span>\n</pre>\n<h4>AWS Lambda</h4>\n<p>Please refer to the file <code>mail/environment_variables.py</code>.</p>\n<p>With AWS Lambda functions some of the environment variables are expected to be encrypted:</p>\n<ul>\n<li><code>AWS_SES_CREDENTIALS</code></li>\n<li><code>SENDER</code></li>\n<li><code>SENDER_NAME</code></li>\n<li><code>RECIPIENTS</code></li>\n<li><code>CONFIGURATION_SET</code></li>\n<li><code>SUBJECT</code></li>\n<li><code>BODY_TEXT</code></li>\n</ul>\n<h3>Email body</h3>\n<p>Like mentioned earlier (See <strong>Example webhook</strong>), every event is essentially triggered like this:</p>\n<pre>    <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">trigger</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"s2\">\"Found new tag for repo &lt;some_github_repo&gt;.\"</span><span class=\"p\">,</span> <span class=\"n\">realm</span><span class=\"o\">=</span><span class=\"n\">GITHUB_TAG_REALM</span><span class=\"p\">)</span>\n</pre>\n<p>This is also true for the <code>AwsSesEmailHook</code>.</p>\n<p><strong><em>Note</em></strong>:</p>\n<ul>\n<li>The <code>data</code> argument is used as the email's body text.</li>\n</ul>\n<p><strong><em>Note</em></strong> - The hook accepts <code>str</code> and <code>dict</code> as body text:</p>\n<ul>\n<li><code>event.trigger(data=\"Some string\")</code> (<code>str</code>)</li>\n<li><code>event.trigger(data={\"error\": \"Weird error.\", \"cause\": \"Human factor.\"})</code> (<code>dict</code>)\n<ul>\n<li>In this case, the JSON is indented.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6806365, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7f8960108b2d5cc2d6e01cbb078f090d", "sha256": "7166822844121335f0d7ad4292e6d90f499d8c7fb65d0ddc84574ce181f82f33"}, "downloads": -1, "filename": "eventhooks-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7f8960108b2d5cc2d6e01cbb078f090d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3317, "upload_time": "2019-12-18T13:24:26", "upload_time_iso_8601": "2019-12-18T13:24:26.635925Z", "url": "https://files.pythonhosted.org/packages/c7/0d/4b39ae174918b98acf3360dba1f1499abb1e1e27cfb8e0039dde9e6a1bdf/eventhooks-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "cdf9c2a603d05aee759a9c4a8afdea59", "sha256": "0dd83ad914a39698d210f841ab66adb12bd46cc1380425485924f85337aec076"}, "downloads": -1, "filename": "eventhooks-0.0.2.tar.gz", "has_sig": false, "md5_digest": "cdf9c2a603d05aee759a9c4a8afdea59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3591, "upload_time": "2019-12-18T13:31:05", "upload_time_iso_8601": "2019-12-18T13:31:05.160022Z", "url": "https://files.pythonhosted.org/packages/91/ab/dcca2aad132675390de134004186b6993ef736d605918f8c74774d17b79b/eventhooks-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "61d96a71c17aa3bfd13e92bc1177f133", "sha256": "de883acb57f00119dd59cc540f2612dcdca41a05375acb2e86f351d94eb9b620"}, "downloads": -1, "filename": "eventhooks-0.0.3.tar.gz", "has_sig": false, "md5_digest": "61d96a71c17aa3bfd13e92bc1177f133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3608, "upload_time": "2019-12-19T05:44:23", "upload_time_iso_8601": "2019-12-19T05:44:23.713012Z", "url": "https://files.pythonhosted.org/packages/78/c6/9fe5a3b1d5491a29ebfee27f2ea951279876b990ef858a13f049d8f768c3/eventhooks-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a8f3912b6014b513c8677c0f14cbd275", "sha256": "3a378a77e03c29b17a4cf852ed7dfb3bd9e1991c66f341acd88632505c5fe05e"}, "downloads": -1, "filename": "eventhooks-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a8f3912b6014b513c8677c0f14cbd275", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3805, "upload_time": "2020-01-03T08:54:34", "upload_time_iso_8601": "2020-01-03T08:54:34.555194Z", "url": "https://files.pythonhosted.org/packages/d7/e6/b01505b131f5f3879674fb09b4ace15c9d3057b6eb393536674dc0798162/eventhooks-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "14344b46f20ba648f6801a0fab58c8bb", "sha256": "5ff13018b22fd06bd1af65f8ac040b26389f585e6ed530d8be572121b88f2bdd"}, "downloads": -1, "filename": "eventhooks-0.0.5.tar.gz", "has_sig": false, "md5_digest": "14344b46f20ba648f6801a0fab58c8bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3740, "upload_time": "2020-01-06T16:04:39", "upload_time_iso_8601": "2020-01-06T16:04:39.511200Z", "url": "https://files.pythonhosted.org/packages/8d/13/1b060f20026fe09bb94328438f96040910beae9d45293bebd9e0c5ff738d/eventhooks-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "733a8f1d1256bdadacb8d29257372fa8", "sha256": "2c3d1716cc780496ec1d9734a93f3a3d5920ac18a89c719191f57045d53e0a46"}, "downloads": -1, "filename": "eventhooks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "733a8f1d1256bdadacb8d29257372fa8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6388, "upload_time": "2020-03-12T15:47:22", "upload_time_iso_8601": "2020-03-12T15:47:22.014059Z", "url": "https://files.pythonhosted.org/packages/4e/39/033dfa17644e0c8e66a9827caef1cd59e41a62b94370e08e2772148d6263/eventhooks-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ae299d6ec59d36309ae3ba08e6e769b1", "sha256": "267405c3943b07fd4bddaa5da109efd8f6d71b37a5f48a29cee401e93c4737e2"}, "downloads": -1, "filename": "eventhooks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ae299d6ec59d36309ae3ba08e6e769b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7135, "upload_time": "2020-03-13T07:20:11", "upload_time_iso_8601": "2020-03-13T07:20:11.618778Z", "url": "https://files.pythonhosted.org/packages/b4/b7/28fafffc3d8b048b7cc214ccf7cc2fc92722c51b0c49ca7b06c8a5c3e839/eventhooks-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "50ab6bd2ea1f9df30623e639e9b55e0b", "sha256": "9dce11634e6a6df22461e2d1e7e4fdd5cdea846a23d8e44836f05f4ec2821103"}, "downloads": -1, "filename": "eventhooks-0.1.2.tar.gz", "has_sig": false, "md5_digest": "50ab6bd2ea1f9df30623e639e9b55e0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7320, "upload_time": "2020-03-13T08:29:28", "upload_time_iso_8601": "2020-03-13T08:29:28.754272Z", "url": "https://files.pythonhosted.org/packages/37/1d/6e535af177d30c5faa3494fcf847c1a9150a22bbed2333d16be095575e9d/eventhooks-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cef7e69a8a75073aeb0a14ba59680bef", "sha256": "d6c25f3fc9770fb6cd7a0705702f3f54d88a26fc28579087fd8e8a3fb6aa7877"}, "downloads": -1, "filename": "eventhooks-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cef7e69a8a75073aeb0a14ba59680bef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7340, "upload_time": "2020-03-13T09:26:29", "upload_time_iso_8601": "2020-03-13T09:26:29.848831Z", "url": "https://files.pythonhosted.org/packages/22/96/f8416a7de8531ce16f4d65d29d1b8c4b5cc99525621ec6a40010416af784/eventhooks-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "00b31640ba2502b380be32348397975e", "sha256": "25bf73f137d66f61330ac87fe13830b4b32d9f6f3ed56482ae27c4901da94376"}, "downloads": -1, "filename": "eventhooks-0.1.4.tar.gz", "has_sig": false, "md5_digest": "00b31640ba2502b380be32348397975e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7352, "upload_time": "2020-03-13T10:12:28", "upload_time_iso_8601": "2020-03-13T10:12:28.626102Z", "url": "https://files.pythonhosted.org/packages/ba/ef/7787dd2885d9521bb837e36998f827908cee32f489ddbca8934cdd43a32c/eventhooks-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f8dc91b0d531d7439e9491a64a97765a", "sha256": "63a817cdebd9a3282794e562a1d853188c87679a5646897dbe003b1480b1c9c5"}, "downloads": -1, "filename": "eventhooks-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f8dc91b0d531d7439e9491a64a97765a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7477, "upload_time": "2020-03-13T14:23:02", "upload_time_iso_8601": "2020-03-13T14:23:02.278791Z", "url": "https://files.pythonhosted.org/packages/32/7f/d2d74232f78339f2d60e5de95e956bf79a70a3b9ab7ea855fbe5cb7812e0/eventhooks-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8dc91b0d531d7439e9491a64a97765a", "sha256": "63a817cdebd9a3282794e562a1d853188c87679a5646897dbe003b1480b1c9c5"}, "downloads": -1, "filename": "eventhooks-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f8dc91b0d531d7439e9491a64a97765a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7477, "upload_time": "2020-03-13T14:23:02", "upload_time_iso_8601": "2020-03-13T14:23:02.278791Z", "url": "https://files.pythonhosted.org/packages/32/7f/d2d74232f78339f2d60e5de95e956bf79a70a3b9ab7ea855fbe5cb7812e0/eventhooks-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:14 2020"}