{"info": {"author": "The data handyman team", "author_email": "bertrand.chevrier@orange.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha"], "description": "ElasticSearchService\n---------------------\n\n\n**First install with pip**\n\n    `pip install elasticsearch-service`\n\nTo use , simply do::\n\n     from elasticsearch_service import ElasticsearchService\n\nConfigure your elk Service with your parameters\n###################################################\n\nWith no authentification define your host(default='localhost' and  port (default=9200)::\n\n    elk_service=ElasticsearchService() #\u00a0default localhost and port 9200\n    elk_service=ElasticsearchService('myurl',9201)\n\nWith HTTP basic authentification host, port and additional informations::\n\n    elk_service=ElasticsearchService('localhost',9200,scheme = 'http',http_auth_username : 'myuser',http_auth_password:'mypassword'})\n\nTo import objects in ELK use :\n##############################\n\nelk_service.import_documents(<index_elk>,<list_of_dict>)\n\nwhere <index_elk> is a string like 'myelk-index'\nwhere <list_of_dict> is a list of dict like [{'id':'id1','field1':'value1,'field1','field2':'value2'},{'id':'id2','field1':'value3,'field2','field2':'value4'}]::\n\n    list_of_values=[{'_id':'myid1','field1':'value1','field2':'value2','date':'2016-07-15T15:29:50+02:00'},{'_id':'myid2','field1':'value33','field2':'value4','date':'2016-07-15T15:29:50+02:00'}]\n    elk_service.import_documents('myelk-index',list_of_values)\n\nTo search Objects in ELK use :\n##############################\n\nelk_service.get_documents(<index>,<parameter>)\n\n        where <index> is a string like 'myelk-index'\n\n        where <parameter> are :\n            To Specify a dateField use\n                timefield='my_date_field'\n\n                If so, you must specified a start date GREATER OR EQUAL\n                   startdate='2020-04-01'\n                And a end date LESS than (and not EQUAL)\n                   enddate='2020-04-02'\n\n            To Specify your query in a dict format use\n                filters={'field1':['value1','valuer2'],'field2:[value]}\n            To specify your query you MUST NOT in a dict format use\n                exclude={'field1':['value1','valuer2']}\n            To specify query with wildcard use\n                 {'field1.keyword': 'value*'}\n            To get only somme fields use :\n                field_to_include={'include':['field1','field2']}\n\nexamples ::\n\n    hits=elk_service.get_documents('myelk-index')\n    hits=elk_service.get_documents('myelk-index',timefield='date',startdate='2020-04-01',enddate='2020-04-02')\n    hits=elk_service.get_documents('myelk-index',filters={'field1':['value1','value3'],'field2':['value4']})\n    hits=elk_service.get_documents('myelk-index',filters={'field1':['value1','value3']},wildcard={'field1.keyword':'value3*'})\n\nexamples to get values from search (to have hits)::\n\n     for hit in hits:\n        # if you want to access to your value in dict format\n        values_in_dictformat=hit.to_dict()\n        #\u00a0OR\n        # if you want to access to a specific value\n        field1=hit.field1\n\n\nTO Export a document in json(default) or csv file use :\n#######################################################\n\nexport_documents(<INDEX>,<FILENAME>,<FORMAT>,<PARAMETER>)\n\n        where <INDEX> is the index to export (strings)\n        where <FILENAME> is the file name (string)\n        where <FORMAT> can be json (default) ou csv\n        where <PARAMETER> is the same than method getDocument() see previous7\n\nexample::\n\n    elk_service.export_documents('myelk-index','elkdata.json')\n    elk_service.export_documents('myelk-index','elkdata.csv',format='csv')\n\nTO Import a json or csv file use :\n##################################\n\nimport_documents_from_file(<INDEX>,<FILENAME>)\nNote that :\nfor csv file : default delimiter is ;\nfor json file: must be list of value like [{\"id\": \"id1\"},{\"id\": \"id2\"}] <br/>\n\n\n        where <INDEX> is the index to export (strings)\n        where <FILENAME> is the file name (string) : can\n        where <FORMAT> is the type of file : json (default) or csv\n\nexample::\n\n    elk_service.import_documents_from_file('myelk-index1','elkdata.json')\n    elk_service.import_documents_from_file('myelk-index2','elkdata.csv') # if delimiter is ;\n    elk_service.import_documents_from_file('myelk-index3','elkdata.csv',delimiter=',') #\u00a0if delimiter is ,\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "elasticsearch-service", "package_url": "https://pypi.org/project/elasticsearch-service/", "platform": "", "project_url": "https://pypi.org/project/elasticsearch-service/", "project_urls": {"Homepage": "http://github.com"}, "release_url": "https://pypi.org/project/elasticsearch-service/0.15/", "requires_dist": ["elasticsearch", "elasticsearch-dsl", "pandas"], "requires_python": ">=3.5", "summary": "easy access to elastic based on elasticsearch-dsl", "version": "0.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>First install with pip</strong></p>\n<blockquote>\n<cite>pip install elasticsearch-service</cite></blockquote>\n<p>To use , simply do:</p>\n<pre>from elasticsearch_service import ElasticsearchService\n</pre>\n<div id=\"configure-your-elk-service-with-your-parameters\">\n<h2>Configure your elk Service with your parameters</h2>\n<p>With no authentification define your host(default=\u2019localhost\u2019 and  port (default=9200):</p>\n<pre>elk_service=ElasticsearchService() #\u00a0default localhost and port 9200\nelk_service=ElasticsearchService('myurl',9201)\n</pre>\n<p>With HTTP basic authentification host, port and additional informations:</p>\n<pre>elk_service=ElasticsearchService('localhost',9200,scheme = 'http',http_auth_username : 'myuser',http_auth_password:'mypassword'})\n</pre>\n</div>\n<div id=\"to-import-objects-in-elk-use\">\n<h2>To import objects in ELK use :</h2>\n<p>elk_service.import_documents(&lt;index_elk&gt;,&lt;list_of_dict&gt;)</p>\n<p>where &lt;index_elk&gt; is a string like \u2018myelk-index\u2019\nwhere &lt;list_of_dict&gt; is a list of dict like [{\u2018id\u2019:\u2019id1\u2019,\u2019field1\u2019:\u2019value1,\u2019field1\u2019,\u2019field2\u2019:\u2019value2\u2019},{\u2018id\u2019:\u2019id2\u2019,\u2019field1\u2019:\u2019value3,\u2019field2\u2019,\u2019field2\u2019:\u2019value4\u2019}]:</p>\n<pre>list_of_values=[{'_id':'myid1','field1':'value1','field2':'value2','date':'2016-07-15T15:29:50+02:00'},{'_id':'myid2','field1':'value33','field2':'value4','date':'2016-07-15T15:29:50+02:00'}]\nelk_service.import_documents('myelk-index',list_of_values)\n</pre>\n</div>\n<div id=\"to-search-objects-in-elk-use\">\n<h2>To search Objects in ELK use :</h2>\n<p>elk_service.get_documents(&lt;index&gt;,&lt;parameter&gt;)</p>\n<blockquote>\n<p>where &lt;index&gt; is a string like \u2018myelk-index\u2019</p>\n<dl>\n<dt>where &lt;parameter&gt; are :</dt>\n<dd><dl>\n<dt>To Specify a dateField use</dt>\n<dd><p>timefield=\u2019my_date_field\u2019</p>\n<dl>\n<dt>If so, you must specified a start date GREATER OR EQUAL</dt>\n<dd>startdate=\u20192020-04-01\u2019</dd>\n<dt>And a end date LESS than (and not EQUAL)</dt>\n<dd>enddate=\u20192020-04-02\u2019</dd>\n</dl>\n</dd>\n<dt>To Specify your query in a dict format use</dt>\n<dd>filters={\u2018field1\u2019:[\u2018value1\u2019,\u2019valuer2\u2019],\u2019field2:[value]}</dd>\n<dt>To specify your query you MUST NOT in a dict format use</dt>\n<dd>exclude={\u2018field1\u2019:[\u2018value1\u2019,\u2019valuer2\u2019]}</dd>\n<dt>To specify query with wildcard use</dt>\n<dd>{\u2018field1.keyword\u2019: \u2018value*\u2019}</dd>\n<dt>To get only somme fields use :</dt>\n<dd>field_to_include={\u2018include\u2019:[\u2018field1\u2019,\u2019field2\u2019]}</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>examples</p>\n<pre>hits=elk_service.get_documents('myelk-index')\nhits=elk_service.get_documents('myelk-index',timefield='date',startdate='2020-04-01',enddate='2020-04-02')\nhits=elk_service.get_documents('myelk-index',filters={'field1':['value1','value3'],'field2':['value4']})\nhits=elk_service.get_documents('myelk-index',filters={'field1':['value1','value3']},wildcard={'field1.keyword':'value3*'})\n</pre>\n<p>examples to get values from search (to have hits):</p>\n<pre>for hit in hits:\n   # if you want to access to your value in dict format\n   values_in_dictformat=hit.to_dict()\n   #\u00a0OR\n   # if you want to access to a specific value\n   field1=hit.field1\n</pre>\n</div>\n<div id=\"to-export-a-document-in-json-default-or-csv-file-use\">\n<h2>TO Export a document in json(default) or csv file use :</h2>\n<p>export_documents(&lt;INDEX&gt;,&lt;FILENAME&gt;,&lt;FORMAT&gt;,&lt;PARAMETER&gt;)</p>\n<blockquote>\nwhere &lt;INDEX&gt; is the index to export (strings)\nwhere &lt;FILENAME&gt; is the file name (string)\nwhere &lt;FORMAT&gt; can be json (default) ou csv\nwhere &lt;PARAMETER&gt; is the same than method getDocument() see previous7</blockquote>\n<p>example:</p>\n<pre>elk_service.export_documents('myelk-index','elkdata.json')\nelk_service.export_documents('myelk-index','elkdata.csv',format='csv')\n</pre>\n</div>\n<div id=\"to-import-a-json-or-csv-file-use\">\n<h2>TO Import a json or csv file use :</h2>\n<p>import_documents_from_file(&lt;INDEX&gt;,&lt;FILENAME&gt;)\nNote that :\nfor csv file : default delimiter is ;\nfor json file: must be list of value like [{\u201cid\u201d: \u201cid1\u201d},{\u201cid\u201d: \u201cid2\u201d}] &lt;br/&gt;</p>\n<blockquote>\nwhere &lt;INDEX&gt; is the index to export (strings)\nwhere &lt;FILENAME&gt; is the file name (string) : can\nwhere &lt;FORMAT&gt; is the type of file : json (default) or csv</blockquote>\n<p>example:</p>\n<pre>elk_service.import_documents_from_file('myelk-index1','elkdata.json')\nelk_service.import_documents_from_file('myelk-index2','elkdata.csv') # if delimiter is ;\nelk_service.import_documents_from_file('myelk-index3','elkdata.csv',delimiter=',') #\u00a0if delimiter is ,\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6993480, "releases": {"0.15": [{"comment_text": "", "digests": {"md5": "5c97a7d434b0b4bdb60bd41aba72dc48", "sha256": "742ae15dd5f343a7e2fb872e6516bdf72ff8d5164dc69ba9f618dd03b6baf66a"}, "downloads": -1, "filename": "elasticsearch_service-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "5c97a7d434b0b4bdb60bd41aba72dc48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8113, "upload_time": "2020-04-03T15:23:07", "upload_time_iso_8601": "2020-04-03T15:23:07.282382Z", "url": "https://files.pythonhosted.org/packages/ea/6b/0b64ffd016e7694396f4d20e20dc2b9382e136347831ac31517017ca3f50/elasticsearch_service-0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc43e50ebf1b6b085f870a0b6c0d7af0", "sha256": "ed0e00ce5cfdf3dd318448a2ea6bf02d02ef0ecd8f188d3326a1a82086b20dc1"}, "downloads": -1, "filename": "elasticsearch-service-0.15.tar.gz", "has_sig": false, "md5_digest": "cc43e50ebf1b6b085f870a0b6c0d7af0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5926, "upload_time": "2020-04-03T15:23:08", "upload_time_iso_8601": "2020-04-03T15:23:08.721945Z", "url": "https://files.pythonhosted.org/packages/2e/95/4d0295cae59da1b626c37708ecf2c3efe7447ed597477f2f243aa06ccabd/elasticsearch-service-0.15.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c97a7d434b0b4bdb60bd41aba72dc48", "sha256": "742ae15dd5f343a7e2fb872e6516bdf72ff8d5164dc69ba9f618dd03b6baf66a"}, "downloads": -1, "filename": "elasticsearch_service-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "5c97a7d434b0b4bdb60bd41aba72dc48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8113, "upload_time": "2020-04-03T15:23:07", "upload_time_iso_8601": "2020-04-03T15:23:07.282382Z", "url": "https://files.pythonhosted.org/packages/ea/6b/0b64ffd016e7694396f4d20e20dc2b9382e136347831ac31517017ca3f50/elasticsearch_service-0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc43e50ebf1b6b085f870a0b6c0d7af0", "sha256": "ed0e00ce5cfdf3dd318448a2ea6bf02d02ef0ecd8f188d3326a1a82086b20dc1"}, "downloads": -1, "filename": "elasticsearch-service-0.15.tar.gz", "has_sig": false, "md5_digest": "cc43e50ebf1b6b085f870a0b6c0d7af0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5926, "upload_time": "2020-04-03T15:23:08", "upload_time_iso_8601": "2020-04-03T15:23:08.721945Z", "url": "https://files.pythonhosted.org/packages/2e/95/4d0295cae59da1b626c37708ecf2c3efe7447ed597477f2f243aa06ccabd/elasticsearch-service-0.15.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:58 2020"}