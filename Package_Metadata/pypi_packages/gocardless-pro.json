{"info": {"author": "GoCardless", "author_email": "engineering@gocardless.com", "bugtrack_url": null, "classifiers": [], "description": ".. |circle-badge| image:: https://circleci.com/gh/gocardless/gocardless-pro-python.svg?style=shield&circle-token=:circle-token\n    :target: https://circleci.com/gh/gocardless/gocardless-pro-python\n.. |pypi-badge| image:: https://badge.fury.io/py/gocardless_pro.svg\n    :target: https://pypi.python.org/pypi/gocardless_pro\n\nGoCardless Pro Python client library\n============================================\n\nA Python client for interacting with the GoCardless Pro API.\n\n|circle-badge| |pypi-badge|\n\nTested against Python 2.7, 3.3, 3.4, 3.5, 3.6 and 3.7.\n\n- `\"Getting Started\" guide <https://developer.gocardless.com/getting-started/api/introduction/?lang=python>`_ with copy and paste Python code samples\n- `API reference`_\n\n------------\n\nInstall from PyPI:\n\n.. code:: bash\n\n    $ pip install gocardless_pro\n\n\nUsage\n-----\n\nCreate a ``Client`` instance, providing your access token and the environment\nyou want to use:\n\n.. code:: python\n\n    import gocardless_pro\n    token = os.environ['ACCESS_TOKEN']\n    client = gocardless_pro.Client(access_token=token, environment='live')\n\nAccess API endpoints using the corresponding methods on the client object:\n\n.. code:: python\n\n    # Create a new customer. We automatically add idempotency keys to requests to create\n    # resources, stopping duplicates accidentally getting created if something goes wrong\n    # with the API (e.g. networking problems) - see https://developer.gocardless.com/api\n    # -reference/#making-requests-idempotency-keys for details\n    customer = client.customers.create(params={'email': 'jane@example.com'})\n\n    # Fetch a payment by its ID\n    payment = client.payments.get(\"PA123\")\n\n    # Loop through a page of payments, printing each payment's amount\n    for payment in client.payments.list().records:\n        decimal_amount = decimal.Decimal(payment.amount) / 100\n        print('Payment for \u00a3{0}'.format(decimal_amount))\n\n    # Create a mandate PDF in a specific language\n    client.mandate_pdfs.create(\n        params={'links': {'mandate': 'MD00001234XYZ'}},\n        headers={'Accept-Language': 'fr'}\n    )\n\nFor full documentation, see our `API reference`_.\n\n.. _API reference: https://developer.gocardless.com/api-reference\n\n\nAvailable resources\n```````````````````\n\nBank details lookups\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Perform a bank details lookup\n    client.bank_details_lookups.create(params={...})\n\nCreditors\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a creditor\n    client.creditors.create(params={...})\n\n    # List creditors\n    client.creditors.list(params={...})\n\n    # Iterate through all creditors\n    client.creditors.all(params={...})\n\n    # Get a single creditor\n    client.creditors.get('CR123', params={...})\n\n    # Update a creditor\n    client.creditors.update('CR123', params={...})\n\nCreditor bank accounts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a creditor bank account\n    client.creditor_bank_accounts.create(params={...})\n\n    # List creditor bank accounts\n    client.creditor_bank_accounts.list(params={...})\n\n    # Iterate through all creditor_bank_accounts\n    client.creditor_bank_accounts.all(params={...})\n\n    # Get a single creditor bank account\n    client.creditor_bank_accounts.get('BA123', params={...})\n\n    # Disable a creditor bank account\n    client.creditor_bank_accounts.disable('BA123', params={...})\n\nCurrency exchange rates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # List exchange rates\n    client.currency_exchange_rates.list(params={...})\n\n    # Iterate through all currency_exchange_rates\n    client.currency_exchange_rates.all(params={...})\n\nCustomers\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a customer\n    client.customers.create(params={...})\n\n    # List customers\n    client.customers.list(params={...})\n\n    # Iterate through all customers\n    client.customers.all(params={...})\n\n    # Get a single customer\n    client.customers.get('CU123', params={...})\n\n    # Update a customer\n    client.customers.update('CU123', params={...})\n\n    # Remove a customer\n    client.customers.remove('CU123', params={...})\n\nCustomer bank accounts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a customer bank account\n    client.customer_bank_accounts.create(params={...})\n\n    # List customer bank accounts\n    client.customer_bank_accounts.list(params={...})\n\n    # Iterate through all customer_bank_accounts\n    client.customer_bank_accounts.all(params={...})\n\n    # Get a single customer bank account\n    client.customer_bank_accounts.get('BA123', params={...})\n\n    # Update a customer bank account\n    client.customer_bank_accounts.update('BA123', params={...})\n\n    # Disable a customer bank account\n    client.customer_bank_accounts.disable('BA123', params={...})\n\nCustomer notifications\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Handle a notification\n    client.customer_notifications.handle('PCN123', params={...})\n\nEvents\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # List events\n    client.events.list(params={...})\n\n    # Iterate through all events\n    client.events.all(params={...})\n\n    # Get a single event\n    client.events.get('EV123', params={...})\n\nInstalment schedules\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create (with dates)\n    client.instalment_schedules.create_with_dates(params={...})\n\n    # Create (with schedule)\n    client.instalment_schedules.create_with_schedule(params={...})\n\n    # List instalment schedules\n    client.instalment_schedules.list(params={...})\n\n    # Iterate through all instalment_schedules\n    client.instalment_schedules.all(params={...})\n\n    # Get a single instalment schedule\n    client.instalment_schedules.get('IS123', params={...})\n\n    # Update an instalment schedule\n    client.instalment_schedules.update('IS123', params={...})\n\n    # Cancel an instalment schedule\n    client.instalment_schedules.cancel('IS123', params={...})\n\nMandates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a mandate\n    client.mandates.create(params={...})\n\n    # List mandates\n    client.mandates.list(params={...})\n\n    # Iterate through all mandates\n    client.mandates.all(params={...})\n\n    # Get a single mandate\n    client.mandates.get('MD123', params={...})\n\n    # Update a mandate\n    client.mandates.update('MD123', params={...})\n\n    # Cancel a mandate\n    client.mandates.cancel('MD123', params={...})\n\n    # Reinstate a mandate\n    client.mandates.reinstate('MD123', params={...})\n\nMandate imports\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a new mandate import\n    client.mandate_imports.create(params={...})\n\n    # Get a mandate import\n    client.mandate_imports.get('IM000010790WX1', params={...})\n\n    # Submit a mandate import\n    client.mandate_imports.submit('IM000010790WX1', params={...})\n\n    # Cancel a mandate import\n    client.mandate_imports.cancel('IM000010790WX1', params={...})\n\nMandate import entries\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Add a mandate import entry\n    client.mandate_import_entries.create(params={...})\n\n    # List all mandate import entries\n    client.mandate_import_entries.list(params={...})\n\n    # Iterate through all mandate_import_entries\n    client.mandate_import_entries.all(params={...})\n\nMandate pdfs\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a mandate PDF\n    client.mandate_pdfs.create(params={...})\n\nPayments\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a payment\n    client.payments.create(params={...})\n\n    # List payments\n    client.payments.list(params={...})\n\n    # Iterate through all payments\n    client.payments.all(params={...})\n\n    # Get a single payment\n    client.payments.get('PM123', params={...})\n\n    # Update a payment\n    client.payments.update('PM123', params={...})\n\n    # Cancel a payment\n    client.payments.cancel('PM123', params={...})\n\n    # Retry a payment\n    client.payments.retry('PM123', params={...})\n\nPayouts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # List payouts\n    client.payouts.list(params={...})\n\n    # Iterate through all payouts\n    client.payouts.all(params={...})\n\n    # Get a single payout\n    client.payouts.get('PO123', params={...})\n\n    # Update a payout\n    client.payouts.update('PO123', params={...})\n\nPayout items\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Get all payout items in a single payout\n    client.payout_items.list(params={...})\n\n    # Iterate through all payout_items\n    client.payout_items.all(params={...})\n\nRedirect flows\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a redirect flow\n    client.redirect_flows.create(params={...})\n\n    # Get a single redirect flow\n    client.redirect_flows.get('RE123456', params={...})\n\n    # Complete a redirect flow\n    client.redirect_flows.complete('RE123456', params={...})\n\nRefunds\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a refund\n    client.refunds.create(params={...})\n\n    # List refunds\n    client.refunds.list(params={...})\n\n    # Iterate through all refunds\n    client.refunds.all(params={...})\n\n    # Get a single refund\n    client.refunds.get('RF123', params={...})\n\n    # Update a refund\n    client.refunds.update('RF123', params={...})\n\nSubscriptions\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # Create a subscription\n    client.subscriptions.create(params={...})\n\n    # List subscriptions\n    client.subscriptions.list(params={...})\n\n    # Iterate through all subscriptions\n    client.subscriptions.all(params={...})\n\n    # Get a single subscription\n    client.subscriptions.get('SB123', params={...})\n\n    # Update a subscription\n    client.subscriptions.update('SB123', params={...})\n\n    # Pause a subscription\n    client.subscriptions.pause('SB123', params={...})\n\n    # Resume a subscription\n    client.subscriptions.resume('SB123', params={...})\n\n    # Cancel a subscription\n    client.subscriptions.cancel('SB123', params={...})\n\n\n\nRunning tests\n-------------\n\nFirst, install the development dependencies:\n\n.. code:: bash\n\n    $ pip install -r requirements-dev.txt\n\nTo run the test suite against the current Python version, run ``nosetests``.\n\nTo run the test suite against multiple Python versions, run ``tox``.\n\nIf you don't have all versions of Python installed, you can run the tests in\na Docker container by running ``make``.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gocardless/gocardless-pro-python", "keywords": "gocardless directdebit payments sepa bacs", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gocardless-pro", "package_url": "https://pypi.org/project/gocardless-pro/", "platform": "", "project_url": "https://pypi.org/project/gocardless-pro/", "project_urls": {"Homepage": "https://github.com/gocardless/gocardless-pro-python"}, "release_url": "https://pypi.org/project/gocardless-pro/1.18.0/", "requires_dist": null, "requires_python": "", "summary": "A client library for the GoCardless Pro API.", "version": "1.18.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python client for interacting with the GoCardless Pro API.</p>\n<p><a href=\"https://circleci.com/gh/gocardless/gocardless-pro-python\" rel=\"nofollow\"><img alt=\"circle-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f76654d1cc431bd85d9913b3f9dee011fc425ee/68747470733a2f2f636972636c6563692e636f6d2f67682f676f636172646c6573732f676f636172646c6573732d70726f2d707974686f6e2e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d3a636972636c652d746f6b656e\"></a> <a href=\"https://pypi.python.org/pypi/gocardless_pro\" rel=\"nofollow\"><img alt=\"pypi-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7fc7dd57b0c830202718078613724e830487bf1/68747470733a2f2f62616467652e667572792e696f2f70792f676f636172646c6573735f70726f2e737667\"></a></p>\n<p>Tested against Python 2.7, 3.3, 3.4, 3.5, 3.6 and 3.7.</p>\n<ul>\n<li><a href=\"https://developer.gocardless.com/getting-started/api/introduction/?lang=python\" rel=\"nofollow\">\u201cGetting Started\u201d guide</a> with copy and paste Python code samples</li>\n<li><a href=\"https://developer.gocardless.com/api-reference\" rel=\"nofollow\">API reference</a></li>\n</ul>\n<hr class=\"docutils\">\n<p>Install from PyPI:</p>\n<pre>$ pip install gocardless_pro\n</pre>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a <tt>Client</tt> instance, providing your access token and the environment\nyou want to use:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gocardless_pro</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'ACCESS_TOKEN'</span><span class=\"p\">]</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gocardless_pro</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">environment</span><span class=\"o\">=</span><span class=\"s1\">'live'</span><span class=\"p\">)</span>\n</pre>\n<p>Access API endpoints using the corresponding methods on the client object:</p>\n<pre><span class=\"c1\"># Create a new customer. We automatically add idempotency keys to requests to create</span>\n<span class=\"c1\"># resources, stopping duplicates accidentally getting created if something goes wrong</span>\n<span class=\"c1\"># with the API (e.g. networking problems) - see https://developer.gocardless.com/api</span>\n<span class=\"c1\"># -reference/#making-requests-idempotency-keys for details</span>\n<span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'jane@example.com'</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Fetch a payment by its ID</span>\n<span class=\"n\">payment</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"PA123\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Loop through a page of payments, printing each payment's amount</span>\n<span class=\"k\">for</span> <span class=\"n\">payment</span> <span class=\"ow\">in</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"p\">:</span>\n    <span class=\"n\">decimal_amount</span> <span class=\"o\">=</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"n\">payment</span><span class=\"o\">.</span><span class=\"n\">amount</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">100</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Payment for \u00a3</span><span class=\"si\">{0}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">decimal_amount</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Create a mandate PDF in a specific language</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_pdfs</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n    <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'links'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'mandate'</span><span class=\"p\">:</span> <span class=\"s1\">'MD00001234XYZ'</span><span class=\"p\">}},</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'Accept-Language'</span><span class=\"p\">:</span> <span class=\"s1\">'fr'</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For full documentation, see our <a href=\"https://developer.gocardless.com/api-reference\" rel=\"nofollow\">API reference</a>.</p>\n<div id=\"available-resources\">\n<h3>Available resources</h3>\n<div id=\"bank-details-lookups\">\n<h4>Bank details lookups</h4>\n<pre><span class=\"c1\"># Perform a bank details lookup</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">bank_details_lookups</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"creditors\">\n<h4>Creditors</h4>\n<pre><span class=\"c1\"># Create a creditor</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditors</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List creditors</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditors</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all creditors</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditors</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single creditor</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditors</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'CR123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a creditor</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditors</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'CR123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"creditor-bank-accounts\">\n<h4>Creditor bank accounts</h4>\n<pre><span class=\"c1\"># Create a creditor bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditor_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List creditor bank accounts</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditor_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all creditor_bank_accounts</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditor_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single creditor bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditor_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'BA123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Disable a creditor bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">creditor_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">(</span><span class=\"s1\">'BA123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"currency-exchange-rates\">\n<h4>Currency exchange rates</h4>\n<pre><span class=\"c1\"># List exchange rates</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">currency_exchange_rates</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all currency_exchange_rates</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">currency_exchange_rates</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"customers\">\n<h4>Customers</h4>\n<pre><span class=\"c1\"># Create a customer</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List customers</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all customers</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single customer</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'CU123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a customer</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'CU123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Remove a customer</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customers</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s1\">'CU123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"customer-bank-accounts\">\n<h4>Customer bank accounts</h4>\n<pre><span class=\"c1\"># Create a customer bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List customer bank accounts</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all customer_bank_accounts</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single customer bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'BA123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a customer bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'BA123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Disable a customer bank account</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_bank_accounts</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">(</span><span class=\"s1\">'BA123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"customer-notifications\">\n<h4>Customer notifications</h4>\n<pre><span class=\"c1\"># Handle a notification</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">customer_notifications</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"s1\">'PCN123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"events\">\n<h4>Events</h4>\n<pre><span class=\"c1\"># List events</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all events</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single event</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'EV123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"instalment-schedules\">\n<h4>Instalment schedules</h4>\n<pre><span class=\"c1\"># Create (with dates)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">create_with_dates</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Create (with schedule)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">create_with_schedule</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List instalment schedules</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all instalment_schedules</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single instalment schedule</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'IS123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update an instalment schedule</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'IS123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Cancel an instalment schedule</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">instalment_schedules</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"s1\">'IS123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"mandates\">\n<h4>Mandates</h4>\n<pre><span class=\"c1\"># Create a mandate</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List mandates</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all mandates</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single mandate</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'MD123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a mandate</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'MD123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Cancel a mandate</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"s1\">'MD123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Reinstate a mandate</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandates</span><span class=\"o\">.</span><span class=\"n\">reinstate</span><span class=\"p\">(</span><span class=\"s1\">'MD123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"mandate-imports\">\n<h4>Mandate imports</h4>\n<pre><span class=\"c1\"># Create a new mandate import</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_imports</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a mandate import</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_imports</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'IM000010790WX1'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Submit a mandate import</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_imports</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"s1\">'IM000010790WX1'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Cancel a mandate import</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_imports</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"s1\">'IM000010790WX1'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"mandate-import-entries\">\n<h4>Mandate import entries</h4>\n<pre><span class=\"c1\"># Add a mandate import entry</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_import_entries</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List all mandate import entries</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_import_entries</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all mandate_import_entries</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_import_entries</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"mandate-pdfs\">\n<h4>Mandate pdfs</h4>\n<pre><span class=\"c1\"># Create a mandate PDF</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">mandate_pdfs</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"payments\">\n<h4>Payments</h4>\n<pre><span class=\"c1\"># Create a payment</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List payments</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all payments</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single payment</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'PM123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a payment</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'PM123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Cancel a payment</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"s1\">'PM123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Retry a payment</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payments</span><span class=\"o\">.</span><span class=\"n\">retry</span><span class=\"p\">(</span><span class=\"s1\">'PM123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"payouts\">\n<h4>Payouts</h4>\n<pre><span class=\"c1\"># List payouts</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payouts</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all payouts</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payouts</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single payout</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payouts</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'PO123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a payout</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payouts</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'PO123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"payout-items\">\n<h4>Payout items</h4>\n<pre><span class=\"c1\"># Get all payout items in a single payout</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payout_items</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all payout_items</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">payout_items</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"redirect-flows\">\n<h4>Redirect flows</h4>\n<pre><span class=\"c1\"># Create a redirect flow</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">redirect_flows</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single redirect flow</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">redirect_flows</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'RE123456'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Complete a redirect flow</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">redirect_flows</span><span class=\"o\">.</span><span class=\"n\">complete</span><span class=\"p\">(</span><span class=\"s1\">'RE123456'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"refunds\">\n<h4>Refunds</h4>\n<pre><span class=\"c1\"># Create a refund</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">refunds</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List refunds</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">refunds</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all refunds</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">refunds</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single refund</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">refunds</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'RF123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a refund</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">refunds</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'RF123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"subscriptions\">\n<h4>Subscriptions</h4>\n<pre><span class=\"c1\"># Create a subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># List subscriptions</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Iterate through all subscriptions</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Get a single subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'SB123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Update a subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"s1\">'SB123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Pause a subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"p\">(</span><span class=\"s1\">'SB123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Resume a subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">resume</span><span class=\"p\">(</span><span class=\"s1\">'SB123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Cancel a subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscriptions</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"s1\">'SB123'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">})</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"running-tests\">\n<h2>Running tests</h2>\n<p>First, install the development dependencies:</p>\n<pre>$ pip install -r requirements-dev.txt\n</pre>\n<p>To run the test suite against the current Python version, run <tt>nosetests</tt>.</p>\n<p>To run the test suite against multiple Python versions, run <tt>tox</tt>.</p>\n<p>If you don\u2019t have all versions of Python installed, you can run the tests in\na Docker container by running <tt>make</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 7178891, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a6f2a1d2a5774a900c552a31ad668242", "sha256": "d71215825ceaff37e466837bda2007d5551e582cac938e38c93ca768cbfe0b5d"}, "downloads": -1, "filename": "gocardless_pro-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a6f2a1d2a5774a900c552a31ad668242", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17878, "upload_time": "2015-07-08T13:25:49", "upload_time_iso_8601": "2015-07-08T13:25:49.734663Z", "url": "https://files.pythonhosted.org/packages/fc/ad/3f83b8a81f883d2b73280dc2318ef362bac563d69f047a22445edd6383c4/gocardless_pro-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "87748f2cba4be8c49cbf9e922586e066", "sha256": "1be217a9c7f322f427cfd165367bc59412411edb4ba529361d22eb8347030fd1"}, "downloads": -1, "filename": "gocardless_pro-0.1.1.tar.gz", "has_sig": false, "md5_digest": "87748f2cba4be8c49cbf9e922586e066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17278, "upload_time": "2015-07-08T16:19:18", "upload_time_iso_8601": "2015-07-08T16:19:18.086834Z", "url": "https://files.pythonhosted.org/packages/39/96/5e96795116cc5f588650556d136f8289a0065baef5aa8bb10e382fc08206/gocardless_pro-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2e557789ae7f7addab94f9bc83b222f6", "sha256": "6768b26082a67a231877197dd78bc8140edbd9af60164f8c55e27e91035e1102"}, "downloads": -1, "filename": "gocardless_pro-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2e557789ae7f7addab94f9bc83b222f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17726, "upload_time": "2015-07-13T11:24:11", "upload_time_iso_8601": "2015-07-13T11:24:11.460994Z", "url": "https://files.pythonhosted.org/packages/4b/b2/72e73fd5349d67c78877fd2c865c81aee9c56391b023ca9e4437ea663a25/gocardless_pro-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5854bf916fdd9680d77be1d75d3c41f0", "sha256": "bd9949762dc3035ce4891b91624c5c3b9aeb754ec44b2d9c103e46fde6a6a24b"}, "downloads": -1, "filename": "gocardless_pro-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5854bf916fdd9680d77be1d75d3c41f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18002, "upload_time": "2015-12-15T12:49:19", "upload_time_iso_8601": "2015-12-15T12:49:19.439565Z", "url": "https://files.pythonhosted.org/packages/0b/8c/c9dfe6d815a7a416548be9678862aa95f09c036daa9a29ab7cecdf66b979/gocardless_pro-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "38d832eb25346b97f8c679330c440a37", "sha256": "e6b85541a6f8e0c8586c259f95dc3b995ee2c84f1e9a70a6eca59916a43c71ee"}, "downloads": -1, "filename": "gocardless_pro-0.2.1.tar.gz", "has_sig": false, "md5_digest": "38d832eb25346b97f8c679330c440a37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18025, "upload_time": "2016-02-05T12:37:19", "upload_time_iso_8601": "2016-02-05T12:37:19.873460Z", "url": "https://files.pythonhosted.org/packages/1f/61/668d2a83f37a74751f647aa4e2a5dbed49d638d1a22890088d0c7a50c61f/gocardless_pro-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "4b52af7b33a52acc6965e2b2b163dfa1", "sha256": "f54ba0ab95f50f85e41f39c03365d4a23d75cd1efe7ecc1f6cea982923173249"}, "downloads": -1, "filename": "gocardless_pro-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4b52af7b33a52acc6965e2b2b163dfa1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18261, "upload_time": "2016-03-16T14:43:44", "upload_time_iso_8601": "2016-03-16T14:43:44.754159Z", "url": "https://files.pythonhosted.org/packages/4a/59/17207ec464d7567a2875f0f1d4eb940998918b7f2608d1f923430f6607d7/gocardless_pro-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "4e06eb711c7fb09872cfd80263e9ef8c", "sha256": "51bce08b660a1735392bf85eba4a5b656e4c27d85b5668eefcbd08e6052a4052"}, "downloads": -1, "filename": "gocardless_pro-0.2.3.tar.gz", "has_sig": false, "md5_digest": "4e06eb711c7fb09872cfd80263e9ef8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17001, "upload_time": "2016-08-03T14:48:53", "upload_time_iso_8601": "2016-08-03T14:48:53.054878Z", "url": "https://files.pythonhosted.org/packages/3e/19/1c3b932fbddef892cdd14b28e11688ea4d1c9c979e9499c25a9fdac4bd6c/gocardless_pro-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "572857c380baaf173ff2f8054ddbd3cf", "sha256": "85d74a94d9a72932beec8a3b8cecdbcbb81ece5c16c335ac47fb542ded56c4e2"}, "downloads": -1, "filename": "gocardless_pro-0.2.4.tar.gz", "has_sig": false, "md5_digest": "572857c380baaf173ff2f8054ddbd3cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17142, "upload_time": "2017-01-18T09:42:38", "upload_time_iso_8601": "2017-01-18T09:42:38.096663Z", "url": "https://files.pythonhosted.org/packages/82/77/966144cb6c77c607c6139467d0b683f7b947016a03969d712231e38ceee3/gocardless_pro-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "69d78e0f622c3bf68b64cd3f7f98e9f4", "sha256": "2033762c349baedff3bfcd6696081184c2f34180a95caf4f35d6c6d8c964fa50"}, "downloads": -1, "filename": "gocardless_pro-0.3.0.tar.gz", "has_sig": false, "md5_digest": "69d78e0f622c3bf68b64cd3f7f98e9f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17169, "upload_time": "2017-02-22T10:32:07", "upload_time_iso_8601": "2017-02-22T10:32:07.192311Z", "url": "https://files.pythonhosted.org/packages/95/9b/8c40f73074f13f8dfdd17428fa108b017ba6a107c86d8ad08c14eb6eb4ee/gocardless_pro-0.3.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "81f8505a8adeb2ec42232ce77a0342e3", "sha256": "73e2671fe5057abdebabb3ef465749bd29a34d8ee9d4a554c925b45c48e1f395"}, "downloads": -1, "filename": "gocardless_pro-1.0.0.tar.gz", "has_sig": false, "md5_digest": "81f8505a8adeb2ec42232ce77a0342e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20380, "upload_time": "2017-05-19T11:52:13", "upload_time_iso_8601": "2017-05-19T11:52:13.030283Z", "url": "https://files.pythonhosted.org/packages/ca/81/dba8d3bad9cc5d5746d1704d6ddfbb8a7b219e0fc74d416d6aedbd8c486c/gocardless_pro-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8fa9e21e9863bcebe4a8b47ff7286051", "sha256": "ceb4a7f5975b118cb027dc0a49625be4af00eba555930f2f8ae583a0590d3f28"}, "downloads": -1, "filename": "gocardless_pro-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8fa9e21e9863bcebe4a8b47ff7286051", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20776, "upload_time": "2017-09-18T15:14:28", "upload_time_iso_8601": "2017-09-18T15:14:28.010697Z", "url": "https://files.pythonhosted.org/packages/93/17/eedd9fafffac8d8d627f8ba8e2dec7c3d7d5cef033679574ed63b29bb95e/gocardless_pro-1.1.0.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "a0b1aa30217166e0e8c85d6c977242ab", "sha256": "9e4dc27b0bc122de3ef825568bbe0767bf8e80412afae388b34c920fdea408b1"}, "downloads": -1, "filename": "gocardless_pro-1.10.0.tar.gz", "has_sig": false, "md5_digest": "a0b1aa30217166e0e8c85d6c977242ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27811, "upload_time": "2019-07-26T10:20:15", "upload_time_iso_8601": "2019-07-26T10:20:15.595363Z", "url": "https://files.pythonhosted.org/packages/f3/28/4299a55c79bc1dc7144ca8d1c91ac0a46c9cbf9d61d09a10728d33662e50/gocardless_pro-1.10.0.tar.gz", "yanked": false}], "1.11.0": [{"comment_text": "", "digests": {"md5": "e354c793c0191d8cde01ac66ea542509", "sha256": "308e15511ec4363ffa00ef872e99baecca24b044b62b4785a5ad7324818067d4"}, "downloads": -1, "filename": "gocardless_pro-1.11.0.tar.gz", "has_sig": false, "md5_digest": "e354c793c0191d8cde01ac66ea542509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28089, "upload_time": "2019-10-16T14:27:54", "upload_time_iso_8601": "2019-10-16T14:27:54.702777Z", "url": "https://files.pythonhosted.org/packages/ae/90/887748148fad7154f231e7336d562f023bcb6ee9c97ac7f29a1d20142dc7/gocardless_pro-1.11.0.tar.gz", "yanked": false}], "1.12.0": [{"comment_text": "", "digests": {"md5": "564ca060a71f8d54dffadee7f8089159", "sha256": "7c4cfec376d53540cd6fa194cf2e1fa67bc613bff1d4d12a5715d5ca40915da8"}, "downloads": -1, "filename": "gocardless_pro-1.12.0.tar.gz", "has_sig": false, "md5_digest": "564ca060a71f8d54dffadee7f8089159", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29533, "upload_time": "2020-01-28T14:02:15", "upload_time_iso_8601": "2020-01-28T14:02:15.642311Z", "url": "https://files.pythonhosted.org/packages/c8/76/a0fcdf56a251afbfcd2e619b1fe670731669e73850a8c958b4f62a341248/gocardless_pro-1.12.0.tar.gz", "yanked": false}], "1.12.1": [{"comment_text": "", "digests": {"md5": "08877aa96470ec838245a2972c61b02b", "sha256": "b1b09a0a3ffae434af179996d3adeff9aa6e3f0a0eaee7bfcc861b73a269b159"}, "downloads": -1, "filename": "gocardless_pro-1.12.1.tar.gz", "has_sig": false, "md5_digest": "08877aa96470ec838245a2972c61b02b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29667, "upload_time": "2020-01-28T17:06:55", "upload_time_iso_8601": "2020-01-28T17:06:55.761367Z", "url": "https://files.pythonhosted.org/packages/7d/9e/87d2589d709a5f8204d58885863d1ed79ac35578a0f73e3736fc3bfb7cd4/gocardless_pro-1.12.1.tar.gz", "yanked": false}], "1.13.0": [{"comment_text": "", "digests": {"md5": "c7a7000472028ea5ed068bf2ce7bb9ce", "sha256": "95dd8ff66d7bed3842b39b143ba83e169da7107f9f8eabc51538943c2bbb14f1"}, "downloads": -1, "filename": "gocardless_pro-1.13.0.tar.gz", "has_sig": false, "md5_digest": "c7a7000472028ea5ed068bf2ce7bb9ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28706, "upload_time": "2020-02-06T15:52:57", "upload_time_iso_8601": "2020-02-06T15:52:57.845606Z", "url": "https://files.pythonhosted.org/packages/9c/8f/a68b8443929fcc8877acde2d1e8f58aeea5a4ba5a300da25ad2f28b1a37d/gocardless_pro-1.13.0.tar.gz", "yanked": false}], "1.14.0": [{"comment_text": "", "digests": {"md5": "ab8fd9814859b137b13abb91a9b6270f", "sha256": "edf5637a904ad28c79a3489ad79f15cac27b77a7547e773ffd7871d16374b86e"}, "downloads": -1, "filename": "gocardless_pro-1.14.0.tar.gz", "has_sig": false, "md5_digest": "ab8fd9814859b137b13abb91a9b6270f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29817, "upload_time": "2020-02-10T16:20:33", "upload_time_iso_8601": "2020-02-10T16:20:33.893390Z", "url": "https://files.pythonhosted.org/packages/12/13/b64181d21170f7f872ec6c426501fadaadde1aa773cc0d474e74d29b0707/gocardless_pro-1.14.0.tar.gz", "yanked": false}], "1.16.0": [{"comment_text": "", "digests": {"md5": "4a11474031163677cd766ff83188d0ee", "sha256": "48950c5c12937157c16ca43911e4a41b2af04dfb4f05cc4a3acbb3676fcdd0e9"}, "downloads": -1, "filename": "gocardless_pro-1.16.0.tar.gz", "has_sig": false, "md5_digest": "4a11474031163677cd766ff83188d0ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30771, "upload_time": "2020-03-04T15:53:04", "upload_time_iso_8601": "2020-03-04T15:53:04.978639Z", "url": "https://files.pythonhosted.org/packages/48/95/1a2b8d234b37cb6266923a1153768dcc0eca95c2d5b7a1567fdd5c70ee14/gocardless_pro-1.16.0.tar.gz", "yanked": false}], "1.16.1": [{"comment_text": "", "digests": {"md5": "99273017110813da828756397ce503dd", "sha256": "e024944561cd22ae942987189a92c6cc059a77fb085de331d906814cb5547935"}, "downloads": -1, "filename": "gocardless_pro-1.16.1.tar.gz", "has_sig": false, "md5_digest": "99273017110813da828756397ce503dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31172, "upload_time": "2020-04-06T14:29:24", "upload_time_iso_8601": "2020-04-06T14:29:24.665021Z", "url": "https://files.pythonhosted.org/packages/c7/47/7daea1ea5114f62784594d002632912f41991f14d60251b8a0c8dd0f3b7a/gocardless_pro-1.16.1.tar.gz", "yanked": false}], "1.17.0": [{"comment_text": "", "digests": {"md5": "20db6276bd331792fe667fc673d443a2", "sha256": "babeea824610af3702bfc83a3a0c91b13bb75b18759ae9a83503ae8e03babdca"}, "downloads": -1, "filename": "gocardless_pro-1.17.0.tar.gz", "has_sig": false, "md5_digest": "20db6276bd331792fe667fc673d443a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31766, "upload_time": "2020-04-20T14:55:31", "upload_time_iso_8601": "2020-04-20T14:55:31.761198Z", "url": "https://files.pythonhosted.org/packages/f6/d0/6cd9c7c0d57f8f039a9aba929bb49416ea3c98d1769a7a0c7ff31eaf7429/gocardless_pro-1.17.0.tar.gz", "yanked": false}], "1.18.0": [{"comment_text": "", "digests": {"md5": "401f8f3caef497e1e4f6e690c54ec2ab", "sha256": "af26002c533f370d793e9da277128ead45cbc9e73fccda0a9d21a56cea7ddb35"}, "downloads": -1, "filename": "gocardless_pro-1.18.0.tar.gz", "has_sig": false, "md5_digest": "401f8f3caef497e1e4f6e690c54ec2ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31951, "upload_time": "2020-05-06T09:19:40", "upload_time_iso_8601": "2020-05-06T09:19:40.085926Z", "url": "https://files.pythonhosted.org/packages/ae/88/68e642ea414f9ec7cbb284db980c4541e194d1288838887e1a61e08cf0bc/gocardless_pro-1.18.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "21906c072e19b15214043be683c70672", "sha256": "5d0d630941cfffbf05519be1ef3a68b8074c2482ea26534f4d13749b0403b553"}, "downloads": -1, "filename": "gocardless_pro-1.2.0.tar.gz", "has_sig": false, "md5_digest": "21906c072e19b15214043be683c70672", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21253, "upload_time": "2017-11-14T15:46:28", "upload_time_iso_8601": "2017-11-14T15:46:28.745162Z", "url": "https://files.pythonhosted.org/packages/e1/0a/92875132d161cc3c7ec1d607822501932cd6040e3b1e5a98118babfddbd6/gocardless_pro-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "29eb618840ca1fe90f55168f057af7b9", "sha256": "94f22fb131e84ebb6853b11913e792a233b8d7a4a6eb8ba8b9825c09d6e7186b"}, "downloads": -1, "filename": "gocardless_pro-1.3.0.tar.gz", "has_sig": false, "md5_digest": "29eb618840ca1fe90f55168f057af7b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21267, "upload_time": "2017-12-04T15:51:50", "upload_time_iso_8601": "2017-12-04T15:51:50.470663Z", "url": "https://files.pythonhosted.org/packages/cc/cb/7daa7c3c06d2f7c6f0e5bf4ebbb9b657064387dce3f2ae3df16906a400bc/gocardless_pro-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "61f2e2adeec1bff0d40ed6b42e4fe53e", "sha256": "04a88826574105164f057e523d180a27ad3c3f2260001f8dac567851e252e1b3"}, "downloads": -1, "filename": "gocardless_pro-1.3.1.tar.gz", "has_sig": false, "md5_digest": "61f2e2adeec1bff0d40ed6b42e4fe53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21267, "upload_time": "2017-12-05T09:14:03", "upload_time_iso_8601": "2017-12-05T09:14:03.343777Z", "url": "https://files.pythonhosted.org/packages/6b/9f/d035eddc121a8bd83e68d322e2acfdfcd4cbb97146320e52d90435f3c7ee/gocardless_pro-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "0ca8c71517d9c70ea2650cc8f0fb32fb", "sha256": "cdd9cac4da8f7159cd77c12b00b3c24c767f2ca0918b6b94a29530330a3fe543"}, "downloads": -1, "filename": "gocardless_pro-1.4.0.tar.gz", "has_sig": false, "md5_digest": "0ca8c71517d9c70ea2650cc8f0fb32fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21512, "upload_time": "2018-03-16T13:46:25", "upload_time_iso_8601": "2018-03-16T13:46:25.687379Z", "url": "https://files.pythonhosted.org/packages/9b/0c/c4665c6ae25fa24aaee01987fe3e0285d13d8a68da2dc3d6b101d4a74464/gocardless_pro-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "b5206bb93f6503a294fc25c4f25a21fe", "sha256": "a26f19ba6e7adbb9485e89b077eab2a1a5b1b18e058d3cf8636b191aee806669"}, "downloads": -1, "filename": "gocardless_pro-1.5.0.tar.gz", "has_sig": false, "md5_digest": "b5206bb93f6503a294fc25c4f25a21fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21586, "upload_time": "2018-04-11T13:15:03", "upload_time_iso_8601": "2018-04-11T13:15:03.767766Z", "url": "https://files.pythonhosted.org/packages/e8/e6/9446ec92ea1508df1bbda8dfd7e240b3efa136cadf3f3060863795df3d45/gocardless_pro-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "907d71366fa7ba86059277eb4338a11b", "sha256": "3cf236316b0c59ba83004b8f737f37a265b1a346102f40c7e43ba85064590753"}, "downloads": -1, "filename": "gocardless_pro-1.6.0.tar.gz", "has_sig": false, "md5_digest": "907d71366fa7ba86059277eb4338a11b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23144, "upload_time": "2018-04-26T11:02:58", "upload_time_iso_8601": "2018-04-26T11:02:58.190430Z", "url": "https://files.pythonhosted.org/packages/28/18/2b25bf48a4019bfa0de8f7decccf915592426cb8461f187d2ad48483e44d/gocardless_pro-1.6.0.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "bb9ec3787850c706ca3c39b2dca3b43f", "sha256": "546ab3e5f7c2912eab4ea14c7e040db4e81ca39416fdcab6e22db1c2445b1d67"}, "downloads": -1, "filename": "gocardless_pro-1.7.0.tar.gz", "has_sig": false, "md5_digest": "bb9ec3787850c706ca3c39b2dca3b43f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23372, "upload_time": "2018-05-22T12:38:12", "upload_time_iso_8601": "2018-05-22T12:38:12.043062Z", "url": "https://files.pythonhosted.org/packages/c4/34/a97f8bcbec5b4f2be2a8a07e3cf3f8d8ec7286be5b3704aea8b30f77ab9f/gocardless_pro-1.7.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "13da0cdbd4ba03ddd55d92345bd256c6", "sha256": "08555e6e54b274fd3c42f6a7987cd4f3fc330cf2169b3c2941edf0ad5d61f3e4"}, "downloads": -1, "filename": "gocardless_pro-1.8.0.tar.gz", "has_sig": false, "md5_digest": "13da0cdbd4ba03ddd55d92345bd256c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23298, "upload_time": "2018-07-13T09:57:55", "upload_time_iso_8601": "2018-07-13T09:57:55.472320Z", "url": "https://files.pythonhosted.org/packages/7e/84/7b53e39fd3789556d17d5389e31f2dddde2b1a73f8d5c34f34173366a1b9/gocardless_pro-1.8.0.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "b700a3d15537c9f16ba0bd401adf9bd7", "sha256": "71539fd9ef48db9023bfba2de3665fcaa723e8c7327f2fb9545802429b80e249"}, "downloads": -1, "filename": "gocardless_pro-1.9.0.tar.gz", "has_sig": false, "md5_digest": "b700a3d15537c9f16ba0bd401adf9bd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27499, "upload_time": "2018-10-04T09:46:45", "upload_time_iso_8601": "2018-10-04T09:46:45.514170Z", "url": "https://files.pythonhosted.org/packages/26/a3/05fe06a8fb94a48c4096747e7a6f99f4101fcf389ab99f6fe8156d4786fe/gocardless_pro-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "401f8f3caef497e1e4f6e690c54ec2ab", "sha256": "af26002c533f370d793e9da277128ead45cbc9e73fccda0a9d21a56cea7ddb35"}, "downloads": -1, "filename": "gocardless_pro-1.18.0.tar.gz", "has_sig": false, "md5_digest": "401f8f3caef497e1e4f6e690c54ec2ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31951, "upload_time": "2020-05-06T09:19:40", "upload_time_iso_8601": "2020-05-06T09:19:40.085926Z", "url": "https://files.pythonhosted.org/packages/ae/88/68e642ea414f9ec7cbb284db980c4541e194d1288838887e1a61e08cf0bc/gocardless_pro-1.18.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:05 2020"}