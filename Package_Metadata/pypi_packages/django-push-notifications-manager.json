{"info": {"author": "Paul Oostenrijk", "author_email": "paul@glemma.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "Django Push Notifications\n=========================\n\nThis package makes it easy to support Push notifications. It works\ntogether with third party services such as ``ZeroPush``.\n\nYou can easily add permissions to push devices by chaining those devices\nto a notification setting. For registering a new push device you can add\ncustom permissions.\n\nInstallation\n------------\n\nTo install the package on your machine you can run the PIP install:\n\n::\n\n    pip install django-push-notifications-manager\n\nConfiguration\n-------------\n\nFirst you have to add ``push_notifications`` to your installed apps:\n\n.. code:: python\n\n      INSTALLED_APPS = (\n        ...\n        'push_notifications',\n      )\n\nTo setup the package you have to add a ``DJANGO_PUSH_NOTIFICATIONS``\ninto your settings:\n\n.. code:: python\n\n    def Settings(Configuration):\n      # ...\n      DJANGO_PUSH_NOTIFICATIONS = {\n          'SERVICE': 'push_notifications.services.zeropush.ZeroPushService',\n          'AUTH_TOKEN': '123123123'\n      }\n\nThe ``SERVICE`` Key can be set to the type of service you use. In this\nexample we use the ``ZeroPushService``. With the ``ZeroPush`` Service we\nare required to add a ``AUTH_TOKEN`` to the ``Configuration``.\n\n**Note**: Right now, only ``ZeroPush`` is available. More services will\nbe available soon.\n\nUsage\n-----\n\nRegister a device\n~~~~~~~~~~~~~~~~~\n\nTo register a new device you can use the ``register_push_device`` method\nin ``utils``:\n\n.. code:: python\n\n    from push_notifications.utils from register_push_device\n\n    token = \"<The device token>\"\n    register_push_device(user, token)\n\nYou can also pass notification permissions directly to the\n``register_push_device`` method:\n\n.. code:: python\n\n    register_push_device(user, token, ['likes', 'comments'])\n\nAdd permissions\n~~~~~~~~~~~~~~~\n\nTo add an notification permission to a push device you can use the\n``add_permission`` method on the ``device`` object:\n\n.. code:: python\n\n    device.add_permission('likes')\n\nOr adding multiple permissions\n\n.. code:: python\n\n    device.add_permissions(['likes', 'comments'])\n\nAdd all the permission for the devices that the user owns.\n\n.. code:: python\n\n    user.push_devices.add_permissions(['likes', 'comments'])\n\nRemove permissions\n~~~~~~~~~~~~~~~~~~\n\nTo remove a notification permission you can use ``remove_permission``\nmethod on the ``device`` object:\n\n.. code:: python\n\n    device.remove_permissions('likes')\n\nOr removing multiple permissions\n\n.. code:: python\n\n    device.remove_permissions(['likes', 'comments'])\n\nRemove all the permission for the devices that the user owns.\n\n.. code:: python\n\n    user.push_devices.remove_permissions(['likes', 'comments'])\n\nSend a notification\n~~~~~~~~~~~~~~~~~~~\n\nTo send a notification to a certain permission group you can call\n``send_push_notification`` in ``utils``:\n\n.. code:: python\n\n    from push_notifications import send_push_notification\n    from datetime import timedelta\n\n    send_push_notification('likes', 'This is the message', sound=\"annoyingSound.mp3\",\n                                                           badge_number=1\n                                                           info={\n                                                            \"extra\": \"payload\",\n                                                            \"in\": \"notification\"\n                                                           },\n                                                           expiry=timedelta(days=30))\n\nDescription\n^^^^^^^^^^^\n\n``send_push_notification(notify_type, message, **kwargs)``\n\n**kwargs** - ``sound``: The sound that has to be played when sending the\nnotification - ``badge_number``: The badge\\_number that has to be\ndisplayed **(iOS Only)** - ``info``: Extra payload that comes along the\nnotification - ``expiry``: The expiry of the notification **Accepts\ntimedelta and datetime object**\n\nSend a notification to one device\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo send a notification to a specific device you can use the\n``send_push_notification`` on the ``device`` object\n\n.. code:: python\n\n    device.send_push_notification('likes', 'This is the message', sound=\"annoyingSound.mp3\",\n                                                                  badge_number=1\n                                                                  info={\n                                                                    \"extra\": \"payload\",\n                                                                    \"in\": \"notification\"\n                                                                  },\n                                                                  expiry=timedelta(days=30))\n\nIt accepts the same parameters as the global ``send_push_notification``\nin ``utils``.\n\nSend a notification to one user\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo send a notification to a user and all its devices you can use the\n``send_push_notification`` on the ``push_devices`` name in your user\nobject:\n\n.. code:: python\n\n    user.push_devices.send_push_notification('likes', 'This is the message',\n                                             sound=\"annoyingSound.mp3\",\n                                             badge_number=1\n                                             info={\n                                               \"extra\": \"payload\",\n                                               \"in\": \"notification\"\n                                             },\n                                             expiry=timedelta(days=30))", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/glemmaPaul/django-push-notifications-manager", "keywords": "django-push-notifications-manager", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-push-notifications-manager", "package_url": "https://pypi.org/project/django-push-notifications-manager/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-push-notifications-manager/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/glemmaPaul/django-push-notifications-manager"}, "release_url": "https://pypi.org/project/django-push-notifications-manager/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A plug and play package to handle push devices and push notifications for services such as ZeroPush and Urban Airship", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package makes it easy to support Push notifications. It works\ntogether with third party services such as <tt>ZeroPush</tt>.</p>\n<p>You can easily add permissions to push devices by chaining those devices\nto a notification setting. For registering a new push device you can add\ncustom permissions.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install the package on your machine you can run the PIP install:</p>\n<pre>pip install django-push-notifications-manager\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>First you have to add <tt>push_notifications</tt> to your installed apps:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n  <span class=\"o\">...</span>\n  <span class=\"s1\">'push_notifications'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To setup the package you have to add a <tt>DJANGO_PUSH_NOTIFICATIONS</tt>\ninto your settings:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">Settings</span><span class=\"p\">(</span><span class=\"n\">Configuration</span><span class=\"p\">):</span>\n  <span class=\"c1\"># ...</span>\n  <span class=\"n\">DJANGO_PUSH_NOTIFICATIONS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'SERVICE'</span><span class=\"p\">:</span> <span class=\"s1\">'push_notifications.services.zeropush.ZeroPushService'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'AUTH_TOKEN'</span><span class=\"p\">:</span> <span class=\"s1\">'123123123'</span>\n  <span class=\"p\">}</span>\n</pre>\n<p>The <tt>SERVICE</tt> Key can be set to the type of service you use. In this\nexample we use the <tt>ZeroPushService</tt>. With the <tt>ZeroPush</tt> Service we\nare required to add a <tt>AUTH_TOKEN</tt> to the <tt>Configuration</tt>.</p>\n<p><strong>Note</strong>: Right now, only <tt>ZeroPush</tt> is available. More services will\nbe available soon.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"register-a-device\">\n<h3>Register a device</h3>\n<p>To register a new device you can use the <tt>register_push_device</tt> method\nin <tt>utils</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">push_notifications.utils</span> <span class=\"kn\">from</span> <span class=\"nn\">register_push_device</span>\n\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;The device token&gt;\"</span>\n<span class=\"n\">register_push_device</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</pre>\n<p>You can also pass notification permissions directly to the\n<tt>register_push_device</tt> method:</p>\n<pre><span class=\"n\">register_push_device</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'comments'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"add-permissions\">\n<h3>Add permissions</h3>\n<p>To add an notification permission to a push device you can use the\n<tt>add_permission</tt> method on the <tt>device</tt> object:</p>\n<pre><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">add_permission</span><span class=\"p\">(</span><span class=\"s1\">'likes'</span><span class=\"p\">)</span>\n</pre>\n<p>Or adding multiple permissions</p>\n<pre><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">add_permissions</span><span class=\"p\">([</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'comments'</span><span class=\"p\">])</span>\n</pre>\n<p>Add all the permission for the devices that the user owns.</p>\n<pre><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">push_devices</span><span class=\"o\">.</span><span class=\"n\">add_permissions</span><span class=\"p\">([</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'comments'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"remove-permissions\">\n<h3>Remove permissions</h3>\n<p>To remove a notification permission you can use <tt>remove_permission</tt>\nmethod on the <tt>device</tt> object:</p>\n<pre><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">remove_permissions</span><span class=\"p\">(</span><span class=\"s1\">'likes'</span><span class=\"p\">)</span>\n</pre>\n<p>Or removing multiple permissions</p>\n<pre><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">remove_permissions</span><span class=\"p\">([</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'comments'</span><span class=\"p\">])</span>\n</pre>\n<p>Remove all the permission for the devices that the user owns.</p>\n<pre><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">push_devices</span><span class=\"o\">.</span><span class=\"n\">remove_permissions</span><span class=\"p\">([</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'comments'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"send-a-notification\">\n<h3>Send a notification</h3>\n<p>To send a notification to a certain permission group you can call\n<tt>send_push_notification</tt> in <tt>utils</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">push_notifications</span> <span class=\"kn\">import</span> <span class=\"n\">send_push_notification</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">timedelta</span>\n\n<span class=\"n\">send_push_notification</span><span class=\"p\">(</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'This is the message'</span><span class=\"p\">,</span> <span class=\"n\">sound</span><span class=\"o\">=</span><span class=\"s2\">\"annoyingSound.mp3\"</span><span class=\"p\">,</span>\n                                                       <span class=\"n\">badge_number</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                                                       <span class=\"n\">info</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                                                        <span class=\"s2\">\"extra\"</span><span class=\"p\">:</span> <span class=\"s2\">\"payload\"</span><span class=\"p\">,</span>\n                                                        <span class=\"s2\">\"in\"</span><span class=\"p\">:</span> <span class=\"s2\">\"notification\"</span>\n                                                       <span class=\"p\">},</span>\n                                                       <span class=\"n\">expiry</span><span class=\"o\">=</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n</pre>\n<div id=\"description\">\n<h4>Description</h4>\n<p><tt>send_push_notification(notify_type, message, **kwargs)</tt></p>\n<p><strong>kwargs</strong> - <tt>sound</tt>: The sound that has to be played when sending the\nnotification - <tt>badge_number</tt>: The badge_number that has to be\ndisplayed <strong>(iOS Only)</strong> - <tt>info</tt>: Extra payload that comes along the\nnotification - <tt>expiry</tt>: The expiry of the notification <strong>Accepts\ntimedelta and datetime object</strong></p>\n</div>\n</div>\n<div id=\"send-a-notification-to-one-device\">\n<h3>Send a notification to one device</h3>\n<p>To send a notification to a specific device you can use the\n<tt>send_push_notification</tt> on the <tt>device</tt> object</p>\n<pre><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">send_push_notification</span><span class=\"p\">(</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'This is the message'</span><span class=\"p\">,</span> <span class=\"n\">sound</span><span class=\"o\">=</span><span class=\"s2\">\"annoyingSound.mp3\"</span><span class=\"p\">,</span>\n                                                              <span class=\"n\">badge_number</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                                                              <span class=\"n\">info</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                                                                <span class=\"s2\">\"extra\"</span><span class=\"p\">:</span> <span class=\"s2\">\"payload\"</span><span class=\"p\">,</span>\n                                                                <span class=\"s2\">\"in\"</span><span class=\"p\">:</span> <span class=\"s2\">\"notification\"</span>\n                                                              <span class=\"p\">},</span>\n                                                              <span class=\"n\">expiry</span><span class=\"o\">=</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n</pre>\n<p>It accepts the same parameters as the global <tt>send_push_notification</tt>\nin <tt>utils</tt>.</p>\n</div>\n<div id=\"send-a-notification-to-one-user\">\n<h3>Send a notification to one user</h3>\n<p>To send a notification to a user and all its devices you can use the\n<tt>send_push_notification</tt> on the <tt>push_devices</tt> name in your user\nobject:</p>\n<pre><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">push_devices</span><span class=\"o\">.</span><span class=\"n\">send_push_notification</span><span class=\"p\">(</span><span class=\"s1\">'likes'</span><span class=\"p\">,</span> <span class=\"s1\">'This is the message'</span><span class=\"p\">,</span>\n                                         <span class=\"n\">sound</span><span class=\"o\">=</span><span class=\"s2\">\"annoyingSound.mp3\"</span><span class=\"p\">,</span>\n                                         <span class=\"n\">badge_number</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n                                         <span class=\"n\">info</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                                           <span class=\"s2\">\"extra\"</span><span class=\"p\">:</span> <span class=\"s2\">\"payload\"</span><span class=\"p\">,</span>\n                                           <span class=\"s2\">\"in\"</span><span class=\"p\">:</span> <span class=\"s2\">\"notification\"</span>\n                                         <span class=\"p\">},</span>\n                                         <span class=\"n\">expiry</span><span class=\"o\">=</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1526392, "releases": {"0.1.0": [], "0.1.1": []}, "urls": [], "timestamp": "Fri May  8 00:54:36 2020"}