{"info": {"author": "felipe zapata", "author_email": "f.zapata@esciencecenter.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Chemistry"], "description": "\n.. image:: https://img.shields.io/github/license/SCM-NV/qmflows.svg?maxAge=2592000\n   :target: https://github.com/SCM-NV/qmflows/blob/master/LICENSE.md\n.. image:: https://travis-ci.org/SCM-NV/qmflows.svg?branch=master\n   :target: https://travis-ci.org/SCM-NV/qmflows \n.. image:: https://img.shields.io/badge/python-3.5-blue.svg\n.. image:: https://api.codacy.com/project/badge/Grade/7e95b6d4d873458daf0de5e4b3110885\n   :target: https://www.codacy.com/app/tifonzafel/qmflows?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=SCM-NV/qmflows&amp;utm_campaign=Badge_Grade\t   \n.. image:: https://api.codacy.com/project/badge/Coverage/7e95b6d4d873458daf0de5e4b3110885\n   :target: https://www.codacy.com/app/tifonzafel/qmflows?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=SCM-NV/qmflows&amp;utm_campaign=Badge_Coverage\t   \n\nQMFlows\n#######\nSee http://scm-nv.github.io/qmflows/ for tutorials and documentation.\n\nMotivation\n==========\nResearch on modern computational quantum chemistry relies on a set of computational\ntools to carry out calculations. The complexity of the calculations usually requires \nintercommunication between the aforementioned tools, such communication is usually done \nthrough shell scripts that try to automate input/output actions like: launching \nthe computations in a cluster, reading the resulting output and feeding the relevant\nnumerical result to another program. Such scripts are difficult to maintain and extend,\nrequiring a significant programming expertise to work with them. Being then desirable a\nset of automatic and extensible tools that allows to perform complex simulations in\nheterogeneous hardware platforms.\n\nThis library tackles the construction and efficient execution of computational chemistry workflows.\nThis allows computational chemists to use the emerging massively parallel compute environments in\nan easy manner and focus on interpretation of scientific data rather than on tedious job submission\nprocedures and manual data processing. \n\nDescription\n===========\nThis library consists of a set of modules written in Python 3.5 to\nautomate the following tasks:\n\n 1. Input generation.\n 2. Handle tasks dependencies (Noodles_).\n 3. Advanced molecular manipulation capabilities with (rdkit_).\n 4. Numerical data storage and manipulation (HDF5_).\n 5. Jobs failure detection and recovery.\n 6. Distribution in heterogeneous hardware platforms.    \n\nTutorial and Examples\n---------------------\nA tutorial written as a jupyter-notebook_ is available from: tutorial-qmflows_. You can\nalso access direclty more advanced examples_.\n    \n \nInstallation\n============\n\n- Download miniconda for python >= 3.5: miniconda_ (also you can install the complete anaconda_ version).\n\n- Install according to: installConda_. \n\n- Reopen terminal (or type ``source ~/.bashrc``).\n\n- Create a new virtual environment using the following commands:\n\n  - ``conda create -n qmflows python=3.5`` \n\n- Activate the new virtual environment\n  \n  - ``source activate qmflows``\n\nTo exit the virtual environment type  ``source deactivate``.\n    \n    \n.. _dependecies:\n\nDependencies installation\n-------------------------\n\nUsing the conda environment the following packages should be installed:    \n\n\n- install rdkit_ using the following command:\n\n  - ``conda install -y -q --name qmflows -c https://conda.anaconda.org/rdkit rdkit``\n\n- install HDF5_ using conda:\n\n  - ``conda install -y -q --name qmflows -c anaconda h5py``\n    \n\n.. _installation:\n\nPackage installation\n--------------------\n    \n- Type in your terminal,\n\n  ``source activate qmflows``  \n\n- Then\n\n  ``pip install qmflows --upgrade``\n  \nNow you are ready to use *qmflows*. \n \n\nLatest stable version\n---------------------\nIf you want to install the latest stable version directly from github\nyou can use the following command:\n\n``pip install https://github.com/SCM-NV/qmflows/tarball/master#egg=qmflows``\n\n  **Notes:**\n\n  - Once the libraries and the virtual environment are installed, you only need to type\n    ``source activate qmflows`` each time that you want to use the software.\n\n\n.. _remote_setup:\n\nRemote/Xenon setup\n------------------\n\nQmflows supports running jobs over a variety of cluster computing schedulers\nlike Slurm and Torque. You program and run your workflows from your laptop, but\nthe jobs are run at the remote site. For this to work you need to setup Qmflows\nboth locally and remotely. In addition you need to add a Bash script that loads\nthe VirtualEnv and starts the Noodles remote worker. This remote worker acts as\na pilot job, reading job descriptions from input and returning the results. If\nyou defined the remote VirtualEnv with the name `qmflows`, the following Bash\nscript gives an idea of what you need:\n\n.. code-block:: bash\n\n    #!/bin/bash\n    # comment/uncomment lines that you need\n\n    # If you need ADF, and it is available in a module\n    module load adf/2016.102\n    # or if you installed it yourself\n    # ADFHOME=${HOME}/.local/opt/adf\n    # source ${ADFHOME}/bin/adfrc.sh\n\n    # Point PLAMS to its place\n    export PLAMSDEFAULTS=\"${HOME}/.local/src/plams/utils/plams_defaults.py\"\n\n    # Go to the directory that contains this script\n    cd \"$(dirname \"${BASH_SOURCE[0]}\")\"\n\n    # Activate the VirtualEnv\n    source activate qmflows\n\n    # Start the remote worker\n    python -m noodles.worker ${@:2}\n\n    # Bye!\n    source deactivate\n\n\n\n\n.. _miniconda: http://conda.pydata.org/miniconda.html\n.. _anaconda: https://www.continuum.io/downloads\n.. _installConda: http://conda.pydata.org/docs/install/quick.html\n.. _Noodles: http://nlesc.github.io/noodles/\n.. _HDF5: http://www.h5py.org/ \n.. _here: https://www.python.org/downloads/\n.. _rdkit: http://www.rdkit.org\n.. _Plams: https://www.scm.com/documentation/Tutorials/Scripting/first_steps_with_plams/\n.. _jupyter-notebook: http://jupyter.org/\n.. _tutorial-qmflows: https://github.com/SCM-NV/qmflows/tree/master/jupyterNotebooks\n.. _examples: https://github.com/SCM-NV/qmflows/tree/master/src/qmflows/examples\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SCM-NV/qmflows", "keywords": "chemistry workflows simulation materials", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "qmflows", "package_url": "https://pypi.org/project/qmflows/", "platform": "", "project_url": "https://pypi.org/project/qmflows/", "project_urls": {"Homepage": "https://github.com/SCM-NV/qmflows"}, "release_url": "https://pypi.org/project/qmflows/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Automation of computations in quantum chemistry", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/SCM-NV/qmflows/blob/master/LICENSE.md\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/license/SCM-NV/qmflows.svg?maxAge=2592000\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1de5d20756e6686c6ab11f73e82188d65b8c2495/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f53434d2d4e562f716d666c6f77732e7376673f6d61784167653d32353932303030\"></a>\n<a href=\"https://travis-ci.org/SCM-NV/qmflows\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/SCM-NV/qmflows.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d22fb7f1f57e7a511cf459301d131ed4b748c0a3/68747470733a2f2f7472617669732d63692e6f72672f53434d2d4e562f716d666c6f77732e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"https://img.shields.io/badge/python-3.5-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8963091336cb0312d5fefe404229cb9ec0fb8b25/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352d626c75652e737667\">\n<a href=\"https://www.codacy.com/app/tifonzafel/qmflows?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=SCM-NV/qmflows&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Grade/7e95b6d4d873458daf0de5e4b3110885\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2624dc0da77fb8dc97ba8218fd309acbf991849a/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3765393562366434643837333435386461663064653565346233313130383835\"></a>\n<a href=\"https://www.codacy.com/app/tifonzafel/qmflows?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=SCM-NV/qmflows&amp;amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Coverage/7e95b6d4d873458daf0de5e4b3110885\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/571d216341fbac5f0a166e73f777e1dbb6bfe38d/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f3765393562366434643837333435386461663064653565346233313130383835\"></a>\n<div id=\"qmflows\">\n<h2>QMFlows</h2>\n<p>See <a href=\"http://scm-nv.github.io/qmflows/\" rel=\"nofollow\">http://scm-nv.github.io/qmflows/</a> for tutorials and documentation.</p>\n<div id=\"motivation\">\n<h3>Motivation</h3>\n<p>Research on modern computational quantum chemistry relies on a set of computational\ntools to carry out calculations. The complexity of the calculations usually requires\nintercommunication between the aforementioned tools, such communication is usually done\nthrough shell scripts that try to automate input/output actions like: launching\nthe computations in a cluster, reading the resulting output and feeding the relevant\nnumerical result to another program. Such scripts are difficult to maintain and extend,\nrequiring a significant programming expertise to work with them. Being then desirable a\nset of automatic and extensible tools that allows to perform complex simulations in\nheterogeneous hardware platforms.</p>\n<p>This library tackles the construction and efficient execution of computational chemistry workflows.\nThis allows computational chemists to use the emerging massively parallel compute environments in\nan easy manner and focus on interpretation of scientific data rather than on tedious job submission\nprocedures and manual data processing.</p>\n</div>\n<div id=\"description\">\n<h3>Description</h3>\n<p>This library consists of a set of modules written in Python 3.5 to\nautomate the following tasks:</p>\n<blockquote>\n<ol>\n<li>Input generation.</li>\n<li>Handle tasks dependencies (<a href=\"http://nlesc.github.io/noodles/\" rel=\"nofollow\">Noodles</a>).</li>\n<li>Advanced molecular manipulation capabilities with (<a href=\"http://www.rdkit.org\" rel=\"nofollow\">rdkit</a>).</li>\n<li>Numerical data storage and manipulation (<a href=\"http://www.h5py.org/\" rel=\"nofollow\">HDF5</a>).</li>\n<li>Jobs failure detection and recovery.</li>\n<li>Distribution in heterogeneous hardware platforms.</li>\n</ol>\n</blockquote>\n<div id=\"tutorial-and-examples\">\n<h4>Tutorial and Examples</h4>\n<p>A tutorial written as a <a href=\"http://jupyter.org/\" rel=\"nofollow\">jupyter-notebook</a> is available from: <a href=\"https://github.com/SCM-NV/qmflows/tree/master/jupyterNotebooks\" rel=\"nofollow\">tutorial-qmflows</a>. You can\nalso access direclty more advanced <a href=\"https://github.com/SCM-NV/qmflows/tree/master/src/qmflows/examples\" rel=\"nofollow\">examples</a>.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<ul>\n<li>Download miniconda for python &gt;= 3.5: <a href=\"http://conda.pydata.org/miniconda.html\" rel=\"nofollow\">miniconda</a> (also you can install the complete <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">anaconda</a> version).</li>\n<li>Install according to: <a href=\"http://conda.pydata.org/docs/install/quick.html\" rel=\"nofollow\">installConda</a>.</li>\n<li>Reopen terminal (or type <tt>source <span class=\"pre\">~/.bashrc</span></tt>).</li>\n<li>Create a new virtual environment using the following commands:<ul>\n<li><tt>conda create <span class=\"pre\">-n</span> qmflows python=3.5</tt></li>\n</ul>\n</li>\n<li>Activate the new virtual environment<ul>\n<li><tt>source activate qmflows</tt></li>\n</ul>\n</li>\n</ul>\n<p>To exit the virtual environment type  <tt>source deactivate</tt>.</p>\n<div id=\"dependencies-installation\">\n<span id=\"dependecies\"></span><h4>Dependencies installation</h4>\n<p>Using the conda environment the following packages should be installed:</p>\n<ul>\n<li>install <a href=\"http://www.rdkit.org\" rel=\"nofollow\">rdkit</a> using the following command:<ul>\n<li><tt>conda install <span class=\"pre\">-y</span> <span class=\"pre\">-q</span> <span class=\"pre\">--name</span> qmflows <span class=\"pre\">-c</span> <span class=\"pre\">https://conda.anaconda.org/rdkit</span> rdkit</tt></li>\n</ul>\n</li>\n<li>install <a href=\"http://www.h5py.org/\" rel=\"nofollow\">HDF5</a> using conda:<ul>\n<li><tt>conda install <span class=\"pre\">-y</span> <span class=\"pre\">-q</span> <span class=\"pre\">--name</span> qmflows <span class=\"pre\">-c</span> anaconda h5py</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"package-installation\">\n<span id=\"id1\"></span><h4>Package installation</h4>\n<ul>\n<li><p>Type in your terminal,</p>\n<p><tt>source activate qmflows</tt></p>\n</li>\n<li><p>Then</p>\n<p><tt>pip install qmflows <span class=\"pre\">--upgrade</span></tt></p>\n</li>\n</ul>\n<p>Now you are ready to use <em>qmflows</em>.</p>\n</div>\n<div id=\"latest-stable-version\">\n<h4>Latest stable version</h4>\n<p>If you want to install the latest stable version directly from github\nyou can use the following command:</p>\n<p><tt>pip install <span class=\"pre\">https://github.com/SCM-NV/qmflows/tarball/master#egg=qmflows</span></tt></p>\n<blockquote>\n<p><strong>Notes:</strong></p>\n<ul>\n<li>Once the libraries and the virtual environment are installed, you only need to type\n<tt>source activate qmflows</tt> each time that you want to use the software.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"remote-xenon-setup\">\n<span id=\"remote-setup\"></span><h4>Remote/Xenon setup</h4>\n<p>Qmflows supports running jobs over a variety of cluster computing schedulers\nlike Slurm and Torque. You program and run your workflows from your laptop, but\nthe jobs are run at the remote site. For this to work you need to setup Qmflows\nboth locally and remotely. In addition you need to add a Bash script that loads\nthe VirtualEnv and starts the Noodles remote worker. This remote worker acts as\na pilot job, reading job descriptions from input and returning the results. If\nyou defined the remote VirtualEnv with the name <cite>qmflows</cite>, the following Bash\nscript gives an idea of what you need:</p>\n<pre><span class=\"ch\">#!/bin/bash\n</span><span class=\"c1\"># comment/uncomment lines that you need\n</span>\n<span class=\"c1\"># If you need ADF, and it is available in a module\n</span>module load adf/2016.102\n<span class=\"c1\"># or if you installed it yourself\n# ADFHOME=${HOME}/.local/opt/adf\n# source ${ADFHOME}/bin/adfrc.sh\n</span>\n<span class=\"c1\"># Point PLAMS to its place\n</span><span class=\"nb\">export</span> <span class=\"nv\">PLAMSDEFAULTS</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span><span class=\"s2\">/.local/src/plams/utils/plams_defaults.py\"</span>\n\n<span class=\"c1\"># Go to the directory that contains this script\n</span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>dirname <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">BASH_SOURCE</span><span class=\"p\">[0]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"k\">)</span><span class=\"s2\">\"</span>\n\n<span class=\"c1\"># Activate the VirtualEnv\n</span><span class=\"nb\">source</span> activate qmflows\n\n<span class=\"c1\"># Start the remote worker\n</span>python -m noodles.worker <span class=\"si\">${</span><span class=\"p\">@:</span><span class=\"nv\">2</span><span class=\"si\">}</span>\n\n<span class=\"c1\"># Bye!\n</span><span class=\"nb\">source</span> deactivate\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3338879, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "c08091fa03a125870ba025d748ac5a39", "sha256": "ccf090ccf0d2177aa5a8c76b7c2b75a08bef89c5dc9db0fbc3a4fb47c433feab"}, "downloads": -1, "filename": "qmflows-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c08091fa03a125870ba025d748ac5a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52794, "upload_time": "2017-11-16T15:20:20", "upload_time_iso_8601": "2017-11-16T15:20:20.318509Z", "url": "https://files.pythonhosted.org/packages/31/e1/369190ffc2d98f981cc5b68beb0fe78d96b25ac989a6381c2b17fffa370d/qmflows-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c08091fa03a125870ba025d748ac5a39", "sha256": "ccf090ccf0d2177aa5a8c76b7c2b75a08bef89c5dc9db0fbc3a4fb47c433feab"}, "downloads": -1, "filename": "qmflows-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c08091fa03a125870ba025d748ac5a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52794, "upload_time": "2017-11-16T15:20:20", "upload_time_iso_8601": "2017-11-16T15:20:20.318509Z", "url": "https://files.pythonhosted.org/packages/31/e1/369190ffc2d98f981cc5b68beb0fe78d96b25ac989a6381c2b17fffa370d/qmflows-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:25 2020"}