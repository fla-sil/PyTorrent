{"info": {"author": "phil", "author_email": "philip.olson@pm.me", "bugtrack_url": null, "classifiers": [], "description": "## Simple Chalk\n\n*Note: This document is best viewed [on github](github.com/olsonpm/py_simple-chalk).\nPypi's headers are all caps which presents inaccurate information*\"\n\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Intro](#intro)\n   - [What is it?](#what-is-it)\n   - [Why create it?](#why-create-it)\n   - [Why the subset of features?](#why-the-subset-of-features)\n- [Install](#install)\n- [Usage](#usage)\n- [Api](#api)\n   - [`chalk` (string) => string](#chalk-string--string)\n   - [`newChalk` () => Chalk](#newchalk---chalk)\n- [Test](#test)\n- [Features included from js version of Chalk](#features-included-from-js-version-of-chalk)\n- [Features omitted](#features-omitted)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n\n### Intro\n\n##### What is it?\n\nA terminal string styling library for python.  It implements a subset of\nSindre Sorhus' [chalk](https://github.com/chalk/chalk) (which is for js).\n\ne.g. `chalk.green.bold(\"success\")` prints like you'd expect in the console.\n\n##### Why create it?\n\nI am familiar with and enjoy the syntax of [chalk](https://github.com/chalk/chalk).\nAnthonyalmarza's  [chalk](https://github.com/anthonyalmarza/chalk)\ndeviates from that syntax and so I created my own.\n\nI'm also new to python so this was a good way to learn.\n\n\n##### Why the subset of features?\n\nI only use chalk for very simple purposes so I left out things like 256 colors.\n\n\n### Install\n\n```sh\n$ pip install simple_chalk\n```\n\n\n### Usage\n\n```python\nfrom simple_chalk import chalk, green\n\n# both of these are the same\nprint(chalk.green(\"success\"))\nprint(green(\"success\"))\n\n# chained\nprint(green.bold(\"success\"))\n\n# assign combinations\nsuccess = green.bold.underline\nprint(success(\"we did it!\"))\n\n# last color wins\nprint(green.red(\"this is red\"))\n\n# background and foreground colors are separate\nwhyNot = green.bgWhite.red.bgGray\nprint(whyNot(\"this is red text with a gray background\"))\n```\n\n\n### Api\n\n`simple_chalk` exports the following\n\n##### `chalk` (string) => string\n - A singleton that can be used instead of importing the colors and\n   styles directly.\n - `chalk` and all exported colors/styles are chainable callables.  When called,\n   they take a single string argument and return a string wrapped in the\n   appropriate ascii color codes.\n\n##### `newChalk` () => Chalk\n - You probably don't need this, but it creates a new chalk instance in case\n   another library is misbehaving.\n\nThe following colors are exported\n\n- black  \n- red  \n- green  \n- yellow  \n- blue  \n- magenta  \n- cyan  \n- white  \n- blackBright (also 'gray' and 'grey')\n- redBright\n- greenBright\n- yellowBright\n- blueBright\n- magentaBright\n- cyanBright\n- whiteBright\n\nEach color also has a camel-cased `bg` equivalent.  e.g. `bgBlack`\nand `bgYellowBright`\n\nFinally the following miscellaneous styles are exported\n\n- bold\n- dim\n- underline\n- hidden\n\n\n### Test\n\n```sh\nhub clone olsonpm/py_simple-chalk\ncd py_simple-chalk\npython runTests.py\n```\n\n\n### Features included from js version of Chalk\n\n- chainable api\n- same color names (with added aliases)\n\n\n### Features omitted\n\n\\*\\* Features marked with `*` are ones I'd pull in should someone create a PR.\n\n- 256 colors and TrueColor support\n- multiple arguments, and thus nested styles\n- \\*color support detection\n- \\*blue -> blueBright auto conversion on windows\n- \\*ability to disable\n- \\*modifiers other than the miscellaneous styles noted above.\n  e.g. `reset`, `italic`, `inverse` etc.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/olsonpm/py_simple-chalk", "keywords": "", "license": "WTFNMFPL-1.0", "maintainer": "", "maintainer_email": "", "name": "simple-chalk", "package_url": "https://pypi.org/project/simple-chalk/", "platform": "", "project_url": "https://pypi.org/project/simple-chalk/", "project_urls": {"Homepage": "https://github.com/olsonpm/py_simple-chalk"}, "release_url": "https://pypi.org/project/simple-chalk/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A terminal string styling library", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Simple Chalk</h2>\n<p><em>Note: This document is best viewed <a href=\"github.com/olsonpm/py_simple-chalk\" rel=\"nofollow\">on github</a>.\nPypi's headers are all caps which presents inaccurate information</em>\"</p>\n\n\n<p><strong>Table of Contents</strong></p>\n<ul>\n<li><a href=\"#intro\" rel=\"nofollow\">Intro</a>\n<ul>\n<li><a href=\"#what-is-it\" rel=\"nofollow\">What is it?</a></li>\n<li><a href=\"#why-create-it\" rel=\"nofollow\">Why create it?</a></li>\n<li><a href=\"#why-the-subset-of-features\" rel=\"nofollow\">Why the subset of features?</a></li>\n</ul>\n</li>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#api\" rel=\"nofollow\">Api</a>\n<ul>\n<li><a href=\"#chalk-string--string\" rel=\"nofollow\"><code>chalk</code> (string) =&gt; string</a></li>\n<li><a href=\"#newchalk---chalk\" rel=\"nofollow\"><code>newChalk</code> () =&gt; Chalk</a></li>\n</ul>\n</li>\n<li><a href=\"#test\" rel=\"nofollow\">Test</a></li>\n<li><a href=\"#features-included-from-js-version-of-chalk\" rel=\"nofollow\">Features included from js version of Chalk</a></li>\n<li><a href=\"#features-omitted\" rel=\"nofollow\">Features omitted</a></li>\n</ul>\n\n<h3>Intro</h3>\n<h5>What is it?</h5>\n<p>A terminal string styling library for python.  It implements a subset of\nSindre Sorhus' <a href=\"https://github.com/chalk/chalk\" rel=\"nofollow\">chalk</a> (which is for js).</p>\n<p>e.g. <code>chalk.green.bold(\"success\")</code> prints like you'd expect in the console.</p>\n<h5>Why create it?</h5>\n<p>I am familiar with and enjoy the syntax of <a href=\"https://github.com/chalk/chalk\" rel=\"nofollow\">chalk</a>.\nAnthonyalmarza's  <a href=\"https://github.com/anthonyalmarza/chalk\" rel=\"nofollow\">chalk</a>\ndeviates from that syntax and so I created my own.</p>\n<p>I'm also new to python so this was a good way to learn.</p>\n<h5>Why the subset of features?</h5>\n<p>I only use chalk for very simple purposes so I left out things like 256 colors.</p>\n<h3>Install</h3>\n<pre>$ pip install simple_chalk\n</pre>\n<h3>Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_chalk</span> <span class=\"kn\">import</span> <span class=\"n\">chalk</span><span class=\"p\">,</span> <span class=\"n\">green</span>\n\n<span class=\"c1\"># both of these are the same</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">chalk</span><span class=\"o\">.</span><span class=\"n\">green</span><span class=\"p\">(</span><span class=\"s2\">\"success\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">green</span><span class=\"p\">(</span><span class=\"s2\">\"success\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># chained</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">green</span><span class=\"o\">.</span><span class=\"n\">bold</span><span class=\"p\">(</span><span class=\"s2\">\"success\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># assign combinations</span>\n<span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">green</span><span class=\"o\">.</span><span class=\"n\">bold</span><span class=\"o\">.</span><span class=\"n\">underline</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">success</span><span class=\"p\">(</span><span class=\"s2\">\"we did it!\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># last color wins</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">green</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">(</span><span class=\"s2\">\"this is red\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># background and foreground colors are separate</span>\n<span class=\"n\">whyNot</span> <span class=\"o\">=</span> <span class=\"n\">green</span><span class=\"o\">.</span><span class=\"n\">bgWhite</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"o\">.</span><span class=\"n\">bgGray</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">whyNot</span><span class=\"p\">(</span><span class=\"s2\">\"this is red text with a gray background\"</span><span class=\"p\">))</span>\n</pre>\n<h3>Api</h3>\n<p><code>simple_chalk</code> exports the following</p>\n<h5><code>chalk</code> (string) =&gt; string</h5>\n<ul>\n<li>A singleton that can be used instead of importing the colors and\nstyles directly.</li>\n<li><code>chalk</code> and all exported colors/styles are chainable callables.  When called,\nthey take a single string argument and return a string wrapped in the\nappropriate ascii color codes.</li>\n</ul>\n<h5><code>newChalk</code> () =&gt; Chalk</h5>\n<ul>\n<li>You probably don't need this, but it creates a new chalk instance in case\nanother library is misbehaving.</li>\n</ul>\n<p>The following colors are exported</p>\n<ul>\n<li>black</li>\n<li>red</li>\n<li>green</li>\n<li>yellow</li>\n<li>blue</li>\n<li>magenta</li>\n<li>cyan</li>\n<li>white</li>\n<li>blackBright (also 'gray' and 'grey')</li>\n<li>redBright</li>\n<li>greenBright</li>\n<li>yellowBright</li>\n<li>blueBright</li>\n<li>magentaBright</li>\n<li>cyanBright</li>\n<li>whiteBright</li>\n</ul>\n<p>Each color also has a camel-cased <code>bg</code> equivalent.  e.g. <code>bgBlack</code>\nand <code>bgYellowBright</code></p>\n<p>Finally the following miscellaneous styles are exported</p>\n<ul>\n<li>bold</li>\n<li>dim</li>\n<li>underline</li>\n<li>hidden</li>\n</ul>\n<h3>Test</h3>\n<pre>hub clone olsonpm/py_simple-chalk\n<span class=\"nb\">cd</span> py_simple-chalk\npython runTests.py\n</pre>\n<h3>Features included from js version of Chalk</h3>\n<ul>\n<li>chainable api</li>\n<li>same color names (with added aliases)</li>\n</ul>\n<h3>Features omitted</h3>\n<p>** Features marked with <code>*</code> are ones I'd pull in should someone create a PR.</p>\n<ul>\n<li>256 colors and TrueColor support</li>\n<li>multiple arguments, and thus nested styles</li>\n<li>*color support detection</li>\n<li>*blue -&gt; blueBright auto conversion on windows</li>\n<li>*ability to disable</li>\n<li>*modifiers other than the miscellaneous styles noted above.\ne.g. <code>reset</code>, <code>italic</code>, <code>inverse</code> etc.</li>\n</ul>\n\n          </div>"}, "last_serial": 4524271, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fb37dac10a85fa6be57f00b12ed72162", "sha256": "d80f55993dfa040c1b55d2fbfb925e4fbb5798c2934601aa448ef4a192d84196"}, "downloads": -1, "filename": "simple_chalk-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fb37dac10a85fa6be57f00b12ed72162", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13862, "upload_time": "2018-11-24T18:34:12", "upload_time_iso_8601": "2018-11-24T18:34:12.103240Z", "url": "https://files.pythonhosted.org/packages/31/97/b8114a347aee340570eb92b1a1fe512a038766903af7aa4e28447dc25c80/simple_chalk-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb37dac10a85fa6be57f00b12ed72162", "sha256": "d80f55993dfa040c1b55d2fbfb925e4fbb5798c2934601aa448ef4a192d84196"}, "downloads": -1, "filename": "simple_chalk-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fb37dac10a85fa6be57f00b12ed72162", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13862, "upload_time": "2018-11-24T18:34:12", "upload_time_iso_8601": "2018-11-24T18:34:12.103240Z", "url": "https://files.pythonhosted.org/packages/31/97/b8114a347aee340570eb92b1a1fe512a038766903af7aa4e28447dc25c80/simple_chalk-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:58 2020"}