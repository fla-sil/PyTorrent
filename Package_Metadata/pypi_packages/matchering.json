{"info": {"author": "Sergree", "author_email": "wokashi.rg@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3 :: Only", "Topic :: Artistic Software", "Topic :: Multimedia", "Topic :: Multimedia :: Sound/Audio", "Topic :: Multimedia :: Sound/Audio :: Analysis", "Topic :: Multimedia :: Sound/Audio :: Conversion", "Topic :: Utilities"], "description": "[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/sergree)\n\n![Matchering 2.0](https://raw.githubusercontent.com/sergree/matchering/master/images/logo.png)\n\n[![License](https://img.shields.io/pypi/l/matchering.svg)](https://pypi.python.org/pypi/matchering/)\n[![PyPI Version](https://badge.fury.io/py/matchering.svg)](https://badge.fury.io/py/matchering)\n[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/matchering.svg)](https://pypi.python.org/pypi/matchering/)\n\n## Matching + Mastering = \u2764\ufe0f\n\n**[Matchering 2.0]** is a novel **[Containerized Web Application][Docker Image]** and **[Python Library][PyPI]** for audio matching and [mastering].\n\nIt follows a *simple idea* - you take TWO audio files and feed them into **Matchering**: \n- **TARGET** (the track you want to master, you want it to sound like the reference)\n- **REFERENCE** (another track, like some kind of \"wet\" popular song, you want your target to sound like it)\n\nOur algorithm matches both of these tracks and provides you the mastered **TARGET** track with the same [RMS], [FR], [peak amplitude] and [stereo width] as the **REFERENCE** track has.\n\nWatch **[the video][Video]**:\n\n[![Matchering 2.0 Promo Video](http://img.youtube.com/vi/8Su5STDYfcA/0.jpg)][Video]\n\nSo **Matchering 2.0** will make your song sound the way you want! It opens up a wide range of opportunities:\n- You can make your music instantly sound like your favorite artist's music\n- You can make all the tracks on your new album sound the same very quickly\n- You can find new aspects of your sound in experiments\n- You can do everything as you want! Because of **[Your References, Your Rules.\u2122](https://macprovideo.com/article/audio-software/sound-tools-instant-online-mastering-with-reference-matching-now-in-open-beta)** *(just a little nostalgic note)* \ud83e\udd2d\n\n![Matchering WEB GIF Animation](https://raw.githubusercontent.com/sergree/matchering/master/images/animation.gif \"Matchering WEB\")\n\n> Differences from the previous major version:\n> - Completely rewritten in [Python 3], based on open source tech stack (no more [MATLAB])\n> - Our own open source [brickwall limiter] was implemented for it\n> - Processing speed and accuracy have been increased\n> - Now it is [the library][PyPI] that can be connected to **everything** in **the Python world**\n\n# Installation and Usage\n\nIf you are a music producer or an audio engineer, choose the **[Docker Image]**. \n\nIf you are a developer, choose the **[Python Library](#python-library---for-developers)**.\n\n# Docker Image - The Easiest Way\n\n**Matchering 2.0** works on all major platforms using **Docker**.\n\n## Choose yours\n\n### [Windows](https://github.com/sergree/matchering/blob/master/DOCKER_WINDOWS.md)\n### [macOS](https://github.com/sergree/matchering/blob/master/DOCKER_MACOS.md)\n### [Linux](https://github.com/sergree/matchering/blob/master/DOCKER_LINUX.md)\n\n# Python Library - For Developers\n\n## Installation\n\n**[Python 3.6.0 or higher][Python 3] is required**\n\n### libsndfile\n\n**Matchering 2.0** depends on the **[SoundFile]** library, which depends on the system library **[libsndfile]**. On Windows and macOS, it installs automatically. On Linux, you need to install **[libsndfile]** using your distribution's package manager, for example:\n\n```sudo apt update && sudo apt -y install libsndfile1```\n\n### python3-pip\n\nOn some Linux distributions, **python3-pip** is not installed by default. For example use this command on Ubuntu Linux to fix this:\n\n```sudo apt -y install python3-pip```\n\n### Matchering Python Package\n\nFinally, install our `matchering` package:\n\n```\n# Linux / macOS\npython3 -m pip install -U matchering\n\n# Windows\npython -m pip install -U matchering\n```\n\n### *(Optional) FFmpeg*\n\nIf you would like to enable *MP3 loading support*, you need to install the **[FFmpeg][FFmpeg]** library. For example use this command on Ubuntu Linux:\n\n```sudo apt -y install ffmpeg```\n\nOr follow these instructions: [Windows][FFmpeg-win], [macOS][FFmpeg-mac].\n\n## Quick Example\n\n```python\nimport matchering as mg\n\n# Sending all log messages to the default print function\n# Just delete the following line to work silently\nmg.log(print)\n\nmg.process(\n    # The track you want to master\n    target='my_song.wav',\n\n    # Some \"wet\" reference track\n    reference='some_popular_song.wav',\n\n    # Where and how to save your results\n    results=[\n        mg.pcm16('my_song_master_16bit.wav'),\n        mg.pcm24('my_song_master_24bit.wav'),\n    ]\n)\n\n```\n\nYou can find more examples in the **[examples directory]**.\n\n### Or you can use premade **Matchering 2.0 Command Line Application**: **[matchering-cli]**.\n\n## A Coffee\n\nIf our package saved your time or money, you may:\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/sergree)\n\n**Thank you!**\n\n## Links\n\n- [Press About Us](https://github.com/sergree/matchering/blob/master/PRESS.md)\n- [Supporters](https://github.com/sergree/matchering/blob/master/SUPPORTERS.md)\n- [Our Limiter Quality Test](https://github.com/sergree/matchering/blob/master/LIMITER_TEST.md)\n- [Log Codes Overview](https://github.com/sergree/matchering/blob/master/LOG_CODES.md)\n- [Our Thoughts](https://github.com/sergree/matchering/blob/master/THOUGHTS.md)\n\n[Matchering]: https://github.com/sergree/matchering\n[Matchering 2.0]: https://github.com/sergree/matchering\n[Docker Image]: #docker-image---the-easiest-way\n[mastering]: https://en.wikipedia.org/wiki/Audio_mastering\n[RMS]: https://en.wikipedia.org/wiki/Root_mean_square\n[FR]: https://en.wikipedia.org/wiki/Frequency_response\n[peak amplitude]: https://en.wikipedia.org/wiki/Amplitude\n[stereo width]: https://en.wikipedia.org/wiki/Stereo_imaging\n[MATLAB]: https://www.mathworks.com/products/matlab.html\n[Python 3]: https://www.python.org/\n[brickwall limiter]: https://en.wikipedia.org/wiki/Dynamic_range_compression#Limiting\n[PyPI]: https://pypi.org/project/matchering\n[SoundFile]: https://github.com/bastibe/SoundFile#installation\n[libsndfile]: http://www.mega-nerd.com/libsndfile/\n[FFmpeg]: https://www.ffmpeg.org/download.html\n[FFmpeg-win]: https://video.stackexchange.com/questions/20495/how-do-i-set-up-and-use-ffmpeg-in-windows\n[FFmpeg-mac]: https://superuser.com/questions/624561/install-ffmpeg-on-os-x\n[matchering-cli]: https://github.com/sergree/matchering-cli\n[examples directory]: https://github.com/sergree/matchering/tree/master/examples\n[Video]: http://www.youtube.com/watch?v=8Su5STDYfcA \"Matchering 2.0 - Open Source Audio Matching and Mastering\"\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sergree/matchering", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "matchering", "package_url": "https://pypi.org/project/matchering/", "platform": "", "project_url": "https://pypi.org/project/matchering/", "project_urls": {"Homepage": "https://github.com/sergree/matchering"}, "release_url": "https://pypi.org/project/matchering/2.0.2/", "requires_dist": ["numpy (>=1.17.0)", "scipy (>=1.3.0)", "soundfile (>=0.10.3.post1)", "resampy (>=0.2.2)", "statsmodels (>=0.10.0)", "colorama (>=0.3.9)"], "requires_python": ">=3.6", "summary": "Audio Matching and Mastering Python Library", "version": "2.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.buymeacoffee.com/sergree\" rel=\"nofollow\"><img alt=\"Buy Me A Coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\"></a></p>\n<p><img alt=\"Matchering 2.0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bb8f77cb4a878c019c483997c76fbfa0ffd2352/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572677265652f6d617463686572696e672f6d61737465722f696d616765732f6c6f676f2e706e67\"></p>\n<p><a href=\"https://pypi.python.org/pypi/matchering/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3a249c39e8544b8293746092e1af8c537196811/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d617463686572696e672e737667\"></a>\n<a href=\"https://badge.fury.io/py/matchering\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ebb4c9db0f4f8126b437c22ba18e44736dca7f5/68747470733a2f2f62616467652e667572792e696f2f70792f6d617463686572696e672e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/matchering/\" rel=\"nofollow\"><img alt=\"PyPI Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24a701cd78c9a0a375952f0a47f3f357bc705338/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d617463686572696e672e737667\"></a></p>\n<h2>Matching + Mastering = \u2764\ufe0f</h2>\n<p><strong><a href=\"https://github.com/sergree/matchering\" rel=\"nofollow\">Matchering 2.0</a></strong> is a novel <strong><a href=\"#docker-image---the-easiest-way\" rel=\"nofollow\">Containerized Web Application</a></strong> and <strong><a href=\"https://pypi.org/project/matchering\" rel=\"nofollow\">Python Library</a></strong> for audio matching and <a href=\"https://en.wikipedia.org/wiki/Audio_mastering\" rel=\"nofollow\">mastering</a>.</p>\n<p>It follows a <em>simple idea</em> - you take TWO audio files and feed them into <strong>Matchering</strong>:</p>\n<ul>\n<li><strong>TARGET</strong> (the track you want to master, you want it to sound like the reference)</li>\n<li><strong>REFERENCE</strong> (another track, like some kind of \"wet\" popular song, you want your target to sound like it)</li>\n</ul>\n<p>Our algorithm matches both of these tracks and provides you the mastered <strong>TARGET</strong> track with the same <a href=\"https://en.wikipedia.org/wiki/Root_mean_square\" rel=\"nofollow\">RMS</a>, <a href=\"https://en.wikipedia.org/wiki/Frequency_response\" rel=\"nofollow\">FR</a>, <a href=\"https://en.wikipedia.org/wiki/Amplitude\" rel=\"nofollow\">peak amplitude</a> and <a href=\"https://en.wikipedia.org/wiki/Stereo_imaging\" rel=\"nofollow\">stereo width</a> as the <strong>REFERENCE</strong> track has.</p>\n<p>Watch <strong><a href=\"http://www.youtube.com/watch?v=8Su5STDYfcA\" rel=\"nofollow\" title=\"Matchering 2.0 - Open Source Audio Matching and Mastering\">the video</a></strong>:</p>\n<p><a href=\"http://www.youtube.com/watch?v=8Su5STDYfcA\" rel=\"nofollow\" title=\"Matchering 2.0 - Open Source Audio Matching and Mastering\"><img alt=\"Matchering 2.0 Promo Video\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ab460e71b18a486d03e85e371c54d473dae2b1e/687474703a2f2f696d672e796f75747562652e636f6d2f76692f38537535535444596663412f302e6a7067\"></a></p>\n<p>So <strong>Matchering 2.0</strong> will make your song sound the way you want! It opens up a wide range of opportunities:</p>\n<ul>\n<li>You can make your music instantly sound like your favorite artist's music</li>\n<li>You can make all the tracks on your new album sound the same very quickly</li>\n<li>You can find new aspects of your sound in experiments</li>\n<li>You can do everything as you want! Because of <strong><a href=\"https://macprovideo.com/article/audio-software/sound-tools-instant-online-mastering-with-reference-matching-now-in-open-beta\" rel=\"nofollow\">Your References, Your Rules.\u2122</a></strong> <em>(just a little nostalgic note)</em> \ud83e\udd2d</li>\n</ul>\n<p><img alt=\"Matchering WEB GIF Animation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db35c5dfac2f7fcdb203f66be4760c184a301559/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736572677265652f6d617463686572696e672f6d61737465722f696d616765732f616e696d6174696f6e2e676966\"></p>\n<blockquote>\n<p>Differences from the previous major version:</p>\n<ul>\n<li>Completely rewritten in <a href=\"https://www.python.org/\" rel=\"nofollow\">Python 3</a>, based on open source tech stack (no more <a href=\"https://www.mathworks.com/products/matlab.html\" rel=\"nofollow\">MATLAB</a>)</li>\n<li>Our own open source <a href=\"https://en.wikipedia.org/wiki/Dynamic_range_compression#Limiting\" rel=\"nofollow\">brickwall limiter</a> was implemented for it</li>\n<li>Processing speed and accuracy have been increased</li>\n<li>Now it is <a href=\"https://pypi.org/project/matchering\" rel=\"nofollow\">the library</a> that can be connected to <strong>everything</strong> in <strong>the Python world</strong></li>\n</ul>\n</blockquote>\n<h1>Installation and Usage</h1>\n<p>If you are a music producer or an audio engineer, choose the <strong><a href=\"#docker-image---the-easiest-way\" rel=\"nofollow\">Docker Image</a></strong>.</p>\n<p>If you are a developer, choose the <strong><a href=\"#python-library---for-developers\" rel=\"nofollow\">Python Library</a></strong>.</p>\n<h1>Docker Image - The Easiest Way</h1>\n<p><strong>Matchering 2.0</strong> works on all major platforms using <strong>Docker</strong>.</p>\n<h2>Choose yours</h2>\n<h3><a href=\"https://github.com/sergree/matchering/blob/master/DOCKER_WINDOWS.md\" rel=\"nofollow\">Windows</a></h3>\n<h3><a href=\"https://github.com/sergree/matchering/blob/master/DOCKER_MACOS.md\" rel=\"nofollow\">macOS</a></h3>\n<h3><a href=\"https://github.com/sergree/matchering/blob/master/DOCKER_LINUX.md\" rel=\"nofollow\">Linux</a></h3>\n<h1>Python Library - For Developers</h1>\n<h2>Installation</h2>\n<p><strong><a href=\"https://www.python.org/\" rel=\"nofollow\">Python 3.6.0 or higher</a> is required</strong></p>\n<h3>libsndfile</h3>\n<p><strong>Matchering 2.0</strong> depends on the <strong><a href=\"https://github.com/bastibe/SoundFile#installation\" rel=\"nofollow\">SoundFile</a></strong> library, which depends on the system library <strong><a href=\"http://www.mega-nerd.com/libsndfile/\" rel=\"nofollow\">libsndfile</a></strong>. On Windows and macOS, it installs automatically. On Linux, you need to install <strong><a href=\"http://www.mega-nerd.com/libsndfile/\" rel=\"nofollow\">libsndfile</a></strong> using your distribution's package manager, for example:</p>\n<p><code>sudo apt update &amp;&amp; sudo apt -y install libsndfile1</code></p>\n<h3>python3-pip</h3>\n<p>On some Linux distributions, <strong>python3-pip</strong> is not installed by default. For example use this command on Ubuntu Linux to fix this:</p>\n<p><code>sudo apt -y install python3-pip</code></p>\n<h3>Matchering Python Package</h3>\n<p>Finally, install our <code>matchering</code> package:</p>\n<pre><code># Linux / macOS\npython3 -m pip install -U matchering\n\n# Windows\npython -m pip install -U matchering\n</code></pre>\n<h3><em>(Optional) FFmpeg</em></h3>\n<p>If you would like to enable <em>MP3 loading support</em>, you need to install the <strong><a href=\"https://www.ffmpeg.org/download.html\" rel=\"nofollow\">FFmpeg</a></strong> library. For example use this command on Ubuntu Linux:</p>\n<p><code>sudo apt -y install ffmpeg</code></p>\n<p>Or follow these instructions: <a href=\"https://video.stackexchange.com/questions/20495/how-do-i-set-up-and-use-ffmpeg-in-windows\" rel=\"nofollow\">Windows</a>, <a href=\"https://superuser.com/questions/624561/install-ffmpeg-on-os-x\" rel=\"nofollow\">macOS</a>.</p>\n<h2>Quick Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matchering</span> <span class=\"k\">as</span> <span class=\"nn\">mg</span>\n\n<span class=\"c1\"># Sending all log messages to the default print function</span>\n<span class=\"c1\"># Just delete the following line to work silently</span>\n<span class=\"n\">mg</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"nb\">print</span><span class=\"p\">)</span>\n\n<span class=\"n\">mg</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span>\n    <span class=\"c1\"># The track you want to master</span>\n    <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s1\">'my_song.wav'</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># Some \"wet\" reference track</span>\n    <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s1\">'some_popular_song.wav'</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># Where and how to save your results</span>\n    <span class=\"n\">results</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">mg</span><span class=\"o\">.</span><span class=\"n\">pcm16</span><span class=\"p\">(</span><span class=\"s1\">'my_song_master_16bit.wav'</span><span class=\"p\">),</span>\n        <span class=\"n\">mg</span><span class=\"o\">.</span><span class=\"n\">pcm24</span><span class=\"p\">(</span><span class=\"s1\">'my_song_master_24bit.wav'</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>You can find more examples in the <strong><a href=\"https://github.com/sergree/matchering/tree/master/examples\" rel=\"nofollow\">examples directory</a></strong>.</p>\n<h3>Or you can use premade <strong>Matchering 2.0 Command Line Application</strong>: <strong><a href=\"https://github.com/sergree/matchering-cli\" rel=\"nofollow\">matchering-cli</a></strong>.</h3>\n<h2>A Coffee</h2>\n<p>If our package saved your time or money, you may:</p>\n<p><a href=\"https://www.buymeacoffee.com/sergree\" rel=\"nofollow\"><img alt=\"Buy Me A Coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\"></a></p>\n<p><strong>Thank you!</strong></p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://github.com/sergree/matchering/blob/master/PRESS.md\" rel=\"nofollow\">Press About Us</a></li>\n<li><a href=\"https://github.com/sergree/matchering/blob/master/SUPPORTERS.md\" rel=\"nofollow\">Supporters</a></li>\n<li><a href=\"https://github.com/sergree/matchering/blob/master/LIMITER_TEST.md\" rel=\"nofollow\">Our Limiter Quality Test</a></li>\n<li><a href=\"https://github.com/sergree/matchering/blob/master/LOG_CODES.md\" rel=\"nofollow\">Log Codes Overview</a></li>\n<li><a href=\"https://github.com/sergree/matchering/blob/master/THOUGHTS.md\" rel=\"nofollow\">Our Thoughts</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6604398, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "95c968eb2e09dda42bb187a74af5c610", "sha256": "19b9e3010c10d1bbcc58546505ddebb53d1e11e5b7ada1ecb3fd7e154497fe34"}, "downloads": -1, "filename": "matchering-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "95c968eb2e09dda42bb187a74af5c610", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 40873, "upload_time": "2020-01-12T21:18:01", "upload_time_iso_8601": "2020-01-12T21:18:01.938907Z", "url": "https://files.pythonhosted.org/packages/57/d3/08ccb84b0b3ece0072d7d21d0e003ae0b1137371719547aad8d6f028691c/matchering-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6de793c4ebb81508fe379b5601720f5d", "sha256": "d6a7f1354ed55ed7ab1fcb255b00fd8e54da59b4bc8ccb9596f9234289c57d49"}, "downloads": -1, "filename": "matchering-2.0.0.tar.gz", "has_sig": false, "md5_digest": "6de793c4ebb81508fe379b5601720f5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31882, "upload_time": "2020-01-12T21:18:05", "upload_time_iso_8601": "2020-01-12T21:18:05.385777Z", "url": "https://files.pythonhosted.org/packages/c5/bb/848d1aba9a941f0eb26b962640e3a7539ba7ec906fce9d94d2e080f4a1ed/matchering-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "08738e61351fc81ec8ce03f11308d2c5", "sha256": "63e2c5a6b29f8c3e5f5ba551f7f3b2b9c6001ae1ceba00aac8c8ccae20eab24d"}, "downloads": -1, "filename": "matchering-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "08738e61351fc81ec8ce03f11308d2c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 40839, "upload_time": "2020-02-10T18:34:06", "upload_time_iso_8601": "2020-02-10T18:34:06.576402Z", "url": "https://files.pythonhosted.org/packages/e5/ca/f5c925261d48a3749f963ed24c555fdeef5ae87c372362bf494c46f94bde/matchering-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f6c4e4890723d5763059599b6c8892a", "sha256": "e6da171bb0889e412b1e412698376105d2b051b1ef82cd6f59363f95f3bb18d8"}, "downloads": -1, "filename": "matchering-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5f6c4e4890723d5763059599b6c8892a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31703, "upload_time": "2020-02-10T18:34:07", "upload_time_iso_8601": "2020-02-10T18:34:07.646102Z", "url": "https://files.pythonhosted.org/packages/ed/6e/0bb7f68d74a63deb622e193cbdfec0cb29132e1b33ff2092269d16236c28/matchering-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "c55c3f0519b787aa7d5d9219961ef27a", "sha256": "ffc027bf8dbc735b6c5f2174538b8751ec26f7dd4b64af82d397677f1d42620a"}, "downloads": -1, "filename": "matchering-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c55c3f0519b787aa7d5d9219961ef27a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 40868, "upload_time": "2020-02-10T18:59:29", "upload_time_iso_8601": "2020-02-10T18:59:29.426967Z", "url": "https://files.pythonhosted.org/packages/7d/bc/10d076d9b3003460338859445fdcf508adc38ad9ccec7d7021fcf425a7f4/matchering-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99b7fa3fa7e14cb57c331775a2cb952a", "sha256": "576559abdc7f146716e5de1502e05de295d7b994f4d82926d92e35c6ac8e69e5"}, "downloads": -1, "filename": "matchering-2.0.2.tar.gz", "has_sig": false, "md5_digest": "99b7fa3fa7e14cb57c331775a2cb952a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31795, "upload_time": "2020-02-10T18:59:30", "upload_time_iso_8601": "2020-02-10T18:59:30.569840Z", "url": "https://files.pythonhosted.org/packages/b7/08/8e7c65fdd8afc99437cab8cc77fe2ca64a278db399f1098e28c6901ab4ef/matchering-2.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c55c3f0519b787aa7d5d9219961ef27a", "sha256": "ffc027bf8dbc735b6c5f2174538b8751ec26f7dd4b64af82d397677f1d42620a"}, "downloads": -1, "filename": "matchering-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c55c3f0519b787aa7d5d9219961ef27a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 40868, "upload_time": "2020-02-10T18:59:29", "upload_time_iso_8601": "2020-02-10T18:59:29.426967Z", "url": "https://files.pythonhosted.org/packages/7d/bc/10d076d9b3003460338859445fdcf508adc38ad9ccec7d7021fcf425a7f4/matchering-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99b7fa3fa7e14cb57c331775a2cb952a", "sha256": "576559abdc7f146716e5de1502e05de295d7b994f4d82926d92e35c6ac8e69e5"}, "downloads": -1, "filename": "matchering-2.0.2.tar.gz", "has_sig": false, "md5_digest": "99b7fa3fa7e14cb57c331775a2cb952a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31795, "upload_time": "2020-02-10T18:59:30", "upload_time_iso_8601": "2020-02-10T18:59:30.569840Z", "url": "https://files.pythonhosted.org/packages/b7/08/8e7c65fdd8afc99437cab8cc77fe2ca64a278db399f1098e28c6901ab4ef/matchering-2.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:25 2020"}