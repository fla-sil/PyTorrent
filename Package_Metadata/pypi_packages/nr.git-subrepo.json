{"info": {"author": "Niklas Rosenstein", "author_email": "rosensteinniklas@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# git-subrepo\n\nThe `git-subrepo` command is a tool to create a worktree of a remote Git\nrepository and tracking its files.\n\n#### Advantages over submodules\n\n* Avoid depending on the longevity of the submodule's remote repository\n* Track changes to the sub repository in the parent\n\n#### Installation\n\n  [PyPI]: https://pypi.org/project/nr.git-subrepo\n\nYou can get the latest stable version from [PyPI]. We recommended creating\nan alias in your Git configuration file so you can access the tool via the\n`git` command-line.\n\n    $ pip install nr.git-subrepo\n    $ git config --global alias.subrepo '!nr git-subrepo'\n    $ git subrepo --version\n    1.0.0\n\nYou may choose to install the tool directly from the source repository. This\nallows you to get the latest development version.\n\n    $ pip install git+https://gitlab.niklasrosenstein.com/NiklasRosenstein/python/nr.git-subrepo.git\n    $ git subrepo --version\n    1.0.1-dev\n\n#### Usage Example\n\nAny time that you think about adding a Git submodule, you can add a sub\nrepository instead. The `git subrepo` tool allows you to conveniently add,\nremove and stage sub repositories. It also provides you with a tool to convert\nexisting Git submodules to sub repositories.\n\nTo add a new sub repository:\n\n    $ git subrepo add -s https://github.com/some/library.git\n\nSimilar to `git submodule`, the add command will use the basename of the\nprovided URL as the default path to place the Git worktree at. In the case\nabove, it will be `./library`.\n\n    $ git -C library remote get-url origin\n    https://github.com/some/library.git\n    $ git status\n    Changes to be committed:\n        new file: .gitsubrepos\n        new file: library/README.md\n\nThe `-s` option in the add command is used to automatically stage the added\nsub repository. You can use the `git subrepo stage` command instead to\nexplicitly add all changes in the sub repository and the proper Git ref to\nthe `.gitsubrepos` file.\n\nIf you have uncommited changes in a sub repository, your changes will be\nreflected for your sub repository only inside the parent repository. They will\nnot be reflected in the actual sub repository or its remote.\n\n---\n\n<p align=\"center\">Copyright &copy; 2018 Niklas Rosenstein</p>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.niklasrosenstein.com/NiklasRosenstein/git-subrepo", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nr.git-subrepo", "package_url": "https://pypi.org/project/nr.git-subrepo/", "platform": "", "project_url": "https://pypi.org/project/nr.git-subrepo/", "project_urls": {"Homepage": "https://git.niklasrosenstein.com/NiklasRosenstein/git-subrepo"}, "release_url": "https://pypi.org/project/nr.git-subrepo/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Create working trees of other Git repositories and track them in your parent repository.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>git-subrepo</h1>\n<p>The <code>git-subrepo</code> command is a tool to create a worktree of a remote Git\nrepository and tracking its files.</p>\n<h4>Advantages over submodules</h4>\n<ul>\n<li>Avoid depending on the longevity of the submodule's remote repository</li>\n<li>Track changes to the sub repository in the parent</li>\n</ul>\n<h4>Installation</h4>\n<p>You can get the latest stable version from <a href=\"https://pypi.org/project/nr.git-subrepo\" rel=\"nofollow\">PyPI</a>. We recommended creating\nan alias in your Git configuration file so you can access the tool via the\n<code>git</code> command-line.</p>\n<pre><code>$ pip install nr.git-subrepo\n$ git config --global alias.subrepo '!nr git-subrepo'\n$ git subrepo --version\n1.0.0\n</code></pre>\n<p>You may choose to install the tool directly from the source repository. This\nallows you to get the latest development version.</p>\n<pre><code>$ pip install git+https://gitlab.niklasrosenstein.com/NiklasRosenstein/python/nr.git-subrepo.git\n$ git subrepo --version\n1.0.1-dev\n</code></pre>\n<h4>Usage Example</h4>\n<p>Any time that you think about adding a Git submodule, you can add a sub\nrepository instead. The <code>git subrepo</code> tool allows you to conveniently add,\nremove and stage sub repositories. It also provides you with a tool to convert\nexisting Git submodules to sub repositories.</p>\n<p>To add a new sub repository:</p>\n<pre><code>$ git subrepo add -s https://github.com/some/library.git\n</code></pre>\n<p>Similar to <code>git submodule</code>, the add command will use the basename of the\nprovided URL as the default path to place the Git worktree at. In the case\nabove, it will be <code>./library</code>.</p>\n<pre><code>$ git -C library remote get-url origin\nhttps://github.com/some/library.git\n$ git status\nChanges to be committed:\n    new file: .gitsubrepos\n    new file: library/README.md\n</code></pre>\n<p>The <code>-s</code> option in the add command is used to automatically stage the added\nsub repository. You can use the <code>git subrepo stage</code> command instead to\nexplicitly add all changes in the sub repository and the proper Git ref to\nthe <code>.gitsubrepos</code> file.</p>\n<p>If you have uncommited changes in a sub repository, your changes will be\nreflected for your sub repository only inside the parent repository. They will\nnot be reflected in the actual sub repository or its remote.</p>\n<hr>\n<p align=\"center\">Copyright \u00a9 2018 Niklas Rosenstein</p>\n\n          </div>"}, "last_serial": 7171629, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "e7cecec461c84c3905203caab179b959", "sha256": "5be234c6f6790f947449f637668fc44736f0a2441c142bf11ad9d9a5326fe036"}, "downloads": -1, "filename": "nr.git-subrepo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e7cecec461c84c3905203caab179b959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7477, "upload_time": "2020-05-05T12:31:10", "upload_time_iso_8601": "2020-05-05T12:31:10.493843Z", "url": "https://files.pythonhosted.org/packages/1f/99/1e6af9b4a5f9f0f45752c6e23ebdc3e3e54012ce866e7702ee4ab2d67822/nr.git-subrepo-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7cecec461c84c3905203caab179b959", "sha256": "5be234c6f6790f947449f637668fc44736f0a2441c142bf11ad9d9a5326fe036"}, "downloads": -1, "filename": "nr.git-subrepo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e7cecec461c84c3905203caab179b959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7477, "upload_time": "2020-05-05T12:31:10", "upload_time_iso_8601": "2020-05-05T12:31:10.493843Z", "url": "https://files.pythonhosted.org/packages/1f/99/1e6af9b4a5f9f0f45752c6e23ebdc3e3e54012ce866e7702ee4ab2d67822/nr.git-subrepo-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:27 2020"}