{"info": {"author": "Andrei Roskach", "author_email": "code.impactor@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Database", "Topic :: Software Development :: Libraries"], "description": "# arque\nAsyncio Reliable Queue (based on redis)\n\nInspired by Tom DeWire's article \"Reliable Queueing in Redis (Part 1)\" [[1]](#ref1) [[2]](#ref2) and the \"torrelque\" python module [[3]](#ref3).\n\n#### Features:\n    - Asynchronous: based on asyncio and aioredis\n    - Reliable: at any moment task data stored in redis database\n    - Throttling: controls number of tasks in execution\n    - Delayed queue: defers task availability\n    - Dead letters: put task data in failed queue after number of predefined retry attempts\n    - Tested on Python 3.7 and redis server '>=3.0.6', '<=5.0.5'\n    - Used in containerized applications (managed by kubernetes) in high load environments\n\n#### Install:\n```bash\npip install arque\n```\n\n#### Usage:\n\n```python\nimport signal\nimport random\nimport logging\nimport asyncio\nimport aioredis\nimport time\nfrom functools import wraps\nfrom arque import Arque\n\nlogger = logging.getLogger(__name__)\n\n\nasync def shutdown(signal, loop):\n    \"\"\"Cleanup tasks tied to the service's shutdown.\"\"\"\n    logging.info(f\"Received exit signal {signal.name}...\")\n    tasks = [t for t in asyncio.all_tasks() if t is not asyncio.current_task()]\n    [task.cancel() for task in tasks]\n    logging.info(f\"Cancelling {len(tasks)}outstanding tasks\")\n    await asyncio.gather(*tasks)\n    logging.info(f\"Flushing metrics\")\n    loop.stop()\n\n\ndef aioredis_pool(host='redis://localhost', encoding='utf8'):\n    def wrapper(func):\n        @wraps(func)\n        async def wrapped():\n            redis = await aioredis.create_redis_pool(host, encoding=encoding)\n            try:\n                return await func(redis=redis)\n            finally:\n                redis.close()\n                await redis.wait_closed()\n\n        return wrapped\n\n    return wrapper\n\n\n@aioredis_pool(host='redis://localhost', encoding='utf8')\nasync def produce_task(redis=None):\n    logger.info('Starting producing...')\n    queue = Arque(redis=redis)\n    while True:\n        for _ in range(1):\n            task = {'value': random.randint(0, 99)}\n            task_id = f\"custom_{task['value']}_{time.time()}\"\n            logger.debug('Produced task %s', task)\n            await queue.enqueue(task, task_id=task_id, task_timeout=10, delay=1)\n        await asyncio.sleep(1)\n\n\nasync def process(task_data):\n    logger.debug('Consumed task %s', task_data)\n    await asyncio.sleep(1)\n\n\n@aioredis_pool(host='redis://localhost', encoding='utf8')\nasync def consume_task(redis=None):\n    logger.info('Starting consuming...')\n    queue = Arque(redis=redis, working_limit=3)\n    while True:\n        task_id, task_data = await queue.dequeue()\n        if task_id == '__not_found__':\n            continue\n\n        if task_id == '__overloaded__':\n            print(f'TASK ID: {task_id}')\n            await asyncio.sleep(1)\n            continue\n\n        if task_id == '__marked_as_failed___':\n            print(f'FAILED  ID: {task_id}')\n            continue\n\n        try:\n            await process(task_data)\n            await queue.release(task_id)\n        except Exception:\n            logger.exception('Job processing has failed')\n            await queue.requeue(task_id, delay=5)\n            stats = await queue.get_stats()\n            logger.info(stats)\n\n\n@aioredis_pool(host='redis://localhost', encoding='utf8')\nasync def sweep_task(redis=None):\n    logger.info('Starting sweeping...')\n    queue = Arque(redis=redis, sweep_interval=5)\n    await queue.schedule_sweep()\n\n\n@aioredis_pool(host='redis://localhost', encoding='utf8')\nasync def stats_task(redis=None):\n    logger.info('Starting stats...')\n    queue = Arque(redis=redis)\n    while True:\n        stats = await queue.get_stats()\n        logger.info(stats)\n        await asyncio.sleep(5)\n\n\nasync def example():\n    tasks = []\n    for _ in range(5):\n        tasks.append(consume_task())\n    tasks.append(produce_task())\n    tasks.append(sweep_task())\n    tasks.append(stats_task())\n    await asyncio.gather(*tasks)\n\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(message)s')\n    loop = asyncio.get_event_loop()\n    signals = (signal.SIGHUP, signal.SIGTERM, signal.SIGINT, signal.SIGUSR1)\n    for s in signals:\n        loop.add_signal_handler(s, lambda s=s: asyncio.create_task(shutdown(s, loop)))\n    try:\n        loop.run_until_complete(example())\n    finally:\n        loop.close()\n        logging.info(\"Successfully shutdown...\")\n\n```    \n\n#### Reference\n<a name=\"ref1\"></a>[1] [Reliable Queueing in Redis (Part 1)](http://blog.bronto.com/engineering/reliable-queueing-in-redis-part-1/)  \n<a name=\"ref2\"></a>[2] [DEWIRE Redis as a Reliable Work Queue.pdf](https://www.percona.com/sites/default/files/DEWIRE%20Redis%20as%20a%20Reliable%20Work%20Queue.pdf)  \n<a name=\"ref3\"></a>[3] [torrelque](https://bitbucket.org/saaj/torrelque)  \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/code-impactor/arque/releases/tag/1.1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/code-impactor/arque", "keywords": "asyncio,redis,reliable,queue,asynchronous,python,reliable-queue,work-queue,delay,delayed,jobs,delayed-queue,repeated,tasks,dead letter,failed", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "arque", "package_url": "https://pypi.org/project/arque/", "platform": "Any", "project_url": "https://pypi.org/project/arque/", "project_urls": {"Download": "https://github.com/code-impactor/arque/releases/tag/1.1.0", "Homepage": "https://github.com/code-impactor/arque"}, "release_url": "https://pypi.org/project/arque/1.1.0/", "requires_dist": ["aioredis (>=1.2.0)"], "requires_python": ">=3.7", "summary": "Asyncio Reliable Queue (based on redis)", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>arque</h1>\n<p>Asyncio Reliable Queue (based on redis)</p>\n<p>Inspired by Tom DeWire's article \"Reliable Queueing in Redis (Part 1)\" <a href=\"#ref1\" rel=\"nofollow\">[1]</a> <a href=\"#ref2\" rel=\"nofollow\">[2]</a> and the \"torrelque\" python module <a href=\"#ref3\" rel=\"nofollow\">[3]</a>.</p>\n<h4>Features:</h4>\n<pre><code>- Asynchronous: based on asyncio and aioredis\n- Reliable: at any moment task data stored in redis database\n- Throttling: controls number of tasks in execution\n- Delayed queue: defers task availability\n- Dead letters: put task data in failed queue after number of predefined retry attempts\n- Tested on Python 3.7 and redis server '&gt;=3.0.6', '&lt;=5.0.5'\n- Used in containerized applications (managed by kubernetes) in high load environments\n</code></pre>\n<h4>Install:</h4>\n<pre>pip install arque\n</pre>\n<h4>Usage:</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">signal</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aioredis</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">wraps</span>\n<span class=\"kn\">from</span> <span class=\"nn\">arque</span> <span class=\"kn\">import</span> <span class=\"n\">Arque</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">shutdown</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Cleanup tasks tied to the service's shutdown.\"\"\"</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Received exit signal </span><span class=\"si\">{</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">...\"</span><span class=\"p\">)</span>\n    <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">t</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">all_tasks</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">t</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">current_task</span><span class=\"p\">()]</span>\n    <span class=\"p\">[</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">tasks</span><span class=\"p\">]</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Cancelling </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">outstanding tasks\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tasks</span><span class=\"p\">)</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Flushing metrics\"</span><span class=\"p\">)</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">aioredis_pool</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'redis://localhost'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf8'</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">wrapped</span><span class=\"p\">():</span>\n            <span class=\"n\">redis</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">aioredis</span><span class=\"o\">.</span><span class=\"n\">create_redis_pool</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"n\">encoding</span><span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"p\">)</span>\n            <span class=\"k\">finally</span><span class=\"p\">:</span>\n                <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n                <span class=\"k\">await</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">wait_closed</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">wrapped</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n\n\n<span class=\"nd\">@aioredis_pool</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'redis://localhost'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf8'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">produce_task</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Starting producing...'</span><span class=\"p\">)</span>\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Arque</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">99</span><span class=\"p\">)}</span>\n            <span class=\"n\">task_id</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"custom_</span><span class=\"si\">{</span><span class=\"n\">task</span><span class=\"p\">[</span><span class=\"s1\">'value'</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">_</span><span class=\"si\">{</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Produced task </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">enqueue</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">,</span> <span class=\"n\">task_id</span><span class=\"o\">=</span><span class=\"n\">task_id</span><span class=\"p\">,</span> <span class=\"n\">task_timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"n\">task_data</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Consumed task </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">task_data</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@aioredis_pool</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'redis://localhost'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf8'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">consume_task</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Starting consuming...'</span><span class=\"p\">)</span>\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Arque</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"p\">,</span> <span class=\"n\">working_limit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">task_id</span><span class=\"p\">,</span> <span class=\"n\">task_data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">dequeue</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">task_id</span> <span class=\"o\">==</span> <span class=\"s1\">'__not_found__'</span><span class=\"p\">:</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">task_id</span> <span class=\"o\">==</span> <span class=\"s1\">'__overloaded__'</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'TASK ID: </span><span class=\"si\">{</span><span class=\"n\">task_id</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">task_id</span> <span class=\"o\">==</span> <span class=\"s1\">'__marked_as_failed___'</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'FAILED  ID: </span><span class=\"si\">{</span><span class=\"n\">task_id</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">task_data</span><span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s1\">'Job processing has failed'</span><span class=\"p\">)</span>\n            <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">requeue</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n            <span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">get_stats</span><span class=\"p\">()</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">stats</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@aioredis_pool</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'redis://localhost'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf8'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">sweep_task</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Starting sweeping...'</span><span class=\"p\">)</span>\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Arque</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"p\">,</span> <span class=\"n\">sweep_interval</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">schedule_sweep</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@aioredis_pool</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'redis://localhost'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf8'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">stats_task</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Starting stats...'</span><span class=\"p\">)</span>\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Arque</span><span class=\"p\">(</span><span class=\"n\">redis</span><span class=\"o\">=</span><span class=\"n\">redis</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">get_stats</span><span class=\"p\">()</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">stats</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">consume_task</span><span class=\"p\">())</span>\n    <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">produce_task</span><span class=\"p\">())</span>\n    <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sweep_task</span><span class=\"p\">())</span>\n    <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">stats_task</span><span class=\"p\">())</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tasks</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">signals</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">SIGHUP</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">SIGTERM</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">SIGINT</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">SIGUSR1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">signals</span><span class=\"p\">:</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">add_signal_handler</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">shutdown</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"p\">)))</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">())</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Successfully shutdown...\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Reference</h4>\n<p><a></a>[1] <a href=\"http://blog.bronto.com/engineering/reliable-queueing-in-redis-part-1/\" rel=\"nofollow\">Reliable Queueing in Redis (Part 1)</a><br>\n<a></a>[2] <a href=\"https://www.percona.com/sites/default/files/DEWIRE%20Redis%20as%20a%20Reliable%20Work%20Queue.pdf\" rel=\"nofollow\">DEWIRE Redis as a Reliable Work Queue.pdf</a><br>\n<a></a>[3] <a href=\"https://bitbucket.org/saaj/torrelque\" rel=\"nofollow\">torrelque</a></p>\n\n          </div>"}, "last_serial": 6138293, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "6cb27487a162ad86f357bc1fa65f5db0", "sha256": "92da458073c4ca04e5c5f2332fd0957490973719b5779f2a843b4b3d7157e281"}, "downloads": -1, "filename": "arque-1.0.2.tar.gz", "has_sig": false, "md5_digest": "6cb27487a162ad86f357bc1fa65f5db0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6312, "upload_time": "2019-09-20T20:57:09", "upload_time_iso_8601": "2019-09-20T20:57:09.558769Z", "url": "https://files.pythonhosted.org/packages/db/15/e1259b32e17aa623582f91b58fc6b573fd5606adf9e66acf1dad0885f152/arque-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f0ba677d1cc17d2f5f3d0dadef61dc80", "sha256": "9aa6d4418b50eabd69dfaec5b41909c7c4d9a7cf7e5e993f278a8ae7d211f110"}, "downloads": -1, "filename": "arque-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f0ba677d1cc17d2f5f3d0dadef61dc80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6826, "upload_time": "2019-09-20T21:09:36", "upload_time_iso_8601": "2019-09-20T21:09:36.375583Z", "url": "https://files.pythonhosted.org/packages/26/4b/a6c08346d1df24fd1eea9c57ca4247a7fb3739887532df4d98c5c3fa439f/arque-1.0.3-py3-none-any.whl", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2b21b34c26b08a2fa57e9754bf2b392c", "sha256": "44101a163ecfef616876dd1befa99b06a43429cadd3a6919aace464683fc4ad2"}, "downloads": -1, "filename": "arque-1.0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "2b21b34c26b08a2fa57e9754bf2b392c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.7", "size": 6870, "upload_time": "2019-09-20T21:29:02", "upload_time_iso_8601": "2019-09-20T21:29:02.019893Z", "url": "https://files.pythonhosted.org/packages/80/f6/a39e8a0abeea91cbb6bd2f94b06a689bed8ba142a5cd7eb751f4c4ea2df6/arque-1.0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8385db23e3730adecdd43ab88502940", "sha256": "35aad10aabe3fe4c4394a42e2c3260183f1e9a285c0d4e491712e97e664bfcbe"}, "downloads": -1, "filename": "arque-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c8385db23e3730adecdd43ab88502940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6868, "upload_time": "2019-09-20T22:12:38", "upload_time_iso_8601": "2019-09-20T22:12:38.048394Z", "url": "https://files.pythonhosted.org/packages/55/62/4381af738d925154103611b26c9c5e92baff89a772978856ec3d72fdcae2/arque-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ed3331ef536eef4f758fbfc0b9864c8", "sha256": "cbdb551b6048acd9cd6e71afc354d0e2423243f632b1cd5e57b062b26e3ab022"}, "downloads": -1, "filename": "arque-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0ed3331ef536eef4f758fbfc0b9864c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6348, "upload_time": "2019-09-20T22:12:40", "upload_time_iso_8601": "2019-09-20T22:12:40.222798Z", "url": "https://files.pythonhosted.org/packages/9f/b4/9a039014ad44363d6a6967d6893de66be9c32ffe6398bb8c83fd0b21f03e/arque-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "9a5ba32f4302804bece839a261f8258d", "sha256": "fed752523d4615b94e0cb6aa5d3bffa3a8fd63afe6130dbcf2cd1aad315673b7"}, "downloads": -1, "filename": "arque-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9a5ba32f4302804bece839a261f8258d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6933, "upload_time": "2019-09-21T17:13:46", "upload_time_iso_8601": "2019-09-21T17:13:46.406613Z", "url": "https://files.pythonhosted.org/packages/05/eb/31d08bf91cac7d59b9e377f73389f3ac807aa7833573833cc4afc97dd78c/arque-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cd85f82ebe0010fcc9aa84e7cc66a95", "sha256": "5c3bc1cd826e243ea940e95d55d02906d60b9a28992df96a300882b9ae6e43a2"}, "downloads": -1, "filename": "arque-1.0.5.tar.gz", "has_sig": false, "md5_digest": "1cd85f82ebe0010fcc9aa84e7cc66a95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6371, "upload_time": "2019-09-21T17:13:48", "upload_time_iso_8601": "2019-09-21T17:13:48.054718Z", "url": "https://files.pythonhosted.org/packages/fc/2c/953a787229afa3f0425e61c5b2970c243910b2c6b185b77eab3aecf0dfa4/arque-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "188e3aa9ddc0c4cbb468216fb1e65fa1", "sha256": "233cc563dde86adbf2de3bc62d85975b8490d6c7c0c9fcb7a9e77880dfa47453"}, "downloads": -1, "filename": "arque-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "188e3aa9ddc0c4cbb468216fb1e65fa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6950, "upload_time": "2019-09-23T18:09:47", "upload_time_iso_8601": "2019-09-23T18:09:47.866781Z", "url": "https://files.pythonhosted.org/packages/30/f9/cf122d0683b03e3c4d6f2618145453e52898b5b62ef71c79fdbf9146df9d/arque-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8303f43022387222e59b6bbc2a5faa9", "sha256": "617916617ac25c917e46ede82cdd5a7298ab40a3e78759e9932074660b3dd634"}, "downloads": -1, "filename": "arque-1.0.6.tar.gz", "has_sig": false, "md5_digest": "a8303f43022387222e59b6bbc2a5faa9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6407, "upload_time": "2019-09-23T18:09:50", "upload_time_iso_8601": "2019-09-23T18:09:50.654955Z", "url": "https://files.pythonhosted.org/packages/fa/b3/a37fc84e1dfcf22f08dd9c692c8429a218c36b09e745c4d06d09dd15a98f/arque-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "b83c5b58eba6c7e96ff2b104e9d43fd5", "sha256": "094ae7c46d77cb710893cefb940489b5ebef00980a8af04d708cf2e551e45d9b"}, "downloads": -1, "filename": "arque-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "b83c5b58eba6c7e96ff2b104e9d43fd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7033, "upload_time": "2019-10-20T18:48:33", "upload_time_iso_8601": "2019-10-20T18:48:33.833461Z", "url": "https://files.pythonhosted.org/packages/63/56/eb40b377f65fb345857535f9b533070613be8f11080e684afd9e429fa738/arque-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f51ad3c22174db73c400dbd6700159e", "sha256": "bede2ff7ac78a433b44446c56a329a0fae52acc498c04644c3152ff492953bd7"}, "downloads": -1, "filename": "arque-1.0.7.tar.gz", "has_sig": false, "md5_digest": "4f51ad3c22174db73c400dbd6700159e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6490, "upload_time": "2019-10-20T18:48:36", "upload_time_iso_8601": "2019-10-20T18:48:36.003438Z", "url": "https://files.pythonhosted.org/packages/d6/80/6aaf61b99c96fcdc9d90020f664727c9cb8cf3a55a76a2c4780bd5cab25d/arque-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "067b0f0c153b8d4956d051369feb7fd3", "sha256": "4f8541c1f1afcadd51562732316f2d697f706a1a0ff82cd2733f2e15e4457625"}, "downloads": -1, "filename": "arque-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "067b0f0c153b8d4956d051369feb7fd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7163, "upload_time": "2019-11-10T20:12:28", "upload_time_iso_8601": "2019-11-10T20:12:28.421155Z", "url": "https://files.pythonhosted.org/packages/c5/39/8cf7338df157c5fb36b35438e6a0699fbd0ca1fca8a5e61003d033d4e562/arque-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c694e26c495f4678f61f9268c1e7e126", "sha256": "3e90fea3583692234834d6cde2c21872743f623d8233ee95b2be061146864066"}, "downloads": -1, "filename": "arque-1.0.8.tar.gz", "has_sig": false, "md5_digest": "c694e26c495f4678f61f9268c1e7e126", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6594, "upload_time": "2019-11-10T20:12:30", "upload_time_iso_8601": "2019-11-10T20:12:30.429538Z", "url": "https://files.pythonhosted.org/packages/74/90/c0be6c3644cd6c784a76653fe0f3b463fe80b6da3f0cf16f64a55499c1cd/arque-1.0.8.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e54a8dff03aa32000d545093fc7ca5c3", "sha256": "dfc7383417bc8a2d99a20f4d5ce119a3d4cd80055185153a0e39e3377387febb"}, "downloads": -1, "filename": "arque-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e54a8dff03aa32000d545093fc7ca5c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7502, "upload_time": "2019-11-14T18:54:58", "upload_time_iso_8601": "2019-11-14T18:54:58.008941Z", "url": "https://files.pythonhosted.org/packages/6f/06/ceaaab770679ec5c1b4078fca8a461471ee89e3bc9ee12df4b8082f5b859/arque-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6970b6469aba6598fcff3ebe698812bd", "sha256": "66c0af553a2155ae2ee96938b040c8703fa0b547e71520b73a1a2345d3129ae7"}, "downloads": -1, "filename": "arque-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6970b6469aba6598fcff3ebe698812bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6807, "upload_time": "2019-11-14T18:54:59", "upload_time_iso_8601": "2019-11-14T18:54:59.744369Z", "url": "https://files.pythonhosted.org/packages/81/8a/914ff4fe52519c4e9728f43ac1d91981a41ac73a609676c88a849f8a463c/arque-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e54a8dff03aa32000d545093fc7ca5c3", "sha256": "dfc7383417bc8a2d99a20f4d5ce119a3d4cd80055185153a0e39e3377387febb"}, "downloads": -1, "filename": "arque-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e54a8dff03aa32000d545093fc7ca5c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7502, "upload_time": "2019-11-14T18:54:58", "upload_time_iso_8601": "2019-11-14T18:54:58.008941Z", "url": "https://files.pythonhosted.org/packages/6f/06/ceaaab770679ec5c1b4078fca8a461471ee89e3bc9ee12df4b8082f5b859/arque-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6970b6469aba6598fcff3ebe698812bd", "sha256": "66c0af553a2155ae2ee96938b040c8703fa0b547e71520b73a1a2345d3129ae7"}, "downloads": -1, "filename": "arque-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6970b6469aba6598fcff3ebe698812bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6807, "upload_time": "2019-11-14T18:54:59", "upload_time_iso_8601": "2019-11-14T18:54:59.744369Z", "url": "https://files.pythonhosted.org/packages/81/8a/914ff4fe52519c4e9728f43ac1d91981a41ac73a609676c88a849f8a463c/arque-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:11 2020"}