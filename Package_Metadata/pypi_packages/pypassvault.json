{"info": {"author": "cryptbytestech", "author_email": "cryptbytestech@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "# PYPASSVAULT\n\nA simple command line password vault written in python.\n\n## Description\n\nThis tool was developed as a personal experiment to try out cryptography in python and also to develop a handy tool that can act as a secure command line password vault.\n\n## Installation\n\n```\npip install pypassvault\n```\n\n## Usage\n\nOnce you install the package, you will can use ```passvault``` utility from command line to use this tool.\n\n- Help\n\n```\n> passvault -h\nUsage: passvault [--core-opts] <subcommand> [--subcommand-opts] ...\n\nCore options:\n\n  --complete                     Print tab-completion candidates for given parse remainder.\n  --hide=STRING                  Set default value of run()'s 'hide' kwarg.\n  --write-pyc                    Enable creation of .pyc files.\n  -d, --debug                    Enable debug output.\n  -e, --echo                     Echo executed commands before running.\n  -f STRING, --config=STRING     Runtime configuration file to use.\n  -h [STRING], --help[=STRING]   Show core or per-task help and exit.\n  -l, --list                     List available tasks.\n  -p, --pty                      Use a pty when executing shell commands.\n  -V, --version                  Show version and exit.\n  -w, --warn-only                Warn, instead of failing, when shell commands fail.\n\nSubcommands:\n\n  configure   Set the configuration\n  get         Get password for a username and application (optional)\n  list        List all applications and users for which password is set\n  setpasswd   Set password for a username and application (optional)\n```\n\nIf you need help on any sub command you can type ```passvalut -h <subcommand>``` to see the specific help for it.\n\ne.g.\n```\n> passvault -h configure\nUsage: passvault [--core-opts] configure [--options] [other tasks here ...]\n\nDocstring:\n  Set the configuration\n\nOptions:\n  -c STRING, --confdir=STRING\n```\n\n- Set a password\n```\npassvault setpasswd -a appname -u username\nEnter vault password:\nSet an app password for username:\n```\n\nWhen you run passvault for the first time you will be asked to set up a vault password. Please note that Vault password is the single password that you will need for all future operations. \n\n**Please do not forget your _vault password_ as if you forget it then the vault will not be recoverable.**\n\n- Get the password details\n\n```\n> passvault get -a appname -u username\nEnter vault password:\n<Password>\n```\n- List Applications and Usernames present under passvault\n\n```\n> passvault list -a appname\nEnter valult password:\nUsers for application appname are:\n['username']\n```\nTo list all applications & Usernames\n\n```\n> passvault list\n```\n\n- To check pypassvault version\n\n```\npassvault -V or passvault --version\n```\n\n## Todo\n\n- Refactoring of existing APIs\n- Functionality of deleting records by appname or user - Completed\n- Generate password feature\n- Import and Export of Data\n- Better Documentation\n- Providing an API interface for passvault\n- Improvement in Encryption & Portability of Password Vault\n- Support for Clipboard\n- Testing\n\n**Better to have features:**\n\n- Password expiration notification/reminder\n- UI for pypassvault\n- Cloud Backup & Sync of Vault File\n\n## LICENSE\n\nMIT", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cryptbytestech/pypassvault", "keywords": "password vault program cryptography", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pypassvault", "package_url": "https://pypi.org/project/pypassvault/", "platform": "", "project_url": "https://pypi.org/project/pypassvault/", "project_urls": {"Homepage": "https://github.com/cryptbytestech/pypassvault"}, "release_url": "https://pypi.org/project/pypassvault/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "A simple commandline password vault written in python.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PYPASSVAULT</h1>\n<p>A simple command line password vault written in python.</p>\n<h2>Description</h2>\n<p>This tool was developed as a personal experiment to try out cryptography in python and also to develop a handy tool that can act as a secure command line password vault.</p>\n<h2>Installation</h2>\n<pre><code>pip install pypassvault\n</code></pre>\n<h2>Usage</h2>\n<p>Once you install the package, you will can use <code>passvault</code> utility from command line to use this tool.</p>\n<ul>\n<li>Help</li>\n</ul>\n<pre><code>&gt; passvault -h\nUsage: passvault [--core-opts] &lt;subcommand&gt; [--subcommand-opts] ...\n\nCore options:\n\n  --complete                     Print tab-completion candidates for given parse remainder.\n  --hide=STRING                  Set default value of run()'s 'hide' kwarg.\n  --write-pyc                    Enable creation of .pyc files.\n  -d, --debug                    Enable debug output.\n  -e, --echo                     Echo executed commands before running.\n  -f STRING, --config=STRING     Runtime configuration file to use.\n  -h [STRING], --help[=STRING]   Show core or per-task help and exit.\n  -l, --list                     List available tasks.\n  -p, --pty                      Use a pty when executing shell commands.\n  -V, --version                  Show version and exit.\n  -w, --warn-only                Warn, instead of failing, when shell commands fail.\n\nSubcommands:\n\n  configure   Set the configuration\n  get         Get password for a username and application (optional)\n  list        List all applications and users for which password is set\n  setpasswd   Set password for a username and application (optional)\n</code></pre>\n<p>If you need help on any sub command you can type <code>passvalut -h &lt;subcommand&gt;</code> to see the specific help for it.</p>\n<p>e.g.</p>\n<pre><code>&gt; passvault -h configure\nUsage: passvault [--core-opts] configure [--options] [other tasks here ...]\n\nDocstring:\n  Set the configuration\n\nOptions:\n  -c STRING, --confdir=STRING\n</code></pre>\n<ul>\n<li>Set a password</li>\n</ul>\n<pre><code>passvault setpasswd -a appname -u username\nEnter vault password:\nSet an app password for username:\n</code></pre>\n<p>When you run passvault for the first time you will be asked to set up a vault password. Please note that Vault password is the single password that you will need for all future operations.</p>\n<p><strong>Please do not forget your <em>vault password</em> as if you forget it then the vault will not be recoverable.</strong></p>\n<ul>\n<li>Get the password details</li>\n</ul>\n<pre><code>&gt; passvault get -a appname -u username\nEnter vault password:\n&lt;Password&gt;\n</code></pre>\n<ul>\n<li>List Applications and Usernames present under passvault</li>\n</ul>\n<pre><code>&gt; passvault list -a appname\nEnter valult password:\nUsers for application appname are:\n['username']\n</code></pre>\n<p>To list all applications &amp; Usernames</p>\n<pre><code>&gt; passvault list\n</code></pre>\n<ul>\n<li>To check pypassvault version</li>\n</ul>\n<pre><code>passvault -V or passvault --version\n</code></pre>\n<h2>Todo</h2>\n<ul>\n<li>Refactoring of existing APIs</li>\n<li>Functionality of deleting records by appname or user - Completed</li>\n<li>Generate password feature</li>\n<li>Import and Export of Data</li>\n<li>Better Documentation</li>\n<li>Providing an API interface for passvault</li>\n<li>Improvement in Encryption &amp; Portability of Password Vault</li>\n<li>Support for Clipboard</li>\n<li>Testing</li>\n</ul>\n<p><strong>Better to have features:</strong></p>\n<ul>\n<li>Password expiration notification/reminder</li>\n<li>UI for pypassvault</li>\n<li>Cloud Backup &amp; Sync of Vault File</li>\n</ul>\n<h2>LICENSE</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 4036145, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "ed71330f136a94c6e87ecd12e852330a", "sha256": "398abee745dac0d438008310dcd6f108c87cf5d3264a1303368fc498488b7de6"}, "downloads": -1, "filename": "pypassvault-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ed71330f136a94c6e87ecd12e852330a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4556, "upload_time": "2018-06-07T09:32:30", "upload_time_iso_8601": "2018-06-07T09:32:30.352929Z", "url": "https://files.pythonhosted.org/packages/e7/bc/9a8e9bbfdfb5dd57ef49db852456fae6d14ae3fcbfa544547ce2761baa83/pypassvault-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "03ee1e824cf52d1ceadb5444fcd8e580", "sha256": "32bb501f79e121193835737c4c3866b4624b7a43a04edbdf21a52ce61c80e513"}, "downloads": -1, "filename": "pypassvault-0.1.3.tar.gz", "has_sig": false, "md5_digest": "03ee1e824cf52d1ceadb5444fcd8e580", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7288, "upload_time": "2018-07-06T10:14:31", "upload_time_iso_8601": "2018-07-06T10:14:31.777299Z", "url": "https://files.pythonhosted.org/packages/0c/c1/9bff69cfe44f064ac1e762d29ec75f26657e810bb319698c27986ca617a5/pypassvault-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6103889db7b174f5c5a4a8786aedde65", "sha256": "58a9142cdede24352d30a860df9edf8e957b8ae5f25dabdf258919cd2696460e"}, "downloads": -1, "filename": "pypassvault-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6103889db7b174f5c5a4a8786aedde65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7358, "upload_time": "2018-07-06T11:48:40", "upload_time_iso_8601": "2018-07-06T11:48:40.211139Z", "url": "https://files.pythonhosted.org/packages/7d/a2/7887def266748b0f323959474cd11d225fbdb506ffb01b798ef4e2a48672/pypassvault-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6103889db7b174f5c5a4a8786aedde65", "sha256": "58a9142cdede24352d30a860df9edf8e957b8ae5f25dabdf258919cd2696460e"}, "downloads": -1, "filename": "pypassvault-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6103889db7b174f5c5a4a8786aedde65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7358, "upload_time": "2018-07-06T11:48:40", "upload_time_iso_8601": "2018-07-06T11:48:40.211139Z", "url": "https://files.pythonhosted.org/packages/7d/a2/7887def266748b0f323959474cd11d225fbdb506ffb01b798ef4e2a48672/pypassvault-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:52 2020"}