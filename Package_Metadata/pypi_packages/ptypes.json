{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "======================\nWelcome to ``ptypes``!\n======================\n\nThe ``ptypes`` (\"persistent types\") package is a set of Python extension\nmodules written in `Cython <http://cython.org/>`_. \nIt provides a persistency mechanism to `Python <http://www.python.org/>`_\nprograms based on memory mapped files. ``ptypes`` emphasises execution\nspeed. The persistent objects (persistent versions of ints, floats, strings, \nstructures, lists, sets, dicts plus any extension type supporting the\n`buffer interface <https://docs.python.org/2.7/c-api/buffer.html>`_) can be \naccessed and manipulated directly, without serializing and de-serializing them.\n\nThe package also implements data types for property graphs (nodes and\nedges), as well as a basic query interface allowing the enumeration of \nobject-tuples matching a given pattern at (nearly) the speed of a C program.\n\nIn its current shape, ``ptypes`` is experimental with regards to the stability \nof its API and the completeness of its functionality. Making the updates to \nthe memory mapped files \n`atomic <http://en.wikipedia.org/wiki/Atomicity_%28database_systems%29>`_ and\nimplementing garbage collection for the persistent objects are of prime \npriorities. \n\nInstallation\n------------\n\n``ptypes`` is tested on Linux (but should run on any Posix platform) using \nCPython 2.7 (Python 3 support is on the agenda). It is distributed as a source \ntarball, so you need to have ``gcc`` to install it. The simplest way to do so \nis::\n\n    pip install ptypes\n\nIf you do not have internet access on the host where you need to install it, \nthen download it from `PyPI <https://pypi.python.org/pypi/ptypes>`_ on a host \nwhere you do have internet access, copy the tarball over to the target host \nand::\n\n    tar -xf ptypes-<version>.tgz\n    cd ptypes-<version>\n    python setup.py install\n\nIn the ``doc`` directory you should find abundant examples of how to use it.", "description_content_type": null, "docs_url": "https://pythonhosted.org/ptypes/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ptypes", "package_url": "https://pypi.org/project/ptypes/", "platform": "", "project_url": "https://pypi.org/project/ptypes/", "project_urls": null, "release_url": "https://pypi.org/project/ptypes/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "First public release of ptypes", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt>ptypes</tt> (\u201cpersistent types\u201d) package is a set of Python extension\nmodules written in <a href=\"http://cython.org/\" rel=\"nofollow\">Cython</a>.\nIt provides a persistency mechanism to <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a>\nprograms based on memory mapped files. <tt>ptypes</tt> emphasises execution\nspeed. The persistent objects (persistent versions of ints, floats, strings,\nstructures, lists, sets, dicts plus any extension type supporting the\n<a href=\"https://docs.python.org/2.7/c-api/buffer.html\" rel=\"nofollow\">buffer interface</a>) can be\naccessed and manipulated directly, without serializing and de-serializing them.</p>\n<p>The package also implements data types for property graphs (nodes and\nedges), as well as a basic query interface allowing the enumeration of\nobject-tuples matching a given pattern at (nearly) the speed of a C program.</p>\n<p>In its current shape, <tt>ptypes</tt> is experimental with regards to the stability\nof its API and the completeness of its functionality. Making the updates to\nthe memory mapped files\n<a href=\"http://en.wikipedia.org/wiki/Atomicity_%28database_systems%29\" rel=\"nofollow\">atomic</a> and\nimplementing garbage collection for the persistent objects are of prime\npriorities.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>ptypes</tt> is tested on Linux (but should run on any Posix platform) using\nCPython 2.7 (Python 3 support is on the agenda). It is distributed as a source\ntarball, so you need to have <tt>gcc</tt> to install it. The simplest way to do so\nis:</p>\n<pre>pip install ptypes\n</pre>\n<p>If you do not have internet access on the host where you need to install it,\nthen download it from <a href=\"https://pypi.python.org/pypi/ptypes\" rel=\"nofollow\">PyPI</a> on a host\nwhere you do have internet access, copy the tarball over to the target host\nand:</p>\n<pre>tar -xf ptypes-&lt;version&gt;.tgz\ncd ptypes-&lt;version&gt;\npython setup.py install\n</pre>\n<p>In the <tt>doc</tt> directory you should find abundant examples of how to use it.</p>\n</div>\n\n          </div>"}, "last_serial": 1417913, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "98f0a84f5ecd5fdc55b07d9fc3f55924", "sha256": "d1ca948b60a9b5504f5a218beb0dd5d4c0804930e19383e999dade8dfff8df0f"}, "downloads": -1, "filename": "ptypes-0.5.0.tar.gz", "has_sig": false, "md5_digest": "98f0a84f5ecd5fdc55b07d9fc3f55924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 698203, "upload_time": "2015-02-10T14:26:36", "upload_time_iso_8601": "2015-02-10T14:26:36.010560Z", "url": "https://files.pythonhosted.org/packages/a8/77/80a8fe113a94d8fd880ffa7471fb60029d1dbeddc60969bda4ee3e848a6c/ptypes-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98f0a84f5ecd5fdc55b07d9fc3f55924", "sha256": "d1ca948b60a9b5504f5a218beb0dd5d4c0804930e19383e999dade8dfff8df0f"}, "downloads": -1, "filename": "ptypes-0.5.0.tar.gz", "has_sig": false, "md5_digest": "98f0a84f5ecd5fdc55b07d9fc3f55924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 698203, "upload_time": "2015-02-10T14:26:36", "upload_time_iso_8601": "2015-02-10T14:26:36.010560Z", "url": "https://files.pythonhosted.org/packages/a8/77/80a8fe113a94d8fd880ffa7471fb60029d1dbeddc60969bda4ee3e848a6c/ptypes-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:57 2020"}