{"info": {"author": "Walid Shouman", "author_email": "eng.walidshouman@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "### About\nA package to ease the control of the [blinkstick nano](https://www.blinkstick.com/products/blinkstick-nano)\n\nSource code is at [https://github.com/weshouman/advanced_led_control](https://github.com/weshouman/advanced_led_control)\n\n### Example\nSave this example as ```test.py``` then run it as in the [Usage](#Usage) section below\n```python\nimport advanced_led_control.models.colors as c\nfrom advanced_led_control.models.leds import *\nfrom advanced_led_control.models.ValueIndication import *\nfrom advanced_led_control.models.Indicator       import *\nfrom advanced_led_control.models.Procedure       import *\n\ndef indic1_func():\n\t# Indication values are best shown between 1 and 10\n\tvalue_indication = ValueIndication(c.RED, 10)\n\treturn value_indication\n\ndef indic2_func():\n\tvalue_indication = ValueIndication(c.BLUE, NO_FLICKER)\n\treturn value_indication\n\nindic1 = Indicator(m_col=c.GREEN, func=indic1_func, i_time=4)\nindic2 = Indicator(m_col=c.GREEN, func=indic2_func, i_time=4)\n\nstick = blinkstick.find_first()\nprocedure = Procedure(stick=stick, mode_led=LED_2, quiet=10, sync_duration=10)\n\n# Append all indicators to be run\nprocedure.indicators.append(indic1)\nprocedure.indicators.append(indic2)\n\n# Run the specified procedure\nprocedure.run()\n```\n\n### Usage\nThis utility needs ```sudo``` to execute, as required by the ```blinkstick``` package.\nIf you are using a virtualenv, run\n```\nvirtualenv -p python3 venv\npip install advanced-led-control\nsource venv/bin/activate\n# Follow this [answer](https://stackoverflow.com/a/50335946/2730737) for why we need to use fully qualified path with sudo\nsudo venv/bin/python test.py\n```\n\n#### Configuration\n##### Indicator Params\n- ```m_col```: the indication mode color, based on any of the color types defined below  \n- ```func```: a callback that will be called to evaluate the color and flickering for the value led.\n- ```brightness```: a value in range [0, 1] that gets multiplied by both the mode and value indication.\n- ```i_time```: indication time, is how much time is allocated for this mode.\n\n##### Indicator Callback\nReturns\n- ```color```: the indication value color, based on any of the color types defined below  \n     NOTE: CSS names don't work with flickering, follow this [report](https://forums.blinkstick.com/t/python-api-colornames-not-working-with-pulse/1311?u=eng.walidshouman)\n- ```flickering```: an integer that shows the speed of flickering of this color,\n     the higher the value the faster the flickering.\n     Recommended Values are in range [1, 20].\n     Use ```NO_FLICKER``` or ```1001``` to set the led on without flickering.\n\n##### Color Type\nAn indication color is either one of the 3 types\n- ```RGB```: a list of 3 vals in RGB ie. [0, 10, 0].\n- ```HEX```: a string ie. '#00ffff'.\n- ```CSS_NAME````: a string ie. 'aliceblue'.\n\n##### Procedure Params\n- ```mode_led```: Choose between ```LED_1``` and ```LED_2```, currently ```LED_1``` isn't supported\n     as the blinkstick doesn't allow flickering the second led\n     while the first is set constantly.  \n     Follow this [report](https://forums.blinkstick.com/t/cant-pulse-second-led-and-keep-first-on/1310?u=eng.walidshouman).\n\n- ```quiet```: A percentage to be taken from the indication time for the stick to shutdown.  \n     Setting ```quiet=0``` will disable this feature,\n     and force all the indications to run consecutively.  \n     Setting ```quiet=100``` is useless, as it will take all the indication time as a break!\n\n- ```sync_duration```: Allows starting the procedure at a specific second,\n    as this package is made to run for multiple machines/RPis that are working separately,\n    and to avoid using communication to control the led,\n    we allow sync based on real time.  \n    Use a ```sync_duration``` of at least 1.2 total indication time to count for the\n    delay the pulses make, and if it's less than the total indication time,\n    it will be almost useless.  \n    NOTE: Set ```sync_duration=0``` to disable this feature.  \n    NOTE: Setting ```sync_duration``` to say 8 will start at every eighth second,\n          In example, [0, 8, 16, 24, 32 ...]\n\n### Notes\n- This project was inspired by the [Pi Dramble](https://github.com/geerlingguy/raspberry-pi-dramble)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/weshouman/advanced-led-control", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "advanced-led-control", "package_url": "https://pypi.org/project/advanced-led-control/", "platform": "", "project_url": "https://pypi.org/project/advanced-led-control/", "project_urls": {"Homepage": "https://github.com/weshouman/advanced-led-control"}, "release_url": "https://pypi.org/project/advanced-led-control/0.3.0/", "requires_dist": ["BlinkStick (==1.1.8)"], "requires_python": ">=3.5.2", "summary": "An non-official advanced controller for blinkstick", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>About</h3>\n<p>A package to ease the control of the <a href=\"https://www.blinkstick.com/products/blinkstick-nano\" rel=\"nofollow\">blinkstick nano</a></p>\n<p>Source code is at <a href=\"https://github.com/weshouman/advanced_led_control\" rel=\"nofollow\">https://github.com/weshouman/advanced_led_control</a></p>\n<h3>Example</h3>\n<p>Save this example as <code>test.py</code> then run it as in the <a href=\"#Usage\" rel=\"nofollow\">Usage</a> section below</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">advanced_led_control.models.colors</span> <span class=\"k\">as</span> <span class=\"nn\">c</span>\n<span class=\"kn\">from</span> <span class=\"nn\">advanced_led_control.models.leds</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">advanced_led_control.models.ValueIndication</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">advanced_led_control.models.Indicator</span>       <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">advanced_led_control.models.Procedure</span>       <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">indic1_func</span><span class=\"p\">():</span>\n\t<span class=\"c1\"># Indication values are best shown between 1 and 10</span>\n\t<span class=\"n\">value_indication</span> <span class=\"o\">=</span> <span class=\"n\">ValueIndication</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">RED</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\t<span class=\"k\">return</span> <span class=\"n\">value_indication</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">indic2_func</span><span class=\"p\">():</span>\n\t<span class=\"n\">value_indication</span> <span class=\"o\">=</span> <span class=\"n\">ValueIndication</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">BLUE</span><span class=\"p\">,</span> <span class=\"n\">NO_FLICKER</span><span class=\"p\">)</span>\n\t<span class=\"k\">return</span> <span class=\"n\">value_indication</span>\n\n<span class=\"n\">indic1</span> <span class=\"o\">=</span> <span class=\"n\">Indicator</span><span class=\"p\">(</span><span class=\"n\">m_col</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">GREEN</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">indic1_func</span><span class=\"p\">,</span> <span class=\"n\">i_time</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">indic2</span> <span class=\"o\">=</span> <span class=\"n\">Indicator</span><span class=\"p\">(</span><span class=\"n\">m_col</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">GREEN</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">indic2_func</span><span class=\"p\">,</span> <span class=\"n\">i_time</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"n\">stick</span> <span class=\"o\">=</span> <span class=\"n\">blinkstick</span><span class=\"o\">.</span><span class=\"n\">find_first</span><span class=\"p\">()</span>\n<span class=\"n\">procedure</span> <span class=\"o\">=</span> <span class=\"n\">Procedure</span><span class=\"p\">(</span><span class=\"n\">stick</span><span class=\"o\">=</span><span class=\"n\">stick</span><span class=\"p\">,</span> <span class=\"n\">mode_led</span><span class=\"o\">=</span><span class=\"n\">LED_2</span><span class=\"p\">,</span> <span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">sync_duration</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Append all indicators to be run</span>\n<span class=\"n\">procedure</span><span class=\"o\">.</span><span class=\"n\">indicators</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">indic1</span><span class=\"p\">)</span>\n<span class=\"n\">procedure</span><span class=\"o\">.</span><span class=\"n\">indicators</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">indic2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Run the specified procedure</span>\n<span class=\"n\">procedure</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Usage</h3>\n<p>This utility needs <code>sudo</code> to execute, as required by the <code>blinkstick</code> package.\nIf you are using a virtualenv, run</p>\n<pre><code>virtualenv -p python3 venv\npip install advanced-led-control\nsource venv/bin/activate\n# Follow this [answer](https://stackoverflow.com/a/50335946/2730737) for why we need to use fully qualified path with sudo\nsudo venv/bin/python test.py\n</code></pre>\n<h4>Configuration</h4>\n<h5>Indicator Params</h5>\n<ul>\n<li><code>m_col</code>: the indication mode color, based on any of the color types defined below</li>\n<li><code>func</code>: a callback that will be called to evaluate the color and flickering for the value led.</li>\n<li><code>brightness</code>: a value in range [0, 1] that gets multiplied by both the mode and value indication.</li>\n<li><code>i_time</code>: indication time, is how much time is allocated for this mode.</li>\n</ul>\n<h5>Indicator Callback</h5>\n<p>Returns</p>\n<ul>\n<li><code>color</code>: the indication value color, based on any of the color types defined below<br>\nNOTE: CSS names don't work with flickering, follow this <a href=\"https://forums.blinkstick.com/t/python-api-colornames-not-working-with-pulse/1311?u=eng.walidshouman\" rel=\"nofollow\">report</a></li>\n<li><code>flickering</code>: an integer that shows the speed of flickering of this color,\nthe higher the value the faster the flickering.\nRecommended Values are in range [1, 20].\nUse <code>NO_FLICKER</code> or <code>1001</code> to set the led on without flickering.</li>\n</ul>\n<h5>Color Type</h5>\n<p>An indication color is either one of the 3 types</p>\n<ul>\n<li><code>RGB</code>: a list of 3 vals in RGB ie. [0, 10, 0].</li>\n<li><code>HEX</code>: a string ie. '#00ffff'.</li>\n<li>```CSS_NAME````: a string ie. 'aliceblue'.</li>\n</ul>\n<h5>Procedure Params</h5>\n<ul>\n<li>\n<p><code>mode_led</code>: Choose between <code>LED_1</code> and <code>LED_2</code>, currently <code>LED_1</code> isn't supported\nas the blinkstick doesn't allow flickering the second led\nwhile the first is set constantly.<br>\nFollow this <a href=\"https://forums.blinkstick.com/t/cant-pulse-second-led-and-keep-first-on/1310?u=eng.walidshouman\" rel=\"nofollow\">report</a>.</p>\n</li>\n<li>\n<p><code>quiet</code>: A percentage to be taken from the indication time for the stick to shutdown.<br>\nSetting <code>quiet=0</code> will disable this feature,\nand force all the indications to run consecutively.<br>\nSetting <code>quiet=100</code> is useless, as it will take all the indication time as a break!</p>\n</li>\n<li>\n<p><code>sync_duration</code>: Allows starting the procedure at a specific second,\nas this package is made to run for multiple machines/RPis that are working separately,\nand to avoid using communication to control the led,\nwe allow sync based on real time.<br>\nUse a <code>sync_duration</code> of at least 1.2 total indication time to count for the\ndelay the pulses make, and if it's less than the total indication time,\nit will be almost useless.<br>\nNOTE: Set <code>sync_duration=0</code> to disable this feature.<br>\nNOTE: Setting <code>sync_duration</code> to say 8 will start at every eighth second,\nIn example, [0, 8, 16, 24, 32 ...]</p>\n</li>\n</ul>\n<h3>Notes</h3>\n<ul>\n<li>This project was inspired by the <a href=\"https://github.com/geerlingguy/raspberry-pi-dramble\" rel=\"nofollow\">Pi Dramble</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6557465, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2bf7b83876541b7ba0caf641e1b4ae17", "sha256": "cb8edb21fb3e8e58683aab8ed725c764caa06d4a943afb70bda80c24df16764c"}, "downloads": -1, "filename": "advanced_led_control-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2bf7b83876541b7ba0caf641e1b4ae17", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 9511, "upload_time": "2020-02-01T15:33:33", "upload_time_iso_8601": "2020-02-01T15:33:33.838558Z", "url": "https://files.pythonhosted.org/packages/01/c6/214e903f84afdcf1028b964bbeedc8270ddb4267a96b7ca40df5d37e1811/advanced_led_control-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1ca6608811c3d8534d23d86e6841ef3", "sha256": "fe5499db2cc7450c2d94d5316296eb4e9cac7ea90711637d6a9f8d34971c5565"}, "downloads": -1, "filename": "advanced-led-control-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e1ca6608811c3d8534d23d86e6841ef3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 4888, "upload_time": "2020-02-01T15:33:36", "upload_time_iso_8601": "2020-02-01T15:33:36.235980Z", "url": "https://files.pythonhosted.org/packages/a6/9f/1f2dff3ecabacbaf9f0f9c12436af6b851b1e5bbae12307e45fc0092f61b/advanced-led-control-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "31573dd019fb963f79c6a34edf10aa63", "sha256": "ad1aed082e6f028856fdb8382a006b1ddf19d3a91b44e894dead185f2c10b58c"}, "downloads": -1, "filename": "advanced_led_control-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "31573dd019fb963f79c6a34edf10aa63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 11069, "upload_time": "2020-02-02T06:22:03", "upload_time_iso_8601": "2020-02-02T06:22:03.442108Z", "url": "https://files.pythonhosted.org/packages/51/0d/5fc980a6d6eeaf9c975b7b3ada4370b9d20ea6f42f3ad55c6da744fcb7be/advanced_led_control-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5014eeb49d128a2d26fddff147649ba", "sha256": "98c0352683ab22cb84ffcd6bc73175aa7313464853aea719cb6dece1be7aadc0"}, "downloads": -1, "filename": "advanced-led-control-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c5014eeb49d128a2d26fddff147649ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 7667, "upload_time": "2020-02-02T06:22:04", "upload_time_iso_8601": "2020-02-02T06:22:04.976747Z", "url": "https://files.pythonhosted.org/packages/97/4a/eac1a3973f2cda2138f1fd8fb9e1438deb899d19eb4d7f99fcb89705ce32/advanced-led-control-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "981e589fdda0791cac2e4e572282d7e3", "sha256": "cd3946a6c951473de10dc20393f98769d454ce3c0ec5a584c3cedfbd36b17208"}, "downloads": -1, "filename": "advanced_led_control-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "981e589fdda0791cac2e4e572282d7e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 12891, "upload_time": "2020-02-02T10:29:31", "upload_time_iso_8601": "2020-02-02T10:29:31.833262Z", "url": "https://files.pythonhosted.org/packages/7b/85/5b1866bc664587bed176c4238ea5d8f96e755f3cf814d8a153468c2c2fa1/advanced_led_control-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7462b5b6ff2c931c8812ff21fb37365", "sha256": "648a699b5b71c7c6e49d96e26a1844a5495de01998ed286564c37f51f1e6746e"}, "downloads": -1, "filename": "advanced-led-control-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a7462b5b6ff2c931c8812ff21fb37365", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 9274, "upload_time": "2020-02-02T10:29:33", "upload_time_iso_8601": "2020-02-02T10:29:33.314646Z", "url": "https://files.pythonhosted.org/packages/97/06/cb88b29a1fc646796660b286eb6dd2729552ba0bda1fcec3228c2bb6e463/advanced-led-control-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "981e589fdda0791cac2e4e572282d7e3", "sha256": "cd3946a6c951473de10dc20393f98769d454ce3c0ec5a584c3cedfbd36b17208"}, "downloads": -1, "filename": "advanced_led_control-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "981e589fdda0791cac2e4e572282d7e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 12891, "upload_time": "2020-02-02T10:29:31", "upload_time_iso_8601": "2020-02-02T10:29:31.833262Z", "url": "https://files.pythonhosted.org/packages/7b/85/5b1866bc664587bed176c4238ea5d8f96e755f3cf814d8a153468c2c2fa1/advanced_led_control-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7462b5b6ff2c931c8812ff21fb37365", "sha256": "648a699b5b71c7c6e49d96e26a1844a5495de01998ed286564c37f51f1e6746e"}, "downloads": -1, "filename": "advanced-led-control-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a7462b5b6ff2c931c8812ff21fb37365", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 9274, "upload_time": "2020-02-02T10:29:33", "upload_time_iso_8601": "2020-02-02T10:29:33.314646Z", "url": "https://files.pythonhosted.org/packages/97/06/cb88b29a1fc646796660b286eb6dd2729552ba0bda1fcec3228c2bb6e463/advanced-led-control-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:08 2020"}