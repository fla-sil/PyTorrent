{"info": {"author": "Laimonas Sutkus", "author_email": "laimonas.sutkus@gmail.com (laimonas@idenfy.com)", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## AWS ALB (Application Load Balancer)\n\nAn abstract application loadbalancer construct. It creates a loadbalancer and default\nsecurity groups and listeners for the loadbalancer. Also, this loadbalancer is ready\nfor blue-green deployments.\n\n#### Remarks\n\nThe project is written by [Laimonas Sutkus](https://github.com/laimonassutkus) \nand is owned by [iDenfy](https://github.com/idenfy). This is an open source\nlibrary intended to be used by anyone. [iDenfy](https://github.com/idenfy) aims\nto share its knowledge and educate market for better and more secure IT infrastructure.\n\n#### Related technology\n\nThis project utilizes the following technology:\n\n- *AWS* (Amazon Web Services).\n- *AWS CDK* (Amazon Web Services Cloud Development Kit).\n- *AWS CloudFormation*.\n- *AWS Loadbalancer*.\n- *AWS Security groups*.\n\n#### Assumptions\n\nThis library project assumes the following:\n\n- You have knowledge in AWS (Amazon Web Services).\n- You have knowledge in AWS CloudFormation and AWS loadbalancing.\n- You are managing your infrastructure with AWS CDK.\n- You are writing AWS CDK templates with a python language.\n\n#### Install\n\nThe project is built and uploaded to PyPi. Install it by using pip.\n\n```bash\npip install aws-alb\n```\n\nOr directly install it through source.\n\n```bash\n./build.sh -ic\n```\n\n#### Description\n\nIt is usually hard to create a loadbalancer following best practices and rules. Also, most of the \ntime the deployed loadbalancer will lack some configuration functionality for deployment management.\nWe tackle these problems by providing you a library to easily deploy and maintain a loadbalancer with\nright security groups, right listeners and most importantly right configuration for blue-green deployments.\n\n#### Examples\n\nTo create an application loadbalancer create an `ApplicationLoadbalancer`\ninstance in your stack. An example is given below:\n\n```python\nfrom aws_cdk import core, aws_ec2\nfrom aws_alb.application_loadbalancer import ApplicationLoadbalancer\n\nclass MainStack(core.Stack):\n    def __init__(self, scope: core.App) -> None:\n        super().__init__(\n            scope=scope,\n            id='MyCoolStack'\n        )\n\n        # Create your own vpc.\n        self.vpc = aws_ec2.Vpc(\n            self,\n            'MyCoolVpc'\n        )\n\n        self.public_http_loadbalancer = ApplicationLoadbalancer(\n            scope=self,\n            prefix='MyCool',\n            vpc=self.vpc,\n            loadbalancer_subnets=self.vpc.public_subnets,\n            security_groups=None,\n        )\n```\n\nTo create listeners and target groups that are blue-green deployments ready:\n\n```python\nfrom aws_alb.params.listener_params import ListenerParams\nfrom aws_alb.params.target_group_params import TargetGroupParams\nfrom aws_alb.application_loadbalancer import ApplicationLoadbalancer\nfrom aws_cdk.aws_ec2 import Vpc\n\nloadbalancer = ApplicationLoadbalancer(...)\nvpc = Vpc(...)\n\nblue, green = loadbalancer.listeners.create_blue_green(\n    blue_listener_params=ListenerParams(\n        prefix='MyCool',\n        loadbalancer=loadbalancer,\n        port=80\n    ),\n    green_listener_params=ListenerParams(\n        prefix='MyCool',\n        loadbalancer=loadbalancer.loadbalancer,\n        port=8000\n    ),\n    blue_target_group_params=TargetGroupParams(\n        prefix='MyCool',\n        vpc=vpc,\n    ),\n    green_target_group_params=TargetGroupParams(\n        prefix='MyCool',\n        vpc=vpc,\n    )\n)\n\n# If you need, you can access created target groups and listeners.\nblue_target_group, blue_listener = blue\ngreen_target_group, green_listener = green\n\n# To see to which ports listeners are listening to:\nprint(blue_listener.port)\nprint(green_listener.port)\n```\n\nUsually, it is the best practice to have one loadbalancer with two (http\nand https) listeners and have listener rules to route traffic. To create\ndefault listeners:\n\n```python\nfrom aws_alb.application_loadbalancer import ApplicationLoadbalancer\nfrom aws_cdk.aws_certificatemanager import CfnCertificate\nfrom aws_cdk.aws_ec2 import Vpc\n\nloadbalancer = ApplicationLoadbalancer(...)\nvpc = Vpc(...)\ncert = CfnCertificate(...)\n\nblue, green = loadbalancer.listeners.create_default_listeners(\n    prefix='MyCool',\n    loadbalancer=loadbalancer.loadbalancer,\n    certificate=cert\n)\n\nprint(blue.port) # Should be 443.\nprint(green.port) # Should be 44300.\n```\n\n\n# Release history\n\n#### 4.1.1\nBug fixes.\n\n#### 4.1.0\nAdd ability to specify inbound and outbound traffic.\n\n#### 4.0.1\nBug fixes.\n\n#### 4.0.0\nBug fixes and even prettier and more convenient code.\n\n#### 3.0.0\nBetter blue-green integration. Support for default blue-green listeners.\n\n#### 2.0.1\nReadme update.\n\n#### 2.0.0\nComplete refactor. Instead of creating default listeners add an ability to create custom listeners and\ntarget groups. The loadbalancer now exposes an explicit method to easily create a pair of listeners and\na pair of target groups for easy out-of-the-box blue/green deployment configuration.\n\n#### 1.0.2\nRenames.\n\n#### 1.0.1\nBug fix.\n\n#### 1.0.0\nInitial project.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idenfy/AwsAlb.git", "keywords": "AWS CDK ALB ELB LoadBalancer", "license": "GNU GENERAL PUBLIC LICENSE Version 3", "maintainer": "", "maintainer_email": "", "name": "aws-alb", "package_url": "https://pypi.org/project/aws-alb/", "platform": "", "project_url": "https://pypi.org/project/aws-alb/", "project_urls": {"Homepage": "https://github.com/idenfy/AwsAlb.git"}, "release_url": "https://pypi.org/project/aws-alb/4.1.1/", "requires_dist": ["aws-cdk.core", "aws-cdk.aws-elasticloadbalancingv2", "aws-cdk.aws-certificatemanager"], "requires_python": "", "summary": "AWS CDK package that creates a highly opinionated application load balancer.", "version": "4.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>AWS ALB (Application Load Balancer)</h2>\n<p>An abstract application loadbalancer construct. It creates a loadbalancer and default\nsecurity groups and listeners for the loadbalancer. Also, this loadbalancer is ready\nfor blue-green deployments.</p>\n<h4>Remarks</h4>\n<p>The project is written by <a href=\"https://github.com/laimonassutkus\" rel=\"nofollow\">Laimonas Sutkus</a>\nand is owned by <a href=\"https://github.com/idenfy\" rel=\"nofollow\">iDenfy</a>. This is an open source\nlibrary intended to be used by anyone. <a href=\"https://github.com/idenfy\" rel=\"nofollow\">iDenfy</a> aims\nto share its knowledge and educate market for better and more secure IT infrastructure.</p>\n<h4>Related technology</h4>\n<p>This project utilizes the following technology:</p>\n<ul>\n<li><em>AWS</em> (Amazon Web Services).</li>\n<li><em>AWS CDK</em> (Amazon Web Services Cloud Development Kit).</li>\n<li><em>AWS CloudFormation</em>.</li>\n<li><em>AWS Loadbalancer</em>.</li>\n<li><em>AWS Security groups</em>.</li>\n</ul>\n<h4>Assumptions</h4>\n<p>This library project assumes the following:</p>\n<ul>\n<li>You have knowledge in AWS (Amazon Web Services).</li>\n<li>You have knowledge in AWS CloudFormation and AWS loadbalancing.</li>\n<li>You are managing your infrastructure with AWS CDK.</li>\n<li>You are writing AWS CDK templates with a python language.</li>\n</ul>\n<h4>Install</h4>\n<p>The project is built and uploaded to PyPi. Install it by using pip.</p>\n<pre>pip install aws-alb\n</pre>\n<p>Or directly install it through source.</p>\n<pre>./build.sh -ic\n</pre>\n<h4>Description</h4>\n<p>It is usually hard to create a loadbalancer following best practices and rules. Also, most of the\ntime the deployed loadbalancer will lack some configuration functionality for deployment management.\nWe tackle these problems by providing you a library to easily deploy and maintain a loadbalancer with\nright security groups, right listeners and most importantly right configuration for blue-green deployments.</p>\n<h4>Examples</h4>\n<p>To create an application loadbalancer create an <code>ApplicationLoadbalancer</code>\ninstance in your stack. An example is given below:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aws_cdk</span> <span class=\"kn\">import</span> <span class=\"n\">core</span><span class=\"p\">,</span> <span class=\"n\">aws_ec2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_alb.application_loadbalancer</span> <span class=\"kn\">import</span> <span class=\"n\">ApplicationLoadbalancer</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MainStack</span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Stack</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"p\">:</span> <span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">App</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">scope</span><span class=\"p\">,</span>\n            <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'MyCoolStack'</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Create your own vpc.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">aws_ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"s1\">'MyCoolVpc'</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">public_http_loadbalancer</span> <span class=\"o\">=</span> <span class=\"n\">ApplicationLoadbalancer</span><span class=\"p\">(</span>\n            <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n            <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n            <span class=\"n\">loadbalancer_subnets</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">public_subnets</span><span class=\"p\">,</span>\n            <span class=\"n\">security_groups</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre>\n<p>To create listeners and target groups that are blue-green deployments ready:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aws_alb.params.listener_params</span> <span class=\"kn\">import</span> <span class=\"n\">ListenerParams</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_alb.params.target_group_params</span> <span class=\"kn\">import</span> <span class=\"n\">TargetGroupParams</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_alb.application_loadbalancer</span> <span class=\"kn\">import</span> <span class=\"n\">ApplicationLoadbalancer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_cdk.aws_ec2</span> <span class=\"kn\">import</span> <span class=\"n\">Vpc</span>\n\n<span class=\"n\">loadbalancer</span> <span class=\"o\">=</span> <span class=\"n\">ApplicationLoadbalancer</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">blue</span><span class=\"p\">,</span> <span class=\"n\">green</span> <span class=\"o\">=</span> <span class=\"n\">loadbalancer</span><span class=\"o\">.</span><span class=\"n\">listeners</span><span class=\"o\">.</span><span class=\"n\">create_blue_green</span><span class=\"p\">(</span>\n    <span class=\"n\">blue_listener_params</span><span class=\"o\">=</span><span class=\"n\">ListenerParams</span><span class=\"p\">(</span>\n        <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n        <span class=\"n\">loadbalancer</span><span class=\"o\">=</span><span class=\"n\">loadbalancer</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">80</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">green_listener_params</span><span class=\"o\">=</span><span class=\"n\">ListenerParams</span><span class=\"p\">(</span>\n        <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n        <span class=\"n\">loadbalancer</span><span class=\"o\">=</span><span class=\"n\">loadbalancer</span><span class=\"o\">.</span><span class=\"n\">loadbalancer</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8000</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">blue_target_group_params</span><span class=\"o\">=</span><span class=\"n\">TargetGroupParams</span><span class=\"p\">(</span>\n        <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n        <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">green_target_group_params</span><span class=\"o\">=</span><span class=\"n\">TargetGroupParams</span><span class=\"p\">(</span>\n        <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n        <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># If you need, you can access created target groups and listeners.</span>\n<span class=\"n\">blue_target_group</span><span class=\"p\">,</span> <span class=\"n\">blue_listener</span> <span class=\"o\">=</span> <span class=\"n\">blue</span>\n<span class=\"n\">green_target_group</span><span class=\"p\">,</span> <span class=\"n\">green_listener</span> <span class=\"o\">=</span> <span class=\"n\">green</span>\n\n<span class=\"c1\"># To see to which ports listeners are listening to:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">blue_listener</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">green_listener</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n</pre>\n<p>Usually, it is the best practice to have one loadbalancer with two (http\nand https) listeners and have listener rules to route traffic. To create\ndefault listeners:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aws_alb.application_loadbalancer</span> <span class=\"kn\">import</span> <span class=\"n\">ApplicationLoadbalancer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_cdk.aws_certificatemanager</span> <span class=\"kn\">import</span> <span class=\"n\">CfnCertificate</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aws_cdk.aws_ec2</span> <span class=\"kn\">import</span> <span class=\"n\">Vpc</span>\n\n<span class=\"n\">loadbalancer</span> <span class=\"o\">=</span> <span class=\"n\">ApplicationLoadbalancer</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">cert</span> <span class=\"o\">=</span> <span class=\"n\">CfnCertificate</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">blue</span><span class=\"p\">,</span> <span class=\"n\">green</span> <span class=\"o\">=</span> <span class=\"n\">loadbalancer</span><span class=\"o\">.</span><span class=\"n\">listeners</span><span class=\"o\">.</span><span class=\"n\">create_default_listeners</span><span class=\"p\">(</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'MyCool'</span><span class=\"p\">,</span>\n    <span class=\"n\">loadbalancer</span><span class=\"o\">=</span><span class=\"n\">loadbalancer</span><span class=\"o\">.</span><span class=\"n\">loadbalancer</span><span class=\"p\">,</span>\n    <span class=\"n\">certificate</span><span class=\"o\">=</span><span class=\"n\">cert</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">blue</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span> <span class=\"c1\"># Should be 443.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">green</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span> <span class=\"c1\"># Should be 44300.</span>\n</pre>\n<h1>Release history</h1>\n<h4>4.1.1</h4>\n<p>Bug fixes.</p>\n<h4>4.1.0</h4>\n<p>Add ability to specify inbound and outbound traffic.</p>\n<h4>4.0.1</h4>\n<p>Bug fixes.</p>\n<h4>4.0.0</h4>\n<p>Bug fixes and even prettier and more convenient code.</p>\n<h4>3.0.0</h4>\n<p>Better blue-green integration. Support for default blue-green listeners.</p>\n<h4>2.0.1</h4>\n<p>Readme update.</p>\n<h4>2.0.0</h4>\n<p>Complete refactor. Instead of creating default listeners add an ability to create custom listeners and\ntarget groups. The loadbalancer now exposes an explicit method to easily create a pair of listeners and\na pair of target groups for easy out-of-the-box blue/green deployment configuration.</p>\n<h4>1.0.2</h4>\n<p>Renames.</p>\n<h4>1.0.1</h4>\n<p>Bug fix.</p>\n<h4>1.0.0</h4>\n<p>Initial project.</p>\n\n          </div>"}, "last_serial": 6733688, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e6edd524f7b9d9dda709903599567d08", "sha256": "39f3525a608a86fc34b664827744cb11f7608876ab9d46bed18c7d0b7c6da58e"}, "downloads": -1, "filename": "aws_alb-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6edd524f7b9d9dda709903599567d08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18751, "upload_time": "2020-02-24T09:03:43", "upload_time_iso_8601": "2020-02-24T09:03:43.384500Z", "url": "https://files.pythonhosted.org/packages/ef/52/631b4377b95b5be81fb82514d0d560b741703c52e6ce00fd7d0be83212f6/aws_alb-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aba3ba998fee4f5a272b044b51abf8ce", "sha256": "b7361d47888582ee73ca39d426d891c71408b1411cde58837e2fb398b37aed56"}, "downloads": -1, "filename": "aws_alb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "aba3ba998fee4f5a272b044b51abf8ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5067, "upload_time": "2020-02-24T09:03:45", "upload_time_iso_8601": "2020-02-24T09:03:45.528894Z", "url": "https://files.pythonhosted.org/packages/77/e0/514aae0cff3675c59199dcf697a65834f5dd470de3de4933c81fbb7ce4d6/aws_alb-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6cbf96b99e3c14ff5383c6d45c159a64", "sha256": "95ce6f0e5a9e55748dfe851596205375f32673f05fdafd6e343d125e13cb4f5e"}, "downloads": -1, "filename": "aws_alb-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6cbf96b99e3c14ff5383c6d45c159a64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18761, "upload_time": "2020-02-24T10:46:15", "upload_time_iso_8601": "2020-02-24T10:46:15.985334Z", "url": "https://files.pythonhosted.org/packages/f3/f4/e0742d63a3d0de92c2491ea5d1e6c8a7bad05aba575d406c372383b428cc/aws_alb-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c6edea285358cb6db32c523f0042938", "sha256": "2181bda11d829d9ec39d5b89e5dfab1b7944f6fe8a84978c17f9397a1e8682b3"}, "downloads": -1, "filename": "aws_alb-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3c6edea285358cb6db32c523f0042938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5090, "upload_time": "2020-02-24T10:46:17", "upload_time_iso_8601": "2020-02-24T10:46:17.578454Z", "url": "https://files.pythonhosted.org/packages/cb/93/9a0d902454d3915b8ecc6f6ea4e3b2f73950967867cf580fc8b0f22c8498/aws_alb-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3ba9ba65f20e3763cd870374a43f2378", "sha256": "d9e48eaae0525e46ad055a28a6309ab9019b3e3ca9c3b11d9571d25a44721c20"}, "downloads": -1, "filename": "aws_alb-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3ba9ba65f20e3763cd870374a43f2378", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18765, "upload_time": "2020-02-24T11:03:42", "upload_time_iso_8601": "2020-02-24T11:03:42.121915Z", "url": "https://files.pythonhosted.org/packages/1a/ac/17e1747a3af70552c9ed182e97b30cc65bdb3a76a705a55cfb70ecc13ba5/aws_alb-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37ddfa0503bceb492ed2bceaa9b83f7a", "sha256": "ab920a393faf86747020c54ab7e91b2b0cc22d97bc49d72dbab44c5d13e32a44"}, "downloads": -1, "filename": "aws_alb-1.0.2.tar.gz", "has_sig": false, "md5_digest": "37ddfa0503bceb492ed2bceaa9b83f7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5096, "upload_time": "2020-02-24T11:03:43", "upload_time_iso_8601": "2020-02-24T11:03:43.738780Z", "url": "https://files.pythonhosted.org/packages/be/93/137f11345d991b8a34138939f9474ad1b7ef1b8406bd21353614ea501864/aws_alb-1.0.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "82904078baa32f96745da6cf509a88f7", "sha256": "cdc9a30463a9c8fde3a3b39aaa5e719145cbbd6b5f13a966be1e3a83f05c8e05"}, "downloads": -1, "filename": "aws_alb-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "82904078baa32f96745da6cf509a88f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23353, "upload_time": "2020-02-27T14:58:45", "upload_time_iso_8601": "2020-02-27T14:58:45.020122Z", "url": "https://files.pythonhosted.org/packages/1f/57/3974ec14e9fa5a7cb6621f72a658281823e0bc52f4bb67bb642326a2063d/aws_alb-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aa3b49fd08cd4008d160a66e6f67274", "sha256": "2c58fa669afbb0a4bedb5c3d2591017991ebcf29c88132654f0957447f2b6792"}, "downloads": -1, "filename": "aws_alb-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2aa3b49fd08cd4008d160a66e6f67274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8519, "upload_time": "2020-02-27T14:58:46", "upload_time_iso_8601": "2020-02-27T14:58:46.335068Z", "url": "https://files.pythonhosted.org/packages/1c/33/cd6a85111ff2da2a7073e91a3dab68d3f861b8760f52a8c06918fc5767f1/aws_alb-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "c4de53744904725d0fe5c9fe93034050", "sha256": "8be37112af501d99fb54a567fd0fd626ea15c7670e9e1c4144f6995a45a7c17e"}, "downloads": -1, "filename": "aws_alb-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c4de53744904725d0fe5c9fe93034050", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23474, "upload_time": "2020-02-27T15:04:05", "upload_time_iso_8601": "2020-02-27T15:04:05.283061Z", "url": "https://files.pythonhosted.org/packages/6d/50/ff22eb5a521e8dd9747cc5d495f643c614c0765c54806f58f70a74ec233f/aws_alb-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "387b2f785d5bbf9fda9a767246167c06", "sha256": "0721cb68674fb6f82cd39cdc62bcebedd08c422c951721bb2657e8c52ce9e2db"}, "downloads": -1, "filename": "aws_alb-2.0.1.tar.gz", "has_sig": false, "md5_digest": "387b2f785d5bbf9fda9a767246167c06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8767, "upload_time": "2020-02-27T15:04:06", "upload_time_iso_8601": "2020-02-27T15:04:06.748481Z", "url": "https://files.pythonhosted.org/packages/af/77/447a4ad1567428119ec2f817a9a8a437c88c0bce80a36914a7f1089a2ee6/aws_alb-2.0.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "ce747daa0126de7e077939048fcf6758", "sha256": "c5b737dc40c54d600ab73c0eb0c7a130f1c6279d6f112b808faba207668b3458"}, "downloads": -1, "filename": "aws_alb-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce747daa0126de7e077939048fcf6758", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24020, "upload_time": "2020-03-02T12:36:58", "upload_time_iso_8601": "2020-03-02T12:36:58.557013Z", "url": "https://files.pythonhosted.org/packages/c2/2e/2506ad86e301159ee2fe4b285746c85507bc040145e09d4831f8a40c9774/aws_alb-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e4b3f2911e8a8590e9324c1801d816d", "sha256": "18d9147651f0b30cd57f5f92cc5296c914f81535b4b702ab206f6f1ec33a431a"}, "downloads": -1, "filename": "aws_alb-3.0.0.tar.gz", "has_sig": false, "md5_digest": "4e4b3f2911e8a8590e9324c1801d816d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9690, "upload_time": "2020-03-02T12:37:00", "upload_time_iso_8601": "2020-03-02T12:37:00.010786Z", "url": "https://files.pythonhosted.org/packages/10/bb/42858457957daf844b27faf622fa7467987dfceb3f5cdfec79ffbb311080/aws_alb-3.0.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "adc006a001e3458621107f46970b13cd", "sha256": "94b5782a5c75ef450c39f36933d99da340ba55a89a37afb398544cfc7222b2b9"}, "downloads": -1, "filename": "aws_alb-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "adc006a001e3458621107f46970b13cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24057, "upload_time": "2020-03-02T13:38:19", "upload_time_iso_8601": "2020-03-02T13:38:19.967138Z", "url": "https://files.pythonhosted.org/packages/37/d3/1c8c017f6086d6bd6ebce55f86db12e8a0e724298880bd0e6fd531f17cce/aws_alb-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b229819a949ef0e92459f3171ca8087", "sha256": "0ecdd20a906edd7e04ca3603b48dc217173e5d7385b29f7cc6dbab64ba51fbc9"}, "downloads": -1, "filename": "aws_alb-4.0.0.tar.gz", "has_sig": false, "md5_digest": "0b229819a949ef0e92459f3171ca8087", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9675, "upload_time": "2020-03-02T13:38:21", "upload_time_iso_8601": "2020-03-02T13:38:21.773369Z", "url": "https://files.pythonhosted.org/packages/5f/03/6c95bb6c4c97b0dbe9f1509ad68fbeeb982a78cc29d44a9a0d4f0c3ef8f0/aws_alb-4.0.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "e13d9ee27d6689842c0140cefca7c55d", "sha256": "627ba7e61abb4df15049da36cbe52b02b15ae4c87876a340d7b442d5aeb8e40e"}, "downloads": -1, "filename": "aws_alb-4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e13d9ee27d6689842c0140cefca7c55d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24129, "upload_time": "2020-03-02T13:56:02", "upload_time_iso_8601": "2020-03-02T13:56:02.919154Z", "url": "https://files.pythonhosted.org/packages/68/c9/461c4312c0f367cfa94d7ae1170438ac699e5d9ce56bb340effdc9990995/aws_alb-4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ed011a713678b84e823c479f0aa2e7f", "sha256": "9a0e02517f16f5608a93f6f0b590652e934b4a5741195f5c59153abfba2e8649"}, "downloads": -1, "filename": "aws_alb-4.0.1.tar.gz", "has_sig": false, "md5_digest": "8ed011a713678b84e823c479f0aa2e7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9736, "upload_time": "2020-03-02T13:56:04", "upload_time_iso_8601": "2020-03-02T13:56:04.409602Z", "url": "https://files.pythonhosted.org/packages/ba/01/dd66f91610fbbb8feb0d4fd7ec5b0f669b9971511e3a46c7e8c7d78c4496/aws_alb-4.0.1.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "3af04bce7b4f79d8796393d9871ffaf0", "sha256": "08ceb743c54f3d524419797e1998e6e8f3917f185ea05ddc6c2c91f6c14cdf47"}, "downloads": -1, "filename": "aws_alb-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3af04bce7b4f79d8796393d9871ffaf0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24626, "upload_time": "2020-03-02T14:16:44", "upload_time_iso_8601": "2020-03-02T14:16:44.674924Z", "url": "https://files.pythonhosted.org/packages/91/eb/3f658734e612a86b2847adf250b20086631c5e1955e3a18af04480b17446/aws_alb-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b63ef9bac0bcaa6d027d2522e0a057c", "sha256": "0f3084d7f8e294782a30aac7435d432ec038a470b7e1ecce26f178612d177cc6"}, "downloads": -1, "filename": "aws_alb-4.1.0.tar.gz", "has_sig": false, "md5_digest": "9b63ef9bac0bcaa6d027d2522e0a057c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9952, "upload_time": "2020-03-02T14:16:46", "upload_time_iso_8601": "2020-03-02T14:16:46.372732Z", "url": "https://files.pythonhosted.org/packages/07/81/7a07c27ac5c99e00c07508e9d20b58fc675c92fdc81a451754b1e0a1bbde/aws_alb-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "81a855b04c5fa1a3daa5614e33d788b8", "sha256": "77b4fd789d394ade05788eab227023c1d33c8b23089292fbc1e6acdaad832d25"}, "downloads": -1, "filename": "aws_alb-4.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "81a855b04c5fa1a3daa5614e33d788b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24694, "upload_time": "2020-03-02T14:26:15", "upload_time_iso_8601": "2020-03-02T14:26:15.260608Z", "url": "https://files.pythonhosted.org/packages/8f/8f/45d046e7a735ff287ee61de8195319d1e72e9e407447e5b7f65c2b97bb53/aws_alb-4.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72ba3ba95e6e26b98d68a1a3925c7934", "sha256": "b72768fe83e15f6dd296e4be3f48920a4b51802399e4757d787c8ae151577aa5"}, "downloads": -1, "filename": "aws_alb-4.1.1.tar.gz", "has_sig": false, "md5_digest": "72ba3ba95e6e26b98d68a1a3925c7934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9997, "upload_time": "2020-03-02T14:26:16", "upload_time_iso_8601": "2020-03-02T14:26:16.990654Z", "url": "https://files.pythonhosted.org/packages/3c/cf/d3f08900c5234302cd62de3f61b0677242cbea1072dffb4881cc969c4ff6/aws_alb-4.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81a855b04c5fa1a3daa5614e33d788b8", "sha256": "77b4fd789d394ade05788eab227023c1d33c8b23089292fbc1e6acdaad832d25"}, "downloads": -1, "filename": "aws_alb-4.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "81a855b04c5fa1a3daa5614e33d788b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24694, "upload_time": "2020-03-02T14:26:15", "upload_time_iso_8601": "2020-03-02T14:26:15.260608Z", "url": "https://files.pythonhosted.org/packages/8f/8f/45d046e7a735ff287ee61de8195319d1e72e9e407447e5b7f65c2b97bb53/aws_alb-4.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72ba3ba95e6e26b98d68a1a3925c7934", "sha256": "b72768fe83e15f6dd296e4be3f48920a4b51802399e4757d787c8ae151577aa5"}, "downloads": -1, "filename": "aws_alb-4.1.1.tar.gz", "has_sig": false, "md5_digest": "72ba3ba95e6e26b98d68a1a3925c7934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9997, "upload_time": "2020-03-02T14:26:16", "upload_time_iso_8601": "2020-03-02T14:26:16.990654Z", "url": "https://files.pythonhosted.org/packages/3c/cf/d3f08900c5234302cd62de3f61b0677242cbea1072dffb4881cc969c4ff6/aws_alb-4.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:58 2020"}