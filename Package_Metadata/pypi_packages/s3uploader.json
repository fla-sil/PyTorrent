{"info": {"author": "Michael Anckaert", "author_email": "michael.anckaert@sinax.be", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "S3Uploader\n==========\n\nA simple application to upload files to an Amazon S3 bucket. Behind the scenes this script uses the awesome Boto3\nlibrary to access the Amazon Web Services.\n\nQuickstart\n----------\nThe application uses the AWS credentials file located in ~/.aws/credentials\n\n    usage: s3uploader.py [-h] [--verbose] [--store-paths] bucket file [file ...]\n\n    Upload files to an Amazon S3 bucket\n\n    positional arguments:\n      bucket         Name of the S3 bucket to use\n      file           File to upload to the S3 bucket\n\n    optional arguments:\n      -h, --help     show this help message and exit\n      --verbose      Give verbose output while uploading files\n      --store-paths  Store the file path in the S3 object name\n\n\nOptions\n-------\n\n--store-paths\n    If this flag is set the S3 object will stored with the path you specify, otherwise the filenamewill be used as the\n    object name. Using this approach it is possible to simulate a directory structure on S3.\n\n--verbose\n    Give verbose output while uploading files to S3.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/michaelanckaert/s3uploader/", "keywords": "aws s3 uploader amazon", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "s3uploader", "package_url": "https://pypi.org/project/s3uploader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/s3uploader/", "project_urls": {"Homepage": "https://bitbucket.org/michaelanckaert/s3uploader/"}, "release_url": "https://pypi.org/project/s3uploader/0.1/", "requires_dist": null, "requires_python": null, "summary": "Upload files to an Amazon S3 bucket", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple application to upload files to an Amazon S3 bucket. Behind the scenes this script uses the awesome Boto3\nlibrary to access the Amazon Web Services.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>The application uses the AWS credentials file located in ~/.aws/credentials</p>\n<blockquote>\n<p>usage: s3uploader.py [-h] [\u2013verbose] [\u2013store-paths] bucket file [file \u2026]</p>\n<p>Upload files to an Amazon S3 bucket</p>\n<dl>\n<dt>positional arguments:</dt>\n<dd>bucket         Name of the S3 bucket to use\nfile           File to upload to the S3 bucket</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--verbose</span></kbd></td>\n<td>Give verbose output while uploading files</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--store-paths</span></kbd></td>\n<td>Store the file path in the S3 object name</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">--store-paths</span></kbd></td>\n<td>If this flag is set the S3 object will stored with the path you specify, otherwise the filenamewill be used as the\nobject name. Using this approach it is possible to simulate a directory structure on S3.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--verbose</span></kbd></td>\n<td>Give verbose output while uploading files to S3.</td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 2836843, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "371c4b5b9ca59330c4a667a71e74776a", "sha256": "ba0b0e94649fbd1628c5d99aa2b54e320793da34cdcf4d823aefc92e61fd276c"}, "downloads": -1, "filename": "s3uploader-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "371c4b5b9ca59330c4a667a71e74776a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4803, "upload_time": "2017-04-28T11:03:31", "upload_time_iso_8601": "2017-04-28T11:03:31.228995Z", "url": "https://files.pythonhosted.org/packages/09/d3/88f865dac152b7fd5f5f5a4c70ef71532a238168dbb365bb46d1479eab44/s3uploader-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "371c4b5b9ca59330c4a667a71e74776a", "sha256": "ba0b0e94649fbd1628c5d99aa2b54e320793da34cdcf4d823aefc92e61fd276c"}, "downloads": -1, "filename": "s3uploader-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "371c4b5b9ca59330c4a667a71e74776a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4803, "upload_time": "2017-04-28T11:03:31", "upload_time_iso_8601": "2017-04-28T11:03:31.228995Z", "url": "https://files.pythonhosted.org/packages/09/d3/88f865dac152b7fd5f5f5a4c70ef71532a238168dbb365bb46d1479eab44/s3uploader-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:33 2020"}