{"info": {"author": "Anthony Morast", "author_email": "anthony.a.morast@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# AllyInvest.py\nA blackbox Ally Invest/TradeKing API interface for application developers.\n\nAllyAPI.py\nA Python3 class that allows access to all of the functionality in the\nAlly/TradeKing API.\n\nThis package attempts to stay on top of changes to the API and allow an\neasy to user interface with the Ally Invest API. The API does no formatting\nfor the user. A response format of 'xml' or 'json' can be specified and\nthe API responses will be returned as the raw XML or JSON, respectively.\n\nThis API was built with the developer in mind and should allow a developer\nto build applications around the Ally Invest API without having to deal with\naccessing and managing the requests and responses.\n\n# Documentation\n\nDoxygen was used to generate documentation for this interface. The generated\ndocumentation can be found [here](http://www.anthonymorast.com/allyinvestapi/).\n\nPerhaps the most useful documentation is of the [AllyAPI class](http://www.anthonymorast.com/allyinvestapi/classally_1_1_ally_a_p_i.html)\nas this documentation shows which functionality is available and describes how to\nuse each function.\n\n# Usage\n\nDetails coming soon. Some basic usage can be found in example.py until then.\n\n# TODO\n+ Documentation\n  + URLs.py and examples.py\n+ Implement missing functionality\n  + Right now, the API implements many of the calls listed on [Ally's documentation page](https://www.ally.com/api/invest/documentation/)\n    but there are many not yet implemented (due to time constraints). Below is a list.\n  + Adding the functionality is pretty straight forward, some more details are below.\n+ Test\n  + Everything\n  + Add unit tests\n\n## Adding New API Functionality\n\nTo add a new API function the API URL has to be added to the URLs class in URLs.py.\nNote that the request endpoint is already stored in the class e.g.\n\n> https://api.tradeking.com/v1/\n\nTherefore, only anything after */v1/* needs to be added as a URL. A method to\nobtain the full URL must be implemented as well, examples abound in the URLs class.\n\nAfter the URL is added, implementing the POST or GET is very simple. There are two\nprivate methods in the *AllyAPI* class that allow easily retrieving data provided\nonly the URL. these are *__get_data(self, url)* and *__to_format(self, response)*.\n\nTo add the new functionality, just create a method call in the *AllyAPI* class that\nuses your new URL and returns/calls the *__get_date(...)* method. This will return the\nraw XML or JSON response from the user depending on the format set up when creating\nthe *AllyAPI* class instance.\n\n## Missing Functionality\n+ ORDER/TRADE\n    + GET accounts/:id/orders\n    + POST accounts/:id/orders\n    + POST accounts/:id/orders/preview\n+ MARKET\n    + GET market/options/search\n    + GET market/options/strikes\n    + GET market/options/expirations\n    + GET market/timesales\n+ WATCHLIST\n    + GET watchlists\n    + POST watchlists\n    + GET watchlists/:id\n    + DELETE watchlists/:id\n    + POST watchlists/:id/symbols\n    + DELETE watchlists/:id/symbols\n+ STREAMING OPERATIONS\n    + MARKET\n        + GET market/quotes", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anthonymorast/AllyInvest.py", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "AllyInvestPy", "package_url": "https://pypi.org/project/AllyInvestPy/", "platform": "", "project_url": "https://pypi.org/project/AllyInvestPy/", "project_urls": {"Homepage": "https://github.com/anthonymorast/AllyInvest.py"}, "release_url": "https://pypi.org/project/AllyInvestPy/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "A blackbox Ally Invest/TradeKing API interface for application developers.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AllyInvest.py</h1>\n<p>A blackbox Ally Invest/TradeKing API interface for application developers.</p>\n<p>AllyAPI.py\nA Python3 class that allows access to all of the functionality in the\nAlly/TradeKing API.</p>\n<p>This package attempts to stay on top of changes to the API and allow an\neasy to user interface with the Ally Invest API. The API does no formatting\nfor the user. A response format of 'xml' or 'json' can be specified and\nthe API responses will be returned as the raw XML or JSON, respectively.</p>\n<p>This API was built with the developer in mind and should allow a developer\nto build applications around the Ally Invest API without having to deal with\naccessing and managing the requests and responses.</p>\n<h1>Documentation</h1>\n<p>Doxygen was used to generate documentation for this interface. The generated\ndocumentation can be found <a href=\"http://www.anthonymorast.com/allyinvestapi/\" rel=\"nofollow\">here</a>.</p>\n<p>Perhaps the most useful documentation is of the <a href=\"http://www.anthonymorast.com/allyinvestapi/classally_1_1_ally_a_p_i.html\" rel=\"nofollow\">AllyAPI class</a>\nas this documentation shows which functionality is available and describes how to\nuse each function.</p>\n<h1>Usage</h1>\n<p>Details coming soon. Some basic usage can be found in example.py until then.</p>\n<h1>TODO</h1>\n<ul>\n<li>Documentation\n<ul>\n<li>URLs.py and examples.py</li>\n</ul>\n</li>\n<li>Implement missing functionality\n<ul>\n<li>Right now, the API implements many of the calls listed on <a href=\"https://www.ally.com/api/invest/documentation/\" rel=\"nofollow\">Ally's documentation page</a>\nbut there are many not yet implemented (due to time constraints). Below is a list.</li>\n<li>Adding the functionality is pretty straight forward, some more details are below.</li>\n</ul>\n</li>\n<li>Test\n<ul>\n<li>Everything</li>\n<li>Add unit tests</li>\n</ul>\n</li>\n</ul>\n<h2>Adding New API Functionality</h2>\n<p>To add a new API function the API URL has to be added to the URLs class in URLs.py.\nNote that the request endpoint is already stored in the class e.g.</p>\n<blockquote>\n<p><a href=\"https://api.tradeking.com/v1/\" rel=\"nofollow\">https://api.tradeking.com/v1/</a></p>\n</blockquote>\n<p>Therefore, only anything after <em>/v1/</em> needs to be added as a URL. A method to\nobtain the full URL must be implemented as well, examples abound in the URLs class.</p>\n<p>After the URL is added, implementing the POST or GET is very simple. There are two\nprivate methods in the <em>AllyAPI</em> class that allow easily retrieving data provided\nonly the URL. these are <em>__get_data(self, url)</em> and <em>__to_format(self, response)</em>.</p>\n<p>To add the new functionality, just create a method call in the <em>AllyAPI</em> class that\nuses your new URL and returns/calls the <em>__get_date(...)</em> method. This will return the\nraw XML or JSON response from the user depending on the format set up when creating\nthe <em>AllyAPI</em> class instance.</p>\n<h2>Missing Functionality</h2>\n<ul>\n<li>ORDER/TRADE\n<ul>\n<li>GET accounts/:id/orders</li>\n<li>POST accounts/:id/orders</li>\n<li>POST accounts/:id/orders/preview</li>\n</ul>\n</li>\n<li>MARKET\n<ul>\n<li>GET market/options/search</li>\n<li>GET market/options/strikes</li>\n<li>GET market/options/expirations</li>\n<li>GET market/timesales</li>\n</ul>\n</li>\n<li>WATCHLIST\n<ul>\n<li>GET watchlists</li>\n<li>POST watchlists</li>\n<li>GET watchlists/:id</li>\n<li>DELETE watchlists/:id</li>\n<li>POST watchlists/:id/symbols</li>\n<li>DELETE watchlists/:id/symbols</li>\n</ul>\n</li>\n<li>STREAMING OPERATIONS\n<ul>\n<li>MARKET\n<ul>\n<li>GET market/quotes</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6893605, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "cb81e6c43a0b910cf757093644b12bf4", "sha256": "fe2f5c092d276b68c0fbe665c8a36be080a7475eb54e5140bc8ebfa541f6f4b9"}, "downloads": -1, "filename": "AllyInvestPy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cb81e6c43a0b910cf757093644b12bf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9059, "upload_time": "2020-03-27T02:07:35", "upload_time_iso_8601": "2020-03-27T02:07:35.166762Z", "url": "https://files.pythonhosted.org/packages/7d/65/c4a68be9380e8ff2665d12b83ec6a1a0fde8bab6ee6513d597995fe984b5/AllyInvestPy-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5cdb0629605e1655bd3796dc6b6152a7", "sha256": "20c6ea6e805661775674679d636548114437227e5d735fe7d2e05e0a6a81334e"}, "downloads": -1, "filename": "AllyInvestPy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5cdb0629605e1655bd3796dc6b6152a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9127, "upload_time": "2020-03-27T04:24:53", "upload_time_iso_8601": "2020-03-27T04:24:53.401069Z", "url": "https://files.pythonhosted.org/packages/dc/85/f24af647dd852e1e9aaee7e5aa6355630e454a29b6bd44d44e7f714321b7/AllyInvestPy-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c54e4e5945a5fa5b8561e4128d2025a2", "sha256": "add23380f832623c4108ca5f17d4a9d516ed20d7a7ae5424eb22fe014b8949c9"}, "downloads": -1, "filename": "AllyInvestPy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c54e4e5945a5fa5b8561e4128d2025a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9120, "upload_time": "2020-03-27T04:41:43", "upload_time_iso_8601": "2020-03-27T04:41:43.296515Z", "url": "https://files.pythonhosted.org/packages/b6/fa/84e9d18a25d47226346614528fc97260bf53f2a9f9097366bd5a15383c48/AllyInvestPy-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c54e4e5945a5fa5b8561e4128d2025a2", "sha256": "add23380f832623c4108ca5f17d4a9d516ed20d7a7ae5424eb22fe014b8949c9"}, "downloads": -1, "filename": "AllyInvestPy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c54e4e5945a5fa5b8561e4128d2025a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9120, "upload_time": "2020-03-27T04:41:43", "upload_time_iso_8601": "2020-03-27T04:41:43.296515Z", "url": "https://files.pythonhosted.org/packages/b6/fa/84e9d18a25d47226346614528fc97260bf53f2a9f9097366bd5a15383c48/AllyInvestPy-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:23 2020"}