{"info": {"author": "Hactar", "author_email": "systems@hactar.is", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "## Consoler\n\nA terminal printer that's totally tailored to how I like terminal printouts. If this happens to also be how you like terminal printouts, this package may well be for you too.\n\n### Installing\n\n`poetry add consoler` or `pip install consoler`\n\n### Usage\n\n    from consoler import console\n    console.log(\"This is a log level print out\")\n    console.info(\"This is an info level print out\")\n    console.warn(\"This is a warning level print out\")\n\n    try:\n        1 / 0\n    except Exception as e:\n        console.error(\"Oh no!\", e)\n\n\n### Settings\n\nUsing with Django you set a few things in the Django settings to affect behaviour of conoler.\n\n    DEBUG = True\n\nIf `DEBUG` is `True` consoler will print to stdout, otherwise it will send the output to loguru.\n\n    CONSOLE_LOG_LEVEL = 'LOG'\n\nYou can set a log level for which message you want to reach the screen. Available levels are...\n\n    LOG\n    INFO\n    SUCCESS\n    TEMPLATE\n    WARN\n    ERROR\n\n    CONSOLE_PATH_PREFIX = ''\n\nWhen developing in a docker container or VM, the start of consoler's file paths might not quite match your local filesystem. Set a prefix here to prepend to the output's path string. This is super useful if you use https://github.com/dandavison/iterm2-dwim to make file paths clickable in iTerm.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hactar-is/consoler", "keywords": "console,terminal,logging", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "consoler", "package_url": "https://pypi.org/project/consoler/", "platform": "", "project_url": "https://pypi.org/project/consoler/", "project_urls": {"Homepage": "https://github.com/hactar-is/consoler", "Repository": "https://github.com/hactar-is/consoler"}, "release_url": "https://pypi.org/project/consoler/0.1.2/", "requires_dist": ["arrow (>=0.15.5,<0.16.0)", "loguru (>=0.4.1,<0.5.0)"], "requires_python": ">=3.6,<4.0", "summary": "", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Consoler</h2>\n<p>A terminal printer that's totally tailored to how I like terminal printouts. If this happens to also be how you like terminal printouts, this package may well be for you too.</p>\n<h3>Installing</h3>\n<p><code>poetry add consoler</code> or <code>pip install consoler</code></p>\n<h3>Usage</h3>\n<pre><code>from consoler import console\nconsole.log(\"This is a log level print out\")\nconsole.info(\"This is an info level print out\")\nconsole.warn(\"This is a warning level print out\")\n\ntry:\n    1 / 0\nexcept Exception as e:\n    console.error(\"Oh no!\", e)\n</code></pre>\n<h3>Settings</h3>\n<p>Using with Django you set a few things in the Django settings to affect behaviour of conoler.</p>\n<pre><code>DEBUG = True\n</code></pre>\n<p>If <code>DEBUG</code> is <code>True</code> consoler will print to stdout, otherwise it will send the output to loguru.</p>\n<pre><code>CONSOLE_LOG_LEVEL = 'LOG'\n</code></pre>\n<p>You can set a log level for which message you want to reach the screen. Available levels are...</p>\n<pre><code>LOG\nINFO\nSUCCESS\nTEMPLATE\nWARN\nERROR\n\nCONSOLE_PATH_PREFIX = ''\n</code></pre>\n<p>When developing in a docker container or VM, the start of consoler's file paths might not quite match your local filesystem. Set a prefix here to prepend to the output's path string. This is super useful if you use <a href=\"https://github.com/dandavison/iterm2-dwim\" rel=\"nofollow\">https://github.com/dandavison/iterm2-dwim</a> to make file paths clickable in iTerm.</p>\n\n          </div>"}, "last_serial": 6748681, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "440a2c345a3bef9ea7849c6571119432", "sha256": "b8975dcb33939a4b43142b9b46e508dc6650e3223dd9046cd68df1cbae6d365a"}, "downloads": -1, "filename": "consoler-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "440a2c345a3bef9ea7849c6571119432", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6187, "upload_time": "2020-03-04T14:49:20", "upload_time_iso_8601": "2020-03-04T14:49:20.244861Z", "url": "https://files.pythonhosted.org/packages/bd/88/d49362b26e376d6095bafe53118168664d19c80cb463e5e9f285f9d7816d/consoler-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3e8f9d98ab4c87b9e49bcc2ee51a2e0", "sha256": "43d1254a955aa5e02f7bfb2f661c935eec91895f7a3b4945dc54a9f073551106"}, "downloads": -1, "filename": "consoler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a3e8f9d98ab4c87b9e49bcc2ee51a2e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4936, "upload_time": "2020-03-04T14:49:22", "upload_time_iso_8601": "2020-03-04T14:49:22.514933Z", "url": "https://files.pythonhosted.org/packages/51/3c/06160fe2a5efac802abb39251cb91ca248740e2364287ff6d610aa79a02d/consoler-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "81af693055500814a47753e6606ff686", "sha256": "a087a1ca5f9bb66313af32689b407e58693c1083ad900437598b9db691347184"}, "downloads": -1, "filename": "consoler-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81af693055500814a47753e6606ff686", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6651, "upload_time": "2020-03-04T15:49:55", "upload_time_iso_8601": "2020-03-04T15:49:55.338777Z", "url": "https://files.pythonhosted.org/packages/19/60/13b1838294790656e46cbc6e6c669b5e5eccdb5ac91cab25fae42bba344f/consoler-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "031dd047563f2fb6c89c8039cec09f6b", "sha256": "9113ad1fe28cb8c7ca34fa07f5b28dcd1768eb2bd754d8023b50f2e3d058404b"}, "downloads": -1, "filename": "consoler-0.1.2.tar.gz", "has_sig": false, "md5_digest": "031dd047563f2fb6c89c8039cec09f6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5384, "upload_time": "2020-03-04T15:49:57", "upload_time_iso_8601": "2020-03-04T15:49:57.403019Z", "url": "https://files.pythonhosted.org/packages/d2/7e/d6e3976993b2de843c3518e90314e0a5451f97b745b01fbe23593bd3537d/consoler-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81af693055500814a47753e6606ff686", "sha256": "a087a1ca5f9bb66313af32689b407e58693c1083ad900437598b9db691347184"}, "downloads": -1, "filename": "consoler-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81af693055500814a47753e6606ff686", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6651, "upload_time": "2020-03-04T15:49:55", "upload_time_iso_8601": "2020-03-04T15:49:55.338777Z", "url": "https://files.pythonhosted.org/packages/19/60/13b1838294790656e46cbc6e6c669b5e5eccdb5ac91cab25fae42bba344f/consoler-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "031dd047563f2fb6c89c8039cec09f6b", "sha256": "9113ad1fe28cb8c7ca34fa07f5b28dcd1768eb2bd754d8023b50f2e3d058404b"}, "downloads": -1, "filename": "consoler-0.1.2.tar.gz", "has_sig": false, "md5_digest": "031dd047563f2fb6c89c8039cec09f6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5384, "upload_time": "2020-03-04T15:49:57", "upload_time_iso_8601": "2020-03-04T15:49:57.403019Z", "url": "https://files.pythonhosted.org/packages/d2/7e/d6e3976993b2de843c3518e90314e0a5451f97b745b01fbe23593bd3537d/consoler-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:40 2020"}