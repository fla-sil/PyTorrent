{"info": {"author": "Yogesh Kushwaha", "author_email": "info@tkopen.com", "bugtrack_url": null, "classifiers": [], "description": "**Description**\n\n    https://fidelimax.com.br/ integration with python. Python Fidelimax Integration\n\n\n**Installation**\n\n    pip install pyfidelimax\n\n**Usage**\n\n    import pyfidelimax\n\n**GetToken**\n\nRecupera o token para o acesso para as outras funcionalidades da API, esse token tem\nvalidade de 24 horas, \u00e9 necess\u00e1rio incluir na header da requisi\u00e7\u00e3o um atributo com o nome\n\u201cAuthToken\u201d e o valor de retorno desse enpoint.\nRecebe como par\u00e2metros obrigat\u00f3rios o Login e Senha cadastrados na plataforma do\nprograma de fidelidade em: Configura\u00e7\u00f5es Sistema > Configura\u00e7\u00e3o API\n\n    pyfidelimax.GetToken('login', 'password')\n\n**CadastrarConsumidor**\n\nCadastrar novos consumidores ao programa de fidelidade.\n\n    data = {}\n    pyfidelimax.CadastrarConsumidor('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma\nAPI externa\n - nome : Nome do Consumidor \n - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para\nrealizar a atualiza\u00e7\u00e3o\n - sexo: Sexo do Consumidor, Masculino e Feminino\n - nascimento: Data de nascimento do Consumidor, formato dd/mm/yyyy\n - email: E-mail do consumidor string\n - telefone: Telefone do Consumidor, formato (DDD)99999-9999\n - cartao: Cart\u00e3o que pode ser vinculado ao consumidor\n - saldo: Saldo em pontos inicial que o consumidor pode iniciar\n\n\n**AtualizarConsumidor**\n\nAtualiza as informa\u00e7\u00f5es de um consumidor cadastrado no programa de fidelidade\n\n    data = {}\n    pyfidelimax.AtualizarConsumidor('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma\nAPI externa\n - nome : Nome do Consumidor \n - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para\nrealizar a atualiza\u00e7\u00e3o\n - sexo: Sexo do Consumidor, Masculino e Feminino\n - nascimento: Data de nascimento do Consumidor, formato dd/mm/yyyy\n - email: E-mail do consumidor string\n - telefone: Telefone do Consumidor, formato (DDD)99999-9999\n - cartao: Cart\u00e3o que pode ser vinculado ao consumidor\n \n **ConsultaConsumidor**\n \nConsulta as informa\u00e7\u00f5es do consumidor referente a pontua\u00e7\u00e3o do programa de fidelidade,\ncomo seu saldo em pontos atual, os pontos que ir\u00e3o expirar at\u00e9 o fim do m\u00eas e uma lista de\npr\u00eamios que ele pode resgatar com sua pontua\u00e7\u00e3o atual.\nRecebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor.\n\n    data = {}\n    pyfidelimax.ConsultaConsumidor('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para\nrealizar a atualiza\u00e7\u00e3o\n\n\n **RetornaDadosCliente**\n \nConsulta dados pessoais do consumidor.\nRecebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor.\n\n    data = {}\n    pyfidelimax.RetornaDadosCliente('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para\nrealizar a atualiza\u00e7\u00e3o\n\n\n\n **ResgataPremio**\n \nRealiza o resgate de um pr\u00eamio para um consumidor, debitando a pontua\u00e7\u00e3o correspondente\ndo seu saldo atual.\nRecebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor. E o Identificador do\npr\u00eamio que \u00e9 cadastrado na plataforma, quando um pr\u00eamio \u00e9 cadastrado.\n\n    data = {}\n    pyfidelimax.ResgataPremio('login', 'password', data=data)\n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para\nrealizar a atualiza\u00e7\u00e3o\n\n\n\n **PontuaConsumidor**\n \n Realiza o cr\u00e9dito de pontos para um consumidor\nRecebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor. E o pre\u00e7o em reais\nque ser\u00e1 convertido para a regra de pontua\u00e7\u00e3o do program\n \n    data = {}\n    pyfidelimax.PontuaConsumidor('login', 'password', data=data)\n    \n**Note**:\n    data dict can have following keys:\n\n - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma\nAPI externa\n - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para\nrealizar a atualiza\u00e7\u00e3o\n\n **ListaProdutos**\n \n Realiza o cr\u00e9dito de pontos para um consumidor\nRecebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor. E o pre\u00e7o em reais\nque ser\u00e1 convertido para a regra de pontua\u00e7\u00e3o do program\n \n \n    pyfidelimax.ListaProdutos('login', 'password')\n\n\n** API Documentation ** \n\nfor more information on API. eg: variable allowed to pass in data dictionary\nand datatype please visit the link https://api.fidelimax.com.br/Documentacao/Fidelimax-API.pdf\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/yk2kus/pyfidelimax", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyfidelimax", "package_url": "https://pypi.org/project/pyfidelimax/", "platform": "", "project_url": "https://pypi.org/project/pyfidelimax/", "project_urls": {"Homepage": "https://gitlab.com/yk2kus/pyfidelimax"}, "release_url": "https://pypi.org/project/pyfidelimax/1.0.5/", "requires_dist": null, "requires_python": "", "summary": "fidelimax.com.br integration", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            **Description**<br><br>    https://fidelimax.com.br/ integration with python. Python Fidelimax Integration<br><br><br>**Installation**<br><br>    pip install pyfidelimax<br><br>**Usage**<br><br>    import pyfidelimax<br><br>**GetToken**<br><br>Recupera o token para o acesso para as outras funcionalidades da API, esse token tem<br>validade de 24 horas, \u00e9 necess\u00e1rio incluir na header da requisi\u00e7\u00e3o um atributo com o nome<br>\u201cAuthToken\u201d e o valor de retorno desse enpoint.<br>Recebe como par\u00e2metros obrigat\u00f3rios o Login e Senha cadastrados na plataforma do<br>programa de fidelidade em: Configura\u00e7\u00f5es Sistema &gt; Configura\u00e7\u00e3o API<br><br>    pyfidelimax.GetToken('login', 'password')<br><br>**CadastrarConsumidor**<br><br>Cadastrar novos consumidores ao programa de fidelidade.<br><br>    data = {}<br>    pyfidelimax.CadastrarConsumidor('login', 'password', data=data)<br>**Note**:<br>    data dict can have following keys:<br><br> - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma<br>API externa<br> - nome : Nome do Consumidor <br> - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para<br>realizar a atualiza\u00e7\u00e3o<br> - sexo: Sexo do Consumidor, Masculino e Feminino<br> - nascimento: Data de nascimento do Consumidor, formato dd/mm/yyyy<br> - email: E-mail do consumidor string<br> - telefone: Telefone do Consumidor, formato (DDD)99999-9999<br> - cartao: Cart\u00e3o que pode ser vinculado ao consumidor<br> - saldo: Saldo em pontos inicial que o consumidor pode iniciar<br><br><br>**AtualizarConsumidor**<br><br>Atualiza as informa\u00e7\u00f5es de um consumidor cadastrado no programa de fidelidade<br><br>    data = {}<br>    pyfidelimax.AtualizarConsumidor('login', 'password', data=data)<br>**Note**:<br>    data dict can have following keys:<br><br> - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma<br>API externa<br> - nome : Nome do Consumidor <br> - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para<br>realizar a atualiza\u00e7\u00e3o<br> - sexo: Sexo do Consumidor, Masculino e Feminino<br> - nascimento: Data de nascimento do Consumidor, formato dd/mm/yyyy<br> - email: E-mail do consumidor string<br> - telefone: Telefone do Consumidor, formato (DDD)99999-9999<br> - cartao: Cart\u00e3o que pode ser vinculado ao consumidor<br> <br> **ConsultaConsumidor**<br> <br>Consulta as informa\u00e7\u00f5es do consumidor referente a pontua\u00e7\u00e3o do programa de fidelidade,<br>como seu saldo em pontos atual, os pontos que ir\u00e3o expirar at\u00e9 o fim do m\u00eas e uma lista de<br>pr\u00eamios que ele pode resgatar com sua pontua\u00e7\u00e3o atual.<br>Recebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor.<br><br>    data = {}<br>    pyfidelimax.ConsultaConsumidor('login', 'password', data=data)<br>**Note**:<br>    data dict can have following keys:<br><br> - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma<br>API externa<br> - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para<br>realizar a atualiza\u00e7\u00e3o<br><br><br> **RetornaDadosCliente**<br> <br>Consulta dados pessoais do consumidor.<br>Recebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor.<br><br>    data = {}<br>    pyfidelimax.RetornaDadosCliente('login', 'password', data=data)<br>**Note**:<br>    data dict can have following keys:<br><br> - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma<br>API externa<br> - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para<br>realizar a atualiza\u00e7\u00e3o<br><br><br><br> **ResgataPremio**<br> <br>Realiza o resgate de um pr\u00eamio para um consumidor, debitando a pontua\u00e7\u00e3o correspondente<br>do seu saldo atual.<br>Recebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor. E o Identificador do<br>pr\u00eamio que \u00e9 cadastrado na plataforma, quando um pr\u00eamio \u00e9 cadastrado.<br><br>    data = {}<br>    pyfidelimax.ResgataPremio('login', 'password', data=data)<br>**Note**:<br>    data dict can have following keys:<br><br> - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma<br>API externa<br> - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para<br>realizar a atualiza\u00e7\u00e3o<br><br><br><br> **PontuaConsumidor**<br> <br> Realiza o cr\u00e9dito de pontos para um consumidor<br>Recebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor. E o pre\u00e7o em reais<br>que ser\u00e1 convertido para a regra de pontua\u00e7\u00e3o do program<br> <br>    data = {}<br>    pyfidelimax.PontuaConsumidor('login', 'password', data=data)<br>    <br>**Note**:<br>    data dict can have following keys:<br><br> - token_externo : Token do Consumidor enviado por autentica\u00e7\u00e3o de uma<br>API externa<br> - cpf: CPF do Consumidor, o CPF \u00e9 usado como chave para<br>realizar a atualiza\u00e7\u00e3o<br><br> **ListaProdutos**<br> <br> Realiza o cr\u00e9dito de pontos para um consumidor<br>Recebe como par\u00e2metros obrigat\u00f3rios o CPF ou o Token do consumidor. E o pre\u00e7o em reais<br>que ser\u00e1 convertido para a regra de pontua\u00e7\u00e3o do program<br> <br> <br>    pyfidelimax.ListaProdutos('login', 'password')<br><br><br>** API Documentation ** <br><br>for more information on API. eg: variable allowed to pass in data dictionary<br>and datatype please visit the link https://api.fidelimax.com.br/Documentacao/Fidelimax-API.pdf<br>\n          </div>"}, "last_serial": 4931142, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6d59b17e7d9426b246c367e45bc9027a", "sha256": "2a93186a1c3b40974f82bf75d432ecfd4e2ea9edf9e8722de6cdb8af239bb25b"}, "downloads": -1, "filename": "pyfidelimax-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6d59b17e7d9426b246c367e45bc9027a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2751, "upload_time": "2019-03-01T02:07:53", "upload_time_iso_8601": "2019-03-01T02:07:53.821097Z", "url": "https://files.pythonhosted.org/packages/46/67/95eb47509db821ec5288e1ebf689d417003bdbdd1da588b26eeb06e04833/pyfidelimax-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "974fbe922c4b5aaa002281da89db3fc1", "sha256": "464a3542ac53eea4661a0fff40ea3179613ad1bb0659520ea63e053e1e75bf02"}, "downloads": -1, "filename": "pyfidelimax-1.0.1.tar.gz", "has_sig": false, "md5_digest": "974fbe922c4b5aaa002281da89db3fc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3226, "upload_time": "2019-03-01T12:11:54", "upload_time_iso_8601": "2019-03-01T12:11:54.503682Z", "url": "https://files.pythonhosted.org/packages/43/b2/618de62c037c2374899d3ea361b72c68f5d0bca25c377fb06aace737d529/pyfidelimax-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "de74ccceba97be3cb3cc8d3f89cd1e99", "sha256": "5f240acffa166a5ff68ed1370655d630cc3324c08446cf6ca6cbfb44bbdf15eb"}, "downloads": -1, "filename": "pyfidelimax-1.0.2.tar.gz", "has_sig": false, "md5_digest": "de74ccceba97be3cb3cc8d3f89cd1e99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3172, "upload_time": "2019-03-07T12:02:27", "upload_time_iso_8601": "2019-03-07T12:02:27.723461Z", "url": "https://files.pythonhosted.org/packages/d7/c6/7231d4efc097d9e01f886eb540ec52518bdb5b06cce5690e1ca7ff456cd5/pyfidelimax-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "41b9e5c7556fa6d7f68f974de45c64f2", "sha256": "7031d30ae82e1ac64e9487b17c3519541cbb36547bb978792068cad907b3a8db"}, "downloads": -1, "filename": "pyfidelimax-1.0.3.tar.gz", "has_sig": false, "md5_digest": "41b9e5c7556fa6d7f68f974de45c64f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3191, "upload_time": "2019-03-07T14:18:12", "upload_time_iso_8601": "2019-03-07T14:18:12.711167Z", "url": "https://files.pythonhosted.org/packages/a4/00/205585ea2b9f7d923d54f9de371857f1ef10cf2d9849e5446caba5a39eed/pyfidelimax-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "84e53851a6cd6054503d75ef8992c633", "sha256": "31acf3b2ff39ae8f48ec7c8afa23cf86953d7709f5366cd15f371307bcd66224"}, "downloads": -1, "filename": "pyfidelimax-1.0.4.tar.gz", "has_sig": false, "md5_digest": "84e53851a6cd6054503d75ef8992c633", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3195, "upload_time": "2019-03-07T14:20:53", "upload_time_iso_8601": "2019-03-07T14:20:53.375341Z", "url": "https://files.pythonhosted.org/packages/93/24/e8d46214174c30c045375f11b06133690eb6f44b4c6c58cdd767a0d8a12d/pyfidelimax-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "016a8bee27f3424246dd05a112ce77d1", "sha256": "9caf510f57826a7abbe04d6875d25a1fe6f84aead013e01d7e463f718a7bf697"}, "downloads": -1, "filename": "pyfidelimax-1.0.5.tar.gz", "has_sig": false, "md5_digest": "016a8bee27f3424246dd05a112ce77d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3198, "upload_time": "2019-03-12T17:23:28", "upload_time_iso_8601": "2019-03-12T17:23:28.906396Z", "url": "https://files.pythonhosted.org/packages/ea/be/8044b8003311b4a5a9cf87be1aab7b4d4ed5279b9fa2e3b07b23005f3f0c/pyfidelimax-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "016a8bee27f3424246dd05a112ce77d1", "sha256": "9caf510f57826a7abbe04d6875d25a1fe6f84aead013e01d7e463f718a7bf697"}, "downloads": -1, "filename": "pyfidelimax-1.0.5.tar.gz", "has_sig": false, "md5_digest": "016a8bee27f3424246dd05a112ce77d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3198, "upload_time": "2019-03-12T17:23:28", "upload_time_iso_8601": "2019-03-12T17:23:28.906396Z", "url": "https://files.pythonhosted.org/packages/ea/be/8044b8003311b4a5a9cf87be1aab7b4d4ed5279b9fa2e3b07b23005f3f0c/pyfidelimax-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:51 2020"}