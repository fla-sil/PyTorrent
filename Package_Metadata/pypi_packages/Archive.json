{"info": {"author": "Gary Wilson Jr.", "author_email": "gary.wilson@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==============\npython-archive\n==============\n\nThis package provides a simple, pure-Python interface for handling various\narchive file formats.  Currently, archive extraction is the only supported\naction.  Supported file formats include:\n\n* Zip formats and equivalents: ``.zip``, ``.egg``, ``.jar``.\n* Tar and compressed tar formats: ``.tar``, ``.tar.gz``, ``.tgz``,\n  ``.tar.bz2``, ``.tz2``.\n\n\nExample usage\n=============\n\nUsing the ``Archive`` class::\n\n    from archive import Archive\n    a = Archive('files.tar.gz')\n    a.extract()\n\nUsing the ``extract`` convenience function::\n\n    from archive import extract\n    # Extract in current directory.\n    extract('files.tar.gz')\n    # Extract in directory 'unpack_dir'.\n    extract('files.tar.gz', 'unpack_dir')\n\nNote that calling extract with ``safe=True`` will ensure that the archive is\nsafe prior to extraction: ``UnsafeArchive`` exception will be raised when\narchive contains paths which would be extracted outside of the target\ndirectory (e.g. absolute paths)::\n\n    # Safely extract in directory 'unpack_dir'.\n    extract('files.tar.gz', 'unpack_dir', safe=True)\n\n\nSimilar tools\n=============\n\n* http://pypi.python.org/pypi/patool/ - portable command line archive file\n  manager.\n* http://pypi.python.org/pypi/gocept.download/ - zc.buildout recipe for\n  downloading and extracting an archive.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/python-archive/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "Archive", "package_url": "https://pypi.org/project/Archive/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Archive/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/python-archive/"}, "release_url": "https://pypi.org/project/Archive/0.3/", "requires_dist": null, "requires_python": null, "summary": "Simple library that provides a common interface for extracting zip and tar archives.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a simple, pure-Python interface for handling various\narchive file formats.  Currently, archive extraction is the only supported\naction.  Supported file formats include:</p>\n<ul>\n<li>Zip formats and equivalents: <tt>.zip</tt>, <tt>.egg</tt>, <tt>.jar</tt>.</li>\n<li>Tar and compressed tar formats: <tt>.tar</tt>, <tt>.tar.gz</tt>, <tt>.tgz</tt>,\n<tt>.tar.bz2</tt>, <tt>.tz2</tt>.</li>\n</ul>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>Using the <tt>Archive</tt> class:</p>\n<pre>from archive import Archive\na = Archive('files.tar.gz')\na.extract()\n</pre>\n<p>Using the <tt>extract</tt> convenience function:</p>\n<pre>from archive import extract\n# Extract in current directory.\nextract('files.tar.gz')\n# Extract in directory 'unpack_dir'.\nextract('files.tar.gz', 'unpack_dir')\n</pre>\n<p>Note that calling extract with <tt>safe=True</tt> will ensure that the archive is\nsafe prior to extraction: <tt>UnsafeArchive</tt> exception will be raised when\narchive contains paths which would be extracted outside of the target\ndirectory (e.g. absolute paths):</p>\n<pre># Safely extract in directory 'unpack_dir'.\nextract('files.tar.gz', 'unpack_dir', safe=True)\n</pre>\n</div>\n<div id=\"similar-tools\">\n<h2>Similar tools</h2>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/patool/\" rel=\"nofollow\">http://pypi.python.org/pypi/patool/</a> - portable command line archive file\nmanager.</li>\n<li><a href=\"http://pypi.python.org/pypi/gocept.download/\" rel=\"nofollow\">http://pypi.python.org/pypi/gocept.download/</a> - zc.buildout recipe for\ndownloading and extracting an archive.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 731466, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "5f185799a82c2c3b7f5bdd5096130ec5", "sha256": "710e8d8c5c0af210445d80c754f355b2af53a4570f567c10b3c1c4f58836a7cf"}, "downloads": -1, "filename": "Archive-0.2.tar.gz", "has_sig": false, "md5_digest": "5f185799a82c2c3b7f5bdd5096130ec5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8924, "upload_time": "2012-02-02T22:00:46", "upload_time_iso_8601": "2012-02-02T22:00:46.698749Z", "url": "https://files.pythonhosted.org/packages/a6/47/6425ab7fdaa1741580eedb831bf52e6005a6e82738fe4be73d6d59bb7926/Archive-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "fa2d4c414f87e97c6804e6261936a0ed", "sha256": "6ad0d68ea998a69fe2db54a07812b436c86aac4c39e78edabe3d4b09a1c19c86"}, "downloads": -1, "filename": "Archive-0.3.tar.gz", "has_sig": false, "md5_digest": "fa2d4c414f87e97c6804e6261936a0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10137, "upload_time": "2012-02-06T01:14:00", "upload_time_iso_8601": "2012-02-06T01:14:00.978609Z", "url": "https://files.pythonhosted.org/packages/f7/37/bf86a96c30477011b6a48fa82cfdf0e6a616314ad229a4544b59b70dfd2f/Archive-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa2d4c414f87e97c6804e6261936a0ed", "sha256": "6ad0d68ea998a69fe2db54a07812b436c86aac4c39e78edabe3d4b09a1c19c86"}, "downloads": -1, "filename": "Archive-0.3.tar.gz", "has_sig": false, "md5_digest": "fa2d4c414f87e97c6804e6261936a0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10137, "upload_time": "2012-02-06T01:14:00", "upload_time_iso_8601": "2012-02-06T01:14:00.978609Z", "url": "https://files.pythonhosted.org/packages/f7/37/bf86a96c30477011b6a48fa82cfdf0e6a616314ad229a4544b59b70dfd2f/Archive-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:23 2020"}