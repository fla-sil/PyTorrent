{"info": {"author": "Ryan Faulkner", "author_email": "bobs.ur.uncle@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Rafutils\n========\n\nA few helpful utilities that I find useful.\n\n\nAutovivification\n----------------\n\nDictionary type that allows for dynamic allocation of nested key values\nwithout prior defintion. ::\n\n    >>> a = AutoVivification()\n    >>> a[1][2] = 3\n\nMultiprocessing Wrapper\n-----------------------\n\nThis module provides a set of methods for handling multi-threading\npatterns more easily. ::\n\n    >>> import user_metrics.utils.multiprocessing_wrapper as mpw\n    >>> mpw.build_thread_pool(['one','two'],len,2,[])\n    [2,2]\n\nRecord Type\n-----------\n\nDefines the recordtype method which returns a type definition object\nthat allows for the creation of mutable objects with specified\nattributes.  These are essentially identical to collections.namedtuple\nexcept that the attributes may be changed after the namedtuple objects are\ncreated. ::\n\n    >>> Point = recordtype('Point', 'x y', default=0)\n    >>> Point()                 # instantiate with defaults\n    Point(x=0, y=0)\n\n\nMiscellaneous\n-------------\n\nSome miscellaneous methods exposed by this package.\n\nFormat Timestamp\n----------------\n\nThe ``format_timestamp`` method takes a timestamp representation (string\nor datetime) and convert to a standard string representation.\n\nEnumeration\n------------\n\nThe ``enum`` method implements an enumeration::\n\n    >>> Numbers = enum('ZERO', 'ONE', 'TWO')\n    >>> Numbers.ZERO\n    0\n    >>> Numbers.ONE\n    1\n\nBuild Named Tuple\n-----------------\n\nGiven a set of types, values, and names builds a named tuple.  This\nmethod expects three lists all of the same length and returns a\ndynamically built namedtuple object.  Currently, only ``list``,\n``str``, ``int``, and ``float`` cast methods are accepted as members\nof ``types``.  The mothod is named ``build_namedtuple``.\n\n\nUnpack Fields\n-------------\n\nUnpacks the attributes and values of a record type or named tuple into\nan ordered dictionary.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/rfaulkner/rafutils", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "rafutils", "package_url": "https://pypi.org/project/rafutils/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rafutils/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.github.com/rfaulkner/rafutils"}, "release_url": "https://pypi.org/project/rafutils/0.1.2-dev/", "requires_dist": null, "requires_python": null, "summary": "Utilities for Python development.", "version": "0.1.2-dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A few helpful utilities that I find useful.</p>\n<div id=\"autovivification\">\n<h2>Autovivification</h2>\n<p>Dictionary type that allows for dynamic allocation of nested key values\nwithout prior defintion.</p>\n<pre>&gt;&gt;&gt; a = AutoVivification()\n&gt;&gt;&gt; a[1][2] = 3\n</pre>\n</div>\n<div id=\"multiprocessing-wrapper\">\n<h2>Multiprocessing Wrapper</h2>\n<p>This module provides a set of methods for handling multi-threading\npatterns more easily.</p>\n<pre>&gt;&gt;&gt; import user_metrics.utils.multiprocessing_wrapper as mpw\n&gt;&gt;&gt; mpw.build_thread_pool(['one','two'],len,2,[])\n[2,2]\n</pre>\n</div>\n<div id=\"record-type\">\n<h2>Record Type</h2>\n<p>Defines the recordtype method which returns a type definition object\nthat allows for the creation of mutable objects with specified\nattributes.  These are essentially identical to collections.namedtuple\nexcept that the attributes may be changed after the namedtuple objects are\ncreated.</p>\n<pre>&gt;&gt;&gt; Point = recordtype('Point', 'x y', default=0)\n&gt;&gt;&gt; Point()                 # instantiate with defaults\nPoint(x=0, y=0)\n</pre>\n</div>\n<div id=\"miscellaneous\">\n<h2>Miscellaneous</h2>\n<p>Some miscellaneous methods exposed by this package.</p>\n</div>\n<div id=\"format-timestamp\">\n<h2>Format Timestamp</h2>\n<p>The <tt>format_timestamp</tt> method takes a timestamp representation (string\nor datetime) and convert to a standard string representation.</p>\n</div>\n<div id=\"enumeration\">\n<h2>Enumeration</h2>\n<p>The <tt>enum</tt> method implements an enumeration:</p>\n<pre>&gt;&gt;&gt; Numbers = enum('ZERO', 'ONE', 'TWO')\n&gt;&gt;&gt; Numbers.ZERO\n0\n&gt;&gt;&gt; Numbers.ONE\n1\n</pre>\n</div>\n<div id=\"build-named-tuple\">\n<h2>Build Named Tuple</h2>\n<p>Given a set of types, values, and names builds a named tuple.  This\nmethod expects three lists all of the same length and returns a\ndynamically built namedtuple object.  Currently, only <tt>list</tt>,\n<tt>str</tt>, <tt>int</tt>, and <tt>float</tt> cast methods are accepted as members\nof <tt>types</tt>.  The mothod is named <tt>build_namedtuple</tt>.</p>\n</div>\n<div id=\"unpack-fields\">\n<h2>Unpack Fields</h2>\n<p>Unpacks the attributes and values of a record type or named tuple into\nan ordered dictionary.</p>\n</div>\n\n          </div>"}, "last_serial": 798438, "releases": {"0.1.1-dev": [{"comment_text": "", "digests": {"md5": "038c854e5d9305d4b70bd4d0f88de0a5", "sha256": "fea62d04f622483e4b1e2f1d68b7d7106521c82ccdd6a7a6a760825ebb64be8b"}, "downloads": -1, "filename": "rafutils-0.1.1-dev.tar.gz", "has_sig": false, "md5_digest": "038c854e5d9305d4b70bd4d0f88de0a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5529, "upload_time": "2013-02-28T22:49:56", "upload_time_iso_8601": "2013-02-28T22:49:56.912525Z", "url": "https://files.pythonhosted.org/packages/99/58/21d05fb0f299ed368b70265bc206cd609b0f5a2a3b1b257e96bbdb31d22d/rafutils-0.1.1-dev.tar.gz", "yanked": false}], "0.1.2-dev": [{"comment_text": "", "digests": {"md5": "61c9d9e1019e658de917ac5876d7fd92", "sha256": "6f037c90fc716b710ddc18b2ad0e3ba58aacf0266b66818ecb024ec91fb7d006"}, "downloads": -1, "filename": "rafutils-0.1.2-dev.tar.gz", "has_sig": false, "md5_digest": "61c9d9e1019e658de917ac5876d7fd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5725, "upload_time": "2013-03-06T08:49:26", "upload_time_iso_8601": "2013-03-06T08:49:26.462239Z", "url": "https://files.pythonhosted.org/packages/f9/bd/055bcfea7a7943c3b0dbba95075bf2dc7f80eb529ef22b2b67b69fa728bf/rafutils-0.1.2-dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61c9d9e1019e658de917ac5876d7fd92", "sha256": "6f037c90fc716b710ddc18b2ad0e3ba58aacf0266b66818ecb024ec91fb7d006"}, "downloads": -1, "filename": "rafutils-0.1.2-dev.tar.gz", "has_sig": false, "md5_digest": "61c9d9e1019e658de917ac5876d7fd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5725, "upload_time": "2013-03-06T08:49:26", "upload_time_iso_8601": "2013-03-06T08:49:26.462239Z", "url": "https://files.pythonhosted.org/packages/f9/bd/055bcfea7a7943c3b0dbba95075bf2dc7f80eb529ef22b2b67b69fa728bf/rafutils-0.1.2-dev.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:54 2020"}