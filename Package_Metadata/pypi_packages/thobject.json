{"info": {"author": "Thomas Touhey", "author_email": "thomas@touhey.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "thobject: create cache-like objects for everyday use\n====================================================\n\nthobject tries to make it easy at creating your own objects for simple\ncache database-like objects. It became a project on its own from the\n`SGDFi <https://sgdfi.touhey.pro/>`_ code base.\n\nExamples\n--------\n\nDefining an object.\n\n.. code-block:: python\n\n\tfrom datetime import datetime\n\tfrom thobject import (Object, DateProperty, ValueProperty,\n\t\tTextProperty)\n\tfrom pytz import timezone\n\n\t# Define some objects.\n\n\tparistz = timezone('Europe/Paris')\n\n\tclass Event(Object):\n\t\t\"\"\" An event in our example codebase. It has an URL to identify,\n\t\t\ta name, and start and end dates in the Paris timezone. \"\"\"\n\n\t\tid = ValueProperty(unique = True, cls = int)\n\t\tparticipants = ValueProperty(cls = int)\n\t\tname = TextProperty(lines = 1, not_empty = True)\n\t\tstart = DateProperty(timezone = paristz)\n\t\tend = DateProperty(timezone = paristz)\n\nCreating such an object.\n\n.. code-block:: python\n\n\t# First method: all in the constructor.\n\n\tevent0 = Event(id = 5, name = \"hello, world\",\n\t\tstart = datetime(2019, 12, 14, 14, 0),\n\t\tend = datetime(2019, 12, 14, 15, 0))\n\n\t# Second method: use property set.\n\n\tevent1 = Event()\n\tevent1.id = 6\n\tevent1.participants = 120\n\tevent1.name = \"hello, world\"\n\tevent1.start = datetime(2020, 12, 14, 1, 0)\n\tevent1.end = datetime(2020, 12, 15, 1, 0)\n\nUsing the cache.\n\n.. code-block:: python\n\n\tfrom thobject import Cache\n\n\tcache = Cache()\n\n\t# Add the two initial events.\n\n\tcache.add(event0)\n\tcache.add(event1)\n\n\t# We want to update event1's participant count.\n\n\tcache.add(Event(id = 6, name = \"hello, people\"), based_on = 'id')", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://thobject.touhey.pro/", "keywords": "object", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "thobject", "package_url": "https://pypi.org/project/thobject/", "platform": "", "project_url": "https://pypi.org/project/thobject/", "project_urls": {"Homepage": "https://thobject.touhey.pro/"}, "release_url": "https://pypi.org/project/thobject/0.1/", "requires_dist": null, "requires_python": "", "summary": "simple database-like objects", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>thobject tries to make it easy at creating your own objects for simple\ncache database-like objects. It became a project on its own from the\n<a href=\"https://sgdfi.touhey.pro/\" rel=\"nofollow\">SGDFi</a> code base.</p>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Defining an object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">thobject</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">Object</span><span class=\"p\">,</span> <span class=\"n\">DateProperty</span><span class=\"p\">,</span> <span class=\"n\">ValueProperty</span><span class=\"p\">,</span>\n        <span class=\"n\">TextProperty</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pytz</span> <span class=\"kn\">import</span> <span class=\"n\">timezone</span>\n\n<span class=\"c1\"># Define some objects.</span>\n\n<span class=\"n\">paristz</span> <span class=\"o\">=</span> <span class=\"n\">timezone</span><span class=\"p\">(</span><span class=\"s1\">'Europe/Paris'</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Event</span><span class=\"p\">(</span><span class=\"n\">Object</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" An event in our example codebase. It has an URL to identify,\n                a name, and start and end dates in the Paris timezone. \"\"\"</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">ValueProperty</span><span class=\"p\">(</span><span class=\"n\">unique</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"bp\">cls</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n        <span class=\"n\">participants</span> <span class=\"o\">=</span> <span class=\"n\">ValueProperty</span><span class=\"p\">(</span><span class=\"bp\">cls</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">TextProperty</span><span class=\"p\">(</span><span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">not_empty</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">DateProperty</span><span class=\"p\">(</span><span class=\"n\">timezone</span> <span class=\"o\">=</span> <span class=\"n\">paristz</span><span class=\"p\">)</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">DateProperty</span><span class=\"p\">(</span><span class=\"n\">timezone</span> <span class=\"o\">=</span> <span class=\"n\">paristz</span><span class=\"p\">)</span>\n</pre>\n<p>Creating such an object.</p>\n<pre><span class=\"c1\"># First method: all in the constructor.</span>\n\n<span class=\"n\">event0</span> <span class=\"o\">=</span> <span class=\"n\">Event</span><span class=\"p\">(</span><span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"hello, world\"</span><span class=\"p\">,</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Second method: use property set.</span>\n\n<span class=\"n\">event1</span> <span class=\"o\">=</span> <span class=\"n\">Event</span><span class=\"p\">()</span>\n<span class=\"n\">event1</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n<span class=\"n\">event1</span><span class=\"o\">.</span><span class=\"n\">participants</span> <span class=\"o\">=</span> <span class=\"mi\">120</span>\n<span class=\"n\">event1</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"hello, world\"</span>\n<span class=\"n\">event1</span><span class=\"o\">.</span><span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2020</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">event1</span><span class=\"o\">.</span><span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2020</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>Using the cache.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">thobject</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add the two initial events.</span>\n\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">event0</span><span class=\"p\">)</span>\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">event1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We want to update event1's participant count.</span>\n\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Event</span><span class=\"p\">(</span><span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"hello, people\"</span><span class=\"p\">),</span> <span class=\"n\">based_on</span> <span class=\"o\">=</span> <span class=\"s1\">'id'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6954921, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5f34eef2f65394407938403062dcb676", "sha256": "de04d82e798f2e55e38bbb7f9f39e5cd6460b4d4fab9823f8a0184cc51c4c3e4"}, "downloads": -1, "filename": "thobject-0.1.tar.gz", "has_sig": false, "md5_digest": "5f34eef2f65394407938403062dcb676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11008, "upload_time": "2020-04-05T10:18:26", "upload_time_iso_8601": "2020-04-05T10:18:26.182852Z", "url": "https://files.pythonhosted.org/packages/99/de/d3ce3e9e12b4700a9406e971551f225347f27b3e760e196a6877bcbb3e3b/thobject-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f34eef2f65394407938403062dcb676", "sha256": "de04d82e798f2e55e38bbb7f9f39e5cd6460b4d4fab9823f8a0184cc51c4c3e4"}, "downloads": -1, "filename": "thobject-0.1.tar.gz", "has_sig": false, "md5_digest": "5f34eef2f65394407938403062dcb676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11008, "upload_time": "2020-04-05T10:18:26", "upload_time_iso_8601": "2020-04-05T10:18:26.182852Z", "url": "https://files.pythonhosted.org/packages/99/de/d3ce3e9e12b4700a9406e971551f225347f27b3e760e196a6877bcbb3e3b/thobject-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:54 2020"}