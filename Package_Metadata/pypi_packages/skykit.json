{"info": {"author": "Hassen Taidirt", "author_email": "htaidirt@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Sky Kit\n\nEasy to use out-of-the-box satellite imagery package for Python aficionado.\n\nAdding **fun** to satellites coolness \ud83d\ude0e\n\n> Warning: This is still a work in progress. Please do not use in production, yet.\n\n## Seriously, what is it? \ud83e\uddd0\n\nSky kit is an ensemble of methods to ease satellite imagery processing, from and to developers and data scientists. Working with any satellite imagery provider, should be as easy as:\n\n```\nfrom skykit.providers import <ProviderName>\n```\n\n## Install \ud83d\ude80\n\nAs with any python package, **pip** is your friend:\n\n```\npip install skykit\n```\n\n## Usage \ud83c\udfa1\n\n### Quick Start\n\nThe following shows details of a tile from Sentinel-2, that includes Paris (France), from 01/03/2019 to 08/03/2019:\n\n```python\nfrom datetime import date\nfrom skykit.providers import Sentinel2\n\nsat = Sentinel2(username=\"xxx\", password=\"yyy\")\n\ntiles = sat.query(\n    coordinates=(2.349014, 48.864716),     # Paris (FR) coordinates\n    dates=(date(2019,3,1), date(2019,3,8)) # From march 1, 2019 to march 8, 2019\n    )\n\nlen(tiles) # returns 6\n\ntile = tiles[0]         # Pick any tile you want, or filter more\nprint(tile['summary'])  # returns 'Date: 2019-03-02T10:50:29.024Z, Instrument: MSI, Mode: , Satellite: Sentinel-2, Size: 730.27 MB'\n```\n\nIn the previous example, the `tiles` variable will include meta information of every tile returned from Sentinel-2 query.\n\n## Features\n\n### Connecting to satellite images providers\n\nActually, Sky kit support the following ticked providers (others coming):\n\n- [ ] Sentinel 1\n- [x] Sentinel 2\n- [ ] Landsat 7\n- [ ] Landsat 8\n- [ ] Modis\n- [ ] Cbers-4\n- [ ] Aqua\n\nAll image providers are grouped into `skykit.providers` module. Invoking a provider (like Sentinel-2) can be done like this:\n\n```python\nfrom skykit.providers import Sentinel2\n```\n\nWe then need to initialize the connection with the provider. eg with Sentinel-2:\n\n```python\nsat = Sentinel2(username=\"xxx\", password=\"yyy\")\n```\n\n> Nota: Sentinel 1 & 2 require having credentials to connect to [Copernicus Open Access Hub](https://scihub.copernicus.eu/). Once created, insert your credentials in the code above.\n\n## Todo \ud83d\udd2d\n\n- [ ] Write a better documentation. Look for readthedocs.io\n- [ ] Add providers\n- [ ] Create a reusable abstraction of `Tile`, to create a uniform use of tiles, no matter which provider\n- [ ] Ease working with tiles meta data (usually about the scene and satellite)\n- [x] Allow querying using a polygon\n- [ ] Allow querying using an address\n- [ ] Use friendly dates (like text: `\"26/03/2019\"`), of use `from=\"...\"` and `to=\"...\"` instead of `date=(...)`\n- [ ] Allow working on specific bands. Something like:\n\n```python\nimage = tile.get('b04') # or tile.b04() ???\n```\n\n- [ ] More tests <-- \u26a0 URGENT\n- [ ] Create a CI/CD pipeline to publish **tags** into PyPi\n\nThis list is not exhaustive.\n\n## Contribution \ud83d\udcaa\n\nPlease suggest contributions using Github's **Pull Requests**.\n\n## License \ud83e\udd2e\n\nRead the [LICENSE.txt](LICENSE.txt) file.\n\nThanks \ud83d\ude4f\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/htaidirt/skykit", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "skykit", "package_url": "https://pypi.org/project/skykit/", "platform": "", "project_url": "https://pypi.org/project/skykit/", "project_urls": {"Homepage": "https://github.com/htaidirt/skykit"}, "release_url": "https://pypi.org/project/skykit/0.1.3/", "requires_dist": ["sentinelsat", "coverage ; extra == 'test'", "pytest ; extra == 'test'", "pytest-mock ; extra == 'test'"], "requires_python": "", "summary": "Out-of-the-box methods for satellite imagery processing", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sky Kit</h1>\n<p>Easy to use out-of-the-box satellite imagery package for Python aficionado.</p>\n<p>Adding <strong>fun</strong> to satellites coolness \ud83d\ude0e</p>\n<blockquote>\n<p>Warning: This is still a work in progress. Please do not use in production, yet.</p>\n</blockquote>\n<h2>Seriously, what is it? \ud83e\uddd0</h2>\n<p>Sky kit is an ensemble of methods to ease satellite imagery processing, from and to developers and data scientists. Working with any satellite imagery provider, should be as easy as:</p>\n<pre><code>from skykit.providers import &lt;ProviderName&gt;\n</code></pre>\n<h2>Install \ud83d\ude80</h2>\n<p>As with any python package, <strong>pip</strong> is your friend:</p>\n<pre><code>pip install skykit\n</code></pre>\n<h2>Usage \ud83c\udfa1</h2>\n<h3>Quick Start</h3>\n<p>The following shows details of a tile from Sentinel-2, that includes Paris (France), from 01/03/2019 to 08/03/2019:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skykit.providers</span> <span class=\"kn\">import</span> <span class=\"n\">Sentinel2</span>\n\n<span class=\"n\">sat</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel2</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"xxx\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"yyy\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">tiles</span> <span class=\"o\">=</span> <span class=\"n\">sat</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span>\n    <span class=\"n\">coordinates</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">2.349014</span><span class=\"p\">,</span> <span class=\"mf\">48.864716</span><span class=\"p\">),</span>     <span class=\"c1\"># Paris (FR) coordinates</span>\n    <span class=\"n\">dates</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">))</span> <span class=\"c1\"># From march 1, 2019 to march 8, 2019</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tiles</span><span class=\"p\">)</span> <span class=\"c1\"># returns 6</span>\n\n<span class=\"n\">tile</span> <span class=\"o\">=</span> <span class=\"n\">tiles</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>         <span class=\"c1\"># Pick any tile you want, or filter more</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"s1\">'summary'</span><span class=\"p\">])</span>  <span class=\"c1\"># returns 'Date: 2019-03-02T10:50:29.024Z, Instrument: MSI, Mode: , Satellite: Sentinel-2, Size: 730.27 MB'</span>\n</pre>\n<p>In the previous example, the <code>tiles</code> variable will include meta information of every tile returned from Sentinel-2 query.</p>\n<h2>Features</h2>\n<h3>Connecting to satellite images providers</h3>\n<p>Actually, Sky kit support the following ticked providers (others coming):</p>\n<ul>\n<li>[ ] Sentinel 1</li>\n<li>[x] Sentinel 2</li>\n<li>[ ] Landsat 7</li>\n<li>[ ] Landsat 8</li>\n<li>[ ] Modis</li>\n<li>[ ] Cbers-4</li>\n<li>[ ] Aqua</li>\n</ul>\n<p>All image providers are grouped into <code>skykit.providers</code> module. Invoking a provider (like Sentinel-2) can be done like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">skykit.providers</span> <span class=\"kn\">import</span> <span class=\"n\">Sentinel2</span>\n</pre>\n<p>We then need to initialize the connection with the provider. eg with Sentinel-2:</p>\n<pre><span class=\"n\">sat</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel2</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"xxx\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"yyy\"</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>Nota: Sentinel 1 &amp; 2 require having credentials to connect to <a href=\"https://scihub.copernicus.eu/\" rel=\"nofollow\">Copernicus Open Access Hub</a>. Once created, insert your credentials in the code above.</p>\n</blockquote>\n<h2>Todo \ud83d\udd2d</h2>\n<ul>\n<li>[ ] Write a better documentation. Look for readthedocs.io</li>\n<li>[ ] Add providers</li>\n<li>[ ] Create a reusable abstraction of <code>Tile</code>, to create a uniform use of tiles, no matter which provider</li>\n<li>[ ] Ease working with tiles meta data (usually about the scene and satellite)</li>\n<li>[x] Allow querying using a polygon</li>\n<li>[ ] Allow querying using an address</li>\n<li>[ ] Use friendly dates (like text: <code>\"26/03/2019\"</code>), of use <code>from=\"...\"</code> and <code>to=\"...\"</code> instead of <code>date=(...)</code></li>\n<li>[ ] Allow working on specific bands. Something like:</li>\n</ul>\n<pre><span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">tile</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b04'</span><span class=\"p\">)</span> <span class=\"c1\"># or tile.b04() ???</span>\n</pre>\n<ul>\n<li>[ ] More tests &lt;-- \u26a0 URGENT</li>\n<li>[ ] Create a CI/CD pipeline to publish <strong>tags</strong> into PyPi</li>\n</ul>\n<p>This list is not exhaustive.</p>\n<h2>Contribution \ud83d\udcaa</h2>\n<p>Please suggest contributions using Github's <strong>Pull Requests</strong>.</p>\n<h2>License \ud83e\udd2e</h2>\n<p>Read the <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a> file.</p>\n<p>Thanks \ud83d\ude4f</p>\n\n          </div>"}, "last_serial": 5101168, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6998db799a55904c99545a35ee1edee3", "sha256": "7d3c53ba68e5e520062eac5513ff0fe33184b40a7040c2ec0747ca7944dcf112"}, "downloads": -1, "filename": "Skykit-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6998db799a55904c99545a35ee1edee3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1752, "upload_time": "2019-03-26T11:04:53", "upload_time_iso_8601": "2019-03-26T11:04:53.084929Z", "url": "https://files.pythonhosted.org/packages/f9/98/240045d9102e007ade14c48634535d17b7f99e1780fd2add9e104a137258/Skykit-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7ae203a4a047d313856d6113ec28979f", "sha256": "85da32b17e47997ad554b2e190ccc42d690c68d0c81bbf2ea013b3536c9219ee"}, "downloads": -1, "filename": "skykit-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7ae203a4a047d313856d6113ec28979f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4472, "upload_time": "2019-03-27T11:11:05", "upload_time_iso_8601": "2019-03-27T11:11:05.750011Z", "url": "https://files.pythonhosted.org/packages/b2/81/db6bf29612720b0290d007517e87c3825abaac3b66a33df58e3574fd3bd5/skykit-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ef677b180d13eb871e3241a9e8cc106", "sha256": "40eca2366364cd0ec4286c84876f3f97fe5924e31835ef1a4b7e20a6d6ac813b"}, "downloads": -1, "filename": "Skykit-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2ef677b180d13eb871e3241a9e8cc106", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3444, "upload_time": "2019-03-26T11:15:55", "upload_time_iso_8601": "2019-03-26T11:15:55.430690Z", "url": "https://files.pythonhosted.org/packages/b1/24/883a75db308863085fa42f60edf4544303613cf3128154495b53a138729a/Skykit-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17820b800a5d22adee3c5bbf8078e3e8", "sha256": "9b9cf47a0c8b581ffc19f44186ccf9a25252ed837ce8d6139ab14f8ab4633004"}, "downloads": -1, "filename": "Skykit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "17820b800a5d22adee3c5bbf8078e3e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1738, "upload_time": "2019-03-26T11:15:56", "upload_time_iso_8601": "2019-03-26T11:15:56.729031Z", "url": "https://files.pythonhosted.org/packages/3e/d2/e20d4d5481854758cabae04b45651d0dc63180ebca8084ed77aaecaaef5d/Skykit-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c618e6e930b9d89050eccd85aea0dbde", "sha256": "8847de564df5716a8697749eaa75b5053f2f0fa83b15a0937b252df5d6307b79"}, "downloads": -1, "filename": "skykit-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c618e6e930b9d89050eccd85aea0dbde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4473, "upload_time": "2019-03-27T11:12:09", "upload_time_iso_8601": "2019-03-27T11:12:09.893792Z", "url": "https://files.pythonhosted.org/packages/c9/7b/daa982e2b4e1fcc45ea7dda5b4202edc1d3b1cec146fa1c1bfc0e91ae1f8/skykit-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98bee3c0f87bc3f341f1c52972d8f49a", "sha256": "3d9e96490f42132ccf95699741d341ce0fe1bcb16850d9fc66a40842a9d2bca5"}, "downloads": -1, "filename": "skykit-0.1.2.tar.gz", "has_sig": false, "md5_digest": "98bee3c0f87bc3f341f1c52972d8f49a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2978, "upload_time": "2019-03-27T11:12:11", "upload_time_iso_8601": "2019-03-27T11:12:11.303011Z", "url": "https://files.pythonhosted.org/packages/cb/37/c0648831ce0597ce489dc505cfbaa1fce5774ec812fb39be6eb5984ef28b/skykit-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "71f96d3c356c82984b3bfb6aa2e650f0", "sha256": "387a4fe8f7967045b5659f54dc406a2672ba1dbb02d97a514ef212e557e49336"}, "downloads": -1, "filename": "skykit-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "71f96d3c356c82984b3bfb6aa2e650f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5827, "upload_time": "2019-04-04T22:14:42", "upload_time_iso_8601": "2019-04-04T22:14:42.422434Z", "url": "https://files.pythonhosted.org/packages/71/b5/275e3f2c58247a407d8107b8787e537664b24f7a799550b9ad9c120a8ea6/skykit-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e9ab5db12cae46961d416a20c7c69aa", "sha256": "8195dd8ad90f27926e7fc262949dce4e6db5893066f5ff589ddf6220a5a34312"}, "downloads": -1, "filename": "skykit-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7e9ab5db12cae46961d416a20c7c69aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4107, "upload_time": "2019-04-04T22:14:44", "upload_time_iso_8601": "2019-04-04T22:14:44.002059Z", "url": "https://files.pythonhosted.org/packages/bf/11/b29cdf6819e489eba32e52bf66464ffc6c301d266376c29a43d2c55f38b4/skykit-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71f96d3c356c82984b3bfb6aa2e650f0", "sha256": "387a4fe8f7967045b5659f54dc406a2672ba1dbb02d97a514ef212e557e49336"}, "downloads": -1, "filename": "skykit-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "71f96d3c356c82984b3bfb6aa2e650f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5827, "upload_time": "2019-04-04T22:14:42", "upload_time_iso_8601": "2019-04-04T22:14:42.422434Z", "url": "https://files.pythonhosted.org/packages/71/b5/275e3f2c58247a407d8107b8787e537664b24f7a799550b9ad9c120a8ea6/skykit-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e9ab5db12cae46961d416a20c7c69aa", "sha256": "8195dd8ad90f27926e7fc262949dce4e6db5893066f5ff589ddf6220a5a34312"}, "downloads": -1, "filename": "skykit-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7e9ab5db12cae46961d416a20c7c69aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4107, "upload_time": "2019-04-04T22:14:44", "upload_time_iso_8601": "2019-04-04T22:14:44.002059Z", "url": "https://files.pythonhosted.org/packages/bf/11/b29cdf6819e489eba32e52bf66464ffc6c301d266376c29a43d2c55f38b4/skykit-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:48 2020"}