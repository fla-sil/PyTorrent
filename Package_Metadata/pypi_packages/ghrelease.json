{"info": {"author": "Stefan Elethofer", "author_email": "se@nexiles.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "====================================\nghrelease -- a GitHub release helper\n====================================\n\n:Author:    Stefan Eletzhofer\n\nAbstract\n========\n\nThis is a little tool to help me with releasing stuff to GitHub.\n\nSynopsis\n========\n\n::\n\n    ghrelease - a GitHub release helper\n\n    Usage:\n        ghrelease --version\n        ghrelease [options] list <reponame>\n        ghrelease [options] create --tag=TAG [--name=RELEASE_NAME] [--body=FILE] [--draft | --prerelease] <reponame> [<file>...]\n        ghrelease [options] upload --tag=TAG <reponame> <file>...\n        ghrelease [options] open (--tag=TAG | --latest) <reponame>\n\n    The `list` command lists available releases.\n\n    The `create` command creates new releases, optionally uploading some assets.\n\n    The `upload` command uploads assets to a existing release.  It's not possible to\n    replace assets -- the command will complain if you're trying to upload an existing\n    asset.\n\n    The `open` command opens the release's web page in the system default browser.\n\n    Options:\n        -h --help           show this help\n        -u --user=USER      github login name\n        -p --password=PASS  github password\n        --password-env=ENV  read password from system environment [default: GHRELEASE_PASS]\n        --user-env=ENV      read user name from system environment [default: GHRELEASE_USER]\n        --owner=OWNER       github owner [defaults to the user name]\n        --debug             debug logging\n        -v, --verbose       print more text\n\nExamples\n========\n\nListing all releases of a given repository::\n\n\n    $ ghrelease --user fred --pass s3kr17 list some-repo\n    RELEASE    release-name (v0.3) @ https://github.com/fred/some-repo/releases/tag/v0.3\n    PRERELEASE release-name (v0.2) @ https://github.com/fred/some-repo/releases/tag/v0.2\n    PRERELEASE release-name (v0.1) @ https://github.com/fred/some-repo/releases/tag/v0.1\n\nPassing credentials via command line is insecure and ugly::\n\n    $ export GHRELEASE_USER=fred\n    $ export GHRELEASE_PASS=s3kr71\n    $ ghrelease list some-repo\n    RELEASE    release-name (v0.3) @ https://github.com/fred/some-repo/releases/tag/v0.3\n    PRERELEASE release-name (v0.2) @ https://github.com/fred/some-repo/releases/tag/v0.2\n    PRERELEASE release-name (v0.1) @ https://github.com/fred/some-repo/releases/tag/v0.1\n\nCreating a new release for tag `v0.4` named `super-duper`, using the local\nfile `docs/changelog.rst` as release notes, uploading some zip file::\n\n    $ ghrelease create some-repo v0.4 --name super-duper --body docs/changelog.rst super-duper-0-4.zip\n    Release created:\n    RELEASE    super-duper (v0.4) @ https://github.com/fred/some-repo/releases/tag/v0.4\n    uploading super-duper-0-4.zip (application/octet-stream) ...\n\nOpen the web page of that release::\n\n    $ ghrelease open --tag v0.4 some-repo\n\nUploading assets to an existing release::\n\n    $ ghrelease upload some-repo --tag v0.4 super-duper-0-4-docs.zip LICENSE\n    uploading file super-duper-0-4-docs.zip (application/octet-stream) ...\n    uploading file LICENSE (application/octet-stream) ...\n\n.. vim: set ft=rst tw=75 spell nocin nosi ai sw=4 ts=4 expandtab:", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/seletz/ghrelease/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seletz/ghrelease", "keywords": "", "license": "public domain", "maintainer": null, "maintainer_email": null, "name": "ghrelease", "package_url": "https://pypi.org/project/ghrelease/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ghrelease/", "project_urls": {"Download": "https://github.com/seletz/ghrelease/releases", "Homepage": "https://github.com/seletz/ghrelease"}, "release_url": "https://pypi.org/project/ghrelease/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "A GitHub release helper", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Stefan Eletzhofer</td></tr>\n</tbody>\n</table>\n<div id=\"abstract\">\n<h2>Abstract</h2>\n<p>This is a little tool to help me with releasing stuff to GitHub.</p>\n</div>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<pre>ghrelease - a GitHub release helper\n\nUsage:\n    ghrelease --version\n    ghrelease [options] list &lt;reponame&gt;\n    ghrelease [options] create --tag=TAG [--name=RELEASE_NAME] [--body=FILE] [--draft | --prerelease] &lt;reponame&gt; [&lt;file&gt;...]\n    ghrelease [options] upload --tag=TAG &lt;reponame&gt; &lt;file&gt;...\n    ghrelease [options] open (--tag=TAG | --latest) &lt;reponame&gt;\n\nThe `list` command lists available releases.\n\nThe `create` command creates new releases, optionally uploading some assets.\n\nThe `upload` command uploads assets to a existing release.  It's not possible to\nreplace assets -- the command will complain if you're trying to upload an existing\nasset.\n\nThe `open` command opens the release's web page in the system default browser.\n\nOptions:\n    -h --help           show this help\n    -u --user=USER      github login name\n    -p --password=PASS  github password\n    --password-env=ENV  read password from system environment [default: GHRELEASE_PASS]\n    --user-env=ENV      read user name from system environment [default: GHRELEASE_USER]\n    --owner=OWNER       github owner [defaults to the user name]\n    --debug             debug logging\n    -v, --verbose       print more text\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Listing all releases of a given repository:</p>\n<pre>$ ghrelease --user fred --pass s3kr17 list some-repo\nRELEASE    release-name (v0.3) @ https://github.com/fred/some-repo/releases/tag/v0.3\nPRERELEASE release-name (v0.2) @ https://github.com/fred/some-repo/releases/tag/v0.2\nPRERELEASE release-name (v0.1) @ https://github.com/fred/some-repo/releases/tag/v0.1\n</pre>\n<p>Passing credentials via command line is insecure and ugly:</p>\n<pre>$ export GHRELEASE_USER=fred\n$ export GHRELEASE_PASS=s3kr71\n$ ghrelease list some-repo\nRELEASE    release-name (v0.3) @ https://github.com/fred/some-repo/releases/tag/v0.3\nPRERELEASE release-name (v0.2) @ https://github.com/fred/some-repo/releases/tag/v0.2\nPRERELEASE release-name (v0.1) @ https://github.com/fred/some-repo/releases/tag/v0.1\n</pre>\n<p>Creating a new release for tag <cite>v0.4</cite> named <cite>super-duper</cite>, using the local\nfile <cite>docs/changelog.rst</cite> as release notes, uploading some zip file:</p>\n<pre>$ ghrelease create some-repo v0.4 --name super-duper --body docs/changelog.rst super-duper-0-4.zip\nRelease created:\nRELEASE    super-duper (v0.4) @ https://github.com/fred/some-repo/releases/tag/v0.4\nuploading super-duper-0-4.zip (application/octet-stream) ...\n</pre>\n<p>Open the web page of that release:</p>\n<pre>$ ghrelease open --tag v0.4 some-repo\n</pre>\n<p>Uploading assets to an existing release:</p>\n<pre>$ ghrelease upload some-repo --tag v0.4 super-duper-0-4-docs.zip LICENSE\nuploading file super-duper-0-4-docs.zip (application/octet-stream) ...\nuploading file LICENSE (application/octet-stream) ...\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1058049, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "35d2b171ea67e04c403209645fd98f4a", "sha256": "299bd3bb3198080eef3577c6cd6e361063e31fe6ef47a6474cbb7205aeeba27f"}, "downloads": -1, "filename": "ghrelease-0.1.tar.gz", "has_sig": false, "md5_digest": "35d2b171ea67e04c403209645fd98f4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5104, "upload_time": "2014-03-24T11:00:32", "upload_time_iso_8601": "2014-03-24T11:00:32.374256Z", "url": "https://files.pythonhosted.org/packages/52/c2/7d036c2b0b84c290b570908ccbbf277ddfb1e93971de98da5d41a4a0bcc8/ghrelease-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "99bb2f6e46d2a55208b949755eface17", "sha256": "4e318ce7efcdc1038736a1abf296096bb26b22bac0a0fffbd85ba1b9e92988a5"}, "downloads": -1, "filename": "ghrelease-0.1.1.tar.gz", "has_sig": false, "md5_digest": "99bb2f6e46d2a55208b949755eface17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5124, "upload_time": "2014-03-24T11:10:31", "upload_time_iso_8601": "2014-03-24T11:10:31.392369Z", "url": "https://files.pythonhosted.org/packages/cf/65/ff4990e70f9c397c73a5e66dd8db51e7a0b8cfaeb70fc933d950dcdf28ae/ghrelease-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "08e23453b15bee7b43bcc854a5f16c74", "sha256": "ede01c7e01c5880e9e7e83e04d223f5f6be442ec604caab2ae86905d9d06a7fc"}, "downloads": -1, "filename": "ghrelease-0.1.2-py2.7.egg", "has_sig": false, "md5_digest": "08e23453b15bee7b43bcc854a5f16c74", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 2406, "upload_time": "2014-04-11T17:32:23", "upload_time_iso_8601": "2014-04-11T17:32:23.431231Z", "url": "https://files.pythonhosted.org/packages/d2/60/a7dd569113576809f59b72bbe97bea411142683a834e0e18b7484901dc4a/ghrelease-0.1.2-py2.7.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08e23453b15bee7b43bcc854a5f16c74", "sha256": "ede01c7e01c5880e9e7e83e04d223f5f6be442ec604caab2ae86905d9d06a7fc"}, "downloads": -1, "filename": "ghrelease-0.1.2-py2.7.egg", "has_sig": false, "md5_digest": "08e23453b15bee7b43bcc854a5f16c74", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 2406, "upload_time": "2014-04-11T17:32:23", "upload_time_iso_8601": "2014-04-11T17:32:23.431231Z", "url": "https://files.pythonhosted.org/packages/d2/60/a7dd569113576809f59b72bbe97bea411142683a834e0e18b7484901dc4a/ghrelease-0.1.2-py2.7.egg", "yanked": false}], "timestamp": "Fri May  8 00:57:31 2020"}