{"info": {"author": "Aur\u00e9lien Matouillot", "author_email": "a.matouillot@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: JavaScript", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Site Management :: Link Checking"], "description": "Linkcheckerjs is the best tool ever to check your websites. It parses the pages using phantomjs in order to detect all the errors even if they come from css or javascript. Linkcheckerjs is free under MIT License.\n\n\nInstallation\n============\n\n\nRequirements\n------------\n\n* python >= 2.6\n\n* node & npm: please refer to `node doc <https://nodejs.org/en/download/>`_\n\n\nInstallation via Pip\n--------------------\n\n::\n\n    pip install linkcheckerjs\n\n\nInstallation from source\n------------------------\n\n::\n\n    cd where_i_want_to_clone_linkcheckerjs\n\n    git clone https://github.com/LeResKP/linkcheckerjs.git\n\n    cd linkcheckerjs\n\n    python setup.py install\n\n\nBasic usage\n===========\n\n\nTo check recursively an URL like 'https://www.python.org' just type the following command in your terminal::\n\n    linkcheckerjs https://www.python.org\n\n\n.. note::\n\n    The external links (not on the same domain) will not be checked strongly. It's only check the page itself, nor the resources nor the links.\n\n\n\nAdvanced usage\n==============\n\n\nWe will not see the powerful of creating a json and displaying the output separately here since it's in development.\nBut for now it's just useful when you lost the output of linkcheckerjs command.\n\n\nYou can create a json output when running linkcheckerjs::\n\n    linkcheckerjs https://www.python.org -o /tmp/linkcheckerjs-output.json\n\n\nTo read the generated json, type in your terminal::\n\n    linkreaderjs https://www.python.org -o /tmp/linkcheckerjs-output.json", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "Check links and resources in web page or full website", "keywords": "checker,link,website,validation,crawler", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "linkcheckerjs", "package_url": "https://pypi.org/project/linkcheckerjs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/linkcheckerjs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "Check links and resources in web page or full website"}, "release_url": "https://pypi.org/project/linkcheckerjs/0.1/", "requires_dist": null, "requires_python": null, "summary": "Check links and resources in web page or full website", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Linkcheckerjs is the best tool ever to check your websites. It parses the pages using phantomjs in order to detect all the errors even if they come from css or javascript. Linkcheckerjs is free under MIT License.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>python &gt;= 2.6</li>\n<li>node &amp; npm: please refer to <a href=\"https://nodejs.org/en/download/\" rel=\"nofollow\">node doc</a></li>\n</ul>\n</div>\n<div id=\"installation-via-pip\">\n<h3>Installation via Pip</h3>\n<pre>pip install linkcheckerjs\n</pre>\n</div>\n<div id=\"installation-from-source\">\n<h3>Installation from source</h3>\n<pre>cd where_i_want_to_clone_linkcheckerjs\n\ngit clone https://github.com/LeResKP/linkcheckerjs.git\n\ncd linkcheckerjs\n\npython setup.py install\n</pre>\n</div>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>To check recursively an URL like \u2018<a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a>\u2019 just type the following command in your terminal:</p>\n<pre>linkcheckerjs https://www.python.org\n</pre>\n<div>\n<p>Note</p>\n<p>The external links (not on the same domain) will not be checked strongly. It\u2019s only check the page itself, nor the resources nor the links.</p>\n</div>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced usage</h2>\n<p>We will not see the powerful of creating a json and displaying the output separately here since it\u2019s in development.\nBut for now it\u2019s just useful when you lost the output of linkcheckerjs command.</p>\n<p>You can create a json output when running linkcheckerjs:</p>\n<pre>linkcheckerjs https://www.python.org -o /tmp/linkcheckerjs-output.json\n</pre>\n<p>To read the generated json, type in your terminal:</p>\n<pre>linkreaderjs https://www.python.org -o /tmp/linkcheckerjs-output.json\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2084089, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a37e77803674d6ce940ef35ed13c2aa9", "sha256": "8649345581da2f452d943a4bafdaa97c30b4284b7cfeb99cfd95092114276bc0"}, "downloads": -1, "filename": "linkcheckerjs-0.1.tar.gz", "has_sig": false, "md5_digest": "a37e77803674d6ce940ef35ed13c2aa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10166, "upload_time": "2016-04-26T05:47:15", "upload_time_iso_8601": "2016-04-26T05:47:15.460465Z", "url": "https://files.pythonhosted.org/packages/f2/db/6f47aa3ca67f55b64f4caec37522a0cfeda6a40bab2771fa4c8911b590ec/linkcheckerjs-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a37e77803674d6ce940ef35ed13c2aa9", "sha256": "8649345581da2f452d943a4bafdaa97c30b4284b7cfeb99cfd95092114276bc0"}, "downloads": -1, "filename": "linkcheckerjs-0.1.tar.gz", "has_sig": false, "md5_digest": "a37e77803674d6ce940ef35ed13c2aa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10166, "upload_time": "2016-04-26T05:47:15", "upload_time_iso_8601": "2016-04-26T05:47:15.460465Z", "url": "https://files.pythonhosted.org/packages/f2/db/6f47aa3ca67f55b64f4caec37522a0cfeda6a40bab2771fa4c8911b590ec/linkcheckerjs-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:39 2020"}