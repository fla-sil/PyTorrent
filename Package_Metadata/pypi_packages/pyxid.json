{"info": {"author": "Cedrus Corporation", "author_email": "opensource@cedrus.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: System :: Hardware"], "description": "Python library for interfacing with Cedrus XID and StimTracker devices\n\nXID (eXperiment Interface Device) devices are used in software such as\nSuperLab, Presentation, and ePrime for receiving input as part of\nstimulus/response testing experiments.\n\nThis handles all of the low level device handling for XID devices in\npython projects.  The developer using this library must poll the\nattached device(s) for responses.  Here's an example of how to do so:\n\n    import pyxid\n\n    # get a list of all attached XID devices\n    devices = pyxid.get_xid_devices()\n\n    dev = devices[0] # get the first device to use\n    if dev.is_response_device():\n        dev.reset_base_timer()\n        dev.reset_rt_timer()\n\n        while True:\n            dev.poll_for_response()\n            if dev.response_queue_size() > 0:\n                response = dev.get_next_response()\n                # do something with the response\n\n\nThe response is a python dict with the following keys:\n\n    pressed: True if the key was pressed, False if it was released\n    key: Response pad key pressed by the subject\n    port: Device port the response was from (typically 0)\n    time: value of the Response Time timer when the key was hit/released\n\n\nStimTracker\n\nSupport for Cedrus StimTracker devices is now included.  On StimTracker\ndevices, there are the following methods:\n\n    set_pulse_duration()\n    activate_line()\n    clear_line()\n\nSee the docstring for activate_line() for documentation on how to use it.\n\nThese methods are not available if the device is a response pad.\n\nStimTracker is used in software such as SuperLab, Presentation and ePrime\nfor sending event markers.\n\n\nTimers\n\nEach Cedrus XID device has an internal timer a Base Timer and a\nResponse Time Timer.  The Base Timer should be reset at the start of\nan experiment.  The Response Time timer should be reset whenever a\nstimulus is presented.\n\nAt the time of this library release, there is a known issue with clock\ndrift in XID devices.  Our hardware/firmware developer is currently\nlooking into the issue.  \n\nGiven the issue, use of the response timer built into the response\npads is optional.  If you wish to use the time reported from the\nresponse pads, do the following after importing the pyxid library:\n\n    import pyxid\n    pyxid.use_response_pad_timer = True\n\nThis will return the time in the 'time' field of the dict returned by\nXidDevice.get_next_response(), otherwise, the 'time' field will\ncontain 0.\n\nWindows Specific Issues\n\nSometimes, windows fails at detecting XID devices.  Running\ndetect_xid_devices() a second time should result in finding the\ndevices.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/cedrus-opensource/pyxid/", "keywords": "cedrus xid XID stimulus response data collection", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pyxid", "package_url": "https://pypi.org/project/pyxid/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyxid/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.github.com/cedrus-opensource/pyxid/"}, "release_url": "https://pypi.org/project/pyxid/1.0/", "requires_dist": null, "requires_python": null, "summary": "Pure python library for communicating with Cedrus XID and StimTracker devices.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Python library for interfacing with Cedrus XID and StimTracker devices<br><br>XID (eXperiment Interface Device) devices are used in software such as<br>SuperLab, Presentation, and ePrime for receiving input as part of<br>stimulus/response testing experiments.<br><br>This handles all of the low level device handling for XID devices in<br>python projects.  The developer using this library must poll the<br>attached device(s) for responses.  Here's an example of how to do so:<br><br>    import pyxid<br><br>    # get a list of all attached XID devices<br>    devices = pyxid.get_xid_devices()<br><br>    dev = devices[0] # get the first device to use<br>    if dev.is_response_device():<br>        dev.reset_base_timer()<br>        dev.reset_rt_timer()<br><br>        while True:<br>            dev.poll_for_response()<br>            if dev.response_queue_size() &gt; 0:<br>                response = dev.get_next_response()<br>                # do something with the response<br><br><br>The response is a python dict with the following keys:<br><br>    pressed: True if the key was pressed, False if it was released<br>    key: Response pad key pressed by the subject<br>    port: Device port the response was from (typically 0)<br>    time: value of the Response Time timer when the key was hit/released<br><br><br>StimTracker<br><br>Support for Cedrus StimTracker devices is now included.  On StimTracker<br>devices, there are the following methods:<br><br>    set_pulse_duration()<br>    activate_line()<br>    clear_line()<br><br>See the docstring for activate_line() for documentation on how to use it.<br><br>These methods are not available if the device is a response pad.<br><br>StimTracker is used in software such as SuperLab, Presentation and ePrime<br>for sending event markers.<br><br><br>Timers<br><br>Each Cedrus XID device has an internal timer a Base Timer and a<br>Response Time Timer.  The Base Timer should be reset at the start of<br>an experiment.  The Response Time timer should be reset whenever a<br>stimulus is presented.<br><br>At the time of this library release, there is a known issue with clock<br>drift in XID devices.  Our hardware/firmware developer is currently<br>looking into the issue.  <br><br>Given the issue, use of the response timer built into the response<br>pads is optional.  If you wish to use the time reported from the<br>response pads, do the following after importing the pyxid library:<br><br>    import pyxid<br>    pyxid.use_response_pad_timer = True<br><br>This will return the time in the 'time' field of the dict returned by<br>XidDevice.get_next_response(), otherwise, the 'time' field will<br>contain 0.<br><br>Windows Specific Issues<br><br>Sometimes, windows fails at detecting XID devices.  Running<br>detect_xid_devices() a second time should result in finding the<br>devices.\n          </div>"}, "last_serial": 5194375, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e86e89d2413e489d4480b47c8f78ef32", "sha256": "fbb1ac46f335ad8c124f99fd32d2492594312157fb2f58dfb11b8928ee8fba78"}, "downloads": -1, "filename": "pyxid-1.0.tar.gz", "has_sig": false, "md5_digest": "e86e89d2413e489d4480b47c8f78ef32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9690, "upload_time": "2011-03-30T19:52:28", "upload_time_iso_8601": "2011-03-30T19:52:28.603054Z", "url": "https://files.pythonhosted.org/packages/4e/63/a473175a5ad75b602e186ed7cc45aafacff8b4cfee73c42772310f4313bf/pyxid-1.0.tar.gz", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "c0b6bcac44acdcfbf9611b27f297a015", "sha256": "17696d66acafc2681ee61129600235038a95b531e9be6a9c0794ed384f41af63"}, "downloads": -1, "filename": "pyxid-1.0b3.tar.gz", "has_sig": false, "md5_digest": "c0b6bcac44acdcfbf9611b27f297a015", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6175, "upload_time": "2010-11-16T19:14:07", "upload_time_iso_8601": "2010-11-16T19:14:07.938985Z", "url": "https://files.pythonhosted.org/packages/96/dc/093efd37e6a1eefcbee35ad1e0ea537a2c23ebf1688eb599e1316d543aa0/pyxid-1.0b3.tar.gz", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "5b9f2c7c09ea11678dc6189fc82257d7", "sha256": "86bceb21a8f7b6fb3bfd9fa4e711f59ffcaab39dfc0011a1625bf7c4848b99dc"}, "downloads": -1, "filename": "pyxid-1.0b4.tar.gz", "has_sig": false, "md5_digest": "5b9f2c7c09ea11678dc6189fc82257d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9217, "upload_time": "2010-12-08T20:36:31", "upload_time_iso_8601": "2010-12-08T20:36:31.679254Z", "url": "https://files.pythonhosted.org/packages/a9/fd/834bb9cef2eb4bdd31bf470f3baa1f5f21c14bf6638f537077ca43efaf6d/pyxid-1.0b4.tar.gz", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "de18f7cedfb0d03fbb3c34c9a40099b3", "sha256": "6fad2e1e5c209c3f7a76a034d89a20f01c67d91487fc89a5a773a4c7884b97e1"}, "downloads": -1, "filename": "pyxid-1.0b5.tar.gz", "has_sig": false, "md5_digest": "de18f7cedfb0d03fbb3c34c9a40099b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9511, "upload_time": "2010-12-15T01:38:17", "upload_time_iso_8601": "2010-12-15T01:38:17.501944Z", "url": "https://files.pythonhosted.org/packages/48/01/9c8aa5ab3f761163ac5106c246693cf9127775951ae387c529b124f98339/pyxid-1.0b5.tar.gz", "yanked": false}], "1.0b6": [{"comment_text": "", "digests": {"md5": "aceb3e7cdcdc66a76f7538608b5ddfb1", "sha256": "fcfc0703bdc71b935bb29a14b2b8eb84ed4a654bc7b4d815a13c00adec123e70"}, "downloads": -1, "filename": "pyxid-1.0b6.tar.gz", "has_sig": false, "md5_digest": "aceb3e7cdcdc66a76f7538608b5ddfb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9502, "upload_time": "2010-12-15T01:40:04", "upload_time_iso_8601": "2010-12-15T01:40:04.031678Z", "url": "https://files.pythonhosted.org/packages/1d/df/642eb6c940b0b67226e07f3f85250f3933be65adc6bd7af2fd7e15b88241/pyxid-1.0b6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e86e89d2413e489d4480b47c8f78ef32", "sha256": "fbb1ac46f335ad8c124f99fd32d2492594312157fb2f58dfb11b8928ee8fba78"}, "downloads": -1, "filename": "pyxid-1.0.tar.gz", "has_sig": false, "md5_digest": "e86e89d2413e489d4480b47c8f78ef32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9690, "upload_time": "2011-03-30T19:52:28", "upload_time_iso_8601": "2011-03-30T19:52:28.603054Z", "url": "https://files.pythonhosted.org/packages/4e/63/a473175a5ad75b602e186ed7cc45aafacff8b4cfee73c42772310f4313bf/pyxid-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:57 2020"}