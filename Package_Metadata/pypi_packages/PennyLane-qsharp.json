{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Physics"], "description": "PennyLane Q# Plugin\n###################\n\n.. image:: https://img.shields.io/readthedocs/pennylane-qsharp.svg?style=for-the-badge\n  :target: https://pennylane-qsharp.readthedocs.io\n  :alt: Documentation\n\nContains the PennyLane Q# plugin. This plugin allows the full state simulator from the Microsoft Quantum Development Toolkit\ndevices to work with PennyLane.\n\n`The Microsoft Quantum Development Kit <https://www.microsoft.com/en-us/quantum/development-kit>`_ is an open-source\nlibrary for quantum programming using the .NET Q# quantum programming language. Resulting quantum programs\ncan be executed using built in local simulators, or via the cloud-based Azure quantum simulator.\n\n`PennyLane <https://pennylane.readthedocs.io>`_ is a machine learning library for optimization and\nautomatic differentiation of hybrid quantum-classical computations.\n\n\nFeatures\n========\n\n* Provides a Microsoft QDK device to be used with PennyLane: ``microsoft.QuantumSimulator``.\n  This provides access to the local full state simulator.\n\n\n* All provided devices support all core qubit PennyLane operations and observables.\n\n\n* Provides custom PennyLane operations to cover additional Q# operations, including\n  ``T``, ``S``, ``ISWAP``, ``CCNOT``, ``PSWAP``, and many more. Every custom operation\n  supports analytic differentiation.\n\n\n* Combine Microsoft Azure quantum simulators with PennyLane's automatic differentiation and optimization.\n\n\nInstallation\n============\n\nPennyLane-qsharp requires both PennyLane and the Microsoft Quantum Development Kit. To install the\nMicrosoft QDK and IQ#, `see the intruction details <https://docs.microsoft.com/en-us/quantum/install-guide/index?view=qsharp-preview>`_\nprovided by Microsoft.\n\nOnce the QDK is installed, you can install PennyLane-qsharp via ``pip``:\n\n.. code-block:: bash\n\n    $ python -m pip install pennylane-qsharp\n\n\nGetting started\n===============\n\nOnce the PennyLane Q# plugin is installed, the provided QDK devices can be accessed straight away in PennyLane.\n\nYou can instantiate provided devices for PennyLane as follows:\n\n.. code-block:: python\n\n    import pennylane as qml\n    dev = qml.device('microsoft.QuantumSimulator', wires=2, shots=1000)\n\nThese devices can then be used just like other devices for the definition and evaluation of QNodes within PennyLane.\nFor more details, refer to the PennyLane documentation.\n\n\nContributing\n============\n\nWe welcome contributions - simply fork the PennyLane-qsharp repository, and then make a\n`pull request <https://help.github.com/articles/about-pull-requests/>`_ containing your contribution.\n\nAll contributers to PennyLane-qsharp will be listed as authors on the releases.\n\nWe also encourage bug reports, suggestions for new features and enhancements, and even links to cool projects or\napplications built on PennyLane and the Microsoft QDK.\n\n\nAuthors\n=======\n\n`Josh Izaac <https://github.com/josh146>`_\n\n\nSupport\n=======\n\n- **Source Code:** https://github.com/XanaduAI/pennylane-qsharp\n- **Issue Tracker:** https://github.com/XanaduAI/pennylane-qsharp/issues\n\nIf you are having issues, please let us know by posting the issue on our Github issue tracker.\n\n\nLicense\n=======\n\nPennyLane-qsharp is **free** and **open source**, released under the Apache License, Version 2.0.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/XanaduAI/pennylane-qsharp", "keywords": "", "license": "Apache License 2.0", "maintainer": "Xanadu Inc.", "maintainer_email": "josh@xanadu.ai", "name": "PennyLane-qsharp", "package_url": "https://pypi.org/project/PennyLane-qsharp/", "platform": "", "project_url": "https://pypi.org/project/PennyLane-qsharp/", "project_urls": {"Homepage": "https://github.com/XanaduAI/pennylane-qsharp"}, "release_url": "https://pypi.org/project/PennyLane-qsharp/0.8.0/", "requires_dist": ["qsharp", "pennylane (>=0.4)"], "requires_python": "", "summary": "Microsoft Quantum Development Kit backend for PennyLane", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pennylane-qsharp.readthedocs.io\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58a609baeaa61f4dff4c5907d37290806d53d999/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f70656e6e796c616e652d7173686172702e7376673f7374796c653d666f722d7468652d6261646765\"></a>\n<p>Contains the PennyLane Q# plugin. This plugin allows the full state simulator from the Microsoft Quantum Development Toolkit\ndevices to work with PennyLane.</p>\n<p><a href=\"https://www.microsoft.com/en-us/quantum/development-kit\" rel=\"nofollow\">The Microsoft Quantum Development Kit</a> is an open-source\nlibrary for quantum programming using the .NET Q# quantum programming language. Resulting quantum programs\ncan be executed using built in local simulators, or via the cloud-based Azure quantum simulator.</p>\n<p><a href=\"https://pennylane.readthedocs.io\" rel=\"nofollow\">PennyLane</a> is a machine learning library for optimization and\nautomatic differentiation of hybrid quantum-classical computations.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Provides a Microsoft QDK device to be used with PennyLane: <tt>microsoft.QuantumSimulator</tt>.\nThis provides access to the local full state simulator.</li>\n<li>All provided devices support all core qubit PennyLane operations and observables.</li>\n<li>Provides custom PennyLane operations to cover additional Q# operations, including\n<tt>T</tt>, <tt>S</tt>, <tt>ISWAP</tt>, <tt>CCNOT</tt>, <tt>PSWAP</tt>, and many more. Every custom operation\nsupports analytic differentiation.</li>\n<li>Combine Microsoft Azure quantum simulators with PennyLane\u2019s automatic differentiation and optimization.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>PennyLane-qsharp requires both PennyLane and the Microsoft Quantum Development Kit. To install the\nMicrosoft QDK and IQ#, <a href=\"https://docs.microsoft.com/en-us/quantum/install-guide/index?view=qsharp-preview\" rel=\"nofollow\">see the intruction details</a>\nprovided by Microsoft.</p>\n<p>Once the QDK is installed, you can install PennyLane-qsharp via <tt>pip</tt>:</p>\n<pre>$ python -m pip install pennylane-qsharp\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Once the PennyLane Q# plugin is installed, the provided QDK devices can be accessed straight away in PennyLane.</p>\n<p>You can instantiate provided devices for PennyLane as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pennylane</span> <span class=\"k\">as</span> <span class=\"nn\">qml</span>\n<span class=\"n\">dev</span> <span class=\"o\">=</span> <span class=\"n\">qml</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">(</span><span class=\"s1\">'microsoft.QuantumSimulator'</span><span class=\"p\">,</span> <span class=\"n\">wires</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">shots</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n</pre>\n<p>These devices can then be used just like other devices for the definition and evaluation of QNodes within PennyLane.\nFor more details, refer to the PennyLane documentation.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>We welcome contributions - simply fork the PennyLane-qsharp repository, and then make a\n<a href=\"https://help.github.com/articles/about-pull-requests/\" rel=\"nofollow\">pull request</a> containing your contribution.</p>\n<p>All contributers to PennyLane-qsharp will be listed as authors on the releases.</p>\n<p>We also encourage bug reports, suggestions for new features and enhancements, and even links to cool projects or\napplications built on PennyLane and the Microsoft QDK.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p><a href=\"https://github.com/josh146\" rel=\"nofollow\">Josh Izaac</a></p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<ul>\n<li><strong>Source Code:</strong> <a href=\"https://github.com/XanaduAI/pennylane-qsharp\" rel=\"nofollow\">https://github.com/XanaduAI/pennylane-qsharp</a></li>\n<li><strong>Issue Tracker:</strong> <a href=\"https://github.com/XanaduAI/pennylane-qsharp/issues\" rel=\"nofollow\">https://github.com/XanaduAI/pennylane-qsharp/issues</a></li>\n</ul>\n<p>If you are having issues, please let us know by posting the issue on our Github issue tracker.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>PennyLane-qsharp is <strong>free</strong> and <strong>open source</strong>, released under the Apache License, Version 2.0.</p>\n</div>\n\n          </div>"}, "last_serial": 6546092, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5c65f525d707e8df40b91622d0292f8b", "sha256": "075d65ecc5173259a91f32569eec8990e3c20ba56352cdd163bcbf7274e73c01"}, "downloads": -1, "filename": "PennyLane_qsharp-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5c65f525d707e8df40b91622d0292f8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10819, "upload_time": "2019-04-24T18:09:22", "upload_time_iso_8601": "2019-04-24T18:09:22.950524Z", "url": "https://files.pythonhosted.org/packages/bb/8a/febe541dc9e533233b5fe533180ac41aacf2c318d2af0cb66c08a38cda76/PennyLane_qsharp-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "706ddb5737c26b1e060a16b1f130463c", "sha256": "503e064c5304f99ffe6b586cfefefa8acc70315d2defd25c3265aba0313724e8"}, "downloads": -1, "filename": "PennyLane-qsharp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "706ddb5737c26b1e060a16b1f130463c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5618, "upload_time": "2019-04-24T18:09:26", "upload_time_iso_8601": "2019-04-24T18:09:26.298778Z", "url": "https://files.pythonhosted.org/packages/2b/f0/559c7c912b31e1c110976d864a93e1cf158ebd885b42fb4461f6ca509530/PennyLane-qsharp-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2ef6f249aa513bd630a51a04cbb94c2a", "sha256": "5c6f9821b2037474c0492930a3080010208f6d4e131659554ba66ef08b31fc2a"}, "downloads": -1, "filename": "PennyLane-qsharp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2ef6f249aa513bd630a51a04cbb94c2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5702, "upload_time": "2019-06-29T10:08:36", "upload_time_iso_8601": "2019-06-29T10:08:36.865872Z", "url": "https://files.pythonhosted.org/packages/24/d3/09f804dc38037c140ce48796aa20ee2e7469c69b566a940bcfb9b32835ce/PennyLane-qsharp-0.2.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "9ff425bce4f96c47e4771477e43f1e6c", "sha256": "57c26196dbc2dfa3751f846e2e6371df520ebfa100109453dc40c057511705e6"}, "downloads": -1, "filename": "PennyLane_qsharp-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9ff425bce4f96c47e4771477e43f1e6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12681, "upload_time": "2019-11-19T22:56:30", "upload_time_iso_8601": "2019-11-19T22:56:30.503674Z", "url": "https://files.pythonhosted.org/packages/af/84/84eed1d07e8b59786ddc7038abb3230b2319df62a510715233164b5117a5/PennyLane_qsharp-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6826d4ddc69853e908bf909bd16d042c", "sha256": "8b9cc5d9eae6735b9b248dca97eb644ce6eced7d765c118ffdfa0b44105fd4a0"}, "downloads": -1, "filename": "PennyLane-qsharp-0.6.0.tar.gz", "has_sig": false, "md5_digest": "6826d4ddc69853e908bf909bd16d042c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5752, "upload_time": "2019-11-19T22:56:07", "upload_time_iso_8601": "2019-11-19T22:56:07.266314Z", "url": "https://files.pythonhosted.org/packages/e2/42/49dfcf5930c3546a7e21ecb6a2b82a2cd789d78604c64098d9e9fa39cb0e/PennyLane-qsharp-0.6.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "21447a96f0c4740b999fffe933c5ffd7", "sha256": "5a2b03795be9905fbfde01c9aa126a3579fd09cd2f71660ef57fb171d7a708ee"}, "downloads": -1, "filename": "PennyLane_qsharp-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "21447a96f0c4740b999fffe933c5ffd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14766, "upload_time": "2020-01-30T22:36:51", "upload_time_iso_8601": "2020-01-30T22:36:51.967010Z", "url": "https://files.pythonhosted.org/packages/3f/44/ead64971331b89d8c6d1a212ad7af54d71593acbc21b00e3fc330406f80c/PennyLane_qsharp-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f751ff4cf879d266657b7f67c392c6c", "sha256": "56f7f30f6e4d95408333578c4a9779df3b1ba091d1bfdfc181fe966d100f39a6"}, "downloads": -1, "filename": "PennyLane-qsharp-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2f751ff4cf879d266657b7f67c392c6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5984, "upload_time": "2020-01-30T22:36:53", "upload_time_iso_8601": "2020-01-30T22:36:53.150831Z", "url": "https://files.pythonhosted.org/packages/02/79/5e47566261d316a05f6e27da61c2b914b8d3b9c8a4bf26ef8a671ab1548c/PennyLane-qsharp-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21447a96f0c4740b999fffe933c5ffd7", "sha256": "5a2b03795be9905fbfde01c9aa126a3579fd09cd2f71660ef57fb171d7a708ee"}, "downloads": -1, "filename": "PennyLane_qsharp-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "21447a96f0c4740b999fffe933c5ffd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14766, "upload_time": "2020-01-30T22:36:51", "upload_time_iso_8601": "2020-01-30T22:36:51.967010Z", "url": "https://files.pythonhosted.org/packages/3f/44/ead64971331b89d8c6d1a212ad7af54d71593acbc21b00e3fc330406f80c/PennyLane_qsharp-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f751ff4cf879d266657b7f67c392c6c", "sha256": "56f7f30f6e4d95408333578c4a9779df3b1ba091d1bfdfc181fe966d100f39a6"}, "downloads": -1, "filename": "PennyLane-qsharp-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2f751ff4cf879d266657b7f67c392c6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5984, "upload_time": "2020-01-30T22:36:53", "upload_time_iso_8601": "2020-01-30T22:36:53.150831Z", "url": "https://files.pythonhosted.org/packages/02/79/5e47566261d316a05f6e27da61c2b914b8d3b9c8a4bf26ef8a671ab1548c/PennyLane-qsharp-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:30 2020"}