{"info": {"author": "Adam J. Stewart", "author_email": "ajstewart426@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Office/Business :: Scheduling"], "description": ".. image:: https://travis-ci.org/adamjstewart/fiscalyear.svg?branch=master\n   :target: https://travis-ci.org/adamjstewart/fiscalyear\n\n.. image:: https://codecov.io/gh/adamjstewart/fiscalyear/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/adamjstewart/fiscalyear\n\n.. image:: https://readthedocs.org/projects/fiscalyear/badge/?version=latest\n   :target: https://fiscalyear.readthedocs.io\n\n.. image:: https://badge.fury.io/py/fiscalyear.svg\n   :target: https://pypi.org/project/fiscalyear/\n\n.. image:: https://anaconda.org/conda-forge/fiscalyear/badges/version.svg\n   :target: https://anaconda.org/conda-forge/fiscalyear\n\n\nOverview\n========\n\n`fiscalyear <https://github.com/adamjstewart/fiscalyear>`_ is a small, lightweight Python module providing helpful utilities for managing the fiscal calendar. It is designed as an extension of the built-in `datetime <https://docs.python.org/3/library/datetime.html>`_ and `calendar <https://docs.python.org/3/library/calendar.html>`_ modules, adding the ability to query the fiscal year and fiscal quarter of a date or datetime object.\n\n\nBasic Usage\n===========\n\n``fiscalyear`` provides several useful classes.\n\nFiscalYear\n----------\n\nThe ``FiscalYear`` class provides an object for storing information about the start and end of a particular fiscal year.\n\n.. code-block:: python\n\n   >>> from fiscalyear import *\n   >>> a = FiscalYear(2017)\n   >>> a.start\n   FiscalDateTime(2016, 10, 1, 0, 0)\n   >>> a.end\n   FiscalDateTime(2017, 9, 30, 23, 59, 59)\n\nYou can also get the current ``FiscalYear`` with:\n\n.. code-block:: python\n\n   >>> FiscalYear.current()\n   FiscalYear(2018)\n\nFiscalQuarter\n-------------\n\nThe ``FiscalYear`` class also allows you to query information about a specific quarter.\n\n.. code-block:: python\n\n   >>> a.q3.start\n   FiscalDateTime(2017, 4, 1, 0, 0)\n   >>> a.q3.end\n   FiscalDateTime(2017, 6, 30, 23, 59, 59)\n\n\nThese objects represent the standalone ``FiscalQuarter`` class.\n\n.. code-block:: python\n\n   >>> b = FiscalQuarter(2017, 3)\n   >>> b.start\n   FiscalDateTime(2017, 4, 1, 0, 0)\n   >>> b.end\n   FiscalDateTime(2017, 6, 30, 23, 59, 59)\n   >>> a.q3 == b\n   True\n   >>> b in a\n   True\n\nYou can also get the current ``FiscalQuarter`` with:\n\n.. code-block:: python\n\n   >>> FiscalQuarter.current()\n   FiscalQuarter(2018, 2)\n\nFiscalDateTime\n--------------\n\nThe start and end of each quarter are stored as instances of the ``FiscalDateTime`` class. This class provides all of the same features as the ``datetime`` class, with the addition of the ability to query the fiscal year and quarter.\n\n.. code-block:: python\n\n   >>> c = FiscalDateTime.now()\n   >>> c\n   FiscalDateTime(2017, 4, 8, 20, 30, 31, 105323)\n   >>> c.fiscal_year\n   2017\n   >>> c.quarter\n   3\n   >>> c.next_quarter\n   FiscalQuarter(2017, 4)\n\n\nFiscalDate\n----------\n\nIf you don't care about the time component of the ``FiscalDateTime`` class, the ``FiscalDate`` class is right for you.\n\n.. code-block:: python\n\n   >>> d = FiscalDate.today()\n   >>> d\n   FiscalDate(2017, 4, 8)\n   >>> d.fiscal_year\n   2017\n   >>> d.prev_fiscal_year\n   FiscalYear(2016)\n\n\nInstallation\n============\n\n``fiscalyear`` has no dependencies, making it simple and easy to install. The recommended way to install ``fiscalyear`` is with ``pip``.\n\n.. code-block:: console\n\n   $ pip install fiscalyear\n\n\nFor alternate installation methods, see the `Installation Documentation <http://fiscalyear.readthedocs.io/en/latest/installation.html>`_.\n\n\nDocumentation\n=============\n\nDocumentation is hosted on `Read the Docs <http://fiscalyear.readthedocs.io/en/latest/index.html>`_.\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/adamjstewart/fiscalyear/archive/v0.2.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adamjstewart/fiscalyear", "keywords": "fiscal year", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fiscalyear", "package_url": "https://pypi.org/project/fiscalyear/", "platform": "", "project_url": "https://pypi.org/project/fiscalyear/", "project_urls": {"Download": "https://github.com/adamjstewart/fiscalyear/archive/v0.2.0.tar.gz", "Homepage": "https://github.com/adamjstewart/fiscalyear"}, "release_url": "https://pypi.org/project/fiscalyear/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Utilities for managing the fiscal calendar", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/adamjstewart/fiscalyear\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/adamjstewart/fiscalyear.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e35723531f83d4501ed6d79a3a9468f6b55da1a2/68747470733a2f2f7472617669732d63692e6f72672f6164616d6a737465776172742f66697363616c796561722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/adamjstewart/fiscalyear\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/adamjstewart/fiscalyear/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e44c3a06b651363bef4bea0168745903070c30fc/68747470733a2f2f636f6465636f762e696f2f67682f6164616d6a737465776172742f66697363616c796561722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://fiscalyear.readthedocs.io\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/fiscalyear/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3f37118fea33fc6569e5f42aea233029d1e1c5f7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f66697363616c796561722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pypi.org/project/fiscalyear/\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/fiscalyear.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bca77acd517f5c051277d079ae07d0986ad65024/68747470733a2f2f62616467652e667572792e696f2f70792f66697363616c796561722e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/fiscalyear\" rel=\"nofollow\"><img alt=\"https://anaconda.org/conda-forge/fiscalyear/badges/version.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3c24719ba1bef483c19932ea61e5018cd431af3/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f66697363616c796561722f6261646765732f76657273696f6e2e737667\"></a>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p><a href=\"https://github.com/adamjstewart/fiscalyear\" rel=\"nofollow\">fiscalyear</a> is a small, lightweight Python module providing helpful utilities for managing the fiscal calendar. It is designed as an extension of the built-in <a href=\"https://docs.python.org/3/library/datetime.html\" rel=\"nofollow\">datetime</a> and <a href=\"https://docs.python.org/3/library/calendar.html\" rel=\"nofollow\">calendar</a> modules, adding the ability to query the fiscal year and fiscal quarter of a date or datetime object.</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p><tt>fiscalyear</tt> provides several useful classes.</p>\n<div id=\"id1\">\n<h3>FiscalYear</h3>\n<p>The <tt>FiscalYear</tt> class provides an object for storing information about the start and end of a particular fiscal year.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">fiscalyear</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">FiscalYear</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">start</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">end</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">)</span>\n</pre>\n<p>You can also get the current <tt>FiscalYear</tt> with:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">FiscalYear</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">()</span>\n<span class=\"n\">FiscalYear</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"fiscalquarter\">\n<h3>FiscalQuarter</h3>\n<p>The <tt>FiscalYear</tt> class also allows you to query information about a specific quarter.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">q3</span><span class=\"o\">.</span><span class=\"n\">start</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">q3</span><span class=\"o\">.</span><span class=\"n\">end</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">)</span>\n</pre>\n<p>These objects represent the standalone <tt>FiscalQuarter</tt> class.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">FiscalQuarter</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">start</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">end</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">q3</span> <span class=\"o\">==</span> <span class=\"n\">b</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"n\">a</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>You can also get the current <tt>FiscalQuarter</tt> with:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">FiscalQuarter</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">()</span>\n<span class=\"n\">FiscalQuarter</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"fiscaldatetime\">\n<h3>FiscalDateTime</h3>\n<p>The start and end of each quarter are stored as instances of the <tt>FiscalDateTime</tt> class. This class provides all of the same features as the <tt>datetime</tt> class, with the addition of the ability to query the fiscal year and quarter.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">FiscalDateTime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span>\n<span class=\"n\">FiscalDateTime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">105323</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">fiscal_year</span>\n<span class=\"mi\">2017</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">quarter</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">next_quarter</span>\n<span class=\"n\">FiscalQuarter</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"fiscaldate\">\n<h3>FiscalDate</h3>\n<p>If you don\u2019t care about the time component of the <tt>FiscalDateTime</tt> class, the <tt>FiscalDate</tt> class is right for you.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">FiscalDate</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span>\n<span class=\"n\">FiscalDate</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">fiscal_year</span>\n<span class=\"mi\">2017</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">prev_fiscal_year</span>\n<span class=\"n\">FiscalYear</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>fiscalyear</tt> has no dependencies, making it simple and easy to install. The recommended way to install <tt>fiscalyear</tt> is with <tt>pip</tt>.</p>\n<pre><span class=\"gp\">$</span> pip install fiscalyear\n</pre>\n<p>For alternate installation methods, see the <a href=\"http://fiscalyear.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">Installation Documentation</a>.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation is hosted on <a href=\"http://fiscalyear.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">Read the Docs</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6032710, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "30e36b259f3e72e4929abbf259335742", "sha256": "3fde4a12eeb72da446beb487e078adf1223a92d130520e589b82d7d1509701a2"}, "downloads": -1, "filename": "fiscalyear-0.1.0.tar.gz", "has_sig": false, "md5_digest": "30e36b259f3e72e4929abbf259335742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5808, "upload_time": "2017-04-17T02:50:42", "upload_time_iso_8601": "2017-04-17T02:50:42.227654Z", "url": "https://files.pythonhosted.org/packages/1c/ad/1a278fd76462483cb22eee2eea4411ed44117a9cff3a0fcb5f0d8b82fcf5/fiscalyear-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ef16ad4b13f24f10fb56328e227f367f", "sha256": "f513616aeb03046406c56d7c69cd9e26f6a12963c71c1410cc3d4532a5bfee71"}, "downloads": -1, "filename": "fiscalyear-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ef16ad4b13f24f10fb56328e227f367f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6965, "upload_time": "2019-10-26T03:09:21", "upload_time_iso_8601": "2019-10-26T03:09:21.374705Z", "url": "https://files.pythonhosted.org/packages/97/d2/8e67500043411e498f55e5c8a962f68dfda6a54c3098ff98154e111c8ac3/fiscalyear-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef16ad4b13f24f10fb56328e227f367f", "sha256": "f513616aeb03046406c56d7c69cd9e26f6a12963c71c1410cc3d4532a5bfee71"}, "downloads": -1, "filename": "fiscalyear-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ef16ad4b13f24f10fb56328e227f367f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6965, "upload_time": "2019-10-26T03:09:21", "upload_time_iso_8601": "2019-10-26T03:09:21.374705Z", "url": "https://files.pythonhosted.org/packages/97/d2/8e67500043411e498f55e5c8a962f68dfda6a54c3098ff98154e111c8ac3/fiscalyear-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:08 2020"}