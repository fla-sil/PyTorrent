{"info": {"author": "Chidi Matthew Orji", "author_email": "orjichidi95@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Browsers"], "description": "# pywebber\n\nPython Web Development Tools\n\n![Alt text](https://img.shields.io/badge/py__webber-stable-blue.svg)\n\n## Utilities\n\n1. Link and words harvester [Ripper](https://pywebber.readthedocs.io/en/latest/#pageripper)\n\n1. Text generator [LoremPysum](https://pywebber.readthedocs.io/en/latest/#lorempysum)\n\n## Installation\n\n    pip install pywebber --upgrade\n    pip install https://github.com/Parousiaic/pywebber/archive/master.zip\n\n## Usage\n\n### Ripper - harvest words and links on a static web page.\n\n    $ from pywebber import Ripper\n\nAccess words and links is easy\n\n    $ page = Ripper('http://python.org')\n    $ soup = page.soup\n    $ uncleaned_links = page.raw_links # all raw <a> tags on page as bs4 objects\n    $ cleaned_links = page.links() # generator of all links in the form `http://www.domain.location`\n    $ words = page.words() # a generator of words between <p> tags\n\nThe following instance creation options are available\n\n1. `url` : Default to `url=\"http://python.org\"`\n1. `parser` : Default to `parser=\"html.parser\"`. To see a complete list of parsers, user `object_instance.parsers`\n1. `refresh`: Default to `refresh=False`. The first time `Ripper` hits a page, it saves the scrapped content in a text file from\n which consequent calling of the class reads. But if set to `True`, `Ripper` will hit the site to get its data\nconstruct its object each time its called.\n1. `save_path` : Default to `save_path=None`. In this case, `Ripper` creates a folder on your `USER DESKTOP`. This folder name\n is in the format `domainName_extension`. Every page scrapped from that site is saved inside this foler. Its also possible to\nset `save_path=/some/other/path`. The save file name is of the format `page_url.txt`\n1. `split_string` : Defaults to `string.punctuation.extend([\"n\", \" \", \"://\",])`. You can supply a list to add to this set.\n1. `stop_words` : Defaults to `['', '#', '\\n', 'the', 'to', \"but\", \"and\"]`. These are words that should not be included when\n`object_instance.words()` is called. You can supply a list to add to this set.\n\n### LoremPysum - Generate random texts\n\n    $ from pywebber import LoremPysum\n\nCreate a single LoremPysum instance with default Lorem Ipsum text\n\n    $ p = LoremPysum(*args, domains=None, lorem=True)\n\nYou can also decide to include your words with the standard lorem ipsum text. But if you want your words only simply pass `lorem=False` like this ::\n\n    $ p = LoremPysum(*args, domains=None, lorem=False)\n\n`*args` is an optional list of files from which to get the words to be used. Just pass any number of text files as shown below\n\n    $ p = LoremPysum(\"file1_path.txt1\", \"file2_path.txt\", domains=None, lorem=True)\n\nThe following methods are defined\n\n    $ p.email() # return a single email address. You could pass in a file for list of domains. Defaults are `[\".com\", \".info\", \".net\", \".org\"]`\n    $ p.name() # return a name in the form \"firstname I. lastname\".\n    $ p.sentence() # generate a single sentence.\n    $ p.paragraphs() # return a single paragraph of standard Lorem Ipsum text.\n    $ p.paragraphs(count=3) # return 3 paragraphs where the first paragraph is the standard text.\n    $ p.paragraphs(common=False) # return a single paragraph where the first paragraph is random.\n    $ p.title() # generate a string (title case) with 2 to n words. Defaults is 5. Good for article titles.\n\nIn case you want to look into the words used, the following instance attributes are defined. ::\n\n    $ p.common # A list of the first few words in the lorem ipsum text\n    $ p.words # A list of all the words in the lorem ipsum text.\n    $ p.standard # Standard lorem ipsum text. Usually the first 1/3rd portion of a sample file.\n    $ p.domains # list of domain name endings\n\n## Code\n\n## Credits\n\n1. [Luca De Vitis](http://loremipsum.readthedocs.io/en/latest/) for the inspiration and starter code for `LoremPysum`\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://codeload.github.com/immensity/pywebber/zip/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/immensity/pywebber", "keywords": "web crawler,lorem ipsum text generator,page indexer", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pywebber", "package_url": "https://pypi.org/project/pywebber/", "platform": "", "project_url": "https://pypi.org/project/pywebber/", "project_urls": {"Download": "https://codeload.github.com/immensity/pywebber/zip/master", "Homepage": "https://github.com/immensity/pywebber"}, "release_url": "https://pypi.org/project/pywebber/5.0/", "requires_dist": ["beautifulsoup4 (==4.6.0)", "requests (==2.18.4)"], "requires_python": "", "summary": "Common tools employed in web development", "version": "5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # pywebber<br><br>Python Web Development Tools<br><br>![Alt text](https://img.shields.io/badge/py__webber-stable-blue.svg)<br><br>## Utilities<br><br>1. Link and words harvester [Ripper](https://pywebber.readthedocs.io/en/latest/#pageripper)<br><br>1. Text generator [LoremPysum](https://pywebber.readthedocs.io/en/latest/#lorempysum)<br><br>## Installation<br><br>    pip install pywebber --upgrade<br>    pip install https://github.com/Parousiaic/pywebber/archive/master.zip<br><br>## Usage<br><br>### Ripper - harvest words and links on a static web page.<br><br>    $ from pywebber import Ripper<br><br>Access words and links is easy<br><br>    $ page = Ripper('http://python.org')<br>    $ soup = page.soup<br>    $ uncleaned_links = page.raw_links # all raw &lt;a&gt; tags on page as bs4 objects<br>    $ cleaned_links = page.links() # generator of all links in the form `http://www.domain.location`<br>    $ words = page.words() # a generator of words between &lt;p&gt; tags<br><br>The following instance creation options are available<br><br>1. `url` : Default to `url=\"http://python.org\"`<br>1. `parser` : Default to `parser=\"html.parser\"`. To see a complete list of parsers, user `object_instance.parsers`<br>1. `refresh`: Default to `refresh=False`. The first time `Ripper` hits a page, it saves the scrapped content in a text file from<br> which consequent calling of the class reads. But if set to `True`, `Ripper` will hit the site to get its data<br>construct its object each time its called.<br>1. `save_path` : Default to `save_path=None`. In this case, `Ripper` creates a folder on your `USER DESKTOP`. This folder name<br> is in the format `domainName_extension`. Every page scrapped from that site is saved inside this foler. Its also possible to<br>set `save_path=/some/other/path`. The save file name is of the format `page_url.txt`<br>1. `split_string` : Defaults to `string.punctuation.extend([\"n\", \" \", \"://\",])`. You can supply a list to add to this set.<br>1. `stop_words` : Defaults to `['', '#', '\\n', 'the', 'to', \"but\", \"and\"]`. These are words that should not be included when<br>`object_instance.words()` is called. You can supply a list to add to this set.<br><br>### LoremPysum - Generate random texts<br><br>    $ from pywebber import LoremPysum<br><br>Create a single LoremPysum instance with default Lorem Ipsum text<br><br>    $ p = LoremPysum(*args, domains=None, lorem=True)<br><br>You can also decide to include your words with the standard lorem ipsum text. But if you want your words only simply pass `lorem=False` like this ::<br><br>    $ p = LoremPysum(*args, domains=None, lorem=False)<br><br>`*args` is an optional list of files from which to get the words to be used. Just pass any number of text files as shown below<br><br>    $ p = LoremPysum(\"file1_path.txt1\", \"file2_path.txt\", domains=None, lorem=True)<br><br>The following methods are defined<br><br>    $ p.email() # return a single email address. You could pass in a file for list of domains. Defaults are `[\".com\", \".info\", \".net\", \".org\"]`<br>    $ p.name() # return a name in the form \"firstname I. lastname\".<br>    $ p.sentence() # generate a single sentence.<br>    $ p.paragraphs() # return a single paragraph of standard Lorem Ipsum text.<br>    $ p.paragraphs(count=3) # return 3 paragraphs where the first paragraph is the standard text.<br>    $ p.paragraphs(common=False) # return a single paragraph where the first paragraph is random.<br>    $ p.title() # generate a string (title case) with 2 to n words. Defaults is 5. Good for article titles.<br><br>In case you want to look into the words used, the following instance attributes are defined. ::<br><br>    $ p.common # A list of the first few words in the lorem ipsum text<br>    $ p.words # A list of all the words in the lorem ipsum text.<br>    $ p.standard # Standard lorem ipsum text. Usually the first 1/3rd portion of a sample file.<br>    $ p.domains # list of domain name endings<br><br>## Code<br><br>## Credits<br><br>1. [Luca De Vitis](http://loremipsum.readthedocs.io/en/latest/) for the inspiration and starter code for `LoremPysum`<br><br><br>\n          </div>"}, "last_serial": 3786889, "releases": {"4.0": [{"comment_text": "", "digests": {"md5": "f7e0cdac85a5b2d3c08a7c44d3f2b693", "sha256": "6775a9d61111420c87f6b589e001faba4fca5af1bb537792dae180d563ceb935"}, "downloads": -1, "filename": "pywebber-4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f7e0cdac85a5b2d3c08a7c44d3f2b693", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9939, "upload_time": "2018-02-22T05:45:27", "upload_time_iso_8601": "2018-02-22T05:45:27.051342Z", "url": "https://files.pythonhosted.org/packages/df/20/cde0b03b208433697915abcee3f3ce11fff2c88ad95046bdf5c12dda507a/pywebber-4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bbb5de815d990c66a1f1b3537480ec5", "sha256": "756a3cd38e8beb96b4f544fa4f4e424f918711aa373e15b355c1291d3f460768"}, "downloads": -1, "filename": "pywebber-4.0.tar.gz", "has_sig": false, "md5_digest": "8bbb5de815d990c66a1f1b3537480ec5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7576, "upload_time": "2018-02-22T05:45:29", "upload_time_iso_8601": "2018-02-22T05:45:29.055968Z", "url": "https://files.pythonhosted.org/packages/ae/92/02bcf1c3180052c45f1ae9dd6595ca8fbf2e87e4c12961da1a2bcbeb96ec/pywebber-4.0.tar.gz", "yanked": false}], "4.1": [{"comment_text": "", "digests": {"md5": "e5f1aceeb282a72134587b4792724986", "sha256": "c19028fbabef3ecf8d590bee66a2cb81b655731c08fd47574010de5972ddcc0b"}, "downloads": -1, "filename": "pywebber-4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5f1aceeb282a72134587b4792724986", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10052, "upload_time": "2018-03-24T19:48:11", "upload_time_iso_8601": "2018-03-24T19:48:11.110830Z", "url": "https://files.pythonhosted.org/packages/6a/ff/fa6183673c85e89f05272d317d052a2a81753fa642e8f4c3200f9e060e5a/pywebber-4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b61112cd53ac36ff33d5b33273b5f8c", "sha256": "f445c3b6b8149bdf2431f3aeccd09d06ec5095fd0b68359d324172861ecca81a"}, "downloads": -1, "filename": "pywebber-4.1.tar.gz", "has_sig": false, "md5_digest": "3b61112cd53ac36ff33d5b33273b5f8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7644, "upload_time": "2018-03-24T19:47:02", "upload_time_iso_8601": "2018-03-24T19:47:02.942469Z", "url": "https://files.pythonhosted.org/packages/41/a1/64938b039baa39d6228d5f7b3c6ba80f9e43beda8f13789844048c083426/pywebber-4.1.tar.gz", "yanked": false}], "5.0": [{"comment_text": "", "digests": {"md5": "b529f3da5467563221d2f7f04b6b816f", "sha256": "365ffadb99542aa9bacac2288835aef80e26d55b84e4ce0ac1357473c09bedb8"}, "downloads": -1, "filename": "pywebber-5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b529f3da5467563221d2f7f04b6b816f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9376, "upload_time": "2018-04-21T09:09:25", "upload_time_iso_8601": "2018-04-21T09:09:25.947553Z", "url": "https://files.pythonhosted.org/packages/98/c4/256367a8dfdf09d6e26f7f92cd07665bcbd7c14e6c88976de9e19f61047d/pywebber-5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51729fa0c3821de88f800e0a07466669", "sha256": "38062d3226e0f2f5b281d226dfad65d91618f31b2ae70c550f8214242d93d124"}, "downloads": -1, "filename": "pywebber-5.0.tar.gz", "has_sig": false, "md5_digest": "51729fa0c3821de88f800e0a07466669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9029, "upload_time": "2018-04-21T09:09:27", "upload_time_iso_8601": "2018-04-21T09:09:27.154474Z", "url": "https://files.pythonhosted.org/packages/08/8a/615383c5a3ff41a7ab33770982bb44db48f3aef224b41008ac8f8c6f971f/pywebber-5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b529f3da5467563221d2f7f04b6b816f", "sha256": "365ffadb99542aa9bacac2288835aef80e26d55b84e4ce0ac1357473c09bedb8"}, "downloads": -1, "filename": "pywebber-5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b529f3da5467563221d2f7f04b6b816f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9376, "upload_time": "2018-04-21T09:09:25", "upload_time_iso_8601": "2018-04-21T09:09:25.947553Z", "url": "https://files.pythonhosted.org/packages/98/c4/256367a8dfdf09d6e26f7f92cd07665bcbd7c14e6c88976de9e19f61047d/pywebber-5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51729fa0c3821de88f800e0a07466669", "sha256": "38062d3226e0f2f5b281d226dfad65d91618f31b2ae70c550f8214242d93d124"}, "downloads": -1, "filename": "pywebber-5.0.tar.gz", "has_sig": false, "md5_digest": "51729fa0c3821de88f800e0a07466669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9029, "upload_time": "2018-04-21T09:09:27", "upload_time_iso_8601": "2018-04-21T09:09:27.154474Z", "url": "https://files.pythonhosted.org/packages/08/8a/615383c5a3ff41a7ab33770982bb44db48f3aef224b41008ac8f8c6f971f/pywebber-5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:35 2020"}