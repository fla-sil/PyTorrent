{"info": {"author": "Danylo Ulianych", "author_email": "d.ulianych@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development"], "description": "# pytorch-mighty\n\nThe Mighty Monitor Trainer for your pytorch models.\n\n### Quick start\n\n1. Install [pytorch](https://pytorch.org/)\n2. `$ pip install pytorch-mighty`\n3. `$ visdom -port 8097` - start visdom server on port 8097\n4. In a separate terminal, run `python examples.py`\n5. Navigate to http://localhost:8097 to see the training progress.\n6. Check-out more examples on [http://85.217.171.57:8097](http://85.217.171.57:8097/). Give your browser a few minutes to parse the json data.\n\n\n### Articles, implemented in the package\n\n1. Fong, R. C., & Vedaldi, A. (2017). Interpretable explanations of black boxes by meaningful perturbation.\n    * Paper: https://arxiv.org/abs/1704.03296\n    * Used in: [`trainer/mask.py`](mighty/trainer/mask.py)\n\n2. Belghazi, M. I., Baratin, A., Rajeswar, S., Ozair, S., Bengio, Y., Courville, A., & Hjelm, R. D. (2018). Mine: mutual information neural estimation.\n    * Paper: https://arxiv.org/abs/1801.04062\n    * Used in: [`monitor/mutual_info/neural_estimation.py`](mighty/monitor/mutual_info/neural_estimation.py)\n\n3. Kraskov, A., St\u00f6gbauer, H., & Grassberger, P. (2004). Estimating mutual information.\n    * Paper: https://arxiv.org/abs/1208.4475\n    * Used in: [`monitor/mutual_info/npeet.py`](mighty/monitor/mutual_info/npeet.py)\n    * Original source code: https://github.com/gregversteeg/NPEET\n\n4. Ince, R. A., Giordano, B. L., Kayser, C., Rousselet, G. A., Gross, J., & Schyns, P. G. (2017). A statistical framework for neuroimaging data analysis based on mutual information estimated via a gaussian copula. Human brain mapping, 38(3), 1541-1573.\n    * Paper: http://dx.doi.org/10.1002/hbm.23471\n    * Used in [`monitor/mutual_info/gcmi.py`](mighty/monitor/mutual_info/gcmi.py)\n    * Original source code: https://github.com/robince/gcmi\n\n\n### Projects that use pytorch-mighty\n\n* [MCMC_BinaryNet](https://github.com/dizcza/MCMC_BinaryNet) - Markov Chain Monte Carlo binary networks optimization.\n* [EmbedderSDR](https://github.com/dizcza/EmbedderSDR) - encode images into binary Sparse Distributed Representation.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dizcza/pytorch-mighty", "keywords": "", "license": "BSD-3", "maintainer": "", "maintainer_email": "", "name": "pytorch-mighty", "package_url": "https://pypi.org/project/pytorch-mighty/", "platform": "", "project_url": "https://pypi.org/project/pytorch-mighty/", "project_urls": {"Homepage": "https://github.com/dizcza/pytorch-mighty"}, "release_url": "https://pypi.org/project/pytorch-mighty/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "The Mighty Monitor Trainer for your pytorch models.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># pytorch-mighty</p>\n<p>The Mighty Monitor Trainer for your pytorch models.</p>\n<p>### Quick start</p>\n<ol>\n<li>Install [pytorch](<a href=\"https://pytorch.org/\" rel=\"nofollow\">https://pytorch.org/</a>)</li>\n<li><cite>$ pip install pytorch-mighty</cite></li>\n<li><cite>$ visdom -port 8097</cite> - start visdom server on port 8097</li>\n<li>In a separate terminal, run <cite>python examples.py</cite></li>\n<li>Navigate to <a href=\"http://localhost:8097\" rel=\"nofollow\">http://localhost:8097</a> to see the training progress.</li>\n<li>Check-out more examples on [<a>http://85.217.171.57:8097](http://85.217.171.57:8097/</a>). Give your browser a few minutes to parse the json data.</li>\n</ol>\n<p>### Articles, implemented in the package</p>\n<ol>\n<li><dl>\n<dt>Fong, R. C., &amp; Vedaldi, A. (2017). Interpretable explanations of black boxes by meaningful perturbation.</dt>\n<dd><ul>\n<li>Paper: <a href=\"https://arxiv.org/abs/1704.03296\" rel=\"nofollow\">https://arxiv.org/abs/1704.03296</a></li>\n<li>Used in: [<cite>trainer/mask.py</cite>](mighty/trainer/mask.py)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Belghazi, M. I., Baratin, A., Rajeswar, S., Ozair, S., Bengio, Y., Courville, A., &amp; Hjelm, R. D. (2018). Mine: mutual information neural estimation.</dt>\n<dd><ul>\n<li>Paper: <a href=\"https://arxiv.org/abs/1801.04062\" rel=\"nofollow\">https://arxiv.org/abs/1801.04062</a></li>\n<li>Used in: [<cite>monitor/mutual_info/neural_estimation.py</cite>](mighty/monitor/mutual_info/neural_estimation.py)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Kraskov, A., St\u00f6gbauer, H., &amp; Grassberger, P. (2004). Estimating mutual information.</dt>\n<dd><ul>\n<li>Paper: <a href=\"https://arxiv.org/abs/1208.4475\" rel=\"nofollow\">https://arxiv.org/abs/1208.4475</a></li>\n<li>Used in: [<cite>monitor/mutual_info/npeet.py</cite>](mighty/monitor/mutual_info/npeet.py)</li>\n<li>Original source code: <a href=\"https://github.com/gregversteeg/NPEET\" rel=\"nofollow\">https://github.com/gregversteeg/NPEET</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Ince, R. A., Giordano, B. L., Kayser, C., Rousselet, G. A., Gross, J., &amp; Schyns, P. G. (2017). A statistical framework for neuroimaging data analysis based on mutual information estimated via a gaussian copula. Human brain mapping, 38(3), 1541-1573.</dt>\n<dd><ul>\n<li>Paper: <a href=\"http://dx.doi.org/10.1002/hbm.23471\" rel=\"nofollow\">http://dx.doi.org/10.1002/hbm.23471</a></li>\n<li>Used in [<cite>monitor/mutual_info/gcmi.py</cite>](mighty/monitor/mutual_info/gcmi.py)</li>\n<li>Original source code: <a href=\"https://github.com/robince/gcmi\" rel=\"nofollow\">https://github.com/robince/gcmi</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ol>\n<p>### Projects that use pytorch-mighty</p>\n<ul>\n<li>[MCMC_BinaryNet](<a href=\"https://github.com/dizcza/MCMC_BinaryNet\" rel=\"nofollow\">https://github.com/dizcza/MCMC_BinaryNet</a>) - Markov Chain Monte Carlo binary networks optimization.</li>\n<li>[EmbedderSDR](<a href=\"https://github.com/dizcza/EmbedderSDR\" rel=\"nofollow\">https://github.com/dizcza/EmbedderSDR</a>) - encode images into binary Sparse Distributed Representation.</li>\n</ul>\n\n          </div>"}, "last_serial": 6855203, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b989bbf9c9f749e55096c6ea27168c73", "sha256": "fbbe6a94eeea31f93e1259b2f1dc24413f4b0470f351f03cac47192a1ff3d1d8"}, "downloads": -1, "filename": "pytorch-mighty-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b989bbf9c9f749e55096c6ea27168c73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34353, "upload_time": "2020-03-21T12:17:20", "upload_time_iso_8601": "2020-03-21T12:17:20.229847Z", "url": "https://files.pythonhosted.org/packages/01/65/ecaa13a2b76dc3076238352e046b81a7467329bd973218cd459923d50d5b/pytorch-mighty-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b989bbf9c9f749e55096c6ea27168c73", "sha256": "fbbe6a94eeea31f93e1259b2f1dc24413f4b0470f351f03cac47192a1ff3d1d8"}, "downloads": -1, "filename": "pytorch-mighty-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b989bbf9c9f749e55096c6ea27168c73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34353, "upload_time": "2020-03-21T12:17:20", "upload_time_iso_8601": "2020-03-21T12:17:20.229847Z", "url": "https://files.pythonhosted.org/packages/01/65/ecaa13a2b76dc3076238352e046b81a7467329bd973218cd459923d50d5b/pytorch-mighty-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:48 2020"}