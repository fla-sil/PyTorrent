{"info": {"author": "Yoav Aner", "author_email": "yoav@gingerlime.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# L\u00e1med (\u05dc\u05b8\u05de\u05b6\u05d3)\n\n[![PyPI](https://img.shields.io/pypi/v/lamed.svg)](https://pypi.python.org/pypi/lamed)\n\n## What is it?\n\nan A/B testing backend using AWS Lambda/API Gateway + Redis.\n\nLamed is a fork of [Gimel](https://github.com/alephbet/gimel) using different trade-offs. It offers higher accuracy but\nrequires more memory / storage.\n\nKey Features:\n\n* Highly scalable due to the nature of AWS Lambda\n* High performance but with higher memory footprint than Gimel\n* Cost Effective\n* Easy deployment using `lamed deploy`. No need to twiddle with AWS.\n\n## What does Lamed mean?\n\nLamed (\u05dc\u05b8\u05de\u05b6\u05d3) is the 12th letter of the Hebrew Alphabet. It sounds similar to the greek Lambda\n(\u03bb) and pronounced La'med /\u02c8lam\u025bd/, rather than lame-d. And no, it's not lame :)\n\nLamed (\u05dc\u05b8\u05de\u05b6\u05d3) is also the root of the hebrew verb \"to learn\", and was born out of a learning experience using Gimel.\n\n## Installation / Quick Start\n\nYou will need a live instance of redis accessible online from AWS. Then run:\n\n```bash\n$ pip install lamed\n$ lamed configure\n$ lamed deploy\n```\n\n[![asciicast](https://asciinema.org/a/316783.svg)](https://asciinema.org/a/316783?speed=2)\n\nIt will automatically configure your AWS Lambda functions, API gateway and produce a JS snippet ready to use\nfor tracking your experiments.\n\n## Architecture\n\n![](https://s3.amazonaws.com/gingerlime-images/gimel-architecture.png \"Architecture\")\n\n### Client\n\nI suggest looking at [Alephbet](https://github.com/Alephbet/alephbet) to get more details, but at a high level, the client runs on the end-user browser. It will randomly pick a variant and execute a javascript function to 'activate' it. When a goal is reached -- user performs a certain action, this also include the pseudo-goal of *participating* in the experiment -- then an event is sent to the backend. An event typically looks something like \"experiment ABC, variant red, user participated\", or \"experiment XYZ, variant blue, check out goal reached\".\n\nAlephbet might send duplicate events, but each event should include a `uuid` to allow the backend to de-duplicate it. More below\n\n### Data Store - No longer using Redis HyperLogLog\n\nThe data store keeps a tally of each event that comes into the system. Being able to count unique events (de-duplication) was important to keep an accurate count. [Gimel](https://github.com/alephbet/gimel) is using [HyperLogLog](https://en.wikipedia.org/wiki/HyperLogLog) to count events. The redis HLL implementation is great, but as your number of events go up (40,000+ roughly), your A/B tests are losing accuracy and become much less reliable.\n\nLamed uses a different approach, with different trade-offs:\n\n* Each event uuid creates a temporary flag in redis, with an expiry of X seconds.\n* When a new event comes in, it is checked against the flag, and if already found, it is ignored as duplicate.\n* Non-duplicate events are then counted using redis `INCR` atomic command.\n* `uuid` flags are protected with [optimistic locking transactions](https://redis.io/topics/transactions) that redis provides\n\nThis mechanism is similar to how [idempotency keys are used at Stripe](https://stripe.com/docs/api/idempotent_requests) for example.\n\n> An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. How you create unique keys is up to you, but we suggest using V4 UUIDs, or another random string with enough entropy to avoid collisions.\n>\n> Keys are eligible to be removed from the system after they're at least 24 hours old, and a new request is generated if a key is reused after the original has been pruned. The idempotency layer compares incoming parameters to those of the original request and errors unless they're the same to prevent accidental misuse.\n\n\n### Backend - AWS Lambda / API Gateway\n\nThe backend had to take care of a few simple types of requests:\n\n* track an event - receive a (HTTP) request with some json data -- experiment name, variant, goal and uuid, and then push it to redis.\n* extract the counters for a specific experiment, or all experiments into some json that can be presented on the dashboard.\n\n### Dashboard\n\naccess your dashboard with `lamed dashboard`\n\n\n## How does tracking work?\n\nCheck out [Alephbet](https://github.com/Alephbet/alephbet).\n\n## Command Reference\n\n* `lamed --help` - prints a help screen.\n* `lamed configure` - opens your editor so you can edit the config.json file. Use it to update your redis settings.\n* `lamed preflight` - runs preflight checks to make sure you have access to AWS, redis etc.\n* `lamed deploy` - deploys the code and configs to AWS automatically.\n\n## Advanced\n\n### custom API endpoints\n\nIf you want to use different API endpoints, you can add your own `extra_wiring` into the `config.json` file (e.g. using\n`lamed configure`).\n\nfor example, this will add a `.../prod/my_tracking_endpoint` URL pointing to the `lamed-track` lambda:\n\n```json\n{\n    \"redis\": {\n       ...\n    },\n    \"extra_wiring\": [\n        {\n            \"lambda\": {\n                \"FunctionName\": \"lamed-track\",\n                \"Handler\": \"lamed.track\",\n                \"MemorySize\": 128,\n                \"Timeout\": 3\n            },\n            \"api_gateway\": {\n                \"pathPart\": \"my_tracking_endpoint\",\n                \"method\": {\n                    \"httpMethod\": \"GET\",\n                    \"apiKeyRequired\": false,\n                    \"requestParameters\": {\n                        \"method.request.querystring.namespace\": false,\n                        \"method.request.querystring.experiment\": false,\n                        \"method.request.querystring.variant\": false,\n                        \"method.request.querystring.event\": false,\n                        \"method.request.querystring.uuid\": false\n                    }\n                }\n            }\n        }\n    ]\n}\n```\n\nsee [WIRING](https://github.com/Alephbet/gimel/blob/52830737835119692f3a3c157fe090adabf58150/gimel/deploy.py#L81)\n\n## Privacy, Ad-blockers (GDPR etc)\n\nLamed provides a backend for A/B test experiment data. This data is aggregated and does *not* contain any personal information at all. It merely stores the total number of actions with a certain variation against another.\n\nAs such, Lamed should meet privacy requirements of GDPR and similar privacy regulations.\n\nNevertheless, important disclaimers:\n\n* I am not a lawyer, and it's entirely up to you if and how you decide to use Lamed. Please check with your local regulations and get legal advice to decide on your own.\n* Some ad-blockers are extra vigilent, and would block requests with the `track` keyword in the URL. Therefore, track requests to Lamed might be blocked by default. As the library author, I make no attempts to conceal the fact that a form of tracking is necessary to run A/B tests, even if I believe it to be respecting privacy.\n* Users who decide to use Lamed can, if they wish, assign a different endpoint that might get past ad-blockers, but that's entirely up to them. see [custom API endpoints](#custom-api-endpoints) on how this can be achieved.\n* As with almost any tool, it can be use for good or evil. Some A/B tests can be seen as manipulative, unfair or otherwise illegitimate. Again, use your own moral compass to decide whether or not it's ok to use A/B testing, or specific A/B tests.\n\n## License\n\nLamed is distributed under the MIT license. All 3rd party libraries and components are distributed under their\nrespective license terms.\n\n```\nCopyright (C) 2020 Yoav Aner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Alephbet/lamed", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lamed", "package_url": "https://pypi.org/project/lamed/", "platform": "", "project_url": "https://pypi.org/project/lamed/", "project_urls": {"Homepage": "https://github.com/Alephbet/lamed"}, "release_url": "https://pypi.org/project/lamed/0.4/", "requires_dist": ["awscli (>=1.18.36)", "jmespath (>=0.9.5)", "boto3 (>=1.12.36)", "click (>=7.1.1)", "redis (>=3.4.1)"], "requires_python": "", "summary": "Run your own A/B testing backend on AWS Lambda", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>L\u00e1med (\u05dc\u05b8\u05de\u05b6\u05d3)</h1>\n<p><a href=\"https://pypi.python.org/pypi/lamed\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d40355489836eeef5c9c0df311deaa27ef681485/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c616d65642e737667\"></a></p>\n<h2>What is it?</h2>\n<p>an A/B testing backend using AWS Lambda/API Gateway + Redis.</p>\n<p>Lamed is a fork of <a href=\"https://github.com/alephbet/gimel\" rel=\"nofollow\">Gimel</a> using different trade-offs. It offers higher accuracy but\nrequires more memory / storage.</p>\n<p>Key Features:</p>\n<ul>\n<li>Highly scalable due to the nature of AWS Lambda</li>\n<li>High performance but with higher memory footprint than Gimel</li>\n<li>Cost Effective</li>\n<li>Easy deployment using <code>lamed deploy</code>. No need to twiddle with AWS.</li>\n</ul>\n<h2>What does Lamed mean?</h2>\n<p>Lamed (\u05dc\u05b8\u05de\u05b6\u05d3) is the 12th letter of the Hebrew Alphabet. It sounds similar to the greek Lambda\n(\u03bb) and pronounced La'med /\u02c8lam\u025bd/, rather than lame-d. And no, it's not lame :)</p>\n<p>Lamed (\u05dc\u05b8\u05de\u05b6\u05d3) is also the root of the hebrew verb \"to learn\", and was born out of a learning experience using Gimel.</p>\n<h2>Installation / Quick Start</h2>\n<p>You will need a live instance of redis accessible online from AWS. Then run:</p>\n<pre>$ pip install lamed\n$ lamed configure\n$ lamed deploy\n</pre>\n<p><a href=\"https://asciinema.org/a/316783?speed=2\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/645e463b08e884aa57dd8b4c661723980149d532/68747470733a2f2f61736369696e656d612e6f72672f612f3331363738332e737667\"></a></p>\n<p>It will automatically configure your AWS Lambda functions, API gateway and produce a JS snippet ready to use\nfor tracking your experiments.</p>\n<h2>Architecture</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/594ae3286bc64404d3a9f217ead4605a349bfac2/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67696e6765726c696d652d696d616765732f67696d656c2d6172636869746563747572652e706e67\"></p>\n<h3>Client</h3>\n<p>I suggest looking at <a href=\"https://github.com/Alephbet/alephbet\" rel=\"nofollow\">Alephbet</a> to get more details, but at a high level, the client runs on the end-user browser. It will randomly pick a variant and execute a javascript function to 'activate' it. When a goal is reached -- user performs a certain action, this also include the pseudo-goal of <em>participating</em> in the experiment -- then an event is sent to the backend. An event typically looks something like \"experiment ABC, variant red, user participated\", or \"experiment XYZ, variant blue, check out goal reached\".</p>\n<p>Alephbet might send duplicate events, but each event should include a <code>uuid</code> to allow the backend to de-duplicate it. More below</p>\n<h3>Data Store - No longer using Redis HyperLogLog</h3>\n<p>The data store keeps a tally of each event that comes into the system. Being able to count unique events (de-duplication) was important to keep an accurate count. <a href=\"https://github.com/alephbet/gimel\" rel=\"nofollow\">Gimel</a> is using <a href=\"https://en.wikipedia.org/wiki/HyperLogLog\" rel=\"nofollow\">HyperLogLog</a> to count events. The redis HLL implementation is great, but as your number of events go up (40,000+ roughly), your A/B tests are losing accuracy and become much less reliable.</p>\n<p>Lamed uses a different approach, with different trade-offs:</p>\n<ul>\n<li>Each event uuid creates a temporary flag in redis, with an expiry of X seconds.</li>\n<li>When a new event comes in, it is checked against the flag, and if already found, it is ignored as duplicate.</li>\n<li>Non-duplicate events are then counted using redis <code>INCR</code> atomic command.</li>\n<li><code>uuid</code> flags are protected with <a href=\"https://redis.io/topics/transactions\" rel=\"nofollow\">optimistic locking transactions</a> that redis provides</li>\n</ul>\n<p>This mechanism is similar to how <a href=\"https://stripe.com/docs/api/idempotent_requests\" rel=\"nofollow\">idempotency keys are used at Stripe</a> for example.</p>\n<blockquote>\n<p>An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. How you create unique keys is up to you, but we suggest using V4 UUIDs, or another random string with enough entropy to avoid collisions.</p>\n<p>Keys are eligible to be removed from the system after they're at least 24 hours old, and a new request is generated if a key is reused after the original has been pruned. The idempotency layer compares incoming parameters to those of the original request and errors unless they're the same to prevent accidental misuse.</p>\n</blockquote>\n<h3>Backend - AWS Lambda / API Gateway</h3>\n<p>The backend had to take care of a few simple types of requests:</p>\n<ul>\n<li>track an event - receive a (HTTP) request with some json data -- experiment name, variant, goal and uuid, and then push it to redis.</li>\n<li>extract the counters for a specific experiment, or all experiments into some json that can be presented on the dashboard.</li>\n</ul>\n<h3>Dashboard</h3>\n<p>access your dashboard with <code>lamed dashboard</code></p>\n<h2>How does tracking work?</h2>\n<p>Check out <a href=\"https://github.com/Alephbet/alephbet\" rel=\"nofollow\">Alephbet</a>.</p>\n<h2>Command Reference</h2>\n<ul>\n<li><code>lamed --help</code> - prints a help screen.</li>\n<li><code>lamed configure</code> - opens your editor so you can edit the config.json file. Use it to update your redis settings.</li>\n<li><code>lamed preflight</code> - runs preflight checks to make sure you have access to AWS, redis etc.</li>\n<li><code>lamed deploy</code> - deploys the code and configs to AWS automatically.</li>\n</ul>\n<h2>Advanced</h2>\n<h3>custom API endpoints</h3>\n<p>If you want to use different API endpoints, you can add your own <code>extra_wiring</code> into the <code>config.json</code> file (e.g. using\n<code>lamed configure</code>).</p>\n<p>for example, this will add a <code>.../prod/my_tracking_endpoint</code> URL pointing to the <code>lamed-track</code> lambda:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"redis\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"err\">...</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"extra_wiring\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"lambda\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"FunctionName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"lamed-track\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"Handler\"</span><span class=\"p\">:</span> <span class=\"s2\">\"lamed.track\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"MemorySize\"</span><span class=\"p\">:</span> <span class=\"mi\">128</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"Timeout\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span>\n            <span class=\"p\">},</span>\n            <span class=\"nt\">\"api_gateway\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"pathPart\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_tracking_endpoint\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"method\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"httpMethod\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"apiKeyRequired\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"requestParameters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"method.request.querystring.namespace\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"method.request.querystring.experiment\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"method.request.querystring.variant\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"method.request.querystring.event\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"method.request.querystring.uuid\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>see <a href=\"https://github.com/Alephbet/gimel/blob/52830737835119692f3a3c157fe090adabf58150/gimel/deploy.py#L81\" rel=\"nofollow\">WIRING</a></p>\n<h2>Privacy, Ad-blockers (GDPR etc)</h2>\n<p>Lamed provides a backend for A/B test experiment data. This data is aggregated and does <em>not</em> contain any personal information at all. It merely stores the total number of actions with a certain variation against another.</p>\n<p>As such, Lamed should meet privacy requirements of GDPR and similar privacy regulations.</p>\n<p>Nevertheless, important disclaimers:</p>\n<ul>\n<li>I am not a lawyer, and it's entirely up to you if and how you decide to use Lamed. Please check with your local regulations and get legal advice to decide on your own.</li>\n<li>Some ad-blockers are extra vigilent, and would block requests with the <code>track</code> keyword in the URL. Therefore, track requests to Lamed might be blocked by default. As the library author, I make no attempts to conceal the fact that a form of tracking is necessary to run A/B tests, even if I believe it to be respecting privacy.</li>\n<li>Users who decide to use Lamed can, if they wish, assign a different endpoint that might get past ad-blockers, but that's entirely up to them. see <a href=\"#custom-api-endpoints\" rel=\"nofollow\">custom API endpoints</a> on how this can be achieved.</li>\n<li>As with almost any tool, it can be use for good or evil. Some A/B tests can be seen as manipulative, unfair or otherwise illegitimate. Again, use your own moral compass to decide whether or not it's ok to use A/B testing, or specific A/B tests.</li>\n</ul>\n<h2>License</h2>\n<p>Lamed is distributed under the MIT license. All 3rd party libraries and components are distributed under their\nrespective license terms.</p>\n<pre><code>Copyright (C) 2020 Yoav Aner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>\n\n          </div>"}, "last_serial": 7048911, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9a393df1a2f7f3066c211fa465f399c7", "sha256": "9fbf12b83ee934bf7e815c0c0f0d81c369b4cca66c473ca126a75feef017497d"}, "downloads": -1, "filename": "lamed-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9a393df1a2f7f3066c211fa465f399c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 165849, "upload_time": "2020-04-05T11:16:35", "upload_time_iso_8601": "2020-04-05T11:16:35.729332Z", "url": "https://files.pythonhosted.org/packages/c6/0c/f55e0070da0e216feda7479576cf07b8e19b1e07292cc66811e49118291a/lamed-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f7856d141a741e81cfdcc50c39bed1d", "sha256": "14768effee89cfb7734a2b47f58487e4b8ddd429f2d8598a7e6f647c0c460211"}, "downloads": -1, "filename": "lamed-0.1.tar.gz", "has_sig": false, "md5_digest": "8f7856d141a741e81cfdcc50c39bed1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159539, "upload_time": "2020-04-05T11:16:38", "upload_time_iso_8601": "2020-04-05T11:16:38.269151Z", "url": "https://files.pythonhosted.org/packages/ce/6d/8c535dc8bb190c9ff2368a663e8a11fd35cd30a717b48634b92659b18ef0/lamed-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "563d0406e7f2a2c4f91e20f9ecc0e08b", "sha256": "532140aa87ef11b70a46353419cd1db6065ba078b530111181d9f903569a57b9"}, "downloads": -1, "filename": "lamed-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "563d0406e7f2a2c4f91e20f9ecc0e08b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 165950, "upload_time": "2020-04-05T11:24:47", "upload_time_iso_8601": "2020-04-05T11:24:47.479927Z", "url": "https://files.pythonhosted.org/packages/25/19/65e89a7d9eb93d03802fa1dc17099d9d8318520a093e4e38549ed490a94c/lamed-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cff36f8bed5ff2cb7596bb5c9c44813", "sha256": "35d20e1a48c9db6c0d8d2f9eec62ba8309d618f61a79c21ef4cc8d3cfc1414bf"}, "downloads": -1, "filename": "lamed-0.2.tar.gz", "has_sig": false, "md5_digest": "2cff36f8bed5ff2cb7596bb5c9c44813", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159756, "upload_time": "2020-04-05T11:24:48", "upload_time_iso_8601": "2020-04-05T11:24:48.886512Z", "url": "https://files.pythonhosted.org/packages/61/01/965f0f2ae9e52a8a17cd045bda3699d50e31ff8c5e1bbfa60a28ad7f02c7/lamed-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ad47e1f954dd36012a6cec3572ab7f0b", "sha256": "25c497f3f1fa08095828ead60b0ac22352395292055eebc9ff5dfbbc5758274f"}, "downloads": -1, "filename": "lamed-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad47e1f954dd36012a6cec3572ab7f0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 165906, "upload_time": "2020-04-06T15:28:25", "upload_time_iso_8601": "2020-04-06T15:28:25.210824Z", "url": "https://files.pythonhosted.org/packages/63/09/aa79cd632000e23d0e4f51f915e391b8ab37f7b6a5321e557428adf3fc34/lamed-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8217409752f705395f8e4b119970c6e", "sha256": "060157c016a4e70d8ce94fb90d06cef2605b864b1235ec2eb27907ed9f711122"}, "downloads": -1, "filename": "lamed-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c8217409752f705395f8e4b119970c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159622, "upload_time": "2020-04-06T15:28:26", "upload_time_iso_8601": "2020-04-06T15:28:26.912638Z", "url": "https://files.pythonhosted.org/packages/0a/f3/2deff2f7eb5f37110dbe1e8f1655d46f7fe41d44fa0c69a6c433360ea235/lamed-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "02a95ea91890804f15e9ed8b8e3eac56", "sha256": "714e54fcd29a7ad3c2bb4b1c8fc7ef68d013c79a80905f55b2e42930e66daf45"}, "downloads": -1, "filename": "lamed-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "02a95ea91890804f15e9ed8b8e3eac56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 166017, "upload_time": "2020-04-08T12:23:01", "upload_time_iso_8601": "2020-04-08T12:23:01.014831Z", "url": "https://files.pythonhosted.org/packages/ff/d0/12d2ef569de1c04261decf1cdfebf5c7a0532dacf2a0dce5c0e603ccd74b/lamed-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ccd63bedf67674c20898f3e0b15d5d4", "sha256": "ff9c3bbabbe0917aa4196d50d615b084a137b259b5166b7d69a271073b35e4e5"}, "downloads": -1, "filename": "lamed-0.3.tar.gz", "has_sig": false, "md5_digest": "6ccd63bedf67674c20898f3e0b15d5d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159737, "upload_time": "2020-04-08T12:23:02", "upload_time_iso_8601": "2020-04-08T12:23:02.740775Z", "url": "https://files.pythonhosted.org/packages/af/0a/91f1374a753e847df460d8de913297fbdfc5af3d206c223a63aa7f237ad7/lamed-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "15eb0dd0d879011aface42e80b7a6c04", "sha256": "3b6312521737015e9ebc249209780433c83ea1b85cf0821a3526c1fd657561de"}, "downloads": -1, "filename": "lamed-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "15eb0dd0d879011aface42e80b7a6c04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 166016, "upload_time": "2020-04-18T16:29:26", "upload_time_iso_8601": "2020-04-18T16:29:26.836207Z", "url": "https://files.pythonhosted.org/packages/39/04/6165a02acd3c6ba0cbbc32f9170b7d53a215ca33d2b70c0211af6ce8b2b9/lamed-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "982ef2eb0833607c9b0801d2864e7631", "sha256": "d62c2b57b1b84213b696b2b6f88d5bcbefdba5976cd920150678414ee68daeb3"}, "downloads": -1, "filename": "lamed-0.4.tar.gz", "has_sig": false, "md5_digest": "982ef2eb0833607c9b0801d2864e7631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159718, "upload_time": "2020-04-18T16:29:28", "upload_time_iso_8601": "2020-04-18T16:29:28.920836Z", "url": "https://files.pythonhosted.org/packages/f7/47/b38cdb4b57b1cce7774e814f4b71851e75294744435f88281f4cc7738de7/lamed-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "15eb0dd0d879011aface42e80b7a6c04", "sha256": "3b6312521737015e9ebc249209780433c83ea1b85cf0821a3526c1fd657561de"}, "downloads": -1, "filename": "lamed-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "15eb0dd0d879011aface42e80b7a6c04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 166016, "upload_time": "2020-04-18T16:29:26", "upload_time_iso_8601": "2020-04-18T16:29:26.836207Z", "url": "https://files.pythonhosted.org/packages/39/04/6165a02acd3c6ba0cbbc32f9170b7d53a215ca33d2b70c0211af6ce8b2b9/lamed-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "982ef2eb0833607c9b0801d2864e7631", "sha256": "d62c2b57b1b84213b696b2b6f88d5bcbefdba5976cd920150678414ee68daeb3"}, "downloads": -1, "filename": "lamed-0.4.tar.gz", "has_sig": false, "md5_digest": "982ef2eb0833607c9b0801d2864e7631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159718, "upload_time": "2020-04-18T16:29:28", "upload_time_iso_8601": "2020-04-18T16:29:28.920836Z", "url": "https://files.pythonhosted.org/packages/f7/47/b38cdb4b57b1cce7774e814f4b71851e75294744435f88281f4cc7738de7/lamed-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:02 2020"}