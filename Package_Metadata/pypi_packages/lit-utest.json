{"info": {"author": "ldrumm", "author_email": "ldrumm@rtps.co", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: Public Domain", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "lit_utest\n=========\n\nllvm-lit module for first-class utest.h unit test support\n\nThis module allows you to run a utest testsuite as part of a larger ``lit``\ntestsuite. This is useful when you want to mix API unit tests with functional\ntesting of your driver programs.\n\nUsage\n-----\nIn each of your main utest test files, set the build command::\n\n   // UTEST_BUILD: cc %s -o %utest_bin\n\nThis works like the built-in ``ShTest``, but introduces the special\n``UTEST_BUILD`` keyword to lit. The runner executes this command and the runs\nthe resulting ``%utest_bin`` with ``--filter`` for each of the tests printed by\n``--list-tests``. It collects the results and prints them in the way you'd\nexpect ``lit`` to do.\n\nThen configure lit with the ``UTestRunner`` in lit.local.cfg::\n\n   import lit_utest\n   config.test_format = lit_utest.UTestRunner()\n\nFor examples, see the ``test`` directory, where we eat our own dogfood.\n\n\nInstallation\n------------\n``pip install lit_utest``\n\nRequirements\n^^^^^^^^^^^^\n``lit`` is required. Your tests should be `utest.h`-based or behave like it.\n\nCompatibility\n-------------\nThis module *should* work in all places upstream lit is supported, but I will\nmake no effort to support python < 2.7\n\nLicence\n-------\nutest.h is Public Domain, llvm is either NCSA or Apache-2 license depending on\nthe version, so it makes sense to go PUBLIC DOMAIN.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ldrumm/lit_utest", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lit-utest", "package_url": "https://pypi.org/project/lit-utest/", "platform": "", "project_url": "https://pypi.org/project/lit-utest/", "project_urls": {"Homepage": "https://github.com/ldrumm/lit_utest"}, "release_url": "https://pypi.org/project/lit-utest/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "llvm-lit module for first-class utest.h unit test support", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>llvm-lit module for first-class utest.h unit test support</p>\n<p>This module allows you to run a utest testsuite as part of a larger <tt>lit</tt>\ntestsuite. This is useful when you want to mix API unit tests with functional\ntesting of your driver programs.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In each of your main utest test files, set the build command:</p>\n<pre>// UTEST_BUILD: cc %s -o %utest_bin\n</pre>\n<p>This works like the built-in <tt>ShTest</tt>, but introduces the special\n<tt>UTEST_BUILD</tt> keyword to lit. The runner executes this command and the runs\nthe resulting <tt>%utest_bin</tt> with <tt><span class=\"pre\">--filter</span></tt> for each of the tests printed by\n<tt><span class=\"pre\">--list-tests</span></tt>. It collects the results and prints them in the way you\u2019d\nexpect <tt>lit</tt> to do.</p>\n<p>Then configure lit with the <tt>UTestRunner</tt> in lit.local.cfg:</p>\n<pre>import lit_utest\nconfig.test_format = lit_utest.UTestRunner()\n</pre>\n<p>For examples, see the <tt>test</tt> directory, where we eat our own dogfood.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install lit_utest</tt></p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p><tt>lit</tt> is required. Your tests should be <cite>utest.h</cite>-based or behave like it.</p>\n</div>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>This module <em>should</em> work in all places upstream lit is supported, but I will\nmake no effort to support python &lt; 2.7</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>utest.h is Public Domain, llvm is either NCSA or Apache-2 license depending on\nthe version, so it makes sense to go PUBLIC DOMAIN.</p>\n</div>\n\n          </div>"}, "last_serial": 5800085, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "372e82f39889f65588ff61c570f5309c", "sha256": "cd15cb4d7127930438b647987ad733ab050d03b961c97753d18ffadd24761253"}, "downloads": -1, "filename": "lit_utest-0.1.0.tar.gz", "has_sig": false, "md5_digest": "372e82f39889f65588ff61c570f5309c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3101, "upload_time": "2019-09-08T18:15:19", "upload_time_iso_8601": "2019-09-08T18:15:19.292909Z", "url": "https://files.pythonhosted.org/packages/9b/b3/ff2f318b0d84a536fda189ce8eb89abec72e700c76b95acd70e0960ff2c5/lit_utest-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "372e82f39889f65588ff61c570f5309c", "sha256": "cd15cb4d7127930438b647987ad733ab050d03b961c97753d18ffadd24761253"}, "downloads": -1, "filename": "lit_utest-0.1.0.tar.gz", "has_sig": false, "md5_digest": "372e82f39889f65588ff61c570f5309c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3101, "upload_time": "2019-09-08T18:15:19", "upload_time_iso_8601": "2019-09-08T18:15:19.292909Z", "url": "https://files.pythonhosted.org/packages/9b/b3/ff2f318b0d84a536fda189ce8eb89abec72e700c76b95acd70e0960ff2c5/lit_utest-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:09 2020"}