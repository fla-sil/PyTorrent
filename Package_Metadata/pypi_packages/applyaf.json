{"info": {"author": "Matthew Rankin", "author_email": "matthew@questrail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# applyaf\n\n[![PyPi Version][pypi ver image]][pypi ver link]\n[![Build Status][travis image]][travis link]\n[![Coverage Status][coveralls image]][coveralls link]\n[![License Badge][license image]][LICENSE.txt]\n\n[applyaf][] is a Python 3.4+ module that applies frequency dependent\nantenna factors and cable losses to spectrum analyzer readings in order\nto calculate the incident field. Any duplicate frequency entries in the\nantenna factors or cable losses data are removed before interpolating\nthe frequencies to match those of the spectrum analyzer readings.\n\n## Inputs\n\nThree csv files containing the following are required inputs:\n\n1. Spectrum analyzer measurements\n2. Antenna factor data\n3. Cable loss data\n\nEach CSV file should contain data in two columns:\n\n1. Frequency\n2. Amplitude\n\nThe amplitude is expected to be in dB.\n\n## Requirements\n\n- [numpy][]\n- `csv` module from the [Python Standard Library][]\n- `os` module from the [Python Standard Library][]\n\n## Future Improvements\n\nSome thoughts for future improvements include:\n\n1. Allowing CSV data files that contain non-dB amplitudes and then\nconvert as needed. Should this be a per-file setting?\n2. Generalize the code to handle a variable number (>3) of data to be\ninterpolated and applied to the given data set.\n3. If the code is generalized, should this be wrapped into the\n[siganalysis][] project or left on its own?\n\n## Contributing\n\nTo create a Python 3 virtualenv and then use it via virtualenvwrapper:\n\n    $ python3 -m venv ~/.virtualenv/applayf\n    $ workon applyaf\n\n[applyaf][] is developed using [Scott Chacon][]'s [GitHub Flow][]. To\ncontribute, fork [applyaf][], create a feature branch, and then submit\na pull request.  [GitHub Flow][] is summarized as:\n\n- Anything in the `master` branch is deployable\n- To work on something new, create a descriptively named branch off of\n  `master` (e.g., `new-oauth2-scopes`)\n- Commit to that branch locally and regularly push your work to the same\n  named branch on the server\n- When you need feedback or help, or you think the brnach is ready for\n  merging, open a [pull request][].\n- After someone else has reviewed and signed off on the feature, you can\n  merge it into master.\n- Once it is merged and pushed to `master`, you can and *should* deploy\n  immediately.\n\n# License\n\n[applyaf] is released under the MIT license. Please see the\n[LICENSE.txt] file for more information.\n\n[applyaf]: https://github.com/questrail/applyaf\n[coveralls image]: http://img.shields.io/coveralls/questrail/applyaf/master.svg\n[coveralls link]: https://coveralls.io/r/questrail/applyaf\n[github flow]: http://scottchacon.com/2011/08/31/github-flow.html\n[LICENSE.txt]: https://github.com/questrail/applyaf/blob/develop/LICENSE.txt\n[license image]: http://img.shields.io/pypi/l/applyaf.svg\n[numpy]: http://www.numpy.org\n[pull request]: https://help.github.com/articles/using-pull-requests\n[pypi ver image]: http://img.shields.io/pypi/v/applyaf.svg\n[pypi ver link]: https://pypi.python.org/pypi/applyaf\n[python standard library]: https://docs.python.org/2/library/\n[scott chacon]: http://scottchacon.com/about.html\n[siganalysis]: https://github.com/questrail/siganalysis\n[travis image]: http://img.shields.io/travis/questrail/applyaf/master.svg\n[travis link]: https://travis-ci.org/questrail/applyaf\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/questrail/applyaf", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "applyaf", "package_url": "https://pypi.org/project/applyaf/", "platform": "", "project_url": "https://pypi.org/project/applyaf/", "project_urls": {"Homepage": "http://github.com/questrail/applyaf"}, "release_url": "https://pypi.org/project/applyaf/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Apply antenna factor and cable loss tospectrum analyzer measurements", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># applyaf</p>\n<p>[![PyPi Version][pypi ver image]][pypi ver link]\n[![Build Status][travis image]][travis link]\n[![Coverage Status][coveralls image]][coveralls link]\n[![License Badge][license image]][LICENSE.txt]</p>\n<p>[applyaf][] is a Python 3.4+ module that applies frequency dependent\nantenna factors and cable losses to spectrum analyzer readings in order\nto calculate the incident field. Any duplicate frequency entries in the\nantenna factors or cable losses data are removed before interpolating\nthe frequencies to match those of the spectrum analyzer readings.</p>\n<p>## Inputs</p>\n<p>Three csv files containing the following are required inputs:</p>\n<ol>\n<li>Spectrum analyzer measurements</li>\n<li>Antenna factor data</li>\n<li>Cable loss data</li>\n</ol>\n<p>Each CSV file should contain data in two columns:</p>\n<ol>\n<li>Frequency</li>\n<li>Amplitude</li>\n</ol>\n<p>The amplitude is expected to be in dB.</p>\n<p>## Requirements</p>\n<ul>\n<li>[numpy][]</li>\n<li><cite>csv</cite> module from the [Python Standard Library][]</li>\n<li><cite>os</cite> module from the [Python Standard Library][]</li>\n</ul>\n<p>## Future Improvements</p>\n<p>Some thoughts for future improvements include:</p>\n<p>1. Allowing CSV data files that contain non-dB amplitudes and then\nconvert as needed. Should this be a per-file setting?\n2. Generalize the code to handle a variable number (&gt;3) of data to be\ninterpolated and applied to the given data set.\n3. If the code is generalized, should this be wrapped into the\n[siganalysis][] project or left on its own?</p>\n<p>## Contributing</p>\n<p>To create a Python 3 virtualenv and then use it via virtualenvwrapper:</p>\n<blockquote>\n$ python3 -m venv ~/.virtualenv/applayf\n$ workon applyaf</blockquote>\n<p>[applyaf][] is developed using [Scott Chacon][]\u2019s [GitHub Flow][]. To\ncontribute, fork [applyaf][], create a feature branch, and then submit\na pull request.  [GitHub Flow][] is summarized as:</p>\n<ul>\n<li>Anything in the <cite>master</cite> branch is deployable</li>\n<li>To work on something new, create a descriptively named branch off of\n<cite>master</cite> (e.g., <cite>new-oauth2-scopes</cite>)</li>\n<li>Commit to that branch locally and regularly push your work to the same\nnamed branch on the server</li>\n<li>When you need feedback or help, or you think the brnach is ready for\nmerging, open a [pull request][].</li>\n<li>After someone else has reviewed and signed off on the feature, you can\nmerge it into master.</li>\n<li>Once it is merged and pushed to <cite>master</cite>, you can and <em>should</em> deploy\nimmediately.</li>\n</ul>\n<p># License</p>\n<p>[applyaf] is released under the MIT license. Please see the\n[LICENSE.txt] file for more information.</p>\n<p>[applyaf]: <a href=\"https://github.com/questrail/applyaf\" rel=\"nofollow\">https://github.com/questrail/applyaf</a>\n[coveralls image]: <a href=\"http://img.shields.io/coveralls/questrail/applyaf/master.svg\" rel=\"nofollow\">http://img.shields.io/coveralls/questrail/applyaf/master.svg</a>\n[coveralls link]: <a href=\"https://coveralls.io/r/questrail/applyaf\" rel=\"nofollow\">https://coveralls.io/r/questrail/applyaf</a>\n[github flow]: <a href=\"http://scottchacon.com/2011/08/31/github-flow.html\" rel=\"nofollow\">http://scottchacon.com/2011/08/31/github-flow.html</a>\n[LICENSE.txt]: <a href=\"https://github.com/questrail/applyaf/blob/develop/LICENSE.txt\" rel=\"nofollow\">https://github.com/questrail/applyaf/blob/develop/LICENSE.txt</a>\n[license image]: <a href=\"http://img.shields.io/pypi/l/applyaf.svg\" rel=\"nofollow\">http://img.shields.io/pypi/l/applyaf.svg</a>\n[numpy]: <a href=\"http://www.numpy.org\" rel=\"nofollow\">http://www.numpy.org</a>\n[pull request]: <a href=\"https://help.github.com/articles/using-pull-requests\" rel=\"nofollow\">https://help.github.com/articles/using-pull-requests</a>\n[pypi ver image]: <a href=\"http://img.shields.io/pypi/v/applyaf.svg\" rel=\"nofollow\">http://img.shields.io/pypi/v/applyaf.svg</a>\n[pypi ver link]: <a href=\"https://pypi.python.org/pypi/applyaf\" rel=\"nofollow\">https://pypi.python.org/pypi/applyaf</a>\n[python standard library]: <a href=\"https://docs.python.org/2/library/\" rel=\"nofollow\">https://docs.python.org/2/library/</a>\n[scott chacon]: <a href=\"http://scottchacon.com/about.html\" rel=\"nofollow\">http://scottchacon.com/about.html</a>\n[siganalysis]: <a href=\"https://github.com/questrail/siganalysis\" rel=\"nofollow\">https://github.com/questrail/siganalysis</a>\n[travis image]: <a href=\"http://img.shields.io/travis/questrail/applyaf/master.svg\" rel=\"nofollow\">http://img.shields.io/travis/questrail/applyaf/master.svg</a>\n[travis link]: <a href=\"https://travis-ci.org/questrail/applyaf\" rel=\"nofollow\">https://travis-ci.org/questrail/applyaf</a></p>\n\n          </div>"}, "last_serial": 3339369, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "13e8019686fbd119bd2ea3b02404a96f", "sha256": "8ac157e33f9825b38823d8921de8e282889c5efdfa90e84af9149933da010d33"}, "downloads": -1, "filename": "applyaf-0.1.0.tar.gz", "has_sig": false, "md5_digest": "13e8019686fbd119bd2ea3b02404a96f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3493, "upload_time": "2017-07-25T14:53:52", "upload_time_iso_8601": "2017-07-25T14:53:52.121598Z", "url": "https://files.pythonhosted.org/packages/50/95/8aa895a3f0d84df7b7fe694452b4f97127f1b73b628e026fa0d1bdfefd0a/applyaf-0.1.0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "265f4015a66c0bb1eb7dfaa675638a36", "sha256": "e1e51560d75513008345e18e2895f9e0308c32ad4dcddedcd282a2cd6610c00e"}, "downloads": -1, "filename": "applyaf-0.2.tar.gz", "has_sig": false, "md5_digest": "265f4015a66c0bb1eb7dfaa675638a36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6371, "upload_time": "2014-08-07T15:29:52", "upload_time_iso_8601": "2014-08-07T15:29:52.155306Z", "url": "https://files.pythonhosted.org/packages/84/27/2df820bfe992e59916dd42c40a899628414debc777565cdaf2fd62e3762d/applyaf-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e6a03d4fa15a6fd148d0789f9d7c8185", "sha256": "3db302305df37e8a61a0d786402044839d3ffdcfc1dc0c55231ba854c2fea8b9"}, "downloads": -1, "filename": "applyaf-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e6a03d4fa15a6fd148d0789f9d7c8185", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6375, "upload_time": "2014-08-07T15:36:56", "upload_time_iso_8601": "2014-08-07T15:36:56.604519Z", "url": "https://files.pythonhosted.org/packages/bd/72/e7484953380f3f0275bfee6eb0f26b1e511f151100e984c9beebc2c82442/applyaf-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "bee8bdf735dbc26a1eb9f8ece476e050", "sha256": "0393ea88c4a7a6c3cfd83e17a8778ae9dca15f0cbdd19e7315e6693ea1f33424"}, "downloads": -1, "filename": "applyaf-0.2.2.tar.gz", "has_sig": false, "md5_digest": "bee8bdf735dbc26a1eb9f8ece476e050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6425, "upload_time": "2014-08-08T16:01:40", "upload_time_iso_8601": "2014-08-08T16:01:40.966653Z", "url": "https://files.pythonhosted.org/packages/c9/cf/635a1ac1cab8ef928e4a41115e15f9c8073569a6d28669b6bd46de6e27b5/applyaf-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "798bffa8fee7643baf7ebca9b6784c92", "sha256": "84f1408dabb1efdf792e7c41604516f2cab4031b35ab48eab524cdad3c25fc36"}, "downloads": -1, "filename": "applyaf-0.2.3.tar.gz", "has_sig": false, "md5_digest": "798bffa8fee7643baf7ebca9b6784c92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6208, "upload_time": "2015-08-20T14:15:17", "upload_time_iso_8601": "2015-08-20T14:15:17.661822Z", "url": "https://files.pythonhosted.org/packages/79/25/3407105ce1d79036ad074dc2f062c45bf571c581a4e4a638fd3f1aa811b7/applyaf-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7842419db99cf812b4ec5fd94b3e5322", "sha256": "b10a56bc844cae50882e7ddbfb57643fea923d53b7decbaa4b7347e4faa97c59"}, "downloads": -1, "filename": "applyaf-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7842419db99cf812b4ec5fd94b3e5322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6433, "upload_time": "2015-08-20T15:23:21", "upload_time_iso_8601": "2015-08-20T15:23:21.865921Z", "url": "https://files.pythonhosted.org/packages/b5/1b/fbdce039d1887792ce802be30a1656bd896e23519854e39606f7c8175a6a/applyaf-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ef277fd99679e99ebeaa29c228a0a1d1", "sha256": "3581c56933a83c2487f9b8502b03cbaf0b5aefa28e32c348a8cafb14baff1b27"}, "downloads": -1, "filename": "applyaf-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ef277fd99679e99ebeaa29c228a0a1d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6264, "upload_time": "2017-03-24T13:26:07", "upload_time_iso_8601": "2017-03-24T13:26:07.900971Z", "url": "https://files.pythonhosted.org/packages/9d/74/8dd2389e9a9ee1393da66774cb0cb6ec6c71ef581ae2a16d5c6e50ad2dd4/applyaf-0.4.0.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "bd3212e4658c1b3891567bdbb20a3f83", "sha256": "e2cab1abdeb8ae737b26e80a0cf31fbcc5a88658fadad11c64477939322e9c99"}, "downloads": -1, "filename": "applyaf-0.4.2.tar.gz", "has_sig": false, "md5_digest": "bd3212e4658c1b3891567bdbb20a3f83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6239, "upload_time": "2017-07-25T14:54:19", "upload_time_iso_8601": "2017-07-25T14:54:19.732762Z", "url": "https://files.pythonhosted.org/packages/d9/4f/f60230bccfb1f25427b55ad0be13379d7d95cc534c5d2385748764dc3f56/applyaf-0.4.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "594c8fe6857323acdb40d92620ad4736", "sha256": "f629d6dd3d3686cb05271d71fc315d8b36b6250d11c4bd9ac8f4e5d8a60fc07d"}, "downloads": -1, "filename": "applyaf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "594c8fe6857323acdb40d92620ad4736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5781, "upload_time": "2017-11-16T17:45:59", "upload_time_iso_8601": "2017-11-16T17:45:59.042631Z", "url": "https://files.pythonhosted.org/packages/78/b5/5695e6e24787f378b6966cdfdb6d294f72c8e417f1149b000156939f0f25/applyaf-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "848b97de2a613b9c11ba7e3b0116c830", "sha256": "fb1b1f955157de87cee5f131ae334e9ba8356288e239ebf68e9eeb514f44e789"}, "downloads": -1, "filename": "applyaf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "848b97de2a613b9c11ba7e3b0116c830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5775, "upload_time": "2017-11-16T17:47:34", "upload_time_iso_8601": "2017-11-16T17:47:34.242864Z", "url": "https://files.pythonhosted.org/packages/24/0c/12565170758b4c75a67eedf5e2c299c5b7cb227fdb75fab32a8054b79aad/applyaf-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "848b97de2a613b9c11ba7e3b0116c830", "sha256": "fb1b1f955157de87cee5f131ae334e9ba8356288e239ebf68e9eeb514f44e789"}, "downloads": -1, "filename": "applyaf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "848b97de2a613b9c11ba7e3b0116c830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5775, "upload_time": "2017-11-16T17:47:34", "upload_time_iso_8601": "2017-11-16T17:47:34.242864Z", "url": "https://files.pythonhosted.org/packages/24/0c/12565170758b4c75a67eedf5e2c299c5b7cb227fdb75fab32a8054b79aad/applyaf-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:36 2020"}