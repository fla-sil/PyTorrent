{"info": {"author": "Stephen Melnicki", "author_email": "smelnicki3@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Double down\n-----------\n\nA silly example of a python decorator.\n\nSimply calls the decorated function twice.\n\n\nInstallation\n------------\n\nDouble down has been published to python package index and is available via pip:\n\n::\n\n    pip install double_down\n\nOtherwise, if you want to install it manually:\n\n::\n\n    git clone git@github.com:smelnicki/double_down.git\n    sudo python setup.py install\n\n\nUsage\n------------\n\nThis is about as simple as it gets when it comes to decorators. It literally makes\nyour function code execute twice.\n\nFor example, see below:\n\n.. code:: python\n\n    # example.py\n    from double_down import double_down\n\n    @double_down\n    def hello():\n        print \"Hello, Python\"\n\n    if __name__ == \"__main__\":\n      hello()\n\n\nThen in your terminal:\n\n::\n\n    > python example.py\n    Hello, Python\n    Hello, Python\n\n\nQuestions\n------------\n\nThis project was just a fun little foray into learning how decorators work. In all\nhonesty, it'd be a big stretch of the imagination to justify its use in some real\nlife application.\n\nIf you're curious how decorators work or want to get some hands on experience, I'd\nstrongly encourage making one of your own. There's plenty of documentation out there\nto use.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smelnicki/double_down", "keywords": "sample decorators", "license": "MIT (See LICENSE.rst)", "maintainer": null, "maintainer_email": null, "name": "double_down", "package_url": "https://pypi.org/project/double_down/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/double_down/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/smelnicki/double_down"}, "release_url": "https://pypi.org/project/double_down/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A silly example of a python decorator", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"double-down\">\n<h2>Double down</h2>\n<p>A silly example of a python decorator.</p>\n<p>Simply calls the decorated function twice.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Double down has been published to python package index and is available via pip:</p>\n<pre>pip install double_down\n</pre>\n<p>Otherwise, if you want to install it manually:</p>\n<pre>git clone git@github.com:smelnicki/double_down.git\nsudo python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This is about as simple as it gets when it comes to decorators. It literally makes\nyour function code execute twice.</p>\n<p>For example, see below:</p>\n<pre><span class=\"c1\"># example.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">double_down</span> <span class=\"kn\">import</span> <span class=\"n\">double_down</span>\n\n<span class=\"nd\">@double_down</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Hello, Python\"</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n  <span class=\"n\">hello</span><span class=\"p\">()</span>\n</pre>\n<p>Then in your terminal:</p>\n<pre>&gt; python example.py\nHello, Python\nHello, Python\n</pre>\n</div>\n<div id=\"questions\">\n<h2>Questions</h2>\n<p>This project was just a fun little foray into learning how decorators work. In all\nhonesty, it\u2019d be a big stretch of the imagination to justify its use in some real\nlife application.</p>\n<p>If you\u2019re curious how decorators work or want to get some hands on experience, I\u2019d\nstrongly encourage making one of your own. There\u2019s plenty of documentation out there\nto use.</p>\n</div>\n\n          </div>"}, "last_serial": 1664104, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4e6fdb9ed4eb3ab2452c692d149b7871", "sha256": "007b78a54a96f3cd2450fdf1a9805e7bec89b82d48f77d6f8fdf9b2a34b18cbd"}, "downloads": -1, "filename": "double_down-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4e6fdb9ed4eb3ab2452c692d149b7871", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2069, "upload_time": "2015-08-04T16:28:05", "upload_time_iso_8601": "2015-08-04T16:28:05.542185Z", "url": "https://files.pythonhosted.org/packages/f2/04/46a7f7392181d2e2db30f374224699c522087e3e8a45c22a1964c552a279/double_down-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "792a33dc89178772443dead0cb2bd232", "sha256": "ba04d761d380b2bfb86d5eb9abd8ad7e14acc533152b04b2bfe28598cb023cfa"}, "downloads": -1, "filename": "double_down-1.0.1.tar.gz", "has_sig": false, "md5_digest": "792a33dc89178772443dead0cb2bd232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2076, "upload_time": "2015-08-04T18:10:50", "upload_time_iso_8601": "2015-08-04T18:10:50.558063Z", "url": "https://files.pythonhosted.org/packages/46/dd/eafb955a2e9ffabb4e7bbacf9948930cd881810221cb19681fa999ee1cb5/double_down-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "792a33dc89178772443dead0cb2bd232", "sha256": "ba04d761d380b2bfb86d5eb9abd8ad7e14acc533152b04b2bfe28598cb023cfa"}, "downloads": -1, "filename": "double_down-1.0.1.tar.gz", "has_sig": false, "md5_digest": "792a33dc89178772443dead0cb2bd232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2076, "upload_time": "2015-08-04T18:10:50", "upload_time_iso_8601": "2015-08-04T18:10:50.558063Z", "url": "https://files.pythonhosted.org/packages/46/dd/eafb955a2e9ffabb4e7bbacf9948930cd881810221cb19681fa999ee1cb5/double_down-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:09 2020"}