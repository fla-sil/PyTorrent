{"info": {"author": "Sergey Tikhonov", "author_email": "zimbler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Testing"], "description": "Rest-Framework-Smoke\n====================\n\nSmoke tests for API built with Django Rest Framework.\n\n[![Build Status](https://travis-ci.org/just-work/rest-framework-smoke.svg?branch=master)](https://travis-ci.org/just-work/rest-framework-smoke)\n[![codecov](https://codecov.io/gh/just-work/rest-framework-smoke/branch/master/graph/badge.svg)](https://codecov.io/gh/just-work/rest-framework-smoke)\n[![PyPI version](https://badge.fury.io/py/rest-framework-smoke.svg)](https://badge.fury.io/py/rest-framework-smoke)\n\nInstallation\n------------\n\n```shell script\npip install rest-framework-smoke\n```\n\nUsage\n-----\n\nFull example located at `testproject.testapp.tests`\n\n```python\nfrom rest_framework.test import APITestCase\n\nfrom rest_framework_smoke.tests.mixins import ReadOnlyViewSetTestsMixin\nfrom rest_framework_smoke.tests.schemas import get_object_schema\nfrom testproject.testapp import models\n\nTASK_SCHEMA = {\n    \"id\": {\"type\": [\"number\"]},\n    \"name\": {\"type\": [\"string\"]},\n}\n\nPROJECT_SCHEMA = {\n    \"id\": {\"type\": [\"number\"]},\n    \"name\": {\"type\": [\"string\"]},\n    \"task_set\": {\n        \"type\": [\"array\"],\n        \"minItems\": 1,\n        \"items\": get_object_schema(TASK_SCHEMA)\n    }\n}\n\n\nclass ProjectViewSetTestCase(ReadOnlyViewSetTestsMixin, APITestCase):\n    object_name = 'project'\n    basename = 'projects'\n    schema = details_schema = PROJECT_SCHEMA\n    pagination_schema = None\n\n    @classmethod\n    def setUpTestData(cls):\n        cls.project = models.Project.objects.create(name='project')\n        cls.task = models.Task.objects.create(name='task', project=cls.project)\n```\n\nHappy API testing :)\n\nAbout schema checks\n-------------------\n\nRest-Framework-Smoke uses `jsonschema` to validate API response format.\nWhen we check format, we should pay attention to:\n* no unexpected properties are found (is so, they are not validated by schema)\n* there no missing properties (missing properties are not validated)\n* arrays are not empty (because there is nothing to check in empty arrays)\n* all values are not null (because null values mostly are null by default, and\n    other type variants will never appear in schema validation code)\n\nSo there are two helpers in `rest_framework_smoke.tests.schemas` to enforce \nthese constraints (and they are used internally for format tests):\n* `get_object_schema`\n* `get_array_schema`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/just-work/rest-framework-smoke", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rest-framework-smoke", "package_url": "https://pypi.org/project/rest-framework-smoke/", "platform": "", "project_url": "https://pypi.org/project/rest-framework-smoke/", "project_urls": {"Homepage": "https://github.com/just-work/rest-framework-smoke"}, "release_url": "https://pypi.org/project/rest-framework-smoke/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Smoke tests for API built with Django Rest Framework", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rest-Framework-Smoke</h1>\n<p>Smoke tests for API built with Django Rest Framework.</p>\n<p><a href=\"https://travis-ci.org/just-work/rest-framework-smoke\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce6cd50c8db0a86cd63d540bdd8b9dbaea09a17e/68747470733a2f2f7472617669732d63692e6f72672f6a7573742d776f726b2f726573742d6672616d65776f726b2d736d6f6b652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/just-work/rest-framework-smoke\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4003ee91d516b8df61f0aae0f367442623c4d754/68747470733a2f2f636f6465636f762e696f2f67682f6a7573742d776f726b2f726573742d6672616d65776f726b2d736d6f6b652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/rest-framework-smoke\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94ed4b43fd46791695b4ef1583bceb2366bd2561/68747470733a2f2f62616467652e667572792e696f2f70792f726573742d6672616d65776f726b2d736d6f6b652e737667\"></a></p>\n<h2>Installation</h2>\n<pre>pip install rest-framework-smoke\n</pre>\n<h2>Usage</h2>\n<p>Full example located at <code>testproject.testapp.tests</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework.test</span> <span class=\"kn\">import</span> <span class=\"n\">APITestCase</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework_smoke.tests.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">ReadOnlyViewSetTestsMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework_smoke.tests.schemas</span> <span class=\"kn\">import</span> <span class=\"n\">get_object_schema</span>\n<span class=\"kn\">from</span> <span class=\"nn\">testproject.testapp</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"n\">TASK_SCHEMA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"number\"</span><span class=\"p\">]},</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"string\"</span><span class=\"p\">]},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">PROJECT_SCHEMA</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"number\"</span><span class=\"p\">]},</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"string\"</span><span class=\"p\">]},</span>\n    <span class=\"s2\">\"task_set\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"array\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"minItems\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"items\"</span><span class=\"p\">:</span> <span class=\"n\">get_object_schema</span><span class=\"p\">(</span><span class=\"n\">TASK_SCHEMA</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ProjectViewSetTestCase</span><span class=\"p\">(</span><span class=\"n\">ReadOnlyViewSetTestsMixin</span><span class=\"p\">,</span> <span class=\"n\">APITestCase</span><span class=\"p\">):</span>\n    <span class=\"n\">object_name</span> <span class=\"o\">=</span> <span class=\"s1\">'project'</span>\n    <span class=\"n\">basename</span> <span class=\"o\">=</span> <span class=\"s1\">'projects'</span>\n    <span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">details_schema</span> <span class=\"o\">=</span> <span class=\"n\">PROJECT_SCHEMA</span>\n    <span class=\"n\">pagination_schema</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setUpTestData</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Project</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'project'</span><span class=\"p\">)</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'task'</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"o\">=</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">project</span><span class=\"p\">)</span>\n</pre>\n<p>Happy API testing :)</p>\n<h2>About schema checks</h2>\n<p>Rest-Framework-Smoke uses <code>jsonschema</code> to validate API response format.\nWhen we check format, we should pay attention to:</p>\n<ul>\n<li>no unexpected properties are found (is so, they are not validated by schema)</li>\n<li>there no missing properties (missing properties are not validated)</li>\n<li>arrays are not empty (because there is nothing to check in empty arrays)</li>\n<li>all values are not null (because null values mostly are null by default, and\nother type variants will never appear in schema validation code)</li>\n</ul>\n<p>So there are two helpers in <code>rest_framework_smoke.tests.schemas</code> to enforce\nthese constraints (and they are used internally for format tests):</p>\n<ul>\n<li><code>get_object_schema</code></li>\n<li><code>get_array_schema</code></li>\n</ul>\n\n          </div>"}, "last_serial": 6879860, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "af3f84dd86a6a1ad2a5fae4349c6ffcd", "sha256": "265d42fa635cde5d3f182312dc9694726ec24cb87876d74723a2daa044b73899"}, "downloads": -1, "filename": "rest-framework-smoke-0.0.2.tar.gz", "has_sig": false, "md5_digest": "af3f84dd86a6a1ad2a5fae4349c6ffcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5669, "upload_time": "2020-03-25T10:54:23", "upload_time_iso_8601": "2020-03-25T10:54:23.111751Z", "url": "https://files.pythonhosted.org/packages/df/01/03cb346959ccefa12be9daa4db4f81911d609239fcfb3ca828d1a4e66a01/rest-framework-smoke-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af3f84dd86a6a1ad2a5fae4349c6ffcd", "sha256": "265d42fa635cde5d3f182312dc9694726ec24cb87876d74723a2daa044b73899"}, "downloads": -1, "filename": "rest-framework-smoke-0.0.2.tar.gz", "has_sig": false, "md5_digest": "af3f84dd86a6a1ad2a5fae4349c6ffcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5669, "upload_time": "2020-03-25T10:54:23", "upload_time_iso_8601": "2020-03-25T10:54:23.111751Z", "url": "https://files.pythonhosted.org/packages/df/01/03cb346959ccefa12be9daa4db4f81911d609239fcfb3ca828d1a4e66a01/rest-framework-smoke-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:39 2020"}