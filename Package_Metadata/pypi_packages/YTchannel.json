{"info": {"author": "Sanjay Developer", "author_email": "sureshsanjay805@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# YTchannel\nYouTube channel & video details extractor\n\n## Features\nRetrieve:-\n- Youtube Video downloader\n- Youtube Channel details\n- Youtube Video details\n\n## Requirements\nYou need to install requests module\n```\npip install requests\n```\n\n## Installation\n```\npip install YTchannel\n```\n\n## Importing\n```python\nimport YTchannel as yt\n```\n\n\n## To Download Videos\n```python\ndownload = yt.YTdownloader()\n```\n#### Initialize video extraction\n```python\ntry:\n  download.startDownload(video_url=video_url,video_id = video_id)\nexcept KeyError:\n  #Invalid video id\nexcept ConnectionError:\n  #Connection error\nexcept IndexError:\n  #Can't find video\nexcept:\n  #Something went wrong\n```\n#### Get Result\n```python\nresult = download.getResults()\n```\n\n\n## For Channel details\n```python\nchannel = yt.Channel()\n```\n#### Calling with a Id and API key\nThe first parameter must be the Channel id\nCheck below example\nhttps://www.youtube.com/channel/UC_channel_id\nhere in this example the channel id is **UC_channel_id**\n```python\ntry:\n  channel.startChannel(UC_channel_id,YOUR_API_KEY)\nexcept KeyError:\n  #Invalid channel id\nexcept ConnectionError:\n  #Connection error\nexcept:\n  #Something went wrong\n```\n#### Check if the request is success\n```python\nresult = channel.getChannel() #this will return all details in a dictionary\nif result['result'] == 'OK':\n  #No problem do your thing\nelse:\n  #Something wrong like - no channel found or invalid api key\n  #use result['code'] to get the error code or result['message'] to know the message\n```\n#### How to get details\n```python\nprint(result) #this will print all the details of a channel in a dictionary\n```\n\n\n## For video details\n```python\nvideo = yt.Video()\n```\n#### Calling with a Id and API key\nThe first parameter must be the video id or video_url\nCheck below example\nhttps://www.youtube.com/watch?v=video_id\nhere in this example the video id is **video_id**\n```python\ntry:\n  video.startVideo(video_url=video_url,video_id = video_id,YOUR_API_KEY)\nexcept KeyError:\n  #Invalid video id\nexcept ConnectionError:\n  #Connection error\nexcept:\n  #Something went wrong\n```\n#### Check if the request is success\n```python\nresultVideo = video.getVideo() #this will return all details in a dictionary\nif resultVideo['result'] == 'OK':\n  #No problem do your thing\nelse:\n  #Something wrong like - no video found or invalid api key\n  #use resultVideo['code'] to get the error code or resultVideo['message'] to know the message\n```\n#### How to get details\n```python\nprint(resultVideo) #this will print all the details of a video in a dictionary\n```\n\n## Any issues?\nCreate an issue on github\n\n## Contact me\n- On twitter https://twitter.com/SanjayDevTech\n\n\n# **Happy coding**\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SanjayDevTech/YTchannel", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "YTchannel", "package_url": "https://pypi.org/project/YTchannel/", "platform": "", "project_url": "https://pypi.org/project/YTchannel/", "project_urls": {"Homepage": "https://github.com/SanjayDevTech/YTchannel"}, "release_url": "https://pypi.org/project/YTchannel/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "YouTube channel & video details extractor", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>YTchannel</h1>\n<p>YouTube channel &amp; video details extractor</p>\n<h2>Features</h2>\n<p>Retrieve:-</p>\n<ul>\n<li>Youtube Video downloader</li>\n<li>Youtube Channel details</li>\n<li>Youtube Video details</li>\n</ul>\n<h2>Requirements</h2>\n<p>You need to install requests module</p>\n<pre><code>pip install requests\n</code></pre>\n<h2>Installation</h2>\n<pre><code>pip install YTchannel\n</code></pre>\n<h2>Importing</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">YTchannel</span> <span class=\"k\">as</span> <span class=\"nn\">yt</span>\n</pre>\n<h2>To Download Videos</h2>\n<pre><span class=\"n\">download</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">YTdownloader</span><span class=\"p\">()</span>\n</pre>\n<h4>Initialize video extraction</h4>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"n\">download</span><span class=\"o\">.</span><span class=\"n\">startDownload</span><span class=\"p\">(</span><span class=\"n\">video_url</span><span class=\"o\">=</span><span class=\"n\">video_url</span><span class=\"p\">,</span><span class=\"n\">video_id</span> <span class=\"o\">=</span> <span class=\"n\">video_id</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Invalid video id</span>\n<span class=\"k\">except</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Connection error</span>\n<span class=\"k\">except</span> <span class=\"ne\">IndexError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Can't find video</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Something went wrong</span>\n</pre>\n<h4>Get Result</h4>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">download</span><span class=\"o\">.</span><span class=\"n\">getResults</span><span class=\"p\">()</span>\n</pre>\n<h2>For Channel details</h2>\n<pre><span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">Channel</span><span class=\"p\">()</span>\n</pre>\n<h4>Calling with a Id and API key</h4>\n<p>The first parameter must be the Channel id\nCheck below example\n<a href=\"https://www.youtube.com/channel/UC_channel_id\" rel=\"nofollow\">https://www.youtube.com/channel/UC_channel_id</a>\nhere in this example the channel id is <strong>UC_channel_id</strong></p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">startChannel</span><span class=\"p\">(</span><span class=\"n\">UC_channel_id</span><span class=\"p\">,</span><span class=\"n\">YOUR_API_KEY</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Invalid channel id</span>\n<span class=\"k\">except</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Connection error</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Something went wrong</span>\n</pre>\n<h4>Check if the request is success</h4>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">getChannel</span><span class=\"p\">()</span> <span class=\"c1\">#this will return all details in a dictionary</span>\n<span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'result'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'OK'</span><span class=\"p\">:</span>\n  <span class=\"c1\">#No problem do your thing</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Something wrong like - no channel found or invalid api key</span>\n  <span class=\"c1\">#use result['code'] to get the error code or result['message'] to know the message</span>\n</pre>\n<h4>How to get details</h4>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\">#this will print all the details of a channel in a dictionary</span>\n</pre>\n<h2>For video details</h2>\n<pre><span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">yt</span><span class=\"o\">.</span><span class=\"n\">Video</span><span class=\"p\">()</span>\n</pre>\n<h4>Calling with a Id and API key</h4>\n<p>The first parameter must be the video id or video_url\nCheck below example\n<a href=\"https://www.youtube.com/watch?v=video_id\" rel=\"nofollow\">https://www.youtube.com/watch?v=video_id</a>\nhere in this example the video id is <strong>video_id</strong></p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">startVideo</span><span class=\"p\">(</span><span class=\"n\">video_url</span><span class=\"o\">=</span><span class=\"n\">video_url</span><span class=\"p\">,</span><span class=\"n\">video_id</span> <span class=\"o\">=</span> <span class=\"n\">video_id</span><span class=\"p\">,</span><span class=\"n\">YOUR_API_KEY</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Invalid video id</span>\n<span class=\"k\">except</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Connection error</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Something went wrong</span>\n</pre>\n<h4>Check if the request is success</h4>\n<pre><span class=\"n\">resultVideo</span> <span class=\"o\">=</span> <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">getVideo</span><span class=\"p\">()</span> <span class=\"c1\">#this will return all details in a dictionary</span>\n<span class=\"k\">if</span> <span class=\"n\">resultVideo</span><span class=\"p\">[</span><span class=\"s1\">'result'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'OK'</span><span class=\"p\">:</span>\n  <span class=\"c1\">#No problem do your thing</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n  <span class=\"c1\">#Something wrong like - no video found or invalid api key</span>\n  <span class=\"c1\">#use resultVideo['code'] to get the error code or resultVideo['message'] to know the message</span>\n</pre>\n<h4>How to get details</h4>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resultVideo</span><span class=\"p\">)</span> <span class=\"c1\">#this will print all the details of a video in a dictionary</span>\n</pre>\n<h2>Any issues?</h2>\n<p>Create an issue on github</p>\n<h2>Contact me</h2>\n<ul>\n<li>On twitter <a href=\"https://twitter.com/SanjayDevTech\" rel=\"nofollow\">https://twitter.com/SanjayDevTech</a></li>\n</ul>\n<h1><strong>Happy coding</strong></h1>\n\n          </div>"}, "last_serial": 7097841, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "684c7027fcf4436e42d7934a86fe78f6", "sha256": "8f530ae0bd67eba15e7ff12484d3f13d6f9cd53b73ce1f73557e25bce9933a16"}, "downloads": -1, "filename": "YTchannel-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "684c7027fcf4436e42d7934a86fe78f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2881, "upload_time": "2020-04-10T13:33:25", "upload_time_iso_8601": "2020-04-10T13:33:25.549512Z", "url": "https://files.pythonhosted.org/packages/d9/20/c6ca7efa721017d034008c85597d68c0aa1cf41b6588647c1981296af981/YTchannel-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23d05dd1363a15d007d915b4b83e6013", "sha256": "34e09e13768da8c9db4f665478cc8a6be6ecc42111c91ed63b6a8b6c3db61abf"}, "downloads": -1, "filename": "YTchannel-0.0.1.tar.gz", "has_sig": false, "md5_digest": "23d05dd1363a15d007d915b4b83e6013", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1550, "upload_time": "2020-04-10T13:33:27", "upload_time_iso_8601": "2020-04-10T13:33:27.958970Z", "url": "https://files.pythonhosted.org/packages/a7/8d/41c10e99591d636e658bb28d16da790158a8a4fc342e647a8da5b326ac30/YTchannel-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "dabfeac0a916efba4ed1a2ddd96ed27c", "sha256": "9ce1e1294a0987f12a2a80ff96a515181597bd61c21496891db9baa86a84fc42"}, "downloads": -1, "filename": "YTchannel-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dabfeac0a916efba4ed1a2ddd96ed27c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3447, "upload_time": "2020-04-11T05:20:44", "upload_time_iso_8601": "2020-04-11T05:20:44.862256Z", "url": "https://files.pythonhosted.org/packages/11/fe/29fd1ba92e7d5f2a11409c387229061a9aea4ec6aff37982679d9a1c9329/YTchannel-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d45d94cf593fecf90d67ca1f792529cf", "sha256": "3434a880446c4b812683fe9b13939f9cfe15e070742d367c0b309119d126e659"}, "downloads": -1, "filename": "YTchannel-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d45d94cf593fecf90d67ca1f792529cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2110, "upload_time": "2020-04-11T05:20:46", "upload_time_iso_8601": "2020-04-11T05:20:46.550427Z", "url": "https://files.pythonhosted.org/packages/46/11/9814c69fd1ee75da03f02d29f4a6a578392581fba1fc4988c9b39788355b/YTchannel-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "2e2d2c86d088214a972765d09f0a6896", "sha256": "8bcebf2badceb6dd69676c09e5fc48ba77d4504d4585c65f1d47e0eaff3bcbbc"}, "downloads": -1, "filename": "YTchannel-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2e2d2c86d088214a972765d09f0a6896", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2737, "upload_time": "2020-04-11T15:00:08", "upload_time_iso_8601": "2020-04-11T15:00:08.578790Z", "url": "https://files.pythonhosted.org/packages/d4/1f/d761c2d1fe3ec58ddefb1ed0eb8e1224b372d534b26803f713f9f0a75264/YTchannel-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17c8ebea8125dfbe18b31cbfbc6af31c", "sha256": "6f45bdecf7d600419973430b51a26f996962ec75b49c4589015876452987461e"}, "downloads": -1, "filename": "YTchannel-0.0.4.tar.gz", "has_sig": false, "md5_digest": "17c8ebea8125dfbe18b31cbfbc6af31c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2171, "upload_time": "2020-04-11T15:00:10", "upload_time_iso_8601": "2020-04-11T15:00:10.285323Z", "url": "https://files.pythonhosted.org/packages/36/7f/0d9e9a5d19b05a8c95c28c943dae2b2eec17b9ae8e64f20dc6a42deb7889/YTchannel-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "13e618cbc6bcb602f9a409bf3bb22a72", "sha256": "669ef7c39681118a343f7b5ddc1b4aee57b4269c3f5a98714f37568b093c2fdd"}, "downloads": -1, "filename": "YTchannel-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "13e618cbc6bcb602f9a409bf3bb22a72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4136, "upload_time": "2020-04-11T15:11:08", "upload_time_iso_8601": "2020-04-11T15:11:08.373876Z", "url": "https://files.pythonhosted.org/packages/ea/85/a99256d0c06f0b1ec0445df00489b1445d9798d77f845e47edef667ee4e8/YTchannel-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10a986839bff7546dbe288fb990f6b9f", "sha256": "d714accb4ce9917bf27deea62a4528007fd0631c9e594fd4a0adb5f12cafb260"}, "downloads": -1, "filename": "YTchannel-0.0.5.tar.gz", "has_sig": false, "md5_digest": "10a986839bff7546dbe288fb990f6b9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3234, "upload_time": "2020-04-11T15:11:10", "upload_time_iso_8601": "2020-04-11T15:11:10.007955Z", "url": "https://files.pythonhosted.org/packages/5b/7b/a0a6b20fe5eb0d516692a5cde9d5462d8c1898ce7ef86b39e5d95e8148ee/YTchannel-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "1b1dd6eab3185edd459286d9598a3c25", "sha256": "72fa2a520a7e9ce7b171ef5071a1e961540d7d3e588f059c082cc27fd0cfcbd9"}, "downloads": -1, "filename": "YTchannel-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1b1dd6eab3185edd459286d9598a3c25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5618, "upload_time": "2020-04-11T16:11:53", "upload_time_iso_8601": "2020-04-11T16:11:53.560100Z", "url": "https://files.pythonhosted.org/packages/e2/60/f53c477a4e0d4ee2392dc821ab8fa8d476e2c0e4c7e0176442e6dc85297f/YTchannel-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec64946a3d161473f067b7226a7ba906", "sha256": "483049cd13f8d5f04f49d60a46bf344565b9959585a435cf5d077b2e9f386ad1"}, "downloads": -1, "filename": "YTchannel-0.0.6.tar.gz", "has_sig": false, "md5_digest": "ec64946a3d161473f067b7226a7ba906", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3555, "upload_time": "2020-04-11T16:11:55", "upload_time_iso_8601": "2020-04-11T16:11:55.287544Z", "url": "https://files.pythonhosted.org/packages/e2/ca/e252ad3c0da187d1d69236cd4736bf9c42fc450c557c9c3733b5e7a75283/YTchannel-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f797cc5052f82375a6decbbe512a980b", "sha256": "68439e4d281841544c76cd05d50112ddc3a2c8cdc2051b7bd8818c2edabb1b2f"}, "downloads": -1, "filename": "YTchannel-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "f797cc5052f82375a6decbbe512a980b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4876, "upload_time": "2020-04-23T06:37:43", "upload_time_iso_8601": "2020-04-23T06:37:43.152867Z", "url": "https://files.pythonhosted.org/packages/58/f1/04118d51438c94d3d2e84b2941da686fde995e12829019b51591055247d2/YTchannel-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff9aa1022be0f2f9fcc91c21bcce6cfd", "sha256": "bc5ed651d43035da46793cdf1133523b46ad6ee7c1b2934109fea40358e389b3"}, "downloads": -1, "filename": "YTchannel-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ff9aa1022be0f2f9fcc91c21bcce6cfd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4165, "upload_time": "2020-04-23T06:37:47", "upload_time_iso_8601": "2020-04-23T06:37:47.736259Z", "url": "https://files.pythonhosted.org/packages/f2/51/928805496caaafbcdba9433a3b9f282156d7f5bc23853c1081ed88e0579c/YTchannel-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "9beef6661d1149ab9564a319573520f6", "sha256": "0e5461a87bb380cf4247b3128f7b8410283bf39b834e4295e203c9886f40fabf"}, "downloads": -1, "filename": "YTchannel-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "9beef6661d1149ab9564a319573520f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4880, "upload_time": "2020-04-24T10:01:42", "upload_time_iso_8601": "2020-04-24T10:01:42.922998Z", "url": "https://files.pythonhosted.org/packages/ad/a0/57d37f7d6ba3ed736827b1f832f061019457f9de93a93092a48d3d55ec3e/YTchannel-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f320c52585de75c190ab7a37ac6f1602", "sha256": "e744cd61634788c845b826418cd10418a18f6496502adf90b294cd46ebc72f37"}, "downloads": -1, "filename": "YTchannel-0.0.8.tar.gz", "has_sig": false, "md5_digest": "f320c52585de75c190ab7a37ac6f1602", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4197, "upload_time": "2020-04-24T10:01:44", "upload_time_iso_8601": "2020-04-24T10:01:44.697421Z", "url": "https://files.pythonhosted.org/packages/82/94/a461645cc3c2e95a3124a0bb19b7bedb1c6107433481d9d6181aa72ab05b/YTchannel-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "6d38ab103a2c6688a5e64f2723c3d6de", "sha256": "57ed5170eca17733cfc95756584276a624f7ae20a355adcf2b005b45fbc74392"}, "downloads": -1, "filename": "YTchannel-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "6d38ab103a2c6688a5e64f2723c3d6de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4878, "upload_time": "2020-04-24T10:12:56", "upload_time_iso_8601": "2020-04-24T10:12:56.586529Z", "url": "https://files.pythonhosted.org/packages/26/2e/72121941a7be4892f810da356ae61f232c93c3c69dd0cfccef7c0c923f9c/YTchannel-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8073fb47c80e16a92c3787d78d32f916", "sha256": "fa6b0d6c0cf346bb27e06c6cfdea1a113ce6cd1c8c8c9dd3b3713c9d100f4505"}, "downloads": -1, "filename": "YTchannel-0.0.9.tar.gz", "has_sig": false, "md5_digest": "8073fb47c80e16a92c3787d78d32f916", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4185, "upload_time": "2020-04-24T10:12:58", "upload_time_iso_8601": "2020-04-24T10:12:58.005510Z", "url": "https://files.pythonhosted.org/packages/1d/2e/14d99d380470a08e36c44a2d7863be940c89f2621e54f706ad1903e380c0/YTchannel-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "3365ee5b9de0a3de655285d35f38ff68", "sha256": "a06650ff0ae432a29213243472d7efdfe3370df0c1e4ec2fe970b7eadee05b28"}, "downloads": -1, "filename": "YTchannel-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3365ee5b9de0a3de655285d35f38ff68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4879, "upload_time": "2020-04-25T05:09:18", "upload_time_iso_8601": "2020-04-25T05:09:18.206492Z", "url": "https://files.pythonhosted.org/packages/c7/3d/08d277c539c84b696bcbe6a4385e865c212e676e39d319bf6f3b5c1d9d3a/YTchannel-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab7d1059dead6205c380ea91500be672", "sha256": "2967f74a2e9c405d117e8dec0990fb65de49607d5f72b6fca74a3ca086b24f59"}, "downloads": -1, "filename": "YTchannel-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ab7d1059dead6205c380ea91500be672", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4189, "upload_time": "2020-04-25T05:09:19", "upload_time_iso_8601": "2020-04-25T05:09:19.884746Z", "url": "https://files.pythonhosted.org/packages/f9/8b/5b021758cf2a90656a538fac561024c054166f2cf655824ec425889485b5/YTchannel-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3365ee5b9de0a3de655285d35f38ff68", "sha256": "a06650ff0ae432a29213243472d7efdfe3370df0c1e4ec2fe970b7eadee05b28"}, "downloads": -1, "filename": "YTchannel-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3365ee5b9de0a3de655285d35f38ff68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4879, "upload_time": "2020-04-25T05:09:18", "upload_time_iso_8601": "2020-04-25T05:09:18.206492Z", "url": "https://files.pythonhosted.org/packages/c7/3d/08d277c539c84b696bcbe6a4385e865c212e676e39d319bf6f3b5c1d9d3a/YTchannel-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab7d1059dead6205c380ea91500be672", "sha256": "2967f74a2e9c405d117e8dec0990fb65de49607d5f72b6fca74a3ca086b24f59"}, "downloads": -1, "filename": "YTchannel-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ab7d1059dead6205c380ea91500be672", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4189, "upload_time": "2020-04-25T05:09:19", "upload_time_iso_8601": "2020-04-25T05:09:19.884746Z", "url": "https://files.pythonhosted.org/packages/f9/8b/5b021758cf2a90656a538fac561024c054166f2cf655824ec425889485b5/YTchannel-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:32 2020"}