{"info": {"author": "Mario C\u00e9sar Se\u00f1oranis Ayala", "author_email": "mariocesar.c50@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\n.. image:: https://badge.fury.io/py/boot.py.svg\n    :target: https://pypi.python.org/pypi/boot.py/\n\n.. image:: https://travis-ci.org/mariocesar/boot.py.svg?branch=master\n    :target: https://travis-ci.org/mariocesar/boot.py\n\nInstall and Use\n---------------\n\nInstall with pip.\n\n.. code-block:: console\n\n    pip install boot.py\n\n\nCreate a file and import `boot`. For example this will install a virtual\nenvironment, install requirements, and create some files.\n\n.. code-block:: python\n\n    #!/usr/bin/env python3\n    import os\n    import venv\n\n    from boot import step, run\n    from pathlib import Path\n\n    root_path = Path(__file__).parent.resolve()\n    venv_dir = root_path / '.venv'\n\n    with step(f'Creating virtualenv in {venv_dir.name}'):\n        if not venv_dir.exists():\n            venv.create(venv_dir, with_pip=True)\n\n    with step('Installing requirements'):\n        run(f'{venv_dir / \"bin/pip\"} install -r requirements.txt')\n\n    with step('Creating directories'):\n        run(f'mkdir -p public/media')\n        run(f'mkdir -p public/static')\n\n    with step('Environment file'):\n        envfile = root_path / '.env'\n\n        if not envfile.exists():\n            with open(envfile, 'w') as handle:\n                os.chmod(envfile, 0o600)\n                handle.write('')\n\nThis will output.\n\n.. code-block:: console\n\n    $ ./script.py\n    Creating virtualenv in .venv ... [Ok]\n    Installing requirements ... [Ok]\n    Installing project ... [Ok]\n    Creating directories ... [Ok]\n    Environment file ... [Ok]\n\nSimple!\n\nYou can also compose tasks to decide what to execute and what order.\n\n.. code-block:: python\n\n    #!/usr/bin/env python3\n    import os\n    import venv\n\n    from boot import step, run, task\n    from pathlib import Path\n\n    root_path = Path(__file__).parent.resolve()\n    venv_dir = root_path / '.venv'\n\n\n    @task\n    def build(this)\n        with step(f'Creating virtualenv in {venv_dir.name}'):\n            if not venv_dir.exists():\n                venv.create(venv_dir, with_pip=True)\n\n        with step('Creating directories'):\n            run(f'mkdir -p public/media')\n            run(f'mkdir -p public/static')\n\n        with step('Environment file'):\n            envfile = root_path / '.env'\n\n            if not envfile.exists():\n                with open(envfile, 'w') as handle:\n                    os.chmod(envfile, 0o600)\n                    handle.write('')\n\n\n    @task\n    def requirements(this)\n        with step('Installing requirements'):\n            run(f'{venv_dir / \"bin/pip\"} install -r requirements.txt')\n\n\n    @task\n    def backup(this)\n        with step(f'Backup db'):\n            run('pg_dump -d database -f output.sql')\n\n\n    if __name__ == '__main__':\n        tasks = {\n            'default': build >> requirements,\n            'build': build,\n            'requirements': requirements,\n        }\n\n        if len(sys.argv) == 1:\n            if sys.argv[0] in tasks:\n                tasks[sys.argv[0]]()\n            else:\n                print(f'Unknown task: {sys.argv[0]}')\n                print(f'Available tasks are: {tasks.keys()}')\n        else:\n            default()\n\nThere are helpers to build scripts with less code, for example\nwe can replace in the code above the main call with a\na simple task argument parser:\n\n\n.. code-block:: python\n\n    from boot.cli import ActionsCommand\n\n    if __name__ == '__main__':\n        ActionsCommand.main(\n            default=build >> requirements,\n            build=build,\n            requirements=requirements,\n        }\n\nThis parse `--help` ", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mariocesar/boot.py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "boot.py", "package_url": "https://pypi.org/project/boot.py/", "platform": "", "project_url": "https://pypi.org/project/boot.py/", "project_urls": {"Homepage": "https://github.com/mariocesar/boot.py"}, "release_url": "https://pypi.org/project/boot.py/0.16/", "requires_dist": null, "requires_python": "", "summary": "Boot.py is an small set of tools to build simple scripts. Python3 only, and really small: 2Kb!", "version": "0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/boot.py/\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/boot.py.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcbf426b190cd8234f0092ceada12ff6bc010f5d/68747470733a2f2f62616467652e667572792e696f2f70792f626f6f742e70792e737667\"></a>\n<a href=\"https://travis-ci.org/mariocesar/boot.py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mariocesar/boot.py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4f181f3f1f88a98fd8440773fd7ef7549a9fffb/68747470733a2f2f7472617669732d63692e6f72672f6d6172696f63657361722f626f6f742e70792e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"install-and-use\">\n<h2>Install and Use</h2>\n<p>Install with pip.</p>\n<pre><span class=\"go\">pip install boot.py</span>\n</pre>\n<p>Create a file and import <cite>boot</cite>. For example this will install a virtual\nenvironment, install requirements, and create some files.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">venv</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">boot</span> <span class=\"kn\">import</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">run</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">root_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span>\n<span class=\"n\">venv_dir</span> <span class=\"o\">=</span> <span class=\"n\">root_path</span> <span class=\"o\">/</span> <span class=\"s1\">'.venv'</span>\n\n<span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Creating virtualenv in </span><span class=\"si\">{</span><span class=\"n\">venv_dir</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">venv_dir</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n        <span class=\"n\">venv</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">venv_dir</span><span class=\"p\">,</span> <span class=\"n\">with_pip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s1\">'Installing requirements'</span><span class=\"p\">):</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">venv_dir</span> <span class=\"o\">/</span> <span class=\"s2\">\"bin/pip\"</span><span class=\"si\">}</span><span class=\"s1\"> install -r requirements.txt'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s1\">'Creating directories'</span><span class=\"p\">):</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'mkdir -p public/media'</span><span class=\"p\">)</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'mkdir -p public/static'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s1\">'Environment file'</span><span class=\"p\">):</span>\n    <span class=\"n\">envfile</span> <span class=\"o\">=</span> <span class=\"n\">root_path</span> <span class=\"o\">/</span> <span class=\"s1\">'.env'</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">envfile</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">envfile</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">handle</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">envfile</span><span class=\"p\">,</span> <span class=\"mo\">0o600</span><span class=\"p\">)</span>\n            <span class=\"n\">handle</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n</pre>\n<p>This will output.</p>\n<pre><span class=\"gp\">$</span> ./script.py\n<span class=\"go\">Creating virtualenv in .venv ... [Ok]\nInstalling requirements ... [Ok]\nInstalling project ... [Ok]\nCreating directories ... [Ok]\nEnvironment file ... [Ok]</span>\n</pre>\n<p>Simple!</p>\n<p>You can also compose tasks to decide what to execute and what order.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">venv</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">boot</span> <span class=\"kn\">import</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">run</span><span class=\"p\">,</span> <span class=\"n\">task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">root_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span>\n<span class=\"n\">venv_dir</span> <span class=\"o\">=</span> <span class=\"n\">root_path</span> <span class=\"o\">/</span> <span class=\"s1\">'.venv'</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"k\">def</span> <span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Creating virtualenv in </span><span class=\"si\">{</span><span class=\"n\">venv_dir</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">venv_dir</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"n\">venv</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">venv_dir</span><span class=\"p\">,</span> <span class=\"n\">with_pip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s1\">'Creating directories'</span><span class=\"p\">):</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'mkdir -p public/media'</span><span class=\"p\">)</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'mkdir -p public/static'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s1\">'Environment file'</span><span class=\"p\">):</span>\n        <span class=\"n\">envfile</span> <span class=\"o\">=</span> <span class=\"n\">root_path</span> <span class=\"o\">/</span> <span class=\"s1\">'.env'</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">envfile</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">envfile</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">handle</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">envfile</span><span class=\"p\">,</span> <span class=\"mo\">0o600</span><span class=\"p\">)</span>\n                <span class=\"n\">handle</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"k\">def</span> <span class=\"nf\">requirements</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s1\">'Installing requirements'</span><span class=\"p\">):</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">venv_dir</span> <span class=\"o\">/</span> <span class=\"s2\">\"bin/pip\"</span><span class=\"si\">}</span><span class=\"s1\"> install -r requirements.txt'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"k\">def</span> <span class=\"nf\">backup</span><span class=\"p\">(</span><span class=\"n\">this</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Backup db'</span><span class=\"p\">):</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'pg_dump -d database -f output.sql'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">build</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">requirements</span><span class=\"p\">,</span>\n        <span class=\"s1\">'build'</span><span class=\"p\">:</span> <span class=\"n\">build</span><span class=\"p\">,</span>\n        <span class=\"s1\">'requirements'</span><span class=\"p\">:</span> <span class=\"n\">requirements</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">tasks</span><span class=\"p\">:</span>\n            <span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Unknown task: </span><span class=\"si\">{</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Available tasks are: </span><span class=\"si\">{</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">default</span><span class=\"p\">()</span>\n</pre>\n<p>There are helpers to build scripts with less code, for example\nwe can replace in the code above the main call with a\na simple task argument parser:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">boot.cli</span> <span class=\"kn\">import</span> <span class=\"n\">ActionsCommand</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">ActionsCommand</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">build</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">requirements</span><span class=\"p\">,</span>\n        <span class=\"n\">build</span><span class=\"o\">=</span><span class=\"n\">build</span><span class=\"p\">,</span>\n        <span class=\"n\">requirements</span><span class=\"o\">=</span><span class=\"n\">requirements</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>This parse <cite>\u2013help</cite></p>\n</div>\n\n          </div>"}, "last_serial": 3820885, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "cce1f796787bb0e432f6f4c5d7e7c036", "sha256": "d7557894623d76048db0333cc71e1b6c0679799f12ec1f79ce1b145fa2467a61"}, "downloads": -1, "filename": "boot.py-0.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cce1f796787bb0e432f6f4c5d7e7c036", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7944, "upload_time": "2018-02-16T20:28:48", "upload_time_iso_8601": "2018-02-16T20:28:48.624295Z", "url": "https://files.pythonhosted.org/packages/a7/6c/6da0f53d0c2a29e137e4e9f1d234305a0c3dbcd5c359b12ce13550f6c585/boot.py-0.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cc736a497623ccbef4e4072b1ed03cd", "sha256": "5ab9cfd99ccf30b96eb06da92009fb0642bfad87f2cc1452173bcee086791674"}, "downloads": -1, "filename": "boot.py-0.10.tar.gz", "has_sig": false, "md5_digest": "6cc736a497623ccbef4e4072b1ed03cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5091, "upload_time": "2018-02-16T20:28:45", "upload_time_iso_8601": "2018-02-16T20:28:45.752071Z", "url": "https://files.pythonhosted.org/packages/73/5f/048bc798738e5360844bbe096b381518bbd0dd3ad80b5f2018fd3db22beb/boot.py-0.10.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "b12637bd606fa3daf06e5f386e34626f", "sha256": "c537aaacb79557d517cfad2660884fb8307b040d5356048c7cd7a0a00aeff611"}, "downloads": -1, "filename": "boot.py-0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b12637bd606fa3daf06e5f386e34626f", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8405, "upload_time": "2018-03-27T02:39:50", "upload_time_iso_8601": "2018-03-27T02:39:50.593329Z", "url": "https://files.pythonhosted.org/packages/53/8e/ac7b4aa9002412b010d156185218ec721090a47d65f58cf2a902079c5ef3/boot.py-0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffce2cf88b35cdbd6e284ea2e12be080", "sha256": "c4fa81a79ff4257d0ea25d77f4fbdcab567cd59d390ce36f736cb18bd1548f5f"}, "downloads": -1, "filename": "boot.py-0.12.tar.gz", "has_sig": false, "md5_digest": "ffce2cf88b35cdbd6e284ea2e12be080", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5457, "upload_time": "2018-03-27T02:39:59", "upload_time_iso_8601": "2018-03-27T02:39:59.459520Z", "url": "https://files.pythonhosted.org/packages/93/b8/f5566bfd5ae0af0aeef1b4f0c653a4148663f2bf22542a5d1f7080e04dd3/boot.py-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "7f92d2a56f83b7cc03164eba2b82bc6a", "sha256": "f1dfafdf84ecce09e6ccc8188dab7303af9e3bd6d6ef7ed2123f2e389ab617b3"}, "downloads": -1, "filename": "boot.py-0.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7f92d2a56f83b7cc03164eba2b82bc6a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8439, "upload_time": "2018-03-27T03:07:36", "upload_time_iso_8601": "2018-03-27T03:07:36.582320Z", "url": "https://files.pythonhosted.org/packages/47/1a/b87e5d5407d4115568d3e8fbbbb6f78482c3e04f56fdef1028911a830dbc/boot.py-0.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bda8df4127d2f1ddda59a87dfec0ee7a", "sha256": "0eebbf0ded4eeaaa3a9281f92427c3e2a3a2a6f489208e68cdc6cc438341be14"}, "downloads": -1, "filename": "boot.py-0.13.tar.gz", "has_sig": false, "md5_digest": "bda8df4127d2f1ddda59a87dfec0ee7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5487, "upload_time": "2018-03-27T03:07:29", "upload_time_iso_8601": "2018-03-27T03:07:29.453914Z", "url": "https://files.pythonhosted.org/packages/ec/88/2f54eee6a846922c8b5add68eac96a941e793ac74892d92ccd66b6bab115/boot.py-0.13.tar.gz", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "22dbd2231d9ca508a76bda0f0ddde360", "sha256": "3d14e74d02f2ea39585fbe9ee6b8f44d037585dc3b021d8d3d35aa6c6679fdc5"}, "downloads": -1, "filename": "boot.py-0.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "22dbd2231d9ca508a76bda0f0ddde360", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8442, "upload_time": "2018-03-27T03:19:56", "upload_time_iso_8601": "2018-03-27T03:19:56.581307Z", "url": "https://files.pythonhosted.org/packages/06/f7/6c29e9b0914351785f912055e887eb3bcd5d228fe40b056341d5d6550732/boot.py-0.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "566098733fd9e641f5fd8e066e9c09e9", "sha256": "97183da6e9c0ad5a32e16f7e47214baccb0efbf5cdc4bf4131a6e79ec1772c25"}, "downloads": -1, "filename": "boot.py-0.14.tar.gz", "has_sig": false, "md5_digest": "566098733fd9e641f5fd8e066e9c09e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5485, "upload_time": "2018-03-27T03:20:03", "upload_time_iso_8601": "2018-03-27T03:20:03.468858Z", "url": "https://files.pythonhosted.org/packages/fe/f4/177ef1c13905be260cf7577e988565af46d3a31a5973c82369748da9b33a/boot.py-0.14.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "064b96634f44785b86b8bf00fce1e606", "sha256": "8995d7bc6d33e11c01d51e91e5e32e044fd4833d3a66c961e43b4e02a94f194b"}, "downloads": -1, "filename": "boot.py-0.15-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "064b96634f44785b86b8bf00fce1e606", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 10837, "upload_time": "2018-04-26T17:56:47", "upload_time_iso_8601": "2018-04-26T17:56:47.402216Z", "url": "https://files.pythonhosted.org/packages/6d/e9/a89fb569d5285874b96862bd414cb520cdcd2a4910ae9a1d6f3ae9373be9/boot.py-0.15-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe3d404ff44e87c6406c8724a300ff65", "sha256": "e1eb64871a437252ffb9d03dfb4027a87c533cd2eaf8876f2bcc795a72791d62"}, "downloads": -1, "filename": "boot.py-0.15.tar.gz", "has_sig": false, "md5_digest": "fe3d404ff44e87c6406c8724a300ff65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7664, "upload_time": "2018-04-26T17:56:56", "upload_time_iso_8601": "2018-04-26T17:56:56.172604Z", "url": "https://files.pythonhosted.org/packages/3b/2c/3122dfe4ffb0ac975cc289b42f38b82e2eea6f40acbfaee5ef8eb4074434/boot.py-0.15.tar.gz", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "4d090e52133cac357ff0222e1f932ace", "sha256": "9317d464e71395adb07d165149438147ed951ce277166d2958c346479ef1262f"}, "downloads": -1, "filename": "boot.py-0.16-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d090e52133cac357ff0222e1f932ace", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8988, "upload_time": "2018-04-30T14:02:50", "upload_time_iso_8601": "2018-04-30T14:02:50.392127Z", "url": "https://files.pythonhosted.org/packages/34/f4/ccb9cc0a692f2300b40db3c13f091047380dee682c94d206287947309fa8/boot.py-0.16-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e278fbf71d41833b4609d8e7e93cf2d6", "sha256": "958b8165c67996b0ce80d49e86ce3082146930949ec4ebc4c80f41bcd98287ed"}, "downloads": -1, "filename": "boot.py-0.16.tar.gz", "has_sig": false, "md5_digest": "e278fbf71d41833b4609d8e7e93cf2d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7311, "upload_time": "2018-04-30T14:02:24", "upload_time_iso_8601": "2018-04-30T14:02:24.352790Z", "url": "https://files.pythonhosted.org/packages/8f/02/663478b989d6e52c3fead2cb36bed20aa97d604515e94d314afe594007f5/boot.py-0.16.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "63da49fdc19f5dde87eebc54b5033e85", "sha256": "57cad192aa782451dede68b497eefc1ac468459fa79df8c5dab7227ed7093356"}, "downloads": -1, "filename": "boot.py-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "63da49fdc19f5dde87eebc54b5033e85", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5944, "upload_time": "2018-02-14T16:08:42", "upload_time_iso_8601": "2018-02-14T16:08:42.506636Z", "url": "https://files.pythonhosted.org/packages/02/10/8b349b85b40e997629b08e1bbfc13b49c06084c25d2fe0b3a528724b2c0f/boot.py-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19fcc366b15608830eb0b6a82b371690", "sha256": "ae5500223bd9cc21a1ab0b057d3999677cbd4e76202bf99a5ca814d789285a6b"}, "downloads": -1, "filename": "boot.py-0.7.tar.gz", "has_sig": false, "md5_digest": "19fcc366b15608830eb0b6a82b371690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3560, "upload_time": "2018-02-14T16:08:40", "upload_time_iso_8601": "2018-02-14T16:08:40.204274Z", "url": "https://files.pythonhosted.org/packages/fa/da/3801033abdd8cc3ee2425c28908298701b604984cdac1a5a2deeab910e5b/boot.py-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "4a618463c9990174da5c2cfa88909111", "sha256": "031136faaa3b83091e5b015abc5e8c1ba981cdab3d3663705736a7329b08aa96"}, "downloads": -1, "filename": "boot.py-0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4a618463c9990174da5c2cfa88909111", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7036, "upload_time": "2018-02-15T00:08:06", "upload_time_iso_8601": "2018-02-15T00:08:06.187934Z", "url": "https://files.pythonhosted.org/packages/70/ff/39deff1e167c9a08641d735bd306ac16c565ba1a625a7934892cec0ee827/boot.py-0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8b6cd9936b11727d95eb1320d21c8f6", "sha256": "958539cbd31f4ac4946c42847b1d69c04c567ccba27fc9c0e679011b3865b91b"}, "downloads": -1, "filename": "boot.py-0.8.tar.gz", "has_sig": false, "md5_digest": "d8b6cd9936b11727d95eb1320d21c8f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4473, "upload_time": "2018-02-15T00:08:03", "upload_time_iso_8601": "2018-02-15T00:08:03.969816Z", "url": "https://files.pythonhosted.org/packages/9b/d7/64fe12f77db55cf5922745ac70659eadfae4856632a5c36db2f4dc868a9b/boot.py-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "c5006fe8d6a64879ac868ec83cef8029", "sha256": "8a1d3b5acb7d430e6e60c596cf5ed248d87e56bd7a8e3ba9e7ff7aa3fba7f311"}, "downloads": -1, "filename": "boot.py-0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c5006fe8d6a64879ac868ec83cef8029", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7427, "upload_time": "2018-02-16T15:03:03", "upload_time_iso_8601": "2018-02-16T15:03:03.979316Z", "url": "https://files.pythonhosted.org/packages/94/b6/2f6e47f932f9388a8c544008e5d27d45ab05cc14c0dc8342efa8f626d86d/boot.py-0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd857818d71602447b8313a01e0f69d2", "sha256": "c8382c25f994aa61f332e83a3018f9e330342fd7cb53ac3d5bb6a1a8d6cda75b"}, "downloads": -1, "filename": "boot.py-0.9.tar.gz", "has_sig": false, "md5_digest": "cd857818d71602447b8313a01e0f69d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4834, "upload_time": "2018-02-16T15:03:02", "upload_time_iso_8601": "2018-02-16T15:03:02.134503Z", "url": "https://files.pythonhosted.org/packages/81/ec/835ee3357da548150fd0812d55c392d2ca23c6775c1a5268495672038705/boot.py-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d090e52133cac357ff0222e1f932ace", "sha256": "9317d464e71395adb07d165149438147ed951ce277166d2958c346479ef1262f"}, "downloads": -1, "filename": "boot.py-0.16-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d090e52133cac357ff0222e1f932ace", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8988, "upload_time": "2018-04-30T14:02:50", "upload_time_iso_8601": "2018-04-30T14:02:50.392127Z", "url": "https://files.pythonhosted.org/packages/34/f4/ccb9cc0a692f2300b40db3c13f091047380dee682c94d206287947309fa8/boot.py-0.16-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e278fbf71d41833b4609d8e7e93cf2d6", "sha256": "958b8165c67996b0ce80d49e86ce3082146930949ec4ebc4c80f41bcd98287ed"}, "downloads": -1, "filename": "boot.py-0.16.tar.gz", "has_sig": false, "md5_digest": "e278fbf71d41833b4609d8e7e93cf2d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7311, "upload_time": "2018-04-30T14:02:24", "upload_time_iso_8601": "2018-04-30T14:02:24.352790Z", "url": "https://files.pythonhosted.org/packages/8f/02/663478b989d6e52c3fead2cb36bed20aa97d604515e94d314afe594007f5/boot.py-0.16.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:42 2020"}