{"info": {"author": "Alex Kritikos", "author_email": "alex@8bitb.us", "bugtrack_url": null, "classifiers": [], "description": "Palu\n====\n\nA small spider, useful for checking a site for 404s and 500s.\nIt's a forked of [Patu][1].Palu requires httplib2 and lxml:\n\n    pip install -U httplib2 lxml\n    \nIs it safe? [![Build Status](https://secure.travis-ci.org/akrito/palu.png?branch=master)](http://travis-ci.org/akrito/palu)\n\nQuick Usage\n===========\n\nTo see available options:\n\n    palu.py --help\n\nTo spider an entire site using 5 workers, only showing errors:\n\n    palu.py --spiders=5 www.example.com\n    \nTo spider, stopping after the first level of links:\n\n    palu.py --depth=1 www.example.com\n    \nTo get a list of every linked page on a site:\n\n    palu.py --generate www.example.com > urls.txt\n    \nInstead of spidering for URLs, use a file instead and show all responses:\n\n    palu.py --input=urls.txt --verbose www.example.com\n\nFormat of URLs File\n===================\n\nThe output produced by <code>--generate</code> is formatted like so:\n\n    FIRST_URL<TAB>None\n    LINK1<TAB>REFERER\n    LINK2<TAB>REFERER\n    \n<code>--input</code> can take a file of that format, or one URL per line with no referer. <code>--input=-</code> reads from stdin.\n\nTesting\n=======\n\nPalu uses Nose for testing. To install Nose and test:\n\n    pip install -U nose\n    nosetests\n\n[1]:https://pypi.python.org/pypi/patu", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/marimore/palu", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "palu", "package_url": "https://pypi.org/project/palu/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/palu/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/marimore/palu"}, "release_url": "https://pypi.org/project/palu/0.1/", "requires_dist": null, "requires_python": null, "summary": "Palu is a small spider, a forked of patu.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"palu\">\n<h2>Palu</h2>\n<p>A small spider, useful for checking a site for 404s and 500s.\nIt\u2019s a forked of [Patu][1].Palu requires httplib2 and lxml:</p>\n<blockquote>\npip install -U httplib2 lxml</blockquote>\n<p>Is it safe? [![Build Status](<a href=\"https://secure.travis-ci.org/akrito/palu.png?branch=master)%5D(http://travis-ci.org/akrito/palu\" rel=\"nofollow\">https://secure.travis-ci.org/akrito/palu.png?branch=master)](http://travis-ci.org/akrito/palu</a>)</p>\n</div>\n<div id=\"quick-usage\">\n<h2>Quick Usage</h2>\n<p>To see available options:</p>\n<blockquote>\npalu.py \u2013help</blockquote>\n<p>To spider an entire site using 5 workers, only showing errors:</p>\n<blockquote>\npalu.py \u2013spiders=5 www.example.com</blockquote>\n<p>To spider, stopping after the first level of links:</p>\n<blockquote>\npalu.py \u2013depth=1 www.example.com</blockquote>\n<p>To get a list of every linked page on a site:</p>\n<blockquote>\npalu.py \u2013generate www.example.com &gt; urls.txt</blockquote>\n<p>Instead of spidering for URLs, use a file instead and show all responses:</p>\n<blockquote>\npalu.py \u2013input=urls.txt \u2013verbose www.example.com</blockquote>\n</div>\n<div id=\"format-of-urls-file\">\n<h2>Format of URLs File</h2>\n<p>The output produced by &lt;code&gt;\u2013generate&lt;/code&gt; is formatted like so:</p>\n<blockquote>\nFIRST_URL&lt;TAB&gt;None\nLINK1&lt;TAB&gt;REFERER\nLINK2&lt;TAB&gt;REFERER</blockquote>\n<p>&lt;code&gt;\u2013input&lt;/code&gt; can take a file of that format, or one URL per line with no referer. &lt;code&gt;\u2013input=-&lt;/code&gt; reads from stdin.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Palu uses Nose for testing. To install Nose and test:</p>\n<blockquote>\npip install -U nose\nnosetests</blockquote>\n<p>[1]:<a href=\"https://pypi.python.org/pypi/patu\" rel=\"nofollow\">https://pypi.python.org/pypi/patu</a></p>\n</div>\n\n          </div>"}, "last_serial": 795980, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "27e0d848f3f1fa580f1c1158236820e1", "sha256": "1173921168bf427495e2d431ec50522bf80240d42c6872c3213d08abb7defa74"}, "downloads": -1, "filename": "palu-0.1.tar.gz", "has_sig": false, "md5_digest": "27e0d848f3f1fa580f1c1158236820e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9423, "upload_time": "2013-05-09T11:50:49", "upload_time_iso_8601": "2013-05-09T11:50:49.358475Z", "url": "https://files.pythonhosted.org/packages/42/e0/dee0cd6f7486c0adef86a8db0558b6aa70943b06e6487d46376a62737bba/palu-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27e0d848f3f1fa580f1c1158236820e1", "sha256": "1173921168bf427495e2d431ec50522bf80240d42c6872c3213d08abb7defa74"}, "downloads": -1, "filename": "palu-0.1.tar.gz", "has_sig": false, "md5_digest": "27e0d848f3f1fa580f1c1158236820e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9423, "upload_time": "2013-05-09T11:50:49", "upload_time_iso_8601": "2013-05-09T11:50:49.358475Z", "url": "https://files.pythonhosted.org/packages/42/e0/dee0cd6f7486c0adef86a8db0558b6aa70943b06e6487d46376a62737bba/palu-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:43 2020"}