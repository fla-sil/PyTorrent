{"info": {"author": "Mayank Nader", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "<p align=\"center\">\n  <img  algin=\"center\" height=\"300\" src=\"https://raw.githubusercontent.com/makkoncept/pyvoc/master/.art/logo14.png\" />\n   <h3 align=\"center\">Cross-platform dictionary and vocabulary building command line tool</h3> \n  <p align=\"center\">\n    <a href=\"https://github.com/makkoncept/pyvoc/blob/master/LICENSE\">\n      <img src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n    </a>\n    <a href=\"https://github.com/makkoncept/pyvoc\">\n    \t<img src=\"https://img.shields.io/badge/platform-Linux%20%7C%20Windows%20%7C%20macOS-blue.svg\" alt=\"platforms\" />\n    </a>\n    <a href=\"https://github.com/makkoncept/pyvoc/\">\n      <img src=\"https://img.shields.io/badge/awesome-yes-green.svg\" />\n    </a>\n  </p>\n</p>\n\n---\n\n# Pyvoc \n\n<p align=\"center\">\n  <img alt=\"simple pyvoc example\" src=\"https://raw.githubusercontent.com/makkoncept/pyvoc/master/.art/new.gif\">\n</p>\n\n\n**Use it to improve your english vocabulary, brush up some word meanings or as a simple command line dictionary.**\n\n---\nJump to:\n\n- [Installation](#Installation)\n- [Usage](#Usage)\n- [Groups](#Groups)\n- [Examples](#Examples)\n- [todo](#todo)\n\n## Installation\nInstall it using pip. Just run:\n```bash\npip3 install pyvoc\n```\n\n## Usage\nAfter installing pyvoc, run `pyvoc word` to _automatically create necessary config files_ in your home directory.\n\n- Fetch meaning of word\n```\npyvoc word\n```\n\n- Fetch meaning of word and add it to vocabulary group:\n```\npyoc word -a\n```\n- Take quiz of 20 questions from vocabulary group 101:\n```\npyvoc 101 -q 30\n```\n_read some more [examples](#Examples)_\n\n```\n\u279c pyvoc -h\nusage: pyvoc [-h] [-a] [-g G] [-r] [-q QUIZ] [-l] word\n\ncommand line dictionary and vocabulary building tool\n\npositional arguments:\n  word                  give meaning of WORD\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a, --add             add WORD to vocabulary group\n  -g G                  {optional} group no.(1-50) to add the WORD to\n  -r, --revise          revise a vocabulary group (WORD is group number).\n  -q QUIZ, --quiz QUIZ  starts quiz, WORD is group no. and QUIZ is no. of\n                        questions\n  -l, --list            list all user made vocabulary groups\n\n```\n## groups\npyvoc lets you add words to vocabulary groups, which you can later revise or take quiz from.\n- 100 groups of 60 words are **reserved** for the user. \n- pyvoc **incrementally add words** to groups 51-100, if group number is not provided.\n- you can specify a group from 1-50 using [-g] option. (helpful when you want to **organize some words yourself**) \n- 3 refined, **custom groups of 800 words each** (words taken from GRE and SAT preparation websites) already present.\n- these groups are 101, 102 and 103.\n\n## Examples\n\n### add word to a specific group\n```\npyvoc word -a -g 5\n```\n\nFetch meaning of the word and add it to vocabulary group 5. **Use this option to organize words however you like.**\n\n**_for example_** \n- alphabatically\n- words from books you have been reading\n- parts of speech  \n- increasing difficulty\n---\n### revise a group\n```\npyvoc 51 -r\n```\n revise word meaning of vocabulary group 51(if present) in random order.\n\n ---\n ### show group list\n```\npyvoc word -l\n```\n Fetch meaning of word and lists all group numbers along with their size.\n\n## todo\n - [ ] make the code more pythonic (_continuous process_)\n - [ ] add options to revise by pattern a particular group. (like all the words starting with 's')\n - [ ] show the word-meaning user got wrong at the end of quiz.\n - [ ] add option to show all the words added by the user to groups. \n - [ ] increase the number of custom groups\n - [ ] also show custom groups in [-l] option\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/makkoncept/pyvoc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyvoc", "package_url": "https://pypi.org/project/pyvoc/", "platform": "", "project_url": "https://pypi.org/project/pyvoc/", "project_urls": {"Homepage": "http://github.com/makkoncept/pyvoc"}, "release_url": "https://pypi.org/project/pyvoc/1.2.0/", "requires_dist": ["requests", "termcolor", "colorama", "pyenchant"], "requires_python": "", "summary": "cross-platform dictionary and vocabulary building command line tool.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img height=\"300\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac5d3a8f9d4d05445adfc1da06a3e9cd148e969d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d616b6b6f6e636570742f7079766f632f6d61737465722f2e6172742f6c6f676f31342e706e67\">\n   </p><h3>Cross-platform dictionary and vocabulary building command line tool</h3> \n  <p align=\"center\">\n    <a href=\"https://github.com/makkoncept/pyvoc/blob/master/LICENSE\" rel=\"nofollow\">\n      <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\">\n    </a>\n    <a href=\"https://github.com/makkoncept/pyvoc\" rel=\"nofollow\">\n    \t<img alt=\"platforms\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e34659d5df9969b64a11f03bdfa396e2e05f6f70/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d4c696e757825323025374325323057696e646f77732532302537432532306d61634f532d626c75652e737667\">\n    </a>\n    <a href=\"https://github.com/makkoncept/pyvoc/\" rel=\"nofollow\">\n      <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e74fcc943fb988589fda7be481b7a4bd318156fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f617765736f6d652d7965732d677265656e2e737667\">\n    </a>\n  </p>\n<p></p>\n<hr>\n<h1>Pyvoc</h1>\n<p align=\"center\">\n  <img alt=\"simple pyvoc example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d30b05c0da171179ea15e56318d411d603de6fa/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d616b6b6f6e636570742f7079766f632f6d61737465722f2e6172742f6e65772e676966\">\n</p>\n<p><strong>Use it to improve your english vocabulary, brush up some word meanings or as a simple command line dictionary.</strong></p>\n<hr>\n<p>Jump to:</p>\n<ul>\n<li><a href=\"#Installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#Usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#Groups\" rel=\"nofollow\">Groups</a></li>\n<li><a href=\"#Examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#todo\" rel=\"nofollow\">todo</a></li>\n</ul>\n<h2>Installation</h2>\n<p>Install it using pip. Just run:</p>\n<pre>pip3 install pyvoc\n</pre>\n<h2>Usage</h2>\n<p>After installing pyvoc, run <code>pyvoc word</code> to <em>automatically create necessary config files</em> in your home directory.</p>\n<ul>\n<li>Fetch meaning of word</li>\n</ul>\n<pre><code>pyvoc word\n</code></pre>\n<ul>\n<li>Fetch meaning of word and add it to vocabulary group:</li>\n</ul>\n<pre><code>pyoc word -a\n</code></pre>\n<ul>\n<li>Take quiz of 20 questions from vocabulary group 101:</li>\n</ul>\n<pre><code>pyvoc 101 -q 30\n</code></pre>\n<p><em>read some more <a href=\"#Examples\" rel=\"nofollow\">examples</a></em></p>\n<pre><code>\u279c pyvoc -h\nusage: pyvoc [-h] [-a] [-g G] [-r] [-q QUIZ] [-l] word\n\ncommand line dictionary and vocabulary building tool\n\npositional arguments:\n  word                  give meaning of WORD\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a, --add             add WORD to vocabulary group\n  -g G                  {optional} group no.(1-50) to add the WORD to\n  -r, --revise          revise a vocabulary group (WORD is group number).\n  -q QUIZ, --quiz QUIZ  starts quiz, WORD is group no. and QUIZ is no. of\n                        questions\n  -l, --list            list all user made vocabulary groups\n\n</code></pre>\n<h2>groups</h2>\n<p>pyvoc lets you add words to vocabulary groups, which you can later revise or take quiz from.</p>\n<ul>\n<li>100 groups of 60 words are <strong>reserved</strong> for the user.</li>\n<li>pyvoc <strong>incrementally add words</strong> to groups 51-100, if group number is not provided.</li>\n<li>you can specify a group from 1-50 using [-g] option. (helpful when you want to <strong>organize some words yourself</strong>)</li>\n<li>3 refined, <strong>custom groups of 800 words each</strong> (words taken from GRE and SAT preparation websites) already present.</li>\n<li>these groups are 101, 102 and 103.</li>\n</ul>\n<h2>Examples</h2>\n<h3>add word to a specific group</h3>\n<pre><code>pyvoc word -a -g 5\n</code></pre>\n<p>Fetch meaning of the word and add it to vocabulary group 5. <strong>Use this option to organize words however you like.</strong></p>\n<p><strong><em>for example</em></strong></p>\n<ul>\n<li>alphabatically</li>\n<li>words from books you have been reading</li>\n<li>parts of speech</li>\n<li>increasing difficulty</li>\n</ul>\n<hr>\n<h3>revise a group</h3>\n<pre><code>pyvoc 51 -r\n</code></pre>\n<p>revise word meaning of vocabulary group 51(if present) in random order.</p>\n<hr>\n<h3>show group list</h3>\n<pre><code>pyvoc word -l\n</code></pre>\n<p>Fetch meaning of word and lists all group numbers along with their size.</p>\n<h2>todo</h2>\n<ul>\n<li>[ ] make the code more pythonic (<em>continuous process</em>)</li>\n<li>[ ] add options to revise by pattern a particular group. (like all the words starting with 's')</li>\n<li>[ ] show the word-meaning user got wrong at the end of quiz.</li>\n<li>[ ] add option to show all the words added by the user to groups.</li>\n<li>[ ] increase the number of custom groups</li>\n<li>[ ] also show custom groups in [-l] option</li>\n</ul>\n\n          </div>"}, "last_serial": 4913844, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "96a34f9e945146486f918c50cc7efc35", "sha256": "4c9c5d055f972ccf0d2c0d6afc2dfa612f7034aac9eeafe2d008015a6254595b"}, "downloads": -1, "filename": "pyvoc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "96a34f9e945146486f918c50cc7efc35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10546, "upload_time": "2019-01-11T13:44:49", "upload_time_iso_8601": "2019-01-11T13:44:49.365697Z", "url": "https://files.pythonhosted.org/packages/59/53/6a7d106c94dc7ef06879090f3531572796c98d0daf34c3fdaf5950d02ec1/pyvoc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27a0436e91356350b279b7a5999d002b", "sha256": "0e9215be45d47701c9d28cc1e884f2c6e1da9e7061675ee8e9c35e6826bb5a83"}, "downloads": -1, "filename": "pyvoc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "27a0436e91356350b279b7a5999d002b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 472776, "upload_time": "2019-01-11T13:44:59", "upload_time_iso_8601": "2019-01-11T13:44:59.502964Z", "url": "https://files.pythonhosted.org/packages/e4/44/1a3b6374a76324a958150d297be232610adc8762eb653bfdda268a9822a6/pyvoc-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "22c6b50ed5b6240979ca5eb9e61b19b2", "sha256": "416d816dd91b1268ee8b511750de8ca1f804b9d709b581ca4857f0c4f49c20d7"}, "downloads": -1, "filename": "pyvoc-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "22c6b50ed5b6240979ca5eb9e61b19b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10401, "upload_time": "2019-01-11T14:56:36", "upload_time_iso_8601": "2019-01-11T14:56:36.442015Z", "url": "https://files.pythonhosted.org/packages/7c/34/15b2e3bce4d04d8e41dffe563f441330bff9bb526e25e45e337482826639/pyvoc-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2363648bdd117b61099d0cc805efadf1", "sha256": "574555635507a7fc4921a7fc6a778c175eef93c60efabeccdee4813d8968f89e"}, "downloads": -1, "filename": "pyvoc-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2363648bdd117b61099d0cc805efadf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9018, "upload_time": "2019-01-11T14:56:38", "upload_time_iso_8601": "2019-01-11T14:56:38.050918Z", "url": "https://files.pythonhosted.org/packages/8a/fa/9a1ff209d370c8d29148e0a81d6b74ebbdced762e355680211575580a829/pyvoc-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "ae7a57ff4de04b2e10a10fab8fb68a7f", "sha256": "979158d5e2958c0a0575b3ce81be3f38a16ad27eccdcce41484c4370359a199a"}, "downloads": -1, "filename": "pyvoc-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae7a57ff4de04b2e10a10fab8fb68a7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10645, "upload_time": "2019-03-08T05:21:07", "upload_time_iso_8601": "2019-03-08T05:21:07.075353Z", "url": "https://files.pythonhosted.org/packages/fe/46/dc2673ac9d1c313b29ba683e8e3fb6e5a895118140c0c6cc8babd6ece760/pyvoc-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2419bee6f9adc37cf8863e4d121ebcb7", "sha256": "8ddf18d2f0596351d04a451c404efd7fe43e153aee06a952e73ebc4a87c47822"}, "downloads": -1, "filename": "pyvoc-1.2.0.tar.gz", "has_sig": false, "md5_digest": "2419bee6f9adc37cf8863e4d121ebcb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19749, "upload_time": "2019-03-08T05:21:09", "upload_time_iso_8601": "2019-03-08T05:21:09.928800Z", "url": "https://files.pythonhosted.org/packages/80/1a/15bdf64b07b8ba412e8e4f1b5d144f2dbe5c51d0f78c5537d6e3ed782102/pyvoc-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ae7a57ff4de04b2e10a10fab8fb68a7f", "sha256": "979158d5e2958c0a0575b3ce81be3f38a16ad27eccdcce41484c4370359a199a"}, "downloads": -1, "filename": "pyvoc-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae7a57ff4de04b2e10a10fab8fb68a7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10645, "upload_time": "2019-03-08T05:21:07", "upload_time_iso_8601": "2019-03-08T05:21:07.075353Z", "url": "https://files.pythonhosted.org/packages/fe/46/dc2673ac9d1c313b29ba683e8e3fb6e5a895118140c0c6cc8babd6ece760/pyvoc-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2419bee6f9adc37cf8863e4d121ebcb7", "sha256": "8ddf18d2f0596351d04a451c404efd7fe43e153aee06a952e73ebc4a87c47822"}, "downloads": -1, "filename": "pyvoc-1.2.0.tar.gz", "has_sig": false, "md5_digest": "2419bee6f9adc37cf8863e4d121ebcb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19749, "upload_time": "2019-03-08T05:21:09", "upload_time_iso_8601": "2019-03-08T05:21:09.928800Z", "url": "https://files.pythonhosted.org/packages/80/1a/15bdf64b07b8ba412e8e4f1b5d144f2dbe5c51d0f78c5537d6e3ed782102/pyvoc-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:51 2020"}