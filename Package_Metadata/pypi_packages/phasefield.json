{"info": {"author": "Matthew Collins and Andreas Dedner", "author_email": "a.s.dedner@warwick.ac.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Automatic Construction of Phasefield Approximations from Sharp-Interface Models\n===============================================================================\n\nThe title says it all: this model uses a simple description of a sharp\ninterface problem to derive a phasefield approximation which can then be\nsolved using a finite-element toolbox. The domain specific language\n[UFL][ufllink] is used both for defining the sharp interface model and for\nthe weak formulation of the phasefield approximation. The resulting UFL form\ncan then be inserted into any of the finite element packages available\nwhich can take UFL forms as an input. A class for evolving the solution\nover time is available based on [dune][dunelink]  and [fenics][fenicslink].\nThe bindings for the `dune` package include both local grid refinement and\ncoarsening. This makes it easy to track the interface with a fine grid\nwhile a coarser grid can be used away from the interface. This is essential\nfor evolving phasefield models efficiently. In addition the `dune` stepper\nalso provides an efficient solver for obstacle problems so that double\nobstacle potentials can be used in the modelling. This solver is based\non [tnmg][tnmglink].\n\nSo far this model has been tested with:\n\n- two phase models including additional bulk equations, e.g., for the temperature\n- multphase models\n- single phase models, e.g., crack propagation problems\n\nInstallation\n------------\nThe easiest way to test this module is using the `docker` container provided.\nAssuming `docker` is available on your system simply running the script\n`rundune.sh` will download the docker image for the [dune-fem][fempylink]\npackage and start the container. Within the container running the\n`phasefield.sh` script will complete the installation - this step takes\nsome time but is only required the first time the docker container is set\nup. Within the docker container `/host` points to the folder from which\n`rundune.sh` was started, e.g., the root folder of this repository.\nSome examples are contained in the `tutorials` folder.\nMore information on using the docker container can be found is available\n[here][fempylink] including some information for MAC and Windows user.\n\n[ufllink]: https://\n[fenicslink]: https://\n[dunepylink]: https://gitlab.dune-project.org/staging/dune-python\n[dunelink]: http://dune-project.org\n[fempylink]: https://gitlab.dune-project.org/dune-fem/dune-fem\n[tnmglink]: https://\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.dune-project.org/dune-fem/phasefield", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "phasefield", "package_url": "https://pypi.org/project/phasefield/", "platform": "", "project_url": "https://pypi.org/project/phasefield/", "project_urls": {"Homepage": "https://gitlab.dune-project.org/dune-fem/phasefield"}, "release_url": "https://pypi.org/project/phasefield/1.0.1/", "requires_dist": ["UFL (==2017.1.0)"], "requires_python": "", "summary": "Interface problem solver based on the phase-field methodology", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Automatic Construction of Phasefield Approximations from Sharp-Interface Models</h1>\n<p>The title says it all: this model uses a simple description of a sharp\ninterface problem to derive a phasefield approximation which can then be\nsolved using a finite-element toolbox. The domain specific language\n<a href=\"https://\" rel=\"nofollow\">UFL</a> is used both for defining the sharp interface model and for\nthe weak formulation of the phasefield approximation. The resulting UFL form\ncan then be inserted into any of the finite element packages available\nwhich can take UFL forms as an input. A class for evolving the solution\nover time is available based on <a href=\"http://dune-project.org\" rel=\"nofollow\">dune</a>  and <a href=\"https://\" rel=\"nofollow\">fenics</a>.\nThe bindings for the <code>dune</code> package include both local grid refinement and\ncoarsening. This makes it easy to track the interface with a fine grid\nwhile a coarser grid can be used away from the interface. This is essential\nfor evolving phasefield models efficiently. In addition the <code>dune</code> stepper\nalso provides an efficient solver for obstacle problems so that double\nobstacle potentials can be used in the modelling. This solver is based\non <a href=\"https://\" rel=\"nofollow\">tnmg</a>.</p>\n<p>So far this model has been tested with:</p>\n<ul>\n<li>two phase models including additional bulk equations, e.g., for the temperature</li>\n<li>multphase models</li>\n<li>single phase models, e.g., crack propagation problems</li>\n</ul>\n<h2>Installation</h2>\n<p>The easiest way to test this module is using the <code>docker</code> container provided.\nAssuming <code>docker</code> is available on your system simply running the script\n<code>rundune.sh</code> will download the docker image for the <a href=\"https://gitlab.dune-project.org/dune-fem/dune-fem\" rel=\"nofollow\">dune-fem</a>\npackage and start the container. Within the container running the\n<code>phasefield.sh</code> script will complete the installation - this step takes\nsome time but is only required the first time the docker container is set\nup. Within the docker container <code>/host</code> points to the folder from which\n<code>rundune.sh</code> was started, e.g., the root folder of this repository.\nSome examples are contained in the <code>tutorials</code> folder.\nMore information on using the docker container can be found is available\n<a href=\"https://gitlab.dune-project.org/dune-fem/dune-fem\" rel=\"nofollow\">here</a> including some information for MAC and Windows user.</p>\n\n          </div>"}, "last_serial": 6267140, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "27d2030cf3a88f85d77be789997c1ee2", "sha256": "2790510f7d0389b2b225244d811bab7cd2578c089ae65922c7703584f36bdd2b"}, "downloads": -1, "filename": "phasefield-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "27d2030cf3a88f85d77be789997c1ee2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40854, "upload_time": "2019-12-08T12:00:56", "upload_time_iso_8601": "2019-12-08T12:00:56.879963Z", "url": "https://files.pythonhosted.org/packages/1d/dc/256798274e0996abfafc670cd66890b15e2678b07adf14b1c7af7500fef3/phasefield-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcf7bff9c89e2c91f772d5c0b468fcbd", "sha256": "a081e1057d58384ebcdf5bd84624ac40d11e70da5109ce13afb7b6a8d0de18be"}, "downloads": -1, "filename": "phasefield-1.0.tar.gz", "has_sig": false, "md5_digest": "fcf7bff9c89e2c91f772d5c0b468fcbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23948, "upload_time": "2019-12-08T12:00:59", "upload_time_iso_8601": "2019-12-08T12:00:59.518183Z", "url": "https://files.pythonhosted.org/packages/8e/0d/300fd36e3a9ea0134ccb2ffab931c22d6bd35711aa3c3694d5699c2d0b87/phasefield-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3d5665da11800729394bad8a22d72d6f", "sha256": "150493abcfbc5cc80cc4d9989a9e2ca3146023882c326b53d394cc21e7deb786"}, "downloads": -1, "filename": "phasefield-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d5665da11800729394bad8a22d72d6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36157, "upload_time": "2019-12-09T16:06:57", "upload_time_iso_8601": "2019-12-09T16:06:57.706781Z", "url": "https://files.pythonhosted.org/packages/c9/f3/47d629a59b979945022998971b82febbe975bad9108d493e06132ebacba8/phasefield-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8913bcec851b86ab1088d3852cee6fd", "sha256": "fb354d669c1d6d49acc3fab2ff94427364a1422e8271bc29e68f3b1d0f0b7f82"}, "downloads": -1, "filename": "phasefield-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b8913bcec851b86ab1088d3852cee6fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20651, "upload_time": "2019-12-09T16:06:59", "upload_time_iso_8601": "2019-12-09T16:06:59.029034Z", "url": "https://files.pythonhosted.org/packages/51/8b/c9f3a306d5615d9403cd525c7f42a9c1e1999f42f59dae1b3bcb17be02b2/phasefield-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d5665da11800729394bad8a22d72d6f", "sha256": "150493abcfbc5cc80cc4d9989a9e2ca3146023882c326b53d394cc21e7deb786"}, "downloads": -1, "filename": "phasefield-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d5665da11800729394bad8a22d72d6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36157, "upload_time": "2019-12-09T16:06:57", "upload_time_iso_8601": "2019-12-09T16:06:57.706781Z", "url": "https://files.pythonhosted.org/packages/c9/f3/47d629a59b979945022998971b82febbe975bad9108d493e06132ebacba8/phasefield-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8913bcec851b86ab1088d3852cee6fd", "sha256": "fb354d669c1d6d49acc3fab2ff94427364a1422e8271bc29e68f3b1d0f0b7f82"}, "downloads": -1, "filename": "phasefield-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b8913bcec851b86ab1088d3852cee6fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20651, "upload_time": "2019-12-09T16:06:59", "upload_time_iso_8601": "2019-12-09T16:06:59.029034Z", "url": "https://files.pythonhosted.org/packages/51/8b/c9f3a306d5615d9403cd525c7f42a9c1e1999f42f59dae1b3bcb17be02b2/phasefield-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:37 2020"}