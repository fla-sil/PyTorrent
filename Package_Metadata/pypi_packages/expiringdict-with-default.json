{"info": {"author": "weaming", "author_email": "garden.yuen@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Expiring Dict\n-------------\n\n.. image:: https://travis-ci.org/weaming/expiringdict.svg?branch=master\n    :target: https://travis-ci.org/weaming/expiringdict\n\nexpiringdict is a Python caching library. The core of the library is ExpiringDict class which\nis an ordered dictionary with auto-expiring values for caching purposes. Expiration happens on\nany access, object is locked during cleanup from expired values. ExpiringDict can not store\nmore than `max_len` elements - the oldest will be deleted.\n\n**Note:** Iteration over dict and also keys() do not remove expired values!\n\nFeatures after fork\n-------------------\n\n* optioinal default value passed by dict after keys expired\n\nInstallation\n------------\n\nIf you wish to install from PyPi:\n\n.. code-block:: bash\n\n    pip install expiringdict-with-default\n\nIf you wish to download the source and install from GitHub:\n\n.. code-block:: bash\n\n    git clone git@github.com:weaming/expiringdict.git\n    python setup.py install\n\n\nTo run tests with coverage:\n\n.. code-block:: bash\n\n    nosetests --with-coverage --cover-package=expiringdict\n\nUsage\n-----\n\nCreate a dictionary with capacity for 100 elements and elements expiring in 10 seconds:\n\n.. code-block:: py\n\n    from expiringdict import ExpiringDict\n    cache = ExpiringDict(max_len=100, max_age_seconds=10, default={'name': 'Alice'})\n\nput and get a value there:\n\n.. code-block:: py\n\n     cache[\"key\"] = \"value\"\n     cache.get(\"key\")\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/weaming/expiringdict", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "expiringdict-with-default", "package_url": "https://pypi.org/project/expiringdict-with-default/", "platform": "", "project_url": "https://pypi.org/project/expiringdict-with-default/", "project_urls": {"Homepage": "https://github.com/weaming/expiringdict"}, "release_url": "https://pypi.org/project/expiringdict-with-default/1.1.7/", "requires_dist": ["nose; extra == 'test'", "mock; extra == 'test'", "coverage; extra == 'test'"], "requires_python": "", "summary": "Dictionary with auto-expiring values for caching purposes, support default value", "version": "1.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"expiring-dict\">\n<h2>Expiring Dict</h2>\n<a href=\"https://travis-ci.org/weaming/expiringdict\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/weaming/expiringdict.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1938730da45b985fd75e5ee2328ed5be163f00a/68747470733a2f2f7472617669732d63692e6f72672f7765616d696e672f6578706972696e67646963742e7376673f6272616e63683d6d6173746572\"></a>\n<p>expiringdict is a Python caching library. The core of the library is ExpiringDict class which\nis an ordered dictionary with auto-expiring values for caching purposes. Expiration happens on\nany access, object is locked during cleanup from expired values. ExpiringDict can not store\nmore than <cite>max_len</cite> elements - the oldest will be deleted.</p>\n<p><strong>Note:</strong> Iteration over dict and also keys() do not remove expired values!</p>\n</div>\n<div id=\"features-after-fork\">\n<h2>Features after fork</h2>\n<ul>\n<li>optioinal default value passed by dict after keys expired</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you wish to install from PyPi:</p>\n<pre>pip install expiringdict-with-default\n</pre>\n<p>If you wish to download the source and install from GitHub:</p>\n<pre>git clone git@github.com:weaming/expiringdict.git\npython setup.py install\n</pre>\n<p>To run tests with coverage:</p>\n<pre>nosetests --with-coverage --cover-package<span class=\"o\">=</span>expiringdict\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a dictionary with capacity for 100 elements and elements expiring in 10 seconds:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">expiringdict</span> <span class=\"kn\">import</span> <span class=\"n\">ExpiringDict</span>\n<span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"n\">ExpiringDict</span><span class=\"p\">(</span><span class=\"n\">max_len</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">max_age_seconds</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Alice'</span><span class=\"p\">})</span>\n</pre>\n<p>put and get a value there:</p>\n<pre><span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"s2\">\"key\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"value\"</span>\n<span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"key\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3953643, "releases": {"1.1.7": [{"comment_text": "", "digests": {"md5": "52b39e0e69721316d61de09f7111d348", "sha256": "6222e846a341e699f7561adfd460598a92c873692fe0f5003767d67551f4b7cd"}, "downloads": -1, "filename": "expiringdict_with_default-1.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52b39e0e69721316d61de09f7111d348", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3744, "upload_time": "2018-06-12T12:06:46", "upload_time_iso_8601": "2018-06-12T12:06:46.835102Z", "url": "https://files.pythonhosted.org/packages/b5/2f/92a26b95d84454e647c550f7dbd5e75b8e918ee0f3c35af28f95f3e518a1/expiringdict_with_default-1.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a6fe5823b6ddc80ccf79359d6e09524", "sha256": "0de8e3158292fbab584f758f1b94fea34a764497d1c8dd807f7ad83c4e0d13f1"}, "downloads": -1, "filename": "expiringdict_with_default-1.1.7.tar.gz", "has_sig": false, "md5_digest": "9a6fe5823b6ddc80ccf79359d6e09524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7005, "upload_time": "2018-06-12T12:06:48", "upload_time_iso_8601": "2018-06-12T12:06:48.344769Z", "url": "https://files.pythonhosted.org/packages/0a/87/8e844ea799327c47706c17763bed4df77b4741bdf21a3fc89756c1aa5ec1/expiringdict_with_default-1.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52b39e0e69721316d61de09f7111d348", "sha256": "6222e846a341e699f7561adfd460598a92c873692fe0f5003767d67551f4b7cd"}, "downloads": -1, "filename": "expiringdict_with_default-1.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52b39e0e69721316d61de09f7111d348", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3744, "upload_time": "2018-06-12T12:06:46", "upload_time_iso_8601": "2018-06-12T12:06:46.835102Z", "url": "https://files.pythonhosted.org/packages/b5/2f/92a26b95d84454e647c550f7dbd5e75b8e918ee0f3c35af28f95f3e518a1/expiringdict_with_default-1.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a6fe5823b6ddc80ccf79359d6e09524", "sha256": "0de8e3158292fbab584f758f1b94fea34a764497d1c8dd807f7ad83c4e0d13f1"}, "downloads": -1, "filename": "expiringdict_with_default-1.1.7.tar.gz", "has_sig": false, "md5_digest": "9a6fe5823b6ddc80ccf79359d6e09524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7005, "upload_time": "2018-06-12T12:06:48", "upload_time_iso_8601": "2018-06-12T12:06:48.344769Z", "url": "https://files.pythonhosted.org/packages/0a/87/8e844ea799327c47706c17763bed4df77b4741bdf21a3fc89756c1aa5ec1/expiringdict_with_default-1.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:38 2020"}