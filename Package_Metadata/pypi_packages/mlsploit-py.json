{"info": {"author": "Nilaksh Das", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "<img width=\"250\" src=\"https://mlsploit.github.io/static/img/mlsploit-logo.png\">\n\n[![Build Status](https://travis-ci.com/mlsploit/mlsploit-py.svg?token=6hiBszjT7tvPxkvQ4Bx4&branch=master)](https://travis-ci.com/mlsploit/mlsploit-py)\n[![Code Coverage](https://img.shields.io/codecov/c/gh/mlsploit/mlsploit-py)](https://codecov.io/gh/mlsploit/mlsploit-py)\n[![Updates](https://pyup.io/repos/github/mlsploit/mlsploit-py/shield.svg)](https://pyup.io/repos/github/mlsploit/mlsploit-py/)\n[![Python 3](https://pyup.io/repos/github/mlsploit/mlsploit-py/python-3-shield.svg)](https://pyup.io/repos/github/mlsploit/mlsploit-py/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n> This package contains utilities for developing an MLsploit python module.\n\n## Setup\nTo install this package on your system using [pip](https://pip.pypa.io/en/stable/), run the following command:\n```bash\n$ pip install mlsploit-py\n```\n\n## Usage\nThis package supports automatic loading of MLsploit jobs inside your module.\n\n```python\n# your_mlsploit_module.py\n\nfrom mlsploit import Job\n\n# load input files and user defined options\nJob.initialize()\n\nfunction_name = Job.function_name # the function name the user wants to run\ninput_file_items = Job.input_file_items # you can load input_file_items[i].path\noptions = Job.options # can access options.option1, option.option2 for function_name\n\n# ...\n# do stuff based on the information above ...\n# ...\n\n# when you're done, you can reserve output files\n# that will be uploaded to MLsploit\noutput_file_item = Job.reserve_output_file_item(\n    output_file_name='output_file.txt', is_new_file=True)\n\nwith open(output_file_item.path, 'w') as f:\n    pass # ... write data to your output file here\n\n# you can also add tags to your output file\n# as defined in your module schema\noutput_file_item.add_tag(name='tagname', value='tagvalue')\n\n# you can add several output files in the above manner\n\n# when you're done done, don't forget to commit the output!\nJob.commit_output() # mlsploit-py will take care of the rest\n```\n\n\nYou can also use this package to programmatically create your MLsploit module configuration file (`mlsploit_module.yaml`)\ninstead of editing it manually. This will also validate your MLsploit module for errors.\nFor more information on the configuration file schema,\n[see here](https://github.com/mlsploit/mlsploit-py/blob/master/mlsploit/_auxiliary/mlsploit_module.schema).\n\n```python\n# make_dummy_module.py\n\nfrom mlsploit import Module\n\nmodule = Module.build(\n    display_name='Dummy Module',\n    tagline='This is a dummy module!',\n    doctxt=\"\"\"Long documentation for this module will go here...\"\"\",\n    icon_url='https://somedomain.org/icon.jpg')\n\nfunction = module.build_function(\n    name='Test Function',\n    doctxt=\"\"\"Some long ducumentation of Test Function...\"\"\",\n    creates_new_files=True,\n    modifies_input_files=False,\n    expected_filetype='txt',\n    optional_filetypes=['rtf', 'ans'])\nfunction.add_option(\n    name='option1',\n    type='str',\n    doctxt=\"\"\"Some long ducumentation of option1...\"\"\",\n    required=True)\nfunction.add_output_tag(name='tag1', type='str')\nfunction.add_output_tag(name='tag2', type='int')\n\n# you can add several functions and function options in the above manner\n\n# once you're done, the following command will save the mlsploit_module.yaml\n# in the same directory as this file\nmodule.save()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mlsploit/mlsploit-py", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "mlsploit-py", "package_url": "https://pypi.org/project/mlsploit-py/", "platform": "", "project_url": "https://pypi.org/project/mlsploit-py/", "project_urls": {"Homepage": "https://github.com/mlsploit/mlsploit-py"}, "release_url": "https://pypi.org/project/mlsploit-py/0.1.3/", "requires_dist": null, "requires_python": ">=3.6, <4", "summary": "Utilities for developing an MLsploit python module.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b675e2277d10c5c948b2feb5a8e1a3c6fc25f969/68747470733a2f2f6d6c73706c6f69742e6769746875622e696f2f7374617469632f696d672f6d6c73706c6f69742d6c6f676f2e706e67\" width=\"250\">\n<p><a href=\"https://travis-ci.com/mlsploit/mlsploit-py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cf5511551375d50c6c0e84c930af0e3a74e054f/68747470733a2f2f7472617669732d63692e636f6d2f6d6c73706c6f69742f6d6c73706c6f69742d70792e7376673f746f6b656e3d36686942737a6a5437747650786b765134427834266272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/mlsploit/mlsploit-py\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0f44ea7302468d2caec6353a54637dc3a821175/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f6d6c73706c6f69742f6d6c73706c6f69742d7079\"></a>\n<a href=\"https://pyup.io/repos/github/mlsploit/mlsploit-py/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83512dcbf7d8b677cb6b7489583736b24db4f545/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6d6c73706c6f69742f6d6c73706c6f69742d70792f736869656c642e737667\"></a>\n<a href=\"https://pyup.io/repos/github/mlsploit/mlsploit-py/\" rel=\"nofollow\"><img alt=\"Python 3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94f260ab532fd470a95a4323f0212b9a951d7093/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6d6c73706c6f69742f6d6c73706c6f69742d70792f707974686f6e2d332d736869656c642e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<blockquote>\n<p>This package contains utilities for developing an MLsploit python module.</p>\n</blockquote>\n<h2>Setup</h2>\n<p>To install this package on your system using <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>, run the following command:</p>\n<pre>$ pip install mlsploit-py\n</pre>\n<h2>Usage</h2>\n<p>This package supports automatic loading of MLsploit jobs inside your module.</p>\n<pre><span class=\"c1\"># your_mlsploit_module.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">mlsploit</span> <span class=\"kn\">import</span> <span class=\"n\">Job</span>\n\n<span class=\"c1\"># load input files and user defined options</span>\n<span class=\"n\">Job</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n\n<span class=\"n\">function_name</span> <span class=\"o\">=</span> <span class=\"n\">Job</span><span class=\"o\">.</span><span class=\"n\">function_name</span> <span class=\"c1\"># the function name the user wants to run</span>\n<span class=\"n\">input_file_items</span> <span class=\"o\">=</span> <span class=\"n\">Job</span><span class=\"o\">.</span><span class=\"n\">input_file_items</span> <span class=\"c1\"># you can load input_file_items[i].path</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">Job</span><span class=\"o\">.</span><span class=\"n\">options</span> <span class=\"c1\"># can access options.option1, option.option2 for function_name</span>\n\n<span class=\"c1\"># ...</span>\n<span class=\"c1\"># do stuff based on the information above ...</span>\n<span class=\"c1\"># ...</span>\n\n<span class=\"c1\"># when you're done, you can reserve output files</span>\n<span class=\"c1\"># that will be uploaded to MLsploit</span>\n<span class=\"n\">output_file_item</span> <span class=\"o\">=</span> <span class=\"n\">Job</span><span class=\"o\">.</span><span class=\"n\">reserve_output_file_item</span><span class=\"p\">(</span>\n    <span class=\"n\">output_file_name</span><span class=\"o\">=</span><span class=\"s1\">'output_file.txt'</span><span class=\"p\">,</span> <span class=\"n\">is_new_file</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">output_file_item</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span> <span class=\"c1\"># ... write data to your output file here</span>\n\n<span class=\"c1\"># you can also add tags to your output file</span>\n<span class=\"c1\"># as defined in your module schema</span>\n<span class=\"n\">output_file_item</span><span class=\"o\">.</span><span class=\"n\">add_tag</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'tagname'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'tagvalue'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can add several output files in the above manner</span>\n\n<span class=\"c1\"># when you're done done, don't forget to commit the output!</span>\n<span class=\"n\">Job</span><span class=\"o\">.</span><span class=\"n\">commit_output</span><span class=\"p\">()</span> <span class=\"c1\"># mlsploit-py will take care of the rest</span>\n</pre>\n<p>You can also use this package to programmatically create your MLsploit module configuration file (<code>mlsploit_module.yaml</code>)\ninstead of editing it manually. This will also validate your MLsploit module for errors.\nFor more information on the configuration file schema,\n<a href=\"https://github.com/mlsploit/mlsploit-py/blob/master/mlsploit/_auxiliary/mlsploit_module.schema\" rel=\"nofollow\">see here</a>.</p>\n<pre><span class=\"c1\"># make_dummy_module.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">mlsploit</span> <span class=\"kn\">import</span> <span class=\"n\">Module</span>\n\n<span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span>\n    <span class=\"n\">display_name</span><span class=\"o\">=</span><span class=\"s1\">'Dummy Module'</span><span class=\"p\">,</span>\n    <span class=\"n\">tagline</span><span class=\"o\">=</span><span class=\"s1\">'This is a dummy module!'</span><span class=\"p\">,</span>\n    <span class=\"n\">doctxt</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"Long documentation for this module will go here...\"\"\"</span><span class=\"p\">,</span>\n    <span class=\"n\">icon_url</span><span class=\"o\">=</span><span class=\"s1\">'https://somedomain.org/icon.jpg'</span><span class=\"p\">)</span>\n\n<span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">build_function</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Test Function'</span><span class=\"p\">,</span>\n    <span class=\"n\">doctxt</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"Some long ducumentation of Test Function...\"\"\"</span><span class=\"p\">,</span>\n    <span class=\"n\">creates_new_files</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">modifies_input_files</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">expected_filetype</span><span class=\"o\">=</span><span class=\"s1\">'txt'</span><span class=\"p\">,</span>\n    <span class=\"n\">optional_filetypes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'rtf'</span><span class=\"p\">,</span> <span class=\"s1\">'ans'</span><span class=\"p\">])</span>\n<span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'option1'</span><span class=\"p\">,</span>\n    <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'str'</span><span class=\"p\">,</span>\n    <span class=\"n\">doctxt</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"Some long ducumentation of option1...\"\"\"</span><span class=\"p\">,</span>\n    <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">add_output_tag</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'tag1'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'str'</span><span class=\"p\">)</span>\n<span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">add_output_tag</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'tag2'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'int'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can add several functions and function options in the above manner</span>\n\n<span class=\"c1\"># once you're done, the following command will save the mlsploit_module.yaml</span>\n<span class=\"c1\"># in the same directory as this file</span>\n<span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6970687, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "da5932d09c42a8d95f23259ad909f9b1", "sha256": "86b0c0f53bb418685eb41a69fd9b71037d781b85b5d41e579d6026de5dd2fe9f"}, "downloads": -1, "filename": "mlsploit-py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "da5932d09c42a8d95f23259ad909f9b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 13827, "upload_time": "2020-04-04T21:35:40", "upload_time_iso_8601": "2020-04-04T21:35:40.475021Z", "url": "https://files.pythonhosted.org/packages/4e/b6/aa55d939a2b0c765dbc8c32d88778521a6ce1816118b38b7177eb5761f09/mlsploit-py-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "0e62fa13d25b155d9e553ff7dd870bb1", "sha256": "254fe0b5a3cf99b8d7cc7b0ae9ed553d7431fa938a2d08981f84d5e5a9019961"}, "downloads": -1, "filename": "mlsploit-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0e62fa13d25b155d9e553ff7dd870bb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 15007, "upload_time": "2020-04-05T19:41:16", "upload_time_iso_8601": "2020-04-05T19:41:16.032342Z", "url": "https://files.pythonhosted.org/packages/84/05/5e6d1b4a943b2ae043039b545d8a01c71a7164885e71697f2173651b94e0/mlsploit-py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ae75c2c931e27bc6e7fa0a2c1a224a91", "sha256": "8ca384b917ad954334c21401e38d678291c41c2361c429d7fac266a81c14234c"}, "downloads": -1, "filename": "mlsploit-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ae75c2c931e27bc6e7fa0a2c1a224a91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 13549, "upload_time": "2020-04-07T06:59:53", "upload_time_iso_8601": "2020-04-07T06:59:53.486680Z", "url": "https://files.pythonhosted.org/packages/24/6a/e4748901e0e76ef13e55d031e9412a2182c834a7969e5b2b67d3c0232df5/mlsploit-py-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e93c3e748356530f30a68307186be661", "sha256": "5a386f7f4983d7a19bf4f62751bfa381f99949685108ede47bc00b738679b3e5"}, "downloads": -1, "filename": "mlsploit-py-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e93c3e748356530f30a68307186be661", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 13554, "upload_time": "2020-04-07T15:12:49", "upload_time_iso_8601": "2020-04-07T15:12:49.308361Z", "url": "https://files.pythonhosted.org/packages/f0/52/c0ffe0a470fa4be377ad52ddd7d41e057a108053e563f9ab116acacc2c09/mlsploit-py-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e93c3e748356530f30a68307186be661", "sha256": "5a386f7f4983d7a19bf4f62751bfa381f99949685108ede47bc00b738679b3e5"}, "downloads": -1, "filename": "mlsploit-py-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e93c3e748356530f30a68307186be661", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 13554, "upload_time": "2020-04-07T15:12:49", "upload_time_iso_8601": "2020-04-07T15:12:49.308361Z", "url": "https://files.pythonhosted.org/packages/f0/52/c0ffe0a470fa4be377ad52ddd7d41e057a108053e563f9ab116acacc2c09/mlsploit-py-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:22 2020"}